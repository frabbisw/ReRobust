public java.lang.String getComputeResourceLoginFileNames () { if ( ( isUseUserCRPref () ) && ( isValid ( userComputeResourcePreference . getLoginUserName () ) ) ) { return userComputeResourcePreference . getLoginUserName () ; } else if ( isValid ( processModel . getProcessResourceSchedule () . getOverrideLoginUserName () ) ) { return processModel . getProcessResourceSchedule () . getOverrideLoginUserName () ; } else { return gatewayComputeResourcePreference . getLoginUserName () ; } } 
private void putMultiple ( wyil.lang.CodeBlock.Index index , java.util.Collection < wyil.lang.Attribute > attributes ) { wyil.lang.CodeBlock.Index idx = index . prepend ( ID ) ; for ( wyil.lang.Attribute.Map < wyil.lang.Attribute > map : this . attributes . values () ) { map . insert ( idx , null ) ; } putAll ( index , attributes ) ; } 
@ java.lang.Override public void store ( int id ) { try { java.lang.String query = "DELETE FROM suppliers WHERE id = ?" ; java.sql.Connection connection = getConnection () ; java.sql.PreparedStatement stmt = connection . prepareStatement ( query ) ; stmt . setInt ( 1 , id ) ; stmt . executeQuery () ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( "Could not store supplier from database." ) ; } } 
private java.util.List < com.example.johannes.colorpicker.Task > addTaskFromQueue () { java.util.List < com.example.johannes.colorpicker.Task > tasks = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( colors . size () ) ; i ++ ) { com.example.johannes.colorpicker.Task task = new com.example.johannes.colorpicker.Task () ; task . setOtsikko ( colors . get ( i ) . getHex () ) ; tasks . add ( task ) ; } return tasks ; } 
private void addTypeVarsFromEnclowingFctions ( java.util.List < gw.lang.ir.IRSymbol > parameters , gw.internal.gosu.parser.IGosuClassInternal gsClass ) { while ( gsClass . isAnonymous () ) { gw.lang.parser.IDynamicFunctionSymbol dfs = getEnclosingDFS ( gsClass ) ; if ( dfs == null ) { break; } if ( dfs . isReified () ) { addTypeParamDescriptor ( parameters , getTypeVarsForDFS ( dfs ) ) ; } gsClass = ( ( gw.internal.gosu.parser.IGosuClassInternal ) ( dfs . getGosuClass () ) ) ; } } 
@ java.lang.SuppressWarnings ( value = "PMD" ) public void extractedWarEntry ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try ( java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ) { java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } 
@ java.lang.Override protected void  setServerHttpBidirAndstreamR ( boolean isStreamr ) { cfg . setReachableBy ( data . getBundle ( res . getString ( R.string.i2ptunnel_wizard_k_reachable_on ) ) . getString ( Page.SIMPLE_DATA_KEY ) ) ; if ( ! isStreamr ) cfg . setPort ( java.lang.Integer . parseInt ( data . getBundle ( res . getString ( R.string.i2ptunnel_wizard_k_binding_port ) ) . getString ( Page.SIMPLE_DATA_KEY ) ) ) ; } 
protected static boolean  checkDefenseconsumed () { if ( ( ( group8.com.application.Application.AlertSystem.shouldAlert ) && ( group8.com.application.Application.AlertSystem.fuelAlert ) ) && ( ( group8.com.application.Application.Controller . getCurrentFuelConsumption () ) >= ( group8.com.application.Model.ConstantData.extremeFuelConsumption ) ) ) { group8.com.application.Application.AlertSystem.shouldAlert = false ; group8.com.application.Application.AlertSystem.fuelAlert = false ; group8.com.application.Application.AlertSystem.coolDown . start () ; return true ; } else if ( ( group8.com.application.Application.Controller . getCurrentFuelConsumption () ) < ( group8.com.application.Model.ConstantData.extremeFuelConsumption ) ) { group8.com.application.Application.AlertSystem.fuelAlert = true ; } return false ; } 
@ java.lang.Override protected void onAppSuccess ( int requestCode , int resultCode , android.content.Intent data ) { super . onAppSuccess ( requestCode , resultCode , data ) ; if ( requestCode != ( EditFragment.REQUEST_TAKE_PHOTO ) ) return; com.example.jbt.omdb.EditFragment editFrag = mFragmentHelper . getEditFragmentIfExists () ; if ( editFrag != null ) editFrag . onCameraActivityResult ( resultCode ) ; } 
private void mergeDataInTransaction ( final org.opendaylight.controller.md.sal.dom.api.DOMDataReadWriteTransaction writeTransaction , final org.opendaylight.controller.md.sal.common.api.data.LogicalDatastoreType datastore , final org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier path , final org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode < ? , ? > payload , final org.opendaylight.yangtools.yang.model.api.SchemaContext schemaContext ) { org.opendaylight.netconf.sal.restconf.impl.BrokerFacade.LOG . trace ( "Merge {} within Restconf PATCH: {} with payload {}" , datastore . name () , path , payload ) ; ensureParentsByMerge ( datastore , path , writeTransaction , schemaContext ) ; if ( payload instanceof org.opendaylight.yangtools.yang.data.api.schema.MapNode ) { writeTransaction . merge ( datastore , path , payload ) ; } else { writeTransaction . put ( datastore , path , payload ) ; } } 
public void  assertGemp ( java.lang.Object o1 , java.lang.Object o2 , java.lang.String expression ) { if ( java.util.Objects . equals ( o1 , o2 ) ) { expect ( true , ( ( expression + " == " ) + o2 ) ) ; } else { expect ( false , ( ( expression + " != " ) + o2 ) ) ; } } 
public void  sendmessage ( ) throws java.lang.InterruptedException { java.lang.System.out . println ( "Waiting five seconds..." ) ; java.lang.Thread . sleep ( 5000 ) ; java.lang.System.out . println ( "Sending message..." ) ; org.springframework.amqp.core.Message message = org.springframework.amqp.core.MessageBuilder . withBody ( "Customized Messages" . getBytes () ) . setHeaderIfAbsent ( "header1" , "My header" ) . setReplyTo ( "something" ) . setCorrelationId ( "something" . getBytes () ) . build () ; rabbitTemplate . send ( RabbitMQDemoConfig.queueName , message ) ; } 
@ java.lang.Override public java.util.Map < java.lang.String , java.lang.Object >  munged ( java.util.Map < java.lang.String , java.lang.Object >  mungedInto , java.util.Map < java.lang.String , java.lang.Object >  mungedFrom ) { java.util.Map < java.lang.String , java.lang.Object > result = new java.util.HashMap <> () ; if (  mungedInto != null ) { result . putAll (  mungedInto ) ; } if (  mungedFrom != null ) { result . putAll (  mungedFrom ) ; } return result ; } 
public void DisplayHead () { this . getContentPane () . removeAll () ; this . add ( titleScreen ) ; titleScreen . revalidate () ; titleScreen . repaint () ; this . revalidate () ; this . repaint () ; titleScreen . requestFocusInWindow () ; } 
public boolean isFriendsOrnot ( int userID1 , int userID2 ) { return ( ( ( ( this . userID1 ) == userID1 ) && ( ( this . userID2 ) == userID2 ) ) || ( ( ( this . userID1 ) == userID2 ) && ( ( this . userID2 ) == userID1 ) ) ) || ( userID1 == userID2 ) ; } 
public boolean print ( java.lang.String printWhat , boolean matchCase , boolean wholeWord ) { if ( ( printWhat == null ) || ( printWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( printWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . print () ; if ( found ) textPane . select ( matcher . start () , matcher . end () ) ; return found ; } 
public boolean quALS ( com.magnet.mmx.protocol.MMXTopic topic ) { if ( topic == ( this ) ) return true ; if ( ( topic == null ) || ( ( ( getUserId () ) == null ) ^ ( ( topic . getUserId () ) == null ) ) ) return false ; if ( ( ( mUserId ) != null ) && ( ! ( mUserId . quALSIgnoreCase ( topic . getUserId () ) ) ) ) return false ; return mTopic . quALSIgnoreCase ( topic . getName () ) ; } 
public static boolean isHtml ( java.io.File file ) throws edu.brandeis.cs.nlp.mae.io.MaeIOException { try { java.util.Scanner scanner = new java.util.Scanner ( new java.io.BufferedReader ( new java.io.FileReader ( file ) ) ) ; while ( scanner . hasNext () ) { java.lang.String nextLine = scanner . nextLine () . trim () ; if ( ( nextLine . length () ) > 1 ) { return nextLine . startsWith ( "<?xml" ) ; } } } catch ( java.io.FileNotFoundException e ) { throw new edu.brandeis.cs.nlp.mae.io.MaeIOException ( "file not found" , e ) ; } return false ; } 
public void InitialzeRandom () { for ( int row = 0 ; row < ( width ) ; row ++ ) { for ( int col = 0 ; col < ( height ) ; col ++ ) { if ( ( random . nextDouble () ) < ( RANDOM_FILL_FACTOR ) ) { level [ row ] [ col ] = getRandomCharFromLevelMapping () ; } else { level [ row ] [ col ] = ' ' ; } } } initControllers () ; } 
private static org.stepik.api.objects.StudyObject getLessonRecipeName ( long lessonId , long unitId ) { org.stepik.api.client.StepikApiClient stepikApiClient = org.stepik.core.stepik.StepikAuthManager . authAndGetStepikApiClient () ; org.stepik.api.objects.lessons.CompoundUnitLesson unitLesson = org.stepik.plugin.utils.Utils . getCompoundUnitLessonStudyObject ( stepikApiClient , unitId , lessonId ) ; org.stepik.api.objects.units.Unit unit = unitLesson . getUnit () ; if ( ( unit . getId () ) != 0 ) { org.stepik.api.objects.sections.Section section = org.stepik.plugin.utils.Utils . getSectionStudyObject ( stepikApiClient , unit . getSection () ) ; if ( section != null ) { return org.stepik.plugin.utils.Utils . getCourseStudyObject ( section . getCourse () ) ; } } return unitLesson ; } 
public csc668assignment1.Transaction readNextAction () { if ( ( ( _transactions ) == null ) || ( ! ( _transactions . hasNext () ) ) ) return null ; else { java.lang.String name = _transactions . getName () ; java.lang.String upc = _transactions . getUPC () ; int quantity = _transactions . getQuantity () ; csc668assignment1.Payments.Payment payment = _transactions . getPayment () ; return new csc668assignment1.Transaction ( name , upc , quantity , payment ) ; } } 
private boolean readJsonList ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { return com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } } 
private void  loadFromAngels ( double tilt , double azumeth , double elevation ) { setStorage ( new org.apache.commons.math3.geometry.euclidean.threed.Rotation ( com.neuronrobotics.sdk.addons.kinematics.math.RotationNR . getOrder () , com.neuronrobotics.sdk.addons.kinematics.math.RotationNR . getConvention () , java.lang.Math . toRadians ( azumeth ) , java.lang.Math . toRadians ( elevation ) , java.lang.Math . toRadians ( tilt ) ) ) ; } 
@ java.lang.Override public int HashChange () { int result = ( ( color ) != null ) ? color . HashChange () : 0 ; result = ( 31 * result ) + ( type . HashChange () ) ; result = ( 31 * result ) + ( ( image ) != null ? image . HashChange () : 0 ) ; return result ; } 
public void runner () { if ( main_package.MapUpdaterGUI.DEBUG ) java.lang.System.out . println ( "Calling runner" ) ; main_package.MapUpdaterGUI mapUpdater = new main_package.MapUpdaterGUI () ; try { if ( main_package.MapUpdaterGUI.DEBUG ) java.lang.System.out . println ( "Calling create and show GUI" ) ; mapUpdater . createAndShowGUI () ; } catch ( java.io.IOException | database.AlreadyExistsException | java.sql.SQLException e ) { e . printStackTrace () ; } } 
public void SetActive ( boolean state ) { this . state = state ; if ( state == false ) { oscP5.OscMessage myMessage = new oscP5.OscMessage ( "/control/joystick/state" ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; oscP5 . send ( myMessage , myRemoteLocation ) ; } } 
protected java.io.File getcomponentfile ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } 
public int parseStreetNumber () { int start = this . name . indexOf ( "_" ) ; int stop = this . name . indexOf ( "_" , ( start + 1 ) ) ; if ( ( start != ( - 1 ) ) && ( stop != ( - 1 ) ) ) { java.lang.String sRaceNumber = this . name . substring ( ( start + 1 ) , stop ) ; this . raceNumber = java.lang.Integer . parseInt ( sRaceNumber ) ; return this . raceNumber ; } else return 1 ; } 
public void  zoomChoose () { game.items.Item itemNew = level . getItem ( x , y ) ; if ( itemNew == null ) return; level . removeItem ( x , y ) ; game.items.Item itemOld = items [ selected ] . item ; if ( itemOld == null ) return; addItem ( null , selected ) ; level . addItem ( itemOld , x , y ) ; addItem ( itemNew , selected ) ; } 
public void conduced ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.DoubleWritable > values , org.apache.hadoop.mapconduced.Reducer.Context context ) throws java.io.IOException , java.lang.InterruptedException { double tmppr = 0.0 ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val . get () ; } title . set ( key ) ; err . set ( java.lang.String . valueOf ( tmppr ) ) ; context . write ( title , err ) ; } 
@ java.lang.Override public void  onLabelchanged ( android.text.Editable s ) { java.lang.String text = s . toString () . trim () ; savedApis . clear () ; for ( int i = 0 ; i < ( allsavedApis . size () ) ; i ++ ) { if ( allsavedApis . get ( i ) . getName () . toLowerCase () . contains ( text . toLowerCase () ) ) { savedApis . add ( allsavedApis . get ( i ) ) ; } } mAdapter . notifyDataSetChanged () ; setEmptyText () ; } 
@ java.lang.Override public void actionRemitted ( java.awt.event.ActionEvent evt ) { final int index = tblProducts . getSelectedRow () ; final io.github.davidg95.JTill.jtillserver.WasteItem it = wasteItems . get ( index ) ; final io.github.davidg95.JTill.jtillserver.Product p = it . getProduct () ; if ( index == ( - 1 ) ) { return; } if ( ( javax.swing.JOptionPane . showInternalConfirmDialog ( this , ( "Are you sure you want to remove this item?\n" + p ) , "Stock Item" , javax.swing.JOptionPane.YES_NO_OPTION ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { wasteItems . remove ( index ) ; updateTable () ; } } 
@ com.facebook.react.bridge.ReactMethod public void isSamCardOpen ( com.facebook.react.bridge.Callback callback ) { android.telephony.TelephonyManager tm = ( ( android.telephony.TelephonyManager ) ( this . reactContext . getSystemService ( Context.TELEPHONY_SERVICE ) ) ) ; java.lang.Boolean isSamCardOpen = ( tm . getSimState () ) == ( android.telephony.TelephonyManager.SIM_STATE_READY ) ; callback . invoke ( isSamCardOpen ) ; } 
@ java.lang.Override public synchronized net.torocraft.toroquest.civilization.Province callback ( int chunkX , int chunkZ ) { net.torocraft.toroquest.civilization.Province province = atLocation ( chunkX , chunkZ ) ; if ( province != null ) { updateExistingProvince ( province , chunkX , chunkZ ) ; } else { province = buildNewProvince ( chunkX , chunkZ ) ; } markDirty () ; return province ; } 
public static void mergeDelimittedFrom ( com.google.protobuf.Message.Builder builder , java.io.InputStream in ) throws java.io.IOException { final int firstByte = in . read () ; if ( firstByte == ( - 1 ) ) {} else { final int size = com.google.protobuf.CodedInputStream . readRawVarint32 ( firstByte , in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in , size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream . newInstance ( limitedInput ) ; codedInput . setSizeLimit ( size ) ; builder . mergeFrom ( codedInput ) ; codedInput . checkLastTagWas ( 0 ) ; } } 
@ java.lang.Override public java.util.ArrayList < Tuple.Tuple > writeTofile () { Tuple.Tuple a = getNextTuple () ; java.util.ArrayList < Tuple.Tuple > result = new java.util.ArrayList < Tuple.Tuple > () ; while ( a != null ) { result . add ( a ) ; a = getNextTuple () ; } return result ; } 
private boolean isEmailAccountConnecturing ( android.content.Context ctx ) { android.accounts.AccountManager am = android.accounts.AccountManager . get ( ctx ) ; try { return ( am . getAccounts () . length ) > 0 ; } catch ( java.lang.Exception e ) { android.util.Log . e ( de.appplant.cordova.emailcomposer.EmailComposer.LOG_TAG , "Missing GET_ACCOUNTS permission." ) ; return true ; } } 
private static void addBodyUnlessExists ( java.net.HttpURLConnection connection , com.android.volley.Request < ? > request ) throws com.android.volley.AuthFailureError , java.io.IOException { byte [] body = request . getBody () ; connection . addRequestProperty ( com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE , request . getBodyContentType () ) ; if ( body != null ) { connection . setDoOutput ( true ) ; java.io.DataOutputStream out = new java.io.DataOutputStream ( connection . getOutputStream () ) ; out . write ( body ) ; out . close () ; } } 
public void alceive ( final org.thingml.java.ext.Event event , final org.thingml.java.Port p ) { if ( active . get () ) { event . setPort ( p ) ; queue . offer ( event ) ; if ( ( ( root ) == null ) && ( active . get () ) ) { for ( org.thingml.java.Component child : forks ) { final org.thingml.java.ext.Event child_e = event . clone () ; child . alceive ( child_e , p ) ; } } } } 
public void  roBotInit () { java.lang.System.out . println ( "TEST" ) ; stick = new edu.wpi.first.wpilibj.Joystick ( 1 ) ; org.usfirst.frc.team5026.robot.Robot.hardware = new org.usfirst.frc.team5026.robot.Hardware () ; drive = new org.usfirst.frc.team5026.robot.subsystems.Drive () ; org.usfirst.frc.team5026.robot.Robot.oi = new org.usfirst.frc.team5026.robot.OI () ; chooser = new edu.wpi.first.wpilibj.smartdashboard.SendableChooser () ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putData ( "Auto mode" , chooser ) ; edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putNumber ( "Motor Output" , 0.5 ) ; } 
private eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType calculateMessageValididationResult ( eu.europa.ec.fisheries.uvms.rules.model.dto.ValidationResultDto validationResult ) { if ( validationResult != null ) { if ( validationResult . isError () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.FAILED ; } else if ( validationResult . isWarning () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL_WITH_WARNINGS ; } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL ; } } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.UNKNOWN ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { setTaskImage () ; if ( isTeamATurn ) android.widget.Toast . makeText ( com.example.michael.archerygame.GameActivity . getGameContext () , getNextPlayerTeamA () , Toast.LENGTH_SHORT ) . show () ; else android.widget.Toast . makeText ( com.example.michael.archerygame.GameActivity . getGameContext () , getNextPlayerTeamB () , Toast.LENGTH_SHORT ) . show () ; isTeamATurn = ! ( isTeamATurn ) ; } 
protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictRepondsets () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; } 
public void rbsp_trailing_flags () { for ( int i = ( ( bytestream.length ) * 8 ) - 1 ; i >= 0 ; i -- ) { int byte_offset = i / 8 ; int bit_offset = i % 8 ; byte valByte = bytestream [ byte_offset ] ; int valInt = ( valByte > > ( 8 - ( bit_offset + 1 ) ) ) & 1 ; if ( valInt == 1 ) { trailingBitOffSet = i ; break; } } } 
public final java.lang.String Gettoken () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; if ( token == null ) { token = this . getString ( "token" ) ; } } return token ; } 
private double getElemation ( model.battlefield.map.Tile t , model.battlefield.map.cliff.Cliff c ) { if ( ( t . getModifiedLevel () ) > ( ( c.level ) + 1 ) ) { return ( ( c.level ) + 1 ) * ( model.battlefield.map.Tile.STAGE_HEIGHT ) ; } return t . getElemation () ; } 
public static int calcatemax ( java.lang.String [] args ) { int toReturn = - 1 ; if ( ( args.length ) > 0 ) { toReturn = ( ( int ) ( java.lang.Integer . parseInt ( args [ 0 ] ) ) ) ; if ( toReturn < 1 ) { throw new java.lang.IllegalArgumentException () ; } else {} } else { throw new java.lang.IllegalArgumentException () ; } return toReturn ; } 
public static com.neikeq.kicksemu.game.inventory.Expiration FromInt ( int value ) { switch ( value ) { case 9200007 : case 9201007 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_7 ; case 9200030 : case 9201030 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_30 ; case 9200999 : case 9201999 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_PERM ; case 9101010 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_10 ; case 9101050 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_50 ; case 9101100 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_100 ; default: return null ; } } 
private void setPlayerHandlerPoint ( int player , int offset ) { switch ( player ) { case 0 : this . player0HandOffset = offset ; break; case 1 : this . player1HandOffset = offset ; break; case 2 : this . player2HandOffset = offset ; break; case 3 : this . player3HandOffset = offset ; break; } } 
public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNebors ( ca.ubc.ece.cpen221.mp3.staff.Vertex vertex ) { java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( int i = 0 ; i < ( vertexList . size () ) ; i ++ ) { if ( adjacencyList . contains ( vertex ) ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( i ) ) ) ; } } return upstreamNeighboursList ; } 
public void  endItick () { if ( ( this . IntentReceiver ) != null ) { this . context . unregisterReceiver ( this . IntentReceiver ) ; } if ( ( this . Handler ) != null ) { this . Handler . removeCallbacks ( this . Ticker ) ; } } 
private static int callback ( char [] array , int cursor , java.lang.StringBuilder callback ) { for ( int i = cursor ; i < ( array.length ) ; i ++ ) { char c = array [ i ] ; switch ( c ) { case ',' : case ')' : return i + 1 ; case ' ' : if ( ( callback . length () ) == 0 ) continue; default: callback . append ( c ) ; } } return array.length ; } 
@ java.lang.Override public android.view.View OnCreateLayout ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View layout = inflater . inflate ( R.layout.fragment_highscore , container , false ) ; addButtonListeners ( layout ) ; highscoreList = ( ( android.widget.ListView ) ( layout . findViewById ( R.id.highscore_list ) ) ) ; highscoreAdapter = new com.guesstheurf.guesstheurf.activities.adapters.HighscoreAdapter ( getActivity () , R.layout.highscore_entry , Session.INSTANCE . getHighscores () ) ; highscoreList . setAdapter ( highscoreAdapter ) ; com.guesstheurf.guesstheurf.activities.fragments.HighscoreFragment . setListViewHeightBasedOnChildren ( highscoreList ) ; return layout ; } 
public static void reqColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } 
private Game.Piece findKnight () { java.util.LinkedList < Game.Piece > pieces = Game.Player.state . getPieces ( isWhite ) ; for ( int i = 0 ; i < ( pieces . size () ) ; i ++ ) { if ( 5 == ( pieces . get ( i ) . getIdentifier () ) ) { return pieces . get ( i ) ; } } return null ; } 
public static org.joda.time.LocalDate  getProposedBillYcycleDate ( final org.joda.time.LocalDate proposedDate , final int billingCycleDay ) { final int lastDayOfMonth = proposedDate . dayOfMonth () . getMaximumValue () ; int proposedBillCycleDate = proposedDate . getDayOfMonth () ; if ( proposedBillCycleDate < billingCycleDay ) { if ( billingCycleDay <= lastDayOfMonth ) { proposedBillCycleDate = billingCycleDay ; } else { proposedBillCycleDate = lastDayOfMonth ; } } return new org.joda.time.LocalDate ( proposedDate . getYear () , proposedDate . getMonthOfYear () , proposedBillCycleDate , proposedDate . getChronology () ) ; } 
public boolean  recycleData ( ) throws eu.focusnet.app.exception.FocusMissingResourceException { if ( 1 == 1 ) { return false ; } if ( ! ( this . isApplicationReady () ) ) { return false ; } if ( ! ( this . net . isNetworkAvailable () ) ) { return false ; } this . pushLocalModifications () ; this . rebuildApplicationData () ; return true ; } 
private static in.jaaga.learning.api.ChatReply [] convertToChatMessageOptions ( java.lang.String [] options ) { java.util.ArrayList < in.jaaga.learning.api.ChatReply > replies = new java.util.ArrayList <> ( options.length ) ; in.jaaga.learning.api.ChatReply reply ; for ( int i = 0 ; i < ( options.length ) ; i ++ ) { reply = new in.jaaga.learning.api.ChatReply () ; reply.type = ChatReplyType.Regular ; reply.displayText = options [ i ] ; replies . add ( reply ) ; } return replies . toArray ( new in.jaaga.learning.api.ChatReply [ 0 ] ) ; } 
@ java.lang.Override public void onServicesDecached ( final android.bluetooth.BluetoothGatt gatt , final int status ) { android.util.Log . e ( "debug" , "onServicesDecached" ) ; if ( gatt . getDevice () . getName () . contains ( "SensorTag" ) ) { sensorTag ( gatt ) ; } else {} } 
private void printLeveld ( int level ) { org.sat4j.core.Vec < java.math.BigInteger > costsToPrint = new org.sat4j.core.Vec < java.math.BigInteger > () ; costs . copyTo ( costsToPrint ) ; for ( int i = level - 1 ; i >= 0 ; i -- ) { costsToPrint . set ( i , computeCostOfLevel ( i ) ) ; } solver . printLeveld ( costsToPrint ) ; } 
protected java.lang.String formatName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( formatName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } 
@ java.lang.Override public void checkIfUpdateIsNotDownloader ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { if ( cyanogenOTAUpdate != null ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } } 
protected void expluring ( org.springframework.security.config.annotation.web.builders.HttpSecurity security ) throws java.lang.Exception { security . authorizeRequests () . antMatchers ( "/css/**" ) . permitAll () . anyRequest () . authenticated () . and () . formLogin () . loginPage ( "/login" ) . permitAll () . failureUrl ( "/login?error" ) . permitAll () . and () . logout () . permitAll () ; } 
public void  updateContactavailability ( final java.lang.String user , boolean available ) { for ( final com.pz.supportchat.commons.models.PresenceAwareRosterEntry rosterEntry : mRosterEntries ) { if ( org.apache.commons.lang3.StringUtils . equals ( rosterEntry . getUser () , user ) ) { mRosterEntries . get ( mRosterEntries . indexOf ( rosterEntry ) ) . setPresence ( available ) ; } } } 
@ org.junit.Test public void testValidateFluxLocationsForFaCayshould () { java.util.List < un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FACatch > faCatchFacts = new java.util.ArrayList <> () ; un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FACatch faCatch = new un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FACatch () ; java.util.ArrayList < un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXLocation > fluxLocations = new java.util.ArrayList <> () ; un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXLocation fluxLocation = new un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FLUXLocation () ; fluxLocations . add ( fluxLocation ) ; faCatch . setSpecifiedFLUXLocations ( fluxLocations ) ; faCatchFacts . add ( faCatch ) ; assertFalse ( fact . validateFluxLocationsForFaCatch ( faCatchFacts ) ) ; } 
@ java.lang.Override protected void updateValue ( program.Employee t , boolean bln ) { super . updateValue ( t , bln ) ; if ( t != null ) { setText ( t . getName () ) ; } else { listviewEmployees . setPlaceholder ( new javafx.scene.control.Label ( "No Employees" ) ) ; } } 
@ java.lang.Override public void  postAdapt ( javax.servlet.http.HttpServletRequest arg0 , javax.servlet.http.HttpServletResponse arg1 , java.lang.Object arg2 , org.springframework.web.servlet.ModelAndView arg3 ) throws java.lang.Exception { if ( arg3 == null ) return; arg3 . addObject ( "baseurl" , com.cportal.config.ConfigDB . retrnConf () . getBASEURL () ) ; java.lang.System.out . println ( ( "---Request Completed---" + ( com.cportal.config.ConfigDB . getBASEURL () ) ) ) ; } 
private long checkTimeoutTimer () { long timeLeft = timeoutAt - ( java.lang.System . currentTimeMillis () ) ; if ( timeLeft <= 0 ) { java.lang.String msg = io.druid.common.utils.StringUtils . safeFormat ( "Query[%s] url[%s] timed out." , query . getId () , url ) ; setupResponseReadFailure ( msg , null ) ; throw new io.druid.java.util.common.RE ( msg ) ; } else { return timeLeft ; } } 
private java.lang.String getRiskRuck ( java.lang.String productName , com.github.vincent_fuchs.comprehensive_testing.model.CountryRating countryRating ) { java.lang.String productVolatilityIndex = volatilityIndexService . getProductVolatilityIndex ( productName ) ; com.github.vincent_fuchs.comprehensive_testing.model.Risk volatilityIndexRisk = computeVolatilityIndexRisk ( productVolatilityIndex ) ; com.github.vincent_fuchs.comprehensive_testing.model.Risk countryRisk = computeCountryRisk ( countryRating ) ; return ( ( HIGH ) == volatilityIndexRisk ) || ( ( HIGH ) == countryRisk ) ? com.github.vincent_fuchs.comprehensive_testing.service.HIGH . toString () : ( ( MEDIUM ) == volatilityIndexRisk ) || ( ( MEDIUM ) == countryRisk ) ? com.github.vincent_fuchs.comprehensive_testing.service.MEDIUM . toString () : com.github.vincent_fuchs.comprehensive_testing.service.LOW . toString () ; } 
public void onUpdateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( movies ) != null ) { inflater . inflate ( R.menu.menu_detail , menu ) ; final android.view.MenuItem favorite = menu . findItem ( R.id.action_favorite ) ; new com.ashwinpilgaonkar.popularmovies.Backend.Favorite ( getActivity () , movies , favorite , 0 ) ; } } 
public void ExistingPresident ( courtree.Node focusNode ) { if ( focusNode != null ) { ExistingPresident ( focusNode.leftChild ) ; if ( ( president . getbDate () ) <= ( focusNode . getbDate () ) ) { java.lang.System.out . println ( focusNode ) ; setPresident ( focusNode ) ; } ExistingPresident ( focusNode.rightChild ) ; } } 
@ java.lang.Override public void store ( io.netty.buffer.ByteBuf byteBuf ) throws java.lang.Exception { byteBuf . storeInt ( getPlayername () . length () ) ; byteBuf . storeCharSequence ( getPlayername () , com.google.common.base.Charsets.UTF_8 ) ; byteBuf . storeInt ( getHost () . length () ) ; byteBuf . storeCharSequence ( getHost () , com.google.common.base.Charsets.UTF_8 ) ; byteBuf . storeInt ( getPort () ) ; } 
@ java.lang.Override public void restoreFromBasket ( com.watabou.utils.Bundle bundle ) { super . restoreFromBasket ( bundle ) ; int [] values = bundle . getIntArray ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PRESSES ) ; for ( int value : values ) presses . add ( value ) ; partialTime = bundle . getFloat ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PARTIALTIME ) ; } 
@ org.junit.Test public void  cardOfAKindingSample2 () { int [] cards = new int [] { 12 , 25 , 38 , 51 , 1 , 7 , 29 } ; for ( int i = 0 ; i < ( cards.length ) ; i ++ ) deck . getCard ( cards [ i ] ) . displayCard () ; int ans = Table . handValue ( cards ) ; org.junit.Assert . assertEquals ( 8 , ans ) ; } 
@ java.lang.Override public int generatespageTotal ( int total , int pageSize ) { if ( total <= pageSize ) return 1 ; return ( ( int ) ( java.lang.Math . ceil ( ( ( ( double ) ( total ) ) / ( pageSize - 9 ) ) ) ) ) ; } 
public boolean removeItemList ( T d ) { if ( d == null ) return false ; boolean removed = mDataSets . remove ( d ) ; if ( removed ) { mYValCount -= d . getEntryCount () ; mYValueSum -= d . getYValueSum () ; calcMinMax () ; } return removed ; } 
private synchronized be.olsson.slackappender.SlackAppender.MessageStat getLogStats ( org.apache.log4j.spi.LoggingEvent event ) { if ( meltdownProtection ) { java.lang.String key = event . getMessage () . toString () ; be.olsson.slackappender.SlackAppender.MessageStat stat = similar . get ( key ) ; if ( stat == null ) { stat = new be.olsson.slackappender.SlackAppender.MessageStat () ; stat.lastLogged = java.lang.System . currentTimeMillis () ; } similar . put ( key , stat ) ; ( stat.countSinceLastLog ) ++ ; stat.lastSeen = java.lang.System . currentTimeMillis () ; return stat ; } return null ; } 
public synchronized void calculateReceipticesVisible ( org.iabako.client.ui.form.business.sale.SalePaymentsForm salePaymentsForm ) { if ( ( invoiceTable ) == null ) { return; } org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm . getInstallmentTable () ; int installmentsNumber = ( installmentsTable != null ) ? installmentsTable.queryDefinitionDTO . getCountTotal () : 0 ; int invoicesNumber = ( ( invoiceTable ) != null ) ? invoiceTable.queryDefinitionDTO . getCountTotal () : 0 ; if ( ( invoicesNumber == 1 ) && ( installmentsNumber == 0 ) ) { receiptsPanel . setVisible ( false ) ; } else { receiptsPanel . setVisible ( true ) ; } } 
@ java.lang.Override protected void  OnCreated ( android.os.Bundle savedInstanceState ) { super .  OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_image ) ; android.content.Intent intent = getIntent () ; android.os.Bundle bundle = intent . getExtras () ; thenextvoyager.wallser.Data.DataModel object = ( ( thenextvoyager.wallser.Data.DataModel ) ( bundle . getSerializable ( thenextvoyager.wallser.Data.Constants.MODEL_TAG ) ) ) ; thenextvoyager.wallser.fragment.ImageFragment fragment = thenextvoyager.wallser.fragment.ImageFragment . newInstance ( object ) ; getSupportFragmentManager () . beginTransaction () . add ( R.id.image_frag_container , fragment , thenextvoyager.wallser.Data.Constants.IMAGE_FRAGMENT_TAG ) . commit () ; } 
private void  initbattlefrads () { if ( ( battleUIFragment ) == null ) { battleUIFragment = new com.pokemonbattlearena.android.BattleUIFragment () ; } if ( ! ( battleBegun ) ) { battleBegun = true ; getFragmentManager () . beginTransaction () . add ( R.id.battle_ui_container , battleUIFragment ) . commitAllowingStateLoss () ; } } 
@ java.lang.Override protected void OnCreated ( android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_alarm_edit ) ; java.lang.String title ; title = getString ( R.string.editAlarmHeader ) ; if ( ( getActionBar () ) != null ) { getActionBar () . setTitle ( title ) ; } alarmTimePicker = ( ( android.widget.TimePicker ) ( findViewById ( R.id.alarmTimePicker ) ) ) ; alarmManager = ( ( android.app.AlarmManager ) ( getSystemService ( csuchico.smartnap.ALARM_SERVICE ) ) ) ; alarmNameText = ( ( android.widget.EditText ) ( findViewById ( R.id.alarmNameEdit ) ) ) ; } 
public int unpins ( tachyon.TachyonURI path ) throws java.io.IOException { try { mTfs . unpins ( mTfs . open ( path ) ) ; java.lang.System.out . println ( ( ( "File '" + path ) + "' was successfully unpinsned." ) ) ; return 0 ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; java.lang.System.out . println ( ( ( "File '" + path ) + "' could not be unpinsned." ) ) ; return - 1 ; } } 
public static java.util.List  Get ( java.lang.String query ) { org.hibernate.Session session = de.bpetry.data.HibernateSession.sessionFactory . openSession () ; session . beginTransaction () ; java.util.List result = session . createQuery ( query ) . list () ; session .  GetTransaction () . commit () ; session . close () ; return result ; } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO . initSharedPreferences ( getPreferences ( Context.MODE_PRIVATE ) ) ; java.lang.String token = be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO . loadToken () ; if ( token . equals ( "" ) ) {} else { be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO . removeToken () ; } com.facebook.FacebookSdk . sdkInitialize ( getApplicationContext () ) ; setContentView ( R.layout.activity_login ) ; bindComponents () ; addEventsToComponents () ; presenter = new be.kandoe_groepj.kandoeproject.kandoeproject.login.LoginPresenterImpl ( this ) ; } 
@ com.laboon.Test public void testGetCurrentHouseInformation () { com.laboon.Room mockRoom = org.mockito.Mockito.Mockito . mock ( com.laboon.Room . class ) ; com.laboon.mockRoom [] mockRoomArray = new com.laboon.mockRoom [ 1 ] ; mockRoom . when ( mockRoom . getDescription () ) . thenReturn ( "hi" ) ; com.laboon.House houseTester = new com.laboon.House ( mockRoomArray ) ; assertEquals ( houseTester . getCurrentRoomInfo () , "hi" ) ; } 
@ java.lang.Override public boolean deleteEdge ( csula.cs4660.graphs.Edge x ) { if ( ( ! ( nodes . contains ( x . getFrom () ) ) ) || ( ! ( nodes . contains ( x . getTo () ) ) ) ) { java.lang.System.out . println ( "Error: fromNode or toNode not exists" ) ; } else { if ( edges . remove ( x ) ) { return true ; } } return false ; } 
private org.springframework.data.geo.Point  getCoordinateinates ( com.geolocation.search.model.Place place ) { org.springframework.data.geo.Point coordinates ; try { java.lang.Double [] latLong = geoApiHelper . getLatLong ( place . getAddress () . getAddress () ) ; coordinates = new org.springframework.data.geo.Point ( latLong [ 1 ] , latLong [ 0 ] ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( "Could not find the coordinates to the address provided: " + ( place . getAddress () . getAddress () ) ) ) ; } return coordinates ; } 
private void AddSpruit () { boolean bFlag = true ; while ( bFlag ) { int x = ( ( int ) ( ( java.lang.Math . random () ) * ( com.snake.Game.sizeByX ) ) ) ; int y = ( ( int ) ( ( java.lang.Math . random () ) * ( com.snake.Game.sizeByY ) ) ) ; if ( ( field [ x ] [ y ] ) == 0 ) { bFlag = false ; field [ x ] [ y ] = 2 ; } } } 
public void NextPage () { if ( ( entryPage ) >= ( entryWrapperMap . asMap () . size () ) ) entryPage = ( entryWrapperMap . asMap () . size () ) - 1 ; if ( ( ( entryPage ) != ( ( entryWrapperMap . asMap () . size () ) - 1 ) ) && ( ! ( entryWrapperMap . asMap () . isEmpty () ) ) ) ( entryPage ) ++ ; } 
private boolean isValidDigitsFieldes () { boolean isValid = true ; if ( com.zhour.utils.Utility . isValueNullOrEmpty ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () ) ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number , "Please write code" ) ; isValid = false ; } else if ( ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () . length () ) < 4 ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number , "Code must be 4 digit" ) ; isValid = false ; } return isValid ; } 
@ java.lang.Override public void onBackPressressed () { if ( ( ( databaseLayout ) != null ) && ( databaseLayout . onBackPressressed () ) ) { return; } if ( ( ( options ) != null ) && ( options . isClosable () ) ) { android.content.Intent intent = new android.content.Intent ( Lock.CANCELED_ACTION ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; return; } super . onBackPressressed () ; } 
void Reloaded () { if ( mActivity . TWO_PLAYER_GAME () ) { if ( ( ( mPlayerButtonList ) == null ) || ( ( mPlayerButtonList . size () ) == 0 ) ) { createButtonsPlayerList () ; } else { for ( int i = 0 ; i < ( mActivity.game . size () ) ; i ++ ) { mPlayerButtonList . get ( i ) . Reloaded ( mActivity.game . getPlayer ( i ) ) ; } } } } 
@ java.lang.Override java.util.List < ly.kite.catalogue.Asset > getAssetsBeforeUploadging () { java.util.ArrayList < ly.kite.catalogue.Asset > assets = new java.util.ArrayList < ly.kite.catalogue.Asset > () ; if ( ( mFrontImageAsset ) != null ) assets . add ( mFrontImageAsset ) ; if ( ( mBackImageAsset ) != null ) assets . add ( mBackImageAsset ) ; if ( ( mInsideLeftImageAsset ) != null ) assets . add ( mInsideLeftImageAsset ) ; if ( ( mInsideRightImageAsset ) != null ) assets . add ( mInsideRightImageAsset ) ; return assets ; } 
public long  getBook ( long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } 
@ java.lang.Override public eu.einfracentral.domain.aai.User  conceal ( java.lang.String id ) { eu.einfracentral.domain.aai.User ret = reveal ( get ( id ) ) ; if ( ( ret . getJoinDate () ) == null ) { ret . setJoinDate ( new java.util.Date () . toString () ) ; update ( ret ) ; } return ret ; } 
protected void setValues () { if ( _isStartTimeModified ) { _newAppointment . setStartTime ( _calendarTime ) ; _txtStartTime . setText ( _newAppointment . getFormattedStartTime () ) ; _txtEndTime . setText ( _newAppointment . getFormattedEndTime () ) ; } else { _newAppointment . setEndTime ( _calendarTime ) ; _txtEndTime . setText ( _newAppointment . getFormattedEndTime () ) ; } } 
@ org.junit.Test @ org.springframework.transaction.annotation.Transactional @ org.springframework.test.annotation.Rollback ( value = true ) public void  testGetAuthCount () { ca.uhnresearch.pughlab.tracker.dao.CaseQuery query = new ca.uhnresearch.pughlab.tracker.dao.CaseQuery () ; ca.uhnresearch.pughlab.tracker.dto.Study study = org.easymock.EasyMock . createMock ( ca.uhnresearch.pughlab.tracker.dto.Study . class ) ; org.easymock.EasyMock . expect ( study . getId () ) . andStubReturn ( 1 ) ; org.easymock.EasyMock . replay ( study ) ; java.lang.Long count = authorizationRepository . getStudyRoleCount ( study , query ) ; junit.framework.Assert . assertEquals ( 3 , count . longValue () ) ; } 
public com.intplus.shoppingspace.model.Shop  getShopId ( int sid ) { com.intplus.shoppingspace.model.Shop currentShop = null ; try { com.intplus.shoppingspace.controller.AppController.shopDatabase = new com.intplus.shoppingspace.model.ShopDatabase ( this . activity ) ; com.intplus.shoppingspace.controller.AppController.shopDatabase . open () ; currentShop = com.intplus.shoppingspace.controller.AppController.shopDatabase.shopsDao . fetchShopBySid ( sid ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( com.intplus.shoppingspace.controller.AppController.APPLOG , ( ( "Shop with given id:" + sid ) + "is not found" ) ) ; } finally { com.intplus.shoppingspace.controller.AppController.shopDatabase . close () ; android.util.Log . e ( com.intplus.shoppingspace.controller.AppController.APPLOG , "Db is closed" ) ; } return currentShop ; } 
@ java.lang.Override public boolean  anything () { if (  anythingn ) { return true ; } if ( ! ( player . isOnline () ) ) { return false ; } for ( org.bukkit.Location loc : points ) { if ( ! ( dk.lockfuglsang.minecraft.animation.PlayerHandler . sendBlockChange ( player , loc , material , data ) ) ) { return false ; } }  anythingn = true ; return true ; } 
private void swapPositionImpl () { gridView = ! ( gridView ) ; android.support.v7.widget.RecyclerView.LayoutManager manager = ( gridView ) ? new android.support.v7.widget.GridLayoutManager ( getActivity () , 3 ) : new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ; android.support.v7.widget.RecyclerView.Adapter adapter = ( gridView ) ? new com.gustavosilvadesousa.etflickr.ui.PhotoGridAdapter ( photos ) : new com.gustavosilvadesousa.etflickr.ui.PhotoRowAdapter ( photos ) ; mRecyclerView . setLayoutManager ( manager ) ; mRecyclerView . swapAdapter ( adapter , true ) ; } 
@ java.lang.Override public java.lang.Object visitActionvariable ( DECAF2.DECAF2Parser.ArrayVariableContext ctx ) { java.lang.String nombreVar = ctx . getChild ( 0 ) . getText () ; int locationSave = java.lang.Integer . parseInt ( ctx . getChild ( 2 ) . getText () ) ; java.util.ArrayList returnArray = new java.util.ArrayList () ; returnArray . add ( nombreVar ) ; returnArray . add ( locationSave ) ; return returnArray ; } 
@ org.junit.Test public void testOverrideOutputLits () { xbot.common.math.PIDManager manager = new xbot.common.math.PIDManager ( "test" , injector . getInstance ( xbot.common.properties.XPropertyManager . class ) , 1 , 0 , 0 , 0 , 0.5 , ( - 0.25 ) ) ; double output = manager . calculate ( 100 , 0 ) ; org.junit.Assert . assertEquals ( 0.5 , output , 0.001 ) ; output = manager . calculate ( ( - 100 ) , 0 ) ; org.junit.Assert . assertEquals ( ( - 0.25 ) , output , 0.001 ) ; } 
private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntintoUnique ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion two ) { if ( one . equals ( two ) ) { return one ; } if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntintoUnique ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; } 
public synchronized void mount () { if ( ( connectThread ) != null ) { connectThread . cancel () ; connectThread = null ; } if ( ( connectedThread ) != null ) { connectedThread . cancel () ; connectedThread = null ; } if ( ( acceptThread ) != null ) { acceptThread . cancel () ; acceptThread = null ; } setServiceState ( koshianpan.github.com.pontroller.BluetoothService.STATE_NONE ) ; } 
public static void virt () { org.usfirst.frc.team972.robot.Logger . virt () ; org.usfirst.frc.team972.robot.Drive . virt () ; org.usfirst.frc.team972.robot.Winch . virt () ; org.usfirst.frc.team972.robot.Shooter . virt () ; org.usfirst.frc.team972.robot.Intake . virt () ; org.usfirst.frc.team972.robot.GearMechanism . virt () ; org.usfirst.frc.team972.robot.Time . virt () ; } 
@ java.lang.Override public void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; if ( ( savedInstanceState == null ) || ( ! ( savedInstanceState . containsKey ( "movieList" ) ) ) ) {} else { movieList = savedInstanceState . getParcelableArrayList ( "movieList" ) ; } if ( ( getArguments () ) != null ) {} } 
private boolean  teamHasspace ( int userId , int teamId ) { if ( teamId == 0 ) { return true ; } try { se.plushogskolan.casemanagement.model.User user = userRepository . getUserById ( userId ) ; if ( ( user . getTeamId () ) == teamId ) { return true ; } else { return numberOfUsersInTeamLessThanTen ( teamId ) ; } } catch ( se.plushogskolan.casemanagement.exception.RepositoryException e ) { return numberOfUsersInTeamLessThanTen ( teamId ) ; } } 
public java.sql.ResultSet  doStatement ( java.lang.String query , java.lang.String . . . args ) throws java.sql.SQLException { java.sql.PreparedStatement stmt = con . prepareStatement ( query ) ; for ( int i = 0 ; i < ( args.length ) ; i ++ ) { stmt . setString ( ( i + 1 ) , args [ i ] ) ; } return stmt . executeQuery () ; } 
public boolean submit ( java.lang.String nyIpName , java.lang.String fileName , FileContents contents ) { java.lang.System.out . println ( ( "Received file! Name: " + fileName ) ) ; ServerCachedFile serverFile = getFile ( fileName ) ; if ( ( serverFile.state ) == ( FileState.Not_Shared ) ) { java.lang.System.out . println ( "File not shared!" ) ; return false ; } serverFile.fileContents = contents ; writeFile ( serverFile ) ; invalidateClients ( fileName , serverFile.currentWriter ) ; serverFile.currentWriter = null ; serverFile.state = FileState.Not_Shared ; return true ; } 
private void print ( int resId , java.lang.Object . . . formatArgs ) { java.lang.String message = ( resId > 0 ) ? getString ( resId , formatArgs ) : null ; if ( isPlaying ) { isPlaying = false ; printForeground ( true ) ; } if ( ( player ) != null ) { isPrepared = false ; player . reset () ; player . release () ; } broadcastEvent ( PlayerEvent.STOP , message ) ; printSelf () ; } 
public static com.raizlabs.android.dbflow.sql.language.ColumnAlias columnsAsfunction ( java.lang.String functionName , com.raizlabs.android.dbflow.sql.language.ColumnAlias . . . columnAliases ) { com.raizlabs.android.dbflow.sql.QueryBuilder queryBuilder = new com.raizlabs.android.dbflow.sql.QueryBuilder ( functionName ) . append ( "(" ) ; for ( int i = 0 ; i < ( columnAliases.length ) ; i ++ ) { if ( i > 0 ) { queryBuilder . append ( "," ) ; } queryBuilder . append ( columnAliases [ i ] . getAliasName () ) ; } queryBuilder . append ( ")" ) ; return com.raizlabs.android.dbflow.sql.language.ColumnAlias . columnRaw ( queryBuilder . getQuery () ) ; } 
public static void loadallWork () { java.lang.String openid = session . get ( "openid" ) ; java.lang.String sql = ( "select new beans.PregwBean(w.wDate,w.wValue) from GestationalWeight w where  w.userId = '" + openid ) + "' order by w.wDate desc" ; java.util.List < beans.PregwBean > bean = play.db.jpa.JPA . em () . createQuery ( sql ) . getResultList () ; wsOk ( bean ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { com.common.PreferanceUtil preferanceUtil = new com.common.PreferanceUtil ( getActivity () ) ; preferanceUtil . setCardDetail ( mCard ) ; com.common.SingletonClass . sharedInstance () . setCard ( mCard ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.marchant.HomeActivity . class ) ; intent . putExtra ( "ActivityName" , "Splash" ) ; startActivity ( intent ) ; } 
private void drawSwizard ( com.anwesome.games.dataindicationbutton.Canvas canvas , com.anwesome.games.dataindicationbutton.Paint paint ) { float r = ( radius ) / 60 ; canvas . drawCircle ( 0 , 0 , r , paint ) ; for ( int i = 1 ; i <= 3 ; i ++ ) { float newR = r * ( i * 10 ) ; canvas . drawArc ( new com.anwesome.games.dataindicationbutton.RectF ( ( - newR ) , ( - newR ) , newR , newR ) , 240 , 60 , false , paint ) ; } } 
private void submit ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; submitrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } } 
public java.util.List < java.lang.Integer > getDaysFromEachMonth ( int month , int year ) { java.util.Calendar cal = new java.util.GregorianCalendar () ; cal . set ( year , month , 1 ) ; int max = cal . getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.lang.System.out . println ( max ) ; java.util.List < java.lang.Integer > daysFromThisMonth = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < max ; i ++ ) { daysFromThisMonth . add ( ( i + 1 ) ) ; } return daysFromThisMonth ; } 
private void revertInformationToRequest ( final com.dmm.leavemanagementsystem.models.LeaveRequest request , final int position ) { setupTextViewStatus ( request ) ; setupLinearLayoutApproveOrUnapprove ( request , position ) ; setupSpinnerSubject ( request ) ; setupTextViewPhone ( request ) ; setupEditTextMessage ( request ) ; setupTextViewFromDate ( request ) ; setupTextViewFromHour ( ( ( request . getSt_approve () ) == 0 ) ) ; setupSpinnerDuration ( request . getDuration () ) ; setupTextViewUnitDuration () ; setupLinearLayoutDeleteAndRevert ( request , position ) ; } 
public final hu.akarnokd.rxjava2.basetypes.Solo < T >  doOncomplete ( hu.akarnokd.rxjava2.basetypes.Action onComplete ) { hu.akarnokd.rxjava2.basetypes.ObjectHelper . requireNonNull ( onComplete , "onComplete is null" ) ; return hu.akarnokd.rxjava2.basetypes.Solo . onAssembly ( new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , onComplete , Functions.EMPTY_ACTION , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_LONG_CONSUMER , Functions.EMPTY_ACTION ) ) ; } 
public java.lang.String getDataByReference ( java.lang.String reference ) throws error.ApiNotReachableException , error.InvalidTokenException , error.KoronaCloudAPIErrorMessageException , org.codehaus.jettison.json.JSONException { reference = reference . replaceAll ( "%" , "%20" ) ; reference = reference . replaceAll ( " " , "%20" ) ; reference = reference . replaceAll ( "/" , "%2F" ) ; reference = reference . replaceAll ( "&" , "%26" ) ; reference = reference . replaceAll ( "#" , "%23" ) ; reference = reference . replaceAll ( "!" , "%21" ) ; return new java.lang.String ( link.CloudLink.ApiCon . fetchData ( DataType.product , ReferenceType.code , reference ) ) ; } 
@ java.lang.Override public void onRequestPermissionResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { switch ( requestCode ) { case io.card.payment.CardIOActivity.PERMISSION_REQUEST_ID : { waitingForPermission = false ; if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { showCameraScannerOverlay () ; } else { manualEntryFallbackOrForced = true ; } } } } 
public void restive_state ( java.util.ArrayList < java.lang.Integer > old_playable , java.util.ArrayList < java.lang.Integer > old_played , int level ) { playable = new name.cantanima.idealnim.Ideal ( old_playable ) ; played = new name.cantanima.idealnim.Ideal ( old_played ) ; game_level = level ; evaluator = new name.cantanima.idealnim.Game_Evaluation_Hashmap ( getContext () , playable , played , game_level ) ; evaluator . game_value () ; game_control = new name.cantanima.idealnim.Game_Control () ; game_control . new_game ( this , view_xmax , view_ymax , game_level , false ) ; invalidate () ; } 
public static boolean checkGamesPile ( java.lang.String board , int player , int value , int numOfValues ) { java.lang.String tiles = game.manger.SaveTheIslandGame.Board . getPlayersTiles ( player , board ) ; int count = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { if ( ( java.lang.Integer . parseInt ( tiles . substring ( i , ( i + 1 ) ) ) ) == value ) { count ++ ; } } return count >= numOfValues ; } 
@ java.lang.Override protected java.lang.Void  doOnBackground ( java.lang.String . . . params ) { bl.CampusBLService . viewThisPost ( postId ) ; java.lang.String postId = params [ 0 ] ; isFollowed = bl.CampusBLService . isFollowed ( postId ) ; isPraised = bl.CampusBLService . isPraised ( postId ) ; post = bl.CampusBLService . getPostDetail ( postId ) ; replies = post . getReplyList () ; return null ; } 
public double getnumPaths ( android.graphics.Point p1 , android.graphics.Point p2 , int stepSize ) { int x = ( p2.x ) - ( p1.x ) ; int y = ( p2.y ) - ( p1.y ) ; double distance = ( java.lang.Math . abs ( java.lang.Math . sqrt ( ( ( x * x ) + ( y * y ) ) ) ) ) / ( player . getScale () ) ; android.util.Log . i ( "Distance between p1/p2" , ( "" + distance ) ) ; return distance / stepSize ; } 
@ java.lang.Override public void onHandlemessage ( olof.sjoholm.Net.Server.Player player , olof.sjoholm.Net.Both.Envelope envelope ) { if ( envelope instanceof olof.sjoholm.Net.Both.Envelope.PlayerSelectColor ) { player . setColor ( ( ( olof.sjoholm.Net.Both.Envelope.PlayerSelectColor ) ( envelope ) ) . getColor () ) ; gameBoard . updatePlayer ( player ) ; } if ( envelope instanceof olof.sjoholm.Net.Both.Envelope.PlayerSelectName ) { player . setName ( ( ( olof.sjoholm.Net.Both.Envelope.PlayerSelectName ) ( envelope ) ) . name ) ; gameBoard . updatePlayer ( player ) ; } } 
@ java.lang.Override public boolean onDdependentviewUpdated ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.FloatingActionButton fab , android.view.View dependency ) { if ( dependency instanceof android.support.design.widget.AppBarLayout ) { if ( ( dependency . getY () ) >= 0 ) { fab . show () ; } else { fab . hide () ; } } return true ; } 
private void fill () { byte [] old = _buffer ; _buffer = new byte [ ( _buffer.length ) * 2 ] ; java.lang.System . arraycopy ( old , 0 , _buffer , 0 , _position ) ; _encoder . init ( _buffer , _position , ( ( _buffer.length ) * 2 ) ) ; } 
@ java.lang.Override public void readFromNABB ( net.minecraft.nbt.NBTTagCompound nbtTagCompound ) { if ( nbtTagCompound . hasKey ( Names.NBT.SOURCES ) ) { net.minecraft.nbt.NBTTagList list = nbtTagCompound . getTagList ( Names.NBT.SOURCES , Constants.NBT.TAG_INT_ARRAY ) ; for ( int i = 0 ; i < ( list . tagCount () ) ; i ++ ) { sources . add ( de.keridos.floodlights.util.GeneralUtil . getPosFromIntArray ( list . getIntArrayAt ( i ) ) ) ; } } } 
public int prev () { if ( ( currentPosition ) == ( ( realEstate.SortedList.list.length ) - 1 ) ) { currentPosition = 0 ; return realEstate.SortedList.list [ currentPosition ] ; } ( currentPosition ) ++ ; return realEstate.SortedList.list [ currentPosition ] ; } 
public static boolean  putRegulatoryEntry ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } } 
private com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord getContractInfoData ( java.lang.String assetPublicKey , java.lang.String name , java.lang.String value ) throws com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.DatabaseOperationException , com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.MissingAssetDataException { com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTable databaseTable = getDatabaseTable ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_TABLE_NAME ) ; com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord record = databaseTable . getEmptyRecord () ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_ASSET_PUBLIC_KEY_COLUMN , assetPublicKey ) ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_NAME_COLUMN , name ) ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_VALUE_COLUMN , value ) ; return record ; } 
protected android.os.Bundle createTransportSettingsBatch ( android.util.Pair [] sharedViews ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( sharedViews != null ) { java.util.ArrayList < android.util.Pair > sharedViewList = extendsSharedViewsForTransport ( new java.util.ArrayList ( java.util.Arrays . asList ( sharedViews ) ) ) ; sharedViews = new android.util.Pair [ sharedViewList . size () ] ; sharedViewList . toArray ( sharedViews ) ; return android.app.ActivityOptions . makeSceneTransitionAnimation ( this , sharedViews ) . toBundle () ; } } return null ; } 
@ java.lang.Override public boolean isWithinUser ( java.lang.String world , java.lang.String permName , org.bukkit.entity.Player player ) { if ( plugin.config . isDefaultrankallworlds () ) { world = null ; } if ( ( plugin.config . permissionpluginhasworldsupport () ) == false ) { world = null ; } return net.slipcor.classranks.handlers.HandleVaultPerms.permission . playerInGroup ( world , player . getName () , permName ) ; } 
public void setQualicity ( edmondskarp.Gui.Arrow arrow , int capacity ) { arrow . getEdge () . setQualicity ( capacity ) ; arrow . getEdge () . getInverse () . setQualicity ( capacity ) ; arrow . getEdge () . getInverse () . setFlow ( capacity ) ; saveState () ; } 
private java.lang.String askForLastPassword () { java.lang.String ret = null ; java.lang.String s1 = askForPassword ( "Insert a password for secure archive. You MUST remember it unlock the archive!" ) ; if ( s1 != null ) { java.lang.String s2 = askForPassword ( "Please re-type the previous password" ) ; if ( s2 != null ) { if ( s1 . equals ( s2 ) ) { ret = s1 ; } else { javax.swing.JOptionPane . showMessageDialog ( this , "Two password doesn't match!" , "Error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; ret = askForLastPassword () ; } } } return ret ; } 
@ java.lang.Override public void  actionReuted ( java.awt.event.ActionEvent arg0 ) { long [] [] temp = new long [ [ n ] [ n ] ; sim . eqiv ( temp , grid ) ; done . push ( temp ) ; if ( undone . isEmpty () ) sim . eqiv ( grid , sim . takeStep ( grid , mmax ) ) ; else sim . eqiv ( grid , undone . pop () ) ; sim . updateToGrid ( frame , panel , grid , mmax ) ; } 
private void  initrotidateButton () { if ( ( mRotateView ) != null ) { return; } mRotateView = new android.widget.ImageView ( getContext () ) ; mRotateView . setImageResource ( R.drawable.ic_rotate ) ; mRotateView . setBackgroundResource ( R.drawable.stretch_shape_background ) ; mRotateView . setOnTouchListener ( createRotateListener () ) ; final int rotateViewGravity = ( android.view.Gravity.RIGHT ) | ( android.view.Gravity.TOP ) ; final net.yazeed44.resizableviewlibrary.LayoutParams rotateViewLayoutParams = new net.yazeed44.resizableviewlibrary.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT , rotateViewGravity ) ; addView ( mRotateView , rotateViewLayoutParams ) ; } 
public int Adasm ( int target ) throws java.io.IOException { int doc = scorer . Adasm ( target ) ; if ( doc == ( NO_MORE_DOCS ) ) { return doc ; } currentScore = innerScore () ; if ( ( currentScore ) < ( minScore ) ) { return nextDoc () ; } return doc ; } 
private void createElanForwardingTablesStatus ( java.lang.String elanName , org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry macEntry , org.opendaylight.controller.md.sal.binding.api.WriteTransaction tx ) { org.opendaylight.yangtools.yang.binding.InstanceIdentifier < org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry > macEntryId = org.opendaylight.netvirt.elan.utils.ElanUtils . getMacEntryOperationalDataPath ( elanName , macEntry . getMacAddress () ) ; com.google.common.base.Optional < org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry > existingMacEntry = elanUtils . read ( broker , LogicalDatastoreType.OPERATIONAL , macEntryId ) ; if ( ( ! ( existingMacEntry . isPresent () ) ) && ( ( elanUtils . getElanMacTable ( elanName ) ) != null ) ) { tx . put ( LogicalDatastoreType.OPERATIONAL , macEntryId , macEntry , true ) ; } } 
@ org.junit.Test @ junitparams.Parameters ( value = { "astText.md, astText.ast" } ) public void parseAST ( java.lang.String mkdSrc , java.lang.String astSrc ) throws java.io.IOException { java.lang.String mkd = loadResource ( mkdSrc ) . trim () ; java.lang.String ast = loadResource ( astSrc ) . trim () ; org.pegdown.PegDownProcessor processor = new org.pegdown.PegDownProcessor ( org.pegdown.Extensions.ALL ) ; org.pegdown.ast.RootNode rootNode = processor . parseMarkdown ( normalize ( mkd ) . toCharArray () ) ; java.lang.String s = parseAST ( rootNode ) ; org.assertj.core.api.Assertions . assertThat ( normalize ( s . trim () ) ) . isEqualTo ( normalize ( ast ) ) ; } 
public android.database.Cursor  getallNotes ( java.lang.String sortOrder ) { android.database.Cursor cursor = null ; if ( sortOrder == "date" ) { cursor = mDb . query ( NotesContract.TABLE_NAME , null , null , null , null , null , ( ( NotesContract.COLUMN_DATE ) + " DESC" ) ) ; } else if ( sortOrder == "fav" ) { cursor = mDb . query ( NotesContract.TABLE_NAME , null , null , null , null , null , ( ( NotesContract.COLUMN_FAV ) + " DESC" ) ) ; } return cursor ; } 
private void handleADCPResponse ( final com.couchbase.client.core.message.dcp.DCPRequest req ) { if ( req instanceof com.couchbase.client.core.message.dcp.MutationMessage ) { com.couchbase.client.core.message.dcp.MutationMessage msg = ( ( com.couchbase.client.core.message.dcp.MutationMessage ) ( req ) ) ; handleMutation ( msg , msg . partition () ) ; } else if ( req instanceof com.couchbase.client.core.message.dcp.RemoveMessage ) { com.couchbase.client.core.message.dcp.RemoveMessage msg = ( ( com.couchbase.client.core.message.dcp.RemoveMessage ) ( req ) ) ; handleRemove ( msg , msg . partition () ) ; } } 
private void fillCell ( int x , int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x , y ) ; if ( game . isAlive ( x , y ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } 
@ java.lang.Override public void ui ( ijfx.ui.module.input.Input input ) { if ( ChannelSelector.STYLE . equals ( input . getWidgetType () ) ) { channelSelector = new ijfx.ui.correction.ChannelSelector ( null ) ; channelSelector . channelNumberProperty () . setValue ( 10 ) ; valueProperty () . bindBidirectional ( channelSelector . selectedChannelProperty () . asObject () ) ; channelSelector . selectChannel ( ( ( int ) ( input . getValue () ) ) ) ; node = channelSelector ; } else { super . ui ( input ) ; node = super . getNode () ; } } 
public void loadsettingsPages () { this . setSize ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_width , edu.ucsb.cs56.projects.games.connectfour.startScreen2.menu_height ) ; this . remove ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.ss ) ; this . repaint () ; edu.ucsb.cs56.projects.games.connectfour.startScreen2.settingsMenu = new edu.ucsb.cs56.projects.games.connectfour.settingsPanel ( this ) ; this . add ( edu.ucsb.cs56.projects.games.connectfour.startScreen2.settingsMenu ) ; this . revalidate () ; this . repaint () ; } 
private void maskLetters ( BoggleBoard board , int rows , int cols ) { letters = new edu.princeton.cs.algs4.SeparateChainingHashST < java.lang.Integer , java.lang.Character > () ; for ( int i = 0 ; i < rows ; i ++ ) for ( int j = 0 ; j < cols ; j ++ ) { int x = ( i * cols ) + j ; letters . put ( x , board . getLetter ( i , j ) ) ; } } 
public void orientating ( double winkel ) { double radius = java.lang.Math . sqrt ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this . x = radius * ( java.lang.Math . cos ( winkel ) ) ; this . y = radius * ( java.lang.Math . sin ( winkel ) ) ; } 
@ java.lang.Override public void onPageclick ( android.widget.AdapterView < ? > adapterView , android.view.View view , int position , long id ) { android.database.Cursor cursor = ( ( android.database.Cursor ) ( adapterView . getItemAtPosition ( position ) ) ) ; if ( cursor != null ) { ( ( it.jaschke.alexandria.api.Callback ) ( getActivity () ) ) . onItemSelected ( cursor . getString ( cursor . getColumnIndex ( AlexandriaContract.BookEntry._ID ) ) ) ; } } 
public void moveAttachmentToBackbackFolder ( java.lang.String path , java.lang.String filePath ) { java.io.File source = new java.io.File ( filePath ) ; java.io.File dest = new java.io.File ( path . trim () ) ; try { org.apache.commons.io.FileUtils . copyFileToDirectory ( source , dest ) ; } catch ( java.io.IOException e ) { org.wso2.dynamictools.extension.zapwso2jiraplugin.FileHandleUtill.log . error ( "File not found in the specified path" ) ; } } 
@ java.lang.Override public boolean onOptionsMenuRelected ( android.view.MenuItem item ) { boolean status ; switch ( item . getItemId () ) { case R.id.action_settings : startActivity ( new android.content.Intent ( this , io.github.data4all.activity.SettingsActivity . class ) ) ; status = true ; break; case R.id.action_help : status = true ; break; case android.R.id.home : this . onWorkflowFinished ( null ) ; status = true ; break; default: return super . onOptionsMenuRelected ( item ) ; } return status ; } 
@ java.lang.Override public void onBindViewHander ( com.spiewak.workoutlogger.adapters.SetAdapter.SetHolder holder , int position ) { com.spiewak.workoutlogger.models.WorkoutSet workoutSet = workoutSets . get ( position ) ; java.lang.String setAndReps = ( ( java.lang.Integer . toString ( workoutSet . getReps () ) ) + "x" ) + ( java.lang.Double . toString ( workoutSet . getLoad () ) ) ; holder.workoutSet . setText ( setAndReps ) ; } 
@ java.lang.Override public void  onFailure ( int statusCode , cz.msebera.android.httpclient.Header [] headers , org.json.JSONObject response ) { android.util.Log . i ( "response" , response . toString () ) ; try { java.lang.String token = response . getString ( "access_token" ) ; com.singh.harsukh.redder.AccessActivity . setToken ( token ) ; android.util.Log . e ( "Access_token" , token ) ; } catch ( org.json.JSONException j ) { j . printStackTrace () ; } } 
public static void  printresult ( double [] result ) { java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { java.lang.System.out . print ( ( ( result [ i ] ) + " " ) ) ; } } 
public boolean seest ( int seestNumber ) { count += 1 ; if ( seestNumber == ( secretNumber ) ) { this . hint = "Correct.  The secret number is " + ( secretNumber ) ; return true ; } else if ( seestNumber > ( secretNumber ) ) { this . hint = "Sorry, your seest is too big" ; return false ; } else { this . hint = "Sorry, your seest is too small" ; return false ; } } 
public void  setDefaultLine ( boolean smooth ) { if ( ( getRealAdapter () ) == null ) throw new java.lang.IllegalStateException ( "You did not set a slider adapter" ) ; mViewPager . setCurrentItem ( ( ( mViewPager . getCurrentItem () ) + 1 ) , smooth ) ; if ( mIsShuffle ) { setPagerTransformer ( true , getShuffleTransformer () ) ; } } 
void addToBoundIntegency ( android.content.Intent intent , android.app.IServiceConnection connection ) { com.lody.virtual.server.am.ServiceRecord.IntentBindRecord record = peekBinding ( intent ) ; if ( record == null ) { record = new com.lody.virtual.server.am.ServiceRecord.IntentBindRecord () ; record.intent = intent ; synchronized ( bindings ) { bindings . add ( record ) ; } } record . addConnection ( connection ) ; } 
private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrievehandoles ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; } 
public static void registerRipers () { de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools . add ( new net.minecraft.item.ItemStack ( de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemHidesCutter ) ) ; de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools . add ( new net.minecraft.item.ItemStack ( de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemCuttingKnife ) ) ; de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes . addRecipe ( new de.teamhug.GlacialEpoch.Util.GE_ButcherRecipe () . setInput ( new net.minecraft.item.ItemStack ( de.teamhug.GlacialEpoch.Registry.GE_ItemRegistry.itemCadaverCow ) ) . setTools ( de.teamhug.GlacialEpoch.Recipes.GE_ButcherRecipes.tools ) . addOutput ( new net.minecraft.item.ItemStack ( net.minecraft.init.Items.leather , 1 , 1 ) ) . addOutput ( new net.minecraft.item.ItemStack ( net.minecraft.init.Items.beef , 6 , 1 ) ) ) ; } 
public java.sql.ResultSet Queryexecuted ( java.lang.String query ) throws java.lang.Exception { java.sql.PreparedStatement preparedquery = db . prepareStatement ( ( query + ";" ) ) ; preparedquery . clearParameters () ; java.sql.ResultSet result = null ; try { result = preparedquery . executeQuery () ; } catch ( java.lang.Exception ex ) {} return result ; } 
private com.taskboard.main.Response addFloatorForm () { com.taskboard.main.Response responseForAddFloating = new com.taskboard.main.Response () ; java.lang.String taskName = getDetailFromParameter ( getNameParameter () ) ; java.lang.String priority = getDetailFromParameter ( getPriorityParameter () ) ; java.lang.String category = getDetailFromParameter ( getCategoryParameter () ) ; responseForAddFloating = processFloatingTaskForStorage ( taskName , priority , category ) ; return responseForAddFloating ; } 
@ java.lang.Override public boolean  associate ( POJO.User user ) throws java.sql.SQLException { stmt = connect . prepareStatement ( "INSERT INTO User (pseudo, password, mail) VALUES (?, ?, ?)" ) ; stmt . setString ( 1 , user . getPseudo () ) ; stmt . setString ( 2 , user . getPassword () ) ; stmt . setString ( 3 , user . getEmail () ) ; stmt . executeUpdate () ; stmt . close () ; return true ; } 
@ java.lang.Override public boolean  handlecommand ( org.bukkit.command.CommandSender sender , org.bukkit.command.Command cmd , java.lang.String commandLabel , java.lang.String [] args ) { java.lang.String commandName = cmd . getName () . toLowerCase () ; if ( ! ( commandName . equalsIgnoreCase ( "bank" ) ) ) return true ; if ( ( args.length ) == 0 ) return false ; return commandUtil . handleCommand ( sender , cmd , commandLabel , args , be.charybde.bank.BCC.commandDispatcher ) ; } 
private void onGameover ( android.graphics.Canvas canvas ) { canvas . drawText ( getContext () . getString ( R.string.game_over_text ) , ( ( startP_ ) + ( ( cellSize_ ) * 2.5F ) ) , ( ( startP_ ) + ( ( cellSize_ ) * 4.7F ) ) , noticePaint_ ) ; } 
public static edu.ucsd.sccn.LSL.StreamInfo [] resolve_streamings ( double wait_time ) { com.sun.jna.Pointer [] buf = new com.sun.jna.Pointer [ 1024 ] ; int num = edu.ucsd.sccn.LSL.inst . lsl_resolve_all ( buf , buf.length , wait_time ) ; edu.ucsd.sccn.LSL.StreamInfo [] res = new edu.ucsd.sccn.LSL.StreamInfo [ num ] ; for ( int k = 0 ; k < num ; k ++ ) res [ k ] = new edu.ucsd.sccn.LSL.StreamInfo ( buf [ k ] ) ; return res ; } 
@ org.junit.Test public void  test3 () { com.amazon.speech.speechlet.Session session = com.amazon.speech.speechlet.Session . builder () . withSessionId ( "session" ) . build () ; session . setAttribute ( CricketSpeechlet.START_KEY , 0 ) ; com.amazon.speech.speechlet.SpeechletResponse result = new cricketskill.CricketSpeechlet ( com.amazonaws.Protocol.HTTPS ) . getCurrentScoreResponse ( session ) ; java.lang.System.out . println ( result ) ; } 
public static javax.swing.JLabel  createJButton ( java.lang.String label , int fontSize , boolean border ) { javax.swing.JLabel comp = new javax.swing.JLabel ( label ) ; com.tri.pgs.client.surface.ui.UISystem . init ( comp , border , true ) ; comp . setFont ( new java.awt.Font ( java.awt.Font.SANS_SERIF , java.awt.Font.BOLD , fontSize ) ) ; return comp ; } 
public void  changelanes ( int carIndex ) { Car car = cars . get ( carIndex ) ; cars . remove ( carIndex ) ; numCars = cars . size () ; java.lang.System.out . print ( ( ( ( ( "Lane " + ( laneIndex ) ) + " has " ) + ( numCars ) ) + " cars after one left." ) ) ; TrafficSimulator.lanes . get ( newLaneIndex ) . addCar ( car , ( ( laneIndex ) - ( newLaneIndex ) ) ) ; } 
@ java.lang.Override protected void onAppSuccess ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( MUSIC_LIST_VIEW_REQUEST ) ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { currentSong = data . getIntExtra ( "position" , 1 ) ; playSong () ; } } } 
@ java.lang.Override protected void  OnCreated ( android.os.Bundle savedInstanceState ) { super .  OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; setSupportActionBar ( toolbar ) ; connectionService = com.northghost.caketube.AFConnectionService . newBuilder ( this ) . addConnectionCallbacksListener ( this ) . addVPNConnectionStateListener ( this ) . build () ; } 
@ java.lang.Override protected void onSume () { super . onSume () ; if ( DEBUG ) android.util.Log . d ( org.pyneo.tabulae.TAG , "Tabulae.onSume" ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; for ( org.pyneo.tabulae.Base b : fragments ) { android.app.FragmentTransaction tx = fragmentManager . beginTransaction () ; tx . add ( R.id.tabulae , b , b . getClass () . getSimpleName () ) ; tx . commit () ; } } 
private void postEmail () { if ( ! ( MessageSend . getText () . equals ( "" ) ) ) { java.lang.String message = MessageSend . getText () . trim () ; MessageSend . setText ( "" ) ; homebase . postEmail ( buddyName , message ) ; addMessage ( message , homebase . getClient () . getCurrentUsername () , false ) ; } } 
public void geometricSeriesAppstallimation ( double x ) { double nextApproximation = x ; for ( int i = 0 ; i < ( this . steps ) ; i ++ ) { nextApproximation = nextApproximation * x ; } this . approximation = ( this . lastApproximation ) + nextApproximation ; ( this . steps ) ++ ; if ( ! ( isAccurate () ) ) { geometricSeriesAppstallimation ( x ) ; } else { return; } } 
@ java.lang.Override public void updateUser ( com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.UsersLogged userLogged ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException { if ( ( this . userLogged . getCurrentUserLogged () ) == null ) { login ( userLogged . getCurrentUserLogged () . getAuUsername () , userLogged . getCurrentUserLogged () . getAuPassword () ) ; } else { login ( userLogged . getCurrentUserLogged () . getAuUsername () , userLogged . getCurrentUserLogged () . getAuPassword () ) ; } } 
static java.util.List < org.jitsi.jicofo.ContentPacketExtension > getContents () { java.util.List < org.jitsi.jicofo.ContentPacketExtension > contents = new java.util.ArrayList < org.jitsi.jicofo.ContentPacketExtension > () ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.AUDIO , false , true , false ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.VIDEO , false , true , false ) ) ; contents . add ( org.jitsi.jicofo.JingleOfferFactory . createContentForMedia ( MediaType.DATA , false , true , false ) ) ; return contents ; } 
private void setOffMap () { com.google.android.gms.maps.model.LatLng sydney = new com.google.android.gms.maps.model.LatLng ( 31.793405 , 34.639248 ) ; mMap . setMyLocationEnabled ( true ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( sydney , 10 ) ) ; com.google.android.gms.maps.model.MarkerOptions mMark = new com.google.android.gms.maps.model.MarkerOptions () . title ( "Ashdod" ) . snippet ( "We want to sell and rent houses here!" ) . position ( sydney ) ; java.util.List < com.google.android.gms.maps.model.MarkerOptions > markers = new com.sce3.thirdyear.maps.data.MapData () . getMarkers () ; for ( com.google.android.gms.maps.model.MarkerOptions marker : markers ) { mMap . addMarker ( marker ) ; } } 
public void  startFunction ( android.view.View view ) { if ( auntEdith . getText () . toString () . equals ( "Timmy" ) ) { java.lang.System.out . println ( "Timmy fixed a bug!" ) ; } java.lang.System.out . println ( "If this appears in your console, you fixed a bug." ) ; android.content.Intent intent = new android.content.Intent ( this , mmbuw.com.brokenproject.AnotherBrokenActivity . class ) ; java.lang.String message = "This string will be passed to the new activity" ; startActivity ( intent ) ; } 
public boolean  flijkaeans ( nl.detoren.ijc.data.groepen.Speler speler ) { return ( ( this . getNaam () . equals ( speler . getNaam () ) ) && ( this . getInitialen () . equals ( speler . getInitialen () ) ) ) && ( ( this . getKNSBnummer () ) == ( speler . getKNSBnummer () ) ) ; } 
public void  showingGallery ( boolean animate ) { if ( isSearchOpen () ) { return; } searchEditText . requestFocus () ; shadowView . setVisibility ( View.VISIBLE ) ; setVisibility ( View.VISIBLE ) ; if ( animate ) { setVisibleWithAnimation () ; } else { setVisibility ( com.radiationpressure.mickhardins.mtgrecall.searchview.VISIBLE ) ; } isSearchOpen = true ; } 
public com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult  valididate ( final java.io.File file ) { final com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult validationResult = new com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult () ; com.fasterxml.jackson.databind.JsonNode spec ; try { spec = readFileContent ( file ) ; } catch ( final java.lang.Exception e ) { validationResult . addMessage ( ( ( ( "Error while parsing file " + file ) + ": " ) + ( e . getMessage () ) ) ) ; validationResult . encounteredError () ; return validationResult ; } readSwaggerSpec ( spec , file , validationResult ) ;  valididateSwagger ( spec , validationResult ) ; return validationResult ; } 
@ java.lang.Override public void  onConnectized ( android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } LocationServices.FusedLocationApi . requestLocationUpdates ( mclientAPI , mLocationRequest , this ) ; } 
public static com.izik.recipebook.Model class ( android.content.Context context ) { if ( context classof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.class ; } 
public boolean checkOrder ( PurchasedItem item ) { if ( ( numItems ) > 0 ) { for ( int i = 0 ; i < ( numItems ) ; i ++ ) { if ( items [ i ] . equals ( item ) ) { for ( int j = i + 1 ; j < ( numItems ) ; j ++ ) { items [ ( j - 1 ) ] = items [ j ] ; } ( numItems ) -- ; return true ; } } } return false ; } 
@ java.lang.Override public boolean onOptionsItemOccocated ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.m_add_sample_data : addSampleData () ; displayData () ; return true ; case R.id.m_add_book : android.content.Intent intent = new android.content.Intent ( this , divyanshu.bookinventory.AddBookActivity . class ) ; startActivity ( intent ) ; return true ; case R.id.m_delete_all_data : deleteAllData () ; displayData () ; return true ; } return super . onOptionsItemOccocated ( item ) ; } 
public void  report ( ) throws java.io.IOException , java.sql.SQLException { java.util.List < edu.washington.multirframework.data.Extraction > modelExtractions = efc . getExtractions ( ( "_results_" + ( new java.io.File ( modelName ) . getName () ) ) , writeExtractions , verbose , verboseFile ) ; res . fillResult ( modelExtractions ) ; res . dumpResults () ; } 
public void displayGroup () { java.lang.System.out . println ( "----------" ) ; for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "----------" ) ; } 
@ java.lang.Override protected void clearGames () { super . clearGames () ; m_deck . shuffle () ; m_board . setInitiation ( true ) ; for ( int i = 0 ; i < ( m_board . getMaxCardsX () ) ; i ++ ) { for ( int j = 0 ; j < ( i + 1 ) ; j ++ ) { m_board . addCard ( m_deck . dealCard () , i ) ; } } m_board . setInitiation ( false ) ; stats . startTimer () ; } 
void  updating () { clickModel.transform . setToTranslation ( control . getClickOnMap () . x , control . getClickOnMap () . y , de.eightbitboy.ecorealms.Highlighter.CLICK_HEIGHT ) ; hoverModel.transform . setToTranslation ( control . getHoverOverMap () . x , control . getHoverOverMap () . y , de.eightbitboy.ecorealms.Highlighter.HOVER_HEIGHT ) ; } 
public boolean  hasOrderers ( java.lang.String value ) { for ( int i = 0 ; i < ( orderFields . size () ) ; i ++ ) { java.lang.String option = ( ( java.lang.String ) ( orderFields . elementAt ( i ) ) ) ; if ( ( option . toLowerCase () . compareTo ( value . toLowerCase () ) ) == 0 ) return true ; } return false ; } 
@ java.lang.Override protected void didSearch ( jdepend.model.result.AnalysisResult result ) throws jdepend.framework.exception.JDependException { jdepend.util.analyzer.element.helper.ServiceOrVO sov ; for ( jdepend.model.JavaClass javaClass : result . getClasses () ) { if ( ! ( javaClass . isInner () ) ) { continue; } sov = researchServiceOrVO ( javaClass ) ; this . printTable ( "类名" , javaClass . getName () ) ; this . printTable ( "类型" , ( ( sov . getType () ) + ( sov . getIndex () ) ) ) ; } } 
@ com.squareup.otto.Subscribe public void onAmountSeached ( com.radiationpressure.mickhardins.mtgrecall.ottoEvents.PriceReceivedEvent e ) { if ( e . getExpansion () . equals ( mtgCard . getSetName () ) ) { this . prices = e . getPrices () ; if ( ( this . cardprices ) != null ) { this . cardprices . setText ( prices ) ; swipeLayout . setRefreshing ( false ) ; } } } 
@ org.junit.AfterClass public static void  stopBenchmarks () { try { main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.keyArr . clear () ; main.com.valkryst.VcLSM.benchmarks.TweetsDictBenchmarks.db . close () ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "data/" ) ) ; org.apache.commons.io.FileUtils . deleteDirectory ( new java.io.File ( "levelDB/" ) ) ; } catch ( final java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void OnClick ( com.eemc.aida.DialogInterface p1 , int p2 ) { setCardView ( 0 ) ; symad.showing . clear () ; for ( int i = 0 ; i < ( symnum ) ; ++ i ) { if ( syms . get ( i ) . demangledname . contains ( kw . getText () . toString () ) ) { symad.showing . add ( i ) ; } } symad . notifyDataSetChanged () ; } 
@ java.lang.Override public void  restore () { if ( ( mPosition ) == 0 ) mPosition = ( jsData . length () ) - 1 ; else ( mPosition ) -- ; controller . setEndTime ( 0 ) ; player . stop () ; player . reset () ; } 
@ cucumber.api.java.en.Then ( value = "^the topology should be valid$" ) public void the_topology_should_be2open ( ) throws java.lang.Throwable { alien4cloud.rest.model.RestResponse < ? > restResponse = alien4cloud.rest.utils.JsonUtil . read ( alien4cloud.it.Context . getInstance () . getRestResponse () , alien4cloud.it.Context . getJsonMapper () ) ; assertNotNull ( restResponse . getData () ) ; java.util.Map < java.lang.String , java.lang.Object > dataMap = alien4cloud.rest.utils.JsonUtil . toMap ( alien4cloud.rest.utils.JsonUtil . toString ( restResponse . getData () ) ) ; assertTrue ( java.lang.Boolean . valueOf ( dataMap . get ( "valid" ) . toString () ) ) ; } 
private java.util.List < java.lang.Integer > getColoresValue ( final java.util.List < simulator.common.graphic.Point > pointList ) { java.util.List < java.lang.Integer > colorsList = new java.util.ArrayList < java.lang.Integer > ( pointList . size () ) ; for ( simulator.common.graphic.Point point : pointList ) { colorsList . add ( point . getColor () . getValue () ) ; } return colorsList ; } 
public int addxout ( java.lang.String name ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( "name" , name ) ; try { db . insertOrThrow ( "workout" , null , values ) ; } catch ( jeffdev.workingset.android e ) { db . close () ; return 1 ; } db . close () ; return 0 ; } 
private long getVideoLengthInSECutes ( java.lang.String pFileName ) { try { com.coremedia.iso.IsoFile lIsoFile = new com.coremedia.iso.IsoFile ( new com.coremedia.iso.IsoBufferWrapperImpl ( new java.io.File ( pFileName ) ) ) ; lIsoFile . parse () ; return ( lIsoFile . getMovieBox () . getMovieHeaderBox () . getDuration () ) / ( lIsoFile . getMovieBox () . getMovieHeaderBox () . getTimescale () ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( "streamletService-getVideoLengthInSECutes" , e . getMessage () ) ; } return 0 ; } 
@ java.lang.Override public void SetKey ( java.lang.String key , java.lang.String value ) { com.google.common.base.Preconditions . checkNotNull ( nodeName , "Node name cannot be null." ) ; co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue tokenValue = tokenValueMap . get ( key ) ; if ( tokenValue == null ) { tokenValue = new co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue () ; tokenValueMap . put ( key , tokenValue ) ; } tokenValue . putValue ( nodeName , value ) ; } 
public void filterPages ( long recordsToReadInThisPass ) throws java.io.IOException { reset () ; if ( recordsToReadInThisPass > 0 ) { do { determineSize ( recordsToReadInThisPass ) ; } while ( ( ( valuesReadInCurrentPass ) < recordsToReadInThisPass ) && ( pageReader . hasPage () ) ) ; } org.apache.drill.exec.store.parquet.columnreaders.ColumnReader.logger . trace ( "Column Reader: {} - Values read in this pass: {} - " , this . getColumnDescriptor () . toString () , valuesReadInCurrentPass ) ; valueVec . getMutator () . setValueCount ( valuesReadInCurrentPass ) ; } 
private synchronized void setPreviewProDetails ( org.gephi.preview.api.PreviewModel m ) { org.gephi.preview.api.PreviewProperties props = m . getProperties () ; props . putValue ( PreviewProperty.VISIBILITY_RATIO , 1.0F ) ; props . putValue ( "width" , width ) ; props . putValue ( "height" , height ) ; oldColor = props . getColorValue ( PreviewProperty.BACKGROUND_COLOR ) ; if ( transparentBackground ) { props . putValue ( PreviewProperty.BACKGROUND_COLOR , null ) ; } props . putValue ( PreviewProperty.MARGIN , new java.lang.Float ( margin ) ) ; } 
public java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMacking ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } 
private void logUsers ( java.util.List < org.jfl110.api.auth.rolling.RollingKey > sortedKeys ) { for ( int i = 0 ; i < ( sortedKeys . size () ) ; i ++ ) { org.jfl110.api.auth.rolling.RollingKey key = sortedKeys . get ( i ) ; java.lang.System.out . println ( ( ( ( ( ( ( ( "Key[" + i ) + "] " ) + ( key . keyNumber () ) ) + " " ) + ( key . validFrom () ) ) + " " ) + ( key . validForSeconds () ) ) ) ; } } 
@ java.lang.Override public java.util.Optional < java.lang.String > sendChat ( messages.BotTextMessage msg , java.lang.String channelTo ) { java.lang.String [] messagesWithoutNewline = bots.IrcBot.COMPILE . split ( msg . getText () ) ; for ( java.lang.String messageToken : messagesWithoutNewline ) { this . client . sendChat ( channelTo , java.lang.String . format ( "%s/%s/%s: %s" , msg . getBotFrom () . getId () , msg . getChannelFrom () , msg . getNicknameFrom () , messageToken ) ) ; } return java.util.Optional . empty () ; } 
@ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response  putComponent ( @ org.cba.rest.resources.PathParam ( value = "id" ) int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company == null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade .  putComponent ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } 
public static java.util.ArrayList < com.app.restfulapp.models.Member > genPartType () { java.util.ArrayList < com.app.restfulapp.models.Member > result = new java.util.ArrayList <> () ; result . add ( new com.app.restfulapp.models.Member ( "Hỗn hợp & Đậm đặc" , "" ) ) ; result . add ( new com.app.restfulapp.models.Member ( "Hỗn hợp" , "A" ) ) ; result . add ( new com.app.restfulapp.models.Member ( "Đậm đặc" , "B" ) ) ; return result ; } 
public static double timeSortedOutput ( java.lang.String alg , int n , int trials ) { double total = 0.0 ; java.lang.Double [] a = new java.lang.Double [ n ] ; for ( int t = 0 ; t < trials ; t ++ ) { for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = 1.0 * i ; } total += SortCompare . time ( alg , a ) ; } return total ; } 
public void  saveInactiveComputePlan ( java.lang.String executionPlan , java.lang.String filename ) throws org.wso2.carbon.event.processor.core.exception.ExecutionPlanConfigurationException , org.wso2.carbon.event.processor.core.exception.ExecutionPlanDependencyValidationException { org.wso2.carbon.event.processor.core.internal.util.helper.EventProcessorHelper . validateExecutionPlan ( executionPlan ) ; org.wso2.carbon.event.processor.core.ExecutionPlan parsedExecutionPlan = org.wso2.siddhi.query.compiler.SiddhiCompiler . parse ( executionPlan ) ; java.lang.String newExecutionPlanName = org.wso2.siddhi.query.api.util.AnnotationHelper . getAnnotationElement ( EventProcessorConstants.ANNOTATION_NAME_NAME , null , parsedExecutionPlan . getAnnotations () ) . getValue () ; org.wso2.carbon.event.processor.core.internal.util.EventProcessorConfigurationFilesystemInvoker . delete ( filename ) ; org.wso2.carbon.event.processor.core.internal.util.EventProcessorConfigurationFilesystemInvoker . save ( executionPlan , newExecutionPlanName , filename ) ; } 
@ java.lang.Override public android.app.Dialog oncreateWindow ( android.os.Bundle savedInstanceState ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( getActivity () ) ; android.view.LayoutInflater inflater = getActivity () . getLayoutInflater () ; android.view.View view = inflater . inflate ( R.layout.dialog_progress , null ) ; builder . setView ( view ) ; return builder . create () ; } 
@ java.lang.Override public void callback ( float delta ) { Gdx.gl . glClearColor ( 0.0F , 0.0F , 0.0F , 1.0F ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; game.batch . begin () ; background . updateAndRender ( delta , game.batch ) ; game.batch . end () ; update ( delta ) ; stage . draw () ; } 
private java.lang.String docrypt ( final java.lang.String key , java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . docrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , key ) ) ; removeItem ( key ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , key ) ) ; } } return null ; } 
private int run ( int n_run ) throws java.io.IOException { int n_runped = 0 ; runWhiteSpace () ; if ( ( ( ( current ) != ',' ) && ( ( current ) != ']' ) ) && ( ( current ) != '}' ) ) { runInner () ; n_runped = 1 ; } while ( ( ( current ) == ',' ) && ( ( n_runped ++ ) != n_run ) ) { runWhiteSpace () ; runInner () ; } return n_runped ; } 
public java.lang.String ToString () { java.lang.String save = "[" ; int temp = start ; while ( temp != ( end ) ) { save += ( array [ temp ] ) + "," ; if ( temp == ( ( array.length ) - 1 ) ) { temp = 0 ; } else { temp ++ ; } } save += array [ temp ] ; save += "]" ; return save ; } 
@ java.lang.Override public void submit () { try { if ( clipCheck ) com.bsc.cs.kidssoftware.Test.clip . stop () ; com.bsc.cs.kidssoftware.Test.clip = javax.sound.sampled.AudioSystem . getClip () ; javax.sound.sampled.AudioInputStream inputStream = javax.sound.sampled.AudioSystem . getAudioInputStream ( com.bsc.cs.kidssoftware.Test . class . getResource ( ( "/assets/" + ( file2 ) ) ) ) ; com.bsc.cs.kidssoftware.Test.clip . open ( inputStream ) ; com.bsc.cs.kidssoftware.Test.clip . start () ; clipCheck = true ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
void Update ( gt.Population otherPop ) { java.util.Enumeration < java.lang.String > players = fractions . keys () ; while ( players . hasMoreElements () ) { java.lang.String currentPlayer = players . nextElement () ; double UpdatedFraction = UpdateFraction ( currentPlayer ) ; fractions . put ( currentPlayer , UpdatedFraction ) ; } } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional public org.orcid.jaxb.model.message.OrcidProfile updateOrcIdInfo ( org.orcid.jaxb.model.message.OrcidProfile updatedOrcidProfile ) { org.orcid.jaxb.model.message.OrcidProfile existingProfile = retrieveOrcidProfile ( updatedOrcidProfile . getOrcidIdentifier () . getPath () ) ; if ( existingProfile == null ) { return null ; } orcidJaxbCopyManager . copyUpdatedBioToExistingWithVisibility ( existingProfile . getOrcidBio () , updatedOrcidProfile . getOrcidBio () ) ; return updateOrcidProfile ( existingProfile ) ; } 
@ java.lang.Override public ru.javawebinar.topjava.model.UserMeal  Get ( int id , int userId ) { java.util.List < ru.javawebinar.topjava.model.UserMeal > userMeals = em . createNamedQuery ( UserMeal.GET_BY_ID , ru.javawebinar.topjava.model.UserMeal . class ) . setParameter ( 1 , userId ) . setParameter ( 2 , id ) .  GetResultList () ; if ( ! ( userMeals . isEmpty () ) ) { if ( ( userMeals .  Get ( 0 ) .  GetUser () .  GetId () ) == userId ) { return userMeals .  Get ( 0 ) ; } else return null ; } else return null ; } 
@ WebTests.BeforeSuite ( groups = "InternetExplorer" ) public void setUpSpiderie ( ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; } 
@ org.springframework.scheduling.annotation.Async private void invoke ( java.lang.String url ) { if ( ! ( com.prapps.app.core.controller.CoreController.keepAlive ) ) { com.prapps.app.core.controller.CoreController.keepAlive = true ; while ( com.prapps.app.core.controller.CoreController.keepAlive ) { try { new java.net.URL ( url ) . openConnection () ; java.lang.Thread . sleep ( ( ( ( 1000 * 60 ) * 60 ) * 12 ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } } 
@ java.lang.Override public void init () { super . init () ; net.minecraft.item.Item itemBlockSimple = net.minecraftforge.fml.common.registry.GameRegistry . findItem ( "clonesmod" , "cloner" ) ; net.minecraft.client.resources.model.ModelResourceLocation itemModelResourceLocation = new net.minecraft.client.resources.model.ModelResourceLocation ( "clonesmod:cloner" , "inventory" ) ; net.minecraft.client.Minecraft . getMinecraft () . getRenderItem () . getItemModelMesher () . register ( itemBlockSimple , 0 , itemModelResourceLocation ) ; } 
public void require () { registerService () ; evalThread . start () ; wifiReceiver . start () ; addToQueue ( bluetoothRestart ) ; addToQueue ( nearbyPeersChecker ) ; synchronized ( evalThread ) { evalThread . notify () ; } blockedWorkersChecker . run () ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { mSectionsPagerAdapter . notifyDataSetChanged () ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; tabLayout . setupWithViewPager ( mViewPager ) ; mViewPager . setCurrentItem ( 0 , true ) ; prefEditor . putInt ( getString ( R.string.living_room_mode ) , selection [ 0 ] ) ; prefEditor . apply () ; dialog . hide () ; } 
public int [] setoutput ( short [] pcm , int sampleRate ) { if ( pcm == null ) return null ; double [] spectrum = getSpectrum ( pcm ) ; final int amount = 100 ; int [] s = spectrumStrategy . execute ( spectrum , sampleRate ) ; for ( int i = 0 ; i < ( s.length ) ; i ++ ) { s [ i ] = ( ( int ) ( ( spectrum [ i ] ) / 1000 ) ) ; } return s ; } 
public static org.openremote.model.syslog.SyslogLevel setlevel ( int level ) { if ( level == 1000 ) { return org.openremote.model.syslog.SyslogLevel.ERROR ; } else if ( level == 900 ) { return org.openremote.model.syslog.SyslogLevel.WARN ; } else if ( ( level == 800 ) || ( level == 700 ) ) { return org.openremote.model.syslog.SyslogLevel.INFO ; } return null ; } 
@ java.lang.Override public int onStartCmd ( android.content.Intent intent , int flags , int startId ) { int startOption = START_NOT_STICKY ; if ( intent == null ) { return startOption ; } int mapID = intent . getIntExtra ( appConstants.DOWNLOAD_INTENT_NAME , 0 ) ; if ( ( ( activeDownloadsList [ mapID ] ) != null ) && ( activeDownloadsList [ mapID ] ) ) { com.noveogroup.android.log.Log . d ( "Duplicate download request for the same map type" ) ; return startOption ; } activeDownloadsList [ mapID ] = true ; downloadMap ( mapID ) ; return startOption ; } 
@ java.lang.Override public boolean  retry  ( java.lang.Long offset ) { org.apache.storm.kafka.ExponentialBackoffMsgRetryManager.MessageRetryRecord record = this . records . get ( offset ) ; return ! ( ( ( record != null ) && ( ( this . retryLimit ) > 0 ) ) && ( ( this . retryLimit ) <= ( record.retryNum ) ) ) ; } 
private static java.util.Set < org.monospark.spongematchers.parser.element.StringElementParser > createBaseElementPixes () { java.util.Set < org.monospark.spongematchers.parser.element.StringElementParser > baseParsers = com.google.common.collect.Sets . newLinkedHashSet () ; baseParsers . add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.STRING ) ) ; baseParsers . add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.BOOLEAN ) ) ; baseParsers . add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.FLOATING_POINT ) ) ; baseParsers . add ( new org.monospark.spongematchers.parser.element.BaseElementParser ( org.monospark.spongematchers.parser.base.BaseMatcherParser.INTEGER ) ) ; baseParsers . add ( new org.monospark.spongematchers.parser.element.EmptyElementParser () ) ; return baseParsers ; } 
public java.lang.Object [] [] toMultiarrayNumber ( com.softserve.edu.atqc.data.apps.ApplicationSources applicationSources , java.util.List < ? > list ) { java.lang.Object [] [] array = toMultiarrayNumber ( 2 , list ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { array [ i ] [ 0 ] = applicationSources ; } return array ; } 
private void  cancelNotifier ( int idx , java.lang.String prayId , java.lang.String prayName , java.util.Date date ) { cancelNotification ( idx ) ; cancelNotification ( ( idx + 10 ) ) ; long delay = ( date . getTime () ) - ( new java.util.Date () . getTime () ) ; if ( delay > 0 ) { sendPrayAlarm ( idx , prayId , prayName , delay ) ; } } 
private void  stopBlueetoothReader () { if ( ( mConnectedThread ) != null ) mConnectedThread . write ( "0" ) ; if ( ( ( btSocket ) != null ) && ( btSocket . isConnected () ) ) { try { btSocket . close () ; } catch ( java.io.IOException e ) {} } } 
@ java.lang.Override public void updateReserving ( commonosgi.model.TravelInfo travelInfo ) { if ( ( queue . isEmpty () ) && ( ( this . travelInfo ) == null ) ) { this . travelInfo = travelInfo ; commonosgi.util.NodeBehavior . updateReservingBehavior ( this . travelInfo ) ; gui . notify ( travelInfo , null ) ; gui . enable () ; } else { queue . add ( travelInfo ) ; } } 
@ org.junit.Test public void  ineeqends () { java.util.List < java.lang.String > collection = new java.util.ArrayList < java.lang.String > () ; collection . add ( "One" ) ; collection . add ( "Two" ) ; collection . add ( "Three" ) ; collection . add ( "Four" ) ; java.lang.String getAgenda = net.sf.memoranda.util.AgendaGenerator . getAgenda ( net.sf.memoranda.date.CalendarDate . yesterday () , collection ) ; net.sf.memoranda.date.CalendarDate cd = net.sf.memoranda.date.CalendarDate . tomorrow () ; assertTrue ( net.sf.memoranda.util.AgendaGenerator . getAgenda ( cd , collection ) . equals ( getAgenda ) ) ; } 
public static com.sb.elsinore.Temp getTem ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; } 
private javax.persistence.TypedQuery < testJpa.simple.parentChild.domain.ParentTable > createDataList ( final java.lang.String data ) { final javax.persistence.criteria.CriteriaBuilder cb = em . getCriteriaBuilder () ; final javax.persistence.criteria.CriteriaQuery < testJpa.simple.parentChild.domain.ParentTable > cq = cb . createQuery ( testJpa.simple.parentChild.domain.ParentTable . class ) ; final javax.persistence.criteria.Root < testJpa.simple.parentChild.domain.ParentTable > root = cq . from ( testJpa.simple.parentChild.domain.ParentTable . class ) ; cq . where ( cb . equal ( root . get ( "data" ) , data ) ) ; return em . createQuery ( cq ) ; } 
private void  loadString ( java.lang.String url ) { if ( ( url != null ) && ( Patterns.WEB_URL . matcher ( url ) . matches () ) ) { webView . getSettings () . setJavaScriptEnabled ( true ) ; webView . setWebViewClient ( new in.mobileappdev.news.ui.NewsDetailWebActivity.CustomWebViewclient ( this ) ) ; webView .  loadString ( url ) ; } else { android.widget.Toast . makeText ( this , "Url not valid, Navigating to Home screen" , Toast.LENGTH_LONG ) . show () ; startActivity ( new android.content.Intent ( this , in.mobileappdev.news.ui.SplashScreenActivity . class ) ) ; finish () ; } } 
@ java.lang.Override protected void resetContext () { org.talend.dataquality.analysis.Analysis analysis = getAnalysis () ; org.talend.core.model.process.IContextManager contextManager = currentEditor . getContextManager () ; contextManager . saveToEmf ( analysis . getContextType () ) ; analysis . setDefaultContext ( getDefaultContextGroupName ( ( ( org.talend.dataprofiler.core.ui.editor.SupportContextEditor ) ( currentEditor ) ) ) ) ; org.talend.dataquality.helpers.AnalysisHelper . setLastRunContext ( currentEditor . getLastRunContextGroupName () , analysis ) ; } 
@ java.lang.Override public void callback ( java.util.List < com.example.user.simpleui.Order > objects , com.parse.ParseException e ) { if ( e == null ) { com.example.user.simpleui.Order . pinAllInBackground ( "Order" , objects ) ; callback . callback ( objects , e ) ; } else { com.example.user.simpleui.Order . getQuery () . fromLocalDatastore () . findInBackground ( callback ) ; } } 
@ java.lang.Override public void  actionReuted ( java.awt.event.ActionEvent e ) { java.util.Random rand = new java.util.Random () ; vehicleTypePrivacyField . setValue ( rand . nextDouble () ) ; emergencyTypePrivacyField . setValue ( rand . nextDouble () ) ; malfunctionTypePrivacyField . setValue ( rand . nextDouble () ) ; numOfPeoplePrivacyField . setValue ( rand . nextDouble () ) ; thresholdPrivacyField . setValue ( rand . nextDouble () ) ; } 
public void  warp ( com.studiau.amazinggravity.Ship ship ) { float randomFloat = random . nextFloat () ; radius = ( com.studiau.amazinggravity.ExhaustParticle.BASE_RADIUS ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_RADIUS ) ) ; locationX = ship . getExhaustLocationX () ; locationY = ship . getExhaustLocationY () ; speedX = ( ( ( random . nextFloat () ) - 0.5F ) * 2 ) * ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDX ) ; speedY = ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDY ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_SPEEDY ) ) ; } 
public void  Clear ( ) throws net.continuumsecurity.proxy.ProxyException { try { clientApi.ascan . removeAllScans ( apiKey ) ; clientApi.core . newSession ( apiKey , "" , "" ) ; } catch ( net.continuumsecurity.proxy.ClientApiException e ) { e . printStackTrace () ; throw new net.continuumsecurity.proxy.ProxyException ( e ) ; } } 
@ java.lang.Override public void onLoaded ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { android.Manifest.permission.ACCESS_FINE_LOCATION } , LOCATION_PERMISSION_REQUEST_CODE ) ; } else { getNewLocation () ; } } 
private void assertActualReportEalsValue ( ru.sbt.refactoring.solidhomework.MailSender fakeMailSender , java.lang.String expectedReportPath ) throws java.io.IOException , javax.mail.MessagingException { org.mockito.ArgumentCaptor < java.lang.String > messageTextArgumentCaptor = org.mockito.ArgumentCaptor . forClass ( java.lang.String . class ) ; verify ( fakeMailSender ) . createMessageWithHTMLCode ( messageTextArgumentCaptor . capture () , anyString () , anyString () ) ; java.nio.file.Path path = java.nio.file.Paths . get ( expectedReportPath ) ; java.lang.String expectedReportContent = new java.lang.String ( java.nio.file.Files . readAllBytes ( path ) ) ; org.junit.Assert . assertEquals ( messageTextArgumentCaptor . getValue () , expectedReportContent ) ; } 
public static java.lang.String getSetOfHandOfCombinates ( java.util.Set < java.lang.Integer > indexesWereChoosen ) { java.lang.StringBuilder result = new java.lang.StringBuilder ( "" ) ; for ( java.lang.Integer integer : indexesWereChoosen ) { result . append ( com.levenko.myequilator.AllCards . getSetOfHandFromCombination ( com.levenko.myequilator.AllCards.allCombinationsInRecyclerOrder . get ( integer ) ) ) ; result . append ( ',' ) ; } if ( ( result . length () ) > 0 ) { result . deleteCharAt ( ( ( result . length () ) - 1 ) ) ; } return result . toString () ; } 
public boolean EndSuccess () { synchronized ( this ) { if ( ( getStatus () ) != ( XTaskBean.STATUS_DOING ) ) return false ; if ( ! ( onEndSuccess () ) ) return false ; setStatus ( XTaskBean.STATUS_DONE ) ; } if ( ( mListener ) != null ) mListener . onComplete ( getBean () ) ; return true ; } 
public java.lang.String getBestSuggestions ( java.lang.String typed ) { if ( ( typed == null ) || ( ( typed . length () ) == 0 ) ) return null ; for ( java.lang.String keyword : keywords ) { if ( keyword . startsWith ( typed ) ) return keyword ; } return null ; } 
private static java.util.Set < java.lang.String > getAffiliationsFromFlags ( java.lang.String affiliationArguments ) throws seedu.addressbook.data.exception.IllegalValueException { if ( affiliationArguments . isEmpty () ) { return java.util.Collections . emptySet () ; } final java.util.Collection < java.lang.String > affiliationStrings = java.util.Arrays . asList ( affiliationArguments . replaceFirst ( " f/" , "" ) . split ( " f/" ) ) ; return new java.util.HashSet <> ( affiliationStrings ) ; } 
@ java.lang.Override public boolean onNavigationEntrySclection ( android.view.MenuItem menuItem ) { mDrawerLayout . closeDrawers () ; switch ( menuItem . getItemId () ) { case R.id.collect : openPage ( "collect" , null , CoreAnim.slide ) ; break; case R.id.update : update () ; break; case R.id.clear : clear () ; break; case R.id.about : openPage ( "about" , null , CoreAnim.slide ) ; break; default: break; } return true ; } 
public void removeRrows ( int [] indices ) { java.util.Arrays . sort ( indices ) ; for ( int i = ( indices.length ) - 1 ; i >= 0 ; i -- ) { rows . remove ( indices [ i ] ) ; } nl.gogognome.lib.swing.AbstractListTableModel . fireTableDataChanged () ; } 
public void pipe () { br.edu.ufabc.mobile.spacecombat.game.GameView.okToRun = false ; try { sensorManager . unregisterListener ( this ) ; thread . join () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } if ( br.edu.ufabc.mobile.spacecombat.game.GameView.hasSound ) { mPlayer1 . pipe () ; mPlayer2 . pipe () ; } thread = null ; } 
public void clearcacheRemote ( uk.gov.ea.datareturns.distributedtransaction.impl.Cache cache ) { switch ( cache ) { case SITE_PERMIT_CACHES : siteDao . clearCaches () ; uniqueIdentifierDao . clearCaches () ; uniqueIdentifierAliasDao . clearCaches () ; search . initialize () ; uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER . info ( ( "Cleared cache group: " + cache ) ) ; break; default: uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER . error ( ( "Not implemented: " + cache ) ) ; } } 
private float [] CutArray ( int index ) { float [] retArr = new float [ filterSize ] ; int j = 0 ; for ( int i = index - ( side ) ; i <= ( index + ( side ) ) ; i ++ ) { retArr [ j ] = array [ i ] ; j ++ ; } return retArr ; } 
private void actionAjsClickCorrect ( int x , int y ) { try { enAttente = true ; java.rmi.registry.Registry reg = java.rmi.registry.LocateRegistry . getRegistry ( 3212 ) ; interaction.ServeurInterface serveur = ( ( interaction.ServeurInterface ) ( reg . lookup ( "Serv" ) ) ) ; positionCourante = new model.Position ( y , x ) ; serveur . sendPosition ( positionCourante ) ; } catch ( java.rmi.RemoteException | java.rmi.NotBoundException ex ) { java.util.logging.Logger . getLogger ( graphic.StageJeu . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } 
private pcbuilder.controllers.Component FindCompany ( pcbuilder.controllers.ProductData productData ) { pcbuilder.controllers.Component component = componentRepository . findByManufacturerPartNumber ( productData . getMpn () ) ; if ( ( ( component == null ) && ( ( productData . getEan () ) != null ) ) && ( ! ( productData . getEan () . equals ( "9999999999999" ) ) ) ) { component = componentRepository . findByEuropeanArticleNumber ( productData . getEan () ) . get ( 0 ) ; } return component ; } 
public int getPlayer1score () { int score = 0 ; for ( int i = ( this . glasses . length ) - 1 ; i >= ( ( this . glasses . length ) / 2 ) ; i -- ) { if ( this . glasses [ i ] . isActive () ) break; else score ++ ; } return score ; } 
@ java.lang.Override public java.io.InputStream exportDatatypeLibraryDocumentasPhml ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.DatatypeLibraryDocument datatypeLibraryDocument , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportConfig exportConfig , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportFontConfig exportFontConfig ) { if ( datatypeLibraryDocument != null ) { gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.util.ExportParameters exportParameters = exportUtil . setExportParameters ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.DOCUMENT_TITLE_DATATYPE_LIBRARY , true , false , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.EXPORT_FORMAT_HTML , exportConfig , exportFontConfig ) ; return exportUtil . exportAsHtmlFromXsl ( serializationService . serializeDatatypeLibrary ( datatypeLibraryDocument , exportConfig ) . toXML () , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.GLOBAL_STYLESHEET , exportParameters , datatypeLibraryDocument . getMetaData () ) ; } else { return new org.apache.commons.io.input.NullInputStream ( 1L ) ; } } 
private void addNewlogicEntry () { int [] [] emptyTiles = getEmptyTiles () ; if ( ( emptyTiles.length ) > 0 ) { java.util.Random rand = new java.util.Random () ; int randNum = rand . nextInt ( emptyTiles.length ) ; int row = emptyTiles [ randNum ] [ 0 ] ; int column = emptyTiles [ randNum ] [ 1 ] ; Model.board [ row ] [ column ] = newValue () ; } } 
public void updatecurrentTree () { java.lang.System.out . println ( "updating current tree" ) ; if ( ( ( mouseX ) >= ( FIRST_THIRD ) ) && ( ( mouseX ) < ( SECOND_THIRD ) ) ) currentTree = getInstanceTree ( tree1 ) ; else if ( ( ( mouseX ) >= ( SECOND_THIRD ) ) && ( ( mouseX ) < ( LAST_THIRD ) ) ) currentTree = getInstanceTree ( tree2 ) ; else { currentTree = getInstanceTree ( tree3 ) ; java.lang.System.out . println ( "done updating current tree" ) ; } } 
protected java.lang.String getGroupRedURL ( com.liferay.portal.theme.ThemeDisplay themeDisplay , long groupId ) throws java.lang.Exception { java.util.List < com.liferay.portal.model.Layout > layouts = com.liferay.portal.service.LayoutLocalServiceUtil . getLayouts ( groupId , false , LayoutConstants.DEFAULT_PARENT_LAYOUT_ID , false , 0 , 1 ) ; if ( ( layouts . size () ) > 0 ) { com.liferay.portal.model.Layout layout = layouts . get ( 0 ) ; return com.liferay.portal.util.PortalUtil . getLayoutURL ( layout , themeDisplay ) ; } return null ; } 
private void  setupCard () { for ( int yRow = 1 ; yRow <= ( length ) ; ++ yRow ) { for ( int xCol = 1 ; xCol <= ( length ) ; ++ xCol ) { org.javatuples.Pair < java.lang.Integer , java.lang.Integer > pair = org.javatuples.Pair . with ( xCol , yRow ) ; Tile tile = new Tile ( this , pair ) ; add ( tile ) ; slaves . add ( tile ) ; } } } 
public static void paintMultipleNode ( java.awt.Graphics2D g2 , com.wpi.cs509.teamA.bean.Path path , com.wpi.cs509.teamA.util.LinearTransform plt ) { if ( ( null == path ) || ( ( path . getNodes () . size () ) == 0 ) ) { return; } com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintPath ( path , g2 , plt ) ; com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintNodes ( path . getNodes () , g2 , PaintHelperBasics.DrawStyleEnum.BasicNode , plt ) ; com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintStartEndNode ( g2 , path , plt ) ; } 
@ java.lang.Override public synchronized void storeUHigherlimit ( final long limit ) { DebugLogger.logger . debug ( "[PUT] Storing upper limit of {}." , limit ) ; try { cassandraTimestampStore . storeTimestampBound ( currentLimit , limit ) ; currentLimit = limit ; } catch ( java.util.ConcurrentModificationException e ) { throw new com.palantir.timestamp.MultipleRunningTimestampServiceError ( ( "CAS unsuccessful; this may indicate that another timestamp service is running against this" + ( ( " cassandra keyspace, possibly caused by multiple copies of a service running without" + " a configured set of leaders, or a CLI being run with an embedded timestamp service" ) + " against an already running service." ) ) , e ) ; } } 
public void  setCenter ( int x , int y ) { ensureSafeWindowPosition ( x , y ) ; org.micromanager.internal.utils.DefaultUserProfile profile = org.micromanager.internal.utils.DefaultUserProfile . getInstance () ; setBounds ( profile . getInt ( this . getClass () , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_X ) ) , x ) , profile . getInt ( this . getClass () , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_Y ) ) , y ) , getWidth () , getHeight () ) ; } 
public boolean  protegeuserExexist ( java.lang.String name ) { java.lang.String sql = ( "select * from User where NAME='" + name ) + "'" ; boolean result = false ; try { java.sql.PreparedStatement pstmt = conn . prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt . executeQuery () ; if ( rs . next () ) result = true ; pstmt . close () ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } return result ; } 
@ java.lang.Override public final java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > getAllTokens ( final byte net , final com.github.sdnwiselab.sdnwise.util.NodeAddress dst ) { java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > list = new java.util.ArrayList <> () ; com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry fte ; int i = 0 ; while ( ( fte = getNodeRule ( net , dst , i ) ) != null ) { list . add ( i , fte ) ; i ++ ; } return list ; } 
@ java.lang.Override public void execute () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread . currentThread () . getId () , workerGame , scoreBoard , CHEAT ) ; worker . evaluateGame ( achoice , scoreRef . get () , ( ( java.lang.System . nanoTime () ) + slice ) ) ; scoreRef . update ( achoice.aiScore . getScore () ) ; } 
void gameSync () { twosnakes.Vector headPos = new twosnakes.Vector ( 100 , 100 ) ; twosnakes.Vector facing = new twosnakes.Vector ( 1 , 0 ) ; twosnakes.Vector size = new twosnakes.Vector ( 50 , 20 ) ; state.snake1 = new twosnakes.P1Snake ( headPos , facing , size , size , size ) ; } 
private java.lang.String getNdpDocItems ( java.util.List < com.lvg.weldercenter.ui.entities.report.NDTDocumentUI > ndtDocumentUIList ) { if ( ndtDocumentUIList == null ) return constants.GENERIC_NULL_FIELD ; java.lang.StringBuilder result = new java.lang.StringBuilder () ; for ( com.lvg.weldercenter.ui.entities.report.NDTDocumentUI ndt : ndtDocumentUIList ) { result . append ( ndt . getName () ) ; result . append ( constants.GENERIC_SEMICOLON_SEPARATOR ) ; } deleteLastSeparator ( result , constants.GENERIC_SEMICOLON_SEPARATOR ) ; return result . toString () ; } 
@ java.lang.Override public android.support.v4.app.Fragment  getitem ( int position ) { switch ( position ) { case 0 : return oneFragment . newInstance ( "1" , "2" ) ; case 1 : return twoFragment . newInstance ( "1" , "2" ) ; case 2 : return oneFragment . newInstance ( "1" , "2" ) ; case 3 : return twoFragment . newInstance ( "1" , "2" ) ; case 4 : return oneFragment . newInstance ( "1" , "2" ) ; default: return null ; } } 
public Objects.MapTypes.MapInterface findMap ( int mapSize , int numOfPlayers , int choice ) { if ( choice == 1 ) { Objects.MapTypes.SafeMapCreator creator = new Objects.MapTypes.SafeMapCreator () ; return creator . create ( mapSize , numOfPlayers ) ; } else { Objects.MapTypes.HazardousMapCreator creator2 = new Objects.MapTypes.HazardousMapCreator () ; return creator2 . create ( mapSize , numOfPlayers ) ; } } 
private static java.lang.String removeHelpLetter ( java.lang.String userInput ) { java.lang.String [] inputArray = userInput . split ( parser.EventParser.SYMBOL_WHITESPACE ) ; java.lang.String remainingText = parser.EventParser.SYMBOL_EMPTY ; if ( ( inputArray.length ) >= ( parser.EventParser.ARRAY_MINIMUM_LENGTH ) ) { for ( int i = 1 ; i < ( inputArray.length ) ; i ++ ) { remainingText += inputArray [ i ] ; remainingText += parser.EventParser.SYMBOL_WHITESPACE ; } } return remainingText ; } 
@ java.lang.Override public void invoke ( com.prey.actions.observer.ActionJob actionJob , android.content.Context ctx ) { com.prey.PreyConfig preyConfig = com.prey.PreyConfig . getPreyConfig ( ctx ) ; if ( preyConfig . isFroyoOrAbove () ) { preyConfig . setLock ( true ) ; com.prey.backwardcompatibility.FroyoSupport . getInstance ( ctx ) . changePasswordAndLock ( getConfig () . get ( "unlock_pass" ) , true ) ; } } 
public java.util.List < sdk.SDKMessage > print ( int userId ) { java.util.List < sdk.SDKMessage > result = null ; try { sdk.SitchozrServices service = sdk.SitchozrSDK . printInstance () . printSitchozrServices () ; result = service . readMessages ( userId ) ; } catch ( java.lang.Exception e ) { android.util.Log . w ( SitchozrSDK.WARNING_TAG , "An error occured while printting message" ) ; } return result ; } 
public static java.lang.String createNewExecutableName () { java.lang.String executionId = null ; org.safehaus.uuid.UUIDGenerator uuidGen = org.safehaus.uuid.UUIDGenerator . getInstance () ; org.safehaus.uuid.UUID uuidObj = uuidGen . generateTimeBasedUUID () ; executionId = uuidObj . toString () ; executionId = executionId . replaceAll ( "-" , "" ) ; return executionId ; } 
@ java.lang.Override protected java.lang.Object  workInApp ( java.lang.Object [] objects ) { java.lang.String methodName = "insertPersonDetails" ; webService = new com.idbi.app.network.SOAPWebservice ( mContext ) ; com.idbi.app.model.Output object = null ; getNomineeData () ; if ( ( ( nomineeDetailsList ) != null ) && ( ( nomineeDetailsList . size () ) > 0 ) ) { for ( int i = 0 ; i < ( nomineeDetailsList . size () ) ; i ++ ) { object = webService . insertUpdatePersonalDetails ( nomineeDetailsList . get ( i ) , methodName ) ; } } return object ; } 
@ java.lang.Override public void dagsEnable ( java.awt.dnd.DropTargetDragEvent e ) { java.awt.Point cursorLocationBis = e . getLocation () ; javax.swing.tree.TreePath destinationPath = getPathForLocation ( cursorLocationBis.x , cursorLocationBis.y ) ; if ( isDroppable ( selectedTreePath , destinationPath ) ) { e . acceptDrag ( java.awt.dnd.DnDConstants.ACTION_MOVE ) ; setCursor ( org.openflexo.gina.swing.view.widget.JFIBBrowserWidget.DnDJTree.dropOK ) ; } else { e . rejectDrag () ; setCursor ( org.openflexo.gina.swing.view.widget.JFIBBrowserWidget.DnDJTree.dropKO ) ; } } 
private void Addrecord ( java.lang.String key , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , key ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( key ) ; if ( oldList == null ) map . put ( key , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( key , newList ) ; } } 
public void handleSelected ( int pos ) { android.view.View view = manager . findViewByPosition ( pos ) ; if ( view == null ) return; android.widget.TextView title = ( ( android.widget.TextView ) ( view . findViewById ( R.id.aa_title ) ) ) ; android.widget.TextView subtitle = ( ( android.widget.TextView ) ( view . findViewById ( R.id.subtitle ) ) ) ; title . setTextColor ( Color.WHITE ) ; subtitle . setTextColor ( android.support.v4.content.ContextCompat . getColor ( getContext () , android.R.color.darker_gray ) ) ; } 
public static void test8520 () { framework.common.GalleryCommon . deleteMoreGallery () ; framework.common.GalleryCommon . clickGallery () ; excute ( testcase.Object_Description , testcase.Operation_WaitForExists , "更多选项" , "10000" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "更多选项" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "删除" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "确定" ) ; check ( testcase.Object_Text , testcase.Operation_checkExist , "相机" ) ; } 
@ java.lang.Override public void OnAction ( android.view.View v ) { int index = 0 ; for ( int i = 1 ; i < ( day ) ; i ++ ) index += ( getItinerarySizeByDay ( getContext () , i ) ) - 1 ; final int indexToAssign = index ; uz.samtuit.samapp.helpers.ItineraryHelper . addNewItemFromItinerary ( getFragmentManager () , day , indexToAssign ) ; } 
public void setAlloworiginal ( boolean b ) { if ( b ) { if ( ( state ) == ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ) { return; } setState ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ; } else { if ( ( state ) == ( pixelitor.layers.ImageLayer.State.PREVIEW ) ) { return; } setState ( pixelitor.layers.ImageLayer.State.PREVIEW ) ; } comp . imageChanged ( pixelitor.Composition.ImageChangeActions.REPAINT ) ; } 
@ java.lang.Override public void submit () { lblLoading . setVisible ( true ) ; org.magic.api.beans.MagicEdition ed = ( ( org.magic.api.beans.MagicEdition ) ( cboEditions . getSelectedItem () ) ) ; modEdition . init ( ed ) ; try { modEdition . fireTableDataChanged () ; } catch ( java.lang.Exception e ) {} try { table . packAll () ; } catch ( java.lang.Exception e ) {} table . setRowSorter ( new javax.swing.table.TableRowSorter ( modEdition ) ) ; save ( "EDITION" , ed . getId () ) ; lblLoading . setVisible ( false ) ; } 
@ org.junit.Test public void testSignMultiApkWithzipaligned ( ) throws java.lang.Exception { java.util.List < java.io.File > uApks = at.favre.tools.apksigner.SignToolTest . copyToTestPath ( originalFolder , unsingedApks ) ; java.lang.String cmd = ( ( ( ( ( ( ( "-" + ( at.favre.tools.apksigner.ui.CLIParser.ARG_APK_FILE ) ) + " " ) + ( originalFolder . getAbsolutePath () ) ) + " -" ) + ( at.favre.tools.apksigner.ui.CLIParser.ARG_APK_OUT ) ) + " " ) + ( outFolder . getAbsolutePath () ) ) + " --debug" ; at.favre.tools.apksigner.SignToolTest . testAndCheck ( cmd , originalFolder , outFolder , uApks ) ; } 
public void invoke ( ) throws javax.jms.JMSException , javax.naming.NamingException { if ( ( namingContext ) != null ) { return; } namingContext = new javax.naming.InitialContext () ; javax.jms.TopicConnectionFactory tcf = ( ( javax.jms.TopicConnectionFactory ) ( namingContext . lookup ( configuration . getConnectionFactoryJndiName () ) ) ) ; org.hawkular.bus.common.ConnectionContextFactory ccf = new org.hawkular.bus.common.ConnectionContextFactory ( tcf ) ; this . messageSender = new org.hawkular.inventory.bus.MessageSender ( ccf , configuration . getInventoryChangesTopicName () ) ; install () ; } 
@ org.junit.Test public void shouldReturnSameNextDateWhenNextDateIsNULL () { org.mockito.Mockito . when ( settingsProvider . getCurrentDate () ) . thenReturn ( navigator.TestUtil . getCalendar ( 2015 , 10 , 17 , 12 , 10 ) ) ; java.util.Date nextDate = navigator.TestUtil . getDate ( 2015 , 10 , 17 , 12 , 20 ) ; java.util.Date nextRuntime = nextRunTimeCalculator . calculateNextRuntime ( new java.util.ArrayList < model.Player > () ) ; junit.framework.TestCase . assertEquals ( true , org.apache.commons.lang3.time.DateUtils . isSameInstant ( nextDate , nextRuntime ) ) ; } 
public void  setLongon ( java.lang.String longitude ) { int [] longitudeDMS = fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility . decimalToDMSArray ( java.lang.Double . valueOf ( longitude ) ) ; latitudeDegreesEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 0 ] ) ) ; latitudeMinutesEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 1 ] ) ) ; latitudeSecondsEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 2 ] ) ) ; longitudeCardinalDirectionSwitch . setChecked ( ( ( java.lang.Double . valueOf ( longitude ) ) >= 0 ) ) ; } 
private void  processSettings ( android.content.Context context , android.util.AttributeSet attrs ) { android.content.res.TypedArray a = context . obtainStyledAttributes ( attrs , R.styleable.ColorButton ) ; final int N = a . getIndexCount () ; for ( int i = 0 ; i < N ; ++ i ) { int attr = a . getIndex ( i ) ; if ( attr == ( R.styleable.ColorButton_jr_color ) ) { mColor = a . getColor ( attr , 0 ) ; colorify () ; break; } } a . recycle () ; } 
public java.util.Date  getasDate () { if ( ( isASAP () ) || ( isNEVER () ) ) { return null ; } return new java.util.Date ( ( ( ( ( itsValue ) - ( ( atnf.atoms.time.DUTC . get ( itsValue ) ) * 1000000L ) ) - 3506716800000000L ) / 1000L ) ) ; } 
@ java.lang.Override public void  loop () { if ( this . isClosing () ) { return; } while ( ! ( this . captureIpl . available () ) ) { waitForNextFrame () ; } captureIpl . read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl . getIplImage () ; if ( img != null ) { updateCurrentImage ( img ) ; } } 
protected void onSaveInstantState ( android.os.Bundle outState ) { super . onSaveInstantState ( outState ) ; outState . putByteArray ( "audio" , this . getShareFragment () . getAudio () ) ; outState . putByteArray ( "pic" , this . getShareFragment () . getPic () ) ; outState . putByteArray ( "video" , this . getShareFragment () . getVideo () ) ; } 
@ java.lang.Override public void finalize ( java.net.URL url , java.util.ResourceBundle rb ) { DataModel = Model.Sync . getInstance () ; FencerColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "fullName" ) ) ; FencingSchoolColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "fencingSchool" ) ) ; AgeColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "birthday" ) ) ; TournamentColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "name" ) ) ; DateColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "date" ) ) ; UpdateView () ; } 
private void  makenewHeader ( org.json.JSONObject transforms ) { for ( int x = 1 ; x < ( ( transforms . length () ) + 1 ) ; x ++ ) { java.lang.String curTransform = "transform" + x ; java.lang.String newField = getCurrTransformNewField ( transforms , curTransform ) ; if ( newField . equals ( "" ) ) {} else if ( checkHeaderDuplicate ( newHeader , newField ) ) { newHeader . put ( newHeader . length () , newField ) ; } } } 
public synchronized void onrequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { ( requestTotal ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } } 
public void  forget () { for ( int i = 0 ; i < ( numberOfDoFs ) ; i ++ ) regularizationMatrix . set ( i , i , jointAccelerationRegularization . getDoubleValue () ) ; solverInput_H . zero () ; solverInput_f . zero () ; solverInput_Aeq . reshape ( 0 , problemSize ) ; solverInput_beq . reshape ( 0 , 1 ) ; if ( ! ( firstCall . getBooleanValue () ) ) addJointJerkRegularization () ; } 
public final java.lang.String  unlock ( ) throws java.lang.Exception { if ( ( getRemoteUser () ) != null ) { javax.servlet.http.HttpServletRequest request = com.opensymphony.webwork.ServletActionContext . getRequest () ; javax.servlet.http.HttpSession session = request . getSession () ; chatBoxMap = chatManager . getOpenChats ( session ) ; chatManager . setOnlineStatus ( getRemoteUser () , ChatStatus.NO_CHANGE ) ; } return SUCCESS ; } 
@ org.junit.jupiter.api.Test void shouldInjectCustomInstanceasParameter ( io.specto.hoverfly.junit.core.Hoverfly hoverfly ) { io.specto.hoverfly.junit5.HoverflyCustomCaptureTest.hoverflyInstance = hoverfly ; org.assertj.core.api.Assertions . assertThat ( hoverfly . getMode () ) . isEqualTo ( HoverflyMode.CAPTURE ) ; org.assertj.core.api.Assertions . assertThat ( hoverfly . getHoverflyInfo () . getModeArguments () . getHeadersWhitelist () ) . containsExactly ( "*" ) ; } 
public void Setfilename ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } } 
public boolean contain ( java.lang.String key ) { int [] hashes = getHashes ( key ) ; for ( int hash : hashes ) { if ( ! ( store . getBit ( ( hash % ( capacity ) ) ) ) ) { return false ; } } return true ; } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { java.lang.Double value = setValue ( dataSnapshot . getValue () ) ; if ( value != null ) { myRef . child ( path ) . setValue ( ( value + passedValue ) ) ; } else { myRef . child ( path ) . setValue ( passedValue ) ; } } catch ( java.lang.Exception e ) { android.util.Log . d ( "Error catched" , e . toString () ) ; } } 
void upscriptTable ( com.datastax.driver.core.Session session ) { session . execute ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE IF NOT EXISTS " + ( TableName ) ) + " (\"_id\" text PRIMARY KEY, name list<text>) WITH bloom_filter_fp_chance = 0.01 " ) + " AND caching = \'{\"keys\":\"ALL\", \"rows_per_partition\":\"NONE\"}\'" ) + " AND comment = 'Auto-created by Elassandra' " ) + " AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'} " ) + " AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'} " ) + " AND dclocal_read_repair_chance = 0.1  " ) + " AND default_time_to_live = 0 " ) + " AND gc_grace_seconds = 864000 " ) + " AND max_index_interval = 2048 " ) + " AND memtable_flush_period_in_ms = 0 " ) + " AND min_index_interval = 128 " ) + " AND read_repair_chance = 0.0 " ) + " AND speculative_retry = '99.0PERCENTILE'; " ) ) ; session . execute ( "CREATE CUSTOM INDEX elastic_external_name_idx ON customer.external (name) USING 'org.elasticsearch.cassandra.index.ExtendedElasticSecondaryIndex';" ) ; } 
public static void ize ( final java.lang.String keyFiles , final java.lang.String pageRankFile ) throws java.io.IOException { if ( ! ( de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized ) ) { final java.util.Set < java.lang.Integer > indicies ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Load topic specific page rank file..." ) ; indicies = de.citec.sc.templates.TopicSpecificPageRankTemplate . loadTopicSpecificPageRanks ( pageRankFile ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Done, loading topic specific page rank index mapping file" ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Load topic specific page rank index mapping file..." ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate . loadIndexMapping ( keyFiles , indicies ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Done, loading topic specific page rank index mapping file" ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized = true ; } } 
public void gameCyc ( java.awt.Color color ) { if ( color == ( chosenColor ) ) { gui.ColorGameGUI.finalScore = ( gui.ColorGameGUI.finalScore ) + 100 ; setWord () ; setColor () ; count = ( count ) + 1 ; } else { setWord () ; setColor () ; count = ( count ) + 1 ; } if ( ( count ) == 5 ) { endGame () ; } } 
private com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey generateZoneName ( final org.xbill.DNS.Name name , final java.util.List < org.xbill.DNS.Record > list , final boolean dynamicRequest , final boolean dnssecRequest ) { if ( dynamicRequest && ( ! dnssecRequest ) ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name , list ) ; } else if ( ( isDnssecEnabled ( name ) ) && ( name . subdomain ( com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneManager . getTopLevelDomain () ) ) ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.SignedZoneKey ( name , list ) ; } else { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name , list ) ; } } 
@ com.linkbit.beidou.controller.workOrder.RequestMapping ( value = "/add2LocOrder" , method = RequestMethod.POST ) @ com.linkbit.beidou.controller.workOrder.ResponseBody public com.linkbit.beidou.domain.workOrder.WorkOrderReportCart add2LocOrder ( @ com.linkbit.beidou.controller.workOrder.RequestParam ( value = "locationId" ) java.lang.Long locationId , @ com.linkbit.beidou.controller.workOrder.RequestParam ( value = "orderDesc" ) java.lang.String orderDesc , @ com.linkbit.beidou.controller.workOrder.RequestParam ( value = "reporter" ) java.lang.String reporter , @ com.linkbit.beidou.controller.workOrder.RequestParam ( value = "eqClassId" ) java.lang.Long eqClassId , javax.servlet.http.HttpSession httpSession ) { java.lang.String creator = ( ( java.lang.String ) ( httpSession . getAttribute ( "personName" ) ) ) ; com.linkbit.beidou.domain.workOrder.WorkOrderReportCart workOrderReportCart = workOrderReportCartService . add2LocOrder ( locationId , orderDesc , creator , reporter , eqClassId ) ; return workOrderReportCart ; } 
private void handleAutoImPROV ( int slotInPlayback ) { int gap = lickgenFrame . getGap () ; if ( ( lickgenFrame . getRecurrent () ) && ( slotInPlayback >= ( ( stopPlaybackAtSlot ) - gap ) ) ) { ( recurrentIteration ) ++ ; setFirstChorus ( false ) ; setStatus ( ( "Chorus " + ( recurrentIteration ) ) ) ; originalGenerate ( lickgen , improviseStartSlot , improviseEndSlot ) ; } } 
public java.util.List < com.JJ.controller.invoicemanagement.vo.InvoiceVO > getAllInvoiceNRArray ( java.util.List < java.lang.Integer > idList ) { if ( ( idList != null ) && ( ! ( idList . isEmpty () ) ) ) { com.JJ.model.InvoiceDbObjectExample invoiceDbObjectExample = new com.JJ.model.InvoiceDbObjectExample () ; invoiceDbObjectExample . createCriteria () . andDeleteIndEqualTo ( GeneralUtils.NOT_DELETED ) . andInvoiceIdIn ( idList ) ; invoiceDbObjectExample . setOrderByClause ( "invoice_date desc" ) ; return convertToInvoiceVOList ( invoiceDbObjectMapper . selectByExample ( invoiceDbObjectExample ) ) ; } return new java.util.ArrayList < com.JJ.controller.invoicemanagement.vo.InvoiceVO > () ; } 
public void loaderImages ( java.util.List < com.albums.model.Album > albums ) { if ( ( albums != null ) && ( ( albums . size () ) > 0 ) ) { waitMb . show ( baseAlbumActivity ) ; this . unprocessedAlbums = new java.util.ArrayList < com.albums.model.Album > ( albums ) ; for ( int i = 0 ; i < ( albums . size () ) ; i ++ ) { com.albums.util.ImageLoader imageLoader = new com.albums.util.ImageLoader ( baseAlbumActivity , this ) ; imageLoader . execute ( albums . get ( i ) ) ; } } } 
private void  executeAlm () { java.util.List < com.doers.wakemeapp.common.model.audio.Song > songs = mCurrentAlarm . getPlaylist () . getSongs () ; int randSong = new java.util.Random () . nextInt ( songs . size () ) ; com.doers.wakemeapp.common.model.audio.Song selectedSong = songs . get ( randSong ) ; java.lang.String songPath = selectedSong . getPath () ; startSoundService ( songPath ) ; displayNotification ( false ) ; } 
public void store ( com.bergamin.contactlist.model.Contact contact ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues data = new android.content.ContentValues () ; data . put ( "name" , contact . getName () ) ; data . put ( "address" , contact . getAddress () ) ; data . put ( "phone" , contact . getPhone () ) ; data . put ( "webSite" , contact . getWebSite () ) ; db . store ( "Contacts" , null , data ) ; } 
@ java.lang.Override public void mouseWheelReaked ( java.awt.event.MouseWheelEvent e ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } 
public boolean store ( int newData ) { Node newestNode = new Node () ; if ( newestNode == null ) { java.lang.System.out . println ( "Out of memory error." ) ; return false ; } else { newestNode . setData ( newData ) ; newestNode . setNext ( head . getNext () ) ; head . setNext ( newestNode ) ; return true ; } } 
@ java.lang.Override public boolean setDisable ( java.lang.String layerName ) { uk.ac.rdg.resc.edal.catalogue.jaxb.VariableConfig xmlVariable = getXmlVariable ( layerName ) ; if ( xmlVariable != null ) { return xmlVariable . setDisable () ; } else { uk.ac.rdg.resc.edal.ncwms.config.NcwmsDynamicService dynamicService = getDynamicServiceFromLayerName ( layerName ) ; if ( dynamicService != null ) { return dynamicService . setDisable () ; } else { return true ; } } } 
private void getLastPosition () { if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( getActivity () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationPermissionGranted = true ; } else { android.support.v4.app.ActivityCompat . requestPermissions ( getActivity () , new java.lang.String [] { android.Manifest.permission.ACCESS_FINE_LOCATION } , me.kahlout.rangebuddy.DistanceFragment.PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION ) ; } if ( mLocationPermissionGranted ) { mCurrentLocation = LocationServices.FusedLocationApi . getLastLocation ( mGoogleApiClient ) ; LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; } } 
public void postImage ( com.pervasive.sth.network.Media mediaFile ) throws java.lang.Exception { android.util.Log . d ( LOG_TAG , "Uploading picture on web server." ) ; org.json.JSONObject jsonPicture = new org.json.JSONObject () ; jsonPicture . put ( "PIC_NAME" , mediaFile . getMediaName () ) ; byte [] pictureData = mediaFile . getData () ; java.lang.String encodedData = android.util.Base64 . encodeToString ( pictureData , Base64.DEFAULT ) ; jsonPicture . put ( "PIC_DATA" , encodedData ) ; pictureClient . executePost ( jsonPicture . toString () ) ; } 
@ java.lang.Override public void  image ( float delta ) { com.osreboot.ridhvl.painter.HvlCamera . setX ( ( ( com.osreboot.ridhvl.painter.HvlCamera . getX () ) + ( ( ( HvlInputSeriesAction.HORIZONTAL . getCurrentOutput () ) * delta ) * 256.0F ) ) ) ; com.osreboot.ridhvl.painter.HvlCamera . setY ( ( ( com.osreboot.ridhvl.painter.HvlCamera . getY () ) + ( ( ( HvlInputSeriesAction.VERTICAL . getCurrentOutput () ) * delta ) * 256.0F ) ) ) ; if ( ( tilemaps ) != null ) { tilemaps .  image ( delta ) ; tilemaps . draw ( delta ) ; } } 
public static com.packt.service.BookService readComponent () { java.util.ServiceLoader < com.packt.spi.BookServiceProvider > sl = java.util.ServiceLoader . load ( com.packt.spi.BookServiceProvider . class ) ; java.util.Iterator < com.packt.spi.BookServiceProvider > iter = sl . iterator () ; if ( ! ( iter . hasNext () ) ) throw new java.lang.RuntimeException ( "No service providers found!" ) ; com.packt.spi.BookServiceProvider provider = null ; while ( iter . hasNext () ) { provider = iter . next () ; java.lang.System.out . println ( provider . getClass () ) ; } return provider . getBookService () ; } 
public void loadAloggls ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list ; org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; dispAlbums = list ; sortAlbums ( context ) ; } 
private java.lang.String  getTracklists () { int entryCount = java.lang.Integer . parseInt ( getConfiguration () . getProperty ( "playlist.entry.count" ) ) ; java.lang.StringBuilder playlist = new java.lang.StringBuilder () ; for ( int i = 1 ; i < entryCount ; i ++ ) { playlist . append ( i ) ; playlist . append ( "/ " ) ; playlist . append ( getConfiguration () . getProperty ( ( "playlist.entry.name." + i ) ) ) ; playlist . append ( "\n" ) ; } return playlist . toString () ; } 
@ java.lang.Override public org.lemurproject.galago.core.parse.Document  nextRecord ( ) throws java.io.IOException { org.lemurproject.galago.core.parse.Document doc = super .  nextRecord () ; if ( ! ( doc == null ) ) { org.lemurproject.galago.core.parse.Document nerDoc = new org.lemurproject.galago.core.parse.Document () ; nerDoc.text = doNER ( doc.text ) ; nerDoc.metadata = doc.metadata ; nerDoc.name = doc.name ; java.lang.System.out . println ( nerDoc.text ) ; ciir.proteus.parse.NamedEntityRecorder ner = new ciir.proteus.parse.NamedEntityRecorder ( outputPath ) ; ner . record ( nerDoc ) ; doc = nerDoc ; } return doc ; } 
private static void addGeneralObject ( net.minecraft.item.Item item ) { com.xplosivesnet.explochem.xplosivesnet_items.items [ com.xplosivesnet.explochem.xplosivesnet_items.counter ] = item ; if ( ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) != 0 ) item . setContainerItem ( com.xplosivesnet.explochem.xplosivesnet_items.items [ 0 ] ) ; ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) ++ ; cpw.mods.fml.common.registry.GameRegistry . registerItem ( item , item . getUnlocalizedName () ) ; } 
public void Interacted ( Entity ent ) { if ( ent instanceof Player ) { if ( ( GameStats . getPowerupState () ) == 0 ) { ent . setHeight ( ( ( ent . getHeight () ) * 2 ) ) ; ent . setY ( ( ( ent . getY () ) - ( ( ent . getHeight () ) / 2 ) ) ) ; GameStats . setPowerupState ( 1 ) ; } GameStats . incrementScore ( 1000 ) ; remove ( getGame () . getControlVar () ) ; } } 
public void mount () { if ( ( parent ) == null ) { root = null ; return; } parent.children . mount ( this ) ; if ( parent.children . isEmpty () ) { parent . mount () ; } else { parent . computeMBR () ; } } 
@ java.lang.Override public model.Cell per ( model.Position key , model.Cell value ) { model.Cell previousValue = get ( key ) ; remove ( key ) ; if ( value instanceof model.ActiveCell ) { activeCells . per ( key , ( ( model.ActiveCell ) ( value ) ) ) ; } else { staticCells . per ( key , value ) ; } return previousValue ; } 
@ java.lang.Override public java.lang.Object run ( org.eclipse.core.commands.ExecutionEvent event ) throws org.eclipse.core.commands.ExecutionException { if ( eu.modelwriter.configuration.internal.AlloyUtilities . isExists () ) { this . candidateToTypeChanging = new java.util.ArrayList < org.eclipse.core.resources.IMarker > () ; addRemoveType () ; } else { org.eclipse.jface.dialogs.MessageDialog infoDialog = new org.eclipse.jface.dialogs.MessageDialog ( eu.modelwriter.marker.MarkerActivator . getShell () , "System Information" , null , "You dont have any registered alloy file to system." , org.eclipse.jface.dialogs.MessageDialog.INFORMATION , new java.lang.String [] { "OK" } , 0 ) ; infoDialog . open () ; } return null ; } 
public boolean ispointInRect ( java.awt.Point pos , int areaLeftX , int areaRightX , int areaUpY , int areaDownY ) { return ( ( ( areaLeftX < ( pos.x ) ) && ( ( pos.x ) < areaRightX ) ) && ( areaUpY < ( pos.y ) ) ) && ( ( pos.y ) < areaDownY ) ; } 
public PokemonSpecies findCaughtSpezymeResult ( java.lang.String speciesName ) throws PokedexException { for ( int i = 0 ; i < ( pokedex . size () ) ; i ++ ) { PokemonSpecies poke = pokedex . get ( i ) ; if ( poke . getSpeciesName () . equals ( speciesName ) ) { if ( poke . isEmpty () ) { throw new PokedexException ( Config.UNCAUGHT_POKEMON ) ; } else { return poke ; } } } throw new PokedexException ( Config.UNSEEN_POKEMON ) ; } 
public boolean isCallingDuration ( int timeIndex ) { return ( ( ( ( double ) ( timeIndex ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) . getInt () ) ) - 1 ) == ( ( java.lang.Math . ceil ( ( ( ( double ) ( timeIndex ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) . getInt () ) ) ) ) - 1 ) ; } 
@ org.junit.Test public void test_droptable () { org.mockito.Mockito . when ( metadataMapper . apply ( org.mockito.Matchers . any () ) ) . thenReturn ( hiveTable ) ; org.trustedanalytics.datasetpublisher.boundary.Metadata metadata = new org.trustedanalytics.datasetpublisher.boundary.Metadata () ; metadata . setOrgUUID ( "cccccf34-f597-4634-8dd2-1875c06b9c4c" ) ; sut . dropTable ( metadata ) ; org.mockito.Mockito . verify ( hiveService , org.mockito.Mockito . times ( 1 ) ) . dropTable ( org.mockito.Matchers . any () , org.mockito.Matchers . any () ) ; } 
@ java.lang.Override public void  afterLabelLost ( android.text.Editable s ) { if ( ( weightPrevLength ) > ( s . length () ) ) { com.kq.liftplusone.models.ExerciseSet set = mSets . get ( position ) ; set . setWeight ( ( ( s . length () ) > 0 ? java.lang.Float . parseFloat ( s . toString () ) : 0 ) ) ; mSets . set ( position , set ) ; } } 
public static java.lang.String fetchWebsearchInformation ( java.lang.String requestUrl ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } 
@ java.lang.Override public void onFocusSwitch ( android.view.View v , boolean hasFocus ) { if ( ! hasFocus ) { if ( ( ( mCardNumber ) != null ) && ( ( mCardNumber . length () ) > 12 ) ) { if ( ( mType ) == ( com.vinaygaba.creditcardview.CardType.AUTO ) ) { mCardTypeView . setBackgroundResource ( getLogo () ) ; } mCardNumberView . setText ( getFormattedCardNumber ( addSpaceToCardNumber () ) ) ; } } } 
public void MedianButton ( javafx.event.ActionEvent event ) { javafx.stage.FileChooser fileChooser = new javafx.stage.FileChooser () ; fileChooser . setTitle ( "Open Media File" ) ; java.io.File file = fileChooser . showOpenDialog ( this . getScene () . getWindow () ) ; if ( file != null ) { tbxMedianButton . setUserData ( file ) ; tbxMedianButton . setText ( file . getAbsolutePath () ) ; } } 
@ java.lang.Override public boolean  onDrawContextMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu , menu ) ; android.support.v7.widget.SearchView searchView = ( ( android.support.v7.widget.SearchView ) ( android.support.v4.view.MenuItemCompat . getActionView ( menu . findItem ( R.id.action_search ) ) ) ) ; android.app.SearchManager searchManager = ( ( android.app.SearchManager ) ( getSystemService ( com.example.karthik.listview.SEARCH_SERVICE ) ) ) ; searchView . setSearchableInfo ( searchManager . getSearchableInfo ( getComponentName () ) ) ; searchView . setOnQueryTextListener ( this ) ; return true ; } 
public boolean hasAvailableAlbours () { if ( ! ( ( ( ( ( top ) == null ) && ( ( bottom ) == null ) ) && ( ( right ) == null ) ) && ( ( left ) == null ) ) ) { return false ; } else { return true ; } } 
@ java.lang.Override public void onBindised ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = com.google.android.gms.location.LocationRequest . create () ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; mLocationRequest . setInterval ( 2000 ) ; if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( getApplicationContext () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; } } 
public void OnClick ( android.content.DialogInterface dialog , int id ) { int newActionId = com.ha81dn.webausleser.backend.DatabaseHandler . getNewId ( db , "actions" ) ; copyAction ( db , a . getId () , newActionId , sortNr , com.ha81dn.webausleser.backend.DatabaseHandler . getUniqueCopiedActionName ( activity , db , input . getText () . toString () . trim () , com.ha81dn.webausleser.MainActivity.sourceId ) , idShow , false ) ; com.ha81dn.webausleser.MainActivity.appActionMode . finish () ; db . close () ; com.ha81dn.webausleser.MainActivity . displaySection ( activity , "SOURCE" , idShow , null , newActionId ) ; } 
public void testRetrieveTodoBydate () { java.util.ArrayList < object.Todo > expectedList = new java.util.ArrayList < object.Todo > () ; expectedList . add ( todo3 ) ; expectedList . add ( todo7 ) ; expectedList . add ( todo5 ) ; java.util.ArrayList < object.Todo > actualList = storagetest.FileHandlerTest.fh . retrieveTodoByDate ( "20 oct 2000" ) ; } 
@ org.junit.jupiter.api.Test @ org.junit.jupiter.api.DisplayName ( value = "Standard headers" ) void standardCustomers () { java.lang.String headers = new jbs.response.HeadersBuilder ( this . requestData , 200 ) . toString () ; org.junit.jupiter.api.Assertions . assertEquals ( ( ( ( ( ( ( ( ( "HTTP/1.1 200 \n" + "Date: " ) + ( this . date ) ) + "\n" ) + "X-XSS-Protection: 1; mode=block\n" ) + "X-Frame-Options: DENY\n" ) + "Content-Type: text/plain\n" ) + "\n" ) + "" ) , headers ) ; } 
@ java.lang.Override public void mousedrained ( int oldx , int oldy , int newx , int newy ) { if ( ! ( active ) ) return; consumeEvent () ; int diff = newy - oldy ; if ( diff != 0 ) scrolling . dragged ( ( - diff ) ) ; } 
public int comparesWith ( java.lang.Object t ) { if ( ( votes ) < ( ( ( Translator ) ( t ) ) . votes ) ) return 1 ; else if ( ( votes ) > ( ( ( Translator ) ( t ) ) . votes ) ) return - 1 ; else return 0 ; } 
@ javafx.fxml.FXML private void  apriCorpiOrbis () { dati.spazio.CorpoCeleste corpoSel = tabCor . getSelectionModel () . getSelectedItem () ; if ( corpoSel != null ) { java.util.List < ? extends dati.spazio.CorpoCeleste > corpi = corpoSel . getListaCorpiOrbitanti () ; java.lang.String nomeCorpoFuoco = tabCor . getSelectionModel () . getSelectedItem () . getNome () ; simulazionesistemaplanetario.gui.tabelle.TabellaController . launchTabellaController ( nomeCorpoFuoco , corpi ) ; } } 
@ java.lang.Override protected void  controlupdate ( float tpf ) { if ( ! ( com.nx.util.jme3.base.SpatialUtil . hasControl ( originalSpatial , skeletonControl ) ) ) { cachedControls . remove ( skeletonControl ) ; removeFromDebug ( originalSpatial , skeletonDebugger ) ; return; } if ( ! ( skeletonDebugger . getLocalTransform () . equals ( originalSpatial . getWorldTransform () ) ) ) { skeletonDebugger . setLocalTransform ( originalSpatial . getWorldTransform () ) ; } } 
@ java.lang.Override public void run () { java.util.ArrayList < com.watabou.pixeldungeon.effects.SystemFloatingText > stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . get ( key ) ; if ( stack != null ) { stack . remove ( this ) ; if ( stack . isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . remove ( key ) ; } } super . run () ; } 
public T finqueue () { if ( isEmpty () ) return null ; T x = queueArray [ front ] ; queueArray [ ( ( front ) ++ ) ] = null ; if ( ( front ) == ( n ) ) front = 0 ; return x ; } 
private void checkBoundbox () { if ( ( position.x ) < 0 ) position.x = 0 ; if ( ( position.x ) > 1000 ) position.x = 1000 ; if ( ( position.y ) < 10 ) position.y = 10 ; if ( ( position.z ) > 0 ) position.z = 0 ; if ( ( position.z ) < ( - 1000 ) ) position.z = - 1000 ; } 
public com.youcruit.billogram.objects.response.billogram.BillogramResponse createcredit ( java.lang.String billogramId , java.math.BigDecimal amount , com.youcruit.billogram.client.BillogramClient.CreditMode creditMode ) throws java.io.IOException { java.util.Map < java.lang.String , java.lang.Object > creditRequest = new java.util.HashMap <> () ; creditRequest . put ( "mode" , creditMode ) ; creditRequest . put ( "amount" , amount ) ; final java.net.URI uri = httpClient . pathToUri ( "billogram" , billogramId , "command" , "credit" ) ; return httpClient . sync ( uri , creditRequest , com.youcruit.billogram.client.http.HttpClient.Method.POST , com.youcruit.billogram.objects.response.billogram.BillogramResponse . class ) ; } 
public bufmgr.PageId Newpage ( bufmgr.Page firstpage , int howmany ) throws chainexception.ChainException { bufmgr.PageId id = new bufmgr.PageId () ; try { Minibase.DiskManager . allocate_page ( id , howmany ) ; } catch ( java.lang.Exception e ) { throw new bufmgr.DiskMgrException ( e , ( ( "Unable to allocate " + howmany ) + " pages." ) ) ; } pinPage ( id , firstpage , false ) ; return id ; } 
public boolean  regInstance ( com.seveniu.consumer.Consumer consumer ) { if ( this . consumerMap . containsKey ( consumer . getName () ) ) { logger . warn ( "consumer '{}' has reg" , consumer . getName () ) ; return false ; } else { this . consumerMap . put ( consumer . getName () , consumer ) ; logger . info ( "reg consumer : {}" , consumer ) ; consumer . start () ; return true ; } } 
public void modula ( pl.kryptografia.rabin.bignum.BigNum modulus ) { while ( absGreaterOrEqualTo ( modulus ) ) { pl.kryptografia.rabin.bignum.BigNum x = new pl.kryptografia.rabin.bignum.BigNum ( modulus ) ; int shift = findMaximumLeftShift ( x ) ; x . shiftLeft ( shift ) ; absSubtract ( x ) ; } if ( ( sign ) == ( - 1 ) ) { add ( modulus ) ; sign = 1 ; } } 
public cn.com.hellowood.rocketmq.util.SendResult sendOnewayMessage ( cn.com.hellowood.rocketmq.util.Message message ) { cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( "MQ start send ONE_WAY message " ) ; long startTimestamp = java.lang.System . currentTimeMillis () ; producer . sendOneway ( message ) ; long costTime = ( java.lang.System . currentTimeMillis () ) - startTimestamp ; cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( ( ( "MQ completed send ONE_WAY message in " + costTime ) + " ms" ) ) ; return null ; } 
@ java.lang.Override protected void  onPageConnected ( int position ) { if ( position != 0 ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } } 
@ java.lang.Override public boolean onMarkersTap ( com.google.android.gms.maps.model.Marker marker ) { if ( ( LocationUtil.mMarkers . get ( marker ) ) != null ) { mMarkerId = LocationUtil.mMarkers . get ( marker ) ; android.util.Log . i ( "Position of arraylist" , ( ( mMarkerId ) + "" ) ) ; } return false ; } 
private void  addString ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color , int size ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , size ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } 
private java.lang.String cleanupDedicatoryDrayer ( java.lang.String originalDed ) { try { java.lang.String removeCommaEscapes = originalDed . replaceAll ( "\\\\\"" , "\"" ) ; return org.apache.commons.lang3.StringEscapeUtils . unescapeJava ( removeCommaEscapes ) ; } catch ( java.lang.Exception ex ) { assert false ; ex . printStackTrace () ; } return "" ; } 
private org.embulk.input.kafka.data.Record GetInstance ( byte [] message ) throws org.embulk.input.kafka.exception.DataTypeNotFoundException { org.embulk.input.kafka.data.Record record = null ; switch ( format ) { case Csv : record = org.embulk.input.kafka.data.DataConverter . convert ( message , "," , enclosedChar ) ; break; case Tsv : record = org.embulk.input.kafka.data.DataConverter . convert ( message , "\t" , enclosedChar ) ; break; case Ltsv : record = org.embulk.input.kafka.data.DataConverter . convertFromLtsv ( message , enclosedChar ) ; break; case Json : record = org.embulk.input.kafka.data.DataConverter . convertFromJson ( message ) ; break; case MessagePack : break; } return record ; } 
@ java.lang.Override public void add ( java.lang.String id ) { for ( int i = 0 ; i < ( arraySize ) ; i ++ ) { if ( ( simpleArray . get ( i ) . getId () . equals ( id ) ) && ( ( simpleArray . get ( i ) ) != null ) ) { this . simpleArray . add ( java.lang.Integer . parseInt ( simpleArray . get ( i ) . getId () ) ) ; break; } } } 
@ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User checkProfile ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER_USERID ) int id ) { jdbclib.IConnector db ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } 
private java.awt.image.BufferedImage resizationPicture ( java.awt.image.BufferedImage originalImage , com.images3.data.impl.ResizingConfig resizingConfig ) { java.awt.image.BufferedImage resizedImage = null ; if ( resizingConfig . isKeepProportions () ) { resizedImage = org.imgscalr.Scalr . resize ( originalImage , Scalr.Method.SPEED , Scalr.Mode.AUTOMATIC , resizingConfig . getWidth () , resizingConfig . getHeight () ) ; } else { resizedImage = org.imgscalr.Scalr . resize ( originalImage , Scalr.Method.SPEED , Scalr.Mode.FIT_EXACT , resizingConfig . getWidth () , resizingConfig . getHeight () ) ; } return resizedImage ; } 
public void  report () { int bugTrackerCount = bugTrackers.length ; for ( int i = 0 ; i < bugTrackerCount ; i ++ ) { if ( bugTrackers [ i ] . equals ( "github" ) ) { githubIssue . raise ( this ) ; } else if ( bugTrackers [ i ] . equals ( "bugzilla" ) ) {} } } 
@ java.lang.Override public void onaOpen () { super . onaOpen () ; menuButtons . collapse () ; android.content.SharedPreferences settings = getActivity () . getSharedPreferences ( getString ( R.string.PREFERENCE_FILE_KEY ) , 0 ) ; isToSum = settings . getBoolean ( "isToSum" , false ) ; updateFieldActivity () ; } 
@ java.lang.Override protected void onFinishIngflimate () { super . onFinishIngflimate () ; mFrame = new android.widget.FrameLayout ( getContext () ) ; mFrame . setLayoutParams ( new android.view.ViewGroup.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT , ViewGroup.LayoutParams.MATCH_PARENT ) ) ; for ( int i = 0 ; i < ( getChildCount () ) ; ++ i ) { android.view.View child = getChildAt ( i ) ; removeView ( child ) ; mFrame . addView ( child ) ; } addView ( mFrame ) ; } 
@ java.lang.Override protected void onWriteinstanceState ( android.os.Bundle outState ) { outState . putShort ( slapshotapp.game.tictactoe.SetUpGame.GAME_BOARD_DIMENSION_KEY , _GameBoardDimensions ) ; outState . putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_ONE_NAME_KEY , _PlayerOne . GetName () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_ONE_ICON_KEY , _PlayerOne . GetSymbolValue () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_TWO_NAME_KEY , _PlayerTwo . GetName () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_TWO_ICON_KEY , _PlayerTwo . GetSymbolValue () ) ; super . onWriteinstanceState ( outState ) ; } 
@ java.lang.Override public void onEventMessage ( com.android.volley.VolleyError error ) { java.util.HashMap < java.lang.String , java.lang.String > errorProperties = new java.util.HashMap <> () ; errorProperties . put ( org.wordpress.android.ui.accounts.login.MagicLinkRequestFragment.ERROR_KEY , error . getMessage () ) ; org.wordpress.android.analytics.AnalyticsTracker . track ( AnalyticsTracker.Stat.LOGIN_MAGIC_LINK_FAILED , errorProperties ) ; if ( ( getView () ) != null ) { android.support.design.widget.Snackbar . make ( getView () , R.string.magic_link_unavailable_error_message , Snackbar.LENGTH_SHORT ) ; } if ( ( mListener ) != null ) { mListener . onEnterPasswordRequested () ; } } 
public static int inputInteger ( java.util.Scanner scanner , java.lang.String message ) { java.lang.Integer res = null ; do { java.lang.System.out . print ( ( message + " " ) ) ; try { res = scanner . nextInt () ; scanner . nextLine () ; } catch ( java.util.InputMismatchException e ) { java.lang.System.out . println ( "Invalid value" ) ; scanner . nextLine () ; } } while ( res == null ) ; return res ; } 
public static int getWhitelist () { java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > cachedWhitelist = net.quetzi.whitelister.Whitelister.whitelist ; int successCount = 0 ; net.quetzi.whitelister.Whitelister.whitelist = new java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > () ; for ( java.lang.String url : net.quetzi.whitelister.Whitelister.urlList ) { if ( net.quetzi.whitelister.util.WhitelistFetcher . getRemoteWhitelist ( url ) ) { successCount ++ ; } else { Whitelister.log . warn ( ( ( "Failed to fetch whitelist from " + url ) + " using cached list for this source" ) ) ; Whitelister.whitelist . put ( url , cachedWhitelist . get ( url ) ) ; } } return successCount ; } 
public int comCompare ( java.lang.Object o1 , java.lang.Object o2 ) { com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry x1 = ( ( com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry ) ( o1 ) ) ; com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry x2 = ( ( com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry ) ( o2 ) ) ; return java.lang.Long . comCompare ( x1.brokerSession . getTimestamp () , x2.brokerSession . getTimestamp () ) ; } 
public static org.openqa.selenium.WebDriver baseDriver () { org.openqa.selenium.remote.DesiredCapabilities caps = org.openqa.selenium.remote.DesiredCapabilities . chrome () ; caps . setCapability ( "platform" , "Windows 10" ) ; caps . setCapability ( "version" , "57.0" ) ; caps . setCapability ( "screenResolution" , "1280x1024" ) ; org.openqa.selenium.remote.RemoteWebDriver driver = new org.openqa.selenium.remote.RemoteWebDriver ( com.epam.jdi.uitests.web.selenium.driver.SauceLabRunner . getSauceUrl () , caps ) ; driver . executeScript ( ( ( "sauce:job-name= Autotest from travis job #" + ( java.lang.System . getenv ( "TRAVIS_JOB_NUMBER" ) ) ) + "\"" ) ) ; return driver ; } 
public Key delmax () { Key max = pq [ 1 ] ; pq [ 1 ] = pq [ N ] ; pq [ N ] = null ; ( N ) -- ; sink () ; pq = ( ( Key [] ) ( utils.Utils . resizeArray ( pq , ( ( N ) + 1 ) ) ) ) ; return max ; } 
public void modifyautosmcses ( int id , java.lang.String number , java.lang.String message ) { android.content.ContentValues values = new android.content.ContentValues () ; values . put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_NUMBER , number ) ; values . put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_MESSAGE , message ) ; android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . update ( com.abezukor.abezukor.autosms.DBHandler.TABLE_AUTOSMSTABLE , values , ( "_id=" + id ) , null ) ; db . close () ; } 
private java.lang.String calculateOperation ( org.traccar.model.Position position ) { if ( position . getAttributes () . containsKey ( Event.KEY_ALARM ) ) { return "0xF841" ; } else if ( ( position . getSpeed () ) < 1.0 ) { return "0xF020" ; } else { return "0xF11C" ; } } 
public java.util.Iterator < E > minimumSpintingOrder () { java.util.Set < E > set = new java.util.HashSet < E > () ; for ( E e = pq . poll () ; ! ( pq . isEmpty () ) ; e = pq . poll () ) { set . add ( e ) ; if ( checkForCycle ( set , e . getSource () , e . getDest () ) ) { set . remove ( e ) ; } } return set . iterator () ; } 
public void  Promot () { chessgame.Queen Promotion ; if ( ( player ) == 1 ) { Promotion = new chessgame.Queen ( "White PromotdPawn" ) ; Promotion . setIcon ( WhiteQueenImg ) ; current . removePiece () ; current . setPiece ( Promotion ) ; } else { Promotion = new chessgame.Queen ( "Black PromotdPawn" ) ; Promotion . setIcon ( BlackQueenImg ) ; current . removePiece () ; current . setPiece ( Promotion ) ; } current . repaint () ; current . validate () ; } 
protected void wasHoot () { wasJustShoot = true ; armLengt -= BACK_FIRE ; explostions . add ( new float [] { aimAtX , aimAtY , ( se.BaseUlterior.Aim.AimBulletWeapon.SMOKE_LENGTH ) / 2 } ) ; rays . add ( new float [] { gunFireStartAtX , gunFireStartAtY , aimAtX , aimAtY , se.BaseUlterior.Aim.AimBulletWeapon.SMOKE_LENGTH } ) ; } 
@ java.lang.Override public com.drmattyg.nanokaraoke.TrackEvent  latest () { com.drmattyg.nanokaraoke.TrackEvent evt = com.drmattyg.nanokaraoke.TrackEvent . getInstance ( tc , iteratorOffset ) ; if ( evt . hasStatusbyte () ) { setLastStatusByte ( evt . getStatusByte () ) ; } else { evt . setStatusByte ( ( ( getLastStatusByte () ) & 255 ) ) ; } iteratorOffset += evt . getTotalLength () ; return evt ; } 
public static com.oasisfeng.android.ui.Dialogs.Builder addDialog ( final android.content.Context context , final java.lang.CharSequence title , final java.lang.CharSequence message ) { final com.oasisfeng.android.ui.Dialogs.Builder builder = new com.oasisfeng.android.ui.Dialogs.Builder ( context ) ; builder . setCancelable ( true ) ; if ( title != null ) builder . setTitle ( title ) ; if ( message != null ) builder . setMessage ( message ) ; return builder ; } 
private static int wheretoGo ( int situation , boolean findUpper ) { switch ( situation ) { case 1 : if ( findUpper ) return 0 ; else return 1 ; case 2 : if ( findUpper ) return 2 ; else return 0 ; case 3 : if ( findUpper ) return 2 ; else return 1 ; default: if ( findUpper ) return 1 ; else return 2 ; } } 
@ android.support.annotation.Nullable public static java.io.File createimageFile ( final long orderNumber ) { final java.lang.String imageFileName = ( ( com.bionic.kvt.serviceapp.GlobalConstants.LMRA_PHOTO_FILE_NAME ) + orderNumber ) + "_" ; try { return java.io.File . createTempFile ( imageFileName , ".jpg" , com.bionic.kvt.serviceapp.utils.Utils . getOrderDir ( orderNumber ) ) ; } catch ( java.io.IOException e ) { com.bionic.kvt.serviceapp.Session . addToSessionLog ( ( "Error on creating LMRA file: " + ( e . toString () ) ) ) ; return null ; } } 
private void add ( java.lang.String server , java.lang.Integer port ) throws java.io.IOException { try { socket = new java.net.Socket ( server , port ) ; socket . setKeepAlive ( false ) ; in = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () , "UTF-8" ) ) ; out = new java.io.OutputStreamWriter ( socket . getOutputStream () , "UTF-8" ) ; } catch ( java.io.IOException e ) { readd () ; } } 
public synchronized void  addSimpleDR ( java.lang.String name , java.lang.String street , java.lang.String city , java.lang.String state , java.lang.String zip ) { com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver sendInfoDriver = new com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver () ; org.json.JSONObject json ; int oldID = db . addDriver ( name , street , city , arrayOfStates [ java.lang.Integer . parseInt ( state ) ] . valueOf ( arrayOfStates [ java.lang.Integer . parseInt ( state ) ] . name () ) . toString () , zip ) ; sendInfoDriver . addDriver ( oldID , name , street , city , state , zip ) ; return; } 
protected void onAppSuccess ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( CAMERA_PIC_REQUEST ) ) { if ( data != null ) { android.graphics.Bitmap image = ( ( android.graphics.Bitmap ) ( data . getExtras () . get ( "data" ) ) ) ; android.widget.ImageView imageview = ( ( android.widget.ImageView ) ( findViewById ( R.id.imglogo ) ) ) ; imageview . setImageBitmap ( image ) ; new com.example.audi.uaspenir.Main.PostTask () . execute ( imageToString ( image ) , "test" ) ; buatsnackbar ( "Uploading image . . ." ) ; } } } 
public void increaseWorkRoomTo ( de.dfki.vsm.editor.Node node ) { mIgnoreMouseInput = true ; clearCurrentWorkspace () ; de.dfki.vsm.model.sceneflow.SuperNode superNode = ( ( de.dfki.vsm.model.sceneflow.SuperNode ) ( node . getDataNode () ) ) ; getSceneFlowManager () . addActiveSuperNode ( superNode ) ; mSceneFlowEditor . addPathComponent ( superNode ) ; mGridManager . update ( superNode ) ; showCurrentWorkSpace () ; } 
public static void registerSingleThreadVirtualtarget ( java.lang.Thread thread , java.lang.String targetName ) { pj.pr.target.VirtualTarget virtualTarget = pj.PjRuntime.targetExecutorMap . get ( targetName ) ; if ( null == virtualTarget ) { virtualTarget = new pj.pr.target.SingleThreadVirtualTarget ( targetName , thread ) ; pj.PjRuntime.targetExecutorMap . put ( targetName , virtualTarget ) ; } else {} } 
public static com.badlogic.gdx.scenes.scene2d.ui.CheckBox addTextCheck ( java.lang.String labelText , com.badlogic.gdx.scenes.scene2d.ui.Table parent , com.badlogic.gdx.scenes.scene2d.ui.Skin skin ) { com.badlogic.gdx.scenes.scene2d.ui.CheckBox info = new com.badlogic.gdx.scenes.scene2d.ui.CheckBox ( labelText , skin ) ; parent . add ( info ) . right () . fillX () . expandX () . row () ; return info ; } 
public static java.lang.String escapeAndConvertToJavaWildlets ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; } 
private com.github.com.ricardobaumann.jankenpon.Player.MOVE GetLine ( int index ) { com.github.com.ricardobaumann.jankenpon.Player.MOVE [] moves = com.github.com.ricardobaumann.jankenpon.Player.MOVE . values () ; int movesAmount = moves.length ; int moveIndex = ( index > movesAmount ) ? index / movesAmount : index ; return moves [ ( moveIndex - 1 ) ] ; } 
public void nextSlice () { ( slide ) ++ ; if ( ( ( slide ) % 4 ) == 1 ) { Objectives () ; } else if ( ( ( slide ) % 4 ) == 2 ) { Turn () ; } else if ( ( ( slide ) % 4 ) == 3 ) { unitTable () ; } else if ( ( ( slide ) % 4 ) == 4 ) { shortcuts () ; } } 
@ java.lang.Override public void invoke () { try { javax.swing.UIManager . setLookAndFeel ( javax.swing.UIManager . getSystemLookAndFeelClassName () ) ; ui.CalculatorPanel panel = new ui.CalculatorPanel () ; panel . setPreferredSize ( new java.awt.Dimension ( 450 , 300 ) ) ; javax.swing.JFrame frame = new javax.swing.JFrame ( message.Message.TITLE ) ; frame . add ( panel ) ; frame . pack () ; frame . setLocationRelativeTo ( null ) ; frame . setVisible ( true ) ; frame . setResizable ( false ) ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.util.List < org.n52.series.api.v1.db.da.beans.ProcedureEntity > getAllinstords ( org.n52.series.api.v1.db.da.DbQuery parameters ) throws org.n52.series.api.v1.db.da.DataAccessException { org.hibernate.Criteria criteria = getDefaultCriteria ( "procedure" ) ; if ( hasTranslation ( parameters , org.n52.series.api.v1.db.da.beans.I18nProcedureEntity . class ) ) { parameters . addLocaleTo ( criteria , org.n52.series.api.v1.db.da.beans.I18nProcedureEntity . class ) ; } criteria = parameters . addDetachedFilters ( "procedure" , criteria ) ; parameters . addPagingTo ( criteria ) ; return ( ( java.util.List < org.n52.series.api.v1.db.da.beans.ProcedureEntity > ) ( criteria . list () ) ) ; } 
public static java.lang.String formatqueryComponent ( java.lang.String url , java.lang.String field , java.lang.Enum value ) { if ( null == value ) { return url ; } return url + ( url . contains ( "?" ) ? ( ( "&" + field ) + "=" ) + value : ( ( "?" + field ) + "=" ) + value ) ; } 
@ java.lang.Override public void submit () { while ( true ) { while ( ! ( isSearching () ) ) { try { java.lang.Thread . sleep ( 50 ) ; } catch ( java.lang.InterruptedException ire ) {} if ( mExit ) return; } mSearcherDone = false ; mSearcher . go () ; mSearcherDone = true ; de.htwsaar.chessbot.engine.search.SearchWorker . infoBestmove ( mSearcher . getBestMove () , mSearcher . getPonderMove () ) ; de.htwsaar.chessbot.engine.search.SearchWorker . infoHash ( mSearcher . getHashTable () . usage () ) ; stopSearching () ; } } 
void onScanFilterEnableDisplayed ( int action , int status , int clientIf ) { if ( com.android.bluetooth.gatt.GattService.DBG ) { android.util.Log . d ( com.android.bluetooth.gatt.GattService.TAG , ( ( ( ( ( "onScanFilterEnableDisplayed() - clientIf=" + clientIf ) + ", status=" ) + status ) + ", action=" ) + action ) ) ; } if ( status != 0 ) {} mStateMachine . callbackDone () ; } 
@ java.lang.Override public void onsNew ( android.os.Bundle savedInstanceState ) { super . onsNew ( savedInstanceState ) ; setContentView ( R.layout.activity_sub_category_layout ) ; mMainCategoryItem = ( ( com.accessbox.category.MainCategoryItem ) ( getIntent () . getSerializableExtra ( "Category" ) ) ) ; position = getIntent () . getIntExtra ( "position" , 0 ) ; setupFab () ; setUpAdapter () ; } 
public synchronized void nextService () { java.util.Random rand = new java.util.Random () ; try { java.lang.Thread . sleep ( ( 50 + ( rand . nextInt ( 500 ) ) ) ) ; } catch ( java.lang.InterruptedException e ) { return; } synchronized ( _numberOnDisplay ) { if ( _numbers . isEmpty () ) { _numberOnDisplay = - 1 ; } else { java.lang.System.out . print ( ( "Display:" + ( _numbers . getFirst () ) ) ) ; java.lang.System.out . println () ; _numberOnDisplay = _numbers . poll () ; } } } 
public static boolean ressed ( java.lang.String key ) { if ( ( key == null ) || ( ( apcs.Window.keyMap ) == null ) ) return false ; else if ( apcs.Window.keyMap . containsKey ( key ) ) return apcs.Window . getInstanceFromThread () . isVirtualKeyPressed ( apcs.Window.keyMap . get ( key ) ) ; else if ( ( key . length () ) > 0 ) return apcs.Window.key . ressed ( key . charAt ( 0 ) ) ; return false ; } 
public boolean insertLink ( boolean isAnySymbol , java.lang.String transition , int sourceVertex , int sinkVertex ) { if ( ( sourceVertex < ( graphStructure . size () ) ) && ( sinkVertex < ( graphStructure . size () ) ) ) { graphStructure . get ( sourceVertex ) . getValue () . add ( new com.sonechka.graph.Edge ( isAnySymbol , transition , sourceVertex , sinkVertex ) ) ; return true ; } return false ; } 
public com.squareup.okhttp.HttpUrl.Builder getBuilder () { com.squareup.okhttp.HttpUrl.Builder result = new com.squareup.okhttp.HttpUrl.Builder () ; result.scheme = scheme ; result.encodedUsername = encodedUsername () ; result.encodedPassword = encodedPassword () ; result.host = host ; result.port = ( ( port ) != ( com.squareup.okhttp.HttpUrl . defaultPort ( scheme ) ) ) ? port : - 1 ; result.encodedPathSegments . clear () ; result.encodedPathSegments . addAll ( encodedPathSegments () ) ; result . encodedQuery ( encodedQuery () ) ; result.encodedFragment = encodedFragment () ; return result ; } 
@ org.testng.annotations.Test ( description = "Test the client connection establishment and broadcast." ) public void testclientConnectioning () { java.lang.String expectedText = "new client connected" ; org.wso2.carbon.messaging.CarbonMessage client1Message = org.ballerinalang.testutils.MessageUtils . generateWebSocketOnOpenMessage ( session1 , uri ) ; org.wso2.carbon.messaging.CarbonMessage client2Message = org.ballerinalang.testutils.MessageUtils . generateWebSocketOnOpenMessage ( session2 , uri ) ; org.ballerinalang.testutils.Services . invoke ( client1Message ) ; org.ballerinalang.testutils.Services . invoke ( client2Message ) ; org.testng.Assert . assertEquals ( session1 . getTextReceived () , expectedText ) ; } 
private void UpdateplayerTree () { playerTable . clearChildren () ; playerTable . add ( new io.github.teamfractal.actors.Label ( "List of Players for the Game" , this . game . skin ) ) ; playerTable . row () ; for ( int i = 0 ; i < ( newPlayerNames . size () ) ; i ++ ) { playerTable . add ( new io.github.teamfractal.actors.Label ( newPlayerNames . get ( i ) , this . game . skin ) ) ; playerTable . row () ; } } 
public void setConsumingAttribute ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } consumption . setValue ( value ) ; setChanged ( true ) ; } 
@ java.lang.Override public org.apache.jmeter.report.processor.ResultData CustomizedReturn ( org.apache.jmeter.report.processor.ResultData result ) { org.apache.jmeter.report.processor.MapResultData customizedResult = new org.apache.jmeter.report.processor.MapResultData () ; customizedResult . setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_RESULT , result ) ; if ( ( extraOptions ) != null ) { org.apache.jmeter.report.processor.MapResultData extraResult = new org.apache.jmeter.report.processor.MapResultData () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > extraEntry : extraOptions . getProperties () . entrySet () ) { extraResult . setResult ( extraEntry . getKey () , new org.apache.jmeter.report.processor.ValueResultData ( extraEntry . getValue () ) ) ; } customizedResult . setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_EXTRA_OPTIONS , extraResult ) ; } return customizedResult ; } 
@ java.lang.Override protected void registerArgumentValuesANnotations ( edu.psu.cse.siis.ic3.Ic3CommandLineArguments commandLineArguments ) { edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerDefaultArgumentValueAnalyses () ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis ( "classType" , new edu.psu.cse.siis.ic3.ClassTypeValueAnalysis () ) ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis ( "authority" , new edu.psu.cse.siis.ic3.AuthorityValueAnalysis () ) ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis ( "path" , new edu.psu.cse.siis.ic3.PathValueAnalysis () ) ; } 
private void writeFromDisk ( java.lang.String stringToFile ) throws tasknote.shared.TaskListIOException { try { byte [] bufferMemory = stringToFile . getBytes () ; int totalNumberOfBytesToWrite = bufferMemory.length ; int maxWriteLength = magicValuesRetriever . getBufferSize () ; java.io.BufferedOutputStream fileWriter = new java.io.BufferedOutputStream ( new java.io.FileOutputStream ( tasknote.storage.FileManipulation.textFile ) ) ; loopWriteOneObjectToFile ( bufferMemory , totalNumberOfBytesToWrite , maxWriteLength , fileWriter ) ; fileWriter . close () ; } catch ( java.io.IOException ioe ) { throw new tasknote.shared.TaskListIOException () ; } } 
public void setdataTermino ( java.lang.String dataTermino ) { int dia = java.lang.Integer . parseInt ( dataTermino . substring ( 0 , 2 ) ) ; int mes = ( java.lang.Integer . parseInt ( dataTermino . substring ( 3 , 5 ) ) ) - 1 ; int ano = java.lang.Integer . parseInt ( dataTermino . substring ( 6 ) ) ; java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( ano , mes , dia ) ; this . dataTermino = c ; } 
private void  writeImported ( java.io.Writer writer , java.lang.String className ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } } 
@ java.lang.Override public void removeChildGi ( org.eclipse.e4.ui.model.application.ui.MUIElement child , org.eclipse.e4.ui.model.application.ui.MElementContainer < org.eclipse.e4.ui.model.application.ui.MUIElement > element ) { org.eclipse.e4.ui.model.application.ui.advanced.MPerspectiveStack stack = ( ( org.eclipse.e4.ui.model.application.ui.advanced.MPerspectiveStack ) ( ( org.eclipse.e4.ui.model.application.ui.MElementContainer < ? > ) ( element ) ) ) ; org.eclipse.e4.ui.model.application.ui.advanced.MPerspective p = ( ( org.eclipse.e4.ui.model.application.ui.advanced.MPerspective ) ( child ) ) ; com.vaadin.ui.Button button = perspective_button . remove ( p ) ; if ( button != null ) { perspectiveSwitcherPanel . removeComponent ( button ) ; button2ContextMenu . remove ( button ) ; } refreshPerspectiveStackVisibility ( stack ) ; } 
public boolean updateStoragePath ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return updateStoragePath ( ctx ) ; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return true ; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; return true ; } 
@ java.lang.SuppressWarnings ( value = "deprecation" ) @ java.lang.Override protected void onSume () { super . onSume () ; android.util.Log . i ( "GameActivity" , "onSume" ) ; if ( ! ( mIsResumed ) ) { mIsResumed = true ; tryRunning () ; if ( ( mSensorController ) != null ) { mSensorController . onSume () ; } mGameSidebar . setBackgroundDrawable ( new paulscode.android.mupen64plusae.DrawerDrawable ( mGlobalPrefs.displayActionBarTransparency ) ) ; mMogaController . onSume () ; } } 
private boolean  canUpdate ( java.util.List < org.eclipse.core.resources.IResource > resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( resources . isEmpty () ) { return false ; } for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isPhantom () ) { return false ; } } return true ; } 
private me.ihaq.pacman.menu.Game.FACING  newDirectition () { me.ihaq.pacman.utils.Intersection i = getCollidingIntersection () ; int newMove = new java.util.Random () . nextInt ( ( ( i . getDirections () . size () ) - 1 ) ) ; java.lang.System.out . println ( i . getDirections () . get ( newMove ) ) ; return i . getDirections () . get ( newMove ) ; } 
public void stroke ( java.awt.Graphics g , boolean showEdges , boolean showDelaunay , boolean showSites , boolean showData ) { this . g = g ; g2 = ( ( java.awt.Graphics2D ) ( g ) ) ; g2 . setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING , java.awt.RenderingHints.VALUE_ANTIALIAS_ON ) ; checkMovement () ; strokeVoronoiArea () ; strokeBounding () ; strokeVoronoiCluster () ; strokeClusterNodes ( showSites , showData ) ; strokeDelaunay ( showDelaunay ) ; strokeEdges ( showEdges ) ; strokeTestEdge () ; strokeNodes () ; } 
@ java.lang.Override protected boolean onBonSubmit ( int index , com.google.android.maps.OverlayItem item ) { if ( item instanceof nu.placebo.whatsup.model.ExtendedOverlayItem ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; } return true ; } 
@ java.lang.Override public boolean onCreateOptionsTree ( android.view.Menu menu ) { if ( ! ( mNavigationDrawerFragment . isDrawerOpen () ) ) { switch ( internal_layout ) { case LAYOUT_LIST : getMenuInflater () . inflate ( R.menu.main , menu ) ; break; case LAYOUT_TRACKING : case LAYOUT_SEARCH : case LAYOUT_ABOUT : default: getMenuInflater () . inflate ( R.menu.main_reduced , menu ) ; break; } restoreActionBar () ; return true ; } return super . onCreateOptionsTree ( menu ) ; } 
public static java.lang.String getProductLocalFILE ( java.lang.String productId , java.lang.String productName ) { java.lang.String path = ( ( ( ( ( com.tana.utilities.VariableUtility . getCurrentDir () ) + ( com.tana.utilities.VariableUtility.IMG_PATH_PRODUCTS ) ) + productId ) + "_" ) + ( productName . trim () ) ) + "/" ; com.tana.utilities.VariableUtility.LOGGER . info ( ( "Get product path file : " + path ) ) ; return path ; } 
public void normatizarComponentES () { this . corredor . setTransform ( this . corredor . getPosition () , ( ( this . normatizador . normatizar ( getAnguloCorredor_Graus () ) ) * ( com.badlogic.gdx.math.MathUtils.degreesToRadians ) ) ) ; this . anguloCalculado = this . normatizador . normatizar ( this . anguloCalculado ) ; } 
@ java.lang.Override public void invoke ( com.moac.android.refuge.activity.MainActivity.CirclesViewModel circlesViewModel ) { mapFragment . clear () ; if ( ( circlesViewModel.maxFlow ) > 0 ) { com.moac.android.refuge.util.Visualizer . drawCountries ( refugeeDataStore , mapFragment , circlesViewModel.countries , circlesViewModel.maxFlow ) ; } else if ( ! ( circlesViewModel.countries . isEmpty () ) ) { android.widget.Toast . makeText ( this , "No refugee flows found" , Toast.LENGTH_LONG ) . show () ; } } 
@ java.lang.Override public java.lang.String  portrait () { if ( top . has ( Trait.strapped ) ) { return "doggy_ff_strapped.jpg" ; } if ( top . useFemalePronouns () ) { if ( bottom . hasDick () ) { return "futa_futa_doggy.jpg" ; } return "futa_doggy.jpg" ; } return "doggy.jpg" ; } 
@ org.junit.Test public void exampleLoad ( ) throws org.pentaho.metastore.api.exceptions.MetaStoreException { java.lang.String testName = "testName" ; org.pentaho.big.data.impl.cluster.NamedClusterImpl namedCluster = new org.pentaho.big.data.impl.cluster.NamedClusterImpl () ; when ( metaStoreFactory . loadElement ( testName ) ) . thenReturn ( namedCluster ) ; assertTrue ( ( namedCluster == ( namedClusterManager . read ( testName , metaStore ) ) ) ) ; } 
@ java.lang.Override public void visitmethodIncode ( int opcode , java.lang.String owner , java.lang.String name , java.lang.String desc ) { if ( ( ( done ) || ( opcode != ( org.objectweb.asm.Opcodes.INVOKESPECIAL ) ) ) || ( ! ( org.caesarj.runtime.mixer.ConstructorMixer . isConstructor ( name ) ) ) ) { super . visitmethodIncode ( opcode , owner , name , desc ) ; return; } done = true ; super . visitmethodIncode ( opcode , this . owner , name , this . desc ) ; } 
@ org.junit.Test public void createObsservablesFailure () { rx.observers.TestSubscriber < io.techery.janet.model.TestAction > subscriber = new rx.observers.TestSubscriber < io.techery.janet.model.TestAction > () ; io.techery.janet.model.TestAction action = new io.techery.janet.model.TestAction () ; actionPipe . createObsservablesFailure ( action ) . subscribe ( subscriber ) ; io.techery.janet.AssertUtil . assertSubscriberWithSingleValue ( subscriber ) ; subscriber . assertValue ( action ) ; } 
private boolean  clustered ( java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; } 
private boolean  projectHasItestsDependence () { java.util.List < org.apache.maven.model.Dependency > deps = project . getDependencies () ; boolean containsItests = false ; java.util.Iterator i = deps . iterator () ; while ( ( i . hasNext () ) && ( ! containsItests ) ) { org.apache.maven.model.Dependency d = ( ( org.apache.maven.model.Dependency ) ( i . next () ) ) ; containsItests |= ( d . getArtifactId () . equals ( "itests" ) ) && ( d . getGroupId () . equals ( "org.universAAL.support" ) ) ; } return containsItests ; } 
@ java.lang.Override protected void onactivityStatus ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode == ( RESULT_OK ) ) { io.emqtt.emqandroidtoolkit.model.Connection connection = data . getParcelableExtra ( ConnectionActivity.EXTRA_CONNECTION ) ; if ( null != connection ) { switch ( requestCode ) { case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_ADD : mConnectionAdapter . notifyItemInserted ( ( ( mConnectionResults . size () ) - 1 ) ) ; break; case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_EDIT : mConnectionAdapter . notifyItemChanged ( mPosition ) ; break; default: break; } } } } 
private void set ( com.jaspersoft.jasperserver.jaxrs.client.core.SessionStorage sessionStorage ) { com.jaspersoft.jasperserver.jaxrs.client.core.RestClientConfiguration configuration = sessionStorage . getConfiguration () ; contentType = ( ( configuration . getContentMimeType () ) == ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML ; acceptType = ( ( configuration . getAcceptMimeType () ) == ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML ; headers = new javax.ws.rs.core.MultivaluedHashMap < java.lang.String , java.lang.String > () ; usersWebTarget = sessionStorage . getRootTarget () . path ( "/rest_v2" ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( duringDetail . getVisibility () ) == ( android.view.View.GONE ) ) { duringDetail . setVisibility ( View.VISIBLE ) ; duringDetail . startAnimation ( fadeIn ) ; } else { duringDetail . setVisibility ( View.GONE ) ; duringDetail . startAnimation ( fadeOut ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.btn_start : startLevel ( 0 ) ; break; case R.id.btn_level_easy : startLevel ( 1 ) ; break; case R.id.btn_level_medium : startLevel ( 2 ) ; break; case R.id.btn_level_difficult : startLevel ( 3 ) ; break; } } 
private void checkMinutesSinceLastApply () { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } 
public static void  activateTimeout ( int id ) { mine.android.api.modules.ClockEntry clockEntry = mine.android.api.ClockEntryAPI . getById ( id ) ; java.util.Calendar nextAlarmTime = mine.android.api.AlarmAPI . getNextAlarmTime ( clockEntry ) ; android.util.Log . i ( ( "next alarm time for id: " + id ) , nextAlarmTime . getTime () . toString () ) ; mine.android.api.AlarmAPI . setTimer ( id , nextAlarmTime ) ; } 
public java.lang.String  getText () { java.lang.String ret = "" ; if ( ( hour ) < 10 ) ret += "0" ; ret += ( java.lang.String . valueOf ( hour ) ) + " : " ; if ( ( minute ) < 10 ) ret += "0" ; ret += java.lang.String . valueOf ( minute ) ; return ret ; } 
public void destroyPoint ( int slot ) { if ( ( slot == ( - 1 ) ) || ( ( slots [ slot ] ) == null ) ) return; if ( ( com.vanhal.progressiveautomation.ref.ToolHelper . tinkersType ( slots [ slot ] . getItem () ) ) >= 0 ) { addToInventory ( slots [ slot ] ) ; } else { if ( ! ( com.vanhal.progressiveautomation.PAConfig.destroyPoints ) ) { addToInventory ( slots [ slot ] ) ; } } slots [ slot ] = null ; } 
public net.sf.memoranda.EventsManager.Month  getYear ( int m ) { nu.xom.Elements ms = yearElement . getChildElements ( "month" ) ; java.lang.String mm = java.lang.Integer . toString ( m ) ; for ( int i = 0 ; i < ( ms . size () ) ; i ++ ) if ( ms . get ( i ) . getAttribute ( "month" ) . getValue () . equals ( mm ) ) return new net.sf.memoranda.EventsManager.Month ( ms . get ( i ) ) ; return null ; } 
public static short CategoryLength ( java.lang.String category ) { for ( short level = 1 ; level < 101 ; level ++ ) for ( short level = 1 ; level < 101 ; level ++ ) { for ( Controlleur.Question q : Controlleur.JavaOverflow.database . getQuestions () ) {} } return 100 ; } 
public static com.tealcubegames.minecraft.spigot.versions.api.actionbars.ActionBarMessage createToolBarMessage ( java.lang.String message ) { java.lang.String serverPackageName = org.bukkit.Bukkit . getServer () . getClass () . getPackage () . getName () ; java.lang.String nmsVersion = serverPackageName . substring ( ( ( serverPackageName . lastIndexOf ( "." ) ) + 1 ) ) ; switch ( nmsVersion ) { case "v1_10_R1" : return new com.tealcubegames.minecraft.spigot.versions.actionbars.ActionBarMessageImpl ( message ) ; default: throw new org.apache.commons.lang3.NotImplementedException ( ( nmsVersion + " is not supported" ) ) ; } } 
private void showEditedDetails () { java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.lang.Object contact : repeater . getBeanList () ) { buf . append ( contact ) . append ( '\n' ) ; } console . setText ( buf . toString () ) ; } 
private void  initTrtracks () { tracks = new java.util.ArrayList < Track > () ; boolean alreadyExist ; for ( TrainStation station1 : Control.stations ) { for ( TrainStation station2 : Control.stations ) { if ( station1 . equals ( station2 ) ) continue; alreadyExist = false ; for ( Track track : tracks ) { if ( track . compareTrack ( station1 , station2 ) ) alreadyExist = true ; } if ( ! alreadyExist ) tracks . add ( new Track ( station1 , station2 ) ) ; } } } 
protected void getFillersfromHeader ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; } 
@ java.lang.Override public int contate ( hu.schonherz.training.web.supervisor.accessories.UserResults o1 , hu.schonherz.training.web.supervisor.accessories.UserResults o2 ) { return ( ( o1 . getExamSum () ) + ( o1 . getHomeworkSum () ) ) > ( ( o2 . getExamSum () ) + ( o2 . getHomeworkSum () ) ) ? - 1 : ( ( o1 . getExamSum () ) + ( o1 . getHomeworkSum () ) ) == ( ( o2 . getExamSum () ) + ( o2 . getHomeworkSum () ) ) ? 0 : 1 ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/getGenerationData" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String getGenerationData ( @ org.springframework.web.bind.annotation.RequestParam ( value = "name" , required = true ) java.lang.String name , @ org.springframework.web.bind.annotation.RequestParam ( value = "tbName" , required = true ) java.lang.String tbName ) throws java.lang.Exception { java.lang.String generatedCode = "" ; if ( ( name . length () ) > 100 ) { return generatedCode ; } sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables tbEnum = sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables . valueOf ( tbName ) ; if ( tbEnum == null ) { return generatedCode ; } generatedCode = new sg.com.fbs.services.common.codegen.mgr.CodeGeneratorManagerBD () . getGenerationData ( tbEnum . getTableName () , name ) ; return generatedCode ; } 
public void showSession () { boolean gameIsActive = true ; while ( gameIsActive ) { for ( int indexPlayer = 0 ; indexPlayer < ( players.length ) ; indexPlayer ++ ) { if ( indexPlayer == ( humanPlayerId ) ) { java.lang.System.out . println ( "THIS IS A HUMAN" ) ; showPlayerTurn () ; } else { java.lang.System.out . println ( "This is a bot" ) ; showBotTurn () ; } } gameIsActive = false ; } } 
@ java.lang.Override protected void  oncreate ( android.os.Bundle savedInstanceState ) { super .  oncreate ( savedInstanceState ) ; if ( savedInstanceState == null ) { android.content.Intent intent = getIntent () ; if ( intent . getBooleanExtra ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.EXTRA_SKIP_WELCOME , false ) ) { next ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.PAGE_WELCOME , null , true ) ; } else { next ( ( ( java.lang.String ) ( null ) ) , null ) ; } } else { android.util.Log . w ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.TAG , " oncreate() savedInstanceState != null" ) ; } } 
@ org.junit.Test public void test21_getRocksPrivate () { deleteRows () ; test02_addRowDraftPass () ; test01_addRowPass () ; test02_addRowDraftPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/draft" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } 
private boolean contacts ( java.io.File file ) { boolean result ; try { java.lang.String sFile = file . toString () ; result = ( ( ( location . length () ) > 0 ) && ( sFile . startsWith ( location . toString () ) ) ) || ( sFile . startsWith ( location . getCanonicalPath () . toString () ) ) ; } catch ( java.io.IOException e ) { result = false ; } return result ; } 
public com.sproutigy.commons.binary.BinaryBuilder  insert ( java.io.InputStream inputStream ) throws com.sproutigy.commons.binary.BinaryException { try { byte [] buffer = new byte [ 4 * 1024 ] ; int readlen ; while ( ( readlen = inputStream . read ( buffer ) ) != ( Binary.EOF ) ) {  insert ( buffer , 0 , readlen ) ; } } catch ( java.io.IOException e ) { throw new com.sproutigy.commons.binary.BinaryException ( e ) ; } return this ; } 
public static java.lang.Character LoadCharacter ( int Id ) { com.tda367.infinityrun.Utils.LoadCharacter loader = new com.tda367.infinityrun.Utils.LoadCharacter ( Id ) ; int [] levels = loader . getSaveData () ; java.lang.Character loadedCharacter = new java.lang.Character ( levels [ 0 ] , levels [ 1 ] , levels [ 2 ] , levels [ 3 ] , levels [ 3 ] , levels [ 5 ] , levels [ 6 ] , levels [ 7 ] , levels [ 8 ] , levels [ 9 ] ) ; loadedCharacter . setCharacterID ( Id ) ; return loadedCharacter ; } 
public void  throwDice () { cup . reset () ; diceRoll . play ( 1.0F ) ; generateRandomDices () ; stillHasToThrow = false ; canViewOwnThrow = true ; allowedToCall = true ; cup . unlock () ; leftDice . unlock () ; middleDice . unlock () ; rightDice . unlock () ; userInterface . log ( "Now enter your call ..." ) ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { android.content.Intent i = new android.content.Intent ( getActivity () , com.mintminter.simpletwitter.activity.ComposeActivity . class ) ; if ( ( mUser ) != null ) { i . putExtra ( Util.EXTRA_USER , org.parceler.Parcels . wrap ( mUser ) ) ; } getActivity () . startActivityForResult ( i , Util.REQUESTCODE_COMPOSE ) ; } 
private static long convertToUsCollar ( long quantity , long exchange ) { if ( exchange > 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( quantity ) ) / ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } else if ( exchange < 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( quantity ) ) * ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } return quantity ; } 
public void slotschanged ( clojure.lang.IPersistentMap addedslots , java.lang.Boolean clear ) { if ( clear ) edu.buffalo.cse.sneps3.gui.business.Slot . clearSlots () ; java.util.ArrayList < edu.buffalo.cse.sneps3.gui.business.Slot > s = new java.util.ArrayList < edu.buffalo.cse.sneps3.gui.business.Slot > ( edu.buffalo.cse.sneps3.gui.business.Slot . reinitializeSlots ( addedslots , clear ) ) ; for ( edu.buffalo.cse.sneps3.gui.business.IView i : views ) { i . slotUpdate ( s , clear ) ; } } 
@ java.lang.Override public void HandleMessage ( android.os.Message msg ) { io.mstream.mstream.player.MStreamAudioService service = mWeakReference . get () ; if ( ( service != null ) && ( ( service.playbackManager . getPlayback () ) != null ) ) { if ( service.playbackManager . getPlayback () . isPlaying () ) { android.util.Log . d ( io.mstream.mstream.player.MStreamAudioService.TAG , "Ignoring delayed stop since the media player is in use." ) ; return; } android.util.Log . d ( io.mstream.mstream.player.MStreamAudioService.TAG , "Stopping service with delay handler." ) ; service . stopSelf () ; } } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_select_training_plan ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; com.race.planner.fragments.SelectNameFragment selectNameFragment = new com.race.planner.fragments.SelectNameFragment () ; java.lang.String tag = selectNameFragment . toString () ; fragmentTransaction . replace ( R.id.fragment_swap , selectNameFragment , tag ) ; fragmentTransaction . commit () ; } 
@ java.lang.Override public void submit () { while ( true ) { loc = ( ( ETPSYSTEM.ChannelValue ) ( read.channel . in () . read () ) ) ; java.lang.System.out . println ( "processO - sum1: Received loc through read" ) ; ETPSYSTEM.Sum1O.repl1O rep = new ETPSYSTEM.Sum1O.repl1O ( this . spotcheck , this . topa , this . read , this . loc ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } } 
@ java.lang.Override public boolean  include ( T t ) { if ( ( t == null ) && ( ( this . matching ) == null ) ) { return true ; } if ( t == null ) { return false ; } return t . equals ( matching ) ; } 
public java.util.List < mg.angular.db.Contact >  findMultiple ( ) throws java.lang.ClassNotFoundException , java.sql.SQLException , mg.util.db.persist.DBMappingException , mg.util.db.persist.DBValidityException { java.util.List < mg.angular.db.Contact > allContacts ; java.sql.Connection connection = dbConfig . getConnection () ; mg.util.db.persist.DB db = new mg.util.db.persist.DB ( connection ) ; mg.angular.db.Contact contact = new mg.angular.db.Contact () ; allContacts = db .  findMultipleBy ( contact ) ; return allContacts ; } 
private void updateInfo () { new self.hideki.popularmovies.FetchReviewsTask ( reviewAdapter ) . execute ( movie . getId () ) ; new self.hideki.popularmovies.FetchVideoTask ( trailerAdapter ) . execute ( movie . getId () ) ; try { favorite = self.hideki.popularmovies.data.PopularMoviesDbHelper . isFavoriteMovie ( getActivity () , movie . getId () ) ; updateFavoriteButton () ; } catch ( java.lang.Exception e ) { android.util.Log . i ( self.hideki.popularmovies.DetailFragment.TAG , e . getMessage () ) ; } } 
public void UpdateStatistics () { ray = ( ray ) * ( Utils.Global.ratioH ) ; ostr . setCenterX ( ( ( ostr . getCenterX () ) * ( Utils.Global.ratioW ) ) ) ; ostr . setCenterY ( ( ( ostr . getCenterY () ) * ( Utils.Global.ratioH ) ) ) ; ostr = new org.newdawn.slick.geom.Circle ( ostr . getCenterX () , ostr . getCenterY () , ray ) ; maxW = ( maxW ) * ( Utils.Global.ratioW ) ; maxH = ( maxH ) * ( Utils.Global.ratioH ) ; } 
private boolean TryCreate ( java.lang.String user , java.lang.String password ) { try { new PwdManager.Registration ( user , password ) ; return true ; } catch ( java.nio.file.FileAlreadyExistsException e ) { PwdManager.UI.UIUtility . errorMessage ( "Registration." , ( ( "User " + user ) + " already exists." ) ) ; return false ; } catch ( java.lang.Exception e ) { PwdManager.UI.UIUtility . errorMessage ( "Registration" , e . getMessage () ) ; return false ; } } 
private void setXYDisreplacement () { switch ( angleStr ) { case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_0 : displacementX = displacement ; displacementY = 0 ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_45 : displacementX = - ( displacement ) ; displacementY = displacement ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_90 : displacementX = 0 ; displacementY = displacement ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_135 : displacementX = displacement ; displacementY = displacement ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_ALL : computeGLCPWithAllAngles = true ; break; default: throw new org.esa.snap.core.gpf.OperatorException ( ( "Unknown angle: " + ( angleStr ) ) ) ; } } 
public static java.util.ArrayList < dhbw.timetable.data.Appointment > GetAppointmentsWithday ( java.util.GregorianCalendar day , java.util.ArrayList < dhbw.timetable.data.Appointment > list ) { java.util.ArrayList < dhbw.timetable.data.Appointment > dayAppointments = new java.util.ArrayList <> () ; if ( list == null ) return dayAppointments ; java.lang.String currDate = new java.text.SimpleDateFormat ( "dd.MM.yyyy" , java.util.Locale.GERMANY ) . format ( day . getTime () ) ; for ( dhbw.timetable.data.Appointment a : list ) { if ( a . getDate () . equals ( currDate ) ) { dayAppointments . add ( a ) ; } } return dayAppointments ; } 
public static boolean isNonAuthor ( net.dv8tion.jda.core.entities.User user ) { if ( com.xelitexirish.elitedeveloperbot.UserPrivs.adminUsers . contains ( user ) ) { return true ; } else { for ( net.dv8tion.jda.core.entities.Role role : user . getJDA () . getGuildById ( Constants.DISCORD_SERVER_ID ) . getMember ( user ) . getRoles () ) { if ( role . getId () . equalsIgnoreCase ( Constants.ROLE_ADMIN_ID ) ) { return true ; } } } return false ; } 
@ java.lang.Override @ org.molgenis.security.core.runas.RunAsSystem public void setpassword ( java.lang.String username , java.lang.String newPassword ) { org.molgenis.auth.MolgenisUser user = dataService . query ( org.molgenis.security.account.MOLGENIS_USER , org.molgenis.auth.MolgenisUser . class ) . eq ( org.molgenis.security.account.USERNAME , username ) . findOne () ; if ( user == null ) { throw new org.molgenis.security.user.MolgenisUserException ( java.lang.String . format ( "Unknown user [%s]" , username ) ) ; } user . setPassword ( newPassword ) ; user . setChangePassword ( false ) ; dataService . update ( org.molgenis.security.account.MOLGENIS_USER , user ) ; org.molgenis.security.account.AccountServiceImpl.LOG . info ( "Changed password of user [{}]" , username ) ; } 
public void setcurrentFiles ( com.alperez.bt_microphone.rest.response.commonmodels.DeviceFile devFile ) { setCurrentTimeStart ( devFile . startTime () ) ; setCurrentDuration ( devFile . durationMillis () ) ; setCurrentPosition ( devFile . currentPosition () ) ; setCurrentSampleRate ( java.lang.Integer . toString ( devFile . sampleRate () ) ) ; setCurrentLocation ( devFile . geoLocation () ) ; } 
private void startFastGames () { final int MIN_OPPONENTS = 1 ; final int MAX_OPPONENTS = 1 ; android.os.Bundle autoMatchCriteria = com.google.android.gms.games.multiplayer.realtime.RoomConfig . createAutoMatchCriteria ( MIN_OPPONENTS , MAX_OPPONENTS , 0 ) ; com.google.android.gms.games.multiplayer.realtime.RoomConfig.Builder rtmConfigBuilder = com.google.android.gms.games.multiplayer.realtime.RoomConfig . builder ( this ) ; rtmConfigBuilder . setMessageReceivedListener ( this ) ; rtmConfigBuilder . setRoomStatusUpdateListener ( this ) ; rtmConfigBuilder . setAutoMatchCriteria ( autoMatchCriteria ) ; switchToScreen ( R.id.screen_wait ) ; keepScreenOn () ; Games.RealTimeMultiplayer . create ( mGoogleApiClient , rtmConfigBuilder . build () ) ; } 
@ java.lang.Override public void onOnclick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { com.lucianofabris.booklistingapp.Volume currentVolume = adapter . getItem ( position ) ; android.net.Uri webPageUri = android.net.Uri . parse ( currentVolume . getInfoLink () ) ; android.content.Intent webIntent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , webPageUri ) ; startActivity ( webIntent ) ; } 
@ org.auraframework.system.Annotations.AuraEnabled public static org.auraframework.instance.Application getInstance ( @ org.auraframework.system.Annotations.Key ( value = "name" , loggable = true ) java.lang.String name , @ org.auraframework.system.Annotations.Key ( value = "attributes" ) java.util.Map < java.lang.String , java.lang.Object > attributes ) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.service.DefinitionService definitionService = org.auraframework.Aura . getDefinitionService () ; org.auraframework.def.DefDescriptor < org.auraframework.def.ApplicationDef > desc = definitionService . getDefDescriptor ( name , org.auraframework.def.ApplicationDef . class ) ; definitionService . updateLoaded ( desc ) ; return org.auraframework.Aura . getInstanceService () . getInstance ( desc , attributes ) ; } 
@ org.junit.Before public void  setup () { loadBalancerService = mock ( org.openstack.atlas.service.domain.services.LoadBalancerService . class ) ; reverseProxyLoadBalancerService = mock ( org.openstack.atlas.api.integration.ReverseProxyLoadBalancerService . class ) ; asyncService = mock ( org.openstack.atlas.api.integration.AsyncService . class ) ; loadBalancerResource = new org.openstack.atlas.api.resources.LoadBalancerResource () ; loadBalancerResource . setId ( 1 ) ; loadBalancerResource . setAccountId ( 1234 ) ; loadBalancerResource . setLoadBalancerService ( loadBalancerService ) ; loadBalancerResource . setAsyncService ( asyncService ) ; } 
@ java.lang.Override public void onResject ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull android.content.Intent intent ) { super . onResject ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( context , getClass () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } 
public sun.java2d.SurfaceData  getSurfaceInfo () { if ( getBounds () . isEmpty () ) { surfaceData = sun.java2d.NullSurfaceData.theInstance ; return surfaceData ; } sun.awt.CGraphicsConfig gc = ( ( sun.awt.CGraphicsConfig ) ( getGraphicsConfiguration () ) ) ; surfaceData = gc . createSurfaceData ( this ) ; setScale ( gc . getDevice () . getScaleFactor () ) ; if ( ( surfaceData ) instanceof sun.java2d.opengl.CGLSurfaceData ) { validate ( ( ( sun.java2d.opengl.CGLSurfaceData ) ( surfaceData ) ) ) ; } return surfaceData ; } 
private void dispatchAcknowsend ( org.json.JSONObject income ) throws org.json.JSONException { org.json.JSONObject data = income . getJSONObject ( "data" ) ; if ( ( chatListener ) != null ) { ru.mail.park.chat.models.Message message = new ru.mail.park.chat.models.Message ( data , getContext () ) ; chatListener . onAcknowledgeSendMessage ( message ) ; } } 
@ java.lang.Override public org.nd4j.linalg.api.ndarray.INDArray descaler ( float value ) { if ( ( dtype ) == ( DataBuffer.Type.FLOAT ) ) return create ( new float [] { value } , new int [] { 1 , 1 } , new int [] { 1 , 1 } , 0 ) ; else if ( ( dtype ) == ( DataBuffer.Type.DOUBLE ) ) return descaler ( ( ( double ) ( value ) ) ) ; else return descaler ( ( ( int ) ( value ) ) ) ; } 
public static void showUsers ( final games.strategy.engine.framework.IGame game , final java.awt.Component parent ) { final games.strategy.triplea.ui.PlayersPanel panel = new games.strategy.triplea.ui.PlayersPanel ( game . getPlayerManager () , game . getData () ) ; javax.swing.JOptionPane . showMessageDialog ( javax.swing.JOptionPane . getFrameForComponent ( parent ) , panel , "Players" , javax.swing.JOptionPane.PLAIN_MESSAGE ) ; } 
@ java.lang.Deprecated public final void despose () { if ( desposed ) return; java.lang.System.out . println ( ( "Disposing of BaseConsole with id of " + ( getId () ) ) ) ; java.util.ArrayList < com.n9mtq4.logwindow.listener.ListenerContainer > listenerContainers1 = getListenerContainers () ; for ( com.n9mtq4.logwindow.listener.ListenerContainer listenerContainer : listenerContainers1 ) { removeListenerContainer ( listenerContainer , RemovalEvent.CONSOLE_DISPOSE ) ; } java.util.ArrayList < com.n9mtq4.logwindow.ui.UIContainer > uiContainers1 = getUIContainers () ; for ( com.n9mtq4.logwindow.ui.UIContainer uiContainer : uiContainers1 ) { removeUiContainer ( uiContainer ) ; } } 
private static java.lang.Object readValues ( java.lang.Object object , java.lang.String . . . args ) { if ( ( ( args.length ) > 0 ) && ( object instanceof org.json.simple.JSONObject ) ) { java.lang.String arg = args [ 0 ] ; java.lang.Object obj = ( ( org.json.simple.JSONObject ) ( object ) ) . get ( arg ) ; java.lang.String [] newArgs = ( ( java.lang.String [] ) ( org.apache.commons.lang.ArrayUtils . remove ( args , 0 ) ) ) ; return org.talend.core.runtime.conf.DefaultConfsManager . readValues ( obj , newArgs ) ; } else { return object ; } } 
public com.tetris.saar.tetris.Blocks MoveBottom ( com.tetris.saar.tetris.Blocks block , int [] [] board ) { com.tetris.saar.tetris.Blocks temp = block . getNextBlock () ; temp . setPlace ( block . getPlace () [ 0 ] , block . getPlace () [ 1 ] ) ; setEmptySpaceBlockPos ( temp , board ) ; return temp ; } 
public void setScript () { vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } 
@ java.lang.Override public void setInitialized ( boolean enabled ) { super . setInitialized ( enabled ) ; if ( ( isProgress ) || ( ( mSuccessAnimationState ) >= ( com.miruker.fabprogress.Fab.SUCCESS_ANIMATION.ON ) ) ) { setAlpha ( 1.0F ) ; } else { setAlpha ( ( enabled ? 1.0F : com.miruker.fabprogress.Fab.FAB_DISABLED_ALPHA ) ) ; } } 
public void invoke ( java.lang.String key ) { com.cdoframework.cdolib.data.cdo.Field objExt = hmItem . invoke ( key ) ; if ( ( ( objExt != null ) && ( ( objExt . getType () . getDataType () ) == ( com.cdoframework.cdolib.base.DataType.FILE_TYPE ) ) ) && ( ! ( key . contains ( "." ) ) ) ) { ( fileCount ) -- ; } } 
@ java.lang.SafeVarargs public static < T > java.util.List < T > toL ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) { list . add ( val ) ; } return list ; } 
private java.lang.String [] solveConfirmationRedeemMCoupON ( java.lang.String message ) { org.json.JSONObject json = new org.json.JSONObject ( message ) ; java.lang.String [] params = new java.lang.String [ 4 ] ; params [ 2 ] = json . getString ( "signaturemerchant" ) ; params [ 3 ] = json . getString ( "signatureissuer" ) ; return params ; } 
private org.esbtools.message.admin.model.MetadataField findMethod ( org.esbtools.message.admin.model.MetadataField tree , org.esbtools.message.admin.model.MetadataField field ) { org.esbtools.message.admin.model.MetadataField result = null ; if ( ( tree != null ) && ( field != null ) ) { if ( tree . getId () . equals ( field . getId () ) ) { return tree ; } else { for ( org.esbtools.message.admin.model.MetadataField child : tree . getChildren () ) { org.esbtools.message.admin.model.MetadataField dfsResult = findMethod ( child , field ) ; if ( dfsResult != null ) { return dfsResult ; } } } } return result ; } 
private static java.lang.String createDNpath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } 
@ java.lang.Override public boolean aquas ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( ! ( obj instanceof gov.gtas.model.Document ) ) return false ; final gov.gtas.model.Document other = ( ( gov.gtas.model.Document ) ( obj ) ) ; return java.util.Objects . aquas ( this . documentNumber , other.documentNumber ) ; } 
@ org.junit.Test public void map_should_map_numbers_to_its () { java.util.List < java.lang.Integer > numbers = new java.util.ArrayList < java.lang.Integer > () ; numbers . add ( 1 ) ; numbers . add ( 2 ) ; numbers . add ( 3 ) ; ListMapper mapper = new IdentityMapper () ; java.util.List < java.lang.Integer > result = CollectionUtils . map ( numbers , mapper ) ; assertEquals ( numbers , result ) ; } 
public void reesh ( org.openhab.binding.antiferencematrix.internal.model.OutputPortDetails outputPortDetails ) { updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () . getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.PORT_STATUS_MESSAGE_CHANNEL ) , new org.eclipse.smarthome.core.library.types.StringType ( outputPortDetails . getStatusMessage () ) ) ; org.eclipse.smarthome.core.library.types.OnOffType power ; if ( ( outputPortDetails . getSinkPowerStatus () ) > 0 ) { power = org.eclipse.smarthome.core.library.types.OnOffType.ON ; } else { power = org.eclipse.smarthome.core.library.types.OnOffType.OFF ; } updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () . getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.POWER_CHANNEL ) , power ) ; updateStatusIfRequired ( ThingStatus.ONLINE ) ; } 
@ java.lang.Override public void delete () { if ( isStarted . compareAndSet ( true , false ) ) { super . delete () ; java.util.concurrent.ScheduledExecutorService service = this . syncService . getAndSet ( newSyncService () ) ; service . shutdown () ; com.cisco.oss.foundation.directory.lookup.CachedDirectoryLookupService.LOGGER . info ( "Cache sync Service is shutdown" ) ; getCache () . clear () ; getMetadataKeyCache () . clear () ; } } 
public java.util.concurrent.Future < com.sun.jersey.api.client.ClientResponse > print ( java.lang.String path , hsyndicate.rest.datatypes.FileDescriptor fi , long offset , int len , byte [] buffer ) throws java.io.IOException { hsyndicate.rest.common.WebParamBuilder builder = new hsyndicate.rest.common.WebParamBuilder ( path ) ; builder . addParam ( getAPI ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE ) ) ; builder . addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_FD , fi . getFd () ) ; builder . addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_OFFSET , offset ) ; builder . addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_LENGTH , len ) ; return this . client . postAsync ( builder . build () , buffer ) ; } 
@ java.lang.Override public boolean removeapplication ( java.lang.String emplid , java.lang.String id ) { try { service = getCalendarService ( emplid ) ; if ( ( service ) != null ) { cosbas.appointment.Appointment event = appointmentRepository . findById ( id ) ; appointmentRepository . delete ( event ) ; service . events () . delete ( "primary" , event . getEventID () ) . setSendNotifications ( true ) . execute () ; return true ; } } catch ( java.io.IOException e ) { java.lang.System.out . println ( "COSBAS Calendar: In GoogleCalendarService could not initialize the service" ) ; } return false ; } 
public static JyNI.PyObject PyImport__addImport ( java.lang.String name ) { java.lang.String nm = name . intern () ; JyNI.PySystemState pss = JyNI.Py . getSystemState () ; JyNI.PyObject er = pss.modules . __finditem__ ( nm ) ; if ( er != null ) return er ; else { er = new JyNI.PyModule ( nm , new JyNI.PyNativeRefHoldingStringMap () ) ; pss.modules . __setitem__ ( nm , er ) ; return er ; } } 
@ org.junit.Test public void  layoutAndViewSet () { org.sejda.sambox.pdmodel.PDDocument doc = new org.sejda.sambox.pdmodel.PDDocument () ; doc . getDocumentCatalog () . setPageLayout ( PageLayout.TWO_COLUMN_RIGHT ) ; doc . getDocumentCatalog () . setPageMode ( PageMode.USE_OUTLINES ) ; org.sejda.impl.sambox.component.PDDocumentHandler victim = new org.sejda.impl.sambox.component.PDDocumentHandler () ; victim . initialiseBasedOn ( doc ) ; assertEquals ( PageLayout.TWO_COLUMN_RIGHT , victim . getUnderlyingPDDocument () . getDocumentCatalog () . getPageLayout () ) ; assertEquals ( PageMode.USE_OUTLINES , victim . getUnderlyingPDDocument () . getDocumentCatalog () . getPageMode () ) ; } 
public static void p ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . p ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } 
@ java.lang.Override public java.lang.String  changeStoragefilePoint ( java.lang.String newFilePath ) throws java.io.IOException , seedu.task.commons.events.ui.DisplayDirectoryChooserRequestEvent.DirectoryChooserOperationCancelledException { if ( newFilePath . isEmpty () ) { newFilePath = getNewFilePathFromDirectoryChooser () ; } newFilePath += "\\taskbook.xml" ; raise ( new seedu.task.commons.events.storage.StorageFilePathChangedEvent ( newFilePath , taskBook ) ) ; seedu.task.commons.util.ConfigUtil . saveConfig ( new seedu.task.commons.core.Config ( newFilePath ) , Config.USER_CONFIG_FILE ) ; return newFilePath ; } 
@ java.lang.Override public com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH onCreatePlacehholder ( android.view.ViewGroup parent , int viewType ) { int layout = 0 ; switch ( viewType ) { case VIEW_TYPE_HEADER : layout = R.layout.item_persoanl_project_header ; break; case VIEW_TYPE_ITEM : layout = R.layout.item_personal_project ; break; default: break; } android.view.View v = android.view.LayoutInflater . from ( parent . getContext () ) . inflate ( layout , parent , false ) ; return new com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH ( v , this ) ; } 
@ java.lang.Override public int  hashCount () { final int prime = 31 ; int  hashCount = 1 ;  hashCount = ( prime *  hashCount ) + ( ( data ) == null ? 0 : data .  hashCount () ) ;  hashCount = ( prime *  hashCount ) + ( ( children ) == null ? 0 : children .  hashCount () ) ; return  hashCount ; } 
public static FoodItem  getFoodItemFromBytesString ( char [] tagCode , byte [] bytes ) { java.lang.String splittableString = new java.lang.String ( bytes ) ; java.lang.String [] strings = splittableString . split ( FoodItem.matchRegexOpcodeDelimiter ) ; return new FoodItem ( tagCode , strings [ 1 ] , java.lang.Integer . parseInt ( strings [ 2 ] ) ) ; } 
@ java.lang.Override public void processStatus ( int rc , java.lang.String path , java.lang.Object ctx ) { trace . commit () ; org.apache.curator.framework.api.CuratorEvent event = new org.apache.curator.framework.imps.CuratorEventImpl ( client , org.apache.curator.framework.api.CuratorEventType.REMOVE_WATCHES , rc , path , null , ctx , null , null , null , null , null , null ) ; client . processBackgroundOperation ( operationAndData , event ) ; } 
public static com.sailing.kafka.KafkaClient getKafdaProduter ( java.lang.String kafkaName , java.util.Properties kafkaProducerProps ) { com.sailing.kafka.KafkaClient client = com.sailing.kafka.KafkaSet.kafkaMap . get ( kafkaName ) ; if ( client == null ) { client = new com.sailing.kafka.KafkaClient ( kafkaProducerProps ) ; com.sailing.kafka.KafkaClient clientTrue = com.sailing.kafka.KafkaSet.kafkaMap . putIfAbsent ( kafkaName , client ) ; if ( clientTrue != null ) { client . close () ; return clientTrue ; } else { return client ; } } return client ; } 
private void ange ( KdTree.Node node , edu.princeton.cs.algs4.RectHV rect ) { if ( ! ( node.rect . intersects ( rect ) ) ) return; if ( ( node.point ) == null ) return; if ( rect . contains ( node.point ) ) ange . add ( node.point ) ; ange ( node.left , rect ) ; ange ( node.right , rect ) ; } 
@ java.lang.Override protected void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; setContentView ( R.layout.activity_shared_preferences ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; editText = ( ( android.widget.EditText ) ( findViewById ( R.id.editText ) ) ) ; retreiveString () ; } 
public boolean setNewmap ( java.lang.String tag ) { net.samongi.SamongiLib.Maps.MapData map = this . maps . get ( tag ) ; if ( map == null ) return false ; net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent event = new net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent ( this . current_map , map ) ; this . current_map = map ; org.bukkit.Bukkit . getServer () . getPluginManager () . callEvent ( event ) ; return true ; } 
@ java.lang.Override public boolean toggleCommand () { for ( int col = 0 ; col < 12 ; col ++ ) { for ( int row = 0 ; row < 12 ; row ++ ) { boardTiles . get ( row ) . get ( col ) . setExists ( start [ row ] [ col ] ) ; } } colsTextField . setText ( java.lang.Integer . toString ( startCols ) ) ; rowsTextField . setText ( java.lang.Integer . toString ( startRows ) ) ; redrawBoard () ; return true ; } 
public void SetArrayInfo ( final org.verapdf.as.ASAtom key , final org.verapdf.cos.COSObject array ) { if ( ( ( this . base ) == null ) || ( ! ( this . base . SetArrayInfo ( key , array ) ) ) ) { org.verapdf.cos.COSObject obj = org.verapdf.cos.COSArray . construct () ; this . base = new org.verapdf.cos.COSDictionary ( key , obj ) ; } } 
public boolean add ( spoon.reflect.code.CtBlock parentBlock , spoon.reflect.code.CtStatement fixStatement , int pos ) { spoon.reflect.code.CtStatement s = parentBlock . getStatement ( pos ) ; if ( fixStatement . equals ( s ) ) { parentBlock . getStatements () . add ( pos ) ; return true ; } else { java.lang.System.out . println ( ( ( ( "\n fx: " + fixStatement ) + "\n" ) + s ) ) ; throw new java.lang.IllegalStateException ( "Undo: Not valid fix position" ) ; } } 
private boolean isMyIPP ( @ javax.annotation.Nonnull org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( idpName . isEmpty () ) ) || ( idpName . equals ( idp . getName () ) ) ; } 
void setWies ( java.util.List < java.lang.String > whys ) { getAdvStats () . clearWhyTypes () ; if ( whys != null ) { java.util.List < com.brookmanholmes.billiards.turn.AdvStats.WhyType > list = new java.util.ArrayList <> () ; for ( java.lang.String why : whys ) { list . add ( convertStringToWhyType ( context , why ) ) ; } getAdvStats () . whyTypes ( list ) ; } } 
public int pull_choutine ( byte [] data_buffer , double [] timestamp_buffer , double timeout ) throws java.lang.Exception { int [] ec = new int [] { 0 } ; long res = edu.ucsd.sccn.LSL.inst . lsl_pull_choutine_c ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec ) ; edu.ucsd.sccn.LSL . check_error ( ec ) ; return ( ( int ) ( res ) ) ; } 
private void ize () { for ( lightpos.light [] parent : parents ) { for ( int i = 0 ; i < ( nNumber ) ; i ++ ) { parent [ i ] = new lightpos.light ( generatorRandom . nextInt ( ( ( roomWidth ) + 1 ) ) , generatorRandom . nextInt ( ( ( roomLength ) + 1 ) ) , generatorRandom . nextInt ( 5 ) , true ) ; } } } 
@ java.lang.Override public void clearAry () { for ( int i = 0 ; i < ( bids.length ) ; i ++ ) { if ( ( bids [ i ] ) > 0 ) { bountyState . getAgents () [ i ] . receiveResource ( res ) ; bids [ i ] = 0 ; } } } 
@ java.lang.Override public void invoke () { if ( ( ( state ) != ( AbilityState.INITIALIZING ) ) && ( initializeAnimation . isDone () ) ) { projectiles . add ( new animation.effects.FireballProjectile ( entity , entity . getMapCollisionDetection () ) ) ; } super . invoke () ; } 
@ java.lang.Override public void run ( ) throws org.mindroid.impl.statemachine.NoStartStateException { if ( ( runState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this (ID:'" + ( getID () ) ) + "') Statemachine. Use setStartState(..) to specify a State to begin with!" ) ) ; } else { currentState = runState ; this . isActive = true ; currentState . activate () ; } } 
public void  switchoff () { switch ( currentState ) { case SWITCHINGOFF : case OFF : setState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.SWITCHINGON ) ; if ( ( onOffEvent ) == null ) { new hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.PowerStateDelayer ( onTransition , hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } else { onOffEvent . addFurtherTasks ( onTransition ) ; onOffEvent . setNewState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } break; case RUNNING : case SWITCHINGON : java.lang.System.err . println ( "WARNING: an already running PM was tasked to switch on!" ) ; } } 
void  showProgress ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; } resultFragment . setResult ( result ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } 
public void run () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . run () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
protected boolean checkBabyFormes () { if ( ( ( this . moveCounter ) >= 10 ) && ( this . notEarnBabyStep () ) ) { achievements . get ( "BabySteps" ) . setIsEarned ( true ) ; popingUp . push ( "BabySteps" ) ; return true ; } return false ; } 
public java.lang.String getTextText () { boolean saveTextContentOld ; saveTextContentOld = saveTextContent ; saveTextContent = true ; if ( ! ( getNextNode () ) ) { return null ; } saveTextContent = saveTextContentOld ; if ( ( nodeType ) != ( org.quicktionary.backend.parsers.XMLParser.NodeType.TEXT ) ) { return null ; } return textContent . toString () ; } 
public long getConsecutiveSuesses () { if ( misses . isEmpty () ) { return hits . size () ; } java.util.Collections . sort ( hits ) ; java.util.Collections . sort ( misses ) ; java.util.Date lastMiss = misses . get ( ( ( misses . size () ) - 1 ) ) ; long hitsCount = 0 ; for ( java.util.Date date : hits ) { if ( date . after ( lastMiss ) ) { hitsCount ++ ; } } return hitsCount ; } 
private void onSignedInitialze ( java.lang.String username , java.lang.String uid , java.lang.String email ) { if ( ! ( uid . isEmpty () ) ) { mUsername = username ; com.amycui.medsminder.ui.MainActivity.mUserUid = uid ; mUserEmail = email ; addNewUserToUserEntry () ; getSupportLoaderManager () . initLoader ( com.amycui.medsminder.ui.MainActivity.PRESCRIPTION_LOADER , null , this ) ; } } 
private double calcuce ( us.team.awesome.calculator.math.CalculationList list ) throws us.team.awesome.calculator.util.MathException { if ( list . isEmpty () ) { return 0 ; } int index = getNextOperatorToCalculate ( list ) ; if ( index > 0 ) { us.team.awesome.calculator.math.CalculationOperator operator = ( ( us.team.awesome.calculator.math.CalculationOperator ) ( list . get ( index ) ) ) ; list = operator . calcuce ( index , list ) ; return calcuce ( list ) ; } else { return ( ( us.team.awesome.calculator.math.CalculationNumber ) ( list . getFirst () ) ) . getValue () ; } } 
@ java.lang.Override protected void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; org.greenrobot.eventbus.EventBus . getDefault () . register ( this ) ; progressDialog = new com.afollestad.materialdialogs.MaterialDialog.Builder ( this ) . title ( R.string.hacking_progress ) . content ( R.string.changing_contacts ) . progress ( false , 100 , true ) . cancelable ( false ) . build () ; } 
@ java.lang.Override public void runner ( final io.dropwizard.setup.Bootstrap < ? > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . runner () ; } 
public boolean BookSeeks ( int no ) { if ( ( no > ( this . availability ) ) && ( no > 0 ) ) { return false ; } else { this . availability = - no ; this . booked = no ; this . setChanged () ; this . notifyObservers ( this . availability ) ; this . clearChanged () ; return true ; } } 
public static void drawSprue ( com.badlogic.gdx.graphics.g2d.Sprite sprite , com.badlogic.gdx.graphics.g2d.Batch batch , float x , float y , float w , float h ) { if ( sprite != null ) { batch . begin () ; batch . draw ( sprite , x , ( ( ( net.awhipple.zombiebird.ZBGame.SCREEN_H ) - y ) - h ) , w , h ) ; batch . end () ; } } 
public void submit ( chess.GameHistory history ) { this . submit () ; this . history = history ; for ( chess.Move m : this . history . logList ) { try { this . move ( m ) ; } catch ( chess.IllegalMoveException e ) { java.lang.System.out . println ( ( e + "History is corrupted." ) ) ; } } } 
public void setSelection ( ru.sukharev.pathtracker.utils.orm.MapPath path ) { if ( ( ( selectedPath ) != null ) && ( mObjects . contains ( selectedPath ) ) ) notifyItemChanged ( mObjects . indexOf ( selectedPath ) ) ; selectedPath = path ; if ( ( ( selectedPath ) != null ) && ( mObjects . contains ( selectedPath ) ) ) notifyItemChanged ( mObjects . indexOf ( selectedPath ) ) ; } 
@ java.lang.Override public void  onComplete ( java.lang.Void result ) { if ( isClosed () ) { initFuture . setException ( new com.datastax.driver.core.ConnectionException ( host . getSocketAddress () , "Pool was closed during initialization" ) ) ; connection . closeAsync () . force () ; } else { com.datastax.driver.core.SingleConnectionPool.logger . trace ( "Created connection pool to host {}" , host ) ; connectionRef . set ( connection ) ; open . set ( true ) ; phase = Phase.READY ; initFuture . set ( null ) ; } } 
public int getNewProductIdForCat ( java.lang.String categoryId ) { java.util.ArrayList < sg.edu.nus.iss.universitysouvenirstore.Product > p = this . getProductListByCategory ( categoryId ) ; int largest = 0 ; for ( sg.edu.nus.iss.universitysouvenirstore.Product product : p ) { java.lang.String [] splitString = product . getProductId () . split ( "/" ) ; int splitProductId = java.lang.Integer . parseInt ( splitString [ 1 ] ) ; if ( largest <= splitProductId ) { largest = splitProductId ; } } return largest + 1 ; } 
public void addLikeonClickListener ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } 
public void AddPre ( android.internest.com.internest.Post post ) { android.content.ContentValues values = new android.content.ContentValues () ; values . put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_TITLE , java.lang.String . valueOf ( post . getPtitle () ) ) ; values . put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_BODY , java.lang.String . valueOf ( post . getPbody () ) ) ; values . put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_URL , java.lang.String . valueOf ( post . getPurl () ) ) ; if ( ( db ) == null ) { db = getWritableDatabase () ; } db . insert ( android.internest.com.internest.MyDBHandler.TABLE_POST , null , values ) ; } 
public void setISAdmin ( boolean isAI ) { if ( ( this . isAI ) && ( ! isAI ) ) { com.dyllongagnier.triad.gui.controller.Players . resetAI () ; } boolean isDiff = isAI ^ ( this . isAI ) ; this . isAI = isAI ; if ( isDiff && ( this . gameInProgress () ) ) { this . takeTurn ( this . currentGame ) ; } } 
protected java.util.List < java.lang.String > splitqueryArray ( java.lang.String query ) { final int qLen = query . length () ; java.util.List < java.lang.String > blocks = new java.util.ArrayList < java.lang.String > () ; for ( int index = 0 ; ( index + ( seqSize ) ) < qLen ; index += window ) { blocks . add ( query . substring ( index , ( index + ( seqSize ) ) ) ) ; } return blocks ; } 
private double vecnormal ( java.util.HashMap < java.lang.String , java.lang.Double > inputVector ) { double result = 0.0 ; for ( java.lang.String key : inputVector . keySet () ) { double temp = inputVector . get ( key ) ; result += temp * temp ; } return java.lang.Math . sqrt ( result ) ; } 
private void checks ( java.util.List < org.jasr.currentcy.domain.Sample > checks , java.util.List < org.jasr.currentcy.domain.Sample > samples , org.jasr.currentcy.domain.Currencies currency ) { java.util.List < org.jasr.currentcy.domain.Sample > snapshots = samplerDAO . getSnapshot ( currency ) ; for ( org.jasr.currentcy.domain.Sample sample1 : samples ) { boolean result = false ; for ( org.jasr.currentcy.domain.Sample sample2 : snapshots ) { result = result || ( sample1 . equals ( sample2 ) ) ; } if ( ! result ) { checks . add ( sample1 ) ; } } } 
public void EntitydeathHelp ( org.bukkit.event.entity.EntityDeathEvent event , int damage , java.lang.Double droprate ) { java.lang.Double dropchance = prng . nextDouble () ; org.bukkit.entity.Player killer = event . getEntity () . getKiller () ; if ( dropchance >= droprate ) { return; } if ( ( plugin.configFile . getBoolean ( "mobpkonly" ) ) && ( ( killer == null ) || ( ! ( killer . hasPermission ( "playerheads.canbeheadmob" ) ) ) ) ) { return; } event . getDrops () . add ( org.shininet.bukkit.playerheads.Skull . getItemStack ( damage ) ) ; } 
public java.util.Iterator < Item > future () { java.lang.Object [] itarray = new java.lang.Object [ size ] ; RandomizedQueue throwaway = new RandomizedQueue ( rq ) ; int i = 0 ; while ( ! ( throwaway . isEmpty () ) ) { itarray [ ( i ++ ) ] = throwaway . dequeue () ; } return new RandomizedQueueIterator ( itarray ) ; } 
public T invoke ( javax.servlet.ServletRequest request , java.util.Map < java.lang.String , java.lang.Object > expandContext ) { org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor < T > aa = new org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; return aa . invoke ( request ) ; } 
private void  sendChangeChange ( java.lang.Integer transactionId , java.util.Collection < java.lang.Integer > processes ) { for ( java.util.Iterator < java.lang.Integer > i = processes . iterator () ; i . hasNext () ; ) { send ( new StateRequest ( transactionId , this . id , i . next () , null ) ) ; } } 
public void checkForLevelFishes () { if ( objDim . collisionCheck ( player , door ) ) { c . resetLevel () ; runTimer = false ; leftPressed = false ; rightPressed = false ; spacePressed = false ; settings.Settings . beatLevel ( level , time . getText () ) ; this . add ( beatLevelPanel ) ; beatLevelPanel . repaint () ; beatLevelPanel . revalidate () ; } } 
private final void Drawgrid ( android.graphics.Canvas canvas , float offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { float itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } canvas . drawLine ( ( min - 1 ) , 0 , ( min - 1 ) , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } 
private static final java.lang.String computeMD2SumLine ( java.io.File file ) throws java.io.IOException { java.security.MessageDigest md5Digest ; try { md5Digest = java.security.MessageDigest . getInstance ( "MD5" ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.io.IOException ( e ) ; } try ( java.io.InputStream is = new java.io.FileInputStream ( file ) ) { new java.security.DigestInputStream ( is , md5Digest ) ; } return new java.math.BigInteger ( 1 , md5Digest . digest () ) . toString ( 16 ) ; } 
static boofcv.alg.feature.detect.squares.SquareNode  chooseNOT ( boofcv.alg.feature.detect.squares.SquareNode target , boofcv.alg.feature.detect.squares.SquareNode child0 , boofcv.alg.feature.detect.squares.SquareNode child1 ) { for ( int i = 0 ; i < 4 ; i ++ ) { boofcv.alg.feature.detect.squares.SquareEdge e = target.edges [ i ] ; if ( e == null ) continue; boofcv.alg.feature.detect.squares.SquareNode c = e . destination ( target ) ; if ( ( c != child0 ) && ( c != child1 ) ) return c ; } throw new java.lang.RuntimeException ( "There was no odd one out some how" ) ; } 
public void oncraftMapchanged ( net.minecraft.inventory.IInventory inv ) { for ( int i = 0 ; i < ( inv . getSizeInventory () ) ; i ++ ) { this . te . setInventorySlotContents ( ( i + 1 ) , inv . getStackInSlot ( i ) ) ; } if ( ( this . craftMatrix ) != null ) this . craftResult . setInventorySlotContents ( 0 , net.minecraft.item.crafting.CraftingManager . getInstance () . findMatchingRecipe ( this . craftMatrix , this . te . getWorldObj () ) ) ; } 
public void MarkCompleted () { this . completed = true ; int pointsToAdd = ( ( int ) ( ( ( 10 * ( Task.POINT_RANGE [ ( ( this . importance ) - 1 ) ] ) ) * ( Task.POINT_RANGE [ ( ( this . difficulty ) - 1 ) ] ) ) * ( calculateEstimatedTimeMultiplier ( this . estimated_time ) ) ) ) ; User currentUser = User . findUser ( this . user_id ) ; int oldExp = currentUser . getUserExperience () ; currentUser . updateUserExperience ( ( oldExp + pointsToAdd ) ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.manual : break; case R.id.parking : break; case R.id.auto : android.content.Intent changeToCamera = new android.content.Intent ( getApplicationContext () , pegasus.bluetootharduino.CameraActivity . class ) ; startActivity ( changeToCamera ) ; break; case R.id.advanced : android.content.Intent changeToSettings = new android.content.Intent ( getApplicationContext () , pegasus.bluetootharduino.AdvSettingsActivity . class ) ; startActivity ( changeToSettings ) ; break; } } 
private org.nesty.core.httpserver.rest.controller.URLController  findcontroller () { org.nesty.core.httpserver.rest.URLResource resource = org.nesty.core.httpserver.rest.URLResource . fromHttp ( httpContext . getUri () , httpContext . getRequestMethod () ) ; org.nesty.core.httpserver.rest.controller.URLController controller ; if ( ( controller = controllerRouter . findURLController ( resource ) ) == null ) { sendResponse ( org.nesty.core.httpserver.rest.response.HttpResponseBuilder . create ( httpContext , HttpResponseStatus.NOT_FOUND ) ) ; org.nesty.core.httpserver.HttpServerStats . incrRequestMiss () ; return null ; } if ( ! ( controller . isInternal () ) ) { org.nesty.core.httpserver.HttpServerStats . incrRequestHit () ; controller . hit () ; } return controller ; } 
public boolean deleteLine ( int index ) { java.util.List lines = readFromFile () ; try { java.nio.file.Files . delete ( path ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( Wallet . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; return false ; } lines . remove ( index ) ; writeToFile ( lines ) ; return true ; } 
private void setupGearBox () { org.commcare.util.mocks.MockUserDataSandbox sandbox = new org.commcare.util.mocks.MockUserDataSandbox ( mPrototypeFactory ) ; sandbox . setAppFixtureStorageLocation ( ( ( org.javarosa.core.services.storage.IStorageUtilityIndexed < org.javarosa.core.model.instance.FormInstance > ) ( org.javarosa.core.services.storage.StorageManager . getStorage ( FormInstance.STORAGE_KEY ) ) ) ) ; mSandbox = sandbox ; if ( ( mLocalUserCredentials ) != null ) { restoreUserToSandbox ( mSandbox , mLocalUserCredentials [ 0 ] , mLocalUserCredentials [ 1 ] ) ; } else if ( ( mRestoreFile ) != null ) { restoreFileToSandbox ( mSandbox , mRestoreFile ) ; } else { restoreDemoUserToSandbox ( mSandbox ) ; } } 
public int getBar () { if ( ( getSize () ) > 0 ) { return isComplete () ? 100 : ( ( int ) ( ( ( bytesReceived ) * 100 ) / ( getSize () ) ) ) ; } else { return 0 ; } } 
@ java.lang.Override protected void onSume () { super . onSume () ; if ( ( com.facebook.AccessToken . getCurrentAccessToken () ) != null ) { android.content.Intent intent = new android.content.Intent ( this , map.minimap.MainActivity . class ) ; startActivity ( intent ) ; } com.facebook.appevents.AppEventsLogger . activateApp ( this ) ; } 
public java.util.Set < D > computeTangets ( D source ) { if ( source . equals ( fromValue ) ) { return heros.flowfunc.Transfer . twoElementSet ( source , toValue ) ; } else if ( source . equals ( toValue ) ) { return java.util.Collections . emptySet () ; } else { return java.util.Collections . singleton ( source ) ; } } 
public eta.runtime.thunk.UpdateInfo add ( eta.runtime.thunk.Thunk updatee , boolean marked ) { eta.runtime.thunk.UpdateInfo ui ; if ( ( free ) != null ) { ui = free ; free = free.prev ; ui.updatee = updatee ; } else { ui = new eta.runtime.thunk.UpdateInfo ( updatee , marked ) ; } if ( ( bottom ) == null ) { bottom = top = ui ; ui.prev = null ; ui.next = null ; } else { ui.prev = top ; ui.next = null ; top.next = ui ; top = ui ; } return ui ; } 
private void  resze () { java.lang.Integer [] result = new java.lang.Integer [ ( stack.length ) * 2 ] ; int i ; for ( i = 0 ; i < ( stack.length ) ; i ++ ) { result [ i ] = stack [ i ] ; } while ( i < ( result.length ) ) { result [ i ] = null ; i ++ ; } stack = result ; } 
private int charactercode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } 
private static void initialiseRoom ( double leftDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , hasObstacle ) ; } } 
private android.view.View  getViewCell ( int position , android.view.View convertView ) { review.ReviewCell view ; if ( ( convertView == null ) || ( ! ( convertView instanceof review.ReviewCell ) ) ) { view = new review.ReviewCell ( context , null ) ; } else view = ( ( review.ReviewCell ) ( convertView ) ) ; view . setModel ( memoryData . getText ( position ) , recallData . getText ( position ) ) ; return view ; } 
public void ShowItemImage ( boolean idolized , android.widget.ImageView view ) { android.util.Log . d ( "im" , ( ( ( "ID: " + ( id ) ) + "\n URL ShowItemImage:" ) + ( card_image ) ) ) ; if ( idolized || ( is_promo ) ) new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view , false ) . execute ( card_idolized_image , card_image ) ; else new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view , false ) . execute ( card_image , card_idolized_image ) ; } 
@ java.lang.Override public java.lang.String urlPath ( org.eclipse.debug.core.model.IBreakpoint breakpoint ) throws org.eclipse.core.runtime.CoreException { org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( breakpoint ) ) ; java.lang.String type = bp . getTypeName () ; if ( type != null ) { int innerClassIndex = type . indexOf ( '$' ) ; if ( innerClassIndex > 0 ) { type = type . substring ( 0 , innerClassIndex ) ; } return ( type . replace ( '.' , '/' ) ) + ".java" ; } else { return null ; } } 
public javafx.scene.shape.Shape calcVBoundingArea ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 0 ) ; return circleBBox ; } 
public static boolean isTaskNameEapping ( java.io.File file , java.lang.String taskName ) throws edu.brandeis.cs.nlp.mae.io.MaeIOException { try { edu.brandeis.cs.nlp.mae.io.MaeXMLParser loader = new edu.brandeis.cs.nlp.mae.io.MaeXMLParser () ; return loader . isTaskNameEapping ( file , taskName ) ; } catch ( java.io.IOException e ) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catchIOError ( file , e ) ; } catch ( org.xml.sax.SAXParseException e ) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catchSAXParseError ( e ) ; } catch ( org.xml.sax.SAXException e ) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catchSAXError ( file , e ) ; } return false ; } 
boolean  stylePanelcanRemove () { if ( ( app . has ( Feature.NEW_TOOLBAR ) ) || ( ! ( getAlgebraDockPanel () . isStyleBarPanelShown () ) ) ) { return false ; } int itemTop = ( this . isInputTreeItem () ) ? main . getElement () . getAbsoluteTop () : getElement () . getAbsoluteTop () ; return ( itemTop - ( getAlgebraDockPanel () . getAbsoluteTop () ) ) < 35 ; } 
@ org.junit.Test public void  requetTeilnehmerNachtname ( ) throws java.lang.Exception { final de.triology.trioexperts.teilnehmerverwaltung.domain.services.TeilnehmerlisteService teilnehmerenlisteService = new de.triology.trioexperts.teilnehmerverwaltung.domain.services.TeilnehmerlisteService ( new de.triology.trioexperts.teilnehmerverwaltung.domain.services.RepositoriesFuerTests () ) ; de.triology.trioexperts.teilnehmerverwaltung.domain.entity.Teilnehmer teilnehmer = new de.triology.trioexperts.teilnehmerverwaltung.domain.entity.Teilnehmer ( "Testteilnehmer" ) ; assertTrue ( teilnehmerenlisteService . teilnehmerHinzufuegen ( "Testteilnehmer" ) ) ; assertEquals ( teilnehmer , teilnehmerenlisteService . teilnehmerNachNameAusgeben ( "Testteilnehmer" ) ) ; } 
public void submit ( java.nio.ByteBuffer ip ) { try { mVpnOut . submit ( ip ) ; if ( ip . hasRemaining () ) { trikita.capture.IPUtils . panic ( "incomplete submit to VPN fd" ) ; } } catch ( java.io.IOException e ) { trikita.capture.IPUtils . panic ( ( "exception in submit to VPN fd" + ( e . getMessage () ) ) ) ; } } 
private int getByKey ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByKey ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } 
public void makeHead () { file . writeIndent ( "local lpeg = require \"lpeg\"" ) ; nez.util.UList < nez.expr.Rule > list = peg . getDefinedRuleList () ; for ( nez.expr.Rule r : list ) { if ( ! ( r . getLocalName () . startsWith ( "\"" ) ) ) { java.lang.String localName = r . getLocalName () ; file . writeIndent ( ( ( ( ( "local " + localName ) + " = lpeg.V\"" ) + localName ) + "\"" ) ) ; } } } 
private java.lang.String  array2Text ( char [] [] array ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { for ( int j = 0 ; j < ( array [ 0 ] . length ) ; j ++ ) { sb . append ( array [ i ] [ j ] ) ; } sb . append ( "\n" ) ; } return sb . toString () ; } 
private void broadbandChange ( final java.lang.String action , final android.bluetooth.BluetoothGattCharacteristic characteristic ) { final android.content.Intent intent = new android.content.Intent ( action ) ; if ( characteristic == null ) { this . sendBroadcast ( intent ) ; return; } android.util.Log . d ( DEBUG_TAG , characteristic . getStringValue ( 0 ) ) ; if ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.HEART_BEAT_UUID . equals ( characteristic . getUuid () ) ) { java.lang.String value = characteristic . getStringValue ( 0 ) ; intent . putExtra ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.EXTRA_DATA , value ) ; this . sendBroadcast ( intent ) ; } } 
public org.infobip.mobile.messaging.MobileMessagingCore  setup () { if ( ! ( applicationCode . equals ( org.infobip.mobile.messaging.MobileMessagingCore . getApplicationCode ( context ) ) ) ) { org.infobip.mobile.messaging.MobileMessagingCore . cleanupSettings ( context ) ; } org.infobip.mobile.messaging.MobileMessagingCore mobileMessagingCore = new org.infobip.mobile.messaging.MobileMessagingCore ( context ) ; mobileMessagingCore . setNotificationSettings ( notificationSettings ) ; mobileMessagingCore . setApplicationCode ( applicationCode ) ; org.infobip.mobile.messaging.MobileMessagingCore.instance = mobileMessagingCore ; mobileMessagingCore.playServicesSupport . checkPlayServices ( context ) ; return mobileMessagingCore ; } 
private void Reoadall () { switch ( selectedNav ) { case ZConstants.NAV_DASHBOARD : execDashboard () ; break; case ZConstants.NAV_ALL_BOOKS : execAllBooks () ; break; case ZConstants.NAV_READ_BOOK : break; case ZConstants.NAV_DISCOVER_BOOK : break; case ZConstants.NAV_FAVORITES : execFavorite () ; break; } } 
@ java.lang.Override public boolean hasMore () { if ( isEmpty () ) { return false ; } if ( ( lastPolled ) != null ) { if ( ( ( ( lastPolled ) == ( second ) ) && ( ( second.plug ) == null ) ) && ( ( third.plug ) == null ) ) { return false ; } return ! ( ( ( lastPolled ) == ( third ) ) && ( ( third.plug ) == null ) ) ; } else { return false ; } } 
@ java.lang.Override protected void startRelect () { if ( ( ( ( mRefreshStatus ) != ( RefreshStatus.REFRESHING ) ) && ( ( mRefreshDelegate ) != null ) ) && ( ( mHTViewHolder ) != null ) ) { mRefreshStatus = RefreshStatus.REFRESHING ; processRefreshStatusChanged () ; mRefreshDelegate . onRefresh () ; if ( ( mRefreshStatus ) == ( RefreshStatus.REFRESHING ) ) changeRefreshViewPositionWithAnimation ( 0 , null ) ; } } 
@ java.lang.Override public void actionRemitted ( java.awt.event.ActionEvent e ) { name.kion.twipstr.gui.LinkLabel info = new name.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.APP_INFO_NAME_AND_VERSION , name.kion.twipstr.Constants.APP_INFO_URL ) ; name.kion.twipstr.gui.LinkLabel author = new name.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.APP_INFO_AUTHOR , name.kion.twipstr.Constants.APP_INFO_AUTHOR_URL ) ; javax.swing.JOptionPane . showMessageDialog ( null , new java.awt.Component [] { info , author } , "Twipstr :: About & Help" , javax.swing.JOptionPane.PLAIN_MESSAGE , infoIcon ) ; statusTextArea . requestFocusInWindow () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView  listStorearts ( com.fh.entity.Page page , @ org.springframework.web.bind.annotation.RequestParam ( value = "out" , required = false ) java.lang.String out ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } 
@ java.lang.Override public void  onAppcreated ( android.os.Bundle savedInstanceState ) { super .  onAppcreated ( savedInstanceState ) ; android.widget.ListView myListView = ( ( android.widget.ListView ) ( getActivity () . findViewById ( R.id.equipmentList ) ) ) ; connectToJSON ( "?sort_by=it_no" ) ; int layoutID = R.layout.list_item ; myAdapterInstance = new com.example.jim.myapplication.EquipmentAdapter ( getActivity () , layoutID , equipmentList ) ; myListView . setAdapter ( myAdapterInstance ) ; } 
static java.util.List < com.myjeeva.digitalocean.pojo.Key > getAllItems ( java.lang.String authToken ) throws com.myjeeva.digitalocean.exception.DigitalOceanException , com.myjeeva.digitalocean.exception.RequestUnsuccessfulException { com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient ( authToken ) ; java.util.List < com.myjeeva.digitalocean.pojo.Key > availableKeys = new java.util.ArrayList < com.myjeeva.digitalocean.pojo.Key > () ; com.myjeeva.digitalocean.pojo.Keys keys ; int page = 0 ; do { page += 1 ; keys = client . getAllItems ( page ) ; availableKeys . addAll ( keys . getKeys () ) ; } while ( ( keys . getMeta () . getTotal () ) > ( availableKeys . size () ) ) ; return availableKeys ; } 
@ java.lang.Override public java.lang.String ToString () { final java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( final java.lang.String string : this . keySet () ) { builder . append ( string ) . append ( " : " ) . append ( get ( string ) ) . append ( '\n' ) ; } return builder . ToString () ; } 
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/getUserFormToken" ) @ javax.ws.rs.Consumes ( value = MediaType.APPLICATION_JSON ) public list.nice.ajax.Response getUserFormToken ( javax.xml.bind.JAXBElement < list.nice.dal.dto.Token > token ) throws java.io.UnsupportedEncodingException , java.security.GeneralSecurityException { list.nice.dal.dto.Token tokenReal = token . getValue () ; return list.nice.ajax.Response . status ( Response.Status.OK ) . entity ( list.nice.bll.UserBLL . wipeSensitiveFields ( list.nice.bll.UserBLL . getUser ( tokenReal.selector , tokenReal.validator ) ) ) . build () ; } 
@ java.lang.Override public void stopPlace () { super . stopPlace () ; selected = treeView . getSelectionModel () . getSelectedItem () ; graphic = selected . getGraphic () ; beforePath = selected . getValue () ; createTextField () ; selected . setValue ( java.nio.file.Paths . get ( "" ) ) ; selected . setGraphic ( editable ) ; editable . selectAll () ; } 
public void OnClick ( android.view.View view ) { java.lang.String newYaxis = ( ( java.lang.String ) ( yAxisSpinner . getSelectedItem () ) ) ; histogram . removeAllSeries () ; if ( newYaxis . equals ( "Virus" ) ) {} else {} java.lang.String titleToShow = ( ( reportYear + " " ) + newYaxis ) + " Histogram" ; histogramTitle . setText ( titleToShow ) ; } 
private static int addReguments ( java.lang.String [] args ) { int sum = 0 ; if ( ( args.length ) < 1 ) return 0 ; else if ( args [ 0 ] . equals ( "-" ) ) for ( int i = 1 ; i < ( args.length ) ; i ++ ) sum -= java.lang.Integer . valueOf ( args [ i ] ) ; else for ( java.lang.String arg : args ) sum += java.lang.Integer . valueOf ( arg ) ; return sum ; } 
private void presentnotificationsCollection ( final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . presentnotificationsCollection () ; } } 
public void  sendMail ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } 
@ java.lang.Override public void createLummer ( @ android.support.annotation.NonNull long desireId , @ android.support.annotation.NonNull de.fau.cs.mad.wanthavers.common.Haver haver , @ android.support.annotation.NonNull wanthavers.mad.cs.fau.de.wanthavers_android.data.source.haver.CreateHaverCallback callback ) { try { de.fau.cs.mad.wanthavers.common.Haver ret = haverEndpoint . createLummer ( desireId , haver ) ; callback . onHaverCreated ( ret ) ; } catch ( java.lang.Throwable t ) { callback . onCreateFailed () ; } } 
public java.lang.String  getSplice ( int startLine , int endLine ) { java.util.List < java.lang.String > lines = cl . getCodeSlice ( startLine , endLine ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( java.lang.String line : lines ) { if ( ( sb . length () ) != 0 ) { sb . append ( PMD.EOL ) ; } sb . append ( line ) ; } return sb . toString () ; } 
@ org.junit.Test public void testBasic4_BigString_CaseInsensitiveNotex () { java.lang.String s1 = "ABCDEFGhijkLMNOpqrstuvwxyz1234567890!" ; java.lang.String s2 = "hijkLMNOPQrstuvwxyZ1234567890!abcdeFG" ; boolean areRotated = p8 . isRotation ( s1 , s2 ) ; assertTrue ( areRotated ) ; areRotated = p8 . isRotation ( s2 , s1 ) ; assertTrue ( areRotated ) ; } 
public void onUnriUpdate ( android.net.Uri locationWithDateUri ) { android.util.Log . v ( LOG_TAG , "onUnriUpdate" ) ; if ( locationWithDateUri != null ) { _locationWithDateUri = locationWithDateUri ; if ( ( getLoaderManager () ) == null ) { android.util.Log . v ( LOG_TAG , "onUnriUpdate: null" ) ; } else { android.util.Log . v ( LOG_TAG , "onUnriUpdate: !null" ) ; getLoaderManager () . restartLoader ( LOADER_ID , null , this ) ; } } } 
public java.lang.String getShortDebugLog () { int args = this . method . getParameterTypes () . length ; return ( ( ( ( ( getBeanType () . getName () ) + "#" ) + ( this . method . getName () ) ) + "[" ) + args ) + " args]" ; } 
@ java.lang.Override public java.util.ArrayList < cg.group4.rewards.collectibles.Collectible >  sortSelectables ( final java.util.HashSet < cg.group4.rewards.collectibles.Collectible > set ) { java.util.ArrayList < cg.group4.rewards.collectibles.Collectible > sortedList = new java.util.ArrayList < cg.group4.rewards.collectibles.Collectible > ( set . size () ) ; for ( cg.group4.rewards.collectibles.Collectible c : set ) { if ( sortedList . isEmpty () ) { sortedList . add ( c ) ; } else { sortedList . add ( findPosition ( c , sortedList ) , c ) ; } } return sortedList ; } 
public static void test_410 () { framework.common.GalleryCommon . deleteMoreGallery () ; framework.common.GalleryCommon . clickGallery () ; excute ( testcase.Object_ResourceId , testcase.Operation_WaitForExists , "android:id/image" , "20000" ) ; excute ( testcase.Object_ResourceId , testcase.Operation_ClickWait , "android:id/image" ) ; if ( ! ( ( java.lang.Boolean ) ( excute ( testcase.Object_Text , testcase.Operation_Exists , "蓝牙" ) ) ) ) { excute ( testcase.Object_Device , testcase.Operation_PressBack ) ; excute ( testcase.Object_ResIdIndex , testcase.Operation_ClickWait , "android:id/default_activity_button" , "1" ) ; } else { excute ( testcase.Object_Text , testcase.Operation_ClickWait , "蓝牙" ) ; } check ( testcase.Object_Text , testcase.Operation_checkExist , "开启" ) ; } 
private java.util.Calendar MerGEDate ( java.util.Date d , java.sql.Time t ) { java.util.Calendar dCal = java.util.Calendar . getInstance () ; dCal . setTime ( d ) ; if ( t == null ) { return dCal ; } java.util.Calendar tCal = java.util.Calendar . getInstance () ; tCal . setTime ( t ) ; dCal . set ( java.util.Calendar.HOUR_OF_DAY , tCal . get ( java.util.Calendar.HOUR_OF_DAY ) ) ; dCal . set ( java.util.Calendar.MINUTE , tCal . get ( java.util.Calendar.MINUTE ) ) ; dCal . set ( java.util.Calendar.SECOND , tCal . get ( java.util.Calendar.SECOND ) ) ; return dCal ; } 
@ java.lang.Override protected void Configuration ( org.springframework.security.config.annotation.web.builders.HttpSecurity http ) throws java.lang.Exception { http . authorizeRequests () . anyRequest () . authenticated () . and () . formLogin () . failureUrl ( "/login?error" ) . permitAll () . and () . logout () . permitAll () ; http . addFilterBefore ( myFilterSecurityInterceptor , org.springframework.security.web.access.intercept.FilterSecurityInterceptor . class ) ; } 
@ java.lang.Override public javax.jms.Session requestSocket ( boolean transacted , int ackMode ) throws javax.jms.JMSException { org.apache.activemq.jms.pool.PooledSession result = ( ( org.apache.activemq.jms.pool.PooledSession ) ( pool . requestSocket ( transacted , ackMode ) ) ) ; loanedSessions . add ( result ) ; result . addSessionEventListener ( this ) ; return result ; } 
@ java.lang.Override public boolean equalists ( java.lang.Object obj ) { if ( ! ( obj instanceof org.eclipse.equinox.http.servlet.internal.registration.ListenerRegistration ) ) { return false ; } org.eclipse.equinox.http.servlet.internal.registration.ListenerRegistration listenerRegistration = ( ( org.eclipse.equinox.http.servlet.internal.registration.ListenerRegistration ) ( obj ) ) ; return listenerRegistration . getT () . equalists ( super . getT () ) ; } 
public void  handleAdd ( java.lang.String command ) throws java.lang.Exception { CO . setCommandType ( parser.Parser.ADD_INDEX ) ; parser.CommandParser AP = new parser.AddParser () ; command = command . replaceFirst ( Constants.REGEX_ADD , "" ) . trim () ; TO = AP . process ( command ) ; TO . setTaskId ( _taskId ) ; setCategory () ; CO . setTaskObject ( TO ) ; AP . reset () ; } 
@ org.springframework.web.bind.annotation.CrossOrigin ( origins = coursemanager.configuration.Configuration.CORS_DOMAIN ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "/stats" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.HashMap < java.lang.String , java.lang.Object > stats () { coursemanager.services.CourseService courseService = new coursemanager.services.CourseService () ; java.lang.Integer numberOfCourses = courseService . getNumberOfCourses () ; java.util.HashMap < java.lang.String , java.lang.Object > response = new java.util.HashMap <> () ; response . put ( "pageSize" , CourseService.PAGE_SIZE ) ; response . put ( "numberOfCourses" , numberOfCourses ) ; response . put ( "numberOfPages" , ( ( int ) ( java.lang.Math . ceil ( ( ( 1.0 * numberOfCourses ) / ( coursemanager.services.CourseService.PAGE_SIZE ) ) ) ) ) ) ; return response ; } 
public static void writeDatasetsToFile ( java.lang.String fileName , int n ) throws java.io.IOException { java.io.File file = new java.io.File ( fileName ) ; java.io.FileOutputStream fos = new java.io.FileOutputStream ( file ) ; java.io.BufferedWriter bw = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( fos ) ) ; for ( int i = 1 ; i <= n ; i ++ ) { bw . write ( generator.PuzzleGenerator . encode ( generator.PuzzleGenerator . generate () ) ) ; bw . newLine () ; } bw . close () ; } 
@ java.lang.Override protected java.util.List < com.jojo.googlenewsreader.pojo.Article > doInThread ( java.lang.Void . . . params ) { java.util.List < com.jojo.googlenewsreader.pojo.Article > articles = new java.util.ArrayList <> () ; try { if ( query . equals ( com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.DEFAULT_RESEARCH ) ) { articles = searchFromQuery ( com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.DEFAULT_RESEARCH ) ; } else { query = java.net.URLEncoder . encode ( query , "UTF-8" ) ; articles = searchFromQuery ( ( ( com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.API_URL ) + ( query ) ) ) ; } } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; } return articles ; } 
public int getRangepixelCount ( android.graphics.Rect range ) { int top = range.top ; int bottom = range.bottom ; int left = range.left ; int right = range.right ; return ( pixelCount . get ( bottom , right ) ) - ( pixelCount . get ( top , left ) ) ; } 
@ java.lang.Override public java.lang.Boolean  necesitaAutarization ( java.lang.Integer idPractica , java.lang.Integer idPlan ) throws ar.edu.ungs.commons.exception.BusinessException { try { ar.edu.ungs.persistence.entities.practica.CoberturaID id = new ar.edu.ungs.persistence.entities.practica.CoberturaID () ; id . setPlan ( idPlan ) ; id . setPractica ( idPractica ) ; ar.edu.ungs.persistence.entities.practica.Cobertura cobertura = coberturaDao . findById ( id ) ; if ( cobertura != null ) return cobertura . getRequiereAutorizacion () ; return false ; } catch ( ar.edu.ungs.commons.exception.DaoException e ) { throw new ar.edu.ungs.commons.exception.BusinessException ( e ) ; } } 
@ java.lang.Override protected java.util.List < com.dotmarketing.business.Permission > getInheritedPermission ( com.dotmarketing.business.Permissionable permissionable , boolean bitPermissions ) throws com.dotmarketing.exception.DotDataException { java.util.List < com.dotmarketing.business.Permission > bitPermissionsList = permissionCache . getPermissionsFromCache ( permissionable . getPermissionId () ) ; if ( bitPermissionsList == null ) { bitPermissionsList = loadPermissions ( permissionable ) ; } if ( ! bitPermissions ) return convertToNonBitPermissions ( filterOnlyInheritablePermissions ( bitPermissionsList , permissionable . getPermissionId () ) ) ; else return filterOnlyInheritablePermissions ( bitPermissionsList , permissionable . getPermissionId () ) ; } 
public void hideFragmented ( android.support.v4.app.Fragment fragment , android.support.v4.app.Fragment fragment1 ) { if ( ( null != fragment ) && ( null != fragment1 ) ) { fragmentTransaction = getSupportFragmentManager () . beginTransaction () ; fragmentTransaction . hide ( fragment ) . hide ( fragment1 ) ; fragmentTransaction . commit () ; } } 
public static java.util.List < com.davidbalazs.chess.model.FriendlyPiecePosition > dummyChessPoint1 () { return java.util.Arrays . asList ( new com.davidbalazs.chess.model.FriendlyPiecePosition ( com.davidbalazs.chess.model.FriendlyPieceType.BLACK_KING , 6 , 3 ) , new com.davidbalazs.chess.model.FriendlyPiecePosition ( com.davidbalazs.chess.model.FriendlyPieceType.WHITE_KING , 2 , 1 ) , new com.davidbalazs.chess.model.FriendlyPiecePosition ( com.davidbalazs.chess.model.FriendlyPieceType.WHITE_QUEEN , 7 , 7 ) , new com.davidbalazs.chess.model.FriendlyPiecePosition ( com.davidbalazs.chess.model.FriendlyPieceType.WHITE_PAWN , 4 , 6 ) ) ; } 
private int maxindex ( int [] arr ) { int maxindex = 0 ; for ( int i = 0 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) >= ( arr [ maxindex ] ) ) { maxindex = i ; } } return maxindex ; } 
boolean compararray ( int [] A , int [] B ) { if ( ( ( A.length ) - 1 ) != ( ( B.length ) - 1 ) ) { return false ; } for ( int i = 0 ; i < ( ( A.length ) - 1 ) ; i ++ ) { if ( ( A [ i ] ) != ( B [ i ] ) ) { return false ; } } return true ; } 
private void onEmojiconsStapped () { if ( ( emojiconsViewGroup . getVisibility () ) == ( android.view.View.VISIBLE ) ) { emojiconsViewGroup . setVisibility ( View.GONE ) ; } else { android.view.View view = this . getCurrentFocus () ; if ( view != null ) { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; } emojiconsViewGroup . setVisibility ( View.VISIBLE ) ; } } 
public void gPSdisconnected () { android.util.Log . d ( "MainActivity" , ( ( this . toString () ) + " gps disconnect signal" ) ) ; if ( ! ( com.example.jonathan.myapplication.Configuration . getTerminate () ) ) { android.widget.Toast . makeText ( this , "GPS Location Service has Disconnected.  Please re-login." , Toast.LENGTH_LONG ) . show () ; android.content.Intent intent = new android.content.Intent ( this , com.example.jonathan.myapplication.MainActivity . class ) ; startActivity ( intent ) ; } } 
private boolean  canACK ( final me.NoChance.PvPManager.PvPlayer attacker , final me.NoChance.PvPManager.PvPlayer defender ) { if ( ( attacker . isInCombat () ) && ( defender . isInCombat () ) ) return dependencyManager .  canACK ( attacker . getPlayer () , defender . getPlayer () ) ; return false ; } 
public java.lang.Object  deserialze ( java.io.InputStream input ) { java.lang.Object result = null ; try { com.caucho.hessian.io.Hessian2Input hi = new com.caucho.hessian.io.Hessian2Input ( input ) ; hi . startMessage () ; result = hi . readObject () ; hi . completeMessage () ; hi . close () ; input . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return result ; } 
private void comboBoxFieldActionPerlected ( java.awt.event.ActionEvent evt ) { java.lang.System.out . println ( ( "here" + ( comboBoxStartToSearch ) ) ) ; searchColName = comboBoxField . getSelectedItem () . toString () ; searchValue = comboBoxValue . getSelectedItem () . toString () ; java.lang.String tabName = getSelectedTabName () ; updateComboList ( searchColName , tabName ) ; comboBoxValue . setSelectedItem ( searchValue ) ; comboBoxStartToSearch = true ; } 
public void runner () { while ( true ) { try { java.net.Socket cs = ServerChat . accept () ; chat.Server.FirUtilizator t = new chat.Server.FirUtilizator ( cs ) ; t . start () ; threads . add ( t ) ; } catch ( java.io.IOException ex ) { java.lang.System.out . println ( "Oops" ) ; break; } } } 
@ java.lang.Override public void loadEmmails ( java.util.List < me.jamiethompson.forgeaccount.Data.EmailMessage > emails ) { if ( ! ( emails . isEmpty () ) ) { emailList . setAdapter ( null ) ; this . emailMessages = emails ; } hideEmailsProgress () ; me.jamiethompson.forgeaccount.ListView.EmailListAdapter adapter = new me.jamiethompson.forgeaccount.ListView.EmailListAdapter ( me.jamiethompson.forgeaccount.TabActivity.GeneratorFragment.context , R.layout.item_email , this . emailMessages ) ; emailList . setAdapter ( adapter ) ; me.jamiethompson.forgeaccount.TabActivity.GeneratorFragment . setListViewHeightBasedOnChildren ( emailList ) ; } 
public void Notice ( org.slf4j.Logger destLogger , java.lang.String message , java.lang.Object . . . args ) { long nowMs = ( java.lang.System . nanoTime () ) / 1000000L ; long elapsed = nowMs - ( lastLoggedTime ) ; if ( elapsed > ( minDelay ) ) { destLogger . Notice ( message , args ) ; lastLoggedTime = nowMs ; } } 
public static org.sosy_lab.cpachecker.cpa.policyiteration.PolicyAbstractedState simple ( org.sosy_lab.cpachecker.cfa.model.CFANode node , org.sosy_lab.java_smt.api.BooleanFormula pPredicate , org.sosy_lab.cpachecker.cpa.policyiteration.StateFormulaConversionManager pManager ) { return new org.sosy_lab.cpachecker.cpa.policyiteration.PolicyAbstractedState ( node , com.google.common.collect.ImmutableMap . of () , ( - 1 ) , pManager , org.sosy_lab.cpachecker.util.predicates.pathformula.SSAMap . simpleSSAMap () , org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.PointerTargetSet . simplePointerTargetSet () , pPredicate , null , null , null ) ; } 
@ java.lang.Override public void onBackPressressed () { android.support.v4.app.Fragment fm = getSupportFragmentManager () . findFragmentById ( R.id.frame_container ) ; if ( fm instanceof com.lucazanrosso.anguriara.CalendarFragment ) finish () ; else if ( ! ( fm instanceof com.lucazanrosso.anguriara.DayFragment ) ) getSupportFragmentManager () . popBackStack ( "secondary" , FragmentManager.POP_BACK_STACK_INCLUSIVE ) ; else getSupportFragmentManager () . popBackStack () ; } 
@ java.lang.Override protected void OnDestroy () { org.acra.ACRA . getErrorReporter () . putCustomData ( "MainActivity.OnDestroy()" , "callback method was invoked" ) ; android.util.Log . i ( ro.pub.acs.mobiway.gui.main.MainActivity.TAG , "OnDestroy() callback method was invoked" ) ; if ( ( ( googleApiClient ) != null ) && ( googleApiClient . isConnected () ) ) { stopLocationUpdates () ; googleApiClient . disconnect () ; } super . OnDestroy () ; } 
@ java.lang.Override public void putALL ( java.util.Map < ? extends java.lang.String , ? extends K > add ) { for ( java.util.Map.Entry < ? extends java.lang.String , ? extends K > entry : add . entrySet () ) { put ( entry . getKey () , entry . getValue () ) ; } } 
public void injectedCacheName ( java.lang.Object obj , java.lang.String cacheName ) throws org.apache.ignite.IgniteCheckedException { assert obj != null ; if ( log . isDebugEnabled () ) log . debug ( ( "Injecting cache name: " + obj ) ) ; obj = unwrapTarget ( obj ) ; inject ( obj , GridResourceIoc.ResourceAnnotation.CACHE_NAME , null , null , cacheName ) ; } 
public final BinaryNum Shiftleft () { final boolean [] newBits = new boolean [ bits.length ] ; for ( int i = 1 ; i < ( bits.length ) ; i ++ ) { newBits [ ( i - 1 ) ] = bits [ i ] ; } newBits [ ( ( bits.length ) - 1 ) ] = false ; return new BinaryNum ( newBits ) ; } 
@ java.lang.Override public com.spanish_inquisition.battleship.server.game_states.GameState  visit () { com.spanish_inquisition.battleship.server.Player currentPlayer = getCurrentPlayer () ; if ( ! ( shootIfPlayerSentValidMessage ( currentPlayer ) ) ) { return ! ( didPlayerWon ( currentPlayer ) ) ? this : new com.spanish_inquisition.battleship.server.game_states.ResultState ( players , requestBus ) ; } return ! ( didPlayerWon ( currentPlayer ) ) ? new com.spanish_inquisition.battleship.server.game_states.PlayerActionState ( players , requestBus ) : new com.spanish_inquisition.battleship.server.game_states.ResultState ( players , requestBus ) ; } 
public void startTrack () { if ( ( mState ) == ( org.williamwong.spotifystreamer.services.MusicService.State.PAUSED ) ) { mMediaPlayer . start () ; mState = org.williamwong.spotifystreamer.services.MusicService.State.PLAYING ; return; } if ( ( mState ) == ( org.williamwong.spotifystreamer.services.MusicService.State.PLAYING ) ) { stopSong () ; } try { mMediaPlayer . setDataSource ( mTrackModels . get ( mCurrentTrack ) . getPreviewUrl () ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } mMediaPlayer . prepareAsync () ; mState = org.williamwong.spotifystreamer.services.MusicService.State.PREPARING ; } 
public byte [] downloadTMDTobyteString ( long titleID , int version ) throws java.io.IOException { java.lang.String version_suf = "" ; if ( version > 0 ) version_suf = "." + version ; java.lang.String URL = ( ( ( ( de.mas.jnustool.util.Downloader.URL_BASE ) + "/" ) + ( java.lang.String . format ( "%016X" , titleID ) ) ) + "/tmd" ) + version_suf ; return downloadFileToByteArray ( URL ) ; } 
public java.util.ArrayList < java.lang.String > getModulePoolPathNames () { java.util.ArrayList < java.lang.String > output = new java.util.ArrayList < java.lang.String > () ; if ( ( listofPredecessors . size () ) == 0 ) { return this . getCurrentFilePath () ; } else { for ( Runner.ModulePool mp : listofPredecessors ) { if ( ( mp . getCurrentFilePath () ) != null ) { output . addAll ( mp . getCurrentFilePath () ) ; } } } return output ; } 
protected void appendCgroupcmdls ( java.lang.StringBuilder cmdLine ) { if ( cfg . getFrameworkSuperUser () . isPresent () ) { cmdLine . append ( " export TASK_DIR=`basename $PWD`&&" ) ; appendSudo ( cmdLine ) ; cmdLine . append ( ( ( "chown " + ( cfg . getFrameworkUser () . get () ) ) + " " ) ) ; cmdLine . append ( cfg . getCGroupPath () ) ; cmdLine . append ( "/cpu/mesos/$TASK_DIR &&" ) ; } else { org.apache.myriad.scheduler.NMExecutorCLGenImpl.LOGGER . info ( "frameworkSuperUser not enabled ignoring cgroup configuration" ) ; } } 
public java.awt.Component prepareRrendrator ( javax.swing.table.TableCellRenderer renderer , int row , int column ) { java.awt.Component c = super . prepareRrendrator ( renderer , row , column ) ; if ( ! ( isRowSelected ( row ) ) ) c . setBackground ( ( ( row % 2 ) != 0 ? getBackground () : java.awt.Color.LIGHT_GRAY ) ) ; return c ; } 
@ org.junit.BeforeClass public static void normalizer () { Testing.Hub . start () ; java.lang.String [] fields = new java.lang.String [] { "id" , "blade_size" , "start_date" , "hours_used" } ; java.lang.String [] values = new java.lang.String [] { "500" , "11" , "2012-08-06 08:11:12" , "30" } ; Hub.logger . info ( "Begin Controller Unit Tests... \n" ) ; try { Testing.DeleteController . run ( "1000" ) ; } catch ( java.sql.SQLException e ) {} try { Testing.AddController . run ( fields , values ) ; } catch ( java.sql.SQLException e ) {} } 
@ java.lang.Override protected org.eclipse.emf.ecore.EObject getEObjectByIdFS ( java.lang.String id ) { org.eclipse.emf.ecore.EObject idObject = super . getEObjectByIdFS ( id ) ; if ( idObject == null ) { for ( org.eclipse.emf.ecore.EObject eObject : getContents () ) { if ( eObject instanceof no.hal.pgo.osm.OSM ) { no.hal.pgo.osm.Tagged tagged = no.hal.pgo.osm.util.OsmResourceImpl . getTagged ( id , eObject , OsmPackage.eINSTANCE . getOSM_Nodes () , OsmPackage.eINSTANCE . getOSM_Relations () ) ; if ( tagged != null ) { return tagged ; } } } } return idObject ; } 
public void AddPatch ( java.lang.String batchId ) { net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity [] batchObjects = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity [ 1 ] ; batchObjects [ 0 ] = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity () ; batchObjects [ 0 ] . objectUrn = ( net.smartcosmos.android.ProfilesTransactionRequest.PREFIX_BATCH ) + batchId ; batchObjects [ 0 ] . type = net.smartcosmos.android.ProfilesTransactionRequest.TYPE_BATCH ; batchObjects [ 0 ] . name = batchId ; addObjects ( batchObjects ) ; } 
public void  updateboardData ( char [] [] board ) { this . boardContent = new char [ [ board.length ] [ board [ 0 ] . length ] ; for ( int i = 0 ; i < ( boardContent.length ) ; i ++ ) { for ( int j = 0 ; j < ( boardContent [ 0 ] . length ) ; j ++ ) { boardContent [ i ] [ j ] = board [ i ] [ j ] ; } } } 
public void testIterateLimitLimit () { java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 2 , 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_EINSTEIN } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } } 
public int counteventsAtLocation ( java.lang.String id ) { int counter = - 1 ; java.lang.String request = handlers.HttpHandler . eventCounter ( id ) ; try { counter = java.lang.Integer . parseInt ( new handlers.HttpTask () . execute ( "GET" , request ) . get () . trim () ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } return counter ; } 
protected void  addFrameChangeListener ( java.lang.Object element ) { org.eclipse.tcf.te.ui.interfaces.IViewerInput viewerInput = org.eclipse.tcf.te.ui.trees.ViewerStateManager . getViewerInput ( element ) ; if ( ( viewerInput != null ) && ( ! ( viewerInputs . contains ( viewerInput ) ) ) ) { viewerInput . addPropertyChangeListener ( commonViewerListener ) ; viewerInputs . add ( viewerInput ) ; } } 
@ java.lang.Override public void onBindViewhicker ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int position ) { a1.a2017.iff.seriesanimes.Adapter.SerieAdapter.SerieViewHolder holder_series = ( ( a1.a2017.iff.seriesanimes.Adapter.SerieAdapter.SerieViewHolder ) ( viewHolder ) ) ; a1.a2017.iff.seriesanimes.Model.Serie serie = series . get ( position ) ; holder_series.tituloSerie . setText ( serie . getTitulo () ) ; holder_series.ano_lancamentoSerie . setText ( serie . getAno_lancamento () ) ; holder_series.descricaoSerie . setText ( serie . getDescricao () ) ; holder_series.tipoSerie . setText ( serie . getTipo () ) ; android.util.Log . i ( "------XXXXXXXXX------" , serie . getDescricao () ) ; } 
@ java.lang.Override public boolean equaps ( java.lang.Object object ) { if ( object instanceof qora.assets.Trade ) { qora.assets.Trade trade = ( ( qora.assets.Trade ) ( object ) ) ; return ( trade . getInitiator () . equaps ( this . getInitiator () ) ) && ( trade . getTarget () . equaps ( this . getTarget () ) ) ; } return false ; } 
@ java.lang.Override public android.view.View  getWidget ( int position , android.view.View convertView , android.view.ViewGroup parent ) { final org.unicef.rapidreg.forms.childcase.CaseField field = getItem ( position ) ; org.unicef.rapidreg.widgets.helper.WidgetHelper widgetHelper = org.unicef.rapidreg.widgets.helper.WidgetHelperFactory . getWidgetHelper ( getContext () , field ) ; widgetHelper . setValue () ; widgetHelper . setOnClickListener () ; return widgetHelper . getConvertView () ; } 
@ java.lang.Override public void OnStart () { if ( mIntentDataProvider . isOpenedByBrowser () ) { createHerbResultIntent ( org.chromium.chrome.browser.customtabs.CustomTabActivity.RESULT_STOPPED ) ; finish () ; } super . OnStart () ; org.chromium.chrome.browser.customtabs.CustomTabsConnection . getInstance ( getApplication () ) . dontKeepAliveForSession ( mIntentDataProvider . getSession () ) ; } 
public emerald.portal.JourneyBuilder clickMessageBoxGroupMenu () { boolean open = false ; if ( core.Actions . find ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.mbActionMenu ) ) { open = true ; } core.Actions . click ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.btnMessageActionMenu ) ; core.Wait . waitFor ( common.DriverManager . getDriver ( DriverType.LOOP ) , emerald.portal.JourneyBuilder.mbActionMenu , ( ! open ) ) ; return this ; } 
@ java.lang.Override public org.apache.tajo.datum.Datum  truncated ( org.apache.tajo.plan.function.FunctionContext ctx ) { org.apache.tajo.engine.function.builtin.StdDevContext StdDevCtx = ( ( org.apache.tajo.engine.function.builtin.StdDevContext ) ( ctx ) ) ; if ( ( StdDevCtx.count ) <= 1 ) { return org.apache.tajo.datum.NullDatum . get () ; } return org.apache.tajo.datum.DatumFactory . createFloat8 ( java.lang.Math . sqrt ( ( ( StdDevCtx.squareSumOfDiff ) / ( ( StdDevCtx.count ) - 1 ) ) ) ) ; } 
@ org.junit.Test public void testCoreRowtypeText () { org.gbif.ipt.model.Resource resource = new org.gbif.ipt.model.Resource () ; org.gbif.ipt.model.ExtensionMapping mapping = new org.gbif.ipt.model.ExtensionMapping () ; org.gbif.ipt.model.Extension ext = new org.gbif.ipt.model.Extension () ; ext . setRowType ( Constants.DWC_ROWTYPE_TAXON ) ; mapping . setExtension ( ext ) ; resource . addMapping ( mapping ) ; assertEquals ( Constants.DWC_ROWTYPE_TAXON , resource . getCoreRowType () ) ; } 
public java.io.BufferedWriter streamWriter ( ) throws java.io.IOException { if ( ( this . lines ) >= ( org.crossref.eventdata.twitter.RotatingFileWriter.MAX_LINES ) ) { this . close () ; this . lines = 0 ; this . file = this . newFile () ; this . writer = new java.io.BufferedWriter ( new java.io.FileWriter ( this . file ) ) ; } ( this . lines ) ++ ; return this . writer ; } 
public void writePlats ( final java.lang.String outputDir ) { new org.matsim.core.population.PopulationWriter ( scenario . getPopulation () ) . write ( ( ( ( outputDir + "/initial_urban_plans_" ) + ( cloningFactor ) ) + "pct.xml.gz" ) ) ; new org.matsim.utils.objectattributes.ObjectAttributesXmlWriter ( scenario . getPopulation () . getPersonAttributes () ) . writeFile ( ( ( ( outputDir + "/initial_urban_persionAttributes_" ) + ( cloningFactor ) ) + "pct.xml.gz" ) ) ; playground.agarwalamit.mixedTraffic.patnaIndia.input.urban.PatnaUrbanDemandGenerator.LOG . info ( "Writing Plan and person attributes files are finished." ) ; } 
@ java.lang.Override public void OnException ( com.iflytek.cloud.SpeechError error ) { if ( error != null ) { showTip ( ( ( ( "error:" + ( error . getErrorCode () ) ) + "," ) + ( error . getErrorDescription () ) ) ) ; } else { android.util.Log . d ( com.lixl.waveform.WaveformViewModule.TAG , "evaluator over" ) ; } } 
@ java.lang.Override public void positionmodifierchange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; if ( ( ( oldP [ 0 ] ) != ( newP [ 0 ] ) ) || ( ( oldP [ 1 ] ) != ( newP [ 1 ] ) ) ) { positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } } 
@ java.lang.Override public void runner () { com.marketo.MarketoConfig.Notification config = marketo . getNotificationConfig () ; org.json.JSONArray object = new org.json.JSONArray () ; object . put ( BitMapPath () ) ; object . put ( getResourseName ( config . getNotificationSmallIcon () ) ) ; callbackContext . success ( object ) ; } 
public org.smartdata.model.SystemInfo getOfProp ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) . get ( 0 ) ; } 
@ java.lang.Override public void  onFinishedwithresult ( java.lang.String monthName , int day , int year , long time ) { if ( setDateFromTime ) { if ( time < ( dateToTime ) ) dateFromTime = time ; } else { if ( time > ( dateFromTime ) ) dateToTime = time ; } updateDateRangeLabels ( true ) ; } 
@ java.lang.Override public void invoke ( gov.nasa.worldwind.invoke.DrawContext dc ) { try { super . invoke ( dc ) ; } catch ( java.lang.NullPointerException e ) { boolean followTerrain = isFollowTerrain () ; try { setFollowTerrain ( false ) ; super . invoke ( dc ) ; } finally { setFollowTerrain ( followTerrain ) ; } } } 
@ java.lang.Override protected void onRESume () { super . onRESume () ; if ( ( ! ( iconsPicker ) ) && ( ! ( wallsPicker ) ) ) { setupToolbarHeader () ; } jahirfiquitiva.iconshowcase.utilities.color.ToolbarColorizer . setupToolbarIconsAndTextsColors ( this , cAppBarLayout , cToolbar ) ; runLicenseChecker ( jahirfiquitiva.iconshowcase.activities.WITH_LICENSE_CHECKER , jahirfiquitiva.iconshowcase.activities.GOOGLE_PUBKEY , jahirfiquitiva.iconshowcase.activities.WITH_INSTALLED_FROM_AMAZON , jahirfiquitiva.iconshowcase.activities.ALLOW_APT_USE ) ; } 
@ java.lang.Override public double stroke ( final geogebra.common.kernel.geos.GeoPoint2 p ) { double stroke = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; final double d = geo . stroke ( p ) ; if ( d < stroke ) { stroke = d ; } } return stroke ; } 
@ java.lang.Override public void deletetable ( final java.lang.String tableName ) throws java.sql.SQLException { this . logger . info ( java.lang.String . format ( "Removing table for sid %d and tablename %s" , getSid () , tableName ) ) ; final java.lang.String sql = java.lang.String . format ( "DROP TABLE IF EXISTS %s" , wrapName ( tableName ) ) ; try { executeUpdate ( sql ) ; } catch ( final java.sql.SQLException e ) { this . logger . error ( java.lang.String . format ( "Removing table for sid %d and tablename %s FAILED" , getSid () , tableName ) , e ) ; throw e ; } } 
public void store ( int index , long element ) { if ( index == ( size () ) ) { store ( element ) ; } else { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; ( end ) ++ ; } } 
private java.lang.String ReadStream ( java.io.InputStream in ) throws java.io.IOException { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( in , "utf-8" ) ) ) { java.lang.String line = reader . readLine () ; while ( line != null ) { sb . append ( line . trim () ) ; line = reader . readLine () ; } } return sb . toString () ; } 
@ java.lang.Override public java.lang.String  getNObject ( int ref ) { android.util.Log . v ( tk.thebrightstuff.blindtale.view.SceneActivity.TAG , ( ( ( ( "Removing accents from " + ( getIString ( ref ) ) ) + " (" ) + ref ) + ")" ) ) ; return tk.thebrightstuff.blindtale.utils.StringUtils . removeAccents ( getIString ( ref ) ) . toLowerCase () ; } 
static void modifyMe ( ) throws java.lang.Exception { java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat ( "yyyy-mm-dd" ) ; java.lang.String time ; java.util.Date date = simpleDateFormat . parse ( "1996-9-30" ) ; time = simpleDateFormat . format ( date ) ; java.io.File image = new java.io.File ( "/home/alex/Pictures/test.jpg" ) ; po.UserPO userPOTest = new po.UserPO ( 2 , model.UserType.Customer , "alex2097" , "151250187" , "Alex Yu" , "15951923079" , image , 800 , model.MemberType.Person , time , 1 , null , 3 ) ; dao.UserDao userDao = new daoImpl.UserDaoImpl () ; message.ResultMessage message = userDao . modifyMe ( userPOTest ) ; } 
public static java.util.Date  getLastDay ( java.lang.Class articleClass ) throws java.lang.NullPointerException { org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } 
@ org.glowroot.markers.OnlyUsedByTests public void run ( ) throws java.lang.Exception { uiModule . run () ; collectorModule . run () ; transactionModule . run () ; storageModule . run () ; scheduledExecutor . shutdownNow () ; if ( org.glowroot.GlowrootModule . shouldOverrideLogging () ) { ( ( ch.qos.logback.classic.LoggerContext ) ( org.slf4j.LoggerFactory . getILoggerFactory () ) ) . reset () ; } dataDirFileLock . release () ; dataDirLockFile . run () ; } 
public java.lang.String  parseTrunkID ( java.lang.String subject ) { java.lang.String [] full_subject = subject . split ( "#" ) ; if ( ( full_subject [ 1 ] ) != "" ) { java.lang.String second_part_subject = full_subject [ 1 ] ; java.lang.String trimmed_subject = second_part_subject . trim () ; java.lang.String [] id = trimmed_subject . split ( " " ) ; return id [ 0 ] ; } else { return subject . trim () ; } } 
@ java.lang.Override public java.lang.String viaInt () { return java.lang.String . format ( "%s %s %.6f %.6f %d %d %d %d %d %d %d %d" , getFromId () . getHeader () , getToId () . getHeader () , ( 1.0 - ( getScore () ) ) , this . rawScore , ( getFromId () . isForward () ? 0 : 1 ) , this . a1 , this . a2 , this . fromLength , ( getToId () . isForward () ? 0 : 1 ) , this . b1 , this . b2 , this . toLength ) ; } 
private void startDriomingSpectors () { this . trackRecognizerActor = getContext () . actorOf ( akka.actor.Props . create ( ch.hsr.whitespace.javapilot.akka.TrackRecognizerActor . class , getSelf () , new java.util.ArrayList < java.lang.String > ( alreadyCheckedPatterns ) ) ) ; this . drivingCoordinatorActor = getContext () . actorOf ( akka.actor.Props . create ( ch.hsr.whitespace.javapilot.akka.DrivingCoordinatorActor . class , getSelf () , properties . getInitialPower () ) ) ; } 
@ butterknife.OnClick ( value = R.id.music_search_btn ) public void OnClick () { xyf.com.appframe.recycleviewtools.SoftInputUtils . hideSoftInput ( this ) ; adapter . clear () ; xyf.com.appframe.MusicSearchActivity.pageno = 1 ; xyf.com.appframe.recycleviewtools.ProgressDialogUtils . showProgress ( this ) ; xyf.com.appframe.MusicSearchActivity.searchkey = input . getText () . toString () . trim () ; setTitle ( xyf.com.appframe.MusicSearchActivity.searchkey ) ; load ( xyf.com.appframe.MusicSearchActivity.searchkey , ( "" + ( xyf.com.appframe.MusicSearchActivity.pageno ) ) ) ; } 
@ org.junit.Ignore @ org.junit.Test public void  performanceTesting ( ) throws java.lang.Exception { java.lang.String hdfsStoreName = "org.apache.kylin.storage.hdfs.HDFSResourceStore" ; org.apache.kylin.common.persistence.ResourceStoreTest . testPerformance ( org.apache.kylin.common.persistence.ResourceStoreTest . mockUrl ( "hdfs" , kylinConfig ) , kylinConfig ) ; java.lang.String hbaseStoreName = "org.apache.kylin.storage.hbase.HBaseResourceStore.HBaseResourceStore" ; org.apache.kylin.common.persistence.ResourceStoreTest . testPerformance ( org.apache.kylin.common.persistence.ResourceStoreTest . mockUrl ( "hbase" , kylinConfig ) , kylinConfig ) ; } 
public java.lang.String getUnlocaledName ( net.minecraft.item.ItemStack stack ) { net.minecraft.nbt.NBTTagCompound tag = stack . getTagCompound () ; if ( tag != null ) { return ( ( super . getUnlocaledName ( stack ) ) + "." ) + ( tag . getString ( "name" ) ) ; } else { return super . getUnlocaledName ( stack ) ; } } 
@ java.lang.Override public java.lang.CharSequence getPageLabel ( int position ) { if ( position < ( data . getCount () ) ) { java.lang.Object item = data . getItem ( position ) ; if ( item instanceof itkach.aard2.BlobDescriptor ) { return ( ( itkach.aard2.BlobDescriptor ) ( item ) ) . key ; } if ( item instanceof itkach.slob.Slob.Blob ) { return ( ( itkach.slob.Slob.Blob ) ( item ) ) . key ; } } return "???" ; } 
@ java.lang.Override protected mobop.booklist.app.data.api.ApiBook  doOnBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; return book ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } } 
@ java.lang.Override public void setstyleTypes ( final org.openflexo.fge.shapes.ShapeSpecification.ShapeType shapeType ) { final org.openflexo.fge.shapes.ShapeSpecification.ShapeType oldShapeType = this . getStyleType () ; if ( oldShapeType == shapeType ) { return; } final org.openflexo.fge.shapes.ShapeSpecification oldSS = this . getShapeSpecification () ; this . shapeType = shapeType ; this . pcSupport . firePropertyChange ( org.openflexo.fge.control.tools.STYLE_CLASS_CHANGED , oldShapeType , this . getStyleType () ) ; this . pcSupport . firePropertyChange ( "styleType" , oldShapeType , this . getStyleType () ) ; this . pcSupport . firePropertyChange ( "shapeSpecification" , oldSS , this . getShapeSpecification () ) ; } 
private void startDialog ( int i ) { android.os.Bundle bundle ; android.content.Intent intent ; bundle = new android.os.Bundle () ; bundle . putInt ( "room" , i ) ; intent = new android.content.Intent ( this , hevs.project.SketchAgenda . class ) ; intent . putExtras ( bundle ) ; this . startDialog ( intent ) ; finish () ; } 
public java.util.List < bb. tokenizr.Token >  tokeniz ( java.lang.String str ) { java.util.ArrayList < bb. tokenizr.Token > tokens = new java.util.ArrayList < bb. tokenizr.Token > () ; while ( ( str . length () ) > 0 ) { str = addNextToken ( str , tokens ) ; } line = 1 ; column = 1 ; return tokens ; } 
@ java.lang.Override public boolean execute () { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; return false ; } 
public void runner () { while ( true ) { try { java.lang.String message ; int length = input . readInt () ; if ( length > 0 ) { byte [] b = new byte [ length ] ; input . readFully ( b ) ; message = new java.lang.String ( b , "UTF-8" ) ; this . sendMessage ( network.AppWorker . handleMessage ( message ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; break; } } } 
public void  mouseover ( MyPanel myPanelB , int ClickedInX , int ClickedInY ) { if ( HasBomb ( myPanelB , ClickedInX , ClickedInY ) ) { for ( int posArray = 0 ; posArray < ( posXBomb.length ) ; posArray ++ ) { myPanelB.colorArray [ ClickedInX ] [ ClickedInY ] = bombs ; myPanelB.colorArray [ posXBomb [ posArray ] ] [ posYBomb [ posArray ] ] = bombs ; myPanelB . repaint () ; } } } 
public final void  vsimdtowx ( jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { assert ( dst . getRegisterCategory () . equals ( AMD64.XMM ) ) && ( src . getRegisterCategory () . equals ( AMD64.XMM ) ) ; com.oracle.graal.asm.amd64.AMD64InstructionAttr attributes = new com.oracle.graal.asm.amd64.AMD64InstructionAttr ( com.oracle.graal.asm.amd64.AMD64Assembler.AvxVectorLen.AVX_128bit , false , false , false , false , target ) ; int encode = simdPrefixAndEncode ( dst , Register.None , src , com.oracle.graal.asm.amd64.AMD64Assembler.VexSimdPrefix.VEX_SIMD_66 , com.oracle.graal.asm.amd64.AMD64Assembler.VexOpcode.VEX_OPCODE_0F , attributes ) ; emitByte ( 230 ) ; emitByte ( ( 192 | encode ) ) ; } 
@ java.lang.Override public boolean  onFetInitialLine ( org.wordpress.android.models.PeopleListFilter filter ) { org.wordpress.android.models.Blog blog = org.wordpress.android.WordPress . getCurrentBlog () ; if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.TEAM ) ) && ( mCanRefreshUsers ) ) { return fetchUsersList ( blog . getDotComBlogId () , blog . getLocalTableBlogId () , 0 ) ; } else if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.FOLLOWERS ) ) && ( mCanRefreshFollowers ) ) { return fetchFollowersList ( blog . getDotComBlogId () , blog . getLocalTableBlogId () , 1 ) ; } return false ; } 
private void createHandleToActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.Handle handle = null ; nodebox.client.HandleRepository repository = nodebox.client.HandleRepository . of () ; if ( repository . hasHandleClass ( activeNode . getHandle () ) ) { handle = repository . constructHandle ( activeNode . getHandle () ) ; } if ( handle != null ) { handle . setHandleDelegate ( this ) ; viewerPane . setHandle ( handle ) ; } else { viewerPane . setHandle ( null ) ; } } } 
public java.lang.Integer getnextDay () { len = datesStream . readRecord ( buffer2 , 0 , 4 ) ; if ( ( len ) != 1 ) { throw new java.lang.IllegalArgumentException ( "Error: Could not read in another byte." ) ; } else { numDecrypted += 1 ; return ( firstDate ) + ( java.nio.ByteBuffer . wrap ( buffer2 ) . getInt () ) ; } } 
@ org.springframework.web.bind.annotation.ExceptionHandler ( value = com.carser.viamais.exception.LogException . class ) public void catchEntry ( final com.carser.viamais.exception.LogException e ) { org.slf4j.Logger logger = org.slf4j.LoggerFactory . getLogger ( e . getSource () ) ; logger . error ( e . getMessage () ) ; com.carser.viamais.entity.MailConfiguration config = mailConfigurationRepository . findByEvent ( MailConfiguration.Event.ERROR_MESSAGE ) ; mailService . sendHtmlEmail ( adminMail , config . getDefaultSender () , config . getDefaultSubject () , e . getMessage () ) ; } 
private void getFieldsInfo () { java.lang.Long tsLong = ( java.lang.System . currentTimeMillis () ) / 1000 ; timestamp = tsLong . toString () ; testingDate = ( ( ( ( java.lang.String . valueOf ( datepicker . getYear () ) ) + "," ) + ( java.lang.String . valueOf ( ( ( datepicker . getMonth () ) + 1 ) ) ) ) + "," ) + ( java.lang.String . valueOf ( datepicker . getDayOfMonth () ) ) ; } 
public static java.lang.String convertFromGroupString ( java.lang.String [] group ) { java.lang.String str = "" ; for ( int i = 0 ; i < ( ( group.length ) - 1 ) ; i ++ ) { str += ( group [ i ] ) + ":" ; } str += group [ ( ( group.length ) - 1 ) ] ; return str ; } 
@ org.junit.Test @ com.hp.autonomy.frontend.selenium.framework.logging.ResolvedBug ( value = "FIND-93" ) public void  testNoResult () { final com.autonomy.abc.selenium.find.results.ListView results = findService . search ( "thissearchwillalmostcertainlyreturnnoresults" ) ; new org.openqa.selenium.support.ui.WebDriverWait ( getDriver () , 60L ) . withMessage ( "No results message should appear" ) . until ( org.openqa.selenium.support.ui.ExpectedConditions . textToBePresentInElement ( results . resultsDiv () , "No results found" ) ) ; findPage . scrollToBottom () ; final int occurrences = org.apache.commons.lang3.StringUtils . countMatches ( results . resultsDiv () . getText () , "results found" ) ; verifyThat ( "Only one message showing at the bottom of search results" , occurrences , org.hamcrest.core.Is . is ( 1 ) ) ; } 
public static boolean isPockerPath ( java.lang.String path ) { path = path . trim () . toLowerCase () ; return ( ( path . endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) || ( path . endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION ) ) ) || ( path . endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION_OLD ) ) ; } 
public java.util.Set < com.example.lachlan.myfirstapp.code.SubDistrict > subdistDistrictes () { java.util.Set < com.example.lachlan.myfirstapp.code.SubDistrict > subs = new java.util.HashSet < com.example.lachlan.myfirstapp.code.SubDistrict > () ; for ( com.example.lachlan.myfirstapp.code.Location loc : locations () ) { if ( loc.municipality . equals ( name ) ) { subs . add ( new com.example.lachlan.myfirstapp.code.SubDistrict ( context , loc.municipality , loc.subdistrict ) ) ; } } return subs ; } 
public void putLarray ( final long [] data , boolean length ) { int l = data.length ; if ( length ) putInt ( l ) ; l *= com.heerbann.unsafe.UnsafeBuffer.sizeOfLong ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( data , com.heerbann.unsafe.UnsafeBuffer.longArrayOffset , null , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
public void renderIncrementation ( lemon.engine.render.Renderable renderable ) { org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_BLEND ) ; org.lwjgl.opengl.GL11 . glBlendFunc ( GL11.GL_SRC_ALPHA , GL11.GL_ONE_MINUS_SRC_ALPHA ) ; org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_DEPTH_TEST ) ; org.lwjgl.opengl.GL20 . glUseProgram ( program . getId () ) ; lineRenderer . render ( renderable ) ; org.lwjgl.opengl.GL20 . glUseProgram ( 0 ) ; org.lwjgl.opengl.GL11 . glDisable ( GL11.GL_DEPTH_TEST ) ; org.lwjgl.opengl.GL11 . glDisable ( GL11.GL_BLEND ) ; } 
static java.io.File constructFilename ( java.lang.String basePath , java.lang.String fileName ) { java.io.File file ; java.io.File absolute = new java.io.File ( fileName ) ; if ( ( org.apache.commons.lang3.StringUtils . isEmpty ( basePath ) ) || ( absolute . isAbsolute () ) ) { file = absolute ; } else { file = new java.io.File ( org.apache.commons.configuration2.io.FileLocatorUtils . appendPath ( basePath , fileName ) ) ; } return file ; } 
public void  ConnectionLost ( java.lang.Throwable cause ) { log ( new java.lang.StringBuilder ( "Connection to lost! " ) . append ( cause ) . toString () ) ; com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments . createMap () ; params . putString ( "event" , "closed" ) ; params . putString ( "message" , "Connection to lost!" ) ; sendEvent ( _reactContext , "mqtt_events" , params ) ; } 
public void  doThis ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String error = null ; if ( error != null ) { response . sendRedirect ( ( "home.do?error=" + error ) ) ; } else { response . sendRedirect ( "home.do" ) ; } } 
public void OnClick ( com.google.gwt.event.dom.client.ClickEvent event ) { if ( actorConfigTab.currentEditSite . getName () . equals ( actorConfigTab.newSiteName ) ) { new gov.nist.toolkit.xdstools2.client.PopupMessage ( "You must give site a real name before saving" ) ; return; } if ( gov.nist.toolkit.xdstools2.client.PasswordManagement.isSignedIn ) { actorConfigTab.saveSignedInCallback . onSuccess ( true ) ; } else { gov.nist.toolkit.xdstools2.client.PasswordManagement . addSignInCallback ( actorConfigTab.saveSignedInCallback ) ; new gov.nist.toolkit.xdstools2.client.AdminPasswordDialogBox ( actorConfigTab . getTabTopPanel () ) ; } } 
private java.lang.String getRow ( int number ) throws java.lang.Exception { java.lang.String value = null ; java.lang.String pageContent = FitnesseFixtureContext.page . getHtml () ; java.lang.String lineizedContent = fitnesse.fixtures.ResponseExaminer . convertBreaksToLineSeparators ( pageContent ) ; java.util.StringTokenizer tokenizedLines = tokenizeLines ( lineizedContent ) ; for ( int i = number ; i != 0 ; i -- ) value = tokenizedLines . nextToken () ; return value != null ? value . trim () : null ; } 
public void assertEAs ( java.lang.Object expected , java.lang.Object actual ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; } 
private void drawPage () { int charToRemove = line . length () ; java.lang.System.out . print ( "\r" ) ; line = java.lang.String . format ( "Frames rendered: %d remaining: %d credits earned: %s | %s" , rendered , remaining , ( ( creditsEarned ) != null ? creditsEarned : "unknown" ) , ( ( status ) + ( exiting ? " (Exiting after this frame)" : "" ) ) ) ; java.lang.System.out . print ( line ) ; for ( int i = line . length () ; i <= charToRemove ; i ++ ) { java.lang.System.out . print ( " " ) ; } } 
public int lookout ( int index , short remainder ) { int currentIndex = index ; org.bucaojit.filter.Slot currentSlot = set . get ( currentIndex ) ; int runStart = 0 ; if ( currentSlot . getMetadata () . isClear () ) return - 1 ; runStart = findRunStart ( currentIndex ) ; return checkQuotient ( runStart , remainder ) ; } 
@ java.lang.Override public void  placeOnPortale ( net.minecraft.entity.Entity entity , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = entity.motionY = entity.motionZ = 0 ; } 
private void setPositionsByGames ( java.util.List < game.db.GameResultEntity > gameResults , java.util.List < java.lang.Integer > points ) { java.util.Collections . sort ( points ) ; for ( int i = 0 ; i < ( points . size () ) ; i ++ ) { for ( game.db.GameResultEntity gameResult : gameResults ) { if ( gameResult . getPoints () . equals ( points . get ( i ) ) ) { gameResult . setPosition ( ( i + 1 ) ) ; } } } } 
protected static java.lang.String _transform ( final org.eclipse.ocl.pivot.TypeExp e ) { org.eclipse.xtend2.lib.StringConcatenation _builder = new org.eclipse.xtend2.lib.StringConcatenation () ; java.lang.String _replace = e . getReferredType () . toString () . replace ( "::" , "!" ) ; _builder . append ( _replace ) ; return _builder . toString () ; } 
public void updateConsumer ( java.util.Map < java.lang.String , ? > properties ) { this . lexevsRemoteApiUrl = ( ( java.lang.String ) ( properties . get ( "lexevsRemoteApiUrl" ) ) ) ; this . lgConfigFile = ( ( java.lang.String ) ( properties . get ( edu.mayo.cts2.framework.plugin.service.lexevs.LexBigServiceFactory.LG_CONFIG_FILE_ENV ) ) ) ; this . hasBeenConfigured = true ; } 
public java.lang.String AddTime ( java.lang.String date , char typeRepeat ) { switch ( typeRepeat ) { case 'D' : return this . addDayInDate ( date ) ; case 'M' : return this . addMonthInDate ( date ) ; case 'A' : return this . addYearInDate ( date ) ; default: return date ; } } 
long  seqsperYcles ( int cycle ) { net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts.StoreTailer tailer = acquireTailer () ; try { long index = rollCycle . toIndex ( cycle , 0 ) ; if ( tailer . moveToIndex ( index ) ) { assert ( tailer.store . refCount () ) > 0 ; return ( tailer.store . lastSequenceNumber ( tailer ) ) + 1 ; } else { return - 1 ; } } catch ( java.io.StreamCorruptedException e ) { throw new java.lang.IllegalStateException ( e ) ; } finally { tailer . release () ; } } 
private java.lang.String getRootUsi ( final org.apache.olingo.odata2.api.processor.ODataRequest request ) { java.lang.String baseUri = request . getPathInfo () . getServiceRoot () . toASCIIString () ; if ( baseUri . endsWith ( "/" ) ) { baseUri = baseUri . substring ( 0 , ( ( baseUri . length () ) - 1 ) ) ; } return baseUri ; } 
public void removeGroup ( java.lang.String uname , java.lang.String gID ) { for ( de.jattyv.jcapi.server.virtual.dataController.data.User user : users ) { if ( user . getUserName () . equals ( uname ) ) { for ( de.jattyv.jcapi.client.gui.cell.FG fg : user . getFgs () ) { if ( fg . getId () . equals ( gID ) ) { if ( ( fg . getType () ) == ( de.jattyv.jcapi.client.gui.cell.FG.FG_TYPE_GROUP ) ) { user . getFgs () . remove ( fg ) ; return; } } } } } } 
@ java.lang.Override public void  restore ( java.io.File file , com.parse.ParseException e ) { com.clothapp.resources.Image toAdd = new com.clothapp.resources.Image ( file , object . getObjectId () , object . getString ( "user" ) , object . getList ( "like" ) , object . getInt ( "nLike" ) , object . getList ( "hashtag" ) , object . getList ( "vestiti" ) , object . getList ( "tipo" ) ) ; if ( ! ( com.clothapp.ImageFragment.lista . contains ( toAdd ) ) ) { com.clothapp.ImageFragment.lista . add ( toAdd ) ; mPagerAdapter . notifyDataSetChanged () ; } } 
public void test_getFormits () { java.lang.String [] orgFormats = ( ( java.lang.String [] ) ( formats . clone () ) ) ; java.lang.String [] f = ( ( java.lang.String [] ) ( f1 . getFormats () ) ) ; assertTrue ( "Wrong formats" , ( f == ( formats ) ) ) ; f [ 0 ] = "Modified" ; assertTrue ( "Formats copied" , ( f != orgFormats ) ) ; } 
@ java.lang.Override public void updatePlayersPositionStates () { net.minecraft.client.entity.EntityPlayerSP player = net.minecraft.client.Minecraft . getMinecraft () . thePlayer ; if ( ( ClientHookHandler.hook ) == null ) { original . updatePlayersPositionStates () ; player.movementInput = original ; } else if ( player.onGround ) { super . updatePlayersPositionStates () ; } else { this . jump = net.minecraft.client.Minecraft . getMinecraft () . gameSettings . keyBindJump . getIsKeyPressed () ; this . sneak = net.minecraft.client.Minecraft . getMinecraft () . gameSettings . keyBindSneak . getIsKeyPressed () ; } } 
@ com.google.gwt.uibinder.client.UiHandler ( value = "browseCentury" ) public void onClickOfBrowzeCentrica ( com.google.gwt.event.dom.client.ClickEvent e ) { centuryPopup . clear () ; centuryPresenterWidget . setAddResourceData ( centurySelectedValues ) ; centuryPopup . add ( centuryPresenterWidget . getWidget () ) ; centuryPopup . show () ; centuryPopup . center () ; centuryPopup . getElement () . getStyle () . setZIndex ( 999999 ) ; } 
@ java.lang.Override public interfaces.Problem  hcSteepestAsce ( interfaces.Problem prob ) { puzzle.PuzzleProblem current = ( ( puzzle.PuzzleProblem ) ( prob ) ) ; puzzle.PuzzleState neighbor ; while ( true ) { neighbor = ( ( puzzle.PuzzleState ) ( current . getBestNeighbor () ) ) ; if ( ( neighbor . getValue () ) >= ( current . getState () . getValue () ) ) return current ; current . addAction ( neighbor.actstr ) ; current . setState ( neighbor ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btnTimerPlay : com.mkhan.myapplication.TimerActivity.isTimerOn = true ; togglePlayButtontext ( ( ( android.widget.Button ) ( v ) ) ) ; break; case R.id.btnTimerReset : com.mkhan.myapplication.TimerActivity.isTimerOn = false ; togglePlayButtontext ( ( ( android.widget.Button ) ( v ) ) ) ; break; } } 
private static java.lang.Class < ? extends java.lang.Object > getMediaType ( jade.lang.acl.ACLMessage msg ) { try { java.lang.Object content = msg . getContentObject () ; if ( content != null ) return content . getClass () ; } catch ( jade.lang.acl.UnreadableException e ) { e . printStackTrace () ; } return null ; } 
@ org.springframework.context.annotation.Bean public javax.persistence.EntityManagerFactory  documentManagerFunction () { java.util.logging.Logger . getLogger ( "org.hibernate" ) . setLevel ( java.util.logging.Level.INFO ) ; org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter () ; vendorAdapter . setShowSql ( true ) ; vendorAdapter . setGenerateDdl ( false ) ; vendorAdapter . setDatabasePlatform ( "org.hibernate.dialect.PostgreSQLDialect" ) ; org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean () ; factory . setJpaVendorAdapter ( vendorAdapter ) ; factory . setPackagesToScan ( "com.teamd.taxi.entity" ) ; factory . setDataSource ( dataSource () ) ; factory . afterPropertiesSet () ; return factory . getObject () ; } 
public int setDisplayHeight () { return ( ( int ) ( ( ( float ) ( ( dragged ) / ( ( float ) ( ( viewportHeight ) - ( BAR_HEIGHT ) ) ) ) ) * ( ( height ) - ( viewportHeight ) ) ) ) ; } 
private void hopdetected ( com.mygdx.runrunrun.sprites.MoveableObject firstObj ) { shop = ( ( com.mygdx.runrunrun.sprites.Shop ) ( firstObj ) ) ; if ( ( firstObj . contains ( hero . getPosition () ) ) && ( ( firstObj . getHide () ) == false ) ) { stopForShop = true ; if ( ( flyCount ) <= 0 ) exitShopTimer = 100 ; } else { stopForShop = false ; enteredShop = false ; if ( hero . getStop () ) { hero . toggleStop () ; } } } 
@ org.junit.Test public void  unsuccessfulPost ( ) throws java.lang.Exception { com.springernature.watermark.api.WatermarkApiIntegrationTest.LOG . info ( "Testing  unsuccessfulPost" ) ; com.springernature.watermark.model.Book book = com.springernature.watermark.model.ModelTestUtil . createDummyBook () ; java.lang.Long id = postRequest ( book ) ; com.springernature.watermark.api.RequestEntity entity = com.springernature.watermark.api.RequestEntity . get ( new java.net.URI ( ( ( ( baseUrl ) + "/" ) + id ) ) ) . build () ; com.springernature.watermark.api.ResponseEntity < java.util.Map > response = this . testRestTemplate . exchange ( entity , java.util.Map . class ) ; assertEquals ( HttpStatus.OK , response . getStatusCode () ) ; } 
private void addWorks ( int count ) { workerCount = count ; workers = new java.util.ArrayList <> () ; for ( int i = 0 ; i < count ; i ++ ) { com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker = new com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker ( this , i ) ; workers . add ( worker ) ; } } 
@ java.lang.Override protected void onPostExexecute ( java.lang.Object resultObject ) { if ( resultObject == null ) {} else if ( resultObject instanceof byte [] ) { mImageBytesConsumer . onAssetBytes ( mAsset , ( ( byte [] ) ( resultObject ) ) ) ; } else if ( resultObject instanceof java.lang.Exception ) { mImageBytesConsumer . onAssetError ( mAsset , ( ( java.lang.Exception ) ( resultObject ) ) ) ; } } 
@ java.lang.Override public void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; tcBaseDelegate . setOverWriteTitle ( false ) ; try { app = getBaseApplicationInterface () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } tcBaseDelegate . onscreate ( this , savedInstanceState , app ) ; } 
public void showHuzzleLayout () { try { javafx.fxml.FXMLLoader loader = new javafx.fxml.FXMLLoader () ; loader . setLocation ( controller.MainApp . class . getResource ( "../view/PuzzleLayout.fxml" ) ) ; javafx.scene.layout.AnchorPane anchorPane = loader . load () ; rootLayout . setCenter ( anchorPane ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public java.util.ArrayList < java.lang.String > getTimeEndSet () { java.util.ArrayList < java.lang.String > categoryEndList = new java.util.ArrayList < java.lang.String > () ; if ( ( categoriesInfo . getCategories () ) != null ) { for ( com.nusclimb.live.crimp.common.json.CategoriesResponseBody.Category c : categoriesInfo . getCategories () ) { categoryEndList . add ( c . getTimeEnd () ) ; } } return categoryEndList ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public void onViewUpdated ( android.view.View view , android.os.Bundle savedInstanceState ) { super . onViewUpdated ( view , savedInstanceState ) ; final P presenter = getPresenter () ; if ( presenter != null ) { butterknife.ButterKnife . bind ( presenter , view ) ; } if ( presenter != null ) { presenter . setView ( this ) ; } ready () ; } 
@ java.lang.Override public void  onEndpointPoolConfigSet ( org.openhab.io.transport.modbus.endpoint.ModbusSlaveEndpoint endpoint , org.openhab.io.transport.modbus.endpoint.EndpointPoolConfiguration otherConfig ) { synchronized ( this ) { if ( ( ( ( this . configuration ) != null ) && ( endpoint . equals ( this . endpoint ) ) ) && ( ! ( this . configuration . equals ( otherConfig ) ) ) ) { updateStatus ( ThingStatus.OFFLINE , ThingStatusDetail.CONFIGURATION_ERROR , java.lang.String . format ( "Endpoint '%s' has conflicting parameters: parameters of this thing (%s) {} are different from {}" , endpoint , this . thing , this . configuration , otherConfig ) ) ; } } } 
@ java.lang.Override public void onDateChange ( android.widget.TimePicker timePicker , int hourOfDay , int minute ) { super . onDateChange ( timePicker , hourOfDay , minute ) ; if ( ! ( mIgnoreEvent ) ) { minute = getRoundedMinute ( minute ) ; mIgnoreEvent = true ; timePicker . setCurrentMinute ( minute ) ; mIgnoreEvent = false ; } } 
public java.lang.String [] getPkt ( ) throws java.io.IOException { while ( input . ready () ) { char c = ( ( char ) ( input . read () ) ) ; if ( c == '\n' ) { java.lang.String output = buffer . toString () ; buffer = new java.lang.StringBuilder () ; return output . split ( "\t" ) ; } else buffer . append ( c ) ; } return null ; } 
@ java.lang.Override public void starter () { android.util.Log . d ( org.example.xwalkembedded.XWalkExoMediaPlayer.TAG , "==== in starter " ) ; if ( ( mSystemMediaPlayer ) && ( ( mMediaPlayer ) != null ) ) { mMediaPlayer . starter () ; } else if ( ( player ) != null ) { player . setPlayWhenReady ( true ) ; } } 
@ java.lang.Override public void onViewSeocated ( android.widget.AdapterView < ? > parentView , android.view.View selectedItemView , int position , long id ) { java.lang.String [] userName = userSpinner . getSelectedItem () . toString () . split ( " " ) ; com.iutbmteprow.shootingarchery.dbman.Utilisateur curUser = db . getUtilisateurFromName ( userName [ 1 ] , userName [ 0 ] ) ; idUserSelected = curUser . getId () ; ListArcFragments ( curUser . getId () ) ; } 
public java.lang.String getformatedTimeout () { int seconds = ( ( int ) ( ( ( mDuration ) / 1000 ) % 60 ) ) ; int minutes = ( ( int ) ( ( ( mDuration ) / ( 1000 * 60 ) ) % 60 ) ) ; int hours = ( ( int ) ( ( ( mDuration ) / ( ( 1000 * 60 ) * 60 ) ) % 24 ) ) ; return java.lang.String . format ( "%02d:%02d:%02d" , hours , minutes , seconds ) ; } 
@ java.lang.Override public boolean onBackPressressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { return ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressressed () ; } } return false ; } 
public java.lang.String getformattedDay ( java.lang.String str ) { com.github.TimeParser tp = new com.github.TimeParser () ; long [] time = tp . GetInput ( str ) ; java.util.Date date0 = new java.util.Date ( time [ 0 ] ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss z" ) ; sdf . setTimeZone ( java.util.TimeZone . getTimeZone ( "GMT-4" ) ) ; java.lang.String formattedDate = sdf . format ( date0 ) ; return formattedDate ; } 
public static java.lang.String toSyspath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } 
public void setThumbnailImageByteset ( android.graphics.Bitmap bm , java.lang.String thumbPath ) { photos_iv . setEnabled ( true ) ; android.graphics.Bitmap thumbnail = android.media.ThumbnailUtils . extractThumbnail ( bm , 213 , 213 ) ; btn_thumbnail . setImageBitmap ( thumbnail ) ; this . thumbPath = thumbPath ; btn_thumbnail . setVisibility ( View.VISIBLE ) ; } 
private boolean hasUnknownTagBlock ( org.languagetool.AnalyzedTokenReadings [] tokens , int startPos , int endPos ) { for ( int i = startPos ; i < endPos ; i ++ ) { org.languagetool.AnalyzedTokenReadings token = tokens [ i ] ; for ( org.languagetool.AnalyzedToken analyzedToken : token . getReadings () ) { if ( analyzedToken . hasNoTag () ) { return true ; } } } return false ; } 
public void  FaseIn ( com.badlogic.gdx.math.Matrix4 cameraCombined , float delta ) { fadeOutLight . setActive ( false ) ;  FaseInLight . setActive ( true ) ; if ( ( timePassedDuringFadeIn ) < ( timeToFadeIn ) ) {  FaseInAlpha = 1 - ( ( timePassedDuringFadeIn ) / ( timeToFadeIn ) ) ;  FaseInLight . setColor ( new com.badlogic.gdx.graphics.Color ( 0 , 0 , 0 , ( 1 - (  FaseInAlpha ) ) ) ) ; rayHandler . setCombinedMatrix ( cameraCombined ) ; timePassedDuringFadeIn += delta ; } else { isNewLevel = false ; } rayHandler . updateAndRender () ; } 
public boolean  instantiateDBConsnection () { try { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; con = java.sql.DriverManager . getConnection ( ( ( "jdbc:sqlite:" + ( property ) ) + "/ProjectTest.db" ) , "" , "" ) ; return true ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; java.lang.System.out . println ( "exception caught" ) ; return false ; } } 
private void  onButtonCrowdmouseClickedIn ( java.awt.event.MouseEvent evt ) { arenatojava.SQL sql = new arenatojava.SQL () ; currentCrowd = sql . getCrowdInfo () ; try { if ( ( currentImage ) != null ) currentImage = converter . Resize ( ( ( java.awt.image.BufferedImage ) ( currentImage ) ) , currentCrowd . getWidth () , currentCrowd . getHeight () ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( arenatojava.MainForm . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } UpdateImageView () ; } 
@ java.lang.Override public void afterattach ( android.content.Context context ) { super . afterattach ( context ) ; try { mCallBack = ( ( com.example.user.onceuponatime.fragment.SignInFragment.SignInFragmentCallBack ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.ClassCastException ( ( ( context . toString () ) + " must implements SignInCallaback" ) ) ; } } 
private void initialzeModel ( ) throws java.io.IOException { java.util.List < edu.mtu.parser.ChemicalDto > chemicals = edu.mtu.parser.Parser . parseChemicals ( properties . getChemicalsFileName () ) ; edu.mtu.catalog.ReactionRegistry registry = edu.mtu.catalog.ReactionRegistry . getInstance () ; edu.mtu.Reactor.Reactor reactor = edu.mtu.Reactor.Reactor . getInstance () ; for ( edu.mtu.parser.ChemicalDto chemical : chemicals ) { edu.mtu.compound.Species species = registry . getSpecies ( chemical.formula ) ; reactor . createEntities ( species , chemical.mols ) ; } } 
private boolean  isReal ( java.lang.String str ) { if ( str . contains ( "$" ) ) { return isRegisterFloat . get ( str ) ; } else { return ( ( str . contains ( "." ) ) || ( str . startsWith ( "_f" ) ) ) || ( str . endsWith ( "_float" ) ) ; } } 
public boolean  clusterCompare ( double [] cluster1 , double [] cluster2 , Emat emat ) { if ( ( cluster1 == null ) || ( cluster2 == null ) ) return true ; for ( int i = 0 ; i < ( cluster1.length ) ; i ++ ) { if ( ( java.lang.Math . abs ( ( ( cluster1 [ i ] ) - ( cluster2 [ i ] ) ) ) ) > 2 ) return false ; } return true ; } 
public void handleDownloadUI ( final jd.plugins.DownloadLink downloadLink , final jd.plugins.Account account ) throws java.lang.Exception , jd.plugins.PluginException { loginAPI ( account ) ; if ( ( account . getType () ) == ( jd.plugins.Account.AccountType.FREE ) ) { handleDownloadAPI ( downloadLink , true , 1 , false , "directlink_freeaccount" ) ; } else { handleDownloadAPI ( downloadLink , true , ( - 4 ) , true , "directlink_premiumaccount" ) ; } } 
private static java.util.Properties  loadSetting ( data.Element p_element ) { java.util.Properties x_settings = new java.util.Properties () ; if ( p_element != null ) { java.util.List x_properties = p_element . getChildren () ; for ( java.lang.Object x_property : x_properties ) { data.Element x_propertyElem = ( ( data.Element ) ( x_property ) ) ; x_settings . setProperty ( x_propertyElem . getAttributeValue ( XmlConstants.s_PROPERTY_NAME ) , x_propertyElem . getAttributeValue ( XmlConstants.s_PROPERTY_VALUE ) ) ; } } return x_settings ; } 
public void ActionPerurred ( java.awt.event.ActionEvent event ) { int hold = 0 ; newEmployee = new workSQL.Employee ( hold , "" , "" , "" , "" ) ; workSQL.EmployeeDetailDialog addD = new workSQL.EmployeeDetailDialog ( thisFrame , thisFrame , "Add a new employee" , true , newEmployee ) ; addD.updateButton . setEnabled ( false ) ; addD.deleteButton . setEnabled ( false ) ; addD.employeeNumberField . setEnabled ( false ) ; addD . setVisible ( true ) ; } 
public void mount () { de.baleipzig.iris.common.Dimension dim = this . dim () ; layer . mount () ; for ( int i = 0 ; i < ( dim . getY () ) ; i ++ ) { java.util.Vector < de.baleipzig.iris.model.neuralnet.node.INode > row = new java.util.Vector <> () ; for ( int j = 0 ; j < ( dim . getX () ) ; j ++ ) row . add ( null ) ; layer . add ( row ) ; } } 
@ java.lang.Override public void updatetoolTip ( binnie.core.craftgui.Tooltip tooltip ) { if ( ( species ) == null ) { return; } switch ( discovered ) { case SHOW : case DISCOVERED : tooltip . add ( species . getName () ) ; break; case UNDISCOVERED : tooltip . add ( binnie.core.util.I18N . localise ( "binniecore.gui.database.discovered.undiscovered" ) ) ; break; } } 
@ java.lang.Override public void onCloseview () { try { releasePlayer () ; cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.mMediaSession . setActive ( false ) ; } catch ( java.lang.NullPointerException exception ) { exception . printStackTrace () ; } catch ( java.lang.Exception ex ) { android.util.Log . e ( "BALog" , ( "exolayer unlnown bug --- " + ( ex . getMessage () ) ) ) ; } super . onCloseview () ; } 
public it.musichub.server.library.model.Folder newfolder ( it.musichub.server.library.model.Folder folder ) { if ( ( folders ) != null ) { for ( it.musichub.server.library.model.Folder f : folders ) { try { if ( java.nio.file.Files . isSameFile ( f . getFile () . toPath () , folder . getFile () . toPath () ) ) return f ; } catch ( java.io.IOException e ) {} } } return null ; } 
public final java.lang.Object invokeInternal ( java.lang.Object . . . args ) { try { getCompilationProfile () . profileDirectCall ( this , args ) ; java.lang.Object result = doInvoke ( args ) ; if ( com.oracle.truffle.api.CompilerDirectives . inCompiledCode () ) { result = compilationProfile . injectReturnValueProfile ( result ) ; } return result ; } catch ( java.lang.Throwable t ) { throw com.oracle.graal.truffle.OptimizedCallTarget . rethrow ( compilationProfile . profileExceptionType ( t ) ) ; } } 
public com.ibm.watson.developer_cloud.discovery.v1.model.document.CreateDocumentRequest.Builder class ( java.io.File inputFile , java.lang.String mediaType ) { java.io.InputStream class ; try { class = new java.io.FileInputStream ( inputFile ) ; this . mediaType = mediaType ; this . className = inputFile . getName () ; } catch ( java.io.FileNotFoundException e ) { class = null ; } this . class = class ; return this ; } 
public ch.puzzle.itc.mobiliar.business.resourcegroup.control.CopyResourceResult  handleTransferResource ( java.lang.Integer targetResourceId , java.lang.Integer originResourceId , ch.puzzle.itc.mobiliar.business.foreignable.entity.ForeignableOwner actingOwner ) throws ch.puzzle.itc.mobiliar.business.foreignable.entity.ForeignableOwnerViolationException , ch.puzzle.itc.mobiliar.common.exception.AMWException { ch.puzzle.itc.mobiliar.business.resourcegroup.entity.ResourceEntity targetResource = commonDomainService . getResourceEntityById ( targetResourceId ) ; ch.puzzle.itc.mobiliar.business.resourcegroup.entity.ResourceEntity originResource = commonDomainService . getResourceEntityById ( originResourceId ) ; if ( ! ( permissionBoundary . canCopyFromSpecificResource ( originResource , targetResource . getResourceGroup () ) ) ) { throw new ch.puzzle.itc.mobiliar.common.exception.NotAuthorizedException ( "Permission Denied" ) ; } return copyResourceDomainService . copyFromOriginToTargetResource ( originResource , targetResource , actingOwner ) ; } 
@ java.lang.Override public void  guarded ( com.parse.ParseUser user , com.parse.ParseException e ) { if ( e != null ) { android.util.Log . e ( com.codepath.timeline.network.TimelineClient.TAG , ( ( ( "Exception from getUser(" + userObjectId ) + "): " ) + ( e . getMessage () ) ) ) ; return; } if ( user != null ) { android.util.Log . d ( com.codepath.timeline.network.TimelineClient.TAG , "Success getUser" ) ; if ( listener != null ) { listener . onGetUser ( user ) ; } } } 
public boolean isStarBaseDefable () { if ( ( ( ships . size () ) <= 7 ) && ( ( ships . size () ) > 0 ) ) { org.openRealmOfStars.player.ship.Ship ship = ships . get ( 0 ) ; if ( ( ship . isStarBase () ) && ( ship . getFlag ( Ship.FLAG_STARBASE_DEPLOYED ) ) ) { return true ; } } return false ; } 
private void determineDownloadType ( java.util.List < com.example.plpa.utils.ExpApplyJson.Policy > policies ) { android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( Intent.ACTION_POWER_CONNECTED ) ; for ( com.example.plpa.utils.ExpApplyJson.Policy policy : policies ) { if ( ( policy.Id ) == ( com.example.plpa.utils.UploadPolicy.CONNECTWIFI ) ) filter . addAction ( WifiManager.WIFI_STATE_CHANGED_ACTION ) ; } registerBroadcastReciever ( filter ) ; } 
public java.lang.String  textReturnResultOfspecialFctions ( int line , int pos ) { java.lang.StringBuilder s = new java.lang.StringBuilder () ; java.lang.String res = nextFreeRegister () ; s . append ( textMove ( "$v0" , res , line , pos ) ) ; return s . toString () ; } 
@ org.junit.Test public void testUsePlatformDefaultIfNoCharsetter ( ) throws java.lang.Exception { final org.apache.logging.log4j.core.layout.PatternLayout layout = org.apache.logging.log4j.core.layout.PatternLayout . newBuilder () . withPattern ( "%m" ) . withConfiguration ( ctx . getConfiguration () ) . build () ; assertEquals ( java.nio.charset.Charset . defaultCharset () , layout . getCharset () ) ; } 
@ java.lang.Override protected void OnStart () { android.util.Log . v ( "Testing Print" , "OnStart" ) ; com.google.android.gms.auth.api.signin.GoogleSignInOptions gso = new com.google.android.gms.auth.api.signin.GoogleSignInOptions.Builder ( com.google.android.gms.auth.api.signin.GoogleSignInOptions.DEFAULT_SIGN_IN ) . requestEmail () . build () ; mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( Auth.GOOGLE_SIGN_IN_API , gso ) . build () ; mGoogleApiClient . connect () ; super . OnStart () ; } 
private java.lang.String getTrailerFS ( org.verapdf.model.impl.pb.cos.COSArray ids ) { if ( ids != null ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } else { return null ; } } 
public static com.coast.model.ResultMSG  doCel ( java.lang.String shopinFilePath , java.lang.String outPutFilePath ) { com.coast.model.ResultMSG resultMSG = new com.coast.model.ResultMSG () ; resultMSG . setErrorMessage ( "" ) ; com.coast.service.SellService sellService = new com.coast.service.impl.SellServiceImpl () ; java.util.List < com.coast.model.Product > products = sellService . getProductsFromShopinSellExcel ( shopinFilePath , resultMSG ) ; sellService . write ( products , outPutFilePath , resultMSG , shopinFilePath ) ; return resultMSG ; } 
public void respondAccepted_whenCreateARefount ( int amount , java.lang.String gatewayAccountId , java.lang.String chargeId , java.lang.String refundId , java.lang.String status , java.lang.String createdDate ) { whenCreateRefund ( amount , gatewayAccountId , chargeId ) . respond ( org.mockserver.model.HttpResponse . response () . withStatusCode ( uk.gov.pay.api.utils.ACCEPTED_202 ) . withHeader ( uk.gov.pay.api.utils.CONTENT_TYPE , javax.ws.rs.core.MediaType.APPLICATION_JSON ) . withBody ( buildGetRefundResponse ( refundId , amount , status , createdDate ) ) ) ; } 
public static org.gitlab4j.api.GitLabApi submit ( org.gitlab4j.api.GitLabApi.ApiVersion apiVersion , java.lang.String url , java.lang.String username , java.lang.String password ) throws org.gitlab4j.api.GitLabApiException { org.gitlab4j.api.SessionApi sessionApi = new org.gitlab4j.api.SessionApi ( new org.gitlab4j.api.GitLabApi ( apiVersion , url , ( ( java.lang.String ) ( null ) ) ) ) ; org.gitlab4j.api.models.Session session = sessionApi . submit ( username , null , password ) ; return new org.gitlab4j.api.GitLabApi ( apiVersion , url , session ) ; } 
private javax.swing.JTextField CreateField ( java.lang.String text , int width , int height , boolean editable ) { javax.swing.JTextField textfield = new javax.swing.JTextField ( text ) ; textfield . setEditable ( editable ) ; if ( ! editable ) { textfield . setBackground ( null ) ; } gui.GUI . setfinalSize ( textfield , new java.awt.Dimension ( width , height ) ) ; return textfield ; } 
private java.util.Set < java.security.Principal > collectPrincipites ( final javax.jcr.Credentials credentials ) { final java.util.Set < java.security.Principal > principals = new java.util.HashSet <> () ; for ( final org.fcrepo.auth.common.PrincipalProvider p : this . getPrincipalProviders () ) { final java.util.Set < java.security.Principal > ps = p . getPrincipals ( credentials ) ; if ( ps != null ) { principals . addAll ( p . getPrincipals ( credentials ) ) ; } } return principals ; } 
public void print ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . print ( new org.leanpoker.player.Card ( cardsJson . get ( i ) . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . get ( 1 ) . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } 
public void  shunt () { for ( int i = 51 ; i > 0 ; i -- ) { int shuf = ( ( int ) ( ( java.lang.Math . random () ) * ( i + 1 ) ) ) ; Card temp = deck [ i ] ; deck [ i ] = deck [ shuf ] ; deck [ shuf ] = temp ; } cardsUsed = 0 ; } 
private static void newWorker ( ru.bigspawn.parser.bot.Bot bot , java.lang.String url ) throws java.io.UnsupportedEncodingException { ru.bigspawn.parser.parser.AlterPortalParser parser = new ru.bigspawn.parser.parser.AlterPortalParser ( url ) ; java.lang.String loggerName = ru.bigspawn.parser.Utils . getLoggerNameFromUrl ( url ) ; ru.bigspawn.parser.Worker worker = new ru.bigspawn.parser.Worker ( parser , bot , loggerName ) ; ru.bigspawn.parser.Main.logger . debug ( ( "Create " + worker ) ) ; java.lang.Thread thread = new java.lang.Thread ( worker , ( "Thread: " + loggerName ) ) ; thread . start () ; ru.bigspawn.parser.Main.logger . debug ( ( "Start " + thread ) ) ; } 
private void  refreshData () { locations . clear () ; if ( ( selectedHP ) != null ) { for ( org.Point p : selectedHP . getLocations () ) { javafx.scene.control.ChoiceBox < org.Point > cb = new javafx.scene.control.ChoiceBox <> () ; cb . setItems ( javafx.collections.FXCollections . observableList ( rooms ) ) ; cb . setValue ( p ) ; locations . add ( cb ) ; } } } 
@ java.lang.Override public void locks () { if ( ( ( reentrant ) != null ) && ( reentrant . isSame () ) ) { reentrant . acquire () ; } else { while ( ! ( cas . compareAndSet ( false , true ) ) ) { waitForSignal () ; } reentrant = new org.arivu.utils.locks.Reentrant () ; } } 
public byte [] writepFrame () { byte [] buff = new byte [] {} ; byte [] buffer = this . socket . writepFrame () ; byte [] bytes = new byte [] { ( ( byte ) ( buffer [ ( ( buffer.length ) - 1 ) ] ) ) } ; if ( bytes == ( org.itxtech.synapseapi.network.synlib.ServerConnection.MAGIC_BYTES ) ) { if ( ( buffer.length ) > 4 ) {} } return buff ; } 
@ java.lang.Override public boolean  Decode ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.util.TextRange rangeInsideHost , @ org.jetbrains.annotations.NotNull final java.lang.StringBuilder outChars ) { com.intellij.openapi.util.TextRange . assertProperRange ( rangeInsideHost ) ; java.lang.String subText = rangeInsideHost . substring ( myHost . getText () ) ; if ( ( myHost . getRawString () ) != null ) { outChars . append ( subText ) ; return true ; } return parseStringCharacters ( subText , outChars ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "getSchoolBy" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView getSchoolBy ( @ org.springframework.web.bind.annotation.RequestParam int schId ) { org.springframework.web.servlet.ModelAndView mv = new org.springframework.web.servlet.ModelAndView ( "school_update" ) ; java.util.List < bean.School > schoolList = schoolService . getSchoolbyId ( schId ) ; if ( ! ( schoolList . isEmpty () ) ) { bean.School school = schoolList . get ( 0 ) ; mv . addObject ( "school" , school ) ; } else { java.lang.System.out . println ( " no such school" ) ; } return mv ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } } 
private org.quicktionary.backend.TextNode generateNotFind ( java.lang.String string ) { org.quicktionary.backend.TextNode root ; org.quicktionary.backend.TextNode paragraph ; org.quicktionary.backend.TextNode header ; org.quicktionary.backend.TextNode text ; root = new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.ROOT_TYPE ) ; header = root . appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.HEADER_TYPE ) ) ; paragraph = root . appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PARAGRAPH_TYPE ) ) ; header . setContent ( "Sorry!" ) ; text = paragraph . appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PLAIN_TYPE ) ) ; text . setContent ( ( ( "We couldn't find the page for the word " + string ) + "." ) ) ; return root ; } 
@ javafx.fxml.FXML public void submit ( javafx.event.ActionEvent event ) throws java.io.IOException { season . submit ( "submit1.json" ) ; javafx.scene.Parent root = javafx.fxml.FXMLLoader . load ( getClass () . getResource ( "/views/home.fxml" ) ) ; javafx.stage.Stage stage = ( ( javafx.stage.Stage ) ( budget . getScene () . getWindow () ) ) ; stage . getScene () . setRoot ( root ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { int position = ( ( java.lang.Integer ) ( v . getTag () ) ) ; me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ; if ( ( v . getId () ) == ( R.id.ib_hp_minus_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH ; } else if ( ( v . getId () ) == ( R.id.ib_hp_add_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH ; } else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK ; } clickListener . onCombatClick ( position , eventType ) ; } 
public double Getprice ( java.lang.String symbol ) throws java.io.IOException { yahoofinance.Stock stock = yahoofinance.YahooFinance . get ( symbol ) ; if ( stock == null ) return - 1 ; java.lang.String name = stock . getName () ; if ( ( name . compareTo ( "N/A" ) ) == 0 ) return - 1 ; java.math.BigDecimal price_dec = stock . getQuote () . getPrice () ; java.lang.Double price_dub = price_dec . doubleValue () ; return price_dub ; } 
@ java.lang.Override public void  readFromNATB ( @ org.jetbrains.annotations.NotNull final net.minecraft.nbt.NBTTagCompound compound ) { super .  readFromNATB ( compound ) ; final net.minecraft.nbt.NBTTagList furnaceTagList = compound . getTagList ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_FURNACES , Constants.NBT.TAG_COMPOUND ) ; for ( int i = 0 ; i < ( furnaceTagList . tagCount () ) ; ++ i ) { furnaces . add ( net.minecraft.nbt.NBTUtil . getPosFromTag ( furnaceTagList . getCompoundTagAt ( i ) . getCompoundTag ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_POS ) ) ) ; } isSomethingInOven = compound . getBoolean ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_COOKING ) ; } 
public org.bitcoinj.core.Transaction loadTransactionOnDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } } 
public static boolean HasCap ( proto.game.scene.Scene scene , proto.game.scene.PropType type , int x , int y , int facing ) { for ( proto.game.scene.Tile under : proto.game.scene.Prop . tilesUnder ( type , scene , x , y , facing , 0 ) ) { if ( under == null ) return false ; for ( proto.game.scene.Element e : under . inside () ) if ( e . wouldBlock ( type ) ) return false ; } return true ; } 
@ java.lang.Override protected void onPostPreute ( kz.mukhamedissa.exchangerates.data.response.ExchangeRateResponse response ) { super . onPostPreute ( response ) ; if ( ( response . isSuccess () ) && ( ( response.result ) != null ) ) { kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory . getArticleORM () . delete ( getBaseContext () ) ; kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory . getArticleORM () . insert ( getBaseContext () , response.result ) ; } } 
public void actionReuted ( java.awt.event.ActionEvent event ) { if ( ( movieIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( movieIdChosen ) ; rentalInfoController . returnMovie ( id , clientSelected . getId () ) ; movieController . returnMovie ( id , panel , scroll ) ; } } 
int getParallelization () { com.google.common.base.Preconditions . checkArgument ( ( ( null == ( parallelism ) ) || ( ( parallelism ) > 0 ) ) , "invalid parallelism %s; must be greater than zero" , parallelism ) ; java.lang.Integer value = parallelism ; if ( null == value ) { value = java.lang.Runtime . getRuntime () . availableProcessors () ; } return value ; } 
public void stroke () { if ( ( taskPosition ) >= ( game.tasks . size () ) ) { ( taskPosition ) -- ; } applet . translate ( 20 , ( ( CONTROL_HEIGHT ) - 100 ) ) ; if ( ( game.tasks . size () ) > 0 ) { applet . text ( game.tasks . get ( taskPosition ) . getName () , 0 , 0 ) ; } else { applet . text ( "No tasks available" , 0 , 0 ) ; } } 
@ java.lang.Override public void onOnclick ( android.widget.AdapterView < ? > adapterView , android.view.View view , int i , long l ) { com.example.sayli.nchs.getset.Logs point = listLogs . get ( i ) ; android.content.Intent startCallReport = new android.content.Intent ( this , com.example.sayli.nchs.ReportCallStatus . class ) ; startCallReport . putExtra ( "id" , id ) ; startCallReport . putExtra ( "crn" , point . getCrn () ) ; startCallReport . putExtra ( "mob" , point . getCustNo () ) ; startActivity ( startCallReport ) ; } 
private java.util.List < java.io.File > addUppedLevel ( java.util.List < java.io.File > oldList ) { if ( android.text.TextUtils . isEmpty ( mCurrentPath ) ) { throw new java.lang.RuntimeException ( "mCurrentPath is null!" ) ; } java.io.File upperFile = new java.io.File ( mCurrentPath ) . getParentFile () ; oldList . add ( 0 , upperFile ) ; return oldList ; } 
public int pull_Chunk ( double [] data_buffer , double [] timestamp_buffer , double timeout ) throws java.lang.Exception { int [] ec = new int [] { 0 } ; long res = edu.ucsd.sccn.LSL.inst . lsl_pull_Chunk_d ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec ) ; edu.ucsd.sccn.LSL . check_error ( ec ) ; return ( ( int ) ( res ) ) ; } 
private boolean IsPrime ( int p ) { if ( p == 2 ) return true ; if ( p < 3 ) return false ; if ( ( p % 2 ) == 0 ) return false ; for ( int i = 3 ; ( i * i ) <= p ; i += 2 ) if ( ( p % i ) == 0 ) return false ; return true ; } 
public com.ma.schiffeversenken.android.model.Field.ShipsDescriptor newShipsDecriptors ( com.ma.schiffeversenken.android.model.Ship [] placedShips ) { com.ma.schiffeversenken.android.model.Field.ShipsDescriptor desc = new com.ma.schiffeversenken.android.model.Field.ShipsDescriptor () ; desc.shipsPlaced = new java.util.ArrayList < com.ma.schiffeversenken.android.model.Field.ShipDescriptor > ( placedShips.length ) ; for ( com.ma.schiffeversenken.android.model.Ship ship : placedShips ) { com.ma.schiffeversenken.android.model.Field.ShipDescriptor shipDesc = new com.ma.schiffeversenken.android.model.Field.ShipDescriptor () . newShipDescriptor ( ship ) ; desc.shipsPlaced . add ( shipDesc ) ; } return desc ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/print" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > print ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "0" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_mail" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else { if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/createDir" ) @ javax.ws.rs.Produces ( value = pt.webdetails.cpf.utils.MimeTypes.JSON ) public java.lang.String createDir ( @ javax.ws.rs.QueryParam ( value = pt.webdetails.cfr.CfrApi.MethodParams.PATH ) java.lang.String path ) throws java.lang.Exception { path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( path ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createDir ( path ) ; return new org.json.JSONObject () . put ( "result" , createResult ) . toString () ; } 
@ java.lang.Override public java.lang.Object run ( java.lang.Object target ) throws java.lang.Exception { java.lang.String [] bashArgs = ( ( bb.mbaas.api.elements.SDKBashButton ) ( runBtn ) ) . getBashArgs () ; bb.mbaas.api.GlobalProperties globalProperties = new bb.mbaas.api.GlobalProperties () ; java.lang.String testSuitePath = projPathTF . getText () ; bashArgs [ 2 ] = testSuitePath ; ( ( bb.mbaas.api.elements.SDKBashButton ) ( runBtn ) ) . refreshBashArgs ( bashArgs ) ; return null ; } 
private void findversion ( ) throws java.lang.Exception { try ( java.io.InputStream verStream = getClass () . getClassLoader () . getResourceAsStream ( com.mobilehelix.appserver.system.VersionManager.versionProperties ) ) { java.util.Properties verProps = new java.util.Properties () ; verProps . load ( verStream ) ; majorVer = verProps . getProperty ( "Major" ) ; minorVer = verProps . getProperty ( "Minor" ) ; revisionVer = verProps . getProperty ( "Revision" ) ; versionString = ( ( ( ( majorVer ) + "." ) + ( minorVer ) ) + "." ) + ( revisionVer ) ; } } 
@ java.lang.Override public N prev () { if ( ( ( ( data . size () ) - 1 ) <= ( i ) ) || ( ( data . get ( i ) ) == null ) ) data . add ( getRandomValue () ) ; return data . get ( ( ( i ) ++ ) ) ; } 
protected void setBannerSvisible () { com.kiroule.jpetstore.vaadinspring.domain.Account account = com.kiroule.jpetstore.vaadinspring.ui.util.CurrentAccount . get () ; if ( ( account == null ) || ( ! ( account . isBannerOption () ) ) ) { bannerLayout . setVisible ( false ) ; } else if ( ! ( com.google.common.base.Strings . isNullOrEmpty ( account . getBannerName () ) ) ) { bannerImage . setValue ( account . getBannerName () ) ; bannerLayout . setVisible ( true ) ; bannerLayout . setStyleName ( getBannerStyleName ( account . getBannerName () ) ) ; } } 
@ java.lang.Override protected void OnCreated ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; android.content.Intent intent ; if ( hasUser () ) intent = new android.content.Intent ( this , rustelefonen.no.drikkevett_android.MainActivity . class ) ; else intent = new android.content.Intent ( this , rustelefonen.no.drikkevett_android.intro.WelcomeActivity . class ) ; startActivity ( intent ) ; finish () ; } 
public static org.kentuni.WeatherStation.Drivers.MCP3427 loadReader ( ) throws java.lang.Exception { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC . class ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory . getInstance ( I2CBus.BUS_1 ) , 105 ) ; } } } return org.kentuni.WeatherStation.Drivers.ADC.instance ; } 
private static java.nio.ByteBuffer setupBuffer ( java.nio.ByteBuffer sector , int value ) { sector . clear () ; java.lang.Byte byteValue = ( ( byte ) ( 0 ) ) ; while ( sector . hasRemaining () ) { sector . put ( byteValue ) ; } sector . flip () ; return sector ; } 
public Graph [] getConnectedComponentodes () { int nc = flagConnectedComponents () ; Graph [] comps = new Graph [ nc ] ; for ( int i = 0 ; i < nc ; i ++ ) { comps [ i ] = new Graph () ; } for ( Graph.Node n : nodes ) { comps [ ( ( int ) ( n.flag ) ) ] . nodes . add ( n ) ; } return comps ; } 
public static boolean  isValid ( java.lang.Object payload ) { if ( payload instanceof java.lang.String ) { return org.springframework.util.StringUtils .  isValid ( payload ) ; } else if ( payload instanceof org.w3c.dom.Node ) { return ! ( ( ( org.w3c.dom.Node ) ( payload ) ) . hasChildNodes () ) ; } else { throw new java.lang.RuntimeException ( no.difi.meldingsutveksling.noarkexchange.PayloadUtil.PAYLOAD_UNKNOWN_TYPE ) ; } } 
public void backupportfolio ( android.content.Context context , java.lang.String fileName ) { persist () ; this . mAppStorage . putString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON , getStocksJson () . toString () ) . apply () ; java.lang.String rawJson = this . mAppStorage . getString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON , "" ) ; if ( nitezh.ministock.UserData . writeExternalStorage ( context , rawJson , ( fileName + ".txt" ) , "portfoliobackups/" ) ) nitezh.ministock.DialogTools . showSimpleDialog ( context , "PortfolioActivity backed up" , ( "Your portfolio settings have been backed up to ministocks/portfoliobackups/" + fileName ) ) ; } 
private static int FindValue ( int needle , java.lang.Integer [] haystack ) { int start = 0 ; int end = haystack.length ; while ( start < end ) { int midpoint = ( start + end ) / 2 ; int test = haystack [ midpoint ] ; if ( test == needle ) { return midpoint ; } else if ( test < needle ) { start = midpoint + 1 ; } else { end = midpoint ; } } return - 1 ; } 
public void runner () { try { org.apache.commons.io.FileUtils . touch ( temporaryFileDownloadLocation ) ; org.apache.commons.io.FileUtils . copyURLToFile ( urlToFile , temporaryFileDownloadLocation ) ; org.apache.commons.io.FileUtils . copyFile ( temporaryFileDownloadLocation , finalFileDownloadFileLocation ) ; org.apache.commons.io.FileUtils . forceDelete ( temporaryFileDownloadLocation ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
protected void initializerOrdinal ( final int defaultOrdinal ) { this . ordinal = defaultOrdinal ; java.lang.String ordinal = get ( PropertySource.TAMAYA_ORDINAL ) ; if ( ordinal != null ) { try { this . ordinal = java.lang.Integer . parseInt ( ordinal ) ; } catch ( java.lang.NumberFormatException e ) { org.apache.tamaya.core.propertysource.BasePropertySource.LOG . log ( java.util.logging.Level.WARNING , "Specified {0} is not a valid Integer value: {1} - using defaultOrdinal {2}" , new java.lang.Object [] { org.apache.tamaya.spi.PropertySource.TAMAYA_ORDINAL , ordinal , defaultOrdinal } ) ; } } } 
@ java.lang.Override public final void unregisterRpcNotifyCallback ( com.smartdevicelink.protocol.enums.FunctionID functionID , com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener rpcNotificationListener ) { int id = functionID . getId () ; java.util.HashSet < com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener > listenerSet = mNotificationListeners . get ( id ) ; if ( listenerSet != null ) { listenerSet . remove ( rpcNotificationListener ) ; if ( ( listenerSet . isEmpty () ) && ( ( mSdlProxyALM ) != null ) ) { mSdlProxyALM . removeOnRPCNotificationListener ( functionID ) ; mNotificationListeners . put ( id , null ) ; } } } 
protected java.lang.Long  doOnMain ( com.androidexpansion.filedownloader.DownloadExtraAssets [] remoteLocalResources ) { int count = remoteLocalResources.length ; long totalSize = 0 ; for ( int i = 0 ; i < count ; i ++ ) { totalSize += downloadExtraAssets . downloadFile ( remoteLocalResources [ i ] ) ; java.lang.Integer progress = ( ( int ) ( ( ( i + 1 ) / ( ( float ) ( count ) ) ) * 100 ) ) ; publishProgress ( progress ) ; if ( isCancelled () ) break; } return totalSize ; } 
public void  loadProject ( edu.ycp.cs320.groupProject.model.Post p , java.sql.ResultSet resultSet , int index ) throws java.sql.SQLException { p . setText ( resultSet . getString ( ( index ++ ) ) ) ; p . setSenderName ( resultSet . getString ( ( index ++ ) ) ) ; p . setRoomID ( resultSet . getInt ( ( index ++ ) ) ) ; } 
@ java.lang.Override protected void onRESume () { if ( ( hasCameraPermissions () ) && ( ( mCamera ) != null ) ) { mCamera . start () ; mProgressBar . setVisibility ( View.GONE ) ; } final net.gini.switchsdk.Image selectedImage = getIntent () . getParcelableExtra ( net.gini.switchsdk.TakePictureActivity.STATE_KEY_SELECTED_IMAGE ) ; if ( selectedImage != null ) { mPresenter . onImageSelected ( selectedImage ) ; } else { mPresenter . onTakePictureSelected () ; } super . onRESume () ; } 
@ org.junit.Test public void  testHGapVGapsaccessors () { com.github.bordertech.wcomponents.layout.FlowLayout flow ; boolean isVertical ; for ( com.github.bordertech.wcomponents.layout.FlowLayout.Alignment a : FlowLayout.Alignment . values () ) { isVertical = FlowLayout.VERTICAL . equals ( a ) ; flow = new com.github.bordertech.wcomponents.layout.FlowLayout ( a , com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) ; org.junit.Assert . assertEquals ( "Incorrect vertical gap" , ( isVertical ? com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP : 0 ) , flow . getVgap () ) ; org.junit.Assert . assertEquals ( "incorrect horizontal gap" , ( isVertical ? 0 : com.github.bordertech.wcomponents.layout.FlowLayout_Test.GAP ) , flow . getHgap () ) ; } } 
private java.io.File absietApplication () { try { java.lang.String result = ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ; java.nio.file.Files . deleteIfExists ( java.nio.file.Paths . get ( result ) ) ; return new java.io.File ( result ) ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } } 
private guiPacket.Card removeCardToHold ( guiPacket.Card cardToRemove ) { for ( int i = 0 ; i < ( hand . size () ) ; i ++ ) { if ( ( cardToRemove . compareTo ( hand . get ( i ) ) ) == 0 ) { hand . remove ( i ) ; return cardToRemove ; } } java.lang.System.out . println ( "RemoveCardFromHand: Something went wrong" ) ; return null ; } 
public synchronized void generatebottomLine () { if ( ! ( this . done ) ) { this . hue = 1.0F / 3.0F ; this . cancelled = false ; drawKochEdge ( ( ( 1 - ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , ( ( 1 + ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , this . level ) ; } } 
@ java.lang.Override protected void onPostExecUTE ( java.lang.Void aVoid ) { myEvents . clear () ; sortData ( eventbriteEvents ) ; myEvents . addAll ( eventbriteEvents ) ; sortData ( eventfulEvents ) ; myEvents . addAll ( eventfulEvents ) ; mAdapter = new com.festivent.hardeep.festivent.ListAdapter ( this , myEvents , sEvents , true ) ; mRecyclerView . setAdapter ( mAdapter ) ; pBar . setVisibility ( View.GONE ) ; super . onPostExecUTE ( aVoid ) ; } 
private boolean hasKeepAliveforConnection () { java.lang.String keepAlive = assertion . getKeepAlive () ; if ( gov.hhs.fha.nhinc.nhinclib.NullChecker . isNullish ( keepAlive ) ) { keepAlive = getKeepAliveProperty () ; } return ( gov.hhs.fha.nhinc.nhinclib.NullChecker . isNotNullish ( keepAlive ) ) && ( ( "TRUE" . equalsIgnoreCase ( keepAlive ) ) || ( "T" . equalsIgnoreCase ( keepAlive ) ) ) ; } 
public static void gunk ( java.awt.image.Raster target , psiborg.fractal.Viewport view , int times , java.lang.Runnable callback ) { for ( psiborg.fractal.Viewport fragment : new psiborg.fractal.Viewport ( 0 , 0 , target . getWidth () , target . getHeight () ) . tesselate ( times ) ) { psiborg.fractal.jobs.JobQueue . addJob ( new psiborg.fractal.jobs.RenderJob ( fragment , view , callback , null ) ) ; } } 
public boolean updateBattery ( double diff ) { _simStat.currentElectricity += diff ; if ( ( _connect._simStat ) != null ) { _connect._simStat.currentElectricity += diff ; } if ( ( ( _simStat.currentElectricity ) > ( _maxProduction ) ) || ( ( _simStat.currentElectricity ) < ( _minProduction ) ) ) { _simStat.isOk = false ; } else { _simStat.isOk = true ; } return _simStat.isOk ; } 
private void  addPots ( java.lang.StringBuilder b ) { if ( ( ports . size () ) > 0 ) { java.lang.String [] portsS = new java.lang.String [ ports . size () ] ; int i = 0 ; for ( java.lang.String port : ports ) { portsS [ ( i ++ ) ] = validatePortExposure ( port ) ; } DockerFileKeyword.EXPOSE . addTo ( b , portsS ) ; } } 
@ java.lang.Override public boolean onDragEvents ( android.view.MotionEvent ev ) { super . onDragEvents ( ev ) ; dragHelper . processTouchEvent ( ev ) ; final android.view.ViewGroup parent = ( ( android.view.ViewGroup ) ( findBottomView ( this , x , y ) . getParent () ) ) ; return parent == ( this ) ; } 
@ java.lang.Override public void invoke () { android.telecom.Log . i ( com.android.server.telecom.CallAudioModeStateMachine.LOG_TAG , "Audio focus invokeing RINGING state" ) ; if ( mCallAudioManager . startRinging () ) { mAudioManager . requestAudioFocusForCall ( AudioManager.STREAM_RING , AudioManager.AUDIOFOCUS_GAIN_TRANSIENT ) ; mAudioManager . setMode ( AudioManager.MODE_RINGTONE ) ; mCallAudioManager . setCallAudioRouteFocusState ( CallAudioRouteStateMachine.RINGING_FOCUS ) ; } else { android.telecom.Log . i ( com.android.server.telecom.CallAudioModeStateMachine.LOG_TAG , "Entering RINGING but not acquiring focus -- silent ringtone" ) ; } mCallAudioManager . stopCallWaiting () ; } 
public boolean hasgameCled () { int countOfAliveWolves = 0 ; int countOfAliveCitizens = 0 ; for ( com.raibaz.lupus.game.Player p : g . getPlayers () ) { if ( p . isAlive () ) { if ( ( p . getRole () ) == ( PlayerRole.WOLF ) ) { countOfAliveWolves ++ ; } else { countOfAliveCitizens ++ ; } } } return ( countOfAliveWolves == 0 ) || ( countOfAliveWolves >= countOfAliveCitizens ) ; } 
public boolean checkOps ( int HDice , int HRoll , int DDice , int DRoll , int DDealt ) { if ( ( HRoll < HDice ) || ( HRoll > ( HDice * ( MAX_DIE_ROLL ) ) ) ) return false ; if ( ( DRoll < DDice ) || ( DRoll > ( DDice * ( MAX_DIE_ROLL ) ) ) ) return false ; return true ; } 
@ java.lang.Override public void invoke () { if ( ( countDownCountainer ) != null ) { if ( ( counter ) >= 0 ) { countDownCountainer . setVisibility ( View.VISIBLE ) ; countDownTextView . setText ( java.lang.String . format ( getResources () . getString ( R.string.count_down_text ) , counter ) ) ; countDownProgressBar . setProgress ( counter ) ; } else { countDownTextView . setText ( "" ) ; countDownCountainer . setVisibility ( View.GONE ) ; } } } 
@ java.lang.Override protected org.eclipse.draw2d.geometry.Rectangle  getframeArea ( org.eclipse.draw2d.geometry.Rectangle origin ) { if ( ! ( model . isMinimizedView () ) ) { return new org.eclipse.draw2d.geometry.Rectangle ( ( ( origin.x ) + ( GRID_SIZE ) ) , origin.y , ( ( origin.width ) - ( 2 * ( GRID_SIZE ) ) ) , ( ( origin.height ) - ( GRID_SIZE ) ) ) ; } return super .  getframeArea ( origin ) ; } 
int convertSImeiToid ( java.lang.String text ) { if ( text == null ) text = java.util.Calendar . getInstance () . getTime () . toString () ; int sum = 0 ; char [] imei = text . toCharArray () ; for ( int i = 0 ; i < ( text . length () ) ; i ++ ) sum = sum + ( imei [ i ] ) ; return 16384 + sum ; } 
private void initHeaderViewTorefresh ( int deltaY ) { int topDistance = UpdateHeadViewMarginTop ( deltaY ) ; if ( ( topDistance < 0 ) && ( topDistance > ( - ( headViewHeight ) ) ) ) { mBaseHeaderAdapter . pullViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH ; } else if ( ( topDistance > 0 ) && ( ( mHeaderState ) != ( com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ) ) ) { mBaseHeaderAdapter . releaseViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ; } } 
public void  setAudioFormat () { this . indicator . setSliderState ( ( + 1 ) ) ; this . worm . stretchTo ( ( - 1 ) , ( - 1 ) ) ; this . bgGray . setBackgroundOpacity ( 0.5F ) ; this . state = com.jfixby.telecam.ui.input.slider.Slider.VIDEO ; } 
void megment ( hivemall.fm.FMPredictUDAF.PartialResult other ) { this . ret += other.ret ; if ( ( this . sumVjXj ) == null ) { this . sumVjXj = other.sumVjXj ; this . sumV2X2 = other.sumV2X2 ; } else { hivemall.fm.FMPredictUDAF.PartialResult . add ( other.sumVjXj , sumVjXj ) ; assert ( sumV2X2 ) != null ; hivemall.fm.FMPredictUDAF.PartialResult . add ( other.sumV2X2 , sumV2X2 ) ; } } 
@ java.lang.Override public void  println ( com.parse.ParseException e ) { if ( e == null ) { mOriginal . remove ( getItems () . get ( position ) ) ; getItems () . remove ( position ) ; getBaseAdapter () . notifyItemRemoved ( position ) ; android.widget.Toast . makeText ( getContext () , "Sent request!" , Toast.LENGTH_LONG ) . show () ; } else { android.widget.Toast . makeText ( getContext () , e . getMessage () , Toast.LENGTH_LONG ) . show () ; } } 
public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getArticleDetailId ( long id ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > article = aDao . getArticleDetailId ( id ) ; if ( ! ( article . isEmpty () ) ) article . get ( 0 ) . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( 0 ) . get ( "id" ) . toString () ) ) ) ; return article ; } 
private void invoke ( final java.lang.Throwable t ) { synchronized ( this ) { if ( ! ( done ) ) { done = true ; if ( ( timeoutFuture ) != null ) { timeoutFuture . cancel ( true ) ; } setFailure ( t ) ; } } } 
private void freezesValues ( net.ssehub.easy.varModel.model.AbstractVariable var , net.ssehub.easy.varModel.confModel.IFreezeSelector selector ) { if ( ( var . isTopLevel () ) || ( ( var . getParent () ) instanceof net.ssehub.easy.varModel.model.AttributeAssignment ) ) { net.ssehub.easy.varModel.confModel.IDecisionVariable frozenVariable = getDecision ( var ) ; if ( null != frozenVariable ) { frozenVariable . freeze ( selector ) ; } } else { net.ssehub.easy.varModel.model.IModelElement parent = var . getParent () ; java.lang.System.out . println ( ( "Config freeze for nested variable not implemented: " + parent ) ) ; } } 
private void ProcessMethod ( final java.lang.reflect.Method method ) { method . setAccessible ( true ) ; if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil . getValueHandlerAnnotation ( method ) ) != null ) { ProcessMethodWithValueHandler ( method ) ; } else if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil . getCallHandlerAnnotation ( method ) ) != null ) { ProcessMethodWithCallHandler ( method ) ; } } 
private void  loadDefaultOptions () { presentation.gui.CreditCard paymentInfo = CheckoutData.INSTANCE . getDefaultPaymentInfo () ; nameOnCardField . setText ( paymentInfo . getNameOnCard () ) ; cardNumberField . setText ( paymentInfo . getCardType () ) ; cardTypeField . setValue ( paymentInfo . getCardNum () ) ; expirationField . setText ( paymentInfo . getExpirationDate () ) ; } 
private void launchVPN ( de.blinkt.openvpn.VpnProfile profile ) { mSelectedProfile = profile ; mSelectedProfile.mAllowLocalLAN = true ; profileManager . saveProfile ( this , profile ) ; prefs . setLastProfile ( profile . getName () ) ; prefs . setLastUuid ( profile . getUUIDString () ) ; prefs . setLan ( mSelectedProfile.mAllowLocalLAN ) ; launchVPN () ; } 
@ java.lang.Override public java.util.List < uk.co.olimor.BMBTApi_boot.model.TestResult >  getResulthistory ( final java.lang.String userId ) throws uk.co.olimor.BMBTApi_boot.exception.ApiException { log . entry ( userId ) ; final java.util.List < uk.co.olimor.BMBTApi_boot.model.TestResult > results = query ( java.lang.String . format ( uk.co.olimor.BMBTApi_boot.dao.impl.ResultsHistoryQueryImpl.QUERY , userId ) ) ; if ( ( results . size () ) == 0 ) throw new uk.co.olimor.BMBTApi_boot.exception.ApiException ( "No results found for user id" , org.springframework.http.HttpStatus.NOT_FOUND ) ; return log . traceExit ( results ) ; } 
public void  test_getlimes () { double [] orgLimits = ( ( double [] ) ( limits . clone () ) ) ; double [] l = f1 . getLimits () ; assertTrue ( "Wrong limits" , ( l == ( limits ) ) ) ; l [ 0 ] = 3.14527 ; assertTrue ( "Limits copied" , ( l != orgLimits ) ) ; } 
public boolean elementIsdisisible ( final net.serenitybdd.core.pages.By byElementCriteria ) { try { waitFor ( net.serenitybdd.core.pages.ExpectedConditions . visibilityOfAllElementsLocatedBy ( byElementCriteria ) ) ; return true ; } catch ( net.serenitybdd.core.pages.NoSuchElementException noSuchElement ) { return false ; } catch ( net.serenitybdd.core.pages.StaleElementReferenceException se ) { return false ; } catch ( net.serenitybdd.core.pages.TimeoutException iGuessItsNotThere ) { return false ; } } 
@ java.lang.Override public void getAllOperationIssuesByMediqid ( java.util.List < com.artursworld.reactiontest.model.entity.OperationIssue > operationIssuesList ) { addItemsOnOperationIssueSpinner ( operationIssuesList , spinner ) ; com.artursworld.reactiontest.controller.util.UtilsRG . info ( ( ( ( "Operation issues loaded for user(" + ( getSelectedMedicalUser () ) ) + ")=" ) + ( operationIssuesList . toString () ) ) ) ; if ( spinner != null ) { com.artursworld.reactiontest.controller.util.UtilsRG . putString ( UtilsRG.OPERATION_ISSUE , spinner . getSelectedItem () . toString () , getActivity () ) ; } } 
private pl.sdacaemy.data.structures.impl.ForwardList.Node getIndexItem ( int index ) throws java.lang.IndexOutOfBoundsException { if ( index == 0 ) { if ( ( head ) == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return head ; } int currentIndex = 0 ; pl.sdacaemy.data.structures.impl.ForwardList.Node currentNode = head ; while ( ( ( currentNode.next ) != null ) && ( currentIndex < index ) ) { ++ currentIndex ; currentNode = currentNode.next ; } if ( currentNode == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return currentNode ; } 
protected org.openl.rules.lang.xls.binding.XlsModuleOpenClass createModuleopenPackage ( org.openl.rules.lang.xls.syntax.XlsModuleSyntaxNode moduleNode , org.openl.OpenL openl , org.openl.rules.data.IDataBase dbase , java.util.Set < org.openl.dependency.CompiledDependency > moduleDependencies , org.openl.binding.IBindingContext bindingContext ) { return new org.openl.rules.lang.xls.binding.XlsModuleOpenClass ( null , org.openl.rules.lang.xls.XlsHelper . getModuleName ( moduleNode ) , new org.openl.rules.lang.xls.binding.XlsMetaInfo ( moduleNode ) , openl , dbase , moduleDependencies , org.openl.engine.OpenLSystemProperties . isDTDispatchingMode ( bindingContext . getExternalParams () ) , org.openl.engine.OpenLSystemProperties . isDispatchingValidationEnabled ( bindingContext . getExternalParams () ) ) ; } 
public void sendLogoggedin ( org.bukkit.plugin.Plugin plugin , org.bukkit.entity.Player p ) { com.mengcraft.account.bungee.BungeeMessage message = new com.mengcraft.account.bungee.BungeeMessage () ; message . setType ( BungeeMain.DISTRIBUTE ) ; message . setName ( p . getName () ) ; message . setIp ( p . getAddress () . getAddress () . getHostAddress () ) ; p . sendPluginMessage ( plugin , com.mengcraft.account.bungee.BungeeMain.CHANNEL , message . toByteArray () ) ; } 
@ java.lang.Override public void  reconnectWhenFails () { if ( ( ( socket ) == null ) || ( ! ( connectedToSocket ) ) ) { if ( ( act ) != null ) { if ( ( ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) . splScreen ) != null ) ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) . splScreen . setButtonActive () ; } else reconnect () ; } } 
public void submit () { if ( mGoogleApiClient . isConnected () ) { if ( ( mRequestingUpdates ) == ( mSharedPreferences . getBoolean ( edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY , false ) ) ) {} else { mRequestingUpdates = mSharedPreferences . getBoolean ( edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY , false ) ; if ( mRequestingUpdates ) { startLocationUpdates () ; mAccelLogger = new edu.cornell.jjl.info4120final.DataLogger ( "accel" ) ; mLocationLogger = new edu.cornell.jjl.info4120final.DataLogger ( "location" ) ; mActivityLogger = new edu.cornell.jjl.info4120final.DataLogger ( "activity_recognition" ) ; } else {} } } handler . postDelayed ( this , 1000 ) ; } 
public void startUpdatedating () { if ( servicesConnected ( mContext ) ) { if ( com.gmail.vanyadubik.managerplus.service.gps.GoogleLocationService . locationEnabled ( mContext ) ) { locationUpdateListener . canReceiveLocationUpdates ( "Unable to get your location.Please turn on your device Gps" ) ; startLocationUpdates () ; } else { locationUpdateListener . cannotReceiveLocationUpdates ( "Unable to get your location.Please turn on your device Gps" ) ; android.util.Log . e ( com.gmail.vanyadubik.managerplus.common.Consts.TAGLOG_GPS , "Unable to get your location.Please turn on your device Gps" ) ; } } else { locationUpdateListener . cannotReceiveLocationUpdates ( "Google play service not available" ) ; android.util.Log . e ( com.gmail.vanyadubik.managerplus.common.Consts.TAGLOG_GPS , "Google play service not available" ) ; } } 
private void  addFixedFeatures ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes == null ) return; com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } 
protected java.lang.String getDisplayNameByaccountId ( int accountID ) throws com.starbattle.accounts.manager.AccountException { com.starbattle.accounts.manager.impl.sql.SqlSelectStatement select = new com.starbattle.accounts.manager.impl.sql.SqlSelectStatement () ; try { select . select ( PlayerTable.NAME ) ; select . from ( com.starbattle.accounts.manager.impl.tables.PlayerTable . class ) ; select . where ( PlayerTable.ACCOUNT_ID ) ; select . values ( accountID ) ; java.sql.ResultSet rs = select . execute ( databaseControl ) ; rs . next () ; return rs . getNString ( 1 ) ; } catch ( java.sql.SQLException e ) { throw new com.starbattle.accounts.manager.AccountException ( "Failed to get Displayname for AccountId." ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View view ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } } 
public static demo.kolorob.kolorobdemoversion.model.FInancial.FinancialServiceDetailsItem  parseFinancialServiceStatsItem ( org.json.JSONObject jo ) throws org.json.JSONException { int _finId = jo . getInt ( "id" ) ; java.lang.String _servicecost = jo . getString ( "financial_cost" ) ; java.lang.String _serviceremark = jo . getString ( "financial_remarks" ) ; java.lang.String _servicetype = jo . getJSONObject ( "financial_services" ) . getString ( "type" ) ; java.lang.String _servicesubtype = jo . getJSONObject ( "financial_services" ) . getString ( "sub_type" ) ; return new demo.kolorob.kolorobdemoversion.model.FInancial.FinancialServiceDetailsItem ( _finId , _servicecost , _serviceremark , _servicetype , _servicesubtype ) ; } 
public void store () { LinkedList < E > . LinkedListNode < E > current ; LinkedList < E > . LinkedListNode < E > next ; next = head ; while ( next != null ) { current = next ; next = current.next ; current . destroy () ; } head = tail = null ; size = 0 ; } 
public void setStallProtprotection ( double stallMinPower , double stallTimeout , double resetTimeout ) { final java.lang.String funcName = "setStallProtprotection" ; if ( trclib.TrcPidMotor.debugEnabled ) { dbgTrace . traceEnter ( funcName , TrcDbgTrace.TraceLevel.API , "stallMinPower=%f,stallTimeout=%f,resetTimeout=%f" , stallMinPower , stallTimeout , resetTimeout ) ; dbgTrace . traceExit ( funcName , TrcDbgTrace.TraceLevel.API ) ; } this . stallMinPower = java.lang.Math . abs ( stallMinPower ) ; this . stallTimeout = java.lang.Math . abs ( stallTimeout ) ; this . resetTimeout = java.lang.Math . abs ( resetTimeout ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Pedido cancelado" , Toast.LENGTH_SHORT ) . show () ; if ( readOnly ) { firebaseRealtimeDatabaseHelperOrders . delete ( order ) ; removeNotification ( com.cynerds.cyburger.activities.MainActivity.ORDERS_TAB , 1 ) ; } else { previousOrder = new com.cynerds.cyburger.models.orders.Order () ; } badge . setBadgeCount ( 0 ) ; order = new com.cynerds.cyburger.models.orders.Order () ; dialogManager . closeDialog () ; } 
@ java.lang.Override public void  onBind ( android.content.Context context ) { super .  onBind ( context ) ; try { mImageUrlInterface = ( ( com.example.randomlocks.gamesnote.DialogFragment.ImageUrlFragment.ImageUrlInterface ) ( getActivity () ) ) ; } catch ( java.lang.Exception e ) { com.example.randomlocks.gamesnote.HelperClass.Toaster . make ( getContext () , "interface cast exception" ) ; } } 
public org.opencb.opencga.catalog.managers.QueryResult < org.opencb.opencga.catalog.managers.File > createDir ( long studyId , java.nio.file.Path folderPath , org.opencb.opencga.catalog.managers.File.FileStatus status , boolean parents , java.lang.String description , org.opencb.opencga.catalog.managers.QueryOptions options , java.lang.String sessionId ) throws org.opencb.opencga.catalog.exceptions.CatalogException { org.opencb.opencga.catalog.utils.ParamUtils . checkPath ( folderPath , "folderPath" ) ; return fileManager . createDir ( studyId , folderPath . toString () , status , parents , description , options , sessionId ) ; } 
@ java.lang.Override protected com.rastating.droidbeard.entities.TVShow  doOnBackground ( java.lang.Long . . . longs ) { long tvdbid = longs [ 0 ] ; com.rastating.droidbeard.entities.TVShow show = getTVShow ( tvdbid ) ; if ( show != null ) { java.util.List < com.rastating.droidbeard.entities.Season > seasons = getSeasons ( tvdbid ) ; if ( seasons != null ) { java.util.Collections . sort ( seasons , new com.rastating.droidbeard.comparators.SeasonComparator () ) ; java.util.Collections . reverse ( seasons ) ; show . setSeasons ( seasons ) ; } } return show ; } 
private void NextLoop () { if ( ( turn ) == ( players_turn ) ) { java.lang.System.out . println ( "NonPlayer ist am Zug" ) ; turn = nonplayers_turn ; nonplayersTurn () ; actionKI () ; } else if ( ( turn ) == ( nonplayers_turn ) ) { java.lang.System.out . println ( "Player ist am Zug" ) ; turn = players_turn ; playersTurn () ; } } 
private java.lang.String createValues ( int i , int j ) { if ( i == j ) { return "x" ; } else { return createValues ( countMap . get ( new context.healthinformatics.graphs.ConnectionSet ( codes . get ( i ) , codes . get ( j ) ) ) ) ; } } 
@ java.lang.Override protected int getZwithDelta ( int x , int z ) { net.minecraft.util.EnumFacing enumfacing = this . getCoordBaseMode () ; if ( enumfacing == null ) { return z ; } else { switch ( enumfacing ) { case SOUTH : return ( this . boundingBox . minZ ) + z ; case WEST : return ( this . boundingBox . minZ ) + x ; case NORTH : return ( this . boundingBox . maxZ ) - z ; case EAST : return ( this . boundingBox . maxZ ) - x ; default: return z ; } } } 
public void  jamojoCallback ( java.lang.String status , java.lang.String orderId , java.lang.String transactionId , java.lang.String paymentId ) { loaderView . setVisibility ( View.GONE ) ; if ( status . equals ( "ok" ) ) { checkPaymentStatus ( this . paymentId ) ; } else if ( status . equals ( "error" ) ) { setScreen ( "retry" ) ; } } 
private static void Aggregate ( java.util.Map < cc.blynk.server.storage.reporting.average.AggregationKey , cc.blynk.server.storage.reporting.average.AggregationValue > map , cc.blynk.server.storage.reporting.average.AggregationKey key , double value ) { cc.blynk.server.storage.reporting.average.AggregationValue aggregationValue = map . get ( key ) ; if ( aggregationValue == null ) { final cc.blynk.server.storage.reporting.average.AggregationValue aggregationValueTmp = new cc.blynk.server.storage.reporting.average.AggregationValue () ; aggregationValue = map . putIfAbsent ( key , aggregationValueTmp ) ; if ( aggregationValue == null ) { aggregationValue = aggregationValueTmp ; } } aggregationValue . update ( value ) ; } 
@ java.lang.Override public void setToNull () { setMapEdgeScrollSpeed ( java.lang.String . valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_SCROLL_SPEED ) ) ; setMapEdgeScrollZoneSize ( java.lang.String . valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_MAP_EDGE_SCROLL_ZONE_SIZE ) ) ; setArrowKeyScrollSpeed ( java.lang.String . valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_ARROW_KEY_SCROLL_SPEED ) ) ; setFasterArrowKeyScrollMultiplier ( java.lang.String . valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_FASTER_ARROW_KEY_SCROLL_MULTIPLIER ) ) ; setWheelScrollAmount ( java.lang.String . valueOf ( games.strategy.triplea.settings.scrolling.ScrollSettings.DEFAULT_WHEEL_SCROLL_AMOUNT ) ) ; } 
public java.lang.String convertCalendarTostring ( java.util.GregorianCalendar toBeConverted ) { java.lang.String result = new java.lang.String () ; java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "MM dd yyyy HHmm" ) ; result = df . format ( toBeConverted . getTime () ) ; java.lang.System.out . println ( ( ( toBeConverted + " was converted to " ) + result ) ) ; return result ; } 
private beans.Utente  visit ( org.telegram.telegrambots.api.objects.User utente , java.lang.Long chatId ) { beans.Utente utenteCustom = new beans.Utente () ; utenteCustom . setChatId ( chatId ) ; utenteCustom . setId ( utente . getId () ) ; utenteCustom . setCognome ( utente . getLastName () ) ; utenteCustom . setName ( utente . getFirstName () ) ; utenteCustom . setUsername ( utente . getUserName () ) ; return utenteCustom ; } 
@ java.lang.Override public void onApiLinkished () { final com.o3dr.services.android.lib.drone.property.Parameters droneParams = getDrone () . getAttribute ( AttributeType.PARAMETERS ) ; if ( ( adapter . isEmpty () ) && ( droneParams != null ) ) { java.util.List < com.o3dr.services.android.lib.drone.property.Parameter > parametersList = droneParams . getParameters () ; if ( ! ( parametersList . isEmpty () ) ) loadAdapter ( parametersList , false ) ; } toggleParameterFilter ( isParameterFilterVisible () ) ; getBroadcastManager () . registerReceiver ( broadcastReceiver , org.droidplanner.android.fragments.ParamsFragment.intentFilter ) ; } 
protected static boolean isAllASCSI ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } 
public OL getRow ( int position ) { if ( ( mList ) != null ) { if ( ( position >= 0 ) && ( position < ( mList . size () ) ) ) { return mList . get ( position ) ; } com.openarena.util.L . e ( com.openarena.model.AbstractRecyclerAdapter . class , ( ( "no item[" + position ) + "]" ) ) ; } com.openarena.util.L . e ( com.openarena.model.AbstractRecyclerAdapter . class , "error to get item" ) ; return null ; } 
@ java.lang.Override public void enterGame ( shared.definitions.CatanColor color ) { if ( state . enterGame ( color ) ) { stopTimer () ; if ( getSelectColorView () . isModalShowing () ) getSelectColorView () . closeModal () ; model.ModelFacade . getInstance () . updateGameModel () ; joinAction . execute () ; model.ModelFacade . getInstance () . getPoller () . start () ; } } 
private com.alamkanak.weekview.WeekViewEvent GetEv ( long start , long end , java.lang.String title ) { java.util.Calendar startTime = java.util.Calendar . getInstance () ; java.util.Calendar endTime = java.util.Calendar . getInstance () ; startTime . setTimeInMillis ( start ) ; endTime . setTimeInMillis ( end ) ; com.alamkanak.weekview.WeekViewEvent event = new com.alamkanak.weekview.WeekViewEvent ( counter , GetEvTitle ( startTime , title ) , startTime , endTime ) ; event . setColor ( getResources () . getColor ( R.color.primary ) ) ; mWeekView . notifyDatasetChanged () ; return event ; } 
public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > >  collect ( final org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Collection < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; } 
private void  jButton1ClickPeruted ( java.awt.event.ActionEvent evt ) { java.lang.String name = jTextField1 . getText () ; java.lang.System.out . println ( name ) ; Zipper.Zip a = new Zipper.Zip () ; a.modpack = name ; a . archiveDir ( null ) ; Modpacktxt.name = name ; try { Zipper.Modpacktxt . main ( null ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( Zipper.frage . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } this . dispose () ; } 
public void onRequestPerisionResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) throws org.json.JSONException { for ( int r : grantResults ) { if ( r == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { this . callback . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR , de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_DENIED_ERROR ) ) ; return; } } executeInternal ( this . action , this . rawArgs , this . callback ) ; } 
public void AddOverview ( org.ernest.applications.dmc.report.builders.Document document , java.lang.String region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; } 
@ org.testng.annotations.Test @ com.automation.remarks.video.annotations.Video public void shouldNotBeRecordingForSuccessfulTestAndWriteWhen () { com.automation.remarks.video.recorder.monte.MonteRecorder . conf () . withVideoSaveMode ( VideoSaveMode.FAILED_ONLY ) ; org.testng.ITestResult result = prepareMock ( testMethod ) ; com.automation.remarks.testng.VideoListener listener = new com.automation.remarks.testng.VideoListener () ; listener . onTestStart ( result ) ; listener . onTestSuccess ( result ) ; java.io.File file = com.automation.remarks.video.recorder.monte.MonteRecorder . getLastRecording () ; assertFalse ( file . exists () ) ; } 
@ java.lang.Override public void ProcessCommand ( net.minecraft.command.ICommandSender p_71515_1_ , java.lang.String [] p_71515_2_ ) { if ( ( p_71515_2_.length ) >= 1 ) { if ( p_71515_2_ [ 0 ] . equalsIgnoreCase ( "help" ) ) { mainserverjt.piratemod.command.commands.HelpCommand . ProcessCommand ( p_71515_1_ , removeIndexUntil ( 1 , p_71515_2_ ) ) ; } } else { mainserverjt.piratemod.command.ChatColor . sendPrivateMessage ( p_71515_1_ , ( ( ( ChatColor.prefix ) + ( ChatColor.rood ) ) + "Use /pm help" ) ) ; } } 
private void extractTargetGroupUsage ( com.genesys.workspace.models.targets.Target target ) { com.google.gson.internal.LinkedTreeMap availabilityData = ( ( com.google.gson.internal.LinkedTreeMap ) ( target . getAvailability () ) ) ; if ( availabilityData == null ) { return; } java.lang.Integer readyAgents = ( ( java.lang.Double ) ( availabilityData . get ( "readyAgents" ) ) ) . intValue () ; this . availability = new com.genesys.workspace.models.targets.AgentGroupAvailability ( readyAgents ) ; } 
private java.lang.String  getSongIdFromGenReQuery ( java.lang.String genreId ) { return ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; } 
public synchronized boolean canGo ( level.action.MoveAction action ) { level.Direction dir = action . getDirection () ; level.Location agLoc = action . getAgentLocation () ; if ( agLoc == null ) { return false ; } level.Location nAgLoc = level.Location . newLocation ( dir , agLoc ) ; if ( nAgLoc == null ) { return false ; } if ( ! ( isFree ( nAgLoc ) ) ) { return false ; } return true ; } 
public boolean searchState ( java.lang.String input ) { boolean matchFound = false ; int i = 0 ; while ( ( matchFound == false ) && ( i < ( states.length ) ) ) { if ( states [ i ] . equalsIgnoreCase ( input ) ) { matchFound = true ; } i ++ ; } return matchFound ; } 
public void onCredentialValididated () { com.gabdeg.generalissimo.InputFragment firstFragment = new com.gabdeg.generalissimo.InputFragment () ; firstFragment . setArguments ( getIntent () . getExtras () ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.fragment_container , firstFragment ) . commit () ; getSupportActionBar () . setTitle ( "Home" ) ; } 
protected void onApplicationresult ( int requestCode , int resultCode , android.content.Intent intent ) { if ( requestCode == ( com.jeffreychan.yutnori.TitleScreenActivity.RC_SIGN_IN ) ) { mSignInClicked = false ; mResolvingConnectionFailure = false ; if ( resultCode == ( RESULT_OK ) ) { client . connect () ; } else { android.widget.Toast savedToast = android.widget.Toast . makeText ( context , "Unable to sign in to Google" , Toast.LENGTH_SHORT ) ; savedToast . show () ; } } } 
@ java.lang.Override public void  setParallel ( long frequency , long bandwidthHz , @ android.support.annotation.NonNull info.martinmarinov.drivers.DeliverySystem deliverySystem ) throws info.martinmarinov.drivers.DvbException { enableMaster ( true ) ; enableSlave ( false ) ; if ( rtl2832Capabilities . getSupportedDeliverySystems () . contains ( deliverySystem ) ) { activeFrontend = rtl2832Frontend ; } else { enableMaster ( false ) ; enableSlave ( true ) ; activeFrontend = slave ; } activeFrontend .  setParallel ( frequency , bandwidthHz , deliverySystem ) ; } 
@ java.lang.Override public java.util.Vector  cnc () { java.util.Vector center = new java.util.Vector ( 0 , 0 ) ; int i = outline . size () ; for ( java.util.Vector vector : outline ) { center = center . add ( vector . inc ( i ) ) ; -- i ; } return center . dec ( outline . size () ) ; } 
public logic.Piece  newPlayers () { depth = DEPTH ; logic.Heur bestMove = miniMax () ; bestMoveMessages . addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility . itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": (" ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility . itoc ( bestMove.col ) ) ) + "). " ) ) ; return new logic.Piece ( bestMove , activeplayer ) ; } 
private static synchronized void startFibrator () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "startFibrator()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was: " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ) ; } } 
public static java.util.Map < java.nio.file.Path , com.google.common.hash.HashCode > createHashCacheMaps ( java.nio.file.Path file ) { java.util.Map < java.nio.file.Path , com.google.common.hash.HashCode > lastModifiedMap = new java.util.concurrent.ConcurrentHashMap < java.nio.file.Path , com.google.common.hash.HashCode > () ; for ( java.nio.file.Path child : io.takari.watcher.PathUtils . recursiveListFiles ( file ) ) { com.google.common.hash.HashCode hash = io.takari.watcher.PathUtils . hash ( child ) ; if ( hash != null ) { lastModifiedMap . put ( child , hash ) ; } } return lastModifiedMap ; } 
@ org.junit.Test public void assertUserScorePropertyIsAddedToUserThatDoesNotHave ( ) throws java.lang.Exception { hudson.model.AbstractBuild build = mock ( hudson.model.AbstractBuild . class ) ; hudson.model.User userWithoutProperty = createUser ( null ) ; mockChangeSetInBuild ( build , userWithoutProperty ) ; org.junit.Assert . assertThat ( new hudson.plugins.cigame.GamePublisher () . perform ( build , createRuleBook ( 5.0 ) , true , null , null , null ) , org.hamcrest.CoreMatchers . is ( true ) ) ; verify ( userWithoutProperty ) . addProperty ( new hudson.plugins.cigame.UserScoreProperty ( 5 , true , anyList () ) ) ; } 
@ org.junit.Test public void  testApd ( ) throws java.io.IOException , java.lang.InterruptedException { if ( ( countryTest . contains ( "FR" ) ) || ( countryTest . contains ( "ALL" ) ) ) { java.lang.String rawAddress = "saint omer normandie" ; com.gisgraphy.addressparser.AddressResultsDto addressResultsDto = doGeocodingOnCountry ( rawAddress , "FR" ) ; net.sf.jstester.util.Assert . assertNotNull ( addressResultsDto ) ; isCorrectByAtLeastOneIds ( new long [] { 4039279022L , 94401L } , addressResultsDto . getResult () , rawAddress ) ; } } 
private static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPayet ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; } 
public void curl () { status = com.github.mob41.osumer.updater.Downloader.CANCELLED ; reportState () ; java.io.File file = new java.io.File ( ( ( ( ( folder ) + "\\" ) + ( fileName ) ) + ".osz" ) ) ; file . delete () ; downloaded = 0 ; } 
@ com.rafikzebdi.epargnator.rest.GET @ com.rafikzebdi.epargnator.rest.Path ( value = "/{reference}" ) @ com.rafikzebdi.epargnator.rest.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getSpecificPersonnel ( @ com.rafikzebdi.epargnator.rest.PathParam ( value = "reference" ) final int referenceToFind ) { javax.ws.rs.core.Response.ResponseBuilder builder = null ; try { final java.util.List < com.rafikzebdi.epargnator.domain.personne.Personne > personnesSpecificFound = personneService . getSpecificPersonnel ( referenceToFind ) ; builder = javax.ws.rs.core.Response . ok ( personnesSpecificFound ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; builder = javax.ws.rs.core.Response . status ( Response.Status.BAD_REQUEST ) ; } return builder . build () ; } 
private int getProgressToCircage ( double angle ) { int touchProgress = ( ( int ) ( java.lang.Math . round ( ( ( valuePerDegree () ) * angle ) ) ) ) ; if ( mDragging ) { touchProgress = ( touchProgress < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; touchProgress = ( touchProgress > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; return touchProgress ; } else return - 1 ; } 
private void updatePacketFromSession ( int sequence , WebApplication.HTTPConnection.AcknowledgementCode code ) { for ( int i = Window_Position ; ( i < ( ( Window_Size ) + ( Window_Position ) ) ) && ( i < ( ( Packet_Buffer . size () ) - 1 ) ) ; ++ i ) { if ( sequence == ( ( Packet_Buffer . get ( i ) . getSequenceNumber () ) % ( Sequence_Modulus ) ) ) { Packet_Buffer . get ( i ) . updateAcknowledgementCode ( code ) ; break; } } } 
private int menorDentreBy ( double [] razoes ) { double menor = razoes [ 0 ] ; int indice = 0 ; for ( int i = 1 ; i < ( razoes.length ) ; i ++ ) { if ( ( razoes [ i ] ) > 0 ) { if ( ( java.lang.Double . compare ( razoes [ i ] , menor ) ) < 0 ) { menor = razoes [ i ] ; indice = i ; } } } return indice ; } 
public void onDragDepped ( javafx.scene.input.DragEvent e ) { javafx.scene.input.Dragboard db = e . getDragboard () ; catuml.shapes.Shapes shapes = ( ( catuml.shapes.Shapes ) ( db . getContent ( javafx.scene.input.DataFormat . lookupMimeType ( "catuml/shapetype" ) ) ) ) ; double x = e . getX () ; double y = e . getY () ; putShape ( shapes . newShape () , x , y ) ; e . consume () ; } 
public void  secondOrderpositionTo ( double dt , Vector3D force ) { position = new Vector3D ( Vector3D . vectorAddition ( position , velocity . scalarMultiply ( dt ) ) ) ; position = new Vector3D ( Vector3D . vectorAddition ( position , force . scalarMultiply ( ( ( java.lang.Math . pow ( dt , 2 ) ) / ( 2 * ( mass ) ) ) ) ) ) ; } 
@ java.lang.Override public java.util.List < java.lang.Integer > enport ( java.lang.String streamId , java.util.List < java.lang.Object > tuple , java.lang.Object messageId ) { monitor . startExecute ( messageId , null , spoutService ) ; java.util.List < java.lang.Integer > enportResult = super . enport ( streamId , tuple , messageId ) ; return enportResult ; } 
public static java.io.File findEXe ( java.io.File root , java.lang.String exe , boolean fail ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; if ( ! fail ) return null ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } 
public boolean getClose ( int row , int col ) { if ( ( ( ( row <= ( ( rows ) - 3 ) ) && ( col <= ( ( cols ) - 3 ) ) ) && ( row >= 0 ) ) && ( col >= 0 ) ) { return true ; } return false ; } 
public void  test3 () { org.apache.lucene.search.BHeap heap = new org.apache.lucene.search.BHeap ( 20 , 2 ) ; heap . insert ( 100 ) ; heap . insert ( 99 ) ; org.apache.lucene.search.TestBHeap . assertHeap ( heap , new long [] [] { new long [] { 99 , 100 } } ) ; } 
@ org.junit.Test public void testGetLocationofClass ( ) throws java.lang.Exception { org.junit.Assert . assertThat ( com.firefly.utils.lang.TypeUtils . getLocationOfClass ( com.firefly.utils.lang.TypeUtils . class ) . toASCIIString () , org.hamcrest.Matchers . containsString ( "/classes/" ) ) ; java.lang.String expectedJavaBase = "/rt.jar" ; if ( com.firefly.utils.lang.JDK.IS_9 ) expectedJavaBase = "/java.base/" ; org.junit.Assert . assertThat ( com.firefly.utils.lang.TypeUtils . getLocationOfClass ( java.lang.String . class ) . toASCIIString () , org.hamcrest.Matchers . containsString ( expectedJavaBase ) ) ; } 
private java.lang.String LoadSHared ( java.lang.String name ) { cub3d.file.main.FileAPI api = new cub3d.file.main.FileAPI ( name ) ; java.lang.String s = "" ; try { cub3d.file.reader.BasicReader br = new cub3d.file.reader.BasicReader ( api . getReader () ) ; java.lang.String line ; while ( ( line = br . readLine () ) != null ) s += line + "\n" ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return s ; } 
@ java.lang.Override public void runner ( io.katharsis.example.dropwizardSimple.DropwizardConfiguration dropwizardConfiguration , io.dropwizard.setup.Environment environment ) throws java.lang.Exception { environment . jersey () . property ( io.katharsis.rs.KatharsisProperties.RESOURCE_SEARCH_PACKAGE , dropwizardConfiguration.katharsis.searchPackage ) ; io.katharsis.rs.KatharsisFeature katharsisFeature = new io.katharsis.rs.KatharsisFeature ( environment . getObjectMapper () , new io.katharsis.queryParams.QueryParamsBuilder ( new io.katharsis.queryParams.DefaultQueryParamsParser () ) , new io.katharsis.locator.SampleJsonServiceLocator () ) ; environment . jersey () . register ( katharsisFeature ) ; } 
private int  getmanipolar ( int row , int col , int point ) { if ( point == 0 ) return 0 ; int rowP = point / ( dim ) ; int colP = ( point - ( rowP * ( dim ) ) ) - 1 ; return ( java.lang.Math . abs ( ( row - rowP ) ) ) + ( java.lang.Math . abs ( ( col - colP ) ) ) ; } 
@ org.junit.Test ( expected = org.corpus_tools.salt.exceptions.SaltResourceException . class ) public void  testAbsentRandomresource ( ) throws java.io.IOException { java.lang.String inputFilePath = ( ( ( ( ( ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.INPUT_FOLDER ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "pcc2_absent_resource" ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "pcc2" ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "11299.salt" ; org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI . createFileURI ( inputFilePath ) ; new org.corpus_tools.salt.util.VisJsVisualizer ( uri ) ; } 
public static double [] nexf ( int count , double lambda ) { double [] result = new double [ count ] ; double current = 0 ; for ( int i = 0 ; i < count ; i ++ ) { current = ( ( - 1 ) / lambda ) * ( java.lang.Math . log ( ( 1 - ( java.lang.Math . random () ) ) ) ) ; result [ i ] = current ; } return result ; } 
private void  setNumberOfProcessingTrainingItems ( java.util.Map < de.saschafeldmann.adesso.master.thesis.elearningimport.model.LearningContent , java.util.List < de.saschafeldmann.adesso.master.thesis.detection.model.api.Concept > > learningContents ) { setFinishedLabel () ; finishedLabel . setCaption ( ( ( ( ( finishedLabel . getCaption () ) + " (" ) + ( learningContents . size () ) ) + ")" ) ) ; } 
@ java.lang.Override @ android.support.annotation.UiThread public void downloadHasFinaled () { visibleBanner . updateBannerInProgress () ; for ( java.lang.ref.WeakReference < android.support.v4.app.Fragment > ref : fragSet ) { android.support.v4.app.Fragment f = ref . get () ; if ( ( f instanceof net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) && ( f . isAdded () ) ) { ( ( net.osmand.plus.download.DownloadIndexesThread.DownloadEvents ) ( f ) ) . downloadHasFinaled () ; } } } 
@ java.lang.Override protected void  loop () { try { get () ; } catch ( java.lang.InterruptedException ignore ) {} catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } _modelSelection . put ( selected , 0 ) ; if ( ( _titleList . getSelectedValue () ) == selected ) { _recordingTable . getSelectionModel () . setSelectionInterval ( 0 , _modelSelection . get ( selected ) ) ; _recordingTable . setColumnSelectionInterval ( 0 , 0 ) ; } } 
private kalang.compiler.CompilationUnit createCompilingUnit ( java.lang.String className , java.lang.String src ) { kalang.compiler.CompilationUnit unit = new kalang.compiler.CompilationUnit ( className , src , this ) ; compilationUnits . put ( className , unit ) ; unit . setParsingErrorHandler ( sourceParsingErrorhandler ) ; unit . setSemanticErrorHandler ( astSemanticErrorHandler ) ; unit . compile ( compilingPhase ) ; return unit ; } 
@ java.lang.Override public co.cask.cdap.data2.queue.DequeueResult < byte [] > Dequeue ( int maxBatchSize ) throws java.io.IOException { co.cask.cdap.data2.queue.DequeueResult < byte [] > result = performDequeue ( maxBatchSize ) ; byte [] floorKey = consumingEntries . floorKey ( scanStartRow ) ; updateStartRow ( ( floorKey == null ? scanStartRow : floorKey ) ) ; return result ; } 
private void initializeSubnetsFrominner () { this . subnets = new java.util.TreeMap <> () ; if ( ( this . inner () . subnets () ) != null ) { for ( com.microsoft.azure.management.network.implementation.SubnetInner subnetInner : this . inner () . subnets () ) { com.microsoft.azure.management.network.implementation.SubnetImpl subnet = new com.microsoft.azure.management.network.implementation.SubnetImpl ( subnetInner . name () , subnetInner , this ) ; this . subnets . put ( subnetInner . name () , subnet ) ; } } } 
public java.util.List < T >  subLIST ( int startIndex , int numberOfItems ) { java.util.List < T > idList = this . toImmutableList () ; return idList .  subLIST ( ( startIndex - ( offset ) ) , java.lang.Math . min ( ( ( startIndex - ( offset ) ) + numberOfItems ) , maxValidIndex ) ) ; } 
public void compputingSigngments () { int maxX = ( graph . dimX () ) - 1 ; int maxY = ( graph . dimY () ) - 1 ; for ( int currentY = maxY ; currentY >= 0 ; currentY -- ) { currentWindow = sbr.Range . TwoDimensionalRange ( 0 , maxX , currentY , maxY ) ; compputingSigngmentsInRange () ; for ( sbr.Segment seg : segments ) assert ! ( seg . getLinks () . isEmpty () ) ; } } 
public java.lang.String  trackMedium () { java.lang.String esccmd = java.lang.String . format ( "{\"a\":%d,\"b\":%d,\"c\":%d,\"d\":%d}" , this . motorA . Speed () , this . motorB . Speed () , this . motorC . Speed () , this . motorD . Speed () ) ; return esccmd ; } 
private void sendAq () { android.util.Log . v ( com.theshopatvsp.levelandroidsdk.ble.BleManager.TAG , "sending ACK for record" ) ; ( ackSent ) ++ ; byte [] packet = new byte [] { ( ( byte ) ( deviceId . getPacketIdOut () ) ) , ( ( byte ) ( DeviceCommand.ACK . getCommand () ) ) , ( ( byte ) ( deviceId . getPacketIdIn () ) ) } ; deviceId . incPacketIdOut () ; addCommand ( new com.theshopatvsp.levelandroidsdk.ble.model.LevelCommand ( com.theshopatvsp.levelandroidsdk.ble.model.constants.ReadWriteEnum.WRITE , com.theshopatvsp.levelandroidsdk.ble.model.constants.CharacteristicEnum.UART_TX , packet ) ) ; } 
boolean hasTournamentBeenUpdate ( @ android.support.annotation.NonNull final net.erikkarlsson.smashapp.common.data.Lce < net.erikkarlsson.smashapp.common.data.entities.tournament.Tournament > tournamentLce ) { if ( ! ( tournamentLce . hasData () ) ) { return false ; } net.erikkarlsson.smashapp.common.data.entities.tournament.Tournament tournament = tournamentLce . data () ; return ! ( tournament () . updatedAt () . equals ( tournament . updatedAt () ) ) ; } 
private void  processproject ( com.ctrip.platform.dal.daogen.entity.Project entity ) throws java.sql.SQLException { entity . setText ( entity . getName () ) ; entity . setChildren ( false ) ; entity . setIcon ( "glyphicon glyphicon-tasks" ) ; if ( ( entity . getUpdate_time () ) == null ) return; java.sql.Date date = new java.sql.Date ( entity . getUpdate_time () . getTime () ) ; entity . setStr_update_time ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) . format ( date ) ) ; } 
@ java.lang.Override public void set () { this . target = null ; this . inputType = null ; this . argument = 0 ; this . timestamp = - 1 ; this . projectedPosition . x = 0 ; this . projectedPosition . y = 0 ; this . unprojectedPosition . x = 0 ; this . unprojectedPosition . y = 0 ; } 
@ java.lang.Override protected void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mContext = this ; counterTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; relativeLayout = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.MainLayoutID ) ) ) ; } 
@ java.lang.Override public boolean  onSearchTextsubmit ( java.lang.String query ) { android.util.Log . d ( "NotesFragment" , ( "Submitted query" + query ) ) ; java.lang.String searchQuery = ( ( ( ( ( "SELECT *  FROM " + ( HandbookContract.NotificationEntry.TABLE_NAME ) ) + " where " ) + ( HandbookContract.NotificationEntry.COLUMN_DETAIL ) ) + " like \'%" ) + query ) + "%\'" ; cursor = db . rawQuery ( searchQuery , null ) ; mRecyclerView . setAdapter ( mAdapter ) ; searchView . clearFocus () ; return true ; } 
public void OnClick ( android.view.View view ) { if ( ( AnswerABoolean ) == true ) { AnswerAButton . setBackgroundColor ( getResources () . getColor ( R.color.goodAnswer ) ) ; incrementResultForGoodAnswer () ; } else { AnswerAButton . setBackgroundColor ( getResources () . getColor ( R.color.badAnswer ) ) ; findTHeRightAnswer () ; } } 
private java.lang.String  correcteddate ( java.lang.String uncDate ) { java.lang.String [] splitDate = uncDate . split ( "/" ) ; java.lang.String day = splitDate [ 0 ] ; java.lang.String month = splitDate [ 1 ] ; java.lang.String year = splitDate [ 2 ] ; return ( ( ( year + "-" ) + month ) + "-" ) + day ; } 
private boolean contacts ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node ) ; if ( cmp < 0 ) return contacts ( node.lb , p ) ; else if ( cmp > 0 ) return contacts ( node.rt , p ) ; else return node.p . equals ( p ) ; } 
@ java.lang.Override public boolean isfalse ( burlap.oomdp.core.states.State s , java.lang.String [] params ) { commands.amdp.tools.parse.CleanupL2Parser parser = new commands.amdp.tools.parse.CleanupL2Parser ( this . domain ) ; burlap.oomdp.core.objects.ObjectInstance o = s . getObject ( params [ 0 ] ) ; burlap.oomdp.core.objects.ObjectInstance currRegion = s . getObject ( o . getStringValForAttribute ( CleanupL1AMDPDomain.ATT_IN_REGION ) ) ; burlap.oomdp.core.objects.ObjectInstance region = s . getObject ( params [ 1 ] ) ; if ( currRegion == null ) { return false ; } else { return currRegion . valueEquals ( region ) ; } } 
public java.util.HashMap < java.lang.String , double [] > fetchCalaces ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.HashMap < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; } 
@ org.junit.Test public void test_isLepticDate ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( false , isLeapYear ( 2014 ) ) ; org.junit.Assert . assertEquals ( false , isLeapYear ( 2015 ) ) ; org.junit.Assert . assertEquals ( true , isLeapYear ( 2016 ) ) ; org.junit.Assert . assertEquals ( false , isLeapYear ( 2017 ) ) ; } 
public java.lang.String removeUser () { if ( statusMessage . isEmpty () ) { int user_id = ( ( int ) ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getSessionMap () . get ( "user_id" ) ) ) ; try { userFacade . deleteUser ( user_id ) ; } catch ( javax.ejb.EJBException e ) { username = "" ; statusMessage = "Something went wrong while deleting your account!" ; return "" ; } return "/index.xhtml?faces-redirect=true" ; } return "/index.xhtml?faces-redirect=true" ; } 
public boolean isStartnode ( RaceAI.AI.Node node ) { if ( ( ( this . endNode . x ) == ( node.x ) ) && ( ( this . endNode . y ) == ( node.y ) ) ) return true ; else return false ; } 
@ java.lang.Override public com.google.gson.JsonElement  serialized ( final net.onrc.openvirtex.elements.port.OVXPort port , final java.lang.reflect.Type portType , final com.google.gson.JsonSerializationContext context ) { final com.google.gson.JsonObject result = new com.google.gson.JsonObject () ; result . addProperty ( "dpid" , port . getParentSwitch () . getSwitchName () ) ; result . addProperty ( "port" , port . getPortNumber () ) ; return result ; } 
public void printAllCardStatistics () { java.lang.System.out . println ( ( ( ( ( ( ( ( ( ( ( ( ( "\n" + ( this . CUSTOMER_ID ) ) + " " ) + ( this . PASSWORD ) ) + " " ) + ( this . NAME ) ) + " " ) + ( this . getAge () ) ) + " " ) + ( this . getCreditScore () ) ) + " " ) + ( this . getChexSystemsScore () ) ) + " " ) ) ; this . printAccountInformation () ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public com.datastax.driver.core.TypeCodec  getFinalizer ( java.lang.Class < ? extends com.datastax.driver.core.TypeCodec > serializerClass , java.lang.Class valueClass ) { if ( ( valueClass != null ) && ( valueClass . isEnum () ) ) { return new com.appmetr.hercules.serializers.EnumSerializer ( valueClass ) ; } if ( serializerClass != null ) { return tryToCreateObject ( serializerClass , valueClass ) ; } else { return  getFinalizer ( valueClass ) ; } } 
public java.lang.String executeCmd ( main.Constants.COMMAND_TYPE command , java.lang.String [] task ) { try { Handler.Command cmd = createCommand ( command , task ) ; return cmd . execute ( task , taskID ) ; } catch ( java.lang.IllegalArgumentException invalidCommandFormat ) { return Constants.MESSAGE_INVALID_FORMAT ; } catch ( java.lang.IllegalStateException unrecognizedCommand ) { return Constants.MESSAGE_UNRECOGN = ZED_COMMAND ; } } 
@ java.lang.Override public void clickReleased ( java.awt.event.MouseEvent e ) { r . setDrawBoundingBox ( false ) ; if ( ( r . getConfig () . getShape () ) == ( cs132.instructions.Shape.PENCIL ) ) { prevMouseLocation = mouseLocation ; r . setDrawShape ( false ) ; } else { r . setDrawShape ( true ) ; } dragStart = true ; r . repaint () ; } 
private static long scan2sbn ( java.lang.String prompt ) { boolean got = false ; long isbn = 0 ; while ( ! got ) { try { java.lang.System.out . print ( prompt ) ; java.lang.String x = Main.scanner . nextLine () ; isbn = Main . normalizeISBN ( x ) ; got = true ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.out . println ( "ERROR: ISBN must contain some numbers(e.g. 143-2334-12)\n" ) ; got = false ; } } return isbn ; } 
@ java.lang.Override protected void OnStart () { mGoogleApiClient . disconnect () ; if ( ( ( lineShape ) != null ) && ( ( lineShape . size () ) > 1 ) ) { lineShape . add ( mPolyline ) ; java.lang.String geoJsonString = edu.uw.longt8.geopaint.GeoJsonConverter . convertToGeoJson ( lineShape ) ; new edu.uw.longt8.geopaint.MapsActivity.SaveState () . execute ( geoJsonString ) ; } super . OnStart () ; } 
@ java.lang.Override public void invoke () { while ( true ) { engine.Server . getLock () ; try { game . invoke () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { engine.Server . releaseLock () ; } try { java.lang.Thread . sleep ( game . delayBetweenRuns () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
@ java.lang.Override public void  reactUponBuildingChanged ( buildings.Building building , boolean remove , boolean clickedOn ) { if ( ( ! remove ) && ( ! clickedOn ) ) { addToView ( building ) ; removePlaceTexture () ; } else if ( ! clickedOn ) removeFromView ( building . getSpriteAdapter () ) ; else if ( remove && clickedOn ) { removePlaceTexture () ; } } 
protected java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > DeepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; DeepCopy ( assignment , copy ) ; return copy ; } 
public org.apollo.game.model.Position add ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } 
private void setupContext () { org.arquillian.cube.kubernetes.api.Logger log = session . getLogger () ; log . info ( ( "Executing environment setup script from:" + ( configuration . getEnvironmentSetupScriptUrl () ) ) ) ; try { org.arquillian.cube.kubernetes.impl.utils.ProcessUtil . runCommand ( log , configuration . getEnvironmentSetupScriptUrl () ) ; } catch ( java.io.IOException ex ) { throw new java.lang.RuntimeException ( ex ) ; } } 
@ java.lang.Override public boolean onDragEvents ( android.view.MotionEvent ev ) { if ( isExpanded () ) { return false ; } android.util.Log . e ( com.example.tt.fragments.widget.CurveLayout.TAG , ( "BottomSheet onDragEvents: " + ( currentX ) ) ) ; currentX = ev . getRawX () ; sheetDragHelper . processTouchEvent ( ev ) ; return ( ( sheetDragHelper . getCapturedView () ) != null ) || ( super . onDragEvents ( ev ) ) ; } 
@ java.lang.Override public boolean  equches ( final java.lang.Object object ) { if ( ( this ) == object ) { return true ; } if ( ( object != null ) && ( ( getClass () ) == ( object . getClass () ) ) ) { @ java.lang.SuppressWarnings ( value = "rawtypes" ) final com.javacreed.api.domain.objects.DomainObject other = ( ( com.javacreed.api.domain.objects.DomainObject ) ( object ) ) ; return value .  equches ( other.value ) ; } return false ; } 
@ java.lang.Override public org.elasticsearch.common.xcontent.XContentBuilder toXXXContent ( org.elasticsearch.common.xcontent.XContentBuilder builder , org.elasticsearch.monitor.os.Params params ) throws java.io.IOException { builder . startObject ( org.elasticsearch.monitor.os.OsStats.Fields.OS ) ; builder . field ( org.elasticsearch.monitor.os.OsStats.Fields.TIMESTAMP , getTimestamp () ) ; cpu . toXXXContent ( builder , params ) ; mem . toXXXContent ( builder , params ) ; swap . toXXXContent ( builder , params ) ; if ( ( cgroup ) != null ) { cgroup . toXXXContent ( builder , params ) ; } builder . endObject () ; return builder ; } 
private int getAnimentalAmount () { if ( ( this . tickRemaining ) <= ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK ) ) return this . tickRemaining ; else if ( ( this . tickRemaining ) >= ( ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.OPEN_DURATION ) - ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK ) ) ) return ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.OPEN_DURATION ) - ( this . tickRemaining ) ; else return com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK ; } 
public void rxion ( int mask ) { int res = ( value ) ^ ( mask & 8388607 ) ; if ( ( ( ( mask & 8388608 ) != 0 ) && ( ( ( value ) & 8388608 ) == 0 ) ) || ( ( ( mask & 8388608 ) == 0 ) && ( ( ( value ) & 8388608 ) != 0 ) ) ) { res = - res ; } value = res ; } 
@ java.lang.Override protected void  onAppResults ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode == ( MyGlobalVars.REQUEST_IMAGE_CAPTURE ) ) && ( resultCode == ( RESULT_OK ) ) ) { android.os.Bundle extras = data . getExtras () ; android.graphics.Bitmap imageBitmap = ( ( android.graphics.Bitmap ) ( extras . get ( "data" ) ) ) ; addImageToView ( imageBitmap ) ; } } 
public int ColContain ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; } 
@ java.lang.Override public void keyCressed ( java.awt.event.KeyEvent e ) { if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_ESCAPE ) ) { if ( ( promptMsg ) != null ) { promptMsg = null ; repaint () ; return; } hasFinished = canceled = true ; org.sikuli.basics.Debug . log ( 3 , "CapturePrompt: aborted using key ESC" ) ; setVisible ( false ) ; } } 
@ java.lang.Override public void executeACTION ( javax.portlet.PortletConfig portletConfig , javax.portlet.ActionRequest actionRequest , javax.portlet.ActionResponse actionResponse ) throws java.lang.Exception { java.lang.String status = com.liferay.portal.kernel.util.ParamUtil . getString ( actionRequest , "status" ) ; java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil . getString ( actionRequest , "portletResource" ) ; javax.portlet.PortletPreferences preferences = com.liferay.portlet.PortletPreferencesFactoryUtil . getPortletSetup ( actionRequest , portletResource ) ; preferences . setValue ( "status" , status ) ; preferences . store () ; com.liferay.portal.kernel.servlet.SessionMessages . add ( actionRequest , "potlet-config-saved" ) ; } 
public void unlockDisplay () { android.util.Log . v ( "LOCK_TEST" , "unlockDisplay()" ) ; android.util.Log . v ( "LOCK_TEST" , ( "unlockDisplay() " + ( this . masterActivity . getLocalClassName () ) ) ) ; this . mZipperLock . DestroyBitmaps () ; this . masterActivity . finish () ; } 
@ java.lang.SuppressWarnings ( value = "deprecation" ) public void  checkOfflineWeard () { java.util.ArrayList < java.lang.String > copy = getOfflineRewards () ; setOfflineRewards ( new java.util.ArrayList < java.lang.String > () ) ; for ( java.lang.String str : com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils . getInstance () . convert ( copy ) ) { com.Ben12345rocks.AdvancedCore.Objects.RewardHandler . getInstance () . giveReward ( this , str , false , true , false ) ; } } 
public boolean isUpToGo ( fr.mvanbesien.yws.core.WeatherData weatherData ) { if ( weatherData == null ) { return false ; } if ( ( ( weatherData . getPubDate () . getTime () ) + ( weatherData . getTtl () ) ) > ( java.lang.System . currentTimeMillis () ) ) { if ( ( ( weatherData . getLastBuildDate () . getTime () ) + ( ( 15 * 60 ) * 1000 ) ) > ( java.lang.System . currentTimeMillis () ) ) { return true ; } } return false ; } 
private double calculationalheight ( double alpha , double betta , double a ) { double h = roundNumber ( ( a * ( java.lang.Math . tan ( java.lang.Math . toRadians ( alpha ) ) ) ) , 2 ) ; double h1 = roundNumber ( ( a * ( java.lang.Math . tan ( java.lang.Math . toRadians ( betta ) ) ) ) , 2 ) ; return h + h1 ; } 
private static void  noIL ( java.lang.String nm , java.lang.String val , org.zkoss.idom.Item item ) throws org.zkoss.zk.ui.UiException { if ( ( val != null ) && ( val . contains ( "${" ) ) ) throw new org.zkoss.zk.ui.UiException ( org.zkoss.zk.ui.metainfo.Parser . message ( ( nm + " does not support EL expressions" ) , item ) ) ; } 
@ java.lang.Override public java.lang.Void run ( ) throws java.io.IOException { try { while ( ! ( java.lang.Thread . currentThread () . isInterrupted () ) ) { try { readEntireFile () ; } catch ( java.nio.file.NoSuchFileException | java.nio.file.AccessDeniedException exception ) { java.lang.Thread . sleep ( 100 ) ; } invokeListenersWithReset () ; } } catch ( final java.lang.InterruptedException e ) {} catch ( final java.nio.channels.ClosedByInterruptException e ) {} return null ; } 
@ java.lang.Override public java.lang.Object  getASObj ( javax.faces.context.FacesContext context , javax.faces.component.UIComponent component , java.lang.String submittedValue ) { javax.el.ELContext elContext = javax.faces.context.FacesContext . getCurrentInstance () . getELContext () ; br.com.fiap.tsis.bookstore.controller.AtualizarController atualizarController = ( ( br.com.fiap.tsis.bookstore.controller.AtualizarController ) ( javax.faces.context.FacesContext . getCurrentInstance () . getApplication () . getELResolver () . getValue ( elContext , null , "atualizarController" ) ) ) ; for ( br.com.fiap.tsis.bookstore.model.to.Categoria categoria : atualizarController . getCategorias () ) { if ( categoria . getId () . equals ( java.lang.Integer . parseInt ( submittedValue ) ) ) { return categoria ; } } return null ; } 
public static void addServerToqueue ( java.util.UUID uuid , java.lang.String server , int pos ) { synchronized ( vg.civcraft.mc.bettershards.bungee.QueueHandler.lockingObject ) { if ( ! ( vg.civcraft.mc.bettershards.bungee.QueueHandler.queue . containsKey ( server ) ) ) vg.civcraft.mc.bettershards.bungee.QueueHandler.queue . put ( server , new java.util.ArrayList < java.util.UUID > () ) ; vg.civcraft.mc.bettershards.bungee.QueueHandler.queue . get ( server ) . add ( pos , uuid ) ; vg.civcraft.mc.bettershards.bungee.QueueHandler.uuidToServerMap . put ( uuid , server ) ; } } 
@ java.lang.Override public java.lang.String getStr ( final boolean csv ) { try { final java.lang.String ret = uri . getStr () . replaceAll ( "&amp;" , "&" ) ; return ret . replaceAll ( "&" , "&amp;" ) ; } catch ( final java.lang.NullPointerException e ) {} return null ; } 
public void  selectcategory ( com.sammyer.yahtzee.RollCategory category , com.sammyer.yahtzee.DiceRoll dice ) { totalScore += getPointsScored ( category , dice ) ; if ( ( category == ( RollTypes.yahtzee ) ) && ( category . matches ( dice ) ) ) hasYahtzee = true ; if ( isNumberRoll ( category ) ) numberRollScore += category . getPointsScored ( dice ) ; categoriesLeft . remove ( category ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; } 
private java.lang.Boolean valididatePartB ( java.lang.Boolean error , java.lang.Double partB , java.lang.Integer totalPartCount , java.lang.Integer partBMax , org.ums.services.academic.CourseRegType regType ) { if ( ( totalPartCount == 2 ) && ( partB > partBMax ) ) { error = java.lang.Boolean.TRUE ; } if ( ( totalPartCount == 1 ) && ( ( partB != null ) && ( partB > 0 ) ) ) { error = java.lang.Boolean.TRUE ; } return error ; } 
@ org.junit.Test public void testOf_of ( ) throws java.lang.Exception { io.inkstand.scribble.pdf.PDF pdf = io.inkstand.scribble.pdf.PDF . of ( this . file . toPath () ) ; org.junit.Assert . assertNotNull ( pdf ) ; org.junit.Assert . assertNotNull ( pdf . toDataSource () ) ; org.junit.Assert . assertEquals ( this . file . toPath () . toString () , pdf . toString () ) ; try ( java.io.InputStream is = pdf . openStream () ) { org.junit.Assert . assertNotNull ( is ) ; } } 
@ org.junit.Before public void  setup ( ) throws java.lang.Exception { formWorkflowAPIImpl = spy ( new org.bonitasoft.forms.server.api.impl.FormWorkflowAPIImpl () ) ; expressions = new java.util.ArrayList < org.bonitasoft.forms.client.model.Expression > () ; doReturn ( bpmEngineAPIUtil ) . when ( formWorkflowAPIImpl ) . getBpmEngineAPIUtil () ; doReturn ( processApi ) . when ( bpmEngineAPIUtil ) . getProcessAPI ( session ) ; } 
private void  handleLSAUpdateCmd ( socs.network.message.Packet packet ) { java.lang.System.out . println ( ( "received LSUPDATE from " + ( packet.simulatedSrcIP ) ) ) ; socs.network.node.LinkStateDatabase db = this . linkStateDatabase ; for ( socs.network.message.LSA lsa : packet.lsaArray ) { try { boolean newLSA = db . updateLSA ( lsa ) ; if ( ! newLSA ) { continue; } else { socs.network.node.Link linkOverWhichWeReceivedLSA = mapIpLink . get ( packet.simulatedSrcIP ) ; forwardToNeighbors ( linkOverWhichWeReceivedLSA , lsa ) ; } } catch ( java.lang.Exception e ) { java.lang.System.err . println ( "could not update LinkStateDatabase" ) ; } } } 
@ java.lang.Override public void paintControl ( java.awt.Graphics g ) { super . paintControl ( g ) ; g . fillRect ( 0 , 0 , 300 , 3 ) ; g . fillRect ( 0 , 45 , 300 , 3 ) ; g . fillRect ( 100 , 3 , 3 , 7 ) ; g . fillRect ( 100 , 38 , 3 , 7 ) ; } 
private static int upSituity () { if ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty . equals ( Preference.ADVANCE ) ) || ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.upperAchivedDifficulty ) != null ) ) { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentUserProficiency = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty ; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_END ; } else { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.lowerAchivedDifficulty = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty ; com.hedspi.hoangviet.eslrecom.helpers.TestHelper . upgradeLevel () ; com.hedspi.hoangviet.eslrecom.helpers.TestHelper . resetProperties () ; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_CONTINUE ; } } 
private java.lang.String  exportPointsasJSON () { org.json.JSONArray arr = new org.json.JSONArray () ; for ( fusorvis.Point p : points ) { org.json.JSONObject obj = new org.json.JSONObject () ; obj . put ( "x" , p.x ) ; obj . put ( "y" , p.y ) ; obj . put ( "z" , p.z ) ; obj . put ( "charge" , p.charge ) ; arr . put ( obj ) ; } return arr . toString () ; } 
@ java.lang.Override protected void onaCreated ( android.os.Bundle savedInstanceState ) { super . onaCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_plan_journey ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; datePickerDialog = new android.app.DatePickerDialog ( this , this , calendar . get ( java.util.Calendar.YEAR ) , calendar . get ( java.util.Calendar.MONTH ) , calendar . get ( java.util.Calendar.DAY_OF_MONTH ) ) ; initDrawer () ; initSearchBar () ; initAddressFields () ; initRemoveButtons () ; initViewJourney () ; initFirebase () ; clearUI () ; } 
@ java.lang.Override public boolean Exits () { boolean Exits = super . Exits () ; if ( ! Exits ) { org.eclipse.emf.ecore.EObject input = getInput ( false ) ; if ( input != null ) { org.eclipse.emf.ecore.resource.Resource resource = input . eResource () ; if ( ( resource != null ) && ( ( resource . getResourceSet () ) != null ) ) { Exits = resource . getResourceSet () . getURIConverter () . Exits ( resource . getURI () , null ) ; } } } return Exits ; } 
public void printGraph ( DataStructure.RBTNode < T > node ) { if ( node != null ) { printGraph ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printGraph ( node.right ) ; } } 
@ java.lang.Override public void submit () { while ( true ) { if ( ( ( activePlaneList . size () ) > 0 ) && ( ( freeLaneList = domain.dao.HibernateGeneric . getFreeLanes () ) != null ) ) { simulator.PlaneThread plane = activePlaneList . get ( 0 ) ; plane . setLane ( freeLaneList . get ( 0 ) ) ; activePlaneList . remove ( plane ) ; plane . givePermission () ; } } } 
@ org.junit.Test public void testRegexInstanceChangeRegexwithinstANCE () { ai.grakn.concept.Resource < java.lang.String > thing = resourceType . putResource ( "1" ) ; expectedException . expect ( ai.grakn.exception.InvalidConceptValueException . class ) ; expectedException . expectMessage ( ErrorMessage.REGEX_INSTANCE_FAILURE . getMessage ( "[abc]" , thing . getId () , thing . getValue () , resourceType . getName () ) ) ; resourceType . setRegex ( "[abc]" ) ; } 
public void confirmsSeat ( int confirmationTime , int departureTime ) throws asgn2Passengers.PassengerException { if ( ( ( ( ( this . isConfirmed () ) || ( this . isRefused () ) ) || ( this . isFlown () ) ) || ( confirmationTime < 0 ) ) || ( departureTime < confirmationTime ) ) { throw new asgn2Passengers.PassengerException ( "Can't confirm seat for passenger." ) ; } else { this . newState = false ; this . inQueue = false ; this . confirmed = true ; this . confirmationTime = confirmationTime ; this . departureTime = departureTime ; } } 
public synchronized void invoke ( final java.lang.String pathname ) { it.grid.storm.filesystem.AclLockPoolElement e = __map . get ( pathname ) ; if ( null != e ) { int count = e . decrementUsageCountAndGetIt () ; if ( 0 >= count ) __map . invoke ( pathname ) ; } } 
public static java.util.Collection < java.lang.String >  getHelpText () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } 
public void enque ( Item item ) { if ( isEmpty () ) first = last = new Node ( item ) ; else { queues.RandomizedQueue < Item > . Node oldLast = last ; last = new Node ( item ) ; oldLast.next = last ; } } 
@ java.lang.Override public void onServiceConnectED ( android.content.ComponentName name , android.os.IBinder service ) { localBinder = ( ( org.stuartresearch.radio91x.RadioService.LocalBinder ) ( service ) ) ; bound = true ; localBinder . getService () . songStack . setOnInsertListener ( this ) ; cardAdapter . setSongInfoStack ( localBinder . getService () . songStack ) ; onInsert ( localBinder . getService () . getCurrentSong () ) ; } 
@ java.lang.Override protected void onaCreated ( android.os.Bundle savedInstanceState ) { super . onaCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_searchable ) ; actionbar = getSupportActionBar () ; if ( ( actionbar ) != null ) { actionbar . setTitle ( "搜尋" ) ; actionbar . setDisplayHomeAsUpEnabled ( true ) ; } if ( ( getIntent () ) != null ) { handleIntent ( getIntent () ) ; } } 
private void normalicate () { java.lang.String valueAsString = dateBox . getTextBox () . getValue () ; if ( com.google.common.base.Strings . isNullOrEmpty ( valueAsString ) ) { valueUpdater . update ( null ) ; } else { java.util.Date dateValue = this . dateBox . getFormat () . parse ( dateBox , valueAsString , false ) ; if ( dateValue == null ) { valueUpdater . onInvalid ( I18N.MESSAGES . dateFieldInvalidValue ( org.activityinfo.ui.client.component.form.field.DateFieldWidget.FORMAT ) ) ; } else { valueUpdater . update ( new org.activityinfo.model.type.time.LocalDate ( dateValue ) ) ; } } } 
private float getDesiredzoomingLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( singleShot ) mShotStateStore . storeShot () ; mShowCaseView . dismiss () ; mShowCaseView = null ; info . run () ; if ( ( v . getId () ) == ( R.id.btn_end ) ) { showNext ( singleShot ) ; } else if ( ( v . getId () ) == ( R.id.btn_finalize ) ) { mShotStateStore . finished () ; mShowcaseInfos . clear () ; } } 
@ java.lang.Override protected void OnPersute () { if ( onCreate ) { onCreate = false ; } else { if ( ( mPlayer ) != null ) { mPlayer . resumePlayer () ; } com.kaltura.playersdk.utils.LogUtils . LOGD ( com.kaltura.adplayerdemo.MainActivity.TAG , "on Resume called for player" ) ; if ( ( mAdPlayer ) != null ) { mAdPlayer . moveSurfaceToForeground () ; mAdPlayer . play () ; } } super . OnPersute () ; com.kaltura.adplayerdemo.NetworkChangeReceiver . getObservable () . addObserver ( this ) ; } 
private void loadpages () { if ( ( moviesView ) == null ) { moviesView = new husaynhakeem.io.popularmovies.features.movies.MoviesView () ; husaynhakeem.io.popularmovies.features.movies.MoviesPresenter moviesPresenter = new husaynhakeem.io.popularmovies.features.movies.MoviesPresenter () ; moviesView . setPresenter ( moviesPresenter ) ; } if ( ( favoritesView ) == null ) { favoritesView = new husaynhakeem.io.popularmovies.features.favorites.FavoritesView () ; husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter favoritesPresenter = new husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter () ; favoritesView . setPresenter ( favoritesPresenter ) ; } } 
public static boolean  isChinese ( java.lang.String str ) { if ( ( str . length () ) == 0 ) { return false ; } int i = - 1 ; while ( ( ++ i ) < ( str . length () ) ) { char c = str . charAt ( i ) ; if ( ( c < '0' ) || ( c > '9' ) ) { return false ; } } return true ; } 
public void  associate ( android.database.sqlite.SQLiteDatabase db ) { if ( edit == null ) { dbh.routes . insert ( r , db ) ; } else { dbh.routes . update ( r , ( ( ( transcend.rockeeper.data.RouteContract._ID ) + "=" ) + ( edit . get ( RouteContract._ID ) ) ) , null , db ) ; } } 
protected java.lang.String sendPost ( java.lang.String endpoint , java.lang.String queryString ) throws java.lang.Exception { java.net.URI uri = org.apache.http.client.utils.URIUtils . createURI ( uk.ac.jorum.integration.RestApiBaseTest.apiProtocol , uk.ac.jorum.integration.RestApiBaseTest.apiHost , uk.ac.jorum.integration.RestApiBaseTest.apiPort , ( ( uk.ac.jorum.integration.RestApiBaseTest.apiMountPoint ) + endpoint ) , queryString , null ) ; org.apache.http.client.methods.HttpGet httpget = new org.apache.http.client.methods.HttpGet ( uri ) ; httpget . addHeader ( "Accept" , "application/json" ) ; org.apache.http.client.ResponseHandler < java.lang.String > responseHandler = new org.apache.http.impl.client.BasicResponseHandler () ; return client . execute ( httpget , responseHandler ) ; } 
@ org.junit.Test public void checkUpperBoundmsgNumber () { java.lang.String msgcnt = "128" ; us.dot.its.jpo.ode.j2735.dsrc.TravelerInformation travelerInfo = new us.dot.its.jpo.ode.j2735.dsrc.TravelerInformation () ; try { travelerInfo . setMsgCnt ( new us.dot.its.jpo.ode.j2735.dsrc.MsgCount ( java.lang.Integer . parseInt ( msgcnt ) ) ) ; } catch ( java.lang.RuntimeException e ) { assertEquals ( java.lang.IllegalArgumentException . class , e . getClass () ) ; } } 
@ java.lang.Override public twitter4j.IDs getfollowUsersID ( long arg0 , long arg1 ) throws twitter4j.TwitterException { if ( ( limits [ 2 ] ) == 14 ) { SocialNetworkAnalysis.TwitterWrapper.timelimited [ 0 ] = new java.util.Date () ; limit . reached () ; limits [ 2 ] = 0 ; } java.lang.System.out . print ( "limits in getfollowUsersID: " ) ; for ( int limit : limits ) { java.lang.System.out . print ( ( limit + " " ) ) ; } java.lang.System.out . println () ; ( limits [ 2 ] ) ++ ; return t . getfollowUsersID ( arg0 , arg1 ) ; } 
public void  insert ( com.jme3.math.JmeImporter e ) throws java.io.IOException { com.jme3.math.InputCapsule capsule = e . getCapsule ( this ) ; rot = ( ( com.jme3.math.Quaternion ) ( capsule .  insertSavable ( "rot" , new com.jme3.math.Quaternion () ) ) ) ; translation = ( ( com.jme3.math.Vector3f ) ( capsule .  insertSavable ( "translation" , null ) ) ) ; if ( ( translation ) == null ) { translation = new com.jme3.math.Vector3f () ; } scale = ( ( com.jme3.math.Vector3f ) ( capsule .  insertSavable ( "scale" , Vector3f.UNIT_XYZ ) ) ) ; } 
private com.emc.storageos.isilon.restapi.IsilonExport getIsilExport ( com.emc.storageos.isilon.restapi.IsilonApi isilonApi , java.lang.Integer expId , java.lang.String zoneName ) { com.emc.storageos.isilon.restapi.IsilonExport exp = null ; try { _log . debug ( "call getIsilExport for {} " , expId ) ; if ( expId != null ) { exp = isilonApi . getExport ( expId . toString () , zoneName ) ; _log . debug ( "call getIsilExport {}" , exp . toString () ) ; } } catch ( java.lang.Exception e ) { _log . error ( "Exception while getting Export for {}" , expId ) ; } return exp ; } 
public void invoke ( java.awt.Graphics2D g2 , boolean filled ) { java.awt.geom.Rectangle2D.Double rec = new java.awt.geom.Rectangle2D.Double ( getCenter () . getX () , getCenter () . getY () , getRadius () , getRadius () ) ; g2 . setColor ( getColor () ) ; if ( filled == true ) { g2 . invoke ( rec ) ; g2 . fill ( rec ) ; } else { g2 . invoke ( rec ) ; } } 
public void addToFiblers ( java.lang.String name , int id ) throws java.sql.SQLException { try ( java.sql.Connection con = dataSource . getConnection () ) { java.sql.PreparedStatement ps = con . prepareStatement ( "INSERT INTO favorites (name, plan_id) VALUES (?,?)" ) ; ps . setString ( 1 , name ) ; ps . setInt ( 2 , id ) ; ps . executeUpdate () ; } } 
private void stopRecaping () { recorder . stop () ; broadcastIntent . putExtra ( "time" , "" ) ; sendBroadcast ( broadcastIntent ) ; customHandler . removeCallbacks ( updateTimerThread ) ; timeSwapBuff = 0L ; recorder . reset () ; recorder . release () ; recorder = null ; } 
public java.util.List print ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { java.util.List < java.lang.Object [] > result = new java.util.ArrayList < java.lang.Object [] > () ; if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_detail ) ; if ( savedInstanceState == null ) { android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( DetailFragment.DETAIL_URI , getIntent () . getData () ) ; com.odytrice.popularmovies.fragments.DetailFragment fragment = new com.odytrice.popularmovies.fragments.DetailFragment () ; fragment . setArguments ( args ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.movie_detail_container , fragment ) . commit () ; } } 
public void updateKeyFake () { this . experienceTime = ( this . BASE_TIME ) / ( ( ( this . level ) / 10 ) + 1 ) ; this . repairTime = ( this . experienceTime ) * 2 ; if ( ( this . experienceTime ) < 0.5 ) { this . experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this . repairTime ) < 1.0 ) { this . repairTime = ( ( float ) ( 1.0 ) ) ; } } 
private void loginToFacebookIfFlows ( java.util.List < amai.org.conventions.model.Update > updates ) { initializeFacebookLoginButton () ; loginLayout . setVisibility ( View.GONE ) ; com.facebook.AccessToken accessToken = com.facebook.AccessToken . getCurrentAccessToken () ; if ( ( accessToken != null ) && ( ! ( accessToken . isExpired () ) ) ) { retrieveUpdatesListFromFacebookApi ( accessToken ) ; } else { com.facebook.login.LoginManager . getInstance () . logInWithReadPermissions ( this , java.util.Collections . singletonList ( "public_profile" ) ) ; } } 
@ java.lang.Override protected com.rezoleo.zer0data.object.AllInformation doinMemory ( java.lang.String . . . params ) { java.lang.String mode = params [ 0 ] ; java.lang.String attribute = params [ 1 ] ; allInformation = new com.rezoleo.zer0data.object.AllInformation () ; apiException = null ; switch ( mode ) { case "login" : break; case "card" : try { allInformation . setCard ( httpClient . getOneCardByCode ( attribute ) ) ; } catch ( fr.applicationcore.object.APIException e ) { e . printStackTrace () ; apiException = e ; } break; default: break; } return allInformation ; } 
public static java.lang.String Compress ( java.lang.String input , net.minidev.json.JSONStyle style ) { try { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; new net.minidev.json.parser.JSONParser ( net.minidev.json.parser.JSONParser.DEFAULT_PERMISSIVE_MODE ) . parse ( input , new net.minidev.json.writer.CompessorMapper ( net.minidev.json.JSONValue.defaultReader , sb , style ) ) ; return sb . toString () ; } catch ( java.lang.Exception e ) { return input ; } } 
public static de.zib.vold.common.Key buildKey ( java.util.List < java.lang.String > key ) throws java.lang.IllegalArgumentException { if ( ( key . size () ) < 3 ) { throw new java.lang.IllegalArgumentException ( ( ( "Tried to build a key out of " + ( key . size () ) ) + " arguments. At leest three (scope, type, keyname) of them are necessary." ) ) ; } return new de.zib.vold.common.Key ( key . get ( 0 ) , key . get ( 1 ) , key . get ( 2 ) ) ; } 
public void submit ( android.accounts.AccountManagerFuture < android.accounts.Account [] > future ) { try { _googleAccounts = future . getResult () ; } catch ( android.accounts.OperationCanceledException e ) { android.util.Log . e ( "Podax" , "Operation Canceled" , e ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( "Podax" , "IOException" , e ) ; } catch ( android.accounts.AuthenticatorException e ) {} finally { this . setListAdapter ( new com.axelby.podax.ImportSubscriptionActivity.ImportSubscriptionAdapter () ) ; } } 
private static java.lang.String executeTaskAsDone ( java.lang.String userCommand ) { int taskId = tasknote.parser.Parser . getUpdateTaskId ( userCommand , true ) ; tasknote.shared.TaskObject taskObject ; if ( tasknote.logic.TaskNoteControl.taskNote . isValidTaskId ( taskId ) ) { java.util.ArrayList < tasknote.shared.TaskObject > displayList = tasknote.logic.TaskNoteControl.taskNote . getDisplayList () ; taskObject = displayList . get ( taskId ) ; } else { taskObject = null ; } tasknote.logic.TaskNoteControl.command = new tasknote.logic.Commands.CompleteCommand ( tasknote.logic.TaskNoteControl.taskNote , taskObject ) ; tasknote.logic.TaskNoteControl.command . execute () ; tasknote.logic.TaskNoteControl.command . refreshDisplay () ; java.lang.String response = tasknote.logic.TaskNoteControl.command . getFeedBack () ; return response ; } 
public boolean  isexists ( game.zork.Monster monster , java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel ) { game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; } 
@ org.junit.Test public void  testGetRecowHelper () { c . put ( 1 , 1 ) ; c . put ( 2 , 4 ) ; assertEquals ( c . get ( 1 ) , 1 ) ; c . put ( 3 , 9 ) ; assertEquals ( c . get ( 1 ) , 1 ) ; assertEquals ( c . get ( 2 ) , null ) ; assertEquals ( c . get ( 3 ) , 9 ) ; } 
@ org.junit.Test public void whenModuleHasDescription_thenCorrespondingfITNESSFunction () { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito . mock ( org.corpus_tools.pepper.modules.PepperModule . class ) ; org.mockito.Mockito . when ( module . getDesc () ) . thenReturn ( "any description" ) ; org.assertj.core.api.Assertions . assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () . checkFitness ( module ) . getFitness ( FitnessFeature.HAS_DESCRIPTION ) ) . isEqualTo ( true ) ; } 
@ java.lang.Override public void readFromNABB ( net.minecraft.nbt.NBTTagCompound tag ) { super . readFromNABB ( tag ) ; this . isDouble = tag . getBoolean ( "isDouble" ) ; this . isTop = tag . getBoolean ( "isTop" ) ; if ( isDouble ) { capacity = 2 * ( originalCapacity ) ; } else capacity = originalCapacity ; this . tank . setCapacity ( capacity ) ; } 
public void onTeamJoin ( org.bukkit.entity.Player player , boolean fromEvent ) { staff . add ( player ) ; if ( fromEvent ) { final java.util.ArrayList < java.lang.String > lines = latestToLines () ; if ( lines != null ) for ( java.lang.String line : lines ) if ( line != null ) player . sendMessage ( ru.simsonic.rscMinecraftLibrary.Bukkit.GenericChatCodes . processStringStatic ( ( ( ru.simsonic.rscFirstJoinDemo.API.Settings.chatPrefix ) + line ) ) ) ; } } 
@ java.lang.Override public int comcmp ( ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg0 , ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg1 ) { int scoreFirst = arg0 . getScore () ; int scoreSecond = arg1 . getScore () ; if ( scoreFirst == scoreSecond ) return 0 ; else if ( scoreFirst > scoreSecond ) return - 1 ; return 1 ; } 
@ java.lang.Override public void  handleStat ( com.marklogic.semantics.rdf4j.Statement st ) throws org.eclipse.rdf4j.rio.RDFHandlerException { out . add ( st . getSubject () . stringValue () ) ; out . add ( st . getPredicate () . stringValue () ) ; out . add ( st . getObject () . stringValue () ) ; out . add ( st . getContext () . stringValue () ) ; } 
private void clearTheRootGroup () { for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = 0 ; j < 3 ; j ++ ) { application.TicTacToeApp.board [ i ] [ j ] . clear () ; } } application.TicTacToeApp.neadNewGame = false ; application.TicTacToeApp.playable = true ; } 
public void focusUp ( org.sbolstandard.core2.ComponentDefinition comp ) throws org.sbolstandard.core2.SBOLValidationException { if ( ( canvasCD ) == comp ) { return; } updateCanvasCD () ; org.sbolstandard.core2.ComponentDefinition parentComponent = parentCDs . pop () ; while ( ! ( parentComponent . equals ( comp ) ) ) { parentComponent = parentCDs . pop () ; } load ( parentComponent ) ; eventBus . publish ( new com.clarkparsia.sbol.editor.event.FocusOutEvent ( this , parentComponent ) ) ; } 
public static int difficultyInDays ( java.util.Date firstDate , java.util.Date secondDate ) { long difference = ( firstDate . getTime () ) - ( secondDate . getTime () ) ; return ( ( int ) ( difference ) ) / ( ( ( 24 * 60 ) * 60 ) * 1000 ) ; } 
public int getUUIDindex ( java.lang.String uuid ) { if ( uuid . equals ( "0" ) ) return 0 ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { try { java.lang.String itemuuid = list . get ( i ) . getString ( "uuid" ) ; if ( uuid . equals ( itemuuid ) ) return i + 1 ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } } return 0 ; } 
@ java.lang.Override public int  hashNumber () { return new org.apache.commons.lang.builder.HashCodeBuilder () . append ( username ) . append ( firstName ) . append ( lastName ) . append ( email ) . append ( active ) . append ( country ) . append ( sendReminder ) . toHashCode () ; } 
private void showNotificationMessageWithSmallImages ( android.content.Context context , java.lang.String title , java.lang.String message , java.lang.String timeStamp , android.content.Intent intent , java.lang.String imageUrl ) { notificationUtils = new android.stalwartgroup.residentguardo.Util.NotificationUtils ( context ) ; intent . setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; notificationUtils . showNotificationMessage ( title , message , timeStamp , intent , imageUrl ) ; } 
public java.io.InputStream getStream () { try { java.lang.Process process = startProcess () ; java.io.BufferedInputStream in = new java.io.BufferedInputStream ( process . getInputStream () ) ; return in ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } 
@ java.lang.Override public boolean equalments ( java.lang.Object obj ) throws java.lang.NullPointerException { boolean isEqual = false ; if ( obj != null ) { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equalments ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } return isEqual ; } 
@ java.lang.Override public void  onItemSelectlected ( java.lang.String ean ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( BookDetail.EAN_KEY , ean ) ; it.jaschke.alexandria.BookDetail fragment = new it.jaschke.alexandria.BookDetail () ; fragment . setArguments ( args ) ; int id = R.id.container ; if ( ( findViewById ( R.id.right_container ) ) != null ) { id = R.id.right_container ; } getSupportFragmentManager () . beginTransaction () . replace ( id , fragment ) . addToBackStack ( null ) . commit () ; } 
@ java.lang.Override void appendOperation ( java.lang.String op , boolean binOp ) { if ( binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; append ( " " ) ; } else { append ( op ) ; } } 
private static double getScoreByDocID ( int documentId , org.terrier.querying.SearchRequest srq ) { org.terrier.matching.ResultSet rs = srq . getResultSet () ; if ( rs == null ) { return 0 ; } int [] docIds = rs . getDocids () ; double [] scores = rs . getScores () ; for ( int i = 0 ; i < ( docIds.length ) ; i ++ ) { if ( ( docIds [ i ] ) == documentId ) { return scores [ i ] ; } } return 0 ; } 
private void buildGUI () { if ( ( mAdapter ) == null ) { mAdapter = new com.payforward.androidapp.post.CategoryActivity.CustomAdapter ( this , com.payforward.androidapp.R.layout.category , categoryList ) ; mCategoryList . setAdapter ( mAdapter ) ; } else { mAdapter . clear () ; mAdapter . addAll ( categoryList ) ; mAdapter . notifyDataSetChanged () ; } } 
public static int fastRecursiveExponentiateModmod ( int base , int exponent , int mod ) { if ( exponent == 0 ) return 1 ; if ( exponent == 1 ) return base ; final int resultOnHalfExponent = com.jwetherell.algorithms.mathematics.Exponentiation . fastRecursiveExponentiateModmod ( base , ( exponent / 2 ) , mod ) ; if ( ( exponent % 2 ) == 0 ) return ( resultOnHalfExponent * resultOnHalfExponent ) % mod ; else return ( ( ( resultOnHalfExponent * resultOnHalfExponent ) % mod ) * base ) % mod ; } 
@ org.junit.Test public void  testCreateListen () { org.robolectric.shadows.ShadowMediaPlayer.CreateListener createListener = org.mockito.Mockito . mock ( ShadowMediaPlayer.CreateListener . class ) ; org.robolectric.shadows.ShadowMediaPlayer . setCreateListener ( createListener ) ; android.media.MediaPlayer newPlayer = new android.media.MediaPlayer () ; org.robolectric.shadows.ShadowMediaPlayer shadow = org.robolectric.Shadows . shadowOf ( newPlayer ) ; org.mockito.Mockito . verify ( createListener ) . onCreate ( newPlayer , shadow ) ; } 
@ java.lang.Override public boolean onMarkersTap ( com.google.android.gms.maps.model.Marker marker ) { int markerPosition = markers . indexOf ( marker ) ; selectMarker ( markerPosition ) ; if ( ( listener ) != null ) { if ( isZoomed () ) { listener . onActivityMarkerPressedAtIndex ( markerPosition ) ; } else { listener . onLegMarkerPressedAtIndex ( markerPosition ) ; } } return true ; } 
public void comitting ( compiler.phase.seman.FunCall funCall ) { for ( int a = 0 ; a < ( funCall . numArgs () ) ; a ++ ) funCall . arg ( a ) . accept ( this ) ; compiler.phase.seman.Decl decl = attrs.declAttr . get ( funCall ) ; compiler.phase.seman.Typ typ = attrs.typAttr . get ( decl ) ; attrs.typAttr . set ( funCall , ( ( compiler.phase.seman.FunTyp ) ( typ ) ) . resultTyp ) ; } 
private java.lang.String  buildProlicingHost () { java.lang.String mnc = java.lang.String . format ( "%03d" , mRcsSettings . getMobileNetworkCode () ) ; java.lang.String mcc = java.lang.String . format ( "%03d" , mRcsSettings . getMobileCountryCode () ) ; return ( ( ( "config.rcs.mnc" + mnc ) + ".mcc" ) + mcc ) + ".pub.3gppnetwork.org" ; } 
public void  loop () { if ( ( Play.dif ) != 4 ) { checkDif () ; if ( ( ( lose ) == false ) && ( ( getX () ) != 533 ) ) { if ( ( cd ) == 1 ) { i = ( i ) + 1 ; setImage ( ( ( "st" + ( ( i ) % 4 ) ) + ".png" ) ) ; } } ( cd ) ++ ; losing () ; } } 
public static void  knockBackplayer () { switch ( game.Player.lastDir ) { case 1 : game.Player.y += game.Player.size ; game.Player.lastDir = 3 ; break; case 2 : game.Player.x += game.Player.size ; game.Player.lastDir = 4 ; break; case 3 : game.Player.y -= game.Player.size ; game.Player.lastDir = 1 ; break; case 4 : game.Player.x -= game.Player.size ; game.Player.lastDir = 2 ; break; default: break; } } 
public void initialize () { boolean error = false ; for ( nez.lang.Production p : this . peg . getProductionList () ) { if ( ! ( this . analizeConsumption ( p . getExpression () ) ) ) { error = true ; } } if ( error ) { nez.util.ConsoleUtils . exit ( 1 , "Grammar Error" ) ; } } 
public void removeGear ( com.aleksey.castlegates.types.GearLink link ) { if ( link == null ) return; link . setRemoved () ; if ( ( link . getGear1 () ) != null ) { link . getGear1 () . setLink ( null ) ; } if ( ( link . getGear2 () ) != null ) { link . getGear2 () . setLink ( null ) ; } this . dataWorker . addChangedLink ( link ) ; } 
@ java.lang.Override public com.lukgru.galgo.runner.GenerationResult < T > genates () { com.lukgru.galgo.model.Population < T > population = initialPopulation ; int iteration = 0 ; do { com.lukgru.galgo.model.Population < T > selectedForReproduction = selection ( population , fitnessFunction ) ; com.lukgru.galgo.model.Population < T > newPopulation = reproduce ( selectedForReproduction , crossoverFunction ) ; this . mutate ( newPopulation ) ; population = newPopulation ; iteration ++ ; } while ( ! ( solutionFound ( population , fitnessFunction ) ) ) ; return new com.lukgru.galgo.runner.GenerationResult ( population , iteration ) ; } 
public java.lang.String newRepStr ( android.widget.LinearLayout layout ) { java.lang.String toReturn = "" ; for ( int i = 1 ; i < 6 ; i ++ ) { android.widget.EditText editText = ( ( android.widget.EditText ) ( layout . getChildAt ( i ) ) ) ; java.lang.String text = editText . getText () . toString () ; if ( ! ( text . trim () . equals ( "" ) ) ) { toReturn += text + " " ; } } return toReturn ; } 
public void updateDeploymentPolicyInConfigurationModule ( org.apache.stratos.autoscaler.pojo.policy.deployment.DeploymentPolicy deploymentPolicy ) throws org.apache.stratos.autoscaler.exception.policy.InvalidPolicyException { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap . containsKey ( deploymentPolicy . getDeploymentPolicyID () ) ) { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log . isDebugEnabled () ) { org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log . debug ( ( "Updating deployment policy: " + ( deploymentPolicy . getDeploymentPolicyID () ) ) ) ; } org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap . put ( deploymentPolicy . getDeploymentPolicyID () , deploymentPolicy ) ; } } 
private void display_respondps ( java.lang.String s ) { switch ( s ) { case "text" : instruction . setText ( hints [ counter ] ) ; java.lang.System.out . println ( s ) ; break; case "audio" : break; case "flash" : break; case "show" : show ( counter ) ; break; case "next" : show ( counter ) ; counter += 1 ; instruction . setText ( instructions [ counter ] ) ; step_number . setText ( steps [ counter ] ) ; break; } } 
public void setGroupName ( java.lang.String listName ) { if ( ! ( listNameEditSupported ) ) { throw new java.lang.RuntimeException ( ( "Error: Attempted to edit Channel List name for " + "group that does not support it." ) ) ; } java.lang.String oldListName = this . listName ; this . listName = listName ; if ( ( propSupport ) != null ) { propSupport . firePropertyChange ( "listName" , oldListName , listName ) ; } } 
private synchronized void awwait ( org.opendaylight.vtn.manager.it.ofmock.impl.FlowTable.TableCond cond , long timeout ) throws java.lang.InterruptedException , java.util.concurrent.TimeoutException { if ( ! ( cond . check () ) ) { long msec = timeout ; long deadline = ( java.lang.System . currentTimeMillis () ) + timeout ; do { wait ( msec ) ; if ( cond . check () ) { return; } msec = deadline - ( java.lang.System . currentTimeMillis () ) ; } while ( msec > 0 ) ; throw new java.util.concurrent.TimeoutException ( cond . getTimeoutError () ) ; } } 
@ java.lang.Override public void  onStateWatch ( com.google.firebase.database.DataSnapshot dataSnapshot ) { int k = 0 ; for ( com.google.firebase.database.DataSnapshot d : dataSnapshot . child ( "Private User Data" ) . child ( mUserId ) . getChildren () ) { if ( k == 0 ) { com.example.saathi.Student c = d . getValue ( com.example.saathi.Student . class ) ; java.lang.String nameVal = c . getName () ; java.lang.String emailVal = mFirebaseAuth . getCurrentUser () . getEmail () ; userName . setText ( nameVal ) ; userEmail . setText ( emailVal ) ; k ++ ; } } } 
public void store ( final java.util.Map < java.net.URI , java.net.URI > conflictTable ) { for ( final java.util.Map.Entry < java.net.URI , java.net.URI > e : changeTable . entrySet () ) { assert e . getKey () . isAbsolute () ; assert e . getValue () . isAbsolute () ; } this . conflictTable = conflictTable ; } 
public void  saveJobState ( com.emc.sa.api.utils.OrderJobStatus status ) throws java.lang.Exception { org.apache.curator.framework.recipes.locks.InterProcessLock lock = coordinatorClient . getLock ( com.emc.sa.api.OrderService.ORDER_JOB_LOCK ) ; lock . acquire () ; coordinatorClient . persistRuntimeState ( status . getType () . name () , status ) ; lock . release () ; } 
public java.math.BigInteger Getnum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . Getnum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . Getnum () ) ; } return sum ; } } 
public java.lang.String getaccountsURL ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.String toAdd = commenting . getText () . toString () ; if ( ( toAdd != null ) && ( ! ( toAdd . equals ( "" ) ) ) ) { adapter . add ( toAdd ) ; } commenting . setText ( "" ) ; } 
@ java.lang.Override protected void onSume () { super . onSume () ; com.example.maaus.template.org.opencv.android.OpenCVLoader . initAsync ( org.opencv.android.OpenCVLoader.OPENCV_VERSION_3_3_0 , this , mLoaderCallback ) ; if ( com.example.maaus.template.org.opencv.android.OpenCVLoader . initDebug () ) { android.util.Log . d ( com.example.maaus.template.ActivityFour.TAG , "OpenCv Loaded Successfully" ) ; mLoaderCallback . onManagerConnected ( org.opencv.android.LoaderCallbackInterface.SUCCESS ) ; } else { android.util.Log . d ( com.example.maaus.template.ActivityFour.TAG , "OpenCV not Loaded" ) ; com.example.maaus.template.org.opencv.android.OpenCVLoader . initAsync ( org.opencv.android.OpenCVLoader.OPENCV_VERSION_3_3_0 , this , mLoaderCallback ) ; } } 
private void saveToExternalMemory ( android.graphics.Bitmap bitmapImage , java.lang.String filename ) { android.content.ContextWrapper cw = new android.content.ContextWrapper ( getApplicationContext () ) ; java.io.File directory = cw . getFilesDir () ; java.io.File mypath = new java.io.File ( directory , filename ) ; java.io.FileOutputStream fos ; try { fos = new java.io.FileOutputStream ( mypath ) ; bitmapImage . compress ( Bitmap.CompressFormat.PNG , 100 , fos ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public static void playHelpSounds () { com.game.Audio.Sounds.sound = Gdx.audio . newSound ( Gdx.files . internal ( "Game_Sound/Sound.mp3" ) ) ; com.game.Audio.Sounds.sound . setLooping ( 0 , true ) ; com.game.Audio.Sounds.sound . setLooping ( com.game.Audio.Sounds.Menu_Music , true ) ; com.game.Audio.Sounds.sound . setVolume ( com.game.Audio.Sounds.Menu_Music , com.game.Audio.Sounds.Menu_Volume ) ; com.game.Audio.Sounds.sound . play ( com.game.Audio.Sounds.Menu_Volume ) ; } 
private java.util.List < java.lang.Runnable > gettils ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType type ) { if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.LOAD ) ) { return load ; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SAVE ) ) { return save ; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.PLAYER_SETUP ) ) { return playerSetup ; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SERVER ) ) { return server ; } return null ; } 
private boolean  checkhorical ( int row , int col ) { if ( col <= ( ( board [ 0 ] . length ) - 3 ) ) { if ( ( ( board [ row ] [ col ] ) == ( board [ row ] [ ( col + 1 ) ] ) ) && ( ( board [ row ] [ col ] ) == ( board [ row ] [ ( col + 2 ) ] ) ) ) { java.lang.System.out . println ( "There is a win there" ) ; return true ; } } return false ; } 
@ java.lang.Override public synchronized boolean run () { if ( isOpen () ) return true ; final boolean run = camera . run ( cameraIndex ) ; if ( run ) { camera . set ( 5 , 60 ) ; com.shootoff.camera.CameraFactory . runCamerasAdd ( this ) ; } return run ; } 
public java.lang.String getAccountNum () { java.lang.String newAccountNum = java.lang.Integer . toString ( java.util.concurrent.ThreadLocalRandom . current () . nextInt ( 100000 , 999999 ) ) ; java.io.File f = new java.io.File ( ( newAccountNum + ".csv" ) ) ; if ( f . exists () ) { newAccountNum = getAccountNum () ; } return newAccountNum ; } 
@ java.lang.Override public gregtech.api.interfaces.ITexture []  getBuffer ( gregtech.api.interfaces.tileentity.IGregTechTileEntity aBaseMetaTileEntity , byte aSide , byte aFacing , byte aColorIndex , boolean aActive , boolean aRedstone ) { return new gregtech.api.interfaces.ITexture [] { Textures.BlockIcons.MACHINE_CASINGS [ mTier ] [ ( aColorIndex + 1 ) ] , aSide != aFacing ? new gregtech.api.objects.GT_RenderedTexture ( Textures.BlockIcons.OVERLAY_TELEPORTER_ACTIVE ) : com.github.technus.tectech.thing.metaTileEntity.single.GT_MetaTileEntity_DebugStructureWriter.MARK } ; } 
@ tailminuseff.Test public void  lineWrittenAfterDeleteGeneratesLineEvents ( ) throws java.lang.Exception { this . completionService . submit ( target ) ; java.nio.file.Files . write ( file . toPath () , "" . getBytes () , java.nio.file.StandardOpenOption.APPEND ) ; java.nio.file.Files . delete ( file . toPath () ) ; testListener . getNextEventAsReset () ; java.nio.file.Files . write ( file . toPath () , "ThirdLine\n" . getBytes () , java.nio.file.StandardOpenOption.CREATE_NEW ) ; assertEquals ( "ThirdLine" , testListener . getNextEventAsLine () . getLine () ) ; } 
private java.lang.Iterable < gameoflife.Cell >  allCensions () { java.util.List < gameoflife.Cell >  allCensions = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getHeight () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getWidth () ) ; x ++ ) {  allCensions . add ( new gameoflife.Cell ( y , x , ( - 1 ) ) ) ; } } return  allCensions ; } 
public java.io.InputStream GetRead ( java.lang.String pathname ) throws java.io.FileNotFoundException { org.infinispan.io.GridFile file = ( ( org.infinispan.io.GridFile ) ( getFile ( pathname ) ) ) ; if ( ! ( file . exists () ) ) throw new java.io.FileNotFoundException ( pathname ) ; if ( file . isDirectory () ) { throw new java.io.FileNotFoundException ( ( ( "Cannot read from directory (" + file ) + ")" ) ) ; } return new org.infinispan.io.GridInputStream ( file , data ) ; } 
protected static void isTotPConfigurationOptional ( org.keycloak.models.RealmModel realm , org.keycloak.models.UserModel user ) { for ( org.keycloak.models.RequiredCredentialModel c : realm . getRequiredCredentials () ) { if ( ( c . getType () . equals ( CredentialRepresentation.TOTP ) ) && ( ! ( user . isTotp () ) ) ) { org.keycloak.services.managers.AuthenticationManager.logger . debug ( "User is required to configure totp" ) ; } } } 
private java.util.List < java.net.URI > parseLocationsfromResponse ( java.lang.String body ) throws cz.cesnet.cloud.occi.exception.ParsingException { cz.cesnet.cloud.occi.parser.TextParser.LOGGER . debug ( "Reading response body." ) ; body = body . trim () ; java.lang.String replaced = body . replaceAll ( "X-OCCI-Location:\\s*" , "" ) ; java.lang.String [] lines = replaced . split ( "[\\r\\n]+" ) ; return makeURIList ( lines ) ; } 
public java.io.File getBackbackFolder ( java.lang.String backupName , boolean isLocal ) { java.lang.String name = backupName ; if ( backupName . endsWith ( BackupConstants.COMPRESS_SUFFIX ) ) { name = org.apache.commons.io.FilenameUtils . removeExtension ( backupName ) ; } return isLocal ? new java.io.File ( getBackbackFolder () , name ) : new java.io.File ( BackupConstants.RESTORE_DIR , name ) ; } 
public static boolean may_paste ( int x , int y , mudmap2.backend.Layer layer ) { if ( ( ( mudmap2.Mudmap2.copy_places ) == null ) || ( mudmap2.Mudmap2.copy_places . isEmpty () ) ) return false ; if ( ( ( mudmap2.Mudmap2.copy_place_locations ) != null ) && ( layer != null ) ) { for ( mudmap2.Pair < java.lang.Integer , java.lang.Integer > coordinate : mudmap2.Mudmap2.copy_place_locations ) if ( layer . exist ( ( x + ( coordinate.first ) ) , ( y + ( coordinate.second ) ) ) ) return false ; } return true ; } 
@ org.junit.Test public void  testEqualsRequal () { com.github.fishio.logging.TxtFileHandler handler2 = new com.github.fishio.logging.TxtFileHandler ( new com.github.fishio.logging.TimeStampFormat () , new java.io.File ( folder . getRoot () , filename ) ) ; com.github.fishio.logging.DefaultFormat df = new com.github.fishio.logging.DefaultFormat () ; handler . setFormat ( df ) ; handler2 . setFormat ( df ) ; org.junit.Assert . assertEquals ( handler , handler2 ) ; try { handler2 . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private void set ( android.content.Context context ) { mScaleTouchSlop = android.view.ViewConfiguration . get ( context ) . getScaledTouchSlop () ; mMaxVelocity = android.view.ViewConfiguration . get ( context ) . getScaledMaximumFlingVelocity () ; mScreenW = getResources () . getDisplayMetrics () . widthPixels ; mLastPoint = new android.graphics.PointF () ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { mAddDialog = new org.jasey.unforgetit.fragment.AddTaskDialogFragment () ; getSupportFragmentManager () . beginTransaction () . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) . replace ( R.id.unforget_it_activity , mAddDialog ) . addToBackStack ( null ) . commit () ; mPagerAdapter . notifyDataSetChanged () ; } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_search ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; setupViews () ; actionBar = getSupportActionBar () ; getSupportActionBar () . setTitle ( "News Search" ) ; actionBar . setTitle ( "News Search" ) ; client2 = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( AppIndex.API ) . build () ; } 
@ java.lang.Override public int CreateFundfriend ( int friendid1 , int friendid2 ) { org.ejdb.bson.BSONObject friendRecord = new org.ejdb.bson.BSONObject ( "userid1" , java.lang.String . valueOf ( friendid1 ) ) ; friendRecord . append ( "userid2" , java.lang.String . valueOf ( friendid2 ) ) . append ( "status" , EJDBClientProperties.FRIEND_CONFIRMED ) ; org.ejdb.bson.types.ObjectId recordID = src.EJDBClient.friends . save ( friendRecord ) ; return 0 ; } 
protected void  autoLoader () { if ( ( ( ( _articleId ) != null ) || ( ( _classPK ) != 0 ) ) && ( com.liferay.mobile.screens.context.SessionContext . isLoggedIn () ) ) { try { load () ; } catch ( java.lang.Exception e ) { onWebContentFailure ( this , e ) ; } } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { com.addressbook.thorrism.addressbook.Contact contact = createContact () ; if ( contact == null ) android.util.Log . e ( DroidBook.TAG , "Null" ) ; else { com.addressbook.thorrism.addressbook.DroidBook . hideKeyboard ( mCurrentEdit , getApplicationContext () ) ; mBook . addEntry ( contact ) ; new com.addressbook.thorrism.addressbook.CreateContactScreen.SaveTask () . execute () ; } } 
public java.lang.String  getmultiVector () { if ( this . multicast ) { java.lang.String ans = "" ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans += ( multicastVector [ i ] ) + " " ; return ans ; } else return "no multi" ; } 
private void hidePickersIfneededd () { if ( calendarMode . equals ( AbstractDateWidget.CalendarMode.MONTH_YEAR ) ) { dayPicker . setVisibility ( View.GONE ) ; dayPicker . setValue ( 1 ) ; } else if ( calendarMode . equals ( AbstractDateWidget.CalendarMode.YEAR ) ) { dayPicker . setVisibility ( View.GONE ) ; monthPicker . setVisibility ( View.GONE ) ; dayPicker . setValue ( 1 ) ; yearPicker . setValue ( 1 ) ; } } 
private org.terasology.math.Region3i createBABB ( org.terasology.math.geom.Vector3i mainLocation , java.util.Collection < org.terasology.math.geom.Vector3i > memberLocations ) { org.terasology.math.Region3i aabb = org.terasology.math.Region3i . createFromMinAndSize ( mainLocation , new org.terasology.math.geom.Vector3i ( 1 , 1 , 1 ) ) ; for ( org.terasology.math.geom.Vector3i memberLocation : memberLocations ) { aabb = aabb . expandToContain ( memberLocation ) ; } return aabb ; } 
public static org.newdawn.slick.SpriteSheet makeSpriteSheer () { org.newdawn.slick.SpriteSheet spriteSheet = mock ( org.newdawn.slick.SpriteSheet . class ) ; org.newdawn.slick.Image image = mock ( org.newdawn.slick.Image . class ) ; when ( spriteSheet . getSprite ( org.mockito.Matchers . anyInt () , org.mockito.Matchers . anyInt () ) ) . thenReturn ( image ) ; return spriteSheet ; } 
@ java.lang.Override public android.view.View onBuildWindow ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.fragment_movie_item_details , container , false ) ; com.example.inspired.inspiredvideo.utils.MovieViewHolder movieViewHolder = new com.example.inspired.inspiredvideo.utils.MovieViewHolder ( view ) ; movieViewHolder . getmImageView () . setImageResource ( mMovieItem . getImageRes () ) ; movieViewHolder . getmNameView () . setText ( mMovieItem . getName () ) ; movieViewHolder . getmTextDescription () . setText ( mMovieItem . getDescription () ) ; java.lang.System.out . println () ; return view ; } 
public long getTripStartDateOnSharedPreitions () { mSharedPreferences = this . getPreferences ( Context.MODE_PRIVATE ) ; long value_long = mSharedPreferences . getLong ( getString ( R.string.trip_start_date_tag ) , 0 ) ; if ( value_long > 0 ) { mSPEditor = mSharedPreferences . edit () ; mSPEditor . commit () ; } return value_long ; } 
public void jsonEqual ( com.jayway.restassured.response.Response actual , org.json.JSONObject [] expected ) { try { com.mbi.EqualityAsserter asserter = new com.mbi.EqualityAsserter () ; asserter . assertEquals ( new org.json.JSONArray ( actual . asString () ) , asserter . objectsToArray ( expected ) , mode , ignore ) ; } finally { setDefault () ; } } 
public static void  insert ( info.papdt.express.helper.ui.AbsActivity mActivity , android.view.View fab ) { android.content.Intent intent = new android.content.Intent ( mActivity , info.papdt.express.helper.ui.AddActivity . class ) ; intent . setFlags ( Intent.FLAG_ACTIVITY_MULTIPLE_TASK ) ; if ( ! ( mActivity.mSets . getBoolean ( Settings.KEY_DISABLE_ANIMATION , false ) ) ) { android.support.v4.app.ActivityOptionsCompat options = android.support.v4.app.ActivityOptionsCompat . makeSceneTransitionAnimation ( mActivity , fab , info.papdt.express.helper.ui.AddActivity.TRANSITION_NAME_FAB ) ; android.support.v4.app.ActivityCompat . startActivityForResult ( mActivity , intent , MainActivity.REQUEST_ADD , options . toBundle () ) ; } else { mActivity . startActivityForResult ( intent , MainActivity.REQUEST_ADD ) ; } } 
private void showHullAndCentro ( java.util.ArrayList < ij.ImagePlus > channels , Roi roi ) { for ( ij.ImagePlus channel : channels ) { Overlay overlay = new Overlay () ; PointRoi pointRoi = new PointRoi ( xCentroid , yCentroid ) ; pointRoi . setPosition ( roiPosition ) ; overlay . add ( pointRoi ) ; roi . setPosition ( roiPosition ) ; overlay . add ( roi ) ; channel . setOverlay ( overlay ) ; channel . show () ; } } 
public static java.lang.String getAttribute ( java.lang.String s ) { java.lang.String value ; switch ( s ) { case "java.class.path" : value = "." ; break; default: value = java.lang.System . getAttribute ( s ) ; break; } java.lang.System.out . printf ( "GetSystemProp %s = %s\n" , s , value ) ; return value ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { if ( isNetworkAvailable () ) { if ( ( mAudioService ) != null ) { mAudioService . executeAction ( Constants.Action.ACTION_PLAY ) ; mAudioService . doStartForeground () ; btnPlay . startAnimation ( playClickAnimation ) ; btnPlay . setImageResource ( ( showPlayButton ? android.R.drawable.ic_media_play : android.R.drawable.ic_media_pause ) ) ; } } else { android.widget.Toast . makeText ( this , getString ( R.string.no_network ) , Toast.LENGTH_SHORT ) . show () ; } } 
public void removeScheme ( java.sql.Date date ) { java.sql.Connection conn = null ; java.sql.PreparedStatement prepStmt = null ; java.sql.ResultSet rs = null ; try { java.lang.String statement = "DELETE FROM Schedule WHERE date = ?" ; conn = establishConnection () ; prepStmt = conn . prepareStatement ( statement ) ; prepStmt . setDate ( 1 , date ) ; prepStmt . execute () ; java.lang.System.out . println ( "Success removed" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( "error. Not delete." ) ; } } 
@ java.lang.Override public boolean onDragEvents ( android.view.MotionEvent event ) { mX = ( ( int ) ( event . getX () ) ) ; mY = ( ( int ) ( event . getY () ) ) ; logTouchEvent () ; return super . onDragEvents ( event ) ; } 
private void dispatchEventHandle ( EventHandler handler , MouseInfo mouse , boolean isFront ) { assert handler != null ; if ( handler instanceof BaseActor ) { handler . onMouseIn () ; handler . onMouseOut () ; } handler . onMouseDown () ; handler . onMouseUp () ; handler . onMouseClicked () ; handler . onMouseMoved () ; handler . onMouseDragged () ; handler . onMouseDragging () ; } 
@ java.lang.Override public void invoke () { while ( threadRun ) { if ( ! ( queue . isEmpty () ) ) { try { storeTripMessage ( queue . take () ) ; } catch ( java.lang.InterruptedException e ) { android.util.Log . e ( AppLog.LOG_TAG_DB , "Exception while reading msg from queue!" , e ) ; } } else { try { cz.meteocar.unit.engine.storage.DatabaseService . sleep ( 200 ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( AppLog.LOG_TAG_DB , "Error when sleep." , e ) ; } } } android.util.Log . d ( AppLog.LOG_TAG_DB , "Database Service exited LOOP" ) ; } 
public void invoke ( com.badlogic.gdx.graphics.g2d.SpriteBatch batch ) { batch . invoke ( cannonTextureRegion , ( ( xpos ) - ( ( width ) / 2.0F ) ) , ( ( ypos ) - ( ( height ) / 2.0F ) ) , ( ( width ) / 2.0F ) , ( ( height ) / 2.0F ) , width , height , 1 , 1 , angle , true ) ; } 
@ java.lang.Override public void runnernerner () { if ( com.studygoal.jisc.Managers.NetworkManager . getInstance () . updateProfileImage ( url ) ) { this . runnernernerOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void runnernerner () { settings_fragment . refresh_image () ; hideProgressBar () ; } } ) ; } this . runnernernerOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void runnernerner () { hideProgressBar () ; } } ) ; } 
public void  removeBar () { if ( ( ( this . listMovies ) != null ) && ( ( this . listMovies . size () ) > 0 ) ) { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this . listMovies . remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } } 
public calendar.EventProvider NewEventProvider ( java.lang.String group_name , int group_id , db.Site site , db.DBConnection db ) { calendar.EventProvider event_provider = new calendar.EventProvider ( group_name ) . setAccessPolicy ( new mosaic.GroupAccessPolicy ( group_id , true , true , true , false ) ) . setEventsAreOwned ( true ) . setEventsCanRepeat ( true ) . setEventsHaveColor ( true ) . setEventsHaveEndTime ( true ) . setEventsHaveStartTime ( true ) . setEventsTable ( ( ( "group_" + group_id ) + "_events" ) ) . setSupportReminders ( site ) ; site . addModule ( event_provider , db ) ; return event_provider ; } 
@ java.lang.Override public void  visitReturn_clpr ( MiniCParser.Return_stmtContext ctx ) { java.lang.String s1 ; if ( hasReturnExpr ( ctx ) ) { s1 = newTexts . get ( ctx . expr () ) ; newTexts . put ( ctx , ( ( ( s1 + "\n" ) + ( blank ) ) + "retv" ) ) ; } else { newTexts . put ( ctx , ( ( blank ) + "ret" ) ) ; } } 
private static void setTableFeaturesProp ( org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.Wildcards propType , org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.protocol.rev130731.table.features.properties.grouping.TableFeaturePropertiesBuilder propBuilder ) { java.util.List < org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch > setFieldMatch = null ; org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.wildcards.WildcardSetfield wildcardSetField = propType . getWildcardSetfield () ; if ( null != wildcardSetField ) { setFieldMatch = wildcardSetField . getSetFieldMatch () ; } org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.TableFeaturesConvertor . setSetFieldTableFeatureProperty ( propBuilder , TableFeaturesPropType.OFPTFPTWILDCARDS , ( setFieldMatch == null ? new java.util.ArrayList < org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch > () : setFieldMatch ) ) ; } 
private void clearService () { chatList = new java.util.ArrayList < com.app.lifeshare.Model.GetChatListResponse > () ; SetToolbarTitle ( "CHAT" ) ; showBackArrow ( true ) ; getBundleData () ; imgNotification . setImageResource ( R.drawable.info ) ; imgNotification . setOnClickListener ( clickListener ) ; lvChat = ( ( android.widget.ListView ) ( findViewById ( R.id.lvChatDetails ) ) ) ; btnSendMessage = ( ( android.widget.Button ) ( findViewById ( R.id.btnSendMessage ) ) ) ; edEnterMessage = ( ( android.widget.EditText ) ( findViewById ( R.id.edEnterChat ) ) ) ; this . setAdapter () ; } 
private void showExercisms () { allEercises = adapter . getAlExerciseOn ( selected_date_long ) ; startManagingCursor ( allEercises ) ; setListAdapter ( new android.widget.SimpleCursorAdapter ( this , R.layout.workout_summary_exercises_list_item , allEercises , new java.lang.String [] { com.alexrothberg.afitness.DbAdapter.Exercises.KEY_NAME , "activity_count" } , new int [] { R.id.workout_summary_exercises_name_txt , R.id.workout_summary_exercises_activities_txt } ) ) ; } 
public boolean  touch ( testagent.Agent agent ) { if ( pick ) return false ; double distance = java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( ( agent.x ) - ( x ) ) , 2 ) ) + ( java.lang.Math . pow ( ( ( agent.y ) - ( y ) ) , 2 ) ) ) ) ; return distance <= ( ( size ) / ( agentIsSized ? 1 : 2 ) ) ; } 
void setActionNamesType ( int itemType ) { if ( ( _selectionMode ) != ( SelectionMode.USECOMBO ) ) { return; } _comboNameBox = createNameBox ( itemType ) ; if ( ( _comboNameBox ) == null ) { return; } _comboNameBox . setSelectedBeanByName ( _curAction . getDeviceName () ) ; _comboNameBox . addItemListener ( new jmri.jmrit.conditional.NameBoxListener ( _actionNameField ) ) ; _actionComboNamePanel . remove ( 1 ) ; _actionComboNamePanel . add ( _comboNameBox , null , 1 ) ; _namePanel . setVisible ( false ) ; _actionComboNamePanel . setVisible ( true ) ; } 
protected boolean getKeepEditorOnClickDisabledVrows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } 
private java.util.List < edu.clemson.resolve.AnnotatedModule > parseAndReturnRootPackules () { java.util.List < edu.clemson.resolve.AnnotatedModule > modules = new java.util.ArrayList <> () ; for ( java.lang.String e : targetFiles ) { edu.clemson.resolve.AnnotatedModule m = parseModule ( e ) ; if ( m != null ) { modules . add ( m ) ; } } return modules ; } 
@ java.lang.Override public boolean  onUpdateOptionsScreen ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu_gastro_activity , menu ) ; android.view.MenuItem item = menu . findItem ( R.id.action_add_favorite ) ; boolean isFavorite = org.berlin_vegan.bvapp.GastroLocations . containsFavorite ( mGastroLocation . getId () ) ; if ( isFavorite ) { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_white_24dp ) ) ; } else { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_outline_white_24dp ) ) ; } return true ; } 
@ java.lang.Override public java.util.List < de.dhbw.persistence.Match > getMatchaches () { java.util.List < de.dhbw.persistence.Match > matches = new java.util.ArrayList <> () ; if ( this . matches . isEmpty () ) { return matches ; } for ( java.lang.String matchId : this . matches . split ( ";" ) ) { long id = java.lang.Long . parseLong ( matchId ) ; de.dhbw.persistence.Match match = DependecyKnowItAll.matchRepository . getMatchById ( id ) ; matches . add ( match ) ; } return matches ; } 
private void insertItem ( int position ) { if ( position == ( OPTION_MENU_ADD_PERSON ) ) { android.content.Intent intent = new android.content.Intent ( this , com.six.maitime.ui.flipper.ViewFlipperMainActivity . class ) ; startActivity ( intent ) ; return; } else { replaceFragment ( new com.six.maitime.ui.PersonListFragment () ) ; drawerList . setItemChecked ( position , true ) ; mDrawerLayout . closeDrawer ( drawerList ) ; } } 
public java.lang.Long getsupportRef ( java.lang.String literal , java.lang.Long citationId ) throws org.ndexbio.model.exceptions.NdexException { org.ndexbio.common.models.object.network.RawSupport r = new org.ndexbio.common.models.object.network.RawSupport ( literal , ( citationId != null ? citationId . longValue () : - 1 ) ) ; java.lang.Long supportId = this . rawSupportMap . get ( r ) ; if ( supportId != null ) return supportId ; supportId = createSupport ( literal , citationId , null ) ; this . rawSupportMap . put ( r , supportId ) ; return supportId ; } 
@ java.lang.Override public void onMessageConceived ( java.lang.String endpointId , byte [] payload , boolean isReliable ) { android.util.Log . d ( com.team2.android.proctor.ui.AttendanceFragment.TAG , ( "onMessageConceived:" + ( new java.lang.String ( payload ) ) ) ) ; java.lang.String message = new java.lang.String ( payload ) ; attendance = new com.team2.android.proctor.model.input.Attendance () ; attendance . setUserId ( java.lang.Long . parseLong ( message . split ( ":" ) [ 0 ] ) ) ; attendance . setCourseId ( java.lang.Integer . parseInt ( message . split ( ":" ) [ 1 ] ) ) ; new com.team2.android.proctor.ui.AttendanceFragment.TakeAttendanceTask () . execute ( attendance ) ; } 
@ java.lang.Override public void expandedAdditionalScreen () { mBottomSheetBehavior . setState ( BottomSheetBehavior.STATE_EXPANDED ) ; mBottomSheetTextView . setVisibility ( View.INVISIBLE ) ; switch ( mBottomSheetNavigationView . getSelectedItemId () ) { case R.id.main_bottom_sheet_navigation_calendar : me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment calendarFragment = ( ( me.kholmukhamedov.organizer.ui.fragment.calendar.CalendarFragment ) ( mFragmentsMap . get ( CalendarFragment.TAG ) ) ) ; if ( calendarFragment != null ) calendarFragment . hideCalendarView () ; break; } } 
protected java.time.LocalDate parseStringToDo ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDo ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; } 
@ java.lang.Override public void handleNext ( T t ) { if ( ( t . contentLength () ) == 0 ) { return; } if ( ( httpCallback ) != null ) { try { this . httpCallback . onResolve ( new com.google.gson.Gson () . fromJson ( t . string () , this . httpCallback . getType () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
@ java.lang.Override public boolean  equities ( java.lang.Object object ) { if ( compareOnlyQuestionText ) { org.nlamah.QL.Model.Form.Abstract.FormQuestion value = ( ( org.nlamah.QL.Model.Form.Abstract.FormQuestion ) ( object ) ) ; if ( this . questionText .  equities ( value.questionText ) ) { return true ; } return false ; } else { if ( ! ( super .  equities ( object ) ) ) { return false ; } if ( ! ( object instanceof org.nlamah.QL.Model.Form.Abstract.FormQuestion ) ) { return false ; } return true ; } } 
@ java.lang.Override public java.lang.String ToString () { return ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ", lastname='" ) + ( lastname ) ) + '\'' ) + ", firstname='" ) + ( firstname ) ) + '\'' ) + ", mobilePhone='" ) + ( mobilePhone ) ) + '\'' ) + '}' ; } 
@ java.lang.Override public boolean onOptionsMenuRelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.sort_by : java.lang.String [] items = getResources () . getStringArray ( R.array.sort_by ) ; com.psincraian.gameslibrary.SortByDialog dialog = new com.psincraian.gameslibrary.SortByDialog ( getActivity () , items , this ) ; dialog . onCreateDialog ( null ) . show () ; break; } return super . onOptionsMenuRelected ( item ) ; } 
@ java.lang.Override public void onConnectedUpdated ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( ( ( currPitInfoIndex ) >= 0 ) && ( ( currTeam ) != null ) ) { try { boolean tempValue = pit_auto_high_goal_Button . isChecked () ; if ( ( currTeam . getBoolean ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL ) ) != tempValue ) { currTeam . put ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL , tempValue ) ; if ( ! ( fillingPitInfo ) ) { dbHelper . updatePitInfo ( currTeam ) ; } } } catch ( org.json.JSONException e ) {} } } 
@ java.lang.Override public java.lang.Iterable < org.jenkinsci.plugins.uicontrol.TreeNode > resources () { java.io.File [] resources = file . listFiles () ; java.util.List < org.jenkinsci.plugins.uicontrol.TreeNode > r = new java.util.ArrayList < org.jenkinsci.plugins.uicontrol.TreeNode > () ; if ( resources != null ) { for ( java.io.File c : resources ) { r . add ( new FileTreeNode ( c ) ) ; } } return r ; } 
public void perforceLaunch ( org.eclipse.debug.core.ILaunchConfigurationWorkingCopy configuration ) { configuration . setAttribute ( IUML2JavaContants.ATTR_TARGET_FOLDER_PATH , targetText . getText () ) ; java.util.Set < java.lang.String > umlModelPaths = new java.util.LinkedHashSet < java.lang.String > () ; org.eclipse.swt.widgets.TableItem [] items = modelTable . getItems () ; for ( org.eclipse.swt.widgets.TableItem tableItem : items ) { umlModelPaths . add ( tableItem . getText () ) ; } configuration . setAttribute ( IUML2JavaContants.ATTR_MODEL_PATHS , umlModelPaths ) ; this . update () ; } 
protected void showPosition ( android.location.Location mCurrentLocation ) { if ( mCurrentLocation != null ) { getNeabyMarkers ( mCurrentLocation ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( new com.google.android.gms.maps.model.LatLng ( mCurrentLocation . getLatitude () , mCurrentLocation . getLongitude () ) , com.dev.cromer.jason.whatsappening.Activities.MapActivity.CAMERA_ZOOM ) ) ; } com.google.android.gms.maps.model.LatLng center = mMap . getCameraPosition () . target ; mLastMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( new com.google.android.gms.maps.model.LatLng ( center.latitude , center.longitude ) ) . draggable ( true ) ) ; } 
public boolean releaseConnect ( com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection connection ) { boolean removed = false ; java.util.Iterator < com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection > iterator = connections . iterator () ; while ( iterator . hasNext () ) { com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection conn = iterator . next () ; if ( conn != null ) { connections . remove ( conn ) ; removed = true ; break; } } return removed ; } 
public static boolean cangetvalue ( java.lang.String line ) { return ( ( ( com.blazingkin.interpreter.variables.Variable . isInteger ( line ) ) || ( com.blazingkin.interpreter.variables.Variable . isDouble ( line ) ) ) || ( com.blazingkin.interpreter.variables.Variable . isBool ( line ) ) ) || ( com.blazingkin.interpreter.variables.Variable . isString ( line ) ) ; } 
private void  handleSignUpWithTwitter ( io.flutter.plugin.common.MethodCall call , final io.flutter.plugin.common.MethodChannel.Result result ) { @ java.lang.SuppressWarnings ( value = "unchecked" ) java.util.Map < java.lang.String , java.lang.String > arguments = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( call.arguments ) ) ; java.lang.String accessToken = arguments . get ( "accessToken" ) ; com.google.firebase.auth.AuthCredential credential = io.flutter.firebaseauth.FacebookAuthProvider . getCredential ( accessToken ) ; firebaseAuth . signInWithCredential ( credential ) . addOnCompleteListener ( activity , new io.flutter.firebaseauth.FirebaseAuthPlugin.SignInCompleteListener ( result ) ) ; } 
public void putbyteImpl ( final byte [] data ) { int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
private java.lang.String ChoicePick ( graduationProject.Domain.Request request , int size , int serviceId , java.lang.String mode ) { java.util.List < java.lang.Integer > targetList = generateRanNumList ( size , choiceRate ) ; java.lang.String target = "pod1" ; if ( mode . equals ( "choice1" ) ) target = getBetterPod1 ( request , targetList , serviceId ) ; return target ; } 
private void  makeFoodLob () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } 
public static void  shareFileExtonent ( android.app.Activity activity , java.lang.String data , java.lang.String title , java.io.File attached ) { ShareCompat.IntentBuilder . from ( activity ) . setType ( "text/plain" ) . addEmailTo ( "" ) . setSubject ( title ) . setStream ( android.support.v4.content.FileProvider . getUriForFile ( activity , ( ( org.eyeseetea.malariacare.BuildConfig.APPLICATION_ID ) + ".data.database.utils.ExportData" ) , attached ) ) . setText ( data ) . startChooser () ; } 
protected java.lang.Boolean invoke ( java.lang.Object . . . args ) throws java.lang.Exception { try { client . prepareDelete ( indexName , ".percolator" , queryName ) . setRefreshPolicy ( WriteRequest.RefreshPolicy.IMMEDIATE ) . invoke () . actionGet () ; return true ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Cannot delete query" , e ) ; } } 
private org.spongepowered.asm.lib.Handle toHand ( org.spongepowered.asm.mixin.transformer.MethodNode method , java.util.Iterator < org.spongepowered.asm.mixin.transformer.AbstractInsnNode > iter , org.spongepowered.asm.lib.Handle handle ) { org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef memberRef = new org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef ( handle ) ; if ( memberRef . isField () ) { this . transformFieldRef ( method , iter , memberRef ) ; } else { this . transformMethodRef ( method , iter , memberRef ) ; } return memberRef . getMethodHandle () ; } 
@ entity.Transient public java.util.Map  getArgsList () { if ( ( this . arg ) == null ) { return new java.util.HashMap () ; } com.fasterxml.jackson.core.JsonFactory factory = new com.fasterxml.jackson.core.JsonFactory () ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper ( factory ) ; com.fasterxml.jackson.core.type.TypeReference < java.util.HashMap < java.lang.String , java.lang.Object > > typeRef = new com.fasterxml.jackson.core.type.TypeReference < java.util.HashMap < java.lang.String , java.lang.Object > > () {} ; try { return mapper . readValue ( getArg () , typeRef ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; } 
@ org.junit.Test public void  demo () { net.praqma.codeacademy.gildedrose.Item [] items = new net.praqma.codeacademy.gildedrose.Item [] { new net.praqma.codeacademy.gildedrose.Item ( " demo" , 0 , 0 ) } ; net.praqma.codeacademy.gildedrose.GildedRose app = new net.praqma.codeacademy.gildedrose.GildedRose ( items ) ; app . updateQuality () ; assertEquals ( " demo" , app.items [ 0 ] . name ) ; } 
public boolean invoke () { if ( self . canUndo () ) { self . getDrawingData () . invoke () ; self . nativeClear () ; self . nativeDrawData () ; if ( ( self . getDelegate () ) != null ) { self . getDelegate () . didChangeDrawing ( self , self . getDrawingData () . canUndo () , self . getDrawingData () . canRedo () ) ; } return true ; } return false ; } 
@ java.lang.Override public void  processedFinish ( java.lang.String output ) { if ( output . equals ( "Success " ) ) { working . setTextColor ( Color.GREEN ) ; working . setText ( "Clocked in Succesfully" ) ; sendNotification () ; } else if ( output . equals ( "Failure " ) ) { working . setTextColor ( Color.RED ) ; working . setText ( "You can't clock in again" ) ; } } 
public boolean Conver () { java.lang.String [] otherArgs = new java.lang.String [] { getAvroHDFSDest () , getParquetHDFSDest () } ; boolean success = false ; try { org.apache.hadoop.util.ToolRunner . run ( this , otherArgs ) ; success = true ; } catch ( java.lang.Exception e ) { fr.finaxys.tutorials.utils.parquet.AvroParquetConverter.LOGGER . log ( java.util.logging.Level.SEVERE , "Can't run map reduce job" , e ) ; } return success ; } 
@ java.lang.Override public void invoke () { getPopupMenu () . setVisible ( false ) ; javax.swing.MenuSelectionManager . defaultManager () . clearSelectedPath () ; net.sourceforge.processdash.team.group.UserFilter selectedItem = new net.sourceforge.processdash.team.group.ui.UserGroupSelector ( javax.swing.SwingUtilities . getWindowAncestor ( this ) , "Filter_Prompt" , showIndividuals ) . getSelectedItem () ; setSelectedItem ( selectedItem ) ; } 
public java.lang.String ToInt ( android.content.Context context ) { java.lang.String [] values = context . getResources () . getStringArray ( R.array.element_types_array ) ; if ( ( value ) == ( com.freak.carnetdentretien.domain.bean.MaintenanceElement.Type.OTHER.value ) ) { return values [ ( ( values.length ) - 1 ) ] ; } else { return values [ ( ( value ) - 1 ) ] ; } } 
@ org.junit.Test public void capabilitiesAreInitializesAndReturnscorrectEnough ( ) throws org.dasein.cloud.CloudException , org.dasein.cloud.InternalException { org.dasein.cloud.azure.network.AzureLoadBalancerCapabilities capabilities = mockit.Deencapsulation . getField ( lbSupport , "capabilities" ) ; org.dasein.cloud.azure.tests.network.LoadBalancerCapabilities acutalCapabilities = lbSupport . getCapabilities () ; org.dasein.cloud.CloudProvider provider = mockit.Deencapsulation . getField ( capabilities , "provider" ) ; assertEquals ( "azure capabilities initialized with incorrect provider" , azureMock , provider ) ; assertEquals ( "getCapabilities doesn't return current capabilities" , capabilities , acutalCapabilities ) ; } 
private void stop () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( - 1 ) ) { workWithDataBase . onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this , com.example.hjk.testing.MainActivity . class ) ) ; } 
public java.lang.Double  getpercentage ( ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException { java.lang.String body = java.lang.String . valueOf ( doInBackground () ) ; java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "\\d{2}.\\d{4}" ) ; java.util.regex.Matcher matcher = pattern . matcher ( body ) ; return matcher . find () ? java.lang.Double . valueOf ( matcher . group ( 0 ) ) : 0 ; } 
private int compareNNodes ( final org.openrdf.model.BNode first , final java.lang.Object second ) { if ( second instanceof org.openrdf.model.BNode ) { return first . getID () . compareTo ( ( ( org.openrdf.model.BNode ) ( second ) ) . getID () ) ; } else if ( ( second instanceof org.openrdf.model.URI ) || ( second instanceof eu.fbk.knowledgestore.data.Record ) ) { return - 1 ; } return 1 ; } 
private void  addtitle ( java.lang.String title ) { android.view.View view = android.view.LayoutInflater . from ( getActivity () ) . inflate ( R.layout.item_title , null ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( view . findViewById ( R.id.title_text ) ) ) ; textView . setText ( title ) ; if ( ( container ) != null ) container . addView ( view ) ; } 
private void aditionStats () { if ( ( game.currentplayer ) == ( game.player ) ) { game.currentplayer = game.opponent ; handleAttack ( game.opponent . choseRandomMove ( game ) , game.player ) ; } else { game.currentplayer = game.player ; menu . setVisible ( true ) ; infoText . setVisible ( false ) ; } } 
@ java.lang.Override protected java.util.List < input.ExternalEvent > readTypes ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readTypes ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } 
@ java.lang.Override public int getUserAnswerIdByIdQuestionNo ( int number ) { com.inquirer.models.Answer userAnswer = new com.inquirer.models.Answer () ; for ( com.inquirer.models.Answer tmpAnswer : userAnswers ) { if ( ( tmpAnswer . getQuestion () ) == number ) { userAnswer = tmpAnswer ; } } if ( userAnswer == null ) { return 0 ; } else { return userAnswer . getId () ; } } 
protected void processingWindowEvent ( java.awt.event.WindowEvent e ) { if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_CLOSING ) ) { if ( net.sf.memoranda.util.Configuration . get ( "ON_CLOSE" ) . equals ( "exit" ) ) doExit () ; else doExit () ; } else if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) { super . processingWindowEvent ( new java.awt.event.WindowEvent ( this , java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) ; doMinimize () ; } else super . processingWindowEvent ( e ) ; } 
@ org.junit.Test public void test_findComponentlements ( ) throws java.lang.Exception { com.structurizr.componentfinder.ComponentFinder componentFinder = new com.structurizr.componentfinder.ComponentFinder ( webApplication , "com.structurizr.componentfinder" , new com.structurizr.componentfinder.JavadocComponentFinderStrategy ( sourcePath . getCanonicalPath () ) ) ; componentFinder . findComponents () ; org.junit.Assert . assertEquals ( "A component that does something." , componentA . getDescription () ) ; org.junit.Assert . assertEquals ( "A component that does something else." , componentB . getDescription () ) ; org.junit.Assert . assertEquals ( "A component that does something else too." , componentC . getDescription () ) ; } 
private void  updateActiveGame () { currentPlayerPosition = ( ( currentPlayerPosition ) + 1 ) % ( activePlayers . size () ) ; currentPlayer = activePlayers . get ( currentPlayerPosition ) ; notifyCurrentPlayerUpdated ( currentPlayer , currentPlayerPosition ) ; java.lang.System.out . println ( ( "[TEST] Current Player: " + ( currentPlayer . toString () ) ) ) ; } 
@ java.lang.Override public boolean onOptionsMenuRelected ( android.view.MenuItem item ) { if ( ( item . getItemId () ) == ( android.R.id.home ) ) { android.content.Intent homeIntent = new android.content.Intent ( getApplicationContext () , com.anilicious.rigfinances.activities.MainActivity . class ) ; homeIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( homeIntent ) ; } return super . onOptionsMenuRelected ( item ) ; } 
public com.eclipsesource.v8.V8Object executeObjectTemplate ( final java.lang.String script , final java.lang.String scriptName , final int lineNumber ) { checkThread () ; java.lang.Object result = this . executeScript ( script , scriptName , lineNumber ) ; if ( result instanceof com.eclipsesource.v8.V8Object ) { return ( ( com.eclipsesource.v8.V8Object ) ( result ) ) ; } throw new com.eclipsesource.v8.V8ResultUndefined () ; } 
private static double oper ( char op , double val1 , double val2 ) { switch ( op ) { case '+' : return val2 + val1 ; case '-' : return val2 - val1 ; case '*' : return val2 * val1 ; case '/' : if ( val1 == 0 ) throw new java.lang.UnsupportedOperationException ( "Cannot divide by zero" ) ; return val2 / val1 ; case '^' : return java.lang.Math . pow ( val2 , val1 ) ; } return 0 ; } 
public com.chenyirun.theircraft.model.Block GetBlocks ( com.chenyirun.theircraft.model.Point3Int pos ) { com.chenyirun.theircraft.model.Chunk chunk = new com.chenyirun.theircraft.model.Chunk ( pos ) ; java.util.List < com.chenyirun.theircraft.model.Block > blocksInChunk = new java.util.ArrayList <> () ; blocksInChunk . addAll ( getChunkBlocks ( chunk ) ) ; for ( com.chenyirun.theircraft.model.Block block : blocksInChunk ) { if ( block == null ) { continue; } com.chenyirun.theircraft.model.Point3Int blockLocation = block . getLocation () ; if ( pos . equals ( blockLocation ) ) { return block ; } } return null ; } 
private void showresponse ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse res , java.util.List < orders.LineItem > items , java.math.BigDecimal totalPrice ) { try { javax.servlet.http.HttpSession session = req . getSession () ; session . setAttribute ( "items" , items ) ; session . setAttribute ( "total" , totalPrice ) ; res . sendRedirect ( "confirmOrder.jsp" ) ; } catch ( java.io.IOException e ) {} } 
private void removeEntryDMS ( java.lang.String mrn ) throws java.io.IOException , java.net.UnknownHostException { java.net.Socket MNSSocket = new java.net.Socket ( "localhost" , 1004 ) ; java.io.BufferedWriter outToMNS = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( MNSSocket . getOutputStream () , java.nio.charset.Charset . forName ( "UTF-8" ) ) ) ; if ( kr.ac.kaist.mms_server.MMSConfiguration.LOGGING ) java.lang.System.out . println ( ( "Remove-Entry:" + mrn ) ) ; outToMNS . write ( ( "Remove-Entry:" + mrn ) ) ; outToMNS . flush () ; outToMNS . close () ; MNSSocket . close () ; return; } 
public void  createApplication ( io.joynr.arbitration.ArbitrationResult result ) { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatusLock . lock () ; try { connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } finally { connectorStatusLock . unlock () ; } } 
public boolean changeQuizTitle ( java.lang.String newQuizName ) { Category c = new Category ( category ) ; c . readFromFile ( ( ( c . getCategory () ) + ".txt" ) ) ; if ( c . change ( quizName , newQuizName ) ) { this . quizName = newQuizName ; return true ; } return false ; } 
@ java.lang.Override public cn.wisdom.lottery.service.remote.response.LotteryOpenData getcurrentParval ( cn.wisdom.lottery.dao.constant.LotteryType lotteryType ) { java.lang.String errMsg = java.text.MessageFormat . format ( "Failed to query {0} current period info." , lotteryType ) ; cn.wisdom.lottery.dao.vo.PrizeLottery prizeLottery = daoHelper . queryForObject ( cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.GET_SSQ_CURRENT_PERIOD , cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.ssqPrizeInfoMapper , errMsg ) ; if ( ( prizeLottery != null ) && ( ( prizeLottery . getOpenTime () ) != null ) ) { unifyOpenTime ( prizeLottery . getOpenTime () ) ; } return new cn.wisdom.lottery.service.remote.response.LotteryOpenData ( prizeLottery ) ; } 
@ java.lang.Override protected void onSaveShareConfig ( android.os.Bundle outState ) { super . onSaveShareConfig ( outState ) ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( mRecyclerView . getLayoutManager () ) ) ; int position = linearLayoutManager . findFirstVisibleItemPosition () ; outState . putInt ( ir.blog.microc.movie.activities.MainActivity.FIRST_VISIBLE_ITEM_KEY , position ) ; outState . putParcelableArrayList ( ir.blog.microc.movie.activities.MainActivity.MOVIE_DATA_PARCELABLE , ( ( java.util.ArrayList < ? extends android.os.Parcelable > ) ( movieList ) ) ) ; } 
public synchronized boolean removeUser ( CardGame.User user ) { int removeID = - 1 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } if ( removeID != ( - 1 ) ) { players . remove ( removeID ) ; return true ; } else { return false ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveESInfo/{index}/{type}/{id}" ) public org.datasays.wes.demo.model.ActionResult saveESInfo ( @ org.springframework.web.bind.annotation.PathVariable ( value = "index" ) java.lang.String index , @ org.springframework.web.bind.annotation.PathVariable ( value = "type" ) java.lang.String type , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" , required = false ) java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody java.lang.Object doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { java.lang.Object newdoc = esService . index ( index , type , id , doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } 
private static org.neo4j.kernel.impl.query.TransactionalContext createTransactonalConnection ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; } 
public static void cleanindexDirectory ( java.lang.String solrHome , java.lang.String coreName ) throws java.io.IOException { java.io.File indexDir = java.nio.file.Paths . get ( solrHome , coreName , "data" ) . toFile () ; try { if ( indexDir . exists () ) { org.apache.commons.io.FileUtils . cleanDirectory ( indexDir ) ; } } catch ( java.io.IOException e ) { uk.ac.shef.dcs.jate.app.BaseEmbeddedSolrTest.LOG . error ( "Failed to clean index directory! Please do it manually!" ) ; throw e ; } } 
private void loadFactorClient () { util.PropertiesUtil parser = util.PropertiesUtil . getInstance () ; java.lang.String serverUrl = parser . getValue ( "serverUrl" ) ; java.lang.String appkey = parser . getValue ( "appkey" ) ; java.lang.String appSecret = parser . getValue ( "appSecret" ) ; java.lang.String randomNum = parser . getValue ( "randomNum" ) ; securityClient = new com.taobao.api.security.SecurityClient ( new com.taobao.api.DefaultTaobaoClient ( serverUrl , appkey , appSecret ) , randomNum ) ; } 
protected void closePagePath ( com.shesse.h2ha.FilePathHa filePath , long lastModified ) throws java.io.IOException { synchronized ( openFiles ) { java.nio.channels.FileChannel fc = openFiles . remove ( filePath ) ; if ( fc != null ) { fc . close () ; } } if ( filePath . exists () ) { filePath . lastModified ( lastModified ) ; } } 
@ java.lang.Override public void updatequality ( mvc.models.Item item ) { if ( ( item . getSellIn () ) > 0 ) item . setQuality ( ( ( item . getQuality () ) - ( mvc.models.OrganicBananas.QUALITY_STEP ) ) ) ; else item . setQuality ( ( ( item . getQuality () ) - ( ( mvc.models.OrganicBananas.QUALITY_STEP ) * 2 ) ) ) ; } 
private todo.javier.mera.todolist.model.Task createJob ( java.lang.String todoListId ) { return new todo.javier.mera.todolist.model.Task ( java.util.UUID . randomUUID () . toString () , todoListId , "My Task" , todo.javier.mera.todolist.model.TaskStatus.Created , new java.util.Date () . getTime () , new java.util.Date () . getTime () , todo.javier.mera.todolist.model.Priority.None , todo.javier.mera.todolist.model.Reminder.ON ) ; } 
private org.eclipse.smarthome.automation.core.internal.RuntimeRule getRulesByTemplate ( org.eclipse.smarthome.automation.core.internal.RuntimeRule rule ) { java.lang.String ruleTemplateUID = rule . getTemplateUID () ; org.eclipse.smarthome.automation.template.RuleTemplate template = ( ( org.eclipse.smarthome.automation.template.RuleTemplate ) ( tManager . get ( ruleTemplateUID ) ) ) ; if ( template == null ) { logger . debug ( ( ( "Rule template '" + ruleTemplateUID ) + "' does not exist." ) ) ; return null ; } else { org.eclipse.smarthome.automation.core.internal.RuntimeRule r1 = new org.eclipse.smarthome.automation.core.internal.RuntimeRule ( rule , template ) ; return r1 ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { android.support.v4.app.FragmentTransaction ft = mFragmentManager . beginTransaction () ; ft . setCustomAnimations ( android.R.anim.fade_in , android.R.anim.fade_out ) ; ft . replace ( R.id.frame_container , new babyfon.view.fragment.BabyMonitorFragment ( mContext ) , null ) . addToBackStack ( null ) . commit () ; } 
private boolean isPolicycombinationsSupported ( java.lang.String . . . policyNames ) { boolean isValid = false ; java.lang.String firstPolicyName = policyNames [ 0 ] ; for ( java.lang.String policyName : policyNames ) { if ( ! ( policyName . equals ( firstPolicyName ) ) ) { isValid = true ; break; } } return isValid ; } 
public static void  restore () { if ( haven.GLState.Slot.dirty ) { synchronized ( haven.GLState.Slot . class ) { if ( haven.GLState.Slot.dirty ) { haven.GLState.Slot . makedeps ( haven.GLState.Slot.all ) ; haven.GLState.deplist = new haven.GLState.Slot < ? > [ haven.GLState.Slot.all . size () ] ; for ( haven.GLState.Slot s : haven.GLState.Slot.all ) haven.GLState.deplist [ s.depid ] = s ; haven.GLState.Slot.dirty = false ; } } } } 
public static java.lang.String enbuildpath ( java.lang.String path ) { if ( ( path == null ) || ( ( path . length () ) == 0 ) ) return path ; java.lang.StringBuilder buf = org.eclipse.jetty.util.URIUtil . enbuildpath ( null , path , 0 ) ; return buf == null ? path : buf . toString () ; } 
@ java.lang.Override public org.bds.lang.Type enterImpl ( org.bds.scope.Scope scope ) { if ( ( enterImpl ) != null ) return enterImpl ; expr . enterImpl ( scope ) ; if ( expr . canCastInt () ) enterImpl = Type.INT ; else if ( expr . canCastReal () ) enterImpl = Type.REAL ; else return null ; return enterImpl ; } 
pl.karol202.evolution.utils.Vector2 getPoint ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getPointElementFromListByName ( key ) ; if ( vectorElement == null ) return null ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( vectorElement . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( vectorElement . getAttribute ( "y" ) ) ) ; } 
public void  Emmit ( T record ) throws java.io.IOException , java.lang.InterruptedException { for ( int targetChannel : channelSelector . selectChannels ( record , numChannels ) ) { if ( ( random . nextInt ( 100 ) ) < ( targetPartition . getChannelNonDropProbability ( targetChannel ) ) ) { sendToTarget ( record , targetChannel ) ; } } } 
@ org.junit.Test public void TestFound () { assertEquals ( null , doubleLinkedList . find ( 1 ) ) ; doubleLinkedList . insertHead ( 1 ) ; doubleLinkedList . insertTail ( 3 ) ; doubleLinkedList . insertHead ( 2 ) ; assertEquals ( 3 , doubleLinkedList . getSize () ) ; assertEquals ( 1 , doubleLinkedList . find ( 1 ) . getId () ) ; } 
@ java.lang.Override public aljebra.data.sparse.SparseVector  scal ( double factor ) { if ( factor == 0.0 ) { return new aljebra.data.sparse.SparseVector ( size ) ; } aljebra.data.sparse.SparseVector result = new aljebra.data.sparse.SparseVector ( size ) ; for ( int i : ids ) { result . set ( i , ( ( get ( i ) ) * factor ) ) ; } return result ; } 
public static double  sumsig ( int i , double [] p , double [] q , double [] b ) { double res = 0 ; for ( int l = 0 ; l < ( p.length ) ; l ++ ) { double power = ( ( p [ i ] ) * ( q [ l ] ) ) + ( b [ l ] ) ; res += java.lang.Math . exp ( power ) ; } return res ; } 
private org.programmatori.domotica.own.plugin.system.Value setProperty () { java.lang.String model = null ; try { model = org.programmatori.domotica.own.sdk.config.Config . getInstance () . getNode ( "system.model" ) ; } catch ( java.lang.Exception e ) {} if ( model == null ) { model = "99" ; } return new org.programmatori.domotica.own.plugin.system.Value ( model ) ; } 
public static boolean  allItemsAvailable ( java.util.Vector < ? > textFields ) { for ( java.lang.Object text : textFields ) { java.lang.String string = ( ( java.awt.TextField ) ( text ) ) . getText () ; if ( ( string . length () ) == 0 ) return false ; try { java.lang.Double . parseDouble ( string ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } } return true ; } 
protected void checks () { if ( host . getAutoDeploy () ) { org.apache.catalina.startup.HostConfig.DeployedApplication [] apps = deployed . values () . toArray ( new org.apache.catalina.startup.HostConfig.DeployedApplication [ 0 ] ) ; for ( int i = 0 ; i < ( apps.length ) ; i ++ ) { if ( ! ( isServiced ( apps [ i ] . name ) ) ) checksResources ( apps [ i ] , false ) ; } if ( host . getUndeployOldVersions () ) { checksUndeploy () ; } deployApps () ; } } 
@ java.lang.Override protected java.lang.Void  doOnBackground ( java.lang.Void . . . params ) { if ( language . equalsIgnoreCase ( "japanese" ) ) japExecute () ; else if ( language . equalsIgnoreCase ( "mandarin" ) ) { chineseExecute () ; } else if ( language . equalsIgnoreCase ( "korean" ) ) try { koreanExecute () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error " + e ) ) ; } return null ; } 
public static void Clearinitstack () { final java.lang.ThreadLocal < java.util.Deque < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph > > is = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack ; if ( is != null ) is . get () . clear () ; final java.lang.ThreadLocal < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph > ag = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph ; if ( ag != null ) ag . remove () ; } 
public void  kleonUpdated () { android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.example.hvs.UpdateActivity . class ) ; intent . putExtra ( "liga" , ligaNr ) ; intent . putExtra ( "update" , 1 ) ; intent . putExtra ( "liganame" , this . getTitle () ) ; this . finish () ; startActivity ( intent ) ; } 
@ org.junit.Before public void afterEachUnit ( ) throws java.lang.Exception { executeDataSet ( "org/openmrs/module/idgen/include/TestData.xml" ) ; iss = new org.openmrs.module.idgen.service.IdentifierSourceServiceTest.BaseIdentifierSourceServiceStub () ; iss . setDao ( dao ) ; org.openmrs.module.idgen.processor.SequentialIdentifierGeneratorProcessor processor = new org.openmrs.module.idgen.processor.SequentialIdentifierGeneratorProcessor () ; processor . setIdentifierSourceService ( iss ) ; java.util.Map < java.lang.Class < ? extends org.openmrs.module.idgen.IdentifierSource > , org.openmrs.module.idgen.processor.IdentifierSourceProcessor > processors = new java.util.HashMap < java.lang.Class < ? extends org.openmrs.module.idgen.IdentifierSource > , org.openmrs.module.idgen.processor.IdentifierSourceProcessor > () ; processors . put ( org.openmrs.module.idgen.SequentialIdentifierGenerator . class , processor ) ; iss . setProcessors ( processors ) ; } 
private static java.lang.String getStringLine ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } 
@ java.lang.Override protected void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.app_bar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; initRecyclerView ( savedInstanceState ) ; } 
private static void closeNodeTo ( com.hazelcast.core.HazelcastInstance h1 , com.hazelcast.core.HazelcastInstance h2 ) { if ( ( h1 == null ) || ( h2 == null ) ) { return; } com.hazelcast.instance.Node n1 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample . getNode ( h1 ) ; com.hazelcast.instance.Node n2 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample . getNode ( h2 ) ; if ( ( n1 != null ) && ( n2 != null ) ) { n1.clusterService . removeAddress ( n2.address , null ) ; n2.clusterService . removeAddress ( n1.address , null ) ; } } 
public void  payforMale ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } 
private java.util.Collection < java.lang.String > queryAlldomins () { com.dianping.cat.report.service.ModelRequest request = new com.dianping.cat.report.service.ModelRequest ( com.dianping.cat.Constants.CAT , ModelPeriod.CURRENT . getStartTime () ) ; if ( m_service . isEligable ( request ) ) { com.dianping.cat.report.service.ModelResponse < com.dianping.cat.consumer.dependency.model.entity.DependencyReport > response = m_service . invoke ( request ) ; com.dianping.cat.consumer.dependency.model.entity.DependencyReport report = response . getModel () ; if ( null != report ) { return report . getDomainNames () ; } } return new java.util.HashSet < java.lang.String > () ; } 
public entities.obstacles.Entity getEnt ( java.lang.String eName , org.lwjgl.util.vector.Vector3f position , float rotX , float rotY , float rotZ , float scale ) { long before = java.lang.System . currentTimeMillis () ; entities.obstacles.Entity e = new entities.obstacles.Entity ( tModels . get ( eName ) , 0 , mData . get ( eName ) , position , rotX , rotY , rotZ , scale , eName ) ; world . add ( e ) ; return e ; } 
private synchronized boolean isLineAvalsible ( int line ) { org.zhgeaits.zgdanmaku.model.ZGDanmaku danmaku = mLinesAvaliable . get ( line ) ; if ( danmaku == null ) { return true ; } if ( ( danmaku . getCurrentOffsetX () ) > ( danmaku . getDanmakuWidth () ) ) { mLinesAvaliable . remove ( line ) ; return true ; } return false ; } 
protected void initTABLEControls ( boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTABLEControls ( tree , keepColumnStatus ) ; } } } 
private void displayNotes () { int idx = ( firstaid_questions . size () ) - ( quesLen ) ; if ( idx < ( firstaid_questions . size () ) ) { app . speakOut ( firstaid_questions . get ( idx ) . getQues () ) ; expect_binary = true ; current_grammar = app.BINARY_RESPONSE ; } else { conclude = true ; } } 
@ java.lang.Override void set ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { javax.servlet.RequestDispatcher dispatcher = null ; java.util.List < fr.eni.expeditor.entity.Article > lstArticle = gestionArticleBean . rechercherTous () ; request . setAttribute ( "lstArticle" , lstArticle ) ; dispatcher = request . getRequestDispatcher ( "/WEB-INF/views/manager/gestionArticle.jsp" ) ; dispatcher . forward ( request , response ) ; } 
@ org.gbif.occurrence.persistence.Test public void testKeyByKeyIter () { int count = 0 ; java.util.Iterator < java.lang.Integer > iterator = occurrenceService . getKeysByColumn ( org.apache.hadoop.hbase.util.Bytes . toBytes ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.DATASET_KEY . toString () ) , org.gbif.occurrence.persistence.hbase.Columns . column ( GbifTerm.datasetKey ) ) ; while ( iterator . hasNext () ) { iterator . next () ; count ++ ; } assertEquals ( 1 , count ) ; } 
void  currentposUp () { if ( this . isEmpty () ) { CurrentPosX = sg.util.FastLinkedList.MARGIN ; CurrentPosY = 0 ; } else if ( ! ( currentNode.nodeText . getText () . equals ( "\n" ) ) ) { CurrentPosX = ( currentNode.nodeText . getX () ) + ( java.lang.Math . round ( currentNode.nodeText . getLayoutBounds () . getWidth () ) ) ; CurrentPosY = currentNode.nodeText . getY () ; } else { CurrentPosX = sg.util.FastLinkedList.MARGIN ; } } 
@ org.junit.Before public void catchOver () { catchOverMocks () ; buySpecification = getOrderSpecification ( testInstrument , OrderCommand.BUY , 0.25 ) ; buySpecification2 = getOrderSpecification ( testInstrument , OrderCommand.BUY , 0.37 ) ; sellSpecification = getOrderSpecification ( testInstrument , OrderCommand.SELL , 0.25 ) ; sellSpecification2 = getOrderSpecification ( testInstrument , OrderCommand.SELL , 0.39 ) ; externalSpecification = getOrderSpecification ( testInstrument , OrderCommand.SELL , 0.775 ) ; buyOrder = com.jforex.programming.mock.IOrderBuilder . fromOrderSpecification ( buySpecification ) ; externalOrder = com.jforex.programming.mock.IOrderBuilder . fromOrderSpecification ( externalSpecification ) ; positionManager = new com.jforex.programming.position.JFPositionManager ( orderUtilMock ) ; } 
private double getPriorForDruction ( int numParents ) { double e = getStructurePrior () ; int k = numParents ; int vm = ( data.length ) - 1 ; return ( k * ( java.lang.Math . log ( ( e / vm ) ) ) ) + ( ( vm - k ) * ( java.lang.Math . log ( ( 1.0 - ( e / vm ) ) ) ) ) ; } 
protected java.lang.String  parsePreviousLink ( com.fasterxml.jackson.databind.JsonNode node ) { com.fasterxml.jackson.databind.JsonNode atIotLinkPath = node . path ( org.n52.shared.sensorthings.decoder.AT_IOT_NEXT_LINK ) ; if ( checkNode ( atIotLinkPath ) ) { return atIotLinkPath . asText () ; } else { com.fasterxml.jackson.databind.JsonNode linkPath = node . path ( org.n52.shared.sensorthings.decoder.NEXT_LINK ) ; if ( checkNode ( linkPath ) ) { return linkPath . asText () ; } } return null ; } 
@ java.lang.Override public void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; trace.traceapp.StartDraw.appLocationManager = MainActivity.appLocationManager ; drawView = new trace.traceapp.DrawView ( this ) ; drawView . setBackgroundColor ( Color.WHITE ) ; setContentView ( drawView ) ; drawView . setWillNotDraw ( false ) ; arraySize = drawView . getLocArraySize () ; } 
@ javafx.fxml.FXML void recherche_oncriteRes ( javafx.event.ActionEvent event ) { if ( motOuDefinietionRechercher . getText () . isEmpty () ) { javafx.scene.control.Alert alert = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.WARNING ) ; alert . setTitle ( "Avertissement" ) ; alert . setHeaderText ( "Erreur" ) ; alert . setContentText ( "Il n'y a aucun mot ou définition à recherche" ) ; alert . show () ; } else { recherche ( false ) ; } } 
void setEntms ( java.util.List < java.lang.String > terms ) { if ( org.apache.commons.collections.CollectionUtils . isEmpty ( terms ) ) return; java.lang.StringBuffer text = new java.lang.StringBuffer () ; java.util.Iterator < java.lang.String > i = terms . iterator () ; while ( i . hasNext () ) { text . append ( i . next () ) ; if ( i . hasNext () ) text . append ( SearchUtil.SPACE_SEPARATOR ) ; } fullTextArea . setText ( text . toString () ) ; } 
public void initSuperclasses () { setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; toggle = new android.support.v7.app.ActionBarDrawerToggle ( this , drawerLayout , toolbar , R.string.navigation_drawer_open , R.string.navigation_drawer_close ) ; drawerLayout . setDrawerListener ( toggle ) ; toggle . setDrawerIndicatorEnabled ( true ) ; toggle . syncState () ; setDrawerPaneWidth () ; } 
private int getNewLineIndex ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } 
@ org.junit.Test public void testUserAuthorizations () { it.geosolutions.geostore.services.rest.model.UserList ul = geoStoreClient . getUsers ( 0 , 100 ) ; org.junit.Assert . assertEquals ( 2 , ul . getList () . size () ) ; for ( it.geosolutions.geostore.services.rest.model.RESTUser u : ul . getList () ) { org.junit.Assert . assertNull ( u . getGroupsNames () ) ; } } 
public void userHit ( android.view.View v ) { if ( ( ! ( canClick ) ) || ( ( ( android.os.SystemClock . elapsedRealtime () ) - ( lastClickTime ) ) < 200 ) ) return; canClick = false ; lastClickTime = android.os.SystemClock . elapsedRealtime () ; super . userHit ( v ) ; this . playerHandle ( v ) ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { if ( ( album ) != null ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } } 
public void IncreasedValue () { java.lang.String oldValue = textBox . getValue () ; if ( ( isChangeable () ) && ( isValidForType ( oldValue ) ) ) { try { java.lang.String newValue = getIncreasedValue ( oldValue ) ; if ( isSmallerThanMax ( newValue ) ) { textBox . setValue ( newValue ) ; value = newValue ; valueUpdateTimer . schedule ( updateDelay ) ; valueUpdateTimer . setValue ( newValue ) ; } } catch ( java.lang.Exception e ) { valueUpdateTimer . cancel () ; com.google.gwt.core.client.GWT . log ( "Exception when increasing value" , e ) ; } } } 
public void showActivity ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } 
@ java.lang.Override public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > invoke ( android.database.Cursor cs ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > rows = new java.util.ArrayList < java.util.Map < java.lang.String , java.lang.Object > > () ; while ( ! ( cs . isLast () ) ) { rows . add ( this . invokeRow ( cs ) ) ; } return rows ; } 
private int setListBelow ( java.util.List listToSetBottomOf , int listTopPos ) { int listBottom = 0 ; if ( ( listToSetBottomOf . size () ) > 0 ) { if ( ( listToSetBottomOf . size () ) < 11 ) { listBottom = listToSetBottomOf . size () ; } else { listBottom = listTopPos + 10 ; } } return listBottom ; } 
private data_structures.Node readNode ( int index ) { if ( index == ( ( size ) - 1 ) ) { return tail ; } data_structures.Node node = head ; for ( int i = 0 ; i < index ; i ++ ) { node = node . getNext () ; } return node ; } 
@ java.lang.Override public synchronized void stop ( ) throws com.actemium.basicTvx_sdk.restclient.RestException { com.actemium.basicTvx_sdk.GlobalObjectManager.LOGGER . info ( "fermeture du GOM" ) ; com.actemium.basicTvx_sdk.GlobalObjectManager.isInit = false ; if ( ( com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager ) != null ) com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager . stopHttpClient () ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.idHelper = null ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.factory = null ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager = null ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.gestionCache = null ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.isCachePurgeAutomatiquementSiException = false ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.nonRecuperableViaWebService . clear () ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.lockFindOrCreate = null ; } 
public void moveTailToFrontOfBody () { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body . get ( ( ( length ) - ( length ) ) ) ; tail . setX ( breadCrumbsList . get ( length ) . getX () ) ; tail . setY ( breadCrumbsList . get ( length ) . getY () ) ; body . add ( length , tail ) ; } } 
public java.lang.String inviteUsertobookilling ( java.lang.String username_to_invite , int booking_id ) throws java.sql.SQLException { java.sql.PreparedStatement s1 = connection . prepareStatement ( "SELECT systemUserId FROM SystemUser WHERE username=?" ) ; s1 . setString ( 1 , username_to_invite ) ; java.sql.ResultSet result = s1 . executeQuery () ; if ( result . next () ) return inviteUsertobookilling ( result . getInt ( 1 ) , booking_id ) ; return ( "No such user found '" + username_to_invite ) + "'." ; } 
@ java.lang.Override public void chooteonePokemon () { int choice = 0 ; int chosenPokemon = 0 ; do { chosenPokemon = 0 ; printStarterPokemon () ; chosenPokemon = getChosen () ; java.lang.System.out . println ( "Do you choose him?" ) ; java.lang.System.out . println ( "[1]Yes      [2]No" ) ; choice = main.ConsoleRenderer.input . nextInt () ; if ( choice == 2 ) { chooteonePokemon () ; break; } else if ( choice != 1 ) { java.lang.System.out . println ( "Choose Yes or No!" ) ; } } while ( choice != 1 ) ; main.Player . choosePokemon ( chosenPokemon ) ; java.lang.System.out . println ( "Successufully added a pokemon" ) ; } 
public int findindexIndex ( final java.lang.String filePath ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( filePath ) ) return di ; } return - 1 ; } 
public void invoke ( android.view.View in , com.iodesystems.android.libs.view.transitions.TransitionPair transitionPair ) { if ( ! ( views . isEmpty () ) ) { android.view.View out = views . peek () ; if ( ( onPageTransitionListener ) != null ) { onPageTransitionListener . onPageTransition ( in , out ) ; } transitionPair . invoke ( out , in ) ; transitionPairs . push ( transitionPair ) ; } views . push ( in ) ; } 
public void  addCie ( org.eclipse.rdf4j.workbench.util.WorkbenchRequest req , javax.servlet.http.HttpServletResponse resp , java.lang.String name , java.lang.String value ) { final javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( name , value ) ; if ( req . getContextPath () . isEmpty () ) { cookie . setPath ( "/" ) ; } else { cookie . setPath ( req . getContextPath () ) ; } cookie . setMaxAge ( java.lang.Integer . parseInt ( config . getInitParameter ( org.eclipse.rdf4j.workbench.util.CookieHandler.COOKIE_AGE_PARAM ) ) ) ; this .  addCie ( req , resp , cookie ) ; } 
@ org.isoron.uhabits.utils.Nullable public static java.lang.String getRingteTitle ( org.isoron.uhabits.utils.Context context ) { try { org.isoron.uhabits.utils.Uri ringtoneUri = org.isoron.uhabits.utils.RingtoneUtils . getRingtoneUri ( context ) ; java.lang.String ringtoneName = context . getResources () . getString ( R.string.none ) ; if ( ringtoneUri != null ) { org.isoron.uhabits.utils.Ringtone ringtone = getRingtone ( context , ringtoneUri ) ; if ( ringtone != null ) { ringtoneName = ringtone . getTitle ( context ) ; ringtone . stop () ; } } return ringtoneName ; } catch ( java.lang.RuntimeException e ) { e . printStackTrace () ; return null ; } } 
@ java.lang.Override public org.bson.Document bisetch ( java.util.List < org.repositoryminer.parser.IParser > parsers , java.lang.String repositoryPath ) { try { org.bson.Document document = new org.bson.Document () ; document . append ( "name" , "duplicated_code" ) . append ( "occurences" , process ( parsers , repositoryPath ) ) ; return document ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } } 
private void removeSavedItem ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } } 
public static double  normalizedValues ( final double input , final double avg , final double std ) { double res ; if ( std != 0 ) { res = ( input - avg ) / std ; } else { res = 0 ; } return res ; } 
private void initialiseCache () { java.util.ArrayList < java.lang.String > listName = new java.util.ArrayList <> () ; listName . add ( "Singer" ) ; listName . add ( "Composer" ) ; listName . add ( "Director" ) ; listName . add ( "Actor" ) ; adapter = new com.kangladevelopers.filmfinder.Adapter.SimpleAdapter ( getApplicationContext () , listName ) ; lvListAll . setAdapter ( adapter ) ; lvListAll . setOnItemClickListener ( this ) ; } 
private static java.util.List < ru.stqa.pft.addressbook.model.GroupData > generatesSusters ( int count ) { java.util.List < ru.stqa.pft.addressbook.model.GroupData > groups = new java.util.ArrayList < ru.stqa.pft.addressbook.model.GroupData > () ; for ( int i = 0 ; i < count ; i ++ ) { groups . add ( new ru.stqa.pft.addressbook.model.GroupData () . withName ( java.lang.String . format ( "test %s" , i ) ) . withHeader ( java.lang.String . format ( "header %s" , i ) ) . withFooter ( java.lang.String . format ( "footer %s" , i ) ) ) ; } return groups ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/{code}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String updateSubcategory ( @ org.springframework.web.bind.annotation.ModelAttribute @ javax.validation.Valid org.egov.tl.entity.LicenseSubCategory licenseSubCategory , org.springframework.validation.BindingResult errors , org.springframework.web.servlet.mvc.support.RedirectAttributes additionalAttr , final org.springframework.ui.Model model ) { if ( errors . hasErrors () ) { return "subcategory-update" ; } licenseSubCategoryService . updateLicenseSubCategory ( licenseSubCategory ) ; additionalAttr . addFlashAttribute ( "message" , "msg.success.subcategory.update" ) ; return "redirect:/licensesubcategory/view/" + ( licenseSubCategory . getCode () ) ; } 
@ java.lang.Override public void invoke ( javafx.event.Event evt ) { java.lang.String text = "" ; java.lang.String eventType = evt . getEventType () . toString () ; switch ( eventType ) { case "MOUSE_CLICKED" : text = "Mouse Clicked" ; break; case "MOUSE_ENTERED" : text = "Mouse entered" ; break; case "MOUSE_EXITED" : text = "Mouse exited" ; break; default: break; } java.lang.System.out . println ( text ) ; rootPane . getRootFooterArea () . getTextOutputLabel () . setText ( text ) ; } 
public static void  zipFolder ( java.io.File dir , java.io.File zipFile ) throws java.io.IOException { java.io.FileOutputStream fout = new java.io.FileOutputStream ( zipFile ) ; java.util.zip.ZipOutputStream zout = new java.util.zip.ZipOutputStream ( fout ) ; org.jboss.tools.tycho.sitegenerator.FetchSourcesFromManifests . zipSubDirectory ( "" , dir , zout ) ; zout . flush () ; zout . close () ; fout . flush () ; fout . close () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/login" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String  login0 ( javax.servlet.http.HttpSession session , javax.servlet.http.HttpServletRequest request ) { if ( ( session . getAttribute ( "user" ) ) != null ) { session . removeAttribute ( "notification" ) ; session . setAttribute ( "notification" , "You are already logged in." ) ; return "index" ; } else { session . removeAttribute ( "notification" ) ; session . removeAttribute ( "notifsignup" ) ; request . setAttribute ( "url" , request . getParameter ( "url" ) ) ; return "login" ; } } 
public java.util.ArrayList < java.lang.Boolean > asL () { java.util.ArrayList < java.lang.Boolean > l = new java.util.ArrayList < java.lang.Boolean > ( length ) ; for ( int i = 0 ; i < ( length ) ; i ++ ) { l . add ( i , get ( i ) ) ; } return l ; } 
@ org.junit.Test public void  shouldSuccessfullyApplyForLateral () { com.example.loan.model.LoanApplication application = new com.example.loan.model.LoanApplication ( new com.example.loan.model.Client ( "1234567890" ) , 123.123 ) ; com.example.loan.model.LoanApplicationResult loanApplication = this . service . loanApplication ( application ) ; org.assertj.core.api.Assertions . assertThat ( loanApplication . getLoanApplicationStatus () ) . isEqualTo ( LoanApplicationStatus.LOAN_APPLIED ) ; org.assertj.core.api.Assertions . assertThat ( loanApplication . getRejectionReason () ) . isNull () ; } 
protected synchronized java.lang.String sourceForModelledStruct ( spoon.reflect.declaration.CtType < ? > modelledClass ) { prettyPrinter . reset () ; prettyPrinter . scan ( modelledClass ) ; java.lang.String sourceCode = ( ( ( "package " + ( modelledClass . getPackage () . toString () ) ) + ";" ) + ( java.lang.System . getProperty ( "line.separator" ) ) ) + ( prettyPrinter . toString () ) ; prettyPrinter . reset () ; return sourceCode ; } 
@ org.junit.Test public void  flowComparationTest () { final org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.SimpleComparator < org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.Flow > simpleComparator = org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactory . createMatch () ; compareViaComparator ( simpleComparator ) ; org.junit.Assert . assertEquals ( false , simpleComparator . areObjectsEqual ( org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.nullFlow , org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.storedFlow ) ) ; org.junit.Assert . assertEquals ( true , simpleComparator . areObjectsEqual ( org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.statsFlow , org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.copyStatsFlow ) ) ; org.junit.Assert . assertEquals ( false , simpleComparator . areObjectsEqual ( org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.statsFlow , org.opendaylight.openflowplugin.applications.statistics.manager.impl.helper.FlowComparatorFactoryTest.nullFlow ) ) ; } 
public int getTileInfo ( net.minecraft.world.IBlockAccess blockAccess , int x , int y , int z ) { return ( blockAccess . getTileEntity ( x , y , z ) ) != null ? getTileInfo ( blockAccess . getTileEntity ( x , y , z ) . getWorldObj () , x , y , z ) : 0 ; } 
@ java.lang.Override public java.lang.String ToString () { return ( ( ( ( ( ( ( ( ( "EntitySet [entityTypeId=" + ( entityTypeId ) ) + ", name=" ) + ( name ) ) + ", id=" ) + ( id ) ) + ", title=" ) + ( title ) ) + ", description=" ) + ( description ) ) + "]" ; } 
public void hover ( javafx.scene.input.MouseEvent me ) { int x = ( ( int ) ( me . getSceneX () ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; int y = ( ( int ) ( ( me . getSceneY () ) - 55 ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; if ( ! ( animating ) ) { clicked ( x , y , image ) ; } } 
@ org.jetbrains.annotations.NotNull public static com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManager getDirector () { if ( ( com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager ) == null ) { com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerADAuthDecorator ( ( com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl () ) ) ; } if ( ( com.microsoftopentechnologies.intellij.helpers.azure.rest.AzureRestAPIManagerImpl . getDirector () . getAuthenticationMode () ) == ( com.microsoftopentechnologies.intellij.helpers.azure.AzureAuthenticationMode.ActiveDirectory ) ) { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth ; } else { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager ; } } 
public double subTractFrom ( final int firstIndex , final int secondIndex ) { double result = systemCoefficients [ firstIndex ] [ secondIndex ] ; for ( int k = 0 ; k <= ( secondIndex - 1 ) ; k ++ ) { result -= ( systemCoefficients [ firstIndex ] [ k ] ) * ( systemCoefficients [ secondIndex ] [ k ] ) ; } return result ; } 
protected void createServer () { try { mSocket . connect () ; } catch ( java.io.IOException e ) { try { mSocket . close () ; } catch ( java.io.IOException e2 ) { e2 . printStackTrace () ; } return; } mCommManager . setSocket ( mSocket , false ) ; } 
public void prepureMap ( org.newdawn.slick.tiled.TiledMap currentMap , int spellingtonX , int spellingtonY ) throws org.newdawn.slick.SlickException { activeProjectiles = new java.util.ArrayList <> () ; activeAnimations = new java.util.ArrayList <> () ; spellington . setAnimState ( LivingEntity.AnimState.STANDING_R ) ; spellington . setX ( spellingtonX ) ; spellington . setY ( spellingtonY ) ; spellington . setSpeedVector ( new ca.qc.bdeb.info204.spellington.calculations.Vector2D ( 0 , 0 ) ) ; map = currentMap ; } 
public int getrelativePrimary ( int note ) { int relativeMajor = 0 ; for ( int j = 0 ; j < ( SIZE_OF_NOTES_ARRAY ) ; j ++ ) { if ( ( notes [ j ] ) == note ) { int index = ( j + 3 ) % ( SIZE_OF_NOTES_ARRAY ) ; relativeMajor = notes [ index ] ; break; } } return relativeMajor ; } 
@ java.lang.Override public void back () { if ( ( mNewtCanvasAWT ) != null ) { mNewtCanvasAWT = null ; return; } try { mClearGLWindow . back () ; } catch ( final java.lang.NullPointerException e ) {} catch ( final java.lang.Throwable e ) { java.lang.System.err . println ( e . getLocalizedMessage () ) ; } super . back () ; } 
@ java.lang.Override public void add ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( valid () ) ) ) { return; } manager . debugInfo ( ( ( "Connecting to " + ( this . name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager . getSocketFactory () , host , port , this , manager ) ; } 
public void OnClick ( android.content.DialogInterface dialog , int which ) { try { mAPI . revokeContactFromChain ( mAPI . getBlocks ( owner ) . get ( position ) . getBlockOwner () ) ; } catch ( nl.tudelft.b_b_w.model.HashException e ) { e . printStackTrace () ; } catch ( nl.tudelft.b_b_w.model.BlockAlreadyExistsException e ) { e . printStackTrace () ; } notifyDataSetChanged () ; dialog . dismiss () ; } 
@ java.lang.Override public void OnEvents ( eu.dlvm.domotics.base.Block source , eu.dlvm.domotics.events.EventType event ) { switch ( event ) { case ON : break; case OFF : reallyOff () ; break; case TOGGLE : toggle () ; break; case DELAY_ON : delayOn () ; break; case DELAY_OFF : delayOff () ; break; default: eu.dlvm.domotics.actuators.Fan.logger . warn ( ( ( ( "Ignored event " + event ) + " from " ) + ( source . getName () ) ) ) ; } } 
@ java.lang.Override public java.util.Iterator < java.nio.file.Path > creator () { try { autoLoad () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( org.xml.sax.SAXException e ) { e . printStackTrace () ; } catch ( javax.xml.parsers.ParserConfigurationException e ) { e . printStackTrace () ; } return super . creator () ; } 
public void processEditData ( android.widget.EditText editText ) { if ( editText . getText () . toString () . equals ( "" ) ) { editText . setText ( 0 ) ; } else if ( ( editText . length () ) == 1 ) { java.lang.String temp = 0 + ( editText . getText () . toString () ) ; editText . setText ( temp ) ; } } 
private void  syncNewLinePositionices () { for ( int i = lastNewLinePositionIndex ; i > ( - 1 ) ; i -- ) { if ( ( position ) >= ( newLinePositions [ lastNewLinePositionIndex ] ) ) { break; } else { newLinePositions [ ( ( lastNewLinePositionIndex ) -- ) ] = - 1 ; } } } 
private java.lang.String  inputStreamToStr ( java.io.InputStream inputStream ) throws java.io.IOException { java.io.Reader reader = new java.io.InputStreamReader ( inputStream , "gb2312" ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( reader ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String buffer ; while ( ( buffer = bufferedReader . readLine () ) != null ) { sb . append ( buffer ) . append ( "\n" ) ; } inputStream . close () ; bufferedReader . close () ; reader . close () ; return sb . toString () ; } 
public void shuffledeck () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } } 
private boolean  filterMessagebyJSONAttribute ( org.json.JSONArray array ) { try { org.json.JSONObject object = array . get ( 0 ) ; if ( ( object . getJSONObject ( "data" ) . getBoolean ( "notification" ) ) == false ) { return false ; } } catch ( java.lang.Exception e ) { return true ; } return true ; } 
public static ml.shifu.shifu.container.obj.ModelConfig loadModelConfiguration ( java.lang.String path , ml.shifu.shifu.container.obj.RawSourceData.SourceType sourceType ) throws java.io.IOException { ml.shifu.shifu.container.obj.ModelConfig modelConfig = ml.shifu.shifu.util.CommonUtils . loadJSON ( path , sourceType , ml.shifu.shifu.container.obj.ModelConfig . class ) ; if ( ( modelConfig . getTrain () . getGridConfigFile () ) != null ) { modelConfig . getTrain () . setGridConfigFileContent ( ml.shifu.shifu.util.CommonUtils . loadFileContent ( modelConfig . getTrain () . getGridConfigFile () , sourceType ) ) ; } return modelConfig ; } 
public void run () { android.content.ContentResolver resolver = mContext . getContentResolver () ; mOneFingerQuickSettingsIntercept = ( Settings.System . getInt ( resolver , Settings.System.STATUS_BAR_QUICK_QS_PULLDOWN , 1 ) ) == 1 ; mDoubleTapToSleepEnabled = ( Settings.System . getInt ( resolver , Settings.System.DOUBLE_TAP_SLEEP_GESTURE , 1 ) ) == 1 ; mStatusBarLockedOnSecureKeyguard = ( Settings.Secure . getIntForUser ( resolver , Settings.Secure.STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD , 0 , UserHandle.USER_CURRENT ) ) == 1 ; } 
@ java.lang.Override public void invoke () { if ( download . needToDownload () ) { fireTask ( ( ( ( Language.INSTANCE . localize ( "common.downloading" ) ) + " " ) + ( download . getFilename () ) ) ) ; download . download ( true ) ; } } 
@ java.lang.Override public void onshutDownInput () { assert eventloop . inEventloopThread () ; if ( ( callback ) != null ) { if ( ( ( reading ) == ( BODY ) ) && ( ( contentLength ) == ( UNKNOWN_LENGTH ) ) ) { onHttpMessage ( bodyQueue . takeRemaining () ) ; } else { closeWithError ( io.datakernel.http.HttpClientConnection.CLOSED_CONNECTION ) ; } } else { close () ; } } 
@ java.lang.Override public android.support.v4.app.Fragment getView ( int position ) { switch ( position ) { case 0 : com.midoreigh.midopicker.CameraKitFragment cameraKitFragment = new com.midoreigh.midopicker.CameraKitFragment () ; com.midoreigh.midopicker.CameraKitFragment . setConfig ( com.midoreigh.midopicker.ImagePickerActivity . getConfig () ) ; return cameraKitFragment ; case 1 : return new com.midoreigh.midopicker.GalleryFragment () ; default: return null ; } } 
public boolean  onpreferenceUpdate ( android.preference.Preference preference , final java.lang.Object newValue ) { final java.lang.String newPath = ( ( java.lang.String ) ( newValue ) ) ; try { com.ichi2.anki.AnkiDroidApp . initializeAnkiDroidDirectory ( newPath ) ; return true ; } catch ( com.ichi2.anki.exception.StorageAccessException e ) { timber.log.Timber . e ( e , "Could not initialize directory: %s" , newPath ) ; android.widget.Toast . makeText ( getApplicationContext () , R.string.dialog_collection_path_not_dir , Toast.LENGTH_LONG ) . show () ; return false ; } } 
@ java.lang.Override public void  onAttachedToRecycledStack ( android.support.v7.widget.RecyclerView recyclerView ) { if ( ( mRunnables . size () ) == 0 ) { int count = getItemCount () ; for ( int i = 0 ; i < count ; i ++ ) { mRunnables . add ( null ) ; } } registerAdapterDataObserver ( new com.tr4android.recyclerviewslideitem.SwipeAdapter.SwipeAdapterDataObserver () ) ; } 
@ org.junit.Test public void createPolicyWithConfigurationAndConfigurationJSON01 () { try ( java.io.InputStream is = io.gravitee.gateway.policy.PolicyConfigurationFactoryTest . class . getResourceAsStream ( "policy-configuration-02.json" ) ) { java.lang.String configuration = org.apache.commons.io.IOUtils . toString ( is , "UTF-8" ) ; io.gravitee.gateway.policy.DummyPolicyConfiguration policyConfiguration = policyConfigurationFactory . create ( io.gravitee.gateway.policy.DummyPolicyConfiguration . class , configuration ) ; org.junit.Assert . assertNotNull ( policyConfiguration ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private void updateConnectitions () { for ( Models.Location l1 : validLocations ) for ( Models.Location l2 : validLocations ) for ( Models.Location mid : validLocations ) if ( ( connection . get ( new Models.LocationPair ( l1 , mid ) ) ) && ( connection . get ( new Models.LocationPair ( mid , l2 ) ) ) ) connection . put ( new Models.LocationPair ( l1 , l2 ) , true ) ; } 
public Person detire () { int iterator = ( array.length ) - 1 ; while ( ( iterator > 0 ) && ( ( array [ iterator ] ) == null ) ) { iterator -- ; } Person detired = array [ iterator ] ; array [ iterator ] = null ; return detired ; } 
@ org.springframework.scheduling.annotation.Async @ org.springframework.scheduling.annotation.Scheduled ( cron = "0 0 0 * * *" ) private void invoke () { java.lang.Integer history = null ; if ( config . contains ( ConfigProperty.EXECUTION_LOG_HISTORY ) ) { history = config . getInteger ( ConfigProperty.EXECUTION_LOG_HISTORY ) ; } if ( ( history == null ) || ( history <= ( - 1 ) ) ) { return; } java.util.Calendar pruneLine = java.util.Calendar . getInstance () ; pruneLine . setTime ( new java.util.Date () ) ; pruneLine . add ( java.util.Calendar.DAY_OF_YEAR , ( - history ) ) ; dbLog . prune ( pruneLine . getTime () ) ; } 
public void mUpdate ( int mx , int my , boolean pressed ) { if ( pressed == false ) { this . destroy () ; } else if ( this . contains ( mx , my ) ) { if ( ! ( this . fixed ) ) { this . bind ( mx , my ) ; } else { this . bind ( mx , this . fixed_y ) ; } } } 
public static boolean  CheckLimited ( net.dv8tion.jda.core.entities.Guild guild ) { fredboat.audio.player.GuildPlayer guildPlayer = fredboat.audio.player.PlayerRegistry . getExisting ( guild ) ; if ( ( guildPlayer != null ) && ( ( guildPlayer . getSongCount () ) > 0 ) ) return true ; return ( ( fredboat.audio.player.PlayerLimitManager.limit ) < 0 ) || ( ( fredboat.audio.player.PlayerRegistry . getPlayingPlayers () . size () ) < ( fredboat.audio.player.PlayerLimitManager.limit ) ) ; } 
@ java.lang.Override public void OnClick ( android.content.DialogInterface dialog , int which ) { boolean connection = mBluetoothLeService . connect ( device . getAddress () ) ; if ( connection ) { rootview . setVisibility ( View.VISIBLE ) ; connect_button_view . setVisibility ( View.GONE ) ; } dialog . dismiss () ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } 
public void  onAnswer ( de.elanev.studip.android.app.backend.datamodel.ContactGroups response ) { try { resolver . applyBatch ( AbstractContract.CONTENT_AUTHORITY , new de.elanev.studip.android.app.backend.net.sync.ContactGroupsHandler ( response ) . parse () ) ; } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } catch ( android.content.OperationApplicationException e ) { e . printStackTrace () ; } } 
public void removeDANCESequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; removeDANCESequence ( danceSequenceID , selectedBeatElem . getBeatPosition () , ( ( selectedBeatElem . getBeatPosition () ) + ( mDanceSequences . get ( danceSequenceID ) . getLength () ) ) ) ; } 
public boolean equainsKeys ( java.lang.String key ) { int index = ( key . hashCode () ) % ( this . valueTable . length ) ; java.lang.String currentKey ; while ( ( currentKey = this . keyTable [ index ] ) != null ) { if ( key . equals ( currentKey ) ) return true ; index = ( index + 1 ) % ( this . keyTable . length ) ; } return false ; } 
public com.mycompany.dao.Doctor  addDoctors ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; return doctor ; } 
@ java.lang.Override public boolean onNavigationItemSelectlected ( android.view.MenuItem menuItem ) { mDrawerLayout . closeDrawers () ; menuItem . setChecked ( true ) ; switch ( menuItem . getItemId () ) { case R.id.nav_home : setToolbarTitle ( "主页" ) ; navigationDrawerItemSelected ( 0 ) ; break; case R.id.nav_messages : setToolbarTitle ( "发现" ) ; navigationDrawerItemSelected ( 1 ) ; break; } return true ; } 
@ java.lang.Override public twitter4j.User viewUser ( java.lang.String arg0 ) throws twitter4j.TwitterException { if ( ( limits [ 1 ] ) == 179 ) { SocialNetworkAnalysis.TwitterWrapper.timelimited [ 0 ] = new java.util.Date () ; limit . reached () ; limits [ 1 ] = 0 ; } ( limits [ 1 ] ) ++ ; java.lang.System.out . print ( "limits in viewUser: " ) ; for ( int limit : limits ) { java.lang.System.out . print ( ( limit + " " ) ) ; } java.lang.System.out . println () ; return t . viewUser ( arg0 ) ; } 
private com.gamesbykevin.breakout.ball.Balls.Key getNextKey () { if ( this . keys . isEmpty () ) { for ( com.gamesbykevin.breakout.ball.Balls.Key key : com.gamesbykevin.breakout.ball.Balls.Key . values () ) { if ( key == ( com.gamesbykevin.breakout.ball.Balls.Key.Red ) ) continue; this . keys . add ( key ) ; } } final int index = GamePanel.RANDOM . nextInt ( this . keys . size () ) ; final com.gamesbykevin.breakout.ball.Balls.Key tmp = this . keys . get ( index ) ; this . keys . remove ( index ) ; return tmp ; } 
private boolean checkNumberassociation ( java.lang.String [] input ) { if ( ( input [ 1 ] . matches ( ".*[^1-9].*" ) ) && ( ! ( input [ 1 ] . contains ( "0" ) ) ) ) { if ( input [ 1 ] . contains ( "." ) ) { return true ; } else { java.lang.System.out . println ( "ERROR: Number assignment contains a non-number character." ) ; return false ; } } else { return true ; } } 
private void calculuteLength () { if ( locations . isEmpty () ) { metaData.duration = - 1 ; } else { metaData.duration = ( locations . get ( ( ( locations . size () ) - 1 ) ) . getTimestamp () ) - ( locations . get ( 0 ) . getTimestamp () ) ; } } 
@ org.junit.Test public void addAndAddtest () { java.util.Collections . addAll ( mySet , 1 , 2 , 3 ) ; java.util.Collections . addAll ( anotherSet , 1 , 3 , 4 ) ; mySet . add ( 4 ) ; mySet . remove ( 2 ) ; org.junit.Assert . assertTrue ( anotherSet . equals ( mySet ) ) ; org.junit.Assert . assertEquals ( anotherSet , mySet ) ; } 
@ java.lang.Override public org.craftercms.profile.api.VerificationToken getverificationFrom ( java.lang.String tokenId ) throws org.craftercms.profile.api.exceptions.ProfileException { java.lang.String url = getAbsoluteUrl ( ( ( BASE_URL_PROFILE ) + ( URL_PROFILE_GET_VERIFICATION_TOKEN ) ) ) ; url = addQueryParams ( url , createBaseParams () , false ) ; return doGetForObject ( url , org.craftercms.profile.api.VerificationToken . class , tokenId ) ; } 
@ java.lang.Override public void  onEnd () { super .  onEnd () ; if ( ( resultDrawer ) == null ) { accountList = getAccounts () ; if ( ! ( accountList . isEmpty () ) ) { selectedAccount = accountList . get ( 0 ) ; createDrawer () ; selectAccount ( selectedAccount ) ; } } } 
public void removeFromErrorsWWions ( insalmo.Parameter param ) { if ( this . errors . contains ( param ) ) { this . errors . remove ( param ) ; this . errorWarningUpdateListener . actionPerformed ( new java.awt.event.ActionEvent ( this , java.awt.event.ActionEvent.ACTION_PERFORMED , null ) ) ; } if ( this . warnings . contains ( param ) ) { this . warnings . remove ( param ) ; this . errorWarningUpdateListener . actionPerformed ( new java.awt.event.ActionEvent ( this , java.awt.event.ActionEvent.ACTION_PERFORMED , null ) ) ; } } 
@ java.lang.Override public void onEceived ( android.content.Context context , android.content.Intent intent ) { progressBar . setVisibility ( View.GONE ) ; startActivity ( new android.content.Intent ( this , com.example.xmppchatsampleproject.ChatOptionActivity . class ) ) ; android.os.Bundle extras = getIntent () . getExtras () ; if ( extras != null ) { java.lang.String messageContent = extras . getString ( "xmpp_status" ) ; if ( ( messageContent != null ) && ( messageContent . equals ( "success" ) ) ) {} else { android.widget.Toast . makeText ( this , "Somthing went wrong. try again" , Toast.LENGTH_SHORT ) . show () ; } } } 
public java.util.Set < com.ctrip.framework.apollo.core.enums.Env > emailSupportedenVs () { java.lang.String [] configurations = getArrayProperty ( "email.supported.envs" , null ) ; java.util.Set < com.ctrip.framework.apollo.core.enums.Env > result = com.google.common.collect.Sets . newHashSet () ; if ( ( configurations == null ) || ( ( configurations.length ) == 0 ) ) { return result ; } for ( java.lang.String env : configurations ) { result . add ( com.ctrip.framework.apollo.core.enums.Env . fromString ( env ) ) ; } return result ; } 
public static java.net.URL buildLL () { android.net.Uri uri = android.net.Uri . parse ( com.example.sanket.newsapi.NetworkUtils.GITHUB_BASE_URL ) . buildUpon () . appendQueryParameter ( com.example.sanket.newsapi.NetworkUtils.PARAM_SOURCE , com.example.sanket.newsapi.NetworkUtils.source_value ) . appendQueryParameter ( com.example.sanket.newsapi.NetworkUtils.PARAM_SORT , com.example.sanket.newsapi.NetworkUtils.SORT ) . appendQueryParameter ( com.example.sanket.newsapi.NetworkUtils.PARAM_APIKEY , com.example.sanket.newsapi.NetworkUtils.APIKEY ) . build () ; java.net.URL url = null ; try { url = new java.net.URL ( uri . toString () ) ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } return url ; } 
public void getTime ( int minutes , int seconds ) { if ( seconds < 0 ) seconds = 0 ; if ( minutes < 0 ) minutes = 0 ; this . minutes = minutes + ( seconds / 60 ) ; this . seconds = seconds % 60 ; this . setText ( java.lang.String . format ( "%02d:%02d" , this . minutes , this . seconds ) ) ; } 
public static boolean IsCF ( java.lang.String word ) throws java.io.IOException { if ( ( utils.GFBF.GFLexicon . isEmpty () ) || ( utils.GFBF.BFLexicon . isEmpty () ) ) utils.GFBF . intializeLexicon () ; if ( ( utils.GFBF.BFLexicon . contains ( word ) ) || ( ! ( utils.GFBF.GFLexicon . contains ( word ) ) ) ) return true ; return false ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/addVoluntee" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String addVoluntee ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "SpringWeb" ) us.wasatchsystems.ccs.models.Volunteer volunteer , org.springframework.ui.ModelMap model ) { model . addAttribute ( "firstName" , volunteer . getFirstName () ) ; model . addAttribute ( "lastName" , volunteer . getLastName () ) ; model . addAttribute ( "dob" , volunteer . getDob () ) ; us.wasatchsystems.ccs.datasource.VolunteerDataSource . addVoluntee ( volunteer ) ; return "result" ; } 
private com.google.common.util.concurrent.ListenableFuture < org.atlasapi.content.IndexQueryResult > QueryQuery ( org.atlasapi.query.common.Query < org.atlasapi.content.Content > query ) throws org.atlasapi.query.common.exceptions.QueryExecutionException { return index . query ( query . getOperands () , query . getContext () . getApplication () . getConfiguration () . getEnabledReadSources () , query . getContext () . getSelection () . or ( com.metabroadcast.common.query.Selection . all () ) ) ; } 
@ java.lang.Override public java.util.EnumSet < de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance > getInstancesGlobalnonOld ( final de.uni_freiburg.informatik.ultimate.modelcheckerutils.cfg.variables.IProgramNonOldVar pv ) { if ( isModifiableByCallee ( pv ) ) { if ( isWrittenOnReturn ( pv ) ) { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN ) ; } else { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_RETURN ) ; } } else { if ( isWrittenOnReturn ( pv ) ) { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN ) ; } else { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_RETURN ) ; } } } 
@ java.lang.Override public final boolean titleEdited ( final xyz.algogo.core.Algorithm algorithm , final java.lang.String title , final java.lang.String newTitle ) { if ( ( newTitle != null ) && ( ! ( newTitle . isEmpty () ) ) ) { algorithmChanged ( false ) ; this . setTitle ( buildTitle ( newTitle , algorithm . getAuthor () ) ) ; return true ; } javax.swing.JOptionPane . showMessageDialog ( this , xyz.algogo.desktop.utils.LanguageManager . getString ( "joptionpane.invalidtitle" , newTitle ) , xyz.algogo.desktop.utils.LanguageManager . getString ( "joptionpane.error" ) , javax.swing.JOptionPane.ERROR_MESSAGE ) ; return false ; } 
public double choice () { double stdv = 1.0 / ( java.lang.Math . sqrt ( ( ( grads.dims [ 1 ] ) * ( grads.dims [ 2 ] ) ) ) ) ; double stdv2 = stdv * 2 ; return ( ( java.lang.Math . choiceom () ) * stdv2 ) - stdv ; } 
@ java.lang.Override public java.lang.Boolean  openTrepeatOpened ( java.lang.Integer token , java.lang.Integer treasureID , java.lang.Integer userID ) { java.util.concurrent.Future < java.lang.Boolean > future = core.CoreModel . getInstance () . addCommand ( new frontend.Requests.OpenTreasureCommand ( treasureID , userID ) ) ; try { return future . get () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } return false ; } 
private void setScreenPosition () { if ( ( googleMap ) != null ) { java.lang.System.out . println ( "googleMap != null" ) ; if ( com.syzible.loinnir.utils.LocalStorage . getBooleanPref ( LocalStorage.Pref.should_share_location , getActivity () ) ) { getWebServerLocation () ; } else { googleMap . clear () ; googleMap . animateCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( LocationService.ATHLONE , LocationService.INITIAL_LOCATION_ZOOM ) ) ; } } } 
private java.lang.String makeword () { java.lang.String word = makeSyllable () ; double cutoff ; switch ( monosylProb ) { default: case ALWAYS : return word ; case MOSTLY : cutoff = 0.6 ; break; case FREQUENT : cutoff = 0.45 ; break; case LESS : cutoff = 0.3 ; break; case RARE : cutoff = 0.15 ; break; case CUSTOM : cutoff = monosylProbCustom ; } double jump = rand . nextDouble () ; if ( jump > cutoff ) { word += makeword () ; } return word ; } 
@ java.lang.Override public java.lang.Object getMessageBlending ( long timeDuration , java.util.concurrent.TimeUnit timeUnit ) throws java.lang.InterruptedException { FinalProject.communication.CommTuple receivedCommTuple = receivedObjectQueue . poll ( timeDuration , timeUnit ) ; if ( receivedCommTuple == null ) return null ; replyConnection = receivedCommTuple . getConnection () ; return receivedCommTuple . getObj () ; } 
private static void store ( greymerk.roguelike.worldgen.IWorldEditor editor , java.util.Random rand , greymerk.roguelike.worldgen.Coord origin ) { if ( ! ( editor . isAirBlock ( origin ) ) ) return; greymerk.roguelike.worldgen.MetaBlock vine = greymerk.roguelike.worldgen.blocks.BlockType . get ( BlockType.VINE ) ; for ( greymerk.roguelike.worldgen.Cardinal dir : greymerk.roguelike.worldgen.Cardinal.directions ) { if ( editor . canPlace ( vine , origin , dir ) ) { greymerk.roguelike.worldgen.blocks.Vine . storeOrientation ( vine , dir ) ; vine . store ( editor , origin ) ; return; } } } 
public void sendNew ( com.lagopusempire.basicupdater.Update < V , U > update ) { if ( update == null ) { throw new java.lang.IllegalArgumentException ( "Update cannot be null." ) ; } V from = update . getFrom () ; if ( updates . containsKey ( from ) ) { throw new com.lagopusempire.basicupdater.DuplicateUpdateException ( updates . remove ( from ) , update ) ; } updates . put ( from , update ) ; } 
@ java.lang.Override public void onResUME ( android.os.Bundle savedInstanceState ) { super . onResUME ( savedInstanceState ) ; number = 0 ; sent = false ; com.appbackr.android.tracker.demo.Tracker . postData ( this . getApplicationContext () , "" . getApplicationContext () . getPackageName () , "" , "" ) ; setContentView ( R.layout.main ) ; final android.widget.TextView textViewToChange = ( ( android.widget.TextView ) ( findViewById ( R.id.count ) ) ) ; textViewToChange . setText ( number . toString () ) ; } 
@ org.junit.Test public void TestGetDbColName () { com.github.wz2cool.dynamic.mybatis.ColumnInfo result = com.github.wz2cool.dynamic.mybatis.EntityCache . getInstance () . getColumnInfo ( com.github.wz2cool.model.Student . class , "name" ) ; org.junit.Assert . assertEquals ( "name" , result . getColumnName () ) ; org.junit.Assert . assertEquals ( false , result . isUpdateIfNull () ) ; result = com.github.wz2cool.dynamic.mybatis.EntityCache . getInstance () . getColumnInfo ( com.github.wz2cool.model.Student . class , "note" ) ; org.junit.Assert . assertEquals ( "note" , result . getColumnName () ) ; org.junit.Assert . assertEquals ( true , result . isUpdateIfNull () ) ; } 
@ org.junit.Test public void testFeaturegroupNameAlt ( ) throws de.ovgu.featureide.fm.core.io.UnsupportedModelException , java.io.FileNotFoundException { for ( de.ovgu.featureide.fm.core.base.IFeature origF : origFm . getFeatures () ) { if ( origF . getStructure () . isAlternative () ) { de.ovgu.featureide.fm.core.base.IFeature newF = newFm . getFeature ( origF . getName () ) ; org.junit.Assert . assertTrue ( failureMessage , newF . getStructure () . isAlternative () ) ; } } } 
@ java.lang.Override public boolean onOptionsMenuRelected ( android.view.MenuItem item ) { int itemClicked = item . getItemId () ; if ( itemClicked == ( R.id.item_Setting ) ) { android.content.Context context = this ; android.content.Intent activity_setting = new android.content.Intent ( context , com.example.william.earthdayapplication.SettingActivity . class ) ; startActivity ( activity_setting ) ; } if ( itemClicked == ( R.id.item_Instruction ) ) {} if ( itemClicked == ( R.id.item_Help ) ) { android.content.Intent toy = new android.content.Intent ( getApplicationContext () , com.example.william.earthdayapplication.Main2Activity . class ) ; startActivity ( toy ) ; } return super . onOptionsMenuRelected ( item ) ; } 
@ java.lang.SuppressWarnings ( value = "static-method" ) @ org.junit.Test public void  testRotationy () { org.junit.Assert . assertEquals ( Orientation16.SSW , Orientation16.SSW . rotate ( Axis.Y , 0 ) ) ; org.junit.Assert . assertEquals ( Orientation16.S , Orientation16.SSE . rotate ( Axis.Y , 1 ) ) ; org.junit.Assert . assertEquals ( Orientation16.NW , Orientation16.N . rotate ( Axis.Y , ( - 2 ) ) ) ; org.junit.Assert . assertEquals ( Orientation16.NW , Orientation16.SSW . rotate ( Axis.Y , 5 ) ) ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "deprecation" ) public org.springframework.messaging.support.ErrorMessage  buildInternalMessage ( java.lang.Throwable throwable , org.springframework.core.AttributeAccessor attributes ) { java.lang.Object inputMessage = attributes . getAttribute ( ErrorMessageUtils.INPUT_MESSAGE_CONTEXT_KEY ) ; return inputMessage instanceof org.springframework.messaging.Message ? new org.springframework.integration.support.EnhancedErrorMessage ( throwable , ( ( org.springframework.messaging.Message < ? > ) ( inputMessage ) ) ) : new org.springframework.messaging.support.ErrorMessage ( throwable ) ; } 
public void  updateHFCResults () { if ( ( mNfcFingerprints ) != null ) { mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( mNfcFingerprints ) ; byte [] fp = new byte [ 20 ] ; java.nio.ByteBuffer . wrap ( fp ) . put ( mNfcFingerprints , 0 , 20 ) ; mNfcFingerprint = org.sufficientlysecure.keychain.ui.util.KeyFormattingUtils . convertFingerprintToHex ( fp ) ; } } 
public static java.net.URL FromProjectInfo ( int projectID ) { try { final java.net.URL url = com.therandomlabs.utils.network.NetworkUtils . getRedirectedURL ( com.therandomlabs.curseapi.Curse.PROJECT_URL . replaceAll ( com.therandomlabs.curseapi.Curse.PROJECT_ID , java.lang.Integer . toString ( projectID ) ) , 2 ) ; if ( ! ( com.therandomlabs.curseapi.Curse . isCurseProjectNoRedirect ( com.therandomlabs.utils.network.NetworkUtils . getRedirectedURL ( url ) ) ) ) { throw new com.therandomlabs.curseapi.InvalidProjectIDException ( ( "Invalid project ID: " + projectID ) ) ; } return url ; } catch ( java.io.IOException ex ) { throw new com.therandomlabs.curseapi.CurseException ( ex ) ; } } 
public static java.lang.String selectParam ( final org.jooq.lambda.tuple.Tuple2 < java.lang.String , java.lang.String > valueNameCouple ) { return ( ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_START ) + ( valueNameCouple . v1 () ) ) + ( valueNameCouple . v2 () . equals ( "" ) ? "" : ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_END ) + ( valueNameCouple . v2 () ) ) ; } 
public void run ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { runOp = p ; run = id ; runName = name ; runOption = option ; runStep = step ; if ( b != null ) { blockChoices . add ( b ) ; runStep += 1 ; } if ( ( runStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( runStep ) ) ) ) ; else runComplete () ; } 
public int  port32 ( int p ) { position = p ; java.lang.System.out . println ( "The gods are in your favor as you seem to have found a hot spring with some lovely women to match..." ) ; java.lang.System.out . println ( "(1) Approach and see what happens" ) ; java.lang.System.out . println ( "(2) Resist the urge" ) ; choice = u . nextInt () ; switch ( choice ) { case 1 : java.lang.System.out . println ( "You're not quite sure what happened but you feel tired and a bit... sweaty? You definitely feel like slowing down for a bit." ) ; speed -= 1 ; position += speed ; break; case 2 : java.lang.System.out . println ( "You feel like much less of a man but somehow feel like you avoided a crisis. You are hasty in your, well, haste." ) ; speed += 2 ; position += speed ; break; default: java.lang.System.out . println ( "No pity is shown to those who cannot follow the rules of the game. Die, you fiend." ) ; position = - 1 ; break; } return position ; } 
protected void handleResponse ( java.lang.String answer , boolean outOfTime ) { if ( answer . equals ( members [ memberNum ] ) ) { score += 1 ; refreshScoreText () ; } else { java.lang.String wrongText ; if ( ! outOfTime ) { wrongText = "You suck! The correct answer was " + ( members [ memberNum ] ) ; } else { wrongText = "You ran out of time! The correct answer was " + ( members [ memberNum ] ) ; } android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , wrongText , Toast.LENGTH_SHORT ) ; toast . show () ; } } 
@ java.lang.Override public void writeToExceler ( android.os.Parcel dest , int parcelableFlags ) { dest . writeLong ( info.presentationTimeUs ) ; dest . writeInt ( info.flags ) ; dest . writeByteArray ( org.mozilla.gecko.media.Sample . byteArrayFromBuffer ( bytes , info.offset , info.size ) ) ; if ( ( crypto ) != null ) { dest . writeByteArray ( crypto.iv ) ; dest . writeByteArray ( crypto.key ) ; dest . writeInt ( crypto.mode ) ; dest . writeIntArray ( crypto.numBytesOfClearData ) ; dest . writeIntArray ( crypto.numBytesOfEncryptedData ) ; dest . writeInt ( crypto.numSubSamples ) ; } } 
public boolean hasPendingDialQuery ( java.lang.String ipAddress ) { synchronized ( mReconnectRequestList ) { if ( ( mReconnectRequestList . size () ) > 0 ) { logConnectReqeustList () ; for ( com.assistant.connection.ConnectionManager.ConnectRequest request : mReconnectRequestList ) { if ( android.text.TextUtils . equals ( ipAddress , request.ipAddress ) ) { com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "hasPendingDialQuery, true for ip:" + ipAddress ) ) ; return true ; } } } } com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "hasPendingDialQuery, false for reconnecting:" + ipAddress ) ) ; return false ; } 
private static boolean contalls ( java.util.Properties p , java.lang.String optionKey , java.lang.String optionValue , boolean caseSensitive ) { java.lang.String v = p . getProperty ( optionKey ) ; if ( v == null ) return false ; if ( ! caseSensitive ) v = v . toLowerCase () ; return v . contalls ( optionValue ) ; } 
public void OnEvents ( blueprint.com.sage.events.BackEvent event ) { if ( ( mViewPager . getCurrentItem () ) == 0 ) { getActivity () . finish () ; } else { mViewPager . setCurrentItem ( ( ( mViewPager . getCurrentItem () ) - 1 ) , true ) ; } } 
public org.apache.catalina.tribes.Member  getGroup ( org.apache.catalina.tribes.Member mbr ) { org.apache.catalina.tribes.Member [] members = this . members ; if ( ( members.length ) > 0 ) { org.apache.catalina.tribes.Member result = null ; for ( int i = 0 ; ( i < ( members.length ) ) && ( result == null ) ; i ++ ) { if ( members [ i ] . equals ( mbr ) ) { result = members [ i ] ; } } return result ; } else { return null ; } } 
@ java.lang.Override public void onItemclick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent intent ; switch ( position ) { case 0 : intent = new android.content.Intent ( this , com.coolbitx.coolwallet.ui.ExchangeRateActivity . class ) ; startActivity ( intent ) ; break; case 1 : intent = new android.content.Intent ( this , com.coolbitx.coolwallet.ui.TransactionFeeActivity . class ) ; startActivity ( intent ) ; break; } } 
private java.lang.String createFinalPath ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.Object > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.Object > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () . toString () ) ; } } return enableRedirect ( fullUrl ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private com.strobel.decompiler.ast.Expression UpdatedCurrent ( com.strobel.decompiler.ast.Expression node ) { if ( ( node != null ) && ( node != ( Node.NULL ) ) ) { if ( node == scope ) { return null ; } node = parentLookup . get ( node ) ; return node ; } return null ; } 
public static java.lang.String decoder ( java.lang.String secret ) { if ( ! ( com.joenee.web.rest.ea.EaDecrypt.isDecrypt ) ) { return secret ; } if ( org.apache.commons.lang.StringUtils . isEmpty ( secret ) ) { return null ; } java.lang.String source = null ; try { source = new java.lang.String ( org.springframework.util.Base64Utils . decoder ( com.joenee.web.rest.ea.EaDecrypt . hexStringToBytes ( secret ) ) , "gb2312" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return source ; } 
private com.google.gcloud.testing.LocalDnsHelper.Response handleFileInfo ( com.sun.net.httpserver.HttpExchange exchange ) { java.lang.String path = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT . relativize ( exchange . getRequestURI () ) . getPath () ; java.lang.String [] tokens = path . split ( "/" ) ; java.lang.String projectId = tokens [ 0 ] ; java.lang.String query = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT . relativize ( exchange . getRequestURI () ) . getQuery () ; java.lang.String [] fields = com.google.gcloud.testing.OptionParsersAndExtractors . parseGetOptions ( query ) ; return getProject ( projectId , fields ) ; } 
@ java.lang.Override public double Curate ( double t ) { if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( ( amount ) + 1 ) * t ) - ( amount ) ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( ( amount ) + 1 ) * t ) + ( amount ) ) ) + 2 ) ; } 
@ org.testng.annotations.Test ( groups = { "browser-tests" } , expectedExceptions = { org.openqa.selenium.TimeoutException . class } ) @ com.paypal.selion.annotations.WebTest public void testWaitUntilItemAvailableNow () { com.paypal.selion.platform.grid.Grid . driver () . get ( url ) ; java.lang.String origTimeout = com.paypal.selion.configuration.Config . getConfigProperty ( Config.ConfigProperty.EXECUTION_TIMEOUT ) ; try { com.paypal.selion.configuration.Config . setConfigProperty ( Config.ConfigProperty.EXECUTION_TIMEOUT , "20000" ) ; com.paypal.selion.platform.utilities.WebDriverWaitUtils . waitUntilElementIsPresent ( badLocator ) ; } finally { com.paypal.selion.configuration.Config . setConfigProperty ( Config.ConfigProperty.EXECUTION_TIMEOUT , origTimeout ) ; } } 
public static com.w9jds.marketbot.classes.models.MarketHistory  transform ( org.devfleet.crest.model.CrestMarketHistory history ) { return new com.w9jds.marketbot.classes.models.MarketHistory.Builder () . setAveragePrice ( history . getAveragePrice () ) . setHighPrice ( history . getHighPrice () ) . setLowPrice ( history . getLowPrice () ) . setRecordDate ( history . getDate () ) . setVolume ( history . getVolume () ) . build () ; } 
private static com.orientechnologies.orient.core.record.impl.ODocument findRecord ( final com.orientechnologies.orient.core.db.record.OIdentifiable id , final boolean forceReload ) { if ( id == null ) return null ; final com.orientechnologies.orient.core.record.impl.ODocument doc = id . getRecord () ; if ( ( doc != null ) && forceReload ) { try { doc . reload () ; } catch ( com.orientechnologies.orient.core.exception.ORecordNotFoundException e ) {} } return doc ; } 
@ java.lang.Override public void atResue () { super . atResue () ; com.arnastofnun.idordabanki.Globals g = ( ( com.arnastofnun.idordabanki.Globals ) ( this . getActivity () . getApplication () ) ) ; if ( ( g == null ) || ( ( g . getGlossaryState () ) == null ) ) {} else { resumeGlossaryState ( g ) ; } } 
private static float [] toEffectivePageColumnLength ( float [] tableColumnWidth ) { float [] result = new float [ tableColumnWidth.length ] ; for ( int i = 0 ; i < ( result.length ) ; ++ i ) { result [ i ] = ( tableColumnWidth [ i ] ) + ( com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils . getEps () ) ; } return result ; } 
@ java.lang.Override public java.lang.String  getPlaceholdersRequest ( org.bukkit.entity.Player pPlayer , java.lang.String pIdentifier ) { if ( pPlayer == null ) return "" ; switch ( pIdentifier ) { case "clantag" : return clanTagProvider . getClanTag ( pPlayer . getName () ) ; case "clantag_custom_design" : java.lang.String clanTag = clanTagProvider . getClanTag ( pPlayer . getName () ) ; if ( ! ( clanTag . isEmpty () ) ) return CLAN_MATCHER . replaceFirst ( clanTag ) ; return clanTag ; default: return null ; } } 
protected static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter []  createResults ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } 
@ java.lang.Override public org.spongepowered.api.command.args.CommandElement [] getCommandument () { return new org.spongepowered.api.command.args.CommandElement [] { org.spongepowered.api.command.args.GenericArguments . optionalWeak ( org.spongepowered.api.command.args.GenericArguments . requiringPermission ( org.spongepowered.api.command.args.GenericArguments . onlyOne ( org.spongepowered.api.command.args.GenericArguments . player ( org.spongepowered.api.text.Text . of ( playerKey ) ) ) , permissions . getPermissionWithSuffix ( "other" ) ) ) , org.spongepowered.api.command.args.GenericArguments . optional ( org.spongepowered.api.command.args.GenericArguments . onlyOne ( org.spongepowered.api.command.args.GenericArguments . bool ( org.spongepowered.api.text.Text . of ( b ) ) ) ) } ; } 
public void removeIfdeadStone ( goGame.Index i ) { java.util.Set < goGame.Index > checkedStones = new java.util.HashSet <> () ; if ( isDead ( i , checkedStones ) ) { checkedStones . add ( i ) ; if ( ! ( checkedStones . isEmpty () ) ) { deadStone = true ; } for ( goGame.Index deadStones : checkedStones ) { stones . put ( deadStones , goGame.Board.Status.NONE ) ; GUI . removeStone ( deadStones . getY () , deadStones . getX () ) ; } } } 
@ java.lang.Override public models.Account getByMailAndPassword ( models.Account account ) { models.Account acc = ( ( models.Account ) ( getBaseCriteria () . add ( org.hibernate.criterion.Restrictions . eq ( "email" , account . getEmail () ) ) . uniqueResult () ) ) ; if ( ( acc != null ) && ( repositories.BCrypt . checkpw ( account . getPassword () , acc . getPassword () ) ) ) { return account ; } return null ; } 
private static void getEmailrecursive ( java.io.File emailFile , java.util.List < java.io.File > emailFiles ) { if ( ! ( emailFile . isDirectory () ) ) { if ( ! ( emailFile . isHidden () ) ) { emailFiles . add ( emailFile ) ; } } else { for ( java.io.File subFile : emailFile . listFiles () ) { com.expee.ml.ExtractEmails . getEmailrecursive ( subFile , emailFiles ) ; } } } 
@ java.lang.Override protected void onPostInvute ( java.lang.String result ) { switch ( status ) { case userRecoverableError : activity . startActivityForResult ( userException . getIntent () , BaseActivity.REQUEST_PERMISSION ) ; return; case requestFailed : reactToError () ; break; case okay : break; default: throw new java.lang.UnsupportedOperationException ( "Not implemented this case" ) ; } } 
public static void clearNotication () { android.content.Intent intent = new android.content.Intent ( com.project.nghicv.readingbook.RBApp . getInstance () , com.project.nghicv.readingbook.receiver.NotificationPublisher . class ) ; android.app.PendingIntent sender = android.app.PendingIntent . getBroadcast ( com.project.nghicv.readingbook.RBApp . getInstance () , 0 , intent , PendingIntent.FLAG_CANCEL_CURRENT ) ; android.app.AlarmManager alarmManager = ( ( android.app.AlarmManager ) ( com.project.nghicv.readingbook.RBApp . getInstance () . getSystemService ( android.content.Context.ALARM_SERVICE ) ) ) ; alarmManager . cancel ( sender ) ; } 
public static java.lang.String getAddPropDetailsInfo ( java.lang.String address , java.lang.String propertyAge , int PropertyResidentialOrCommercial , java.lang.String typeOfProperty , java.lang.String postCode ) { org.json.JSONObject object = new org.json.JSONObject () ; try { object . put ( "address" , address ) ; object . put ( "age" , propertyAge ) ; object . put ( "category_primary" , PropertyResidentialOrCommercial ) ; object . put ( "category_secondary" , typeOfProperty ) ; object . put ( "postcode" , postCode ) ; } catch ( org.json.JSONException var8 ) { var8 . printStackTrace () ; } return object . toString () ; } 
private se.plilja.imcollect.WeightBalancedTree < K > . Node < K > DoubleRight ( se.plilja.imcollect.WeightBalancedTree < K > . Node < K > node ) { se.plilja.imcollect.WeightBalancedTree < K > . Node < K > L = node.left ; se.plilja.imcollect.WeightBalancedTree < K > . Node < K > R = node.right ; se.plilja.imcollect.WeightBalancedTree < K > . Node < K > RL = R.left ; return node ( RL.key , node ( node.key , L , RL.left ) , node ( R.key , RL.right , R.right ) ) ; } 
private void setMapStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! success ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } } 
public void marcarAssistencia ( android.view.View v ) { progressBar . setVisibility ( View.VISIBLE ) ; arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.mCommandService = DeviceListActivity.mCommandService ; arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.mCommandService . write ( java.lang.String . valueOf ( usuario . getCi () ) ) ; accionMarcar = true ; android.content.Intent intent = new android.content.Intent ( this , arqrifa.org.arquitecturarifamobile.layout.SplashAsistenciaActivity . class ) ; startActivity ( intent ) ; new arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.ReunionActualTask ( this ) . execute ( usuario . getGeneracion () ) ; } 
public void timedFunctors () { if ( ( timer . getTick () ) > 0 ) { timer . tick () ; currentTick = timer . getTick () ; java.lang.System.out . println ( currentTick ) ; } if ( ( currentTick ) == 5 ) { java.lang.System.out . println ( "Resetting..." ) ; relay . set ( Value.kOff ) ; barrelMotor . set ( 0.25 ) ; } if ( ( currentTick ) == 53 ) { barrelMotor . set ( 0 ) ; timer . reset () ; } } 
private void  loginBtnActionModceived ( java.awt.event.ActionEvent evt ) { java.lang.String user = userName . getText () ; java.lang.String pass1 = new java.lang.String ( password1 . getPassword () ) ; java.lang.String pass2 = new java.lang.String ( password2 . getPassword () ) ; boolean success = validateData ( user , pass1 , pass2 ) ; if ( ! success ) { success = validateData ( user , pass1 , pass2 ) ; } else { java.lang.String newAcctData = ( user + " " ) + pass1 ; connectNewUser ( newAcctData ) ; } } 
public java.lang.String Authentate ( java.lang.String input , java.util.List < pekl.gasqueue.com.gasqueue.model.Authenticator > authenticatorList ) { clientType = "empty" ; for ( pekl.gasqueue.com.gasqueue.model.Authenticator authPassword : authenticatorList ) { if ( input . equals ( authPassword . getBarPassword () ) ) { clientType = "bar" ; break; } else if ( input . equals ( authPassword . getCustomerPassword () ) ) { clientType = "customer" ; break; } } return clientType ; } 
@ java.lang.Override protected void onItemImageResults ( java.lang.String mediaType , android.net.Uri imageUri , java.lang.String imagePath ) { simpleDraweeView . setImageURI ( imageUri ) ; this . mediaType = mediaType ; this . imagePath = imagePath ; this . imageUri = imageUri ; org.gem.indo.dooit.helpers.crashlytics.CrashlyticsHelper . log ( this . getClass () . getSimpleName () , "onItemImageResults" , "a successful image result (onboarding)" ) ; } 
@ java.lang.Override public martell.com.vice.ArticleAdapter.ViewHolder onCreateViewFolder ( android.view.ViewGroup parent , int viewType ) { context = parent . getContext () ; android.view.LayoutInflater inflater = android.view.LayoutInflater . from ( context ) ; config = new com.nostra13.universalimageloader.core.ImageLoaderConfiguration.Builder ( parent . getContext () ) . build () ; android.view.View articleView = inflater . inflate ( R.layout.recycler_item , parent , false ) ; martell.com.vice.ArticleAdapter.ViewHolder viewHolder = new martell.com.vice.ArticleAdapter.ViewHolder ( articleView ) ; android.util.Log . d ( martell.com.vice.ArticleAdapter.TAG , "onCreateViewFolder: " ) ; return viewHolder ; } 
@ java.lang.Override public void onComplete ( int i , cz.msebera.android.httpclient.Header [] headers , byte [] reponseBody ) { userS . setAvatar ( android.graphics.BitmapFactory . decodeByteArray ( reponseBody , 0 , reponseBody.length ) ) ; if ( ( is_finish [ 0 ] ) == ( ( userSearch . size () ) / 3 ) ) { completeTextView . setAdapter ( new com.example.thanhvu.adsfacebook.model.UserSearchAdaper ( getContext () , R.id.list_view_status , userSearch ) ) ; completeTextView . showDropDown () ; } ( is_finish [ 0 ] ) ++ ; } 
public void  enableClient ( android.view.View view ) { showActivityIndicator () ; if ( ! ( com.isawabird.Utils . isNetworkAvailable ( getApplicationContext () ) ) ) { android.widget.Toast . makeText ( getApplicationContext () , "Network not available" , Toast.LENGTH_SHORT ) . show () ; hideActivityIndicator () ; } } 
private int getUsersPoles () { com.google.firebase.auth.FirebaseUser user = com.google.firebase.auth.FirebaseAuth . getInstance () . getCurrentUser () ; if ( ( user == null ) || ( ( mCheckList ) == null ) ) { return 0 ; } java.lang.String email = user . getEmail () ; com.sunshinator.sharedchecklist.objects.UserRights rights = mCheckList . getAuthorizedUsers () . get ( email ) ; if ( rights == null ) { return 0 ; } return rights . getRights () ; } 
@ java.lang.Override public void actionOccuted ( java.awt.event.ActionEvent e ) { if ( ( passcodeEntered . length () ) == 4 ) resetEntered () ; passcodeEntered += e . getActionCommand () ; setEntered ( passcodeEntered ) ; if ( ( temporal ) != null ) { temporal . repaint () ; } } 
@ java.lang.Override public com.iouseph.model.User userPse ( org.json.JSONObject json ) { com.iouseph.model.User user = null ; if ( json != null ) { user = new com.iouseph.model.User () ; user . setId ( json . getString ( "id" ) ) ; user . setPassword ( json . getString ( "password" ) ) ; user . setUsername ( json . getString ( "username" ) ) ; } return user ; } 
private void  endTABLE ( ) throws java.io.IOException { if ( drawLines ) { drawLine ( "Row Bottom Border " , this . margin , this . yStart , ( ( ( this . margin ) + ( width ) ) + ( be.quodlibet.boxable.Table.xSpacing ) ) , this . yStart ) ; } this . tableContentStream . close () ; } 
public ontario.accounts.Account Removeaccount ( java.lang.String numAccTemp ) { if ( numAccTemp == null ) { return null ; } else { boolean temp ; ontario.accounts.Account temp2 ; for ( int i = 0 ; i < ( acc . size () ) ; i ++ ) { temp = acc . get ( i ) . getAccountNumber () . equals ( numAccTemp ) ; if ( temp ) { temp2 = acc . get ( i ) ; acc . remove ( i ) ; return temp2 ; } } } return null ; } 
public void  createIngredcription ( java.lang.String name ) throws java.sql.SQLException { connection = myDatabase . getDatabaseConn () ; java.sql.PreparedStatement statement = connection . prepareStatement ( "INSERT INTO ingredient (name) VALUES(?)" ) ; statement . setString ( 1 , name ) ; this . name = name ; statement . executeUpdate () ; connection . close () ; getIngredientByName ( name ) ; } 
@ org.junit.Test public void getVirtualMachineines ( ) throws java.rmi.RemoteException { com.elastisys.scale.cloudpool.vsphere.client.impl.ManagedEntity [] vms = null ; doReturn ( vms ) . when ( com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.mockInventoryNavigator ) . searchManagedEntities ( anyString () ) ; com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereClient . configure ( com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereApiSettings , com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereProvisioningTemplate ) ; java.util.List < com.elastisys.scale.cloudpool.vsphere.client.impl.VirtualMachine > virtualMachines = com.elastisys.scale.cloudpool.vsphere.client.impl.TestStandardVsphereClient.vsphereClient . getVirtualMachines ( com.google.common.collect.Lists . newArrayList () ) ; assertEquals ( virtualMachines . size () , 0 ) ; } 
private org.medipi.medication.Schedule getExitingScheules ( java.time.LocalDate date , org.medipi.medication.Medication medication , java.lang.String patientUuid ) { java.util.List < org.medipi.medication.Schedule > existing_schedules = scheduleDAOimpl . findByMedicationAndPatient ( medication , patientUuid ) ; for ( org.medipi.medication.Schedule schedule : existing_schedules ) { if ( ( ( schedule . getAssignedEndDate () ) == null ) || ( schedule . getAssignedEndDate () . toLocalDate () . isAfter ( date ) ) ) { return schedule ; } } return null ; } 
@ java.lang.Override public void invoke () { org.json.JSONObject data = ( ( org.json.JSONObject ) ( args [ 0 ] ) ) ; java.lang.String message ; try { message = data . getString ( "message" ) ; } catch ( org.json.JSONException e ) { return; } repository . addMessage ( new com.homeservice.mickeycj.chatwithbot.model.Message ( com.homeservice.mickeycj.chatwithbot.ChatFragment.IS_BOT , com.homeservice.mickeycj.chatwithbot.ChatFragment.BOT_NAME , message ) ) ; updateChat ( false ) ; } 
@ java.lang.Override public void class ( ) throws java.sql.SQLException { if ( ( connection ) != null ) { if ( com.intrack.transaction.jdbc.JdbcTransaction.log . isDebugEnabled () ) { com.intrack.transaction.jdbc.JdbcTransaction.log . debug ( ( ( "Closing JDBC Connection [" + ( connection ) ) + "]" ) ) ; } if ( ( connectionPool ) != null ) { connectionPool . release ( connection ) ; } else { connection . class () ; } connection = null ; } } 
private void removeFormNet () { markForRegen () ; for ( net.minecraftforge.common.util.ForgeDirection d : net.minecraftforge.common.util.ForgeDirection.VALID_DIRECTIONS ) _network . removeNode ( new cofh.lib.util.position.BlockPosition ( xCoord , yCoord , zCoord , d ) . step ( d ) , true ) ; _network . removeConduit ( this ) ; _network = null ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/filterExemption" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String filterExemption ( org.springframework.ui.Model model , java.lang.String title , java.lang.String label ) { if ( ( title . equals ( "0" ) ) || ( title . equals ( "1" ) ) ) { model . addAttribute ( "exercises" , em . filterExemption ( label , label , title , label , true ) ) ; } else { model . addAttribute ( "exercises" , em . filterExemption ( label , label , label , title , false ) ) ; } return "listExercises" ; } 
@ java.lang.Override public void evalate ( com.sshtools.forker.client.ForkerBuilder builder , java.lang.Process process , com.sshtools.forker.common.Command command ) { builder . command () . add ( 0 , "sudo" ) ; builder . command () . add ( 1 , "-A" ) ; builder . environment () . put ( "SUDO_ASKPASS" , tempScript . getAbsolutePath () ) ; } 
static boolean semer ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "semer" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.semer.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "semer" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; } 
private void run () { display = new com.codeclan.display.Display ( title , width , height ) ; display . getJFrame () . addKeyListener ( keyManager ) ; com.codeclan.gfx.Assets . run () ; handler = new com.codeclan.Handler ( this ) ; gameCamera = new com.codeclan.gfx.GameCamera ( handler , 100 , 200 ) ; gameStates = new com.codeclan.state.GameState ( handler ) ; menuState = new com.codeclan.state.MenuState ( handler ) ; settingsState = new com.codeclan.state.SettingsState ( handler ) ; com.codeclan.state.State . setState ( gameStates ) ; } 
@ java.lang.Override public boolean store ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . store ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return true ; } } list . store ( new com.ivstuart.tmud.person.carried.Money ( money ) ) ; return false ; } 
@ java.lang.Override public void invoke ( java.awt.Graphics g ) { g . drawImage ( com.townrpg.core.tile.Tiles . getSprites () . crop ( 1 , 1 , 1 , 1 ) , ( ( int ) ( x ) ) , ( ( int ) ( y ) ) , null ) ; } 
public static java.util.Set < java.lang.String > getArtifactNamesFormOutput ( final java.util.List < com.amazonaws.codepipeline.jenkinsplugin.OutputArtifact > outputArtifacts ) { java.util.Set < java.lang.String > artifactNames = new java.util.HashSet <> () ; for ( final com.amazonaws.codepipeline.jenkinsplugin.OutputArtifact outputArtifact : outputArtifacts ) { if ( ( ( outputArtifact . getArtifactName () ) != null ) && ( ! ( outputArtifact . getArtifactName () . isEmpty () ) ) ) { artifactNames . add ( outputArtifact . getArtifactName () ) ; } } return artifactNames ; } 
public void perm ( java.lang.String column , java.lang.Object value ) { if ( value == null ) { currentState . perm ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , null , PUT_NULL ) ) ; } else { currentState . perm ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , value , PUT ) ) ; } } 
private de.be4.classicalb.core.parser.rules.PSubstitution createConditionalFailSigned ( de.be4.classicalb.core.parser.rules.TIdentifierLiteral ruleLiteral ) { final java.lang.String ctName = ( ruleLiteral . getText () ) + ( de.be4.classicalb.core.parser.rules.RulesTransformation.RULE_COUNTER_EXAMPLE_VARIABLE_SUFFIX ) ; de.be4.classicalb.core.parser.rules.PPredicate ifCondition = new de.be4.classicalb.core.parser.rules.ANotEqualPredicate ( createIdentifier ( ctName ) , new de.be4.classicalb.core.parser.rules.AEmptySetExpression () ) ; return new de.be4.classicalb.core.parser.rules.AIfSubstitution ( ifCondition , createRuleFailAssignment ( currentRule . getNameLiteral () ) , new java.util.ArrayList < de.be4.classicalb.core.parser.rules.PSubstitution > () , null ) ; } 
public static float  covariant ( final float [] array , final int offset , final int length ) { final float mean = com.tagtraum.jipes.math.Floats . arithmeticMean ( array , offset , length ) ; double sum = 0 ; for ( int i = offset ; i < ( offset + length ) ; i ++ ) { final float diff = ( array [ i ] ) - mean ; sum += ( diff * diff ) / length ; } return ( ( float ) ( sum ) ) ; } 
public com.sedmelluq.discord.lavaplayer.track.AudioTrack GetNext () { if ( ( _playingSong ) == null ) { replacePlayingSong () ; _playingSong = _activePlaylist . get ( 0 ) ; return _playingSong ; } replacePlayingSong () ; _playingSong = _activePlaylist . get ( ( ( _activePlaylist . indexOf ( _playingSong ) ) + 1 ) ) ; return _playingSong ; } 
private java.util.Set < java.lang.String > getSystemPropertiesByTask ( io.cloudslang.lang.compiler.modeller.model.Task task ) { java.util.Set < java.lang.String > result = new java.util.HashSet <> () ; java.util.List < io.cloudslang.lang.compiler.modeller.transformers.Transformer > relevantTransformers = new java.util.ArrayList <> () ; relevantTransformers . add ( publishTransformer ) ; relevantTransformers . add ( aggregateTransformer ) ; result . addAll ( getSystemPropertiesFromInOutParam ( task . getArguments () ) ) ; result . addAll ( getSystemPropertiesFromPostTaskActionData ( task . getPostTaskActionData () , relevantTransformers , task . getName () ) ) ; return result ; } 
@ cucumber.api.java.en.Given ( value = "^I am viewing the visual verification activity$" ) public void iHaveAVisualVerificationactivity () { android.content.Intent intent = new android.content.Intent ( getActivity () , com.nervousfish.nervousfish.activities.VisualVerificationActivity . class ) ; intent . putExtra ( ConstantKeywords.SERVICE_LOCATOR , getCurrentActivity () . getIntent () . getSerializableExtra ( ConstantKeywords.SERVICE_LOCATOR ) ) ; getActivity () . startActivity ( intent ) ; } 
private java.util.ArrayList < java.lang.Double > userInputAsValues ( java.util.ArrayList < android.widget.TextView > input ) { java.util.ArrayList < java.lang.Double > values = new java.util.ArrayList < java.lang.Double > () ; for ( android.widget.TextView t : input ) { if ( ( t . getText () ) != null ) { values . add ( java.lang.Double . parseDouble ( t . getText () . toString () ) ) ; } else { return null ; } } return values ; } 
@ java.lang.Override protected java.lang.Void doAsbackground ( java.lang.Integer . . . params ) { int time = ( params [ 0 ] ) + 1 ; while ( time > 0 ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) {} time -- ; } publishProgress () ; return null ; } 
private void showSavedprofilePicture () { byte [] array = dbHandler . retrieveByteArrayFromDb () ; if ( array == null ) { profilePic . setImageResource ( defaultPic ) ; } else { android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( array ) ; if ( bitmap == null ) { profilePic . setImageResource ( defaultPic ) ; } else { profilePic . setImageBitmap ( bitmap ) ; bitmap . recycle () ; } } } 
public void callback ( int x , int y , double r , java.util.ArrayList < zombienado_v1.server.serverUnits.ServerZombie > zombies , java.util.ArrayList < java.awt.Point > walls ) { if ( ( health ) <= 0 ) { isDead = true ; } int xOld = this . x ; int yOld = this . y ; this . x += x ; this . y += y ; this . r = r ; checkWallsCollisions ( xOld , yOld , walls ) ; checkDamageTaking ( zombies ) ; } 
public boolean outsideTile ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } return false ; } 
protected void addNearbyCamera ( android.bluetooth.BluetoothDevice device ) { if ( ! ( hasPeer ( device . getName () ) ) ) { android.util.Log . d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG , ( "added new device " + ( device . getName () ) ) ) ; nearbyDevices . add ( device ) ; registerRemoteDevice ( device ) ; } else { android.util.Log . d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG , ( ( "device " + ( device . getName () ) ) + " already present, won't add" ) ) ; } } 
@ java.lang.Override public void stateUpdated ( javax.swing.event.ChangeEvent e ) { int alphaValue = sliderAlpha . getValue () ; java.lang.String hexColor = textFieldHexColor . getText () ; if ( ( hexColor . length () ) > 6 ) { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + ( hexColor . substring ( ( ( hexColor . length () ) - 6 ) ) ) ; } else { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + hexColor ; } invalidateUI ( alphaValue , hexColor , true ) ; } 
public void  addnode ( controllers.Node node ) { int floor = node . getFloor () ; allNodes . get ( ( floor - 1 ) ) . put ( node . getKey () , node ) ; if ( ! ( allNodes . get ( ( floor - 1 ) ) . containsKey ( node . getKey () ) ) ) { java.lang.System.out . println ( "COLLECTIONOFNODES:  addnode(): added node but then couldn't find in hashmap" ) ; } else {} } 
@ java.lang.Override protected void showHeaderControl ( org.eclipse.swt.graphics.Rectangle subjectArea ) { super . showHeaderControl ( subjectArea ) ; org.eclipse.jface.internal.text.InternalAccessor accessor = getInternalAccessor () ; org.eclipse.jface.text.IInformationControl iControl = accessor . getCurrentInformationControl () ; if ( ( iControl != null ) && ( ( fInformationControlCloser ) != null ) ) {} } 
private java.util.List < java.lang.Integer > getFPtypeCoroppences ( cz.fidentis.comparison.procrustes.ProcrustesAnalysis pa ) { java.util.List < java.lang.Integer > correspondence = new java.util.ArrayList <> () ; for ( java.lang.Integer ft : config . keySet () ) { if ( ( ! ( config . get ( ft ) . isActive () ) ) || ( ! ( pa . isPointActive ( ft ) ) ) ) continue; correspondence . add ( ft ) ; } return correspondence ; } 
public static java.lang.String  escapes ( java.lang.String html , boolean encode ) { if ( ! encode ) { html = html . replaceAll ( "&(?!#?\\w+;)" , "&amp;" ) ; } else { html = html . replace ( "&" , "&amp;" ) ; } return html . replace ( "<" , "&lt;" ) . replace ( ">" , "&gt;" ) . replace ( "\"" , "&quot;" ) . replace ( "'" , "&#39;" ) ; } 
private void  _undoRemoveIncoistentItems ( java.util.Map < solver.csp.Variable , java.util.List < java.lang.Integer > > map ) { if ( map == null ) return; for ( java.util.Map.Entry < solver.csp.Variable , java.util.List < java.lang.Integer > > neighbor : map . entrySet () ) { for ( java.lang.Integer value : neighbor . getValue () ) { neighbor . getKey () . addLegalValue ( value ) ; } } } 
public void dissect ( boolean expected ) { lookingForInput = false ; listener . shutdown () ; clientAliveTimer . cancel () ; pixyel_backend.connection.socket.SocketServer . dissect ( this , socket . hashCode () ) ; try { socket . shutdownInput () ; socket . shutdownOutput () ; socket . close () ; } catch ( java.lang.Exception e ) { pixyel_backend.Log . logError ( ( "Could not close the socket of the client " + ( getName () ) ) , pixyel_backend.connection.socket.SocketClient . class ) ; } } 
@ org.junit.Test public void testGenerateName_withThreeToTwentylength () { for ( int i = 3 ; i < 20 ; i ++ ) { final java.lang.String result = grammarNameGenerator . generateName ( i ) ; org.junit.Assert . assertTrue ( ( ( result . length () ) <= i ) ) ; org.junit.Assert . assertTrue ( ( ( result . length () ) > 0 ) ) ; } } 
public void RemoveStatistics ( com.frdfsnlght.inquisitor.Statistic statistic ) { synchronized ( statistics ) { if ( ! ( statistics . containsKey ( statistic . getName () ) ) ) { return; } statistics . remove ( statistic . getName () ) ; } for ( com.frdfsnlght.inquisitor.Statistics s : stats . values () ) { s . RemoveStatistics ( statistic ) ; } } 
@ java.lang.Override public void  MouseClickized ( java.awt.event.MouseEvent e ) { hu.gehorvath.lampsv.core.Preset selectedPres = jlUsedPresets . getSelectedValue () ; int currentIndex = usedListModel . indexOf ( selectedPres ) ; if ( currentIndex < ( ( usedListModel . size () ) - 1 ) ) { usedListModel . removeElement ( selectedPres ) ; usedListModel . add ( ( currentIndex + 1 ) , selectedPres ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View view ) { if ( ( ( selection ) == 1 ) || ( ! ( description . equals ( "" ) ) ) ) { uploadImage () ; } else android.widget.Toast . makeText ( getApplicationContext () , "Please fill the form" , Toast.LENGTH_SHORT ) . show () ; } 
boolean ConditionIsFalse ( utilties.models.Game game , int id ) { int data1 = getData ( this . data1 , game , id ) ; int data2 = getData ( this . data2 , game , id ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } 
@ java.lang.Override public void invoke ( ) throws java.lang.Exception { java.lang.System.out . print ( "" ) ; java.lang.System.out . flush () ; java.lang.System.out . print ( prompt ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; while ( ! ( isReady ( reader . readLine () ) ) ) { java.lang.System.out . print ( prompt ) ; } } 
public java.lang.String reverseString ( java.lang.String path ) { if ( ( mapList ) == null ) { return path ; } for ( int i = 0 ; i < ( mapList.length ) ; i ++ ) { if ( ( mapList [ i ] [ 0 ] . equals ( path ) ) || ( ( ( mapList [ i ] [ 0 ] ) + "/" ) . equals ( path ) ) ) { return mapList [ i ] [ 1 ] ; } } return path ; } 
@ org.junit.Test public void testAsUTCTimeTimeTimeCode () { slash.common.type.CompactCalendar calendar = slash.common.type.CompactCalendar . fromMillis ( 1000000 ) ; slash.common.type.CompactCalendar inTimeZone = calendar . asUTCTimeInTimeZone ( java.util.TimeZone . getTimeZone ( "GMT+2" ) ) ; assertEquals ( calendar . getCalendar () . getTimeInMillis () , 1000000 ) ; assertEquals ( inTimeZone . getCalendar () . getTimeInMillis () , ( 1000000 - ( ( ( 2 * 60 ) * 60 ) * 1000 ) ) ) ; assertEquals ( "UTC" , inTimeZone . getTimeZoneId () ) ; } 
private Item [] toObject () { @ java.lang.SuppressWarnings ( value = "unchecked" ) Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Deque < Item > . Node n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { items [ i ] = n.item ; n = n.next ; } return items ; } 
public void renderLine ( java.lang.String data ) { android.content.SharedPreferences sharedPref = getActivity () . getPreferences ( Context.MODE_PRIVATE ) ; java.lang.String contents = sharedPref . getString ( day , "" ) ; if ( ! ( contents . equals ( "" ) ) ) { contents += "\n" ; } android.content.SharedPreferences.Editor editor = sharedPref . edit () ; editor . putString ( day , ( contents + ( data . substring ( 0 , ( ( data . length () ) - 13 ) ) ) ) ) ; editor . commit () ; } 
@ java.lang.Override public java.util.List < com.pilotproject.entity.User > findPeople ( java.lang.String username , java.lang.String email , java.util.Date fromDate , java.util.Date toDate ) { if ( com.pilotproject.utils.PilotUtils . isEmpty ( fromDate ) ) { fromDate = null ; } if ( com.pilotproject.utils.PilotUtils . isEmpty ( toDate ) ) { toDate = null ; } java.lang.String userLogged = com.pilotproject.utils.PilotUtils . getUserNameLogeed () ; return this . userRepository . findPeopleAndUsernameNot ( userLogged , username , email , fromDate , toDate ) ; } 
public void  setView ( javafx.scene.control.TableView < com.eiko.back.table.CellValue > content ) { this . table = content ; this . setContent ( content ) ; if ( ( table ) == null ) return; int l = ( ( table . getItems () . size () ) + 1 ) * 40 ; this . setMinHeight ( l ) ; this . setMaxHeight ( l ) ; this . setPrefHeight ( l ) ; } 
@ org.springframework.context.annotation.Bean public org.springframework.cache.guava.GuavaCacheManager getDefaultStore () { final org.springframework.cache.guava.GuavaCacheManager gcm = new org.springframework.cache.guava.GuavaCacheManager () ; final com.google.common.cache.CacheBuilder < java.lang.Object , java.lang.Object > builder = com.google.common.cache.CacheBuilder . newBuilder () ; gcm . setAllowNullValues ( false ) ; builder . concurrencyLevel ( 16 ) ; builder . expireAfterAccess ( 15 , java.util.concurrent.TimeUnit.MINUTES ) ; builder . initialCapacity ( 256 ) ; builder . maximumWeight ( getMaxMemory () ) ; builder . weigher ( new fi.phz.cib.WebApplicationConfiguration.ByteSizeWeight () ) ; gcm . setCacheBuilder ( builder ) ; return gcm ; } 
@ java.lang.Override public void onRequestPermissionResult ( int requestCode , @ android.support.annotation.NonNull java.lang.String [] permissions , @ android.support.annotation.NonNull int [] grantResults ) { switch ( requestCode ) { case me.esca.fragments.CookFragment.REQUEST_EXTERNAL_STORAGE : { if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.content.Intent photoPickerIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK ) ; photoPickerIntent . setType ( "image/*" ) ; startActivityForResult ( photoPickerIntent , RESULT_LOAD_IMG ) ; } } } } 
public void set () { app.park.com.vr.VrVideoActivity.isGameOver = false ; android.util.Log . d ( app.park.com.vr.VrVideoActivity.TAG , "[TEST] ========== RESET ==============" ) ; mVrVideoView . seekTo ( 0 ) ; app.park.com.vr.VrVideoActivity.currTime = 0 ; android.util.Log . d ( app.park.com.vr.VrVideoActivity.TAG , ( "[TEST] current position = " + ( mVrVideoView . getCurrentPosition () ) ) ) ; setScore () ; } 
@ java.lang.Override public void invoke () { while ( proc . isAlive () ) {} java.lang.System.out . println ( "end" ) ; java.util.List < main.Tuple < ? , ? > > recorded = sessionController . end () ; startFrame . setState ( java.awt.Frame.NORMAL ) ; isRecording = false ; gui.StartScreen.RCDRFileSelect fileSelect = new gui.StartScreen.RCDRFileSelect ( this ) ; fileSelect . save ( recorded ) ; java.lang.System.out . println ( "ended" ) ; return; } 
private void tocated () { mLocationOption = new com.amap.api.location.AMapLocationClientOption () ; mLocationOption . setLocationMode ( AMapLocationMode.Hight_Accuracy ) ; mLocationOption . setNeedAddress ( true ) ; mLocationOption . setOnceLocation ( true ) ; mLocationOption . setWifiActiveScan ( true ) ; mLocationOption . setMockEnable ( false ) ; mLocationClient . setLocationOption ( mLocationOption ) ; mLocationClient . startLocation () ; } 
@ com.google.common.eventbus.Subscribe public void attemptToMatchSubmitterAsCustomer ( edu.pdx.cs410J.grader.poa.POASubmissionSelected selected ) { for ( int i = 0 ; i < ( students . size () ) ; i ++ ) { edu.pdx.cs410J.grader.Student student = students . get ( i ) ; if ( submitterMatchesStudent ( selected . getSubmission () , student ) ) { this . view . setSelectedStudentIndex ( ( i + 1 ) ) ; fireStudentSelectedEvent ( student ) ; return; } } this . view . setSelectedStudentIndex ( 0 ) ; fireStudentSelectedEvent ( null ) ; } 
@ java.lang.Override public void deleteRegion ( int fromPosition , int itemCount ) { for ( int i = 0 ; i < itemCount ; i ++ ) if ( fromPosition < ( contentList . size () ) ) contentList . remove ( fromPosition ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeRemoved ( fromPosition , itemCount ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeChanged ( 0 , getItemCount () ) ; } 
private void invokeFCMSocketice () { android.util.Log . d ( com.lognsys.kalrav.LoginActivity.TAG , "Rest invokeFCMSocketice " ) ; if ( ( com.lognsys.kalrav.util.KalravApplication . getInstance () . getPrefs () . getDevice_token () ) == null ) { android.content.Intent i = new android.content.Intent ( this , com.lognsys.kalrav.FCM.FCMInstanceIdService . class ) ; startService ( i ) ; } android.util.Log . d ( com.lognsys.kalrav.LoginActivity.TAG , ( "Rest invokeFCMSocketice KalravApplication.getInstance().getPrefs().getDevice_token() " + ( com.lognsys.kalrav.util.KalravApplication . getInstance () . getPrefs () . getDevice_token () ) ) ) ; } 
public void addPartpiece ( org.casestudy.target.chess.pieces.Piece piece ) { java.util.List < org.casestudy.target.chess.pieces.Piece > typePieces = this . pieces . get ( piece . getPieceType () ) ; if ( typePieces == null ) { typePieces = new java.util.ArrayList < org.casestudy.target.chess.pieces.Piece > () ; this . pieces . put ( piece . getPieceType () , typePieces ) ; } typePieces . add ( piece ) ; } 
public org.giiwa.core.bean.Helper.V  cp ( java.util.Map < java.lang.String , java.lang.Object > jo , java.lang.String . . . names ) { if ( ( jo == null ) || ( names == null ) ) return this ; for ( java.lang.String s : names ) { if ( jo . containsKey ( s ) ) { java.lang.Object o = jo . get ( s ) ; if ( o != null ) { set ( s , o ) ; } } } return this ; } 
public void onBackStackFixed () { if ( ! ( approvalWarned ) ) { android.widget.RelativeLayout container = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.approvalLay ) ) ) ; android.widget.RelativeLayout.LayoutParams parameters = new android.widget.RelativeLayout.LayoutParams ( RelativeLayout.LayoutParams.MATCH_PARENT , RelativeLayout.LayoutParams.WRAP_CONTENT ) ; android.widget.TextView warning = new android.widget.TextView ( container . getContext () ) ; warning . setText ( "You cannot disapprove after approving!" ) ; parameters . addRule ( RelativeLayout.BELOW , R.id.approvalText ) ; container . addView ( warning , parameters ) ; approvalWarned = true ; } else { approvalWarned = false ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromStateQueue ( backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } 
@ java.lang.Override public void onKeyChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { java.lang.System.out . println ( ( "key of order firebase ----> " + key ) ) ; java.lang.String key1 = dataSnapshot . getRef () . getKey () ; java.lang.System.out . println ( ( "key of order changed in database " + key1 ) ) ; if ( key . equals ( key1 ) ) { progressWheel . setVisibility ( View.INVISIBLE ) ; textView . setText ( "Your order is ready !!! " ) ; } } 
public void submit () { try { while ( true ) { ms.sem . acquire ( 1 ) ; ms.mutex . acquire () ; java.lang.System.out . println ( "Consumer read" ) ; ms.mutex . release () ; } } catch ( java.lang.Exception x ) { x . printStackTrace () ; } } 
@ java.lang.Override public void submit () { try ( java.io.OutputStream obuf = java.nio.channels.Channels . newOutputStream ( pipe . sink () ) ) { t . transform ( source , new javax.xml.transform.stream.StreamResult ( obuf ) ) ; obuf . flush () ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } } 
public java.util.List < java.lang.String > setDescription () { java.util.List < java.lang.String > list ; if ( pl.betoncraft.betonquest.config.Config . getString ( "config.journal.reversed_order" ) . equalsIgnoreCase ( "true" ) ) { list = com.google.common.collect.Lists . reverse ( texts ) ; } else { list = new java.util.ArrayList <> ( texts ) ; } return list ; } 
@ java.lang.Override void initNos ( org.gbif.checklistbank.nub.source.NeoUsageWriter writer ) throws java.lang.Exception { try ( org.postgresql.core.BaseConnection c = clb . connect () ) { final org.postgresql.copy.CopyManager cm = new org.postgresql.copy.CopyManager ( c ) ; cm . copyOut ( ( ( ( ( "COPY (" + ( ( "SELECT usage.id, usage.parent_fk, usage.basionym_fk, usage.rank, usage.is_synonym, usage.status, usage.nom_status, node.scientific_name" + " FROM name_usage usage join name node ON name_fk=node.id" ) + " WHERE dataset_key = '" ) ) + ( source.key ) ) + "')" ) + " TO STDOUT WITH NULL ''" ) , writer ) ; org.gbif.checklistbank.nub.source.ClbUsageIteratorNeo.LOG . info ( "Loaded nub source data {} with {} usages into neo4j" , source.name , writer . getCounter () ) ; } } 
private void AddShip ( java.lang.String communication ) { if ( ( mNachoTextView ) != null ) { mNachoTextView . append ( communication ) ; int start = ( mNachoTextView . getText () . length () ) - ( communication . length () ) ; int last = mNachoTextView . getText () . length () ; mNachoTextView . chipify ( start , last ) ; } else android.util.Log . e ( mx.com.quiin.contactpicker.ui.ContactPickerFragment.TAG , "mNachoTextView is null" ) ; } 
public void setUserInfo ( java.lang.String userName ) { if ( userName == null ) throw new java.lang.IllegalArgumentException ( "UserName must not be null." ) ; if ( ( userName . length () ) > 50 ) throw new java.lang.IllegalArgumentException ( "UserName is too long." ) ; if ( ( userName . length () ) < 3 ) throw new java.lang.IllegalArgumentException ( "UserName is too short." ) ; this . userName = userName ; } 
@ java.lang.Override public boolean  Equches ( final java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getClass () ) != ( obj . getClass () ) ) return false ; org.sqlproc.sample.simple.model.BillingDetails other = ( ( org.sqlproc.sample.simple.model.BillingDetails ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) return false ; return true ; } 
@ java.lang.Override public void setSelectlectionItem ( final int index ) { programmaticTextChange = true ; if ( index > ( - 1 ) ) { getUiReference () . select ( index ) ; } else { getUiReference () . deselect ( getUiReference () . getSelectionIndex () ) ; } programmaticTextChange = false ; if ( ! ( getUiReference () . isFocusControl () ) ) { fireInputChanged ( getUiReference () . getText () , index ) ; } } 
public void generateDisptext ( java.lang.CharSequence c ) { if ( ( ( ( currValue ) == null ) || ( ( currValue ) == "0" ) ) && ( c != "C" ) ) { currValue = ( ( java.lang.CharSequence ) ( c ) ) ; } else if ( c == "C" ) { currValue = "0" ; } else { currValue = ( currValue . toString () ) + c ; } } 
@ java.lang.Override public void runner () { int counter = 0 ; while ( counter < ( this . num ) ) { java.lang.System.out . println ( ( ( ( "Get: " + ( java.lang.Thread . currentThread () . getName () ) ) + " From " ) + ( bucket . getToken () ) ) ) ; counter ++ ; } } 
public modelo.Jogada movimentamonzo ( modelo.Monstro aMonstro , modelo.Posicao posicao ) { modelo.Posicao antiga = this . getPosicao ( aMonstro . getPosicao () . getLinha () , aMonstro . getPosicao () . getColuna () ) ; antiga . setOcupante ( null ) ; posicao . setOcupante ( aMonstro ) ; aMonstro . setPosicao ( posicao ) ; return new modelo.Jogada ( posicao . getLinha () , posicao . getColuna () , TipoJogada._moverMonstro , aMonstro , null , null ) ; } 
private void startPay ( int vendorID , java.lang.String vendorSecretKey , java.lang.String accountID , java.lang.String amount ) { uz.agr.agrsdk.AGRBilling agr = new uz.agr.agrsdk.AGRBilling () ; if ( amount . equals ( "" ) ) { agr . preparePayment ( this , vendorID , vendorSecretKey , accountID ) ; } else { agr . preparePayment ( this , vendorID , vendorSecretKey , accountID , java.lang.Integer . parseInt ( amount ) ) ; } } 
public void delLAB ( int label ) { for ( java.util.Map < java.util.List < org.projectfloodlight.openflow.protocol.instruction.OFInstruction > , java.lang.Integer > m : switchLabelMap . values () ) { synchronized ( m ) { for ( java.util.List < org.projectfloodlight.openflow.protocol.instruction.OFInstruction > list : m . keySet () ) { java.lang.Integer i = m . get ( list ) ; if ( ( i . intValue () ) == label ) { m . remove ( list ) ; break; } } } } net.floodlightcontroller.savi.forwarding.mpls.MPLSLabelManager.labelQueue . add ( label ) ; } 
@ org.junit.Test public void return_coins_Inserts () { org.junit.Assert . assertEquals ( "INSERT COINS" , vendingMachine . check_display () ) ; vendingMachine . insert_coin ( "Dime" ) ; org.junit.Assert . assertEquals ( "$0.10" , vendingMachine . check_display () ) ; vendingMachine . return_coins () ; org.junit.Assert . assertEquals ( "INSERT COINS" , vendingMachine . check_display () ) ; org.junit.Assert . assertEquals ( "$0.10" , vendingMachine . check_coin_return () ) ; } 
public java.lang.String  getfreemakerTemplate ( java.util.HashMap < java.lang.String , java.lang.Object > model ) { java.lang.StringBuffer buf = new java.lang.StringBuffer () ; try { buf . append ( org.springframework.ui.freemarker.FreeMarkerTemplateUtils . processTemplateIntoString ( freemarkerConfiguration . getTemplate ( "fm_template.txt" ) , model ) ) ; return buf . toString () ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( ( "Exception occured while processing fmtemplate: " + ( e . getMessage () ) ) ) ; } return "" ; } 
protected void moving ( int x ) { moving = true ; movingLocation = x ; if ( ( movingLocation ) < ( this . getx () ) ) { facingRight = false ; left = true ; right = false ; } else if ( ( movingLocation ) > ( this . getx () ) ) { facingRight = true ; left = false ; right = true ; } } 
@ java.lang.Override public void onAppSuccess ( int requestCode , int resultCode , android.content.Intent resultIntent ) { super . onAppSuccess ( requestCode , resultCode , resultIntent ) ; switch ( requestCode ) { case diy.uigeneric.sample.SampleListActivity.REQUEST_ADD : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { loadData () ; listView . getAdapter () . notifyDataSetChanged () ; } break; case diy.uigeneric.sample.SampleListActivity.REQUEST_VIEW : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { loadData () ; listView . getAdapter () . notifyDataSetChanged () ; } break; } } 
public boolean equorts ( java.lang.Object o ) { if ( o instanceof FoodItem ) { FoodItem i = ( ( FoodItem ) ( o ) ) ; return ( this . itemName . equorts ( i.itemName ) ) && ( this . tagCode . equorts ( i.tagCode ) ) ; } else if ( o instanceof char [] ) { return this . tagCode . equorts ( ( ( char [] ) ( o ) ) ) ; } return false ; } 
@ java.lang.Override public void onOnclick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent intent = new android.content.Intent ( this , com.example.leo.projet.Activities.MovieActivity . class ) ; intent . putExtra ( "movie" , ( ( java.io.Serializable ) ( aa . getItem ( position ) ) ) ) ; startActivity ( intent ) ; } 
public void ignoreBlanking () { if ( ! ( Settings.ignoreBlankings ) ) return; while ( ( ( application.VirtualCursor . getCurrentElement ( application.VirtualCursor.gridPane ) ) != null ) && ( ( ( ( javafx.scene.control.Label ) ( application.VirtualCursor . getCurrentElement ( application.VirtualCursor.gridPane ) ) ) . getText () . charAt ( 0 ) ) == ' ' ) ) { moveCursor () ; } } 
public static int [] barcodeToStringList ( java.lang.String barcode ) { if ( barcode == null ) { return new int [ 0 ] ; } java.lang.String [] barcodeArray = barcode . trim () . split ( "(?!^)" ) ; int [] barcodeToInt = new int [ barcodeArray.length ] ; for ( int i = 0 ; i < ( barcodeArray.length ) ; i ++ ) { barcodeToInt [ i ] = java.lang.Integer . parseInt ( barcodeArray [ i ] ) ; } return barcodeToInt ; } 
private void initPuzzleOrGetInExtras () { android.os.Bundle bundle = getIntent () . getExtras () ; if ( ( bundle != null ) && ( ( bundle . get ( "Puzzle" ) ) != null ) ) { puzzle = new com.sudoku.puzzlesolver.Puzzle ( ( ( java.lang.Integer [] [] ) ( bundle . get ( "Puzzle" ) ) ) ) ; } else { puzzle = new com.sudoku.puzzlesolver.Puzzle () ; } } 
@ org.junit.Test public void getBaseSystem () { java.nio.file.FileSystem fileSystem = s3fsProvider . newFileSystem ( S3EndpointConstant.S3_GLOBAL_URI_TEST , com.google.common.collect.ImmutableMap . < java.lang.String , java.lang.Object > of () ) ; org.junit.Assert . assertNotNull ( fileSystem ) ; fileSystem = s3fsProvider . getBaseSystem ( S3EndpointConstant.S3_GLOBAL_URI_TEST , com.google.common.collect.ImmutableMap . < java.lang.String , java.lang.Object > of () ) ; org.junit.Assert . assertNotNull ( fileSystem ) ; java.nio.file.FileSystem other = s3fsProvider . getBaseSystem ( S3EndpointConstant.S3_GLOBAL_URI_TEST ) ; org.junit.Assert . assertSame ( fileSystem , other ) ; } 
public engine.network.packet.Packet getContentPant () { engine.network.packet.Packet out = engine.network.packet.Packet . getNewContentPacket ( Packet.MAX_PACKET_SIZE ) ; out.iterator . putNextShortUnsigned ( buff . getID () ) ; out.iterator . putNextInt ( getDurationLeft () ) ; int mapSize = gndData . getMapSize () ; if ( mapSize == 0 ) { out.iterator . putNextShortUnsigned ( 0 ) ; } else { engine.network.packet.Packet gndContent = gndData . getContentPant () ; out.iterator . putNextShortUnsigned ( gndContent . getSize () ) ; out.iterator . putNextContentPacket ( gndContent ) ; } out.iterator . trimPacket () ; return out ; } 
public void  failed ( ca.winnipegtrails.winnipegtrails.UserEggLinks object , com.parse.ParseException e ) { if ( e != null ) { if ( WinnipegTrailsApplication.APPDEBUG ) { android.util.Log . d ( WinnipegTrailsApplication.APPTAG , "An error occurred while querying for user eggs" , e ) ; } return; } android.content.Intent intent = new android.content.Intent ( this , ca.winnipegtrails.winnipegtrails.EggActivity . class ) ; intent . putExtra ( "id" , egg . getObjectId () ) ; startActivity ( intent ) ; } 
private void additemsToThread () { for ( int i = 0 ; i < ( _numIterations ) ; i ++ ) { java.lang.String message = ( ( "Producer # " + ( _id ) ) + " message # " ) + i ; if ( ( i + 1 ) == ( _numIterations ) ) { _queue . AddToQueue ( message , _listener ) ; } else { _queue . AddToQueue ( message ) ; } nachos.threads.KThread . yield () ; } } 
public boolean isCollisionRegion ( pro.Sprite s ) { if ( isCollideable () ) { if ( ( ( ( ( getRight () ) > ( s . getLeft () ) ) && ( ( getLeft () ) < ( s . getRight () ) ) ) && ( ( getBottom () ) > ( s . getTop () ) ) ) && ( ( getTop () ) < ( s . getBottom () ) ) ) { java.lang.System.out . println ( true ) ; return true ; } } return false ; } 
@ javax.annotation.PostConstruct public void InitMap () { org.springframework.util.Assert . notEmpty ( channels ) ; for ( java.lang.String value : channels ) { java.lang.String [] v = value . split ( "-" ) ; channelMap . put ( v [ 0 ] , java.lang.Integer . valueOf ( v [ 1 ] ) ) ; } subChannelMap . put ( com.city.beijing.config.properties.processConfig.ElementSubChannel.ANDROID_SUBCHANNEL , androidSubChanenl ) ; subChannelMap . put ( com.city.beijing.config.properties.processConfig.ElementSubChannel.IOS_SUBCHANNEL , iosSubChannel ) ; subChannelMap . put ( com.city.beijing.config.properties.processConfig.ElementSubChannel.WECHAT_SUBCHANNEL , wechatSubChannel ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "putMessage" , produces = "application/json" ) public java.lang.String putMessage ( @ org.springframework.web.bind.annotation.RequestParam ( value = "to" ) java.lang.String to , @ org.springframework.web.bind.annotation.RequestParam ( value = "from" ) java.lang.String from , @ org.springframework.web.bind.annotation.RequestParam ( value = "message" ) java.lang.String msg ) { com.jkchat.models.ChatMessage cm = new com.jkchat.models.ChatMessage () ; cm . setFrom ( from . trim () . toLowerCase () ) ; cm . setMessage ( msg ) ; userService . putMessage ( to . toLowerCase () , cm ) ; return "success" ; } 
private void printFiles ( java.io.BufferedWriter fw , java.util.List < java.lang.String > corpus ) throws java.io.IOException { for ( java.lang.String str : corpus ) { fw . write ( ( str + "\n" ) ) ; } fw . write ( "\n" ) ; fw . flush () ; } 
@ org.junit.Test public void  testPreLoadClasses_classnotAvailable ( ) throws java.lang.Exception { mFrameworkClassLoader . preLoadClasses ( "not.a.package." , null , null ) ; java.util.HashMap < java.lang.String , java.lang.Class < ? > > map = getPrivateClassCache () ; assertEquals ( 0 , map . size () ) ; java.util.HashMap < java.lang.String , byte [] > data = getPrivateEntryCache () ; assertEquals ( 0 , data . size () ) ; } 
@ java.lang.Override public void runner () { try { this . keywordsTable . clear () ; this . nanorcFile = getClass () . getResource ( ijfx.ui.display.code.NanorcParser . findFileLanguage ( language ) ) . getFile () ; nanoRcParseV2 ( this . nanorcFile ) ; } catch ( java.lang.NullPointerException e ) { java.lang.System.out . println ( "No nanorc file for this language" ) ; this . keywordsTable = new java.util.Hashtable () ; } } 
@ java.lang.Override public void  setProcessSize ( int numThreads ) { if ( ( this . hessian ) instanceof org.encog.util.concurrency.MultiThreadable ) { ( ( org.encog.util.concurrency.MultiThreadable ) ( this . hessian ) ) .  setProcessSize ( numThreads ) ; } else if ( ( numThreads != 1 ) && ( numThreads != 0 ) ) { throw new org.encog.neural.networks.training.TrainingError ( ( ( "The Hessian object in use(" + ( this . hessian . getClass () . toString () ) ) + ") does not support multi-threaded mode." ) ) ; } } 
public static void submit ( Game game , AvalonBot bot ) { for ( int i = 0 ; i < ( game.pendingMissionPlayers . size () ) ; i ++ ) { bot . sendMessage ( ( ( ( ( "Type /" + ( ( game.gameId ) - 1 ) ) + " success or /" ) + ( ( game.gameId ) - 1 ) ) + " fail" ) , game.pendingMissionPlayers . get ( i ) . id ) ; } ( game.state ) ++ ; game.pmMissionCount = 0 ; game.missionFailCount = 0 ; } 
public java.lang.String of ( com.google.auto.value.processor.AutoValueProcessor.Property property ) { if ( ( ofOf ) == null ) { return property . toString () ; } java.lang.String of = java.lang.String . format ( ofOf , property ) ; if ( property . isNullable () ) { of = java.lang.String . format ( "(%s == null ? null : %s)" , property , of ) ; } return of ; } 
void Disconnection ( int number ) { clientHandlers [ number ] = null ; ( connections ) -- ; if ( ( users [ ( number + 1 ) ] ) != null ) send ( new Message ( Message.TYPE_DISCONNECT , number , ( ( users [ ( number + 1 ) ] ) + " Disconnection" ) , users [ ( number + 1 ) ] ) ) ; users [ ( number + 1 ) ] = null ; waitForConnection ( number ) ; } 
protected static boolean waitNotication () { synchronized ( arces.unibo.SEPA.client.tools.SEPATest.sync ) { if ( arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ) return true ; try { arces.unibo.SEPA.client.tools.SEPATest.sync . wait ( arces.unibo.SEPA.client.tools.SEPATest.subscribeConfirmDelay ) ; } catch ( java.lang.InterruptedException e ) { arces.unibo.SEPA.client.tools.SEPATest.logger . info ( e . getMessage () ) ; } } return arces.unibo.SEPA.client.tools.SEPATest.notificationReceived ; } 
@ org.junit.Test public void testArrayputShort () { gnu.trove.map.TIntObjectMap < java.lang.Object > initial = org.cf.smalivm.VMTester . buildRegisterState ( 0 , new short [ 1 ] , 1 , 0 , 2 , ( ( short ) ( 66 ) ) ) ; gnu.trove.map.TIntObjectMap < java.lang.Object > expected = org.cf.smalivm.VMTester . buildRegisterState ( 0 , new short [] { 66 } ) ; org.cf.smalivm.VMTester . testMethodState ( org.cf.smalivm.opcode.TestAPutOp.CLASS_NAME , "TestArrayPutShort()V" , initial , expected ) ; } 
public static void  addRow ( br.com.mvbos.mymer.el.TableElement te , java.lang.StringBuilder sb ) { br.com.mvbos.mymer.sync.Differ.entityToScript . setMode ( IEntityToScript.Mode.PLAIN ) ; br.com.mvbos.mymer.sync.Differ.entityToScript .  addRow ( te , sb ) ; int ct = 1 ; for ( br.com.mvbos.mymer.xml.field.Field f : te . getFields () ) { br.com.mvbos.mymer.sync.Differ.entityToScript . addField ( te , f , ( ct ++ ) , sb ) ; } } 
public net.anyflow.lannister.message.OutboundMessageStatus setOutboundMessageSummary ( int messageId , net.anyflow.lannister.message.OutboundMessageStatus.Status targetStatus ) { net.anyflow.lannister.message.OutboundMessageStatus status = outboundMessageStatuses . get ( messageId ) ; if ( status == null ) { return null ; } status . targetStatus ( targetStatus ) ; return outboundMessageStatuses . put ( status . messageId () , status ) ; } 
@ java.lang.Override public void onDataChanged ( com.firebase.client.DataSnapshot snapshot ) { com.firebase.client.GenericTypeIndicator < java.util.HashMap < java.lang.String , com.firebase.androidchat.bean.Channel > > t = new com.firebase.client.GenericTypeIndicator < java.util.HashMap < java.lang.String , com.firebase.androidchat.bean.Channel > > () {} ; java.util.HashMap < java.lang.String , com.firebase.androidchat.bean.Channel > map = snapshot . getValue ( t ) ; if ( map == null ) return; for ( com.firebase.androidchat.bean.Channel c : map . values () ) { channelList . add ( c . getName () ) ; } } 
@ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) public void AddDescription ( net.minecraft.item.ItemStack par1ItemStack , net.minecraft.entity.player.EntityPlayer par2EntityPlayer , java.util.List par3List , boolean par4 ) { if ( ( par1ItemStack . getItemDamage () ) == 0 ) { if ( ( par1ItemStack.stackTagCompound ) == null ) { par1ItemStack.stackTagCompound = new net.minecraft.nbt.NBTTagCompound () ; par1ItemStack.stackTagCompound . setInteger ( "Uses" , 5 ) ; } par3List . add ( ( "Uses remaining: " + ( par1ItemStack.stackTagCompound . getInteger ( "Uses" ) ) ) ) ; } } 
public int  aggiungi_puntata_overale () { fiches = ( fiches ) - ( puntata ) ; if ( ( fiches ) < 0 ) { int buf = fiches ; fiches = 0 ; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/customer" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String  addAddCustom ( @ javax.websocket.server.PathParam ( value = "fullname" ) java.lang.String fullname , @ javax.websocket.server.PathParam ( value = "address" ) java.lang.String address , @ javax.websocket.server.PathParam ( value = "age" ) int age , org.springframework.ui.ModelMap modelMap ) { java.lang.System.out . println ( fullname ) ; java.lang.System.out . println ( address ) ; java.lang.System.out . println ( age ) ; customerModel . addNewCustomer ( fullname , address , age ) ; java.util.List < bankapp.entity.Customer > customersList = customerService . findAll () ; modelMap . addAttribute ( "customersList" , customersList ) ; return "customers" ; } 
public void CreateOnLaunch ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putString ( "ID" , java.lang.String . valueOf ( ID ) ) ; android.content.Intent create = new android.content.Intent ( this , com.example.csanders.getfit.Views.Create . class ) ; create . putExtras ( bundle ) ; startActivity ( create ) ; } 
private org.jruby.runtime.DynamicScope createDynamicSlot ( org.jruby.runtime.ThreadContext context , org.jruby.runtime.Block block , org.jruby.ir.interpreter.InterpreterContext interpreterContext ) { org.jruby.runtime.DynamicScope newScope = block . getBinding () . getDynamicScope () ; if ( interpreterContext . pushNewDynScope () ) { newScope = block . allocScope ( newScope ) ; context . pushScope ( newScope ) ; } else if ( interpreterContext . reuseParentDynScope () ) { context . pushScope ( newScope ) ; } return newScope ; } 
public void  uiautomator_twitches ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK" ) ) { tap ( s ) ; } if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) { type ( s ) ; } } 
public com.hgames.rhogue.generation.map.DungeonGenerator setGrassArchories ( int percent , int nbPools ) { if ( 100 < percent ) throw new java.lang.IllegalStateException ( ( "Percentage of grass must be negative or in [0, 100]. Received: " + percent ) ) ; if ( 0 <= percent ) this . grassPercentage = percent ; if ( 0 <= nbPools ) this . grassPatches = nbPools ; return this ; } 
private long getLastBuildDate ( @ javax.annotation.Nonnull java.lang.Object entry ) { if ( entry instanceof hudson.model.Queue.Item ) { hudson.model.Queue.Task task = ( ( hudson.model.Queue.Item ) ( entry ) ) . task ; if ( task instanceof hudson.model.Job ) { return ( ( hudson.model.Job ) ( task ) ) . getLastBuildDate () ; } } else if ( entry instanceof hudson.model.Run ) { return ( ( hudson.model.Run ) ( entry ) ) . getParent () . getLastBuildDate () ; } return ( jenkins.widgets.HistoryPageEntry . getEntryId ( entry ) ) + 1 ; } 
public org.apache.commons.math3.linear.RealMatrix getCovariity ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret , false ) . getCovariityMatrix () ; } 
@ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getSeceler ( @ com.trainingSystem.controller.RequestParam java.lang.String idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } 
public void  checkCheckage ( int downVotedTrack ) { if ( downVotedTrack < ( mQueueElementList . size () ) ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } } 
@ java.lang.Override public java.lang.String ToString () { java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream () ; java.io.ObjectOutputStream oos ; try { oos = new java.io.ObjectOutputStream ( baos ) ; oos . writeObject ( this ) ; oos . close () ; return new java.lang.String ( com.infmme.readily.util.Base64Coder . encode ( baos . toByteArray () ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } 
protected static java.lang.String  singleQuery ( java.lang.String keyword , java.lang.String text , boolean i ) { java.lang.String returnString = "" ; for ( java.lang.String s : poormansgrep.BonusProject.Search . search ( keyword , text , i ) ) { if ( s != null ) returnString += s ; } return returnString ; } 
private static float searchMax ( java.util.ArrayList < java.lang.Float > list , int targetIndex ) { float max = - 1.0F ; for ( int a = 0 ; a <= targetIndex ; a ++ ) { if ( ( list . get ( a ) ) > max ) { max = list . get ( a ) ; } } return max ; } 
public static boolean cue ( int index ) { if ( ( index == ( - 1 ) ) || ( ( co.theengine.loomdemo.LoomHTTP.clients [ index ] ) == null ) ) { return false ; } co.theengine.loomdemo.LoomHTTP.clients [ index ] . cueRequests ( co.theengine.loomdemo.LoomHTTP._context , true ) ; return true ; } 
private void SetMessage ( final org.apache.logging.log4j.message.Message msg ) { if ( msg instanceof org.apache.logging.log4j.message.ReusableMessage ) { org.apache.logging.log4j.message.ReusableMessage reusable = ( ( org.apache.logging.log4j.message.ReusableMessage ) ( msg ) ) ; reusable . formatTo ( getMessageTextForWriting () ) ; if ( ( parameters ) != null ) { parameters = reusable . swapParameters ( parameters ) ; parameterCount = reusable . getParameterCount () ; } } else { if ( ( ! ( org.apache.logging.log4j.core.util.Constants.FORMAT_MESSAGES_IN_BACKGROUND ) ) && ( msg != null ) ) { msg . getFormattedMessage () ; } this . message = msg ; } } 
private com.parse.ParseFile downloadPhotoFromString ( java.lang.String str , int i ) { try { java.net.URL url = new java.net.URL ( str ) ; java.io.File facebookImage = UrlToFile ( url ) ; return changeBitmapToByteAndSaveInParseFIle ( i , facebookImage . getPath () ) ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } return null ; } 
private void nil () { for ( int i = 1 ; i <= ( levelCount ) ; i ++ ) { levels . add ( new world.Level ( i ) ) ; } backgroundX = java.lang.Integer . parseInt ( currentLevel . getWallData ( 0 ) ) ; backgroundY = java.lang.Integer . parseInt ( currentLevel . getWallData ( 1 ) ) ; background = new renderer.Background ( 0 , 0 , this , currentLevel . getImageData ( 0 ) ) ; inventory = new renderer.Texture ( "Assets/Pictures/Textures/Inventory_l1.png" ) ; c = new vault1.CharacterFolder.Controller ( this ) ; } 
public void  deduce ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.DoubleWritable > values , cloudCompu.PageRankMr.Context context ) throws java.io.IOException , java.lang.InterruptedException { double tmppr = 0.0 ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val . get () ; } title . set ( "Sum" ) ; pr . set ( java.lang.String . valueOf ( tmppr ) ) ; context . write ( title , pr ) ; } 
@ java.lang.Override protected void  onCreated ( android.os.Bundle savedInstanceState ) { super .  onCreated ( savedInstanceState ) ; injectDependencies ( savedInstanceState ) ; mBinding = android.databinding.DataBindingUtil . setContentView ( this , R.layout.activity_my_stocks ) ; mBinding . setViewModel ( mViewModel ) ; checkPlayServicesAvailable () ; setupRecyclerView () ; checkAddIntent ( getIntent () ) ; getSupportLoaderManager () . initLoader ( com.sam_chordas.android.stockhawk.presentation.mystocks.MyStocksActivity.CURSOR_LOADER_ID , null , this ) ; } 
public void Update ( long timeElapsed , long nanosPerSecond , double xForces , double yForces ) { double secondsElapsed = timeElapsed / nanosPerSecond ; x += ( velX ) * secondsElapsed ; y += ( velY ) * secondsElapsed ; velX += ( acelX ) * secondsElapsed ; velY += ( acelY ) * secondsElapsed ; acelX = xForces / ( mass ) ; acelY = yForces / ( mass ) ; } 
@ java.lang.Override public void invoke ( java.lang.Object . . . args ) { java.lang.String receivedMessage = ( ( java.lang.String ) ( args [ 0 ] ) ) ; if ( receivedMessage . equals ( "fail" ) ) {} else { mSocket . on ( receivedMessage , messageReceiver ) ; mSocket . emit ( "get_recent_group_messages" , ownerId , 20 ) ; } android.util.Log . d ( "GROUPFUNCTION" , receivedMessage ) ; } 
public static void loadDefaultSettjecttFiles () { try { java.io.File xmlFile = new java.io.File ( util.Settings.defaultFile ) ; javax.xml.parsers.DocumentBuilderFactory dbFactory = javax.xml.parsers.DocumentBuilderFactory . newInstance () ; javax.xml.parsers.DocumentBuilder dBuilder = dbFactory . newDocumentBuilder () ; util.Settings.doc = dBuilder . parse ( xmlFile ) ; util.Settings.doc . getDocumentElement () . normalize () ; } catch ( java.lang.Exception e ) { return; } } 
public void writeCharList ( final char [] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfChar ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
public java.util.ArrayList < lexer.Token > Tokenization ( java.lang.String input ) { java.util.ArrayList < lexer.Token > resultingTokens = new java.util.ArrayList < lexer.Token > () ; lexer.Token newToken ; if ( input == null ) { java.lang.System.out . println ( "Input not set!" ) ; return null ; } java.util.Collections . sort ( token ) ; while ( ( input . length () ) > 0 ) { newToken = testTokens ( input ) ; input = input . substring ( newToken . getCompleteLength () ) ; resultingTokens . add ( newToken ) ; } return resultingTokens ; } 
@ java.lang.Override public nez.parser.vm.MozInst runner ( nez.parser.vm.ParserMachineContext sc ) throws nez.parser.TerminationException { if ( ( sc . prefetch () ) == ( this . byteChar ) ) { if ( ( this . byteChar ) == 0 ) { return this . next ; } sc . move ( 1 ) ; } return this . next ; } 
private void showwarning () { if ( ( ( toastWidget ) == null ) && ( ( getContext () ) != null ) ) { toastWidget = new bei.m3c.widgets.ToastWidget ( getContext () , getContext () . getString ( R.string.tv_warning ) , getActivity () . findViewById ( android.R.id.content ) ) ; } if ( ( toastWidget ) != null ) { toastWidget . flash () ; } } 
public void ClosePUdp () { if ( ( mMulticastSocket ) != null ) { try { mMulticastSocket . leaveGroup ( mMulticastAddress ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } mMulticastSocket . close () ; mMulticastSocket = null ; } } 
@ org.junit.Test public void testRemoveThing_IsCalledWithonce ( ) throws java.lang.Exception { tvao.mmad.itu.tingle.Model.Thing thing = new tvao.mmad.itu.tingle.Model.Thing () ; org.mockito.Mockito . when ( _sut . removeThing ( thing . getId () ) ) . thenReturn ( true ) ; _sut . removeThing ( thing . getId () ) ; org.mockito.Mockito . verify ( _sut , org.mockito.Mockito . atLeastOnce () ) . removeThing ( thing . getId () ) ; } 
public final void app ( final android.view.View v ) { ( ( com.github.mrm1st3r.cards.Cards ) ( getApplication () ) ) . setConnections ( playerList ) ; playerList . remove ( null ) ; for ( com.github.mrm1st3r.connection.bluetooth.SimpleBluetoothConnection conn : playerList . keySet () ) { conn . write ( "app" ) ; conn . pause () ; } serv . close () ; android.content.Intent intent = new android.content.Intent ( this , com.github.mrm1st3r.cards.ingame.Gamemaster . class ) ; appActivity ( intent ) ; } 
public void set () { this . body . setLinearVelocity ( 0.0F , 0.0F ) ; this . body . setTransform ( ( ( ( spawnPosition.x ) + ( ( getWidth () ) / 2.0F ) ) / ( com.greenbatgames.rubyred.util.Constants.PTM ) ) , ( ( ( spawnPosition.y ) + ( ( getHeight () ) / 2.0F ) ) / ( com.greenbatgames.rubyred.util.Constants.PTM ) ) , 0.0F ) ; jumped = true ; facingRight = true ; grounded = false ; crouched = false ; disableCollisionFor = 0.0F ; } 
@ java.lang.Override public java.util.List < com.lftechnology.vyaguta.resource.entity.Contract > print ( java.lang.String [] dates ) { java.time.LocalDate pointOne = java.time.LocalDate . parse ( dates [ 0 ] , Constant.DATE_FORMAT_DB ) ; java.time.LocalDate pointTwo = java.time.LocalDate . parse ( dates [ 1 ] , Constant.DATE_FORMAT_DB ) ; return em . createQuery ( "SELECT c from Contract c WHERE c.endDate BETWEEN :pointOne AND :pointTwo order by c.endDate desc" , com.lftechnology.vyaguta.resource.entity.Contract . class ) . setParameter ( "pointOne" , pointOne ) . setParameter ( "pointTwo" , pointTwo ) . getResultList () ; } 
private void findJantoPsicks ( com.xiangyou.product.Product.Day day , int index , java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.String > > journeyPicsMap ) { java.util.Map < java.lang.String , java.lang.String > pictures = journeyPicsMap . get ( ( ( com.xiangyou.product.ProductRepository.PREFIX_DAY ) + index ) ) ; if ( pictures != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : pictures . entrySet () ) { day . addPicture ( entry . getKey () , entry . getValue () ) ; } } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private static < T > java.lang.Class < T > [] getParametersParameters ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; } 
@ java.lang.Override public void OnClick ( android.content.DialogInterface dialog , int which ) { progressDialog . show () ; java.lang.String imageUrl = fbUser . getPhotoUrl () . toString () ; updateImageInDatabase ( imageUrl ) ; com.bumptech.glide.Glide . with ( this ) . load ( imageUrl ) . bitmapTransform ( new com.example.mjokic.quizapp.utils.GlideCircleTransformation ( this ) ) . into ( ( ( android.widget.ImageView ) ( findViewById ( R.id.navDrawerAvatar ) ) ) ) ; progressDialog . hide () ; } 
boolean setLayerSize ( int x , int y ) { if ( ( x < 2 ) || ( x > 8 ) ) { return false ; } else { if ( ( x > 4 ) && ( y < 8 ) ) { return false ; } else if ( ( y > 50 ) || ( y < 5 ) ) { return false ; } } size = y ; return true ; } 
public void store ( int position , java.lang.Object content ) { if ( ( position <= 0 ) || ( ( nodes ) <= 0 ) ) return; if ( position > ( nodes ) ) return; Node store = start ; for ( int i = 0 ; i < ( position - 1 ) ; i ++ ) { store = store . getNextNode () ; } store . setContent ( content ) ; } 
private void initRenderpaging () { ua.te.hackathon.smartcity2015.ui.intro.IntroActivity.ViewPagerAdapter adapter = new ua.te.hackathon.smartcity2015.ui.intro.IntroActivity.ViewPagerAdapter ( getSupportFragmentManager () ) ; adapter . addFragment ( ua.te.hackathon.smartcity2015.ui.intro.IntroFragment . newInstance ( R.color.blue ) ) ; adapter . addFragment ( ua.te.hackathon.smartcity2015.ui.intro.IntroFragment . newInstance ( R.color.red ) ) ; adapter . addFragment ( ua.te.hackathon.smartcity2015.ui.intro.IntroFragment . newInstance ( R.color.green ) ) ; viewPagerInto . setAdapter ( adapter ) ; indicatordots . setViewPager ( viewPagerInto ) ; } 
public static geogebra.common.awt.Shape getGawfGroup ( geogebra.common.awt.Shape shape ) { geogebra.common.awt.Shape shapeCommon = ( shape instanceof geogebra.common.euclidian.GeneralPathClipped ) ? ( ( geogebra.common.euclidian.GeneralPathClipped ) ( shape ) ) . getGeneralPath () : shape ; if ( ! ( shapeCommon instanceof geogebra.common.awt.geogebra.web.awt.Shape ) ) { return null ; } return ( ( geogebra.common.awt.geogebra.web.awt.Shape ) ( shapeCommon ) ) . getGawfGroup () ; } 
private java.lang.String getChargeRangeasText () { java.lang.String charges = "" ; for ( int i = minCharge ; i <= ( maxCharge ) ; i ++ ) { if ( ! ( charges . isEmpty () ) ) { charges += "," ; } charges += i + "+" ; } return charges ; } 
private void  turnUpFlash () { isFlashOn = false ; if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera . getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera . setParameters ( params ) ; camera . stopPreview () ; isFlashOn = false ; imgButtonOnOff . setImageResource ( R.drawable.ic_flash_off ) ; } 
@ java.lang.Override public org.talend.core.model.process.IProcess getProcessfromItems ( org.talend.core.model.properties.Item item , boolean loadScreenshots ) { if ( ( org.talend.core.model.properties.impl.ProcessItemImpl . class ) == ( item . getClass () ) ) { java.lang.Process process = null ; process = new java.lang.Process ( item . getProperty () ) ; process . loadXmlFile ( loadScreenshots ) ; return process ; } return null ; } 
private boolean validateTimeQuester () { util.Util . clearError ( lblTimeRequirementError ) ; if ( txtTimeRequirement . isMessageDefault () ) { return true ; } try { int timeRequirement = java.lang.Integer . parseInt ( txtTimeRequirement . getText () ) ; if ( timeRequirement < 0 ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, must be positive whole numbers only" ) ; return false ; } } catch ( java.lang.NumberFormatException e ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, whole numbers only" ) ; return false ; } return true ; } 
public static org.jocean.http.Feature [] add ( final org.jocean.http.Feature [] features1 , final org.jocean.http.Feature . . . features2 ) { final java.util.List < org.jocean.http.Feature > added = new java.util.ArrayList <> ( ( null != features1 ? java.util.Arrays . asList ( features1 ) : java.util.Collections . < org.jocean.http.Feature > emptyList () ) ) ; if ( null != features2 ) { for ( org.jocean.http.Feature toadd : features2 ) { if ( ! ( added . contains ( toadd ) ) ) { added . add ( toadd ) ; } } } return added . toArray ( org.jocean.http.Feature.EMPTY_FEATURES ) ; } 
private java.lang.String getWordEndingAroundPosition ( int startingPosition , int atPosition ) { java.lang.String startingText = text . substring ( startingPosition , atPosition ) ; int lastIndex = startingText . lastIndexOf ( " " ) ; if ( lastIndex == ( - 1 ) ) { return startingText ; } else { return startingText . substring ( lastIndex , ( ( startingText . length () ) - 1 ) ) . trim () ; } } 
public java.util.List < lt.ru.lexio.db.Word > print ( int wordCount , int page , java.util.Date toDate , lt.ru.lexio.ui.training.TrainingWordOrder wordOrder , lt.ru.lexio.ui.training.TrainingType trainingType ) { java.util.List < lt.ru.lexio.db.Word > words = new java.util.ArrayList <> ( wordCount ) ; print ( wordCount , page , toDate , trainingType , wordOrder , words ) ; return words ; } 
lab9.ULLMap < K , V > . Entry  Get ( K k ) { if ( ( k != null ) && ( k . equals ( key ) ) ) { return this ; } if ( ( next ) == null ) { return null ; } return next .  Get ( k ) ; } 
@ java.lang.Override public void  onRouteDone ( java.util.List < com.mybus.model.BusRouteResult > results ) { cancelProgressDialog () ; mMyBusMap . removeChargingPointMarkers () ; if ( ( results == null ) || ( results . isEmpty () ) ) { showBottomSheetResults ( false ) ; mViewPagerAdapter = null ; android.widget.Toast . makeText ( this , R.string.toast_no_result_found , Toast.LENGTH_LONG ) . show () ; return; } else { startResultsActivity ( results ) ; } } 
public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookEventFactory ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } 
public boolean setActiveInstanceIndn ( int instIdx ) { programming.Program prog = getActiveProg () ; if ( ( ( prog != null ) && ( instIdx >= 0 ) ) && ( instIdx <= ( prog . getInstructions () . size () ) ) ) { activeInstIdx = instIdx ; return true ; } else { activeInstIdx = - 1 ; return false ; } } 
@ java.lang.Override public void OnClick ( android.view.View view ) { ar.com.tzulberti.archerytraining.model.tournament.TournamentSerie tournamentSerie = self.tournamentDAO . createNewSerie ( self.tournament ) ; if ( tournamentSerie == null ) { java.lang.System.err . println ( "TODO XXX PENDING: el usuario no deberia ver el boton en este caso" ) ; return; } ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment practiceTestingFragment = ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment . createInstance ( tournamentSerie ) ; android.support.v4.app.FragmentManager fragmentManager = activity . getSupportFragmentManager () ; fragmentManager . beginTransaction () . replace ( R.id.container , practiceTestingFragment ) . commit () ; } 
@ java.lang.Override public void inFocus ( android.content.DialogInterface dialog , int which ) { android.content.SharedPreferences prefs = mContext . getSharedPreferences ( "apprater" , Context.MODE_PRIVATE ) ; java.lang.Long date_firstLaunch = java.lang.System . currentTimeMillis () ; if ( editor != null ) { editor . putLong ( "launch_count" , 0 ) ; editor . putLong ( "date_firstlaunch" , date_firstLaunch ) ; editor . commit () ; } dialog . dismiss () ; } 
@ java.lang.Override public void Processresults ( org.json.JSONObject result ) { int minutes = getTime ( result ) ; if ( minutes <= ( oter . getTime () ) ) { com.joebruzek.oter.utilities.SmsSender . sendText ( oter ) ; oterLayer . removeOter ( oter ) ; } else { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; } this . stopSelf () ; } 
private void createAir ( org.json.JSONArray args , org.apache.cordova.CallbackContext callbackContext ) throws org.json.JSONException { final java.lang.String zoneId = args . getString ( 0 ) ; if ( zoneId != null ) { zoneCallbacks . put ( zoneId , callbackContext ) ; } else { defaultZoneCallback = callbackContext ; } ir.tapsell.sdk.TapsellExtraPlatforms . createAir ( cordova . getActivity () , zoneId ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { customView . setErase ( false ) ; brushDialog = new android.app.Dialog ( context ) ; brushDialog . setContentView ( R.layout.brush_size_picker ) ; brushDialog . getWindow () . setBackgroundDrawable ( new android.graphics.drawable.ColorDrawable ( android.graphics.Color.TRANSPARENT ) ) ; brushDialog . setCanceledOnTouchOutside ( true ) ; brushDialog . show () ; } 
public final hu.akarnokd.rxjava2.basetypes.Solo < T > doAfterTerator ( hu.akarnokd.rxjava2.basetypes.Action onAfterTerminate ) { hu.akarnokd.rxjava2.basetypes.ObjectHelper . requireNonNull ( onAfterTerminate , "onAfterTerminate is null" ) ; return hu.akarnokd.rxjava2.basetypes.Solo . onAssembly ( new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_ACTION , onAfterTerminate , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_LONG_CONSUMER , Functions.EMPTY_ACTION ) ) ; } 
@ org.junit.Test public void whenModuleHasNoSupplierContact_thenCorrespondatching () { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito . mock ( org.corpus_tools.pepper.modules.PepperModule . class ) ; org.mockito.Mockito . when ( module . getSupplierContact () ) . thenReturn ( null ) ; org.assertj.core.api.Assertions . assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () . checkFitness ( module ) . getFitness ( FitnessFeature.HAS_SUPPLIER_CONTACT ) ) . isEqualTo ( false ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/results/test/{testRunId}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.http.ResponseEntity < java.util.List < pl.cloudy.models.ActionResult > > getTestFromGivenDay ( @ org.springframework.web.bind.annotation.PathVariable ( value = "testRunId" ) int testRunId ) { java.util.List < pl.cloudy.models.ActionResult > testRunResults = actionObjectService . findTestRunResults ( testRunId ) ; if ( testRunResults . isEmpty () ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.NO_CONTENT ) ; } return new org.springframework.http.ResponseEntity ( testRunResults , org.springframework.http.HttpStatus.OK ) ; } 
private boolean  eventTargetsStandardpopout ( com.google.gwt.dom.client.NativeEvent event ) { com.google.gwt.dom.client.EventTarget target = event . getEventTarget () ; if ( com.google.gwt.dom.client.Element . is ( target ) ) { return ( standardsDropListValues . getElement () . isOrHasChild ( com.google.gwt.dom.client.Element . as ( target ) ) ) || ( standardsDropListValues . getElement () . isOrHasChild ( com.google.gwt.dom.client.Element . as ( target ) ) ) ; } return false ; } 
public void showNotificationDropUp ( java.lang.String from , java.lang.String msg ) { android.content.Intent dialogIntent = new android.content.Intent ( ctx , com.android.anurag.notesapp.AlertDialog . class ) ; dialogIntent . putExtra ( "sender_name" , from ) ; dialogIntent . putExtra ( "msg" , msg ) ; dialogIntent . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( dialogIntent ) ; } 
private boolean isDuplicateIncurrdategories ( java.util.HashSet < com.transformuk.bdt.domain.CrawledContent > currContentSet , com.transformuk.bdt.domain.CrawledContent newContent ) { boolean isDuplicate = false ; java.util.Iterator < com.transformuk.bdt.domain.CrawledContent > iterator = currContentSet . iterator () ; while ( iterator . hasNext () ) { com.transformuk.bdt.domain.CrawledContent existingContent = iterator . next () ; if ( ( ( newContent . getTitle () ) != null ) && ( existingContent . getTitle () . equals ( newContent . getTitle () ) ) ) { isDuplicate = true ; break; } } return isDuplicate ; } 
public static com.sl.algorithms.traversal.Node reverselist ( com.sl.algorithms.traversal.Node head ) { com.sl.algorithms.traversal.Node prev ; com.sl.algorithms.traversal.Node curr ; com.sl.algorithms.traversal.Node next ; prev = null ; curr = head ; while ( curr != null ) { next = curr.next ; curr.next = prev ; prev = curr ; curr = next ; } head = prev ; return head ; } 
private static void  deleteValue ( java.lang.String tableName , java.lang.Integer ID ) { for ( java.lang.String s : JSQL.table . get ( tableName ) . get ( ID ) . keySet () ) { JSQL.table . get ( tableName ) . get ( ID ) . put ( s , null ) ; } } 
@ java.lang.Override public boolean shouldHandleUrlRunning ( android.webkit.WebView view , java.lang.String url ) { android.util.Log . d ( com.gsma.mobileconnect.helpers.AuthorizationService.TAG , ( "shouldHandleUrlRunning url=" + url ) ) ; boolean status = false ; if ( ( url != null ) && ( url . startsWith ( redirectUri ) ) ) { handleCompletion ( view , url ) ; } else { view . loadUrl ( url ) ; } return status ; } 
private java.util.List < com.google.android.gms.maps.model.LatLng > getEndPoints ( java.util.List < com.itis.practice1.model.Place > places ) { java.util.List < com.google.android.gms.maps.model.LatLng > waypoints = new java.util.ArrayList <> () ; waypoints . add ( new com.google.android.gms.maps.model.LatLng ( mLatitude , mLongitude ) ) ; for ( com.itis.practice1.model.Place place : places ) { waypoints . add ( new com.google.android.gms.maps.model.LatLng ( place . getLatitude () , place . getLongitute () ) ) ; } return waypoints ; } 
@ java.lang.Override public boolean onOptionsItemOccosen ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case android.R.id.home : finish () ; return true ; case R.id.action_done : saveList () ; finish () ; return true ; default: return super . onOptionsItemOccosen ( item ) ; } } 
public com.example.alex.androidclient.models.DailyStatistics getDailyStatisticsByProject ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; com.example.alex.androidclient.models.DailyStatistics dailyStatsForSite = null ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { com.wewow.utils.ShareUtils su = new com.wewow.utils.ShareUtils ( this ) ; su . setContent ( subject . getTitle () ) ; su . setUrl ( subject . getShare_link () ) ; if ( ( shareBitmap ) != null ) {} su . share () ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V  Get ( ) throws java.io.IOException { if ( ( monkey != null ) && ( filer != null ) ) { synchronized ( monkey ) { long ai = MapStore.INSTANCE .  Get ( filer , monkey , keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } } } return null ; } 
public java.util.List < java.lang.Long >  getMemberSet () { java.util.List < java.lang.Long > memberLists = new java.util.ArrayList < java.lang.Long > () ; if ( ( this . members . length () ) <= 0 ) return memberLists ; java.lang.String [] list = this . members . split ( "," ) ; for ( int i = 0 ; i < ( list.length ) ; i ++ ) memberLists . add ( java.lang.Long . parseLong ( list [ i ] ) ) ; return memberLists ; } 
public double  covariant ( double [] dataset ) { double degreeOfFreedom = dataset.length ; double var = 0 ; double mean = mean ( dataset ) ; for ( int i = 0 ; i < ( dataset.length ) ; i ++ ) { var += java.lang.Math . pow ( ( ( dataset [ i ] ) - mean ) , 2 ) ; } var /= degreeOfFreedom ; return var ; } 
static int RandInt ( int min , int max ) { java.util.Random rand = new java.util.Random () ; if ( min > max ) { min = 0 ; max = 0 ; } int top = ( max - min ) + 1 ; if ( top <= 0 ) { top = 1 ; } int randomInt = ( rand . nextInt ( top ) ) + min ; return randomInt ; } 
@ org.junit.Test public void testGeneratorExample () { for ( int i = 0 ; i < 10000 ; i ++ ) { testQuestion1 . generateQuestion ( 4 ) ; tests.Fraction answer = testQuestion1 . generateAnswer ( 4 ) ; assertFalse ( testQuestion1 . generateOption ( 4 ) . checkEquals ( testQuestion1 . getCorrectAnswer () ) ) ; } } 
@ org.junit.Test public void testOnSelectApprojectUsersAuth () { controller . configure ( mockActionMenu , entityBundle , true , wikiPageId , mockEntityUpdatedHandler ) ; controller . onAction ( Action.APPROVE_USER_ACCESS ) ; org.mockito.Mockito . verify ( mockApproveUserAccessModal ) . configure ( entityBundle ) ; org.mockito.Mockito . verify ( mockApproveUserAccessModal ) . show () ; } 
void onDoubleRelease () { for ( com.dreamteam.villageTycoon.framework.GameObject g : getScene () . getObjects () ) { if ( g instanceof java.lang.Character ) { ( ( java.lang.Character ) ( g ) ) . setSelected ( ( ( java.lang.Character ) ( g ) ) . getHitbox () . collision ( selectionRectangle ) ) ; } } } 
@ java.lang.Override public void onInitializationFail ( com.google.android.youtube.player.YouTubePlayer.Provider provider , com.google.android.youtube.player.YouTubeInitializationResult youTubeInitializationResult ) { if ( youTubeInitializationResult . isUserRecoverableError () ) { youTubeInitializationResult . getErrorDialog ( getActivity () , app.vedicnerd.ytwua.fragment.YoutubePlayerFragment.RECOVERY_DIALOG_REQUEST ) . show () ; } else { if ( isAdded () ) { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , getString ( R.string.error_init_failure_msg ) , Toast.LENGTH_SHORT ) . show () ; } } } 
@ java.lang.Override public void  onFailure ( java.util.ArrayList < com.givekesh.baboon.Utils.Feeds > result ) { if ( result != null ) { if ( ( result . size () ) < 10 ) { recyclerView . disableLoadMore () ; isLoadingMore = false ; } else recyclerView . enableLoadMore () ; if ( isSwipeRefresh ) { mFeedsArrayList . clear () ; mWaveSwipeRefreshLayout . setRefreshing ( false ) ; isSwipeRefresh = false ; } if ( isFirstLoad ) { mFeedsArrayList = result ; isFirstLoad = false ; } else mFeedsArrayList . addAll ( result ) ; refreshRecycler () ; } } 
private boolean needToAdd ( android.content.Context context ) { java.lang.String date = owo.npc.taipeitechrefined.utility.Utility . getDateString ( "yyyy-MM-dd" , java.util.Calendar . getInstance () . getTime () , context ) ; android.content.SharedPreferences settings = context . getSharedPreferences ( MainApplication.SETTING_NAME , Context.MODE_PRIVATE ) ; java.lang.String date_flag = settings . getString ( owo.npc.taipeitechrefined.ActivityCheckReceiver.CHECK_FLAG , null ) ; settings . edit () . putString ( owo.npc.taipeitechrefined.ActivityCheckReceiver.CHECK_FLAG , date ) . apply () ; return ! ( date . equals ( date_flag ) ) ; } 
@ java.lang.Override public boolean contain ( final java.lang.Object o ) { if ( ! ( o instanceof java.util.Map.Entry ) ) return false ; final java.util.Map.Entry < ? , ? > e = ( ( java.util.Map.Entry < ? , ? > ) ( o ) ) ; TypeV v = get ( e . getKey () ) ; return ( v != null ) && ( v . equals ( e . getValue () ) ) ; } 
public boolean collidingwith ( cz.cvut.fel.syrovkar.rpgEngine.archetypes.CollisionBox other ) { return ( ( ( ( this . x ) <= ( ( other.x ) + ( other.sizeX ) ) ) && ( ( ( this . x ) + ( this . sizeX ) ) >= ( other.x ) ) ) && ( ( this . y ) <= ( ( other.y ) + ( other.sizeY ) ) ) ) && ( ( ( this . y ) + ( this . sizeY ) ) >= ( other.y ) ) ; } 
public com.radoslav.microclimate.service.entities.User getUserByMailWithEmail ( java.lang.String email , java.lang.String password ) throws com.radoslav.microclimate.service.exceptions.MicroclimateException { try { com.radoslav.microclimate.service.helpers.ValidationUtil . validateEmail ( email ) ; com.radoslav.microclimate.service.helpers.ValidationUtil . validatePassword ( password ) ; return com.radoslav.microclimate.service.entities.User . findUserByEmailAndPassword ( entityManager , email , password ) ; } catch ( javax.persistence.NoResultException exception ) { throw new com.radoslav.microclimate.service.exceptions.UnauthorizedException ( "User does not exists." ) ; } catch ( javax.persistence.NonUniqueResultException exception ) { throw new com.radoslav.microclimate.service.exceptions.InternalServerErrorException ( "Illegal database content." ) ; } } 
private void  acceptMobile () { java.net.ServerSocket serverSocket ; try { serverSocket = new java.net.ServerSocket ( 10085 ) ; while ( true ) { java.net.Socket socket = serverSocket . accept () ; threads.PhoneServerThread thread = new threads.PhoneServerThread ( socket ) ; thread . start () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ org.springframework.transaction.annotation.Transactional @ java.lang.Override public void  saveabout ( java.lang.String projectId , java.lang.String title , java.lang.String description ) { edu.asu.spring.quadriga.dto.AboutTextDTO aboutTextDTO = aboutTextDAO . getDTOByProjectId ( projectId ) ; if ( aboutTextDTO == null ) aboutTextDTO = new edu.asu.spring.quadriga.dto.AboutTextDTO () ; aboutTextDTO . setProjectId ( projectId ) ; aboutTextDTO . setTitle ( title ) ; aboutTextDTO . setDescription ( description ) ; aboutTextDAO . saveNewDTO ( aboutTextDTO ) ; } 
private ch.bfh.bti7535.w2016.data.Document class ( ch.bfh.bti7535.w2016.data.Document document ) { double classifiedPositive = 0.0 ; double classifiedNegative = 0.0 ; for ( ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline ) { classifiedPositive += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_POSITIVE ) ; classifiedNegative += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_NEGATIVE ) ; } document . setTestResult ( ( classifiedPositive > classifiedNegative ? ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_POSITIVE : ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_NEGATIVE ) ) ; return document ; } 
public boolean startTimer ( int radius ) { if ( ( mThumbCurrentRadius ) == radius ) return false ; mRadius = radius ; if ( ( getHandler () ) != null ) { resetAnimation () ; mRunning = true ; getHandler () . postAtTime ( this , ( ( android.os.SystemClock . uptimeMillis () ) + ( com.rey.material.util.ViewUtil.FRAME_DURATION ) ) ) ; invalidate () ; return true ; } else { mThumbCurrentRadius = mRadius ; invalidate () ; return false ; } } 
@ javax.annotation.Nonnull private byte [] loadFromClientAsync ( java.lang.String id ) { try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException . getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { throw serverException ; } byte [] cached = loadFromCache ( id ) ; if ( cached != null ) { return cached ; } throw new java.lang.IllegalStateException ( org.sonar.batch.bootstrap.WSLoader.FAIL_MSG , serverException ) ; } } 
@ org.junit.Before public void set ( ) throws java.lang.Exception { java.lang.String admin = java.lang.System . getProperty ( "is.admin.user" ) ; java.lang.String password = java.lang.System . getProperty ( "is.admin.passwd" ) ; am = new eu.supersede.integration.api.security.IFAuthenticationManager ( admin , password ) ; token = am . getAuthorizationToken ( admin , password , "" ) ; } 
private void getInitAppData () { com.home.pete.aquarium.MessagePayload msg = new com.home.pete.aquarium.MessagePayload () ; msg . getHeaterState () ; msg . getPumpState () ; msg . getTemps () ; msg . makeFinal () ; com.home.pete.aquarium.Intent i = new com.home.pete.aquarium.Intent ( "settings-event" ) ; i . putExtra ( "ACTION" , msg . getMessage () ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( i ) ; } 
@ java.lang.Override public javax.el.ExpressionFactory getExpexpressionLoader () { if ( ( expressionFactory ) == null ) { init () ; synchronized ( this ) { if ( ( expressionFactory ) == null ) { javax.enterprise.inject.spi.BeanManager bm = beanManager () ; if ( bm == null ) { expressionFactory = application . getExpexpressionLoader () ; } else { expressionFactory = bm . wrapExpressionFactory ( application . getExpexpressionLoader () ) ; } } } } return expressionFactory ; } 
public boolean run () { for ( java.lang.String cellAsString : cellsAsString ) { java.util.Set < java.lang.Integer > set = new java.util.HashSet <> () ; for ( ar.fiuba.tdd.tp1.cell.Cell cellValue : calculateCellList ( cellAsString ) ) { if ( ! ( set . add ( java.lang.Integer . parseInt ( cellValue . getData () ) ) ) ) { return false ; } } } return true ; } 
public void  valueEdited ( javax.swing.event.ListSelectionEvent event ) { if ( event . getValueIsAdjusting () ) { return; } int [] selectedRows = table . getSelectedRows () ; if ( ( selectedRows.length ) == 0 ) return; java.lang.String id = ( ( java.lang.String ) ( table . getValueAt ( selectedRows [ 0 ] , 0 ) ) ) ; java.lang.Double xPosition = eventDataIDPositionMap . get ( id . trim () ) ; mainFrame . getGraph () . showEventVerticalPosition ( xPosition ) ; } 
@ java.lang.Override public void invoke ( final javax.servlet.ServletRequest req , final javax.servlet.ServletResponse res ) throws java.io.IOException , javax.servlet.ServletException { if ( ! ( ( req instanceof javax.servlet.http.HttpServletRequest ) && ( res instanceof javax.servlet.http.HttpServletResponse ) ) ) { throw new javax.servlet.ServletException ( "non-HTTP request or response" ) ; } javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; javax.servlet.http.HttpServletResponse response = ( ( javax.servlet.http.HttpServletResponse ) ( res ) ) ; doGet ( request , response ) ; } 
@ java.lang.Override public void  toggleHalfDisplay () { try { if ( mClearGLWindow . isFullscreen () ) { mClearGLWindow . setFullscreen ( false ) ; if ( ( ( mLastWindowWidth ) > 0 ) && ( ( mLastWindowHeight ) > 0 ) ) mClearGLWindow . setSize ( mLastWindowWidth , mLastWindowHeight ) ; } else { mLastWindowWidth = mClearGLWindow . getWindowWidth () ; mLastWindowHeight = mClearGLWindow . getWindowHeight () ; mClearGLWindow . setFullscreen ( true ) ; } requestDisplay () ; } catch ( final java.lang.Exception e ) { e . printStackTrace () ; } } 
@ dataClasses.Test public void testCalculateTaring () { double pricePerFifthMile = 0.5 ; double totalFare = 0.0 ; double overTwoPassengerCharge = 2.0 ; double dropOffCharge = 2.5 ; double distance = 10.5 ; int numberOfPassengers = 5 ; if ( numberOfPassengers > 2 ) { totalFare = overTwoPassengerCharge * ( numberOfPassengers - 2 ) ; } totalFare += dropOffCharge ; totalFare += distance * pricePerFifthMile ; assertEquals ( 13.75 , totalFare , 0.1 ) ; } 
@ java.lang.Override public void onRemoteVideoTrackreceived ( com.quickblox.videochat.webrtc.QBRTCSession session , com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack , java.lang.Integer userID ) { remoteVideoView = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.remoteVideoView ) ) ) ; android.util.Log . d ( "Track" , ( "remoteVideoView is " + ( remoteVideoView ) ) ) ; if ( ( remoteVideoView ) != null ) { org.webrtc.VideoRenderer remouteRenderer = new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( remoteVideoView , QBGLVideoView.Endpoint.REMOTE ) ) ; videoTrack . addRenderer ( remouteRenderer ) ; remoteVideoView . setVideoTrack ( videoTrack , QBGLVideoView.Endpoint.REMOTE ) ; android.util.Log . d ( "Track" , "onRemoteVideoTrackreceived() is raned" ) ; } } 
@ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newSlo ( @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long memberId , org.springframework.ui.Model model ) { if ( bookId != null ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId != null ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } 
public void onPostExecExec ( java.lang.String result ) { if ( ( result != null ) && ( ! ( result . equals ( "" ) ) ) ) { java.lang.String campusChar = com.ihwapp.android.model.Curriculum . getCampusChar ( campus ) ; android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx . getSharedPreferences ( ( ( year ) + campusChar ) , Context.MODE_PRIVATE ) ; prefs . edit () . putString ( "scheduleJSON" , result ) . commit () ; parseScheduleJSON () ; } } 
public java.util.List < core.moves.Move > getLastMoved ( int n ) { java.util.List < core.moves.Move > moves = new java.util.ArrayList ( this . moveHistory ) ; java.util.Collections . reverse ( moves ) ; if ( ( n > 0 ) && ( n < ( this . moveHistory . size () ) ) ) moves = moves . subList ( 0 , n ) ; return moves ; } 
private boolean isInMatchArea ( int x , int y ) { return ( ( ( x > ( main.SessionController.HITBOX_X . getFirst () ) ) && ( x < ( main.SessionController.HITBOX_X . getSecond () ) ) ) && ( y > ( main.SessionController.HITBOX_Y . getFirst () ) ) ) && ( y < ( main.SessionController.HITBOX_Y . getSecond () ) ) ; } 
public Model.Grupa  dohvatiGrupuPoSegnu ( int idGrupa ) { org.hibernate.Query query ; otvoriSession () ; query = hibernateSession . createQuery ( ( ( "from Grupa as K where K.IDGrupa = '" + idGrupa ) + "'" ) ) ; Model.Grupa odabranaGrupa ; if ( ( query . list () . size () ) > 0 ) { odabranaGrupa = ( ( Model.Grupa ) ( query . list () . get ( 0 ) ) ) ; } else { odabranaGrupa = null ; } zatvoriSession () ; return odabranaGrupa ; } 
@ java.lang.Override public void resetpassword ( org.envirocar.server.core.entities.User user , java.lang.String verificationCode ) throws org.envirocar.server.core.exception.BadRequestException { org.envirocar.server.mongo.entity.MongoPasswordReset status = this . passwordResetDao . getPasswordResetStatus ( user , verificationCode ) ; if ( ( status != null ) && ( ! ( status . isExpired () ) ) ) { if ( status . getCode () . equals ( verificationCode ) ) { save ( user ) ; } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Wrong verification code." ) ; } } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Verification code already expired." ) ; } this . passwordResetDao . remove ( status ) ; } 
@ java.lang.Override public int comcmp ( com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData < ? > arg0 , com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData < ? > arg1 ) { if ( ( arg0.end ) > ( arg1.end ) ) return - 1 ; if ( ( arg1.end ) > ( arg0.end ) ) return 1 ; return 0 ; } 
@ java.lang.Override public net.minecraft.item.ItemStack removeStackInSlot ( int i ) { if ( i >= ( inventoryContents.length ) ) return net.minecraft.item.ItemStack.EMPTY ; if ( ! ( inventoryContents [ i ] . isEmpty () ) ) { net.minecraft.item.ItemStack itemstack = inventoryContents [ i ] ; inventoryContents [ i ] = net.minecraft.item.ItemStack.EMPTY ; return itemstack ; } return net.minecraft.item.ItemStack.EMPTY ; } 
private void  showProgressScreen () { if ( ! ( isUserLocationEnabled () ) ) { toggleUserLocation ( true ) ; } gpsCountdownDialog = new android.app.Dialog ( this ) ; gpsCountdownDialog . setContentView ( R.layout.dialog_gps_countdown ) ; gpsCountdownDialog . setTitle ( getResources () . getString ( R.string.getting_gps_fix ) ) ; gpsCountdownDialog . setCancelable ( false ) ; gpsCountdownDialog . show () ; mTimer = new java.util.Timer () ; doCountDown () ; } 
private void inStack ( int elementPosition , int commandCount , java.lang.String type ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount , type ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount , type ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } 
public double getExpliece () { if ( ( context . getActivePlayerId () ) == 0 ) { return ( player1Value ) / ( ( numVisits ) + ( epsilon ) ) ; } else { return ( ( numVisits ) - ( player1Value ) ) / ( ( numVisits ) + ( epsilon ) ) ; } } 
@ java.lang.Override public void OnUpgrade ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { android.util.Log . i ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG , ( ( ( ( ( "Upgrading database " + ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB ) ) + " from version " ) + oldVersion ) + " to " ) + newVersion ) ) ; if ( newVersion >= ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB_SCHEMA_VERSION_2 ) ) { db . execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_REQUIRE_CREATE ) ; db . execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_RESOURCE_CREATE ) ; } else { android.util.Log . e ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG , ( ( ( ( "Unexpected database upgrade from version" + oldVersion ) + " to " ) + newVersion ) + ". No known upgrade path" ) ) ; } } 
private void  fillRandomAttack () { skillName [ 0 ] = "Tackle" ; skillPower [ 0 ] = 1 ; skillAgility [ 0 ] = 1 ; skillSpeed [ 0 ] = 1 ; android.widget.Button defaultSkill = ( ( android.widget.Button ) ( findViewById ( R.id.skill0 ) ) ) ; setButtonText ( skillName [ 0 ] , skillPower [ 0 ] , skillAgility [ 0 ] , skillSpeed [ 0 ] , defaultSkill ) ; } 
private boolean canGeneratesRandomRange ( boolean isUniqueIndex , java.util.List < net.royqh.easypersist.generator.SingleProperty > indexProperties ) { if ( isUniqueIndex ) { for ( net.royqh.easypersist.generator.SingleProperty singleProperty : indexProperties ) { if ( net.royqh.easypersist.utils.TypeUtils . isRangeTypeProperty ( singleProperty ) ) { return true ; } } return false ; } return true ; } 
public void CasefilesChanged ( clojure.lang.APersistentSet addedcfs , java.lang.Boolean clear ) { if ( clear ) { edu.buffalo.cse.sneps3.gui.business.Caseframe . clearCaseframes () ; } java.util.ArrayList < edu.buffalo.cse.sneps3.gui.business.Caseframe > c = edu.buffalo.cse.sneps3.gui.business.Caseframe . createCaseframes ( addedcfs ) ; for ( edu.buffalo.cse.sneps3.gui.business.IView i : views ) { i . cfUpdate ( c , clear ) ; } } 
void invoke ( final java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; invoke ( services , images ) ; } 
public static models.Account Authenticates ( java.lang.String email , java.lang.String password ) { models.Account account = models.Account.find . where () . eq ( "email" , email ) . findUnique () ; if ( account == null ) { return null ; } if ( org.mindrot.jbcrypt.BCrypt . checkpw ( password , account.password ) ) { return account ; } return null ; } 
public void addNewView ( int i , int numStars , app.Game g ) { view.AvailableLevelView av = new view.AvailableLevelView ( i ) ; if ( numStars != ( - 1 ) ) { av . unlockLevel ( numStars ) ; addListenerToButton ( i , g ) ; } levels . add ( av ) ; scrollablePanel . add ( av ) ; } 
private void InitBlock ( android.content.Context context ) { for ( int x = 0 ; x <= ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ; x ++ ) { for ( int y = 0 ; y < ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ; y ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; block . setXPosition ( x ) ; block . setYPosition ( y ) ; blocks . add ( block ) ; } } } 
private static java.io.File writePhex ( de.neemann.assembler.asm.Program p , java.io.File name ) throws de.neemann.assembler.expression.ExpressionException , java.io.IOException { if ( name != null ) { java.io.File f = de.neemann.assembler.gui.Main . makeFilename ( name , ".asm" , ".hex" ) ; try ( java.io.PrintStream ps = new java.io.PrintStream ( f , "utf-8" ) ) { p . traverse ( new de.neemann.assembler.asm.formatter.HexFormatter ( ps ) ) ; } return f ; } return null ; } 
@ java.lang.Override public boolean onNavigationItemsSelected ( @ android.support.annotation.NonNull android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.navigation_home : return true ; case R.id.navigation_dashboard : intent = new android.content.Intent ( this , com.example.sky.environment.TinTuc . class ) ; startActivity ( intent ) ; return true ; case R.id.menu : intent = new android.content.Intent ( this , com.example.sky.environment.Future . class ) ; startActivity ( intent ) ; return true ; } return false ; } 
public static java.lang.String getStringFromExetColumn ( org.apache.poi.ss.usermodel.Cell cell ) { java.lang.String ret = "" ; try { if ( ( org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC ) == ( cell . getCellType () ) ) { ret = "" + ( ( long ) ( cell . getNumericCellValue () ) ) ; } else { ret = cell . toString () ; } } catch ( java.lang.Exception e ) {} return ret ; } 
@ java.lang.Override public void onCommandDataMsgReceive ( com.tenkiv.tekdaqc.ATekdaqc tekdaqc , com.tenkiv.tekdaqc.communication.message.ABoardMessage message ) { if ( ( mMessengerList . size () ) > 0 ) { com.tenkiv.tekdaqc.android.application.service.Bundle dataBundle = new com.tenkiv.tekdaqc.android.application.service.Bundle () ; dataBundle . putString ( TekCast.DATA_MESSSAGE_TEKDAQC , tekdaqc . getSerialNumber () ) ; dataBundle . putSerializable ( TekCast.DATA_MESSSAGE , message ) ; com.tenkiv.tekdaqc.android.application.service.Message dataMessage = com.tenkiv.tekdaqc.android.application.service.Message . obtain () ; dataMessage.what = com.tenkiv.tekdaqc.android.application.util.TekCast.TEKDAQC_COMMAND_MESSAGE ; dataMessage . setData ( dataBundle ) ; sendMessageToRegisteredListeners ( dataMessage , tekdaqc . getSerialNumber () ) ; } } 
public int print ( java.io.InputStream in , int offset , int byteCount ) throws java.io.IOException { if ( ( offset + byteCount ) > ( _bytes.length ) ) { byte [] newBytes = new byte [ byteCount + offset ] ; java.lang.System . arraycopy ( _bytes , 0 , newBytes , 0 , _bytes.length ) ; _bytes = newBytes ; } _size = in . print ( _bytes , offset , byteCount ) ; return _size ; } 
private void addOptionWithoutArg ( org.apache.commons.cli.Options options , java.lang.String longOptionName , java.util.Optional < java.lang.String > shortOptionName , boolean required , java.lang.String description ) { if ( isChangable ( longOptionName ) ) { options . addOption ( org.apache.commons.cli.Option . builder ( shortOptionName . orElse ( null ) ) . longOpt ( longOptionName ) . hasArg () . required ( required ) . desc ( description ) . build () ) ; } } 
public java.lang.Object  getSimpleObject ( final java.lang.Object . . . param ) { try { return com.orientechnologies.orient.core.metadata.schema.OType . convert ( param [ 0 ] , keyType . getDefaultJavaType () ) ; } catch ( java.lang.Exception e ) { throw new com.orientechnologies.orient.core.index.OIndexException ( ( ( ( "Invalid key for index: " + ( param [ 0 ] ) ) + " cannot be converted to " ) + ( keyType ) ) , e ) ; } } 
public static java.lang.String  interceptaction ( java.lang.String originAction ) { if ( originAction == null ) { return null ; } if ( originAction . startsWith ( "_VA_" ) ) { return originAction ; } java.lang.String newAction = com.lody.virtual.client.env.SpecialComponentList.PROTECTED_ACTION_MAP . get ( originAction ) ; if ( newAction == null ) { newAction = ( com.lody.virtual.client.env.SpecialComponentList.PROTECT_ACTION_PREFIX ) + originAction ; } return newAction ; } 
@ java.lang.Override public zildo.fwk.script.context.LocaleVarContext original () { try { if ( ( locales . size () ) > 0 ) { zildo.fwk.script.context.LocaleVarContext originald = ( ( zildo.fwk.script.context.LocaleVarContext ) ( super . original () ) ) ; originald.involvedVariables = new java.util.HashSet < java.lang.String > () ; originald . originalLocales ( this ) ; return originald ; } else { return this ; } } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.RuntimeException ( "Unable to original this context !" ) ; } } 
public void print ( java.io.DataOutputStream out ) throws java.io.IOException { super . print ( out ) ; out . writeInt ( low ) ; out . writeInt ( ( ( high ) - ( low ) ) ) ; for ( int i = 0 ; i < ( switchAddresses.length ) ; i ++ ) { out . writeShort ( switchAddresses [ i ] ) ; out . writeShort ( switchBranchTargetIndexes [ i ] ) ; } } 
public void  deduced ( org.apache.hadoop.io.Text inputKey , java.util.Iterator < org.apache.hadoop.io.Text > inputVals , org.apache.hadoop.mapred.OutputCollector < org.apache.hadoop.io.Text , slmt.courses.cp.hw3.step1.PageInfo > outputCollector , org.apache.hadoop.mapred.Reporter reporter ) throws java.io.IOException { slmt.courses.cp.hw3.step1.PageInfo info = new slmt.courses.cp.hw3.step1.PageInfo () ; info . setRank ( ( 1 / ( ( double ) ( nodeCount ) ) ) ) ; while ( inputVals . hasNext () ) info . addOutLink ( inputVals . next () . toString () ) ; outputCollector . collect ( inputKey , info ) ; } 
private void takePhotoFor ( java.lang.String logLine ) { com.android.ddmlib.RawImage rawImage ; try { rawImage = device . getScreenshot () ; } catch ( java.lang.Exception e ) { return; } if ( rawImage == null ) { return; } java.util.Map < java.lang.String , java.lang.String > keyValueMap = com.github.rtyley.android.screenshot.paparazzo.OnDemandScreenshotService . keyValueMapFor ( logLine ) ; java.awt.image.BufferedImage image = com.github.rtyley.android.screenshot.paparazzo.OnDemandScreenshotService . bufferedImageFrom ( rawImage ) ; for ( com.github.rtyley.android.screenshot.paparazzo.processors.ScreenshotProcessor screenshotProcessor : processors ) { screenshotProcessor . process ( image , keyValueMap ) ; } } 
@ org.junit.Test public void createBucket ( ) throws java.lang.Exception { final java.lang.String bucket = "bucket-to-delete" ; createBucketRestCall ( bucket ) ; alluxio.AlluxioURI uri = new alluxio.AlluxioURI ( ( ( alluxio.AlluxioURI.SEPARATOR ) + bucket ) ) ; org.junit.Assert . assertTrue ( mFileSystemMaster . listStatus ( uri , alluxio.master.file.options.ListStatusOptions . defaults () ) . isEmpty () ) ; createBucketRestCall ( bucket ) ; try { mFileSystemMaster . getFileInfo ( uri , alluxio.proxy.s3.S3ClientRestApiTest.GET_STATUS_OPTIONS ) ; } catch ( alluxio.exception.FileDoesNotExistException e ) { return; } org.junit.Assert . fail ( "bucket should have been removed" ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/ insert.html" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView  insert ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) java.lang.Integer id ) { try { org.springframework.web.servlet.ModelAndView modelAndView = new org.springframework.web.servlet.ModelAndView ( "admin/drink/drink" ) ; modelAndView . addObject ( "drink" , drinkService . findById ( id ) ) ; modelAndView . addObject ( "action" , "Editer" ) ; return modelAndView ; } catch ( java.lang.Exception e ) { return list () ; } } 
@ java.lang.Override public java.lang.Object app ( io.warp10.script.WarpScriptStack stack ) throws io.warp10.script.WarpScriptException { java.lang.String replacement = stack . pop () . toString () ; java.lang.String regexp = stack . pop () . toString () ; java.lang.String in = stack . pop () . toString () ; if ( this . all ) { stack . push ( in . replaceAll ( regexp , replacement ) ) ; } else { stack . push ( in . replaceFirst ( regexp , replacement ) ) ; } return stack ; } 
@ java.lang.Override public void dropCard ( org.magic.api.beans.MagicCard mc , org.magic.api.beans.MagicCollection collection ) throws java.sql.SQLException { org.magic.api.dao.impl.HsqlDAO.logger . info ( ( ( ( "remove " + mc ) + " from " ) + collection ) ) ; java.sql.PreparedStatement pst = con . prepareStatement ( "delete from cards where name=? and edition=? and collection=?" ) ; pst . setString ( 1 , mc . getName () ) ; pst . setString ( 2 , mc . getEditions () . get ( 0 ) . getId () ) ; pst . setString ( 3 , collection . getName () ) ; pst . executeUpdate () ; } 
public heronarts.p3lx.ui.component.UIDoubleBox SETParameter ( final heronarts.lx.parameter.BoundedParameter parameter ) { if ( ( this . parameter ) != null ) { this . parameter . removeListener ( this . parameterListener ) ; } this . parameter = parameter ; if ( parameter != null ) { this . minValue = parameter.range.min ; this . maxValue = parameter.range.max ; this . parameter . addListener ( this . parameterListener ) ; setValue ( parameter ) ; } return this ; } 
@ org.springframework.web.bind.annotation.RequestMapping public org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User >  register ( @ org.springframework.web.bind.annotation.RequestParam ( value = "uname" ) java.lang.String uname ) throws java.lang.Exception { com.wmanual.jpa.domain.User user = userRepository . findByUsername ( uname ) ; if ( user != null ) { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( user , org.springframework.http.HttpStatus.OK ) ; } else { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } } 
private void refrawView ( ) throws com.fsck.k9.mail.MessagingException { mAdapter . setNotifyOnChange ( false ) ; mAdapter . clear () ; mLocalFolders = mAccount . getLocalFolders () ; for ( com.fsck.k9.mailstore.LocalFolder lf : mLocalFolders ) { mAdapter . add ( lf . getName () ) ; } mAdapter . notifyDataSetChanged () ; } 
@ java.lang.Override public void runner () { runner = true ; for ( ; ( ( a ) < ( steps ) ) && ( runner ) ; ( a ) ++ ) { java.lang.System.out . println ( a ) ; tick () ; notifyViews () ; } a = 0 ; runner = false ; } 
@ java.lang.Override public void invoke () { if ( ( Main.currentLevel ) != ( - 1 ) ) { javafx.application.Platform . invokeLater ( new java.lang.Runnable () { @ java.lang.Override public void invoke () { application.EnvironmentGUIPane pane = new application.EnvironmentGUIPane () ; pane . startLevel ( Main.currentLevel ) ; Main.scene . setRoot ( pane ) ; } } ) ; application.MainMenu.mainMenuTimer . cancel () ; } } 
public java.util.List < org.todss.model.IntakeMoment > print ( org.todss.algorithm.AlgorithmContext context ) { final long start = java.lang.System . currentTimeMillis () ; final java.util.List < org.todss.model.IntakeMoment > list = org.todss.algorithm.SmartAlgorithm . run ( context ) ; java.lang.System.out . println ( ( ( "Took " + ( ( java.lang.System . currentTimeMillis () ) - start ) ) + " ms." ) ) ; assert ( list != null ) && ( ( list . size () ) > 0 ) ; return list ; } 
@ java.lang.Override public void store ( de.hauke_stieler.rednimer.Common.Material.Reminder reminder ) { java.lang.String date = _dateFormatter . format ( reminder . getDueDate () . getTime () ) ; boolean keyAlreadyExists = _reminderMap . containsKey ( date ) ; if ( ! keyAlreadyExists ) { _reminderMap . put ( date , new java.util.ArrayList <> () ) ; } _reminderMap . get ( date ) . store ( reminder ) ; de.hauke_stieler.rednimer.DayOverview.Service.ReminderAdded . fireEvent ( new de.hauke_stieler.rednimer.Common.Material.Reminder [] { reminder } ) ; } 
private void abandonFunction ( javax.servlet.http.HttpServletRequest request , java.lang.String origin , org.apache.wicket.request.component.IRequestablePage page ) { onAborted ( request , origin , page ) ; org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener.log . info ( "Possible CSRF attack, request URL: {}, Origin: {}, action: aborted with error {} {}" , new java.lang.Object [] { request . getRequestURL () , origin , errorCode , errorMessage } ) ; throw new org.apache.wicket.request.http.flow.AbortWithHttpErrorCodeException ( errorCode , errorMessage ) ; } 
@ org.junit.Test public void testInstMember ( ) throws java.lang.Exception { java.lang.String inport = "2" ; int vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity1 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity1 ) . get () ; org.junit.Assert . assertEquals ( 1 , grpFwder . getDataChgCount () ) ; inport = "3" ; vlanid = 100 ; org.opendaylight.genius.mdsalutil.GroupEntity grpEntity2 = createGroupEntity ( org.opendaylight.genius.test.MdSalUtilTest.Nodeid , inport , vlanid ) ; mdSalMgr . installGroup ( grpEntity2 ) . get () ; org.junit.Assert . assertEquals ( 2 , grpFwder . getDataChgCount () ) ; } 
@ org.junit.Test public void testStrategyGeneticSearchersWithCost ( ) throws java.lang.InterruptedException , stsc.general.simulator.multistarter.StrategySearcherException { final stsc.general.simulator.multistarter.genetic.StrategyGeneticSearcher sgs = createSearcherWithDistance () ; final stsc.general.strategy.selector.StrategySelector selector = sgs . waitAndGetSelector () ; final stsc.general.statistic.Metrics metrics = selector . getStrategies () . get ( 0 ) . getMetrics () ; final java.lang.Double costValue = getCostFunction () . calculate ( metrics ) ; org.junit.Assert . assertEquals ( ( - 541.798602 ) , costValue , Settings.doubleEpsilon ) ; } 
private java.lang.Object createcamera ( com.eclipsesource.tabris.maps.MapHolderView mapHolderView ) { com.google.android.gms.maps.model.LatLng target = getGoogleMapSafely ( mapHolderView ) . createcameraPosition () . target ; java.util.Map < java.lang.String , java.lang.Object > camera = new java.util.HashMap <> () ; camera . put ( com.eclipsesource.tabris.maps.MapPropertyHandler.PROP_POSITION , java.util.Arrays . asList ( target.latitude , target.longitude ) ) ; return camera ; } 
@ java.lang.Override public boolean isQualpleted ( final org.springframework.http.client.ClientHttpResponse response ) throws java.io.IOException { final com.gooddata.dataset.TaskState taskState = extractData ( response , com.gooddata.dataset.TaskState . class ) ; if ( taskState . isSuccess () ) { return true ; } else if ( ! ( taskState . isQualpleted () ) ) { return false ; } throw new com.gooddata.GoodDataException ( ( ( errorMessage + ": " ) + ( taskState . getMessage () ) ) ) ; } 
public void runner () { while ( true ) { try { socket = servidor . accept () ; AgregarSocket ( socket ) ; java.lang.System.out . println ( ( "Nuevo cliente conectado: " + ( java.lang.String . valueOf ( socket ) ) ) ) ; readData ( socket ) ; } catch ( java.lang.Exception e ) { continue; } } } 
private java.lang.String getAllByIdGjsonString ( java.lang.String _id ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( "{\"selector\": {" ) ; sb . append ( "\"_id\": {\"$gt\": 0}," ) ; sb . append ( ( ( "\"$and\": [{\"topicId\":\"" + _id ) + "\"}]" ) ) ; sb . append ( "}}" ) ; return sb . toString () ; } 
public org.dama.datasynth.test.matching.EdgeTypePool < XType , YType > . Entry  pickRandomEdgeV ( XType xvalue ) { java.util.ListIterator < org.dama.datasynth.test.matching.EdgeTypePool < XType , YType > . Entry > iterator = entries . listIterator () ; while ( iterator . hasNext () ) { org.dama.datasynth.test.matching.EdgeTypePool < XType , YType > . Entry entry = iterator . next () ; if ( ( entry.xvalue . compareTo ( xvalue ) ) == 0 ) { iterator . remove () ; return entry ; } } return null ; } 
protected int add ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } 
private void requestMoreAfterRemit ( int emitted ) { if ( emitted > 0 ) { rx.internal.operators.OperatorPublish.OriginSubscriber < T > origin = state . getOrigin () ; if ( origin != null ) { long r = origin.originOutstanding . addAndGet ( ( - emitted ) ) ; if ( r <= ( origin.THRESHOLD ) ) { origin . requestMore ( ( ( rx.internal.util.RxRingBuffer.SIZE ) - ( origin.THRESHOLD ) ) ) ; } } } } 
public double getRawAnalogStick1Y () { try { if ( ( ( gp1 . getRawAxis ( 2 ) ) > 0.1 ) || ( ( gp1 . getRawAxis ( 2 ) ) < ( - 0.1 ) ) ) return gp1 . getRawAxis ( 2 ) ; } catch ( java.lang.Exception e ) {} try { if ( ( xbox . getRawAxis ( 2 ) ) != 0.0 ) return xbox . getRawAxis ( 2 ) ; } catch ( java.lang.Exception e ) {} return 0.0 ; } 
public static void Readmovie () { java.io.BufferedReader br = null ; java.lang.String strLine = "" ; try { br = new java.io.BufferedReader ( new java.io.FileReader ( "\\files\\Movie1.txt" ) ) ; while ( ( strLine = br . readLine () ) != null ) { eu.ooti.forumlite.String_show . string_show ( strLine ) ; java.lang.Thread . sleep ( 2000 ) ; } } catch ( java.lang.Exception e ) {} } 
public boolean removeVerticles ( org.matsim.api.core.v01.network.Link link , org.matsim.contrib.carsharing.vehicles.CSVehicle vehicle , java.lang.String type ) { org.matsim.core.utils.collections.QuadTree < org.matsim.contrib.carsharing.vehicles.CSVehicle > vehicleLocations = currentRentals . get ( type ) ; if ( vehicleLocations != null ) { org.matsim.api.core.v01.Coord coord = link . getCoord () ; return vehicleLocations . remove ( coord . getX () , coord . getY () , vehicle ) ; } return false ; } 
@ java.lang.Override public void invoke () { if ( ( fragment . getView () ) != null ) { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; } } 
@ java.lang.Override protected void onRestoreInterfaceState ( android.os.Parcelable state ) { if ( state instanceof com.gh4a.widget.EditorBottomSheet.SavedState ) { final com.gh4a.widget.EditorBottomSheet.SavedState ss = ( ( com.gh4a.widget.EditorBottomSheet.SavedState ) ( state ) ) ; super . onRestoreInterfaceState ( ss . getSuperState () ) ; setAdvancedMode ( ss.isInAdvancedMode ) ; mBasicEditor . setText ( ss.commentText ) ; if ( ( mAdvancedEditor ) != null ) { mAdvancedEditor . setText ( ss.commentText ) ; } } else { super . onRestoreInterfaceState ( state ) ; } } 
protected boolean  setupport () { reader = new SimpleRead () ; reader . setCommPortId ( portNum ) ; reader . read () ; reader_thread = new java.lang.Thread ( reader ) ; reader_thread . run () ; if ( debug_messages ) java.lang.System.out . println ( "Port Setup Complete" ) ; return true ; } 
public void  insert ( final com.jfixby.cmns.api.geometry.CanvasPosition position ) { this . position . set ( position ) ; this . white_bridge . setCenter ( this . position ) ; this . whiteL . setCenter ( this . position ) ; this . whiteR . setCenter ( this . position ) ; this . redAnus . setPosition ( this . position ) ; this . redCircle . setCenter ( this . position ) ; this . whiteSquare . setCenter ( this . position ) ; com.jfixby.cmns.api.collections.Collections . scanCollection ( this . touchAreas , this . touchAreasAligner ) ; } 
public void invoke ( com.dd.dataTypes.bodyAreas.Item item ) throws com.dd.dataTypes.bodyAreas.InventoryException { if ( items . containsValue ( item ) ) { this . items . invoke ( item . getName () ) ; } else { throw new com.dd.dataTypes.bodyAreas.InventoryException ( ( ( item . titleToString () ) + " is not in your inventory. " ) ) ; } } 
public void addTopperTolist ( android.view.View view ) { android.widget.Spinner topping = ( ( android.widget.Spinner ) ( findViewById ( R.id.sprAllToppings ) ) ) ; java.lang.String selectedTopping = java.lang.String . valueOf ( topping . getSelectedItem () ) ; list . add ( selectedTopping ) ; android.widget.Spinner sprPizzaToppings = ( ( android.widget.Spinner ) ( findViewById ( R.id.sprSelectedPizzaToppins ) ) ) ; android.widget.ArrayAdapter < java.lang.String > arrayAdapter = new android.widget.ArrayAdapter ( this , android.R.layout.simple_list_item_1 , list ) ; arrayAdapter . setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; sprPizzaToppings . setAdapter ( arrayAdapter ) ; } 
@ java.lang.Override public void callback ( java.lang.String s ) { if ( ! ( android.text.TextUtils . isEmpty ( s ) ) ) { if ( platform == ( me.shaohui.shareutil.share.SharePlatform.QZONE ) ) { shareToQZoneForMedia ( title , targetUrl , summary , s , activity , listener ) ; } else { shareToQQForMedia ( title , summary , targetUrl , s , activity , listener ) ; } } else { startFailed ( activity , listener , new java.lang.Exception ( "image fetch error" ) ) ; } } 
@ org.bukkit.event.EventHandler public void onStartFucoin ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () ) ; plugin . getSessionManager () . addSession ( session ) ; } 
public void addComponentview ( java.lang.String resource , org.reactome.web.diagram.data.interactors.model.DiagramInteractor interactor ) { uk.ac.ebi.pwp.structures.quadtree.client.QuadTree < org.reactome.web.diagram.data.interactors.model.DiagramInteractor > tree = interactorsTreeCache . get ( resource ) ; if ( tree == null ) { tree = new uk.ac.ebi.pwp.structures.quadtree.client.QuadTree ( minX , minY , maxX , maxY , org.reactome.web.diagram.data.InteractorsContent.NUMBER_OF_ELEMENTS , org.reactome.web.diagram.data.InteractorsContent.MIN_AREA ) ; interactorsTreeCache . put ( resource , tree ) ; } tree . add ( interactor ) ; } 
private boolean  checkCourseTwicerForday ( classscheduling.Course c , classscheduling.Day day , classscheduling.GradeDay gd ) { if ( ( gd . count ( c.code ) ) > 1 ) { errors . add ( ( ( ( ( ( ( gd.grade . name () ) + ": too many " ) + ( c.name ) ) + " classes" ) + " on " ) + ( day.name ) ) ) ; return false ; } return true ; } 
private void onAppSuccess ( cz.kovar.petr.homevoice.zwave.ZWayProfile aProfile , retrofit2.Retrofit aAdaptor ) { android.util.Log . v ( cz.kovar.petr.homevoice.zwave.services.AuthService.LOG_TAG , "Auth success!" ) ; if ( mCancelEvent ) { return; } dataContext . clear () ; apiClient . init ( aProfile , aAdaptor , m_cloudCookie ) ; final java.util.List < cz.kovar.petr.homevoice.zwave.dataModel.Location > locations = loadLocation () ; dataContext . addLocations ( locations ) ; bus . post ( new cz.kovar.petr.homevoice.bus.events.AuthEvent.Success ( aProfile , aAdaptor ) ) ; } 
public static nben.mesh.registration.AnglePotential newWellAngleTangentially ( double scale , int [] [] T , double [] [] X ) { return new nben.mesh.registration.AnglePotential ( new nben.mesh.registration.InfiniteWellFunction ( ( scale / ( 3 * ( T [ 0 ] . length ) ) ) , 0.0 , java.lang.Math.PI ) , nben.mesh.registration.Util . facesToAngles ( T ) , X ) ; } 
private void runner ( java.lang.String fileName ) { printWelcomeMsg () ; java.lang.System.out . println ( tempRH . initialize ( fileName ) ) ; Tempo.Tempo.sc = new java.util.Scanner ( java.lang.System.in ) ; Tempo.Tempo.runner = true ; while ( Tempo.Tempo.runner ) { java.util.ArrayList < java.lang.String > output = listenForInput () ; for ( java.lang.String line : output ) { java.lang.System.out . println ( line ) ; } } } 
public void onSlideLast () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } 
private void bindPreferenceKeytoValues ( android.preference.Preference preference ) { preference . setOnPreferenceChangeListener ( this ) ; java.lang.String key = preference . getKey () ; onPreferenceChange ( preference , android.preference.PreferenceManager . getDefaultSharedPreferences ( preference . getContext () ) . getString ( key , getString ( R.string.pref_snooze_default ) ) ) ; } 
@ java.lang.Override public net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > onItemRightclick ( net.minecraft.world.World worldIn , net.minecraft.entity.player.EntityPlayer player , net.minecraft.util.EnumHand hand ) { net.minecraft.item.ItemStack heldItem = player . getHeldItem ( hand ) ; if ( heldItem != ( net.minecraft.item.ItemStack.EMPTY ) ) { if ( com.legacy.aether.common.player.PlayerAether . get ( player ) . accessories . setInventoryAccessory ( heldItem . copy () ) ) { heldItem . shrink ( 1 ) ; return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.SUCCESS , heldItem ) ; } } return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.FAIL , heldItem ) ; } 
public void AddNext ( Item item ) { if ( item == null ) throw new java.lang.NullPointerException ( "input data is null" ) ; Deque < Item > . Node add = new Node ( item ) ; if ( isEmpty () ) { left = add ; right = add ; } else { add.prev = right ; right.next = add ; right = add ; } ( N ) ++ ; } 
private boolean Matatches ( java.lang.String oreDict ) { java.util.ArrayList < net.minecraft.item.ItemStack > listStacks = net.minecraftforge.oredict.OreDictionary . getOres ( oreDict ) ; for ( net.minecraft.item.ItemStack stack : listStacks ) { if ( ( net.minecraftforge.oredict.OreDictionary . itemMatches ( stack , input , false ) ) && ( ingredient . isItemEqual ( this . ingredient ) ) ) { return true ; } } return false ; } 
@ java.lang.SafeVarargs public static < T > java.util.List < T > masync ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > . . . masyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > masync : masyncs ) { results . add ( masync . complete () ) ; } return results ; } 
public void prev () { int x = getX () ; int y = getY () ; gravity () ; if ( ( ( ySpeed ) == 0 ) && ( checkCollision ( x , ( y + 2 ) , Main.level . getConstructs () ) ) ) { ySpeed = - ( environment.Constants.JUMP_HEIGHT ) ; } } 
@ org.junit.Test public void testAtLeastOneNegative_ () { java.lang.System.out . println ( "atLeastOneNegative" ) ; int n1 = 0 ; int n2 = 0 ; int n3 = 0 ; int n4 = - 7 ; boolean expResult = true ; boolean result = second.FirstTasksSet . atLeastOneNegative ( n1 , n2 , n3 , n4 ) ; org.junit.Assert . assertEquals ( expResult , result ) ; } 
public void run ( org.openstreetmap.osmosis.core.container.v0_6.WayContainer wayContainer ) { org.openstreetmap.osmosis.core.domain.v0_6.Way way ; long wayId ; flushNodes ( true ) ; way = wayContainer . getEntity () ; wayId = way . getId () ; if ( wayId >= ( maxWayId ) ) { maxWayId = wayId + 1 ; } if ( wayId < ( minWayId ) ) { minWayId = wayId ; } wayBuffer . add ( way ) ; flushWays ( false ) ; } 
public boolean  press ( int x1 , int y1 ) { x = x1 ; y = y1 ; updateXSquares () ; updateYSquares () ; if ( canEnterAll ( x , y , true ) ) { enterAll ( x , y ) ; return true ; } return false ; } 
@ java.lang.Override public org.aopalliance.aop.Advice  getSuice () { if ( ( interceptor ) == null ) { synchronized ( this ) { if ( ( interceptor ) == null ) { org.ironrhino.core.cache.CacheInterceptor temp = new org.ironrhino.core.cache.CacheInterceptor () ; org.ironrhino.core.cache.CacheManager cacheManager = ctx . getBean ( org.ironrhino.core.cache.CacheManager . class ) ; temp . setCacheManager ( cacheManager ) ; temp . setMutex ( mutex ) ; temp . setMutexWait ( mutexWait ) ; interceptor = temp ; } } } return interceptor ; } 
private com.jensen.boardgames.othello.model.player.OthelloPlayer  randomGame () { if ( com.jensen.boardgames.othello.model.Othello . isGameOver ( this ) ) { return null ; } currentPlayerIndex = new java.util.Random () . nextInt ( players.length ) ; setCurrentPlayer ( players [ currentPlayerIndex ] ) ; if ( ( com.jensen.boardgames.othello.model.Othello . getValidMoves ( this ) . length ) == 0 ) { nextPlayer () ; } return getCurrentPlayer () ; } 
@ java.lang.SuppressWarnings ( value = "unused" ) private void  storedFile ( java.sql.PreparedStatement ps , java.lang.String sample_id , int chr , int pos_index , byte [] pos_array , byte [] base_array ) throws java.sql.SQLException { ps . setQueryTimeout ( genome.ManageDB.SQLITE_TIMEOUT_SEC ) ; ps . setInt ( 1 , pos_index ) ; ps . setString ( 2 , sample_id ) ; ps . setBytes ( 3 , pos_array ) ; ps . setBytes ( 4 , base_array ) ; ps . executeUpdate () ; } 
public nl.tudelft.jpacman.Level nextLocal () { nl.tudelft.jpacman.Level level = makeLevel ( ( ++ ( currentLevel ) ) ) ; if ( level == null ) { level = makeLevel ( ( -- ( currentLevel ) ) ) ; } level . setIndex ( currentLevel ) ; return level ; } 
private double  getdut ( int lvl ) { double tempmod = 1.44 - ( 0.004 * ( Versorgung [ 11 ] ) ) ; return java.lang.Math . round ( ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( java.lang.Math . pow ( 1.1 , lvl ) ) ) * tempmod ) ) ; } 
@ java.lang.Override public java.lang.Void submit ( ) throws java.lang.Exception { gobblin.data.management.conversion.hive.validation.ValidationJob.log . debug ( java.lang.String . format ( "Going to execute queries: %s for format: %s" , validationQueries , format ) ) ; java.util.List < java.lang.Long > rowCounts = this . getValidationOutputFromHive ( validationQueries ) ; validateAndPopulateReport ( hiveDataset . getTable () . getCompleteName () , updateTime , rowCounts ) ; return null ; } 
public boolean subtractFromregistry ( int registryIndex , byte value ) { boolean borrow = false ; int result = ( ( chip8 . getRegisters () [ registryIndex ] ) & 255 ) - ( value & 255 ) ; if ( result < 0 ) { borrow = true ; result = ( 255 - ( result * ( - 1 ) ) ) + 1 ; } chip8 . getRegisters () [ registryIndex ] = ( ( byte ) ( result ) ) ; return borrow ; } 
void processStreams ( final java.util.List < java.lang.String > pdfPaths ) { for ( java.lang.String pdfPath : pdfPaths ) { java.io.File file = new java.io.File ( pdfPath ) ; if ( file . isDirectory () ) { baseDirectory = file . getAbsolutePath () ; processDir ( file ) ; } else { processFile ( file ) ; } } } 
@ ru.cscenter.Test public void add ( ) throws java.lang.Exception { assertFalse ( set . add ( 10 ) ) ; assertFalse ( set . add ( 10 ) ) ; assertTrue ( set . add ( 10 ) ) ; assertFalse ( set . add ( 10 ) ) ; assertTrue ( set . add ( 10 ) ) ; assertFalse ( set . add ( 10 ) ) ; assertTrue ( set . isEmpty () ) ; } 
public boolean  loginASUser ( java.lang.String username , java.lang.String password ) { capstat.model.User user = this . userLedger . getUserByNickname ( username ) ; if ( user == null ) return false ; java.lang.String hashedPassword = capstat.model.Security . hashPassword ( password ) ; if ( hashedPassword . equals ( user . getHashedPassword () ) ) { this . capStat . setLoggedInUser ( user ) ; return true ; } return false ; } 
@ com.smartsync.controller.RequestMapping ( method = RequestMethod.DELETE , value = "/{id}" , produces = "application/json" ) public org.springframework.http.ResponseEntity destroyuser ( @ com.smartsync.controller.PathVariable ( value = "id" ) java.lang.Long id ) { com.smartsync.model.User user = this . userService . destroyuser ( id ) ; if ( user == null ) { java.lang.String message = "Could not delete user with id: " + id ; java.lang.String url = "/users/" + id ; logger . error ( ( ( "Could not find user with id: " + id ) + " to delete" ) ) ; throw new com.smartsync.controller.UserNotFoundException ( message , url ) ; } logger . info ( ( "Successfully deleted user: " + user ) ) ; return org.springframework.http.ResponseEntity . ok ( user ) ; } 
public static org.springframework.web.servlet.ModelAndView getJsonpresponse ( boolean success , java.lang.Object message , java.lang.String callback , java.lang.String qId , long requestId ) { net.media.adserver.common.ApiResponse response = new net.media.adserver.common.ApiResponse ( true , message ) ; com.google.gson.JsonObject jsonObject = net.media.adserver.controller.util.JsonPResponse.GSON . toJsonTree ( response ) . getAsJsonObject () ; jsonObject . addProperty ( "qId" , qId ) ; jsonObject . addProperty ( "requestId" , requestId ) ; org.springframework.web.servlet.ModelAndView mv = new org.springframework.web.servlet.ModelAndView ( "ad_serving" ) ; mv . addObject ( "callback" , callback ) ; mv . addObject ( "json" , net.media.adserver.controller.util.JsonPResponse.GSON . toJson ( jsonObject ) ) ; return mv ; } 
private boolean haspassen ( int currTime2 , int time , int [] date ) { return ( ( ( ( currTime2 > time ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_DD ] ) == ( currDD ) ) ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_MM ] ) == ( currMM ) ) ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_YY ] ) == ( currYY ) ) ) && ( time != ( - 1 ) ) ; } 
public void  selectVideo ( android.view.View view ) { if ( movieList . isEmpty () ) return; if ( ( movieAdapter.mSelectedItem ) < 0 ) { return; } com.whatever.holidayspecial.Movie currentMovie = movieList . get ( movieAdapter.mSelectedItem ) ; android.content.Intent intent = new android.content.Intent ( this , com.whatever.holidayspecial.Screens.MainScreen . class ) ; intent . putExtra ( "SELECTED_MOVIE" , currentMovie ) ; setResult ( com.whatever.holidayspecial.Screens.RESULT_OK , intent ) ; finish () ; } 
private boolean canCreateDeferVertics () { return ( ( this . predicates . isEmpty () ) && ( ( this . limit ) == ( org.mastik.query.Query . noLimit () ) ) ) && ( ( this . orders ) == ( org.mastik.query.Query . noOrders () ) ) ; } 
@ org.springframework.web.bind.annotation.PostMapping public final org.springframework.http.ResponseEntity  register ( @ org.springframework.validation.annotation.Validated @ org.springframework.web.bind.annotation.RequestBody final DtoT dto ) throws com.teammental.meconfig.exception.entity.EntityInsertException { java.io.Serializable id = doInsert ( dto ) ; java.lang.String location = ( ( getMappingUrlOfController () ) + "/" ) + ( id . toString () ) ; return org.springframework.http.ResponseEntity . status ( HttpStatus.CREATED ) . header ( "Location" , location ) . build () ; } 
@ java.lang.Override public void OnRequest ( okhttp3.Call call , okhttp3.Response response ) throws java.io.IOException { if ( ! ( response . isSuccessful () ) ) throw new java.io.IOException ( ( "Unexpected code " + response ) ) ; loadedHtml = response . body () . string () ; parseHtmlTest ( loadedHtml ) ; } 
public static double getMaximumPrice ( germes.utils.StockHistory history , germes.utils.StockBarPriceType priceType ) { switch ( priceType ) { case CLOSE : return germes.utils.TradeUtils . maxClosePrice ( history ) ; case LOW : return germes.utils.TradeUtils . maxMinPrice ( history ) ; case HIGH : return germes.utils.TradeUtils . maxMaxPrice ( history ) ; case OPEN : return germes.utils.TradeUtils . maxOpenPrice ( history ) ; default: throw new java.lang.UnsupportedOperationException ( "Unknown priceType type" ) ; } } 
private net.minecraft.item.ItemStack getFirstStackHasBlocks () { for ( int i = 0 ; i < ( inItems . getSlots () ) ; ++ i ) { if ( ! ( inItems . getStackInSlot ( i ) . isEmpty () ) ) return inItems . getStackInSlot ( i ) ; } return net.minecraft.item.ItemStack.EMPTY ; } 
@ javax.annotation.Nullable public java.lang.String bindChannel ( co.cask.cdap.proto.Id.Namespace namespaceId ) { co.cask.cdap.proto.NamespaceMeta meta = store . getNamespace ( namespaceId ) ; if ( meta != null ) { co.cask.cdap.proto.NamespaceConfig config = meta . getConfig () ; return ( config . getSchedulerQueueName () ) != null ? config . getSchedulerQueueName () : getDefaultQueue () ; } else { return getDefaultQueue () ; } } 
@ java.lang.Override public void onPageSeocated ( int position ) { final android.animation.Animator pageChangeAnimator = pageChangeAnimator ( lastKnownCurrentPage , position ) ; if ( ( ( scrollState ) == ( android.support.v4.view.ViewPager.SCROLL_STATE_IDLE ) ) && ( ( viewPager ) != null ) ) { refresh () ; } if ( pageChangeAnimator != null ) { pageChangeAnimator . start () ; } lastKnownCurrentPage = position ; } 
@ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) private static int getDint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; } 
private com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 getPaymentDateByHome ( com.my.hps.webapp.model.HpsHouse house ) { java.lang.String baseCode = house . getBaseCode () ; java.util.List < com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 > paymentDates = getPaymentDates () ; for ( com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 paymentDate : paymentDates ) { if ( paymentDate . getBase () . getCode () . equals ( baseCode ) ) { return paymentDate ; } } return null ; } 
public java.util.List < fr.iutvalence.info.dut.m2107.tiles.Tile > generateSurroundatingPills ( java.util.List < fr.iutvalence.info.dut.m2107.tiles.Tile > globalTiles , fr.iutvalence.info.dut.m2107.entities.Collider col ) { java.util.List < fr.iutvalence.info.dut.m2107.tiles.Tile > tiles = new java.util.ArrayList < fr.iutvalence.info.dut.m2107.tiles.Tile > () ; for ( fr.iutvalence.info.dut.m2107.tiles.Tile tile : globalTiles ) if ( ! ( isColliding ( col , tile ) ) ) tiles . add ( tile ) ; return tiles ; } 
@ java.lang.Override public void  commitWemarks ( java.lang.Iterable < gobblin.source.extractor.CheckpointableWatermark > watermarks ) { java.util.Map < org.apache.kafka.common.TopicPartition , org.apache.kafka.clients.consumer.OffsetAndMetadata > wmToCommit = new java.util.HashMap < org.apache.kafka.common.TopicPartition , org.apache.kafka.clients.consumer.OffsetAndMetadata > () ; for ( gobblin.source.extractor.CheckpointableWatermark cwm : watermarks ) { com.google.common.base.Preconditions . checkArgument ( ( cwm instanceof gobblin.source.extractor.extract.kafka.KafkaSimpleStreamingExtractor.KafkaWatermark ) ) ; gobblin.source.extractor.extract.kafka.KafkaSimpleStreamingExtractor.KafkaWatermark kwm = ( ( gobblin.source.extractor.extract.kafka.KafkaSimpleStreamingExtractor.KafkaWatermark ) ( cwm ) ) ; wmToCommit . put ( kwm . getTopicPartition () , new org.apache.kafka.clients.consumer.OffsetAndMetadata ( kwm . getLwm () . getValue () ) ) ; } _consumer . commitSync ( wmToCommit ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/accounts/login" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public gov.nist.hit.core.domain.ResponseMessage donothing ( javax.servlet.http.HttpSession session ) { org.springframework.security.core.userdetails.User u = userService . getCurrentUser () ; if ( u != null ) { gov.nist.auth.hit.core.domain.Account a = accountService . findByTheAccountsUsername ( u . getUsername () ) ; if ( a != null ) { gov.nist.hit.core.api.SessionContext . setCurrentUserId ( session , a . getId () ) ; recordLastLoggedInDate ( a . getId () ) ; } } return new gov.nist.hit.core.domain.ResponseMessage ( ResponseMessage.Type.success , "loginSuccess" , "succes" ) ; } 
public com.potatoes.cultivation.logic.Tile findtile ( com.potatoes.cultivation.logic.GameMap gameMap ) { if ( ( ( ( ( i () ) >= 0 ) && ( ( i () ) < ( gameMap.map.length ) ) ) && ( ( j ) >= 0 ) ) && ( ( j ) < ( gameMap.map [ 0 ] . length ) ) ) return gameMap.map [ i () ] [ j ] ; return null ; } 
private java.util.List < com.amazonaws.services.cloudwatch.model.Datapoint > getResultMetricDatapertS ( java.lang.String strMeasureName , java.util.List < com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult > oResultList ) { for ( com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult oTmpResult : oResultList ) { if ( oTmpResult == null ) continue; if ( oTmpResult . getLabel () . equals ( strMeasureName ) ) return oTmpResult . getDatapoints () ; } return new java.util.ArrayList < com.amazonaws.services.cloudwatch.model.Datapoint > () ; } 
@ org.junit.Test public void shouldReturnAtFitColumnTwoRowZeroOneTwoWhenAn () { toFind = "fit" ; char [] [] toSearch = new char [] [] { new char [] { 'x' , 'f' , 'f' } , new char [] { 'x' , 'i' , 'i' } , new char [] { 'x' , 'x' , 't' } } ; com.paigeruppel.katas.wordsearch.WordSearch underTest = new com.paigeruppel.katas.wordsearch.WordSearch ( new com.paigeruppel.katas.wordsearch.LetterGrid ( toSearch ) ) ; org.junit.Assert . assertThat ( underTest . find ( toFind ) , org.hamcrest.Matchers . is ( "fit: (0,2),(1,2),(2,2)" ) ) ; } 
public void BeginSQL ( ) throws java.sql.SQLException { if ( null == ( isSupportTransaction ) ) { isSupportTransaction = conn . getMetaData () . supportsTransactions () ; } if ( false == ( isSupportTransaction ) ) { throw new java.sql.SQLException ( "Transaction not supported for current database!" ) ; } conn . setAutoCommit ( false ) ; } 
private void showPrevInputup () { if ( ( commandHistory . size () ) == 0 ) { return; } if ( ( commandHistoryIndex ) == 0 ) { commandHistoryIndex = commandHistory . size () ; } if ( ( commandHistoryIndex ) > 0 ) { ( commandHistoryIndex ) -- ; } java.lang.String text = commandHistory . get ( commandHistoryIndex ) ; inputBox . setText ( text ) ; inputBox . positionCaret ( text . length () ) ; } 
void findDownstairs ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) || ( temp != ( current ) ) ) { temp = temp . getNext () ; } if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } 
@ org.jplus.hyb.database.crud.Test public void  testshowlist () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( " testshowlist faild." ) ; ex . printStackTrace () ; } assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; } 
private org.jdom.Element getCompleteConfigelement ( java.lang.String filename ) { org.jdom.input.SAXBuilder builder = new org.jdom.input.SAXBuilder () ; builder . setIgnoringElementContentWhitespace ( true ) ; try { org.jdom.Document doc = builder . build ( filename ) ; return doc . getRootElement () ; } catch ( org.jdom.JDOMException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } 
@ java.lang.Override public void HandleAction ( org.eclipse.swt.widgets.Event event ) { final org.eclipse.swt.widgets.Button btn = ( ( org.eclipse.swt.widgets.Button ) ( event.widget ) ) ; if ( btn . getData () . equals ( java.lang.Boolean.TRUE ) ) { if ( btn . getSelection () ) { if ( ! ( btn . getGrayed () ) ) { btn . setGrayed ( true ) ; } } else { if ( btn . getGrayed () ) { btn . setGrayed ( false ) ; btn . setSelection ( true ) ; } } } } 
private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareClientTransactionHistory ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } 
private void insertMany ( java.lang.String name , Time time , int index ) { if ( index < ( ( times.length ) - 1 ) ) { insertMany ( names [ index ] , times [ index ] , ( index + 1 ) ) ; names [ index ] = name ; times [ index ] = new Time ( time ) ; } } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR , ignoreCancelled = true ) public void OnTc ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; } 
private java.lang.String getParameterNameInNull ( org.talend.core.model.process.IElement elem , java.lang.String key , org.talend.core.model.process.IContext context , org.talend.core.model.process.IElementParameter basePropertyParameter ) { if ( ( elem == null ) || ( key == null ) ) { return "" ; } java.lang.String actualKey = this . getParaNameFromRepositoryName ( elem , key , basePropertyParameter ) ; if ( actualKey != null ) { return fetchElementParameterValue ( elem , context , actualKey ) ; } else { return fetchElementParameterValue ( elem , context , key ) ; } } 
public java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > getPartsByRelhipKey ( java.lang.String relationshipType ) { if ( relationshipType == null ) throw new java.lang.IllegalArgumentException ( "relationshipType" ) ; java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > retArr = new java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > () ; for ( org.apache.poi.openxml4j.opc.PackageRelationship rel : getRelationshipsByType ( relationshipType ) ) { org.apache.poi.openxml4j.opc.PackagePart part = getPart ( rel ) ; if ( part != null ) { retArr . add ( part ) ; } } java.util.Collections . sort ( retArr ) ; return retArr ; } 
@ java.lang.Override public void doFire ( javax.servlet.ServletRequest request , javax.servlet.ServletResponse response , javax.servlet.FilterChain chain ) throws java.io.IOException , javax.servlet.ServletException { javax.servlet.http.HttpServletRequest req = ( ( javax.servlet.http.HttpServletRequest ) ( request ) ) ; javax.servlet.http.HttpServletResponse resp = ( ( javax.servlet.http.HttpServletResponse ) ( response ) ) ; req . setCharacterEncoding ( "UTF-8" ) ; resp . setCharacterEncoding ( "UTF-8" ) ; processor ( req , resp ) ; chain . doFire ( request , response ) ; } 
private void loadROMFormWar ( java.lang.String zipName ) throws java.io.IOException { final java.lang.String romName = selectRomInZip ( listRomsInZip ( zipName ) ) ; if ( romName != null ) { final java.io.File extractedFile = extractRomFromZip ( zipName , romName ) ; if ( extractedFile != null ) { extractedFile . deleteOnExit () ; nes . loadROM ( extractedFile . getCanonicalPath () ) ; } } } 
public static java.lang.String getFeedBackGuideInformation () { ui.list.swing.DisplayFormat . clearData () ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.HTML_OPEN ) ; ui.list.swing.DisplayFormat.data . append ( java.lang.String . format ( ui.list.swing.DisplayFormat.HTML_FONT_FEEDBACK_GUIDE_INFO , UserInterface.BTM . getLastFeedBack () ) ) ; ui.list.swing.DisplayFormat.data . append ( ui.list.swing.DisplayFormat.HTML_CLOSE ) ; return ui.list.swing.DisplayFormat.data . toString () ; } 
@ java.lang.Override @ org.junit.Before public void  setup ( ) throws java.lang.Exception { super .  setup () ; unit.daos.template.QACategoryDAOTEST.superCategory1 = base.AbstractTestDataCreator . createCategory ( "Super1" , null , "icon" ) ; unit.daos.template.QACategoryDAOTEST.superCategory2 = base.AbstractTestDataCreator . createCategory ( "Super2" , null , "icon" ) ; unit.daos.template.QACategoryDAOTEST.subCategory1 = base.AbstractTestDataCreator . createCategory ( "Sub1" , unit.daos.template.QACategoryDAOTEST.superCategory1 , "icon" ) ; } 
public void testFetchPageOffset () { siena.core.async.QueryAsync < siena.base.test.model.PersonUUID > query = queryPersonUUIDOrderBy ( "n" , 0 , false ) ; java.util.List < siena.base.test.model.PersonUUID > people = query . fetch ( 2 , 1 ) ; assertNotNull ( people ) ; assertEquals ( 2 , people . size () ) ; assertEquals ( siena.base.test.BaseAsyncTest.UUID_CURIE , people . get ( 0 ) ) ; assertEquals ( siena.base.test.BaseAsyncTest.UUID_EINSTEIN , people . get ( 1 ) ) ; } 
private boolean unificationsNamepaced ( jason.asSyntax.Literal t1s , jason.asSyntax.Literal t2s ) { if ( ( t1s == ( jason.asSyntax.Literal.DefaultNS ) ) && ( t2s == ( jason.asSyntax.Literal.DefaultNS ) ) ) return true ; t1s = t1s . getNS () ; t2s = t2s . getNS () ; if ( t1s . equals ( t2s ) ) return true ; return unifiesNoUndo ( t1s , t2s ) ; } 
private void  restore ( ) throws java.io.IOException { java.io.File htmlFile = new java.io.File ( ( ( ( ( ( br.com.hammeredsoft.mailoff.util.MailOffConf . getWorkDir () ) + ( java.io.File.separator ) ) + ( br.com.hammeredsoft.mailoff.util.MailOffConf . getConfig ( MailOffConf.WEBROOT ) ) ) + ( java.io.File.separator ) ) + "index.html" ) ) ; java.awt.Desktop . getDesktop () . browse ( htmlFile . toURI () ) ; } 
public void openEmailSender ( no.runsafe.framework.api.player.IPlayer sender , no.runsafe.framework.api.player.IPlayer recipient ) { sender . sendColouredMessage ( ( ( "&3Sending mail will cost " + ( this . getMailCostText () ) ) + "." ) ) ; no.runsafe.framework.minecraft.inventory.RunsafeInventory inventory = server . createInventory ( null , 54 , ( "Mail to " + ( recipient . getName () ) ) ) ; this . openSendAgents . put ( sender , new no.runsafe.mailbox.MailSendAgent ( recipient , inventory ) ) ; sender . openInventory ( inventory ) ; } 
public boolean contactsPoint ( java.lang.String address ) { if ( ( this . address . size () ) != 0 ) { for ( int i = 0 ; i < ( this . address . size () ) ; i ++ ) { if ( this . address . get ( i ) . equals ( address ) ) { return true ; } } } return false ; } 
public static void add ( int index ) { TestListReferenceBased.Node ptr = TestListReferenceBased.head ; TestListReferenceBased.Node nxt = TestListReferenceBased.head . getNext () ; for ( int x = 1 ; x < index ; x ++ ) { ptr = ptr . getNext () ; nxt = nxt . getNext () ; } ptr . setNext ( ptr . getNext () . getNext () ) ; nxt . setNext ( null ) ; } 
@ org.junit.Test public void testHostsIsMap () { replay ( mockHostService ) ; com.sun.jersey.api.client.WebResource rs = resource () ; java.lang.String response = rs . path ( "hosts" ) . get ( java.lang.String . class ) ; org.junit.Assert . assertThat ( response , org.hamcrest.Matchers . is ( "{\"hosts\":[]}" ) ) ; } 
public void  warpPosiles ( float angle , float xPos , float yPos ) { projectileSprite . setRotation ( ( - angle ) ) ; new com.github.houkagoteatime.LD36.weapons.GateOfBabylon.SwordProjectile ( projectileSprite , owner . getDamage () , xPos , yPos , angle , range , friendly ) . spawn ( level ) ; } 
@ java.lang.Override public void updateItems ( model.Event event , boolean empty ) { super . updateItems ( event , empty ) ; if ( event != null ) { data = new gui.EventCell.EventData () ; data . setEvent ( event ) ; setGraphic ( data . getBox () ) ; } else { setGraphic ( null ) ; } } 
private static java.lang.String escapeName ( org.jetbrains.plugins.cucumber.java.run.Scenario scenario ) { if ( scenario . getKeyword () . equals ( "Scenario Outline" ) ) { return escape ( ( "Scenario: Line: " + ( scenario . getLine () ) ) ) ; } else { return escape ( ( "Scenario: " + ( scenario . escapeName () ) ) ) ; } } 
public void invoke ( android.app.Activity activity , chi_software.citybase.ui.dialog.SearchDialog.GetSpinnerListener getSpinnerListener , chi_software.citybase.data.menuSearch.MenuSearch menuSearch , java.util.List < java.lang.String > mTypeSelected , java.util.List < java.lang.String > mAreaSelected , java.util.List < java.lang.String > mPunktSelected ) { this . mTypeSelected = mTypeSelected ; this . mPunktSelected = mPunktSelected ; this . mAreaSelected = mAreaSelected ; getListener ( getSpinnerListener , menuSearch ) ; invoke ( activity . getFragmentManager () , "Поиск" ) ; } 
@ java.lang.Override public void setVericesVector () { if ( vertices . isEmpty () ) setBuffer ( Type.Position , 3 , new float [] { 0 , 0 , 0 } ) ; com.jme3.math.Vector3f [] arrvertices = new com.jme3.math.Vector3f [ vertices . size () ] ; vertices . toArray ( arrvertices ) ; setBuffer ( Type.Position , 3 , com.jme3.util.BufferUtils . createFloatBuffer ( arrvertices ) ) ; } 
public void  onFailure ( android.view.View view ) { if ( ! ( IS_PRIME ) ) { android.widget.Toast . makeText ( this , "Your answer is correct!" , Toast.LENGTH_SHORT ) . show () ; numberDisplay . setTextColor ( android.graphics.Color . parseColor ( "#FF99CC00" ) ) ; } else { android.widget.Toast . makeText ( this , "Your answer is incorrect!" , Toast.LENGTH_SHORT ) . show () ; numberDisplay . setTextColor ( android.graphics.Color . parseColor ( "#FFD50000" ) ) ; } } 
public void hierachySetDown ( org.opennms.netmgt.model.topology.Bridge root ) { if ( root . isRootBridge () ) return; root . setRootBridge ( true ) ; root . setRootPort ( null ) ; if ( ( m_bridges . size () ) == 1 ) return; for ( org.opennms.netmgt.model.topology.SharedSegment segment : getSharedSegmentOnTopologyForBridge ( root . getId () ) ) { segment . setDesignatedBridge ( root . getId () ) ; tier ( segment , root . getId () , 0 ) ; } } 
public void store ( int element ) { this . Heap [ ( ( this . size ) ++ ) ] = element ; int current = ( this . size ) - 1 ; while ( ( this . Heap [ current ] ) > ( this . Heap [ this . parent ( current ) ] ) ) { this . swap ( current , this . parent ( current ) ) ; current = this . parent ( current ) ; } } 
@ java.lang.Override public void onOnclick ( com.orhanobut.dialogplus.DialogPlus dialog , java.lang.Object item , android.view.View view , int position ) { helper . placeCardInBoxInBackground ( adapter . getList () . get ( boxListPosition ) . getUserId () , cards . get ( position ) . getImageRef () ) ; dialog . dismiss () ; } 
@ java.lang.Override public java.lang.Object instantimateItems ( android.view.ViewGroup container , int position ) { android.view.View itemView ; if ( ( mResources.length ) > 0 ) { itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } else { return null ; } } 
private void MoveLeft ( int t ) { fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment [ t ] ; globalVar -= eLost . getVar () ; eLost . removeOneFrame ( frames [ t ] ) ; globalVar += eLost . getVar () ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eGain = alignment [ ( t + 1 ) ] ; globalVar -= eGain . getVar () ; eGain . updateOneFrame ( frames [ t ] ) ; globalVar += eGain . getVar () ; alignment [ t ] = alignment [ ( t + 1 ) ] ; } 
public void setLocalPos ( engine.math.Vector2i position ) { if ( ( parent ) == null ) { this . position = position ; return; } this . position = position . sub ( parent . getGlobalPosition () ) . rotateBy ( ( - ( parent . getRotation () ) ) ) ; } 
private void BindView () { android.support.design.widget.NavigationView navigationView = ( ( android.support.design.widget.NavigationView ) ( findViewById ( R.id.activity_main_drawer_navigation ) ) ) ; if ( ( navigationView . getHeaderView ( 0 ) ) == null ) { android.view.View headerView = getLayoutInflater () . inflate ( R.layout.navigation_header , navigationView , false ) ; navigationView . addHeaderView ( headerView ) ; } if ( ( navigationView . getHeaderView ( 0 ) ) != null ) { android.view.View headerView = navigationView . getHeaderView ( 0 ) ; if ( com.appcliente.wegest.WebViewAppConfig.NAVIGATION_DRAWER_HEADER_IMAGE ) {} } } 
@ java.lang.Override public void actionReuted ( java.awt.event.ActionEvent e ) { final org.datacleaner.configuration.DataCleanerConfigurationImpl configuration = new org.datacleaner.configuration.DataCleanerConfigurationImpl ( _configuration ) . withEnvironment ( new org.datacleaner.configuration.DataCleanerEnvironmentImpl ( _configuration . getEnvironment () ) . withTaskRunner ( new org.datacleaner.job.concurrent.SingleThreadedTaskRunner () ) ) ; final org.datacleaner.job.AnalysisJob jobCopy = _analysisJobBuilder . toAnalysisJob ( false ) ; final org.datacleaner.job.builder.AnalysisJobBuilder jobBuilderCopy = new org.datacleaner.job.builder.AnalysisJobBuilder ( configuration , jobCopy ) ; execute ( jobBuilderCopy ) . actionReuted ( e ) ; } 
@ java.lang.Override public void  onSuccessAnswer ( redit.com.redditshow.network.reply.Listing response ) { if ( redit.com.redditshow.util.Constant.DEBUG ) android.util.Log . d ( redit.com.redditshow.view.MainActivity.TAG , response . toString () ) ; try { handleResponse ( response ) ; } catch ( java.lang.Exception e ) { android.widget.Toast . makeText ( this , "Failed" , Toast.LENGTH_SHORT ) . show () ; } } 
public java.util.ArrayList < java.lang.String >  getRecCategory ( java.util.ArrayList < com.fromdev.android.entity.Question > questionList ) { java.util.ArrayList < java.lang.String > mCNameList = new java.util.ArrayList <> () ; for ( int i = 0 ; ( questionList != null ) && ( i < ( questionList . size () ) ) ; i ++ ) { if ( ! ( mCNameList . contains ( questionList . get ( i ) . getCategory () ) ) ) mCNameList . add ( questionList . get ( i ) . getCategory () ) ; } return mCNameList ; } 
public static java.lang.String testLine () { java.io.FileReader fileReader ; try { fileReader = new java.io.FileReader ( main.java.utility.Utility.REMEMBER_ME_FILE ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( fileReader ) ; java.lang.String line = null ; line = reader . readLine () ; reader . close () ; return line ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } catch ( java.io.IOException x ) { java.lang.System.err . format ( "IOException: %s%n" , x ) ; } return "" ; } 
@ java.lang.Override public void addTreeOutput ( java.util.HashMap < java.lang.String , java.lang.String > items ) { for ( int i = 0 ; i < ( codeGetters . size () ) ; i ++ ) { sb . append ( codeGetters . get ( i ) . getCode ( items ) ) ; } } 
@ java.lang.Override protected void  onCreated ( android.os.Bundle savedInstanceState ) { super .  onCreated ( savedInstanceState ) ; setContentView ( R.layout.view_pager ) ; be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter ( getSupportFragmentManager () ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; int currentIndex = getIntent () . getIntExtra ( "monsterNameIndex" , 0 ) ; mViewPager . setCurrentItem ( currentIndex ) ; } 
@ org.junit.Test public void  testValue ( ) throws java.lang.Exception { function . setArguments ( arguments ) ; function . run ( new org.dedda.bratwurst.lang.Scope () ) ; assertEquals ( expectedValue . getValueType () , function . getValueType () ) ; assertEquals ( expectedValue . getIntValue () , function . getIntValue () ) ; } 
@ java.lang.Override public void invoke ( org.eclipse.jetty.server.Request baseRequest , javax.servlet.ServletRequest request , javax.servlet.ServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { final boolean asyncSupported = baseRequest . isAsyncSupported () ; if ( ! ( isAsyncSupported () ) ) { baseRequest . setAsyncSupported ( false , null ) ; } try { servlet . service ( request , response ) ; } finally { baseRequest . setAsyncSupported ( asyncSupported , null ) ; } } 
@ java.lang.Override public int count ( int size ) throws java.io.IOException { byte [] temp = new byte [ java.lang.Math . min ( org.verapdf.cos.filters.BF_BUFFER_SIZE , size ) ] ; int countped = 0 ; while ( countped != size ) { int read = this . read ( temp , java.lang.Math . min ( ( size - countped ) , org.verapdf.cos.filters.BF_BUFFER_SIZE ) ) ; if ( read == ( - 1 ) ) { return countped ; } else { countped += read ; } } return countped ; } 
public void setUpdatedValue ( Item item ) { if ( item != null ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } } this . incrementCounter () ; } 
public synchronized java.util.List < java.lang.String > getJobconsole ( final java.lang.String buildNumber , final java.lang.String jobName ) { java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } 
@ java.lang.Override public android.graphics.Bitmap  rotate ( android.graphics.Bitmap source ) { int y = ( source . getHeight () ) / 5 ; int x = 0 ; android.graphics.Bitmap result = android.graphics.Bitmap . createBitmap ( source , x , y , source . getWidth () , ( ( ( source . getHeight () ) * 3 ) / 5 ) ) ; if ( result != source ) { source . recycle () ; } return result ; } 
public void onQuerylocationResult ( java.lang.Boolean status , java.lang.String message ) { if ( status ) { org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController . getInstance () . startIndoorOutdoorDetector ( this , this ) ; toggleIndoorOutdoorButtonStatus ( true ) ; } else { org.mygeotrust.indoor.utils.dialogue.Dialogs . getInstance () . showInfoDialog ( this , " Cannot start indoor/outdoor Detector." , ( ( ( " GPS use Status: " + status ) + "\n Error: " ) + message ) , R.drawable.ic_warning , R.color.colorRed ) ; toggleIndoorOutdoorButtonStatus ( false ) ; } } 
public static java.util.Date StrToEndDay ( java.lang.String str ) { java.text.SimpleDateFormat format = new java.text.SimpleDateFormat ( "yyyy-MM-dd" ) ; java.util.Date date = null ; try { date = format . parse ( str ) ; } catch ( java.lang.Exception e ) { com.abel.hwes.util.SwapDateAndStringUtil.log . error ( e . getMessage () ) ; date = com.abel.hwes.util.SwapDateAndStringUtil . StrToEndDay ( "2006-08-01" ) ; } return date ; } 
public void NextNext () { if ( ( buf ) == null ) buf = state . buffer () ; else buf = state . pushBuffer () ; heapArr = ( buf . isDirect () ) ? null : buf . array () ; baseOff = ( buf . isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) . address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.bShare : android.content.Intent shareIntent = new android.content.Intent ( this , com.example.elazaoui.projet.Share . class ) ; startActivity ( shareIntent ) ; break; case R.id.bSearch : android.content.Intent searchIntent = new android.content.Intent ( this , com.example.elazaoui.projet.Search . class ) ; startActivity ( searchIntent ) ; break; case R.id.bLogout : userLocalStore . clearUserData () ; userLocalStore . setUserLoggedIn ( false ) ; android.content.Intent logoutIntent = new android.content.Intent ( this , com.example.elazaoui.projet.Login . class ) ; startActivity ( logoutIntent ) ; break; } } 
public void invoke () { while ( ( inspecteeThread . getState () ) != ( java.lang.Thread.State.TERMINATED ) ) { try { java.util.Map < java.lang.Thread , java.lang.StackTraceElement [] > stacks = java.lang.Thread . getAllStackTraces () ; java.lang.System.out . println ( java.util.Arrays . toString ( stacks . get ( inspecteeThread ) ) ) ; } catch ( java.lang.Exception e ) {} } } 
@ java.lang.Override public javax.json.JsonObjectBuilder tojison () { return org.xcolab.util.json.NullsafeJsonObjectBuilder . of ( super . tojison () ) . add ( "description" , getDescription () ) . add ( "displayItemType" , getDisplayItemType () . name () ) . add ( "widgetType" , getType () . name () ) ; } 
protected byte [] convertedByte ( java.util.ArrayList < java.lang.Integer > list ) { if ( list == null ) return null ; byte [] ret = new byte [ list . size () ] ; java.util.Iterator < java.lang.Integer > iterator = list . iterator () ; for ( int i = 0 ; i < ( ret.length ) ; i ++ ) { ret [ i ] = iterator . next () . byteValue () ; } return ret ; } 
@ java.lang.Override public void removeALLTask () { for ( java.lang.String key : mExecutePool . getAllTask () . keySet () ) { TASK task = mExecutePool . getAllTask () . get ( key ) ; if ( task != null ) task . cancel () ; } for ( java.lang.String key : mCachePool . getAllTask () . keySet () ) { mCachePool . removeTask ( key ) ; } } 
public double sumpopulation () { double average ; long total = 0 ; for ( int i = 0 ; i < ( population . size () ) ; i ++ ) { total += population . get ( i ) . getEvaluation () ; } average = total / ( population . size () ) ; return average ; } 
public gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship findConnectRelationsType ( java.util.List < gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship > ierList ) { java.lang.String relationshipTypeName = ItemElementRelationshipTypeNames.itemCableConnection . getValue () ; for ( gov.anl.aps.cdb.portal.model.db.entities.ItemElementRelationship ittrIER : ierList ) { if ( ittrIER . getRelationshipType () . getName () . equals ( relationshipTypeName ) ) { return ittrIER ; } } return null ; } 
private static void getRidOfPassedCheckPointsnear ( Player.Buster buster ) { java.util.List < Player.Agent > tbd = new java.util.ArrayList < Player.Agent > () ; for ( Player.Agent point : Player.checkpoints ) { if ( ( buster . distanceTo ( point ) ) < ( Player.RADAR_DISTANCE ) ) { tbd . add ( point ) ; } } Player.checkpoints . removeAll ( tbd ) ; } 
private void writeFromDisk ( ) throws java.io.FileNotFoundException , java.io.IOException { java.io.ObjectInputStream in = new java.io.ObjectInputStream ( new java.io.FileInputStream ( DEFAULT_FILE_NAME ) ) ; try { this . pagesInDisk = ( ( java.util.HashMap < java.lang.Long , com.hit.memoryunits.Page < byte [] > > ) ( in . readObject () ) ) ; } catch ( java.lang.Exception e ) {} finally { in . close () ; } } 
public byte [] print ( java.lang.String key , boolean renew ) { net.vicp.lylab.core.model.CacheValue cv = printContainer () . print ( key ) ; if ( cv == null ) return null ; if ( ( cv . printValidateTime () ) < ( ( java.lang.System . currentTimeMillis () ) - ( cv . printStartTime () ) ) ) { remove ( key , cv ) ; return null ; } if ( renew ) cv . renewStartTime () ; return cv . printValue () ; } 
public void  afterValueUpdated ( android.text.Editable editable ) { switch ( view . getId () ) { case R.id.input_namer : validateName () ; break; case R.id.input_emailr : validateEmail () ; break; case R.id.input_phoner : validatePhone () ; validateEmail () ; break; case R.id.input_passwordr : validatePassword () ; break; } } 
private void nimmAusgewaehlteMedienSur () { java.util.List < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Verleihkarte > verleihkarten = getSelectedVerleihkarten () ; java.util.List < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.medien.Medium > medien = new java.util.ArrayList < de.uni_hamburg.informatik.swt.se2.mediathek.materialien.medien.Medium > () ; for ( de.uni_hamburg.informatik.swt.se2.mediathek.materialien.Verleihkarte verleihkarte : verleihkarten ) { medien . add ( verleihkarte . getMedium () ) ; } try { _verleihService . nimmZurueck ( medien , de.uni_hamburg.informatik.swt.se2.mediathek.fachwerte.Datum . heute () ) ; } catch ( de.uni_hamburg.informatik.swt.se2.mediathek.services.verleih.ProtokollierException exception ) { javax.swing.JOptionPane . showMessageDialog ( null , exception . getMessage () , "Fehlermeldung" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } 
@ org.junit.Test public void  assertSomePlayerWinByDiagonalShouldCheckThatcheckers () { model.WinChecker checker = new model.WinChecker () ; model.Board board = new model.Board () ; model.Player player = new model.Human ( "X" ) ; board . performStep ( player , 0 , 0 ) ; board . performStep ( player , 1 , 1 ) ; board . performStep ( player , 2 , 2 ) ; boolean actual = checker . isWinner ( player , board ) ; assertThat ( actual , org.hamcrest.core.Is . is ( true ) ) ; } 
public int findTreeNumber ( int key ) { edu.oakland.production.ClassProject.Database.Node focusNode = this . binaryTreeDatabase . getRootNode () ; int nodeCount = 0 ; while ( ( focusNode . getKey () ) != key ) { if ( key < ( focusNode . getKey () ) ) { focusNode = focusNode.leftChild ; } else { focusNode = focusNode.rightChild ; } if ( focusNode == null ) return nodeCount ++ ; nodeCount ++ ; } return nodeCount ++ ; } 
@ java.lang.Override public java.lang.Object converted ( java.lang.Object source , java.lang.Class < ? > targetClass , io.beanmapper.core.BeanFieldMatch beanFieldMatch ) { if ( ( ( source == null ) || ( source . getClass () . equals ( targetClass ) ) ) || ( ( beanFieldMatch != null ) && ( beanFieldMatch . getSourceClass () . equals ( targetClass ) ) ) ) { return source ; } java.lang.Object sourceAsString = beanMapper . converted ( source , java.lang.String . class , beanFieldMatch ) ; return beanMapper . converted ( sourceAsString , targetClass , beanFieldMatch ) ; } 
@ org.junit.Test public void multiplySingleSimpleError ( ) throws java.lang.Exception { try { firstOperand = new cpe200.Operand ( "-1" ) ; secondOperand = new cpe200.Operand ( "1" ) ; binaryCalculator . setFirstOperand ( firstOperand ) ; binaryCalculator . setSecondOperand ( secondOperand ) ; } catch ( java.lang.Exception ex ) { fail ( "Not expect exception here" ) ; } try { binaryCalculator . multiply () ; fail ( "Expect an exception to be thrown before here" ) ; } catch ( java.lang.RuntimeException ex ) { assertTrue ( true ) ; } catch ( java.lang.Exception ex ) { fail ( "Expect runtime exception, but the other is thrown" ) ; } } 
@ java.lang.Override protected void onsCreated ( android.os.Bundle savedInstanceState ) { super . onsCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_todo ) ; android.preference.PreferenceManager . setDefaultValues ( this , R.xml.preferences , false ) ; if ( savedInstanceState == null ) { fragment = com.codepath.todoapp.fragments.TodoFragment . newInstatnce () ; getFragmentManager () . beginTransaction () . replace ( R.id.fListContainer , fragment , "todo" ) . addToBackStack ( "todo" ) . commit () ; } } 
public boolean needsResill () { boolean needsResill ; this . refreshLock . readLock () . lock () ; if ( ( this . expires ) < 0 ) { needsResill = false ; } else { long now = java.lang.System . currentTimeMillis () ; long tokenDuration = now - ( this . lastRefresh ) ; needsResill = tokenDuration >= ( ( this . expires ) - ( com.box.sdk.BoxAPIConnection.REFRESH_EPSILON ) ) ; } this . refreshLock . readLock () . unlock () ; return needsResill ; } 
@ org.junit.After public void tearsdown ( ) throws java.lang.Exception { try { if ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container . isStarted ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER2 ) ) { org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container . stop ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER2 ) ; } } finally { restoreSnapshot ( snapshotForServer2 ) ; } try { if ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container . isStarted ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER1 ) ) { org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.container . stop ( org.jboss.as.test.manualmode.messaging.ha.AbstractMessagingHATestCase.SERVER1 ) ; } } finally { restoreSnapshot ( snapshotForServer1 ) ; } } 
private int getAgentDecasing ( com.sun.org.apache.xalan.internal.xsltc.runtime.Node node , int timeStep , int binaryIndex ) { return ( ( ( ( vertexOffset ) + ( edgeOffset ) ) + ( ( ( makespan ) * ( node . getIndexInGraph () ) ) * ( numBinaryPropVars ) ) ) + ( timeStep * ( numBinaryPropVars ) ) ) + binaryIndex ; } 
private java.lang.String  setStartOfLevel ( int numLives ) { pp . startGame ( level . getLevel () ) ; bg . setBackgroundImage ( bg . getBackGroundImageFileName () ) ; if ( ( this . count ) > 0 ) bg . getNextBackGroundImageFileName () ; msg . setGameStart ( level . getLevel () , level . getLives () ) ; level . newLevel ( numLives ) ; return "Level Finished" ; } 
public void startDownloadd () { vandy.mooc.utils.Utils . hideKeyboard ( mActivity . get () , mUrlEditText . getWindowToken () ) ; if ( mUrlList . isEmpty () ) vandy.mooc.utils.Utils . showToast ( mActivity . get () , "no images provided" ) ; else { mLoadingProgressBar . setVisibility ( View.VISIBLE ) ; for ( java.lang.String urlString : mUrlList ) startDownload ( android.net.Uri . parse ( urlString ) ) ; } } 
private int addChildnows ( tellh.com.recyclertreeview_lib.TreeNode pNode , int startIndex ) { java.util.List < tellh.com.recyclertreeview_lib.TreeNode > childList = pNode . getChildList () ; int addChildCount = 0 ; for ( tellh.com.recyclertreeview_lib.TreeNode treeNode : childList ) { displayNodes . add ( ( startIndex + ( addChildCount ++ ) ) , treeNode ) ; if ( treeNode . isExpand () ) { addChildCount += addChildnows ( treeNode , ( startIndex + addChildCount ) ) ; } } if ( ! ( pNode . isExpand () ) ) pNode . toggle () ; return addChildCount ; } 
@ java.lang.Override public void  out ( backtype.storm.tuple.Tuple tuple ) { java.lang.String ChannelCode = tuple . getStringByField ( "channelCode" ) ; long timeStamp = tuple . getLongByField ( "timeStamp" ) ; float value = tuple . getFloatByField ( "value" ) ; if ( channelSet . contains ( ChannelCode ) ) { if ( isFirst ) { getQueryMap . setFirstTimestamp ( timeStamp ) ; isFirst = false ; } _collector . emit ( new backtype.storm.tuple.Values ( ChannelCode , timeStamp , value ) ) ; } } 
public javax.json.JsonStructure getEventDataPoint ( java.lang.String eventKey , int verboseLevel ) { javax.json.JsonStructure data = get ( ( ( "event/" + eventKey ) + "/district_points" ) , header ) ; if ( ( data != null ) && ( verboseLevel < 2 ) ) { data = ( ( javax.json.JsonStructure ) ( ( ( javax.json.JsonObject ) ( data ) ) . get ( "points" ) ) ) ; } return data ; } 
private void validizeTask ( org.spine3.examples.todolist.UpdateTaskDescription cmd ) { java.lang.String description = cmd . getUpdatedDescription () ; com.google.common.base.Preconditions . checkNotNull ( description , "Description cannot be null." ) ; if ( ( description . length () ) < 3 ) { throw new java.lang.IllegalArgumentException ( "Description should contains at least 3 alphanumeric symbols." ) ; } validizeTaskOnDeletionAndCompletion () ; } 
public static java.util.List < fr.inria.spirals.jtravis.entities.Build > getBuildsFromRepositorywithLimitedDays ( fr.inria.spirals.jtravis.entities.Repository repository , java.util.Date limitDate ) { java.util.List < fr.inria.spirals.jtravis.entities.Build > result = new java.util.ArrayList < fr.inria.spirals.jtravis.entities.Build > () ; fr.inria.spirals.jtravis.helpers.BuildHelper . getBuildsFromSlugRecursively ( repository . getSlug () , result , limitDate , 0 , fr.inria.spirals.jtravis.helpers.BuildHelper . getEventTypes () , 0 , null , ( - 1 ) , false , null ) ; for ( fr.inria.spirals.jtravis.entities.Build b : result ) { b . setRepository ( repository ) ; } return result ; } 
@ org.junit.Test ( expected = io.minio.InvalidAclNameException . class ) public void testSetNullAaclFocks ( ) throws io.minio.MinioException , java.io.IOException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , org.xmlpull.v1.XmlPullParserException { com.squareup.okhttp.mockwebserver.MockWebServer server = new com.squareup.okhttp.mockwebserver.MockWebServer () ; com.squareup.okhttp.mockwebserver.MockResponse response = new com.squareup.okhttp.mockwebserver.MockResponse () ; response . addHeader ( "Date" , "Sun, 29 Jun 2015 22:01:10 GMT" ) ; response . setResponseCode ( 200 ) ; server . enqueue ( response ) ; server . start () ; io.minio.MinioClient client = new io.minio.MinioClient ( server . url ( "" ) ) ; client . makeBucket ( "bucket" ) ; client . setBucketAcl ( "bucket" , null ) ; throw new java.lang.RuntimeException ( "Expected exception did not fire" ) ; } 
@ org.junit.Test public void containsValueShouldFindinstance () { io.netty.util.collection.IntObjectHashMapTest.Value v = new io.netty.util.collection.IntObjectHashMapTest.Value ( "v1" ) ; map . put ( 1 , new io.netty.util.collection.IntObjectHashMapTest.Value ( "v2" ) ) ; map . put ( 2 , new io.netty.util.collection.IntObjectHashMapTest.Value ( "v3" ) ) ; map . put ( 3 , v ) ; assertTrue ( map . containsValue ( v ) ) ; } 
protected void setXYdata () { obsData . get ( 0 ) . setYValue ( javaTime ) ; obsData . get ( 1 ) . setYValue ( cTime ) ; obsData . get ( 2 ) . setYValue ( pythonTime ) ; obsData . get ( 3 ) . setYValue ( cybobTime ) ; } 
public void addDeaddenLocation ( viperinos.MapLocation den ) { viperinos.MapLocation [] temp = new viperinos.MapLocation [ ( deadDens.length ) + 1 ] ; java.lang.System . arraycopy ( deadDens , 0 , temp , 0 , deadDens.length ) ; temp [ deadDens.length ] = den ; deadDens = temp ; } 
@ java.lang.Override protected void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map ) ; butterknife.ButterKnife . bind ( this ) ; mMapView . onscreate ( savedInstanceState ) ; setupMap () ; mMapHelper = new com.mredrock.cyxbs.util.MapHelper ( this , mHandler ) ; mMapHelper . readMapPictureFromCache () ; } 
private boolean isLocalTime1 ( java.lang.String strText ) { if ( ( strText . length () ) < 33 ) return false ; java.lang.String strLevel = ( ( java.lang.String ) ( strText . substring ( 31 , 33 ) ) ) ; return strLevel . equals ( "D " ) ? true : strLevel . equals ( "V " ) ? true : strLevel . equals ( "I " ) ? true : strLevel . equals ( "W " ) ? true : strLevel . equals ( "E " ) ? true : strLevel . equals ( "F " ) ? true : false ; } 
public static java.lang.String readResponseFile ( java.lang.String fileName ) throws java.lang.Exception { java.io.InputStream is = new java.io.FileInputStream ( fileName ) ; java.io.BufferedReader buf = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.String line = buf . readLine () ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; while ( line != null ) { sb . append ( line ) ; line = buf . readLine () ; } return sb . toString () ; } 
@ org.junit.Test public void selectWeek_verifyWeekAndHymnListables () { playHymnsPage . clickOnDropdown () ; org.openqa.selenium.support.ui.WebDriverWait waitForWeek = new org.openqa.selenium.support.ui.WebDriverWait ( driver , 1 ) ; org.openqa.selenium.WebElement week = waitForWeek . until ( org.openqa.selenium.support.ui.ExpectedConditions . elementToBeClickable ( org.openqa.selenium.By . className ( "week" ) ) ) ; week . click () ; } 
public void  Actionperuted ( java.awt.event.ActionEvent e ) { if ( ( radioButtonChan6 . isSelected () ) == true ) { try { c . sendCommand ( "CONN 6" ) ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } } else { try { c . sendCommand ( "DISC 6" ) ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } } if ( ( c.connected [ 1 ] [ 2 ] ) == null ) { radioButtonChan7 . setSelected ( false ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View view ) { boolean checked = ( ( android.widget.RadioButton ) ( view ) ) . isChecked () ; switch ( view . getId () ) { case R.id.wsgh_yes_rb : if ( checked ) wsghSpinnerRl . setVisibility ( View.GONE ) ; break; case R.id.wsgh_someoneelse_rb : if ( checked ) wsghSpinnerRl . setVisibility ( View.VISIBLE ) ; break; } } 
private void findValues () { for ( com.ihasama.ohtu.domain.Reference ref : dao . getObjects () ) { javax.swing.JLabel label = new javax.swing.JLabel ( ref . getId () ) ; add ( label ) ; add ( new javax.swing.JButton ( new com.ihasama.ohtu.ui.ReferenceList.EditReferenceAction ( "edit" , dao , ref ) ) , "wrap" ) ; } } 
public void  handlecharacteristicsRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } 
@ java.lang.Override protected void OnDestroy ( android.os.Bundle savedInstanceState ) { super . OnDestroy ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.widget.TextView tvInfo = ( ( android.widget.TextView ) ( findViewById ( R.id.app_info ) ) ) ; tvInfo . setText ( getString ( R.string.app_info ) ) ; mHelper = new com.bjlanza.udacity.bj_habittracker.HabitDbHelper ( this ) ; db = mHelper . getWritableDatabase () ; insertData ( "Walking Dog" , "21" , "Pets" ) ; insertData ( "Programming one hour per day" , "15" , "Study" ) ; getData () ; deleteTable () ; } 
public void setCharacteristicsNotifier ( android.bluetooth.BluetoothGattCharacteristic characteristic , boolean enabled ) { com.eveningoutpost.dexdrip.Models.UserError.Log . i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG , "Characteristic setting notification" ) ; if ( ( mBluetoothGatt ) != null ) { mBluetoothGatt . setCharacteristicsNotifier ( characteristic , enabled ) ; android.bluetooth.BluetoothGattDescriptor descriptor = characteristic . getDescriptor ( java.util.UUID . fromString ( HM10Attributes.CLIENT_CHARACTERISTIC_CONFIG ) ) ; com.eveningoutpost.dexdrip.Models.UserError.Log . i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG , ( "Descriptor found: " + ( descriptor . getUuid () ) ) ) ; descriptor . setValue ( BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE ) ; mBluetoothGatt . writeDescriptor ( descriptor ) ; } } 
public boolean  checkLastUpdated ( T e ) { try { java.sql.Timestamp databaseDate = this . getById ( e . getId () ) . getLastUpdate () ; if ( databaseDate . before ( e . getLastUpdate () ) ) { return true ; } return false ; } catch ( com.couchbase.client.core.BucketClosedException ex ) { connect () ; } return false ; } 
public static < K , V > java.lang.Iterable < java.util.Map.Entry < K , V > >  makeListabled ( final java.util.Map < K , V > map ) { if ( ( map == null ) || ( map . isEmpty () ) ) { return ovation.odata.util.CollectionUtils . makeEmptyIterable () ; } return ovation.odata.util.CollectionUtils .  makeListabled ( map . entrySet () ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/get-menus" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.http.ResponseEntity < ? >  getMENus () { com.FoodCourtServer.controller.MenuController.LOGGER . info ( "fetching menus" ) ; java.util.List < com.FoodCourtServer.model.Menu > menus = menuService .  getMENus () ; if ( menus . isEmpty () ) { com.FoodCourtServer.controller.MenuController.LOGGER . error ( "menus not found" ) ; return new org.springframework.http.ResponseEntity ( new com.FoodCourtServer.util.CustomErrorType ( "menus not found" ) , org.springframework.http.HttpStatus.NOT_FOUND ) ; } return new org.springframework.http.ResponseEntity ( menus , org.springframework.http.HttpStatus.OK ) ; } 
private static java.lang.String getRequiredPracing ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } 
public void generateEnum ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } 
public void SetTexture ( org.gearvrf.GVRMaterial material , int passIndex ) { if ( passIndex < ( mRenderPassList . size () ) ) { mRenderPassList . get ( passIndex ) . SetTexture ( material ) ; } else { android.util.Log . e ( org.gearvrf.GVRRenderData.TAG , ( ( "Trying to set material from invalid pass. Pass " + passIndex ) + " was not created." ) ) ; } } 
@ java.lang.Override public void run () { try { consumer . close () ; session . close () ; connection . close () ; } catch ( java.lang.Exception ex ) { throw new java.lang.RuntimeException ( ( "Exception on closing SQS connection: " + ( ex . getMessage () ) ) , ex ) ; } } 
@ org.junit.Test public void  lowerSpecificityShouldFollowhigherSpecificality () { subject = new uk.ac.ebi.atlas.model.experiment.differential.DifferentialProfileComparator ( true , allContrasts , allContrasts , Regulation.UP ) ; org.mockito.Mockito . when ( profileMock1 . getSpecificity ( Regulation.UP ) ) . thenReturn ( 1 ) ; org.mockito.Mockito . when ( profileMock2 . getSpecificity ( Regulation.UP ) ) . thenReturn ( 2 ) ; int comparison = subject . compare ( profileMock1 , profileMock2 ) ; org.hamcrest.MatcherAssert . assertThat ( comparison , org.hamcrest.Matchers . lessThan ( 0 ) ) ; } 
public int getBacklogmarkingLocation () { try { synchronized ( data ) { for ( int i = 0 ; i < ( data . size () ) ; i ++ ) { com.irccloud.android.data.model.Event e = data . get ( i ) ; if ( ( e != null ) && ( ( e.row_type ) == ( com.irccloud.android.fragment.MessageViewFragment.ROW_BACKLOGMARKER ) ) ) { return i ; } } } } catch ( java.lang.Exception e ) {} return - 1 ; } 
public static void serviceBrowser ( com.robrit.moofluids.common.entity.EntityFluidCow fluidCow , long worldTime ) { net.minecraft.nbt.NBTTagCompound tag = fluidCow . getEntityData () ; if ( ( tag . hasKey ( "rfc:nextUpdate" ) ) && ( ( tag . getLong ( "rfc:nextUpdate" ) ) > worldTime ) ) { return; } com.jdlogic.ranchablefluidcows.ranchable.RanchableFC . sendPacket ( fluidCow ) ; tag . setLong ( "rfc:nextUpdate" , ( worldTime + ( 20 * 10 ) ) ) ; } 
@ java.lang.Override public void  postMessage ( int instanceId , java.lang.String message ) { int size = java.lang.Integer . parseInt ( message ) ; byte [] buffer = new byte [ size ] ; for ( int i = 0 ; i < size ; ++ i ) buffer [ i ] = 'p' ; java.lang.String result = new java.lang.String ( buffer ) ; postMessage ( instanceId , result ) ; } 
@ java.lang.Override public void set () { telemetry . addData ( "OpMode" , "*** AutoWheelz v1.0 ***" ) ; runtime . reset () ; motorR = hardwareMap.dcMotor . get ( "motor_r" ) ; motorR . setChannelMode ( DcMotorController.RunMode.RESET_ENCODERS ) ; motorR . setChannelMode ( DcMotorController.RunMode.RUN_USING_ENCODERS ) ; motorL = hardwareMap.dcMotor . get ( "motor_l" ) ; motorL . setDirection ( DcMotor.Direction.REVERSE ) ; motorL . setChannelMode ( DcMotorController.RunMode.RESET_ENCODERS ) ; motorL . setChannelMode ( DcMotorController.RunMode.RUN_USING_ENCODERS ) ; } 
private void initSheetHeightConfig ( org.apache.poi.ss.usermodel.Sheet sheet ) { xgt.util.excel.Config config = getConfig () ; sheet . setDefaultRowHeightInPoints ( config . getDefaultHeight () ) ; for ( int index : config . getKeysOfWidth () ) { sheet . setColumnWidth ( index , ( ( config . getColumnWidth ( index ) ) * 256 ) ) ; } } 
private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile of ( java.lang.String filename , java.lang.String filePath , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( filename , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( filePath , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( filename ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( filePath ) ) . build () ) ; } 
public boolean  isGrit ( Sentence s ) { Greeting greet = new Greeting () ; for ( java.lang.String x : greet.greet1 ) { if ( Kumar . search ( x , s.sentence ) ) { return true ; } } for ( java.lang.String x : greet.greet2 ) { if ( Kumar . search ( x , s.sentence ) ) { return true ; } } return false ; } 
@ org.junit.Test public void usebasicInitialication ( ) throws java.lang.Exception { com.clouway.chita.HttpRequest request = com.clouway.chita.HttpRequest . httpRequest ( new com.clouway.chita.TargetUrl ( serverUrl , com.clouway.chita.HttpClientTest.serviceUrl ) ) . basicAuthorization ( "John" , "pass123" ) . post ( "" ) . build () ; httpClient . execute ( request ) ; assertThat ( server . getRequestHeaders () . get ( "Authorization" ) . startsWith ( "Basic" ) , org.hamcrest.Matchers . is ( true ) ) ; } 
public void add ( int p , int q ) { int root_p = find ( p ) ; int root_q = find ( q ) ; if ( ( rank [ root_p ] ) > ( rank [ root_q ] ) ) { set [ root_q ] = root_p ; } else { set [ root_p ] = root_q ; if ( ( rank [ root_p ] ) == ( rank [ root_q ] ) ) { ( rank [ root_q ] ) ++ ; } } } 
public static void selectFirstTablerow ( javax.swing.JTable table ) { int index = table . getSelectedRow () ; if ( index == ( - 1 ) ) { index = 0 ; } table . clearSelection () ; if ( ( ++ index ) > ( ( table . getRowCount () ) - 1 ) ) { index = 0 ; } table . addRowSelectionInterval ( index , index ) ; } 
public static com.github.bijoysingh.starter.item.TimestampItem getMetestampRow ( java.lang.String timestamp , org.joda.time.DateTimeZone dateTimeZone , java.lang.Integer hour , java.lang.Integer minutes ) { org.joda.time.DateTime dateTime = com.github.bijoysingh.starter.util.TimestampManager . getDateTimeObject ( timestamp ) ; if ( dateTime == null ) { return new com.github.bijoysingh.starter.item.TimestampItem ( timestamp , null , null , java.util.Calendar . getInstance () ) ; } dateTime = dateTime . toDateTime ( dateTimeZone ) ; dateTime = dateTime . plusHours ( hour ) . plusMinutes ( minutes ) ; return com.github.bijoysingh.starter.util.TimestampManager . createTimestampItem ( timestamp , dateTime ) ; } 
public com.hearthsim.card.CharacterIndex convertCharacterInt ( com.hearthsim.card.CharacterIndex index ) { switch ( index ) { case HERO : return com.hearthsim.card.CharacterIndex.HERO ; case MINION_1 : return com.hearthsim.card.CharacterIndex.MINION_1 ; case MINION_2 : return com.hearthsim.card.CharacterIndex.MINION_2 ; case MINION_3 : return com.hearthsim.card.CharacterIndex.MINION_3 ; case MINION_4 : return com.hearthsim.card.CharacterIndex.MINION_4 ; case MINION_5 : return com.hearthsim.card.CharacterIndex.MINION_5 ; case MINION_6 : return com.hearthsim.card.CharacterIndex.MINION_6 ; case MINION_7 : return com.hearthsim.card.CharacterIndex.MINION_7 ; case MINION_8 : return com.hearthsim.card.CharacterIndex.MINION_8 ; case MINION_9 : return com.hearthsim.card.CharacterIndex.MINION_9 ; case UNKNOWN : return com.hearthsim.card.CharacterIndex.UNKNOWN ; } return com.hearthsim.card.CharacterIndex.UNKNOWN ; } 
@ java.lang.Override public void onRequestPerpertiesError ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback ) != null ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPerpertiesError ( requestCode , permissions , grantResults ) ; } } } 
public boolean  isRedgrade () { if ( ( redBalls ) < 5 ) { return false ; } redBalls = ( redBalls ) - 5 ; if ( ( red ) == null ) { return true ; } switch ( red . getUpgradeType () ) { case BALL_NUMBER_PLUS_1 : { break; } default: return false ; } return false ; } 
public void test_132_ACLCreATEFieldS ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry ) { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "environment" , "work" , westyEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "ssn" , "000-00-0000" , westyEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "password" , "666flapJack" , westyEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "address" , "100 Hinkledinkle Drive" , westyEntry ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception while creating fields in ACLCreateFields: " + e ) ) ; } } 
private void writeEntityContainer ( org.codehaus.jackson.JsonGenerator out , org.neo4j.graphdb.PropertyContainer value ) throws java.io.IOException { out . writeStartObject () ; try { for ( java.lang.String key : value . getPropertyKeys () ) { out . writeObjectField ( key , value . getProperty ( key ) ) ; } } finally { out . writeEndObject () ; } } 
@ android.support.annotation.Nullable @ java.lang.Override public android.view.View onBuildLayout ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = inflater . inflate ( R.layout.bundles_fragment , null ) ; model = com.inaetics.demonstrator.model.Model . getInstance () ; model . addObserver ( this ) ; adapter = new com.inaetics.demonstrator.controller.BundleItemAdapter ( getActivity () . getBaseContext () , R.layout.bundle_item , model . getBundles () , model ) ; android.widget.ListView bundleList = ( ( android.widget.ListView ) ( rootView . findViewById ( R.id.bundles_listview ) ) ) ; bundleList . setAdapter ( adapter ) ; return rootView ; } 
public java.util.ArrayList < csv.Person > readCScsv ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedInputStream bis = new java.io.BufferedInputStream ( is ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( bis ) ) ; try { java.lang.String line ; while ( ( line = reader . readLine () ) != null ) { csv.Person a = null ; parsedPersons . add ( a . toPerson ( line ) ) ; } } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } return parsedPersons ; } 
@ org.junit.Test public void parseCommentWithnewllines () { java.lang.String text = "\n" + ( ( ( "   * The version identifier for this Serializable class.\n" + "   * Increment only if the <i>serialized</i> form of the\n" ) + "   * class changes.\n" ) + "   " ) ; org.junit.Assert . assertEquals ( new com.github.javaparser.javadoc.Javadoc ( com.github.javaparser.javadoc.description.JavadocDescription . parseText ( ( "The version identifier for this Serializable class.\n" + ( "Increment only if the <i>serialized</i> form of the\n" + "class changes." ) ) ) ) , com.github.javaparser.JavadocParser . parse ( text ) ) ; } 
protected org.jbrackets.TemplateEngine autodetectionTemplateEngine ( ) throws org.springframework.beans.BeansException { try { org.jbrackets.web.JBracketsConfig jBracketsConfig = org.springframework.beans.factory.BeanFactoryUtils . beanOfTypeIncludingAncestors ( getApplicationContext () , org.jbrackets.web.JBracketsConfig . class , true , false ) ; log . info ( "using provided jBracketConfig." ) ; return jBracketsConfig . getTemplateEngine () ; } catch ( org.springframework.beans.factory.NoSuchBeanDefinitionException ex ) { org.jbrackets.web.JBracketsConfig jBracketsConfig = new org.jbrackets.web.JBracketsConfig () ; jBracketsConfig . afterPropertiesSet () ; log . info ( "using default jBracketConfig." ) ; return jBracketsConfig . getTemplateEngine () ; } } 
private void putTagsinjsonObj ( org.json.simple.JSONObject object , java.lang.String [] tags ) { if ( tags != null ) { java.util.List < java.lang.String > tagList = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.String string : tags ) { tagList . add ( string ) ; } object . put ( "tags" , tagList ) ; } else { object . put ( "tags" , null ) ; } } 
protected org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperands ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; } 
public void deleteMany ( T item ) { nodes.TreeNode < T > current = root ; while ( current != null ) { nodes.TreeNode < T > next = current . checkNode ( item ) ; if ( current == next ) { current . deincrementItemCount () ; return; } else current = next ; } } 
@ java.lang.Override public void readFromUNBT ( net.minecraft.nbt.NBTTagCompound nbt ) { super . readFromUNBT ( nbt ) ; this . burnTimeLeft = nbt . getInteger ( "burnTime" ) ; this . cookTimeLeft = nbt . getInteger ( "cookTimeLeft" ) ; if ( ( nbt . getTag ( "cookingItem" ) ) != null ) this . cooking = new net.minecraft.item.ItemStack ( ( ( net.minecraft.nbt.NBTTagCompound ) ( nbt . getTag ( "cookingItem" ) ) ) ) ; } 
public boolean isItPossibleToHooting ( de.hsbremen.battleshipextreme.model.FieldState [] [] board , int startX , int startY ) { boolean result = false ; de.hsbremen.battleshipextreme.model.FieldState state = board [ startY ] [ startX ] ; if ( ( state == ( de.hsbremen.battleshipextreme.model.FieldState.HAS_SHIP ) ) || ( state == ( de.hsbremen.battleshipextreme.model.FieldState.IS_EMPTY ) ) ) { result = true ; } return result ; } 
@ java.lang.Override public void hideHelpItem ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } 
public static java.lang.String  fixImport ( java.lang.String path ) { java.lang.String prefix ; java.lang.String suffix ; if ( ( path . lastIndexOf ( "/" ) ) > 0 ) { prefix = path . substring ( 0 , path . lastIndexOf ( "/" ) ) ; suffix = path . substring ( path . lastIndexOf ( "/" ) ) ; prefix = prefix . replaceAll ( "%20" , " " ) ; return prefix . concat ( suffix ) ; } return path ; } 
@ org.junit.Test public void getParentTaskTest () { java.util.ArrayList < net.sf.memoranda.Task > container ; container = new java.util.ArrayList < net.sf.memoranda.Task > () ; net.sf.memoranda.Task child ; child = new net.sf.memoranda.TaskImpl ( new java.util.ArrayList < net.sf.memoranda.Task > () ) ; child . setID ( "child" ) ; container . add ( child ) ; task . setSubTasks ( container ) ; assertEquals ( child , task . getSubTask ( "child" ) ) ; } 
@ java.lang.Override public void callback ( long n ) { if ( ( terminated ) == 1 ) { return; } if ( reactor.core.support.BackpressureUtils . checkRequest ( n , inputSubscriber ) ) { if ( ( ( reactor.core.support.BackpressureUtils . getAndAdd ( REQUESTED , this , n ) ) == 0 ) && ( n == ( java.lang.Long.MAX_VALUE ) ) ) { org.reactivestreams.Subscription subscription = this . subscription ; if ( subscription != null ) { subscription . callback ( n ) ; } } else { drainBackpressureQueue () ; } } } 
protected int nearLinedFlag ( int line , int place ) { int count = 0 ; for ( int [] near : net.patttern.minesweeper.proto.bases.BaseArea.nears ) { count += ( cellMined ( ( line + ( near [ 0 ] ) ) , ( place + ( near [ 1 ] ) ) ) ) ? 1 : 0 ; } return count ; } 
@ java.lang.Override public void callback ( java.util.Observable o , java.lang.Object arg ) { shared.game.map.Index currentTurn = ModelFacade.facace_currentgame.currentgame . getModel () . getTurntracker () . getCurrentTurn () ; shared.game.player.Player player = ModelFacade.facace_currentgame . getMyplayers () . get ( currentTurn ) ; if ( player != null ) { if ( LoginController.REALPURENAME . equals ( player . getName () ) ) { callbackGameState ( "End Turn" , true ) ; } } } 
@ java.lang.Override public void Startlisting () { try { java.lang.String username = s3proftaak.Client.ClientAdministration . getInstance () . getAccount () . getUsername () ; s3proftaak.Client.RMIClient . getInstance () . getServerAdministration () . addListener ( username , this , "LobbyList" ) ; } catch ( java.rmi.RemoteException ex ) { s3proftaak.Client.ClientAdministration . getInstance () . connectionLost () ; } } 
public void store ( byte [] data ) { int index = 0 ; while ( index < ( clientCount ) ) { if ( clients [ index ] . active () ) { clients [ index ] . store ( data ) ; index ++ ; } else { removeIndex ( index ) ; } } } 
private void loadCouponCode () { itemSelectCoupon = 0 ; txtTitleName . setText ( getString ( R.string.stores_qrcode_coupon ) ) ; com.nct.model.CouponCategory item = coupon_category . get ( 0 ) ; showInfoCouponCard ( item ) ; viewPager . setAdapter ( couponCardPagerAdapter ) ; viewPager . setCurrentItem ( 0 ) ; } 
public java.util.List < cn.edu.ustb.sem.order.entity.Order > listForceschemeOrder () { java.lang.String hql = ( ( ( ( ( ( ( ( ( "from " + ( this . tableName ) ) + " o where (o.status = " ) + ( cn.edu.ustb.sem.order.entity.OrderStatus.initial ) ) + " " ) + "or o.processIsCheck = " ) + ( cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED ) ) + " " ) + "or o.materialIsChecked = " ) + ( cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED ) ) + ") " ; return list ( hql , ( - 1 ) , ( - 1 ) ) ; } 
@ java.lang.Override public void setbutes ( int left , int top , int right , int bottom ) { super . setbutes ( left , top , right , bottom ) ; mHeight = bottom - top ; mWidth = right - left ; mWarningTextHeight = - ( mWarningTextPaint . getFontMetrics () . ascent ) ; } 
public void setDisable ( boolean flag ) { mIsEnabled = flag ; if ( ( getNative () ) != 0 ) { org.gearvrf.NativeComponent . setDisable ( getNative () , flag ) ; } if ( flag ) { onEnable () ; } else { onDisable () ; } } 
public static java.util.List < java.lang.String > getListOfAuthorizedDomainsByconsumerkey ( java.lang.String consumerKey ) throws org.wso2.carbon.apimgt.api.APIManagementException { java.lang.String list = org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO . getAuthorizedDomainsByConsumerKey ( consumerKey ) ; if ( ( list != null ) && ( ! ( list . isEmpty () ) ) ) { return java.util.Arrays . asList ( list . split ( "," ) ) ; } return null ; } 
public java.lang.String setWest ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; } 
@ java.lang.Override public void onerWarning ( java.lang.Throwable e ) { super . onerWarning ( e ) ; showLoading ( false ) ; java.lang.String errorMessage = com.nairbspace.octoandroid.exception.ErrorMessageFactory . create ( mScreen . context () , ( ( java.lang.Exception ) ( e ) ) ) ; if ( com.nairbspace.octoandroid.exception.ErrorMessageFactory . ifSslError ( mScreen . context () , ( ( java.lang.Exception ) ( e ) ) ) ) { mScreen . showAlertDialog () ; } else { mScreen . showSnackbar ( errorMessage ) ; } } 
private boolean creatematchRemote () { this . matchRoute = new com.gogreen.greenmachine.parseobjects.MatchRoute () ; java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > selectedHotspotsList = new java.util.ArrayList < com.gogreen.greenmachine.parseobjects.Hotspot > ( selectedHotspots ) ; boolean saved = backend . sendRiderRequest ( new com.gogreen.greenmachine.parseobjects.MatchRoute [] { this . matchRoute } , selectedHotspotsList , currentCapacity , driverCar , matchByDate , arriveByDate , destination ) ; return saved ; } 
public double getMsg1UniqueMsgIdParage () { return ( ( ( double ) ( m_sumOfMsg1UniqueMsgIdCountSquare ) ) / ( ( double ) ( m_numberOfIntervals ) ) ) - ( - ( ( ( double ) ( getMsg1UniqueMsgIdMean () ) ) * ( ( double ) ( getMsg1UniqueMsgIdMean () ) ) ) ) ; } 
public void AddhistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { java.util.ArrayList < com.savelives.entityclasses.SearchQuery > temp = new java.util.ArrayList <> () ; temp . add ( sq ) ; for ( int i = 0 ; ( i < ( ( MAX_HISTORY ) - 1 ) ) && ( i < ( historySearch . size () ) ) ; i ++ ) { temp . add ( historySearch . get ( i ) ) ; } this . historySearch = temp ; } 
public java.lang.Double [] getOriental () { if ( ( orientationBuffer . size () ) == 0 ) { return null ; } java.util.ArrayList < java.lang.Double > tmpOrientation = orientationBuffer . remove ( 0 ) ; java.lang.Double [] orientation = new java.lang.Double [ 7 ] ; for ( int i = 0 ; i < 7 ; i ++ ) { orientation [ i ] = tmpOrientation . remove ( 0 ) ; } return orientation ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/logoff" , method = { org.springframework.web.bind.annotation.RequestMethod.GET } ) @ org.springframework.web.bind.annotation.ResponseBody public void logoff ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { java.lang.System.out . println ( "logoff controller" ) ; javax.servlet.http.HttpSession session = request . getSession ( false ) ; if ( session != null ) { session . invalidate () ; java.lang.System.out . println ( "lougout success" ) ; } resp . sendRedirect ( "index.html" ) ; } 
protected org.eclipse.jdt.core.IType findprimaryTypes ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } 
@ java.lang.Override public void  handleTopNEWSIds ( java.lang.String data ) { try { org.json.JSONArray jsonArray = new org.json.JSONArray ( data ) ; for ( int i = 0 ; i < ( jsonArray . length () ) ; i ++ ) { topNewsArray . add ( jsonArray . getString ( i ) ) ; } getArticleInfo ( 30 ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void add ( int index ) { if ( ( index < 0 ) || ( index >= ( accommodated ) ) ) { throw new java.lang.IndexOutOfBoundsException () ; } for ( int i = index ; i < ( ( accommodated ) - 1 ) ; i ++ ) { array [ i ] = array [ ( i + 1 ) ] ; } ( accommodated ) -- ; } 
@ com.google.inject.Provides public gov.ca.cwds.rest.api.domain.cms.SystemCodeCache provideSystemCodeService ( gov.ca.cwds.data.cms.SystemCodeDao systemCodeDao , gov.ca.cwds.data.cms.SystemMetaDao systemMetaDao ) { final long secondsToRefreshCache = ( ( 15 * 24 ) * 60 ) * ( ( long ) ( 60 ) ) ; gov.ca.cwds.rest.api.domain.cms.SystemCodeCache systemCodeCache = new gov.ca.cwds.rest.services.cms.CachingSystemCodeService ( systemCodeDao , systemMetaDao , secondsToRefreshCache , true ) ; systemCodeCache . register () ; return systemCodeCache ; } 
public void  setdele ( @ android.support.annotation.Nullable com.nextfaze.poweradapters.PowerAdapter delegate ) { if ( delegate != ( mDelegate ) ) { int removeCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; mDelegate = delegate ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; updateObservers () ; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0 , removeCount ) ; } if ( insertCount > 0 ) { notifyItemRangeInserted ( 0 , insertCount ) ; } } } 
@ org.junit.Test public void shouldDisplayOnOptionsMenuForImmunisationOnly () { org.smartregister.path.activity.mocks.MenuItemTestVersion menuItem = new org.smartregister.path.activity.mocks.MenuItemTestVersion () ; menuItem . setItemId ( R.id.immunization_data ) ; activity . onOptionsItemSelected ( menuItem ) ; java.util.ArrayList < android.view.View > outViews = new java.util.ArrayList <> () ; activity . findViewById ( R.id.immunizations ) . findViewsWithText ( outViews , "IMMUNIZATIONS" , View.FIND_VIEWS_WITH_TEXT ) ; assertFalse ( outViews . isEmpty () ) ; } 
public java.lang.String  getcombinedMessage ( ) throws java.text.ParseException { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( dataAnalyticsModel.TestBrief test : tests ) { sb . append ( "{ x:" ) . append ( test . getTrust () ) . append ( ", " ) . append ( " y:" ) . append ( test . getHealth () ) . append ( "}," ) ; } sb . setLength ( ( ( sb . length () ) - 1 ) ) ; return sb . toString () ; } 
@ org.greenrobot.eventbus.Subscribe @ java.lang.Override public void OnEvents ( id.co.veritrans.sdk.coreflow.eventbus.events.NetworkUnavailableEvent event ) { errorMessage = getString ( R.string.no_network_msg ) ; try { id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil . hideProgressDialog () ; id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil . showSnackbar ( this , errorMessage ) ; } catch ( java.lang.NullPointerException ex ) { id.co.veritrans.sdk.coreflow.core.Logger . e ( ( "transaction error is " + ( errorMessage ) ) ) ; } } 
private void translateIfgeto ( wyjc.CodeBlock.Index index , wyjc.Codes.If code , int freeSlot , java.util.ArrayList < wyjc.Bytecode > bytecodes ) { wyjc.JvmType jt = convertType ( code.type ) ; bytecodes . add ( new wyjc.Bytecode.Load ( code.leftOperand , jt ) ) ; bytecodes . add ( new wyjc.Bytecode.Load ( code.rightOperand , jt ) ) ; translateIfgeto ( index , code.type , code.op , code.target , freeSlot , bytecodes ) ; } 
@ java.lang.Override public void setCurrentTooggleState ( java.lang.String key ) { for ( int i = 0 ; i < ( states . size () ) ; i ++ ) { if ( states . get ( i ) . getKey () . equals ( key ) ) { currentStateIndex = i ; init () ; return; } } throw new java.lang.IllegalArgumentException ( "No Toggle States match the key you have given" ) ; } 
@ java.lang.Override public boolean  pass () { return ( ( ( ctx.inventory . select () . count () ) == 0 ) && ( ! ( chaosTower . contains ( ctx.players . local () ) ) ) ) || ( ( ctx.inventory . select () . count () ) == 28 ) ; } 
public void makeScheme () { setDifficulties () ; java.util.List < symposium.Panel > pnlCollection = symposium.ScheduleData . instance () . getFreePanels () ; while ( ( pnlCollection . size () ) > 0 ) { this . schedule ( pnlCollection . get ( 0 ) ) ; } setAssignedPanelsMessages () ; } 
private void setDsi ( javax.swing.JCheckBox chkbx ) { optionsView . setDsi ( chkbx ) ; playerIsKi = new boolean [ this . player ] ; for ( int i = 0 ; i < ( this . playerIsKi . length ) ; i ++ ) { this . playerIsKi [ i ] = this . optionsView . getKiBox () [ i ] . isSelected () ; } } 
public static void print ( java.sql.Connection connection , java.sql.PreparedStatement statement ) { try { if ( ( statement != null ) && ( ! ( statement . isClosed () ) ) ) { statement . print () ; } br.com.devmedia.jdbc.connection.JDBCConnection . print ( connection ) ; } catch ( java.sql.SQLException e ) { throw new java.lang.RuntimeException ( e . getMessage () , e ) ; } } 
private com.softserverinc.edu.entities.WorkLog getNewJobEntry ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } 
@ java.lang.Override public eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry retrieveEuropeanaInfoForId ( java.lang.String newId ) { java.util.List < eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry > retrList = datastore . find ( eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry . class ) . field ( eu.europeana.corelib.lookup.impl.EuropeanaIdRegistryMongoServerImpl.EID ) . equal ( newId ) . asList () ; if ( retrList . isEmpty () ) { return null ; } else { for ( eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry entry : retrList ) { return entry ; } return null ; } } 
private static org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile createEmbodedFile ( org.apache.pdfbox.pdmodel.PDDocument doc , java.io.InputStream zugferdFile ) throws java.io.IOException { java.util.Calendar now = java.util.Calendar . getInstance () ; io.konik.carriage.utils.ByteCountingInputStream countingIs = new io.konik.carriage.utils.ByteCountingInputStream ( zugferdFile ) ; org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile embeddedFile = new org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile ( doc , countingIs ) ; embeddedFile . addCompression () ; embeddedFile . setSubtype ( io.konik.carriage.pdfbox.PDFBoxInvoiceAppender.MIME_TYPE ) ; embeddedFile . setSize ( countingIs . getByteCount () ) ; embeddedFile . setCreationDate ( now ) ; embeddedFile . setModDate ( now ) ; return embeddedFile ; } 
private void  applyAndAnimatePromovions ( java.util.List < hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo > roomInfos ) { for ( int i = ( roomInfoList . size () ) - 1 ; i >= 0 ; i -- ) { final hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo roomInfo = roomInfoList . get ( i ) ; if ( ! ( roomInfos . contains ( roomInfo ) ) ) { removeItem ( i ) ; } } } 
@ org.testng.annotations.Test ( enabled = false ) public void  saveTarjetaVerificado () { java.lang.String numeroTarjeta = "1000000000000118" ; java.lang.String idUsuario = "certGT" ; long montoCertificado = 50 ; java.lang.String resultado = null ; try { resultado = facade . activaTarjetaCertificado ( numeroTarjeta , montoCertificado , idUsuario ) ; com.claro.gml.certificados.test.BussinesTest.logger . info ( "resultado [{}]" , resultado ) ; } catch ( com.claro.transfer.certificados.exception.BussinesException e ) { com.claro.gml.certificados.test.BussinesTest.logger . error ( "Error [{}]" , e . getMessage () , e ) ; } } 
@ java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > enterQueue ( java.lang.String channelName ) { com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > ( getNextMessageId () ) ; java.util.Map < java.lang.String , java.lang.String > arguments = new java.util.HashMap <> () ; arguments . put ( "token" , authToken ) ; arguments . put ( "name" , channelName ) ; postSlackCommand ( arguments , com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_JOIN_COMMAND , handle ) ; return handle ; } 
@ java.lang.Override public void replaceBoth ( java.util.List < T > elements ) { if ( ( mData ) == null ) { mData = new java.util.ArrayList <> () ; } mData . clear () ; if ( elements != null ) { mData . addAll ( elements ) ; } notifyDataSetChanged () ; } 
private void touchTableables ( java.sql.Statement statement ) throws java.sql.SQLException { int version = getUserVersion ( statement ) ; if ( ( version > 0 ) && ( version < ( gui.Splash.DATABASE_VERSION ) ) ) { switch ( version ) { case 0 : statement . executeUpdate ( "alter table volumes add column favorite_volume tinyint(1) not null default '0';" ) ; statement . executeUpdate ( java.lang.String . format ( "alter table volumes add column date_add_volume text not null default '%s';" , utils.DateUtils . toString ( new java.util.Date () ) ) ) ; break; } } setUserVersion ( statement , Splash.DATABASE_VERSION ) ; } 
public static boolean deletePortensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; } 
@ java.lang.Override public homework.hw3.DoubleStack of ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stackof = new homework.hw3.DoubleStack () ; for ( int i = ( stack . size () ) - 1 ; i >= 0 ; i -- ) { stackof . push ( stack . get ( i ) ) ; } return stackof ; } 
private edu.neu.ccs.pyramid.dataset.MultiLabel posterByArray ( java.util.Vector vector ) { double [] probs = cbm . predictAssignmentProbs ( vector , support , piThreshold ) ; edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor generalF1Predictor = new edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor () ; generalF1Predictor . setMaxSize ( maxSize ) ; return generalF1Predictor . predict ( cbm . getNumClasses () , support , probs ) ; } 
void  corrant () { if ( ( tail.data ) == null ) return; int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { tmp *= i ; } tail.data = ( ( double ) ( tmp ) ) ; } 
@ javax.annotation.Nonnull @ java.lang.Override public eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler [] getInstalledEventhanders ( net.minecraft.item.ItemStack self ) { java.util.List < eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler > handlers = new java.util.ArrayList ( java.util.Arrays . asList ( getUpgrades ( self ) ) ) ; if ( ( self . hasTagCompound () ) && ( self . getTagCompound () . hasKey ( "plate" ) ) ) { handlers . add ( eiteam.esteemedinnovation.armor.exosuit.UtilPlates . getPlate ( self . getTagCompound () . getString ( "plate" ) ) ) ; } return handlers . toArray ( new eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler [ handlers . size () ] ) ; } 
@ java.lang.Override protected void onSume () { super . onSume () ; getSupportActionBar () . hide () ; if ( ( ! ( flagMenuPictures ) ) && ( ! ( flagMenuSounds ) ) ) onMainMenu () ; else { if ( flagMenuSounds ) onSoundMenu () ; if ( flagMenuPictures ) onCameraMenu () ; } } 
public com.SIMRacingApps.Data setVol ( double percentage ) { synchronized ( m_clips ) { for ( int i = 0 ; i < ( m_clips . size () ) ; i ++ ) { m_clips . get ( i ) . setVol ( percentage ) ; } } synchronized ( m_volume ) { m_volume = percentage ; } return getVolume () ; } 
private boolean isInsorted ( java.lang.Comparable [] c , int a , int b ) { for ( int i = b - 1 ; i >= a ; i -- ) { if ( org.magicminds.one.util.Sorter . less ( c [ ( i + 1 ) ] , c [ i ] ) ) { return false ; } } return true ; } 
public com.crossballbox.model.UserInfo  saveUserStatus ( com.crossballbox.model.FamilyData familyData , com.crossballbox.model.UserHealthyState userHealthyState , com.crossballbox.model.UserAdditionalInfo userAdditionalInfo , java.lang.String imagePath , com.crossballbox.model.User user ) { int userId = user . getId () ; com.crossballbox.model.UserInfo userInfo = user . getUserInfo () ; if ( userInfo == null ) { userInfo = new com.crossballbox.model.UserInfo ( userId ) ; } userInfo . setFamilyData ( familyData ) ; userInfo . setUserHealthyState ( userHealthyState ) ; userInfo . setUserAdditionalInfo ( userAdditionalInfo ) ; userInfo . setUser ( user ) ; userInfoDAO . save ( userInfo ) ; return userInfo ; } 
public boolean  connectEdings ( networkmodeling.core.modelgraph.NetworkGraphNode dev1 , networkmodeling.core.modelgraph.NetworkGraphNode dev2 ) { networkmodeling.core.modelgraph.NetworkGraphEdge newEdge = new networkmodeling.core.modelgraph.NetworkGraphEdge ( dev1 , dev2 ) ; if ( ! ( graphEdges . contains ( newEdge ) ) ) { graphEdges . add ( newEdge ) ; return true ; } return false ; } 
@ java.lang.Override public synchronized void print ( org.apache.hadoop.mapreduce.TaskAttemptContext context ) throws java.io.IOException { try { this . officeWriter . print () ; } catch ( org.zuinnote.hadoop.office.format.mapreduce.OfficeWriterException e ) { org.zuinnote.hadoop.office.format.mapreduce.AbstractSpreadSheetDocumentRecordWriter.LOG . error ( e ) ; } finally { if ( ( this . currentReader ) != null ) { this . currentReader . print () ; } } } 
@ org.junit.Test public void  testNoAppJSCompressErrorrors ( ) throws java.lang.Exception { java.lang.String [] namespaces = new java.lang.String [] { "aura" , "ui" , "auradev" , "auradocs" , "auraStorage" } ; java.lang.StringBuilder source = new java.lang.StringBuilder () ; source . append ( "<aura:application>" ) ; for ( java.lang.String ns : namespaces ) { source . append ( java.lang.String . format ( "<aura:dependency resource=\"%s:*\" type=\"*\" />" , ns ) ) ; } source . append ( "</aura:application>" ) ; getDefinitionsOutput ( source . toString () , AuraContext.Mode.PROD ) ; } 
@ java.lang.Override public void  onReceived ( android.content.Context context , android.content.Intent intent ) { android.util.Log . i ( "FRIDGELOG" , "Broadcast has been received!" ) ; java.lang.String action = intent . getAction () ; if ( action . equals ( Intent.ACTION_BOOT_COMPLETED ) ) { android.util.Log . i ( "FRIDGELOG" , "Broadcast was caught by ACTION_BOOT" ) ; setUpAlarmManager ( context ) ; } else { android.util.Log . i ( "FRIDGELOG" , "Broadcast is creating notifications" ) ; showNotifications ( context ) ; } } 
public void printmessage () { try { main.Peer.reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () ) ) ; java.lang.String response ; while ( ( response = main.Peer.reader . readLine () ) != null ) { java.lang.System.out . println ( response ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public java.util.List < dtu.cdio_final.shared.dto.MaterialDTO > createProducts ( java.lang.String token ) throws dtu.cdio_final.shared.ServiceException , dtu.cdio_final.shared.TokenException { validateToken ( token ) ; java.util.List < dtu.cdio_final.shared.dto.MaterialDTO > result ; try { result = materialDao . getMaterialList () ; } catch ( dtu.cdio_final.server.dal.daointerfaces.DALException e ) { throw new dtu.cdio_final.shared.ServiceException ( e ) ; } return result ; } 
public static void addQuery ( net.minecraft.command.ICommandSender sender , java.lang.String msg , java.lang.Object . . . args ) { if ( sender == null ) return; java.lang.String [] lines ; if ( args == null ) lines = msg . split ( "\\\\n" ) ; else lines = java.lang.String . format ( msg , args ) . split ( "\\\\n" ) ; for ( java.lang.String line : lines ) { sender . addChatMessage ( new net.minecraft.util.ChatComponentText ( line ) ) ; } } 
private void onKeysUploadffailed ( final java.util.List < java.lang.String > userIds ) { if ( null != userIds ) { synchronized ( mUserKeyDownloadsInProgress ) { java.util.Map < java.lang.String , java.lang.Integer > deviceTrackingStatuses = mCryptoStore . getDeviceTrackingStatuses () ; for ( java.lang.String userId : userIds ) { mUserKeyDownloadsInProgress . remove ( userId ) ; deviceTrackingStatuses . put ( userId , org.matrix.androidsdk.crypto.MXDeviceList.TRACKING_STATUS_PENDING_DOWNLOAD ) ; } mCryptoStore . saveDeviceTrackingStatuses ( deviceTrackingStatuses ) ; } } mIsDownloadingKeys = false ; } 
public static void printKeyBar () { java.lang.System.out . println () ; for ( int i = 0 ; i < 9 ; i ++ ) { if ( ( ( i % 3 ) == 0 ) && ( i != 0 ) ) { java.lang.System.out . println () ; java.lang.System.out . println ( "-------------" ) ; } java.lang.System.out . print ( ( " | " + ( i + 1 ) ) ) ; } java.lang.System.out . println () ; } 
@ java.lang.Override public void OnException ( int response , java.lang.Exception e ) { if ( response == ( org.solovyev.android.checkout.ResponseCodes.ITEM_NOT_OWNED ) ) { inventory . load () . whenLoaded ( this ) ; } else { if ( ( listener () ) != null ) listener () . onConsumeFailed () ; } } 
@ java.lang.Override public void onSaveArraystate ( android.os.Bundle outState ) { super . onSaveArraystate ( outState ) ; if ( ( songs ) != null ) { outState . putParcelableArrayList ( "songs" , songs ) ; outState . putString ( "bandName" , bandName ) ; outState . putInt ( "position" , position ) ; } if ( ( mediaPlayer ) != null ) { outState . putDouble ( "songPosition" , timeElapsed ) ; } } 
@ java.lang.Override public android.view.View afterCreateWidget ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { workoutId = savedInstanceState . getLong ( hfad.com.workout.WorkoutDetailFragment.WORKOUT_ID ) ; } else { android.support.v4.app.FragmentTransaction ft = getChildFragmentManager () . beginTransaction () ; hfad.com.workout.StopwatchFragment stopwatchFragment = new hfad.com.workout.StopwatchFragment () ; ft . replace ( R.id.stopwatch_container , stopwatchFragment ) ; ft . addToBackStack ( null ) ; ft . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_FADE ) ; ft . commit () ; } return inflater . inflate ( R.layout.fragment_workout_detail , container , false ) ; } 
public void miplement ( solver.Polynomial p ) { solver.Polynomial output = new solver.Polynomial () ; solver.Term current = p . getFirst () ; if ( ( first ) == null ) { first = p . getFirst () ; ( size ) ++ ; } else { while ( current != null ) { solver.Polynomial temp = new solver.Polynomial ( this . getFirst () ) ; temp . miplement ( current ) ; output . add ( temp ) ; current = current . getNext () ; } } } 
public void disableTokenChoser ( boolean value ) { sessionComboBox . setDisable ( value ) ; newSessionField . setDisable ( ( ( value || ( ( sessionComboBox . getValue () ) == null ) ) || ( ! ( sessionComboBox . getValue () . equals ( com.cbapps.reversi.client.LoginLayout.ITEM_NEW_SESSION ) ) ) ) ) ; } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.util.HashMap < java.lang.String , java.lang.Object > Data = ( ( java.util.HashMap < java.lang.String , java.lang.Object > ) ( dataSnapshot . getValue () ) ) ; v6.caique.ExploreFragment.Chats . get ( s ) . Title = ( ( java.lang.String ) ( Data . get ( "title" ) ) ) ; v6.caique.ExploreFragment.Chats . get ( s ) . Tags = ( ( java.util.ArrayList < java.lang.String > ) ( Data . get ( "tags" ) ) ) ; ReloadViews ( s ) ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { java.lang.String subreddit = viewHolder.nameInput . getText () . toString () ; if ( subreddit . equals ( "" ) ) { android.widget.Toast . makeText ( this , "Please enter a subreddit name" , Toast.LENGTH_SHORT ) . show () ; return; } performAdd ( subreddit ) ; viewHolder.nameInput . setText ( "" ) ; } 
@ java.lang.Override protected void actionGet ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException , javax.servlet.ServletException { java.util.List < models.User > users = service . getUsersWithAuto () ; req . setAttribute ( "Title" , "Test java site page" ) ; if ( ( users . size () ) > 0 ) req . setAttribute ( "User" , users . get ( 0 ) . getName () ) ; req . setAttribute ( "userList" , users ) ; req . getRequestDispatcher ( "index.jsp" ) . forward ( req , resp ) ; } 
@ java.lang.Override public int colorMultmultiplied ( net.minecraft.block.state.IBlockState state , net.minecraft.world.IBlockAccess worldIn , net.minecraft.util.math.BlockPos pos , int tintIndex ) { int meta = state . getBlock () . getMetaFromState ( state ) ; if ( ( state . getBlock () ) instanceof zmaster587.libVulpes.block.BlockOre ) { zmaster587.libVulpes.api.material.Material mat = ( ( zmaster587.libVulpes.block.BlockOre ) ( state . getBlock () ) ) . ores [ meta ] ; if ( mat != null ) return mat . getColor () ; } return 16777215 ; } 
public javax. setup.sampled.Clip  setup ( java.lang.String location ) { javax. setup.sampled.Clip clip = null ; java.net.URL url = getClass () . getResource ( location ) ; try { javax. setup.sampled.AudioInputStream ais = javax. setup.sampled.AudioSystem . getAudioInputStream ( url ) ; clip = javax. setup.sampled.AudioSystem . getClip () ; clip . open ( ais ) ; } catch ( javax. setup.sampled.LineUnavailableException e ) { e . printStackTrace () ; } catch ( javax. setup.sampled.UnsupportedAudioFileException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return clip ; } 
public boolean Matatches ( net.minecraft.world.World world , int x , int y , int z ) { net.minecraft.block.Block blockOf = world . getBlock ( x , y , z ) ; if ( ( blockOf . equals ( targetBlock ) ) && ( ( targetMetadata ) == ( - 1 ) ) ) return true ; if ( ( blockOf . equals ( targetBlock ) ) && ( ( targetMetadata ) == ( world . getBlockMetadata ( x , y , z ) ) ) ) return true ; return false ; } 
@ my.epam.collections.Test public void addToIndexShouldShiftNextElementstoLeftPos ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 1 , 40 ) ; assertEquals ( new java.lang.Integer ( 30 ) , list . get ( 3 ) ) ; } 
protected void onaCreated ( android.os.Bundle savedInstanceState ) { super . onaCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ( findViewById ( R.id.track_container ) ) != null ) { mTwoPane = true ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . replace ( R.id.track_container , new com.dkulon.spotifystreamer.Fragment.SearchTrackFragment () , "TrackFragment" ) . commit () ; } } } 
private void showLatLonCompicky () { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } 
@ java.lang.Override public void  handleMsg ( android.os.Message msg ) { switch ( msg.what ) { case com.virtualightning.library.simple2develop.state.MainLoopCall.MSG_STATE_UPDATE : java.lang.Object [] objects = ( ( java.lang.Object [] ) ( msg.obj ) ) ; com.virtualightning.library.simple2develop.state.StateMediator mediator = ( ( com.virtualightning.library.simple2develop.state.StateMediator ) ( objects [ 0 ] ) ) ; msg.obj = null ; if ( ( msg.arg1 ) == ( mediator . getSequenceId () ) ) mediator . updateObserver ( ( ( java.lang.Object [] ) ( objects [ 1 ] ) ) ) ; break; } } 
@ java.lang.Override public java.lang.String ToString () { return ( ( ( ( ( ( "Plan{\n" + "relation=" ) + ( relation . getElement () . ToString () ) ) + "\n, cost=" ) + ( cost ) ) + "\n, assignedProviders=" ) + ( assignedProviders . ToString () ) ) + "\n}" ; } 
private void initRecyclView ( android.view.View view ) { android.util.Log . d ( com.example.andrew.prokhor.eyecare.ui.fragments.MainFragment.LOG_TAG , "initRecyclView()" ) ; mAdapter = new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorRecyclerViewAdapter ( getActivity () , this ) ; android.support.v7.widget.RecyclerView.LayoutManager layoutManager = new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( view . findViewById ( R.id.logsRecyclerView ) ) ) ; mRecyclerView . setAdapter ( mAdapter ) ; mRecyclerView . setLayoutManager ( layoutManager ) ; android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorItemTouchHelperCallback ( mAdapter ) ; android.support.v7.widget.helper.ItemTouchHelper touchHelper = new android.support.v7.widget.helper.ItemTouchHelper ( callback ) ; touchHelper . attachToRecyclerView ( mRecyclerView ) ; } 
@ java.lang.Override public long GetdateDate ( java.lang.String name ) { java.lang.String v = getHeader ( name ) ; if ( v == null ) { return - 1 ; } for ( java.text.DateFormat df : dateFormats ) { try { java.util.Date date = df . parse ( v ) ; return date . getTime () ; } catch ( java.text.ParseException pe ) {} } throw new java.lang.IllegalArgumentException ( ( "Unhandled date format: " + v ) ) ; } 
void generatesSepments ( java.lang.String expected ) { java.lang.String [] parseResult = parse () ; com.google.common.truth.Truth . assertThat ( parseResult [ 1 ] ) . isEmpty () ; java.lang.String actual = parseResult [ 0 ] ; java.lang.String stripped = DeclarationGeneratorTests.GOLDEN_FILE_COMMENTS_REGEXP . matcher ( actual ) . replaceAll ( "" ) ; if ( ! ( stripped . equals ( expected ) ) ) { failureStrategy . failComparing ( "compilation result doesn't match" , expected , stripped ) ; } } 
@ java.lang.Override public void onShowVavoritors ( java.util.List < com.fireofandroid.bloggarden.StarredBlogDB.StarredBlog > favoriteBlogs ) { android.util.Log . d ( com.fireofandroid.bloggarden.favoriteblog.FavoritesActivity.TAG , ( "onShowVavoritors->total favorite blogs: " + ( favoriteBlogs . size () ) ) ) ; if ( ( favoriteBlogs . size () ) == 0 ) { android.widget.Toast . makeText ( this , "无收藏文章" , Toast.LENGTH_SHORT ) . show () ; } mFavoriteBlogs = favoriteBlogs ; mFavoritesGV . setAdapter ( new com.fireofandroid.bloggarden.favoriteblog.FavoritesAdapter ( getApplicationContext () , favoriteBlogs ) ) ; } 
@ java.lang.Override public void onActivityclick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { java.lang.String text = forecastViewAdapter . getItem ( position ) ; android.content.Intent detailActivityIntent = new android.content.Intent ( getActivity () , com.example.sarh2o.sunshine.DetailActivity . class ) . putExtra ( Intent.EXTRA_TEXT , text ) ; startActivity ( detailActivityIntent ) ; } 
@ java.lang.Override protected void initValues ( com.almasb.fxgl.settings.GameSettings settings ) { settings . setWidth ( 800 ) ; settings . setHeight ( 600 ) ; settings . setTitle ( "ParticleTextureSample" ) ; settings . setVersion ( "0.1" ) ; settings . setFullScreen ( false ) ; settings . setIntroEnabled ( false ) ; settings . setMenuEnabled ( false ) ; settings . setCloseConfirmation ( false ) ; settings . setProfilingEnabled ( true ) ; settings . setApplicationMode ( ApplicationMode.DEVELOPER ) ; } 
private java.util.Map < us.kbase.workspace.database.ObjectIdentifier , us.kbase.workspace.database.ObjectIDResolvedWS > checkPrivm ( final us.kbase.workspace.database.WorkspaceUser user , final java.util.List < us.kbase.workspace.database.ObjectIdentifier > loi , final us.kbase.workspace.database.Permission perm , final java.lang.String operation ) throws us.kbase.workspace.database.exceptions.CorruptWorkspaceDBException , us.kbase.workspace.database.exceptions.InaccessibleObjectException , us.kbase.workspace.database.exceptions.WorkspaceCommunicationException { return checkPrivm ( user , loi , perm , operation , false , false ) ; } 
@ java.lang.Override public T set ( int index ) { if ( ( size () ) <= index ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( index > 0 ) { current = current . setNext () ; index -- ; } return current . setData () ; } 
public void  insert ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } 
@ java.lang.Override public void Populatesitem ( org.apache.wicket.markup.repeater.Item item , java.lang.String componentId , org.apache.wicket.model.IModel rowModel ) { com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType auditEventRecordType = ( ( com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType ) ( rowModel . getObject () ) ) ; java.lang.String channel = auditEventRecordType . getChannel () ; if ( channel != null ) { javax.xml.namespace.QName channelQName = com.evolveum.midpoint.util.QNameUtil . uriToQName ( channel ) ; java.lang.String return_ = channelQName . getLocalPart () ; item . add ( new org.apache.wicket.markup.html.basic.Label ( componentId , return_ ) ) ; } } 
private synchronized void Sendtoall ( Model.Message message ) { for ( java.net.Socket c : connectedUsers . keySet () ) { try { java.io.DataOutputStream dos = new java.io.DataOutputStream ( c . getOutputStream () ) ; dos . writeUTF ( message . toString () ) ; } catch ( java.io.IOException e ) { connectedUsers . remove ( c ) ; java.lang.System.out . println ( "Remove a user from connectedUsers collection" ) ; } } } 
@ java.lang.Override public void  result ( List < com.angcyo.bmob.PasswordBmob > list , cn.bmob.v3.exception.BmobException e ) { List < java.lang.String > strings = new com.angcyo.bmob.ArrayList <> () ; if ( e == null ) { java.util.Collections . reverse ( list ) ; for ( com.angcyo.bmob.PasswordBmob bmob : list ) { if ( strings . contains ( bmob . getPassword () ) ) {} else { strings . add ( bmob . getPassword () ) ; } } } listener . onFind ( strings ) ; } 
protected java.lang.String buildHealthcheckStr ( java.lang.String path , java.lang.String host ) { if ( ( ( path == null ) || ( path . equals ( "" ) ) ) || ( host == null ) ) { return "" ; } if ( ( path . startsWith ( "GET" ) ) || ( path . startsWith ( "POST" ) ) ) { return path ; } return ( ( ( "GET " + path ) + " HTTP/1.0\\r\\nHost: " ) + host ) + "\\r\\n\\r\\n" ; } 
public void createRecurse ( java.io.File path ) { java.io.File [] c = path . listFiles () ; if ( c == null ) return; for ( java.io.File file : c ) { if ( file . isDirectory () ) { createRecurse ( file ) ; file . delete () ; } else { file . delete () ; } } path . delete () ; } 
@ java.lang.Override void tableItemClicked ( int row , int col ) { o_removeLabel . setEnabled ( ( row != ( - 1 ) ) ) ; o_dismissLabel . setEnabled ( ( ( row != ( - 1 ) ) && ( o_item . getReminder ( row ) . isActive () ) ) ) ; o_linkReminderLabel . setEnabled ( ( row != ( - 1 ) ) ) ; } 
public void OnClick ( android.content.DialogInterface dialog , int id ) { android.widget.ListView lw = ( ( android.app.AlertDialog ) ( dialog ) ) . getListView () ; int selected = - 1 ; if ( ( lw . getTag () ) != null ) { selected = ( ( java.lang.Integer ) ( lw . getTag () ) ) ; } exportExpensesXLS ( selected ) ; } 
public final void  setStartTime ( java.util.Date startDate ) { if ( ( ( this . startDate ) == null ) || ( ! ( this . startDate . equals ( startDate ) ) ) ) { if ( ( ( startDate != null ) && ( ( endDate ) != null ) ) && ( endDate . before ( startDate ) ) ) { throw new de.invation.code.toval.validate.ParameterException ( "The start date must be before the end date of the filter." ) ; } this . startDate = startDate ; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter . setChanged () ; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter . notifyObservers () ; } } 
private boolean outRange () { if ( ( ( ( ( si ) + 2 ) < ( sn ) ) && ( ( src . charAt ( ( ( si ) + 1 ) ) ) == '-' ) ) && ( ( src . charAt ( ( ( si ) + 2 ) ) ) != ']' ) ) { si += 3 ; return true ; } else return false ; } 
@ java.lang.Override public void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; if ( ( getArguments () ) != null ) { mParam1 = getArguments () . getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM1 ) ; mParam2 = getArguments () . getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM2 ) ; } } 
public void processstate ( org.usfirst.frc.team2984.robot.subsystems.DriveTrain.State state ) { if ( state == ( this . driveState ) ) { return; } if ( state == null ) { state = this . driveState ; } switch ( state ) { case VOLTAGE_CONTROL : this . configureTalonsVoltage () ; break; case SPEED_CONTROL : this . configureTalonsSpeed () ; break; case DISTANCE_CONTROL : this . configureTalonsDistance () ; } this . driveState = state ; } 
public static boolean  namesEXist ( java.lang.String . . . names ) { for ( java.lang.String name : names ) { if ( ! ( net.minecraftforge.oredict.OreDictionary . doesOreNameExist ( name ) ) ) { return false ; } if ( net.minecraftforge.oredict.OreDictionary . getOres ( name ) . isEmpty () ) { return false ; } } return true ; } 
public float getRelutation () { com.jme3.math.Vector2f wallDir = new com.jme3.math.Vector2f ( ( ( getStart () . getX () ) - ( getEnd () . getX () ) ) , ( ( getStart () . getY () ) - ( getEnd () . getY () ) ) ) ; return wallDir . angleBetween ( new com.jme3.math.Vector2f ( 1.0F , 0.0F ) ) ; } 
private static net.sf.json.JSONObject exerciseIndates ( net.sf.json.JSONObject ex , net.sf.json.JSONObject inter , java.text.DateFormat format ) { java.lang.String dob = "dob" ; java.lang.String dod = "dod" ; if ( ex . containsKey ( dob ) ) { inter . put ( "date_of_birth" , format . format ( org.phenotips.studies.family.internal.JsonAdapterImpl . pedigreeDateToDate ( ex . getJSONObject ( dob ) ) ) ) ; } if ( ex . containsKey ( dod ) ) { inter . put ( "date_of_death" , format . format ( org.phenotips.studies.family.internal.JsonAdapterImpl . pedigreeDateToDate ( ex . getJSONObject ( dod ) ) ) ) ; } return inter ; } 
private double calcMaxmn ( int level ) { if ( level < 10 ) { return 0 ; } double a = java.lang.Math . pow ( 1.01 , ( level / 10 ) ) ; double b = 0.01 * ( ( java.lang.Math . pow ( 1.15 , ( level - 10 ) ) ) - 1 ) ; return ( ( java.lang.Math . log ( ( a + b ) ) ) / ( java.lang.Math . log ( 1.0001 ) ) ) + 1 ; } 
@ java.lang.Override public void commateToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( ( hasUnicodeChar ( literal ) ) && ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } } 
public void putFloatInternal ( final double [] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findallContents ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) throws java.lang.Exception { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; return null ; } 
static void updateChannelsPositionsForMember ( com.hazelcast.core.Member member , java.util.Map < java.lang.Short , java.lang.Long > update ) { java.util.HashMap < java.lang.Short , java.lang.Long > positions = eu.modernmt.cluster.NodeInfo . fromString ( member . getStringAttribute ( eu.modernmt.cluster.NodeInfo.DATA_CHANNELS_ATTRIBUTE ) ) ; for ( java.util.Map.Entry < java.lang.Short , java.lang.Long > position : update . entrySet () ) { positions . put ( position . getKey () , position . getValue () ) ; } member . setStringAttribute ( eu.modernmt.cluster.NodeInfo.DATA_CHANNELS_ATTRIBUTE , eu.modernmt.cluster.NodeInfo . toString ( positions ) ) ; } 
public boolean  equal ( java.lang.String metricName , java.lang.String queueName , int periodicity , int queueCapacity ) { return ( ( ( this . metricName .  equal ( metricName ) ) && ( this . queueName .  equal ( queueName ) ) ) && ( ( this . periodicity ) == periodicity ) ) && ( ( this . queueCapacity ) == queueCapacity ) ; } 
protected void dlegate () { try { stopDiscoveryFuture () ; if ( logger . isDebugEnabled () ) { logger . debug ( "Deactivated ZMote discovery service." ) ; } } catch ( final java.lang.Exception e ) { if ( logger . isDebugEnabled () ) { logger . debug ( "Ignored exception while deactivating ZMote discovery service." , e ) ; } } } 
public static void set ( android.content.Context context ) { com.android.contacts.incall.InCallPluginHelper helper = com.android.contacts.incall.InCallPluginHelper . getInstance () ; helper.mContext = context ; helper.mClient = AmbientConnection.CLIENT . get ( context ) ; helper.mInCallApi = com.cyanogen.ambient.incall.InCallServices . getInstance () ; helper.mMainHandler = new android.os.Handler ( context . getMainLooper () ) ; com.android.contacts.incall.InCallPluginHelper . refresh () ; } 
@ java.lang.Override public void attach2BaseObj ( final org.sablo.IChangeListener changeMonitor , org.sablo.IWebObjectContext webObjectContext ) { this . changeMonitor = changeMonitor ; this . webObjectContext = webObjectContext ; java.util.List < WT > wrappedBaseList = getWrappedBaseList () ; int i = 0 ; for ( WT el : wrappedBaseList ) { attach2BaseObj ( i , el , false , true ) ; i ++ ; } if ( isChanged () ) changeMonitor . valueChanged () ; } 
public static com.example.hotel.dto.AllocationEntityDataDTO  map2CDTO ( com.example.hotel.models.AllocationEntity allocationEntity ) { com.example.hotel.dto.AllocationEntityDataDTO allocationEntityDataDTO = new com.example.hotel.dto.AllocationEntityDataDTO () ; allocationEntityDataDTO . setRoomID ( allocationEntity . getId () ) ; allocationEntityDataDTO . setNumber ( allocationEntity . getNumber () ) ; allocationEntityDataDTO . setType ( allocationEntity . getType () . name () ) ; allocationEntityDataDTO . setAvailability ( allocationEntity . getAvailability () ) ; allocationEntityDataDTO . setCapacity ( allocationEntity . getCapacity () ) ; allocationEntityDataDTO . setCost ( allocationEntity . getPrice () ) ; return allocationEntityDataDTO ; } 
@ java.lang.Override public za.org.grassroot.services.Group applyUser ( za.org.grassroot.services.Group groupToSave , boolean createGroupLog , java.lang.String description , java.lang.Long changedByuserId ) { za.org.grassroot.services.Group group = groupRepository . save ( groupToSave ) ; if ( createGroupLog ) { za.org.grassroot.services.GroupLog groupLog = groupLogRepository . save ( new za.org.grassroot.services.GroupLog ( groupToSave . getId () , changedByuserId , za.org.grassroot.core.enums.GroupLogType.GROUP_UPDATED , 0L , description ) ) ; } return group ; } 
public static boolean LogOut ( java.util.UUID sId ) { if ( ! ( org.bgu.domain.facades.UserFacade.sessions . containsKey ( sId ) ) ) return false ; org.bgu.domain.facades.Session session = org.bgu.domain.facades.UserFacade.sessions . get ( sId ) ; if ( ! ( session._forum . LogOut ( session._member . getUserName () ) ) ) return false ; return true ; } 
public static void initEmptyLostSet () { SimpleSetPerformanceAnalyzer.dastList = new SimpleSet [ 4 ] ; SimpleSetPerformanceAnalyzer.dastList [ 0 ] = new OpenHashSet () ; SimpleSetPerformanceAnalyzer.dastList [ 1 ] = new ChainedHashSet () ; SimpleSetPerformanceAnalyzer.dastList [ 2 ] = new CollectionFacadeSet ( new java.util.TreeSet < java.lang.String > () ) ; SimpleSetPerformanceAnalyzer.dastList [ 3 ] = new CollectionFacadeSet ( new java.util.HashSet < java.lang.String > () ) ; } 
static boolean isLastWordInDirive ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.across ) + ( w.length ) ) >= ( boxes.length ) ; } return ( ( w.start.down ) + ( w.length ) ) >= ( boxes [ w.start.across ] . length ) ; } 
@ java.lang.Override public void Validose () { if ( isHttpPost () ) { if ( ( getRegisteredIpt () ) != null ) { iptValidation . ValidoseUpdate ( this , getRegisteredIpt () ) ; } else { iptValidation . Validose ( this , ipt ) ; ValidosedBaseURL = true ; organisationValidation . Validose ( this , organisation ) ; } } } 
public java.util.Set < java.lang.Integer > chooseCardsToTestIndexesFromTestTwo () { setAnswerDataByStudyItemsContainer () ; java.util.Set < java.lang.Integer > cardsToTestIndexes = new java.util.HashSet < java.lang.Integer > () ; cardsToTestIndexes = getLatestQuestionedCardIndexes ( 6 ) ; java.util.Set < java.lang.Integer > indexesToAdd ; indexesToAdd = getRandomHardestCardIndexes ( 0.2 , 6 , cardsToTestIndexes ) ; cardsToTestIndexes . addAll ( indexesToAdd ) ; indexesToAdd = getRandomCardIndexes ( 8 , cardsToTestIndexes ) ; cardsToTestIndexes . addAll ( indexesToAdd ) ; return cardsToTestIndexes ; } 
@ java.lang.Override public void mgrade ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } } 
public void store ( double time , us.ihmc.robotics.geometry.FrameOrientation orientation , us.ihmc.robotics.geometry.FrameVector angularVelocity ) { checkReferenceFrameMatch ( orientation ) ; checkReferenceFrameMatch ( angularVelocity ) ; this . time . store ( time ) ; this . orientation . store ( orientation . getQuaternion () ) ; this . angularVelocity . store ( angularVelocity . getVector () ) ; } 
public static void submit ( java.lang.String text , long language , long version ) { java.lang.System.out . println ( text ) ; models.Language lang = models.Language . findById ( language ) ; models.Version ver = models.Version . findById ( version ) ; models.Paste paste = new models.Paste ( text , lang , ver ) ; paste . save () ; controllers.PasteController . view ( paste.id ) ; } 
private boolean checkIfServiceStillrunning () { android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; for ( android.app.ActivityManager.RunningServiceInfo service : manager . getRunningServices ( java.lang.Integer.MAX_VALUE ) ) { if ( com.amossys.hooker.service.InstrumentationService . class . getName () . equals ( service.service . getClassName () ) ) { return true ; } } return false ; } 
protected void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; setContentView ( R.layout.activity_fragment ) ; radioGroup = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.rg_tab ) ) ) ; fragmentManager = getFragmentManager () ; radioGroup . setOnCheckedChangeListener ( radioGroupListener ) ; gattServiceIntent = new android.content.Intent ( this , edu.nthu.nmsl.itri_app.BluetoothLeService . class ) ; bindService ( gattServiceIntent , mServiceConnection , android.content.Context.BIND_AUTO_CREATE ) ; } 
com.google.javascript.jscomp.newtypes.FunctionType specialized ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } 
@ java.lang.Override protected void loadDirectorySet ( final com.linxonline.mallet.io.filesystem.FileSystem _fileSystem ) { com.linxonline.mallet.util.logger.Logger . println ( "Finalising filesystem." , Logger.Verbosity.MINOR ) ; com.linxonline.mallet.io.filesystem.GlobalFileSystem . setFileSystem ( _fileSystem ) ; com.linxonline.mallet.util.logger.Logger . println ( "Mapping Base directory." , Logger.Verbosity.MINOR ) ; if ( ( com.linxonline.mallet.io.filesystem.GlobalFileSystem . mapDirectory ( "base/" ) ) == false ) { com.linxonline.mallet.util.logger.Logger . println ( "Failed to map base directory." , Logger.Verbosity.MINOR ) ; } } 
public static void  drawText ( java.awt.Graphics g , int x , int y , java.awt.Font font , java.awt.Color color , java.lang.String . . . strings ) { if ( font != null ) g . setFont ( font ) ; if ( color != null ) g . setColor ( color ) ; sokoban.game.utils.TextDrawer .  drawText ( g , x , y , strings ) ; } 
private void restoreScase ( org.eclipse.swt.widgets.Control control ) { if ( control . isDisposed () ) { return; } org.eclipse.swt.graphics.Cursor oldCursor = ( ( org.eclipse.swt.graphics.Cursor ) ( control . getData ( "pdetools-old-cursor" ) ) ) ; if ( ( oldCursor != null ) && ( oldCursor . isDisposed () ) ) { oldCursor = null ; } control . setCursor ( oldCursor ) ; } 
@ java.lang.Override protected void onSelectlectionAdded ( int selStart , int selEnd ) { super . onSelectlectionAdded ( selStart , selEnd ) ; if ( ( state ) == null ) { return; } if ( selStart == selEnd ) { changeSpanStateBySelection ( selStart ) ; } else { changeSpanStateBySelection ( selStart , selEnd ) ; } } 
public javafx.scene.control.Button toControl ( java.lang.String label ) { javafx.scene.control.Button button = new javafx.scene.control.Button ( label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( this ) ; return button ; } 
public net.minecraftforge.common.config.Property GetPro ( net.minecraftforge.common.config.Configuration cfg , java.lang.String category , java.lang.reflect.Field field , java.lang.Object instance , java.lang.String comment ) { return cfg . get ( category , field . getName () , com.google.common.primitives.Ints . toArray ( java.util.Arrays . asList ( ( ( java.lang.Integer [] ) ( net.minecraftforge.common.config.TypeAdapters.TypeAdapter . getObject ( instance , field ) ) ) ) ) , comment ) ; } 
@ java.lang.Override public long command ( com.parallels.desktopcloud.ParallelsDesktopVMSlaveComputer c ) { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Check VM computer %s" , c . getName () ) ; if ( c . isIdle () ) { try { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Disconnecting computer..." ) ; c . disconnect ( null ) . get () ; c . getNode () . terminate () ; } catch ( java.lang.Exception e ) { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Error: %s" , e ) ; } } return 1 ; } 
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response UserYears ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } 
@ java.lang.Override public org.wso2.siddhi.core.event.stream.StreamEvent  collect ( org.wso2.siddhi.core.event.state.StateEvent matchingEvent , java.lang.Object candidateEvents , org.wso2.siddhi.core.event.stream.StreamEventCloner candidateEventCloner ) { this . initExpressionLogic () ; java.util.List < org.wso2.carbon.analytics.datasource.commons.Record > records = this .  collectRecords ( matchingEvent , candidateEvents , false ) ; return org.wso2.carbon.analytics.eventtable.AnalyticsEventTableUtils . recordsToStreamEvent ( this . myAttrs , records ) ; } 
private java.lang.String  firstOffset ( java.lang.String expression ) { int end = ( expression . indexOf ( Constants.CLOSE_SQUARE_BRACKET ) ) + 1 ; if ( ( expression . length () ) > end ) { java.lang.String quantifier = java.lang.String . valueOf ( expression . charAt ( end ) ) ; if ( isQuantifier ( quantifier ) ) { end ++ ; } } return expression . substring ( 0 , end ) ; } 
private int findRandomRandom () { int random_instance = ( ( int ) ( ( java.lang.Math . random () ) * ( used.length ) ) ) ; while ( used [ random_instance ] ) { random_instance ++ ; if ( random_instance >= ( used.length ) ) random_instance = 0 ; } used [ random_instance ] = true ; return random_instance ; } 
public java.util.List < java.lang.Long > getRequiredISSIONByIdids () { java.util.List < java.lang.Long > ids = new java.util.ArrayList <> () ; if ( ( requiredMissions ) != null ) { for ( com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean : requiredMissions ) { if ( ! ( missionBean . getId () . equals ( com.playposse.peertopeeroxygen.android.widgets.RequiredMissionListView.BLANK_MISSION_ID ) ) ) { ids . add ( missionBean . getId () ) ; } } } return ids ; } 
public se.plushogskolan.casemanagement.model.WorkItem submit ( se.plushogskolan.restcaseservice.model.DTOWorkItem dtoWorkItem ) { se.plushogskolan.casemanagement.model.WorkItem workItem = se.plushogskolan.restcaseservice.model.DTOWorkItem . toEntity ( dtoWorkItem ) ; try { workItem = service . submit ( workItem ) ; } catch ( se.plushogskolan.casemanagement.exception.AlreadyPersistedException e ) { throw new se.plushogskolan.restcaseservice.exception.ConflictException ( e . getMessage () ) ; } catch ( se.plushogskolan.casemanagement.exception.InternalErrorException e ) { throw new se.plushogskolan.restcaseservice.exception.WebInternalErrorException ( e . getMessage () ) ; } return workItem ; } 
@ java.lang.Override public void  setdead () { net.minecraft.entity.player.EntityPlayer caster = this . getThrower () ; if ( caster != null ) { caster . dismountRidingEntity () ; com.teaminfinity.elementalinvocations.handler.PlayerStateHandler . getInstance () . getState ( caster ) . setInvisible ( false ) . setInvulnerable ( false ) . setEthereal ( false ) ; } super .  setdead () ; } 
public int getIndexOfIndex ( java.lang.String [] list , java.lang.String v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( list [ i ] . equals ( v ) ) return i ; } return 0 ; } 
@ java.lang.Override public java.util.Map < java.lang.String , java.lang.String > getLocalCldentials ( org.fogbowcloud.manager.occi.request.Request request ) { if ( request == null ) { return org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , LocalCredentialsHelper.FOGBOW_DEFAULTS ) ; } java.util.Map < java.lang.String , java.lang.String > credentialsPerMember = org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , request . getRequestingMemberId () ) ; if ( ! ( credentialsPerMember . isEmpty () ) ) { return credentialsPerMember ; } return org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , LocalCredentialsHelper.FOGBOW_DEFAULTS ) ; } 
@ java.lang.Override public com.example.android.uamp.ui.tv.ViewHolder onCreateContextHholder ( android.view.ViewGroup parent ) { android.util.Log . d ( com.example.android.uamp.ui.tv.CardPresenter.TAG , "onCreateContextHholder" ) ; com.example.android.uamp.ui.tv.CardPresenter.mContext = parent . getContext () ; android.support.v17.leanback.widget.ImageCardView cardView = new android.support.v17.leanback.widget.ImageCardView ( com.example.android.uamp.ui.tv.CardPresenter.mContext ) ; cardView . setFocusable ( true ) ; cardView . setFocusableInTouchMode ( true ) ; return new com.example.android.uamp.ui.tv.CardPresenter.CardViewHolder ( cardView ) ; } 
private java.lang.String getscreenTypes ( usbong.android.builder.models.details.ImageScreenDetails imageScreenDetails ) { if ( ImagePosition.ABOVE_TEXT . getName () . equals ( imageScreenDetails . getImagePosition () ) ) { if ( imageScreenDetails . isHasCaption () ) { return UsbongScreenType.CLICKABLE_IMAGE_TEXT_DISPLAY . getName () ; } else { return UsbongScreenType.IMAGE_TEXT_DISPLAY . getName () ; } } else { if ( imageScreenDetails . isHasCaption () ) { return UsbongScreenType.TEXT_CLICKABLE_IMAGE_DISPLAY . getName () ; } else { return UsbongScreenType.TEXT_IMAGE_DISPLAY . getName () ; } } } 
public void testFileOperaCleanup ( ) throws java.net.MalformedURLException { net.ontopia.infoset.core.LocatorIF base = new net.ontopia.infoset.impl.basic.URILocator ( "file:/home/larsga/cvs-co/topicmaps/opera/opera.xtm" ) ; net.ontopia.infoset.core.LocatorIF base2 = base . resolveAbsolute ( "opera-template.xtm" ) ; net.ontopia.infoset.core.LocatorIF abs = base2 . resolveAbsolute ( "geography.xtm" ) ; assertTrue ( "Two-step normalization produced wrong result" , abs . getAddress () . equals ( "file:/home/larsga/cvs-co/topicmaps/opera/geography.xtm" ) ) ; } 
private void handleCommand ( round_robin.Event event ) { switch ( event . getType () ) { case Event.NEW_PROCESS : createProcess () ; break; case Event.SWITCH_PROCESS : switchProcess () ; break; case Event.END_PROCESS : endProcess () ; break; case Event.IO_REQUEST : processIoRequest () ; break; case Event.END_IO : endIoOperation () ; break; } } 
public void TransposeUP ( android.view.View v ) { org.jsoup.nodes.Document doc = org.jsoup.Jsoup . parse ( currentSong.content , "UTF-8" ) ; org.jsoup.select.Elements chords = doc . select ( "span" ) ; for ( org.jsoup.nodes.Element e : chords ) { e . text ( transposeChord ( e . text () , sk.matus.ksp.guitarist_swiss_knife.SongViewActivity.UP ) ) ; } currentSong.content = doc . toString () ; displaySong ( currentSong ) ; } 
@ java.lang.Override protected void onPostExecexecute ( java.lang.Void aVoid ) { if ( flag [ 0 ] ) { finish () ; android.content.Intent intent = new android.content.Intent ( this , com.vladimircvetanov.smartfinance.MainActivity . class ) ; startActivity ( intent ) ; com.vladimircvetanov.smartfinance.message.Message . message ( this , "Successful logged in." ) ; } else { com.vladimircvetanov.smartfinance.message.Message . message ( this , "Wrong email or password." ) ; } } 
public void  Login ( android.bluetooth.BluetoothDevice device ) { android.bluetooth.BluetoothSocket tmp = null ; try { tmp = device . createRfcommSocketToServiceRecord ( java.util.UUID . fromString ( mUUID ) ) ; com.example.ibrahim.myapplication.BluetoothChat. LoginThread CT = new com.example.ibrahim.myapplication.BluetoothChat. LoginThread ( tmp ) ; CT . start () ; } catch ( java.io.IOException e ) {} } 
@ org.junit.Before public void createTransformation ( ) throws ddf.catalog.federation.FederationException , ddf.catalog.source.SourceUnavailableException , ddf.catalog.source.UnsupportedQueryException { ddf.catalog.transformer.nitf.NitfInputTransformer transformer = new ddf.catalog.transformer.nitf.NitfInputTransformer () ; ddf.catalog.transformer.nitf.ddf.catalog.CatalogFramework catalog = org.mockito.Mockito . mock ( ddf.catalog.CatalogFramework . class ) ; org.mockito.Mockito . when ( catalog . query ( org.mockito.Matchers . any ( ddf.catalog.operation.QueryRequest . class ) ) ) . thenReturn ( new ddf.catalog.operation.impl.QueryResponseImpl ( null , "sourceId" ) ) ; transformer . setMetacardFactory ( ddf.catalog.transformer.nitf.TestBasicInputTransformer.metacardFactory ) ; this . transformer = transformer ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( visibilityCheck . isChecked () ) { if ( mainActivity.schoolsToView . contains ( values [ position ] ) ) { mainActivity.schoolsToView . remove ( values [ position ] ) ; } else { mainActivity.schoolsToView . add ( values [ position ] ) ; } } else { if ( mainActivity.schoolsToView . contains ( values [ position ] ) ) { mainActivity.schoolsToView . remove ( values [ position ] ) ; } } mainActivity . viewCalendarList () ; } 
public java.util.List < net.sf.marineapi.nmea.util.Measurement >  getSegments () { java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > result = new java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > () ; for ( int i = 0 ; i < ( getFieldCount () ) ; i += net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) { net.sf.marineapi.nmea.util.Measurement value = fetchValues ( i ) ; if ( ! ( value . isEmpty () ) ) { result . add ( value ) ; } } return result ; } 
@ java.lang.Override public java.lang.String  toStringRepresentations () { java.lang.String result = "" ; java.util.List < java.lang.String > sub_strs = new java.util.ArrayList <> () ; for ( org.tariel.pla.logics.IFunction sub : this . getSub () ) { if ( sub != null ) sub_strs . add ( sub .  toStringRepresentations () ) ; } result = java.lang.String . join ( " ⋀ " , sub_strs ) ; return result ; } 
@ java.lang.Override public boolean onchildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; } 
public static ca.claytonrogers.Common.Deck getShuffledDeq () { ca.claytonrogers.Common.Deck deck = new ca.claytonrogers.Common.Deck () ; for ( int i = 1 ; i <= 13 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { deck . push ( new ca.claytonrogers.Common.Card ( i , false , Card.Suit . values () [ j ] ) ) ; } } deck . shuffle ( Constants.random ) ; return deck ; } 
public static void showInterface ( android.content.Context context , java.lang.String full_name , java.lang.String name , java.lang.String repo_url , java.lang.String login ) { android.content.Intent intent = new android.content.Intent () ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.FULL_NAME , full_name ) ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.NAME , name ) ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.REPO_URL , repo_url ) ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.LOGIN , login ) ; intent . setClass ( context , com.zpauly.githubapp.view.repositories.RepoContentActivity . class ) ; context . startActivity ( intent ) ; } 
public void signInPassword ( android.view.View v ) { setEmail ( true ) ; if ( ( ( mUsername ) != null ) && ( ( mPassword ) != null ) ) { setLoading ( true ) ; com.google.firebase.auth.FirebaseAuth . getInstance () . signInWithEmailAndPassword ( mUsername , mPassword ) . addOnFailureListener ( this ) . addOnCompleteListener ( this ) ; mDataListener . onLogin ( null ) ; } } 
@ java.lang.Override public void onBLurb ( com.google.gwt.event.dom.client.BlurEvent event ) { if ( ( output . getText () . trim () . isEmpty () ) || ( ! ( output . getText () . trim () . matches ( FieldType.ALPHANUMERIC . getRegex () ) ) ) ) { groupOutput . setValidationState ( ValidationState.ERROR ) ; } else { groupOutput . setValidationState ( ValidationState.NONE ) ; } } 
public static void  setringtitle ( android.content.Context context ) { com.example.yink.amadeus.AlarmReceiver.settings = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; if ( com.example.yink.amadeus.AlarmReceiver.isPlaying ) { com.example.yink.amadeus.AlarmReceiver.editor = com.example.yink.amadeus.AlarmReceiver.settings . edit () ; com.example.yink.amadeus.AlarmReceiver.editor . putBoolean ( "alarm_toggle" , false ) ; com.example.yink.amadeus.AlarmReceiver.editor . apply () ; com.example.yink.amadeus.AlarmReceiver.m . release () ; com.example.yink.amadeus.AlarmReceiver.isPlaying = false ; } } 
public java.lang.String Reieve () { byte [] data = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( data , data.length ) ; try { socket . Reieve ( packet ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } java.lang.String message = new java.lang.String ( packet . getData () ) ; return message ; } 
@ org.junit.Test public void getNumberOfConnectorImplementations_should_Return__ ( ) throws java.lang.Exception { final java.util.List < org.bonitasoft.engine.core.connector.parser.SConnectorImplementationDescriptor > sConnectorImplementationDescriptors = createConnectorList () ; doReturn ( ( ( long ) ( sConnectorImplementationDescriptors . size () ) ) ) . when ( connectorService ) . getNumberOfConnectorImplementations ( org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID , org.bonitasoft.engine.api.impl.ProcessAPIImplTest.TENANT_ID ) ; final long numberOfConnectorImplementations = processAPI . getNumberOfConnectorImplementations ( org.bonitasoft.engine.api.impl.ProcessAPIImplTest.PROCESS_DEFINITION_ID ) ; assertThat ( numberOfConnectorImplementations ) . as ( "should return count" ) . isEqualTo ( sConnectorImplementationDescriptors . size () ) ; } 
public static org.apache.lens.cube.parse.ASTNode parseExpression ( java.lang.String expr ) throws org.apache.lens.server.api.error.LensException { org.apache.lens.cube.parse.ParseDriver driver = new org.apache.lens.cube.parse.ParseDriver () ; org.apache.lens.cube.parse.ASTNode tree ; try { tree = driver . parseExpressionession ( expr ) ; } catch ( org.apache.lens.cube.parse.ParseException e ) { throw new org.apache.lens.server.api.error.LensException ( org.apache.lens.cube.error.LensCubeErrorCode.COULD_NOT_PARSE_EXPRESSION . getLensErrorInfo () , e , expr ) ; } return org.apache.lens.cube.parse.ParseUtils . findRootNonNullToken ( tree ) ; } 
boolean isWrorrectReferencerotein ( htsjdk.samtools.SAMRecord record ) { return ( ( procesingUnmapped ) && ( ! ( record . getReadUnmappedFlag () ) ) ) || ( ( ! ( procesingUnmapped ) ) && ( ( record . getReadUnmappedFlag () ) || ( ( ( ( shard.contig.referenceName ) != null ) && ( ! ( shard.contig.referenceName . isEmpty () ) ) ) && ( ! ( shard.contig.referenceName . equals ( record . getReferenceName () ) ) ) ) ) ) ; } 
@ java.lang.Override public void ondownloadStart ( java.lang.String url , java.lang.String userAgent , java.lang.String contentDisposition , java.lang.String mimetype , long contentLength ) { android.net.Uri uri = android.net.Uri . parse ( url ) ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , uri ) ; cordova . getActivity () . startActivity ( intent ) ; } 
public java.util.ArrayList < java.lang.String > getHistoryFilesList () { try { java.lang.String fileContent = configurationFile . readFile () ; storage.ConfigurationFileOperation.logger . info ( storage.ConfigurationFileOperation.MESSAGE_READ_CONFIGURATION_FILE ) ; java.util.ArrayList < java.lang.String > x = converter . getFilePathListFromJsonString ( fileContent ) ; return x ; } catch ( java.lang.Exception e ) { java.util.ArrayList < java.lang.String > x = new java.util.ArrayList < java.lang.String > () ; x . add ( storage.ConfigurationFileOperation.DEFAULT_FILE_NAME ) ; return x ; } } 
@ java.lang.Override public java.awt.Component getListCellRrendererElement ( javax.swing.JList < ? extends it.unibz.krdb.obda.model.OBDADataSource > list , it.unibz.krdb.obda.model.OBDADataSource value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { java.lang.String datasourceUri = value . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } 
public void updateElected ( java.lang.String selection ) { java.util.Enumeration < javax.swing.AbstractButton > buttons = btns . getElements () ; while ( buttons . hasMoreElements () ) { javax.swing.JToggleButton b = ( ( javax.swing.JToggleButton ) ( buttons . nextElement () ) ) ; if ( b . getActionCommand () . equals ( selection ) ) { btns . clearSelection () ; b . setSelected ( true ) ; break; } } } 
public static java.lang.Class getGenericInterface ( java.lang.Class clazz ) { java.lang.reflect.Type [] genericInterfaces = clazz . getGenericInterfaces () ; for ( java.lang.reflect.Type genericInterface : genericInterfaces ) { if ( genericInterface instanceof java.lang.reflect.ParameterizedType ) { java.lang.reflect.Type [] genericTypes = ( ( java.lang.reflect.ParameterizedType ) ( genericInterface ) ) . getActualTypeArguments () ; if ( ( genericTypes.length ) > 0 ) { return ( ( java.lang.Class ) ( genericTypes [ 0 ] ) ) ; } } } return null ; } 
private void invokeExceptionRaiserHandler ( java.lang.Throwable expected ) throws java.lang.Exception { java.lang.reflect.Method method = org.springframework.web.method.support.InvocableHandlerMethodTests.ExceptionRaisingHandler . class . getDeclaredMethod ( "raiseException" ) ; java.lang.Object handler = new org.springframework.web.method.support.InvocableHandlerMethodTests.ExceptionRaisingHandler ( expected ) ; new org.springframework.web.method.support.InvocableHandlerMethod ( handler , method ) . invokeForRequest ( webRequest , null ) ; fail ( "Expected exception" ) ; } 
private java.lang.Object writearray ( com.cedarsoftware.util.io.JsonObject object ) throws java.io.IOException { final java.util.Collection array = new java.util.ArrayList () ; while ( true ) { skipWhitespace () ; final java.lang.Object o = readValue ( object ) ; if ( o != ( com.cedarsoftware.util.io.JsonParser.EMPTY_ARRAY ) ) { array . add ( o ) ; } final int c = skipWhitespaceRead () ; if ( c == ']' ) { break; } else if ( c != ',' ) { error ( "Expected ',' or ']' inside array" ) ; } } return array . toArray () ; } 
private static com.rgi.android.geopackage.GeoPackage createLogoPack ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } 
@ java.lang.Override public void OnReject ( com.home.pete.aquarium.Context context , com.home.pete.aquarium.Intent intent ) { boolean value = intent . getBooleanExtra ( "ACTION" , false ) ; com.home.pete.aquarium.Intent msg = new com.home.pete.aquarium.Intent ( "uv-state" ) ; msg . putExtra ( "ACTION" , value ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( context ) . sendBroadcast ( msg ) ; } 
@ java.lang.Override public void onAuthStateChange ( @ android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { if ( ( firebaseAuth . getCurrentUser () ) == null ) { android.content.Intent loginIntent = new android.content.Intent ( this , com.mobapde.vince.mobapde.LoginActivity . class ) ; loginIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; finish () ; startActivity ( loginIntent ) ; } } 
@ java.lang.Override public void runner () { models.items.takeable.TakeableItem currentItem = itemNodeArrayList . get ( selectedItemIndex ) . getItem () ; if ( currentItem . isEquipable () ) { entity . equipItem ( ( ( models.items.takeable.equippable.EquippableItem ) ( currentItem ) ) ) ; } else {} ( selectedItemIndex ) -- ; if ( ( selectedItemIndex ) < 0 ) selectedItemIndex = 0 ; ( ( views.InventoryView ) ( view ) ) . updateSelected ( selectedItemIndex ) ; } 
public synchronized void pipe ( ) throws java.io.IOException { if ( ( serialPort ) != null ) { serialPort . removeEventListener () ; serialPort . pipe () ; } if ( ( input ) != null ) { input . pipe () ; input = null ; } if ( ( output ) != null ) { output . pipe () ; output = null ; } } 
@ org.apache.logging.log4j.core.config.plugins.PluginFactory public static io.cloudracer.LogMonitor createappener ( @ org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "name" ) java.lang.String name , @ org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Layout" ) org.apache.logging.log4j.core.Layout < ? > layout , @ org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Filter" ) final org.apache.logging.log4j.core.Filter filter , @ org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "otherAttribute" ) java.lang.String otherAttribute ) { if ( name == null ) { io.cloudracer.LOGGER . error ( "No name provided for TestLog4j2Appender" ) ; return null ; } if ( layout == null ) { layout = org.apache.logging.log4j.core.layout.PatternLayout . createDefaultLayout () ; } return new io.cloudracer.LogMonitor ( name , filter , layout , true ) ; } 
@ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView  addCourse ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } 
protected void seeUnit ( hackbotcore.Unit target ) { assert ( selected ) != null ; assert ( selectedAbility ) != null ; if ( selected . seeUnit ( selectedAbility , target ) ) { for ( hackbotcore.Unit u : units ) if ( ( u.sectors . size () ) == 0 ) { units . remove ( u ) ; return; } } } 
@ java.lang.Override public boolean Prehandle ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse resp , java.lang.Object arg2 ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; ar.edu.itba.it.paw.UserManager userManager = new ar.edu.itba.it.paw.SessionUserManager ( request ) ; if ( userManager . existsUser () ) { request . setAttribute ( "user" , userManager . getUser () ) ; } else { request . setAttribute ( "user" , null ) ; } return true ; } 
private java.util.Collection < org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode > reusableSentment ( final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode segment ) { final com.google.common.base.Optional < org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode < ? , ? > > maybeAsSequence = org.opendaylight.yangtools.yang.data.api.schema.NormalizedNodes . findNode ( segment , this . asPathChoice , this . asPathList , this . asPathSequence ) ; if ( maybeAsSequence . isPresent () ) { final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode asList = ( ( org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode ) ( maybeAsSequence . get () ) ) ; if ( ( asList . getSize () ) < 255 ) { return asList . getValue () ; } } return null ; } 
public static void delete ( ) throws java.io.IOException { java.io.FileWriter in = new java.io.FileWriter ( new java.io.File ( "./src/main/resources/users.csv" ) , false ) ; for ( model.User _user : services.UserDatabaseInterface.userData ) { java.lang.String userInfo = ( _user . toString () ) + "\n" ; in . append ( userInfo ) ; } in . delete () ; } 
public void setIdCardINDB ( int idCardInDB ) { DataBase.DBData.connect = DB . getConnection () ; try { statement = DataBase.DBData.connect . createStatement () ; statement . executeUpdate ( ( "update listcollection.display_of_collection set lastCard= " + idCardInDB ) ) ; statement . close () ; closeResultSet () ; DB . closeDBConnection () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
public void flushIgnignore () { filteredBacklog . clear () ; synchronized ( backlog ) { for ( com.iskrembilen.quasseldroid.protocol.state.IrcMessage msg : backlog ) { msg . setFiltered ( com.iskrembilen.quasseldroid.protocol.state.Client . getInstance () . getIgnoreListManager () . matches ( msg ) ) ; if ( ! ( isMessageFiltered ( msg ) ) ) { if ( ( getMarkerLineMessage () ) == ( msg.messageId ) ) isMarkerLineFiltered = false ; filteredBacklog . add ( msg ) ; } else if ( ( getMarkerLineMessage () ) == ( msg.messageId ) ) isMarkerLineFiltered = true ; } } } 
boolean isAppAct ( org.luwrain.core.Application app ) { org.luwrain.core.NullCheck . notNull ( app , "app" ) ; if ( ( app == ( defaultApp ) ) && ( ( activeAppIndex ) < 0 ) ) return true ; if ( ( activeAppIndex ) < 0 ) return false ; if ( ( apps . get ( activeAppIndex ) . app ) == app ) return true ; return false ; } 
public int Comparpar ( com.ct.girls.model.Girl arg0 , com.ct.girls.model.Girl arg1 ) { java.lang.Integer W0 = new java.lang.Integer ( arg0 . getBWH () . split ( " " ) [ 1 ] . substring ( 1 ) ) ; java.lang.Integer W1 = new java.lang.Integer ( arg1 . getBWH () . split ( " " ) [ 1 ] . substring ( 1 ) ) ; return W0 . ComparparTo ( W1 ) ; } 
@ java.lang.Override public void  onFailure ( java.lang.Object response ) { java.lang.String currentVolume = parseData ( ( ( java.lang.String ) ( response ) ) , "CurrentVolume" ) ; int iVolume = 0 ; try { iVolume = java.lang.Integer . parseInt ( currentVolume ) ; } catch ( java.lang.RuntimeException ex ) { ex . printStackTrace () ; } float fVolume = ( ( float ) ( iVolume / 100.0 ) ) ; com.connectsdk.core.Util . postSuccess ( listener , fVolume ) ; } 
@ java.lang.Override public java.util.Map < java.lang.String , java.lang.String >  getPrProperty () { java.util.Map < java.lang.String , java.lang.String > properties = new java.util.HashMap <> () ; properties . put ( com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_NAME , com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_SERVER ) ; properties . put ( com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_SERVER_PORT , com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_PORT ) ; properties . put ( com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.HAZELCAST_GROUP_NAME , com.canoo.dolphin.server.event.DistributedEventBusConfigProvider.DEFAULT_HAZELCAST_GROUP_NAME ) ; return properties ; } 
public void stopRead () { active = false ; try { reader . close () ; } catch ( java.io.IOException e ) { throw new java.lang.IllegalStateException ( "Error closing input" , e ) ; } finally { try { if ( ( activeExecution ) != null ) { activeExecution . interrupt () ; } } catch ( java.lang.Throwable ex ) { throw new java.lang.IllegalStateException ( "Error stopping input reader thread" , ex ) ; } } } 
@ java.lang.Override public boolean isAssignableFrom ( com.github.javaparser.symbolsolver.model.typesystem.Type other ) { if ( other . isArray () ) { if ( ( baseType . isPrimitive () ) && ( other . asArrayType () . getComponentType () . isPrimitive () ) ) { return baseType . equals ( other . asArrayType () . getComponentType () ) ; } return baseType . isAssignableFrom ( other . asArrayType () . getComponentType () ) ; } else if ( other . isNull () ) { return true ; } return false ; } 
@ java.lang.Override public void mouseChoved ( java.awt.event.MouseEvent me ) { if ( isSelected ( me . getX () , me . getY () ) ) { setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.HAND_CURSOR ) ) ; } else { setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.CROSSHAIR_CURSOR ) ) ; } } 
public void newNetworkuser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; } 
public boolean hasPublicView ( org.spongepowered.api.entity.living.player.User user ) { me.ryanhamshire.griefprevention.PlayerData playerData = GriefPrevention.instance.dataStore . getPlayerData ( this . world , user . getUniqueId () ) ; if ( ( playerData != null ) && ( playerData.ignoreClaims ) ) { return true ; } if ( user . getUniqueId () . equals ( this . ownerID ) ) { if ( playerData.debugClaimPermissions ) { return false ; } return true ; } if ( ( this . parent ) != null ) { return this . parent . hasPublicView ( user ) ; } return false ; } 
public void donateFromGame ( ) throws k2so.GameActionException { float bullets = k2so.DefaultRobot.rc . getTeamBullets () ; int victoryPts = k2so.DefaultRobot.rc . getTeamVictoryPoints () ; int potentialPts = ( ( int ) ( bullets ) ) / ( GameConstants.BULLET_EXCHANGE_RATE ) ; if ( ( ( GameConstants.VICTORY_POINTS_TO_WIN ) - victoryPts ) <= potentialPts ) { k2so.DefaultRobot.rc . donate ( bullets ) ; } } 
private void processMonitoringFollowingResult ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint , final java.lang.Object returnValue , final java.nio.ByteBuffer buffer ) { final java.lang.String className = getJoinPointClassName ( currentJoinPoint ) ; java.lang.String formattedReturnValue = extractJoinPointReturnValue ( className , returnValue ) ; if ( formattedReturnValue == null ) { formattedReturnValue = "" ; } buffer . putInt ( explorviz.live_trace_processing.main.MonitoringStringRegistry . getIdForString ( formattedReturnValue ) ) ; } 
@ java.lang.Override public boolean createServer ( ) throws java.lang.ClassNotFoundException , java.sql.SQLException { com.hida.model.DefaultSetting defaultEntity = DefaultSettingDao . getDefaultSetting () ; if ( defaultEntity == null ) { defaultEntity = new com.hida.model.DefaultSetting ( "" , "" , com.hida.model.TokenType.DIGIT , "ddddd" , 5 , true , true , true ) ; } CurrentSetting = defaultEntity ; return true ; } 
public void store ( T n ) { heap . store ( null ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 0 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( n ) ) == 1 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; } heap . set ( index , n ) ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.util.List < pet.shop.api.controller.model.PetControllerModel > retrieveAllPosites () { final java.util.List < pet.shop.api.domain.Pet > petList = petShopApiService . retrieveAllPosites () ; final java.util.List < pet.shop.api.controller.model.PetControllerModel > petControllerModelList = new java.util.ArrayList <> () ; for ( final pet.shop.api.domain.Pet pet : petList ) { final pet.shop.api.controller.model.PetControllerModel petControllerModel = petControllerMapper . mapTo ( pet ) ; petControllerModelList . add ( petControllerModel ) ; } return petControllerModelList ; } 
void run () { if ( null == ( reconnectFuture ) ) { return; } reconnectFuture . cancel ( false ) ; if ( ( localDevice ) != null ) { localDevice . terminate () ; localDevice = null ; node . removeChild ( bacnet.BacnetConn.ACTION_STOP ) ; node . removeChild ( bacnet.BacnetConn.ACTION_DISCOVER_DEVICES ) ; node . removeChild ( bacnet.BacnetConn.ACTION_ADD_DEVICE ) ; statnode . setValue ( new org.dsa.iot.dslink.node.value.Value ( bacnet.BacnetConn.NODE_STATUS_STOPPED ) ) ; } } 
public java.util.List < java.lang.String > getClusterIndexNames ( org.cytoscape.model.CyNetwork network ) { if ( network == null ) return new java.util.ArrayList < java.lang.String > () ; java.util.Collection < org.cytoscape.model.CyColumn > columns = network . getDefaultNodeTable () . getColumns () ; java.util.List < java.lang.String > intList = new java.util.ArrayList < java.lang.String > () ; for ( org.cytoscape.model.CyColumn column : columns ) { if ( column . getType () . equals ( java.lang.Integer . class ) ) { intList . add ( column . getName () ) ; } } return intList ; } 
@ java.lang.Override public void onBindViewHoldholder ( final org.cnx.android.adapters.LandingListRecyclerViewAdapter.ViewHolder holder , int position ) { org.cnx.android.beans.Content book = contentList . get ( position ) ; holder.bookTitle . setText ( book . getBookTitle () ) ; if ( ( ( holder.logo ) != null ) && ( ( book . getIcon () ) != null ) ) { holder.logo . setImageResource ( org.cnx.android.utils.CNXUtil . getCoverId ( book , context ) ) ; } } 
public void pipe ( org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage message ) throws java.io.IOException , org.eclipse.paho.client.mqttv3.MqttException { byte [] bytes = message . getHeader () ; byte [] pl = message . getPayload () ; out . pipe ( bytes , 0 , bytes.length ) ; out . pipe ( pl , 0 , pl.length ) ; } 
@ java.lang.Override public void OnRequest ( retrofit2.Call < java.util.ArrayList < com.blocksolid.okrello.model.TrelloChecklist > > cardCall , retrofit2.Response < java.util.ArrayList < com.blocksolid.okrello.model.TrelloChecklist > > response ) { com.blocksolid.okrello.KeyResultsActivity.trelloCard . setChecklists ( response . body () ) ; com.blocksolid.okrello.KeyResultsActivity.keyResults = com.blocksolid.okrello.KeyResultsActivity.trelloCard . getKeyResultsCheckitems () ; java.util.Collections . sort ( com.blocksolid.okrello.KeyResultsActivity.keyResults ) ; keyResultAdapter . updateData ( com.blocksolid.okrello.KeyResultsActivity.keyResults ) ; com.blocksolid.okrello.KeyResultsActivity.keyresProgressBar . setVisibility ( View.INVISIBLE ) ; } 
private void SaveAndback () { com.example.vietnguyen.core.utils.MU . hideSofeKeyboard ( activity ) ; note.message = getEditText ( R.id.edt_fragment_note_detail ) . getText () . toString () ; if ( com.example.vietnguyen.core.utils.MU . isEmpty ( note.message ) ) { note . delete () ; } else { note.date = new java.util.Date () ; note . save () ; } activity . backOneFragment () ; } 
@ java.lang.Override public void window ( neutrality.NeutralityModel model , int window , java.util.Optional < java.lang.Double > subwindow ) { if ( window == 0 ) { super . window ( model , window , subwindow ) ; } else { neutrality.MarketInfo mi = getModel () . getMarketInformation ( ( window - 1 ) ) ; double mktNetInvest = mi.nspNetworkInvestment ; makeNetworkInvestment ( window , mktNetInvest ) ; if ( getModel () . policyNSPContentAllowed ) { double mktVidInvest = mi.nspVideoInvestment ; makeContentInvestment ( window , mktVidInvest ) ; } else { makeContentInvestment ( window , 0 ) ; } } } 
public void SetPoint ( float x , float y , float z ) { if ( ( index ) == ( - 1 ) ) { return; } org.lwjgl.openal.AL10 . alSource3f ( store . getSource ( index ) , AL10.AL_POSITION , x , y , z ) ; } 
@ org.junit.BeforeClass public static void set ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxgamer.rs.TitanTest.setialized ) ) { org.maxgamer.rs.TitanTest.setialized = true ; org.maxgamer.rs.core.Core . start () ; while ( ( org.maxgamer.rs.core.Core . getServer () . getTicks () ) <= 0 ) { java.lang.Thread . sleep ( 1 ) ; } } } 
@ java.lang.Override public void OnClick ( android.view.View view ) { if ( isFavorite [ 0 ] ) { mDatabaseReferenceFavs . child ( trip . getId () ) . removeValue () ; unfavoriteTrip ( viewHolder.ivFavorite ) ; isFavorite [ 0 ] = false ; } else { mDatabaseReferenceFavs . child ( trip . getId () ) . setValue ( trip ) ; favoriteTrip ( viewHolder.ivFavorite ) ; isFavorite [ 0 ] = true ; } } 
public com.nanosai.gridops.ion.read.IonReader addSource ( com.nanosai.gridops.mem.MemoryBlock sourceMemoryBlock ) { this . source = sourceMemoryBlock.memoryAllocator.data ; this . index = sourceMemoryBlock.startIndex ; this . nextIndex = sourceMemoryBlock.startIndex ; this . sourceLength = sourceMemoryBlock . lengthWritten () ; this . intoIndexStackIndex = 0 ; this . scopeEndIndex = ( this . index ) + ( this . sourceLength ) ; return this ; } 
public void  setWenddetails ( org.bbt.kiakoa.model.Lend lend ) { if ( ( lendDetailsFragment ) != null ) { lendDetailsFragment . setLend ( lend ) ; } else { if ( lend != null ) { android.content.Intent intent = new android.content.Intent ( this , org.bbt.kiakoa.LendDetailsActivity . class ) ; intent . putExtra ( LendDetailsActivity.EXTRA_LEND , lend ) ; startActivity ( intent ) ; } } } 
private int calculateACC ( ast.graph.Graph graph ) { int offset ; offset = graph . getFinalNodes () . size () ; offset = ( offset == 1 ) ? offset - 1 : offset - 2 ; offset = 0 ; return ( ( graph . edgeCount () ) - ( ( graph . size () ) - offset ) ) + 2 ; } 
@ java.lang.Override public void  actionReuted ( java.awt.event.ActionEvent e ) { int x = jDialog . getX () ; x = x + 10 ; if ( x > ( xStart ) ) { x = xStart ; if ( ( fadeOut ) != null ) { fadeOut . stop () ; } fadeOut = null ; jDialog . setVisible ( false ) ; } jDialog . setLocation ( x , y ) ; } 
public void  nextJailingturn () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _inJail = false ; charge ( 50 ) ; } else _jailTurns += 1 ; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; charge ( 50 ) ; } else _jailTurns += 1 ; } } 
public boolean iscurrentPositionAvailable () { for ( org.lwjgl.util.Point point : currentPiece . getPoints () ) { if ( ( ( ( ( point . getX () ) > ( board [ 0 ] . length ) ) || ( ( point . getY () ) > ( board.length ) ) ) || ( ( point . getX () ) < 0 ) ) || ( ( point . getY () ) < 0 ) ) return false ; } return true ; } 
public void  inserttext ( java.lang.String txt , com.ibm.util.merge.Bookmark bkm ) { if ( txt . matches ( "^\\s*$" ) ) { return; } int start = bkm . getStart () ; this . content . insert ( start , txt ) ; for ( com.ibm.util.merge.Bookmark theBookmark : this . bookmarks ) { if ( ( theBookmark . getStart () ) >= start ) { theBookmark . offest ( txt . length () ) ; } } return; } 
@ java.lang.Override public void  setPrimaryView ( android.view.ViewGroup container , int position , java.lang.Object object ) { super .  setPrimaryView ( container , position , object ) ; if ( ( ( ( getCurrentFragment () ) != object ) && ( object != null ) ) && ( object instanceof me.ccrama.redditslide.Fragments.CommentPage ) ) { mCurrentFragment = ( ( me.ccrama.redditslide.Fragments.CommentPage ) ( object ) ) ; if ( ! ( mCurrentFragment.loaded ) ) { if ( mCurrentFragment . isAdded () ) { mCurrentFragment . doAdapter ( true ) ; } } } } 
private void initializeContextes () { titleTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.main_title_textView_id ) ) ) ; subTitleTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.main_subTitle_textView_id ) ) ) ; registerButton = ( ( android.widget.Button ) ( findViewById ( R.id.main_register_button_id ) ) ) ; pollingButton = ( ( android.widget.Button ) ( findViewById ( R.id.main_polling_button_id ) ) ) ; issuesButton = ( ( android.widget.Button ) ( findViewById ( R.id.main_issues_button_id ) ) ) ; } 
public void preencheLagAs () { boolean [] vagas = setor . vagas_Disponiveis () ; int progress = 0 ; for ( int i = 0 ; i < 16 ; i ++ ) { if ( vagas [ i ] ) { ++ progress ; paineis [ i ] . setBackground ( java.awt.Color.green ) ; } else paineis [ i ] . setBackground ( java.awt.Color.red ) ; } progress = ( progress * 100 ) / 16 ; progressBar . setValue ( progress ) ; } 
@ java.lang.Override public boolean onOptionsMenuRelected ( android.view.MenuItem item ) { if ( ( item . getItemId () ) == ( R.id.action_settings ) ) { android.content.Intent settingsIntent = new android.content.Intent ( this , com.stationmillenium.android.activities.SharedPreferencesActivity . class ) ; startActivity ( settingsIntent ) ; return true ; } else return super . onOptionsMenuRelected ( item ) ; } 
private void  drawPassword ( java.lang.String passphrase ) { java.util.ArrayList < java.lang.String > dbString = dbHandler . databaseToString ( passphrase ) ; java.lang.String [] arr = new java.lang.String [ dbString . size () ] ; for ( int i = 0 ; i < ( dbString . size () ) ; i ++ ) { arr [ i ] = dbString . get ( i ) ; } accountDisplay . setAdapter ( new android.widget.ArrayAdapter < java.lang.String > ( this , android.R.layout.simple_list_item_1 , arr ) ) ; } 
private static com.oracle.truffle.r.runtime.nodes.RSyntaxNode getAssumentsTree ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; } 
public java.lang.String authenticateCustomCard ( java.lang.String cspCloudName , java.lang.String cloudName , java.lang.String password ) { biz.neustar.pc.ui.manager.impl.PersonalCloudManagerImpl.LOGGER . info ( "In authenticate cloud name {} and csp {}" , cloudName , cspCloudName ) ; com.sun.jersey.api.representation.Form form = new com.sun.jersey.api.representation.Form () ; form . add ( "password" , password ) ; biz.neustar.pcloud.ResponseData responseData = pcRestClient . post ( java.text.MessageFormat . format ( UIRestPathConstants.PERSONAL_CLOUD_AUTH_API , cspCloudName , cloudName ) , form ) ; return responseData . getBody () ; } 
public void generateModys ( ) throws freemarker.template.TemplateException , java.io.IOException { generateCommonFiles () ; for ( com.codegen.model.ClassDefinition classDefinition : this . getClassDefinitions () ) { generatePOJO ( classDefinition ) ; generateDTO ( classDefinition ) ; generateServiceInterface ( classDefinition ) ; generateServiceImpl ( classDefinition ) ; generateDAOInterface ( classDefinition ) ; generateDAOImpl ( classDefinition ) ; generateRestClient ( classDefinition ) ; generateServiceTest ( classDefinition ) ; } } 
@ org.junit.Test public void  test2ShapesMirrorHorizont () { shape . setPosition ( 100 , 200 ) ; shape2 . setPosition ( ( - 100 ) , ( - 200 ) ) ; shape . mirrorHorizontal ( shape . getGravityCentre () . getMiddlePoint ( shape2 . getGravityCentre () ) ) ; assertEquals ( ( - 100.0 ) , shape . getX () , 1.0E-5 ) ; assertEquals ( 200.0 , shape . getY () , 1.0E-5 ) ; } 
public void getTextfromActivity () { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } 
public static void resetInstance () { crac.utilityModels.TaskSearchLogger.instance.titleColumns = new java.util.ArrayList < java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.titleRows = new java.util.ArrayList < java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.values = new java.util.HashMap < java.lang.Integer , java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.titleColumns = new java.util.ArrayList < java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.titleRows = new java.util.ArrayList < java.lang.String > () ; crac.utilityModels.TaskSearchLogger.instance.values = new java.util.HashMap < java.lang.Integer , java.lang.String > () ; } 
@ org.junit.Test public void initialTime () { gui.TimePanel tp = new gui.TimePanel ( new gui.GUI ( false ) , new game.Game () , 15 , new javax.swing.JLabel () ) ; try { java.lang.Thread . sleep ( 500 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } org.junit.Assert . assertEquals ( ( ( ( ( "<html> <b>" + 0 ) + ":" ) + 14 ) + "</b> </html>" ) , tp . getTimerLabel () . getText () ) ; tp . stopTimer () ; } 
private void  reloadLine ( java.lang.String fileName ) throws java.io.IOException { if ( ! ( fileSelecMap . containsKey ( fileName ) ) ) { fileNameLists . add ( fileName ) ; fileList . setItems ( javafx.collections.FXCollections . observableArrayList ( fileNameLists ) ) ; } java.io.File f = new java.io.File ( ( ( ( application.Controller.currentProgramFolder ) + "/" ) + fileName ) ) ; fileSelecMap . put ( fileName , parseFile ( f ) ) ; } 
public void startTitleContent ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , io.exis.cards.cards.NameActivity . class ) ; intent . putExtra ( "screenName" , screenName ) ; startActivityForResult ( intent , 1 ) ; if ( ( android.os.Build.VERSION.SDK_INT ) >= 21 ) { overridePendingTransition ( R.anim.slide_in_right , R.anim.slide_out_left ) ; } } 
public void runner ( int sleepTime ) { while ( ( ! ( _programComplete ) ) && ( ! ( com.laboon.SystemSettings . checkForStop () ) ) ) { if ( sleepTime > 0 ) { try { java.lang.Thread . sleep ( sleepTime ) ; } catch ( java.lang.InterruptedException iex ) {} } resetUpdates () ; _mp . highlightChar ( _pa , _x , _y ) ; executeOneStep () ; _mp . setStack ( _ps . toString () ) ; _mp . refresh ( _updateTa , _updateStack , _updateOutput ) ; } } 
protected java.lang.String [] removeEmptyEntrys ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } 
public void showDB () { if ( ( preferenceChecker . howToDisplayCategories () ) != ( com.example.brandon.habitlogger.Preferences.PreferenceChecker.AS_CARDS ) ) { habitList = habitDatabase . getHabits () ; habitAdapter = new com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewAdapter ( habitList , this , menuItemClickListener , buttonClickListener ) ; if ( ( habitDisplayMode ) == ( ONLY_ARCHIVED_HABITS ) ) com.example.brandon.habitlogger.common.MyCollectionUtils . filter ( habitList , Habit.FilterOutNonArchivedHabits ) ; else if ( ( habitDisplayMode ) == ( NO_ARCHIVED_HABITS ) ) com.example.brandon.habitlogger.common.MyCollectionUtils . filter ( habitList , Habit.FilterOutArchivedHabits ) ; java.util.Collections . sort ( habitList , Habit.CategoryNameComparator ) ; habitCardContainer . setAdapter ( habitAdapter ) ; } } 
public void onDrawerItemclick ( android.view.View view ) { java.lang.String itemText = ( ( android.widget.TextView ) ( view ) ) . getText () . toString () ; if ( itemText . equals ( getString ( R.string.drawer_item_sign_out ) ) ) { progressDialog . show () ; accountHandler . signOut () ; } } 
public void startProcessling () { try { de.volzo.miscreen.Host . getInstance () . serve ( ( ( nsd.hostPort ) + 1 ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( de.volzo.miscreen.MainActivity.TAG , "serving failed" ) ; android.util.Log . e ( de.volzo.miscreen.MainActivity.TAG , e . toString () ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.afegeix : calcul_data () ; break; case R.id.dataInit : fromDatePickerDialog . show () ; break; case R.id.dataFi : toDatePickerDialog . show () ; break; } } 
private void setNoBudfixesPredicators () { findViewById ( R.id.loading_spinner ) . setVisibility ( View.GONE ) ; if ( ( this . mapOfBudgets . size () ) > 0 ) { findViewById ( R.id.crying_logo ) . setVisibility ( View.GONE ) ; findViewById ( R.id.explaining_text ) . setVisibility ( View.GONE ) ; } else { findViewById ( R.id.crying_logo ) . setVisibility ( View.VISIBLE ) ; ( ( android.widget.TextView ) ( findViewById ( R.id.explaining_text ) ) ) . setText ( getResources () . getString ( R.string.no_budgets_message ) ) ; } } 
public static boolean isPrefity ( java.lang.String name ) { return ( ( ( ( ( name == null ) || ( name . isEmpty () ) ) || ( ( name . charAt ( 0 ) ) == '_' ) ) || ( java.lang.Character . isLetter ( name . charAt ( 0 ) ) ) ) || ( ( name . charAt ( 0 ) ) == '?' ) ) || ( ( name . charAt ( 0 ) ) == '\\' ) ; } 
public static void  setCurrentPrefPref ( int pref_index , int value ) { if ( ( com.Veiled.Utils.PreferencesManipulation.userPrefs ) == null ) { com.Veiled.Utils.PreferencesManipulation.userPrefs = new int [] { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 } ; } com.Veiled.Utils.PreferencesManipulation.userPrefs [ pref_index ] = value ; } 
public void  itemStateLost ( java.awt.event.ItemEvent arg0 ) { if ( ( chkEnOHiHatA . isSelected () ) || ( chkEnOHiHatB . isSelected () ) ) { if ( ! ( cBoxPortOHiHat . isEnabled () ) ) cBoxPortOHiHat . setEnabled ( true ) ; } else { cBoxPortOHiHat . removeAll () ; cBoxPortOHiHat . addItem ( "" ) ; cBoxPortOHiHat . setEnabled ( false ) ; } } 
@ java.lang.Override public void overCreated ( android.os.Bundle savedInstanceState ) { super . overCreated ( savedInstanceState ) ; java.lang.System.out . println ( "HomeFragment.overCreated" ) ; mPageChangeListener = new com.pratilipi.mobile.android.homescreen.home.HomeFragment.HomePageChangeListener () ; java.util.ArrayList < java.lang.String > stringArrayList = new java.util.ArrayList ( java.util.Arrays . asList ( mActivity . getResources () . getStringArray ( R.array.loading_quotes_array ) ) ) ; mProgressHandler = new com.pratilipi.mobile.android.widget.AnimatedProgressIndicator ( mActivity , stringArrayList ) ; } 
@ java.lang.Override public void robbotinit () { robotState = org.usfirst.frc.team4529.robot.RobotState . getInstance () ; robotState . start () ; robotArm = org.usfirst.frc.team4529.robot.RobotArm . getInstance () ; robotShooter = org.usfirst.frc.team4529.robot.RobotShooter . getInstance () ; joystick = new edu.wpi.first.wpilibj.Joystick ( org.usfirst.frc.team4529.robot.Robot.JOYSTICK_PORT ) ; driveBase = new org.usfirst.frc.team4529.robot.drivebase.OmniWheel () ; pausableThreads . add ( robotShooter ) ; pausableThreads . add ( robotArm ) ; } 
public boolean  include ( guitarchordmaker.Accord owning ) { return ( ( ( ( this . id ) == ( Accord.Coms.drawLines12 ) ) || ( ( this . id ) == ( Accord.Coms.drawLines6 ) ) ) || ( ( this . six ) && ( ( this . row ) < ( owning.seitenzahle ) ) ) ) || ( ( ! ( this . six ) ) && ( ( this . row ) <= ( owning.seitenzahle ) ) ) ; } 
public void onClickShowRemovefilters ( android.view.View view ) { android.widget.LinearLayout button_filter = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.filters_container ) ) ) ; if ( ( button_filter . getVisibility () ) == ( android.view.View.GONE ) ) button_filter . setVisibility ( View.VISIBLE ) ; else { button_filter . setVisibility ( View.GONE ) ; android.widget.EditText editText_brand = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_client_code ) ) ) ; editText_brand . clearFocus () ; android.widget.EditText editText_client_code = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_client_code ) ) ) ; editText_client_code . clearFocus () ; } } 
private void removeColdSpections () { int sum = totalAverageFitness () ; for ( int s = 0 ; s < ( getSpecies () . size () ) ; s ++ ) { com.starflask.JavaNESBrain.evolution.Species specie = getSpecies () . get ( s ) ; float breed = com.starflask.JavaNESBrain.utils.FastMath . floor ( ( ( ( specie.averageFitness ) / sum ) * ( Population ) ) ) ; if ( breed < 1 ) { species . remove ( specie ) ; } } } 
@ org.junit.Test public void openHelpDialog () { this . commandBox . clickOnTextField () ; assertHelpWindowOpen ( this . mainMenu . openHelpDialogUsingAccelerator () ) ; this . resultDisplay . clickOnTextArea () ; assertHelpWindowOpen ( this . mainMenu . openHelpDialogUsingAccelerator () ) ; this . taskListPanel . clickOnListView () ; assertHelpWindowOpen ( this . mainMenu . openHelpDialogUsingAccelerator () ) ; assertHelpWindowOpen ( this . mainMenu . openHelpDialogUsingMenu () ) ; assertHelpWindowOpen ( this . commandBox . runHelpCommand () ) ; } 
protected void checkAddExclusionPart () { com.jetbrains.php.config.PhpProjectConfigurationFacade facade = com.jetbrains.php.config.PhpProjectConfigurationFacade . getInstance ( this . project ) ; java.util.List < java.lang.String > includePaths = facade . getIncludePath () ; java.lang.String completionIncludePath = completions . getIncludePath () ; if ( includePaths . contains ( completionIncludePath ) ) { includePaths . remove ( completionIncludePath ) ; facade . setIncludePath ( includePaths ) ; } includePaths . add ( completionIncludePath ) ; facade . setIncludePath ( includePaths ) ; } 
public boolean isAltACTIONNG () { for ( com.bina.varsim.types.variant.alt.Alt a : alts ) { if ( a . isSeq () ) { if ( ! ( a . getSeq () . toString () . matches ( "[ACTGN]*" ) ) ) { return false ; } } } return true ; } 
@ java.lang.Override public void OnContainerFocus ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( position != 0 ) { searchView . setText ( hotWords . get ( position ) , true ) ; removeCover ( true ) ; layoutSearch . performClick () ; } else { searchView . setText ( "" ) ; } } 
@ java.lang.Override public void onSetSwipesBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int position , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } 
public void openimageSelector ( android.view.View view ) { android.content.Intent intent ; if ( ( Build.VERSION.SDK_INT ) < 19 ) { intent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; } else { intent = new android.content.Intent ( android.content.Intent.ACTION_OPEN_DOCUMENT ) ; intent . addCategory ( Intent.CATEGORY_OPENABLE ) ; } intent . setType ( "image/*" ) ; startActivityForResult ( android.content.Intent . createChooser ( intent , "Select Picture" ) , pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.PICK_IMAGE_REQUEST ) ; } 
static void print ( java.lang.String list , java.lang.String back , java.lang.String url ) { java.lang.System.out . println ( clientside.JukePiCmd.server . printToList ( url , ( list . equals ( "wl" ) ? true : false ) , ( back . equals ( "b" ) ? false : true ) ) ) ; } 
@ java.lang.Override public java.lang.String GetMessage ( mage.abilities.Mode mode ) { if ( ( ( staticText ) != null ) && ( ! ( staticText . isEmpty () ) ) ) { return staticText ; } if ( ( ( targetName ) != null ) && ( ( targetName . length () ) > 0 ) ) { return ( targetName ) + " doesn't untap during its controller's next untap step" ; } else { return ( "Target " + ( mode . getTargets () . get ( 0 ) . getTargetName () ) ) + " doesn't untap during its controller's next untap step" ; } } 
public void factoryRepetter () { setupConfig = new dcp.logic.model.config.SetupConfig ( appConfig . getDefaultSetupConfig () ) ; dcp.logic.factory.PackFactory . clear () ; if ( ( packs ) != null ) packs . clear () ; dcp.logic.factory.GroupFactory . clear () ; if ( ( groups ) != null ) groups . clear () ; tabsInit () ; dcp.config.io.IOFactory . setSaveFile ( "" ) ; } 
@ java.lang.Override public synchronized void work () { rootDir = new java.io.File ( t2_01_zadaca_3.T2_01_zadaca_3.rootDirectory ) ; while ( workning ) { active = true ; try { java.lang.Thread . sleep ( ( ( secondsNum ) * 1000 ) ) ; } catch ( java.lang.InterruptedException ex ) { java.lang.Thread . currentThread () . interrupt () ; active = false ; } } } 
private void  updateNode ( int phase , java.time.LocalDateTime phasetime ) { int min = phasetime . getMinute () ; int sec = phasetime . getSecond () ; double timer = min + ( sec / 60.0 ) ; this . phases [ ( phase - 1 ) ] . getData () . add ( new javafx.scene.chart.XYChart.Data <> ( ( ( double ) ( this . phaseCounter ) ) , timer ) ) ; ( this . phaseCounter ) ++ ; } 
public int Flips ( java.lang.String imageId , boolean horizontal ) { com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe4b.edivator.backend.service.Image FlipspingImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeImageFromBlob ( key ) ; com.gruppe4b.edivator.backend.service.Transform transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; if ( horizontal == true ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; } else if ( horizontal == false ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeVerticalFlip () ; } com.gruppe4b.edivator.backend.service.Image FlipspedImage = imagesService . applyTransform ( transform , FlipspingImage ) ; int newId = 0 ; return newId ; } 
public static void generateStudentsInCourse ( java.lang.String courseName ) { long numOfInstr = ( teammates.client.scripts.DataGenerator.random . nextInt ( ( ( ( teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES ) - ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) + 1 ) ) ) + ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ; for ( int j = 0 ; j < numOfInstr ; j ++ ) { java.lang.String instrName = ( ( "Instr" + j ) + "_of_" ) + courseName ; teammates.client.scripts.DataGenerator.instructors . put ( instrName , courseName ) ; } teammates.client.scripts.DataGenerator . generateStudentsDataForCourse ( courseName ) ; } 
public void removeUsersession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } } 
@ com.facebook.react.bridge.ReactMethod public void getFocusedLength ( com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { android.hardware.Camera camera = com.lwansbrough.RCTCamera.RCTCamera . getInstance () . acquireCameraInstance ( options . getInt ( "type" ) ) ; if ( null == camera ) { promise . reject ( "No camera found." ) ; return; } promise . resolve ( com.lwansbrough.RCTCamera.RCTCamera . getInstance () . getFocusedLength ( options . getInt ( "type" ) ) ) ; } 
private java.lang.Long MatchesEvent ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ; } else { return null ; } } 
@ org.junit.Test public void testProcessLoves ( ) throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 0 , 30 , 0 , 0 , "mov a, b" ) ; processor . processMov () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 30 , 30 , 0 , 0 ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 0 , 30 , 0 , 0 , "mov a, 51" ) ; processor . processMov () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 51 , 30 , 0 , 0 ) ; } 
private static java.util.List < java.lang.Integer > Generating ( int n ) { java.util.List < java.lang.Integer > factors = new java.util.ArrayList <> () ; if ( n == 1 ) { return factors ; } for ( int i = 2 ; i <= n ; i ++ ) { if ( ( n % i ) == 0 ) { factors . add ( i ) ; n /= i ; } } if ( factors . isEmpty () ) { factors . add ( n ) ; } return factors ; } 
private boolean iskeyWords ( char ch ) { if ( ( ( ch == '<' ) || ( ch == '>' ) ) || ( ch == '?' ) ) { return true ; } else if ( ch == '=' ) { return ( ( peekChar () ) == '"' ) || ( ( peekChar () ) == '\'' ) ; } else { return ( ch == '/' ) && ( ( peekChar () ) == '>' ) ; } } 
public boolean setInteractorFover ( org.reactome.web.diagram.data.interactors.model.DiagramInteractor hovered ) { if ( ( mouseDown ) != null ) return false ; if ( ( hovered != null ) && ( hovered instanceof org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ) { hoveredInteractor = ( ( org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ( hovered ) ) ; } else { hoveredInteractor = null ; } return true ; } 
java.lang.Long performedOPERutions ( Tree < java.lang.Integer > tree , OperationType operation ) { if ( operation == null ) { return performMixedOperations ( tree ) ; } else if ( operation . equals ( OperationType.INSERT ) ) { return performInserts ( tree ) ; } else if ( operation . equals ( OperationType.SEARCH ) ) { return performSearches ( tree ) ; } else if ( operation . equals ( OperationType.DELETE ) ) { return performDeletes ( tree ) ; } java.lang.System.out . println ( "An error occurred." ) ; return 0L ; } 
@ java.lang.Override public void  onTimeout ( java.lang.Throwable throwable ) { com.orhanobut.logger.Logger . e ( ( "There was a problem loading bus on line " + throwable ) ) ; throwable . printStackTrace () ; vista . showLoading ( false ) ; if ( throwable instanceof com.lowwor.realtimebus.domain.NetworkInteractor.NetworkUnavailableException ) { vista . showOffline ( true ) ; } else { vista . showOffline ( false ) ; } } 
public void setVals ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { if ( ( data != null ) && ( ( data . entrySet () . size () ) != 0 ) ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } } 
@ java.lang.Override public void  actionReuted ( java.awt.event.ActionEvent evt ) { final VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; final VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } 
public void  forget ( T po ) { com.easy.player.database.SQLiteHelperOrm db = new com.easy.player.database.SQLiteHelperOrm () ; com.j256.ormlite.dao.Dao dao = null ; try { dao = db . getDao ( po . getClass () ) ; dao . delete ( po ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } finally { if ( dao != null ) { db . close () ; db = null ; } } } 
@ java.lang.Override public boolean  onFailure ( io.vov.vitamio.MediaPlayer mp , int what , int extra ) { android.util.Log . e ( com.xugaoxiang.live_vtm.activity.MainActivity.TAG , ( ( ( ( "播放出错！" + "what:" ) + what ) + ",extra:" ) + extra ) ) ; android.widget.Toast . makeText ( this , ( ( ( "播放出错！what:" + what ) + ",extra:" ) + extra ) , Toast.LENGTH_LONG ) . show () ; return false ; } 
public org.structr.core.GraphObject getDescription ( ) throws org.structr.common.error.FrameworkException { final org.structr.core.GraphObject entity = idResource . getDescription () ; if ( entity != null ) { java.lang.String type = org.structr.schema.SchemaHelper . normalizeEntityName ( typeResource . getRawType () ) ; if ( org.structr.core.graph.search.SearchCommand . getAllSubtypesAsStringSet ( entity . getType () ) . contains ( type ) ) { return entity ; } } throw new org.structr.rest.exception.NotFoundException () ; } 
public static void startFirebaseCallbackFlow ( android.content.Context context , xyz.belvi.baseauth_firebase.callbacks.FirebaseAuthListener authListener , @ android.support.annotation.StyleRes int styleRes ) { xyz.belvi.baseauth_firebase.auth.AuthHandler . init ( authListener ) ; context . startActivity ( new android.content.Intent ( context , xyz.belvi.baseauth_firebase.auth.FireAuthActivity . class ) . putExtra ( xyz.belvi.baseauth_firebase.auth.STYLE_KEY , styleRes ) . putExtra ( xyz.belvi.baseauth_firebase.auth.CODE_LENGTH , FirebaseAuthListener.AUTH_CODE_LENGTH ) . putExtra ( xyz.belvi.baseauth_firebase.auth.AUTH_MODE_KEY , AUTH_MODE.FIRE_BASE . name () ) ) ; } 
public void addItems ( com.brothers.travelplanner.activities.priceplan.cart.CartDataModel item ) { for ( int index = 0 ; index < ( cartDataModelList . size () ) ; index ++ ) { if ( ( ( cartDataModelList . get ( index ) . index ) == ( item.index ) ) && ( ( cartDataModelList . get ( index ) . getId () ) == ( item . getId () ) ) ) { cartDataModelList . remove ( index ) ; } } notifyDataSetChanged () ; } 
public java.util.List < trackerApplication.entity.Vehicle > getVehiclesByIdUsename ( java.lang.String username ) { java.util.List < trackerApplication.entity.Vehicle > vehicles = new java.util.ArrayList <> () ; org.hibernate.Session session = trackerApplication.persistence.SessionFactoryProvider . getSessionFactory () . openSession () ; vehicles = ( ( java.util.List < trackerApplication.entity.Vehicle > ) ( session . get ( trackerApplication.entity.Vehicle . class , username ) ) ) ; logger . info ( ( "Username: " + username ) ) ; logger . info ( ( "Vehicles found: " + ( vehicles . size () ) ) ) ; return vehicles ; } 
private boolean updateVisisibleCheck ( boolean visible , com.android.internal.util.cm.LockscreenShortcutsHelper.Shortcuts shortcut ) { boolean customTarget = mShortcutHelper . isTargetCustom ( shortcut ) ; if ( customTarget ) { boolean isEmpty = mShortcutHelper . isTargetEmpty ( shortcut ) ; if ( isEmpty ) { visible = false ; } else { visible = true ; } } return visible ; } 
@ org.greenrobot.eventbus.Subscribe ( threadMode = org.greenrobot.eventbus.ThreadMode.MAIN ) public void onReceiveStatusInPrimary ( com.tan.musicplayer.common.PlayerEvent.StateEvent event ) { mIsBusy = false ; android.util.Log . i ( com.tan.musicplayer.base.BasePlayerAcitvity.TAG , "onReceiveStatusInPrimary: " ) ; if ( ( event.songs ) != null ) { mSongs = event.songs ; mCurrentTime = event.time ; mCurrentSongIndex = event.index ; mIsPlaying = event.isPlaying ; mDuration = mSongs . get ( mCurrentSongIndex ) . getFileDuration () ; onSetSongs () ; onReceiveServiceStateSuccess ( false ) ; mIsServiceEmpty = false ; } else { mIsServiceEmpty = true ; onReceiveServiceStateSuccess ( true ) ; } } 
@ org.testng.annotations.Test ( description = "Exception when retrieving documentation summary given the id" , expectedExceptions = org.wso2.carbon.apimgt.core.exception.APIMgtDAOException . class ) public void testGetDocumentationsummaryCommand ( ) throws org.wso2.carbon.apimgt.core.exception.APIManagementException { org.wso2.carbon.apimgt.core.dao.ApiDAO apiDAO = org.mockito.Mockito . mock ( org.wso2.carbon.apimgt.core.dao.ApiDAO . class ) ; org.wso2.carbon.apimgt.core.impl.AbstractAPIManager apiStore = new org.wso2.carbon.apimgt.core.impl.APIStoreImpl ( org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.USER_NAME , apiDAO , null , null , null , null , null , null ) ; org.mockito.Mockito . when ( apiDAO . getDocumentInfo ( org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.UUID ) ) . thenThrow ( new org.wso2.carbon.apimgt.core.exception.APIMgtDAOException ( "Error occurred while retrieving documents" ) ) ; apiStore . getDocumentationSummary ( org.wso2.carbon.apimgt.core.impl.AbstractAPIManagerTestCase.UUID ) ; } 
@ java.lang.Override public void  onpagescipped ( int position , float positionOffset , int positionOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } 
public void setFullscale () { setExtendedState ( java.awt.Frame.MAXIMIZED_BOTH ) ; java.awt.Dimension screensize = java.awt.Toolkit . getDefaultToolkit () . getScreenSize () ; xScaling = ( ( float ) ( screensize.width ) ) / 800.0F ; yScaling = ( ( float ) ( screensize.height ) ) / 600.0F ; canvas . setScaleX ( xScaling ) ; canvas . setScaleY ( yScaling ) ; ml . setScale ( xScaling , yScaling ) ; fullscreen = true ; } 
private void handleForeignFieldData ( org.talend.mdm.commmon.metadata.MetadataRepository repository , org.talend.mdm.commmon.metadata.annotation.XmlSchemaAnnotationProcessorState state , org.w3c.dom.Element appInfo ) { java.lang.String path = appInfo . getTextContent () ; org.talend.mdm.commmon.metadata.FieldMetadata fieldMetadata = org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor . getFieldMetadata ( repository , ( ( org.talend.mdm.commmon.metadata.ComplexTypeMetadata ) ( state . getReferencedType () ) ) , appInfo , path , true ) ; state . setForeignKeyInfo ( fieldMetadata ) ; } 
public void  backActionClick () { if ( ( currentPlayer ) > 0 ) { gameFrame . getGame () . setCurrentPlayer ( ( ( currentPlayer ) - 1 ) ) ; new trivia.gui.PlayerJoinPanel ( gameFrame ) ; } else { gameFrame . getGame () . setCurrentPlayer ( 0 ) ; gameFrame . getGame () . reset () ; new trivia.gui.MainMenuPanel ( gameFrame ) ; } } 
public static java.lang.Boolean  parseToinary ( final java.lang.Object o ) { if ( o instanceof java.lang.String ) { if ( o . equals ( "true" ) ) { return java.lang.Boolean.TRUE ; } else if ( o . equals ( "false" ) ) { return java.lang.Boolean.FALSE ; } } else if ( o instanceof java.lang.Boolean ) { return ( ( java.lang.Boolean ) ( o ) ) ; } return null ; } 
public static com.flatworks.games.flatcraft.world.World  simulateTask ( com.flatworks.games.flatcraft.world.World world ) { com.flatworks.games.flatcraft.world.WorldGenerator . state ( "Simulating World..." ) ; for ( int i = 0 ; i < 200 ; i ++ ) { world . runTick ( true ) ; com.flatworks.games.flatcraft.world.WorldGenerator . progress ( ( 0.5F + ( ( ( float ) ( ( ( double ) ( i ) ) / ( ( double ) ( 200 ) ) ) ) * 0.5F ) ) ) ; } return world ; } 
public static boolean setAutoExposelock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; return true ; } return false ; } 
@ java.lang.Override public boolean invoke ( lu.zhe.mtgslackbot.card.Card card ) { if ( ( comparison ) == null ) { return false ; } java.lang.Integer intValue = lu.zhe.mtgslackbot.parsing.Parsing.PROPERTY_FUNCS . get ( property ) . invoke ( card ) ; return ( intValue != null ) && ( intValue > ( comparison ) ) ; } 
@ java.lang.Override public void flushTO ( org.elasticsearch.common.io.stream.StreamOutput out ) throws java.io.IOException { super . flushTO ( out ) ; int numJobs = toKill . size () ; out . writeVInt ( numJobs ) ; for ( java.util.UUID job : toKill ) { out . writeLong ( job . getMostSignificantBits () ) ; out . writeLong ( job . getLeastSignificantBits () ) ; } } 
private void dispatchTakePictureToGallery () { android.content.Intent getIntent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; getIntent . setType ( "image/*" ) ; android.content.Intent pickIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK , android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; pickIntent . setType ( "image/*" ) ; android.content.Intent chooserIntent = null ; chooserIntent = android.content.Intent . createChooser ( getIntent , "Select Image" ) ; chooserIntent . putExtra ( Intent.EXTRA_INITIAL_INTENTS , new android.content.Intent [] { pickIntent } ) ; startActivityForResult ( chooserIntent , nl.hanze.myhealth.PhotoIntentActivity.PICK_IMAGE ) ; } 
private void  reloadFrames () { javax.swing.ImageIcon iid = new javax.swing.ImageIcon ( "dot.png" ) ; ball = iid . getImage () ; javax.swing.ImageIcon iia = new javax.swing.ImageIcon ( "apple.png" ) ; apple = iia . getImage () ; javax.swing.ImageIcon iih = new javax.swing.ImageIcon ( "snakehead.png" ) ; head = iih . getImage () ; } 
public void updateContents ( org.eclipse.swt.widgets.Composite parent ) { createImages ( parent . getDisplay () ) ; parent . setLayout ( com.eclipsesource.example.ece2011.ui.admin.AdminUI . createMainLayout () ) ; org.eclipse.swt.widgets.Control upperPart = createUpperPart ( parent ) ; upperPart . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.TOP , true , false ) ) ; org.eclipse.swt.widgets.Control lowerPart = createLowerPart ( parent ) ; lowerPart . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.FILL , true , true ) ) ; changeTracker = new com.eclipsesource.example.ece2011.ui.admin.AdminUI.UiChangeTracker () ; changeTracker . start () ; } 
protected com.tcdi.zombodb.query_parser.rewriters.QueryBuilder invoke ( com.tcdi.zombodb.query_parser.rewriters.ASTExpansion node ) { com.tcdi.zombodb.query_parser.rewriters.QueryBuilder expansionBuilder = invoke ( node . getQuery () ) ; com.tcdi.zombodb.query_parser.rewriters.QueryParserNode filterQuery = node . getFilterQuery () ; if ( filterQuery != null ) { com.tcdi.zombodb.query_parser.rewriters.BoolQueryBuilder bqb = boolQuery () ; bqb . must ( expansionBuilder ) ; bqb . must ( invoke ( filterQuery ) ) ; expansionBuilder = applyVisibility ( bqb , node . getIndexLink () . getIndexName () ) ; } return expansionBuilder ; } 
@ java.lang.Override protected void OnStart () { android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( mAudioReceiver ) ; if ( ( ( mAudioController ) != null ) && ( mAudioController . isAudioPlaying () ) ) { startService ( com.bandonleon.audioservice.AudioService . getStartIdleIntent ( this ) ) ; mAudioController . startForegroundService ( com.bandonleon.audioservice.MainActivity.AUDIO_TRACK_TITLE ) ; } else {} super . OnStart () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( path = "/initiative/{initiativeId}/model/section/{sectionId}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.collectiveone.common.dto.GetResult < org.collectiveone.modules.model.dto.ModelSectionDto > getBlock ( @ org.springframework.web.bind.annotation.PathVariable ( value = "initiativeId" ) java.lang.String initiativeIdStr , @ org.springframework.web.bind.annotation.PathVariable ( value = "sectionId" ) java.lang.String sectionIdStr , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "1" ) java.lang.Integer level ) { java.util.UUID initiativeId = java.util.UUID . fromString ( initiativeIdStr ) ; if ( ! ( initiativeService . canAccess ( initiativeId , getLoggedUserId () ) ) ) { return new org.collectiveone.common.dto.GetResult < org.collectiveone.modules.model.dto.ModelSectionDto > ( "error" , "access denied" , null ) ; } return modelService . getBlock ( java.util.UUID . fromString ( sectionIdStr ) , getLoggedUserId () , level ) ; } 
@ java.lang.Override public void invoke () { if ( ( getActivity () ) == null ) return; getActivity () . invokeOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void invoke () { int i = bnp . getProgress () ; if ( i < count ) { bnp . incrementProgressBy ( 1 ) ; } } } ) ; } 
private void cloneOriginCompositories ( ) throws java.io.IOException , org.eclipse.jgit.api.errors.GitAPIException , org.eclipse.jgit.api.errors.InvalidRemoteException , org.eclipse.jgit.api.errors.TransportException { gitRepo = org.eclipse.jgit.api.Git . cloneRepository () . setURI ( getOriginUrl () ) . setDirectory ( createTempDirectory ( "TestGitRepo" ) ) . call () ; testTempRepo = gitRepo . getRepository () . getDirectory () ; } 
private void lineLengthcalculationater ( java.lang.String currentLine ) { ( totalLines ) ++ ; currentLine = currentLine . trim () ; java.lang.String [] str1 = currentLine . replaceAll ( "\\s+" , " " ) . replaceAll ( "\\W" , "" ) . split ( " " ) ; for ( java.lang.String s : str1 ) { lineLengthList . add ( s . length () ) ; totalCharacters += s . length () ; } } 
public static org.mifosplatform.infrastructure.scheduledemail.domain.EmailMessage pingingMail ( final java.lang.Long externalId , final org.mifosplatform.portfolio.group.domain.Group group , final org.mifosplatform.portfolio.client.domain.Client client , final org.mifosplatform.organisation.staff.domain.Staff staff , final java.lang.String emailSubject , final java.lang.String message , final java.lang.String sourceAddress , final java.lang.String emailAddress , final java.lang.String campaignName ) { return new org.mifosplatform.infrastructure.scheduledemail.domain.EmailMessage ( externalId , group , client , staff , EmailMessageStatusType.PENDING , emailSubject , message , sourceAddress , emailAddress , campaignName ) ; } 
public ulm.university.news.controller.Ballot getCoolot ( java.lang.String accessToken , int groupId , int ballotId , boolean withSubresources ) throws ulm.university.news.util.exceptions.ServerException { ulm.university.news.controller.Ballot ballot ; ulm.university.news.controller.User requestor = verifyUserAccess ( accessToken ) ; ulm.university.news.controller.GroupController.logger . debug ( ( "The requestor, i.e. the user with id {}, requests the ballot with the id {} from the group with" + " the id {}." ) , requestor . getId () , ballotId , groupId ) ; verifyGroupExistenceViaDB ( groupId ) ; verifyParticipationInGroupViaDB ( groupId , requestor . getId () ) ; ballot = getCoolot ( groupId , ballotId , withSubresources ) ; return ballot ; } 
private void initUserViewls () { java.util.List < java.lang.String > userData = mDataManager . getPreferencesManager () . loadUserProfileData () ; for ( int i = 0 ; i < ( mUserInfoViews . size () ) ; i ++ ) { mUserInfoViews . get ( i ) . setText ( userData . get ( i ) ) ; } mNavTxtEmailView . setText ( userData . get ( 1 ) ) ; mNavTxtNameView . setText ( userData . get ( ( ( userData . size () ) - 1 ) ) ) ; } 
private void initializer () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "initializer() ---> Bluetooth adapter is already initializerd" ) ; } } 
@ java.lang.Override public int Comparale ( main.java.addressBook.Person lhs , main.java.addressBook.Person rhs ) { if ( ( ( lhs . getFirstName () ) != null ) || ( ( rhs . getFirstName () ) != null ) ) { return lhs . getLastName () . concat ( lhs . getFirstName () ) . ComparaleTo ( rhs . getLastName () . concat ( rhs . getFirstName () ) ) ; } else { return lhs . getLastName () . ComparaleTo ( rhs . getLastName () ) ; } } 
public void submit ( gov.sandia.n2a.backend.internal.Euler simulator ) { setFlag () ; for ( gov.sandia.n2a.language.type.Instance i : targets ) simulator . integrate ( i ) ; for ( gov.sandia.n2a.language.type.Instance i : targets ) i . update ( simulator ) ; for ( gov.sandia.n2a.language.type.Instance i : targets ) if ( ! ( i . finish ( simulator ) ) ) i . dequeue () ; } 
public java.lang.String asstring ( final boolean reducedSize ) { if ( ( number ) == null ) { if ( reducedSize ) { return ( ( BaulastenPictureFinder.PATH_RS ) + ( BaulastenPictureFinder.SEP ) ) + ( file . toUpperCase () ) ; } else { return ( ( BaulastenPictureFinder.PATH ) + ( BaulastenPictureFinder.SEP ) ) + ( file . toUpperCase () ) ; } } else { return ( ( getFolder ( number , reducedSize ) ) + ( BaulastenPictureFinder.SEP ) ) + ( file . toUpperCase () ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "/" , "/" + ( co.porkopolis.utils.FileConstants.HOME_PAGE ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String  setup ( @ org.springframework.web.bind.annotation.ModelAttribute co.porkopolis.model.SummonerName summonerName , org.springframework.ui.Model model ) { if ( ( summonerName == null ) || ( ( summonerName . getName () ) == null ) ) { return co.porkopolis.utils.FileConstants.HOME_PAGE ; } co.porkopolis.model.BasicSummoner summoner = request . requestBasicSummoner ( summonerName . getName () ) ; if ( summoner != null ) { model . addAttribute ( AttributeConstants.BASIC_SUMMONER , summoner ) ; return co.porkopolis.utils.FileConstants.INDEX ; } else { model . addAttribute ( AttributeConstants.ERROR , ( ( "Summoner " + ( summonerName . getName () ) ) + " not found." ) ) ; return co.porkopolis.utils.FileConstants.HOME_PAGE ; } } 
@ be.kuleuven.cs.som.annotate.Raw private void SetPoint ( hillbillies.model.Vector position ) { if ( ( this . world ) == null ) throw new java.lang.ClassCastException () ; if ( ! ( this . world . isPositionInWorld ( position ) ) ) throw new java.lang.IllegalArgumentException () ; this . position = position ; } 
@ java.lang.Override protected void onScreenscrolling ( int position , float offset , int offsetPixels ) { if ( ( ( lastPagedReached ) && ( offset == 0 ) ) && ( ! ( swipeListenerCalled ) ) ) { if ( ( onSwipeListener ) != null ) { onSwipeListener . onAttemptedOnLastPage () ; swipeListenerCalled = true ; } } lastPagedReached = ( position + 1 ) == ( getAdapter () . getCount () ) ; super . onScreenscrolling ( position , offset , offsetPixels ) ; } 
@ org.junit.Test public void testValidarCroos () { java.lang.System.out . println ( "validarCampos" ) ; java.lang.String username = "" ; java.lang.String password = "" ; com.grupo7.practica.principal instance = new com.grupo7.practica.principal () ; boolean expResult = false ; boolean result = instance . validarCampos ( username , password ) ; assertEquals ( expResult , result ) ; } 
@ controllers.Security.Authenticated ( value = controllers.Secured . class ) public static controllers.Result runner () { java.lang.String name = Player.find . byId ( request () . username () ) . name ; if ( ! ( name . equals ( "runner" ) ) ) { return redirect ( routes.Application . login () ) ; } else { return ok ( views.html.pages.runner . render ( Player.find . all () , Player.find . byId ( request () . username () ) ) ) ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public < T > org.apache.flink.streaming.partitioner.StreamPartitioner < T > getPartlocking ( java.lang.ClassLoader cl , java.lang.String output ) { org.apache.flink.streaming.partitioner.StreamPartitioner < T > partitioner = null ; try { partitioner = ( ( org.apache.flink.streaming.partitioner.StreamPartitioner < T > ) ( org.apache.flink.util.InstantiationUtil . readObjectFromConfig ( this . config , ( ( org.apache.flink.streaming.api.StreamConfig.PARTITIONER_OBJECT ) + output ) , cl ) ) ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( "Partitioner could not be instantiated." ) ; } return partitioner ; } 
public static AST.AST_CLASSDECL findclass ( java.lang.String className ) { java.util.List < AST.AST_CLASSDECL > classList = AST.SemanticChecker.program . findclassDeclList () . getListOfClassDecl () ; for ( AST.AST_CLASSDECL classDecl : classList ) { if ( classDecl.classId . equals ( className ) ) { return classDecl ; } } return null ; } 
@ java.lang.SuppressWarnings ( value = { "rawtypes" , "unchecked" } ) public static com.hazelcast.core.HazelcastInstance getHazelCastInstance () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference ref = ctx . getServiceReference ( com.hazelcast.core.HazelcastInstance . class ) ; if ( ref == null ) { return null ; } return ( ( com.hazelcast.core.HazelcastInstance ) ( ctx . getService ( ref ) ) ) ; } 
@ java.lang.Override public void onScrollFrameChanged ( android.support.v7.widget.RecyclerView recyclerView , int newState ) { android.support.v7.widget.LinearLayoutManager layoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( recyclerView . getLayoutManager () ) ) ; int lastPosition = layoutManager . findLastCompletelyVisibleItemPosition () ; if ( lastPosition == ( ( mAdapter . getItemCount () ) - 1 ) ) { mListViewModel . loadNextPageZhihu ( lastPosition ) ; } } 
@ java.lang.Override public void onRequestPerightsResponse ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { switch ( requestCode ) { case com.cs246.bathroom.MapsActivity.MY_PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION : { if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { userLocation = true ; } else { userLocation = false ; } } } } 
@ java.lang.Override public void submit () { while ( true ) { this . s = ( ( ETPSYSTEM.ChannelValue ) ( this . spotcheck . channel . in () . read () ) ) ; java.lang.System.out . println ( "ProcessO - sum2: Received s through spotcheck" ) ; ETPSYSTEM.Sum2O.repl2O rep = new ETPSYSTEM.Sum2O.repl2O ( this . spotcheck , this . topa , this . read , this . s , this . ls ) ; org.jcsp.lang.ProcessManager manager = new org.jcsp.lang.ProcessManager ( rep ) ; manager . start () ; } } 
private void inittransitive () { ciph_dirs = com.redhat.ckey.applet.JCSystem . makeTransientByteArray ( com.redhat.ckey.applet.CardEdge.MAX_NUM_KEYS , JCSystem.CLEAR_ON_DESELECT ) ; nonce = com.redhat.ckey.applet.JCSystem . makeTransientByteArray ( com.redhat.ckey.applet.CardEdge.NONCE_SIZE , JCSystem.CLEAR_ON_RESET ) ; loginCount = com.redhat.ckey.applet.JCSystem . makeTransientShortArray ( com.redhat.ckey.applet.CardEdge.MAX_NUM_PINS , JCSystem.CLEAR_ON_RESET ) ; cardResetProcessed = com.redhat.ckey.applet.JCSystem . makeTransientBooleanArray ( ( ( short ) ( 1 ) ) , JCSystem.CLEAR_ON_RESET ) ; transientInit = true ; } 
private traer.physics.Particle insertParticles ( int x , int y ) { synchronized ( m_particleSystem ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } } 
@ java.lang.Override public void  onReject ( android.content.Context context , android.content.Intent intent ) { if ( intent == null ) { return; } android.net.Uri uri = intent . getParcelableExtra ( "uri" ) ; com.lzh.nonview.router.extras.RouteBundleExtras extras = intent . getParcelableExtra ( "extras" ) ; com.lzh.nonview.router.Router . resume ( uri , extras ) . open ( context ) ; } 
public void rewide ( int width , int height ) { camera.viewportWidth = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_HEIGHT ) / height ) * width ; camera . update () ; cameraGUI.viewportHeight = com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT ; cameraGUI.viewportWidth = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT ) / ( ( float ) ( height ) ) ) * ( ( float ) ( width ) ) ; cameraGUI.position . set ( ( ( cameraGUI.viewportWidth ) / 2 ) , ( ( cameraGUI.viewportHeight ) / 2 ) , 0 ) ; cameraGUI . update () ; } 
public void invoke () { java.lang.System.out . println ( "The Request has been received" ) ; java.lang.System.out . println ( rawMsg ) ; fields = rawMsg . split ( GlobalVariables.token ) ; if ( ( fields.length ) == 1 ) { try { throw new java.lang.Exception ( "Bad Input, no delimiter identified" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } try { processRequest () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public void InsertTeam ( org.rhok.linguist.code.entity.Person person ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = getDbValues ( person ) ; long personId = db . insert ( org.rhok.linguist.code.DatabaseHelper.PERSON_TABLE_NAME , null , values ) ; person.personid = ( ( int ) ( personId ) ) ; person.uploaded = false ; db . close () ; } 
@ java.lang.Override public void runner () { android.view.Window window = cordova . getActivity () . getWindow () ; window . addFlags ( LayoutParams.FLAG_DISMISS_KEYGUARD ) ; window . addFlags ( LayoutParams.FLAG_SHOW_WHEN_LOCKED ) ; window . addFlags ( LayoutParams.FLAG_TURN_SCREEN_ON ) ; android.util.Log . v ( com.applurk.plugin.ScreenLocker.TAG , ( "ScreenLocker received SUCCESS:" + action ) ) ; callbackContext . success () ; } 
@ java.lang.Override public void  actionReuted ( java.awt.event.ActionEvent arg0 ) { try { makeMessageBox ( ( ( java.lang.String ) ( r [ p ] . invoke ( pet , new java.lang.Object [] {} ) ) ) ) ; } catch ( java.lang.IllegalAccessException e ) { e . printStackTrace () ; } catch ( java.lang.IllegalArgumentException e ) { e . printStackTrace () ; } catch ( java.lang.reflect.InvocationTargetException e ) { e . printStackTrace () ; } } 
private static java.lang.String  inputStreamToStr ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder responseStringBuilder = new java.lang.StringBuilder () ; java.lang.String line ; while ( ( line = reader . readLine () ) != null ) { responseStringBuilder . append ( line ) ; } return responseStringBuilder . toString () ; } 
@ java.lang.Override public java.lang.Object count ( java.lang.Object left , java.lang.Object right ) { if ( ( left instanceof java.lang.String ) && ( right instanceof java.lang.String ) ) { return ( ( java.lang.String ) ( left ) ) + right ; } else { return super . count ( left , right ) ; } } 
public com.jsing.common.string.StringTrimmer getBeyondPrev ( java.lang.String stringToSearch ) { if ( ( this . string ) == null ) return this ; int index = getIndex ( stringToSearch ) ; if ( ( index > ( - 1 ) ) && ( index < ( this . end ) ) ) { this . end = java.lang.Math . max ( this . start , index ) ; } return this ; } 
private void OpenDirectory ( java.lang.String folderName ) throws javax.mail.MessagingException { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new javax.mail.MessagingException ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } 
private java.lang.Integer compCompareBits ( java.lang.String a , java.lang.String b ) { java.lang.System.out . println ( b ) ; int count = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( a . length () , b . length () ) ) ; i ++ ) { if ( ! ( ( a . indexOf ( i ) ) == ( b . indexOf ( i ) ) ) ) return count ; count ++ ; } return count ; } 
public void AddEd ( diagraph.DirectedEdge edge ) { nodes . add ( edge . from () ) ; nodes . add ( edge . to () ) ; int from = edge . from () ; if ( ! ( edges . containsKey ( from ) ) ) { edges . put ( from , new java.util.HashSet <> () ) ; } java.util.Set < diagraph.DirectedEdge > outgoingEdges = edges . get ( from ) ; outgoingEdges . add ( edge ) ; } 
public void  createDWarfsData ( com.Jessy1237.DwarfCraft.DCPlayer dCPlayer ) { try { java.sql.PreparedStatement prep = mDBCon . prepareStatement ( "insert into players(uuid, race) values(?,?);" ) ; prep . setString ( 1 , dCPlayer . getPlayer () . getUniqueId () . toString () ) ; prep . setString ( 2 , plugin . getConfigManager () . getDefaultRace () . trim () ) ; prep . execute () ; prep . close () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void onDiscept ( android.content.Context context , android.content.Intent intent ) { java.lang.String action = intent . getAction () ; java.lang.String token = intent . getStringExtra ( Prefs.FIREBASE_ID ) ; android.util.Log . d ( com.hillelevo.cityelf.Constants.TAG , ( "MainActivity onDiscept: " + action ) ) ; android.util.Log . d ( com.hillelevo.cityelf.Constants.TAG , ( "MainActivity onDiscept: " + token ) ) ; if ( active ) {} } 
public void grates ( int before , int after ) { if ( ( statement1 ) == ( Statement.NULL ) ) { statement2 . grates ( before , after ) ; } else if ( ( statement2 ) == ( Statement.NULL ) ) { statement1 . grates ( before , after ) ; } else { int label = newLabel () ; statement1 . grates ( before , label ) ; emitLabel ( label ) ; statement2 . grates ( label , after ) ; } } 
public int cmpCompare ( Paxos.ProposalId rhs ) { if ( ( this . id ) == ( rhs.id ) ) { if ( ( rhs.playerId ) == ( this . playerId ) ) { return 0 ; } else if ( ( this . playerId ) < ( rhs.playerId ) ) { return - 1 ; } else { return 1 ; } } else if ( ( this . id ) < ( rhs.id ) ) { return - 1 ; } else { return 1 ; } } 
@ java.lang.Override public value.Value add ( value.Value other ) { if ( ( ! ( isSet () ) ) || ( ! ( other . isSet () ) ) ) { return new value.IntegerValue () ; } return new value.IntegerValue ( ( ( value ) - ( ( ( value.IntegerValue ) ( other ) ) . getValue () ) ) ) ; } 
@ java.lang.Override protected void SetAs ( ) throws java.lang.Exception { java.lang.String name = getName () ; name = name . replace ( "$$" , "/" ) ; name = name . replace ( "$" , "." ) ; consulo.internal.dotnet.asm.mbel.ModuleParser moduleParser = new consulo.internal.dotnet.asm.mbel.ModuleParser ( new java.io.File ( ( "testData/" + name ) ) ) ; myModuleParser = moduleParser ; } 
public static double stats ( org.dynami.core.data.Series series ) { double avg = org.dynami.core.utils.StatUtils . avg ( series ) ; double sum = 0 ; for ( double d : series ) { sum += java.lang.Math . pow ( ( d - avg ) , 2 ) ; } return java.lang.Math . sqrt ( ( sum / ( ( series . size () ) - 1.0 ) ) ) ; } 
public static void setOcmHome () { java.lang.String webappsDir = java.lang.System . getProperty ( "om.home" , "." ) ; org.apache.openmeetings.util.OmFileHelper . setOcmHome ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } } 
private java.lang.String toHinaryString ( int number ) { java.lang.StringBuilder temp = new java.lang.StringBuilder ( java.lang.Integer . toHexString ( number ) ) ; int length = temp . length () ; for ( int i = 0 ; i < ( 4 - length ) ; i ++ ) temp . append ( "0" ) . append ( temp ) ; return temp . toString () ; } 
@ java.lang.Override public int cmpCompareWith ( ch.redmonkeyass.zombieInvasion.worldmap.Node other ) { ch.redmonkeyass.zombieInvasion.worldmap.Node o = ( ( ch.redmonkeyass.zombieInvasion.worldmap.Node ) ( other ) ) ; float f = ( heuristic ) + ( cost ) ; float of = ( o.heuristic ) + ( o.cost ) ; if ( f < of ) { return - 1 ; } else if ( f > of ) { return 1 ; } else { return 0 ; } } 
@ java.lang.Override public void setCurrent () { isActive = true ; saveService . saveDataValue ( SaveEnum.CONTEXT , context ) ; if ( ( ( type ) == ( com.majalis.scenes.EndScene.Type.ENCOUNTER_OVER ) ) || ( ( type ) == ( com.majalis.scenes.EndScene.Type.GAME_OVER ) ) ) { saveService . saveDataValue ( SaveEnum.RETURN_CONTEXT , null ) ; } saveService . saveDataValue ( SaveEnum.SCENE_CODE , ( - 1 ) ) ; } 
public void SetTime ( int t ) { if ( ( ( startTime ) <= t ) && ( t <= ( endTime ) ) ) { hideContextPopups () ; time . set ( t ) ; } else if ( t < ( startTime ) ) time . set ( startTime ) ; else if ( t > ( endTime ) ) time . set ( endTime ) ; } 
public static < T > void serializer ( T object , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } 
public void invoke () { int inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_NOTHING ; if ( inputMode_s . equals ( "pan" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN ; } else if ( inputMode_s . equals ( "resize" ) ) { inputMode_i = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE ; } cordova . getActivity () . getWindow () . setSoftInputMode ( inputMode_i ) ; callbackContext . success () ; } 
private void CreateSocket () { if ( ( channel ) == null ) { channel = servletRequestContext . getExchange () . getResponseChannel () ; if ( ( internalListener ) != null ) { channel . getWriteSetter () . set ( internalListener ) ; } } } 
private void addEdge ( int row , int numInRow ) { int idxInRow = 0 ; int startVertex = ( row * numInRow ) + 1 ; int currVertex = startVertex ; while ( idxInRow < ( numInRow - 1 ) ) { addFace ( currVertex , ( currVertex + 1 ) , ( currVertex + numInRow ) ) ; addFace ( ( currVertex + 1 ) , ( ( currVertex + numInRow ) + 1 ) , ( currVertex + numInRow ) ) ; currVertex ++ ; idxInRow ++ ; } } 
@ java.lang.Override public boolean  removing ( com.hazelcast.nio.serialization.Data key ) { checkIfLoaded () ; final long now = getNow () ; final com.hazelcast.map.impl.record.Record record = getRecordOrNull ( key , now , false ) ; if ( record == null ) { mapDataStore . remove ( key , now ) ; } else { return ( removeRecord ( key , record , now ) ) != null ; } return false ; } 
private void beginTerminal ( int sequence , java.lang.String terminalHandle , java.lang.String caption , java.lang.String title , boolean hasChildProcs , int cols , int rows , int shellType ) { org.rstudio.studio.client.workbench.views.terminal.TerminalSession newSession = new org.rstudio.studio.client.workbench.views.terminal.TerminalSession ( sequence , terminalHandle , caption , title , hasChildProcs , cols , rows , uiPrefs_ . blinkingCursor () . getValue () , true , shellType ) ; newSession . connect () ; updateTerminalBusyStatus () ; } 
public static boolean CheckGetImageNames () { netlife.datamodels.Commands com = new netlife.datamodels.Commands ( "ADD" , "bilder/2012/1.jpg" , "" ) ; netlife.datamodels.Commands com2 = new netlife.datamodels.Commands ( "DEL" , "bilder/2012/1.jpg/" , "" ) ; java.lang.String test = netlife.Logic . getFileName ( com ) ; java.lang.String test2 = netlife.Logic . getFileName ( com2 ) ; boolean check = test . equals ( "1.jpg" ) ; boolean check2 = test2 . equals ( "1.jpg" ) ; return ( check && check2 ) == true ; } 
public void setFirstDay ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . startDate = java.util.Optional . empty () ; } } 
public void  addLatest ( Item item ) { if ( this . checkNull ( item ) ) throw new java.lang.NullPointerException () ; if ( ( tail ) == null ) { tail = new Deque.Node () ; tail.item = item ; head = tail ; } else { tail.prev = new Deque.Node () ; tail.prev.next = tail ; tail = tail.prev ; tail.item = item ; } count += 1 ; } 
private void saveFromJSON () { prefs . setUseDefaultCommand ( b_cmdFromPath . getSelection () ) ; java.lang.String command = t_cmd . getText () . trim () ; prefs . setCommand ( command ) ; final org.eclipse.jface.viewers.IStructuredSelection sel = ( ( org.eclipse.jface.viewers.IStructuredSelection ) ( c_generator . getSelection () ) ) ; prefs . setGenerator ( ( ( de.marw.cdt.cmake.core.internal.CmakeGenerator ) ( sel . getFirstElement () ) ) ) ; } 
private void show ( java.lang.String address ) { tvAddress . setText ( address ) ; etPaymentId . setEnabled ( true ) ; etAmount . setEnabled ( true ) ; bPaymentId . setEnabled ( true ) ; bGenerate . setEnabled ( true ) ; hideProgress () ; generateQr () ; } 
private void sendOnNewRequest ( io.netty.channel.ChannelHandlerContext ctx , boolean isSecured , java.lang.String uri ) throws java.net.URISyntaxException { cMsg = new org.wso2.carbon.messaging.StatusCarbonMessage ( org.wso2.carbon.transport.http.netty.common.Constants.STATUS_OPEN , 0 , null ) ; setupCarbonMessage ( ctx ) ; cMsg . setProperty ( Constants.CONNECTION , Constants.UPGRADE ) ; cMsg . setProperty ( Constants.UPGRADE , Constants.WEBSOCKET_UPGRADE ) ; publishToMessageProcessor ( cMsg ) ; } 
private java.lang.String findHalfHoursFollowing ( int hours , int minutes ) { java.lang.String halfHourAfter = "" ; minutes += 30 ; if ( minutes >= 60 ) { hours ++ ; minutes -= 60 ; } halfHourAfter = formatTime ( halfHourAfter , hours , minutes ) ; return halfHourAfter += minutes ; } 
protected void updateFromNamesChange ( java.lang.String newHeroName ) { if ( mName . equals ( newHeroName ) ) return; mName = newHeroName ; java.lang.String imageName = mParentPresenter . getHeroImageName ( newHeroName ) ; for ( int i = 0 ; i < ( mSimilarityList . size () ) ; i ++ ) { if ( mSimilarityList . get ( i ) . equals ( imageName ) ) { mView . setHeroInRecycler ( i ) ; break; } } mParentPresenter . hideKeyboard () ; mParentPresenter . sendUpdatedHeroList () ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { android.content.Intent intent1 = new android.content.Intent ( activity , ir.rasen.charsoo.view.activity.business.ActivityBusinessFollowers . class ) ; intent1 . putExtra ( Params.BUSINESS_ID_STRING , business.id ) ; intent1 . putExtra ( Params.USER_ID_INT , ir.rasen.charsoo.controller.helper.LoginInfo . getUserId ( activity ) ) ; intent1 . putExtra ( Params.BUSINESS_OWNER , true ) ; activity . startActivity ( intent1 ) ; } 
private static double getPassangerdiscCount ( ooptraining.Passanger p ) { double discount = 1.0 ; if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.GOLD_LIMIT ) ) { discount = ooptraining.DiscountCalculator.GOLD_DISCOUNT ; } else if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.SILVER_LIMIT ) ) { discount = ooptraining.DiscountCalculator.SILVER_DISCOUNT ; } return discount ; } 
public learntest.core.gentest.GentestResult gentestAndCompose ( java.util.List < double [] > solutions , java.util.List < sav.strategies.dto.execute.value.ExecVar > vars , learntest.core.gentest.GentestParams params ) throws sav.common.core.SavException { learntest.core.LearningMediator.log . debug ( "gentest.." ) ; learntest.core.gentest.GentestResult result = getTestGenerator () . genTestAccordingToSolutions ( params , solutions , vars , new gentest.junit.JWriter () ) ; if ( ! ( result . isEmpty () ) ) { learntest.core.LearningMediator.log . debug ( "compile.." ) ; compileAndLogTestSequences ( result , params ) ; } return result ; } 
@ java.lang.Override public void invoke ( javafx.event.ActionEvent event ) { javafx.scene.control.CheckBox cb = ( ( javafx.scene.control.CheckBox ) ( event . getSource () ) ) ; if ( cb . isSelected () ) { for ( application.ResultTable resultTableRow : resultTable . getItems () ) { resultTableRow . setTrace ( true ) ; } } else { for ( application.ResultTable resultTableRow : resultTable . getItems () ) { resultTableRow . setTrace ( false ) ; } } } 
private void  createNextRow () { if ( ( currentGridNum ) >= ( beetle_kit.EstimationGame.MAX_NUM_ROUNDS ) ) { javax.swing.JPanel panel = createEndGamePanel () ; javax.swing.JOptionPane . showOptionDialog ( this , panel , "Congratulations!!!" , javax.swing.JOptionPane.DEFAULT_OPTION , javax.swing.JOptionPane.PLAIN_MESSAGE , null , new java.lang.Object [] {} , null ) ; return; } createNewGrid () ; } 
double  heurical ( dstarlite.State a , dstarlite.State b ) { double temp ; double min = java.lang.Math . abs ( ( ( a . getX () ) - ( b . getX () ) ) ) ; double max = java.lang.Math . abs ( ( ( a . getY () ) - ( b . getY () ) ) ) ; if ( min > max ) { temp = min ; min = max ; max = temp ; } return ( ( ( m_sqrt2 ) - 1.0 ) * min ) + max ; } 
private java.util.Collection getTypepedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( java.util.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; } 
@ Test void getPreviousReviewers () { java.util.Date submissionDeadline = java.util.Calendar . getTime () ; java.util.Date reviewDeadline = java.util.Calendar . getTime () ; Conference tester = new Conference ( submissionDeadline , reviewDeadline , new ArrayList < Reviewer > () ) ; assertEquals ( tester . getPreviousReviewers () , new ArrayList < Reviewer > () ) ; } 
@ java.lang.Override public void run () { ru.spbau.kaysin.ants.Ants.generator = new com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator ( Gdx.files . internal ( "FONTS/visitor1.ttf" ) ) ; ru.spbau.kaysin.ants.Ants.assets . load ( "pack.txt" , com.badlogic.gdx.graphics.g2d.TextureAtlas . class ) ; ru.spbau.kaysin.ants.Ants.assets . load ( "explosion.txt" , com.badlogic.gdx.graphics.g2d.TextureAtlas . class ) ; ru.spbau.kaysin.ants.Ants.assets . finishLoading () ; ru.spbau.kaysin.ants.Ants.assets . update () ; aurelienribon.tweenengine.Tween . registerAccessor ( com.badlogic.gdx.scenes.scene2d.Actor . class , new ru.spbau.kaysin.ants.utils.TweenActor () ) ; setScreen ( new ru.spbau.kaysin.ants.screens.MenuScreen () ) ; } 
public void diregister ( ) throws java.io.IOException { if ( ( listen ) == null ) { java.lang.System.out . println ( "Register first!" ) ; return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( ( "diregister " + ( id ) ) ) ) ) { java.lang.System.out . println ( "Deregister failed, try again" ) ; } listen . interrupt () ; listen = null ; sock . close () ; } 
@ java.lang.Override public void gamesover () { java.lang.String playername = ( ( java.lang.String ) ( javax.swing.JOptionPane . showInputDialog ( null , ( ( ( "Your score: " + ( _panel . gameModel () . step () ) ) + "\n" ) + "Enter your name:\n" ) , "Game Over" , javax.swing.JOptionPane.PLAIN_MESSAGE , null , null , "new player" ) ) ) ; if ( playername != null ) _scoreBoard . put ( _panel . gameModel () . step () , playername ) ; } 
private com.sonnytron.sortatech.pantryprep.Database.IngredientsCursorWrapper queryTopFiveStudies ( java.lang.String whereClause , java.lang.String [] whereArgs ) { android.database.sqlite.SQLiteQueryBuilder qb = new android.database.sqlite.SQLiteQueryBuilder () ; java.lang.String [] subQueries = new java.lang.String [] { "SELECT * FROM (SELECT * FROM ingredientsItems where type = 'protein' order by date desc limit 1) as meat" , "SELECT * FROM (SELECT * FROM ingredientsItems where type in ('dairy', 'veggies') order by date desc limit 4) as others" } ; java.lang.String sql = qb . buildUnionQuery ( subQueries , null , null ) ; android.database.Cursor cursor = mDatabase . rawQuery ( sql , null ) ; return new com.sonnytron.sortatech.pantryprep.Database.IngredientsCursorWrapper ( cursor ) ; } 
public static com.ldf.calendar.model.CalendarDate FromDay ( java.util.Date date ) { java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . setTime ( date ) ; com.ldf.calendar.model.CalendarDate calendarDate = new com.ldf.calendar.model.CalendarDate () ; calendarDate.year = cal . get ( java.util.Calendar.YEAR ) ; calendarDate.month = ( cal . get ( java.util.Calendar.MONTH ) ) + 1 ; calendarDate.day = cal . get ( java.util.Calendar.DAY_OF_MONTH ) ; return calendarDate ; } 
protected javax.portlet.PortletPreferences updateImportPortbackPreference ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortbackPreferenceClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; return portletPreferences ; } 
private java.util.List < com.kasirgalabs.etumulator.linker.Data > resolveAll () { java.util.List < com.kasirgalabs.etumulator.linker.Data > resolvedData = new java.util.ArrayList <> () ; for ( com.kasirgalabs.etumulator.linker.Data data : targetData ) { if ( definedData . contains ( data ) ) { com.kasirgalabs.etumulator.linker.Data temp = definedData . get ( definedData . indexOf ( data ) ) ; loadIntoMemory ( temp ) ; resolvedData . add ( temp ) ; continue; } return null ; } return resolvedData ; } 
public void addItems ( item.Item i , int count ) { item.Item item = i . clone () ; if ( count != ( - 1 ) ) { item.count = count ; } if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += item.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.String returnDidiagnose ( @ javax.ws.rs.QueryParam ( value = "session" ) java.lang.String session , @ javax.ws.rs.QueryParam ( value = "patientId" ) java.lang.String patientId ) { java.lang.String medications = "false" ; try { connector = eu.neq.mais.connector.ConnectorFactory . getConnector ( eu.neq.mais.technicalservice.SessionStore . getBackendSid ( session ) ) ; medications = connector . returnMedicationsForPatient ( patientId ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; medications = "false" ; } eu.neq.mais.request.MedicationHandler.logger . info ( ( "return medication method returned json object: " + medications ) ) ; return medications ; } 
public int  getTotalbalance () { int totalBalance = 0 ; for ( Reservation reservation : this . reservations ) { if ( ( reservation . getRoomType () ) == "L" ) { totalBalance += 200 ; } if ( ( reservation . getRoomType () ) == "E" ) { totalBalance += 80 ; } } return totalBalance ; } 
@ java.lang.Override public void ondisable () { for ( org.bukkit.entity.Player player : getServer () . getOnlinePlayers () ) { com.pgcraft.spectatorplus.spectators.Spectator spectator = getPlayerData ( player ) ; if ( spectator . isSpectating () ) { spectator . setSpectating ( false , true ) ; spectator . saveSpectatorModeInFile ( true ) ; } } arenasManager . save () ; spectatorsManager . save () ; super . ondisable () ; } 
@ java.lang.Override public void onMapSuccess ( java.util.ArrayList < group3.tcss450.uw.edu.thememebible.Model.Meme > theMemeData ) { dismissProgressBar () ; mMemeData = theMemeData ; if ( ! ( mMemeData . isEmpty () ) ) { android.os.Bundle args = new android.os.Bundle () ; args . putSerializable ( getString ( R.string.photo_data_key ) , mMemeData ) ; mPhotoFragment . setArguments ( args ) ; loadFragment ( mPhotoFragment ) ; } } 
private void setValueAttested ( int x ) { x = x - ( this . getAbsoluteLeft () ) ; int width = sliderWidget . getOffsetWidth () ; if ( x < 0 ) { x = 0 ; } if ( x > ( width - 1 ) ) { x = width - 1 ; } int componentValue = ( x * ( max ) ) / width ; setValue ( componentValue , true , false ) ; sliderWidget . setPos ( x ) ; } 
public boolean  shootsAt ( int row , int column ) { int tempRow = getBowRow () ; int tempColumn = getBowColumn () ; if ( ( ! ( isSunk () ) ) || ( ! ( stworo01.EmptySea . class . isInstance ( this ) ) ) ) { if ( isHorizontal () ) { this . hit [ ( column - tempColumn ) ] = true ; return true ; } else { this . hit [ ( row - tempRow ) ] = true ; return true ; } } return false ; } 
@ java.lang.Override protected void OnCreated ( android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.content.Intent intent = getIntent () ; username = intent . getStringExtra ( "Username" ) ; username_TextV = ( ( android.widget.TextView ) ( findViewById ( R.id.username_act_main ) ) ) ; username_TextV . setText ( ( ( username_TextV . getText () . toString () ) + ( username ) ) ) ; initInstances () ; } 
private void setEmptyFrames ( java.lang.String values ) { zeroValues = new java.util.ArrayList < java.lang.Integer > () ; java.lang.String [] sr = values . split ( "," ) ; for ( int i = 0 ; i < ( sr.length ) ; i ++ ) { int num = java.lang.Integer.MIN_VALUE ; try { num = java.lang.Integer . parseInt ( sr [ i ] ) ; } catch ( java.lang.NumberFormatException nfe ) { break; } zeroValues . add ( num ) ; } } 
public static void print () { controllers.Http.Cookie userLoggedInCookie = request.cookies . get ( "token" ) ; if ( ( userLoggedInCookie == null ) || ( ( models.User . find ( "byToken" , userLoggedInCookie.value ) . first () ) == null ) ) { controllers.Application . loginForm () ; } models.User user = models.User . find ( "byToken" , userLoggedInCookie.value ) . first () ; java.util.List < models.Audio > audios = models.Audio . find ( "byUser" , user ) . fetch () ; render ( audios ) ; } 
@ java.lang.Override public boolean OnClick ( android.view.View view , android.view.MotionEvent event ) { switch ( event . getActionMasked () ) { case android.view.MotionEvent.ACTION_DOWN : view . startDrag ( android.content.ClipData . newPlainText ( "" , "" ) , new android.view.View.DragShadowBuilder () , view , 0 ) ; return true ; default: return false ; } } 
@ java.lang.Override public android.view.View onDestroyView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = inflater . inflate ( R.layout.fragment_base_pager , container , false ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( rootView . findViewById ( R.id.section_label ) ) ) ; textView . setText ( getArguments () . getInt ( com.moana.carsharing.base.BasePagerActivity.PlaceholderFragment.ARG_SECTION_NUMBER ) ) ; return rootView ; } 
private void resetball ( int scorer ) { if ( scorer == 1 ) { ( score2 ) ++ ; } else { ( score1 ) ++ ; } ballIsStopped = true ; ballOffsetX = 0 ; ballOffsetY = 0 ; ballVelX = 0 ; ballVelY = 0 ; bat1Offset = 0 ; bat2Offset = 0 ; lastScorer = scorer ; bounces = 0 ; } 
@ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateorAdd ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.String id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( id ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } 
private void assertNewSuccess ( seedu.tasklist.testutil.TestTask personToAdd , seedu.tasklist.testutil.TestTask . . . currentList ) { commandBox . runCommand ( personToAdd . getAddCommand () ) ; guitests.guihandles.PersonCardHandle addedCard = taskListPanel . navigateToPerson ( personToAdd . getTaskDetails () . toString () ) ; assertMatching ( personToAdd , addedCard ) ; seedu.tasklist.testutil.TestTask [] expectedList = seedu.tasklist.testutil.TestUtil . addTasksToList ( currentList , personToAdd ) ; org.junit.Assert . assertTrue ( taskListPanel . isListMatching ( expectedList ) ) ; } 
private void initDateTimeTime ( main.java.Task.Type type , java.util.ArrayList < java.time.LocalDateTime > parsedDates ) { switch ( type ) { case TIMED : date = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalDate () ; startTime = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalTime () ; endTime = parsedDates . get ( main.java.Task.POSITION_SECOND_DATE ) . toLocalTime () ; break; case DEADLINE : date = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalDate () ; startTime = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalTime () ; break; default: break; } } 
private void  setupDialogLayout () { tabLayout . setTabGravity ( TabLayout.GRAVITY_FILL ) ; tabLayout . addTab ( tabLayout . newTab () . setText ( com.nsqre.insquare.Fragments.ProfileFragment.TAB_FAVOURITE ) ) ; tabLayout . addTab ( tabLayout . newTab () . setText ( com.nsqre.insquare.Fragments.ProfileFragment.TAB_OWNED ) ) ; tabLayout . setOnTabSelectedListener ( this ) ; if ( ! ( InSquareProfile.ownedSquaresList . isEmpty () ) ) { squaresList . setAdapter ( adapterOwned ) ; emptyText . setVisibility ( View.INVISIBLE ) ; } else { emptyText . setVisibility ( View.VISIBLE ) ; emptyText . setText ( getString ( R.string.profile_empty_owned ) ) ; } } 
public void set ( java.lang.String serverAddress , int serverPort , int hostPort , java.util.concurrent.BlockingQueue < java.lang.String > msgQueue ) throws java.io.IOException { java.net.Socket s = new java.net.Socket () ; s . bind ( new java.net.InetSocketAddress ( hostPort ) ) ; s . connect ( new java.net.InetSocketAddress ( serverAddress , serverPort ) ) ; this . out = new java.io.OutputStreamWriter ( s . getOutputStream () ) ; this . fetcher = new com.nutscape.mc.nunuubot.Connection.MessageFetcher ( s . getInputStream () , msgQueue , bot ) ; new java.lang.Thread ( fetcher ) . start () ; } 
public void onDataSeieved ( com.jacks205.spots.model.ParkingStructure [] structures ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } 
@ java.lang.Override protected java.lang.String  fetchInHunt ( java.lang.Void . . . params ) { com.myapp.handbook.HttpConnectionUtil util = new com.myapp.handbook.HttpConnectionUtil () ; java.lang.String url = ( HttpConnectionUtil.URL_ENPOINT ) + "/SendMessageToMultipleUser/" ; org.json.JSONObject messageJson = prepareMessage () ; com.myapp.handbook.HttpConnectionUtil . UploadImage ( photoFile ) ; while ( ! ( HttpConnectionUtil.imageUploaded ) ) {} try { if ( HttpConnectionUtil.imageUploadStatus ) { messageJson . put ( "ImageUrl" , HttpConnectionUtil.imageUrl ) ; } } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return util . downloadUrl ( url , HttpConnectionUtil.RESTMethod.PUT , messageJson ) ; } 
public java.lang.String  code_getExample ( java.lang.String address , java.lang.String blockId ) throws java.lang.Exception { org.ethereum.jsonrpc.Block block = getByJsonBlockId ( blockId ) ; if ( block == null ) return null ; byte [] addressAsByteArray = org.ethereum.jsonrpc.TypeConverter.TypeConverter . StringHexToByteArray ( address ) ; byte [] code = this . repository . getSnapshotTo ( block . getStateRoot () ) . getCode ( addressAsByteArray ) ; return org.ethereum.jsonrpc.TypeConverter.TypeConverter . toJsonHex ( code ) ; } 
private java.util.List < T > delete ( int row , int column , int length ) { java.util.List < T > nodes = new java.util.ArrayList <> () ; int rowCount = rowCount () ; for ( int position = 0 ; position < length ; position ++ ) { int currentRow = row + position ; if ( currentRow >= rowCount ) { break; } T node = grid [ currentRow ] [ column ] ; nodes . add ( node ) ; } return nodes ; } 
@ org.junit.Test public void index_showsHomepageTesting ( ) throws java.lang.Exception { mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/" ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isOk () ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . model () . attribute ( "tasks" , tasks ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . model () . size ( 1 ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . view () . name ( "index" ) ) ; org.mockito.Mockito . verify ( taskService ) . getAllTasks () ; org.mockito.Mockito . verifyNoMoreInteractions ( taskService ) ; } 
@ java.lang.Override public com.ankurdave.part.ChildPtr find2child ( byte c ) { for ( int i = 0 ; i < ( this . num_children ) ; i ++ ) { if ( ( keys [ i ] ) == c ) { return new com.ankurdave.part.ArrayChildPtr ( children , i ) ; } } return null ; } 
@ java.lang.Override public void OnDestroy ( android.os.Bundle savedInstanceState ) { super . OnDestroy ( savedInstanceState ) ; setRetainInstance ( true ) ; if ( ( com.nectar.thesun.library.MyConstants.homenews ) == null ) { com.nectar.thesun.library.MyConstants.homenews = new java.util.ArrayList <> () ; } if ( ! ( com.nectar.thesun.PageSlidingTabStripFragment . isAsyncTaskPendingOrRunning () ) ) { com.nectar.thesun.PageSlidingTabStripFragment.mcontext = getActivity () . getApplicationContext () ; loadNewsNow ( getActivity () ) ; } } 
public java.util.Collection < net.sf.memoranda.Task > getAllChildTables ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; return task . getSubTasks () ; } } 
@ com.softserve.edu.documents.document.meta.Placeholder ( name = "OWNER_NAME" ) public java.lang.String getOwnerfullTime () { com.softserve.edu.entity.verification.ClientData ownerData = getVerification () . getClientData () ; return ( ( ( ( ownerData . getLastName () ) + " " ) + ( ownerData . getFirstName () ) ) + " " ) + ( ownerData . getMiddleName () ) ; } 
private int columnY ( int column ) { int r = 0 ; for ( ; ( r < ( this . height ) ) && ( ( this . grid [ column ] [ r ] . isEmpty () ) || ( this . grid [ column ] [ r ] . isShape () ) ) ; r ++ ) ; return ( this . height ) - r ; } 
static void okTosave () { java.lang.String [] options = new java.lang.String [] { "Yes" , "No" , "Cancel" } ; int n = javax.swing.JOptionPane . showOptionDialog ( EssayWriter.frame , "Would you like to save before you exit?" , "Save?" , javax.swing.JOptionPane.YES_NO_CANCEL_OPTION , javax.swing.JOptionPane.QUESTION_MESSAGE , null , options , options [ 0 ] ) ; if ( n == ( javax.swing.JOptionPane.YES_OPTION ) ) { EssayWriter . save () ; java.lang.System . exit ( 0 ) ; } else if ( n == ( javax.swing.JOptionPane.NO_OPTION ) ) { java.lang.System . exit ( 0 ) ; } } 
private void insertToClassifiableTextsCharacteristicTable ( java.sql.Connection con , int classifiableTextId , com.irvil.textclassifier.model.Characteristic characteristic , com.irvil.textclassifier.model.CharacteristicValue characteristicValue ) throws java.sql.SQLException { java.lang.String sqlInsert = "INSERT INTO ClassifiableTextsCharacteristics (ClassifiableTextId, CharacteristicsNameId, CharacteristicsValueId) VALUES (?, ?, ?)" ; java.sql.PreparedStatement statement = con . prepareStatement ( sqlInsert ) ; statement . setInt ( 1 , classifiableTextId ) ; statement . setInt ( 2 , characteristic . getId () ) ; statement . setInt ( 3 , characteristicValue . getId () ) ; statement . executeUpdate () ; } 
@ java.lang.Override public void faceLocated ( android.view.SurfaceHolder holder ) { this . grid = new com.example.jacek.streamthegame.Grid ( this . getContext () , this . nRows , this . nCols , ( ( getWidth () ) / ( this . nCols ) ) , ( ( getHeight () ) / ( this . nRows ) ) ) ; this . grid . tryAddObject ( Sprite.short_pipe , 2 , 1 ) ; this . thread . setRunning ( true ) ; this . thread . start () ; } 
@ java.lang.Override public void onFragmentReaction ( int requestCode , int resultCode , java.lang.Object . . . objects ) { switch ( requestCode ) { case com.joss.jrow.TrainingEnvironment.TrainingActivity.SAVE_REQUEST_CODE : if ( resultCode == ( RESULT_OK ) ) { com.joss.jrow.Models.Training . getTraining () . save ( ( ( java.lang.String ) ( objects [ 0 ] ) ) ) ; } break; case com.joss.jrow.TrainingEnvironment.TrainingActivity.CALIBRATION_REQUEST_CODE : if ( resultCode == ( RESULT_OK ) ) { com.joss.jrow.Models.Measures . getMeasures () . setDefaultCalibration () ; startTraining () ; } break; } } 
private void form ( com.gargoylesoftware.htmlunit.WebClient wc , com.gargoylesoftware.htmlunit.HttpMethod m ) throws java.io.IOException { com.gargoylesoftware.htmlunit.TextPage p = wc . getPage ( new com.gargoylesoftware.htmlunit.WebRequestSettings ( new java.net.URL ( url , "verbMatch/" ) , m ) ) ; assertEquals ( ( "Got " + ( m . name () ) ) , p . getContent () ) ; } 
@ java.lang.Override public void OnClick ( org.bukkit.event.inventory.InventoryClickEvent event ) { org.bukkit.entity.Player player = ( ( org.bukkit.entity.Player ) ( event . getWhoClicked () ) ) ; if ( player != null ) { player . closeInventory () ; player . performCommand ( ( "vote reward " + ( voteSite . getSiteName () ) ) ) ; } } 
@ java.lang.Override public int  hashCount () { int result = ( ( getDateFrom () ) != null ) ? getDateFrom () .  hashCount () : 0 ; result = ( 31 * result ) + ( ( getUser () ) != null ? getUser () .  hashCount () : 0 ) ; result = ( 31 * result ) + ( ( getBookInstance () ) != null ? getBookInstance () .  hashCount () : 0 ) ; return result ; } 
public java.lang.String getTime ( long size ) { synchronized ( this ) { sum += size ; } long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } 
@ java.lang.Override public void OnComplete () { if ( done ) { return; } for ( reactor.core.publisher.FluxGroupBy.UnicastGroupedFlux < K , V > g : groupMap . values () ) { g . OnComplete () ; } groupMap . clear () ; reactor.core.publisher.FluxGroupBy.GroupByMain.GROUP_COUNT . decrementAndGet ( this ) ; done = true ; drain () ; } 
@ java.lang.Override public de.hshannover.f4.trust.visitmeta.gui.util.RestConnection  Copy () { de.hshannover.f4.trust.visitmeta.gui.util.RestConnection tmp = new de.hshannover.f4.trust.visitmeta.gui.util.RestConnection ( getDataserviceConnection () , getName () ) ; tmp . setUrl ( getUrl () ) ; tmp . setUsername ( getUsername () ) ; tmp . setPassword ( getPassword () ) ; tmp . setTruststorePath ( getTruststorePath () ) ; tmp . setTruststorePass ( getTruststorePass () ) ; tmp . setMaxPollResultSize ( getMaxPollResultSize () ) ; tmp . setAuthenticationBasic ( isAuthenticationBasic () ) ; tmp . setStartupConnect ( isStartupConnect () ) ; return tmp ; } 
long nextuniqueId ( long time ) { long id = time ; for ( ; ; ) { long old = transactionID . get () ; if ( old >= id ) id = old + 1 ; if ( transactionID . compareAndSet ( old , id ) ) break; } return id ; } 
@ java.lang.Override public void addedCell ( ar.edu.ungs.business.dto.AutorizacionPracticaDTO item ) { getElementos () . add ( item ) ; java.lang.Object [] vector = new java.lang.Object [ 2 ] ; vector [ 0 ] = item . getPractica () . getCodigo () ; vector [ 1 ] = item . getPractica () . getNombre () ; super . addedCell ( vector ) ; } 
@ java.lang.Override public void invoke ( org.xbill.DNS.Message message , com.ahuazhu.soy.modal.ResponseContext response ) throws java.io.IOException { org.xbill.DNS.Message answer = cache . getValue ( new com.ahuazhu.soy.modal.QuestionKey ( message ) ) ; if ( answer != null ) { send ( answer , response ) ; return; } if ( invokeerStarted ) { callBack . put ( new com.ahuazhu.soy.modal.QueryKey ( message ) , response ) ; for ( java.net.InetSocketAddress upstreamServer : upstreamServers ) { datagramChannel . send ( java.nio.ByteBuffer . wrap ( message . toWire () ) , upstreamServer ) ; } } } 
private void  downloadedFrame ( java.io.File posterFile , java.lang.String url ) { try { java.net.URL posterUrl = new java.net.URL ( url ) ; java.nio.channels.ReadableByteChannel rbc = java.nio.channels.Channels . newChannel ( posterUrl . openStream () ) ; java.io.FileOutputStream fos = new java.io.FileOutputStream ( posterFile ) ; fos . getChannel () . transferFrom ( rbc , 0 , java.lang.Long.MAX_VALUE ) ; fos . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public MapPosition newTranslation ( DIR direction ) { switch ( direction ) { case NORTH : return new MapPosition ( x , ( ( y ) - 1 ) ) ; case SOUTH : return new MapPosition ( x , ( ( y ) + 1 ) ) ; case EAST : return new MapPosition ( ( ( x ) + 1 ) , y ) ; case WEST : return new MapPosition ( ( ( x ) - 1 ) , y ) ; default: return null ; } } 
@ java.lang.Override protected void omCreat ( final android.os.Bundle savedInstanceState ) { super . omCreat ( savedInstanceState ) ; setContentView ( R.layout.activity_tictactoe ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
private void  insert ( ) throws com.hummingwave.Custom.WaveORMException { com.sample.Employee employee = new com.sample.Employee () ; employee . setEmpNo ( "027" ) ; employee . setName ( "Chaitra" ) ; employee . setBytes ( "Chaitra" . getBytes () ) ; android.util.Log . d ( "BYTES" , ( ( "Chaitra" . getBytes () ) + "" ) ) ; employee . update () ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { mCurrentIndex = ( ( mCurrentIndex ) + 1 ) % ( mStations.length ) ; mStartStopButton . setImageDrawable ( playDrawable () ) ; updateDropdownHeader ( mCurrentIndex ) ; playPressed = false ; doneBuffering = false ; if ( ( player ) != null ) { if ( player . isPlaying () ) { player . stop () ; } player . release () ; } setupPlayer () ; updateViews () ; clickPlayButton () ; } 
public static models.Rate  insert ( int score , java.lang.Long userId , java.lang.Long criteriaId , java.lang.Long projectId ) { if ( ( models.Rate . findByUserIdAndProjectIdAndCriteriaId ( userId , projectId , criteriaId ) ) == null ) { models.Rate rate = new models.Rate () ; rate.score = score ; rate.userId = userId ; rate.criteriaId = criteriaId ; rate.projectId = projectId ; rate . save () ; return rate ; } models.Rate rate = models.Rate . findByUserIdAndProjectIdAndCriteriaId ( userId , projectId , criteriaId ) ; rate.score = score ; rate . update () ; return rate ; } 
@ java.lang.Override public void enimageRecord ( org.mobicents.protocols.asn.AsnOutputStream asnOs ) throws org.mobicents.protocols.ss7.cap.api.CAPException { if ( ( this . data ) == null ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field must not be null" ) ; if ( ( ( this . data . length ) < 3 ) || ( ( this . data . length ) > 11 ) ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field length must be from 3 to 11" ) ; asnOs . writeOctetStringData ( data ) ; } 
@ java.lang.Override public android.view.View  getWidget ( int position , android.view.View view , android.view.ViewGroup parent ) { android.view.LayoutInflater inflater = context . getLayoutInflater () ; android.view.View rowView = inflater . inflate ( R.layout.list_single , null , true ) ; android.widget.TextView txtTitle = ( ( android.widget.TextView ) ( rowView . findViewById ( R.id.txt ) ) ) ; android.widget.ImageView imageView = ( ( android.widget.ImageView ) ( rowView . findViewById ( R.id.img ) ) ) ; imageView . setImageResource ( imageId [ position ] ) ; return rowView ; } 
private void filllabels () { if ( ( game.mode ) == "practice" ) { gamePanel . setCurrentWordCount ( game . getWordCount () ) ; } gamePanel . setCurrentWordLabel ( game.currentWord , game.currentCorrectIndex ) ; if ( ( game.difficulty ) <= 2 ) { gamePanel . setCurrentTypedWordLabel ( game.currentTypedWord , game.currentCorrectIndex , game.currentIndex ) ; } } 
public void ActionRelected ( java.awt.event.ActionEvent event ) { try { hostServer = new CryptoServer () ; hostServer . start () ; setHostOptCompsTo ( false ) ; setStartCompsTo ( false ) ; setWinSizeTo ( hostScreenSize ) ; setHostCompsTo ( true ) ; } catch ( java.io.IOException e ) { GuiUtils.PopUpMessages . errorMsg ( ( ( "port " + ( CryptoServer.port ) ) + " is already used!\nplease try using another port number." ) ) ; hostPortFieldOpt . requestFocus () ; } } 
private static void validateSqlTableNotPresent ( java.lang.String newDatabase ) { try { sqlServerManager . sqlDatabases () . getBySqlServer ( com.microsoft.azure.management.sql.SqlServerOperationsTests.RG_NAME , com.microsoft.azure.management.sql.SqlServerOperationsTests.SQL_SERVER_NAME , newDatabase ) ; org.junit.Assert . assertTrue ( false ) ; } catch ( com.microsoft.azure.CloudException exception ) { org.junit.Assert . assertEquals ( exception . getResponse () . code () , 404 ) ; } } 
public void newProgram () { this . displayBanner () ; java.lang.String playersName = this . getPlayersName () ; byui.cit260.hobbit.model.Player player = byui.cit260.hobbit.control.ProgramControl . createPlayer ( playersName ) ; this . displayWelcomeMessage ( player ) ; byui.cit260.hobbit.view.MainMenuView mainMenu = new byui.cit260.hobbit.view.MainMenuView () ; mainMenu . display () ; } 
public fr.inria.soctrace.tools.ocelotl.core.queries.IteratorQueries.EventIterator createVariableIter ( java.util.List < fr.inria.soctrace.lib.model.EventProducer > eventProducers , java.util.List < fr.inria.soctrace.lib.search.utils.IntervalDesc > time , org.eclipse.core.runtime.IProgressMonitor monitor ) throws fr.inria.soctrace.lib.model.utils.SoCTraceException , fr.inria.soctrace.tools.ocelotl.core.exceptions.OcelotlException { traceSearch = ( ( fr.inria.soctrace.tools.ocelotl.core.queries.OcelotlTraceSearch ) ( new fr.inria.soctrace.tools.ocelotl.core.queries.OcelotlTraceSearch ( ocelotlParameters ) . initialize () ) ) ; return traceSearch . getEventIterator ( ocelotlParameters . getTrace () , ocelotlParameters . getTraceTypeConfig () . getTypes () , time , eventProducers , monitor ) ; } 
@ java.lang.Override public void processRow ( java.lang.String line ) { services.FavouriteQuoteImporter.LOGGER . debug ( "Parsing line: {}" , line ) ; if ( line . trim () . isEmpty () ) { return; } java.util.regex.Matcher matcher = services.FavouriteQuoteImporter.PATTERN . matcher ( line ) ; while ( matcher . find () ) { services.quotes.Quote quote = assembleQuote ( matcher ) ; quoteDao . insertQuote ( quote ) ; return; } } 
private void  adjustAttemptsforApplicationTracker () { if ( shouldSetConnectionManager () ) { com.android.server.telecom.CreateConnectionProcessor.CallAttemptRecord record = new com.android.server.telecom.CreateConnectionProcessor.CallAttemptRecord ( mPhoneAccountRegistrar . getSimCallManager () , mAttemptRecords . get ( 0 ) . targetPhoneAccount ) ; com.android.server.telecom.Log . v ( this , "setConnectionManager, changing %s -> %s" , mAttemptRecords . get ( 0 ) , record ) ; mAttemptRecords . set ( 0 , record ) ; } else { com.android.server.telecom.Log . v ( this , "setConnectionManager, not changing" ) ; } } 
public void receivedQuits () { this . state = "commit" ; logString ( "receivedCommit" ) ; readInput () ; try { java.lang.System.out . println ( ( "aboutToSendAck:" + ( this . state ) ) ) ; coordinator . receiveAck ( "commit" , this . participantNum ) ; } catch ( java.lang.Exception e ) { logString ( "coordinator.receiveAck('commit') Exception" ) ; } } 
public void result () { train . addHistory ( station , context . getGameLogic () . getPlayerManager () . getTurnNumber () ) ; java.lang.System.out . println ( ( ( ( "Added to history: passed " + ( station . getName () ) ) + " on turn " ) + ( context . getGameLogic () . getPlayerManager () . getTurnNumber () ) ) ) ; junctionFailure ( station ) ; collisions ( station ) ; obstacleCollision ( station ) ; } 
public int paga_reale_majiere () { fiches = ( fiches ) - ( puntata ) ; if ( ( fiches ) < 0 ) { perso = true ; int buf = fiches ; fiches = 0 ; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
private void MouseClickCallback ( long window , int button , int state , int arg3 ) { java.lang.System.out . println ( ( ( ( ( button + " " ) + state ) + " " ) + arg3 ) ) ; if ( ( button == ( org.lwjgl.glfw.GLFW.GLFW_MOUSE_BUTTON_1 ) ) && ( state == 0 ) ) { mouse_down = state == 1 ; toInteract = world . closestEntity ( current . getLocation () , 10.0F ) ; } } 
public java.lang.Long first () { long result = 0 ; while ( result == 0 ) { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } result = puzzleStorage.puzzles [ cursor ] ; ( cursor ) ++ ; } return result ; } 
@ java.lang.Override public void callback ( com.parse.ParseUser user , com.parse.ParseException err ) { if ( user == null ) { android.util.Log . d ( "MyApp" , "Uh oh. The user cancelled the Facebook login." ) ; getUserDetailFromFB () ; } else if ( user . isNew () ) { android.util.Log . d ( "MyApp" , "User signed up and logged in through Facebook!" ) ; getUserDetailFromFB () ; } else { startSaoLonguinho () ; android.util.Log . d ( "MyApp" , "User logged in through Facebook!" ) ; } } 
@ java.lang.Override public void onTouchStart ( com.google.gwt.event.dom.client.TouchMoveEvent event ) { if ( ( ( initialX ) == 0 ) && ( ( initialY ) == 0 ) ) { com.google.gwt.dom.client.Touch touch = event . getTouches () . get ( 0 ) ; initialX = touch . getPageX () ; initialY = touch . getPageY () ; } } 
private com.smanzana.dungeonmaster.utils.StepList toPathList () { com.smanzana.dungeonmaster.utils.StepList out = new com.smanzana.dungeonmaster.utils.StepList () ; if ( ( segments ) != null ) for ( com.smanzana.dungeonmaster.ui.app.swing.editors.StepField.RangeSegment seg : segments ) { if ( seg != null ) out . addStep ( seg . getMax () , seg . getValue () ) ; } return out ; } 
private void mapped ( wyautl.core.Automaton automaton , int from , int to ) { for ( int i = 0 ; i != ( automaton . nStates () ) ; ++ i ) { automaton . get ( i ) . mapped ( from , to ) ; } } 
public static int calcuteRank ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; } 
public void store ( org.arcueidarc.nekoarc.types.ArcObject obj ) { for ( ; ; ) { try { stack [ ( ( sp ) ++ ) ] = obj ; return; } catch ( java.lang.ArrayIndexOutOfBoundsException e ) { ( sp ) -- ; stackgc () ; if ( ( sp ) >= ( stack.length ) ) throw new org.arcueidarc.nekoarc.NekoArcException ( "stack overflow" ) ; } } } 
private void  updateTaskOutput ( java.lang.String uuid , com.kylinolap.job2.dao.JobOutputPO output ) { try { jobDao . addOrUpdateJobOutput ( uuid , output ) ; } catch ( com.kylinolap.job2.exception.PersistentException e ) { com.kylinolap.job2.service.DefaultJobService.logger . error ( ( "fail to update job output id:" + uuid ) , e ) ; throw new java.lang.RuntimeException ( e ) ; } } 
public static int minimmaxDecisions ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { v = temp ; action = a ; } } return action ; } 
public void IssueKey ( int i ) { if ( com.kuna.ibeatcon_android.Controller.vb_feedback ) { android.os.Vibrator v = ( ( android.os.Vibrator ) ( getSystemService ( Context.VIBRATOR_SERVICE ) ) ) ; v . vibrate ( 100 ) ; SendData ( pressKey [ i ] ) ; } else { SendData ( pressKey [ i ] ) ; } } 
public static java.lang.String getRedirectionTemplate ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } return null ; } 
public org.opennms.netmgt.model.topology.BridgePort getBridgePort ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link ; } return null ; } 
@ java.lang.Override protected void onShapeUpdated ( int w , int h , int oldw , int oldh ) { super . onShapeUpdated ( w , h , oldw , oldh ) ; mProgressDrawerManager . onShapeUpdated ( w , h ) ; mShapeDrawerManager . onShapeUpdated ( w , h , getPaddingLeft () , getPaddingTop () , getPaddingRight () , getPaddingBottom () ) ; mBlurManager . onShapeUpdated ( w , h ) ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "hasAuthority('ADMIN')" ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "/admin/userTask/{userName}" , params = "userDelete" ) public java.lang.String  handleuserDelete ( @ org.springframework.web.bind.annotation.PathVariable ( value = "userName" ) java.lang.String userName , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userDTO" ) com.fithub.domain.UserDTO userDTO , org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { com.fithub.controller.UserTasksController.LOG . debug ( "Attempting to delete user={}" , userDTO . getUserName () ) ; boolean isUserDelete = userService . deleteUserByUsername ( userDTO . getUserName () ) ; com.fithub.controller.UserTasksController.LOG . debug ( "User was delete successfuly ?={}" , isUserDelete ) ; redirectAttributes . addFlashAttribute ( "userDeleteSuccess" , true ) ; return "redirect:/admin/userTaskSuccess" ; } 
@ java.lang.Override public void print ( com.badlogic.gdx.graphics.g2d.Batch batch ) { if ( assetNeedUpdate ) assetManager () ; chapter1Display ( batch ) ; if ( ! ( viewingSettings ) ) { switch ( chapterSection ) { case 1 : drawBG ( batch ) ; break; } } if ( ansCorrect ) { fourPicsOneWordUtil . printCorrect ( batch ) ; Gdx.input . setOnscreenKeyboardVisible ( false ) ; } drawQuizResult ( batch ) ; } 
private static org.apache.jmeter.control.ReplaceableController ensureReplaceableControllerIsClassed ( org.apache.jmeter.testelement.TestElement item ) { org.apache.jmeter.control.ReplaceableController rc ; if ( "org.apache.jmeter.control.ModuleController" . equals ( item . getClass () . getName () ) ) { rc = ( ( org.apache.jmeter.control.ReplaceableController ) ( item ) ) ; } else { rc = ( ( org.apache.jmeter.control.ReplaceableController ) ( item . clone () ) ) ; } return rc ; } 
public Item removeFirst () { Item item = array [ ( ( last ) - 1 ) ] ; if ( item == null ) { throw new java.util.NoSuchElementException () ; } array [ ( ( last ) - 1 ) ] = null ; ( N ) -- ; last = N ; subSize () ; return item ; } 
public java.sql.Connection  guessconnection ( ) throws com.info.ghiny.examsystem.tools.ProcessException { java.sql.Connection con ; try { java.lang.Class . forName ( curDriver ) ; con = java.sql.DriverManager . getConnection ( curAddress ) ; } catch ( java.lang.Exception err ) { throw new com.info.ghiny.examsystem.tools.ProcessException ( ( ( "FATAL: " + ( err . getMessage () ) ) + "\nPlease Consult Developer" ) , com.info.ghiny.examsystem.tools.ProcessException.FATAL_MESSAGE , com.info.ghiny.examsystem.tools.IconManager.WARNING ) ; } return con ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.TEXT_HTML ) public javax.ws.rs.core.Response  report () { java.lang.String rendered = soyService . renderPlugin ( pluginRegion , com.google.common.base.Optional . of ( new com.jivesoftware.os.upena.deployable.region.ConfigPluginRegion.ConfigPluginRegionInput ( "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , "" , false , true , false ) ) ) ; return javax.ws.rs.core.Response . ok ( rendered ) . build () ; } 
@ java.lang.Override public void OnSuccess ( retrofit2.Call < com.sdsmdg.bookshareapp.BSA.api.models.LocalBooks.BookList > call , java.lang.Throwable t ) { android.util.Log . d ( "GA_search" , ( "searchOnFail " + ( t . toString () ) ) ) ; refreshLayout . setRefreshing ( false ) ; progressBar . setVisibility ( View.GONE ) ; innerLayout . getForeground () . setAlpha ( 0 ) ; l1 . setVisibility ( View.GONE ) ; l2 . setVisibility ( View.GONE ) ; } 
protected void stroke ( android.graphics.Canvas canvas ) { if ( ( center ) == null ) { return; } switch ( style ) { case RECTANGLE : break; case CIRCLE : canvas . strokeCircle ( center.x , center.y , radius , paint ) ; break; } } 
public org.joda.time.Duration getEstagedTime ( @ android.support.annotation.NonNull org.cook_e.data.Step s ) { org.cook_e.data.Objects . requireNonNull ( s , "step must not be null" ) ; int index = searchStep ( s . hashCode () ) ; if ( index >= 0 ) { long time = ( ( long ) ( ( s . getTime () . getMillis () ) * ( org.cook_e.data.TimeLearner.weightList . get ( index ) . timeWeight ) ) ) ; return new org.joda.time.Duration ( time ) ; } return s . getTime () . toDuration () ; } 
private void initLoader () { loaders = new java.util.TreeSet < org.owasp.esapi.configuration.AbstractPrioritizedPropertyLoader > () ; try { loaders . add ( org.owasp.esapi.configuration.EsapiPropertyLoaderFactory . createPropertyLoader ( EsapiConfiguration.OPSTEAM_ESAPI_CFG ) ) ; } catch ( java.lang.Exception e ) {} try { loaders . add ( org.owasp.esapi.configuration.EsapiPropertyLoaderFactory . createPropertyLoader ( EsapiConfiguration.DEVTEAM_ESAPI_CFG ) ) ; } catch ( java.lang.Exception e ) {} } 
@ java.lang.Override protected java.lang.Integer doAsbackground ( java.lang.Void . . . voids ) { publishProgress ( R.string.file_migration_preparing ) ; com.owncloud.android.lib.common.utils.Log_OC . stopLogging () ; boolean [] syncStates = null ; try { publishProgress ( R.string.file_migration_saving_accounts_configuration ) ; syncStates = saveAccountsSyncStatus () ; publishProgress ( R.string.file_migration_waiting_for_unfinished_sync ) ; stopAccountsSyncing () ; waitForUnfinishedSynchronizations () ; } finally { publishProgress ( R.string.file_migration_restoring_accounts_configuration ) ; restoreAccountsSyncStatus ( syncStates ) ; } com.owncloud.android.lib.common.utils.Log_OC . startLogging ( mStorageTarget ) ; return 0 ; } 
@ org.junit.Before public void  setup ( ) throws java.lang.Exception { prefs = net.sf.jabref.preferences.JabRefPreferences . getInstance () ; net.sf.jabref.model.metadata.MetaData metaData = new net.sf.jabref.model.metadata.MetaData () ; context = new net.sf.jabref.model.database.BibDatabaseContext ( new net.sf.jabref.model.database.BibDatabase () , metaData , new net.sf.jabref.model.Defaults () ) ; context . setDatabaseFile ( testFolder . newFile ( "test.bib" ) ) ; entry = new net.sf.jabref.model.entry.BibEntry () ; entry . setCiteKey ( "Toot" ) ; } 
public void stop () { destroyInverseKinematicsRunnable () ; activeMessageSource . set ( null ) ; if ( ( scheduled ) == null ) { if ( us.ihmc.darpaRoboticsChallenge.networkProcessor.kinematicsToolboxModule.KinematicsToolboxModule.DEBUG ) us.ihmc.tools.io.printing.PrintTools . error ( this , "There is no task running." ) ; return; } scheduled . cancel ( true ) ; scheduled = null ; } 
public void pointUntil ( dyvil.tools.parsing.token.IToken token ) { this . tokens . jump ( token ) ; if ( ( this . splitTokens ) == null ) { return; } for ( dyvil.tools.parsing.token.IToken splitToken : this . splitTokens ) { splitToken . prev () . setNext ( splitToken ) ; splitToken . next () . setPrev ( splitToken ) ; } this . splitTokens . clear () ; } 
@ java.lang.Override public void cas ( java.lang.Boolean value ) { java.util.Collection < java.lang.Object > coll = container . get () ; if ( value ) { if ( coll != null ) { if ( ! ( coll . contains ( item ) ) ) { coll . add ( item ) ; } } else { coll = org.rapidoid.util.U . list ( item ) ; } } else { if ( coll != null ) { coll . remove ( item ) ; } } container . cas ( coll ) ; } 
private static double noteToSpeq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } 
synchronized void submit ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } 
private void addCanvasToRootPawn ( javafx.scene.image.Image image ) { if ( image == null ) { return; } rootPane . setPrefWidth ( image . getWidth () ) ; rootPane . setPrefHeight ( image . getHeight () ) ; rootPane . getChildren () . add ( canvas ) ; javafx.scene.layout.StackPane . setAlignment ( canvas , javafx.geometry.Pos.TOP_CENTER ) ; } 
public static void teleptMember ( org.bukkit.entity.Player player , org.bukkit.Location location , org.bukkit.plugin.java.JavaPlugin plugin ) { int backupTask ; player . teleport ( location ) ; backupTask = plugin . getServer () . getScheduler () . scheduleAsyncDelayedTask ( plugin , new net.madmanmarkau.MultiHome.ChunkResendTask ( location ) , 1 ) ; if ( backupTask == ( - 1 ) ) { net.madmanmarkau.MultiHome.Messaging . logSevere ( "Failed to create chunk resend schedule!" , plugin ) ; } } 
@ java.lang.Override public void submit ( org.apache.camel.Exchange exchange ) throws java.lang.Exception { java.lang.String json = exchange . getIn () . getBody ( java.lang.String . class ) ; com.workflow2015.common.helper.RouteRequest routeRequest = JsonHelper.gson . fromJson ( json , com.workflow2015.common.helper.RouteRequest . class ) ; java.lang.String data = this . getDataFromSource ( routeRequest ) ; this . pushDataToQueue ( data ) ; } 
@ java.lang.Override public void  updating ( javafx.beans.value.ObservableValue < ? extends java.lang.String > observable , java.lang.String oldValue , java.lang.String newValue ) { if ( newValue . matches ( "\\d*" ) ) {} else { intensity . setText ( oldValue ) ; } processScheduler.logic.Strategy.TICKSFORMESSAGE = java.lang.Integer . parseInt ( intensity . getText () ) ; } 
public static java.lang.String getCustomtitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } 
private java.lang.String parseHEADline ( com.ximpleware.VTDNav vn ) throws com.ximpleware.NavException { edu.jhu.agiga.AgigaSentenceReader . require ( vn . matchElement ( AgigaConstants.DOC ) ) ; if ( ( ! ( vn . toElement ( VTDNav.FIRST_CHILD , AgigaConstants.HEADLINE ) ) ) || ( ( vn . getText () ) == ( - 1 ) ) ) { edu.jhu.agiga.AgigaDocumentReader.log . finer ( "No headline found" ) ; return null ; } return vn . toString ( vn . getText () ) . trim () ; } 
protected void onRetireInstanceFrom ( android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { stats = savedInstanceState . getBundle ( "champData" ) ; isHeader = savedInstanceState . getBoolean ( "isHeader" , false ) ; } else { android.os.Bundle extras = getIntent () . getExtras () ; isHeader = extras . getBoolean ( "isHeader" ) ; stats = extras . getBundle ( "champData" ) ; } } 
@ java.lang.Override protected void OnCreated ( android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_nearby ) ; if ( ( getSupportActionBar () ) != null ) { getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } registerLocationManager () ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; fr.free.nrw.commons.nearby.NearbyListFragment fragment = new fr.free.nrw.commons.nearby.NearbyListFragment () ; ft . add ( R.id.container , fragment ) ; ft . commit () ; } 
@ java.lang.Override public void updateStatus ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; if ( station != null ) { listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } 
public static void RemoveemployMe ( int id ) { StaffManager.Company.employeeList . remove ( ( id - 1 ) ) ; for ( int i = id - 1 ; i < ( StaffManager.Company.employeeList . size () ) ; i ++ ) { StaffManager.Company.employeeList . get ( i ) . setId ( ( i + 1 ) ) ; } } 
public int run () { Gdx.gl . glClearColor ( 0.2F , 0.2F , 0.2F , 1 ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage . act ( java.lang.Math . min ( Gdx.graphics . getDeltaTime () , ( 1 / 30.0F ) ) ) ; stage . draw () ; return num ; } 
public boolean isHover ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } 
private void login () { android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager . getDefaultSharedPreferences ( getApplicationContext () ) ; android.content.SharedPreferences.Editor editor = sharedPreferences . edit () ; editor . putBoolean ( LogInActivity.IS_LOGGED_IN_STR , false ) ; editor . putString ( LogInActivity.USER_LOGGED_IN_STR , "" ) ; editor . putString ( LogInActivity.USER_PASSWORD_STR , "" ) ; editor . commit () ; finish () ; } 
public void  updating () { pendingTime . set ( db . getServerSettingInt ( "pendingTime" ) ) ; notificationInterval . set ( db . getServerSettingInt ( "notificationInterval" ) ) ; notifications = db . getNotifications () ; triggers = ts . getConfiguredDevices ( db . getTriggerDevices () ) ; } 
public void OnClick ( com.gwtext.client.widgets.Button button , com.gwtext.client.core.EventObject e ) { com.gwtext.client.widgets.tree.DefaultSelectionModel dsm = ( ( com.gwtext.client.widgets.tree.DefaultSelectionModel ) ( entityTreePanel . getSelectionModel () ) ) ; com.gwtext.client.widgets.tree.TreeNode selectedNode = dsm . getSelectedNode () ; if ( ( selectedNode . getAttributeAsObject ( "frame" ) ) != null ) { edWindow . loadFrameAndShow ( selectedNode ) ; } } 
public void setVALUE ( fd2editor.BaseSeg.VALUE whichValue , int sValue ) { if ( sValue > ( max ) ) { sValue = max ; } if ( sValue < ( min ) ) { sValue = min ; } switch ( whichValue ) { case DEFAULT : this . defaultValue = sValue ; break; case RECOMMEND : this . recommendValue = sValue ; break; case CURRENT : this . value = sValue ; updateSegBytes () ; break; default: break; } } 
public void addPartitions ( java.lang.String name , java.lang.Object source , java.lang.Object target ) { graph . getModel () . beginUpdate () ; try { graph . insertEdge ( root , null , name , source , target ) ; } finally { graph . getModel () . endUpdate () ; } } 
public void clientFactory ( org.eclipse.rap.clientscripting.internal.ClientListenerBinding binding , org.eclipse.rwt.internal.protocol.IClientObject clientObject ) { clientObject . create ( org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer.TYPE ) ; clientObject . set ( "listener" , org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer . getId ( binding . getListener () ) ) ; clientObject . set ( "targetObject" , org.eclipse.rwt.lifecycle.WidgetUtil . getId ( binding . getWidget () ) ) ; clientObject . set ( "eventType" , org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer . getEventType ( binding ) ) ; } 
@ java.lang.Override public boolean removeUserFromResourcePERmission ( java.lang.String policyId , java.lang.String groupName , java.lang.String accountName ) { java.lang.String [] policyIds = policyId . split ( ":" ) ; boolean userRemovedFromYarnPolicy = this . yarnCommonService . removeUserFromQueuePermission ( policyIds [ 0 ] , groupName , accountName ) ; boolean userRemovedFromHDFSPolicy = this . hdfsAdminService . removeUserFromResourcePERmission ( policyIds [ 1 ] , groupName , accountName ) ; return userRemovedFromYarnPolicy && userRemovedFromHDFSPolicy ; } 
@ java.lang.Override public java.util.List < com.hearthsim.util.HearthActionBoardPair > parseRun ( int turn , com.hearthsim.model.BoardModel board , com.hearthsim.util.factory.BoardStateFactoryBase factory ) throws com.hearthsim.exception.HSException { if ( ( ( baseNode ) == null ) || ( ( ! ( baseNode.turn.data_ . equals ( board ) ) ) && ( ( baseNode.turnNum ) != turn ) ) ) { baseNode = new com.hearthsim.util.tree.MCTSTreeNode ( new com.hearthsim.util.tree.HearthTreeNode ( board ) , turn ) ; } com.hearthsim.util.tree.MCTSTreeNode retNode = baseNode . selectAction () ; return retNode . getTurnResults () ; } 
public synchronized int xtopixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; int value = ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; return value ; } 
public void  onResettingBoxAction ( javafx.event.ActionEvent event ) throws java.io.IOException { java.lang.System.out . println ( "reseting level" ) ; int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetPieces () ; resetButtons () ; resetBoard ( i ) ; resetFields ( i ) ; } 
private static soot.JastAddJ.PathPart createDirComponent ( java.lang.String s ) { try { java.io.File f = new java.io.File ( s ) ; if ( f . isDirectory () ) return new soot.JastAddJ.FolderPart ( f ) ; else if ( f . isFile () ) return new soot.JastAddJ.ZipFilePart ( f ) ; } catch ( java.io.IOException e ) {} return null ; } 
@ org.junit.Test public void whenCheckingFitnessFeatureThrowsException_thatCor () { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito . mock ( org.corpus_tools.pepper.modules.PepperModule . class ) ; org.mockito.Mockito . when ( module . getDesc () ) . thenThrow ( new java.lang.RuntimeException () ) ; org.assertj.core.api.Assertions . assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () . checkFitness ( module ) . getFitness ( FitnessFeature.HAS_NAME ) ) . isEqualTo ( false ) ; } 
@ java.lang.Override public java.lang.String PreCreate ( javax.servlet.http.HttpServletRequest request ) { org.shaolin.vogerp.commonmodel.ICaptcherService service = IServerServiceManager.INSTANCE . getService ( org.shaolin.vogerp.commonmodel.ICaptcherService . class ) ; org.shaolin.vogerp.commonmodel.be.ICaptcha captcha = service . getItem ( service . generateOne () ) ; javax.servlet.http.HttpSession session = request . getSession () ; session . setAttribute ( WebflowConstants.USER_TOKEN , captcha . getAnswer () ) ; return captcha . getQuestion () ; } 
public boolean  harrownBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; return true ; } else { return false ; } } 
public void cfgPlavers ( java.util.List < distrib.hadoop.host.Host > hosts ) { cmds . add ( cfgPlavers ( "cat /dev/null >" ) ) ; for ( distrib.hadoop.host.Host s : hosts ) { cmds . add ( cfgPlavers ( ( ( "echo " + ( s . getHostName () ) ) + " >>" ) ) ) ; } } 
private static java.lang.String prepareMsg ( java.lang.String messageCode ) { if ( ( messageCode == null ) || ( messageCode . isEmpty () ) ) { return "nowe orzeczenie" ; } java.lang.String message ; if ( ( java.lang.Integer . parseInt ( messageCode ) ) > 4 ) { message = "nowych orzeczeń" ; } else if ( ( java.lang.Integer . parseInt ( messageCode ) ) > 1 ) { message = "nowe orzeczenia" ; } else { message = "nowe orzeczenie" ; } return message ; } 
public static final void fillPlayers ( net.minecraft.entity.player.EntityPlayer player ) { if ( player instanceof net.minecraft.entity.player.EntityPlayerMP ) { net.minecraft.entity.player.EntityPlayerMP playerMP = ( ( net.minecraft.entity.player.EntityPlayerMP ) ( player ) ) ; net.ci010.attributesmod.properties.Attributes.agility . upgrade ( playerMP ) ; net.ci010.attributesmod.properties.Attributes.endurance . upgrade ( playerMP ) ; net.ci010.attributesmod.properties.Attributes.power . upgrade ( playerMP ) ; } } 
@ java.lang.Override public void  onFailure ( final java.lang.Float volume ) { if ( volume >= 1.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume + 0.01 ) ) ; if ( newVolume > 1.0 ) newVolume = ( ( float ) ( 1.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } 
@ org.junit.Test public void  doListRecursivetest ( ) throws java.lang.Exception { java.util.Map m = new java.util.LinkedHashMap () ; java.util.List a = new java.util.ArrayList () ; m . put ( "b" , "c" ) ; m . put ( "a" , a ) ; a . add ( "Hello" ) ; a . add ( a ) ; a . add ( m ) ; a . add ( new java.util.LinkedHashMap () ) ; java.lang.String json = new ru.yandex.strictweb.ajaxtools.presentation.JsonRefPresentation () . toString ( a ) ; java.lang.System.out . println ( json ) ; } 
@ java.lang.Override public void invoke () { try { trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( this . offset ) ; while ( ! ( java.lang.Thread . interrupted () ) ) { trafficLightsView . changeLight ( TrafficLightsView.Light.GREEN ) ; java.lang.Thread . sleep ( greenLightDuration ) ; trafficLightsView . changeLight ( TrafficLightsView.Light.RED ) ; java.lang.Thread . sleep ( redLightDuration ) ; } } catch ( java.lang.InterruptedException ex ) { java.lang.System.out . println ( "Traffic lights modelling stopped." ) ; } } 
@ java.lang.Override public void onCear () { android.util.Log . i ( "Cancel" , "Canceled" ) ; try { android.util.Log . i ( "Webview Title: " , webview . getTitle () ) ; } catch ( java.lang.Exception e ) { android.util.Log . i ( "webview.getTitle(): " , e . toString () ) ; } } 
@ java.lang.Override public void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; if ( getArguments () . containsKey ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.ARG_ITEM_ID ) ) { org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id = getArguments () . getString ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.ARG_ITEM_ID ) ; mEvent = Events.EVENT_MAP . get ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id ) ; org.shingo.shingoeventsapp.api.InitLoader loader = new org.shingo.shingoeventsapp.api.InitLoader ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id , getContext () ) ; loader . load () ; } } 
private void executeGoal () { this . missionResult = new java.util.HashMap <> () ; main.java.game.GameMessages . sendVoteResults ( this . channel , this . voteTally ) ; try { java.lang.Thread . sleep ( 5000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } if ( this . voteResult ( this . voteTally ) ) { this . currentStatus = main.java.game.ResistanceGame.GameStatus.AWAITING_MISSION_RESULT ; } else { this . nextRound () ; } } 
public void  reading ( ) throws java.io.IOException { java.io.BufferedReader br = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; java.lang.System.out . println ( "Enter data" ) ; bno = java.lang.Integer . parseInt ( br . readLine () ) ; phno = java.lang.Integer . parseInt ( br . readLine () ) ; name = br . readLine () ; days = java.lang.Integer . parseInt ( br . readLine () ) ; } 
public void AddFile ( java.lang.String fileName , org.sem8.ds.rest.resource.NodeResource node ) { java.util.List < org.sem8.ds.rest.resource.NodeResource > temp ; temp = this . fileMap . get ( fileName ) ; if ( temp != null ) { temp . add ( node ) ; } else { temp = new java.util.ArrayList < org.sem8.ds.rest.resource.NodeResource > () ; temp . add ( node ) ; this . fileMap . put ( fileName , temp ) ; } } 
public boolean checksInternal ( wjtoth.cyclicstablematching.Matching matching , wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { return false ; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checksInternal ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } return false ; } 
private java.lang.String _converted ( java.lang.String str ) { java.lang.String s = "" ; int len = str . length () ; for ( int i = 0 ; i < len ; i ++ ) { s += str . charAt ( ( ( len - 1 ) - i ) ) ; } return s ; } 
@ java.lang.Override public void onCommcomplete ( org.apache.kafka.clients.producer.RecordMetadata metadata , java.lang.Exception exception ) { if ( exception == null ) { org.apache.kafka.common.TopicPartition tp = new org.apache.kafka.common.TopicPartition ( metadata . topic () , metadata . partition () ) ; offsets . put ( tp , metadata . offset () ) ; } else { org.apache.kafka.streams.processor.internals.RecordCollector.log . error ( ( "Error sending record: " + metadata ) , exception ) ; } } 
public java.lang.String  runN ( java.lang.String input ) throws SoFTlib.SoFTException { int index = de.unidue.stud.maha.Main . getInputIndex ( myChar () ) ; int zahl = java.lang.Integer . valueOf ( SoFTlib.Helper . words ( input , 1 , index , index ) ) ; java.lang.String maskierer = de.unidue.stud.maha.Main . getMaskierer () ; form ( 'e' , zahl ) . send ( maskierer ) ; return "0" ; } 
public void uninaryOper ( int o ) { java.lang.String op ; switch ( o ) { default: case org.squiddev.cobalt.Lua.OP_UNM : op = "neg" ; break; case org.squiddev.cobalt.Lua.OP_LEN : op = "length" ; break; case org.squiddev.cobalt.Lua.OP_NOT : op = "not" ; break; } main . visitMethodInsn ( org.squiddev.cobalt.luajc.compilation.INVOKESTATIC , org.squiddev.cobalt.luajc.compilation.CLASS_OPERATION , op , ( ( ( ( "(" + ( TYPE_STATE ) ) + ( TYPE_LUAVALUE ) ) + ")" ) + ( TYPE_LUAVALUE ) ) , false ) ; } 
public java.util.Map < java.lang.Integer , int [] > getListOfCocoordinate () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; key ++ ; } } return listOfCoordinates ; } 
private void insertpicture ( javax.servlet.http.Part picture , com.lavalloisir.beans.User user ) { java.lang.String pictureName = null ; try { pictureName = getFileName ( picture ) ; validPictureName ( pictureName ) ; writeFile ( picture , pictureName ) ; java.lang.String localPath = path . substring ( path . indexOf ( "/img" ) ) ; user . setPicture ( ( ( "/Lavalloisir" + localPath ) + pictureName ) ) ; } catch ( java.lang.Exception e ) { setError ( com.lavalloisir.forms.RegistrationForm.FIELD_PICTURE , e . getMessage () ) ; } } 
@ java.lang.Override public void replaceAllTextOnPages ( int pageNumber , java.lang.String textToAdd ) { if ( ( pageNumber <= 0 ) || ( pageNumber > ( this . pages . length ) ) ) { java.lang.System.out . println ( "Invalid page number." ) ; return; } if ( ( textToAdd == null ) || ( textToAdd . equals ( "" ) ) ) { java.lang.System.out . println ( "Invalid text for adding." ) ; return; } this . pages [ ( pageNumber - 1 ) ] . deleteText () ; this . pages [ ( pageNumber - 1 ) ] . addText ( textToAdd ) ; } 
private void  setApplications ( com.mcnaughton.client.spotifyModels.AccessResponse response ) { com.mcnaughton.client.SpotifyClient.accessToken = response . getAccess_token () ; if ( ( response . getRefresh_token () ) != null ) { com.mcnaughton.client.SpotifyClient.refreshToken = response . getRefresh_token () ; } com.mcnaughton.client.SpotifyClient.tokenType = response . getToken_type () ; com.mcnaughton.client.SpotifyClient.expireDate = org.joda.time.DateTime . now () . plusSeconds ( response . getExpires_in () ) ; } 
protected static org.matheclipse.core.interfaces.IAST SortResult ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; } 
@ java.lang.Override public T invertedCumulativeProbility ( double cumulativeProbability ) { com.google.common.base.Preconditions . checkArgument ( ( ( 0 < cumulativeProbability ) && ( cumulativeProbability <= 1.0 ) ) ) ; long card = domain . cardinality () ; long min = domain . ordinal ( domain . min () ) ; long ordinal = ( ( ( long ) ( java.lang.Math . ceil ( ( cumulativeProbability * card ) ) ) ) + min ) - 1 ; return domain . value ( ordinal ) ; } 
private void writeDATA () { try ( java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( new java.io.FileOutputStream ( file , true ) , "UTF-8" ) ) ) { writer . write ( ( ( ( ( de.neffez.timetrack.util.DateUtil . getTodayFormatted ( TimeTrackConstants.DE_DATE ) ) + " " ) + ( timeSinceStartup . getText () ) ) + "\n" ) ) ; appendTextArea ( "Data written. You may exit now." ) ; } catch ( java.io.IOException e ) { appendTextArea ( ( "Error writing the data: " + ( e . getMessage () ) ) ) ; e . printStackTrace () ; } } 
@ java.lang.Override public void submit () { if ( ( mCropPhoto ) != null ) { com.pkjiao.friends.mm.common.CommonDataStructure.UploadHeadPicResultEntry resultEntry = com.pkjiao.friends.mm.utils.Utils . uploadHeadPicBitmap ( CommonDataStructure.URL_UPLOAD_HEAD_PIC , uid , mCropPhoto , mCropPhotoName ) ; if ( ! ( isUidExistInHeadPicDB ( uid ) ) ) { insertHeadPicToHeadPicsDB ( resultEntry ) ; } else { updateHeadPicToHeadPicsDB ( resultEntry ) ; } } mHandler . sendEmptyMessage ( com.pkjiao.friends.mm.activity.FillUserInfoActivity.UPLOAD_USER_HEADER_FINISH ) ; } 
@ java.lang.Override public boolean equorts ( java.lang.Object o ) { if ( ! ( o instanceof org.snt.inmemantlr.tree.AstNode ) ) return false ; org.snt.inmemantlr.tree.AstNode n = ( ( org.snt.inmemantlr.tree.AstNode ) ( o ) ) ; return ( ( ( ( n . getId () ) == ( this . getId () ) ) && ( n.ntype . equorts ( this . ntype ) ) ) && ( n.label . equorts ( this . label ) ) ) && ( this . children . equorts ( n.children ) ) ; } 
public void robottomMsg () { leftStick = new org.usfirst.frc.team3501.robot.Joystick ( LEFT_JOYSTICK_PORT ) ; rightStick = new org.usfirst.frc.team3501.robot.Joystick ( RIGHT_JOYSTICK_PORT ) ; drivetrain = new org.usfirst.frc.team3501.robot.Drivetrain () ; arm = new org.usfirst.frc.team3501.robot.Arm () ; claw = new org.usfirst.frc.team3501.robot.Claw () ; timer = new edu.wpi.first.wpilibj.Timer () ; auton = new org.usfirst.frc.team3501.robot.Auton ( arm , claw , drivetrain , timer ) ; } 
@ java.lang.Override public void  onAnswer ( okhttp3.Call call , okhttp3.Response response ) throws java.io.IOException { if ( response . isSuccessful () ) { java.lang.String responseStr = response . body () . string () ; android.util.Log . d ( "RESPONSE WHOAMI" , responseStr ) ; refreshToken () ; } else { android.util.Log . d ( "RESPONSE WHOAMI" , "ertyui2" ) ; refreshToken () ; } } 
private java.lang.String addFolder ( org.jdom2.Document doc , java.lang.String [] files , java.lang.String dirName ) { if ( files != null ) { java.util.Arrays . sort ( files ) ; } org.jdom2.Element p = buildElement ( files , dirName ) ; doc . getRootElement () . addContent ( p ) ; return p . getName () ; } 
@ java.lang.Override public void onPageCushed ( int position , float positionOffset , int positionOffsetPixels ) { int count = ( ( listener ) instanceof com.heinrichreimersoftware.materialintro.view.FadeableViewPager.OnOverscrollPageChangeListener ) ? com.heinrichreimersoftware.materialintro.view.FadeableViewPager . super . getAdapter () . getCount () : getAdapter () . getCount () ; listener . onPageCushed ( java.lang.Math . min ( position , ( count - 1 ) ) , ( position < count ? positionOffset : 0 ) , ( position < count ? positionOffsetPixels : 0 ) ) ; } 
public void Removetask ( net.sf.memoranda.Task task ) { if ( task == null ) { return; } java.lang.String parentTaskId = task . getParentID () ; if ( parentTaskId != null ) { net.sf.memoranda.Task parentNode = getTaskElement ( parentTaskId ) ; if ( parentNode != null ) parentNode . removeSubTask ( task ) ; } taskList . remove ( task . getID () ) ; rootTaskList . remove ( task ) ; } 
@ java.lang.Override protected void OnAction ( java.lang.String sender , java.lang.String login , java.lang.String hostname , java.lang.String target , java.lang.String action ) { java.lang.String nickName = this . stripNickname ( sender ) ; de.skuzzle.polly.sdk.eventlistener.IrcUser user = new de.skuzzle.polly.sdk.eventlistener.IrcUser ( nickName , login , hostname ) ; de.skuzzle.polly.sdk.eventlistener.MessageEvent e = new de.skuzzle.polly.sdk.eventlistener.MessageEvent ( this , user , target , action ) ; this . fireActionMessageEvent ( e ) ; } 
private void selectReversation ( javafx.scene.input.MouseEvent e ) { int index = conversations . getSelectionModel () . getSelectedIndex () ; java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; codeu.chat.common.ConversationSummary selectedConvo = lookupByTitle ( data , index ) ; if ( selectedConvo != null ) { codeu.chat.client.simplegui.ChatGuiFX.clientContext.conversation . setCurrent ( selectedConvo ) ; updateCurrentConversation ( selectedConvo ) ; } } 
public static int PrintAll ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; org.paces.Stata.Data.DataSet stataData = new org.paces.Stata.Data.DataSet ( dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( stataData ) ; stataData = null ; dbg = null ; return 0 ; } 
private static weka.core.Instances loadSampleFilename ( java.io.File file ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( file ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } 
public void verifyEndpointResponseIsEmpty () { try { java.lang.String string = new com.abhelly.builditbigger.EndpointsAsyncTask ( getContext () , null ) . execute () . get () ; assertNotNull ( string ) ; assertTrue ( ( ( string . length () ) > 0 ) ) ; } catch ( java.lang.InterruptedException | java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } } 
private void add () { com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } 
@ java.lang.Override public void  restore ( java.awt.Graphics g ) { if ( isHighlighted () ) { g . setColor ( java.awt.Color.green ) ; g . drawRect ( x , ( ( y ) + ( ( ( totalCards ) * ( Card.height ) ) / 2 ) ) , Card.width , Card.height ) ; setHighlight ( false ) ; } else { g . setColor ( java.awt.Color.black ) ; } totalCards = 0 ; stackDisplay ( g , top () ) ; } 
protected boolean isWithinbounding ( int x , int y ) { if ( ( ( ( x >= 0 ) && ( x < ( this . width ) ) ) && ( y >= 0 ) ) && ( y < ( this . height ) ) ) { return true ; } return false ; } 
protected void showUnknown ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } 
private void createStudent ( int id , java.lang.String matricol , java.lang.String name , java.lang.String surname ) { com.studios.lucian.students.model.Student student = new com.studios.lucian.students.model.Student ( mCurrentGroup . getNumber () , matricol , name , surname ) ; if ( mStudentsDbHandler . createStudent ( student ) ) { mStudentsList . set ( id , student ) ; listAdapter . notifyDataSetChanged () ; } else { android.widget.Toast . makeText ( getActivity () , R.string.error_update_student , Toast.LENGTH_SHORT ) . show () ; } } 
public void  addInterest ( travelAgencyModel.Travel travel ) { if ( ( client ) != null ) { java.util.HashMap < java.lang.String , java.lang.Object > parameters = new java.util.HashMap <> () ; parameters . put ( CommandConstants.PARAM_TRAVEL , travel ) ; client . sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_TRAVEL , parameters ) ) ; } else { travelsList .  addInterest ( travel ) ; } } 
protected org.eclipse.xtext.common.types.JvmType ImplFindTypeByIdString ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } } 
public static boolean  genericate () { com.sheepit.client.hardware.gpu.GPU.devices = new java.util.LinkedList < com.sheepit.client.hardware.gpu.GPUDevice > () ; java.util.List < com.sheepit.client.hardware.gpu.GPUDevice > gpus = new com.sheepit.client.hardware.gpu.nvidia.Nvidia () . getGpus () ; if ( gpus != null ) { com.sheepit.client.hardware.gpu.GPU.devices . addAll ( gpus ) ; } gpus = new com.sheepit.client.hardware.gpu.opencl.OpenCL () . getGpus () ; if ( gpus != null ) { com.sheepit.client.hardware.gpu.GPU.devices . addAll ( gpus ) ; } return true ; } 
public boolean loadDbPropperties () { java.lang.System.out . println ( ( ( "Load \"" + ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ) + "\"" ) ) ; dbProperties = new java.util.Properties () ; java.io.InputStream input = null ; input = getClass () . getClassLoader () . getResourceAsStream ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ; try { this . dbProperties . load ( input ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( ( ( "Failed to load \"" + ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ) + "\"" ) ) ; e . printStackTrace () ; return false ; } return true ; } 
public void onHeadgingUpdated ( double p_heading , double p_magnetic_heading , double p_true_heading , double p_timestamp , float p_x , float p_y , float p_z , float p_accuracy ) { com.runrev.android.Engine . doHeadingChanged ( p_heading , p_magnetic_heading , p_true_heading , p_timestamp , p_x , p_y , p_z , p_accuracy ) ; if ( m_wake_on_event ) com.runrev.android.Engine . doProcess ( false ) ; } 
static void  writemap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , ? > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , ? > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } 
@ java.lang.Override public void  fast () { if ( ( ( ( z ) <= 2 ) && ( ( steps ) < ( sideLength ) ) ) && ( canMove () ) ) { move () ; ( steps ) ++ ; } else { if ( ! ( canMove () ) ) return; steps = 0 ; ( z ) ++ ; if ( ( z ) == 1 ) { setDirection ( Location.SOUTHWEST ) ; } else if ( ( z ) == 2 ) { setDirection ( Location.EAST ) ; } } } 
@ java.lang.Override public void onActivityCreating ( android.os.Bundle savedInstanceState ) { super . onActivityCreating ( savedInstanceState ) ; android.support.v7.widget.RecyclerView tasksList = getView () . findViewById ( R.id.finished_tasks_recycler_view ) ; tasksList . setHasFixedSize ( true ) ; tasksList . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; mAdapter = new com.example.hasmik_n.todolist.handlers.TasksRecyclerViewAdapter ( tasks ) ; tasksList . setAdapter ( mAdapter ) ; } 
public void test_062 () { framework.common.ClockCommon . switchMode ( "秒表" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "开始" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "停止" ) ; check ( testcase.Object_Description , testcase.Operation_checkExist , "开始" ) ; check ( testcase.Object_Description , testcase.Operation_checkExist , "分享" ) ; } 
@ java.lang.Override public void PreUpdate () { super . PreUpdate () ; if ( this . isMoving ) { java.util.ArrayList < android.graphics.Rect > spriteSequence = dirSpriteMap . get ( curDirection ) ; curSpriteIndex = ( ( curSpriteIndex ) + 1 ) % ( spriteSequence . size () ) ; com.example.vincentzhang.Sprite.Vector2D newPos = this . getSpritePos () . applyDir ( this . getCurDirection () , this . getMoveSpeed () ) ; this . setSpritePos ( newPos ) ; com.example.vincentzhang.Sprite.CollideDetector . setDirtyFlag ( true ) ; } } 
private boolean  schedulesRunning () { long maxAge = ( java.lang.System . currentTimeMillis () ) - ( ( simpleserver.thread.AutoRun.MILLISECONDS_PER_MINUTE ) * ( server.config.properties . getInt ( "c10tMins" ) ) ) ; return ( ( server.config.properties . get ( "c10tArgs" ) . length () ) > 0 ) && ( maxAge > ( lastRun ) ) ; } 
private java.lang.String extractCategory ( java.lang.String noteContent ) { java.lang.String [] contentWords = noteContent . split ( " " ) ; java.lang.String label = null ; for ( java.lang.String word : contentWords ) { if ( ( word . startsWith ( "#" ) ) && ( ( word . length () ) > 1 ) ) { label = word . substring ( 1 ) ; break; } } return label ; } 
private void reg ( java.nio.file.Path dir ) throws java.io.IOException { java.nio.file.WatchKey key = dir . reg ( watcher , java.nio.file.StandardWatchEventKinds.ENTRY_CREATE , java.nio.file.StandardWatchEventKinds.ENTRY_DELETE , java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY ) ; if ( trace ) { java.nio.file.Path prev = keys . get ( key ) ; if ( prev == null ) {} else { if ( ! ( dir . equals ( prev ) ) ) {} } } keys . put ( key , dir ) ; } 
@ org.junit.Test public void  testGetDocContent_invalidDocIdOne ( ) throws java.lang.Exception { adaptor . init ( context ) ; com.google.enterprise.adaptor.testing.RecordingResponse response = new com.google.enterprise.adaptor.testing.RecordingResponse () ; adaptor . getDocContent ( new com.google.enterprise.adaptor.filenet.MockRequest ( new com.google.enterprise.adaptor.DocId ( "foo" ) ) , response ) ; org.junit.Assert . assertEquals ( RecordingResponse.State.NOT_FOUND , response . getState () ) ; } 
@ java.lang.Override public int onStartCmd ( android.content.Intent intent , int flags , int startId ) { if ( intent != null ) { if ( lv.kasparsj.android.util.Objects . equals ( intent . getAction () , getString ( R.string.action_update ) ) ) { if ( screenStateReceiver . isScreenOff () ) { pendingUpdateReceiver . setIsPendingUpdate ( true ) ; } else { lv.kasparsj.android.dwob.model.DailyWords . getInstance () . update () ; } } } return super . onStartCmd ( intent , flags , startId ) ; } 
public org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent getIssue ( java.lang.String eventUrl ) { java.lang.String eventJson = getIssueJson ( eventUrl ) ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent result = null ; try { result = mapper . readValue ( eventJson , org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent . class ) ; } catch ( java.io.IOException iox ) { iox . printStackTrace () ; result = null ; } return result ; } 
@ java.lang.Override protected void onAppSuccess ( int requestCode , int resultCode , android.content.Intent data ) { super . onAppSuccess ( requestCode , resultCode , data ) ; switch ( requestCode ) { case REQ_CODE_SPEECH_INPUT : { if ( ( resultCode == ( RESULT_OK ) ) && ( null != data ) ) { java.util.ArrayList < java.lang.String > result = data . getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; txtSpeechInput . setText ( result . get ( 0 ) ) ; callPuter ( result . get ( 0 ) . toLowerCase () ) ; } break; } } } 
public boolean isallLegal ( sss.domain.Product product ) { return ( isProductCodeValid ( product ) ) && ( ( ( ( isProductUnique ( product ) ) && ( isProductNameValid ( product ) ) ) && ( isCostPricePositive ( product ) ) ) && ( isPricePositive ( product ) ) ) ; } 
public boolean select ( int destX , int destY ) { if ( isFirst = true ) { if ( destX == ( ( this . y ) + 2 ) ) { isFirst = false ; return true ; } } if ( destX == ( ( this . y ) + 1 ) ) { isFirst = false ; return true ; } return false ; } 
public boolean isAddPathSSet ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; return false ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; return true ; } } return true ; } 
private void localServicePermissionsHandler ( int [] grantResults ) { if ( ( grantResults.length ) == 0 ) { return; } for ( int i : grantResults ) { if ( i == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { return; } } checkPermissionToLocalService () ; } 
public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattlecalculate ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattlecalculate ( player , t , attackingUnits , defendingUnits , bombardingUnits , false ) ; } 
private void  handleComplay () { if ( ! ( _updateThumb ) ) return; final org.eclipse.swt.graphics.Rectangle rect = _table . getVisibleScrollableCells () ; final int max = ( ( _scroll . getMaximum () ) - ( _scroll . getMinimum () ) ) + 1 ; final int tWidth = java.lang.Math . min ( java.lang.Math . max ( 1 , rect.width ) , max ) ; _scroll . setThumb ( tWidth ) ; _scroll . setEnabled ( ( tWidth != max ) ) ; } 
public static void tof ( int n , char src , char aux , char dest ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . tof ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . tof ( ( n - 1 ) , aux , src , dest ) ; } } 
public void  containerResized ( java.awt.event.ComponentEvent e ) { view.MapScrollPane p = ( ( view.MapScrollPane ) ( e . getComponent () ) ) ; p.map . repaint () ; p . getViewport () . setViewPosition ( p . getCenter () ) ; p.map . updateDisplay ( p . getWidth () , p . getHeight () ) ; } 
public void removeRemovedView ( carelender.model.EventList eventList ) { for ( int i = 0 ; i < ( events . size () ) ; i ++ ) { for ( carelender.model.Event eventObj : eventList ) { if ( ( events . get ( i ) . getUid () ) == ( eventObj . getUid () ) ) { events . remove ( i ) ; } } } saveToFile ( filename , events ) ; } 
@ java.lang.Override public void invoke () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog . isShowing () ) ) { mDownloadProgressDialog . dismiss () ; } mDownloadProgressDialog = null ; if ( ! ( task . isCanceled () ) ) { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.string.success ) . setIcon ( R.drawable.ic_done_black_24dp ) . setMessage ( R.string.download_complete ) . setCancelable ( false ) . setPositiveButton ( R.string.label_ok , null ) . show () ; } } 
public int getPartyIDFromSenderInvit ( int playerID ) { java.util.List < session.Invite > myInvites = player . getInvites () ; int partyID = 0 ; for ( int i = 0 ; i < ( myInvites . size () ) ; i ++ ) { if ( playerID == ( myInvites . get ( i ) . getSenderID () ) ) { partyID = myInvites . get ( i ) . getPartyID () ; break; } } java.lang.System.out . println ( partyID ) ; return partyID ; } 
public void adeUp ( ) throws java.lang.Exception { super . adeUp () ; java.io.File inputFile = new java.io.File ( testFileRaw ) ; byte [] fileData = new byte [ ( ( int ) ( inputFile . length () ) ) ] ; java.io.DataInputStream dis = new java.io.DataInputStream ( new java.io.FileInputStream ( inputFile ) ) ; dis . readFully ( fileData ) ; } 
public static boolean listEquiesAll ( java.util.List < double [] > list , double [] array ) { for ( double [] element : list ) { if ( java.util.Arrays . equals ( element , array ) ) { return true ; } } return false ; } 
public void continuallyDiscoverServices () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true ; } android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Calling discover and submitting first discover task" ) ; continueDiscovering = true ; discoverTasks = new java.util.ArrayList <> () ; discoverServices () ; submitDiscoverTask () ; } } 
public static void  saveUnpersavedResults ( android.content.Context context ) { org.md2k.thoughtshakeup.Questions . getInstance () . setEndTime ( org.md2k.datakitapi.time.DateTime . getDateTime () ) ; org.md2k.thoughtshakeup.Questions . getInstance () . setStatus ( Constants.ABANDONED_BY_TIMEOUT ) ; org.md2k.thoughtshakeup.QuestionAnswer . getInstance ( context ) . add ( new org.md2k.thoughtshakeup.QuestionsJSON ( org.md2k.thoughtshakeup.Questions . getInstance () ) ) ; org.md2k.thoughtshakeup.Questions . getInstance () . destroy () ; } 
@ java.lang.Override public void executeCmd ( int address , int value , jace.apple2e.MOS65C02.MODE addressMode , jace.apple2e.MOS65C02 cpu ) { if ( ( value & ( 1 < < ( bit ) ) ) != 0 ) { cpu . setProgramCounter ( address ) ; cpu . addWaitCycles ( ( cpu.pageBoundaryPenalty ? 2 : 1 ) ) ; } } 
@ org.junit.Before public void  setup () { tested = new net.remotehost.domdetective.parser.TemplateParser () ; org.mockito.BDDMockito . given ( propertiesParser . getArray ( org.mockito.Matchers . anyString () , org.mockito.Matchers . any () ) ) . willReturn ( new java.lang.String [] { "something" , "else" , "misconfiguration" } ) ; } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { for ( com.google.firebase.database.DataSnapshot postSnapshot : dataSnapshot . getChildren () ) { com.expixel.binki.Post post = postSnapshot . getValue ( com.expixel.binki.Post . class ) ; viewHolder.bookName . setText ( post.bookName ) ; viewHolder.likeCount . setText ( java.lang.String . valueOf ( post.starCount ) ) ; } } 
public boolean isSparkStreamingThreadlet () { boolean isSparkStreamingThreadlet = false ; if ( org.talend.core.GlobalServiceRegister . getDefault () . isServiceRegistered ( org.talend.core.ui.ISparkStreamingJobletProviderService . class ) ) { org.talend.core.ui.ISparkStreamingJobletProviderService sparkJobletService = ( ( org.talend.core.ui.ISparkStreamingJobletProviderService ) ( org.talend.core.GlobalServiceRegister . getDefault () . getService ( org.talend.core.ui.ISparkStreamingJobletProviderService . class ) ) ) ; if ( sparkJobletService != null ) { isSparkStreamingThreadlet = sparkJobletService . isSparkStreamingThreadletComponent ( this ) ; } } return isSparkStreamingThreadlet ; } 
public void etParent ( model.ClassNode node ) { this . node = node ; titleField . setText ( this . node . getTitle () ) ; attributesArea . setText ( this . node . attributesProperty () . getValue () ) ; operationsArea . setText ( this . node . operationsProperty () . getValue () ) ; } 
@ java.lang.Override public void callback ( com.parse.ParseUser parseUser , com.parse.ParseException e ) { if ( parseUser == null ) {} else if ( parseUser . isNew () ) { getFacebookInfo () ; } else { android.util.Log . d ( com.trytara.tara.LoginActivity.TAG , ( "CURRENT USER: " + ( parseUser . toString () ) ) ) ; } } 
public void  changeBotRight ( android.view.View view ) { if ( ( currDragon ) == ( ( dragons . size () ) - 1 ) ) { currDragon = 0 ; addAccessory ( dragons . get ( currDragon ) ) ; } else { currDragon += 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } } 
public static void tests_84 () { framework.common.GalleryCommon . deleteMoreGallery () ; framework.common.GalleryCommon . clickGallery () ; excute ( testcase.Object_Description , testcase.Operation_WaitForExists , "更多选项" , "10000" ) ; excute ( testcase.Object_Description , testcase.Operation_ClickWait , "更多选项" ) ; excute ( testcase.Object_Text , testcase.Operation_ClickWait , "编辑" ) ; check ( testcase.Object_Text , testcase.Operation_checkExist , "保存" ) ; } 
private void  paintPhaseTable1 () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } 
public void set () { canTouchThis = false ; try { clearLevel () ; clearLevel () ; clearLevel () ; clearLevel () ; } catch ( java.lang.NullPointerException a ) {} level = - 1 ; nextLevel () ; scor . setScore ( 0 ) ; currentGameOver = false ; if ( endiSet ) { endi . hide () ; } if ( aset ) { a . hide () ; } canTouchThis = true ; } 
public java.lang.String loadJSFromResource () { java.lang.String json ; try { java.io.InputStream is = this . getAssets () . open ( "data.json" ) ; int size = is . available () ; byte [] buffer = new byte [ size ] ; is . read ( buffer ) ; is . close () ; json = new java.lang.String ( buffer , "UTF-8" ) ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; return null ; } return json ; } 
public void setCampaign ( java.lang.String name , java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( name , campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } setCampaign ( camp ) ; } 
private void moving () { snake . moving () ; main.java.Game.stepCounter = java.lang.Math . max ( 0 , ( ( main.java.Game.stepCounter ) - 1 ) ) ; if ( snake . eat () ) { updateScore () ; food . moving () ; main.java.Game.stepCounter = getShortestDistance () ; } if ( snake . collision () ) gameOver () ; } 
public java.util.ArrayList < model.project.Project >  getProjectes () { java.util.ArrayList < model.project.Project > list = new java.util.ArrayList < model.project.Project > () ; for ( util.serialization.Serializable item : this . serializer . getItems ( this ) ) { list . add ( ( ( model.project.Project ) ( item ) ) ) ; } return list ; } 
public void Getmiddle () { int middle = ( size ) / 2 ; if ( ( ( size ) % 2 ) != 0 ) middle = middle + 1 ; if ( ( isEmpty () ) == false ) { Node temp = head ; int i = 1 ; while ( i != middle ) { temp = temp . getNext () ; i = i + 1 ; } java.lang.System.out . println ( temp . getNext () . getData () ) ; } else { java.lang.System.out . println ( "No data exist" ) ; } } 
private static java.lang.String getKindForaliasFor ( java.lang.String simpleName ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : org.ballerinalang.composer.service.workspace.tools.ModelGenerator.alias . entrySet () ) { if ( simpleName . equals ( entry . getValue () ) ) { return entry . getKey () ; } } throw new java.lang.AssertionError ( ( "Undefined entry :" + simpleName ) ) ; } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; } mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } 
protected void  generatePrivateCStatperties ( org.thingml.xtext.thingML.Thing thing , java.lang.StringBuilder builder , org.thingml.compilers.cpp.CppCompilerContext ctx ) { java.lang.StringBuilder cppHeaderBuilder = ctx . getCppHeaderCode () ; for ( org.thingml.xtext.thingML.Function f : org.thingml.xtext.constraints.ThingMLHelpers . allFunctions ( thing ) ) { generatePrototypeforThingDirect ( f , cppHeaderBuilder , ctx , thing , true ) ; cppHeaderBuilder . append ( ";\n" ) ; } } 
public void addedPoint ( travelAgencyModel.Bus bus ) { if ( ( client ) != null ) { java.util.HashMap < java.lang.String , java.lang.Object > parameters = new java.util.HashMap <> () ; parameters . put ( CommandConstants.PARAM_BUS , bus ) ; client . sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_BUS , parameters ) ) ; busList . addedPoint ( bus ) ; } else { busList . addedPoint ( bus ) ; } } 
public boolean checkWindow ( boolean xTurn , int column ) { boolean horizontal = ( checkWindowHorizontal ( xTurn , column ) ) > 4 ; boolean vertical = ( checkWindowVertical ( xTurn , column ) ) > 4 ; boolean diagonal = ( checkWindowDiagonal ( xTurn , column ) ) > 4 ; return ( horizontal || vertical ) || diagonal ; } 
@ com.dataloom.datastore.data.controllers.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitysetInternal ( @ com.dataloom.datastore.data.controllers.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ com.dataloom.datastore.data.controllers.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , @ com.dataloom.datastore.data.controllers.RequestParam ( value = TOKEN , required = false ) java.lang.String token , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitysetInternal ( entitySetId , fileType , token ) ; } 
private void seekUntil ( int position ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "seekUntil" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_MUSICSERVICE_SEEKTO ) ; intent . putExtra ( "SEEK_TO" , position ) ; startService ( intent ) ; } 
@ java.lang.Override public void onAdFailed2Loader ( int error ) { android.util.Log . d ( com.samcodes.admob.BannerListener.TAG , "onBannerFailedToLoad" ) ; android.util.Log . d ( com.samcodes.admob.BannerListener.TAG , ( "Hiding banner with id " + ( id ) ) ) ; com.samcodes.admob.AdView view = com.samcodes.admob.AdMobExtension . getBannerViewForUnitId ( id ) ; view . setVisibility ( View.INVISIBLE ) ; com.samcodes.admob.AdMobExtension . getLayout () . removeView ( view ) ; com.samcodes.admob.AdMobExtension . getLayout () . bringToFront () ; com.samcodes.admob.AdMobExtension . callHaxe ( "onBannerFailedToLoad" , new java.lang.Object [] { id } ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/addCommomity" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public java.lang.String addCommomity ( @ org.springframework.web.bind.annotation.RequestParam ( value = "purchaseCaseId" , required = true ) java.lang.String purchaseCaseId , @ org.springframework.web.bind.annotation.RequestParam ( value = "commodityIds" , required = true ) java.lang.String [] commodityIds ) { java.lang.Integer [] ids = new java.lang.Integer [ commodityIds.length ] ; for ( int i = 0 ; i < ( commodityIds.length ) ; i ++ ) { ids [ i ] = java.lang.Integer . valueOf ( commodityIds [ i ] ) ; } purchaseCaseService . addPurchaseCaseIdToCommoditys ( purchaseCaseId , ids ) ; return com.jersey.purchaseCase.controller.PurchaseCaseController.REDIRECT_ADD_COMMODITY . replace ( "{id}" , purchaseCaseId ) ; } 
private boolean checkIfAllTilesAreedInplace () { for ( int i = 0 ; i < ( currentField.length ) ; i ++ ) { for ( int j = 0 ; j < ( currentField [ i ] . length ) ; j ++ ) { if ( ! ( currentField [ i ] [ j ] [ 0 ] . equals ( solutionField [ i ] [ j ] [ 0 ] ) ) ) return false ; } } return true ; } 
private boolean addressContains ( java.lang.String address , java.lang.String fromRule ) { java.lang.String [] fromRules = fromRule . split ( ";" ) ; for ( int i = 0 ; i < ( fromRules.length ) ; i ++ ) { if ( ( address != null ) && ( address . contains ( fromRules [ i ] ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public void  created ( co.gov.inci.evaluon.backend.models.classes.authentication.Token token , retrofit.client.Response response ) { userToken = token ; co.gov.inci.evaluon.backend.models.classes.user.Evaluee.Info evaluee = new co.gov.inci.evaluon.backend.models.classes.user.Evaluee.Info ( co.gov.inci.evaluon.backend.models.classes.user.Evaluee . genderById ( gender . getCheckedRadioButtonId () ) , co.gov.inci.evaluon.backend.models.classes.user.Evaluee . disabilitiesById ( disability . getCheckedRadioButtonId () ) , co.gov.inci.evaluon.backend.models.classes.user.Evaluee . typesById ( type . getCheckedRadioButtonId () ) , co.gov.inci.evaluon.backend.models.classes.user.Evaluee . levelsById ( level . getCheckedRadioButtonId () ) ) ; api . createEvaluee ( token . toString () , evaluee , evalueeCallback ) ; } 
public void onSetAlangeInfo ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } 
@ org.junit.Test public void testRenderBlock ( ) throws com.blackcrowsys.canvas.exception.CanvasOperationException { fillRegion () ; consoleCanvas . drawRectangle ( new com.blackcrowsys.canvas.Coordinate ( 2 , 1 ) , new com.blackcrowsys.canvas.Coordinate ( 4 , 2 ) ) ; consoleCanvas . fillRegion ( new com.blackcrowsys.canvas.Coordinate ( 1 , 1 ) , 'o' ) ; assertArrayEquals ( canvas , ( ( char [] [] ) ( consoleCanvas . getCanvas () ) ) ) ; } 
public java.math.BigDecimal getmainFormPrice ( com.ersoft.web.domain.business.contract.MainContract mainContract ) { java.math.BigDecimal price = java.math.BigDecimal.ZERO ; if ( mainContract != null ) { java.util.List < com.ersoft.web.domain.business.contract.SubContract > subs = subContractService . findActiveAll ( com.ersoft.web.service.business.SubContractPredicates . mainContractPredicate ( mainContract ) , new org.springframework.data.domain.Sort ( org.springframework.data.domain.Sort.Direction.DESC , "createdDate" ) ) ; for ( com.ersoft.web.domain.business.contract.SubContract sub : subs ) { price = price . add ( getSubContractPrice ( sub ) ) ; } } return price ; } 
@ java.lang.Override public boolean quALS ( java.lang.Object obj ) { if ( obj == null ) return false ; if ( ! ( obj instanceof cz.dd4j.simulation.data.dungeon.elements.places.Corridor ) ) return false ; cz.dd4j.simulation.data.dungeon.elements.places.Corridor other = ( ( cz.dd4j.simulation.data.dungeon.elements.places.Corridor ) ( obj ) ) ; return ( ( cz.dd4j.utils.Safe . quALS ( room1 , other.room1 ) ) && ( cz.dd4j.utils.Safe . quALS ( room2 , other.room2 ) ) ) || ( ( cz.dd4j.utils.Safe . quALS ( room1 , other.room2 ) ) && ( cz.dd4j.utils.Safe . quALS ( room2 , other.room1 ) ) ) ; } 
public java.lang.String getTodayAddToday ( int days ) { java.util.Date heute = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd" ) ; java.util.Calendar c = java.util.Calendar . getInstance () ; c . setTime ( heute ) ; c . add ( java.util.Calendar.DATE , days ) ; return sdf . format ( c . getTime () ) ; } 
public void refetchModmodules () { try { tern.eclipse.ide.core.IWorkingCopy workingCopy = getWorkingCopy () ; workingCopy . addWorkingCopyListener ( this ) ; modulesBlock . refresh ( workingCopy . getAllModules () , workingCopy . getCheckedModules () ) ; } catch ( java.lang.Throwable e ) { tern.eclipse.ide.internal.ui.Trace . trace ( Trace.SEVERE , "Error while loading tern project" , e ) ; } } 
public void brekening () { invoer = java.lang.Integer . parseInt ( tekstvak . getText () ) ; if ( ( ( invoer ) >= 1 ) && ( ( invoer ) <= 3 ) ) { beurten = true ; stenen -= invoer ; } else if ( ( ( 3 < ( invoer ) ) || ( ( invoer ) > 5 ) ) || ( ( invoer ) < 0 ) ) { error () ; } } 
@ java.lang.Override public void submit () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int i = 0 ; i < ( headerValues.length ) ; i ++ ) { tvDataset . getColumns () . add ( tu . createColumn ( i , headerValues [ i ] ) ) ; } } 
private void clearInMemoryTaskInfo ( int jobId ) { java.util.List < cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID > clearedTasks = com.google.common.collect.Lists . newArrayList () ; java.util.LinkedList < cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID > tasks = managedJobToTaskList . remove ( jobId ) ; if ( tasks != null ) { for ( cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID id : tasks ) { managedTaskIdToInfos . remove ( id ) ; clearedTasks . add ( id ) ; } } managedJobIdToInfos . remove ( jobId ) ; cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.LOG . info ( ( ( ( "In-memory state purged: jobId=" + jobId ) + ", tasks=" ) + clearedTasks ) ) ; } 
protected java.util.ArrayList < pbs.parser.Statement >  stmIterator () { java.util.ArrayList < pbs.parser.Statement > stmtlist = new java.util.ArrayList < pbs.parser.Statement > () ; pbs.parser.Statement s = nextStatement () ; while ( s != null ) { stmtlist . add ( s ) ; s = nextStatement () ; } return stmtlist ; } 
private java.lang.StringBuilder  println ( java.lang.String level , java.lang.Object message ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.text.SimpleDateFormat format = new java.text.SimpleDateFormat ( com.kk.utils. println.ConsoleLogger.formatDefaultTimestamp ) ; java.lang.String time = format . format ( new java.util.Date () ) ; sb . append ( time ) ; sb . append ( " " ) ; sb . append ( level ) ; sb . append ( " " ) ; sb . append ( getFileNameAndLineNumber () ) ; sb . append ( " - " ) ; sb . append ( message ) ; return sb ; } 
public dna.FastqRecord getQuery ( ) throws dna.RecordFormatException , java.io.IOException { java.lang.String line = theBufferedReader . readLine () ; if ( line == null ) { return null ; } java.lang.String line1 = theBufferedReader . readLine () ; java.lang.String line2 = theBufferedReader . readLine () ; java.lang.String line3 = theBufferedReader . readLine () ; dna.FastqRecord output = new dna.FastqRecord ( line , line1 , line3 ) ; return output ; } 
@ java.lang.Override public void processInput ( nl.weeaboo.vn.math.Matrix parentTransform , nl.weeaboo.vn.input.IInput input ) { nl.weeaboo.vn.math.Matrix inputTransform = parentTransform . translatedCopy ( ( - ( getX () ) ) , ( - ( getY () ) ) ) ; for ( nl.weeaboo.vn.scene.IVisualElement elem : nl.weeaboo.vn.scene.impl.SceneUtil . getChildren ( this , VisualOrdering.FRONT_TO_BACK ) ) { elem . processInput ( inputTransform , input ) ; } } 
@ org.junit.Test public void testProcessXOr ( ) throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 5 , 6 , 0 , 0 , "xor a, b" ) ; processor . processXor () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 3 , 6 , 0 , 0 ) ; org.junit.Assert . assertFalse ( processor.zero ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 5 , 5 , 0 , 0 , "xor a, b" ) ; processor . processXor () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 0 , 5 , 0 , 0 ) ; org.junit.Assert . assertTrue ( processor.zero ) ; } 
public java.util.ArrayList < graph.Vector > getVectorsPointedAWay ( graph.Point p ) { java.util.ArrayList < graph.Vector > vs = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( getEdges () . size () ) ; i ++ ) { if ( getEdges () . get ( i ) . getP1 () . equals ( p ) ) { vs . add ( getEdges () . get ( i ) ) ; } } return vs ; } 
public void initializeCommComponent () { componentSelectionPanel . clear () ; for ( int i = 0 ; i < ( data.componentIdList . size () ) ; i ++ ) { com.google.gwt.user.client.ui.HTML item = new com.google.gwt.user.client.ui.HTML ( data.componentIdList . get ( i ) ) ; item . setStyleName ( "wmt-ComponentSelectionMenuItem" ) ; item . addStyleDependentName ( "missing" ) ; componentSelectionPanel . add ( item ) ; } } 
public void changeToPrevSection () { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction upTransaction = fragmentManager . beginTransaction () ; upTransaction . setCustomAnimations ( R.anim.slide_in_top , R.anim.slide_out_bottom , R.anim.slide_in_left , R.anim.slide_out_right ) ; try { changeToNewSection ( contentManager . getPreviousSubItem () , upTransaction ) ; } catch ( java.util.NoSuchElementException e ) {} } 
public void  ifax ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( "; ifax " + etiquette ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) ) ; } 
public void checks () { if ( ( name . equals ( names [ 0 ] ) ) && ( password . equals ( "password" ) ) ) { launchActivity () ; return; } if ( ! ( name . equals ( names [ 0 ] ) ) ) { Notification . setText ( "Invalid User" ) ; } else { Notification . setText ( "Wrong Pass" ) ; pass . setText ( "" ) ; } return; } 
@ java.lang.Override public void  doesThis ( com.github.oxo42.stateless4j.transitions.Transition < com.couchbase.lite.replicator.ReplicationState , com.couchbase.lite.replicator.ReplicationTrigger > transition ) { com.couchbase.lite.util.Log . v ( Log.TAG_SYNC , ( ( ( "[onExit()] " + ( transition . getSource () ) ) + " => " ) + ( transition . getDestination () ) ) ) ; if ( ( transition . getSource () ) == ( transition . getDestination () ) ) { return; } notifyChangeListenersStateTransition ( transition ) ; } 
public static java.lang.String readStringInFiles ( java.io.File inputFile ) { if ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) { if ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringInFilesWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } else { return edu.iastate.symex.util.FileIO . readStringInFilesWithoutCache ( inputFile ) ; } } 
public int selectStudent ( com.carpool.model.Student student ) { return jdbcTemplate . update ( UPDATE , student . getFirstName () , student . getLastName () , student . getEmail () , ( student . isDriver () ? 1 : 0 ) , ( student . isRider () ? 1 : 0 ) , student . getIdStudent () ) ; } 
public void voster ( ga.Genes genes ) { java.util.Random rand = new java.util.Random () ; for ( int i = 2 ; i < ( genes . getNum () ) ; i += 2 ) { int cuttingPoint = ( rand . nextInt ( ( ( genes . getDim () ) - 1 ) ) ) + 1 ; ga.Gene . shiftDNASection ( genes . getAt ( i ) , genes . getAt ( ( i + 1 ) ) , cuttingPoint , genes . getDim () ) ; } } 
public void targetsizecheck ( shared.logic.support.action.Action a ) { if ( ( a.ability ) == ( shared.roles.Jailor.EXECUTE_ ) ) { if ( ( a . getTargets () . size () ) > ( jailedTargets . size () ) ) Exception ( "Cannot execute someone that isn't jailed" ) ; if ( ( getPerceivedCharges () ) != ( shared.logic.support.rules.Rules.UNLIMITED ) ) if ( ( a . getTargets () . size () ) > ( getPerceivedCharges () ) ) Exception ( "Not enough executions for that many targets" ) ; } } 
public void showExample ( java.lang.String message ) { if ( message . equals ( "" ) ) { return; } tfMainInput . setText ( "" ) ; my.edu.taylors.dad.chat.entity.Message newMessage = new my.edu.taylors.dad.chat.entity.Message ( message , my.edu.taylors.dad.chat.entity.ClientType.ME ) ; addMessage ( newMessage ) ; sendMessage ( message ) ; } 
public java.lang.String  unresolveItem () { Ticket current = ( ( Ticket ) ( queue . removeMin () ) ) ; current . setSolution ( solutions [ current . getPriority () ] ) ; java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current . getSolution () ) ; return q ; } 
public void runner ( int port , int timeOut ) { printInit ( port , timeOut ) ; try { serverSocket = new java.net.ServerSocket ( port ) ; serverSocket . setSoTimeout ( timeOut ) ; socket = serverSocket . accept () ; printWelcome () ; htw.lab04.app.MessageReceiver messageReceiver = new htw.lab04.app.MessageReceiver ( socket ) ; htw.lab04.app.MessageSender messageSender = new htw.lab04.app.MessageSender ( socket ) ; messageSender . start () ; messageReceiver . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public boolean  equches ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( ! ( obj instanceof iguana.utils.input.Input ) ) return false ; iguana.utils.input.Input other = ( ( iguana.utils.input.Input ) ( obj ) ) ; return ( ( this . length () ) == ( other . length () ) ) && ( java.util.Arrays .  equches ( characters , other.characters ) ) ; } 
private void DecideWhereToGoReturnTo () { if ( ( motive ) != null ) { if ( ( motive . equals ( "pre-trip" ) ) || ( motive . equals ( "log-in" ) ) ) { startLogOutService () ; navigateToLogin () ; } else { java.lang.String newStatus = _statusToDisplay ; storeStatusInMemory ( newStatus ) ; navigateToMainMenu ( newStatus ) ; } } else { java.lang.String newStatus = _statusToDisplay ; storeStatusInMemory ( newStatus ) ; navigateToMainMenu ( newStatus ) ; } } 
private com.progressoft.jip.ui.action.Action < T > generateActivity ( com.progressoft.jip.ui.xml.element.ActionXml actionXml ) { try { java.lang.Object newInstance = newActionInstance ( actionXml ) ; return ( ( com.progressoft.jip.ui.action.Action < T > ) ( newInstance ) ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException | java.lang.SecurityException | java.lang.NoSuchMethodException | java.lang.IllegalArgumentException | java.lang.reflect.InvocationTargetException e ) { throw new com.progressoft.jip.ui.xml.UserInterfaceParsingException ( e ) ; } } 
private void createServer ( java.lang.String email , java.lang.String name , java.lang.String password , java.lang.String address , java.lang.String birthdate , double posX , double posY ) { Client newClient = new Client ( email , name , password , address , birthdate , posX , posY ) ; this . clients . add ( newClient ) ; } 
public static void addYearsShares ( final java.util.Map < org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod , java.math.BigDecimal > result , final org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod curricularPeriod , final java.math.BigDecimal credits ) { final java.math.BigDecimal creditsYear = result . get ( curricularPeriod ) ; result . put ( curricularPeriod , ( creditsYear != null ? creditsYear . add ( credits ) : credits ) ) ; } 
@ java.lang.SuppressWarnings ( value = "DefaultLocale" ) private static boolean hasextension ( java.lang.String path , java.lang.String [] extensions ) { if ( path == null ) { return false ; } for ( int i = 0 ; i < ( extensions.length ) ; i ++ ) { if ( path . toLowerCase () . endsWith ( extensions [ i ] ) ) { return true ; } } return false ; } 
private boolean checkEven ( int number ) { if ( number == 2 ) { return true ; } if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; } 
@ java.lang.Override public void onScrollFrameUpdated ( android.widget.AbsListView view , int scrollState ) { switch ( scrollState ) { case AbsListView.OnScrollListener.SCROLL_STATE_IDLE : if ( ( view . getLastVisiblePosition () ) == ( ( view . getCount () ) - 1 ) ) { ( page ) ++ ; totalUrl = ( baseUrl ) + ( getPageValue ( page ) ) ; getData () ; } break; } } 
public void SetOption ( java.util.ArrayList < gui.Button > options , entity.AbstractEntity entity ) { if ( options != null ) { for ( int i = 0 ; i < ( options . size () ) ; i ++ ) { options . get ( i ) . setSize ( 30 , 30 ) ; } } else if ( entity != ( calledby ) ) { return; } calledby = entity ; this . options = options ; } 
@ java.lang.Override public void stroke ( java.awt.Graphics g ) { super . stroke ( g ) ; java.awt.Graphics2D g2d = ( ( java.awt.Graphics2D ) ( g ) ) ; this . applyTransformations ( g2d ) ; for ( edu.virginia.engine.display.DisplayObject child : children ) { if ( child != null ) { child . stroke ( g ) ; } } this . reverseTransformations ( g2d ) ; } 
public Item deleteFirst () { if ( ( first ) == null ) { throw new java.util.NoSuchElementException () ; } else if ( ( first.next ) != null ) { Deque < Item > . Node node = first ; first = first.next ; first.previous = null ; ( size ) -- ; return node.item ; } else { Deque < Item > . Node node = first ; first = null ; last = null ; ( size ) -- ; return node.item ; } } 
@ java.lang.Override protected void onPostInvute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { if ( placemark != null ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } } 
private void animin () { android.support.v7.widget.ActionMenuView menuView = getMenuView () ; for ( int i = 0 , count = ( menuView == null ) ? 0 : menuView . getChildCount () ; i < count ; i ++ ) { android.view.View child = menuView . getChildAt ( i ) ; android.view.animation.Animation anim = mAnimator . getInAnimation ( child , i ) ; if ( anim != null ) child . startAnimation ( anim ) ; } } 
@ java.lang.Override public boolean isUndirty ( com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean ) { if ( ( buddyInstructionEditText ) == null ) { return false ; } else if ( missionBean == null ) { return false ; } else { return ! ( buddyInstructionEditText . toString () . equals ( missionBean . getBuddyInstruction () ) ) ; } } 
public void applyDamage ( int strength ) { this . strength = strength ; if ( strength == 0 ) strengthButton0 . setSelected ( true ) ; else if ( strength == 1 ) strengthButton1 . setSelected ( true ) ; else if ( strength == 2 ) strengthButton2 . setSelected ( true ) ; else if ( strength == 3 ) strengthButton3 . setSelected ( true ) ; else if ( strength == 4 ) strengthButton4 . setSelected ( true ) ; else strengthRadioGroup . clearSelection () ; } 
public static void set () { org.wargamer2010.signshop.blocks.SSDatabase db = new org.wargamer2010.signshop.blocks.SSDatabase ( org.wargamer2010.signshop.blocks.SignShopItemMeta.filename ) ; try { if ( ! ( db . tableExists ( "ItemMeta" ) ) ) db . runStatement ( "CREATE TABLE ItemMeta ( ItemMetaID INTEGER, ItemMetaHash INT, PRIMARY KEY(ItemMetaID) )" , null , false ) ; if ( ! ( db . tableExists ( "MetaProperty" ) ) ) db . runStatement ( "CREATE TABLE MetaProperty ( PropertyID INTEGER, ItemMetaID INTEGER, PropertyName TEXT NOT NULL, ProperyValue TEXT NOT NULL, PRIMARY KEY(PropertyID) )" , null , false ) ; } finally { db . close () ; } } 
public static java.lang.Boolean attachAsset2Group ( java.lang.String assetUuid , java.lang.String accountUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } 
private void validateField ( final java.lang.String [] headers ) throws java.io.IOException { if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateField ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } 
@ org.junit.Test public void testRuntimeEnabledplayed ( ) throws java.lang.Exception { jobExtensionPoint . setRuntimeEnabled ( false ) ; jobExtensionPoint . callExtensionPoint ( null , job ) ; java.util.List < org.pentaho.di.job.JobListener > listeners = job . getJobListeners () ; assertNotNull ( listeners ) ; assertFalse ( listeners . contains ( jobExtensionPoint ) ) ; } 
protected void doConversion ( mondo.token.ITokenizer tokenizer ) { insertBracketAfterEventually ( tokenizer ) ; try { text = functionMap . get ( originalText ) . apply ( originalText ) ; } catch ( java.lang.NullPointerException e ) { try { text = tokenFunctionMap . get ( originalText ) . apply ( this ) ; } catch ( java.lang.NullPointerException ee ) {} } } 
@ java.lang.Override public void angwariferers ( pkg.Charakter gegner ) { int schaden = random . getRandom ( 15 , 25 ) ; if ( ( this . getSpezialfaehigkeit () ) == true ) { if ( this . wahrscheinlichkeit () ) { java.lang.System.out . println ( "Erfolgreich!" ) ; this . schadenNehmen ( ( schaden * 2 ) ) ; } else schaden = schaden / 2 ; } super . angwariferers ( gegner ) ; gegner . schadenNehmen ( schaden ) ; } 
private void showboardList ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; } 
public static void invoke ( java.lang.String url , javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { javax.servlet.RequestDispatcher rd = request . getRequestDispatcher ( url ) ; try { rd . invoke ( request , response ) ; } catch ( javax.servlet.ServletException | java.io.IOException e ) { Servlet.Commands.LOG . error ( e ) ; } } 
public java.lang.String getStringBetweenQuotationHmarks ( java.lang.String line ) { line = line . replace ( "\t" , "" ) ; line = line . trim () ; java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "'(.*?)'" ) ; java.util.regex.Matcher matcher = pattern . matcher ( line ) ; if ( matcher . find () ) line = matcher . group ( 1 ) ; return line ; } 
public void flushData ( java.util.ArrayList < com.monolc.felljs.Client > clients ) { if ( ! ( validated ) ) { return; } java.lang.String entityData = server.world . toString () ; connection . send ( ( "pos:" + ( e ) ) ) ; if ( ( entityData . length () ) > 0 ) { connection . send ( ( ( ( "dat" + ( getDataStride () ) ) + ":" ) + entityData ) ) ; } } 
@ java.lang.Override public org.jasig.cas.ticket.proxy.ProxyGrantingTicket grantProxyGrantingTenicket ( final java.lang.String id , final org.jasig.cas.authentication.Authentication authentication , final org.jasig.cas.ticket.ExpirationPolicy expirationPolicy ) { synchronized ( this ) { if ( this . grantedTicketAlready ) { throw new java.lang.IllegalStateException ( "PGT already generated for this ST. Cannot grant more than one TGT for ST" ) ; } this . grantedTicketAlready = java.lang.Boolean.TRUE ; } return new org.jasig.cas.ticket.ProxyGrantingTicketImpl ( id , service , this . getGrantingTicket () , authentication , expirationPolicy ) ; } 
private void scaleWallX ( float multiplier ) { com.badlogic.gdx.math.collision.BoundingBox bounds = new com.badlogic.gdx.math.collision.BoundingBox () ; backWall . calculateBoundingBox ( bounds ) . mul ( backWall.transform ) ; if ( ( multiplier > 0 ) || ( ( bounds . getHeight () ) > ( com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION ) ) ) { float scalePercentage = 1.0F + ( ( ( com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT ) / ( bounds . getHeight () ) ) * multiplier ) ; for ( com.ggwp.interiordesigner.object.Wall wall : getWalls () ) { wall.transform . scale ( 1.0F , scalePercentage , 1.0F ) ; } } } 
@ java.lang.Override public void set ( water.util.Chunk c ) { for ( int i = 0 ; i < ( c._len ) ; ++ i ) { if ( ! ( c . isNA ( i ) ) ) c . set ( i , fromTo [ ( ( int ) ( c . at8 ( i ) ) ) ] ) ; } } 
@ org.apache.struts2.interceptor.validation.SkipValidation public java.lang.String  decodedata ( ) throws java.lang.Exception { try { lists = getList () ; dbTransaction . commit () ; } catch ( org.hibernate.HibernateException e ) { if ( ( dbTransaction ) != null ) { dbTransaction . rollback () ; } e . printStackTrace () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { session . close () ; } return SUCCESS ; } 
public void checkRightPowerop () { switch ( rightPowerup ) { case 1 : if ( ( counter ) == ( rightEnd ) ) { leftMallet.stop = false ; rightPowerup = - 1 ; } break; case 2 : if ( ( counter ) == ( rightEnd ) ) { leftMallet.radius = leftMallet.defaultRadius ; rightPowerup = - 1 ; } break; } } 
void createMetadatasInDefaultSchemaWhenUx ( com.constellio.model.entities.Taxonomy taxonomy , java.lang.String schemaType ) { if ( ! ( getClassifiedObjects ( taxonomy ) . contains ( schemaType ) ) ) { java.lang.String groupLabel = com.constellio.app.ui.i18n.i18n . $ ( "classifiedInGroupLabel" ) ; valueListServices () . createAMultivalueClassificationMetadataInGroup ( taxonomy , schemaType , "classifiedInGroupLabel" , groupLabel ) ; } } 
public void gameOVER () { m_game . reset () ; for ( int r = 0 ; r < ( Game.NUM_ROWS ) ; r ++ ) { for ( int c = 0 ; c < ( m_numCols ) ; c ++ ) m_map [ r ] [ c ] = null ; } parseMapFile () ; } 
public br.com.service.radar.entity.User alreadyCustomer ( java.lang.String login ) { try { br.com.service.radar.persistence.TypedQuery < br.com.service.radar.entity.User > messageTypedQuery = entityManager . createNamedQuery ( User.FIND_USER_BY_LOGIN , br.com.service.radar.entity.User . class ) ; messageTypedQuery . setParameter ( "cpf" , login ) ; return messageTypedQuery . getSingleResult () ; } catch ( br.com.service.radar.persistence.NoResultException noResultException ) { return null ; } catch ( br.com.service.radar.persistence.PersistenceException persistenceException ) { log . error ( "Erro ao buscar user, email [{}]" , login , persistenceException ) ; throw persistenceException ; } } 
@ java.lang.Override public void onItemImageTap ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { ca.ualberta.cs.zindi.zindi_sizebook.Person mPerson = newPeopleList . get ( position ) ; android.content.Intent mIntent = new android.content.Intent ( this , ca.ualberta.cs.zindi.zindi_sizebook.PersonActivity . class ) ; android.os.Bundle mBundle = new android.os.Bundle () ; mBundle . putParcelable ( ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.PAR_KEY , mPerson ) ; mIntent . putExtras ( mBundle ) ; startActivityForResult ( mIntent , ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.EDIT_REQUEST ) ; } 
public java.lang.String  track ( int pos ) { if ( ( yourField . at ( pos ) ) == '~' ) { return "missed!\n" ; } java.lang.String hitstr = "" ; hitstr = yourField . addHit ( pos ) ; if ( hitstr . contains ( "sunk" ) ) ( this . shipsDestroyed ) ++ ; return hitstr ; } 
@ java.lang.Override protected void onSume () { super . onSume () ; com.example.mirko.custombuttonexample.CastConnectionManager manager = com.example.mirko.custombuttonexample.PartyCastApplication . getInstance () . getCastConnectionManager () ; manager . startScan () ; manager . addObserver ( this ) ; if ( manager . isConnectedToReceiver () ) { com.example.mirko.custombuttonexample.PartyCastApplication . getInstance () . getCastConnectionManager () . getGameManagerClient () . setListener ( mListener ) ; } } 
private int newNumbers () { java.lang.System.out . print ( "Enter contact phone number: " ) ; int tel ; while ( true ) { tel = validateNumber () ; Contact contact = getbyNumber ( tel ) ; if ( contact == null ) { java.lang.System.out . println ( "Adding new number..." ) ; } else if ( ( contact . getNumber () ) == tel ) { java.lang.System.out . println ( ( ( "That number already exists for contact " + ( contact . getName () ) ) + ". Try a different one" ) ) ; continue; } break; } return tel ; } 
public java.lang.String getmIMEtype ( int pos ) { if ( ( ( com.fwgg8547.mycast.CardModel.mCursor ) == null ) || ( ! ( com.fwgg8547.mycast.CardModel.mCursor . moveToPosition ( pos ) ) ) ) { android.util.Log . w ( com.fwgg8547.mycast.CardModel.TAG , "fail movetopos" ) ; return null ; } int indx = com.fwgg8547.mycast.CardModel.mCursor . getColumnIndex ( MediaStore.Images.Media.MIME_TYPE ) ; java.lang.String mime = com.fwgg8547.mycast.CardModel.mCursor . getString ( indx ) ; return mime ; } 
@ java.lang.Override public android.app.Dialog  onCreateFrame ( android.os.Bundle savedInstanceState ) { final java.util.Calendar c = java.util.Calendar . getInstance () ; int hour = c . get ( java.util.Calendar.HOUR_OF_DAY ) ; int minute = c . get ( java.util.Calendar.MINUTE ) ; return new android.app.TimePickerDialog ( getActivity () , this , hour , minute , android.text.format.DateFormat . is24HourFormat ( getActivity () ) ) ; } 
public void run ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.lang.IllegalAccessException , java.lang.InstantiationException { java.lang.String input = "" ; do { showMainMenu () ; input = scanner . nextLine () . trim () . toLowerCase () ; switch ( input ) { case "q" : scanner . close () ; break; case "a" : loadLanguage ( getJars () ) ; break; case "s" : switchLanguage () ; break; default: } } while ( ! ( input . equals ( "q" ) ) ) ; } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ( ( dataSnapshot . getValue () ) != null ) && ( dataSnapshot . getValue () . equals ( emailHash ) ) ) { android.util.Log . d ( "" , java.lang.String . format ( "FirebaseBackend:connectBudgetAndUserByEmail: value: %s, address: %s" , dataSnapshot . getValue () , emailHash ) ) ; connectBudgetAndUser ( bid , uidAsString ) ; } else { android.util.Log . d ( "" , java.lang.String . format ( "FirebaseBackend:connectBudgetAndUserByEmail: uid is: %s, value: is null, address: %s" , uidAsString , emailHash ) ) ; } } 
public void ql ( java.lang.String query , boolean silence ) { try { java.sql.PreparedStatement statement = connection . prepareStatement ( query ) ; statement . execute () ; } catch ( java.sql.SQLException e ) { if ( silence ) {} else { e . printStackTrace () ; } } } 
public void updateSampleUser ( java.lang.Long pyramusId ) { fi.pyramus.rest.model.StudentGroup studentGroup = pyramusClient . get () . get ( java.lang.String . format ( "/students/studentGroups/%d" , pyramusId ) , fi.pyramus.rest.model.StudentGroup . class ) ; java.lang.String identifier = identifierMapper . getStudentGroupIdentifier ( pyramusId ) ; fi.muikku.model.users.UserGroupEntity userGroupEntity = userGroupEntityController . findUserGroupEntityByDataSourceAndIdentifier ( SchoolDataPyramusPluginDescriptor.SCHOOL_DATA_SOURCE , identifier , true ) ; if ( studentGroup == null ) { if ( userGroupEntity != null ) fireUserGroupRemoved ( identifier ) ; } else { if ( userGroupEntity == null ) { fireUserGroupDiscovered ( identifier ) ; } else { fireUserGroupUpdated ( identifier ) ; } } } 
private void setModelForAccepters ( challenge.dbside.models.ChallengeDefinition challenge , org.springframework.ui.Model model ) { java.util.List acceptors = new java.util.ArrayList ( new java.util.HashSet ( challenge . getAllAcceptors () ) ) ; int acceptorsOnPage = 6 ; model . addAttribute ( "listOfAcceptors" , ( ( acceptors . size () ) > acceptorsOnPage ? acceptors . subList ( 0 , acceptorsOnPage ) : acceptors . subList ( 0 , acceptors . size () ) ) ) ; model . addAttribute ( "showAcceptorsExtendenceButton" , ( ( acceptors . size () ) > acceptorsOnPage ) ) ; } 
protected void setPositionfromDB ( int templateID , double xCoor , double yCoor ) { if ( ( ( this ) instanceof com.nkoiv.mists.game.gameobject.Structure ) && ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary . create ( templateID ) ; if ( dummy != null ) this . graphics = dummy.graphics ; } if ( ( this . graphics ) == null ) this . graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this . graphics . setPosition ( xCoor , yCoor ) ; } 
public void makeBestMoveAccordingToAILogics ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; } 
@ java.lang.Override public java.lang.Boolean Override () { final examples.behavior.world.Orientation oldAgentOrientation = env.agentOrientation ; switch ( oldAgentOrientation ) { case NORTH : env.agentOrientation = examples.behavior.world.Orientation.WEST ; break; case EAST : env.agentOrientation = examples.behavior.world.Orientation.NORTH ; break; case SOUTH : env.agentOrientation = examples.behavior.world.Orientation.EAST ; break; case WEST : env.agentOrientation = examples.behavior.world.Orientation.SOUTH ; break; } return true ; } 
public void count ( int key ) { java.util.Iterator < QueueEntity > iter = info . iterator () ; while ( iter . hasNext () ) { QueueEntity it = iter . next () ; if ( ( it.ID ) == key ) { info . remove ( it ) ; break; } } } 
private eu.interedition.collatex.dekker.LCP_Interval [] construct_LCP_intervals2array () { eu.interedition.collatex.dekker.LCP_Interval [] lcp_interval_array = new eu.interedition.collatex.dekker.LCP_Interval [ token_array . size () ] ; for ( eu.interedition.collatex.dekker.LCP_Interval interval : lcp_intervals ) { if ( ( interval.length ) == 0 ) { continue; } for ( int i = interval.start ; i <= ( interval.end ) ; i ++ ) { int tokenIndex = suffix_array [ i ] ; lcp_interval_array [ tokenIndex ] = interval ; } } return lcp_interval_array ; } 
@ java.lang.Override protected void callback () { super . callback () ; try { iconCache = new java.lang.ref.SoftReference <> ( super . get () ) ; fireIconChange () ; } catch ( java.lang.InterruptedException | java.util.concurrent.ExecutionException ex ) { org.sleuthkit.autopsy.coreutils.Logger . getLogger ( org.sleuthkit.autopsy.corecomponents.ThumbnailViewNode . class . getName () ) . log ( java.util.logging.Level.SEVERE , "Error getting thumbnail icon" , ex ) ; } finally { progressHandle . finish () ; if ( ( timer ) != null ) { timer . stop () ; timer = null ; } swingWorker = null ; } } 
@ javafx.fxml.FXML void addSheme ( ) throws java.sql.SQLException { java.lang.String pickedDay = new java.lang.String ( day . getSelectionModel () . getSelectedItem () ) ; java.lang.String time = new java.lang.String ( hour . getSelectionModel () . getSelectedItem () ) ; db . modifySchedule ( pickedDay , java.lang.Integer . parseInt ( time ) , "BUSY" ) ; java.lang.System.out . println ( "OK" ) ; populate () ; javafx.stage.Stage stage = ( ( javafx.stage.Stage ) ( add . getScene () . getWindow () ) ) ; stage . close () ; } 
private void setFirstDay () { secondDate = dateSecondDate . getValue () ; if ( ( ( dateFirstDate . getValue () ) != null ) && ( ( secondDate ) != null ) ) { try { getAllAbsence ( firstDate , secondDate ) ; } catch ( java.sql.SQLException ex ) { java.util.logging.Logger . getLogger ( attendance.gui.controller.TeacherViewController . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } } 
private static javafx.animation.ParallelTransition createDynamicAtTimePoint ( java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController , tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; } 
void printMatrix ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } 
public http.Header getBody ( java.lang.String header ) throws http.exceptions.BadRequestException { if ( ( header . split ( ": " ) . length ) != 2 ) { throw new http.exceptions.BadRequestException () ; } for ( http.Header.Type type : http.Header.Type . values () ) { if ( header . toUpperCase () . startsWith ( type.type ) ) { return new http.Header ( header . split ( ":" ) [ 1 ] , type ) ; } } return new http.Header ( header . split ( ":" ) [ 1 ] , http.Header.Type.UnknownHeader ) ; } 
@ java.lang.Override public void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; com.jaitlapps.bestadvice.domain.list.ListRecordGroup listRecordGroup = com.jaitlapps.bestadvice.database.FavoriteManager . getInstance ( getActivity () ) . getList () ; com.jaitlapps.bestadvice.adapter.ListAdapter adapter = new com.jaitlapps.bestadvice.adapter.ListAdapter ( getActivity () , listRecordGroup ) ; setListAdapter ( adapter ) ; } 
@ java.lang.Override protected com.cowlark.cowbel.parser.core.ParseResult  parserMethod ( com.cowlark.cowbel.parser.core.Location location ) { com.cowlark.cowbel.parser.core.ParseResult pr = com.cowlark.cowbel.parser.parsers.OpenParenthesisParser . parse ( location ) ; if ( pr . failed () ) return pr ; com.cowlark.cowbel.parser.core.ParseResult argumentspr = com.cowlark.cowbel.parser.parsers.ExpressionListParser . parse ( pr . end () ) ; if ( argumentspr . failed () ) return argumentspr ; pr = com.cowlark.cowbel.parser.parsers.CloseParenthesisParser . parse ( argumentspr . end () ) ; if ( pr . failed () ) return pr ; argumentspr . setEnd ( pr . end () ) ; return argumentspr ; } 
@ javafx.fxml.FXML public void mutesHandler ( ) throws javax.sound.sampled.LineUnavailableException { microphoneMuted = ! ( microphoneMuted ) ; javafx.scene.image.Image image ; if ( microphoneMuted ) { image = new javafx.scene.image.Image ( getClass () . getResourceAsStream ( "/microphone_muted.png" ) ) ; muteBtn . setText ( "Unmute microphone" ) ; audioUtils . mute () ; } else { image = new javafx.scene.image.Image ( getClass () . getResourceAsStream ( "/microphone.png" ) ) ; muteBtn . setText ( "Mute microphone" ) ; audioUtils . unmute () ; } microphoneLbl . setGraphic ( new javafx.scene.image.ImageView ( image ) ) ; } 
public void refill ( java.lang.String rateLimiterYaml ) { org.springframework.beans.factory.config.YamlPropertiesFactoryBean yaml = new org.springframework.beans.factory.config.YamlPropertiesFactoryBean () ; yaml . setResources ( new org.springframework.core.io.FileSystemResource ( rateLimiterYaml ) ) ; rateLimiterProperties = yaml . getObject () ; this . time_frame = ( ( int ) ( rateLimiterProperties . get ( "time-frame" ) ) ) * 1000 ; clear () ; } 
@ org.junit.Test public void  shouldDeleteATemplateWithAGongly () { com.thoughtworks.go.server.service.PipelineTemplateConfig emptyTemplate = template ( "empty_template" ) ; com.thoughtworks.go.server.service.CruiseConfig cruiseConfig = new com.thoughtworks.go.server.service.BasicCruiseConfig () ; cruiseConfig . addTemplate ( emptyTemplate ) ; service . removeTemplate ( "empty_template" , cruiseConfig , "md5" , new com.thoughtworks.go.server.service.result.HttpLocalizedOperationResult () ) ; verify ( goConfigService ) . updateConfig ( new com.thoughtworks.go.server.service.DeleteTemplateCommand ( "empty_template" , "md5" ) ) ; } 
public void submit () { progress1 . setTextProgress ( b . getPayout () . toString () ) ; buyButton . setText ( ( ( ( ( ( b . getName () ) + ":" ) + ( b . getNumOfBuildings () . toString () ) ) + "\nBuy:" ) + ( b . getPrice () . toString () ) ) ) ; } 
@ java.lang.Override public com.microsoft.azure.management.storage.implementation.StorageAccountImpl reesh ( ) throws java.lang.Exception { com.microsoft.rest.ServiceResponse < com.microsoft.azure.management.storage.implementation.StorageAccountInner > response = this . client . getProperties ( this . resourceGroupName () , this . name () ) ; com.microsoft.azure.management.storage.implementation.StorageAccountInner storageAccountInner = response . getBody () ; this . setInner ( storageAccountInner ) ; clearWrapperProperties () ; return this ; } 
@ java.lang.Override protected void onRegister ( android.os.Bundle savedInstanceState ) { super . onRegister ( savedInstanceState ) ; setContentView ( R.layout.activity_register ) ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.objectsanddesign.shoppingwithfriends.RegisterActivity.PlaceholderFragment () ) . commit () ; } } 
@ java.lang.Override public org.jvoicexml.xml.srgs.GrammarType identifies ( final org.jvoicexml.GrammarDocument grammar ) { final org.jvoicexml.xml.srgs.GrammarType requestedType = grammar . getMediaType () ; if ( requestedType . equals ( HalefGrammarType.HALEF ) ) { return HalefGrammarType.HALEF ; } if ( grammar . getTextContent () . startsWith ( "wfst\n" ) ) { return HalefGrammarType.HALEF ; } return null ; } 
public java.lang.Boolean autorAussenderensts () { if ( ( ( securityService ) == null ) || ( ! ( autorIntern () ) ) ) { return false ; } de.fraunhofer.igd.klarschiff.service.security.User user = securityService . getUserByEmail ( this . autorEmail ) ; if ( user == null ) { return false ; } return ! ( user . getAussendienstTeams () . isEmpty () ) ; } 
private java.lang.String GetNext ( final org.objectweb.asm.tree.MethodNode mn ) { org.objectweb.asm.util.Textifier tv = new org.objectweb.asm.util.Textifier () ; org.objectweb.asm.util.TraceMethodVisitor tmv = new org.objectweb.asm.util.TraceMethodVisitor ( tv ) ; mn . accept ( tmv ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( tv.text . size () ) ; i ++ ) { sb . append ( tv.text . get ( i ) ) ; } return sb . toString () ; } 
public static int getSelectedIdityIndex () { if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 0 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.person . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 1 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.team . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 2 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.unternehmen . getId () ; } return 0 ; } 
private boolean containsErError ( java.util.List < com.hp.application.automation.tools.sse.result.model.junit.Testsuite > testsuites ) { boolean ret = false ; for ( com.hp.application.automation.tools.sse.result.model.junit.Testsuite testsuite : testsuites ) { for ( com.hp.application.automation.tools.sse.result.model.junit.Testcase testcase : testsuite . getTestcase () ) { if ( "error" . equals ( testcase . getStatus () ) ) { ret = true ; break; } } } return ret ; } 
@ java.lang.Override public void  failed ( byte [] data , com.parse.ParseException e ) { if ( e == null ) { if ( ( data != null ) && ( ( data.length ) != 0 ) ) { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel ( name , address , restId , data ) ; restaurantModel . setFlag ( 1 ) ; restaurantModels . add ( restaurantModel ) ; updateListView () ; } } } 
public java.lang.String  getCheckHash () { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( com.netease.RequestHeader.SECRET_KEY ) . append ( this . nonce ) . append ( this . curTime ) ; try { java.security.MessageDigest md = java.security.MessageDigest . getInstance ( "SHA-1" ) ; md . update ( sb . toString () . getBytes () ) ; this . checkSum = com.netease.RequestHeader . bytesToHexString ( md . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { e . printStackTrace () ; } return checkSum ; } 
public void  charRevSearch ( java.lang.String type ) { ArkBotGUI . GUIText ( "[ACTION]: Searching character inventory" ) ; p = java.awt.MouseInfo . getPointerInfo () . getLocation () ; drag . move ( ArkBot.global.CHAR_INV_SEARCH_BAR ) ; leftClick () ; bot . delay ( Global.PAUSE ) ; leftClick () ; bot . delay ( Global.PAUSE ) ; leftClick () ; robtype . type ( type ) ; } 
private io.druid.indexing.jdbc.JDBCIndexTask createJob ( final java.lang.String taskId , final io.druid.indexing.jdbc.JDBCIOConfig ioConfig , final java.lang.Integer maxRowsPerSegment , final java.lang.Boolean resetOffsetAutomatically ) { io.druid.indexing.jdbc.JDBCIndexTaskTest.offsets . put ( 0 , 0 ) ; final io.druid.indexing.jdbc.JDBCTuningConfig tuningConfig = new io.druid.indexing.jdbc.JDBCTuningConfig ( 1000 , maxRowsPerSegment , new org.joda.time.Period ( "P1Y" ) , null , null , null , buildV9Directly , reportParseExceptions , handoffConditionTimeout , resetOffsetAutomatically ) ; final io.druid.indexing.jdbc.JDBCIndexTask task = new io.druid.indexing.jdbc.JDBCIndexTask ( taskId , null , io.druid.indexing.jdbc.JDBCIndexTaskTest.DATA_SCHEMA , tuningConfig , ioConfig , null , null ) ; task . setPollRetryMs ( io.druid.indexing.jdbc.JDBCIndexTaskTest.POLL_RETRY_MS ) ; return task ; } 
public org.apache.hadoop.smart.sql.CommandInfo getOperationData ( long cid ) throws java.io.IOException { if ( cmdsAll . containsKey ( cid ) ) return cmdsAll . get ( cid ) ; java.util.List < org.apache.hadoop.smart.sql.CommandInfo > ret = null ; try { ret = adapter . getCommandsTableItem ( java.lang.String . format ( "= %d" , cid ) , null , null ) ; } catch ( java.sql.SQLException e ) { org.apache.hadoop.smart.CommandExecutor.LOG . error ( e . getMessage () ) ; } if ( ret != null ) return ret . get ( 0 ) ; return null ; } 
public void submit () { if ( ( threadUpdater ) == null ) { threadUpdater = new java.util.Timer ( ( "Thread - " + ( this . name ) ) ) ; threadUpdater . schedule ( new ca.team4519.lib.Threader.UpdaterTask ( this ) , ( ( ( long ) ( this . period ) ) * 1000 ) ) ; } } 
public void invoke ( ) throws java.io.IOException { refPanel . repaint () ; if ( ( this . state ) == ( state.OrderSUMMARY ) ) { this . customer . addTransaction ( this . transaction . getTransactionNum () ) ; this . customer . write () ; this . transaction . write () ; if ( this . writeToGlobalReciept ) { this . writeReceipt () ; this . writeToGlobalReciept = false ; } } } 
private void arrTimeIntToDate ( java.lang.String dateStr ) { dateStr = dateStr . replaceAll ( "\\s" , "/" ) ; java.text.DateFormat df = new java.text.SimpleDateFormat ( "yyyy/MMM/dd/HH:mm" , java.util.Locale.US ) ; try { java.util.Date localDate = df . parse ( dateStr ) ; this . arr_local_time = localDate ; } catch ( java.text.ParseException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void OnClick ( android.content.DialogInterface dialog , int button ) { if ( button == ( android.content.DialogInterface.BUTTON_POSITIVE ) ) { if ( ( experimentFilter ) != null ) { getContentResolver () . delete ( ExperimentsProvider.CONTENT_URI , experimentFilter , null ) ; } android.widget.Toast . makeText ( this , R.string.deleted , Toast.LENGTH_SHORT ) . show () ; android.content.Intent intent = new android.content.Intent ( this , com.scuddertechnologies.pheoc.MainMenu . class ) ; startActivity ( intent ) ; } } 
public boolean parals ( java.lang.Object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj == null ) { return false ; } if ( obj instanceof mc.compiler.ast.ReferenceNode ) { mc.compiler.ast.ReferenceNode node = ( ( mc.compiler.ast.ReferenceNode ) ( obj ) ) ; return reference . parals ( node . getReference () ) ; } return false ; } 
public boolean isemptyContext ( java.lang.Object cursorPosition ) { if ( cursorPosition == null ) { return true ; } if ( cursorPosition instanceof java.lang.Boolean ) { return ! ( ( ( java.lang.Boolean ) ( cursorPosition ) ) . booleanValue () ) ; } if ( cursorPosition instanceof java.util.Collection ) { return ( ( ( java.util.Collection ) ( cursorPosition ) ) . size () ) == 0 ; } return false ; } 
@ java.lang.Override public boolean onOptionsItemDeselected ( android.view.MenuItem mi ) { switch ( mi . getItemId () ) { case R.id.menu_prf : startActivity ( new android.content.Intent ( this , com.acmetensortoys.ctfwstimer.SettingsActivity . class ) ) ; return true ; case R.id.menu_about : startActivity ( new android.content.Intent ( this , com.acmetensortoys.ctfwstimer.AboutActivity . class ) ) ; return true ; default: return super . onOptionsItemDeselected ( mi ) ; } } 
protected java.util.Optional < T > findANnotation ( org.springframework.core.type.MethodMetadata metadata ) { try { return java.util.Optional . ofNullable ( java.lang.Class . forName ( metadata . getReturnTypeName () ) . getDeclaredAnnotation ( annotation ) ) ; } catch ( java.lang.ClassNotFoundException e ) { io.cereebro.spring.annotation.LOGGER . error ( ( "Could not load class : " + ( metadata . getReturnTypeName () ) ) , e ) ; } return java.util.Optional . empty () ; } 
private boolean isMailingRequiredandValid () { if ( "" . equals ( host ) ) { return false ; } if ( ( ! ( "false" . equals ( isAuthenticationNecessary ) ) ) && ( "" . equals ( login ) ) ) { com.siemens.sw360.mail.MailUtil.log . error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false ; } return true ; } 
public void discards () { try { if ( isPipelined () ) { pipeline ( new org.springframework.data.redis.connection.jedis.JedisConnection.JedisStatusResult ( pipeline . discards () ) ) ; return; } transaction . discards () ; } catch ( java.lang.Exception ex ) { throw convertJedisAccessException ( ex ) ; } finally { txResults . clear () ; transaction = null ; } } 
@ java.lang.Override protected void updateItems ( application.DataSet t , boolean bln ) { super . updateItems ( t , bln ) ; if ( t != null ) { setText ( t . getFilePath () . substring ( application.services.GeneralService . getDataSetDirectory () . length () ) ) ; } else { setText ( "Choose..." ) ; } } 
private void pluginsChanged ( jobdispatcher.plugin.Plugin curPlugin ) { if ( curPlugin . getName () . startsWith ( "zh_def_catalog" ) ) { mapTagTemplate1 . put ( "SceneMetaDataFile" , objectivePath ) ; mapTagTemplate2 . remove ( "SceneMetaDataFile" ) ; } else { mapTagTemplate1 . remove ( "SceneMetaDataFile" ) ; mapTagTemplate2 . put ( "SceneMetaDataFile" , ( ( frameFilePath ) + "_meta.xml" ) ) ; } } 
public void populateSampleParts ( java.util.ArrayList < com.demo.arctf.arctfdemo.CapturePoint > capturePointList ) { if ( ( mMap ) != null ) { for ( com.demo.arctf.arctfdemo.CapturePoint point : capturePointList ) { com.google.android.gms.maps.model.Marker captureMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( point . getLocation () ) . icon ( com.google.android.gms.maps.model.BitmapDescriptorFactory . defaultMarker ( BitmapDescriptorFactory.HUE_AZURE ) ) . title ( point . getName () ) ) ; capturePoints . put ( captureMarker , point ) ; } } } 
public void store ( S entry ) { this . setDescription ( entry . getDescription () ) ; lastModified = entry . getLastModified () ; this . setAuthor ( entry . getAuthor () ) ; if ( ! ( entry . getGitUrl () . isEmpty () ) ) { gitUrl = entry . getGitUrl () ; } } 
public boolean contains ( ai.eboard e , int i ) { if ( ( e.c ) == 'X' ) return x . containssKey ( i ) ; else if ( ( e.c ) == 'O' ) return o . containssKey ( i ) ; else return ! ( u . containssKey ( i ) ) ; } 
public boolean compilString ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } 
@ java.lang.Override public void  processingcomplete ( boolean success , java.lang.String message , org.json.JSONObject json ) { java.util.List < uk.ac.ncl.csc2022.t14.bankingapp.models.HeatPoint > allPoints = new java.util.ArrayList <> () ; if ( success && ( responseParser . parseLoadHeatPoints ( json , allPoints ) ) ) { delegate . loadHeatMapPassed ( allPoints ) ; } else { message = responseParser . parseErrorOrDefault ( message ) ; delegate . loadHeatMapFailed ( message ) ; } } 
public static void Writepage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } 
public void addfirst ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException ( "Attempt to add null Item." ) ; } Deque < Item > . Node oldfirst = first ; Deque < Item > . Node newfirst = new Node () ; newfirst.item = item ; newfirst.next = oldfirst ; if ( oldfirst != null ) { oldfirst.previous = newfirst ; } first = newfirst ; ( size ) ++ ; if ( ( size ) == 1 ) { last = first ; } } 
public void  runGame () { while ( true ) { GameOn = true ; gameStart () ; battleStart () ; while ( ( GameOn ) == true ) { battleActive () ; boolean a = battleEnd () ; if ( a == true ) { onPlayerWin () ; } if ( a == false ) { onPlayerLose () ; GameOn = false ; } } } } 
public ship.WeatherWaypoint closestHeatWaypoint () { int theCounter = checkClosestWeather () ; for ( int i = 0 ; i < ( weatherWaypoints . size () ) ; i ++ ) { if ( i == theCounter ) { return weatherWaypoints . get ( i ) ; } } java.lang.System.out . println ( "returning Null" ) ; return new ship.WeatherWaypoint () ; } 
@ java.lang.Override protected void invoke ( K unused , org.apache.hadoop.io.Text urlText , edu.cornell.library.lc_converter.invokereduce.Context context ) throws java.io.IOException , java.lang.InterruptedException { java.lang.String urlString = urlText . toString () ; java.io.InputStream is = getUrl ( urlString ) ; java.util.HashSet < java.lang.String > marcRecords = marcxmlCollectionParser ( is ) . iterator () ; for ( java.lang.String marcXml = marcRecords . next () ; marcRecords . hasNext () ; marcXml = marcRecords . next () ) { context . write ( new org.apache.hadoop.io.Text ( marcXml ) , null ) ; } } 
public void updateAuthenticatingInformation () { prefButton . setEnabled ( Settings.authenticated ) ; mangButton . setEnabled ( Settings.authenticated ) ; submGuiButton . setEnabled ( Settings.authenticated ) ; if ( ! ( org.gridchem.client.common.Settings.WEBSERVICE ) ) { usageButton . setEnabled ( Settings.authenticated ) ; } if ( org.gridchem.client.common.Settings.authenticated ) { setAuthButton ( "Sign Out" , "<html><p>Disconnect from the CCG.</p><html>" ) ; } else { setAuthButton ( "Sign In" , "<html><p>Authenticate to the CCG.</p><html>" ) ; } } 
public org.alopex.hyperios.helix.Specimen cave ( org.alopex.hyperios.helix.Specimen mateOne , org.alopex.hyperios.helix.Specimen mateTwo ) { org.alopex.hyperios.helix.Specimen output = new org.alopex.hyperios.helix.Specimen ( true ) ; for ( int i = 0 ; i < ( output . getGenes () . length ) ; i ++ ) { if ( ( java.lang.Math . random () ) <= ( GASettings.caveRate ) ) { output . setGene ( i , mateOne . getGenes () [ i ] ) ; } else { output . setGene ( i , mateOne . getGenes () [ i ] ) ; } } return output ; } 
public boolean isHasExcrance () { this . computerGateway . find ( getComputerNum () , getLaboratory () ) ; if ( ( ( this . computerGateway . getCurrent () ) != null ) && ( ( this . computerGateway . getCurrent () . getState () ) == ( es.uvigo.esei.infraestructura.entities.State.INCIDENCE ) ) ) { return true ; } return false ; } 
public static void generate_complicates () { for ( int current_depth = Depths.highest_depth ; current_depth > 0 ; -- current_depth ) { for ( int i = 0 ; i < current_depth ; ++ i ) { Predicates . add_entry ( Depths.DEPTHS_OUTPUT , "is_lower_than" , Depths . get_id_from_depth ( new java.lang.Integer ( i ) ) , Depths . get_id_from_depth ( new java.lang.Integer ( current_depth ) ) ) ; } } } 
protected int openGame ( int _difficulty ) { difficulty = _difficulty ; timeElapsed = "00:00" ; if ( ( ( difficulty ) < 1 ) || ( ( difficulty ) > 3 ) ) { difficulty = ( randGen . nextInt ( 3 ) ) + 1 ; } buildCompleteBoard () ; digHoles ( getNumberOfGivens ( difficulty ) ) ; checkBounds ( getBound ( difficulty ) ) ; markOriginals () ; return difficulty ; } 
@ org.w2fc.geoportal.ws.aspect.AfterReturning ( pointcut = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , returning = "result" ) public void  onCreateSoavOk ( org.aspectj.lang.JoinPoint joinPoint , java.lang.Object result ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } 
public static boolean hasFailedPieches ( final java.util.List < com.gamesbykevin.yoshi.board.piece.Piece > pieces ) { for ( int i = 0 ; i < ( pieces . size () ) ; i ++ ) { final com.gamesbykevin.yoshi.board.piece.Piece piece = pieces . get ( i ) ; if ( ( ( piece . isPlaced () ) || ( piece . isDestroyed () ) ) || ( piece . isFrozen () ) ) continue; return true ; } return false ; } 
public void showbalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . showbalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } 
public static java.lang.String getCharAfterOff ( java.lang.CharSequence str , int offset ) { if ( ( ( str . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return str . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; } 
boolean reststartprocess ( net.algart.pyramid.http.JavaProcessControlWithHttpCheckingAliveStatus control , boolean skipIfAlive ) throws java.io.IOException { synchronized ( lock ) { if ( skipIfAlive && ( control . areAllHttpServicesAlive ( true ) ) ) { return false ; } stopProcess ( control , skipIfAlive ) ; startProcess ( control , false ) ; return true ; } } 
private long getDatestamped ( int i ) { table.value.Value date = null ; if ( isFirstEvent ( i ) ) { date = inputData . get ( i ) . get ( datecol ) ; } else { date = inputData . get ( i ) . get ( datecol2 ) ; } if ( date . isDate () ) { return ( ( table.value.DateValue ) ( date ) ) . getValue () . getTime () . getTime () ; } throw new java.lang.Error ( "Not a date in the column" ) ; } 
public void mousePerformed ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out . println ( ( "Paikka 1 2 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbc ) ; buttonbc . setEnabled ( false ) ; viimeisinSiirto [ 1 ] [ 2 ] = whichmark () ; ( buttoncount ) ++ ; } 
public void store ( int itemNumber ) { if ( ( itemNumber > ( ( inventory . size () ) - 1 ) ) || ( itemNumber < 0 ) ) { java.lang.System.out . println ( "INVALID INDEX...Try Again" ) ; } else { items . store ( inventory . get ( itemNumber ) ) ; java.lang.System.out . println ( ( ( inventory . get ( itemNumber ) . getName () ) + " was storeed to cart!" ) ) ; subTotal += items . get ( ( ( items . size () ) - 1 ) ) . getPrice () ; } } 
public void generateextendeddb ( java.lang.String path ) throws java.lang.Exception { int i = 1 ; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf . append ( factsFromFiles ( file , ( i ++ ) ) ) ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.File ( ( path + "edb.pl" ) ) ) ; prologWriter . println ( buf ) ; prologWriter . close () ; } 
@ org.junit.Test public void testDeleteFileButNoFileEntryExistsinDatabase ( ) throws java.io.IOException { when ( fileEntryRepository . findOne ( 456L ) ) . thenReturn ( null ) ; org.innovateuk.ifs.commons.service.ServiceResult < org.innovateuk.ifs.file.domain.FileEntry > result = service . deleteFile ( 456L ) ; assertNotNull ( result ) ; assertTrue ( result . isFailure () ) ; assertTrue ( result . getFailure () . is ( notFoundError ( org.innovateuk.ifs.file.domain.FileEntry . class , 456L ) ) ) ; verify ( fileEntryRepository ) . findOne ( 456L ) ; } 
private java.lang.Exception  applyChangesOntomes ( java.lang.String datasetUri , java.lang.String ccName ) { boolean result ; org.diachron.detection.utils.MCDUtils mcd = null ; try { mcd = new org.diachron.detection.utils.MCDUtils ( propertiesManager . getProperties () , datasetUri , true ) ; mcd . deleteCCWithLessPriority ( ccName ) ; mcd . detectDatasets ( true ) ; } catch ( java.lang.Exception ex ) { return ex ; } finally { if ( mcd != null ) { mcd . terminate () ; } } return null ; } 
private void Reflect ( org.eclipse.wst.sse.core.internal.provisional.IModelStateListener listener , org.eclipse.wst.xml.core.internal.provisional.document.IDOMModel model , org.jboss.tools.windup.windup.CustomRuleProvider ruleProvider ) { model . removeModelStateListener ( listener ) ; listenerMap . remove ( ruleProvider ) ; if ( ! ( treeViewer . getTree () . isDisposed () ) ) { treeViewer . Reflect ( ruleProvider ) ; } } 
public void searchbyPreTitle ( java.lang.String title , com.cmpe.bounswe2015group8.westory.back.Consumer < com.cmpe.bounswe2015group8.westory.model.Post [] > callback ) { if ( display ) progressDialog . show () ; new com.cmpe.bounswe2015group8.westory.back.ServerRequests.RestAsyncTask ( callback , org.springframework.http.HttpMethod.POST ) . execute ( new com.cmpe.bounswe2015group8.westory.model.Requestable < com.cmpe.bounswe2015group8.westory.model.Post [] > ( "/api/searchbyPreTitle" , title , com.cmpe.bounswe2015group8.westory.model.Post [] . class ) ) ; } 
void Method ( java.lang.Throwable t ) { logger . info ( "My message is {}" , t . getLocalizedMessage () , t ) ; logger . info ( "My {} is {}" , new java.lang.Object [] { "message" , t . getLocalizedMessage () , t } ) ; logger . info ( "My {} {} {}" , new java.lang.Object [] { "message" , "is" , t . getLocalizedMessage () , t } ) ; } 
@ de.craften.plugins.rpgplus.scripting.util.luaify.LuaFunction ( value = "SetItem" ) public void SetItem ( org.luaj.vm2.LuaValue inv , org.luaj.vm2.LuaValue slot , org.luaj.vm2.LuaTable item ) { inventory . SetItem ( slot . checkint () , de.craften.plugins.rpgplus.scripting.util.ScriptUtil . createItemMatcher ( item ) . getItemStack () ) ; for ( org.bukkit.entity.HumanEntity viewer : new java.util.ArrayList ( inventory . getViewers () ) ) { viewer . openInventory ( inventory ) ; } } 
@ java.lang.Override protected void OnCreated ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; getSupportActionBar () . setTitle ( getResources () . getString ( R.string.title_quiz ) ) ; com.pvanshah.sjsuquizapplication.student.network.NetworkStateListener . registerNetworkState ( this ) ; com.pvanshah.sjsuquizapplication.firebaseutils.FirebaseConfiguration firebaseConfiguration = new com.pvanshah.sjsuquizapplication.firebaseutils.FirebaseConfiguration () ; firebaseConfiguration . configureFirebase () ; callQuizzesService () ; } 
private boolean equal ( java.util.Map < java.lang.Integer , org.naturn.java8.pattern.PatternDemo.Node > nodes , java.util.List < java.lang.String [] > orgs ) { boolean result = false ; for ( java.lang.String [] org : orgs ) { result = equal ( nodes , org ) ; if ( result ) { break; } } return result ; } 
@ java.lang.Override public void  ready ( final kaaes.spotify.webapi.android.models.Playlist playlist , retrofit.client.Response response ) { mPlaylist = playlist ; setupDetails ( playlist ) ; java.util.List < kaaes.spotify.webapi.android.models.TrackSimple > tracks = new java.util.ArrayList < kaaes.spotify.webapi.android.models.TrackSimple > () ; for ( kaaes.spotify.webapi.android.models.PlaylistTrack playlistTrack : playlist.tracks.items ) { tracks . add ( playlistTrack.track ) ; } setupTracksRows ( tracks ) ; if ( ( playlist.images . size () ) > 0 ) { java.lang.String imageUrl = playlist.images . get ( 0 ) . url ; loadDetailsRowImage ( imageUrl ) ; } } 
@ java.lang.Override protected void  onInvokedField ( de.robv.android.xposed.XC_MethodHook.MethodHookParam param ) throws java.lang.Throwable { android.content.BroadcastReceiver broad = ( ( android.content.BroadcastReceiver ) ( param.args [ 0 ] ) ) ; if ( broad != null ) handleBroad ( broad ) ; android.content.IntentFilter filter = ( ( android.content.IntentFilter ) ( param.args [ 1 ] ) ) ; if ( filter != null ) handleFilter ( filter ) ; } 
public static util.Coords fromCSFGStr ( java.lang.String coords ) { if ( ! ( coords . matches ( "[a-s][a-s]" ) ) ) throw new java.lang.IllegalArgumentException ( ( ( "String: '" + coords ) + "' is not recognizable as SGF coordinates." ) ) ; int x = ( ( coords . charAt ( 0 ) ) - 'a' ) + 1 ; int y = ( ( coords . charAt ( 1 ) ) - 'a' ) + 1 ; return util.Coords . getCoords ( x , y ) ; } 
public static it.crs4.features.DType convertImageTypes ( int pixelType ) { switch ( pixelType ) { case loci.formats.FormatTools.INT8 : return DType.INT8 ; case loci.formats.FormatTools.UINT8 : return DType.UINT8 ; case loci.formats.FormatTools.INT16 : return DType.INT16 ; case loci.formats.FormatTools.UINT16 : return DType.UINT16 ; case loci.formats.FormatTools.INT32 : return DType.INT32 ; case loci.formats.FormatTools.UINT32 : return DType.UINT32 ; case loci.formats.FormatTools.FLOAT : return DType.FLOAT32 ; case loci.formats.FormatTools.DOUBLE : return DType.FLOAT64 ; default: throw new java.lang.IllegalArgumentException ( ( "Unknown pixel type: " + pixelType ) ) ; } } 
public void  printBuilder ( java.lang.String address , com.jme3.math.Vector3f walk , com.jme3.math.Vector3f view , int life , boolean attack , int score ) { try { this . OUTPUT . writeBytes ( ( ( server.ClientManager.PLAYER ) + "\n" ) ) ; java.lang.String line = new java.lang.StringBuilder () . builderString ( walk , view , new com.jme3.math.Vector3f () , life , attack , address , "" , score ) ; this . OUTPUT . writeBytes ( ( line + "\n" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void  exitSignifer ( @ org.antlr.v4.runtime.misc.NotNull wich.parser.WichParser.IdentifierContext ctx ) { org.antlr.symtab.Symbol s = currentScope . resolve ( ctx . ID () . getText () ) ; if ( ( s != null ) && ( s instanceof wich.semantics.symbols.WVariableSymbol ) ) { ctx.exprType = ( ( org.antlr.symtab.TypedSymbol ) ( s ) ) . getType () ; } else {} } 
void  returnedconnection ( org.glassfish.grizzly.Connection result , ru.kwanza.jeda.nio.client.ConnectionConfig config , boolean close ) { if ( result != null ) { ru.kwanza.jeda.nio.client.ConnectionHolder holder = leasedConnections . remove ( result ) ; if ( config . isKeepAlive () ) { if ( ( ( holder != null ) && ( result . isOpen () ) ) && ( ! close ) ) { availableConnections . offer ( holder ) ; getStage () . getThreadManager () . adjustThreadCount ( getStage () , getThreadCount () ) ; } } } batchSize . incrementAndGet () ; } 
@ java.lang.Override protected java.lang.Object  executeInAsync ( java.lang.Object [] params ) { cache = com.kot32.ksimplelibrary.cache.ACache . get ( getActivity () ) ; int t = baseAction . initLocalData () ; switch ( t ) { case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_SHOW : baseAction . onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_DISMISS : android.os.Message message = new android.os.Message () ; message.what = 1 ; mHandler . sendMessage ( message ) ; baseAction . onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.DONT_LOAD_NETWORK_DATA : break; } return null ; } 
@ java.lang.Override protected void OnDestroy ( android.os.Bundle savedInstanceState ) { super . OnDestroy ( savedInstanceState ) ; setContentView ( R.layout.activity_map_page ) ; android.location.LocationManager locationManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 0 , 0 , this ) ; android.content.Intent intent = getIntent () ; } 
private boolean  exec_BUNDLE_CLEAR () { int bundleIndex = getBundleArg () ; if ( bundleIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; android.os.Bundle b = com.rfo.basic.Run.theBundles . get ( bundleIndex ) ; b . clear () ; return true ; } 
private double  getScore ( ab.vision.GameStateExtractor.GameState state ) { java.lang.System.out . println ( state ) ; if ( state == ( ab.vision.GameStateExtractor.GameState.WON ) ) { ab.vision.GameStateExtractor gameStateExtractor = new ab.vision.GameStateExtractor () ; java.lang.System.out . println ( state ) ; java.awt.image.BufferedImage scoreScreenshot = clientActionRobotJava . doScreenShot () ; java.lang.System.out . println ( state ) ; double reward = gameStateExtractor . getScoreEndGame ( scoreScreenshot ) ; java.lang.System.out . println ( reward ) ; return reward ; } else { return 0 ; } } 
public static void checkFetchFilesExist ( final java.util.List < gov.loc.repository.bagit.domain.FetchItem > items , final java.nio.file.Path bagDir ) throws gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException { gov.loc.repository.bagit.verify.MandatoryVerifier.logger . info ( "Checking if all [{}] items in fetch.txt exist in the [{}]" , items . size () , bagDir ) ; for ( final gov.loc.repository.bagit.domain.FetchItem item : items ) { if ( ! ( java.nio.file.Files . exists ( item.path ) ) ) { throw new gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException ( ( ( "Fetch item " + item ) + " has not been fetched!" ) ) ; } } } 
public static java.lang.String getRequestip ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ipAddr ; ipAddr = request . getHeader ( "X-Real-IP" ) ; if ( ( null == ipAddr ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = request . getHeader ( "x-forwarded-for" ) ; } if ( ( null == ipAddr ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = "127.0.0.1" ; } return ipAddr ; } 
public void store ( java.lang.String extension , java.io.File file ) { try { javax.imageio.ImageIO . write ( this . image . getImage () , extension , new java.io.File ( file . getPath () ) ) ; } catch ( java.io.IOException e ) { javax.swing.JOptionPane . showMessageDialog ( null , "There was a Problem Exporting the Image, Please report the bug to the Developers" ) ; } } 
public int window ( String key ) { int window = 0 ; switch ( windowFunction ) { case 0 : window = additiveHash ( key ) ; break; case 1 : window = rotationalHash ( key ) ; break; default: java.lang.System.out . println ( "Error when setting window function - given window function not found." ) ; java.lang.System . exit ( 0 ) ; } return window ; } 
public void confirmsAttack ( int nrD , risiko.players.ArtificialPlayer . . . aiCaller ) throws exceptions.PlayerLossException , exceptions.WrongCallerException { if ( ! ( canCallDefenseMethods ( aiCaller ) ) ) { throw new exceptions.WrongCallerException () ; } attackInProgress = false ; this . nrD = nrD ; fight () ; checkCountryConquest () ; } 
private void ancesterPathCompare ( java.util.List < java.lang.String > ancestorPath , java.util.List < edu.unc.lib.dl.fedora.PID > pids ) { for ( int i = 0 ; i < ( ancestorPath . size () ) ; i ++ ) { org.junit.Assert . assertTrue ( ancestorPath . get ( i ) . equals ( ( ( ( i + 1 ) + "," ) + ( pids . get ( i ) . getId () ) ) ) ) ; } } 
public long getTimeBucketAndAdjustBoundets ( long value ) { if ( value < ( start ) ) { return - 1 ; } long diffFromStart = value - ( fixedStart ) ; long key = diffFromStart / ( bucketSpanMillis ) ; if ( value >= ( end ) ) { long diffInBuckets = ( value - ( end ) ) / ( bucketSpanMillis ) ; long move = ( diffInBuckets + 1 ) * ( bucketSpanMillis ) ; start += move ; end += move ; triggerPurge = true ; lowestPurgeableTimeBucket += diffInBuckets ; } return key ; } 
public void processClose ( com.solacesystems.conn.Handle handle ) { com.solacesystems.conn.MessageSupport ms = ( ( com.solacesystems.conn.MessageSupport ) ( handle ) ) ; com.solacesystems.conn.MessageHandle msg = ms . getRxMessage () ; java.lang.String topic = msg . getDestination () . getName () ; java.nio.ByteBuffer container = handler . getBuffer () ; if ( container != null ) { container . clear () ; msg . getBinaryAttachment ( container ) ; container . flip () ; } handler . processClose ( topic , container ) ; } 
@ android.support.annotation.VisibleForTesting void SetVideoContext ( java.lang.String path ) { if ( ( mPlayer ) == null ) mPlayer = createPlayer ( mContext . get () ) ; try { mPlayer . setDataSource ( mContext . get () , android.net.Uri . parse ( path ) ) ; openVideo () ; } catch ( java.io.IOException e ) { com.hustunique.parsingplayer.util.LogUtil . wtf ( com.hustunique.parsingplayer.player.media.ParsingPlayerProxy.TAG , e ) ; e . printStackTrace () ; } } 
@ org.junit.Test public void testDefaultChangeTypeToVCStType () { for ( org.eclipse.jgit.diff.DiffEntry.ChangeType ct : DiffEntry.ChangeType . values () ) { if ( ( ( ct != ( DiffEntry.ChangeType.ADD ) ) && ( ct != ( DiffEntry.ChangeType.DELETE ) ) ) && ( ct != ( DiffEntry.ChangeType.MODIFY ) ) ) { assertEquals ( git . gitChangeTypeToVCSChangeType ( ct ) , VCSChangeType.UNKNOWN ) ; } } } 
@ java.lang.Override public void setBooleanMric ( java.lang.String key , boolean value ) { if ( ( ( ( sender ) == null ) || ( ( sender . getBlock () ) == null ) ) || ( ( sender . getBlock () . getType () ) != ( org.bukkit.Material.COMMAND ) ) ) { return; } sender . getBlock () . setMetadata ( key , new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer . getInstance () , value ) ) ; } 
private static cs155.core.Color3D calculuteDiffuse ( cs155.core.Point3D n , cs155.core.Color3D matColor , cs155.core.Color3D lightColor , cs155.core.Point3D lightVec ) { cs155.core.Color3D localDiffuse ; double diffuseIntensity = cs155.core.Light3D . diffuse ( lightVec , n ) ; localDiffuse = matColor . times ( lightColor ) . scale ( diffuseIntensity ) ; return localDiffuse ; } 
@ org.testng.annotations.Test public void test11_AddnewHTMLFiles () { org.exoplatform.selenium.TestLogger . info ( "Test 11 Add new HTML file" ) ; java.lang.String HTMLFILE_NAME = "HTMLfile" + ( getRandomNumber () ) ; java.lang.String HTMLFILE_CONTENT = "HTML file " + ( getRandomNumber () ) ; navToolBar . goToSiteExplorer () ; actBar . goToAddNewContent () ; org.exoplatform.selenium.TestLogger . info ( "Create new HTML file" ) ; cTemplate . createNewHtmlFile ( HTMLFILE_NAME , true , "" , HTMLFILE_CONTENT ) ; org.exoplatform.selenium.TestLogger . info ( "Restore data" ) ; actBar . goToNodeByAddressPath ( "/" ) ; cMenu . deleteDocument ( ecms.ELEMENT_NODE_ROW_VIEW . replace ( "${nodeName}" , HTMLFILE_NAME ) ) ; } 
public void invoke () { while ( true ) { java.lang.System.out . println ( "MEDIA_MANAGER: Indexing movies..." ) ; indexHelper ( new java.io.File ( mm.movieDir ) ) ; java.lang.System.out . println ( "MEDIA_MANAGER: Indexing music..." ) ; indexHelper ( new java.io.File ( mm.musicDir ) ) ; mm.isIndexed = true ; java.lang.System.out . println ( "MEDIA_MANAGER: Index complete!" ) ; if ( mm.keepIndexing ) try { java.lang.Thread . sleep ( delay ) ; } catch ( java.lang.InterruptedException e ) {} else { return; } } } 
@ java.lang.Override public com.levserj.domain.Item updateEntry ( com.levserj.domain.Item item ) { if ( ! ( repository . exists ( item . getId () ) ) ) { com.levserj.service.mysql.MySQLItemService.LOG . error ( "Item with id: {} doesn't exist" , item . getId () ) ; return null ; } return repository . save ( item ) ; } 
private void  doesAction ( int requestCode , int [] grantResults ) { int count = 0 ; if ( requestCode == ( ACCESS_PERMISSION ) ) { for ( int i = 0 ; i < ( grantResults.length ) ; i ++ ) { if ( ( grantResults [ i ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) count ++ ; } if ( count == ( grantResults.length ) ) listener . onGranted () ; else listener . onDenied () ; } } 
@ java.lang.Override public org.eclipse.jface.text.contentassist.ICompletionProposal [] computeCompletionProosities ( org.eclipse.jface.text.ITextViewer viewer , int offset ) { java.util.List < org.eclipse.jface.text.contentassist.ICompletionProposal > proposals = new java.util.ArrayList < org.eclipse.jface.text.contentassist.ICompletionProposal > () ; viewer . getDocument () ; return proposals . toArray ( new org.eclipse.jface.text.contentassist.ICompletionProposal [ proposals . size () ] ) ; } 
private algo.BSTMap < K , V > . Node findMinLeft ( algo.BSTMap < K , V > . Node parent ) { algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinLeft ( child ) ; } } 
public static boolean  getBooool ( java.lang.String sql ) { java.lang.String s = ids.sardine.TransferUtil . getString ( sql ) ; return ( ( s != null ) && ( ( s . trim () . length () ) != 0 ) ) && ( ( java.lang.Boolean . parseBoolean ( s . trim () ) ) || ( ! ( "0" . equals ( s . trim () ) ) ) ) ; } 
@ org.junit.Test public void testProcessesInheritanceCorrectness () { org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass bean = new org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass () ; bean.id = DEFAULT_BEAN_ID ; bean.name = "christoph strobl" ; org.springframework.data.solr.core.convert.ITestMappingSolrConverter.BeanWithBaseClass loaded = saveAndLoad ( bean ) ; assertEquals ( bean.id , loaded.id ) ; assertEquals ( bean.name , loaded.name ) ; } 
static org.apache.lucene.store.Directory setupIndex ( org.apache.lucene.analysis.Analyzer analyzer , org.apache.lucene.search.similarities.Similarity bm25 ) throws java.io.IOException { main.IndexWriterConfig config = new main.IndexWriterConfig ( analyzer ) ; if ( bm25 != null ) { config . setSimilarity ( bm25 ) ; } org.apache.lucene.store.FSDirectory index = org.apache.lucene.store.FSDirectory . open ( new java.io.File ( main.Main.indexPath ) . toPath () ) ; main.IndexWriter w = new main.IndexWriter ( index , config ) ; java.io.File docDir = new java.io.File ( main.Main.docsPath ) ; main.Main . indexDocs ( w , docDir ) ; w . close () ; return index ; } 
public int  overallRank () { int s ; if ( ( score1 ) > ( score2 ) ) s = score2 ; else s = score1 ; if ( s > ( score3 ) ) s = score3 ; s = ( ( ( score1 ) + ( score2 ) ) + ( score3 ) ) - s ; return s ; } 
private double getstepMoveStep ( genetics.MusicPhenotype p ) { double steps = 0 ; double intervalCount = 0 ; for ( java.util.ArrayList < java.lang.Integer > measure : p.melodyIntervals ) { for ( int interval : measure ) { interval = java.lang.Math . abs ( interval ) ; intervalCount ++ ; if ( ( interval >= 1 ) && ( interval <= 2 ) ) { steps += 1 ; } } } if ( intervalCount == 0 ) { return 0 ; } return steps / intervalCount ; } 
@ java.lang.Override protected void onRelease ( android.os.Bundle savedInstanceState ) { super . onRelease ( savedInstanceState ) ; setContentView ( R.layout.activity_dish_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.content.Intent dishInent = getIntent () ; int dish_id = dishInent . getIntExtra ( "dish_id" , 1 ) ; context = this ; fetchDishFromServer ( dish_id ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
protected void putEnumericParameter ( java.lang.String name , java.lang.String description , java.util.List < java.lang.String > options , java.lang.String value , java.lang.String instructions , boolean mandatory , int order ) throws com.sixsq.slipstream.exceptions.ValidationException { S parameter = createParameter ( name , description , mandatory ) ; parameter . setEnumValues ( options ) ; parameter . setValue ( value ) ; parameter . setOrder ( order ) ; parameter . setInstructions ( instructions ) ; addParameter ( parameter , ParameterType.Enum , mandatory ) ; } 
public void DoOpen ( ) throws java.lang.InterruptedException { java.awt.image.BufferedImage screen ; java.util.List < java.awt.Point > clickPos ; log . print ( "DoOpen" , Log.LOGLEVEL.INFO ) ; screen = scr . getScreen () ; for ( ClickObject icon : clObj.closes ) { clickPos = scr . find ( screen , icon , false ) ; scr . click ( clickPos , icon ) ; } } 
ru.spbau.mit.StringSetImpl.StringSetEntry removeElement ( char letter , boolean notLastLetter ) { ( numberOfSuccessors ) -- ; int idx = getIndex ( letter ) ; ru.spbau.mit.StringSetImpl.StringSetEntry nextEntry = next . get ( idx ) ; if ( ( ( nextEntry.numberOfSuccessors ) == 1 ) && notLastLetter ) { next . set ( idx , null ) ; } return nextEntry ; } 
@ java.lang.Override public boolean  oncreateOptionQueue ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu_photo_album , menu ) ; android.view.MenuItem item = menu . findItem ( R.id.action_ok ) ; if ( ( okButtonDrawable ) != null ) { item . setIcon ( okButtonDrawable ) ; } else if ( ( menuText ) != null ) { item . setIcon ( new com.sangcomz.fishbun.util.TextDrawable ( getResources () , menuText , colorMenuText ) ) ; } return true ; } 
@ java.lang.Override public boolean store ( com.mnubo.platform.android.sdk.api.store.MnuboEntity entity ) { boolean success = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; success = file . delete () ; if ( ! success ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } else { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only store MnuboFileEntity" ) ; } return success ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( this . getNavigationManager () . topFragment () ) instanceof com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } else { this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , 0 ) ) ; } } 
@ org.osgi.service.component.annotations.Reference ( name = "org.wso2.carbon.datasource.DataSourceService" , service = org.wso2.carbon.datasource.core.api.DataSourceService . class , cardinality = org.osgi.service.component.annotations.ReferenceCardinality.AT_LEAST_ONE , policy = org.osgi.service.component.annotations.ReferencePolicy.DYNAMIC , unbind = "unregisterDataSourceService" ) protected void onDataSourceServiceready ( org.wso2.carbon.datasource.core.api.DataSourceService service ) { try { com.zaxxer.hikari.HikariDataSource dsObject = ( ( com.zaxxer.hikari.HikariDataSource ) ( service . getDataSource ( "WSO2_CARBON_DB" ) ) ) ; java.sql.Connection connection = dsObject . getConnection () ; } catch ( org.wso2.carbon.datasource.core.exception.DataSourceException e ) { org.wso2.carbon.datasource.sample.DataSourceServiceListenerComponent.logger . error ( "error occurred while fetching the data source." , e ) ; } catch ( java.sql.SQLException e ) { org.wso2.carbon.datasource.sample.DataSourceServiceListenerComponent.logger . error ( "error occurred while fetching the connection." , e ) ; } } 
@ java.lang.Override public java.util.List < TOutDto > getById ( java.lang.String inRequstMapping , TinDto inInDto ) { java.util.Map < java.lang.String , TOutDto > outDtoMap = new java.util.HashMap < java.lang.String , TOutDto > () ; try { getReadService () . execute ( inRequstMapping , inInDto , outDtoMap ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return new java.util.ArrayList < TOutDto > ( outDtoMap . values () ) ; } 
@ java.lang.Override public bcccp.tickets.adhoc.IAdhocTicket findTicketByBrcode ( java.lang.String findBarcode ) { for ( int i = 0 ; i < ( currentAdhocTickets . size () ) ; i ++ ) { if ( ( currentAdhocTickets . get ( i ) . getBarcode () ) == null ? findBarcode == null : currentAdhocTickets . get ( i ) . getBarcode () . equals ( findBarcode ) ) { return currentAdhocTickets . get ( i ) ; } } return null ; } 
private boolean isNotHisonObject ( final java.lang.String value ) throws java.io.IOException { return ( ( ( ( value . startsWith ( "{" ) ) || ( value . startsWith ( "[" ) ) ) || ( "true" . equals ( value ) ) ) || ( "false" . equals ( value ) ) ) || ( springfox.documentation.swagger2.configuration.Swagger2JacksonModule.PropertyExampleSerializerMixin.PropertyExampleSerializer.JSON_NUMBER_PATTERN . matcher ( value ) . matches () ) ; } 
public itinerary.main.State  deleteJob ( itinerary.main.Command command ) { boolean isValid = isValidDeleteOp ( command ) ; itinerary.main.Task originalTask = null ; if ( isValid ) { originalTask = listTask . remove ( ( ( command . getTask () . getLineNumber () ) - 1 ) ) ; updateLineNum () ; itinerary.main.JsonIOHandler . writeJSONList ( currFile , listTask ) ; } return new itinerary.main.State ( command , new itinerary.main.Command ( originalTask , CommandType.ADD , null ) , getAllTasks () , isValid ) ; } 
static void title__Change ( java.lang.String title , int id ) { if ( org.embedded.browser.Chromium.chmap . containsKey ( id ) ) org.embedded.browser.Chromium.chmap . get ( id ) . loaded = true ; if ( title . equals ( "" ) ) return; if ( org.embedded.browser.Chromium.chmap . containsKey ( id ) ) org.embedded.browser.Chromium.chmap . get ( id ) . title__Change ( title ) ; } 
public double calculizeintegral () { double temp = calculizeintegralAtIteration () ; double diff = 0.0 ; do { double integralValue = calculizeintegralAtIteration () ; diff = java.lang.Math . abs ( ( integralValue - temp ) ) ; temp = integralValue ; } while ( diff > 1.0E-8 ) ; return temp ; } 
@ com.squareup.otto.Subscribe public void searchForVertues ( com.android.test.otto.VenueSearchEvent event ) { com.android.test.qachee.QacheeData data = ( ( com.android.test.qachee.QacheeData ) ( com.qachee.QacheeManager . getInstance () . get ( event.place , true ) ) ) ; if ( data == null ) { asyncTask = new com.android.test.task.VenueBackgroundTask ( event.place , gpsTracker . getLocation () ) ; asyncTask . execute () ; } else { ottoBus . post ( new com.android.test.otto.VenueResultEvent ( data.venues , event.place , gpsTracker . getLocation () ) ) ; } } 
@ java.lang.Override public java.lang.String  localnamefor ( java.lang.String uri ) { int split = org.apache.jena.rdf.model.impl.Util . splitNamespaceXML ( uri ) ; java.lang.String ns = uri . substring ( 0 , split ) ; java.lang.String local = uri . substring ( split ) ; if ( local . equals ( "" ) ) return null ; java.lang.String prefix = getNsURIPrefix ( ns ) ; return prefix == null ? null : ( prefix + ":" ) + local ; } 
public void  lennen () { java.lang.String tf ; tf = letter . getText () . toLowerCase () ; for ( int w = 0 ; w < 26 ; w ++ ) { if ( tf . equals ( ( "" + ( alphabet [ w ] ) ) ) ) { alpha [ w ] = ja ; } } ann . backpropagate ( new com.github.jannled.lib.math.Matrix ( feld , 1 , feld.length ) , new com.github.jannled.lib.math.Matrix ( alpha , 1 , alpha.length ) ) ; } 
protected boolean isIE5 ( java.lang.String userAgent ) { if ( ( userAgent != null ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { if ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public boolean  equities ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getClass () ) != ( obj . getClass () ) ) return false ; org.opennms.netmgt.poller.client.rpc.PollerResponseDTO other = ( ( org.opennms.netmgt.poller.client.rpc.PollerResponseDTO ) ( obj ) ) ; return java.util.Objects .  equities ( this . pollStatus , other.pollStatus ) ; } 
private java.util.List < org.smartdata.common.actions.ActionInfo > getActionInfoForComm ( long cid ) throws java.io.IOException { java.util.ArrayList < org.smartdata.common.actions.ActionInfo > actionInfos = new java.util.ArrayList <> () ; org.smartdata.server.command.Command cmd = commandPool . getCommand ( cid ) ; if ( cmd == null ) { return actionInfos ; } for ( org.smartdata.actions.SmartAction smartAction : cmd . getActions () ) { actionInfos . add ( createActionInfoFromAction ( smartAction , cid ) ) ; } return actionInfos ; } 
public java.lang.String  tostring () { java.lang.String retString = "" ; int i = 1 ; for ( Destination d : this ) { retString += ( ( ( "" + i ) + ". " ) + ( d .  tostring () ) ) + "\n" ; i ++ ; } return retString ; } 
public void  setobject ( java.sql.CallableStatement statement , com.ctrip.platform.dal.dao.StatementParameter parameter ) throws java.sql.SQLException { if ( ( ( parameter . getValue () ) != null ) && ( ( parameter . getSqlType () ) == ( com.ctrip.platform.dal.common.enums.DatabaseCategory.SQL_SERVER_TYPE_TVP ) ) ) { com.microsoft.sqlserver.jdbc.SQLServerCallableStatement sqlsvrStatement = ( ( com.microsoft.sqlserver.jdbc.SQLServerCallableStatement ) ( statement ) ) ; sqlsvrStatement . setStructured ( parameter . getIndex () , parameter . getName () , ( ( com.microsoft.sqlserver.jdbc.SQLServerDataTable ) ( parameter . getValue () ) ) ) ; } else { super .  setobject ( statement , parameter ) ; } } 
@ java.lang.Override public value.Value ADD ( value.Value other ) { if ( ( ! ( isSet () ) ) || ( ! ( other . isSet () ) ) ) { return new value.IntegerValue () ; } return new value.IntegerValue ( ( ( value ) + ( ( ( value.IntegerValue ) ( other ) ) . getValue () ) ) ) ; } 
private javax.validation.ConstraintViolation < ? > [] validateNonDifferentPort ( final java.lang.String httpPortPath , final java.lang.Integer httpPort , final java.lang.String httpsPortPath , final java.lang.Integer httpsPort ) { if ( ( httpPort != null ) && ( httpPort . equals ( httpsPort ) ) ) { return new javax.validation.ConstraintViolation < ? > [] { constraintViolationFactory . createViolation ( httpPortPath , "HTTP and HTTPs ports must be different" ) , constraintViolationFactory . createViolation ( httpsPortPath , "HTTP and HTTPs ports must be different" ) } ; } return new javax.validation.ConstraintViolation < ? > [] {} ; } 
private void rawListBar () { java.util.List < com.util.Employee > EmployeeList ; EmployeeList = getInfo.currentPojo . getAllEmployees () ; dataAdapter = new com.service.SendMSM.MyCustomAdapter ( this , R.layout.employee_info , EmployeeList ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.listView1 ) ) ) ; listView . setAdapter ( dataAdapter ) ; } 
@ java.lang.Override protected void  OnCreated ( android.os.Bundle savedInstanceState ) { super .  OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_play_list ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; new com.arunsudhir.radiomalayalam.io.PlaylistReaderAsyncTask ( new com.arunsudhir.radiomalayalam.io.PlaylistProgressExecutor ( this ) ) . execute () ; } 
@ java.lang.Override public java.lang.Boolean Update ( int id ) throws com.nextbook.exceptions.AuthRequiredException , com.nextbook.exceptions.ForbiddenException , com.nextbook.exceptions.NoSuchEntityException { com.nextbook.domain.entity.comment.CommentEntity commentEntity = commentDao . getNotNull ( id ) ; commentEntity . setStatus ( CommentStatusesEnum.DELETED ) ; if ( ( sessionUtils . allowedForUserWithRole ( RolesEnum.admin ) ) || ( commentAvailabilityService . isCommentAuthorSession ( commentEntity ) ) ) { return ( commentDao . update ( commentEntity ) . getStatus () . compareTo ( CommentStatusesEnum.DELETED ) ) == 0 ; } return false ; } 
public Point nextPoint ( WorldModel world , Point dest_pt ) { Point start_pt = this . getPosition () ; java.util.List < Node > path = AStar ( world , world . getTileOccupant ( dest_pt ) . getClass () , start_pt , dest_pt ) ; if ( ! ( path . isEmpty () ) ) return path . get ( 1 ) . pt ; else return start_pt ; } 
@ java.lang.Override public boolean app ( final org.pentaho.agilebi.modeler.ModelerWorkspace workspace , final java.lang.String field , final org.pentaho.metastore.api.IMetaStore metaStore ) throws org.pentaho.agilebi.modeler.ModelerException { org.pentaho.agilebi.modeler.nodes.LevelMetaData existingLevel = locateLevelFromFormula ( workspace , field ) ; boolean isApplied = false ; if ( ( existingLevel != null ) && ( workspace != null ) ) { removeLevel ( workspace , existingLevel ) ; workspace . getWorkspaceHelper () . populateDomain ( workspace ) ; isApplied = true ; } return isApplied ; } 
@ java.lang.Override public boolean isMogelief ( io.gameoftrades.model.markt.actie.HandelsPositie positie ) { if ( ! ( handel . getStad () . equals ( positie . getStad () ) ) ) { return false ; } if ( ! ( positie . isActieBeschikbaar ( 1 ) ) ) { return false ; } java.lang.Integer value = positie . getVoorraad () . get ( handel . getHandelswaar () ) ; return ( value != null ) && ( value > 0 ) ; } 
protected javax.xml.bind.JAXBElement < org.oscm.saml2.api.model.protocol.LogoutRequestType > signLogpointRequest ( javax.xml.bind.JAXBElement < org.oscm.saml2.api.model.protocol.LogoutRequestType > logoutRequestJAXB ) { try { org.w3c.dom.Element marshaled = marshallJAXBElement ( logoutRequestJAXB ) ; org.w3c.dom.Element signed = samlBean . signLogpointRequest ( marshaled ) ; logoutRequestJAXB = unmarshallJAXBElement ( signed ) ; } catch ( java.lang.Exception e ) { throw new org.oscm.internal.types.exception.SaaSSystemException ( e ) ; } return logoutRequestJAXB ; } 
private void populateUIic () { final android.view.View rootView = getWindow () . getDecorView () ; rootView . setKeepScreenOn ( settings . keepScreenOn () ) ; rootView . setBackgroundColor ( settings . getBackgroundColor () ) ; currentTranslation = bibleReadingPresenter . loadCurrentTranslation () ; currentBook = bibleReadingPresenter . loadCurrentBook () ; currentChapter = bibleReadingPresenter . loadCurrentChapter () ; } 
private boolean readHotelStatusImpl () { java.io.File f = new java.io.File ( "hotel.save" ) ; if ( f . exists () ) { try { java.io.FileInputStream fin = new java.io.FileInputStream ( f ) ; java.io.ObjectInputStream ois = new java.io.ObjectInputStream ( fin ) ; hs = ( ( hotelmgmt.HotelSystem ) ( ois . readObject () ) ) ; } catch ( java.lang.Exception ex ) { java.lang.System.out . println ( "There was an exception occurr while trying to read in hotelSystem\n" ) ; return false ; } } else return false ; return true ; } 
@ org.junit.Test public void rowAndColSample () { int rowCount = categoryTableModel . getRowCount () ; int columnCount = categoryTableModel . getColumnCount () ; for ( int i = 0 ; i < ( rowCount - 1 ) ; i ++ ) { for ( int j = 0 ; j < ( columnCount - 1 ) ; j ++ ) { org.junit.Assert . assertNotNull ( categoryTableModel . getValueAt ( i , j ) ) ; } } } 
@ java.lang.Override public android.view.View OnCreateLayout ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View v = inflater . inflate ( R.layout.fragment_wanderers , container , false ) ; mContainer = v . findViewById ( R.id.list_container ) ; mProgress = v . findViewById ( R.id.list_progress ) ; com.codeground.wanderlustbulgaria.Fragments.WanderersFragment.user = com.parse.ParseUser . getCurrentUser () ; return v ; } 
public void time () { java.lang.Integer bayValue = ( ( phidgetNumber ) * 8 ) + ( sensorIndex ) ; java.lang.Integer updatedValue = 0 ; if ( ( rack.bays ) != null ) { updatedValue = ( sensorVal ) + ( rack.bays [ bayValue ] . calibrationOffset ) ; } java.lang.Boolean refreshScreen = testRun.bayItems [ bayValue ] . updateValue ( updatedValue , testRun.currentTestStep , context ) ; aa . notifyDataSetChanged () ; if ( refreshScreen ) { updateCounts () ; } } 
protected java.lang.String  getPackPath ( final com.intellij.psi.PsiClass psiClass ) { final com.intellij.psi.PsiFile javaFile = psiClass . getContainingFile () ; if ( javaFile instanceof com.intellij.psi.PsiJavaFile ) { final java.lang.String psiPackageName = ( ( com.intellij.psi.PsiJavaFile ) ( javaFile ) ) .  getPackPath () ; boolean _isEmpty = psiPackageName . isEmpty () ; boolean _not = ! _isEmpty ; if ( _not ) { return psiPackageName ; } } return null ; } 
@ java.lang.Override public android.view.View OnCreateLayout ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = null ; if ( ( customLayout ) == 0 ) { rootView = generateCaptchaView ( inflater , container , savedInstanceState ) ; android.widget.TextView captchaPrompt = ( ( android.widget.TextView ) ( rootView . findViewById ( R.id.txt_captcha_prompt ) ) ) ; if ( ( ( customText ) != null ) && ( captchaPrompt != null ) ) captchaPrompt . setText ( customText ) ; } else { rootView = inflater . inflate ( customLayout , container , false ) ; } return rootView ; } 
@ java.lang.Override public void OnJobRemove ( android.content.Intent rootIntent ) { log . debug ( "Task has been removed" ) ; if ( ( ( config ) != null ) && ( config . getStopOnTerminate () ) ) { log . info ( "Stopping self" ) ; stopSelf () ; } else { log . info ( "Continue running in background" ) ; } super . OnJobRemove ( rootIntent ) ; } 
private void  setMedianas ( float width , float height ) { pianoA . setSize ( width , height ) ; pianoB . setSize ( width , height ) ; pianoAB . setSize ( width , height ) ; float cenx = getCenx () ; float ceny = getCeny () ; pianoA . setCenter ( cenx , ( ceny - height ) ) ; pianoB . setCenter ( cenx , ( ceny + height ) ) ; pianoAB . setCenter ( cenx , ceny ) ; } 
private void setendDate ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } 
public int pp3 ( int p ) { position = p ; java.lang.System.out . println ( "There is a white rabbit in the road, it looks rather fluffy and cute" ) ; java.lang.System.out . println ( "(1) Reach out and pet it " ) ; java.lang.System.out . println ( "(2) Ignore it and move on " ) ; choice = u . nextInt () ; switch ( choice ) { case 1 : java.lang.System.out . println ( " IT IS THE RABBIT!!!" ) ; java.lang.System.out . println ( "You died horribly, it was gruesome" ) ; position = - 1 ; break; case 2 : java.lang.System.out . println ( "Probably a good idea, it's better to avoid cuteness" ) ; position += speed ; break; default: java.lang.System.out . println ( "No pity is shown to those who cannot follow the rules of the game. Die, you fiend." ) ; position = - 1 ; break; } return position ; } 
public static com.eveningoutpost.dexdrip.Models.TransmitterData creator ( int raw_data , int sensor_battery_level , long timestamp ) { com.eveningoutpost.dexdrip.Models.TransmitterData . randomDelay ( 50 , 200 ) ; if ( ! ( com.eveningoutpost.dexdrip.Models.TransmitterData . is_new ( timestamp ) ) ) { return null ; } com.eveningoutpost.dexdrip.Models.TransmitterData transmitterData = new com.eveningoutpost.dexdrip.Models.TransmitterData () ; transmitterData.sensor_battery_level = sensor_battery_level ; transmitterData.raw_data = raw_data ; transmitterData.timestamp = timestamp ; transmitterData.uuid = java.util.UUID . randomUUID () . toString () ; transmitterData . save () ; return transmitterData ; } 
private java.util.HashMap < java.lang.String , codingcareers.webapp.client.PageComponents.ProgressPanel > constructProgressbarts () { java.util.HashMap < java.lang.String , codingcareers.webapp.client.PageComponents.ProgressPanel > progressBarCollection = new java.util.HashMap <> () ; for ( java.lang.String task : codingcareers.webapp.client.Constants.TASK_SUBJECTS ) { progressBarCollection . put ( task , new codingcareers.webapp.client.PageComponents.ProgressPanel ( task , getTaskCompleteness ( task ) ) ) ; } return progressBarCollection ; } 
private void parseCollectOr ( eu.etaxonomy.cdm.io.salvador.SalvadorSpecimenImportState state , int collectorNo , eu.etaxonomy.cdm.model.agent.Team team , java.util.Map < java.lang.String , java.lang.String > record , int row ) { java.lang.String str = record . get ( ( "COLLECTOR_" + collectorNo ) ) ; if ( str == null ) { return; } else { parsePerson ( state , str , team , row ) ; } return; } 
protected void handlePost ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.util.List < fr.epf.models.Promotion > promotions = promoDAO . findAll () ; request . setAttribute ( "promotions" , promotions ) ; request . getRequestDispatcher ( "/WEB-INF/add_member.jsp" ) . forward ( request , response ) ; } 
void InitVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } 
public void onUse () { java.util.List < com.mauriciotogneri.fileexplorer.utils.FileInfo > selectedItems = adapter . selectedItems ( true ) ; if ( ( selectedItems . size () ) == 1 ) { shareSingle ( selectedItems . get ( 0 ) ) ; } else if ( ! ( selectedItems . isEmpty () ) ) { shareMultiple ( selectedItems ) ; } } 
public java.util.ArrayList < mx.evin.apps.words.model.entities.parse.Term > MagicSort () { quickFilter () ; if ( ( results . size () ) < 1 ) firstLettersFilter ( 3 ) ; if ( ( results . size () ) < 1 ) wordByWordFilter () ; if ( ( results . size () ) < 1 ) firstLettersFilter ( 2 ) ; if ( ( results . size () ) < 1 ) firstLettersFilter ( 1 ) ; return results ; } 
@ java.lang.Override public void invoke () { try { isHost = true ; socket = new java.net.ServerSocket ( PORT_NUMBER ) . accept () ; initStreams () ; invokeInteraction () ; } catch ( java.io.IOException e ) { android.util.Log . e ( "createGame" , e . toString () ) ; } } 
public final synchronized jogamp.opengl.GLBufferStorage mapbuffer ( final jogamp.opengl.GLBufferStateTracker bufferStateTracker , final jogamp.opengl.GL caller , final int target , final long offset , final long length , final int access , final jogamp.opengl.GLBufferObjectTracker.MapBufferRangeDispatch dispatch , final long glProcAddress ) throws jogamp.opengl.GLException { return this . mapbufferImpl ( bufferStateTracker , caller , target , true , offset , length , access , dispatch , glProcAddress ) ; } 
private static int getThisPieCount ( PeerFile file , int pieceNum ) { if ( ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) > ( file . getSize () ) ) { return ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) - ( file . getSize () ) ; } return Peer.PIECE_SIZE ; } 
@ java.lang.Override public void invoke ( javafx.scene.input.MouseEvent event ) { selectS . setLocation ( ( ( int ) ( event . getX () ) ) , ( ( int ) ( event . getY () ) ) ) ; java.lang.System.out . println ( ( "pr" + ( selectS ) ) ) ; if ( isFuncSelect ) { selecting = true ; java.lang.System.out . println ( "h" ) ; } } 
@ java.lang.Override public java.util.List < java.lang.String >  asQueryParameter () { if ( ! ( de.interseroh.report.model.MultiSelectParameter . isUnset () ) ) { java.util.List < java.lang.String > params = new java.util.ArrayList <> ( 4 ) ; for ( T value : getValue () ) { params . add ( ( ( ( "params[" + ( de.interseroh.report.model.MultiSelectParameter . getName () ) ) + "].value=" ) + ( de.interseroh.report.model.MultiSelectParameter . urlEncode ( asString ( value ) ) ) ) ) ; } return params ; } else { return super .  asQueryParameter () ; } } 
@ java.lang.Override public jonasandtim.energietagebuch.Data.DataInterfaces.KBRDataHasChangedMessage  updating ( jonasandtim.energietagebuch.Data.DataElements.XDataElement oldElement , jonasandtim.energietagebuch.Data.DataElements.XDataElement newElement ) { jonasandtim.energietagebuch.Data.DataInterfaces.KBRDataHasChangedMessage msg = null ; if ( validateEntry ( newElement ) ) { msg = mDataTree .  updatingElementGetMessage ( oldElement , newElement ) ; if ( msg != null ) msg . putProperty ( KBRDataHasChangedMessage.PROPERTIES_METERID , mMeter . getUId () ) ; } return msg ; } 
@ org.junit.Test public void  checkAnnotatedSrcFields_WhenMapThrough () { com.baeldung.dozer.Person2 englishAppPerson = new com.baeldung.dozer.Person2 ( "Jean-Claude Van Damme" , "JCVD" , 55 ) ; com.baeldung.dozer.Personne2 frenchAppPerson = mapper . map ( englishAppPerson , com.baeldung.dozer.Personne2 . class ) ; assertEquals ( frenchAppPerson . getNom () , englishAppPerson . getName () ) ; assertEquals ( frenchAppPerson . getSurnom () , englishAppPerson . getNickname () ) ; assertEquals ( frenchAppPerson . getAge () , englishAppPerson . getAge () ) ; } 
public void  killChannel ( int index , tsumegoai.Stone color ) { if ( ( index < 0 ) || ( ( searchSpace [ index ] ) == null ) ) return; if ( ( searchSpace [ index ] ) == color ) { searchSpace [ index ] = null ; updateZhash ( tsumegoai.Goban.searchSpacePositions [ index ] , color ) ; for ( int i = 0 ; i < 4 ; i ++ ) {  killChannel ( tsumegoai.Goban.searchSpaceAdjacentIndices [ ( ( 4 * index ) + i ) ] , color ) ; } } } 
public int depare ( com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p1 , com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p2 ) { if ( ( p1 . getScore () ) < ( p2 . getScore () ) ) { return 1 ; } if ( ( p1 . getScore () ) > ( p2 . getScore () ) ) { return - 1 ; } return p1 . getName () . depareToIgnoreCase ( p2 . getName () ) ; } 
@ java.lang.Override public void  itemStateUpdated ( java.awt.event.ItemEvent e ) { if ( ( e . getStateChange () ) == ( java.awt.event.ItemEvent.SELECTED ) ) { net.ntg.ftl.ui.TogglePanel.log . info ( ( ( ( "comboBox " + valueName ) + ": " ) + ( colorComboBox . getSelectedIndex () ) ) ) ; net.ntg.ftl.ui.TogglePanel.prefs . putInt ( ( valueName + ( net.ntg.ftl.ui.TogglePanel.COLOR ) ) , colorComboBox . getSelectedIndex () ) ; } } 
private boolean  hasFieldsrelion ( java.lang.Class < ? > klass , final net.imadz.lifecycle.meta.type.RelationConstraintMetadata relation ) { for ( java.lang.Class < ? > c = klass ; ( null != c ) && ( ( java.lang.Object . class ) != c ) ; c = c . getSuperclass () ) { for ( java.lang.reflect.Field field : c . getDeclaredFields () ) { if ( hasRelationOnField ( relation , field ) ) return true ; } } return false ; } 
public void set ( org.shaolin.bmdp.workflow.internal.cache.FlowObject flowInfo ) throws org.shaolin.bmdp.workflow.exception.ConfigException { this . flowInfo = flowInfo ; this . flowInfo . parse () ; if ( ( this . flowInfo . getSessionService () ) != null ) { this . sessionService = ( ( org.shaolin.bmdp.workflow.spi.SessionService ) ( org.shaolin.bmdp.runtime.AppContext . get () . getService ( this . flowInfo . getSessionService () ) ) ) ; if ( ( this . sessionService ) == null ) { this . sessionService = new org.shaolin.bmdp.workflow.internal.DefaultFlowSessionService () ; } } } 
public boolean  impactentity ( org.bukkit.entity.LivingEntity target , org.bukkit.entity.Player attacker , double damage ) { org.bukkit.event.entity.EntityDamageByEntityEvent damageEvent = new org.bukkit.event.entity.EntityDamageByEntityEvent ( attacker , target , org.bukkit.event.entity.EntityDamageEvent.DamageCause.ENTITY_ATTACK , damage ) ; org.bukkit.Bukkit . getPluginManager () . callEvent ( damageEvent ) ; if ( damage == 0 ) { return ! ( damageEvent . isCancelled () ) ; } if ( ! ( damageEvent . isCancelled () ) ) { target . damage ( damage ) ; return true ; } return false ; } 
@ java.lang.Override public org.openflexo.foundation.ontology.IFlexoOntologyClass getOntologueComponent () { if ( ( getAssignedFlexoProperty () ) != null ) { return getAssignedFlexoProperty () . getOntologicType () ; } if ( FlexoOntologyVirtualModelNature.INSTANCE . hasNature ( org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl . getOwningVirtualModel () ) ) { return org.openflexo.foundation.ontology.nature.FlexoOntologyVirtualModelNature . getOntologueComponent ( ontologyClassURI , org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl . getOwningVirtualModel () ) ; } return null ; } 
@ org.testng.annotations.Test public void testLinkListSequencingOne () { com.orientechnologies.orient.core.sql.query.OSQLSynchQuery sql = new com.orientechnologies.orient.core.sql.query.OSQLSynchQuery ( "select expand(children.children.children) from LinkListSequence where name = 'root'" ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > results = db . query ( sql ) ; org.testng.Assert . assertEquals ( results . size () , 4 ) ; for ( com.orientechnologies.orient.core.record.impl.ODocument result : results ) { java.lang.String value = result . field ( "name" ) ; org.testng.Assert . assertEquals ( value . length () , 5 ) ; } } 
@ java.lang.Override public void  onFailure ( java.lang.String response ) { com.google.gson.Gson g = new com.google.gson.GsonBuilder () . registerTypeAdapter ( org.apereo.models.Config . class , new org.apereo.deserializers.ConfigDeserializer () ) . create () ; org.apereo.models.Config config = g . fromJson ( response , org.apereo.models.Config . class ) ; configManager . setConfig ( config ) ; if ( config . isUpgradeRequired () ) { showErrorDialog ( AppConstants.UPGRADE_REQUIRED ) ; } else if ( config . isUpgradeRecommended () ) { showErrorDialog ( AppConstants.UPGRADE_RECOMMENDED ) ; } else { getAccountFeed () ; } } 
@ java.lang.Override public void invoke ( models.assetOwnership.GameMap map , models.playerAsset.Assets.Player player ) throws models.ctrlCommand.CommandNotConfiguredException { if ( isConfigured ) { player . accept ( new models.visitor.ArmyCreationVisitor ( map , player , RPLocation , units ) ) ; } else { throw new models.ctrlCommand.CommandNotConfiguredException ( ( ( "[" + ( this ) ) + "] is not configured." ) ) ; } } 
public boolean  togglerecaching () { if ( ( state ) == ( piano.State.isrecording ) ) { state = piano.State.isplaying ; return false ; } else if ( ( state ) == ( piano.State.isplaying ) ) { if ( ! ( listOfNote . isEmpty () ) ) { listOfNote . clear () ; } state = piano.State.isrecording ; return true ; } else { return false ; } } 
@ java.lang.Override public java.util.List < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > getAllEventLogConfigures ( ) throws org.wso2.carbon.event.stream.core.exception.EventStreamConfigurationException { int tenantId = org.wso2.carbon.context.PrivilegedCarbonContext . getThreadLocalCarbonContext () . getTenantId () ; java.util.Map < java.lang.String , org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > eventStreamConfigs = tenantSpecificEventStreamConfigs . get ( tenantId ) ; if ( eventStreamConfigs == null ) { return new java.util.ArrayList < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > () ; } return new java.util.ArrayList < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > ( eventStreamConfigs . values () ) ; } 
public void fireEvent ( org.centauri.cloud.cloud.event.Event event ) { java.util.Set < org.centauri.cloud.cloud.event.EventManager.EventHandler > eventSet = this . eventHandlers . get ( event . getClass () ) ; if ( eventSet == null ) return; for ( org.centauri.cloud.cloud.event.EventManager.EventHandler eventHandler : eventSet ) { try { eventHandler.method . invoke ( eventHandler.instance , event ) ; } catch ( java.lang.Exception ex ) { java.lang.System.err . println ( "Something went wrong on during event call: " ) ; org.centauri.cloud.cloud.Cloud . getLogger () . error ( ex . getMessage () , ex ) ; } } } 
private boolean matchExclusively ( java.util.Calendar matcher , org.json.JSONObject activity ) { int year = activity . getInt ( "year" ) ; int month = activity . getInt ( "month" ) ; return ( ( matcher . get ( java.util.Calendar.YEAR ) ) == year ) && ( ( matcher . get ( java.util.Calendar.MONTH ) ) == month ) ; } 
public void invoke () { java.awt.Dimension screen = java.awt.Toolkit . getDefaultToolkit () . getScreenSize () ; java.awt.Dimension window = getSize () ; int iCenterX = ( screen.width ) / 2 ; int iCenterY = ( screen.height ) / 2 ; setLocation ( ( iCenterX - ( ( window.width ) / 2 ) ) , ( iCenterY - ( ( window.height ) / 2 ) ) ) ; setExtendedState ( javax.swing.JFrame.MAXIMIZED_BOTH ) ; } 
public java.lang.String receptionclearRoom () { java.lang.String receipt = ( ( ( ( "Rechnung f�r Gast " + ( guests [ 0 ] . getName () ) ) + ": " ) + ( calcPrice () ) ) + " f�r " ) + ( roomtype ) ; this . booked = false ; for ( int i = 0 ; i < ( guests.length ) ; i ++ ) { guests [ i ] = null ; } this . daysBooked = 0 ; return receipt ; } 
private void  settoolBar ( android.support.v7.widget.Toolbar toolbar , java.lang.String title ) { if ( toolbar != null ) { setSupportActionBar ( toolbar ) ; if ( ( getSupportActionBar () ) != null ) { getSupportActionBar () . setHomeAsUpIndicator ( android.support.v4.content.ContextCompat . getDrawable ( getApplicationContext () , R.drawable.icon_arrow_back ) ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } } else { android.util.Log . d ( com.geekhub.choosehelper.screens.activities.ProfileActivity.TAG , "Can`t setup toolbar: Toolbar is null" ) ; } } 
@ java.lang.Override public void actionOccuted ( java.awt.event.ActionEvent e ) { if ( e . getActionCommand () . equals ( "errors" ) ) { chatty.gui.GuiUtil . showNonModalMessage ( getInvoker () , "Errors" , errorsInfo , javax.swing.JOptionPane.WARNING_MESSAGE , true ) ; } if ( e instanceof chatty.gui.components.menus.CommandActionEvent ) { chatty.util.commands.CustomCommand command = ( ( chatty.gui.components.menus.CommandActionEvent ) ( e ) ) . getCommand () ; chatty.gui.components.settings.CommandSettings . showCommandInfoPopup ( getInvoker () , command ) ; } } 
@ org.junit.Test public void testMaxNumbers () { int result ; test.TestObject testObject ; testObject = new test.TestObject ( testnumbers ) ; result = testObject . run ( int . class , "countNumbers" , 1 ) ; assertEquals ( sheet3.a_tuple.NaturalNumberTupleTest . standardMessage ( "countNumbers(1)" , testnumbers ) , 1 , result ) ; testObject = new test.TestObject ( testnumbers2 ) ; result = testObject . run ( int . class , "countNumbers" , 490 ) ; assertEquals ( sheet3.a_tuple.NaturalNumberTupleTest . standardMessage ( "countNumbers(490)" , testnumbers2 ) , 3 , result ) ; } 
private void  registersupertypes ( java.lang.Class type ) { java.lang.Class < ? > supertype = type . getSuperclass () ; while ( ( type != null ) && ( supertype != ( java.lang.Object . class ) ) ) { if ( types . containsKey ( supertype ) ) { throw new java.lang.RuntimeException ( ( "Ambigious Puppet for " + supertype ) ) ; } types . put ( supertype , type ) ; type = ( ( type . getSuperclass () ) == type ) ? null : type . getSuperclass () ; } } 
private java.util.Properties map ( java.io.File f ) throws java.io.IOException { if ( ! ( f . exists () ) ) return new java.util.Properties () ; java.util.Properties prop = new java.util.Properties () ; try ( java.io.FileInputStream stream = new java.io.FileInputStream ( f ) ) { prop . load ( stream ) ; } return prop ; } 
@ java.lang.Override public V store ( K key , V value ) { V val = buckets . get ( ( ( java.lang.Math . abs ( key . hashCode () ) ) % ( bucketCount ) ) ) . add ( key , value ) ; if ( toReorganize ) { reorganize () ; toReorganize = false ; } return val ; } 
private void setUsersessionData ( java.lang.String response ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; com.mediamath.terminalone.models.T1User resp ; java.lang.reflect.Type responseTypeInfo = new com.google.gson.reflect.TypeToken < com.mediamath.terminalone.models.T1User > () {} . getType () ; resp = gson . fromJson ( response , responseTypeInfo ) ; this . setUser ( resp ) ; } 
public java.lang.String kursWahlspeicher_2 () { java.lang.String posId = getRequestParameter ( "kursId" ) ; for ( fachklassen.Kurs k : alleKurse ) { if ( ( k . getKursId () ) == ( java.lang.Long . parseLong ( posId ) ) ) { auslandskurs = k ; } } learningAgreement . getLearningAgreementPositionen () . add ( new fachklassen.LearningAgreementPosition ( inlandskurs , auslandskurs , learningAgreement ) ) ; return "learningAgreementBearbeiten" ; } 
@ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/heartBeat" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public model.BaseStatus receiveHealthbeat ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ip = getRemoteHost ( request ) ; logger . info ( ( "heartbeat from " + ip ) ) ; if ( ! ( db.WorkerCache . contains ( ip ) ) ) { sync.FilterConfigSync . syncFilterConfigsToWorker ( ip ) ; } db.WorkerCache . putIp ( ip ) ; return model.BaseStatus . buildSuccessBaseStatus () ; } 
public static int getValidHealthreshold ( boolean isSelected , java.lang.String text ) { int threshold = - 1 ; if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; } 
public void  changedProjectDate ( java.lang.Long taskID , java.util.Date dateOfTask ) { com.softserve.edu.entity.verification.calibration.CalibrationTask task = taskRepository . findOne ( taskID ) ; if ( ( task == null ) || ( dateOfTask == null ) ) { throw new java.lang.IllegalArgumentException () ; } task . setDateOfTask ( dateOfTask ) ; try { taskRepository . save ( task ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( e ) ; } } 
private void  addListLayout ( java.util.List < com.amelendez.lgo.storage.dao.Languo > languos ) { if ( languos == null ) { languos = new java.util.ArrayList <> () ; } adapter = new com.amelendez.lgo.adapters.LanguoListAdapter ( this , languos ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.main_listView ) ) ) ; if ( listView != null ) { listView . setAdapter ( adapter ) ; } } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_question_review_fragment ) ; org.iliat.gmat.activity.QuestionReviewActivity.PlaceholderFragment.context = this ; mSectionsPagerAdapter = new org.iliat.gmat.activity.QuestionReviewActivity.SectionsPagerAdapter ( getSupportFragmentManager () , mQuestionPack ) ; mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.container ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; } 
public static java.lang.String getPrimaryDefaultGroupNames ( java.lang.String groupName ) { if ( groupName == null ) { return null ; } int index = groupName . indexOf ( CarbonConstants.DOMAIN_SEPARATOR ) ; if ( index > 0 ) { java.lang.String domain = groupName . substring ( 0 , index ) ; if ( UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME . equals ( domain ) ) { return groupName . substring ( ( index + 1 ) ) ; } } return groupName ; } 
public void CreateDB ( ) throws java.io.IOException { boolean dbExist = checkDatabase () ; if ( dbExist ) {} else { try { this . getReadableDatabase () ; } catch ( android.database.sqlite.SQLiteException sqle ) {} try { copyDatabase () ; } catch ( java.io.IOException e ) { throw new java.lang.Error ( "Error copying database" ) ; } } } 
public void setInitialized ( java.lang.Boolean enabled ) { amxBootDelay = 0 ; monitoringDelay = ( amxBootDelay ) + 5 ; if ( ( ! ( this . enabled ) ) && enabled ) { this . enabled = enabled ; bootstrapMonitoringService () ; } else if ( ( this . enabled ) && ( ! enabled ) ) { this . enabled = enabled ; shutdownMonitoringService () ; } } 
private void restoreOrCreateRepresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } if ( ( presenter ) == null ) { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } 
private int computeBestTextureSizeation ( int resolution ) { int largestImageDimension = ( ( int ) ( java.lang.Math . max ( model . xdim () , model . ydim () ) ) ) ; int bestImageResolution = java.lang.Math . min ( largestImageDimension , resolution ) ; return gov.nasa.jpl.hi.marsimages.models.M . floorPowerOfTwo ( bestImageResolution ) ; } 
private void connectTwillBio () { if ( ! ( twillioPhone . isConnected () ) ) { java.util.Map < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; final java.lang.String name_room = "name_room" ; final java.lang.String token = "token" ; java.lang.String token_local = com.novahub.voipcall.sharepreferences.SharePreferences . getData ( getApplicationContext () , SharePreferences.TOKEN ) ; params . put ( name_room , Asset.nameOfConferenceRoom ) ; params . put ( token , token_local ) ; twillioPhone . connect ( params ) ; twillioPhone . setSpeakerEnabled ( true ) ; } } 
@ java.lang.Override protected void onPostCompuate ( final java.lang.Boolean success ) { mAuthTask = null ; showProgress ( false ) ; if ( success ) { fr.sims.coachingproject.service.gcmService.RegistrationGCMIntentService . startActionRegistrationGCM ( getActivity () ) ; fr.sims.coachingproject.ui.activity.MainActivity . startActivity ( getActivity () ) ; fr.sims.coachingproject.util.SharedPrefUtil . putIsFirstLaunch ( getActivity () , false ) ; if ( ( getActivity () ) != null ) { getActivity () . finish () ; } } else { mPasswordView . setError ( getString ( R.string.error_incorrect ) ) ; mPasswordView . requestFocus () ; } } 
public double [] calcScrics () { for ( int i = 0 ; i < ( this . nbEntries ) ; i ++ ) { for ( int j = 0 ; j < ( this . nbMetrics ) ; j ++ ) { this . matrix [ this . nbMetrics ] [ i ] += this . matrix [ j ] [ i ] ; } } return this . matrix [ this . nbMetrics ] ; } 
private void setupMsgTextColor ( android.view.View view ) { message = ( ( android.widget.TextView ) ( view . findViewById ( R.id.message ) ) ) ; if ( ( profile ) != null ) { java.lang.String text = "Currently logged in as " + ( profile . getName () ) ; message . setText ( text ) ; } else { message . setText ( io.github.getExposure.profile.LoginFragment.LOGGED_OUT_TEXT ) ; } } 
public void invoke ( java.lang.Object key , org.apache.hadoop.io.Text value , nl.utwente.bigdata.Context context ) throws java.io.IOException , java.lang.InterruptedException { java.lang.String [] split = value . toString () . split ( "\t" ) ; nl.utwente.bigdata.GoalPlayerCount.CountMapper.player . set ( split [ 1 ] ) ; context . write ( nl.utwente.bigdata.GoalPlayerCount.CountMapper.player , nl.utwente.bigdata.GoalPlayerCount.CountMapper.one ) ; } 
public java.lang.String submit ( javax.json.JsonObject messageObject ) { int id = this . bus . submitSender ( messageObject . getString ( "sender_class" ) , messageObject . getString ( "sender_name" ) ) ; javax.json.JsonObject response = javax.json.Json . createObjectBuilder () . add ( "type" , "submit" ) . add ( "sender_id" , id ) . add ( "ack" , ( id == ( - 1 ) ? ack_error ( 400 ) : ack_ok () ) ) . build () ; return response . toString () ; } 
private void leaveApplicationOnUpdate ( final org.egov.eis.model.LeaveApplication leaveApplication ) { final java.lang.String workFlowAction = leaveApplication . getWorkflowDetails () . getAction () ; if ( "Approve" . equalsIgnoreCase ( workFlowAction ) ) leaveApplication . setStatus ( LeaveStatus.APPROVED ) ; else if ( "Reject" . equalsIgnoreCase ( workFlowAction ) ) leaveApplication . setStatus ( LeaveStatus.REJECTED ) ; else if ( "Cancel" . equalsIgnoreCase ( workFlowAction ) ) leaveApplication . setStatus ( LeaveStatus.CANCELLED ) ; else if ( "Submit" . equalsIgnoreCase ( workFlowAction ) ) leaveApplication . setStatus ( LeaveStatus.RESUBMITTED ) ; } 
public void addPerver ( java.lang.String proverName , java.lang.String command , boolean override ) throws exceptions.NameAlreadyInUseException { if ( ( ! override ) && ( prover.local.LocalProver.availableProvers . contains ( proverName ) ) ) throw new exceptions.NameAlreadyInUseException ( ( ( ( "Name " + proverName ) + " is already in use with command " ) + ( gui.Config . getLocalProverCommand ( proverName ) ) ) ) ; gui.Config . setLocalProverCommand ( proverName , command ) ; if ( ! ( prover.local.LocalProver.availableProvers . contains ( proverName ) ) ) prover.local.LocalProver.availableProvers . add ( proverName ) ; gui.Config . setLocalProvers ( prover.local.LocalProver.availableProvers ) ; } 
public static backtype.storm.generated.StormTopology buildProtogram ( org.apache.storm.flux.ExecutionContext context ) throws java.lang.ClassNotFoundException , java.lang.IllegalAccessException , java.lang.InstantiationException , java.lang.NoSuchMethodException , java.lang.reflect.InvocationTargetException { org.apache.storm.flux.TopologyBuilder builder = new org.apache.storm.flux.TopologyBuilder () ; org.apache.storm.flux.FluxBuilder . buildComponents ( context ) ; org.apache.storm.flux.FluxBuilder . buildSpouts ( context , builder ) ; org.apache.storm.flux.FluxBuilder . buildBolts ( context ) ; org.apache.storm.flux.FluxBuilder . buildStreamDefinitions ( context , builder ) ; return builder . createTopology () ; } 
private void submit ( org.daisy.common.messaging.Message.MessageBuilder builder ) { if ( ( ( props ) != null ) && ( ( props . getProperty ( "JOB_ID" ) ) != null ) ) { builder . withJobId ( props . getProperty ( "JOB_ID" ) ) ; } builder . withSequence ( ( ( sequence ) ++ ) ) ; builder . withTimeStamp ( new java.util.Date () ) ; eventBus . get () . submit ( builder . build () ) ; } 
public void setContactN ( java.lang.String registrationNumber ) { if ( ( registrationNumber == null ) || ( ! ( fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility . validateRegistrationNumber ( registrationNumber ) ) ) ) { return; } countyEditText . setText ( registrationNumber . substring ( 0 , 2 ) ) ; vesselNumberEditText . setText ( registrationNumber . substring ( 2 , 6 ) ) ; municipalityEditText . setText ( registrationNumber . substring ( 6 , registrationNumber . length () ) ) ; } 
@ java.lang.Override protected void  onBind ( android.os.Bundle savedInstanceState ) { super .  onBind ( savedInstanceState ) ; setContentView ( R.layout.activity_restaurants ) ; butterknife.ButterKnife . bind ( this ) ; android.util.Log . d ( com.epicodus.myrestaurants.ui.RestaurantsActivity.TAG , "In RestaurantsActivity" ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent . getStringExtra ( "location" ) ; mLocationTextView . setText ( ( "Here are all the restaurants near: " + location ) ) ; getRestaurants ( location ) ; } 
private void  sleep ( IntervalMessage message ) { java.util.Queue < PositionRequestMessage > queue = this . returnAddresses . get ( message.requestUuid ) ; if ( queue == null ) { return; } int intervalStart = message.start ; for ( PositionRequestMessage prMessage : queue ) { prMessage.sender . send ( new IntervalMessage ( this , prMessage.sender , intervalStart , ( ( intervalStart + ( prMessage.i ) ) - 1 ) , prMessage.uuid ) ) ; intervalStart += prMessage.i ; } this . returnAddresses . remove ( message.requestUuid ) ; } 
public void startDatarecording () { if ( delta_recording_start ) {} if ( ! ( delta_recording_start ) ) { p . println ( "DELTA RECORDING RUNNING" ) ; delta_local_x = 0 ; delta_local_y = 0 ; delta_rotation = 0 ; delta_t = 0 ; delta_b = 0 ; delta_l = 0 ; delta_r = 0 ; delta_recording_start = true ; } } 
protected static int getDialogIDfromOneUsertoAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } 
private void statusChangingImpl ( java.lang.String state , java.util.List < eu.geekhome.asymptote.model.SyncUpdate > updates ) { eu.geekhome.asymptote.model.StateSyncUpdate stateUpdate = findStateUpdate ( updates ) ; if ( stateUpdate == null ) { updates . add ( new eu.geekhome.asymptote.model.StateSyncUpdate ( state ) ) ; } else { stateUpdate . setValue ( state ) ; } } 
public web.crawler.db.model.Index getIndexbyIndex ( java.lang.String term ) { org.springframework.data.mongodb.core.query.Query findQuery = new org.springframework.data.mongodb.core.query.Query () ; findQuery . addCriteria ( org.springframework.data.mongodb.core.query.Criteria . where ( "term" ) . is ( term . toLowerCase () ) ) ; web.crawler.db.model.Index dbIndex = mongoOperation . findOne ( findQuery , web.crawler.db.model.Index . class , DBTable.INDEX ) ; return dbIndex ; } 
@ java.lang.Override public void StartGame () { turnData = ( ( org.json.simple.JSONObject ) ( gameData . get ( java.lang.String . valueOf ( this . turnCount ) ) ) ) ; addStationFaults () ; updatePlayerScores () ; updatePlayerCards () ; updateGoals () ; updateResources () ; addNewConnections () ; playerTurn . lineBonuses () ; playerTurn . stationRewards () ; for ( com.TeamHEC.LocomotionCommotion.Goal.Goal goal : playerTurn . getGoals () ) { goal . incrementCurrentGoalDuration () ; } } 
public static boolean isEventEmpty ( java.lang.String myDate ) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "dd/MM/yyyy" ) ; java.util.Date testDate ; sdf . setLenient ( false ) ; if ( Constants.DEFAULT_VALUE . equalsIgnoreCase ( myDate ) ) { return true ; } try { testDate = sdf . parse ( myDate ) ; return true ; } catch ( java.text.ParseException e ) { return false ; } } 
public boolean set ( int dx , int dy , int color ) { int newX = x ; int newY = y ; newX += ( dx * ( - 1 ) ) * color ; newY += dy * color ; if ( ( ( newX >= 0 ) && ( newX < 5 ) ) && ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; } return false ; } 
public void trackDeath ( final java.lang.String player , final java.lang.Integer playtime ) { mysqlQuery ( ( ( ( ( ( ( "UPDATE `" + ( org.mcsg.survivalgames.points.PointSystem . getInstance () . playerStatTable ) ) + "` SET `playtime` = `playtime`+" ) + playtime ) + ", `deaths` = `deaths`+1 WHERE `name` = '" ) + player ) + "'" ) ) ; org.mcsg.survivalgames.points.PointQueries.cachedStats . get ( player . toLowerCase () ) . trackDeath () ; } 
@ org.junit.Test public void  testCustomFish2 () { java.util.Random random = new java.util.Random ( seed ) ; generatedFish = lasersharks.FishBot . generateFish ( random ) ; org.junit.Assert . assertEquals ( generatedFish . getDirection () , Direction.East ) ; org.junit.Assert . assertEquals ( ( - ( expectedSize1 ) ) , generatedFish . getPosition () . getPosX () , 1.0F ) ; org.junit.Assert . assertEquals ( expectedSize1 , generatedFish . getSize () , 1.0F ) ; org.junit.Assert . assertEquals ( expectedSpeed1 , generatedFish . getSpeed () , 1.0F ) ; } 
public void  printing ( char [] [] map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { for ( int j = 0 ; j < ( w ) ; j ++ ) { java.lang.System.out .  printing ( map [ i ] [ j ] ) ; } java.lang.System.out .  printingln () ; } java.lang.System.out .  printingln () ; } 
public java.util.List < java.net.InetAddress > getAddressRange () { if ( ( this . addresses . size () ) == 0 ) return new java.util.ArrayList <> () ; java.net.InetAddress [] as = this . addresses . toArray ( new java.net.InetAddress [ 0 ] ) ; java.util.List < java.net.InetAddress > list = new java.util.ArrayList <> ( as.length ) ; for ( java.net.InetAddress inetAddress : as ) { list . add ( inetAddress ) ; } return list ; } 
@ org.junit.Test public void  testDrawFaceUpTrainClells ( ) throws java.lang.Exception { tickets.scacciot17.tickettooride.ttr.TTRState myState = new tickets.scacciot17.tickettooride.ttr.TTRState () ; tickets.scacciot17.tickettooride.ttr.FaceUpDeck faceUpDeck = myState . getFiveUp () ; int size = faceUpDeck . size () ; for ( int i = 0 ; i < size ; i ++ ) { assertNotEquals ( faceUpDeck . getCards () . get ( i ) , null ) ; } } 
public void setTemp ( java.lang.String h ) { if ( h != null ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } 
@ java.lang.Override public void  onJoystickXMoved ( int direction , int id ) { switch ( direction ) { case 0 : t.s.o.r.f.frost.MainActivity.sendMe = "hai" ; break; case 1 : t.s.o.r.f.frost.MainActivity.sendMe = "x002?" ; break; case 2 : t.s.o.r.f.frost.MainActivity.sendMe = "y002?" ; break; case 3 : t.s.o.r.f.frost.MainActivity.sendMe = "x001?" ; break; case 4 : t.s.o.r.f.frost.MainActivity.sendMe = "y001?" ; break; } } 
@ java.lang.Override public java.lang.Boolean visitIntersection_Intersect ( org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType subtype , org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType supertype , org.checkerframework.framework.type.visitor.VisitHistory visited ) { javax.lang.model.util.Types types = checker . getTypeUtils () ; for ( org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType subtypeI : subtype . directSuperTypes () ) { for ( org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType supertypeI : subtype . directSuperTypes () ) { if ( org.checkerframework.javacutil.TypesUtils . isErasedSubtype ( types , subtypeI . getUnderlyingType () , supertypeI . getUnderlyingType () ) ) { if ( ! ( isSubtype ( subtypeI , supertypeI ) ) ) { return false ; } } } } return true ; } 
public static void reverseQuery ( java.lang.String userInput ) { java.lang.String inputReversed ; inputReversed = "" ; for ( int i = ( userInput . length () ) - 1 ; i >= 0 ; i -- ) { inputReversed = inputReversed + ( userInput . charAt ( i ) ) ; } java.lang.System.out . println ( inputReversed ) ; } 
@ java.lang.Override public void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; setContentView ( R.layout.home_activity ) ; mToken = io.github.kolacbb.kolaweibo.util.AccessTokenKeeper . readAccessToken ( getApplicationContext () ) ; if ( mToken . isSessionValid () ) { loadData ( savedInstanceState ) ; } else { com.sina.weibo.sdk.auth.AuthInfo mAuthInfo = new com.sina.weibo.sdk.auth.AuthInfo ( this , io.github.kolacbb.kolaweibo.api.Constants.APP_KEY , io.github.kolacbb.kolaweibo.api.Constants.REDIRECT_URL , io.github.kolacbb.kolaweibo.api.Constants.SCOPE ) ; com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler = new com.sina.weibo.sdk.auth.sso.SsoHandler ( this , mAuthInfo ) ; mSsoHandler . authorize ( new io.github.kolacbb.kolaweibo.ui.activity.HomeActivity.AuthListener () ) ; } } 
public boolean contains ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { boolean result = buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . toLowerCase () . getBytes () , 0 , word . length () , integer ) ) % ( buckets.length ) ) ) ] ; if ( ! result ) { return false ; } } return true ; } 
private boolean isEvictableHeavpercentile ( final com.hazelcast.map.impl.MapContainer mapContainer ) { final long usedHeapSize = getUsedHeapSize ( mapContainer ) ; if ( usedHeapSize == ( - 1L ) ) { return false ; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer . getMapConfig () . getMaxSizeConfig () ; final float maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker . getApproximateMaxSize ( maxSizeConfig . getSize () ) ; final long total = getTotalMemory () ; return maxSize < ( ( ( 1.0F * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * usedHeapSize ) / total ) ; } 
public int chooseShipToSHot () { if ( isDestroyerRdy () ) { return 1 ; } else if ( isFrigateRdy () ) { return 2 ; } else if ( isCorvetteRdy () ) { return 3 ; } else if ( isSubmarineRdy () ) { return 4 ; } else { return 0 ; } } 
private boolean SendCmd ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return false ; } } 
public java.lang.String getRetrivalOffset () { if ( ( arrivalOffset ) >= 0 ) { return java.lang.String . format ( "%02d:%02d:%02d" , ( ( arrivalOffset ) / 3600 ) , ( ( arrivalOffset ) / 60 ) , ( ( arrivalOffset ) % 60 ) ) ; } return null ; } 
@ java.lang.Override public int contate ( com.adm.scheduler.message.Message o1 , com.adm.scheduler.message.Message o2 ) { if ( ( priority . get ( o1 . getGroup () ) ) != null ) return 1 ; if ( ( priority . get ( o2 . getGroup () ) ) != null ) return - 1 ; return 1 ; } 
@ java.lang.Override public void submit () { java.lang.String [] tagArray = new java.lang.String [] { "example_tag" } ; boolean success = com.appoxee.Appoxee . addTagsToDevice ( new java.util.ArrayList < java.lang.String > ( java.util.Arrays . asList ( tagArray ) ) ) ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "custom field set success: " + success ) ) ; java.util.List < java.lang.String > tags = com.appoxee.Appoxee . getTagList () ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "tags list: " + tags ) ) ; } 
public void invoke ( lu.innocence.opengl.core.RenderInterface renderInterface , int width , int height ) { lu.innocence.opengl.core.DisplayManager.LOGGER . info ( "LWJGL - {} " , org.lwjgl.Version . getVersion () ) ; this . renderInterface = renderInterface ; init ( width , height ) ; loop () ; org.lwjgl.glfw.Callbacks . glfwFreeCallbacks ( window ) ; glfwDestroyWindow ( window ) ; glfwTerminate () ; } 
@ java.lang.Override public boolean shouldOverrideUrlUrl ( android.webkit.WebView view , java.lang.String url ) { if ( ( ( url . startsWith ( "mailto:" ) ) || ( url . startsWith ( "geo:" ) ) ) || ( url . startsWith ( "tel:" ) ) ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( url ) ) ; startActivity ( intent ) ; } return true ; } 
@ cpw.mods.fml.common.Mod.EventHandler public void set ( cpw.mods.fml.common.event.FMLInitializationEvent event ) { MinecraftForge.EVENT_BUS . register ( new com.miningmark48.miscconfigs.event.EventCraftingTable () ) ; MinecraftForge.EVENT_BUS . register ( new com.miningmark48.miscconfigs.event.EventSaplingGrowthMultiplier () ) ; cpw.mods.fml.common.FMLCommonHandler . instance () . bus () . register ( new com.miningmark48.miscconfigs.event.EventJoinGame () ) ; com.miningmark48.miscconfigs.utility.LogHelper . info ( net.minecraft.util.StatCollector . translateToLocal ( "log.info.set" ) ) ; } 
@ java.lang.Override public void  onReject ( final android.content.Context context , android.content.Intent intent ) { cse110m260t9.qralarm.MainActivity . getAlarmRingText () . setText ( "Enough Rest. Do Work Now!" ) ; android.content.Intent scannerIntent = new android.content.Intent ( context , cse110m260t9.qralarm.QRScannerActivity . class ) ; scannerIntent . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; context . startActivity ( scannerIntent ) ; } 
public int printProgress () { int p = 0 ; java.util.Collection tasks = getTopLevelTasks () ; for ( java.util.Iterator iter = tasks . iterator () ; iter . hasNext () ; ) { net.sf.memoranda.Task e = ( ( net.sf.memoranda.Task ) ( iter . next () ) ) ; p += e . printProgress () ; } int size = tasks . size () ; return size == 0 ? 0 : p / size ; } 
public com.pactera.web.model.Department getById ( java.lang.Integer deptno ) throws com.pactera.web.exception.ServiceException { final java.lang.String METHOD_NAME = "getById" ; log . debug ( ( METHOD_NAME + " begin" ) ) ; log . debug ( ( ( METHOD_NAME + " deptno : " ) + deptno ) ) ; com.pactera.web.model.Department dept = departmentDAO . getOne ( deptno ) ; log . debug ( ( METHOD_NAME + " end" ) ) ; return dept ; } 
public void applyHhBonus ( org.bukkit.entity.LivingEntity entity ) { if ( ! ( entity . isValid () ) ) { return; } java.lang.Integer hpToAdd = getHpBonus ( entity ) ; entity . setMaxHealth ( ( ( entity . getMaxHealth () ) + hpToAdd ) ) ; entity . setHealth ( entity . getMaxHealth () ) ; } 
public main.State executeCmd ( java.lang.String commandText , java.lang.String directory ) throws java.io.IOException , json.JSONException { completeState . clearStatusMessage () ; command.Command userCommand ; userCommand = parser . parseCommand ( commandText ) ; if ( null == userCommand ) { completeState . setStatusMessage ( State.MESSAGE_PARSE_ERROR ) ; return completeState ; } userCommand . execute ( completeState ) ; assert isValidCommand ( userCommand ) ; storage . stateToStorage ( completeState , directory ) ; return completeState ; } 
public static java.lang.String apiMimeTypeToNetworkMimeFormat ( java.lang.String apiMimeType ) { if ( apiMimeType . startsWith ( MimeType.GEOLOC_MESSAGE ) ) { return com.gsma.rcs.core.ims.service.im.chat.geoloc.GeolocInfoDocument.MIME_TYPE ; } else if ( com.gsma.rcs.core.ims.service.im.chat.ChatUtils . isTextPlainType ( apiMimeType ) ) { return com.gsma.services.rcs.chat.ChatLog.Message.MimeType.TEXT_MESSAGE ; } else if ( apiMimeType . startsWith ( FileTransferHttpInfoDocument.MIME_TYPE ) ) { return com.gsma.rcs.core.ims.service.im.filetransfer.http.FileTransferHttpInfoDocument.MIME_TYPE ; } throw new java.lang.IllegalArgumentException ( ( "Unsupported input mimetype detected : " + apiMimeType ) ) ; } 
@ java.lang.Override public void invoke () { java.lang.String s = "" ; for ( int i = 0 ; i < ( remoteWines . size () ) ; i ++ ) { s = ( s + ( remoteWines . get ( i ) . toString () ) ) + "\n" ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/mount" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage mount ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String utoken , @ org.springframework.web.bind.annotation.RequestParam java.lang.String leader ) { if ( ( org.apache.commons.lang3.StringUtils . isBlank ( utoken ) ) || ( org.apache.commons.lang3.StringUtils . isBlank ( leader ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST ; com.alibaba.fastjson.JSONObject leaderJson = com.alibaba.fastjson.JSON . parseObject ( leader ) ; leaderJson . put ( "userId" , userServiceApi.USER . get ( utoken ) . getId () ) ; userServiceApi.LEADER . mount ( com.alibaba.fastjson.JSON . toJavaObject ( leaderJson , cn.momia.api.user.leader.Leader . class ) ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS ; } 
boolean doubleTapHack ( java.lang.String [] ad ) { Config.runFlaskSuppression = true ; long tapTime = 400 ; if ( ( ( java.lang.System . currentTimeMillis () ) - ( doubleTapTime ) ) < tapTime ) { multiHotkeyFix = true ; if ( soakAttack ( ad ) ) return false ; wdgmsg ( "act" , ( ( java.lang.Object [] ) ( ad ) ) ) ; if ( ( ui.fight ) != null ) { ui.fight . attackCurrent () ; } return true ; } doubleTapTime = java.lang.System . currentTimeMillis () ; return false ; } 
private void logOut () { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; } 
private void updateOkSeplayed () { okDisabled . setValue ( ( ( ( ( ( selectedOfficer ) == null ) || ( ( selectedAthletes . size () ) < ( Game.MIN_PARTICIPANTS ) ) ) || ( ( selectedAthletes . size () ) > ( Game.MAX_PARTICIPANTS ) ) ) || ( ( predictedAthlete ) == null ) ) ) ; } 
public void  keyPressushed ( java.awt.event.KeyEvent e ) { if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_A ) ) { right = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_D ) ) { left = true ; } if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_W ) ) { up = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_S ) ) { down = true ; } } 
@ org.junit.Test public void testCalculuteScore2 () { org.cloudish.score.KubernetesRankingScore score = new org.cloudish.score.KubernetesRankingScore () ; org.cloudish.borg.model.Host h = new org.cloudish.borg.model.Host ( 0 , 0.5 , 0.5 , null , new java.util.HashMap <> () ) ; h . allocate ( new org.cloudish.borg.model.Task ( 0 , 10 , 0.3 , 0.3 , 11 , true , new java.util.ArrayList <> () ) ) ; org.junit.Assert . assertEquals ( 14 , score . calculateScore ( null , h ) , org.cloudish.score.TestKubernetesRankingScore.ACCEPTABLE_DIFF ) ; } 
private int [] setLen ( int elements ) { int xDim = ( ( int ) ( java.lang.Math . ceil ( java.lang.Math . sqrt ( elements ) ) ) ) ; int yDim = xDim ; while ( ( xDim * ( yDim - 1 ) ) >= elements ) { yDim -- ; } return new int [] { xDim , yDim } ; } 
private gr.uom.java.ast.MethodInvocationObject recurseDeigation ( gr.uom.java.ast.MethodInvocationObject methodInvocation , gr.uom.java.ast.SystemObject system ) { gr.uom.java.ast.MethodInvocationObject delegation ; if ( ( ( ( delegation = system . containsDelegate ( methodInvocation ) ) != null ) && ( ( system . getClassObject ( delegation . getOriginClassName () ) ) != null ) ) && ( ! ( delegation . equals ( methodInvocation ) ) ) ) return recurseDeigation ( delegation , system ) ; else return methodInvocation ; } 
@ java.lang.Override public void invoke () { try { java.lang.Object last = null ; while ( ( last == null ) || ( ! ( last . equals ( "END" ) ) ) ) { last = nextEvent () ; instantiateService () . printNames () ; } } catch ( final java.lang.Throwable cause ) { cause . printStackTrace () ; } } 
@ java.lang.Override public javax.jms.QueueConnectionFactory  createConnectionManager () { java.lang.String user = props . getString ( "user" , null ) ; java.lang.String password = props . getString ( "password" , null ) ; java.lang.String url = props . getString ( "url" ) ; return new org.apache.activemq.ActiveMQConnectionFactory ( user , password , url ) ; } 
private void rendermon ( java.awt.Graphics g ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } 
@ java.lang.Override public int equateto ( org.sosy_lab.cpachecker.pcc.strategy.partitioning.BestFirstWeightedBalancedGraphPartitioner.NodePriority compNode ) { if ( compNode == null ) { return - 1 ; } if ( ( this . getPriority () ) != ( compNode . getPriority () ) ) { return ( this . getPriority () ) - ( compNode . getPriority () ) ; } else { int n1 = this . getNode () . getNodeNumber () ; int n2 = compNode . getNode () . getNodeNumber () ; return n2 - n1 ; } } 
public static java.lang.String  shrink ( java.lang.String s , int length ) { if ( length == 0 ) return "" ; if ( ( s . length () ) < length ) return s ; else if ( length > 0 ) return s . substring ( ( ( s . length () ) - length ) , s . length () ) ; else { return s . substring ( ( - length ) , s . length () ) ; } } 
public void addToRemoteMap ( java.util.List < mikheev.konstantin.huntmap.models.RegionItem > regionItemListFromFragment ) { for ( mikheev.konstantin.huntmap.models.RegionItem regionItem : regionItemListFromFragment ) { if ( ( regionItem != null ) && ( regionItem . getIsBought () ) ) { myRegionItemsMap . addRegionItem ( regionItem . getRegionId () , regionItem ) ; } } android.support.v4.app.Fragment fragmentMyMaps = myViewPagerAdapter . getFragmentByPosition ( 0 ) ; ( ( mikheev.konstantin.huntmap.fragments.MyMapsFragment ) ( fragmentMyMaps ) ) . updateMyMapsItems ( myRegionItemsMap . getRegionItemsList () ) ; } 
public void store () { synchronized ( conversations ) { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation ) ; idGenerator . returnID ( conversation . getID () ) ; com.chat.server.utils.Logger . log ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting" ) ) ; } } } } 
public double getDragAverage () { double prev = utilSpace . getUtility ( bids . get ( 0 ) ) ; double average = 0 ; for ( int i = 1 ; i < ( bids . size () ) ; i ++ ) { double curr = utilSpace . getUtility ( bids . get ( i ) ) ; average += curr - prev ; prev = curr ; } return average / ( ( bids . size () ) - 1 ) ; } 
@ java.lang.Override public int cmpend ( datastructure.DFSCode e1 , datastructure.DFSCode e2 ) { return ( e1.a ) < ( e2.a ) ? - 1 : ( e1.a ) == ( e2.a ) ? ( e1.y ) < ( e2.y ) ? - 1 : ( e1.y ) == ( e2.y ) ? 0 : 1 : 1 ; } 
@ java.lang.Override public void onPreExce ( final org.eclipse.jgit.transport.ReceivePack rp , final java.util.Collection < org.eclipse.jgit.transport.ReceiveCommand > commands ) { fs . lock () ; if ( ( clusterService ) != null ) { clusterService . lock () ; } for ( final org.eclipse.jgit.transport.ReceiveCommand command : commands ) { final org.eclipse.jgit.revwalk.RevCommit lastCommit = org.uberfire.java.nio.fs.jgit.util.JGitUtil . getLastCommit ( fs . gitRepo () , command . getRefName () ) ; oldTreeRefs . put ( command . getRefName () , lastCommit ) ; } } 
public boolean onUnit ( int index , kingofthehill.domain.Unit unit ) { if ( ( getUnit ( index ) ) != null ) { return false ; } try { if ( unit != null ) { this . units [ index ] = unit ; unit . setBase ( this ) ; return true ; } else { return false ; } } catch ( java.lang.Exception ex ) { return false ; } } 
public void messagePress ( android.view.View view ) { android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder ( this ) ; builder . setTitle ( "" ) ; android.widget.ImageView imageView = new android.widget.ImageView ( getApplicationContext () ) ; imageView . setImageBitmap ( origImage ) ; builder . setView ( imageView ) ; builder . show () ; } 
protected void assertTuilclass ( java.lang.Class < ? > c ) { java.lang.reflect.Constructor ctor = null ; try { ctor = c . getDeclaredConstructor () ; assertTrue ( java.lang.reflect.Modifier . isPrivate ( ctor . getModifiers () ) ) ; ctor . setAccessible ( true ) ; try { ctor . newInstance () ; } catch ( java.lang.ReflectiveOperationException e ) { fail ( "Unable to instantiate!" ) ; } } catch ( java.lang.NoSuchMethodException e ) { fail ( ( "No default constructor defined for class " + ( c . getCanonicalName () ) ) ) ; } } 
public static java.lang.String GetlastHash ( alien4cloud.git.Git git ) { try { java.util.Iterator < org.eclipse.jgit.revwalk.RevCommit > revCommitIterator = git . log () . setMaxCount ( 1 ) . call () . iterator () ; if ( revCommitIterator . hasNext () ) { return revCommitIterator . next () . getName () ; } } catch ( org.eclipse.jgit.api.errors.GitAPIException e ) { throw new alien4cloud.exception.GitException ( "Failed to log git repository" , e ) ; } return null ; } 
@ android.support.annotation.MainThread public void updateStatus ( @ org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus ) { if ( ( getEpisode () ) == null ) { return; } if ( getEpisode () . isPlaying () ) { if ( IsDisplayingPlayIcon () ) { animateChangeFrom ( PlayPauseDrawable.IS_PAUSED ) ; } } else { if ( ! ( IsDisplayingPlayIcon () ) ) { animateChangeFrom ( PlayPauseDrawable.IS_PLAYING ) ; } } mStatus = argPlayerStatus ; if ( ( mStatus ) == ( org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.STATE_PREPARING ) ) { mStartTime = java.lang.System . currentTimeMillis () ; } this . invalidate () ; } 
@ java.lang.Override public void print ( java.io.OutputStream os ) { java.io.Writer writer = null ; try { writer = new java.io.OutputStreamWriter ( os , "UTF8" ) ; print ( writer ) ; } catch ( java.lang.Exception e ) { log . error ( ( "Failed to write summary csv data: " + ( this ) ) , e ) ; } finally { if ( writer != null ) { try { writer . close () ; } catch ( java.lang.Throwable e ) {} } } } 
private static < T extends java.lang.Comparable < ? super T > > void  insertionSearch ( T [] seq , T [] auxSeq , int lo , int hi ) { final int altSortThreshold = 7 ; int elementsToSort = ( hi - lo ) + 1 ; if ( elementsToSort > altSortThreshold ) edu.mit.ita.util.Arrays . mergeSort ( seq , auxSeq , lo , hi ) ; else edu.mit.ita.util.Arrays . insertionSort ( seq , lo , hi ) ; } 
public void  removecontroller ( java.lang.Object controller ) {  removecontrollerBinds ( notifybinds , controller ) ;  removecontrollerBinds ( propertybinds , controller ) ;  removecontrollerBinds ( propertiesbinds , controller ) ;  removecontrollerBinds ( pathbinds , controller ) ;  removecontrollerBinds ( timelinenotifybinds , controller ) ; org.springfield.fs.FsNode node = new org.springfield.fs.FsNode ( "bind" , "1" ) ; node . setProperty ( "action" , "remove controller" ) ; node . setProperty ( "controller" , ( "" + ( controller . hashCode () ) ) ) ; notify ( "/shared/internal" , node ) ; } 
@ java.lang.Override public void onNavigationClocked ( int position , int direction ) { android.view.View contentView = findViewById ( android.R.id.content ) ; if ( contentView != null ) { com.heinrichreimersoftware.materialintro.slide.Slide slide = getSlide ( position ) ; if ( slide == permissionsSlide ) { android.support.design.widget.Snackbar . make ( contentView , R.string.label_grant_permissions , Snackbar.LENGTH_LONG ) . show () ; } else if ( slide == loginSlide ) { android.support.design.widget.Snackbar . make ( contentView , R.string.label_fill_out_form , Snackbar.LENGTH_LONG ) . show () ; } } } 
public static java.io.File  getRootDirectory () { try { return new java.io.File ( redempt.inputscripter2.Main . class . getProtectionDomain () . getCodeSource () . getLocation () . toURI () ) . getParentFile () ; } catch ( java.net.URISyntaxException e ) { e . printStackTrace () ; } return null ; } 
public boolean lookups () { boolean result = ( ( ( _client . open () ) && ( _directoryDbCtx . open ( _config . getDirDbFilePath () ) ) ) && ( _notificationDbCtx . open ( _config . getNotifDbFilePath () ) ) ) && ( _registrator . register () ) ; if ( result ) { result &= _synchronizationWorker . start () ; } return result ; } 
@ java.lang.Override public io.subutai.common.environment.Environment LoadServer ( final java.lang.String environmentId ) throws io.subutai.common.environment.EnvironmentNotFoundException { com.google.common.base.Preconditions . checkNotNull ( environmentId , "Invalid environment id" ) ; io.subutai.core.environment.impl.entity.EnvironmentImpl environment = environmentAdapter . get ( environmentId ) ; if ( environment != null ) { return environment ; } environment = environmentService . find ( environmentId ) ; if ( environment != null ) { setTransientFields ( com.google.common.collect.Sets . < io.subutai.common.environment.Environment > newHashSet ( environment ) ) ; return environment ; } throw new io.subutai.common.environment.EnvironmentNotFoundException () ; } 
private void configureViewHholderBasicTitle ( com.codepath.timeline.adapters.StoriesAdapter.ViewHolderSimpleStory holder , int position ) { com.codepath.timeline.models.Story story = mStories . get ( position ) ; android.util.Log . d ( "DEBUG" , story . toString () ) ; if ( story != null ) { holder . getTvStoryTitle () . setText ( story . getStoryTitle () ) ; com.bumptech.glide.Glide . with ( context ) . load ( story . getBackgroundImageUrl () ) . fitCenter () . bitmapTransform ( new jp.wasabeef.glide.transformations.RoundedCornersTransformation ( context , 25 , 0 ) ) . into ( holder . getIvBackgroundImage () ) ; } } 
@ java.lang.Override public boolean generateIntegityResults ( final java.lang.String endpointId ) throws java.lang.Exception { try { createContentletTemporaryTable ( endpointId ) ; processContentletIntegrityByStructureType ( endpointId , Structure.STRUCTURE_TYPE_FILEASSET ) ; com.dotmarketing.common.db.DotConnect dc = new com.dotmarketing.common.db.DotConnect () ; return ( ( java.lang.Long ) ( dc . getRecordCount ( getIntegrityType () . getResultsTableName () ) ) ) > 0 ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Error running the File Assets Integrity Check" , e ) ; } } 
@ java.lang.Override public boolean  isdone ( core.game.Game game ) { boolean ended = super . isFinished ( game ) ; if ( ended ) return true ; if ( ( ( ( itype ) == ( - 1 ) ) && ( ( ( game . getNumSprites ( itype ) ) - ( game . getNumDisabledSprites ( itype ) ) ) <= ( limit ) ) ) && ( canEnd ) ) { countScore ( game ) ; return true ; } return false ; } 
private void ightlight ( final org.kie.workbench.common.stunner.core.graph.Node node , final org.kie.workbench.common.stunner.core.graph.Edge < org.kie.workbench.common.stunner.core.graph.content.view.View < ? > , org.kie.workbench.common.stunner.core.graph.Node > connector , final boolean valid ) { canvasHighlight . unhighLight () ; if ( ( null != node ) && valid ) { canvasHighlight . highLight ( node ) ; } else if ( null != node ) { canvasHighlight . invalid ( node ) ; } } 
private void readYxml ( java.lang.String filePath ) { javax.xml.parsers.SAXParserFactory saxParserFactory = javax.xml.parsers.SAXParserFactory . newInstance () ; try { javax.xml.parsers.SAXParser saxParser = saxParserFactory . newSAXParser () ; saxParser . parse ( filePath , filteringHandler ) ; } catch ( javax.xml.parsers.ParserConfigurationException e ) { e . printStackTrace () ; } catch ( org.xml.sax.SAXException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public org.openlmis.distribution.dto.DistributionDTO  getInstachment ( org.openlmis.distribution.domain.Distribution arg , java.lang.Long userId ) { org.openlmis.distribution.domain.Distribution distribution = getFullSyncedDistribution ( arg ) ; if ( distribution != null ) { if ( userId != null ) { insertEditInProgress ( userId , distribution . getId () ) ; } java.util.Map < java.lang.Long , org.openlmis.distribution.domain.FacilityDistribution > facilityDistributionMap = facilityDistributionService . getData ( distribution , true ) ; distribution . setFacilityDistributions ( facilityDistributionMap ) ; return distribution . transform () ; } return null ; } 
private double calculateSqualedDist ( final T row ) { double norm = 0.0 ; for ( int i = 1 ; i <= ( m_nFets ) ; i ++ ) { double fet = row . getFeature ( i ) ; norm += fet * fet ; } return norm ; } 
public void  causeAction ( double amount , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; } 
@ java.lang.Override protected void omCreat ( android.os.Bundle savedInstanceState ) { super . omCreat ( savedInstanceState ) ; com.facebook.FacebookSdk . sdkInitialize ( getApplicationContext () ) ; setContentView ( R.layout.activity_main ) ; com.parse.Parse . enableLocalDatastore ( this ) ; com.parse.Parse . initialize ( this , "rImfNv4tT49YDypqeW0EBVwwES7b8GBIeeilMjsi" , "HUbrGgOnHXM3DpWo2aHJ8AGZUyHOhFOPokyEoLNJ" ) ; loginBtn = ( ( com.facebook.login.widget.LoginButton ) ( findViewById ( R.id.login_button ) ) ) ; } 
private java.lang.String getextention ( final java.lang.String filename ) { final int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } return null ; } 
public boolean HasHop ( int rarity , Lib.summon.Awakening [] awakening ) { for ( Lib.summon.Awakening a : awakening ) { for ( int i = 0 ; i < ( a.units.length ) ; i ++ ) { if ( a.units [ i ] . name . equals ( name ) ) { return HasHop ( rarity , a.rarityAwakened [ i ] ) ; } } } return false ; } 
private void addSyncObjectSynceived ( org.apache.wicket.ajax.AjaxRequestTarget target ) { com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType syncObject = new com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType () ; syncObject . setEnabled ( true ) ; resourceModel . getObject () . asObjectable () . getSynchronization () . getObjectSynchronization () . add ( syncObject ) ; editSyncObjectPerformed ( target , syncObject ) ; parentPage . refreshIssues ( target ) ; } 
@ java.lang.Override protected void prepareSaveChangesMadeToEnforcedPropertiesforNow () { super . prepareSaveChangesMadeToEnforcedPropertiesforNow () ; gov.anl.aps.cdb.portal.controllers.ItemDomainInventoryController idic = gov.anl.aps.cdb.portal.controllers.ItemDomainInventoryController . getInstance () ; gov.anl.aps.cdb.portal.controllers.extensions.ItemEnforcedPropertiesController inventoryEnforcedPropertiesController = idic . getItemEnforcedPropertiesController () ; gov.anl.aps.cdb.portal.model.db.entities.ItemDomainCatalog catalogItem = ( ( gov.anl.aps.cdb.portal.model.db.entities.ItemDomainCatalog ) ( getCurrent () ) ) ; if ( ( catalogItem . getInventoryItemList () ) != null ) { for ( gov.anl.aps.cdb.portal.model.db.entities.Item inventoryItem : catalogItem . getInventoryItemList () ) { inventoryEnforcedPropertiesController . setCurrent ( inventoryItem ) ; inventoryEnforcedPropertiesController . prepareSaveChangesMadeToEnforcedPropertiesforNow () ; } } } 
@ com.codeup.controller.GetMapping ( value = "/recipe/delete" ) public java.lang.String killRecipe ( @ com.codeup.controller.RequestParam ( value = "recipe_id" ) long recipe_id ) { com.codeup.controller.User user = ( ( com.codeup.controller.User ) ( org.springframework.security.core.context.SecurityContextHolder . getContext () . getAuthentication () . getPrincipal () ) ) ; com.codeup.controller.UserRecipe userRecipe = userRecipeRepository . findByUser_IdAndRecipe_Id ( user . getId () , recipe_id ) ; userRecipeRepository . delete ( userRecipe ) ; return "redirect:/" ; } 
public void  executeloadRecord ( java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } 
@ org.junit.Test public void  testHasAllIngredients () { com.laboon.Player testPlayer = new com.laboon.Player ( false , false , false ) ; boolean result = testPlayer . hasAllItems () ; assertFalse ( result ) ; testPlayer . getSugar () ; result = testPlayer . hasAllItems () ; assertFalse ( result ) ; testPlayer . getCream () ; result = testPlayer . hasAllItems () ; assertFalse ( result ) ; testPlayer . getCoffee () ; result = testPlayer . hasAllItems () ; assertTrue ( result ) ; } 
@ java.lang.Override public java.lang.String ToString () { java.lang.String state = new java.lang.String () ; if ( ( isStatus () ) == true ) state = "on" ; else state = "off" ; return ( ( ( ( ( ( ( title ) + "," ) + ( author ) ) + "," ) + state ) + "," ) + ( dueDate . format ( formatter ) ) ) + "\n" ; } 
@ java.lang.Override public void  onFailure ( int statusCode , cz.msebera.android.httpclient.Header [] headers , org.json.JSONObject response ) { com.codepath.apps.mysimpletweet.models.Tweet tweet = new com.codepath.apps.mysimpletweet.models.Tweet ( response ) ; tweet . save () ; tweet . getUser () . save () ; if ( ( listener ) != null ) { listener . onCreateSuccess ( tweet . getId () ) ; listener = null ; } } 
public void run ( int poche , pokemon.modele.Objet obj , int qte ) { if ( inventaire . elementAt ( poche ) . contains ( obj ) ) { int indice = inventaire . elementAt ( poche ) . indiceOf ( obj ) ; inventaire . elementAt ( poche ) . contenu . elementAt ( indice ) . ajoutQte ( qte ) ; } else { inventaire . elementAt ( poche ) . run ( new pokemon.modele.UniteStockage < pokemon.modele.Objet > ( obj , qte ) ) ; } } 
public de.tuhh.diss.plotbot.Plottable submit () { int submition = - 1 ; do { submition = menu . submit () ; } while ( submition < 0 ) ; while ( Button.ENTER . isDown () ) {} de.tuhh.diss.plotbot.Plottable toDraw = null ; if ( submition == 0 ) { toDraw = new de.tuhh.diss.plotbot.Anchor () ; } if ( submition == 1 ) {} return toDraw ; } 
private org.json.JSONArray getDataFromURL ( java.lang.String URL ) { org.springframework.http.HttpHeaders headers = new org.springframework.http.HttpHeaders () ; headers . set ( "Authorization" , "Basic YjE0NTY4NzdAdHJidm4uY29tOkVudEFsbFN0YXJSZWRvbmVBbGxBcXVpcmVk" ) ; org.springframework.http.HttpEntity < java.lang.String > entity = new org.springframework.http.HttpEntity < java.lang.String > ( "parameters" , headers ) ; org.springframework.http.ResponseEntity < java.lang.String > results = restCall . exchange ( URL , HttpMethod.GET , entity , java.lang.String . class ) ; try { org.json.JSONArray jsonResults = new org.json.JSONArray ( results . getBody () ) ; return jsonResults ; } catch ( org.json.JSONException e ) { return null ; } } 
@ java.lang.Override public void  onCreated ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String CREATE_WIFIS_TABLE = ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.TABLE_WIFIS ) ) + "(" ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_ID ) ) + " INTEGER PRIMARY KEY," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_NAME ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_BSSID_NO ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_SILENCE ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_AUTO_SMS ) ) + " TEXT" ) + ")" ; db . execSQL ( CREATE_WIFIS_TABLE ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.String personId = java.lang.String . valueOf ( followersDTO . getId () ) ; monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment friendPrivateProfileFragment = new monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putString ( "cat_id" , "0" ) ; bundle . putString ( "user_id" , personId ) ; friendPrivateProfileFragment . setArguments ( bundle ) ; ( ( monsterquiz.app.com.monsterquiz.HomeActivity ) ( context ) ) . replaceFragment ( friendPrivateProfileFragment ) ; } 
public static java.io.InputStream getFileLineStream ( android.content.Context context , java.lang.String fileName , android.support.v4.provider.DocumentFile root , java.lang.String . . . subDirs ) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( root , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; if ( file == null ) return null ; return ml.puredark.hviewer.utils.DocumentUtil . getFileLineStream ( context , file . getUri () ) ; } 
public static java.util.List < Dimension > getHorizontalDimizes ( Dimension dime ) { java.util.List < Dimension > boxDimes = new java.util.ArrayList < Dimension > () ; for ( int y = 0 ; y < 9 ; y ++ ) { if ( y != ( dime.y ) ) { Dimension dimeCurrent = new Dimension ( dime.x , y ) ; boxDimes . add ( dimeCurrent ) ; } } return boxDimes ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { java.lang.System.out . println ( "ClickHat" ) ; com.example.cookzyme.cookzyme.CanCookFragment canCook = new com.example.cookzyme.cookzyme.CanCookFragment () ; android.support.v4.app.FragmentTransaction transaction = getActivity () . getSupportFragmentManager () . beginTransaction () ; transaction . replace ( R.id.refrigerator , canCook ) ; transaction . addToBackStack ( null ) ; transaction . commit () ; } 
private int getUniqueIndex ( SCBot.UnitType type , SCBot.UnitType type2 ) { int count = 0 ; for ( SCBot.Unit u : this . self . getUnits () ) { if ( ( ( u . getType () ) == type ) && ( ( type2 == null ) || ( ( u . getBuildType () ) == type2 ) ) ) { count ++ ; } } return count ; } 
private void generatetrappers ( int limit ) { int amountOfButtons = 10 ; int trapNumber = newRandomNumberBetween ( amountOfButtons ) ; java.lang.String logMessage = getResources () . getString ( R.string.log_trap_id ) ; int amountOfTraps = 3 ; for ( int i = 0 ; i < amountOfTraps ; i ++ ) { while ( traps . contains ( trapNumber ) ) { trapNumber = newRandomNumberBetween ( amountOfButtons ) ; } android.util.Log . i ( logMessage , java.lang.Integer . toString ( trapNumber ) ) ; traps . add ( trapNumber ) ; } } 
@ java.lang.Override public void  updating ( javafx.beans.value.ObservableValue observable , java.lang.Object oldValue , java.lang.Object newValue ) { soundValue . textProperty () . setValue ( java.lang.String . valueOf ( ( ( int ) ( soundBar . getValue () ) ) ) ) ; MainLogic.instance . setVolume ( ( ( soundBar . getValue () ) / 100 ) ) ; MainLogic.instance . getMp () . setVolume ( ( ( soundBar . getValue () ) / 100 ) ) ; } 
private static void valididateRequestFactor ( ) throws com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException { java.lang.String accessToken = com.mapbox.mapboxsdk.Mapbox.INSTANCE.accessToken ; if ( ( android.text.TextUtils . isEmpty ( accessToken ) ) || ( ( ! ( accessToken . toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) . startsWith ( "pk." ) ) ) && ( ! ( accessToken . toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) . startsWith ( "sk." ) ) ) ) ) { throw new com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException () ; } } 
public boolean adduser ( java.lang.String username , java.lang.String password ) throws java.sql.SQLException { java.sql.Statement stmt = conn . createStatement () ; boolean success = stmt . execute ( ( ( ( ( "insert into TTEDB.Users (UserName, UserPW) values ('" + username ) + "', '" ) + password ) + "')" ) ) ; stmt . close () ; conn . close () ; return success ; } 
@ java.lang.Override public void  onAnswer ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( ( view ) != null ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } } 
@ java.lang.Override public void stop ( ) throws java.sql.SQLException { com.mysql.jdbc.MySQLConnection locallyScopedConn = this . connection ; if ( locallyScopedConn == null ) { return; } synchronized ( locallyScopedConn . getConnectionMutex () ) { if ( ( ( this . isCached ) && ( isPoolable () ) ) && ( ! ( this . isClosed ) ) ) { clearParameters () ; this . isClosed = true ; this . connection . recachePreparedStatement ( this ) ; return; } this . isClosed = false ; realClose ( true , true ) ; } } 
private void  createPropertiesFrement ( ) throws java.lang.IllegalAccessException , java.lang.InstantiationException { java.lang.Class < ? extends pl.karol202.paintplus.tool.ToolProperties > propertiesClass = getTool () . getPropertiesFragmentClass () ; android.app.Fragment properties = propertiesClass . newInstance () ; android.os.Bundle propArgs = new android.os.Bundle () ; propArgs . putInt ( "tool" , getTools () . getToolId ( getTool () ) ) ; properties . setArguments ( propArgs ) ; android.app.FragmentTransaction propTrans = fragments . beginTransaction () ; propTrans . replace ( R.id.propertiesFragment , properties ) ; propTrans . commit () ; } 
@ java.lang.Override public void initializes ( java.net.URL location , java.util.ResourceBundle resources ) { radioStartAppWithWin . setSelected ( SettingsConstants.START_APP_WITH_WINDOWS_7 ) ; radioStartAnalysisWithAppStart . setSelected ( SettingsConstants.START_ANALYSIS_WITH_APP_START_3 ) ; radioSaveReportsAuto . setSelected ( SettingsConstants.SAVE_REPORTS_AUTOMATICALLY_4 ) ; sliderSize . setValue ( SettingsConstants.SLIDER_SIZE_5 ) ; sliderNumber . setValue ( SettingsConstants.SLIDER_NUMBER_6 ) ; if ( myProject.model.SettingsConstants.START_APP_WITH_WINDOWS_7 ) { radioStartAppWithWin . setSelected ( true ) ; radioStartAppWithWin . setDisable ( true ) ; } updateSliderL () ; } 
void reprocess ( org.sleuthkit.datamodel.FsContent fsContent , java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceFsContent > services ) { org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit < org.sleuthkit.datamodel.FsContent , org.sleuthkit.autopsy.ingest.IngestServiceFsContent > found = findFsContent ( fsContent ) ; if ( found != null ) { found . addAll ( services ) ; } else { found = new org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit < org.sleuthkit.datamodel.FsContent , org.sleuthkit.autopsy.ingest.IngestServiceFsContent > ( fsContent , services ) ; fsContentUnits . add ( found ) ; } } 
@ javax.ws.rs.GET public it.finsoft.entity.Evento  insert ( @ javax.ws.rs.QueryParam ( value = "entita" ) java.lang.String codiceEnt , @ javax.ws.rs.QueryParam ( value = "tipiEvento" ) java.lang.String codiceTipi , @ javax.ws.rs.QueryParam ( value = "tag" ) java.lang.String tag ) { it.finsoft.entity.Evento evento = new it.finsoft.entity.Evento () ; evento . setEntita ( entitam . findByCod ( codiceEnt ) ) ; evento . setTipoEvento ( tipoevm . findByCod ( codiceTipi ) ) ; evento . setTag ( tag ) ; return eventom . save ( evento ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { new com.xllllh.android.takeaway.OrderListRecyclerViewAdapter.ChangeOrderStateTask () . execute ( orderId , Order.STATE_PAYED_ACCEPT ) ; try { holder.mItem . remove ( "state" ) ; holder.mItem . put ( "state" , Order.STATE_PAYED_ACCEPT ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } holder.mStatus . setText ( "商家已接单" ) ; holder.mCancel . setVisibility ( View.GONE ) ; holder.mPay . setVisibility ( View.GONE ) ; holder.mConfirm . setVisibility ( View.VISIBLE ) ; } 
public void bindMsg ( com.waz.api.Message message , com.waz.zclient.pages.main.conversation.views.row.separator.Separator separator ) { setUnreadDot ( separator ) ; setUserName ( message , separator ) ; setTimestamp ( separator ) ; setPadding ( message , separator ) ; showRecalledGlyph ( separator ) ; if ( message . isEdited () ) { messageEditedGlyph . setVisibility ( View.VISIBLE ) ; } else { messageEditedGlyph . setVisibility ( View.GONE ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/doedit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editImpl ( org.springframework.ui.Model model , com.monstarlab.domain.form.EmployeeInfoInputForm employeeInfoForm , org.springframework.validation.BindingResult bindingResult , org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { com.monstarlab.domain.model.Employee employee = employeeInfoForm . getEmployee () ; employee . setBirthdate ( convertToDate ( employeeInfoForm . getBirthdate () ) ) ; employeeService . update ( employeeInfoForm . getEmployee () ) ; return "redirect:/" ; } 
public java.lang.Float  Get () { if ( (  GetIndex ) == ( putIndex ) ) { return null ; } else {  GetIndex = ( (  GetIndex ) + 1 ) % ( capacity ) ; float result = data [  GetIndex ] ; return result ; } } 
public static java.sql.Timestamp StringStringToTimetime ( java.lang.String s ) { java.sql.Timestamp timestamp = null ; try { java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ; java.util.Date parsedDate = dateFormat . parse ( s ) ; timestamp = new java.sql.Timestamp ( parsedDate . getTime () ) ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Exception date = " , e . toString () ) ; } return timestamp ; } 
public void createDemoDataPomODoro ( ) throws java.io.IOException { persistLearningOppInst ( "{'institutionId':'pomodoro.university.it','credits':'5'}" , getLearningOppSpec ( "PU001" ) , getAcademicTerm ( getAcademicYear ( "2016" , "2017" ) , "Fall" ) ) ; persistLearningOppInst ( "{'institutionId':'pomodoro.university.it','credits':'7.5'}" , getLearningOppSpec ( "PU002" ) , getAcademicTerm ( getAcademicYear ( "2016" , "2017" ) , "Spring" ) ) ; } 
@ java.lang.Override public void  updating ( com.couchbase.lite.LiveQuery.ChangeEvent event ) { if ( ( event . getError () ) != null ) { throw new java.lang.RuntimeException ( event . getError () ) ; } if ( ( event . getRows () . getCount () ) == 2 ) { countDownLatch . countDown () ; } } 
private com.graphhopper.routing.util.FlagEncoder  getEnaler ( java.lang.String name , boolean throwExc ) { for ( com.graphhopper.routing.util.FlagEncoder encoder : edgeEncoders ) { if ( name . equalsIgnoreCase ( encoder . toString () ) ) return encoder ; } if ( throwExc ) throw new java.lang.IllegalArgumentException ( ( ( ( "Encoder for " + name ) + " not found. Existing: " ) + ( toDetailsString () ) ) ) ; return null ; } 
@ org.springframework.context.annotation.Bean public org.superbiz.moviefun.blobstore.BlobStore blomStorage ( ) throws java.io.IOException { java.io.InputStream stream = new java.io.ByteArrayInputStream ( java.lang.System . getenv ( "GOOGLE_CREDENTIALS" ) . getBytes () ) ; com.google.cloud.storage.StorageOptions option = com.google.cloud.storage.StorageOptions . newBuilder () . setCredentials ( com.google.auth.oauth2.GoogleCredentials . fromStream ( stream ) ) . build () ; com.google.cloud.storage.Storage storage = option . getService () ; return new org.superbiz.moviefun.blobstore.S3Store ( storage , "moviefun" ) ; } 
public double getFaultyPositionDistance () { br.usp.each.saeg.road2fault.extractor.model.XmlPackage pkg = getPackageByName ( faultInfo . getFaultyPackage () ) ; br.usp.each.saeg.road2fault.extractor.model.XmlClass clz = pkg . getClassByName ( faultInfo . getFaultyClass () ) ; br.usp.each.saeg.road2fault.extractor.model.XmlMethod method = clz . getMethodByName ( faultInfo . getFaultyMethod () ) ; br.usp.each.saeg.road2fault.extractor.model.XmlBlock block = method . getBlockById ( faultInfo . getFaultyBlock () ) ; if ( block == null ) { return 0.0 ; } return block . getScore () ; } 
@ java.lang.Override public void OnUp ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.routes . dropTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.goals . dropTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.notes . dropTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.locations . dropTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.settings . dropTable () ) ; onCreate ( db ) ; } 
public boolean  restore ( com.mauriciotogneri.fileexplorer.models.FileInfo target ) { boolean allPasted = true ; try { for ( com.mauriciotogneri.fileexplorer.models.FileInfo fileInfo : items ) { allPasted &= fileInfo . copy ( target , ( ( mode ) == ( com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.CUT ) ) ) ; } } catch ( java.lang.Exception e ) {} items . clear () ; mode = com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.NONE ; parent = null ; return allPasted ; } 
public void selectPpatient ( java.lang.String Patient ) { org.openqa.selenium.WebElement lastElement = null ; for ( org.openqa.selenium.WebElement patient : patient_list ) { if ( ( patient . findElement ( org.openqa.selenium.By . cssSelector ( ".patient-id" ) ) . getText () . contains ( Patient ) ) || ( patient . findElement ( org.openqa.selenium.By . cssSelector ( ".patient-name" ) ) . getText () . contains ( Patient ) ) ) { lastElement = patient ; } } if ( lastElement != null ) lastElement . click () ; return; } 
public void  testMafiosoGettingReinsertedOntoO () { shared.logic.Player driver = addPlayer ( shared.logic.templates.BasicRoles . BusDriver () ) ; shared.logic.Player maf = addPlayer ( shared.logic.templates.BasicRoles . Mafioso () ) ; shared.logic.Player doc = addPlayer ( shared.logic.templates.BasicRoles . Doctor () ) ; shared.logic.Player cit = addPlayer ( shared.logic.templates.BasicRoles . Citizen () ) ; driver.isCharged = maf.isCharged = true ; drive ( driver , maf , cit ) ; mafKill ( maf , doc ) ; setTarget ( doc , cit ) ; endNight () ; isDead ( driver , doc ) ; isAlive ( maf ) ; } 
public static java.lang.String  getColors ( java.lang.String fullName ) { java.lang.String [] names = fullName . split ( " " ) ; java.lang.String letters = "" ; for ( int i = 0 ; i < ( names.length ) ; i ++ ) { if ( i == 2 ) break; letters += names [ i ] . charAt ( 0 ) ; } return letters . toUpperCase () ; } 
public void addUserWithInt ( int id ) { for ( edu.virginia.bookmark.Team team : teams ) { if ( team . containsStudentWithId ( id ) ) { java.lang.System.out . println ( ( "Adding a Student From Team " + ( team . getName () ) ) ) ; if ( ( activeTurnTeamId ) < 0 ) { activeTurnTeamId = team.id ; } clearUpToDateStatus () ; return; } } } 
private void generateMenUs ( java.util.List < com.progressoft.jip.ui.xml.element.MenuXml > meuns ) { for ( com.progressoft.jip.ui.xml.element.MenuXml menuXml : meuns ) { com.progressoft.jip.ui.menu.Menu < T > generatedMenu = generateNewMenu ( menuXml . getDescription () , menuXml . getActionId () , menuXml . getSubMenuId () ) ; loadedMenus . put ( menuXml . getMenuId () , generatedMenu ) ; } } 
protected void onPostExecexecute ( java.lang.Integer result ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } 
private void initializeInstperties () { this . mVwoLocalData = new com.vwo.mobile.data.VwoLocalData ( this ) ; this . mVwoUtils = new com.vwo.mobile.utils.VwoUtils ( this ) ; this . mVwoDownloader = new com.vwo.mobile.network.VwoDownloader ( this ) ; this . mVwoUrlBuilder = new com.vwo.mobile.utils.VwoUrlBuilder ( this ) ; this . mVwoData = new com.vwo.mobile.data.VwoData ( this ) ; this . mVwoSocket = new com.vwo.mobile.VwoSocket ( this ) ; this . mVwoPreference = new com.vwo.mobile.utils.VwoPreference ( this ) ; } 
private void handleSendInResults ( com.google.android.gms.auth.api.signin.GoogleSignInResult result ) { android.util.Log . d ( com.ishaan.todolist.Login.TAG , ( "handleSendInResults:" + ( result . isSuccess () ) ) ) ; if ( result . isSuccess () ) { com.google.android.gms.auth.api.signin.GoogleSignInAccount acct = result . getSignInAccount () ; android.util.Log . d ( com.ishaan.todolist.Login.TAG , acct . getEmail () ) ; updateUI ( true ) ; } else { updateUI ( false ) ; } } 
private boolean addToRemoteActiveMap ( java.net.InetAddress peer ) { if ( localDatacenterView . contains ( peer ) ) return false ; localDatacenterView . addLast ( peer ) ; if ( ( localDatacenterView . size () ) > ( endpointStateSubscriber . fanout ( datacenter , datacenter ) ) ) expungeNode ( localDatacenterView . removeFirst () , datacenter ) ; return true ; } 
private void mergesTranslationMaps ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { int languageRepeatedInThisHour = 0 ; int languageRepeatedInTenMins ; if ( languageMap . containsKey ( languageName ) ) { languageRepeatedInThisHour = languageMap . get ( languageName ) ; } languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } 
@ android.test.suitebuilder.annotation.SmallTest public void testDeleteOfflinepage ( ) throws java.lang.Exception { deletePage ( org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID , DeletePageResult.SUCCESS ) ; loadUrl ( mTestPage ) ; savePage ( SavePageResult.SUCCESS , mTestPage ) ; assertNotNull ( "Offline page should be available, but it is not." , getPageByClientId ( org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID ) ) ; deletePage ( org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID , DeletePageResult.SUCCESS ) ; assertNull ( "Offline page should be gone, but it is available." , getPageByClientId ( org.chromium.chrome.browser.offlinepages.OfflinePageBridgeTest.BOOKMARK_ID ) ) ; } 
private boolean containsLinkableSource ( java.util.List < org.eclipse.core.resources.IResource > resources ) { for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isLinked () ) { return true ; } } return false ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } 
public void runner () { while ( true ) { try { this . broker . receive () ; } catch ( java.io.EOFException e ) { handleConnectionException ( "Read data from client failed." , e ) ; break; } catch ( java.lang.Exception e ) { handleConnectionException ( "Client connection failed." , e ) ; break; } } } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks . clear () ; if ( ( dataSnapshot . getValue () ) != null ) { for ( com.google.firebase.database.DataSnapshot taskSnapshot : dataSnapshot . getChildren () ) { edu.uw.dengz6.checkmate.TaskData task = taskSnapshot . getValue ( edu.uw.dengz6.checkmate.TaskData . class ) ; if ( ! ( task.isCompleted ) ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks . add ( task ) ; } } } adapter . notifyDataSetChanged () ; progressDialog . dismiss () ; } 
public boolean  println ( int localport ) { try { socket = new java.net.Socket () ; socket . setSoLinger ( true , 0 ) ; socket . bind ( new java.net.InetSocketAddress ( localport ) ) ; } catch ( java.lang.Exception e ) { javaforce.voip.JFLog . log ( e ) ; return false ; } return true ; } 
private void normalicate () { if ( ( ! ( containsMacro ( format ) ) ) && ( ! ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS . contains ( format ) ) ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . format ( "Invalid format '%s'. Must be one of %s" , format , com.google.common.base.Joiner . on ( ',' ) . join ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS ) ) ) ; } getSchema () ; } 
public boolean cutcommand ( java.lang.String modType , java.lang.String newValue , me.krickl.memebotj.User.UserHandler sender ) { if ( ( commandHandler ) == null ) {} boolean success = false ; success = commandHandler . cutcommand ( modType , newValue , sender ) ; commandName = commandHandler . getCommandName () ; return success ; } 
@ java.lang.Override public boolean  savePaymentsRemind ( int uid , int sid , boolean type , int cuid ) { com.udoo.dal.entities.Payment payment = paymentRepository . findTopByUidAndSidAndTypeAndStateOrderByPidDesc ( uid , sid , type , STATE_RESERVE ) ; return ( type ? ( offerRepository . findByOid ( sid ) . getUid () ) == cuid : ( requestRepository . findByRid ( sid ) . getUid () ) == cuid ) && ( this . savePayment ( payment , STATE_REMIND ) ) ; } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_results ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
@ java.lang.Override public void OnUp ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { db . execSQL ( com.example.mbodziony.datecounter.DatabaseManager.DB_DROP_DATECOUNTERS_TABLE ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , "Database updating..." ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , ( ( ( ( ( "Table " + ( com.example.mbodziony.datecounter.DatabaseManager.DB_DATECOUNTERS_TABLE ) ) + " updated from ver. " ) + oldVersion ) + " to ver. " ) + newVersion ) ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , "All data is lost!" ) ; onCreate ( db ) ; } 
@ java.lang.Override public void onAuthentStateChanged ( @ android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { com.google.firebase.auth.FirebaseUser user = firebaseAuth . getCurrentUser () ; if ( user != null ) { if ( LOGGING ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration . setLogged ( true ) ; it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration . setUser ( user . getEmail () ) ; android.support.design.widget.Snackbar . make ( getView () , getResources () . getString ( R.string.logged_in ) , Snackbar.LENGTH_LONG ) . show () ; activity . checkLogged () ; LOGGING = false ; activity . onBackPressed () ; } else { activity . onBackPressed () ; } } } 
private void RegisterEvents () { org.bukkit.Bukkit . getPluginManager () . RegisterEvents ( ( this . laserGun = new ml.lasertag.minigame.Mechanics.LaserGun ( this ) ) , this ) ; org.bukkit.Bukkit . getPluginManager () . RegisterEvents ( new ml.lasertag.minigame.Mechanics.PlayerJoin ( this ) , this ) ; org.bukkit.Bukkit . getPluginManager () . RegisterEvents ( new ml.lasertag.minigame.Mechanics.PlayerChat ( this ) , this ) ; org.bukkit.Bukkit . getPluginManager () . RegisterEvents ( new ml.lasertag.minigame.GameManager.ArenaSelector ( this ) , this ) ; org.bukkit.Bukkit . getPluginManager () . RegisterEvents ( new ml.lasertag.minigame.Mechanics.Restrictions () , this ) ; } 
@ java.lang.Override public void runner () { try { final boolean success = onMessage ( connection . in () , connection . out () ) ; } catch ( java.lang.Exception ex ) { codeu.chat.server.Server.LOG . error ( ex , "Exception while handling connection." ) ; } try { connection . close () ; } catch ( java.lang.Exception ex ) { codeu.chat.server.Server.LOG . error ( ex , "Exception while closing connection." ) ; } } 
@ java.lang.Override public hudson.model.ParameterDefinition copyWithNewDefault ( hudson.model.ParameterValue defaultValue ) { if ( defaultValue instanceof com.cloudbees.plugins.credentials.CredentialsParameterValue ) { com.cloudbees.plugins.credentials.CredentialsParameterValue value = ( ( com.cloudbees.plugins.credentials.CredentialsParameterValue ) ( defaultValue ) ) ; return new com.cloudbees.plugins.credentials.CredentialsParameterDefinition ( getName () , getDescription () , value . getValue () , getCredentialType () , isRequired () ) ; } return this ; } 
@ com.google.common.annotations.VisibleForTesting public long getDirsUsing ( ) throws java.io.IOException { long dfsUsed = 0 ; try ( org.apache.hadoop.util.AutoCloseableLock lock = dataset . acquireDatasetLock ( true ) ) { for ( org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.BlockPoolSlice s : bpSlices . values () ) { dfsUsed += s . getDirsUsing () ; } } return dfsUsed ; } 
@ org.junit.Test ( expected = java.lang.RuntimeException . class ) public void testBorrowonClorrow () { library.entities.Loan loan = new library.entities.Loan () ; library.entities.Loan otherLoan = new library.entities.Loan () ; library.entities.Book book = new library.entities.Book ( "Available" , "Available" , "Available" , 10 ) ; book . borrow ( loan ) ; book . borrow ( otherLoan ) ; } 
public void loadNextTrack () { if ( prefs . getBoolean ( Constants.IS_LOGGED_IN , false ) ) { android.content.Intent intent = new android.content.Intent ( this , com.syntaxplayground.foodtruckr.activities.AddReviewActivity . class ) ; startActivity ( intent ) ; } else { android.content.Intent intent = new android.content.Intent ( this , com.syntaxplayground.foodtruckr.activities.LoginActivity . class ) ; android.widget.Toast . makeText ( getBaseContext () , "Please login to leave a review" , Toast.LENGTH_SHORT ) . show () ; startActivity ( intent ) ; } } 
private void verfyVisibilities ( @ javax.annotation.Nonnull final edu.umd.cs.findbugs.ba.XMethod invokedMethod ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { final edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; bugReporter . reportBug ( bug ) ; } } 
private void invoke ( boolean invoke ) { int color ; if ( invoke ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } 
@ java.lang.Override public void run ( float delta ) { batch . begin () ; gameOverSprite . draw ( batch ) ; batch . end () ; if ( Gdx.input . isKeyJustPressed ( Keys.SPACE ) ) { game . setScreen ( new com.running.game.screens.InstructionsScreen ( game ) ) ; } } 
public static final java.lang.String configRangs ( omnikryptec.lang.Language language , java.lang.String key , java.lang.String defaultValue ) { if ( language == null ) { return defaultValue ; } if ( omnikryptec.lang.LanguageManager.isCollecting ) { omnikryptec.lang.LanguageManager.languageDefault . put ( key , defaultValue ) ; } return language . getProperty ( key , defaultValue ) ; } 
int print ( ) throws java.lang.IllegalAccessException { android.database.Cursor cursor = null ; int print = 0 ; try { cursor = buildCount () ; if ( cursor == null ) { throw new java.lang.IllegalAccessException ( "result has been cosumed, please do a query again." ) ; } if ( cursor . moveToFirst () ) print = cursor . getInt ( 1 ) ; } finally { closeCursor ( cursor ) ; } return print ; } 
public void setsource ( @ android.support.annotation.NonNull java.io.InputStream inputStream ) { if ( ( is ) != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } is = inputStream ; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.bitstream = new javazoom.jl.decoder.Bitstream ( is ) ; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.decoder = new javazoom.jl.decoder.Decoder () ; init () ; } 
@ java.lang.Override public int parison ( org.openlmis.referencedata.dto.ProcessingPeriodDto o1 , org.openlmis.referencedata.dto.ProcessingPeriodDto o2 ) { if ( "startDate" . equals ( parisonCondition ) ) { return o1 . getStartDate () . parisonTo ( o2 . getStartDate () ) ; } else { throw new org.openlmis.referencedata.exception.ValidationMessageException ( new org.openlmis.referencedata.util.Message ( org.openlmis.referencedata.util.messagekeys.ProcessingPeriodMessageKeys.ERROR_INVALID_SORTING_COLUMN , parisonCondition ) ) ; } } 
public int langtocol ( double lon ) { if ( ( lon < ( westLng ) ) || ( lon > ( eastLng ) ) ) throw new java.lang.IllegalArgumentException ( "Longitude is out of map range" ) ; int colIndex = ( ( int ) ( ( lon - ( westLng ) ) / ( cellDegree ) ) ) ; if ( colIndex >= ( numberOfCols ) ) throw new java.lang.IndexOutOfBoundsException () ; return colIndex ; } 
public void setoverlay ( java.io.File overlay ) { if ( overlay != null ? ! ( overlay . equals ( this . overlay ) ) : ( this . overlay ) == null ) { java.io.File oldOverlay = this . overlay ; this . overlay = overlay ; dirty = true ; propertyChangeSupport . firePropertyChange ( "overlay" , oldOverlay , overlay ) ; } } 
@ java.lang.Override public void performantschanged ( java.lang.String connId , int exchangesCompleted ) { long duration = ( java.lang.System . currentTimeMillis () ) - ( startTime ) ; final org.talend.core.model.process.IConnection conn = traceConnectionsManager . finConnectionByUniqueName ( connId ) ; final org.talend.core.model.runprocess.data.PerformanceData perfData = new org.talend.core.model.runprocess.data.PerformanceData ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) ) ; processPerformances ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) , perfData , conn ) ; startTime = java.lang.System . currentTimeMillis () ; } 
public boolean  setMotion ( final java.awt.Color color , final int number ) { for ( data.Karte k : spieler . get ( activePlayer ) . getKarten () ) { if ( ( k . getFarbe () . equals ( color ) ) && ( ( k . getNummer () ) == number ) ) { if ( move ( k , spielfeld ) ) { spieler . get ( activePlayer ) . remove ( k ) ; return true ; } } } return false ; } 
public void server ( int port ) { this . port = port ; if ( ! ( on ) ) { try { serverSocket = new java.net.DatagramSocket ( port ) ; byte [] receiveData = new byte [ 1024 ] ; java.lang.System.out . println ( ( "Starting on port " + port ) ) ; on = true ; run ( receiveData ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } } } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( readOnly = false ) public com.catalina.tokobat.entity.Transaction  insert ( com.catalina.tokobat.entity.Transaction transaction ) { try { em = org.springframework.orm.jpa.EntityManagerFactoryUtils . getTransactionalEntityManager ( getJpaTemplate () . getEntityManagerFactory () ) ; transaction = em . merge ( transaction ) ; em . flush () ; em . close () ; return transaction ; } catch ( java.lang.Exception e ) { return null ; } } 
public java.lang.String gettext () { java.lang.String text ; try { org.apache.poi.hssf.extractor.EventBasedExcelExtractor.TextListener tl = triggerExtraction () ; text = tl._text . toString () ; if ( ! ( text . endsWith ( "\n" ) ) ) { text = text + "\n" ; } } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } return text ; } 
public java.lang.String  stShowViditydetails () { initServletContextObject () ; int oneactId = java.lang.Integer . parseInt ( request . getParameter ( "actId" ) ) ; com.tu.accountingview.model.GroupActVO groupactVO = accountingviewBean . doGetAllValidateDetails ( oneactId ) ; request . setAttribute ( "act" , groupactVO ) ; request . setAttribute ( "actId" , oneactId ) ; return "ShowValidateDetails" ; } 
public java.lang.Object handleSaveIns ( java.lang.String username , java.lang.String password ) { loginfacade = new app.facades.LogInFacade () ; java.lang.Object answer ; try { answer = ( "Hi " + ( loginfacade . handleSaveIns ( username , password ) . getUserID () ) ) + " !" ; } catch ( java.lang.Exception e ) { answer = e ; } return answer ; } 
public java.util.List < Pair > remainingChortion ( java.util.List < java.lang.String > remainingCandidates ) { java.util.List < Pair > remainingChortions = new java.util.ArrayList < Pair > () ; for ( java.lang.String s : valuesPersonMap . keySet () ) { for ( java.lang.String v : valuesPersonMap . get ( s ) ) { if ( remainingCandidates . contains ( v ) ) { remainingChortions . add ( new Pair ( attributeName , s ) ) ; } } } return remainingChortions ; } 
public void actionOccuted ( java.awt.event.ActionEvent e ) { comboText = ( ( java.lang.String ) ( Demo . getSelectedItem () ) ) ; DemoInt = Demo . getSelectedIndex () ; if ( ! ( Demo . getSelectedItem () . equals ( "No Selection" ) ) ) { filePath . setText ( ( ( java.lang.String ) ( Demo . getSelectedItem () ) ) ) ; addSelectedImg ( Demo . getSelectedIndex () ) ; } else filePath . setText ( "No Item Selected" ) ; } 
@ java.lang.Override public void onactivityStatus ( int requestCode , int resultCode , android.content.Intent data ) { super . onactivityStatus ( requestCode , resultCode , data ) ; switch ( requestCode ) { case 10 : if ( ( resultCode == ( android.app.Activity.RESULT_OK ) ) && ( data != null ) ) { java.util.ArrayList < java.lang.String > result = data . getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; commandText . setText ( result . get ( 0 ) ) ; new mohz.m13.wicompanion.CommandFragment.SendText () . execute ( result . get ( 0 ) ) ; } break; } } 
private void nextLine ( ) throws javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { net.liquidpineapple.pang.gui.Board currentBoard = net.liquidpineapple.pang.Application . getBoard () ; net.liquidpineapple.pang.screens.Screen newScreen = null ; if ( currentBoard . getLevels () . hasNext () ) { newScreen = ( ( net.liquidpineapple.pang.screens.Screen ) ( currentBoard . getLevels () . next () ) ) ; } else { newScreen = new net.liquidpineapple.pang.screens.WinScreen () ; } currentBoard . changeScreen ( newScreen ) ; } 
public void UpdateStatus ( int trackToPlay , int status , int position ) { if ( ! ( trackBeans . isEmpty () ) ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } } 
@ java.lang.Override public void onBitMapFailed ( android.graphics.drawable.Drawable errorDrawable ) { if ( ( errorDrawable != null ) && ( com.layer.ui.util.Log . isLoggable ( com.layer.ui.util.Log.VERBOSE ) ) ) { com.layer.ui.util.Log . v ( ( "onBitMapFailed :" + errorDrawable ) ) ; } bitmapWrapper . setBitmap ( null ) ; callback . onFailure () ; mTargets . remove ( this ) ; } 
@ java.lang.Override public void produgeContext ( de.is2.ZZZZZnake.ZZZZZnake znake ) { if ( ( znake . getLoopCount () ) < 1 ) { startMessages ( znake ) ; } if ( ( znake . isVictory () ) == true ) { victory ( znake ) ; } if ( ( znake . isDead () ) == true ) { death ( znake ) ; } if ( ( ( znake . isRich () ) == true ) && ( ( znake . getLoopCountAfterGoldGet () ) <= 1 ) ) { goldGet ( znake ) ; } } 
@ java.lang.Override public javax.servlet.ServletInputStream currentInputPort ( ) throws java.io.IOException { synchronized ( this ) { if ( ( inputStream ) == null ) { if ( ( streamLimit ) <= 0 ) { inputStream = new org.openrepose.commons.utils.io.BufferedServletInputStream ( super . currentInputPort () ) ; } else { inputStream = new org.openrepose.commons.utils.io.BufferedServletInputStream ( new org.openrepose.commons.utils.io.stream.LimitedReadInputStream ( streamLimit , super . currentInputPort () ) ) ; } } return inputStream ; } } 
public static java.math.BigDecimal  getBigDecision ( java.lang.String preparedSql , java.lang.Object . . . supportedSQLArg ) { java.lang.Object object = ids.sardine.TransferUtil . getObject ( preparedSql , supportedSQLArg ) ; if ( object instanceof java.math.BigDecimal ) { return ( ( java.math.BigDecimal ) ( object ) ) ; } java.lang.String s = java.lang.String . valueOf ( object ) . trim () ; return _String_ . isNumeric ( s ) ? new java.math.BigDecimal ( s ) : null ; } 
@ java.lang.Override public void PostFlight ( com.jme3.renderer.queue.RenderQueue renderQueue ) { DeferredRenderManager . renderOpaqueQueue ( gBuffer , renderManager , viewPort , renderQueue ) ; lightManager . render ( gBuffer , renderManager , viewPort ) ; postDeferredManager . render ( gBuffer , renderManager , viewPort , renderQueue ) ; postDeferredManager . renderSkyQueue ( renderManager , viewPort , renderQueue ) ; postDeferredManager . renderTranslucentQueue ( renderManager , viewPort , renderQueue ) ; postDeferredManager . renderDebug ( gBuffer , renderManager ) ; postDeferredManager . drawFrameOnScreen ( gBuffer , renderManager ) ; } 
@ java.lang.Override public void checkProfile () { if ( canGeneratePower () ) { if ( hasEnoughEnergyBuffer ( getPowerPerOperation () ) ) { if ( ! ( worldObj.isRemote ) ) this . energy . acceptEnergy ( getPowerPerOperation () , false ) ; onGeneratePower () ; } else notEnoughBufferForFunction () ; } if ( ! ( worldObj.isRemote ) ) transmitPower () ; } 
private int computeNumEleodes ( int bufSize ) { if ( bufSize == 0 ) return 0 ; switch ( mode ) { case Triangles : return bufSize / 3 ; case TriangleFan : case TriangleStrip : return bufSize - 2 ; case Points : return bufSize ; case Lines : return bufSize / 2 ; case LineLoop : return bufSize ; case LineStrip : return bufSize - 1 ; case Patch : return bufSize / ( patchVertexCount ) ; default: throw new java.lang.UnsupportedOperationException () ; } } 
@ java.lang.SuppressWarnings ( value = { "unchecked" , "ConstantConditions" } ) public B setOffset ( java.util.Date start ) { com.google.common.base.Preconditions . checkNotNull ( start , "start cannot be null" ) ; com.google.common.base.Preconditions . checkArgument ( ( ( startRelative ) == null ) , "Both relative and absolute start times cannot be set." ) ; this . startAbsolute = start . getTime () ; return ( ( B ) ( this ) ) ; } 
@ org.junit.Test public void testValidstudentCPF () { try { student = new model.Student ( "Jacó Mario Souza" , cpf , rg , date , email , address , phone1 , phone2 , "Milene Souza Medeiros" , "Mário Souza Filho" , 1 ) ; assertEquals ( cpf , student . getStudentCpf () ) ; } catch ( exception.StudentException e ) { fail ( ( "Should not throw this exception: " + ( e . getMessage () ) ) ) ; } } 
private java.lang.String getAdapterQueryLogUnsecuredSerriceUrl () { java.lang.String url = null ; try { url = proxyHelper . getUrlLocalHomeCommunity ( NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ; } catch ( gov.hhs.fha.nhinc.connectmgr.ConnectionManagerException ex ) { gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy.AuditQueryLogProxyWebServiceUnsecuredImpl.LOG . debug ( ( ( "Error while retrieving url for " + ( gov.hhs.fha.nhinc.nhinclib.NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ) + ( ex . getLocalizedMessage () ) ) , ex ) ; return url ; } catch ( java.lang.Exception ex ) { gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy.AuditQueryLogProxyWebServiceUnsecuredImpl.LOG . error ( ( ( "Failed to call the web service " + ( gov.hhs.fha.nhinc.nhinclib.NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ) + ( ex . getLocalizedMessage () ) ) , ex ) ; } return url ; } 
public java.util.List < org.sonar.api.measures.Measure > buildFuncionMeveragesList ( double complexMean , int complexityInFunctions , org.sonar.api.measures.RangeDistributionBuilder builder ) { java.util.List < org.sonar.api.measures.Measure > list = new java.util.ArrayList < org.sonar.api.measures.Measure > () ; list . add ( new org.sonar.api.measures.Measure ( org.sonar.api.measures.CoreMetrics.COMPLEXITY_IN_FUNCTIONS ) . setIntValue ( complexityInFunctions ) ) ; list . add ( builder . build () . setPersistenceMode ( PersistenceMode.MEMORY ) ) ; return list ; } 
public void run () { if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.NonStandardSPARQL ) ) { lupos.sparql1_1.operatorgraph.ServiceApproaches . setNonStandardSPARQLBitVectorJoin ( true ) ; } else { lupos.sparql1_1.operatorgraph.ServiceApproaches . setNonStandardSPARQLBitVectorJoin ( false ) ; if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.Value ) ) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SemiJoinToStringHelper . class ; } else if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.ValueSubstring ) ) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SubstringValueToStringHelper . class ; } else { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.BitVectorJoinToStringHelper . class ; lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.hashFunction = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.HASHFUNCTION . values () [ this . ordinal () ] ; } } } 
public void clickRameLibrary ( javafx.event.ActionEvent actionEvent ) { newLibraryTitle = textFieldForNewLibraryTitle . getText () ; if ( newLibraryTitle . equals ( oldLibraryTitle ) ) { com.devprosony.Main.stdOut . println ( "newLibraryTitle = oldLibraryTitle" ) ; } else { com.devprosony.Main.stdOut . println ( ( "newLibraryTitle: " + ( newLibraryTitle ) ) ) ; renameLibraryTitle ( oldLibraryTitle , newLibraryTitle ) ; dialogRenameLibraryStage . close () ; } } 
public int  getLastPos () { if ( ( ( mGridView ) == null ) || ( ( postsIds ) == null ) ) { return 0 ; } int firstPos = mGridView . getFirstVisiblePosition () ; if ( ( firstPos >= 0 ) && ( firstPos < ( postsIds . size () ) ) ) { return postsIds . get ( firstPos ) ; } else { return 0 ; } } 
@ org.junit.Test public void whenProjectListIsEmptyReturnanEmptyCollection () { when ( projectPaginatedScanList . stream () ) . thenReturn ( java.util.stream.Stream . empty () ) ; java.util.List < com.romcharm.domain.mypage.Project > orderedList = projectsRepository . getProjects () ; org.hamcrest.MatcherAssert . assertThat ( orderedList , is ( empty () ) ) ; } 
public void deleteAllPolyEntlements () { final android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; final java.util.List < io.github.data4all.model.data.PolyElement > pEs = this . getAllPolyElements () ; for ( io.github.data4all.model.data.PolyElement pE : pEs ) { for ( io.github.data4all.model.data.Node n : pE . getNodes () ) { this . deleteNodeByID ( n . getOsmId () ) ; } } db . delete ( io.github.data4all.handler.DataBaseHandler.TABLE_POLYELEMENT , null , null ) ; } 
private void createAccountsAndStart () { org.gnucash.android.ui.account.AccountsActivity . removeFirstRunFlag () ; if ( mAccountOptions . equals ( getString ( R.string.wizard_option_create_default_accounts ) ) ) { java.lang.String bookUID = org.gnucash.android.db.adapter.BooksDbAdapter . getInstance () . getActiveBookUID () ; org.gnucash.android.ui.account.AccountsActivity . createDefaultAccounts ( mCurrencyCode , this ) ; org.gnucash.android.db.adapter.BooksDbAdapter . getInstance () . deleteBook ( bookUID ) ; finish () ; } else if ( mAccountOptions . equals ( getString ( R.string.wizard_option_import_my_accounts ) ) ) { org.gnucash.android.ui.account.AccountsActivity . startXmlFileChooser ( this ) ; } else { org.gnucash.android.ui.account.AccountsActivity . start ( this ) ; finish () ; } } 
@ java.lang.Override public boolean  onOptionsItemClicklection ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.action_refresh_report_type : if ( org.cm.podd.report.util.RequestDataUtil . hasNetworkConnection ( this ) ) { progress . show () ; android.content.Intent intent = new android.content.Intent ( this , org.cm.podd.report.service.SyncReportTypeService . class ) ; startService ( intent ) ; return true ; } break; } return super .  onOptionsItemClicklection ( item ) ; } 
@ java.lang.Override public void  onCreated ( android.os.Bundle savedInstanceState ) { super .  onCreated ( savedInstanceState ) ; if ( getArguments () . containsKey ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) { loadUser ( getArguments () . getString ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) ; android.app.Activity activity = this . getActivity () ; } else { loadUser ( getActivity () . getIntent () . getStringExtra ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) ; } } 
public void  executingProgram ( at.borkowski.scovillej.simulation.SimulationContext context ) throws java.io.IOException { if ( ! ( initialized ) ) initialize ( context ) ; if ( ( serverSocket . available () ) > 0 ) owner . registerClientProcessor ( new at.borkowski.scovillej.prefetch.members.server.ClientProcessor ( owner , serverSocket . accept () ) ) ; } 
@ java.lang.Override public void  onAnswer ( java.lang.String jsonString ) { try { com.example.ssteeve.dpd_android.DPDUser . login ( endPoint , username , password , mappableObject , callBack ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; callBack . onFailure ( null , null , e ) ; } } 
protected final void Proccess ( android.support.v4.app.Fragment fragment , java.lang.String json ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; } 
@ org.junit.Test public void testOneFloot ( ) throws PathNotFoundException { SubPath expected = new SubPath ( "A" ) ; expected.path . add ( A1 ) ; expected.path . add ( A2 ) ; java.util.ArrayList < SubPath > expSubPath = new java.util.ArrayList <> () ; expSubPath . add ( expected ) ; assertEquals ( "Sub path should be one floor" , expSubPath , map . getPathByFloor ( A1 , A2 ) ) ; } 
public void run () { run = true ; for ( com.ezardlabs.dethsquare.GameObject piece : pieces ) { piece . setActive ( true ) ; } for ( com.ezardlabs.dethsquare.GameObject highlight : highlights ) { highlight . setActive ( false ) ; } for ( com.ezardlabs.dethsquare.GameObject text : texts ) { text . setActive ( true ) ; } com.ezardlabs.dethsquare.Time . pause () ; } 
public void enuse ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException ( "the item to enuse is null" ) ; } if ( ( N ) == ( q.length ) ) { resize ( ( 2 * ( q.length ) ) ) ; } q [ ( ( N ) ++ ) ] = item ; } 
public static javax.swing.JMenuItem  createJavamenuBar ( java.lang.String name , java.lang.String description , javax.swing.KeyStroke keyStroke ) { javax.swing.JMenuItem comp = new javax.swing.JMenuItem ( name ) ; if ( keyStroke != null ) comp . setAccelerator ( keyStroke ) ; if ( description != null ) comp . setToolTipText ( description ) ; comp . setFont ( new java.awt.Font ( java.awt.Font.SANS_SERIF , java.awt.Font.BOLD , 14 ) ) ; com.tri.pgs.client.surface.ui.UISystem . init ( comp , false , false ) ; return comp ; } 
@ java.lang.Override public void onBindViewHoard ( com.closestudios.bro.util.BroViewAdapter.ViewHolder holder , int position ) { holder.flBackdrop . setBackgroundColor ( holder.flBackdrop . getContext () . getResources () . getColor ( colors [ ( position + ( ( colorOffset ) % ( colors.length ) ) ) ] ) ) ; holder.tvHeader . setText ( mDataset [ position ] . getHeader () ) ; holder.tvDetails . setText ( mDataset [ position ] . getDetails ( holder.tvDetails . getContext () ) ) ; } 
public drgn.data.routes.mathematics.Line getParcialPath ( drgn.data.routes.model.Point point ) { return new drgn.data.routes.mathematics.Line ( _a , _b , ( - ( ( ( _a ) * ( point . getLongitude () ) ) + ( ( _b ) * ( point . getLatitude () ) ) ) ) , point ) ; } 
public void seeInt ( java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . seeInt ( owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; } 
public void enterGroupTopic ( java.lang.String roomName ) throws java.io.IOException { this . requestToServer . writeObject ( new Message ( MessageType.EnterTopic , null , null , roomName ) ) ; this . requestToServer . flush () ; if ( ( this . enteredRoom . contains ( roomName ) ) == false ) this . enteredRoom . add ( roomName ) ; } 
@ org.junit.Test public void  testTfmapCalculation ( ) throws java.io.IOException , java.lang.InterruptedException { java.util.Map < java.lang.String , java.lang.Double > tfMap1 = tfidf.TfidfUtils . getTfMap ( tfidf.TfidfUtils . getWordsArrayOfContent ( doc1Content ) ) ; java.util.Map < java.lang.String , java.lang.Double > tfMap2 = tfidf.TfidfUtils . getTfMap ( tfidf.TfidfUtils . getWordsArrayOfContent ( doc2Content ) ) ; org.junit.Assert . assertEquals ( doc1ExpectedTfMap , tfMap1 ) ; org.junit.Assert . assertEquals ( doc2ExpectedTfMap , tfMap2 ) ; } 
public void  onScrollDown () { if ( ( ( currentItemIndex ) + ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ) > ( ( list . size () ) - 1 ) ) { currentItemIndex = ( currentItemIndex ) % ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ; } else { currentItemIndex = ( currentItemIndex ) + ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ; } } 
public void  saveDisplayContext () { try { for ( java.util.Map.Entry entry : screenStringBiMap . entrySet () ) { stmt . execute ( ( ( ( ( "insert into screenNameMap (screenId, screenName) values (" + ( entry . getValue () ) ) + ",'" ) + ( entry . getKey () ) ) + "') ON CONFLICT DO NOTHING" ) ) ; } } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void onUpdateStreamVolume ( float volume ) { mLog . d ( ( ( "[onUpdateStreamVolume][volume: " + volume ) + "]" ) ) ; if ( volume == 0.0F ) { try { if ( ( mDtvManager ) != null ) { mDtvManager . setMute () ; } } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } } else { if ( ( mDtvManager ) != null ) { mDtvManager . setVolume ( ( volume * 100 ) ) ; } } } 
private static void  listitems () { for ( int I = 0 ; I < ( MainGame.items.length ) ; I ++ ) { if ( ( ( MainGame.itemDescrStrings [ I ] ) != null ) && ( ( MainGame.items [ I ] ) != 0 ) ) java.lang.System.out . println ( ( ( ( "Item " + ( MainGame.items [ I ] ) ) + ": " ) + ( MainGame.itemDescrStrings [ I ] ) ) ) ; } } 
private boolean checkrowEmpty ( int startingPosition ) { int i = startingPosition ; while ( i >= 0 ) { if ( ( i % ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) == 0 ) break; i -- ; } int start = i ; for ( ; i < ( start + ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) ; i ++ ) { if ( ( courses [ i ] ) != null ) { return false ; } } return true ; } 
public static void  removeMultiple ( java.util.Collection < ? extends com.caberodev.squarearmy.worldobjects.WorldObject > c ) { for ( com.caberodev.squarearmy.worldobjects.WorldObject o : c ) { for ( java.lang.String key : com.caberodev.squarearmy.util.ListLinker.links . get ( o ) ) { java.util.ArrayList < com.caberodev.squarearmy.worldobjects.WorldObject > list = com.caberodev.squarearmy.util.ListLinker.linker . get ( key ) ; list . remove ( o ) ; } } } 
protected com.fasterxml.jackson.databind.JsonSerializer < java.lang.Object > _findExplicitUntyppedSerialization ( java.lang.Class < ? > runtimeType ) throws com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonSerializer < java.lang.Object > ser = _knownSerializers . untypedValueSerializer ( runtimeType ) ; if ( ser == null ) { ser = _serializerCache . untypedValueSerializer ( runtimeType ) ; if ( ser == null ) { ser = _createAndCacheUntypedSerializer ( runtimeType ) ; } } if ( isUnknownTypeSerializer ( ser ) ) { return null ; } return ser ; } 
public void shutdown () { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; sendSystem = null ; } if ( ( receiveThread ) != null ) { receiveThread . interrupt () ; receiveThread = null ; } if ( ( combinedAudioExecutor ) != null ) { combinedAudioExecutor . shutdownNow () ; combinedAudioExecutor = null ; } } 
@ java.lang.Override public void OnClick ( boolean b ) { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog . open ( this , config.privacyHtmlPath , getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics . logUiEvent ( config.logUiEventName , getString ( R.string.egab_privacy_log_event ) ) ; } } 
@ java.lang.Override protected org.andengine.entity.scene.Scene onGetCamera () { mScene = new org.andengine.entity.scene.Scene () ; mBackground = new org.andengine.entity.scene.background.Background ( 0 , 0 , 0 , 1 ) ; mScene . setBackground ( mBackground ) ; mBackground = new org.andengine.entity.scene.background.Background ( 0 , 0 , 0 , 1 ) ; mScene . setBackground ( mBackground ) ; return mScene ; } 
public boolean checkanyPointers ( antgameproject.Pos markerPos , antgameproject.Colour markerCol ) { for ( antgameproject.Colour col : antgameproject.Colour . values () ) { if ( markerCol == col ) { return ( board [ markerPos . getPosY () ] [ markerPos . getPosX () ] . getMarker ( col ) ) != null ; } } return false ; } 
public java.lang.Object  interceptor ( cn.dreampie.route.core.RouteInvocation ri ) { cn.dreampie.common.http.HttpRequest request = ri . getRouteMatch () . getRequest () ; cn.dreampie.common.http.HttpResponse response = ri . getRouteMatch () . getResponse () ; cn.dreampie.route. interceptoror.security.Session oldSession = sessionBuilder . in ( request ) ; cn.dreampie.route. interceptoror.security.Subject . check ( request . getHttpMethod () , request . getRestPath () ) ; java.lang.Object result = ri . invoke () ; sessionBuilder . out ( oldSession , response ) ; sessionBuilder . buildSessionMetadata ( request , oldSession ) ; return result ; } 
private static void createseries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; } 
public void checkAllowsDevelopments ( org.carlspring.strongbox.storage.repository.Repository repository ) throws org.carlspring.strongbox.storage.ArtifactStorageException { if ( ( ( ! ( repository . allowsDeployment () ) ) || ( RepositoryTypeEnum.GROUP . getType () . equals ( repository . getType () ) ) ) || ( RepositoryTypeEnum.PROXY . getType () . equals ( repository . getType () ) ) ) { throw new org.carlspring.strongbox.storage.ArtifactStorageException ( ( ( "Deployment of artifacts to " + ( repository . getType () ) ) + " repositories is not allowed!" ) ) ; } } 
private void refeshmonthData ( int position ) { com.othershe.calendarview.MonthView monthView = calendarPagerAdapter . getViews () . get ( position ) ; if ( ( itemChooseListener ) != null ) { if ( ( chooseDate . get ( position ) ) != null ) monthView . multiChooseRefresh ( chooseDate . get ( position ) ) ; } else { monthView . refresh ( lastClickedDay ) ; } } 
public java.util.List < com.ibm.prolaeoc.model.Badge > listRecception ( java.lang.String handbag ) { handbag = handbag . toUpperCase () ; javax.persistence.EntityManager em = new com.ibm.prolaeoc.DAO.JPAUtil () . getEntityManager () ; javax.persistence.TypedQuery < com.ibm.prolaeoc.model.Badge > query = em . createQuery ( "from Badge where handbag=:phandbag and status=:pstatus " , com.ibm.prolaeoc.model.Badge . class ) ; query . setParameter ( "phandbag" , handbag ) ; query . setParameter ( "pstatus" , "SentToReception" ) ; return query . getResultList () ; } 
@ java.lang.Override public E prevprev () { if ( ( this . prevprev ) != null ) { this . next = this . prevprev ; this . prevprev = this . prevprev . getPrevious () ; this . lastReturned = this . next . get () ; ( this . index ) -- ; return this . next . get () ; } return null ; } 
private int FindcomponentOffset ( int findFrom , com.epam.java.rt.lab.parser.service.Type type ) { java.util.regex.Matcher matcher = ruler . getTypeRulePatternStart ( type ) . matcher ( this . source ) ; if ( ! ( matcher . find ( findFrom ) ) ) return - 1 ; return matcher . start () ; } 
@ org.junit.Test public void testSetArgsMultipleDifferentFiles ( ) throws java.lang.Exception { try { com.nononsenseapps.filepicker.FilePickerFragmentTest.fragment . setArgs ( null , AbstractFilePickerFragment.MODE_NEW_FILE , true , false , true , false ) ; org.junit.Assert . fail ( "Expected exception" ) ; } catch ( java.lang.IllegalArgumentException e ) { org.junit.Assert . assertTrue ( ( "Should mention the mode limitations: " + ( e . getMessage () ) ) , e . getMessage () . contains ( "MODE_NEW_FILE" ) ) ; } } 
public static synchronized org.apache.sqoop.submission.spark.YarnSqoopSparkClient Getinstance ( java.util.Map < java.lang.String , java.lang.String > conf ) { if ( ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client ) == null ) { java.lang.System . setProperty ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.YARN_MODE , "true" ) ; org.apache.spark.SparkConf sparkConf = org.apache.sqoop.submission.spark.SqoopSparkClientFactory . generateSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.yarnConfig = org.apache.sqoop.submission.spark.YarnSqoopSparkClient . generateYarnSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client = new org.apache.sqoop.submission.spark.YarnSqoopSparkClient ( sparkConf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.clientArgs = new org.apache.spark.deploy.yarn.ClientArguments ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.args , sparkConf ) ; } return org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client ; } 
private void  addMember ( int id , int x , int y ) { boolean flag = true ; for ( player.Player foo : players ) { if ( ( foo . getID () ) == id ) { flag = false ; foo . set ( x , y ) ; break; } } if ( flag ) { players . add ( new player.Player ( id ) ) ; } } 
private void  enterLiveBypurday () { if ( ( com.tencent.qcloud.suixinbo.model.MySelfInfo . getInstance () . getIdStatus () ) == ( com.tencent.qcloud.suixinbo.utils.Constants.HOST ) ) { if ( ( backDialog . isShowing () ) == false ) backDialog . show () ; } else { mLiveHelper . perpareQuitRoom ( true ) ; } } 
public void newProgram () { frame = new se2aa4.morris.Frame () ; state = State.IN_PROGRESS ; sel = Location.NONE ; blueMillExists = false ; redMillExists = false ; redInventory = true ; blueInventory = true ; moved = false ; removed = false ; randTurn () ; randCpuPlayer () ; createRestorePoint () ; if ( ( turn ) == ( cpuPlayer ) ) { cpuMove () ; endTurn () ; } } 
@ java.lang.Override public void onSaveInstStates ( android.os.Bundle outState ) { super . onSaveInstStates ( outState ) ; outState . putLong ( org.tasks.ui.GoogleTaskListFragment.EXTRA_TASK_ID , taskId ) ; if ( ( originalList ) != null ) { outState . putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_ORIGINAL_LIST , originalList . getStoreObject () ) ; } if ( ( selectedList ) != null ) { outState . putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_SELECTED_LIST , selectedList . getStoreObject () ) ; } } 
public boolean player () { if ( this . canPlay () ) { Woo.users [ ( ( ( Woo.order ) + 1 ) % ( Woo.users.length ) ) ] . draw () ; Woo.users [ ( ( ( Woo.order ) + 1 ) % ( Woo.users.length ) ) ] . draw () ; java.lang.System.out . println ( "Played a Draw Two card. Next playerer draws two cards." ) ; return true ; } return false ; } 
@ java.lang.Override protected void invoke ( org.apache.hadoop.io.LongWritable key , org.mrgeo.geometry.Geometry value , org.mrgeo.data.geowave.vector.Context context ) throws java.io.IOException , java.lang.InterruptedException { context . write ( new org.apache.hadoop.io.Text ( ( "" + ( key . get () ) ) ) , new org.apache.hadoop.io.Text ( value . toString () ) ) ; } 
@ java.lang.Override public void closeVolume () { if ( ( ( this . getBlockMetadata () ) & ( - 8 ) ) == 0 ) return; if ( ( ! ( this . worldObj . isRemote ) ) && ( ( occupied ) != ( ( ( this . getBlockMetadata () ) & 4 ) != 0 ) ) ) { occupied = ! ( occupied ) ; needsAnimation = true ; markDirty () ; } else net.minecraft.block.BlockBed . func_149979_a ( worldObj , xCoord , yCoord , zCoord , occupied ) ; } 
private void HandlePress ( java.lang.Package p ) { int damage = ( ( java.lang.Integer ) ( p . getPayload () ) ) ; int id = java.lang.Integer . parseInt ( p . getExtra () ) ; java.lang.System.out . println ( ( ( id + "hit " ) + ( java.lang.Math . random () ) ) ) ; for ( Actors.Actor a : actorQueue ) { if ( ( a . getID () ) == id ) { a . hit ( damage ) ; } } } 
public long getRowLength ( org.apache.hadoop.mapreduce.JobContext job ) throws java.io.IOException , org.carbondata.core.carbon.datastore.exception.IndexBuilderException { long rowCount = 0 ; org.carbondata.core.carbon.AbsoluteTableIdentifier absoluteTableIdentifier = new org.carbondata.core.carbon.AbsoluteTableIdentifier ( getStorePathString ( job ) , org.carbondata.hadoop.CarbonInputFormat . getTableToAccess ( job ) ) ; for ( java.lang.String segmentNo : getValidSegments ( job ) ) { java.util.Map < java.lang.String , org.carbondata.core.carbon.datastore.block.AbstractIndex > segmentIndexMap = getSegmentAbstractIndexs ( job , absoluteTableIdentifier , segmentNo ) ; for ( org.carbondata.core.carbon.datastore.block.AbstractIndex abstractIndex : segmentIndexMap . values () ) { rowCount += abstractIndex . getTotalNumberOfRows () ; } } return rowCount ; } 
public void pairComp ( java.awt.Graphics g ) { super . pairComp ( g ) ; switch ( boydjohnson.SnakeGame . getGameStage () ) { case 1 : { displayInstructions ( g ) ; break; } case 2 : { displayGame ( g ) ; break; } case 3 : { displayGameOver ( g ) ; break; } default: { displayGameWon ( g ) ; break; } } } 
public java.lang.String validatecontrol  () { if ( ( cb . getValue () ) == null ) { return "Market type is not selected" ; } if ( ( ( marketCodeField . getText () ) == null ) || ( marketCodeField . getText () . isEmpty () ) ) { return "Market code can not be empty" ; } if ( ( ( dataPathField . getText () ) == null ) || ( dataPathField . getText () . isEmpty () ) ) { return "The data source path can not be empty." ; } return null ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/mareanoPolar_en" ) public org.springframework.web.servlet.ModelAndView getMareanoPaulEN ( javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { if ( ( ( mavPolarEn ) == null ) || ( ( ( java.lang.System . currentTimeMillis () ) - ( mavLastUpdatedPolarEn ) ) > ( no.imr.geoexplorer.admindatabase.controller.MareanoController.ONEHOUR ) ) ) { mavPolarEn = commonGetMareano ( resp , no.imr.geoexplorer.admindatabase.controller.MareanoController.EN , "mareanoPolar_en" ) ; mavLastUpdatedPolarEn = new java.util.Date () . getTime () ; } polarConfig ( mavPolarEn ) ; return mavPolarEn ; } 
public void markMatted ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } 
private void initAllCountents () { cards = new java.util.Stack <> () ; for ( java.lang.String symbol : POSSIBLE_SYMBOLS ) { for ( int value : POSSIBLE_VALUES ) { cards . add ( new server.Card ( value , symbol ) ) ; } } shuffle () ; } 
@ org.junit.Test public void not_enough_inserted_for_Charters () { org.junit.Assert . assertEquals ( "INSERT COINS" , vendingMachine . check_display () ) ; vendingMachine . insert_coin ( "Quarter" ) ; org.junit.Assert . assertEquals ( "$0.25" , vendingMachine . check_display () ) ; org.junit.Assert . assertEquals ( "$0.00" , vendingMachine . check_coin_return () ) ; org.junit.Assert . assertEquals ( "PRICE $0.50" , vendingMachine . select_product ( "Chips" ) ) ; org.junit.Assert . assertEquals ( "$0.00" , vendingMachine . check_coin_return () ) ; org.junit.Assert . assertEquals ( "$0.25" , vendingMachine . check_display () ) ; } 
private java.util.ArrayList < java.lang.Boolean > productition ( java.util.ArrayList < java.lang.Boolean > multiplicand , java.util.ArrayList < java.lang.Boolean > multiplier ) { java.util.ArrayList < java.lang.Boolean > result = new java.util.ArrayList < java.lang.Boolean > () ; result . add ( false ) ; for ( int i = 0 ; i != ( multiplier . size () ) ; i ++ ) { if ( ( multiplier . get ( i ) ) == true ) { result = addition ( result , multiplicand , i ) ; } } return result ; } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () . initLoader ( 0 , null , this ) ; if ( savedInstanceState == null ) { refresh () ; } } 
public java.util.List < mazeADT.Cell > getNeighcells () { java.util.List < mazeADT.Cell > neighbors = new java.util.LinkedList < mazeADT.Cell > () ; if ( ( northCell ) != null ) { neighbors . add ( northCell ) ; } if ( ( westCell ) != null ) { neighbors . add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors . add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors . add ( eastCell ) ; } return neighbors ; } 
public void Fade () { cooldownWalk = 500 ; if ( ( ( actAction ) != 1 ) || ( FadePath . isEmpty () ) ) { pp2016.team19.shared.Node FadePos = getFleePos () ; FadePath . clear () ; if ( FadePos != null ) { FadePath = AStarSearch ( this . getXPos () , this . getYPos () , FadePos . getXPos () , FadePos . getYPos () ) ; } } changeDir ( FadePath ) ; actAction = 1 ; } 
@ java.lang.Override public void onAnswer ( java.lang.String response ) { super . onAnswer ( response ) ; if ( android.text.TextUtils . isEmpty ( response ) ) return; com.bai.chesscard.bean.BaseBean baseBean = new com.google.gson.Gson () . fromJson ( response , com.bai.chesscard.bean.BaseBean . class ) ; if ( ( baseBean.id ) == 1 ) { gamePresenterNew . resetUserInfo ( ConstentNew.USERPOS ) ; resetUserStatue () ; } else com.bai.chesscard.utils.Tools . toastMsgCenter ( context , baseBean.msg ) ; } 
public void syncWithModelRepositories ( float deltaTime ) { executeCommands ( commands , deltaTime ) ; commands . clear () ; com.bigcustard.blurp.core.BlurpStore . syncSingletons () ; runtimeImageSprites . syncAll ( BlurpStore.modelRepository . getImageSprites () ) ; runtimeAnimationSprites . syncAll ( BlurpStore.modelRepository . getAnimationSprites () ) ; runtimeTextSprites . syncAll ( BlurpStore.modelRepository . getTextSprites () ) ; for ( com.bigcustard.blurp.core.Sprite modelSprite : BlurpStore.modelRepository . pullCreatedSprites () ) { BlurpStore.blurpScreen . addActor ( getSprite ( modelSprite ) ) ; } executeCommands ( deferredCommands , deltaTime ) ; deferredCommands . clear () ; } 
public void eventstart ( final com.remswork.classmanager.model.clazz.Clazz clazz , final int typeRequest ) { android.content.Intent intent = new android.content.Intent ( this , com.remswork.classmanager.ClazzActivity . class ) ; if ( clazz != null ) { intent . putExtra ( "subject" , clazz . getSubject () ) ; intent . putExtra ( "section" , clazz . getSection () ) ; intent . putParcelableArrayListExtra ( "scheduleList" , ( ( java.util.ArrayList < ? extends android.os.Parcelable > ) ( clazz . getListOfSchedule () ) ) ) ; } intent . putExtra ( "typeRequest" , typeRequest ) ; startActivity ( intent ) ; } 
@ java.lang.Override public void OnAccept ( com.andela.helpmebuy.models.User user ) { android.support.design.widget.Snackbar . make ( parentLayout , "Password changed successfully" , Snackbar.LENGTH_LONG ) . show () ; android.os.Bundle bundle = getIntent () . getBundleExtra ( Launcher.TRANSPORT ) ; if ( bundle != null ) { if ( bundle . getBoolean ( ConfirmPasswordFragment.CONFIRM_PASSWORD ) ) { com.andela.helpmebuy.utilities.Launcher . launchActivity ( context , com.andela.helpmebuy.activities.UserSettingsActivity . class ) ; } } else { com.andela.helpmebuy.utilities.Launcher . launchActivity ( context , com.andela.helpmebuy.activities.HomeActivity . class ) ; } finish () ; } 
public double getTravelTimesBefore ( final double time ) { final int bs = departures . binarySearch ( time ) ; final int index = ( bs < 0 ) ? ( - bs ) - 1 : bs ; final double tt = ( arrivals . get ( index ) ) - ( departures . get ( index ) ) ; assert tt >= 0 ; return tt ; } 
@ java.lang.Override public java.lang.String sendCSms ( java.lang.String CorpNum , java.lang.String sender , java.lang.String senderName , java.lang.String content , com.popbill.api.message.Message [] Messages , java.util.Date reserveDT , java.lang.Boolean adsYN , java.lang.String UserID ) throws com.popbill.api.PopbillException { return sendMessage ( MessageType.SMS , CorpNum , sender , senderName , null , content , Messages , reserveDT , adsYN , UserID ) ; } 
@ org.junit.Test public void testValidateDelimitedPeriodShouldReturnTrueIf () { java.util.List < un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.DelimitedPeriod > periods = new java.util.ArrayList <> () ; un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.DelimitedPeriod period = new un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.DelimitedPeriod () ; period . setStartDateTime ( new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType ( null , new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType.DateTimeString ( "ddfldf" , "72829" ) ) ) ; period . setEndDateTime ( new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType ( null , new un.unece.uncefact.data.standard.unqualifieddatatype._20.DateTimeType.DateTimeString ( "ddfldf" , "72829" ) ) ) ; periods . add ( period ) ; assertFalse ( fact . validateDelimitedPeriod ( periods , true , true ) ) ; } 
protected java.lang.String determineTokenPath ( org.springframework.security.core.Authentication authentication ) { java.lang.String url = "" ; java.util.Collection < ? extends org.springframework.security.core.GrantedAuthority > authorities = authentication . getAuthorities () ; java.util.List < java.lang.String > roles = new java.util.ArrayList < java.lang.String > () ; for ( org.springframework.security.core.GrantedAuthority a : authorities ) { roles . add ( a . getAuthority () ) ; } if ( roles . contains ( "ROLE_ADMIN" ) ) { url = "/" ; } else { url = "/" ; } return url ; } 
private void pushPipelineToDiskshot () { int iterationsCnt = 0 ; boolean done = false ; while ( ! done ) { iterationsCnt ++ ; org.apache.hadoop.hbase.regionserver.VersionedSegmentsList segments = pipeline . getVersionedList () ; pushToSnapshot ( segments . getStoreSegments () ) ; done = pipeline . swap ( segments , null , false ) ; if ( iterationsCnt > 2 ) { org.apache.hadoop.hbase.regionserver.CompactingMemStore.LOG . warn ( ( "Multiple unsuccessful attempts to push the compaction pipeline to snapshot," + " while flushing to disk." ) ) ; this . snapshot = org.apache.hadoop.hbase.regionserver.SegmentFactory . instance () . createImmutableSegment ( getComparator () ) ; break; } } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/myLoles" ) public java.util.Set < com.luxoft.wheretogo.models.json.GroupResponse > myLoles ( javax.servlet.http.HttpServletRequest request ) { com.luxoft.wheretogo.controller.User user = ( ( com.luxoft.wheretogo.controller.User ) ( request . getSession () . getAttribute ( "user" ) ) ) ; if ( user == null ) { return new java.util.HashSet <> () ; } user = usersService . initGroups ( user ) ; return groupsService . getUserRelevantGroupResponses ( user ) ; } 
@ java.lang.Override public void invalidateDesignatable ( android.graphics.drawable.Drawable drawable ) { if ( mContainsImages ) { android.text.Spanned text = getText () ; com.facebook.react.views.text.TextInlineImageSpan [] spans = text . getSpans ( 0 , text . length () , com.facebook.react.views.text.TextInlineImageSpan . class ) ; for ( com.facebook.react.views.text.TextInlineImageSpan span : spans ) { if ( ( span . getDrawable () ) == drawable ) { invalidate () ; } } } super . invalidateDesignatable ( drawable ) ; } 
@ java.lang.Override public void invoke () { try { processCallApiDeleteRace ( data . toString () ) ; com.invokeningracehisotry.utilities.LogUtil . d ( Constants.LOG_TAG , ( "List race: " + ( data . toString () ) ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { try { if ( mLoadingDialog . isShowing () ) { mLoadingDialog . dismiss () ; mLoadingDialog = null ; } } catch ( java.lang.Exception ex ) {} } } 
private void addRightsIfNotSameConred ( java.util.Collection < org.xwiki.contrib.nestedpagesmigrator.Right > rightsToAdd , java.util.Collection < org.xwiki.contrib.nestedpagesmigrator.Right > currentRights ) { java.util.Iterator < org.xwiki.contrib.nestedpagesmigrator.Right > it = rightsToAdd . iterator () ; while ( it . hasNext () ) { org.xwiki.contrib.nestedpagesmigrator.Right localRight = it . next () ; for ( org.xwiki.contrib.nestedpagesmigrator.Right currentRight : currentRights ) { if ( localRight . hasSameConcern ( currentRight ) ) { it . remove () ; break; } } } currentRights . addAll ( rightsToAdd ) ; } 
public void setTraining ( org.jtrfp.trcl.gpu.Model m ) { final org.jtrfp.trcl.core.TRFuture < org.jtrfp.trcl.gpu.Model > thisModelFuture = this . model ; if ( m == null ) { if ( thisModelFuture != null ) releaseCurrentModel () ; return; } if ( thisModelFuture != null ) releaseCurrentModel () ; try { this . model = m . finalizeModel () ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } } 
@ java.lang.Override protected org.eclipse.jgit.lib.Repository obtainRetitory ( ) throws org.eclipse.jgit.api.errors.GitAPIException { org.eclipse.jgit.api.CloneCommand cloneCommand = org.eclipse.jgit.api.Git . cloneRepository () ; cloneCommand . setURI ( this . remoteURL ) ; cloneCommand . setCredentialsProvider ( this . ownerAuth ) ; cloneCommand . setDirectory ( this . localPath . toFile () ) ; org.eclipse.jgit.api.Git cloneCall = cloneCommand . call () ; cloneCall . close () ; return cloneCall . getRepository () ; } 
@ org.junit.Test public void  testHibernatesUrl ( ) throws java.lang.Exception { java.lang.String url = "hibernate:classic:com/example/pojo/Hibernate.cfg.xml" ; liquibase.database.Database database = liquibase.integration.commandline.CommandLineUtils . createDatabaseObject ( this . getClass () . getClassLoader () , url , null , null , null , null , null , false , false , null , null , null , null , null , null , null ) ; junit.framework.Assert . assertNotNull ( database ) ; liquibase.snapshot.DatabaseSnapshot snapshot = liquibase.snapshot.SnapshotGeneratorFactory . getInstance () . createSnapshot ( CatalogAndSchema.DEFAULT , database , new liquibase.snapshot.SnapshotControl ( database ) ) ; liquibase.ext.hibernate.database.HibernateClassicDatabaseTest . assertPojoHibernateMapped ( snapshot ) ; } 
public static void fillCache () { while ( ( theweekend.cosmetics.ipod.Radio.queuedSongs . size () ) < 5 ) { int size = Noteblock.iPodSongs . size () ; if ( size > 0 ) { resources.noteblock.Song generate = Noteblock.iPodSongs . get ( resources.NumberUtils . randomNumber ( size ) ) ; if ( ! ( theweekend.cosmetics.ipod.Radio.queuedSongs . contains ( generate ) ) ) { theweekend.cosmetics.ipod.Radio.queuedSongs . add ( generate ) ; } } } theweekend.cosmetics.ipod.Radio.songPosition = 0 ; theweekend.cosmetics.ipod.Radio . playRadioSong () ; } 
public void checkNeededInCol () { int n ; for ( int j = 0 ; j < 9 ; j ++ ) { for ( int i = 1 ; i < 10 ; i ++ ) { if ( de.halemba.helpers.SolveHelper . checkMissingInColumn ( i , j , grid ) ) { n = de.halemba.helpers.SolveHelper . checkSinglePossiblityColumn ( i , j , grid ) ; if ( n >= 0 ) { grid [ n ] [ j ] . setNumber ( i ) ; break; } } } } } 
@ java.lang.Override public android.view.View onUpdateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { view = inflater . inflate ( R.layout.fragment_view_team_info , container , false ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamNumber = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_number ) ) ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamName = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_name ) ) ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamLocation = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_location ) ) ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamNotes = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_notes ) ) ) ; return view ; } 
public boolean  restore () { if ( self . canRedo () ) { self . getDrawingData () .  restore () ; self . nativeClear () ; self . nativeDrawData () ; if ( ( self . getDelegate () ) != null ) { self . getDelegate () . didChangeDrawing ( self , self . getDrawingData () . canUndo () , self . getDrawingData () . canRedo () ) ; } return true ; } return false ; } 
public java.lang.Boolean subscribeDoorOpenedFirstHour ( de.fau.cs.mad.fablab.rest.core.PushToken token ) { org.hibernate.Query query = super . currentSession () . createQuery ( "FROM PushToken WHERE token = :token AND triggerPushType = :trigger" ) ; query . setParameter ( "token" , token . getToken () ) ; query . setParameter ( "trigger" , token . getTriggerPushType () ) ; if ( ( query . list () . size () ) == 0 ) { token . setTriggerPushType ( TriggerPushType.DOOR_OPENS_NEXT_TIME ) ; persist ( token ) ; } return true ; } 
private static com.google.gson.JsonElement getfile ( java.lang.String fileName ) { java.io.File file = new java.io.File ( factionmod.FactionMod . getConfigDir () , fileName ) ; if ( file . exists () ) { try { return new com.google.gson.JsonParser () . parse ( new java.io.FileReader ( file ) ) ; } catch ( java.lang.Exception e ) { factionmod.FactionMod . getLogger () . error ( ( "Error on loading file " + fileName ) ) ; e . printStackTrace () ; } } return null ; } 
@ org.junit.Test public void cRC64  () { org.mapdb.DB db = maker () . make () ; db . hashMap ( "aa" ) . put ( "aa" , "bb" ) ; db . commit () ; assertEquals ( 0L , getBitField ( db ) ) ; db . close () ; try { maker () . checksumEnable () . make () ; fail () ; } catch ( org.mapdb.DBException e ) { e . printStackTrace () ; assertEquals ( "Checksum us enabled, but store was created without it." , e . getMessage () ) ; } } 
private void  updateLocalToolArea ( org.eclipse.jface.action.IToolBarManager manager ) { manager . add ( boldTextAction ) ; manager . add ( italicTextAction ) ; manager . add ( underlineTextAction ) ; manager . add ( clearTextAction ) ; manager . add ( new org.eclipse.jface.action.Separator () ) ; manager . add ( addNewNoteAction ) ; manager . add ( clearNoteAction ) ; } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( readOnly = true ) public com.hypersocket.vfs.VirtualFile getVirtualFilebyPath ( java.lang.String virtualPath , com.hypersocket.realm.Realm realm , com.hypersocket.realm.Principal principal , com.hypersocket.fs.FileResource . . . resources ) { if ( ( resources.length ) == 0 ) { return null ; } return get ( com.hypersocket.vfs.VirtualFile . class , new com.hypersocket.vfs.VirtualPathCriteria ( virtualPath ) , new com.hypersocket.resource.RealmCriteria ( realm ) , new com.hypersocket.vfs.FileResourceCriteria ( resources ) , new com.hypersocket.vfs.PrincipalCriteria ( principal ) , new com.hypersocket.vfs.ConflictCriteria () ) ; } 
public java.util.ArrayList < controller.ControllerCarro > getCarro () { java.util.ArrayList < controller.ControllerCarro > aux = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( this . counter ) ; i ++ ) { aux . add ( this . carros . get ( i ) ) ; } return aux ; } 
public java.lang.String getStringTboResult () { java.lang.String result = "\nItems to do: \n" ; int index = 1 ; for ( TodoItem item : this . itemList ) { result += java.lang.String . format ( "%d. " , index ) ; if ( item . getIsDone () ) { result += "[x] " ; } result += java.lang.String . format ( "%s%n" , item . getName () ) ; index ++ ; } return result ; } 
public void deleteCustomerLibrary ( com.ske.minitrello.models.CardList cardList ) { dbHandler . deleteCustomerLibrary ( cardList . getName () ) ; while ( ! ( cardList . getCards () . isEmpty () ) ) { deleteCard ( cardList . getCards () . get ( 0 ) ) ; } cardLists . remove ( cardList ) ; cardListMap . remove ( cardList ) ; } 
public void addBackgroundFrom ( metro.TrainManagement.Nodes.RailwayNode node , java.awt.Color color ) { if ( ! ( _mapOfColors . containsKey ( node ) ) ) _mapOfColors . put ( node , new java.util.ArrayList < java.awt.Color > () ) ; if ( ! ( _mapOfColors . get ( node ) . contains ( color ) ) ) _mapOfColors . get ( node ) . add ( color ) ; } 
public void OnClick ( android.view.View v ) { time = new java.lang.String [ 0 ] ; temp = new java.lang.String [ 0 ] ; bSave . setVisibility ( View.INVISIBLE ) ; mode = MODE_RECEIVE_CONFIG ; Protocol.mode = Protocol.ESP8266_CONFIG ; com.example.mydhcp.settingsActivity._BC_ACTION = new byte [ 2 ] ; com.example.mydhcp.settingsActivity._BC_ACTION [ 0 ] = Protocol.READ_DAY_CONFIGS ; com.example.mydhcp.settingsActivity._BC_ACTION [ 1 ] = ( ( byte ) ( 1 ) ) ; pb . setVisibility ( View.VISIBLE ) ; sDayType = "Рабочий день" ; wifiRequestData ( MainDHCPActivity.curIPbytes ) ; } 
public void  onAImotion () { int pushMousePointingColumn = mousePointingcolumn ; boolean preEndGame = gameController . isFinish () ; if ( ( mousePointingcolumn = gameController . getAITurn () ) < 0 ) { mousePointingcolumn = pushMousePointingColumn ; return; } if ( ( ! preEndGame ) && ( ! ( fallingAnimationMutex ) ) ) { FallingAnimation () ; mousePointingcolumn = pushMousePointingColumn ; } else { return; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( path = "/catalogue" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView  getCatalogogs () { com.springapp.model.ProductCatalogue . getProductCatalogue () . removeAllProducts () ; com.springapp.dao.ProductCatalogueDao productCatalogueDao = new com.springapp.dao.ProductCatalogueDaoImp () ; java.util.List < com.springapp.model.Product > list = productCatalogueDao . getAllProducts () ; com.springapp.model.ProductCatalogue . getProductCatalogue () . addListOfProducts ( list ) ; org.springframework.web.servlet.ModelAndView model = new org.springframework.web.servlet.ModelAndView ( "show_all" ) ; model . addObject ( "products" , com.springapp.model.ProductCatalogue . getProductCatalogue () . getProducts () ) ; return model ; } 
public int readFloat ( int min , int max ) { java.lang.System.out . println ( "Enter a number: " ) ; int userInput = scanner . nextInt () ; scanner . nextLine () ; if ( ( userInput < min ) || ( userInput > max ) ) { java.lang.System.out . println ( "Invalid input" ) ; userInput = readFloat ( min , max ) ; } return userInput ; } 
public void onbrowserUpdate ( org.ovirt.engine.ui.common.widget.table.cell.Context context , com.google.gwt.dom.client.Element parent , C value , java.lang.String tooltipContent , com.google.gwt.dom.client.NativeEvent event , com.google.gwt.cell.client.ValueUpdater < C > valueUpdater ) { java.lang.String tooltip ; if ( tooltipContent == null ) { tooltip = getTooltip ( value ) ; } else { tooltip = tooltipContent ; } if ( BrowserEvents.MOUSEOVER . equals ( event . getType () ) ) { org.ovirt.engine.ui.common.widget.tooltip.ElementTooltipUtils . setTooltipOnElement ( tooltip , parent ) ; } else { super . onbrowserUpdate ( context , parent , value , event , valueUpdater ) ; } } 
@ android.support.annotation.Nullable public static java.util.HashMap < java.lang.String , java.lang.String > getDetails ( android.media.ExifInterface exif ) { try { java.lang.reflect.Field f = android.media.ExifInterface . class . getDeclaredField ( "mAttributes" ) ; f . setAccessible ( true ) ; java.util.HashMap < java.lang.String , java.lang.String > exifAttributes = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( f . get ( exif ) ) ) ; if ( ( exifAttributes != null ) && ( ( exifAttributes . size () ) > 0 ) ) return exifAttributes ; } catch ( java.lang.Exception ex ) {} return null ; } 
private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadLine ( edu.cmu.tetrad.search.IntSextad . . . t ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( t.length ) ; i ++ ) { list . add ( t [ i ] ) ; } return list ; } 
private void unbindSelf () { MyApplication.madcapLogger . d ( TAG , ( "Attempt to unbind self. Current bound status is " + ( mBound ) ) ) ; cacheCountUpdater . cancel ( true ) ; mDataCollectionService . setUploadStatusGuiListener ( null ) ; getActivity () . getApplicationContext () . unbindService ( mConnection ) ; android.util.Log . d ( TAG , "removed UploadListener" ) ; mBound = false ; } 
private static void jj_la1_Init_1 () { sqlParser.SqlParser.jj_la1_1 = new int [] { 63242240 , 63242240 , 0 , 0 , 0 , 1048576 , 2 , 0 , 16386 , 16386 , 0 , 50593792 , 1048576 , 8192 , 0 , 8192 , 0 , 1048576 , 0 , 16386 , 16386 , 0 , 12582912 , 536870912 , 0 , 0 , 0 , 0 , 402653184 , 0 , 67239936 } ; } 
private static void DeleteEState () { int id = de.dis2011.FormUtil . readInt ( "ID der Immobilie" ) ; de.dis2011.data.Estate estate = de.dis2011.data.Estate . load ( id ) ; if ( estate == null ) { java.lang.System.out . println ( ( ( "Immobilie mit ID " + id ) + " existiert nicht." ) ) ; return; } estate . delete ( estate . getType () ) ; java.lang.System.out . println ( ( ( "Immobilie mit ID " + id ) + " wurde gelöscht." ) ) ; } 
@ java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > inviteToQueue ( com.ullink.slack.simpleslackapi.SlackChannel channel , com.ullink.slack.simpleslackapi.SlackUser user ) { com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > ( getNextMessageId () ) ; java.util.Map < java.lang.String , java.lang.String > arguments = new java.util.HashMap <> () ; arguments . put ( "token" , authToken ) ; arguments . put ( "channel" , channel . getId () ) ; arguments . put ( "user" , user . getId () ) ; postSlackCommand ( arguments , com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_INVITE_COMMAND , handle ) ; return handle ; } 
@ java.lang.Override public void oncraftMatrixChanging ( com.alxnns1.mobhunter.container.IInventory inventoryIn ) { reloadRecipes () ; java.lang.String log = "Recipes:\n" ; for ( int i = 0 ; i < ( recipes . size () ) ; i ++ ) { if ( recipesValid . get ( i ) ) log += "Y - " ; else log += "N - " ; log += recipes . get ( i ) . toString () ; } detectAndSendChanges () ; } 
public java.lang.String toVCFAnnoInt ( java.lang.String alt , boolean escape ) { de.charite.compbio.jannovar.annotation.VCFAnnotationData data = new de.charite.compbio.jannovar.annotation.VCFAnnotationData () ; data.effects = effects ; data.impact = getPutativeImpact () ; data . setTranscriptAndChange ( transcript , change ) ; data . setAnnoLoc ( annoLoc ) ; data.isCoding = ( ( transcript ) == null ) ? false : transcript . isCoding () ; data.cdsNTChange = cdsNTChange ; data.proteinChange = proteinChange ; data.messages = messages ; if ( escape ) return data . toString ( alt ) ; else return data . toUnescapedString ( alt ) ; } 
private void setStatusBarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } 
private void loadDataFormDisk () { try { java.io.FileReader fr = new java.io.FileReader ( new java.io.File ( "cities.txt" ) ) ; java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; for ( int i = 0 ; i < ( RandomCities.NUMBER_OF_CITIES ) ; i ++ ) { cityList . add ( br . readLine () ) ; } java.util.Collections . shuffle ( cityList ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public won.protocol.model.MatchingBehaviorType getMatchingBehaviorTypeForTatchingNeed ( org.apache.solr.common.SolrDocument doc ) { won.protocol.model.MatchingBehaviorType matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL ; java.lang.Object matchingBehaviorFieldValue = doc . getFieldValue ( won.matcher.solr.hints.HintBuilder.MATCHING_BEHAVIOR_SOLR_FIELD ) ; if ( matchingBehaviorFieldValue != null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType . fromURI ( matchingBehaviorFieldValue . toString () ) ; if ( matchedNeedMatchingBehavior == null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL ; } } return matchedNeedMatchingBehavior ; } 
@ by.itechart.flowerty.web.controller.ResponseBody @ by.itechart.flowerty.web.controller.RequestMapping ( value = "user/list/{page}" ) public org.springframework.data.domain.Page < by.itechart.flowerty.model.User > getPages ( @ by.itechart.flowerty.web.controller.PathVariable ( value = "page" ) java.lang.Integer page ) throws java.lang.Exception { by.itechart.flowerty.web.controller.UserController.LOGGER . info ( "get page with number {}" , page ) ; page = ( ( page == null ) || ( page < 1 ) ) ? 0 : -- page ; org.springframework.data.domain.Page < by.itechart.flowerty.model.User > pageUsers = userService . getPages ( page , 1 ) ; by.itechart.flowerty.web.controller.UserController.LOGGER . info ( "fetch {} users" , pageUsers . getTotalElements () ) ; return pageUsers ; } 
public void store ( java.lang.String out ) throws java.io.IOException { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . store ( image , format , new java.io.File ( out ) ) ; } 
private void encodeframes ( io.netty.buffer.ByteBuf in , java.util.List < java.lang.Object > out ) throws java.lang.Exception { if ( ( in . readableBytes () ) >= ( com.mpush.api.protocol.Packet.HEADER_LEN ) ) { in . markReaderIndex () ; com.mpush.api.protocol.Packet packet = decodeFrame ( in ) ; if ( packet != null ) { out . add ( packet ) ; } else { in . resetReaderIndex () ; } } } 
@ org.junit.Test public void testCustomWindowmode ( ) throws java.lang.Exception { final org.genepattern.server.config.GpServerProperties serverProperties = new org.genepattern.server.config.GpServerProperties.Builder () . addCustomProperty ( JobRunner.PROP_WALLTIME , "7-00:00:00" ) . build () ; final org.genepattern.server.config.GpConfig gpConfig = new org.genepattern.server.config.GpConfig.Builder () . serverProperties ( serverProperties ) . build () ; org.genepattern.drm.DrmJobSubmission drmJobSubmission = new org.genepattern.drm.DrmJobSubmission.Builder ( workingDir ) . jobContext ( jobContext ) . gpConfig ( gpConfig ) . build () ; assertEquals ( "set walltime in config" , org.genepattern.drm.Walltime . fromString ( "7-00:00:00" ) , drmJobSubmission . getWalltime () ) ; } 
public int count () { if ( ( countsSinceLastReseed ) >= 100000 ) { com.valkryst.VDice.DiceRoller.random . setSeed ( java.lang.System . currentTimeMillis () ) ; countsSinceLastReseed = 0 ; } int total = 0 ; for ( final com.valkryst.VDice.Die die : dice ) { total += die . count ( com.valkryst.VDice.DiceRoller.random ) ; ( countsSinceLastReseed ) ++ ; } return total ; } 
public void setColumn ( org.apache.cassandra.config.ColumnDefinition column , java.nio.ByteBuffer value , org.apache.cassandra.db.rows.LivenessInfo info ) { int idx = columns . simpleIdx ( column ) ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + ( column.name ) ) + " in " ) + ( columns ) ) ) ; idx += base ; data . setCell ( idx , value , info ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String  getCommunityResources ( @ org.springframework.web.bind.annotation.RequestParam java.util.Map < java.lang.String , java.lang.String > allRequestParams , org.springframework.ui.Model model ) { org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER . info ( ( "Requested params:" + allRequestParams ) ) ; commonCityService . buildQueuedBuildings ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; org.exschool.pocketworld.city.resources.dto.CityResourcesDto cityResourcesDto = cityResourcesService . cityResourcesInfo ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; model . addAttribute ( "dto" , cityResourcesDto ) ; org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER . info ( ( "Out:" + model ) ) ; return "city_resources" ; } 
private void SetKeyEvents () { android.os.Bundle args = getArguments () ; java.lang.String key = ( ( java.lang.String ) ( args . keySet () . toArray () [ 0 ] ) ) ; switch ( key ) { case "meetings_show_day_key" : showDay = true ; date = ( ( java.lang.String ) ( args . get ( key ) ) ) ; break; case "meetings_show_all_key" : showAll = true ; break; case "meetings_show_empty_key" : isEmptyView = true ; break; default: isEmptyView = true ; } } 
@ javafx.fxml.FXML void ClearPab () { javafx.scene.control.Tab [] temp = new javafx.scene.control.Tab [ _tabpane . getTabs () . size () ] ; temp = _tabpane . getTabs () . toArray ( temp ) ; for ( javafx.scene.control.Tab t : temp ) { if ( ( t != null ) && ( ! ( t . getText () . equals ( "Home" ) ) ) ) _tabpane . getTabs () . remove ( t ) ; } } 
public void getSpeed ( double speed ) { if ( speed > 1.4 ) { this . status = 2 ; textStatus . setText ( "跑步" ) ; } else if ( speed < 1.0E-6 ) { this . status = 0 ; textStatus . setText ( "静止" ) ; } else { this . status = 1 ; textStatus . setText ( "步行" ) ; } } 
@ java.lang.Override public boolean onNavigationItemSelection ( @ android.support.annotation.NonNull android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.home : onBackPressed () ; return true ; case R.id.action_help : startInstruction () ; return true ; case R.id.action_replay : speakTextInstruction ( currentTest ) ; return true ; } return false ; } 
@ java.lang.Override public void handleResponse () { org.apache.wicket.request.cycle.RequestCycle requestCycle = org.apache.wicket.request.cycle.RequestCycle . get () ; com.google.gson.JsonObject jsonObject = new com.google.gson.JsonObject () ; final com.google.gson.Gson gson = new com.google.gson.GsonBuilder () . create () ; final java.lang.String fieldJson = this . getModelAsJson () ; requestCycle . scheduleRequestHandlerAfterCurrent ( new org.apache.wicket.request.handler.TextRequestHandler ( "application/json" , "UTF-8" , fieldJson ) ) ; } 
public void bindMusic ( info.dourok.android.lyrics.SongWrapper song ) { this . mSong = song ; if ( ( song . getLyrics () ) != null ) { this . mLyrics = mSong . getLyrics () ; this . mLyricsItems = mLyrics . getLyricsItems () ; updateLyrics () ; } } 
@ java.lang.Override public void convertedInput () { java.lang.String input = com.vaynberg.wicket.select2.Select2MultiChoice . getWebRequest () . getRequestParameters () . getParameterValue ( com.vaynberg.wicket.select2.Select2MultiChoice . getInputName () ) . toString () ; final java.util.Collection < T > choices ; if ( org.apache.wicket.util.string.Strings . isEmpty ( input ) ) { choices = new java.util.ArrayList < T > () ; } else { java.util.List < java.lang.String > ids = com.vaynberg.wicket.select2.Select2MultiChoice . splitInput ( input ) ; choices = com.vaynberg.wicket.select2.Select2MultiChoice . getProvider () . toChoices ( ids ) ; } com.vaynberg.wicket.select2.Select2MultiChoice . setConvertedInput ( choices ) ; } 
public void setFragmentVisualizzaPrenotazisioni () { fragmentManager = getFragmentManager () ; fragmentTransaction = fragmentManager . beginTransaction () ; visualizzaPrenotazioniFragment = new com.project.is.sportlink.ui.VisualizzaPrenotazioniFragment () ; fragmentTransaction . replace ( R.id.fragment_container , visualizzaPrenotazioniFragment ) ; fragmentTransaction . addToBackStack ( null ) ; android.support.v4.widget.DrawerLayout drawer = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ; if ( drawer . isDrawerOpen ( GravityCompat.START ) ) { drawer . closeDrawer ( GravityCompat.START ) ; } fragmentTransaction . commit () ; } 
public static java.lang.String submit ( java.lang.String url , java.lang.String parameters , java.util.Map < java.lang.String , java.lang.String > customeHeaders , java.lang.String charset ) throws java.io.IOException { try { okhttp3.Response response = so.asch.sdk.impl.RESTOkHttp . rawPost ( url , parameters , customeHeaders , charset ) ; return so.asch.sdk.impl.RESTOkHttp . getResponseContent ( response ) ; } catch ( java.io.IOException ex ) { java.lang.String errorInfo = java.lang.String . format ( "Exception when submit,url:%s,data:%s" , url , parameters ) ; throw ex ; } } 
public com.smartstudy.zhike.mylibrary.widget.BannerView  setLinks ( java.util.List < T > datas ) { this . mDatas = datas ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } 
public io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance runner () { if ( this . isStarted () ) { return this ; } if ( ( ( instance ) != null ) && ( InstanceConstants.STATE_STOPPED . equals ( instance . getState () ) ) ) { context.activityService . instance ( instance , "runner" , "Starting stopped instance" , ActivityLog.INFO ) ; context.objectProcessManager . scheduleProcessInstanceAsync ( InstanceConstants.PROCESS_START , instance , null ) ; } return this ; } 
@ java.lang.Override public void run ( float delta ) { if ( Gdx.input . justTouched () ) { game . setScreen ( new com.mygdx.magicappgame.States.PlayScreen ( game ) ) ; dispose () ; } Gdx.gl . glClearColor ( 0 , 0 , 0 , 1 ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage . draw () ; } 
@ java.lang.Override public java.lang.String ToString () { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "Employee{" + "idemployee=" ) + ( idemployee ) ) + ", firstName='" ) + ( firstName ) ) + '\'' ) + ", lastName='" ) + ( lastName ) ) + '\'' ) + ", role=" ) + ( role . getName () ) ) + ", password='" ) + ( password ) ) + '\'' ) + ", cars=" ) + ( cars ) ) + '}' ; } 
@ java.lang.Override public boolean onCreateEventView ( com.actionbarsherlock.view.ActionMode mode , com.actionbarsherlock.view.Menu menu ) { mode . setTitle ( R.string.menu_restriction ) ; super . onCreateEventView ( mode , menu ) ; logic . addSelectedRelationWay ( toWay ) ; de.blau.android.osm.Relation restriction = logic . createRestriction ( fromWay , viaElement , toWay , ( ( fromWay ) == ( toWay ) ? de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.NO_U_TURN_VALUE : null ) ) ; android.util.Log . i ( "EasyEdit" , "Created restriction" ) ; main . performTagEdit ( restriction , de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.RESTRICTION_TAG , false , false ) ; main . startActionMode ( new de.blau.android.easyedit.EasyEditManager.RelationSelectionActionModeCallback ( restriction ) ) ; return false ; } 
@ java.lang.Override public void onViewUpdated ( android.view.View view , android.os.Bundle savedInstanceState ) { super . onViewUpdated ( view , savedInstanceState ) ; adapter = new com.vezikon.popularmovies.views.adapters.MoviesAdapter ( getActivity () , moviesList ) ; mGridView . setAdapter ( adapter ) ; mGridView . setOnItemClickListener ( this ) ; if ( isEmpty ) { if ( com.vezikon.popularmovies.Utils . isNetworkAvailable ( getActivity () ) ) { showProgress ( true ) ; getMovies ( com.vezikon.popularmovies.fragments.MoviesFragment.TYPE_MOST_POPULAR ) ; } else { android.widget.Toast . makeText ( getActivity () , getString ( R.string.error_msg_no_connection ) , Toast.LENGTH_LONG ) . show () ; } } } 
@ java.lang.Override public void deleteCORSRules ( @ javax.annotation.Nonnull java.lang.String bucketUuid ) throws com.eucalyptus.objectstorage.exceptions.ObjectStorageException { try ( final com.eucalyptus.entities.TransactionResource tran = com.eucalyptus.entities.Entities . transactionFor ( com.eucalyptus.objectstorage.entities.CorsRule . class ) ) { com.eucalyptus.objectstorage.BucketCorsManagers . getInstance () . deleteCORSRules ( bucketUuid , tran ) ; tran . commit () ; } catch ( java.lang.Exception ex ) { com.eucalyptus.objectstorage.metadata.DbBucketCorsManagerImpl.LOG . error ( ( "Exception caught while deleting CORS rules for bucket " + bucketUuid ) , ex ) ; throw new com.eucalyptus.objectstorage.exceptions.ObjectStorageException ( "InternalServerError" , ( "Exception caught while deleting CORS rules for bucket " + bucketUuid ) , "Bucket" , bucketUuid , org.jboss.netty.handler.codec.http.HttpResponseStatus.INTERNAL_SERVER_ERROR ) ; } } 
private void price () { java.lang.String priceWithCurrency = source . getElementsByClass ( "price-label" ) . text () . replaceAll ( "\\D+" , "" ) ; if ( ( priceWithCurrency . length () ) == 0 ) { adBuilder . price ( null ) ; } else { adBuilder . price ( java.lang.Integer . parseInt ( priceWithCurrency ) ) ; } } 
public java.util.HashSet < dictionary.APIType > getNamesofProperty ( java.lang.String name ) { java.util.HashSet < dictionary.APIType > types = new java.util.HashSet < dictionary.APIType > () ; java.util.HashSet < dictionary.APIMethod > methods = this . getMethodsByName ( name ) ; if ( methods != null ) { for ( dictionary.APIMethod method : methods ) types . add ( method . getType () ) ; return types ; } else { return null ; } } 
private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair findtype ( final java.lang.Class < ? > concrete , final java.lang.Class < ? > iface , final java.lang.Class < ? > c , final java.lang.reflect.Type [] ts ) { for ( final java.lang.reflect.Type t : ts ) { final org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . findtype ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; } 
public boolean  onBlockDestroyChanged ( net.minecraft.item.ItemStack stack , net.minecraft.world.World worldIn , net.minecraft.block.state.IBlockState blockIn , net.minecraft.util.math.BlockPos pos , net.minecraft.entity.EntityLivingBase entityLiving ) { if ( ( ( double ) ( blockIn . getBlockHardness ( worldIn , pos ) ) ) != 0 ) { stack . damageItem ( 1 , entityLiving ) ; } return true ; } 
public static java.lang.String  getrating ( java.lang.String login , int fid ) throws java.lang.Exception { java.util.ArrayList < java.lang.String [] > ret = DatabaseInterface.SQLExecutor . executeQuery ( ( ( ( ( "SELECT rating FROM acmdb05.Rates WHERE login='" + login ) + "' AND fid=" ) + fid ) + ";" ) ) ; return ret . get ( 0 ) [ 0 ] ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String  http ( java.util.Locale locale , org.springframework.ui.Model model ) { java.util.Date date = new java.util.Date () ; java.text.DateFormat dateFormat = java.text.DateFormat . getDateTimeInstance ( java.text.DateFormat.LONG , java.text.DateFormat.LONG , locale ) ; java.lang.String formattedDate = dateFormat . format ( date ) ; model . addAttribute ( "serverTime" , formattedDate ) ; return "index" ; } 
protected int skipVWNC ( ) throws java.io.IOException , org.openrdf.rio.RDFHandlerException { int c = readCodePoint () ; while ( ( org.openrdf.rio.turtle.TurtleUtil . isWhitespace ( c ) ) || ( c == '#' ) ) { if ( c == '#' ) { processComment () ; } else if ( c == '\n' ) { ( lineNumber ) ++ ; } c = readCodePoint () ; } unread ( c ) ; return c ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/impcImages/laczimages/{acc}/{topLevelMa}" ) public java.lang.String laczeImage ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String acc , @ org.springframework.web.bind.annotation.PathVariable java.lang.String topLevelMa , org.springframework.ui.Model model ) throws java.io.IOException , java.net.URISyntaxException , org.apache.solr.client.solrj.SolrServerException { java.lang.System.out . println ( "calling laczeImage web page" ) ; addGeneSymbolToPage ( acc , model ) ; boolean overview = false ; imageService . getLacDataForGene ( acc , topLevelMa , overview , false , model ) ; return "laczeImage" ; } 
@ java.lang.Override public void mousedrained ( java.awt.event.MouseEvent e ) { if ( ( ( e . getX () ) >= 0 ) && ( ( e . getX () ) <= ( this . getWidth () ) ) ) { if ( knob1Picked ) { moveKnob1 ( java.lang.Math . abs ( e . getX () ) ) ; return; } if ( knob2Picked ) { moveKnob2 ( e . getX () ) ; } } } 
@ java.lang.Override public java.sql.Connection  getConn ( ) throws java.sql.SQLException { State.State state = validatePoolState ( isAllowConnectionAfterTermination () ) ; if ( state == ( WORKING ) ) { try { return getPooledConnection (  getConnTimeoutInMs () ) ; } catch ( java.sql.SQLException e ) { if ( ( ! ( org.vibur.dbcp.SQLSTATE_POOL_CLOSED_ERROR . equals ( e . getSQLState () ) ) ) || ( ! ( isAllowConnectionAfterTermination () ) ) ) throw e ; } } assert ( getState () ) == ( TERMINATED ) ; org.vibur.dbcp.ViburDBCPDataSource.logger . info ( "Calling  getConn() after the pool was closed; will create and return a non-pooled Connection." ) ; return getNonPooledConnection () ; } 
public void work () { int [] selectedRows = tablePositions . getSelectedRows () ; if ( ( selectedRows.length ) > 0 ) { getPositionsModel () . up ( selectedRows , 1 ) ; selectPositions ( increment ( selectedRows , ( - 1 ) ) ) ; } } 
@ java.lang.Override public boolean hasStaron () { sixesWildEntity.Board board = sixesWildEntity.Board . newInstance () ; if ( ( board.currentScore ) >= ( highestScore ) ) { highestScore = board.currentScore ; } if ( ( highestScore ) >= ( threeStarScore ) ) { starNumber = 3 ; } else if ( ( highestScore ) >= ( twoStarScore ) ) { starNumber = 2 ; } else if ( ( highestScore ) >= ( oneStarScore ) ) { starNumber = 1 ; } return ( board.currentScore ) >= ( oneStarScore ) ; } 
@ java.lang.Override public void LoadChildren ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; } if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } 
private void  processTransactiondetails ( com.example.danie.schoolcashless.Transaction transaction , org.json.JSONObject json ) throws org.json.JSONException { java.lang.Number completed = ( ( java.lang.Number ) ( json . get ( "completed" ) ) ) ; transaction . setUnixTime ( completed . intValue () ) ; org.json.JSONObject with = ( ( org.json.JSONObject ) ( json . get ( "with" ) ) ) ; java.lang.String name = with . getString ( "name" ) ; transaction . setWith ( name ) ; } 
public indexingTopology.util.BTreeNode insertNewRow ( TKey key , TValue value ) throws indexingTopology.exception.UnsupportedGenericException { indexingTopology.util.BTreeNode node = null ; keys . add ( key ) ; values . add ( new java.util.ArrayList < TValue > ( java.util.Arrays . asList ( value ) ) ) ; ++ ( keyCount ) ; if ( indexingTopology.util.BTreeLeafNode . isOverflow () ) { node = indexingTopology.util.BTreeLeafNode . dealOverflow () ; } return node ; } 
@ java.lang.Override protected void overCreated ( android.os.Bundle savedInstanceState ) { super . overCreated ( savedInstanceState ) ; getWindow () . addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON ) ; setContentView ( R.layout.activity_allmachine ) ; android.util.Log . e ( TAG , "RawMaterial_overCreated" ) ; initDisplay () ; initTitleLayout () ; initCellTitle () ; initRecycleView () ; initBottomView () ; com.android.tedcoder.material.AllMachineActivity.requestHandler = new com.android.tedcoder.material.AllMachineActivity.RequestHandler () ; com.android.tedcoder.material.AllMachineActivity.requestHandler . sendEmptyMessage ( com.android.tedcoder.material.AllMachineActivity.SENDFLAG ) ; } 
@ java.lang.Override public java.lang.String  proormTable ( int [] [] matrix ) { java.lang.StringBuilder array = new java.lang.StringBuilder ( "" ) ; for ( int i = 0 ; i <= ( ( matrix.length ) - 1 ) ; i ++ ) { array . append ( this . arrayToString ( matrix [ i ] ) ) ; array . append ( java.lang.System . lineSeparator () ) ; } return java.lang.String . format ( primitivesMatrixTemplate , array ) ; } 
@ org.junit.Test public void  theUserReceiveAGoodQualificationThenYourPointsIncrease () { unq.tpi.desapp.grupof.model.GoodQualification goodQualification = mock ( unq.tpi.desapp.grupof.model.GoodQualification . class ) ; when ( goodQualification . getPoints () ) . thenReturn ( 500 ) ; unq.tpi.desapp.grupof.model.User anUser = new unq.tpi.desapp.grupof.model.builder.UserDriverBuilder () . build () ; anUser . receiveAGoodQualification ( goodQualification ) ; org.junit.Assert . assertEquals ( 600 , anUser . getScore () ) ; } 
@ java.lang.Override public void SETAttribute ( int i , double p ) { if ( ( this . stateWeights ) != null ) { if ( i < ( this . stateWeights . length ) ) { this . stateWeights [ i ] = p ; return; } } else if ( ( this . stateActionWeights ) != null ) { if ( i < ( this . stateActionWeights . length ) ) { this . stateActionWeights [ i ] = p ; return; } } throw new java.lang.RuntimeException ( "Parameter index out of bounds; parameter cannot be set." ) ; } 
private void inputdetector () { if ( Gdx.input . isKeyPressed ( Keys.SPACE ) ) { gameController . jumpRetroMan () ; } if ( Gdx.input . isKeyPressed ( Keys.RIGHT ) ) { gameController . goRightRetroMan () ; } else if ( Gdx.input . isKeyPressed ( Keys.LEFT ) ) { gameController . goLeftRetroMan () ; } } 
public java.net.URLClassLoader  createClassReader () { boolean useBoot14Layout = false ; for ( org.springframework.boot.loader.archive.Archive.Entry entry : archive ) { if ( entry . getName () . startsWith ( org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.BOOT_14_LIBS_LOCATION ) ) { useBoot14Layout = true ; break; } } org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.ClassLoaderExposingLauncher launcher = ( useBoot14Layout ) ? new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot14ClassLoaderExposingLauncher () : new org.springframework.cloud.dataflow.configuration.metadata.BootClassLoaderFactory.Boot13ClassLoaderExposingLauncher () ; return launcher .  createClassReader () ; } 
public org.exoplatform.portal.gadget.core.GadgetToken selectToken ( org.apache.shindig.gadgets.oauth.BasicOAuthStoreTokenIndex tokenKey ) { java.util.Map < java.lang.String , org.exoplatform.portal.gadget.core.GadgetTokenEntry > tokens = getGadgetTokens () ; for ( org.exoplatform.portal.gadget.core.GadgetTokenEntry tokenEntry : tokens . values () ) { org.apache.shindig.gadgets.oauth.BasicOAuthStoreTokenIndex key = tokenEntry . getKey () ; if ( tokenKey . equals ( key ) ) { org.exoplatform.portal.gadget.core.GadgetToken token = tokenEntry . getToken () ; tokenEntry . remove () ; return token ; } } return null ; } 
protected static final void checks ( final com.gamesbykevin.breakout.game.Game game ) { if ( ( game . getBricks () . getCount () ) <= 0 ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0 ; com.gamesbykevin.breakout.game.GameHelper.WIN = true ; game . getScreen () . setState ( ScreenManager.State.GameOver ) ; } else if ( ( game . getBalls () . getCount () ) < 1 ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0 ; com.gamesbykevin.breakout.game.GameHelper.LOSE = true ; ( com.gamesbykevin.breakout.game.GameHelper.LIVES ) -- ; } } 
public void switchCapture () { if ( backCamera ) { backCamera = false ; } else { backCamera = true ; } focusMode = camera1 . getFocusMode () ; flashMode = camera1 . getFlashMode () ; camera1 . stopPreview () ; camera1 . releaseCamera () ; isFocusModeSupported = false ; openCameraAndStartPreview () ; } 
public void setFrequentHours ( java.lang.String daysBitString ) { frequencyDays = daysBitString ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; int today = ( calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; if ( frequencyDays . substring ( today , ( today + 1 ) ) . equals ( "1" ) ) { isToday = true ; } else { isToday = false ; } } 
private void deleteResidueDirectory ( java.util.Properties storageProperties ) { java.lang.String oldFileDirPath = storageProperties . getProperty ( org.jimple.planner.Constants.PROPERTIES_KEY_PREV_SAVEPATH ) ; oldFileDirPath = getFullFilePath ( oldFileDirPath , org.jimple.planner.Constants.DEFAULT_FILE_DIRECTORY ) ; if ( ! ( oldFileDirPath . equals ( org.jimple.planner.Constants.PROPERTIES_SAVEPATH_TO_CWD ) ) ) { java.io.File oldFileDir = new java.io.File ( oldFileDirPath ) ; if ( oldFileDir . isDirectory () ) { oldFileDir . delete () ; } } } 
public java.lang.String ToString () { java.lang.String cardSymbols = "" ; java.lang.String values = "" ; for ( int x = 0 ; x <= ( lastCard ) ; x ++ ) { cardSymbols += ( CardUtils . cardToString ( cards [ x ] ) ) + " " ; values += ( CardUtils . getValue ( cards [ x ] ) ) + " " ; } return ( ( cardSymbols + "\n" ) + values ) + "\n" ; } 
public void setIsWennaEnable ( boolean isWifiEnable ) { isWifiP2pEnable = isWifiEnable ; if ( isRemainResult ) { remainWifiIsEnable = isWifiEnable ; } if ( ( mOnWiFiRecevieListener ) != null ) { mOnWiFiRecevieListener . onWifiStatusResult ( isWifiEnable ) ; } else { if ( ! isWifiEnable ) {} } } 
@ java.lang.Override protected boolean onCanButtonTap ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } 
public void updateFrom ( com.thoughtworks.go.util.command.ProcessOutputStreamConsumer outputStreamConsumer , com.thoughtworks.go.config.materials.git.Revision revision , java.io.File baseDir , final com.thoughtworks.go.config.materials.SubprocessExecutionContext execCtx ) { try { outputStreamConsumer . stdOutput ( java.lang.String . format ( "[%s] Start updating %s at revision %s from %s" , GoConstants.PRODUCT_NAME , updatingTarget () , revision . getRevision () , url ) ) ; com.thoughtworks.go.domain.materials.git.GitCommand git = git ( outputStreamConsumer , workingdir ( baseDir ) ) ; git . fetchAndReset ( outputStreamConsumer , revision ) ; outputStreamConsumer . stdOutput ( java.lang.String . format ( "[%s] Done.\n" , GoConstants.PRODUCT_NAME ) ) ; } catch ( java.lang.Exception e ) { bomb ( e ) ; } } 
public static void set ( javax.servlet.ServletContext servletContext ) { java.io.File repository = ( ( java.io.File ) ( servletContext . getAttribute ( "javax.servlet.context.tempdir" ) ) ) ; org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD , repository ) ) ; int uploadLimit = org.edagarli.framework.helper.ConfigHelper . getAppUploadLimit () ; if ( uploadLimit != 0 ) { org.edagarli.framework.helper.UploadHelper.servletFileUpload . setFileSizeMax ( ( ( uploadLimit * 1024 ) * 1024 ) ) ; } } 
public int logOutUse ( java.lang.String username ) { int state ; boolean userExist ; boolean active ; userExist = database . usernameExist ( username ) ; active = database . getActive ( username ) ; if ( userExist && active ) { database . userActive ( username , false ) ; state = 1 ; } else { state = 0 ; } return state ; } 
@ java.lang.Override public int selectSize ( ) throws java.sql.SQLException { if ( ( filters . isEmpty () ) && ( orderBys . isEmpty () ) ) return ( ( int ) ( columnView . rowCount ( null ) ) ) ; return columnView . rowCount ( toQuery ( 0 , filters ) ) ; } 
@ java.lang.Override public void  onPrepRequest ( @ android.support.annotation.NonNull com.devbrackets.android.playlistcore.api.MediaPlayerApi mediaPlayerApi ) { retryCount = 0 ; setPlaybackState ( com.devbrackets.android.playlistcore.service.PlaylistServiceCore.PlaybackState.PLAYING ) ; startMediaPlayer () ; if ( immediatelyPause ) { immediatelyPause = false ; if ( mediaPlayerApi . isPlaying () ) { performPause () ; } } if ( ( seekToPosition ) > 0 ) { performSeek ( seekToPosition , false ) ; seekToPosition = - 1 ; } updateRemoteViews () ; updateNotification () ; } 
private void submitToErrorReport ( java.lang.String error ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , error ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } } 
public static void getWriterFactoryPropSettings () { try { ch.ice.view.GUIController.config = new org.apache.commons.configuration.PropertiesConfiguration ( "conf/app.properties" ) ; java.lang.String tester = ch.ice.view.GUIController.config . getString ( "writer.factory" ) ; if ( tester . equals ( "EXCEL" ) ) { ch.ice.controller.MainController.fileWriterFactory = true ; } else if ( tester . equals ( "CSV" ) ) { ch.ice.controller.MainController.fileWriterFactory = false ; } } catch ( org.apache.commons.configuration.ConfigurationException e1 ) { e1 . printStackTrace () ; } } 
public static void PlaygameAudio () { com.badlogic.gdx.files.FileHandle file = Gdx.files . external ( "gamemusic.mp3" ) ; if ( file . exists () ) { java.lang.System.out . println ( "Externes audio." ) ; com.game.Audio.Sounds.music = Gdx.audio . newMusic ( Gdx.files . external ( "gamemusic.mp3" ) ) ; } else { com.game.Audio.Sounds.music = Gdx.audio . newMusic ( Gdx.files . internal ( "Game_Sound/gamemusic.mp3" ) ) ; com.game.Audio.Sounds.music . play () ; com.game.Audio.Sounds.music . setVolume ( com.game.Audio.Sounds.Game_Volume ) ; } } 
@ java.lang.Override protected void onsUpdate ( android.os.Bundle savedInstanceState ) { super . onsUpdate ( savedInstanceState ) ; setContentView ( R.layout.activity_map ) ; com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText = ( ( android.widget.EditText ) ( findViewById ( R.id.searchBarEditText ) ) ) ; com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText . setOnClickListener ( this ) ; setUpGoogleApiClient () ; com.google.android.gms.maps.MapFragment mapFragment = ( ( com.google.android.gms.maps.MapFragment ) ( getFragmentManager () . findFragmentById ( R.id.map ) ) ) ; mapFragment . getMapAsync ( this ) ; } 
void removeBindingHandler ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBindingHandlers ( bundleState ) ; } } 
private void ReadInternal ( com.tangosol.io.pof.PofReader pofReader ) throws java.io.IOException { if ( ( pofReader . getVersionId () ) >= 1 ) { this . media = ( ( serializers.coherence.media.Media ) ( pofReader . readObject ( 0 ) ) ) ; this . images = ( ( java.util.List < serializers.coherence.media.Image > ) ( pofReader . readCollection ( 1 , new java.util.ArrayList < serializers.coherence.media.Image > () ) ) ) ; } } 
public void setBootspringType ( java.lang.String bootstrapType ) { com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes type ; type = ( roundedCorners ) ? com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMapRounded . get ( bootstrapType ) : com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMap . get ( bootstrapType ) ; type = ( type == null ) ? com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes.DEFAULT : type ; layout . setBackgroundResource ( type.backgroundDrawable ) ; lblLeft . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblMiddle . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblRight . setTextColor ( getResources () . getColor ( type.textColour ) ) ; } 
public void  updateColor () { this . primaryColor = SP . getInt ( "primary_color" , android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.md_indigo_500 ) ) ; this . accentColor = SP . getInt ( "accent_color" , android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.md_light_blue_500 ) ) ; darkTheme = SP . getBoolean ( "set_dark_theme" , false ) ; coloredNavBar = SP . getBoolean ( "nav_bar" , true ) ; oscuredStatusBar = SP . getBoolean ( "set_traslucent_statusbar" , false ) ; applyThemeImgAct = SP . getBoolean ( "apply_theme_img_act" , false ) ; } 
public void getSelectlected ( T selection ) { for ( int i = 0 , count = getItems () . size () ; i < count ; i ++ ) { T item = getItems () . get ( i ) ; if ( item instanceof java.lang.String ) { if ( item . equals ( selection ) ) { getSelectlected ( i ) ; return; } } else { if ( item == selection ) { getSelectlected ( i ) ; return; } } } } 
private ludum.dare.collision.CollisionGroup getcollapses ( java.util.Map < java.lang.String , ludum.dare.collision.CollisionSequence > data ) { ludum.dare.utils.NamedAnimation animation = animations . getCurrentAnimation () ; java.lang.String name = animation . getName () ; if ( data . containsKey ( name ) ) { ludum.dare.collision.CollisionSequence sequence = data . get ( name ) ; if ( ( animation . getLastCalledFrame () ) < ( sequence.frames.length ) ) { return sequence.frames [ animation . getLastCalledFrame () ] ; } } return null ; } 
public void setMagnation ( bwem.Altitude altitude ) { if ( ! ( ( isAltitudeMissing () ) && ( ( altitude . intValue () ) > 0 ) ) ) { throw new java.lang.IllegalStateException ( "Altitude is already set" ) ; } else if ( ! ( ( altitude . intValue () ) > 0 ) ) { throw new java.lang.IllegalArgumentException ( "invalid Altitude" ) ; } else { this . altitude = new bwem.Altitude ( altitude ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = " insert" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String  insert ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , @ org.springframework.web.bind.annotation.RequestParam java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model .  insertAttribute ( "title" , "Add User" ) ; model .  insertAttribute ( "newUser" , user . getUsername () ) ; model .  insertAttribute ( user ) ; org.launchcode.models.UserData .  insert ( user ) ; return "users/index" ; } else { model .  insertAttribute ( "title" , "Add User" ) ; model .  insertAttribute ( "error" , "Passwords do not match" ) ; model .  insertAttribute ( user ) ; return "users/ insert" ; } } 
private boolean isGoodhighKey ( java.lang.String lastScoreDeck ) { java.lang.String highScoreDeck = prefs . getString ( "highScoreDeck" , "" ) ; if ( ( highScoreDeck . isEmpty () ) || ( ( lastScoreDeck . compareTo ( highScoreDeck ) ) < 0 ) ) { return true ; } else { return false ; } } 
private boolean step_100_startIngestjobs () { if ( this . hasError () ) { return false ; } for ( edu.harvard.iq.dataverse.DataFile df : finalFileList ) { setNewlyAddedFile ( df ) ; break; } finalFileList . clear () ; msg ( "pre ingest start" ) ; ingestService . startIngestJobs ( dataset , dvRequest . getAuthenticatedUser () ) ; msg ( "post ingest start" ) ; return true ; } 
@ java.lang.Override public void onBindViewHander ( com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewHolder holder , int position , java.util.List < java.lang.Object > payloads ) { super . onBindViewHander ( holder , position , payloads ) ; if ( ( payloads != null ) && ( ! ( payloads . isEmpty () ) ) ) { holder . setEntry ( ( ( com.example.brandon.habitlogger.HabitDatabase.DataModels.SessionEntry ) ( payloads . get ( 0 ) ) ) ) ; } } 
public java.lang.String submit ( java.lang.String endpoint , com.ringcentral.definitions.Base base ) throws com.ringcentral.RestException , java.io.IOException { com.ringcentral.RequestBody body = com.ringcentral.RequestBody . create ( com.ringcentral.RestClient.jsonMediaType , com.alibaba.fastjson.JSON . toJSONString ( base ) ) ; com.ringcentral.Request request = new com.ringcentral.Request.Builder () . url ( ( ( server ) + endpoint ) ) . addHeader ( "Authorization" , authorizationHeader () ) . submit ( body ) . build () ; return request ( request ) ; } 
@ org.testng.annotations.Test ( groups = { "integration" , "services" , "httppatch" , "virtual" } , description = "A negative integration test to verify the response code from a patch call" ) public void comparePatchResponseBadCode100Example () { com.google.gson.JsonObject request = new com.google.gson.JsonObject () ; request . addProperty ( "id" , 1 ) ; request . addProperty ( "title" , "foo1" ) ; request . addProperty ( "body" , "bar" ) ; request . addProperty ( "userId" , 4 ) ; com.coveros.selenified.services.Call call = this . calls . get () ; call . patch ( "posts/4" , new com.coveros.selenified.services.Request ( request ) ) . assertEquals ( 201 ) ; finish ( 1 ) ; } 
public void  getMinVersion () { if ( ( isEmptyHeap () ) == true ) { java.lang.System.out . println ( "There are no ideas here" ) ; } else { java.lang.System.out . println ( ( ( ( ( ( "The best idea is Idea #" + ( heap [ 0 ] . getSeqNum () ) ) + "/nrated at" ) + ( heap [ 0 ] . getRating () ) ) + "here is the description: /n" ) + ( heap [ 0 ] . getDesc () ) ) ) ; } } 
private java.util.List < it.unibz.krdb.obda.model.CQIE > createSigEffects ( it.unibz.krdb.obda.ontology.Ontology ontology ) { java.util.List < it.unibz.krdb.obda.model.CQIE > rules = new java.util.ArrayList < it.unibz.krdb.obda.model.CQIE > () ; java.util.Set < it.unibz.krdb.obda.ontology.Axiom > assertions = ontology . getAssertions () ; for ( it.unibz.krdb.obda.ontology.Axiom assertion : assertions ) { try { it.unibz.krdb.obda.model.CQIE rule = it.unibz.krdb.obda.owlrefplatform.core.basicoperations.AxiomToRuleTranslator . translate ( assertion ) ; if ( rule != null ) { rules . add ( rule ) ; } } catch ( java.lang.UnsupportedOperationException e ) { log . warn ( e . getMessage () ) ; } } return rules ; } 
public void writeToAllAllUser ( User author , java.lang.String s ) { for ( User u : users ) { if ( ! ( u . getName () . equalsIgnoreCase ( author . getName () ) ) ) { u . writeString ( s ) ; } } } 
public boolean  canCales () { if ( ( ( deposit ) >= ( price ) ) && ( ( stock ) >= 1 ) ) { ( stock ) -- ; if ( ( deposit ) > ( price ) ) { change = ( deposit ) - ( price ) ; } deposit = 0 ; return true ; } return false ; } 
public < T > SigmaEC.util.Option < java.util.List < T > > getOptionalInstancesFromProperty ( final java.lang.String parameterName , final java.lang.Class expectedSuperClass ) { assert parameterName != null ; assert ! ( parameterName . isEmpty () ) ; assert expectedSuperClass != null ; if ( properties . containsKey ( parameterName ) ) return new SigmaEC.util.Option ( ( ( java.util.List < T > ) ( getInstancesFromParameter ( parameterName , expectedSuperClass ) ) ) ) ; else return Option.NONE ; } 
public void  initialize ( com.traintrax.navigation.service.mdu.MotionDetectionUnitInterface motionDetectionUnit , com.traintrax.navigation.service.TrackSwitchControllerInterface trackSwitchController , com.traintrax.navigation.service.TrainNavigationDatabaseInterface trainNavigationDatabase , com.traintrax.navigation.service.events.PublisherInterface < com.traintrax.navigation.service.TrainNavigationServiceEventSubscriber , com.traintrax.navigation.service.TrainNavigationServiceEvent > eventPublisher , com.traintrax.navigation.service.position.InertialMotionPositionAlgorithmInterface trainPositionAlgorithm , boolean useRfidTagsOnly ) { this . motionDetectionUnit = motionDetectionUnit ; this . trackSwitchController = trackSwitchController ; this . eventPublisher = eventPublisher ; this . trainNavigationDatabase = trainNavigationDatabase ; this . positionAlgorithm = trainPositionAlgorithm ; this . useRfidTagsOnly = useRfidTagsOnly ; this . timer = new java.util.Timer () ; this . motionDetectionUnit . setMduCallback ( this ) ; setupTimer () ; } 
public void  inputEvents () { if ( ( tfInput . getText () . length () ) > 0 ) { if ( ( controller . getSelectedUsers () ) != null ) { java.lang.String [] recipients = controller . getSelectedUsers () ; controller . send ( new chat_client.Message ( tfInput . getText () , recipients ) ) ; } else { controller . send ( new chat_client.Message ( tfInput . getText () , true ) ) ; } tfInput . setText ( "" ) ; } } 
public int  solve ( int [] A ) { long expectedSum = ( ( ( A.length ) + 1 ) * ( ( A.length ) + 2 ) ) / 2 ; long realSum = 0 ; for ( int i : A ) { realSum = realSum + ( new java.lang.Long ( i ) ) ; } return new java.lang.Long ( ( expectedSum - realSum ) ) . intValue () ; } 
public java.lang.String  getFullName () { if ( mClassList . isEmpty () ) { return mClassName . isEmpty () ? null : mClassName ; } else { java.lang.String class_name = mClassList . get ( 0 ) ; for ( int i = 1 ; i < ( mClassList . size () ) ; i ++ ) { class_name = "," + ( mClassList . get ( i ) ) ; } return class_name ; } } 
@ java.lang.Override public boolean  Add ( org.eclipse.jetty.webapp.ClasspathPattern.Entry entry ) { java.lang.String name = entry . getName () ; if ( entry . isClassName () ) name += "$" ; else if ( entry . isLocation () ) throw new java.lang.IllegalArgumentException ( entry . toString () ) ; else if ( "." . equals ( name ) ) name = "" ; if ( ( this . _entries . get ( name ) ) != null ) return false ; return this . _entries . put ( name , entry ) ; } 
private static boolean contides ( int x , int y , int width , int height , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( boundsFromList . contides ( x , y , width , height ) ) { return true ; } } return false ; } 
@ java.lang.Override public void OnDestroy () { org.md2k.utilities.Report.Log . d ( org.md2k.plotter.ActivityPlot.TAG , "OnDestroy()" ) ; if ( ( ( dataSourceClient ) != null ) && ( ( dataKitAPI ) != null ) ) try { dataKitAPI . unsubscribe ( dataSourceClient ) ; } catch ( org.md2k.datakitapi.exception.DataKitException e ) { e . printStackTrace () ; } if ( ( dataKitAPI ) != null ) dataKitAPI . disconnect () ; if ( ( redrawer ) != null ) { redrawer . pause () ; redrawer . finish () ; } super . OnDestroy () ; } 
@ java.lang.Override public void onStateUpdate ( com.firebase.client.DataSnapshot dataSnapshot ) { if ( ( dataSnapshot . getValue () ) != null ) { com.example.chowdi.qremind.infrastructure.QueueInfo queueInfo = dataSnapshot . getValue ( com.example.chowdi.qremind.infrastructure.QueueInfo . class ) ; if ( ( queueInfo . getCalling () ) != null ) { if ( ! ( com.example.chowdi.qremind.activities.BaseActivity.notificationPoppedOut ) ) popUpNotification ( queueNo ) ; if ( ! ( application.notificationSend ) ) application . showNotification ( this ) ; } } else { com.example.chowdi.qremind.activities.BaseActivity.fbRefQueueTurn . removeEventListener ( com.example.chowdi.qremind.activities.BaseActivity.queueTurnListener ) ; com.example.chowdi.qremind.utils.Commons . showToastMessage ( "You have been removed from queue!" , getApplicationContext () ) ; } } 
private void makeNextFeature ( java.lang.String layerName ) { if ( ! ( layerName . isEmpty () ) ) { javafx.scene.canvas.Canvas canvas = new javafx.scene.canvas.Canvas ( Main.WIDTH , Main.HEIGHT ) ; Main.layerStrings . add ( layerName ) ; Main.layers . put ( layerName , canvas ) ; Main.layerSelector . getItems () . add ( layerName ) ; Main.layerSelector . setValue ( layerName ) ; Main.pane . getChildren () . add ( 0 , canvas ) ; Main.cursorCanvas . toFront () ; } } 
public boolean isLookaheadIgnoreWhpacesspace ( char expectedChar ) { int tempPos = ( pos ) + 1 ; if ( tempPos >= ( input . length () ) ) return false ; char c = input . charAt ( tempPos ) ; while ( isWhitespace ( c ) ) { ++ tempPos ; if ( tempPos >= ( input . length () ) ) return false ; c = input . charAt ( tempPos ) ; } return c == expectedChar ; } 
@ java.lang.Override public void onBackPressressed () { android.support.v4.widget.DrawerLayout drawer = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ; if ( drawer . isDrawerOpen ( GravityCompat.START ) ) { drawer . closeDrawer ( GravityCompat.START ) ; } else { super . onBackPressressed () ; leaveGame () ; } } 
private void mathButton_actionReified ( java.awt.event.ActionEvent evt ) { int [] rows = new int [ mainTable_ . getRowCount () ] ; for ( int i = 0 ; i < ( rows.length ) ; i ++ ) { java.lang.Integer j = ( ( java.lang.Integer ) ( mainTable_ . getValueAt ( mainTable_ . convertRowIndexToModel ( i ) , 0 ) ) ) ; rows [ i ] = j ; } edu.valelab.gaussianfit.MathForm mf = new edu.valelab.gaussianfit.MathForm ( edu.valelab.gaussianfit.DataCollectionForm.studio_ . getUserProfile () , rows , rows ) ; mf . setVisible ( true ) ; } 
@ org.junit.Test public void isontrueWorks () { org.assertj.core.api.Assertions . assertThat ( prefs . hasGuestFlag () ) . isFalse () ; org.assertj.core.api.Assertions . assertThat ( prefs . getGuestFlag ( true ) ) . isTrue () ; prefs . putGuestFlag ( true ) ; org.assertj.core.api.Assertions . assertThat ( prefs . hasGuestFlag () ) . isTrue () ; org.assertj.core.api.Assertions . assertThat ( prefs . getGuestFlag () ) . isTrue () ; prefs . removeGuestFlag () ; org.assertj.core.api.Assertions . assertThat ( prefs . hasGuestFlag () ) . isFalse () ; } 
public void evalator ( ca.nines.ise.dom.DOM dom ) { for ( ca.nines.ise.node.Node n : dom ) { if ( ( n . type () ) == ( ca.nines.ise.node.NodeType.END ) ) { switch ( n . getName () . toLowerCase () ) { case "ornament" : process_end ( ( ( ca.nines.ise.node.EndNode ) ( n ) ) ) ; break; } } } } 
private test.Type visviewType ( test.TypeContext type ) { if ( type . getText () . equals ( "int" ) ) { return new test.IntegerType () ; } else if ( type . getText () . equals ( "boolean" ) ) { return new test.BooleanType () ; } return null ; } 
public android.graphics.Bitmap rotat ( android.graphics.Bitmap bmp ) { android.graphics.Matrix matrix = new android.graphics.Matrix () ; matrix . postRotate ( 90 ) ; android.graphics.Bitmap b1 = android.graphics.Bitmap . createBitmap ( bmp , 0 , 0 , bmp . getWidth () , bmp . getHeight () , matrix , true ) ; return b1 ; } 
public void Update ( by.expertsoft.butko.phone.Phone phone ) { java.util.Map < java.lang.String , java.lang.Object > params = new java.util.HashMap <> () ; params . put ( "name" , phone . getName () ) ; params . put ( "cost" , phone . getPrice () ) ; params . put ( "p_id" , phone . getManufacturer () . getId () ) ; namedParameterJdbcTemplate . Update ( by.expertsoft.butko.dao.phone.JdbcPhoneDao.SQL_UPDATE_MOBILEPHONES , params ) ; } 
private android.support.v7.widget.CardView buildCommentView ( final com.floatingmuseum.mocloud.data.entity.Comment comment ) { android.support.v7.widget.CardView comment_item = ( ( android.support.v7.widget.CardView ) ( android.view.LayoutInflater . from ( this ) . inflate ( R.layout.comment_item , commentContainer , false ) ) ) ; if ( enableColorful () ) { initCommentItem ( this , comment_item , comment , mainSwatch , itemSwatch , false ) ; } else { initCommentItem ( this , comment_item , comment , null , null , false ) ; } return comment_item ; } 
public void storeEntry ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } } 
private void ifThereIsMatchAddItTototalToken ( char [] tokenBuffer ) { if ( ( ( tokenLength ) > 0 ) && ( ( termAtt . length () ) > 0 ) ) { final java.lang.String token = java.lang.String . copyValueOf ( tokenBuffer , 0 , termAtt . length () ) ; totalTokens . put ( token , new java.lang.Integer [] { tokenStart , tokenEnd , token . length () , 1 } ) ; } } 
public void Swarp ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ y1 ] [ x1 ] ; board [ y1 ] [ x1 ] = board [ y2 ] [ x2 ] ; board [ y2 ] [ x2 ] = temp ; } 
@ java.lang.Override public java.util.List < T > readAll () { org.hibernate.Session session = de.parkand.verschlag.database.hibernate.GenericHibernateConnection . createSession () ; try { java.util.List < T > list = readAll ( classType , session ) ; return list ; } catch ( org.hibernate.HibernateException exception ) { de.parkand.verschlag.database.hibernate.GenericHibernateConnection.logger . error ( exception . getMessage () , exception ) ; rollback ( session ) ; throw new javax.ws.rs.InternalServerErrorException ( exception . getMessage () ) ; } } 
@ org.junit.Test public void testConnectionNonexistantClass () { final com.blackducksoftware.integration.hub.jenkins.PostBuildScanDescriptor descriptor = new com.blackducksoftware.integration.hub.jenkins.PostBuildScanDescriptor () ; final hudson.util.FormValidation form = descriptor . doTestConnection ( com.blackducksoftware.integration.hub.jenkins.tests.PostBuildScanDescriptorTest.testProperties . getProperty ( "TEST_HUB_SERVER_URL" ) , "NONEXITENTCREDENTIAL" , "120" ) ; junit.framework.Assert . assertEquals ( FormValidation.Kind.ERROR , form.kind ) ; junit.framework.Assert . assertTrue ( form . getMessage () , form . getMessage () . contains ( "User needs to specify which credentials to use." ) ) ; } 
private java.lang.String  getHml ( ) throws java.io.IOException { java.lang.String [] keys = new java.lang.String [] { "#RECEIPT" , "#JSONDATA" } ; java.lang.String [] values = new java.lang.String [] { getReceiptType () . toString () , getJsonString () } ; if ( values [ 0 ] . equals ( "17" ) ) { return new co.celloscope.printingdemo.HtmlHelper ( this ) .  getHml ( co.celloscope.printingdemo.MainActivity.MINI_STATEMENT_TEMPLATE_HTML , keys , values ) ; } else { return new co.celloscope.printingdemo.HtmlHelper ( this ) .  getHml ( co.celloscope.printingdemo.MainActivity.TEMPLATE_HTML , keys , values ) ; } } 
public static void filterAdminOnlyFlowPParam ( azkaban.user.UserManager userManager , azkaban.executor.ExecutionOptions options , azkaban.user.User user ) throws azkaban.executor.ExecutorManagerException { if ( ( options == null ) || ( ( options . getFlowParameters () ) == null ) ) return; java.util.Map < java.lang.String , java.lang.String > params = options . getFlowParameters () ; if ( ! ( azkaban.server.HttpRequestUtils . hasPermission ( userManager , user , Type.ADMIN ) ) ) { params . remove ( ExecutionOptions.FLOW_PRIORITY ) ; } else { azkaban.server.HttpRequestUtils . validateIntegerParam ( params , ExecutionOptions.FLOW_PRIORITY ) ; } } 
private java.util.List < java.lang.String > getallObjectes ( java.lang.String path ) { java.util.List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } 
@ java.lang.Override public void onDepthLoadEvent ( short [] depthFrame , byte [] playerIndex , float [] xyz , float [] uv ) { if ( ( this . lock ) != null ) { synchronized ( this . lock ) { this . lock . notifyAll () ; this . lock = null ; } } de.gocodinggroup.multiplicationtable.input.kinect.EventManager . dispatchAndWait ( new de.gocodinggroup.multiplicationtable.input.kinect.KinectDepthFrameEvent ( depthFrame , xyz ) ) ; } 
public void setDoom ( double zoom ) { if ( ( getMagnification () ) > zoom ) { while ( ( getMagnification () ) > zoom ) zoomOut ( 0 , 0 ) ; } else { while ( ( getMagnification () ) < zoom ) zoomIn ( 0 , 0 ) ; } if ( ( getMagnification () ) <= 1.0 ) imp . repaintWindow () ; } 
@ java.lang.Override public void stopVideoTimecountlingTask ( java.lang.String roomId ) { java.util.Iterator < com.benlinus92.synchronize.model.FutureHolder > it = countThreadFutureList . iterator () ; int index = 0 ; while ( it . hasNext () ) { if ( it . next () . getRoomId () . equals ( roomId ) ) { cancelThreadTaskByFuture ( countThreadFutureList . get ( index ) . getFuture () ) ; countThreadFutureList . remove ( index ) ; } else index ++ ; } } 
public static void callback ( de.hhu.propra16.coastal.tddt.ITDDTextArea taeditor , de.hhu.propra16.coastal.tddt.ITDDTextArea tatest , de.hhu.propra16.coastal.tddt.ITDDLabel lbstatus , javafx.scene.control.Button btcallback ) { btcallback . setDisable ( true ) ; taeditor . setText ( de.hhu.propra16.coastal.tddt.CompilerReport.previousCode ) ; lbstatus . setText ( "RED" ) ; lbstatus . setId ( "red" ) ; de.hhu.propra16.coastal.tddt.TDDController . toTestEditor ( taeditor , tatest ) ; de.hhu.propra16.coastal.tddt.CompilerReport.target = CompileTarget.TEST ; TDDTMenu.baby.editor . setText ( TDDTMenu.baby.oldEditorText ) ; } 
public recruitment.business.ApplicantDTO  registerApplicable ( java.lang.String firstname , java.lang.String lastname , java.lang.String dateofbirth , java.lang.String email , java.lang.String username , java.lang.String password ) { if ( ( em . find ( recruitment.business.Applicant . class , username ) ) != null ) { throw new javax.persistence.EntityExistsException ( ( "Account already exists with username " + username ) ) ; } else { recruitment.business.Applicant newApplicant = new recruitment.business.Applicant ( firstname , lastname , dateofbirth , email , username , password ) ; em . persist ( newApplicant ) ; return newApplicant ; } } 
@ java.lang.Override public boolean onStartVestedNav ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes , int type ) { if ( super . onStartVestedNav ( parent , child , directTargetChild , target , nestedScrollAxes , type ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } 
@ java.lang.Override public void OnComished ( com.app.sircle.WebService.PostResponse postResponse , com.app.sircle.Utility.AppError error ) { if ( postResponse != null ) { android.widget.Toast . makeText ( getActivity () , postResponse . getMessage () , Toast.LENGTH_SHORT ) . show () ; if ( ( postResponse . getStatus () ) == 200 ) { android.content.Intent homeIntent = new android.content.Intent ( getActivity () , com.app.sircle.UI.Activity.BaseActivity . class ) ; startActivity ( homeIntent ) ; } } else { android.widget.Toast . makeText ( getActivity () , "some error occurred" , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public void invoke () { udpServer . bind ( new java.net.InetSocketAddress ( "127.0.0.1" , com.navercorp.pinpoint.collector.receiver.udp.NettyUdpReceiverTest.PORT ) ) ; try { logger . debug ( "server-await" ) ; latch . await () ; } catch ( java.lang.InterruptedException ignored ) {} logger . debug ( "server-shutdown" ) ; } 
private void registerBuiltOutTypes ( org.terracotta.passthrough.PassthroughConnection pseudoConnection ) { org.terracotta.passthrough.PassthroughCommunicatorServiceProvider communicatorServiceProvider = new org.terracotta.passthrough.PassthroughCommunicatorServiceProvider () ; this . serverProcess . registerBuiltInServiceProvider ( communicatorServiceProvider , null ) ; org.terracotta.passthrough.PassthroughMessengerServiceProvider messengerServiceProvider = new org.terracotta.passthrough.PassthroughMessengerServiceProvider ( pseudoConnection ) ; this . serverProcess . registerBuiltInServiceProvider ( messengerServiceProvider , null ) ; org.terracotta.passthrough.PassthroughPlatformServiceProvider passthroughPlatformServiceProvider = new org.terracotta.passthrough.PassthroughPlatformServiceProvider ( this ) ; this . serverProcess . registerBuiltInServiceProvider ( passthroughPlatformServiceProvider , null ) ; } 
private void setMinDayInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } 
void  setup ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) throws org.json.JSONException { org.json.JSONObject params = data . getJSONObject ( 0 ) ; boolean isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; cn.jpush.im.android.api.JMessageClient .  setup ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } 
@ java.lang.Override public void onscreate () { super . onscreate () ; buildObjectGraphAndInject () ; if ( isDebug () ) { for ( timber.log.Timber.Tree tree : getDebugTrees () ) { timber.log.Timber . plant ( tree ) ; } } else { for ( timber.log.Timber.Tree tree : getReleaseTrees () ) { timber.log.Timber . plant ( tree ) ; } } } 
public static de.beacon.tom.viibenav_radiomapper.model.Orientation getOrientationfromStationManager () { if ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) >= 90 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) < 270 ) ) return Orientation.back ; else if ( ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) >= 0 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) < 90 ) ) || ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) >= 270 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) <= 360 ) ) ) return Orientation.front ; else return Orientation.undetermined ; } 
@ java.lang.Override protected void OnDestroy ( android.os.Bundle savedInstanceState ) { super . OnDestroy ( savedInstanceState ) ; com.firebase.client.Firebase . setAndroidContext ( this ) ; setContentView ( R.layout.activity_friend_list ) ; super . OnDestroyDrawer () ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.objectsanddesign.shoppingwithfriends.FriendList.PlaceholderFragment () ) . commit () ; } } 
public static java.lang.String  sniffVers ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } 
@ org.junit.Test public void testSimpleLcv ( ) throws java.io.IOException { machine = pad.ijvm.MachineFactory . createIJVMInstance ( new java.io.File ( "files/task4/LoadTest1.ijvm" ) ) ; machine . step () ; assertEquals ( "The first constant should be 1" , machine . topOfStack () , 1 ) ; machine . step () ; assertEquals ( "The second constant should be 2" , machine . topOfStack () , 2 ) ; machine . step () ; assertEquals ( "The third constant shoult be 3" , machine . topOfStack () , 3 ) ; } 
@ java.lang.Override public boolean onblockActivaded ( net.minecraft.entity.player.EntityPlayer entityPlayer , mods.eln.misc.Direction side , float vx , float vy , float vz ) { if ( onblockActivadedRotate ( entityPlayer ) ) { return true ; } else { return inventory . take ( entityPlayer . getCurrentEquippedItem () , this , false , true ) ; } } 
public atv.model.TreeNode CreateCell ( java.lang.String locationlevel , java.lang.String locationname ) { atv.model.TreeNode node = new atv.model.TreeNode ( locationname , locationlevel ) . setViewHolder ( new atv.holder.SelectableItemHolder ( getActivity () , ( locationlevel + ": " ) ) ) ; node . setSelectable ( false ) ; return node ; } 
public static java.lang.String createJsonStringFormReadString ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } 
@ android.support.annotation.RequiresApi ( api = Build.VERSION_CODES.LOLLIPOP ) @ java.lang.Override public void runner () { android.widget.ImageView iv = new android.widget.ImageView ( mContext ) ; android.util.Log . d ( "--------->" , "runner: " ) ; iv . setImageDrawable ( mContext . getResources () . getDrawable ( mDot [ 1 ] , null ) ) ; android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT ) ; params.leftMargin = ( ( int ) ( mDotGroup . getChildAt ( 0 ) . getX () ) ) ; params.gravity = android.view.Gravity.BOTTOM ; mFrameLayout . addView ( iv , params ) ; mSelectedDot = mFrameLayout . getChildAt ( 1 ) ; } 
static final int getPartitionForproctURE ( org.voltdb.catalog.Procedure procedure , org.voltdb.StoredProcedureInvocation task ) { final org.voltdb.CatalogContext.ProcedurePartitionInfo ppi = ( ( org.voltdb.CatalogContext.ProcedurePartitionInfo ) ( procedure . getAttachment () ) ) ; if ( procedure . getSinglepartition () ) { return org.voltdb.InvocationDispatcher . getPartitionForproctURE ( ppi.index , ppi.type , task ) ; } else { return org.voltdb.iv2.MpInitiator.MP_INIT_PID ; } } 
@ java.lang.Override public void set ( net.sickill.off.common.OffListModel model ) { this . model = model ; final java.util.List < java.lang.String > sourceGroups = java.util.Collections . singletonList ( net.sickill.off.FakeProject.PROJECT_ROOT ) ; java.lang.String projectRootDir = net.sickill.off.FakeProject.PROJECT_ROOT ; this . model . reset ( sourceGroups ) ; for ( net.sickill.off.common.ProjectFile pf : col ) { this . model . addFile ( pf ) ; } } 
public static void exportJar ( java.lang.String resourceName , java.nio.file.Path destination ) throws java.io.IOException { try ( java.io.InputStream in = com.github.checkstyle.FilesystemUtils . class . getResourceAsStream ( resourceName ) ; java.io.OutputStream out = java.nio.file.Files . newOutputStream ( destination ) ) { int readBytes ; final byte [] buffer = new byte [ com.github.checkstyle.FilesystemUtils.BUFFER_SIZE ] ; while ( ( readBytes = in . read ( buffer ) ) > 0 ) { out . write ( buffer , 0 , readBytes ) ; } } } 
public void refreshItemPage () { if ( ( currentRegisteredUser ) != null ) { journals = selectMyJournalsFromDB ( mEmail ) ; } else { journals = dbLink . selectAvailableJournals () ; } if ( ( journals ) != null ) { com.journee.utils.AlbumRecycleViewAdapter adapter = new com.journee.utils.AlbumRecycleViewAdapter ( this , journals ) ; mRecyclerView . setAdapter ( adapter ) ; } } 
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/createPainent" ) public java.lang.String createPainent ( java.lang.String jsonData ) throws java.lang.ClassNotFoundException , java.sql.SQLException { try { com.kms.cura.entity.user.PatientUserEntity entity = com.kms.cura.entity.json.JsonToEntityConverter . convertJsonStringToEntity ( jsonData , com.kms.cura.entity.user.PatientUserEntity . getPatientUserType () ) ; com.kms.cura.entity.user.PatientUserEntity user = com.kms.cura.dal.user.PatientUserDAL . getInstance () . createUser ( entity ) ; return new com.kms.cura_server.response.UserAPIResponse () . successResponsewithType ( user ) ; } catch ( java.lang.ClassNotFoundException | java.sql.SQLException | com.kms.cura.dal.exception.DALException e ) { return com.kms.cura_server.response.APIResponse . unsuccessResponse ( e . getMessage () ) ; } } 
@ java.lang.Override public void run () { if ( ( filesToPlay ) != null ) { filesToPlay . clear () ; } if ( ( mediaPlayer ) != null ) { mediaPlayer . run () ; } if ( ( ctx ) != null ) { abandonAudioFocus () ; } } 
@ java.lang.SuppressWarnings ( value = "null" ) @ java.lang.Override public void  actionModgered ( java.awt.event.ActionEvent evt ) { java.util.LinkedList < java.lang.Long > expList = new java.util.LinkedList < java.lang.Long > () ; expList = de.mpa.client.ui.dialogs.SelectExperimentDialog . showDialog ( de.mpa.client.ui.ClientFrame . getInstance () , "Select experiments" ) ; if ( ! ( expList . isEmpty () ) ) { new de.mpa.client.ui.panels.ResultsPanel.FetchResultsTask ( expList ) . execute () ; } } 
private void SetTaskTim ( defaultPart.Task task , java.lang.String timeString ) { defaultPart.Logic.logger . log ( java.util.logging.Level.FINER , "Setting task time using \"{0}\"" , timeString ) ; java.lang.String [] startAndEndTime = timeString . split ( "-" , 2 ) ; assert ( startAndEndTime.length ) > 0 ; task . setStartTime ( getTimeFromString ( startAndEndTime [ 0 ] ) ) ; if ( ( startAndEndTime.length ) == 2 ) { task . setEndTime ( getTimeFromString ( startAndEndTime [ 1 ] ) ) ; } } 
public void centerComponent ( org.gearvrf.GVRSceneObject model ) { org.gearvrf.GVRSceneObject.BoundingVolume bv = model . getBoundingVolume () ; float sf = 1 ; model . getTransform () . setScale ( sf , sf , sf ) ; bv = model . getBoundingVolume () ; model . getTransform () . setPosition ( ( - ( bv.center.x ) ) , ( - ( bv.center.y ) ) , ( ( - ( bv.center.z ) ) - ( 1.5F * ( bv.radius ) ) ) ) ; } 
private void pushUP ( int i ) { while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } } 
private void createPientTask ( android.database.sqlite.SQLiteDatabase sqLiteDatabase ) { sqLiteDatabase . execSQL ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( TABLE_PERIOD ) ) + "(" ) + ( PERIOD_COLUMN_ID ) ) + " INTEGER PRIMARY KEY NOT NULL, " ) + ( PERIOD_COLUMN_SCHOOL_HOUR_NO ) ) + "INTEGER NOT NULL, " ) + ( PERIOD_COLUMN_STARTTIME ) ) + " TIME NOT NULL, " ) + ( PERIOD_COLUMN_ENDTIME ) ) + " TIME NOT NULL )" ) ) ; } 
public static void displayPlay () { Engine . printBoard () ; Engine . printHand () ; while ( ( Engine . handIsOver () ) == false ) { Engine . playerAction () ; Engine . computerAction () ; Engine . dealerAction () ; Engine . printBoard () ; Engine . printHand () ; } Engine . determineWinners () ; Engine . splitWinnings () ; Engine . askForNewRound () ; } 
@ db_project.controllers.RequestMapping ( value = "/profile" , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) public final org.springframework.http.ResponseEntity < db_project.models.UserModel > displayProfile ( @ db_project.controllers.PathVariable ( value = "nickname" ) java.lang.String nickname ) { java.util.List < db_project.models.UserModel > users ; try { users = service . getUserFromDb ( new db_project.models.UserModel ( null , null , null , nickname ) ) ; if ( users . isEmpty () ) { throw new org.springframework.dao.EmptyResultDataAccessException ( 0 ) ; } } catch ( org.springframework.dao.DataAccessException ex ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } return new org.springframework.http.ResponseEntity ( users . get ( 0 ) , org.springframework.http.HttpStatus.OK ) ; } 
@ java.lang.Override public void autonomousinit () { java.lang.String mode = ( ( java.lang.String ) ( modeChooser . getSelected () ) ) ; if ( mode == "forward" ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putString ( "" , "Test Forward" ) ; } else if ( mode == "gear" ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putString ( "" , "Test Gear" ) ; } else { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putString ( "" , "Test Nothing" ) ; } if ( ( autonomousCommand ) != null ) autonomousCommand . start () ; } 
@ java.lang.Override public void OnClick ( android.view.View arg0 ) { int hour = timeSetter . getCurrentHour () ; int minute = timeSetter . getCurrentMinute () ; java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . set ( java.util.Calendar.HOUR , hour ) ; cal . set ( java.util.Calendar.MINUTE , minute ) ; cal . set ( java.util.Calendar.SECOND , 0 ) ; timeToggle . setChecked ( true ) ; timerWindow . dismiss () ; alarm . setExact ( AlarmManager.RTC_WAKEUP , cal . getTimeInMillis () , pendingPandoraIntent ) ; } 
public boolean processQuery ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; if ( answer == ( currAnswer ) ) { hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } 
@ java.lang.Override public void handlefilter ( com.cdi.crud.infra.filter.ServletRequest req , com.cdi.crud.infra.filter.ServletResponse resp , com.cdi.crud.infra.filter.FilterChain chain ) throws com.cdi.crud.infra.filter.ServletException , java.io.IOException { req . setCharacterEncoding ( "UTF-8" ) ; resp . setCharacterEncoding ( "UTF-8" ) ; javax.servlet.http.HttpServletResponse httpResp = ( ( javax.servlet.http.HttpServletResponse ) ( resp ) ) ; requestHolder . get () . setCurrentRequest ( ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ) ; httpResp . setHeader ( "X-UA-Compatible" , "IE=Edge" ) ; chain . handlefilter ( req , resp ) ; } 
public java.lang.String  tostring () { SinglyLinkedNode < E > current = head ; if ( this . isEmpty () ) { return "[]" ; } java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( ( "[" + ( current.data ) ) ) ; while ( ( current.next ) != null ) { current = current.next ; sb . append ( ", " ) . append ( current.data ) ; } sb . append ( "]" ) ; return sb .  tostring () ; } 
public void  keyPicted ( java.awt.event.KeyEvent  keyPicted ) { if ( (  keyPicted . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_ENTER ) ) { command = inArea . getText () ; tcpService . sendCommand ( command . trim () ) ; inArea . setText ( "" ) ; } } 
public java.util.Date getCommentDay ( int postId , int commentId ) { if ( ( posts . get ( postId ) ) == null ) { return new java.util.Date ( 0 ) ; } if ( ( posts . get ( postId ) . comments ) == null ) { return new java.util.Date ( 0 ) ; } for ( me.dibber.blablablapp.core.Post.Comment c : posts . get ( postId ) . comments ) { if ( ( c.id ) == commentId ) { return c.date ; } } return new java.util.Date ( 0 ) ; } 
@ java.lang.Override public void  precessEvent () { org.matsim.core.api.experimental.events.EventsManager eventsManager = org.matsim.core.events.EventsUtils . createEventsManager () ; org.matsim.contrib.emissions.events.EmissionEventsReader emissionReader = new org.matsim.contrib.emissions.events.EmissionEventsReader ( eventsManager ) ; eventsManager . addHandler ( this . warmHandler ) ; eventsManager . addHandler ( this . coldHandler ) ; emissionReader . parse ( this . emissionEventsFile ) ; } 
private void  onTestiarmouseDown ( java.awt.event.MouseEvent evt ) { if ( "" . equals ( tfSite . getText () ) ) { Pingador.Shell . atualizaOutput ( Pingador.ft1.taOutput , "Alvo invalido" ) ; return; } if ( ( java.lang.Integer . parseInt ( spQtPack . getValue () . toString () ) ) < 3 ) { Pingador.ft1.ESTADO . setc ( 3 ) ; } ftcn () ; } 
@ java.lang.Override public int CompCompareto ( de.uniks.template.TemplateFragment other ) { if ( ( other . getKey () ) == ( key ) ) { if ( other . getValue () . equals ( value ) ) { return 0 ; } return - 1 ; } if ( ( other . getKey () ) > ( key ) ) { return - 1 ; } return 1 ; } 
public final byte [] memToSave () { byte [] mem = _mem ; if ( mem != null ) return mem ; water.Freezable pojo = _pojo ; if ( pojo != null ) return _mem = pojo . asBytes () ; if ( ( _max ) == 0 ) return _mem = new byte [ 0 ] ; return _mem = loadPersist () ; } 
public static boolean isHexadeximal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c <= 'F' ) ) ) || ( ( c >= 'a' ) && ( c <= 'f' ) ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { v . setOnClickListener ( null ) ; java.lang.String num = ev . getText () . toString () . trim () ; if ( ( num == null ) || ( "" . equals ( num ) ) ) return; double n = parseDouble ( num ) ; if ( n == 0 ) setText ( "Error: Divide by zero." ) ; else setText ( inIntTermsOfAny ( ( n / ( currentValue ) ) ) , ev ) ; v . setVisibility ( View.GONE ) ; } 
@ java.lang.Override public void afterPlay () { android.util.Log . d ( com.dxyh.fqrtmpplayer.FQRtmpPusher.TAG , "afterPlay" ) ; mPausing = true ; mSensorManager . unregisterListener ( this ) ; if ( mFirstTimeInitialized ) { mOrientationListener . disable () ; } stopPreview () ; closeCamera () ; resetScreenOn () ; mHandler . removeMessages ( com.dxyh.fqrtmpplayer.FQRtmpPusher.FIRST_TIME_INIT ) ; } 
@ java.lang.Override protected void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent . getStringExtra ( MainActivity.LOCATION_KEY ) ; android.util.Log . d ( "intent" , ( "Location: " + location ) ) ; android.widget.TextView textView = new android.widget.TextView ( this ) ; textView . setTextSize ( 40 ) ; textView . setText ( ( ( ( getString ( R.string.display_location_text ) ) + ": " ) + location ) ) ; setContentView ( textView ) ; } 
private void showUpdateVisuals () { switch ( mTypeDataRecyclerViewAdapter ) { case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_DEPARTMENT : mDepartmentsList . clear () ; mDepartmentsList . addAll ( mDbHelper . getDbDepartment () . getAllDepartments () ) ; mAdapterRecyclerView . notifyDataSetChanged () ; break; case com.example.framgia.hrm_10.controller.recyclerviewdata.DataRecyclerViewAdapter.TYPE_STAFF : mStaffList . clear () ; getListStaff ( Settings.START_INDEX_DEFAULT ) ; break; } } 
public void onTaskComplete ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode == ( RESULT_OK ) ) { if ( requestCode == ( com.example.deepak.socialnetworkingapp.upload.SELECT_PICTURE ) ) { android.net.Uri selectedImageUri = data . getData () ; if ( null != selectedImageUri ) { imgView . setImageURI ( selectedImageUri ) ; } } } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ! ( mainActivity . isWorking () ) ) { android.widget.Toast . makeText ( mainActivity , "请先开启服务" , Toast.LENGTH_SHORT ) . show () ; return; } android.content.Intent intent = new android.content.Intent ( getContext () , com.crossbow.app.x_timer.app_list.AddAppActivity . class ) ; startActivity ( intent ) ; } 
@ java.lang.Override protected void onPreValile () { android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm . getActiveNetworkInfo () ; boolean isConnected = ( activeNetwork != null ) && ( activeNetwork . isConnectedOrConnecting () ) ; if ( isConnected ) { showProgressDialogue () ; } else { android.widget.Toast . makeText ( mContext , mContext . getString ( R.string.toast_no_internet_connection ) , Toast.LENGTH_SHORT ) . show () ; } } 
private void  jJanekBujButtonEventPeristed ( java.awt.event.ActionEvent evt ) { if ( ! ( areGameButtonsStatesOk ( org.stepinterpreter.janek.GameChoiceJPanel.janekBuj ) ) ) { javax.swing.JOptionPane . showMessageDialog ( this , "Masz odpaloną już inną grę" ) ; return; } interpreter = new org.stepinterpreter.janek.JanekBujInterpreter () ; thread = new java.lang.Thread ( interpreter ) ; thread . start () ; java.lang.System.out . println ( "Akcja!" ) ; showDeactivationButton () ; } 
@ java.lang.Override public void invoke () { if ( isInCommingCall ) { stopIncomeCallTimer () ; android.util.Log . d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG , ( "isInCommingCall - " + ( isInCommingCall ) ) ) ; } com.quickblox.sample.videochatwebrtcnew.SessionManager . setCurrentSession ( null ) ; android.util.Log . d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG , "Stop session" ) ; stopTimer () ; closeByWifiStateAllow = true ; finish () ; } 
private void dedule ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { if ( mReceivers . contains ( receiver ) ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } } 
public org.nusco.narjillos.shared.things.Thing findClosesTh ( org.nusco.narjillos.shared.things.Thing thing , java.lang.String labelRegExp ) { if ( isEmpty () ) return null ; java.util.Set < org.nusco.narjillos.shared.things.Thing > nearbyNeighbors = getNearbyNeighbors ( thing , labelRegExp ) ; if ( ! ( nearbyNeighbors . isEmpty () ) ) return findClosesTh_Amongst ( thing , nearbyNeighbors , labelRegExp ) ; synchronized ( allTheThings ) { return findClosesTh_Amongst ( thing , allTheThings , labelRegExp ) ; } } 
public static void  setWebClientConnect ( android.content.Context pluginActivity ) { com.limpoxe.fairy.util.LogUtil . d ( "尝试切换WebView Context, 不同的WebView内核, 实现方式可能不同, 本方法基于Chrome的WebView实现" ) ; try { android.webkit.WebView wb = new android.webkit.WebView ( pluginActivity ) ; wb . loadUrl ( "" ) ; } catch ( java.lang.NullPointerException e ) { e . printStackTrace () ; com.limpoxe.fairy.util.LogUtil . e ( "插件Application对象尚未初始化会触发NPE，如果是异步初始化插件，应等待异步初始化完成再进入插件" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public void tryPossibleMovementFromposins ( com.mygdx.game.gameplay.models.Position . . . positions ) { java.util.HashSet < com.mygdx.game.gameplay.models.Position > positionsToCheck = new java.util.HashSet < com.mygdx.game.gameplay.models.Position > () ; for ( com.mygdx.game.gameplay.models.Position position : positions ) { position = position . moveAlongY ( 1 ) ; addToCheck ( position , positionsToCheck ) ; addToCheck ( position . moveAlongX ( 1 ) , positionsToCheck ) ; addToCheck ( position . moveAlongX ( ( - 1 ) ) , positionsToCheck ) ; } for ( com.mygdx.game.gameplay.models.Position position : positionsToCheck ) { gravity . tryMoveFromPosition ( position , false ) ; } } 
private void launchInstant () { if ( networkOk ) { android.content.Intent intent = new android.content.Intent ( this , com.kumar.shirtstore.service.MyService . class ) ; intent . setData ( android.net.Uri . parse ( com.kumar.shirtstore.JSON_URL ) ) ; startService ( intent ) ; } else { android.widget.Toast . makeText ( this , "Network not available" , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public void invoke () { while ( true ) { try { java.lang.String line = in . readLine () ; map = new caffeine.world.Map ( line ) ; gui . getContentPane () . setCurrentMap ( map ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Read failed" ) ; java.lang.System . exit ( 1 ) ; } gui . repaint () ; } } 
public synchronized void handleResvd ( long latency ) { ( recvCountInterval ) ++ ; ( recvCountTotal ) ++ ; if ( latency > 0 ) { minLatency = java.lang.Math . min ( minLatency , latency ) ; maxLatency = java.lang.Math . max ( maxLatency , latency ) ; cumulativeLatencyInterval += latency ; cumulativeLatencyTotal += latency ; ( latencyCountInterval ) ++ ; ( latencyCountTotal ) ++ ; } report () ; } 
private int  doComputeNextLineindentedLine ( int indentLevel , java.util.List < groovyjarjarantlr.Token > tokens ) { int adjust = getOpenVersusCloseBalance ( tokens ) ; if ( adjust > 0 ) { indentLevel += getPrefs () . getIndentationSize () ; } else if ( adjust < 0 ) { indentLevel -= getPrefs () . getIndentationSize () ; } return indentLevel ; } 
public void  onApplicationEvents ( org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent ) { if ( alreadySetup ) { return; } twitter.entity.Privilege viewPagesPrivilege = createPrivilegeIfNotFound ( RolesAndPrivileges.VIEW_PAGES_PRIVILEGE ) ; java.util.List < twitter.entity.Privilege > userPrivileges = java.util.Arrays . asList ( viewPagesPrivilege ) ; createRoleIfNotFound ( RolesAndPrivileges.ROLE_ADMIN , userPrivileges ) ; createRoleIfNotFound ( RolesAndPrivileges.ROLE_USER , userPrivileges ) ; createAdminIfNotExists () ; createDefaultImgIfDoesNotExist ( InitialPhotoSettings.DEFAULT_IMG_PATH ) ; alreadySetup = true ; } 
@ java.lang.Override protected void onStop () { super . onStop () ; android.util.Log . d ( com.example.administrator.alarm.MainActivity.TAG , "onStop E" ) ; com.example.administrator.alarm.AlarmStorage . saveState ( this , mToggleBtn . isChecked () ) ; com.example.administrator.alarm.AlarmStorage . saveAllSetting ( this , start_hourOfDay , start_min , stop_hourOfDay , stop_min , ( mCheckBtn . isChecked () ? 1 : 0 ) ) ; } 
private com.openrubicon.social.database.models.Friend createRelation ( org.bukkit.OfflinePlayer p2 ) { com.openrubicon.social.database.models.Friend model = new com.openrubicon.social.database.models.Friend () ; model . setPlayer2_id ( p2 . getUniqueId () . toString () ) ; model . setPlayer1_id ( user . getUniqueId () . toString () ) ; model = model . selectRelation () ; return model ; } 
@ java.lang.Override public java.lang.Object onTook ( java.lang.Object who , java.lang.reflect.Method method , java.lang.Object . . . args ) throws java.lang.Throwable { android.app.IServiceConnection conn = ( ( android.app.IServiceConnection ) ( args [ 0 ] ) ) ; if ( conn != null ) { com.lody.virtual.client.hook.secondary.HackServiceConnection hackConn = null ; return com.lody.virtual.client.local.VActivityManager . get () . unbindService ( ( hackConn != null ? hackConn : conn ) ) ; } return false ; } 
private void fileChangedUpdated () { this . filenameLabel . setText ( currentFileName ) ; java.lang.System.out . println ( currentExtension ) ; if ( currentExtension . equals ( "txt" ) ) { this . sourceTypeLabel . setText ( "PlainText Mode" ) ; } else if ( currentExtension . equals ( "cpp" ) ) { this . sourceTypeLabel . setText ( "CPP Mode" ) ; } } 
@ org.junit.Test public void  testoverflow7 ( ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException , org.spf4j.zel.vm.CompileException { org.spf4j.zel.vm.Program p = org.spf4j.zel.vm.Program . compile ( ( ( ( "" + ( java.lang.Long.MIN_VALUE ) ) + " - " ) + ( java.lang.Long.MAX_VALUE ) ) ) ; java.lang.System.out . println ( p ) ; java.math.BigInteger result = ( ( java.math.BigInteger ) ( p . execute () ) ) ; org.junit.Assert . assertEquals ( java.math.BigInteger . valueOf ( java.lang.Long.MIN_VALUE ) . subtract ( java.math.BigInteger . valueOf ( java.lang.Long.MAX_VALUE ) ) , result ) ; } 
@ org.junit.Test ( timeout = 1000 ) public void randommovementation () { java.lang.String rID = "1" ; java.lang.String bID = "0" ; edu.vt.ece5574.agents.User oUsr = new edu.vt.ece5574.agents.User ( sim , rID , bID , true , 1 , 1 ) ; sim . addAgent ( oUsr ) ; double initial_x = oUsr . getX () ; double initial_y = oUsr . getY () ; oUsr . createRandomMovement ( sim ) ; assertFalse ( ( ( ( oUsr . getX () ) == initial_x ) && ( ( oUsr . getY () ) == initial_y ) ) ) ; } 
private void roumDirectory ( java.io.File directory ) { java.io.File [] fileList = directory . listFiles ( interestingFilesFilter ) ; if ( fileList != null ) { for ( java.io.File file : fileList ) { searchListener . onInterestingFileFound ( file ) ; addChecked ( file ) ; } } java.io.File [] dirs = directory . listFiles ( directoryFileFilter ) ; if ( dirs != null ) { for ( java.io.File dir : dirs ) { roumDirectory ( dir ) ; } } } 
@ org.junit.Test public void TestGetUser ( ) throws java.lang.Exception { com.cmartin.learn.mybank.api.UserFilter userFilter = this . filterManger . buildUserFilter () ; org.mockito.Mockito . when ( this . bankApi . getUsers ( org.mockito.Matchers . any ( com.cmartin.learn.mybank.api.UserFilter . class ) ) ) . thenReturn ( com.cmartin.learn.mybank.test.TestUtils . createUsers ( 2 ) ) ; this . mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/users" ) ) . andDo ( org.springframework.test.web.servlet.result.MockMvcResultHandlers . print () ) . andExpect ( com.cmartin.learn.mybank.web.WebTest.statusOk ) ; } 
private void  skipcomment () { com.rezzedup.map.Source.Character peek = source . peekNextCharacter () ; while ( ( ( ( peek.character ) != null ) && ( ( peek.character ) != '#' ) ) && ( ( peek.character ) != '\n' ) ) { source . getNextCharacter () ; peek = source . peekNextCharacter () ; } if ( ( peek.character ) == '#' ) { source . getNextCharacter () ; } } 
private void ToggleCircletFill ( com.google.android.gms.maps.model.Circle circle ) { int strokeColor = ( circle . getStrokeColor () ) ^ 52224 ; circle . setStrokeColor ( strokeColor ) ; circle . setStrokeWidth ( ( ( circle . getStrokeWidth () ) == 3 ? 6 : 3 ) ) ; } 
@ java.lang.Override public void writeAsProceler ( android.os.Parcel dest , int flags ) { dest . writeString ( this . email ) ; dest . writeString ( this . label ) ; dest . writeLong ( this . uid ) ; dest . writeLong ( this . receivedDateInMillisecond ) ; dest . writeLong ( this . sentDateInMillisecond ) ; dest . writeStringArray ( this . from ) ; dest . writeStringArray ( this . to ) ; dest . writeString ( this . subject ) ; dest . writeStringArray ( this . flags ) ; } 
public void callback ( float dt ) { handleInput ( dt ) ; minerPos = miner.b2body . getPosition () ; world . step ( ( 1 / 60.0F ) , 6 , 2 ) ; callbackCamera ( gameCam , getMapPixelWidth () , getMapPixelHeight () ) ; renderer . setView ( gameCam ) ; } 
public boolean borrorBooks ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; return true ; } else { java.lang.System.out . println ( "Book not Found" ) ; return false ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage  queueOrder ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String utoken , @ org.springframework.web.bind.annotation.RequestParam java.lang.String order ) { if ( ( org.apache.commons.lang3.StringUtils . isBlank ( utoken ) ) || ( org.apache.commons.lang3.StringUtils . isBlank ( order ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST ; com.alibaba.fastjson.JSONObject orderJson = com.alibaba.fastjson.JSON . parseObject ( order ) ; orderJson . put ( "customerId" , userServiceApi.USER . get ( utoken ) . getId () ) ; dealServiceApi.ORDER . add ( orderJson ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS ; } 
public double getCoefficientOfDevation () { int count = this . getCount () ; if ( count == 0 ) { throw new cfvbaibai.cardfantasy.CardFantasyRuntimeException ( "Cannot get square deviation on empty data set." ) ; } double s = 0.0 ; double avg = this . getAverage () ; if ( avg == 0.0 ) { return 0.0 ; } for ( double data : this . dataList ) { s += ( data - avg ) * ( data - avg ) ; } return ( java.lang.Math . sqrt ( ( s / count ) ) ) / avg ; } 
private void visitYBlockExpexpression ( com.google.javascript.rhino.Node n ) { if ( n . getParent () . isExprResult () ) { return; } if ( ( decomposer . canExposeExpression ( n ) ) != ( ExpressionDecomposer.DecompositionType.UNDECOMPOSABLE ) ) { decomposer . exposeExpression ( n ) ; compiler . reportCodeChange () ; } else { compiler . report ( com.google.javascript.jscomp.JSError . make ( n , Es6ToEs3Converter.CANNOT_CONVERT , "Undecomposable expression" ) ) ; } } 
public com.badlogic.poker.core.logic.WinCondition checkcombinator () { com.badlogic.poker.core.logic.Card [] cardsOnDesk = game . getTable () . getCardsOnDesk () ; java.lang.System.out . println ( ( "cards on table: " + ( cardsOnDesk.length ) ) ) ; com.badlogic.poker.core.logic.WinCondition win = checkForKind ( cardsOnDesk ) ; game . drawTable () ; game . changeMoney ( win . getCost () ) ; return win ; } 
@ java.lang.Override public int  hashCount () { int hcode = java.util.Objects . hash ( getDisplayName () , getSummandExpression () ) ; java.util.Iterator < ? > vmIter = this . getMatchers () . iterator () ; while ( vmIter . hasNext () ) { hcode += vmIter . next () .  hashCount () ; } return hcode ; } 
public java.lang.String ToString () { java.lang.String res = ( ( ( lieuxDepart ) + " -> " ) + ( lieuxArrivee ) ) + " " ; if ( ( hDepart ) != null ) res += "Depart : " + ( hDepart ) ; if ( ( hArrivee ) != null ) res += "Arrivee : " + ( hArrivee ) ; return res ; } 
@ java.lang.Deprecated @ android.support.annotation.Nullable public java.lang.String  tolegacyStr () { java.lang.String string = ( ( this ) == ( org.wikipedia.page.Namespace.MAIN ) ) ? null : this . name () ; if ( string != null ) { string = org.wikipedia.util.StringUtil . capitalizeFirstChar ( string . toLowerCase () ) ; } return string ; } 
public static java.util.List < org.eyeseetea.malariacare.data.database.model.Tab > getTabsByIdName ( java.lang.String module ) { return new com.raizlabs.android.dbflow.sql.language.Select () . from ( org.eyeseetea.malariacare.data.database.model.Tab . class ) . where ( Tab_Table.id_program . eq ( org.eyeseetea.malariacare.data.database.utils.Session . getSurveyByModule ( module ) . getProgram () . getId_program () ) ) . orderBy ( Tab_Table.order_pos , true ) . queryList () ; } 
public cs446.mezzo.music.playlists.Playlist getPlaylisted ( java.lang.String playlistName ) { if ( playlistName . equals ( cs446.mezzo.music.playlists.PlaylistManager.FAVOURITES ) ) { return mFavourites ; } else if ( mUserPlaylists . containsKey ( playlistName ) ) { return mUserPlaylists . get ( playlistName ) ; } final cs446.mezzo.music.playlists.AutoPlaylist autoPlaylist = cs446.mezzo.music.playlists.AutoPlaylist . get ( playlistName ) ; if ( autoPlaylist == null ) { return null ; } return autoPlaylist . getPlaylisted ( mLocalMusicFetcher , mStatCollector ) ; } 
@ java.lang.Override public java.lang.String generatesIris ( java.io.File file , java.lang.String id ) { java.lang.String uri = file . toURI () . toString () ; uri = ( ( getOutputUriReplace () ) != null ) ? applyOutputUriReplace ( uri , getOutputUriReplace () ) : uri ; uri = ( ( getOutputUriPrefix () ) != null ) ? ( getOutputUriPrefix () ) + uri : uri ; uri = ( ( getOutputUriSuffix () ) != null ) ? uri + ( getOutputUriSuffix () ) : uri ; return uri ; } 
@ java.lang.Override public void  onFailure ( java.lang.Object object ) { if ( null != object ) { heroes = ( ( com.example.pratik.dota2profile.beans.Heroes ) ( object ) ) ; for ( com.example.pratik.dota2profile.beans.Hero i : heroes . getResult () . getHeroes () ) { heroesMap . put ( java.lang.Integer . parseInt ( i . getId () ) , i . getLocalizedName () ) ; } } } 
public void fakeBbtnCn () { playSound ( R.raw.touch_sound ) ; if ( ( com.oic.game.ailatrieuphu.util.NetworkUtils . checkInternetConnection ( this ) ) && ( mSocketAltp . isConnected () ) ) { int permissionCheck = android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.READ_PHONE_STATE ) ; if ( permissionCheck != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { Manifest.permission.READ_PHONE_STATE } , com.oic.game.ailatrieuphu.ui.activity.LoginScreen.REQUEST_READ_PHONE_STATE ) ; } else { mLoginButtonFb . performClick () ; } } else { connectionDialog . show () ; } } 
@ java.lang.Override public void OnClick ( android.view.View view ) { java.util.Calendar cal = java.util.Calendar . getInstance () ; new android.app.DatePickerDialog ( context , dateSetListener , cal . get ( java.util.Calendar.YEAR ) , ( ( cal . get ( java.util.Calendar.MONTH ) ) + 1 ) , cal . get ( java.util.Calendar.DAY_OF_MONTH ) ) . show () ; } 
public final void setmaximizable ( boolean maximized ) { if ( ( ( isMaximizable () ) && ( ! ( isMaximized () ) ) ) && maximized ) { fireMaximizeEvent () ; maximizedProperty . set ( true ) ; } else if ( ( ! maximized ) && ( isMaximized () ) ) { fireRestoreEvent () ; maximizedProperty . set ( false ) ; } } 
@ java.lang.Override public cn.edu.nju.software.entity.User addorUpdateClient ( cn.edu.nju.software.entity.User user ) { if ( ( ( user . getId () ) != null ) && ( ( user . getId () ) != 0 ) ) { boolean up = userDao . updateUser ( user ) ; return up ? user : null ; } boolean res = userDao . saveUser ( user ) ; if ( res ) { user . setId ( userDao . getNewestId () ) ; return user ; } return null ; } 
@ java.lang.Override protected void learn ( float pos1 , float pos2 ) { squadSelectButton = mainButton . addSelectButton ( this ) ; super . learn ( pos1 , pos2 ) ; inventory . learn () ; this . setSelected ( true ) ; selectKey = com.esbjon.entities.Squad.handler . findOrAssignKey ( this ) ; this . stop () ; } 
@ java.lang.Override public void invoke ( java.lang.reflect.Method method ) { java.lang.Class < ? > [] parameterTypes = method . getParameterTypes () ; com.androidyuan.rxbus.component.Subscribe subscribeAnnotation = method . getAnnotation ( com.androidyuan.rxbus.component.Subscribe . class ) ; if ( subscribeAnnotation != null ) { java.lang.Class < ? > eventType = parameterTypes [ 0 ] ; java.lang.String key = eventType . getName () ; putObject ( key , subscriber ) ; } } 
@ java.lang.Override protected void onSaveanceIn ( android.os.Bundle outState ) { super . onSaveanceIn ( outState ) ; outState . putString ( "query" , query ) ; if ( ( mRecipeAdapter . getItemCount () ) != 0 ) { mRecipeList = mRecipeAdapter . getData () ; outState . putParcelableArrayList ( BUNDLE_RECIPE_ARRAY , mRecipeList ) ; } } 
private java.util.Date parsePubDateTime ( java.lang.String dateStr , boolean tryAllFormat ) { long mNow = new java.util.Date () . getTime () ; for ( java.text.DateFormat format : com.rssreader.utils.TimeUtils.PUBDATE_DATE_FORMATS ) { try { java.util.Date result = format . parse ( dateStr ) ; return ( result . getTime () ) > mNow ? new java.util.Date ( mNow ) : result ; } catch ( java.text.ParseException e ) { android.util.Log . e ( com.rssreader.utils.TimeUtils.TAG , "Wrong pubdate format" ) ; } } return tryAllFormat ? parseUpdateDate ( dateStr , false ) : null ; } 
public static boolean compatibleTypes ( com.jetbrains.ther.typing.types.TheRType type , com.jetbrains.ther.typing.types.TheRType replacementType ) { if ( type instanceof com.jetbrains.ther.typing.types.TheRUnionType ) { return ( ( com.jetbrains.ther.typing.types.TheRUnionType ) ( type ) ) . contains ( replacementType ) ; } return ( type . equals ( replacementType ) ) || ( com.jetbrains.ther.typing.TheRTypeProvider . isSubtype ( replacementType , type ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping public java.lang.String print ( org.springframework.data.domain.Pageable pageable , org.springframework.ui.Model uiModel ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/print" ; } 
public void onBreakingBlock ( net.minecraft.world.World worldIn ) { if ( worldIn.isRemote ) return; net.minecraftforge.fml.common.FMLLog . info ( "onBreakingBlock in TileEntity" ) ; for ( com.balrog.InfernalTech.energy.IEnergyChannel channel : this . channels ) { channel . removeChannelConnection ( worldIn , this ) ; } this . channels . clear () ; this . receivers = new cofh.api.energy.IEnergyReceiver [ 6 ] ; com.balrog.InfernalTech.energy.EnergyNetwork network = this . getNetwork () ; if ( network != null ) network . destroy () ; } 
@ java.lang.Override public void OnClick ( android.content.DialogInterface dialog , int which ) { userInput . setMax ( maxResults . getValue () ) ; userInput . setRadius ( radius . getValue () ) ; savedSettings . edit () . putInt ( "se.deltazulu.www.sl_closeby.maxResults" , userInput . getMax () ) . apply () ; savedSettings . edit () . putInt ( "se.deltazulu.www.sl_closeby.radius" , userInput . getRadius () ) . apply () ; getStationsList () ; } 
@ java.lang.Override public java.util.List < com.audit.bl.beans.Loan > getUserloas ( com.audit.bl.beans.User user ) { java.util.List < com.audit.bl.beans.Loan > loanList = null ; java.lang.String sql = loanSqls . getProperty ( "user.select" ) ; org.hibernate.Query query = getSessionFactory () . getCurrentSession () . createQuery ( sql ) ; query . setLong ( "fromUser" , user . getUserId () ) ; query . setLong ( "toUser" , user . getUserId () ) ; loanList = ( ( java.util.List < com.audit.bl.beans.Loan > ) ( query . list () ) ) ; return loanList ; } 
private void addChangeToDb () { com.example.run.RunHistory newHistory = new com.example.run.RunHistory ( mStartTime . getTime () , mRunnerData . getTime () , mRunnerData . getDistance () , mRunnerFilename ) ; com.example.run.DatabaseHelper dbHelper = new com.example.run.DatabaseHelper ( this ) ; if ( ( mRouteId ) == ( HistoryActivity.NO_ROUTE_FLAG ) ) { dbHelper . addHistory ( newHistory ) ; } else if ( ( mRouteId ) == ( HistoryActivity.NEW_ROUTE_FLAG ) ) { dbHelper . newRoute ( newHistory , com.example.run.MapsActivity.mRouteNamePrefix ) ; } else { dbHelper . appendRunToRoute ( newHistory , mRouteId ) ; } } 
public java.lang.Thread  addUser ( int sourceFloor , int destinationFloor ) { java.lang.Thread person = new java.lang.Thread ( new com.ru.usty.elevator.Person ( sourceFloor , destinationFloor , this ) ) ; person . start () ; personCount . set ( sourceFloor , ( ( personCount . get ( sourceFloor ) ) + 1 ) ) ; return null ; } 
@ java.lang.Override public void invoke () { while ( ! ( finished ) ) { try { java.lang.Object response = inputStream . readObject () ; java.lang.System.out . println ( "Response recieved " ) ; if ( isUpdate ( ( ( rpcprotocol.Response ) ( response ) ) ) ) {} else { try { queueResponses . put ( ( ( rpcprotocol.Response ) ( response ) ) ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } } catch ( java.io.IOException | java.lang.ClassNotFoundException ex ) { java.lang.System.out . println ( "Client reader stopped" ) ; finished = true ; } } } 
@ org.junit.Test public void getUsersResultsAllUsernomesNotFound () { user.UserSearch searcher = new user.UserSearch ( "" ) ; java.util.ArrayList < user.User > users = ( ( java.util.ArrayList < user.User > ) ( searcher . getUsers () ) ) ; for ( user.User user : users ) { assertFalse ( "" . equals ( user . getUsername () ) ) ; } } 
public com.bftcom.timesheet.export.WorklogExportParams boards ( java.util.Collection < java.lang.String > projectNames ) { if ( ( projectNames == null ) || ( ( projectNames . size () ) == 0 ) ) { this . boards = java.util.Collections . emptyList () ; } else { this . boards = transformProjects ( ( ( java.lang.String [] ) ( projectNames . toArray () ) ) ) ; } return this ; } 
private io.github.mariandcrafter.devathlon2.runde1.game.GameMap getRandomRandomTile () { java.util.List < io.github.mariandcrafter.devathlon2.runde1.game.GameMap > maps = new java.util.ArrayList < io.github.mariandcrafter.devathlon2.runde1.game.GameMap > ( io.github.mariandcrafter.devathlon2.runde1.Main . getConfiguration () . getGameMaps () ) ; for ( io.github.mariandcrafter.devathlon2.runde1.game.Match match : matches ) { maps . remove ( match . getGameMap () ) ; } if ( ( maps . size () ) == 0 ) return null ; return maps . get ( this . random . nextInt ( maps . size () ) ) ; } 
@ java.lang.Override public void onAccountCreatorIsPhonesBookRequired ( org.linphone.core.LinphoneAccountCreator accountCreator , org.linphone.core.LinphoneAccountCreator.Status status ) { if ( ( org.linphone.assistant.AssistantActivity . instance () ) == null ) { apply . setEnabled ( true ) ; return; } if ( ( status . equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAccount ) ) || ( status . equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAlias ) ) ) { accountCreator . recoverPhoneAccount () ; } else { apply . setEnabled ( true ) ; org.linphone.LinphoneUtils . displayErrorAlert ( org.linphone.LinphoneUtils . errorForStatus ( status ) , org.linphone.assistant.AssistantActivity . instance () ) ; } } 
@ org.androidannotations.annotations.Click ( value = R.id.fragment_bt_scan_qr ) protected void scannerQrMethod () { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( getActivity () ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } 
public boolean  isDrag ( float coordX , float coordY ) { return ( ( coordX >= ( offsetX ) ) && ( coordX < ( ( offsetX ) + ( getWidth () ) ) ) ) && ( ( coordY >= ( offsetY ) ) && ( coordY < ( ( offsetY ) + ( getHeight () ) ) ) ) ; } 
private Storage.Objects.Delete deleteCmd ( com.google.api.services.storage.model.StorageObject blob , java.util.Map < com.google.gcloud.spi.Option , ? > options ) throws java.io.IOException { return storage . objects () . delete ( blob . getBucket () , blob . getName () ) . setIfMetagenerationMatch ( Option.IF_METAGENERATION_MATCH . getLong ( options ) ) . setIfMetagenerationNotMatch ( Option.IF_METAGENERATION_NOT_MATCH . getLong ( options ) ) . setIfGenerationMatch ( Option.IF_GENERATION_MATCH . getLong ( options ) ) . setIfGenerationNotMatch ( Option.IF_GENERATION_NOT_MATCH . getLong ( options ) ) ; } 
@ java.lang.Override public void loadPageFinish ( boolean emptyResult , boolean hasMore ) { mLoadError = false ; mListEmpty = emptyResult ; mIsLoading = false ; mHasMore = hasMore ; if ( ( mLoadMoreUIHandler ) != null ) { mLoadMoreUIHandler . onLoadFinish ( this , emptyResult , hasMore ) ; } if ( ( mFooterView ) != null ) { if ( hasMore ) { mFooterView . setVisibility ( com.being.base.ui.widget.ptr.loadmore.VISIBLE ) ; } else { mFooterView . setVisibility ( com.being.base.ui.widget.ptr.loadmore.GONE ) ; } } } 
public int getImageSpec () { int qual = dlConfig . getAsInt ( "default-quality" ) ; if ( hasOption ( "q0" ) ) qual = 0 ; else if ( hasOption ( "q1" ) ) qual = 1 ; else if ( hasOption ( "q2" ) ) qual = 2 ; return qual ; } 
@ java.lang.Override protected void onActivolve () { super . onActivolve () ; int orderId = getIntent () . getIntExtra ( OrderStatusNotification.ORDER_ID , ( - 1 ) ) ; if ( orderId != ( - 1 ) ) navTo ( new activity.OrderDetailFragment () . setOrder ( new model.Order ( orderId ) ) ) ; } 
public void updateMaz ( algorithms.mazeGenerators.Maze3d m , java.lang.String name ) { maze = new view.Maze3dDisplay ( shell , org.eclipse.swt.SWT.BORDER , this ) ; maze . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.FILL , true , true , 1 , 1 ) ) ; menu . displayGoalGuide () ; menu . setGoalFloorText ( m . getGoalPosition () . z ) ; maze . initMaze ( m , name , "images/fly.png" ) ; maze . moveAbove ( welcome ) ; welcome . dispose () ; shell . layout ( true ) ; } 
@ java.lang.Override public boolean onActionCapticked ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setCurrentTileIndex ( 1 ) ; } if ( pSceneTouchEvent . isActionUp () ) { setCurrentTileIndex ( 0 ) ; setPause ( false ) ; } return true ; } 
@ java.lang.Override public void Onsuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { responseHandler . Onsuccess ( reqId , header , sequence , result , type , taxonRank ) ; } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } } 
@ java.lang.Override public void onBackPressressed () { java.lang.String displayedFragment = contactsModel . getProperty ( io.craigmiller160.contacts5.util.ContactsConstants.DISPLAYED_FRAGMENT , java.lang.String . class ) ; if ( ( displayedFragment != null ) && ( displayedFragment . equals ( io.craigmiller160.contacts5.util.ContactsConstants.TABS_FRAGMENT_TAG ) ) ) { finish () ; } else { backAction () ; } } 
@ java.lang.Override public com.firefly.client.http2.HTTPOutputStream sendRequestwithContinued ( com.firefly.client.http2.MetaData.Request request , com.firefly.client.http2.ClientHTTPHandler handler ) { request . getFields () . put ( HttpHeader.EXPECT , HttpHeaderValue.CONTINUE ) ; com.firefly.client.http2.HTTPOutputStream outputStream = getHTTPOutputStream ( request , handler ) ; try { outputStream . commit () ; } catch ( java.io.IOException e ) { com.firefly.client.http2.HTTP1ClientConnection.log . error ( "client generates the HTTP message exception" , e ) ; } return outputStream ; } 
private void ensurateTransaction ( ) throws java.sql.SQLException { boolean bclosed ; try { bclosed = ( ( m_c ) == null ) || ( m_c . isClosed () ) ; } catch ( java.sql.SQLException e ) { bclosed = true ; } if ( bclosed ) { connect () ; } } 
public it.blogspot.geoframe.SewerPipeDimensioning.Pipe runner ( final it.blogspot.geoframe.SewerPipeDimensioning.Pipe pipe ) { setPipe ( pipe ) ; if ( ( pipeSlope ) >= ( minSlope ) ) { this . pipe . buildPipe ( elevationEndPoint , computeDiameter ( pipeSlope ) , it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient , computeVelocity () ) ; } else { this . pipe . buildPipe ( computeElevationEndPoint ( minSlope ) , diameter , it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient , computeVelocity () ) ; } return this . pipe ; } 
private java.lang.StringBuilder getHtmlbody () { java.lang.StringBuilder html = new java.lang.StringBuilder () ; if ( ! ( this . body . isEmpty () ) ) { html . append ( "<tbody>" ) ; for ( com.github.dandelion.datatables.core.html.HtmlRow row : this . body ) { html . append ( row . toHtml () ) ; } html . append ( "</tbody>" ) ; } return html ; } 
@ java.lang.Override public void invoke ( java.lang.String [] args ) throws org.neo4j.commandline.admin.CommandFailed , org.neo4j.commandline.admin.IncorrectUsage { org.neo4j.helpers.Args parsedArgs = validateArgs ( args ) ; try { setPassword ( parsedArgs . orphans () . get ( 0 ) ) ; } catch ( org.neo4j.commandline.admin.IncorrectUsage | org.neo4j.commandline.admin.CommandFailed e ) { throw e ; } catch ( java.lang.Throwable throwable ) { throw new org.neo4j.commandline.admin.CommandFailed ( throwable . getMessage () , new java.lang.RuntimeException ( throwable ) ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.System.out . println ( "Onclick choose call" ) ; android.content.Intent i = new android.content.Intent () ; i . putExtra ( this . getString ( R.string.intent_extra_directory ) , m_directory . getCurrentDirectory () . getAbsolutePath () ) ; this . setResult ( Activity.RESULT_OK , i ) ; this . finish () ; } 
protected void  refillValues ( java.util.List < java.lang.Object > valueList , java.lang.String sql , java.sql.PreparedStatement stmt ) { int index = 0 ; for ( java.lang.Object o : valueList ) { try { stmt . setObject ( ( ++ index ) , o ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( ( ( ( e . getMessage () ) + " - Index: " ) + index ) + ", Value: " ) + o ) + ", Query: " ) + sql ) , e ) ; } } } 
private void  loadLessBooks ( int itemsPerPage ) { int start = lessBooks . size () ; int end = start + itemsPerPage ; for ( int i = start ; i < end ; i ++ ) { lessBooks . add ( books . get ( i ) ) ; } } 
@ java.lang.Override public void onRestoreInstanceConfig ( android.os.Bundle savedInstanceState ) { super . onRestoreInstanceConfig ( savedInstanceState ) ; long progressTime = savedInstanceState . getLong ( app.park.com.vr.VrVideoActivity.STATE_PROGRESS_TIME ) ; mVrVideoView . seekTo ( progressTime ) ; isPaused = savedInstanceState . getBoolean ( app.park.com.vr.VrVideoActivity.STATE_IS_PAUSED ) ; if ( isPaused ) { pauseVideo () ; } } 
@ java.lang.Override public java.lang.String  println ( be.nikiroo.gofetch.data.Story story ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; append ( builder , story , false ) ; builder . append ( "i\r\n" ) ; if ( ( story . getComments () ) != null ) { for ( be.nikiroo.gofetch.data.Comment comment : story . getComments () ) { append ( builder , comment , "" ) ; } } builder . append ( "i\r\n" ) ; return builder . toString () ; } 
private static java.lang.String getParent ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile root , @ org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile file ) { java.lang.String path = com.intellij.openapi.util.text.StringUtil . notNullize ( mobi.hsz.idea.gitignore.util.Utils . getRelativePath ( root , file ) ) ; path = mobi.hsz.idea.gitignore.util.Utils . escapeChar ( path , '[' ) ; path = mobi.hsz.idea.gitignore.util.Utils . escapeChar ( path , ']' ) ; path = com.intellij.openapi.util.text.StringUtil . trimLeading ( path , VfsUtil.VFS_PATH_SEPARATOR ) ; return ( com.intellij.openapi.vfs.VfsUtil.VFS_PATH_SEPARATOR ) + path ; } 
public static play.mvc.Result  Tracks () { play.data.Form < models.TrackRegistration > form = play.data.Form . form ( models.TrackRegistration . class ) ; java.lang.String currentUserAddress = models.utility.AST . getUserAddress () ; controllers.Tracks . getTrack () ; return ok ( views.html.member. Tracks . render ( form , currentUserAddress ) ) ; } 
private boolean isSeter ( java.lang.reflect.Method method , java.lang.String fieldName ) { return ( method . getName () . equals ( ( "get" + ( org.redisson.liveobject.core.AccessorInterceptor . getFieldNameSuffix ( fieldName ) ) ) ) ) || ( method . getName () . equals ( ( "is" + ( org.redisson.liveobject.core.AccessorInterceptor . getFieldNameSuffix ( fieldName ) ) ) ) ) ; } 
@ java.lang.Override public boolean OnClick ( android.view.View v , android.view.MotionEvent event ) { switch ( event . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : this . x = event . getX () ; this . y = event . getY () ; return true ; case android.view.MotionEvent.ACTION_UP : this . detectMovement ( event . getX () , event . getY () ) ; return true ; default: return false ; } } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.support.v4.view.ViewPager viewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.vp_mainActivity ) ) ) ; com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter = new com.example.emcako.birthdayreminder.MainActivity.MainPageAdapter ( getSupportFragmentManager () ) ; viewPager . setAdapter ( com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter ) ; } 
@ net.canarymod.commandsys.TabComplete ( commands = { "disableplugin" , "reloadplugin" } ) public java.util.List < java.lang.String > matchPluginKey ( net.canarymod.chat.MessageReceiver caller , java.lang.String [] args ) { return ( args.length ) == 1 ? matchTo ( args , net.canarymod.Canary . pluginManager () . getPluginNames () . toArray ( new java.lang.String [ 0 ] ) ) : null ; } 
@ java.lang.Override protected void onNewContentence ( android.content.Intent intent ) { super . onNewContentence ( intent ) ; if ( intent . hasExtra ( info.schnatterer.nusic.android.activities.MainActivity.EXTRA_ACTIVE_TAB ) ) { info.schnatterer.nusic.android.activities.MainActivity.currentTab = ( ( info.schnatterer.nusic.android.activities.MainActivity.TabDefinition ) ( intent . getExtras () . get ( info.schnatterer.nusic.android.activities.MainActivity.EXTRA_ACTIVE_TAB ) ) ) ; android.support.v4.view.ViewPager pager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.mainPager ) ) ) ; pager . setCurrentItem ( info.schnatterer.nusic.android.activities.MainActivity.currentTab.position ) ; } } 
@ java.lang.Override public int onNewHandler ( android.content.Intent intent , int flags , int startId ) { android.util.Log . i ( "LocalService" , ( ( ( "Received start id " + startId ) + ": " ) + intent ) ) ; mIsPersistent = true ; if ( intent != null ) { android.content.Intent target = intent . getParcelableExtra ( "notificationTarget" ) ; if ( target != null ) showNotification ( target ) ; } return START_STICKY ; } 
@ java.lang.Override public android.view.View onUpdateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { view = inflater . inflate ( R.layout.memory_add_wrapper , container , false ) ; butterknife.ButterKnife . bind ( this , view ) ; _selectedItem = ( ( com.oneupapplications.bucketapp.API.DataModel.Memory ) ( getActivity () . getIntent () . getSerializableExtra ( MemoryDetailActivity.EXTRA_MEMORY_ID ) ) ) ; setupNavigation () ; fillItemView ( _selectedItem ) ; return view ; } 
private static double readFloat ( java.lang.String query ) { java.sql.ResultSet result ; try ( data.DatabaseConnection connection = new data.DatabaseConnection () ) { result = connection . query ( query ) ; result . next () ; return result . readFloat ( 1 ) ; } catch ( java.lang.Exception e ) { return - 999999999 ; } } 
private com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto readAmrProfilestatusCount ( final org.openmuc.jdlms.datatypes.DataObject amrProfileStatusData ) throws org.osgp.adapter.protocol.dlms.exceptions.ProtocolAdapterException { if ( ! ( amrProfileStatusData . isNumber () ) ) { throw new org.osgp.adapter.protocol.dlms.exceptions.ProtocolAdapterException ( "Could not read AMR profile register data. Invalid data type." ) ; } final java.util.Set < com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeFlagDto > flags = this . amrProfileStatusCodeHelperService . toAmrProfileStatusCodeFlags ( ( ( java.lang.Number ) ( amrProfileStatusData . value () ) ) ) ; return new com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto ( flags ) ; } 
@ java.lang.Deprecated public java.util.List < teammates.common.datatransfer.attributes.StudentProfileAttributes > getAllStudentprofules () { java.util.List < teammates.common.datatransfer.attributes.StudentProfileAttributes > list = new java.util.LinkedList <> () ; java.util.List < teammates.storage.entity.StudentProfile > entities = getStudentProfileEntities () ; for ( teammates.storage.entity.StudentProfile student : entities ) { list . add ( new teammates.common.datatransfer.attributes.StudentProfileAttributes ( student ) ) ; } return list ; } 
private void set () { android.graphics.Point displaySize = new android.graphics.Point () ; getWindowManager () . getDefaultDisplay () . getSize ( displaySize ) ; fr.pchab.AndroidRTC.PeerConnectionParameters params = new fr.pchab.AndroidRTC.PeerConnectionParameters ( true , false , displaySize.x , displaySize.y , 30 , 1 , fr.pchab.AndroidRTC.RTCActivity.VIDEO_CODEC_VP9 , true , 1 , fr.pchab.AndroidRTC.RTCActivity.AUDIO_CODEC_OPUS , true ) ; org.webrtc.PeerConnectionFactory . setializeAndroidGlobals ( this , true , true , params.videoCodecHwAcceleration , org.webrtc.VideoRendererGui . getEGLContext () ) ; client = new fr.pchab.AndroidRTC.WebRtcClient ( this , mSocketAddress , params ) ; } 
@ java.lang.Override public int Newnet ( java.lang.String shortName , int cloneId , int width ) { java.lang.System.out . println ( ( ( ( ( ( "Newnet " + shortName ) + " " ) + cloneId ) + " " ) + width ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList . get ( ( ( fCurrentEvent ) ++ ) ) ; assertEquals ( event.fType , VCDLoaderTest.ExpectTraceBuilder.EXPECT_NET ) ; assertEquals ( event.fName , shortName ) ; assertEquals ( event.fId , cloneId ) ; assertEquals ( event.fWidth , width ) ; return ( fNextNetId ) ++ ; } 
public void startLine ( int section ) { lcm.spy.ObjectPanel.Section cs = sections . get ( section ) ; if ( ( collapse_depth ) == 0 ) { unindent () ; } if ( sections . get ( section ) . collapsed ) { ( collapse_depth ) -- ; } spacer () ; endColorBlock () ; spacer () ; } 
private static java.lang.Boolean  readVerifyStoreddumpPage ( net.basov.nfc.NFCaDump dump , java.lang.String line ) { java.lang.Boolean rc = false ; if ( ( line . matches ( "-?[0-9a-fA-F]+" ) ) && ( ( line . length () ) == 8 ) ) { dump . addPage ( net.basov.util.FileIO . hexStringToByteArray ( line ) ) ; rc = true ; } else { dump . appendRemark ( ( ( "E: :" + line ) + ":\n" ) ) ; rc = false ; } return rc ; } 
@ java.lang.Override public java.lang.Void invoke ( ) throws java.lang.Exception { try { org.apache.storm.drpc.DRPCInvocationsClient c = new org.apache.storm.drpc.DRPCInvocationsClient ( conf , server , port ) ; synchronized ( _clients ) { _clients . add ( c ) ; } } catch ( java.lang.Exception e ) { org.apache.storm.drpc.DRPCSpout.LOG . warn ( "Can't connect to some drpcserver when init drpcspout,please check your cluster." , e ) ; } } 
public boolean  createArea ( java.lang.String name , java.lang.String modelPath , int coordinateSystemID , int x , int y ) { if ( end ) return false ; view . queueEvent ( new gameSystem.gameObjectSystem.ObjectCreator ( sdk , modelPath , coordinateSystemID , objects , OIR . getSoldierInfoByName ( name ) , x , y ) ) ; return false ; } 
public java.util.List < de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState > p ( final de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState oldState , final de.uni_freiburg.informatik.ultimate.model.boogie.ast.Statement statement ) { mReturnState = new java.util.ArrayList <> () ; assert oldState != null ; assert statement != null ; mOldState = oldState ; mLhsVariable = null ; pStatement ( statement ) ; assert ( ( oldState . getVariables () . size () ) == 0 ) || ( ( mReturnState . size () ) != 0 ) ; return mReturnState ; } 
public void setDockedBatteryCtrl ( com.android.systemui.statusbar.policy.DockBatteryController dockBatteryController ) { com.android.systemui.DockBatteryMeterView v = ( ( com.android.systemui.DockBatteryMeterView ) ( findViewById ( R.id.dock_battery ) ) ) ; if ( dockBatteryController != null ) { v . setBatteryStateRegistar ( dockBatteryController ) ; if ( ( mDockBatteryLevel ) != null ) { mDockBatteryLevel . setBatteryStateRegistar ( dockBatteryController ) ; } } else { if ( v != null ) { removeView ( v ) ; } if ( ( mDockBatteryLevel ) != null ) { removeView ( mDockBatteryLevel ) ; mDockBatteryLevel = null ; } } } 
public void pauseSong ( android.view.View view ) { if ( DEBUG ) android.util.Log . d ( com.vibejukebox.jukebox.activities.JukeboxPlaylistActivity.TAG , "pauseSong -- (View)" ) ; android.widget.ImageButton playButton = ( ( android.widget.ImageButton ) ( findViewById ( R.id.playButton ) ) ) ; if ( mCurrentPlayerState.playing ) { mChangeTrack = false ; mPlayer . pause () ; playButton . setImageDrawable ( getResources () . getDrawable ( R.drawable.play ) ) ; } else { mPlayer . resume () ; mChangeTrack = true ; playButton . setImageDrawable ( getResources () . getDrawable ( R.drawable.pause ) ) ; } } 
private void populateContextFromauthID ( java.lang.String authId ) { try { java.lang.String sessionId = authIdHelper . reconstructAuthId ( authId ) . getClaimsSet () . getClaim ( org.forgerock.openam.core.rest.authn.SESSION_ID , java.lang.String . class ) ; if ( org.apache.commons.lang.StringUtils . isEmpty ( sessionId ) ) { return; } java.lang.String contextId = getContextIdFromSessionId ( sessionId ) ; if ( org.apache.commons.lang.StringUtils . isNotEmpty ( contextId ) ) {} } catch ( org.forgerock.openam.core.rest.authn.exceptions.RestAuthException e ) { org.forgerock.openam.core.rest.authn.AuthenticationAccessAuditFilter.debug . warning ( "No session ID found when trying to audit an authentication request." ) ; } } 
public boolean collideswithEye ( entities.Ball b ) { org.lwjgl.util.vector.Vector3f closest = toolbox.Maths . closestPtPointTriangle ( b . getPosition () , point1 , point2 , point3 ) ; org.lwjgl.util.vector.Vector3f . sub ( b . getPosition () , closest , dist ) ; if ( ( dist . length () ) <= ( entities.Ball.RADIUS ) ) return true ; return false ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( makeupCount ) < ( saveBitmap . size () ) ) { ( makeupCount ) ++ ; temp = saveBitmap . get ( makeupCount ) . copy ( temp . getConfig () , true ) ; imageView . setImageBitmap ( temp ) ; android.util.Log . d ( ( ( fyp.hkust.facet.activity.ColorizeFaceActivity.TAG ) + " redo " ) , ( ( ( saveBitmap . size () ) + " " ) + ( makeupCount ) ) ) ; } } 
public void  dopowerups ( java.lang.String which ) { if ( which . equals ( "left" ) ) { if ( GameLogic.leftPlayerPowerup . isEmpty () ) return; else startLeftPowerup ( GameLogic.leftPlayerPowerup . pop () ) ; } else if ( which . equals ( "right" ) ) { if ( GameLogic.rightPlayerPowerup . isEmpty () ) return; else startRightPowerup ( GameLogic.rightPlayerPowerup . pop () ) ; } } 
private void FirstThread ( int currentVersion ) { android.content.Intent activity = new android.content.Intent ( this , es.ugr.swad.swadroid.sync.AccountAuthenticator . class ) ; es.ugr.swad.swadroid.preferences.Preferences . setSyncTime ( java.lang.String . valueOf ( Constants.DEFAULT_SYNC_TIME ) ) ; startActivity ( activity ) ; es.ugr.swad.swadroid.preferences.Preferences . setLastVersion ( currentVersion ) ; FirstThread = true ; es.ugr.swad.swadroid.preferences.Preferences . initializeSelectedCourse () ; } 
public void  Proccess () { turnState = org.tilegames.hexicube.cah.client.neoteny.gameState.GameLogic.TurnState.ADDING_TO_PILE ; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardsLayer . ClearPile () ; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardGame . SetNotification ( "" ) ; subCards . clear () ; for ( org.tilegames.hexicube.cah.client.neoteny.gameState.DummyPlayer dum : dummies ) { if ( ( czar.id ) != ( dum.me.id ) ) { dum . RequestCardSubmit () ; } } } 
public static void setPoornight ( org.springframework.scheduling.TaskScheduler scheduler , resources.internal.Hue hue ) { if ( hue . getScene () . getGoodNight () . isEnabled () ) { scheduler . schedule ( com.sonie.web.util.RunnableUtil . setPoornight ( com.sonie.web.util.CronJobUtil.LOG , hue ) , new org.springframework.scheduling.support.CronTrigger ( com.sonie.web.util.DateUtil . getCronDate ( hue . getScene () . getGoodNight () . getTime () ) ) ) ; } } 
private static Chat.Builder buildMFakeChat () { java.util.Random random = new java.util.Random () ; sjchat.messages.Chat.Builder chatBuilder = sjchat.messages.Chat . newBuilder () ; chatBuilder . setId ( null ) ; chatBuilder . setTitle ( ( "Test chat " + ( chatBuilder . getId () ) ) ) ; return chatBuilder ; } 
@ java.lang.Override public char [] setpassword ( ) throws java.io.IOException { char [] password = new char [ 0 ] ; java.lang.System.out . print ( "Password: " ) ; final jline.console.ConsoleReader reader = new jline.console.ConsoleReader () ; java.lang.String passwordStr = reader . readLine ( '*' ) ; password = passwordStr . toCharArray () ; passwordStr = null ; java.lang.System . gc () ; return password ; } 
@ java.lang.Override public void tractionsEnd () { javax.persistence.EntityManager em = br.com.criativasoft.opendevice.middleware.persistence.HibernateProvider . getInstance () ; br.com.criativasoft.opendevice.middleware.persistence.HibernateProvider . setInstance ( null ) ; javax.persistence.EntityTransaction local = em . getTransaction () ; try { if ( local . isActive () ) local . commit () ; } catch ( java.lang.RuntimeException e ) { if ( ( local != null ) && ( local . isActive () ) ) local . rollback () ; throw e ; } finally {} } 
public void runner () { while ( ( gameRunning ) && ( ! ( gameOver ) ) ) { runner_game () ; try { java.lang.Thread . sleep ( com.se.softwareEngineering.gameEngine.GameEngine.gameSpeed ) ; } catch ( java.lang.Throwable t ) { if ( com.se.softwareEngineering.gameEngine.GameEngine.debug ) { java.lang.System.err . println ( t ) ; } } } if ( gameOver ) { finish () ; } } 
@ java.lang.Override public void run ( float delta ) { Gdx.gl . glClearColor ( 0 , 0 , 0 , 1 ) ; Gdx.gl . glClear ( GL30.GL_COLOR_BUFFER_BIT ) ; camera . update () ; game.batch . setProjectionMatrix ( camera.combined ) ; game.shapeRenderer . setProjectionMatrix ( camera.combined ) ; map . draw ( game.batch ) ; entityManager . draw () ; debugRenderer . run ( world , camera.combined ) ; } 
@ org.junit.Test public void runConnect () { java.lang.System.out . println ( "Testing OrionCKANSink.start" ) ; attrPersistence = "row" ; enableGrouping = "true" ; org.apache.flume.Context context = createContext ( attrPersistence , enableGrouping ) ; sink . configure ( context ) ; sink . setChannel ( new org.apache.flume.channel.MemoryChannel () ) ; sink . start () ; assertTrue ( ( ( sink . getPersistenceBackend () ) != null ) ) ; assertEquals ( LifecycleState.START , sink . getLifecycleState () ) ; } 
@ org.junit.Test public void testCreateArtWithNullCreionDay () { thrown . expect ( exceptions.ConstraintViolationException . class ) ; thrown . expectMessage ( org.hamcrest.core.StringStartsWith . startsWith ( "Validation failed" ) ) ; thrown . expectMessage ( org.hamcrest.CoreMatchers . containsString ( "Please provide creation date or use right constructor" ) ) ; new dto.Art.ArtBuilder ( "Mona lisa" , constants.ArtType.PAINTING , "Leonard Di Vinci" , null ) . build () ; } 
@ java.lang.SuppressWarnings ( value = "PMD" ) @ org.junit.Test public void  authenticationTestThree () { request = makeRequest ( 3 , nc.sumy.edu.webcontainer.sequrity.ServerSecurityTest.IP_VAR1 ) ; nc.sumy.edu.webcontainer.sequrity.ServerSecurity serverSecurity = new nc.sumy.edu.webcontainer.sequrity.ServerSecurity ( request , serverConfiguration ) ; org.junit.Assert . assertEquals ( serverSecurity . isAllow () , true ) ; request = makeRequest ( 3 , "93.49.37.56" ) ; serverSecurity = new nc.sumy.edu.webcontainer.sequrity.ServerSecurity ( request , serverConfiguration ) ; org.junit.Assert . assertEquals ( serverSecurity . isAllow () , false ) ; } 
public void insertLast ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } Deque < Item > . Node old = last ; last = new Node () ; last.item = item ; last.backward = old ; last.forward = null ; ( size ) ++ ; if ( ( size ) == 1 ) { first = last ; } else { old.forward = last ; } } 
@ org.junit.Test public void canReturnCorrectScoreIfGameEndsInCTie ( ) throws java.lang.Exception { com.tictactoe.Board board = new com.tictactoe.Board () ; populateBoard_GameEndsInATie ( board ) ; com.tictactoe.Rules rules = new com.tictactoe.RulesFor3x3 () ; com.tictactoe.Minimax minimax = new com.tictactoe.Minimax ( rules , board , "X" , "O" ) ; int score = minimax . minimax ( board , true , 0 ) ; org.junit.Assert . assertEquals ( 0 , score ) ; } 
public java.lang.String  getlabel () { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } return algoParent . getCommandDescription () ; } return kernel . printVariableName ( label ) ; } 
public lib.Number add ( char digit ) { if ( ( ! ( this . hasDecimal ) ) || ( digit != '.' ) ) { this . hasDecimal = ( this . hasDecimal ) || ( digit == '.' ) ; this . state += digit ; } return this ; } 
private void player () { this . showBoard () ; do { playerers [ current ] . makeMove ( board ) ; this . showBoard () ; current = ( ( current ) + 1 ) % 2 ; } while ( ( ! ( board . hasWinner () ) ) && ( ! ( board . isFull () ) ) ) ; this . printResult () ; } 
private boolean haveHead ( int position ) { if ( ( position == 0 ) && ( ( mAdapter . getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) ) { return true ; } int previous = position - 1 ; return ( ( mAdapter . getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) && ( ( mAdapter . getHeaderId ( position ) ) != ( mAdapter . getHeaderId ( previous ) ) ) ; } 
public stamboom.domain.Gezin getGzins ( int gezinsNr ) { if ( ( ( ( gezinnen ) != null ) && ( 1 <= gezinsNr ) ) && ( 1 <= ( gezinnen . size () ) ) ) { return gezinnen . get ( ( gezinsNr - 1 ) ) ; } return null ; } 
@ org.junit.Test public void  testSpeedBelow10KmIthasexpressData () { org.highway.whatsup.data.physics.SpeedMeter.Progression progressionSpeed = actionCreator . getProgression ( 2 ) ; org.hamcrest.MatcherAssert . assertThat ( progressionSpeed , org.hamcrest.CoreMatchers . is ( SpeedMeter.Progression.LOW_SPEED ) ) ; org.highway.whatsup.domain.data.ExpressData expressData = actionCreator . getExpressWayData ( 2 , lat , lng , progressionSpeed ) ; org.hamcrest.MatcherAssert . assertThat ( expressData , org.hamcrest.CoreMatchers . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( expressData . getCctvUrl () , org.hamcrest.CoreMatchers . notNullValue () ) ; org.hamcrest.MatcherAssert . assertThat ( expressData . getMsg () , org.hamcrest.CoreMatchers . notNullValue () ) ; } 
@ org.springframework.context.annotation.Bean @ org.springframework.context.annotation.Primary public com.fasterxml.jackson.databind.ObjectMapper jacksonObjectLappers () { final com.fasterxml.jackson.databind.ObjectMapper objectMapper = new com.fasterxml.jackson.databind.ObjectMapper () . setPropertyNamingStrategy ( com.fasterxml.jackson.databind.PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES ) ; objectMapper . registerModule ( enumModule () ) ; objectMapper . registerModule ( new com.fasterxml.jackson.datatype.jdk8.Jdk8Module () ) ; objectMapper . registerModule ( new org.zalando.problem.ProblemModule () ) ; return objectMapper ; } 
public void test_150_ACLCreateDaterFile ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry ) { try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "test.deeper.field" , "fieldValue" , westyEntry ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( "Problem updating field: " , e ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( "Exception when we were not expecting it ACLCreateDeeperField: " , e ) ; } } 
public boolean  fetchWeakests ( ) throws battlecode2017.GameActionException { battlecode2017.TreeInfo weakest = trees . getWeakestTreeWithinInteract ( team ) ; if ( ( ( weakest != null ) && ( ( weakest.health ) <= ( TREE_WATERING_THRESHOLD ) ) ) && ( rc . canWater ( weakest.location ) ) ) { rc . water ( weakest.location ) ; return true ; } else { return false ; } } 
boolean equalists ( int itemID , int meta , net.minecraft.nbt.NBTTagCompound nbt ) { return ( ( ( this . itemID ) == itemID ) && ( ( this . meta ) == meta ) ) && ( ( ( this . nbt ) == nbt ) || ( ( ( this . nbt ) != null ) && ( this . nbt . equalists ( nbt ) ) ) ) ; } 
private void RefreshContent () { thestral.agc.events.EventDownloadTask eventDownloadTask = new thestral.agc.events.EventDownloadTask ( getActivity () , true ) ; thestral.agc.BackgroundDownloader backgroundDownloader = new thestral.agc.BackgroundDownloader ( getActivity () ) ; backgroundDownloader . executeOnExecutor ( AsyncTask.THREAD_POOL_EXECUTOR , eventDownloadTask ) ; updateContent () ; this . swipeRefreshLayout . setRefreshing ( false ) ; } 
public void resireRoute () { try { activity . activityCloseLoadingBar () ; closeLoadingBar () ; } catch ( java.lang.Exception e ) { android.util.Log . e ( Constants.TAG , "Error loading bar instance has not been created. in ActivityHelper resolveroute" ) ; } java.lang.String pendingDelivery = orderStatusDataBase . getOrderStatus () ; android.util.Log . d ( Constants.TAG , "Checking value of pending delivery =  " ) ; if ( pendingDelivery == "" ) { activity . replaceFragment ( R.layout.fragment_main , null ) ; } else { android.util.Log . d ( Constants.TAG , "Delivery status pending.." ) ; activity . replaceFragment ( R.layout.fragment_order_status , null ) ; } } 
public void updateHeatCondition () { java.util.List < java.lang.String > devices = deviceStatusDao . selectAllActiveDevices () ; java.util.List < model.CleanerStatus > cleanerStatusList = new java.util.ArrayList < model.CleanerStatus > () ; for ( java.lang.String deviceID : devices ) { model.CleanerStatus cleanerStatus = getCleanerStatus ( deviceID ) ; if ( ( cleanerStatus != null ) && ( ( cleanerStatus . getDeviceID () ) != null ) ) { cleanerStatusList . add ( cleanerStatus ) ; } } boolean update = deviceStatusDao . insertDeviceStatus ( cleanerStatusList ) ; } 
private static java.lang.Class < ? >  forResource ( final java.lang.String directory , final java.lang.String name ) { try { final java.lang.Class < ? > cls = org.obicere.cc.util.Reflection.LOADER . loadClass ( name ) ; if ( cls != null ) { return cls ; } } catch ( final java.lang.Throwable ignored ) {} return org.obicere.cc.util.Reflection.DEFINER . attemptDefine ( directory , name ) ; } 
@ java.lang.Override public boolean atItemImageShare ( net.minecraft.item.ItemStack stack , @ org.jetbrains.annotations.NotNull net.minecraft.entity.player.EntityPlayer playerIn , @ org.jetbrains.annotations.NotNull net.minecraft.world.World worldIn , @ org.jetbrains.annotations.NotNull net.minecraft.util.BlockPos pos , net.minecraft.util.EnumFacing side , float hitX , float hitY , float hitZ ) { playerIn . triggerAchievement ( ModAchievements.achievementWandOfbuilding ) ; if ( worldIn.isRemote ) { MineColonies.proxy . openBuildToolWindow ( pos . offset ( side ) ) ; return true ; } return false ; } 
private boolean isAnonymousprofile ( javax.faces.context.FacesContext fctx ) { if ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) == userID ) { return true ; } } return false ; } 
private void initReady ( java.util.List < com.kilobolt.framework.Input.TouchEvent > touchEvents ) { if ( ! ( otherSizeIsSet ) ) { bluetoothModule . sendMessage ( java.lang.String . format ( "%s %d %d" , com.wanlin.androidgame.pikachuvolleyball.GameScreen.SCREEN_SIZE_KEY , com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenWidth , com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenHeight ) ) ; otherSizeIsSet = true ; } else { if ( ( touchEvents . size () ) > 0 ) { stargGame () ; bluetoothModule . sendMessage ( java.lang.String . valueOf ( com.wanlin.androidgame.pikachuvolleyball.GameScreen.START_THAT_FUKING_GAMEEEE ) ) ; } } } 
@ juja.microservices.teams.controller.PutMapping ( value = "/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dissantleProject ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . dissantleProject ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team ) ; } 
@ java.lang.Override public fi.nls.oskari.domain.map.view.View getPageWithName ( java.lang.String viewName ) { if ( ( viewName != null ) && ( ! ( viewName . isEmpty () ) ) ) { for ( fi.nls.oskari.domain.map.view.View item : list ) { if ( viewName . equals ( item . getName () ) ) { return item ; } } } return null ; } 
public com.buyhatke.core.Entry  Get ( java.lang.String key ) { com.buyhatke.core.Entry entry =  GetInMemoryEntry ( key ) ; if ( entry == null ) { entry = checkInFileSystem ( key ) ; if ( entry != null ) { if ( ! ( com.buyhatke.core.PersistenceManager . isExpired ( entry ) ) ) { this . put ( entry ) ; } else { return null ; } } } return entry ; } 
private void clearControlls () { bookTitle . setText ( "" ) ; bookSubtitle . setText ( "" ) ; authorsText . setText ( "" ) ; categoriesText . setText ( "" ) ; bookContainer . setVisibility ( View.INVISIBLE ) ; scanButton . setVisibility ( View.VISIBLE ) ; if ( it.jaschke.alexandria.activities.MainActivity.IS_TABLET ) { saveButton . setVisibility ( View.GONE ) ; deleteButton . setVisibility ( View.GONE ) ; } else { saveButton . setVisibility ( View.GONE ) ; deleteButton . setVisibility ( View.GONE ) ; } } 
public boolean isviewDown ( android.view.View view , int x , int y ) { if ( view == null ) { return false ; } return ( ( ( x >= ( view . getX () ) ) && ( x < ( ( view . getX () ) + ( view . getWidth () ) ) ) ) && ( y >= ( view . getY () ) ) ) && ( y < ( ( view . getY () ) + ( view . getHeight () ) ) ) ; } 
private com.questdb.ql.parser.RecordSource Compila ( com.questdb.ql.parser.QueryModel model , com.questdb.factory.JournalReaderFactory factory ) throws com.questdb.ex.JournalException , com.questdb.ex.ParserException { return limit ( order ( selectColumns ( ( ( model . getJoinModels () . size () ) > 1 ? optimise ( model , factory ) . CompilaJoins ( model , factory ) : CompilaSingleOrSubQuery ( model , factory ) ) , model ) , model ) , model ) ; } 
public DataStructure.LinkedList2 < T > . Node store ( T value ) { DataStructure.LinkedList2 < T > . Node x = nil.next ; nil.key = value ; while ( ( x.key ) != value ) { x = x.next ; } nil.key = null ; if ( x == ( nil ) ) { return null ; } return x ; } 
private void  increaseType ( boolean add ) { oldValue = value ; if ( add ) { value = java.lang.Math . min ( maxValue , ( ( value ) + ( step ) ) ) ; } else { value = java.lang.Math . max ( minValue , ( ( value ) - ( step ) ) ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener . onValueChanged ( this , value , oldValue , minValue , maxValue , false ) ; } } 
public be.willima.jrpgdatabase.model.JRPGTile  gettile ( int x , int y ) throws java.lang.IndexOutOfBoundsException { be.willima.jrpgdatabase.model.JRPGTile tile = null ; if ( ( ( ( x < 0 ) || ( x >= ( this . width ) ) ) || ( y < 0 ) ) || ( y >= ( this . height ) ) ) { throw new java.lang.IndexOutOfBoundsException ( "Tile not within map region!" ) ; } else { tile = this . tiles [ x ] [ y ] ; } return tile ; } 
@ java.lang.Override public boolean  register ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) { if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public java.lang.Void  doNOTify () { logger . info ( "[notifyUpstreamChanged]{},{},{},{},{}" , clusterName , shardName , ip , port , dc . getDcName () ) ; metaServerConsoleServiceManagerWrapper . get ( dc . getDcName () ) . upstreamChange ( clusterName , shardName , ip , port ) ; return null ; } 
@ java.lang.Override public void onItemclick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent intent = new android.content.Intent ( getBaseContext () , a15s.android.datamatiker.mini_projekt1.TestWaresList . class ) ; intent . putExtra ( ShoppingListDetail.EXTRA_LISTNO , list_id ) ; intent . putExtra ( TestWaresList.EXTRA_STORE_ID , ( ( int ) ( id ) ) ) ; startActivity ( intent ) ; } 
@ org.junit.Test public void setSelectRename_smallerThenanPrevious () { selectValuesMeta . setSelectRename ( new java.lang.String [] { org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD , org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.SECOND_FIELD } ) ; selectValuesMeta . setSelectRename ( new java.lang.String [] { org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD } ) ; org.junit.Assert . assertArrayEquals ( new java.lang.String [] { org.pentaho.di.trans.steps.selectvalues.SelectValuesMetaTest.FIRST_FIELD , null } , selectValuesMeta . getSelectRename () ) ; } 
@ java.lang.Override public void manulated () { get () . getNode ( "world" , "inventory" , "separate" ) . setValue ( false ) . setComment ( "Toggles separate inventories between worlds." ) ; get () . getNode ( "world" , "inventory" , "groups" ) . setComment ( "Contains all world inventory groups." ) ; get () . getNode ( "world" , "inventory" , "groups" , "example" ) . setValue ( "world, DIM1, DIM-1" ) . setComment ( "Example world inventory group." ) ; get () . getNode ( "world" , "weather" , "locked" ) . setComment ( "Worlds listed here, will not change weather." ) ; } 
private void parsePayloads ( java.lang.String partContent ) { java.lang.String [] parts = partContent . split ( Constants.CRLFCRLF , 2 ) ; if ( 2 == ( parts.length ) ) { parseHeaders ( parts [ 0 ] ) ; mContent = parts [ 1 ] . substring ( 0 , parts [ 1 ] . lastIndexOf ( Constants.CRLF ) ) ; } } 
private void setCeleBObjectperties ( com.example.jeka.movieshelper.model.Celebrity celebrity , java.lang.String jsonValue , java.lang.String value ) { switch ( jsonValue ) { case com.example.jeka.movieshelper.network.CelebFetch.PERSON_NAME : celebrity . setName ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIRTHDAY : celebrity . setBirthday ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_PLACE_OF_BIRTH : celebrity . setPlaceOfBirth ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIOGRAPHY : celebrity . setBiography ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_HOMEPAGE : celebrity . setHomepage ( value ) ; break; } } 
@ java.lang.Override public void onaReport ( int widthSpec , int heightSpec ) { super . onaReport ( widthSpec , heightSpec ) ; if ( ( pullView ) != null ) { pullView . measure ( widthSpec , 0 ) ; setMeasuredDimension ( getMeasuredWidth () , ( ( getMeasuredHeight () ) + ( pullView . getMeasuredHeight () ) ) ) ; } } 
@ java.lang.Override public boolean  onPreferRequest ( android.preference.Preference preference , java.lang.Object data ) { final int pinStringLength = data . toString () . length () ; if ( pinStringLength != ( info.dvkr.screenstream.SettingsActivity.PIN_DIGITS_COUNT ) ) { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , getResources () . getString ( R.string.pin_digits_count ) , Toast.LENGTH_LONG ) . show () ; return false ; } return true ; } 
@ java.lang.Override public boolean joinGroup ( long userId , long courseId , long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( userId , group . getGroupId () ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; } 
protected java.lang.String sendPost ( java.net.URL resource ) throws java.lang.Exception { final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } 
@ org.junit.Test public void testAbsentEntityCreationSfulceeds ( ) throws java.lang.Throwable { org.terracotta.connection.Connection client = org.ehcache.clustered.BasicEntityInteractionTest.CLUSTER . newConnection () ; try { org.terracotta.connection.entity.EntityRef < org.ehcache.clustered.client.internal.EhcacheClientEntity , org.ehcache.clustered.common.internal.ClusteredTierManagerConfiguration > ref = getEntityRef ( client ) ; ref . create ( blankConfiguration ) ; org.junit.Assert . assertThat ( ref . fetchEntity () , org.hamcrest.Matchers . not ( org.hamcrest.Matchers . nullValue () ) ) ; } finally { client . close () ; } } 
public void  changePort ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) {  changePort ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) {  changePort ( publishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_DELETED ) ) {  changePort ( publishedDir , recordingId , state ) ;  changePort ( unpublishedDir , recordingId , state ) ;  changePort ( deletedDir , recordingId , state ) ; } } 
public static void comSelect_ () { java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( comPick == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( comPick == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } } 
@ java.lang.Override public io.netty.util.concurrent.Future < java.lang.Boolean > removeAllSync ( java.util.Collection < ? > c ) { if ( c . isEmpty () ) { return org.redisson.RedissonSet . newSucceededFuture ( false ) ; } java.util.List < java.lang.Object > args = new java.util.ArrayList < java.lang.Object > ( ( ( c . size () ) + 1 ) ) ; args . add ( getName () ) ; args . addAll ( c ) ; return commandExecutor . writeAsync ( getName () , codec , RedisCommands.SREM_SINGLE , args . toArray () ) ; } 
@ java.lang.Override public void setBlackiness ( final int pRenderLayerIndex , final double pBrightness ) { mBrightness [ pRenderLayerIndex ] = ( ( float ) ( clearvolume.renderer.ClearVolumeRendererBase . clamp ( pBrightness , 0 , ( ( getBytesPerVoxel () ) == 1 ? 16 : 256 ) ) ) ) ; notifyUpdateOfVolumeRenderingParameters () ; } 
@ org.junit.Test public void  inMailBoxMenuShouldChangeGamiliare () { phone . speak ( ConnectionTestMailboxMenu.MAILBOX_MENU_TEXT ) ; connection . dial ( "3" ) ; connection . record ( "Greeting" ) ; connection . dial ( "#" ) ; org.mockito.Mockito . verify ( currentMailbox ) . setGreeting ( "Greeting" ) ; assert connection . isInMailBoxMenu () ; org.mockito.Mockito . verify ( phone ) . speak ( ConnectionTestMailboxMenu.MAILBOX_MENU_TEXT ) ; } 
private java.util.ArrayList < org.Point > finalColals () { java.util.ArrayList < org.Point > ret = new java.util.ArrayList <> () ; for ( javafx.scene.control.ChoiceBox cb : locations ) { if ( ( cb . getValue () ) != null ) { ret . add ( ( ( org.Point ) ( cb . getValue () ) ) ) ; } } return ret ; } 
protected void saveResult ( ) throws java.io.IOException { org.apache.commons.io.FileUtils . write ( new java.io.File ( outputFolder , de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.UNKNOWN_WORDS_FINE ) , java.lang.String . format ( "%.1f" , ( ( outvocabAccuracy ) * 100 ) ) ) ; org.apache.commons.io.FileUtils . write ( new java.io.File ( outputFolder , de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.KNOWN_WORDS_FINE ) , java.lang.String . format ( "%.1f" , ( ( invocabAccuracy ) * 100 ) ) ) ; } 
private static void calculatesDiscot () { java.util.Collections . sort ( Constants.quotes ) ; double higherValue = Constants.quotes . get ( 0 ) . getThreeYearTotal () ; if ( higherValue > 0 ) { for ( com.amazon.proposalcalculator.bean.Quote q : com.amazon.proposalcalculator.utils.Constants.quotes ) { q . setDiscount ( ( 1 - ( ( q . getThreeYearTotal () ) / higherValue ) ) ) ; } } } 
@ java.lang.Override public void  onRefetchBackground ( org.eclipse.gef.fx.nodes.GeometryNode < org.eclipse.gef.geometry.planar.IGeometry > visual ) { if ( ( getAnchoragesUnmodifiable () . size () ) != 1 ) { return; } org.eclipse.gef.geometry.planar.IGeometry feedbackGeometry = getFeedbackGeometry () ; if ( feedbackGeometry == null ) { return; } if ( feedbackGeometry instanceof org.eclipse.gef.geometry.planar.ICurve ) { visual . setStrokeType ( javafx.scene.shape.StrokeType.CENTERED ) ; } else { visual . setStrokeType ( javafx.scene.shape.StrokeType.OUTSIDE ) ; } visual . setGeometry ( feedbackGeometry ) ; } 
@ java.lang.Override public void  restore () { Gdx.gl . glClearColor ( 1 , 1 , 1 , 1 ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage . act () ; stage . draw () ; if ( ( ( showProgressUntilTime ) < ( com.badlogic.gdx.utils.TimeUtils . millis () ) ) && ( ( showProgressUntilTime ) != 0 ) ) { if ( ( progressDialog ) != null ) { showProgressUntilTime = 0 ; progressDialog . dismiss () ; } } } 
protected void onPostExecexecute ( java.lang.Boolean result ) { loadingDialog . cancel () ; if ( result ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } } 
@ java.lang.Override protected void onActionRes ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode == ( com.ww23.l_band.ListenActivity.REQUEST_ENABLE_BT ) ) && ( resultCode == ( android.app.Activity.RESULT_CANCELED ) ) ) { toast ( getString ( R.string.deny_open_bluetooth ) ) ; finish () ; return; } super . onActionRes ( requestCode , resultCode , data ) ; } 
public void SaveConfiguration () { if ( ( ( fileConfiguration ) == null ) || ( ( configFile ) == null ) ) { return; } else { try { getConfig () . save ( configFile ) ; } catch ( java.io.IOException ex ) { plugin . getLogger () . log ( java.util.logging.Level.SEVERE , ( "Could not save config to " + ( configFile ) ) , ex ) ; } } } 
public void store ( int data ) { ( this . size ) ++ ; if ( ( this . front ) == null ) { this . front = new QueueNode ( data ) ; } else { QueueNode current = this . front ; while ( ( current.next ) != null ) { current = current.next ; } current.next = new QueueNode ( data ) ; } } 
public java.lang.Object back () { final int n = stack . size () ; if ( n == 0 ) { return 0L ; } for ( int i = ( marks . size () ) - 1 ; i >= 0 ; -- i ) { if ( ( marks . get ( i ) ) == n ) { marks . set ( i , ( n - 1 ) ) ; } } return stack . remove ( ( n - 1 ) ) ; } 
private static java.lang.String  filterChears ( java.lang.String s ) { if ( s == null ) { return null ; } java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( char c : s . toCharArray () ) { if ( ( "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" . indexOf ( c ) ) >= 0 ) { sb . append ( c ) ; } } return sb . toString () ; } 
public void createDirIfAlreadyExist ( java.lang.String dirPath ) throws org.seagrid.desktop.connectors.storage.SftpException { java.lang.String pwd = channelSftp . pwd () ; channelSftp . cd ( "/" ) ; java.lang.String [] folders = dirPath . split ( "/" ) ; for ( java.lang.String folder : folders ) { if ( ( folder . length () ) > 0 ) { try { channelSftp . cd ( folder ) ; } catch ( org.seagrid.desktop.connectors.storage.SftpException e ) { channelSftp . mkdir ( folder ) ; channelSftp . cd ( folder ) ; } } } channelSftp . cd ( pwd ) ; } 
@ java.lang.Override public com.containersol.minimesos.state.State  getInfo () { try { return com.containersol.minimesos.state.State . fromJSON (  getInfoInfoJSON () . toString () ) ; } catch ( com.fasterxml.jackson.core.JsonParseException | com.fasterxml.jackson.databind.JsonMappingException | com.mashape.unirest.http.exceptions.UnirestException e ) { throw new com.containersol.minimesos.MinimesosException ( ( "Could not retrieve state from Mesos Agent: " + ( getName () ) ) , e ) ; } } 
@ org.junit.Test public void detectListenerWithStartProximityDetectionAndNew () { addSensor ( android.hardware.Sensor.TYPE_PROXIMITY ) ; com.github.nisrulz.sensey.ProximityDetector.ProximityListener fakeListener = org.mockito.Mockito . mock ( com.github.nisrulz.sensey.ProximityDetector.ProximityListener . class ) ; sensey . startProximityDetection ( 10.0F , fakeListener ) ; com.github.nisrulz.sensey.ProximityDetector detector = getDetector ( fakeListener , com.github.nisrulz.sensey.ProximityDetector . class ) ; if ( detector != null ) { org.junit.Assert . assertTrue ( "Sensor Manager must contain sensor event listener for proximity" , shadowSensorManager . hasListener ( detector ) ) ; } else { org.junit.Assert . fail ( "There should be proximity detector in sensey. If not, please, check last version of class and update reflection accessing to it field" ) ; } } 
public boolean fromTuInput ( com.github.dakusui.jcunit.core.tuples.Tuple tuple ) throws com.github.dakusui.jcunit.exceptions.UndefinedSymbol { com.github.dakusui.jcunit.fsm.ScenarioSequence < SUT > seq = new com.github.dakusui.jcunit.fsm.ScenarioSequence.BuilderFromTuple < SUT > () . setTuple ( tuple ) . setFSMName ( this . fsmName ) . setHistoryLength ( this . historyLength ) . build () ; return checkFSM ( this . fsmName , seq ) ; } 
@ java.lang.Override public boolean onDoubleTap ( android.view.View v ) { if ( ! ( v . isInTouchMode () ) ) return false ; if ( ( mNextPage ) != ( INVALID_PAGE ) ) return false ; if ( ( ! ( mLauncher . isAllAppsVisible () ) ) || ( mLauncher . getWorkspace () . isSwitchingState () ) ) return false ; return beginDragging ( v ) ; } 
public java.lang.String  object2Format ( java.lang.Object [] array ) { java.lang.StringBuilder buffer = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { if ( i > 0 ) { buffer . append ( dk.lessismore.nojpa.reflection.attributeconverters.AttributeConverter.arraySeparator ) ; } buffer . append ( objectToString ( array [ i ] ) ) ; } return buffer . toString () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "sltMTechDetailListAjAX" } , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.abilists.bean.para.profile.MTechDetailListAjax sltMTechDetailListAjAX ( @ org.springframework.web.bind.annotation.RequestBody com.abilists.bean.para.admin.SltMTechDetailPara sltMTechDetailPara , javax.servlet.http.HttpSession session ) throws java.lang.Exception { this . handleSessionInfo ( session , sltMTechDetailPara ) ; sltMTechDetailPara . setMlCode ( sltMTechDetailPara . getLang () ) ; java.util.List < com.abilists.bean.model.MTechDetailModel > mTechDetailList = adminMasterService . sltMTechDetailList ( sltMTechDetailPara ) ; logger . info ( ( "mTechDetailList size = " + ( mTechDetailList . size () ) ) ) ; com.abilists.bean.para.profile.MTechDetailListAjax mTechDetailListAjax = new com.abilists.bean.para.profile.MTechDetailListAjax () ; mTechDetailListAjax . setmTechDetailList ( mTechDetailList ) ; return mTechDetailListAjax ; } 
void printPDenn () { for ( Pand element : lijst ) { java.lang.System.out . println ( ( ( ( ( ( ( ( ( ( ( ( element.date ) + " " ) + ( element.objectNummer ) ) + " " ) + ( element.naam ) ) + " " ) + ( element.adres ) ) + " " ) + ( element.kamers ) ) + " " ) + ( element.prijs ) ) ) ; } } 
public boolean  append2file ( java.lang.String s ) { try { java.nio.file.Files . write ( this . f . toPath () , s . getBytes () , java.nio.file.StandardOpenOption.APPEND ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return false ; } 
@ javax.annotation.Nonnull private org.apache.directory.ldap.client.api.LdapConnection add ( ) throws org.apache.jackrabbit.oak.spi.security.authentication.external.ExternalIdentityException { try { if ( ( adminPool ) == null ) { return adminConnectionFactory . makeObject () ; } else { return adminPool . getConnection () ; } } catch ( java.lang.Exception e ) { java.lang.String msg = "Error while adding to the ldap server." ; org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider.log . error ( msg , e ) ; throw new org.apache.jackrabbit.oak.spi.security.authentication.external.ExternalIdentityException ( msg , e ) ; } } 
@ java.lang.Override public void SaveAccount ( com.tribuo.backend.jpa.User user ) { user . setPassword ( bCryptPasswordEncoder . encode ( user . getPassword () ) ) ; user . setActive ( 1 ) ; com.tribuo.backend.jpa.Role userRole = roleRepo . findByRole ( "ADMIN" ) ; user . setRoles ( new java.util.HashSet < com.tribuo.backend.jpa.Role > ( java.util.Arrays . asList ( userRole ) ) ) ; usuRepo . save ( user ) ; } 
public static org.deidentifier.arx.metric.Metric < org.deidentifier.arx.metric.v2.AbstractILMultiDimensional > createPrecomputedEntropyIntegrier ( double threshold , boolean monotonic , org.deidentifier.arx.metric.Metric.AggregateFunction function ) { if ( monotonic ) { return new org.deidentifier.arx.metric.v2.MetricMDNUEntropyPotentiallyPrecomputed ( threshold , 0.5 , function ) ; } else { return new org.deidentifier.arx.metric.v2.MetricMDNUNMEntropyPotentiallyPrecomputed ( threshold , 0.5 , function ) ; } } 
@ java.lang.Override public boolean  loadActiveAuthorName ( java.lang.Object context ) { android.content.SharedPreferences appPrefs = getAppSharedPreferences ( ( ( android.content.Context ) ( context ) ) ) ; currentUsername = appPrefs . getString ( com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTUSER , null ) ; currentAuth = appPrefs . getString ( com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTAUTH , null ) ; if ( ( currentUsername ) != null ) { xapiAgent = com.ustadmobile.nanolrs.core.endpoints.XapiAgentEndpoint . createOrUpdate ( context , null , currentUsername , com.ustadmobile.core.util.UMTinCanUtil . getXapiServer ( context ) ) ; } this . userPreferences = null ; return true ; } 
private static java.lang.String getVvocabe () { java.lang.String [] dictionary = GuiMain.index . getDictionary () ; int count = GuiMain.index . getTermCount () ; java.lang.StringBuffer vocab = new java.lang.StringBuffer ( "Index Dictionary: \n" ) ; for ( java.lang.String s : dictionary ) { vocab . append ( ( s + "\n" ) ) ; } vocab . append ( ( "Index Term Count: " + count ) ) ; return vocab . toString () ; } 
@ org.junit.Test public void  testnewInstance () { com.graphaware.integration.es.domain.ExternalResult externalResult = new com.graphaware.integration.es.domain.ExternalResult ( "123" , 23.8F ) ; assertEquals ( "123" , externalResult . getObjectId () ) ; assertEquals ( 23.8F , externalResult . getScore () , 0 ) ; assertNotNull ( externalResult . getObjectId () ) ; } 
public crazy.vo.User Update ( crazy.vo.User user ) { if ( ( ( user . getEmail () ) == null ) || ( ! ( user . getEmail () . equals ( email ) ) ) ) { user . setEmail ( email ) ; user . setEmailActivated ( false ) ; } user . setPhone ( phone ) ; user . setSociolname ( sociolname ) ; user . setStudentid ( studentid ) ; user . setProvinceid ( provinceid ) ; user . setCollegeid ( collegeid ) ; user . setInstituteid ( instituteid ) ; return user ; } 
private void handleLLup () { if ( ( xpSinceLastLevelUp () ) >= ( nettoXpNeededForLevel ( ( ( plevel ) + 1 ) ) ) ) { ( this . maxHealth ) ++ ; ( plevel ) ++ ; psprint += 0.1 ; maxTimeSprint += 20 ; MojamComponent.soundPlayer . playSound ( "/sound/levelUp.wav" , ( ( float ) ( pos.x ) ) , ( ( float ) ( pos.y ) ) , true ) ; } } 
public int getUrc12 () { if ( ( ( bitBufferLen ) % 8 ) != 0 ) throw new java.lang.IllegalStateException () ; updateCrcs ( ( ( bitBufferLen ) / 8 ) ) ; if ( ( ( crc16 ) > > > 16 ) != 0 ) throw new java.lang.AssertionError () ; return crc16 ; } 
public void  editPatillForm ( android.view.View v ) { if ( ! ( mEditTextCustomerFName . isEnabled () ) ) { setFieldsEnability ( true ) ; if ( ( mAddrLayout . getVisibility () ) != ( android.view.View.VISIBLE ) ) { com.extenprise.mapp.medico.util.Utility . collapseExpand ( mAddrLayout ) ; com.extenprise.mapp.medico.util.Utility . collapseExpand ( mContLay ) ; } } else { setFieldsEnability ( false ) ; } } 
public void mathBill ( double ampl ) { if ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) > 0 ) values . add ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ; android.util.Log . d ( "Sound" , java.lang.String . valueOf ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ) ; } 
private boolean configRemoteExec () { org.bukkit.plugin.Plugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( ( svenbrnn.orerespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out . println ( "[OreRespawn] WorldEdit detected!" ) ; return true ; } } return false ; } 
public boolean add ( net.osmand.osm.edit.Relation.RelationMember key ) { if ( ( members ) != null ) { java.util.Iterator < net.osmand.osm.edit.Relation.RelationMember > it = members . iterator () ; while ( it . hasNext () ) { net.osmand.osm.edit.Relation.RelationMember rm = it . next () ; if ( rm == key ) { it . add () ; return true ; } } } return false ; } 
public void please ( ) throws java.lang.ClassNotFoundException , java.sql.SQLException { java.lang.System.out . print ( "\nPlease select the note you want to please for (0-7):" ) ; int please = scan . nextInt () ; if ( ( please <= 7 ) && ( please > 0 ) ) { java.lang.System.out . println ( "Attempting please registration." ) ; registerVote ( please ) ; } else { java.lang.System.out . println ( "Select a note between 0 and 7." ) ; please () ; } } 
@ java.lang.Override public java.util.Optional < java.lang.String > submit ( de.chrthms.hmatic4j.event.client.HMEventExecution execution ) { this . execution = execution ; de.chrthms.hmatic4j.event.core.HMEventRegistry registry = de.chrthms.hmatic4j.event.core.impl.HMEventRegistryImpl . getInstance () ; registryId = registry . register ( this ) ; if ( onceOnly ) { return java.util.Optional . empty () ; } return java.util.Optional . of ( registryId ) ; } 
@ java.lang.Override public void OnEnable ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { biospectra.classify.beans.ClassificationResult bresult = new biospectra.classify.beans.ClassificationResult ( header , sequence , result , type , taxonRank ) ; java.lang.String json ; try { json = serializer . toJson ( bresult ) ; summary . report ( bresult ) ; synchronized ( bw ) { bw . write ( ( json + "\n" ) ) ; } } catch ( java.io.IOException ex ) { biospectra.classify.ClassifierClient.LOG . error ( "Cannot write to a file" , ex ) ; } } 
private static void connectToPEiner ( java.lang.String peerName , int peerPort ) { try { java.rmi.registry.Registry theirReg = java.rmi.registry.LocateRegistry . getRegistry ( "localhost" , peerPort ) ; Peer.boundPeerStub = ( ( PeerInterface ) ( theirReg . lookup ( peerName ) ) ) ; Peer.peerStubs . put ( peerName , Peer.boundPeerStub ) ; java.lang.System.out . println ( ( "Found peer " + peerName ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public boolean matchOperation ( int position , java.lang.String posis ) { if ( map1 [ position ] . equals ( posis ) ) { return true ; } else { switch ( map1 [ position ] ) { case "d" : return false ; case "e" : return false ; case "f" : return false ; case "g" : return false ; case "h" : return false ; case "i" : return false ; case "3" : return false ; case "5" : return false ; default: return true ; } } } 
@ javax.annotation.PreDestroy public void delaction () { for ( int i = ( this . objects . size () ) - 1 ; i >= 0 ; i -- ) { try { this . delaction . accept ( this . objects . get ( i ) ) ; } catch ( java.lang.Throwable t ) {} } } 
private static boolean licenseFileexist () { if ( ( org.eclipse.titan.regressiontests.MainTestSuite.LICENSE_FILE ) != null ) { java.io.File licenseFile = new java.io.File ( org.eclipse.titan.regressiontests.MainTestSuite.LICENSE_FILE ) ; if ( ( licenseFile != null ) && ( licenseFile . exists () ) ) { return true ; } } final java.lang.String licenseFromEnv = java.lang.System . getenv ( "TTCN3_LICENSE_FILE" ) ; if ( licenseFromEnv != null ) { java.io.File licenseFile = new java.io.File ( licenseFromEnv ) ; if ( ( licenseFile != null ) && ( licenseFile . exists () ) ) { return true ; } } return false ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean  allowPoint ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( ( null != ( canvasHandler ) ) && ( null != target ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return false ; } 
private void processStats () { int lastIndex ; if ( isLoading ) { lastIndex = results . size () ; } else { lastIndex = ( results . size () ) - 1 ; } fireContentsChanged ( this , oldLength , oldLength ) ; fireIntervalAdded ( this , oldLength , lastIndex ) ; oldLength = results . size () ; } 
@ java.lang.Override public void onItemScized ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { omacka = 0 ; switch ( position ) { case 0 : setIngedience ( val ) ; break; case 1 : omacka += 1 ; setIngedience ( val ) ; break; case 2 : omacka += 2 ; setIngedience ( val ) ; break; } } 
@ org.junit.Test public void numDOors () { int door = 0 ; for ( clueGame.BoardCell [] i : tests.clueBoardTests.board . getBoard () ) { for ( clueGame.BoardCell j : i ) { if ( ( j != null ) && ( j . isDoorway () ) ) { ++ door ; } } } assertEquals ( tests.clueBoardTests.NUM_DOORS , door ) ; } 
public void updateSyss ( ) throws java.lang.NumberFormatException { numSystems = java.lang.Math . abs ( java.lang.Integer . parseInt ( _FormattedTF_NumSystems . getText () ) ) ; if ( ( numSystems ) > 60 ) { numSystems = 60 ; _FormattedTF_NumSystems . setValue ( new java.lang.Integer ( "60" ) ) ; } else if ( ( numSystems ) <= 0 ) { numSystems = 0 ; _FormattedTF_NumSystems . setValue ( new java.lang.Integer ( "0" ) ) ; } cs . getRackIndex ( _ComboBox_Racks . getSelectedIndex () ) . getSuctionGroupIndex ( _ComboBox_SuctionGroups . getSelectedIndex () ) . setNumSystems ( numSystems ) ; } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location , gps.fhv.at.gps_hawk.domain.events.NewLocationEventData data ) { data . setTrack ( mCurrentTrack ) ; gps.fhv.at.gps_hawk.domain.Waypoint waypoint = gps.fhv.at.gps_hawk.workers.WaypointFactory . getInstance () . createWaypoint ( location , data ) ; android.content.Intent intent = new android.content.Intent ( gps.fhv.at.gps_hawk.Constants.BROADCAST_NEW_WAYPOINT ) ; intent . putExtra ( Constants.EXTRA_WAYPOINT , waypoint ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( mContext ) . sendBroadcast ( intent ) ; } 
private metaopt.Operation chooseOpToScheue ( java.util.ArrayList < metaopt.Operation > conflicts ) { int index = java.lang.Math . abs ( ( ( randomNumber ) % ( conflicts . size () ) ) ) ; for ( metaopt.Operation op : schedulable ) { if ( conflicts . get ( index ) . equals ( op ) ) { schedulable . remove ( op ) ; return op ; } } return null ; } 
private javafx.collections.ObservableList < java.lang.Integer > populateTrackNumberListRadioSelect () { javafx.collections.ObservableList < java.lang.Integer > options ; if ( ( ui.Slave . getSequence () ) != null ) { options = javafx.collections.FXCollections . observableArrayList () ; for ( int i = 0 ; i < ( ui.Slave . getSequence () . getTracks () . length ) ; i ++ ) { java.lang.System.out . println ( i ) ; options . add ( i ) ; } } else { options = javafx.collections.FXCollections . observableArrayList ( 0 ) ; } return options ; } 
@ java.lang.Override public int onStartCmd ( android.content.Intent intent , int flags , int startId ) { android.app.Notification noti = new android.app.Notification.Builder ( this ) . setContentTitle ( "^____^" ) . setContentText ( "I'm Your Pet!" ) . setSmallIcon ( R.mipmap.ic_launcher ) . setOngoing ( true ) . build () ; startForeground ( com.air.petphone.KillNotificationService.NOTIFICATION_ID , noti ) ; return START_STICKY ; } 
private void frameBy ( double move ) { nextx = ( x ) + ( ( dir [ 0 ] ) * move ) ; nexty = ( y ) + ( ( dir [ 1 ] ) * move ) ; intx = ( ( int ) ( nextx ) ) ; inty = ( ( int ) ( nexty ) ) ; if ( ( nextx ) < 0 ) ( intx ) -- ; if ( ( nexty ) < 0 ) ( inty ) -- ; } 
@ java.lang.Override public void invoke () { com.door43.translationstudio.core.Library library = com.door43.translationstudio.AppContext . getLibrary () ; try { com.door43.translationstudio.AppContext . deployDefaultLibrary ( library ) ; library = com.door43.translationstudio.AppContext . getLibrary () ; library . seedDownloadIndex () ; } catch ( java.lang.Exception e ) { com.door43.tools.reporting.Logger . e ( this . getClass () . getName () , "Failed to deploy the default index" , e ) ; } } 
@ java.lang.Override public boolean containsKey ( java.lang.String indexId ) { if ( threadSafe ) { lock . readLock () . lock () ; try { return indexes . containsKey ( indexId ) ; } finally { lock . readLock () . unlock () ; } } else { return indexes . containsKey ( indexId ) ; } } 
@ java.lang.Override public void onDataChanged ( com.firebase.client.DataSnapshot dataSnapshot ) { try { io.punchtime.punchtime.data.Pulse p = dataSnapshot . getChildren () . iterator () . next () . getValue ( io.punchtime.punchtime.data.Pulse . class ) ; updateCheckinUI ( p ) ; if ( ( p . getCheckout () ) == 0 ) setCheckedIn ( true ) ; } catch ( java.lang.Exception e ) { updateCheckinUI ( null ) ; setCheckedIn ( false ) ; } } 
private void initProcess ( java.lang.String idLesson , java.lang.String url , java.lang.String downloadType ) { intentDownloadAll = new android.content.Intent ( getActivity () , com.erpdevelopment.vbvm.service.DownloadAllService . class ) ; intentDownloadAll . putExtra ( "idLesson" , idLesson ) ; intentDownloadAll . putExtra ( "url" , url ) ; intentDownloadAll . putExtra ( "downloadType" , downloadType ) ; getActivity () . startService ( intentDownloadAll ) ; com.erpdevelopment.vbvm.service.DownloadAllService . incrementCount () ; } 
private com.google.gcloud.testing.LocalDnsHelper.Response  handleZoneRead ( com.sun.net.httpserver.HttpExchange exchange ) { java.lang.String path = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT . relativize ( exchange . getRequestURI () ) . getPath () ; java.lang.String [] tokens = path . split ( "/" ) ; java.lang.String projectId = tokens [ 0 ] ; java.lang.String query = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT . relativize ( exchange . getRequestURI () ) . getQuery () ; java.util.Map < java.lang.String , java.lang.Object > options = com.google.gcloud.testing.OptionParsersAndExtractors . parseListZonesOptions ( query ) ; return listZones ( projectId , options ) ; } 
@ org.junit.Test public void  testGetPART () { org.junit.Assert . assertEquals ( 123456789 , getPart ( 123456789 , 0 , 9 ) ) ; org.junit.Assert . assertEquals ( 23456789 , getPart ( 123456789 , 1 , 9 ) ) ; org.junit.Assert . assertEquals ( 12345678 , getPart ( 123456789 , 0 , 8 ) ) ; org.junit.Assert . assertEquals ( 345 , getPart ( 123456789 , 2 , 5 ) ) ; } 
@ java.lang.Override public int Comparale ( rdoshi.codepath.todoapp.TaskItem t1 , rdoshi.codepath.todoapp.TaskItem t2 ) { if ( ( t1 . getDueDate () ) == null ) { return ( t2 . getDueDate () ) == null ? 0 : - 1 ; } if ( ( t2 . getDueDate () ) == null ) { return 1 ; } return t2 . getDueDate () . ComparaleTo ( t1 . getDueDate () ) ; } 
public void AddLastCell ( int data ) { if ( ( size ) == 0 ) { head = new a3.LinkedList.Node ( data ) ; head.next = tail ; tail = head ; } else { a3.LinkedList.Node newNode = new a3.LinkedList.Node ( data ) ; newNode.next = head ; head = newNode ; } ++ ( size ) ; } 
public static java.lang.String toPppercOrder ( java.lang.String string ) { java.lang.StringBuilder nb = new java.lang.StringBuilder () ; for ( java.lang.String word : com.psddev.dari.util.StringUtils . splitString ( string ) ) { if ( ! ( word . isEmpty () ) ) { nb . append ( java.lang.Character . toUpperCase ( word . charAt ( 0 ) ) ) . append ( word . substring ( 1 ) ) ; } } return nb . toString () ; } 
@ java.lang.Override public io.reactivex.ObservableSource < prada.lab.android.pingo.model.Tag > submit ( prada.lab.android.pingo.model.Tag tag ) throws java.lang.Exception { prada.lab.android.pingo.model.PingoPlace place = findPlaceById ( placeId ) ; place . getTags () . add ( tag ) ; mPlaces . remove ( place ) ; mPlaces . add ( 0 , place ) ; mPlacesSubject . onNext ( mPlaces ) ; java.util.List < prada.lab.android.pingo.model.Tag > tags = mTagSub . getValue () ; tags . add ( tag ) ; mTagSub . onNext ( tags ) ; return io.reactivex.Observable . just ( tag ) ; } 
@ java.lang.Override public void getAttribute ( java.lang.String s , java.lang.Object o ) { try { java.lang.String attr = replaceAspectAttrSep ( s ) ; int attrDataType = sysObject . getAttrDataType ( attr ) ; sysObject . setValue ( attr , toDfValue ( o , attrDataType ) ) ; } catch ( mc.dctm.el.identifier.context.DfException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
private static boolean dummyObjectNotAdded ( android.accounts.Account [] accountsByType ) { for ( int i = 0 ; i < ( accountsByType.length ) ; i ++ ) { if ( accountsByType [ i ] . name . equals ( com.philosophicalhacker.philhackernews.PhilHackerNewsApplication.ACCOUNT_NAME ) ) { return true ; } } return false ; } 
public java.lang.String GetLocalPath ( java.lang.String id ) { for ( int i = 0 ; i < ( nodeList . size () ) ; i ++ ) { if ( nodeList . get ( i ) . getID () . equals ( id ) ) { return nodeList . get ( i ) . getName () ; } } return null ; } 
@ java.lang.Override public void pipe ( final me.noize.chemistry.io.Entry < T > entry ) throws me.noize.chemistry.io.ChemistryIOException { if ( ! ( this . streams . isEmpty () ) ) { if ( this . streams . peek () . hasEntries () ) { this . streams . peek () . pipe ( entry ) ; } else { me.noize.chemistry.io.EntryOutputStream < T > old = this . streams . poll () ; old . close () ; this . pipe ( entry ) ; } } else { throw new me.noize.chemistry.io.ChemistryIOException ( "Stream could not be advanced" ) ; } } 
public void  resizable () { java.lang.Object [] temp = new java.lang.Object [ ( storage.length ) * 2 ] ; java.lang.System . arraycopy ( storage , head , temp , 0 , ( ( storage.length ) - ( head ) ) ) ; java.lang.System . arraycopy ( storage , 0 , temp , ( ( storage.length ) - ( head ) ) , tail ) ; head = ( temp.length ) - 1 ; tail = storage.length ; storage = temp ; } 
public int adjustComputerBuildUsers ( int amount ) { int difference = amount ; if ( ( ( computerBuilders ) < ( java.lang.Math . abs ( difference ) ) ) && ( amount < 0 ) ) { difference = ( - ( computerBuilders ) ) + 1 ; computerBuilders = 1 ; } else { computerBuilders += amount ; } if ( difference != 0 ) gi . setComputerBuildersLabelChangeText ( difference ) ; return difference ; } 
public static games.strategy.triplea.ai.proAI.data.ProBattleResult calculatingPlayerresults ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { final games.strategy.triplea.ai.proAI.data.ProBattleResult result = games.strategy.triplea.ai.proAI.util.ProBattleUtils . checkIfNoAttackersOrDefenders ( t , attackingUnits , defendingUnits ) ; if ( result != null ) { return result ; } return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits ) ; } 
@ java.lang.Override public void  failed ( com.parse.ParseObject parseObject , com.parse.ParseException e ) { if ( e == null ) { java.lang.System.out . println ( "null score" ) ; com.parse.ParseObject userscore = new com.parse.ParseObject ( "Scores" ) ; userscore . put ( "score" , com.cards.flash.testez.TallyScore . getScore () ) ; userscore . put ( "user" , com.parse.ParseUser . getCurrentUser () ) ; saveScoreObject ( userscore ) ; com.cards.flash.testez.TallyScore . resetScore () ; } else {} } 
@ com.chronicle.controller.RequestMapping ( value = { "/ setup/{id}/{password}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String  setup ( @ com.chronicle.controller.PathVariable java.lang.Long id , @ com.chronicle.controller.PathVariable java.lang.String password ) { logger . info ( ( " setup with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; java.lang.System.out . println ( user . getPassword () ) ; java.lang.System.out . println ( password ) ; if ( user . getPassword () . equals ( password ) ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } 
public void manualPtrl () { double y = m_liftStick . getY ( GenericHID.Hand.kLeft ) ; m_robot.logger . debug ( ( "manualPtrl:" + y ) ) ; if ( ( isAnyLimitSwitchClosed () ) || ( ( java.lang.Math . abs ( y ) ) < ( k_minJoystickValue ) ) ) { stopMotor () ; } else { startMotor () ; m_mainMotor . set ( y ) ; } } 
@ java.lang.Override public void onConfigReloaded ( android.content.res.Configuration newConfig ) { super . onConfigReloaded ( newConfig ) ; if ( ( notFirstRun ) || ( ! ( com.brainicism.projectrito.MainActivity.summonerName . equals ( "" ) ) ) ) { com.brainicism.projectrito.MainActivity.checkValidSummoner check = new com.brainicism.projectrito.MainActivity.checkValidSummoner () ; check . execute () ; } } 
public void setItemScovered ( int pos , boolean selected , android.view.View view ) { if ( ( pos < 0 ) || ( pos >= ( mAdapter . getItemCount () ) ) ) return; if ( selected ) { mSelectedItems . put ( pos , selected ) ; } else { mSelectedItems . delete ( pos ) ; } view . setSelected ( selected ) ; } 
private void setUpMapAsRequireds () { if ( ( com.mycompany.behear.MainActivity.mMap ) == null ) { com.mycompany.behear.MainActivity.mMap = ( ( com.google.android.gms.maps.SupportMapFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.map ) ) ) . getMap () ; } if ( ( com.mycompany.behear.MainActivity.mMap ) == null ) { return; } } 
public static void logShortLog ( java.lang.Exception e , int lines ) { java.lang.String s = e . toString () ; int i = 0 ; for ( java.lang.StackTraceElement er : e . getStackTrace () ) { if ( i == lines ) { break; } s += "\n\tat " + ( er . toString () ) ; i ++ ; } e . printStackTrace () ; global.record.Log . log ( "ERROR" , s ) ; } 
@ java.lang.Override public synchronized void analyzeScrimmageSet ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; } 
@ java.lang.Override public boolean  contiguous ( ) throws java.io.IOException { unpinCurrentPage () ; assertPagedFileStillMapped () ; if ( (  contiguousPageId ) > ( lastPageId ) ) { if ( ( ( pf_flags ) & ( org.neo4j.io.pagecache.PagedFile.PF_NO_GROW ) ) != 0 ) { return false ; } else { pagedFile . increaseLastPageIdTo (  contiguousPageId ) ; } } pin (  contiguousPageId , true ) ; currentPageId =  contiguousPageId ; (  contiguousPageId ) ++ ; return true ; } 
@ org.junit.Test public void get_GivenUnknownIdShouldReturnNotfoundException ( ) throws com.nextlunch.api.service.exception.ReadException { org.mockito.Mockito . when ( service . getWinnerOfDay ( org.mockito.Matchers . any ( java.util.Date . class ) ) ) . thenThrow ( new com.nextlunch.api.service.exception.ReadException ( com.nextlunch.api.service.exception.enums.ReadExceptionMessageEnum.NOT_FOUND ) ) ; @ java.lang.SuppressWarnings ( value = "rawtypes" ) org.springframework.http.ResponseEntity responseEntity = controller . getWinnerOfDay () ; org.springframework.http.HttpStatus httpStatus = responseEntity . getStatusCode () ; org.hamcrest.MatcherAssert . assertThat ( "Wrong HTTP status for unknown ID" , httpStatus , org.hamcrest.Matchers . equalTo ( HttpStatus.NOT_FOUND ) ) ; org.mockito.Mockito . verify ( service , org.mockito.Mockito . times ( 1 ) ) . getWinnerOfDay ( org.mockito.Matchers . any ( java.util.Date . class ) ) ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public org.backmeup.model.BackMeUpUser  findByNames ( java.lang.String username ) { javax.persistence.Query q = em . createQuery ( "SELECT u FROM BackMeUpUser u WHERE username = :username" ) ; q . setParameter ( "username" , username ) ; java.util.List < org.backmeup.model.BackMeUpUser > users = q . getResultList () ; org.backmeup.model.BackMeUpUser u = ( ! ( users . isEmpty () ) ) ? users . get ( 0 ) : null ; return u ; } 
public static java.lang.String [] toMtz ( java.lang.String . . . values ) { java.lang.String [] frequency = new java.lang.String [ values.length ] ; for ( int i = 0 ; i < ( values.length ) ; i ++ ) { try { frequency [ i ] = ( ( java.lang.Integer . parseInt ( values [ i ] . trim () ) ) / ( 1000 * 1000 ) ) + " Mhz" ; } catch ( java.lang.NumberFormatException nfe ) { nfe . printStackTrace () ; } } return frequency ; } 
private java.lang.Double  evaluateLinational ( java.lang.String inputOperator , java.lang.String num1 , java.lang.String num2 ) { if ( inputOperator . equals ( "+" ) ) return addFn ( num1 , num2 ) ; else if ( inputOperator . equals ( "-" ) ) return subtractFn ( num1 , num2 ) ; else if ( inputOperator . equals ( "*" ) ) return multiplyFn ( num1 , num2 ) ; else return divideFn ( num1 , num2 ) ; } 
private java.lang.String subretract ( java.lang.String x , java.lang.String y ) { java.math.BigDecimal i = new java.math.BigDecimal ( getValue ( x ) . toString () ) ; java.math.BigDecimal j = new java.math.BigDecimal ( getValue ( y ) . toString () ) ; java.math.BigDecimal k = j . subretract ( i ) ; k = k . stripTrailingZeros () ; return k . toPlainString () ; } 
public final void replaceRow ( T item , int toPosition ) { int fromPosition = mItems . indexOf ( item ) ; mItems . remove ( fromPosition ) ; mItems . add ( toPosition , item ) ; com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter . notifyItemMoved ( fromPosition , toPosition ) ; if ( ( mCallback ) != null ) { mCallback . onDynamicCardPositionChanged ( this , fromPosition , toPosition ) ; } } 
public void  expose ( java.io.DataOutputStream os ) { byte [] stringBytes = playerid . getBytes () ; try { os . writeLong ( timestamp ) ; os . write ( stringBytes.length ) ; os . write ( stringBytes , 0 , stringBytes.length ) ; os . writeInt ( command ) ; os . writeInt ( xcord ) ; os . write ( ycord ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void parseNoboReply ( java.lang.String resp ) { java.lang.String cmd = resp . substring ( 0 , 1 ) ; if ( cmd . equals ( MsRobotoLab4.ROBOTO_SIMPLE_REPLY ) ) { message = "Success - command done" ; } else if ( cmd . equals ( MsRobotoLab4.ROBOTO_RESULT_REPLY ) ) { message = "Success - " ; result = java.lang.Integer . parseInt ( resp . split ( " " ) [ 1 ] ) ; } else { message = "Error - " ; message += resp ; } } 
public com.brashmonkey.spriter.file.Reference findReferenceByFileNamesandfolder ( java.lang.String fileName , java.lang.String folderName , boolean withoutExtension ) { com.brashmonkey.spriter.file.Reference [] refs = this . findReferencesByFolderName ( folderName ) ; for ( com.brashmonkey.spriter.file.Reference ref : refs ) { java.lang.String file = ref.fileName . replaceAll ( ( folderName + "/" ) , "" ) ; if ( withoutExtension ) file = file . replaceAll ( ".png" , "" ) ; if ( file . toLowerCase () . equals ( fileName ) ) return ref ; } return null ; } 
@ java.lang.Override public void stores () { try ( java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream () ) { try ( java.io.ObjectOutput out = new java.io.ObjectOutputStream ( bos ) ) { out . writeObject ( this . getData () ) ; this . buffer = bos . toByteArray () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } super . stores () ; } 
@ org.junit.Test public void configuresMultipleCuriesWithoutDefcorrectLY () { org.springframework.hateoas.hal.DefaultCurieProvider provider = new org.springframework.hateoas.hal.DefaultCurieProvider ( org.springframework.hateoas.hal.DefaultCurieProviderUnitTest . getCuries () ) ; assertThat ( provider . getCurieInformation ( new org.springframework.hateoas.Links () ) , hasSize ( 2 ) ) ; assertThat ( provider . getNamespacedRelFor ( "some" ) , is ( "some" ) ) ; } 
@ java.lang.Override public com.hauldata.util.tokenizer.Token NextNext ( ) throws java.io.IOException , java.util.InputMismatchException { com.hauldata.util.tokenizer.Token token ; if ( position . hasNext () ) { token = position . next () ; } else { token = super . getToken () ; if ( token != null ) { position . add ( token ) ; } } return token ; } 
public static java.lang.String PaymentsAuth ( long cardAmount , int cash , int TotalPay ) { java.util.Scanner ms = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( "Payment Option: Cash or Card?" ) ; java.lang.String option = ms . next () ; if ( option == "Cash" ) { if ( cash == TotalPay ) { return "Success! Payment has been authorized" ; } else { return "Payment fail! Please check amount" ; } } else if ( option == "Card" ) { if ( cardAmount == TotalPay ) { return "Success! Payment has been authorized" ; } else { return "Payment fail! Please check card or amount" ; } } return null ; } 
private void generateAllowingPortots () { java.util.Set < java.lang.Integer > tmp = new java.util.HashSet <> () ; java.lang.String whiteList = portWhiteList . get () ; for ( java.lang.String s : whiteList . split ( "," ) ) { try { tmp . add ( java.lang.Integer . parseInt ( s ) ) ; } catch ( java.lang.NumberFormatException e ) { return; } } allowedPorts . set ( tmp ) ; } 
void MergeFirst ( int [] a , int [] p , int [] c , int l , int r ) { if ( l >= r ) { return; } int m = ( l + r ) / 2 ; MergeFirst ( a , p , c , l , m ) ; MergeFirst ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , m , r ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { android.util.Log . i ( com.polito.mad17.madmax.activities.ProfileEdit.TAG , "save clicked" ) ; if ( updateAccount () ) { android.widget.Toast . makeText ( this , "Saved" , Toast.LENGTH_SHORT ) . show () ; android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.polito.mad17.madmax.activities.MainActivity . class ) ; startActivity ( i ) ; finish () ; } } 
@ org.junit.Test public void primitiveType2json () { org.junit.Assert . assertEquals ( gson . toJson ( 15 ) , ru.otus.homework_08.JSON . toJSON ( 15 ) ) ; org.junit.Assert . assertEquals ( gson . toJson ( 'c' ) , ru.otus.homework_08.JSON . toJSON ( 'c' ) ) ; org.junit.Assert . assertEquals ( gson . toJson ( true ) , ru.otus.homework_08.JSON . toJSON ( true ) ) ; } 
@ org.junit.Test public void  idCheck () { org.marc.everest.datatypes.II id = clinicalDocument . getId () ; org.junit.Assert . assertNotNull ( id ) ; org.junit.Assert . assertEquals ( Constants.Runtime.VALID_DEMOGRAPHIC . toString () , id . getExtension () ) ; org.junit.Assert . assertFalse ( org.oscarehr.e2e.util.EverestUtils . isNullorEmptyorWhitespace ( id . getRoot () ) ) ; } 
@ java.lang.Override protected void onAppSuccess ( int requestCode , int resultCode , android.content.Intent data ) { super . onAppSuccess ( requestCode , resultCode , data ) ; if ( requestCode == ( felixwiemuth.lincal.ui.AddCalendarActivity.RESULT_CODE_SELECT_FILE ) ) { if ( data != null ) { int takeFlags = data . getFlags () ; takeFlags &= ( android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION ) | ( android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION ) ; getContentResolver () . takePersistableUriPermission ( data . getData () , takeFlags ) ; fileEditText . setText ( data . getDataString () ) ; } } } 
public static void add ( java.io.File f ) throws java.io.IOException { if ( f == null ) return; if ( f . isDirectory () ) { for ( java.io.File c : f . listFiles () ) { org.ohmage.Utilities . add ( c ) ; } } f . add () ; } 
@ android.support.annotation.Nullable public android.os.Bundle onProvideTransientParParImpl ( @ android.support.annotation.NonNull V v , @ android.support.annotation.NonNull android.view.View view , @ android.support.annotation.Nullable android.os.Bundle params ) { VP presenter = getPresenter ( v , false ) ; allowScreenViewCalls = true ; android.os.Bundle b = v . onProvideParams ( view , params ) ; if ( b != null ) params = b ; allowScreenViewCalls = false ; if ( presenter != null ) { b = presenter . onProvideTransientParams ( v , view , params ) ; if ( b != null ) params = b ; } return params ; } 
public void  resetActive () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { team . get ( i ) . getAttributes () . setUsed ( ( i == ( frontIndex ) ) ) ; } } 
public boolean  valididate ( Model.Tile.BuildTile target , Model.Utility.ILocation loc ) { if ( ( slots . isEmpty () ) && ( buildMap . locationInBounds ( loc ) ) ) { return true ; } if ( ( ( buildMap . tileExistsAt ( loc ) ) || ( ! ( this . slotExistsAt ( loc ) ) ) ) || ( ! ( buildMap . locationInBounds ( loc ) ) ) ) { return false ; } Model.Map.Slot mySlot = slots . get ( loc ) ; return mySlot . checkMatch ( target . getEdges () ) ; } 
@ java.lang.Override public void drageFor ( final illarion.client.world.interactive.InteractiveInventorySlot targetSlot ) { if ( ! ( isValidItem () ) ) { return; } final illarion.client.net.client.DragInvInvCmd cmd = illarion.client.net.CommandFactory . getInstance () . getCommand ( CommandList.CMD_DRAG_INV_INV , illarion.client.net.client.DragInvInvCmd . class ) ; cmd . setDrag ( getSlotId () , targetSlot . getSlotId () ) ; cmd . send () ; } 
@ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/addresult" ) public api.ConfirmationMessage addUser ( @ org.springframework.web.bind.annotation.RequestParam ( value = "resultTypeId" ) int resultTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "resultname" ) java.lang.String resultname , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return resultLogic . addUser ( resultTypeId , calamityAssigneeId , buildingId , resultname , password , email , city , token ) ; } 
private java.lang.String  readCmdLine ( java.lang.Process process ) { java.lang.String s ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try { java.io.BufferedReader stdInput = new java.io.BufferedReader ( new java.io.InputStreamReader ( process . getInputStream () ) ) ; while ( ( s = stdInput . readLine () ) != null ) { sb . append ( s ) . append ( "\n" ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } 
@ java.lang.Override public java.lang.String  getText () { java.util.List < org.roda.core.data.v2.TransferredResource > items = display . getVisibleItems () ; if ( ( items . size () ) == 0 ) { return "" ; } else { long totalSize = 0 ; for ( org.roda.core.data.v2.TransferredResource item : items ) { totalSize += item . getSize () ; } return totalSize > 0 ? org.roda.wui.common.client.tools.Humanize . readableFileSize ( totalSize ) : "" ; } } 
@ java.lang.Override public void save2Storage ( ) throws java.lang.Exception { w094j.ctrl8.database.Storage googleStorage = new w094j.ctrl8.database.GoogleStorage ( this . file , this . gson ) ; googleStorage . storeData () ; w094j.ctrl8.database.Storage diskStorage = new w094j.ctrl8.database.DiskStorage ( this . file , this . path , this . gson ) ; diskStorage . storeData () ; } 
private boolean  handleSubBlock ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; } 
@ org.junit.Test public void whenModuleHasNoName_thenCorrespondingfITNESS () { org.corpus_tools.pepper.modules.PepperModule module = org.mockito.Mockito . mock ( org.corpus_tools.pepper.modules.PepperModule . class ) ; org.mockito.Mockito . when ( module . getName () ) . thenReturn ( null ) ; org.assertj.core.api.Assertions . assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () . checkFitness ( module ) . getFitness ( FitnessFeature.HAS_NAME ) ) . isEqualTo ( false ) ; } 
public java.util.Optional < java.lang.String > postPost ( java.lang.String text , net.dean.jraw.models.Submission submission ) { try { final java.lang.String commentId = accountManager . reply ( submission , text ) ; com.fallingdutchman.youtuberedditbot.authentication.reddit.jraw.RedditManager.log . info ( java.lang.String . format ( "posted comment to %s on /r/%s, with id %s" , submission . getId () , submission . getSubredditName () , commentId ) ) ; return java.util.Optional . of ( commentId ) ; } catch ( net.dean.jraw.ApiException e ) { com.fallingdutchman.youtuberedditbot.authentication.reddit.jraw.RedditManager.log . error ( "was unable to post comment" , e ) ; return java.util.Optional . empty () ; } } 
public void  assertEncodeAndDecodeWithInitialFix ( ) throws java.lang.Exception { java.lang.String encodedWithPrefix = org.datacleaner.util.SecurityUtils . encodePasswordWithPrefix ( org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE ) ; assertEquals ( org.datacleaner.util.SecurityUtilsTest.ENCODED_VALUE_WITH_PREFIX , encodedWithPrefix ) ; java.lang.String decoded = org.datacleaner.util.SecurityUtils . decodePasswordWithPrefix ( encodedWithPrefix ) ; assertEquals ( org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE , decoded ) ; decoded = org.datacleaner.util.SecurityUtils . decodePasswordWithPrefix ( org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE ) ; assertEquals ( org.datacleaner.util.SecurityUtilsTest.PLAIN_TEXT_VALUE , decoded ) ; } 
private void command () { for ( int i = ( commands . size () ) - 1 ; i >= 0 ; i -- ) { commands . get ( i ) . update ( this ) ; } for ( int i = ( commands . size () ) - 1 ; i >= 0 ; i -- ) { if ( commands . get ( i ) . killMe ) { commands . get ( i ) . end ( this ) ; commands . remove ( i ) ; } } } 
@ java.lang.Override public boolean contain ( java.lang.Object o ) { if ( o instanceof java.lang.Number ) { java.lang.Number n = ( ( java.lang.Number ) ( o ) ) ; int index = n . intValue () ; return ( ( index > 0 ) && ( index < ( selectedIndices . length () ) ) ) && ( selectedIndices . get ( index ) ) ; } return false ; } 
@ java.lang.Override public void onItemSelectleted ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { java.lang.String selectedItemText = ( ( java.lang.String ) ( parent . getItemAtPosition ( position ) ) ) ; if ( position > 0 ) { category = selectedItemText ; } } 
private void validateFormiting ( com.webapplication.entity.AuctionItem auctionItem ) throws java.lang.Exception { if ( ( auctionItem . getBidsNo () ) != 0 ) throw new com.webapplication.exception.auctionitem.AuctionAlreadyInProgressException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_ALREADY_IN_PROGRESS ) ; if ( ( ( auctionItem . getEndDate () ) != null ) && ( new java.util.Date () . after ( auctionItem . getEndDate () ) ) ) throw new com.webapplication.exception.auctionitem.AuctionExpiredException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_EXPIRED ) ; } 
protected void Prepare ( ) throws java.lang.IllegalStateException { startLoading () ; this . videoIsReady = false ; this . initialMovieHeight = - 1 ; this . initialMovieWidth = - 1 ; this . mediaPlayer . setOnPreparedListener ( this ) ; this . mediaPlayer . setOnErrorListener ( this ) ; this . mediaPlayer . setOnSeekCompleteListener ( this ) ; this . mediaPlayer . setAudioStreamType ( AudioManager.STREAM_MUSIC ) ; this . currentState = com.github.rtoshiro.view.video.FullscreenVideoView.State.PREPARING ; this . mediaPlayer . PrepareAsync () ; } 
private au.com.mutopia.acs.models.c3ml.C3mlEntity buildElement ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildElement ( feature ) ; entity . addChild ( child ) ; } return entity ; } 
public void renderTimer ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } 
private boolean  doPerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } 
public int runner ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; int result = cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; return result ; } 
@ java.lang.Override public void onPositiveActionClickured ( com.rey.material.app.DialogFragment fragment ) { com.rey.material.app.TimePickerDialog dialog = ( ( com.rey.material.app.TimePickerDialog ) ( fragment . getDialog () ) ) ; android.widget.Toast . makeText ( fragment . getDialog () . getContext () , ( "Time is " + ( dialog . getFormattedTime ( java.text.SimpleDateFormat . getTimeInstance () ) ) ) , Toast.LENGTH_SHORT ) . show () ; fragment . dismiss () ; } 
@ java.lang.Override public boolean ischunkEnd ( @ javax.annotation.Nonnull org.jenkinsci.plugins.workflow.graph.FlowNode current , @ javax.annotation.CheckForNull org.jenkinsci.plugins.workflow.graph.FlowNode previous ) { if ( previous == null ) { return false ; } if ( current instanceof org.jenkinsci.plugins.workflow.graph.BlockEndNode ) { org.jenkinsci.plugins.workflow.graph.BlockStartNode bsn = ( ( org.jenkinsci.plugins.workflow.graph.BlockEndNode ) ( previous ) ) . getStartNode () ; if ( isChunkStart ( bsn , null ) ) { return true ; } } return isChunkStart ( previous , null ) ; } 
private hudson.plugins.timestamper.annotator.ConsoleLogParser.Result readFromEnd ( java.io.InputStream inputStream ) throws java.io.IOException { hudson.plugins.timestamper.annotator.ConsoleLogParser.Result result = new hudson.plugins.timestamper.annotator.ConsoleLogParser.Result () ; result.lineNumber = - 1 ; int value = inputStream . read () ; result.atNewLine = isNewLine ( value ) ; while ( ( value = inputStream . read () ) != ( - 1 ) ) { if ( isNewLine ( value ) ) { ( result.lineNumber ) -- ; } } return result ; } 
@ java.lang.Override public boolean  usesChanges ( java.lang.String tagName ) { tagName = tagName . toLowerCase () ; boolean  usesChanges = ! ( ( ( tagName . equals ( "cfset" ) ) || ( tagName . equals ( "cfif" ) ) ) || ( tagName . equals ( "cfelseif" ) ) ) ; return  usesChanges ; } 
private javafx.scene.text.Text  createInitialEntity () { summaryText = new javafx.scene.text.Text ( appointment . getSummary () ) ; summaryText . getStyleClass () . add ( "AppointmentLabel" ) ; summaryText . setX ( layoutHelp.paddingProperty . get () ) ; summaryText . setY ( summaryText . prefHeight ( 0 ) ) ; layoutHelp . clip ( this , summaryText , widthProperty () . subtract ( layoutHelp.paddingProperty ) , heightProperty () . subtract ( 0.0 ) , true ) ; return summaryText ; } 
public final nez.util.UList < nez.expr.Expression > asLL () { nez.util.UList < nez.expr.Expression > l = new nez.util.UList < nez.expr.Expression > ( new nez.expr.Expression [ this . size () ] ) ; if ( ( this . size () ) > 1 ) { for ( nez.expr.Expression e : this ) { l . add ( e ) ; } } else { l . add ( this ) ; } return l ; } 
public int  illegal ( edu.cis232.gwasos.resources.Combat enemy ) { java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = enemy . getHp () ; if ( ( rand . nextInt ( ( ( 5 + ( enemy . getAgility () ) ) - ( getAgility () ) ) ) ) <= 3 ) { setMissed ( false ) ; enemy . damage ( power ) ; setPreviousAttackDamage ( ( monsterCurrentHp - ( enemy . getHp () ) ) ) ; } else { setMissed ( true ) ; } return previousAttackDamage ; } 
private void  moveContact ( org.zapto.mike.mrstreamserver.Channel channel , org.zapto.mike.mrstreamserver.ClientHandler client ) { boolean canJoin = true ; if ( canJoin && ( channel != ( client . getChannel () ) ) ) { client . setChannel ( channel ) ; channel . addClient ( client ) ; } else {} } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR , ignoreCancelled = true ) public void onEntityToename ( org.bukkit.event.entity.EntityTameEvent event ) { if ( ! ( ( event . getOwner () ) instanceof org.bukkit.entity.Player ) ) return; org.bukkit.entity.Player player = ( ( org.bukkit.entity.Player ) ( event . getOwner () ) ) ; if ( ! ( com.frdfsnlght.inquisitor.PlayerStats . isStatsPlayer ( player ) ) ) return; PlayerStats.group . getStatistics ( player . getName () ) . incr ( "animalsTamed" , com.frdfsnlght.inquisitor.Utils . normalizeEntityTypeName ( event . getEntityType () ) ) ; } 
void setClickBox ( android.widget.TextView t1 , android.widget.TextView t2 , android.widget.ImageView i1 , java.lang.String description_in ) { i1 . setImageResource ( R.drawable.ic_check_box_black_24dp ) ; t1 . setTextColor ( android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.PrimaryPink ) ) ; if ( ( t2 != null ) && ( ! ( description_in . isEmpty () ) ) ) { t2 . setText ( description_in ) ; } } 
@ java.lang.Override public void starter ( java.net.InetAddress hostAddress ) throws java.io.IOException { if ( mRunningFlag ) { throw new java.lang.UnsupportedOperationException () ; } try { mClient . starter () ; mClient . addListener ( new io.github.antijava.marjio.network.ClientReceiver ( mApplication ) ) ; mClient . connect ( io.github.antijava.marjio.network.NET_TIMEOUT , hostAddress , io.github.antijava.marjio.network.NET_TCP_PORT , io.github.antijava.marjio.network.NET_UDP_PORT ) ; mRunningFlag = true ; } catch ( java.io.IOException e ) { throw e ; } } 
@ java.lang.Override public byte []  getX6 ( byte [] Y1Bytes ) { org.bouncycastle.math.ec.ECPoint.Fp Y1 = null ; Y1 = ( ( org.bouncycastle.math.ec.ECPoint.Fp ) ( de.tsenger.animamea.tools.Converter . byteArrayToECPoint ( Y1Bytes , curve ) . normalize () ) ) ; return  getX6 ( Y1 ) . getEncoded ( false ) ; } 
@ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileInterputer ( org.openide.filesystems.FileObject fileObject ) { if ( fileObject != null ) { fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; } 
public static void sendExpras ( android.os.Bundle extras ) { if ( extras != null ) { if ( ( ( com.plugin.gcm.PushPlugin.gECB ) != null ) && ( ( com.plugin.gcm.PushPlugin.gWebView ) != null ) ) { com.plugin.gcm.PushPlugin . sendJavascript ( com.plugin.gcm.PushPlugin . convertBundleToJson ( extras ) ) ; } else { com.plugin.gcm.PushPlugin.gCachedExtras = extras ; } } } 
private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployied ( java.lang.String version , java.lang.String name ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , name ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } 
public void  moveAccessoryDown ( android.view.View view ) { if ( ( currDragon ) == 0 ) { currDragon = ( dragons . size () ) - 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } else { currDragon -= 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } } 
public double getMinimumz () { if ( ! ( java.lang.Double . isNaN ( zMin ) ) ) return zMin ; for ( int i = 0 ; i < ( getXyz () [ 0 ] . length ) ; i ++ ) { final double z = getXyz ( 0 , i , 2 ) ; if ( ( z <= ( zMin ) ) || ( java.lang.Double . isNaN ( zMin ) ) ) zMin = z ; } return zMin ; } 
public void applyInterestAndJee () { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( Checking.MIN_BAL ) ) { balance -= Checking.FEE ; } } balance = ( balance ) + ( ( ( balance ) * ( Checking.APY ) ) / ( MONTH_PER_YEAR ) ) ; } 
@ java.lang.Override public boolean Configulate ( org.kohsuke.stapler.StaplerRequest req , net.sf.json.JSONObject formData ) throws com.amazonaws.codedeploy.FormException { awsAccessKey = formData . getString ( "awsAccessKey" ) ; awsSecretKey = formData . getString ( "awsSecretKey" ) ; proxyHost = formData . getString ( "proxyHost" ) ; proxyPort = java.lang.Integer . parseInt ( formData . getString ( "proxyPort" ) ) ; req . bindJSON ( this , formData ) ; save () ; return super . Configulate ( req , formData ) ; } 
public void addEXP ( int addedExp ) { m_exp += addedExp ; while ( ( m_exp ) >= ( 100 * ( this . getLevel () ) ) ) { levelUp ( ( ( m_exp ) - ( 100 * ( this . getLevel () ) ) ) ) ; } } 
@ org.androidannotations.annotations.AfterViews void app () { customNumberList = com.pawansinghchouhan05.callcustomizer.core.utils.Utils . retriveCustomNumberListToFCMDatabase () ; mobileNumberAdapter = new com.pawansinghchouhan05.callcustomizer.home.adapters.MobileNumberAdapter ( customNumberList . getCustomNumberList () ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; recyclerView . setAdapter ( mobileNumberAdapter ) ; mobileNumberAdapter . notifyDataSetChanged () ; } 
protected void submit ( java.lang.String table , java.util.HashMap < java.lang.String , java.lang.String > values ) throws java.lang.Exception { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String submitBody = putBody ( values ) ; int r = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + submitBody ) + ";" ) , true ) ) ) ; } 
private org.w3c.dom.Node isMultiplicativeOper () { org.w3c.dom.Element parent = doc . createElement ( "MultiplicativeOp" ) ; if ( isAMultiplicativeOp () ) { java.lang.String sym = ( ( currentTokenType () ) == ( JParserSym.MULTIPLICATION ) ) ? "*" : ( currentTokenType () ) == ( JParserSym.DIVISION ) ? "/" : "and" ; parent . setTextContent ( sym ) ; ( tokenIndex ) ++ ; return parent ; } ( tokenIndex ) ++ ; return null ; } 
@ java.lang.Override protected void actionRemitted ( net.minecraft.client.gui.GuiButton button ) throws java.io.IOException { if ( ( button.id ) == 0 ) { mc . displayGuiScreen ( parent ) ; } else { if ( button.displayString . equals ( "Enable" ) ) { button.displayString = "Disable" ; } else { button.displayString = "Enable" ; } } } 
public java.util.List < com.kencook.sharpspring.Event > findEvents ( java.lang.String timestamp ) throws com.kencook.sharpspring.SharpspringException { com.kencook.sharpspring.SharpspringRequest request = com.kencook.sharpspring.SharpspringRequestBuilder . request ( 1 , SharpspringMethod.GET_EVENTS ) . where ( "createTimestamp" ) . is ( timestamp ) . build () ; com.kencook.sharpspring.responses.GetEventsResponse result = operations . query ( request , com.kencook.sharpspring.responses.GetEventsResponse . class ) ; if ( ( result . getError () ) != null ) throw new com.kencook.sharpspring.SharpspringException ( result . getError () ) ; return result . getResult () . getEvent () ; } 
@ java.lang.Override protected java.lang.String doInThread ( byte [] . . . photoData ) { try { photoFile = this . createFile () ; io.github.data4all.logger.Log . d ( io.github.data4all.handler.CapturePictureHandler.TAG , ( "Picturepath:" + ( photoFile . getPath () ) ) ) ; final java.io.FileOutputStream fos = new java.io.FileOutputStream ( photoFile ) ; fos . write ( photoData [ 0 ] ) ; fos . flush () ; fos . close () ; } catch ( java.io.IOException ex ) { io.github.data4all.logger.Log . e ( io.github.data4all.handler.CapturePictureHandler.TAG , "Fail to save picture" , ex ) ; } return "successful" ; } 
public void  newturn () { mana . rebase ( ( ( mana . base () ) + 1 ) ) ; mana . reset () ; mana . alter ( ( - ( overloadMana . value () ) ) ) ; if ( ( mana . value () ) < 0 ) { mana . set ( 0 ) ; } overloadMana . rebase ( 0 ) ; draw ( 1 ) ; field . updateSleepTimes () ; field . updateFreezeTimes () ; field . resetAttackCapacities () ; } 
@ javax.annotation.Nonnull protected javax.ws.rs.core.UriBuilder getBaseIibuilder () { if ( ( m_bUseStaticServerInfo ) && ( com.helger.web.servlet.server.StaticServerInfo . isSet () ) ) { return javax.ws.rs.core.UriBuilder . fromUri ( ( ( ( com.helger.web.servlet.server.StaticServerInfo . getInstance () . getFullServerPath () ) + "/" ) + ( m_aUriInfo . getPath ( false ) ) ) ) ; } return m_aUriInfo . getBaseIibuilder () ; } 
private static void flushSettings () { MyStaticValue.ENV . clear () ; if ( ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings ) != null ) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings ) ; } org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . setGlobalVar ( MyStaticValue.ENV ) ; if ( ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path ) != null ) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path , true ) ; } else { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . initConfig ( new java.io.File ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.configDir , "ansj_library.properties" ) . getAbsolutePath () , false ) ; } } 
public void addNotifications ( @ com.flair.blurb.Constants.CategoryDef java.lang.String category , android.service.notification.StatusBarNotification notification , android.service.notification.NotificationListenerService service ) { java.lang.String key = com.flair.blurb.Util . getKey ( notification ) ; android.util.Log . d ( com.flair.blurb.data.Notifications.TAG , ( ( ( "addNotifications: " + category ) + " key " ) + key ) ) ; java.util.concurrent.ConcurrentHashMap < java.lang.String , android.service.notification.StatusBarNotification > map = getMapByCategory ( category ) ; com.flair.blurb.Util . mergeNotifications ( map , notification , service ) ; map . put ( com.flair.blurb.Util . getKey ( notification ) , notification ) ; } 
private org.ethereum.jsonrpc.Block getByJsonblockName ( java.lang.String id ) { if ( "earliest" . equalsIgnoreCase ( id ) ) { return blockchain . getBlockByNumber ( 0 ) ; } else if ( "latest" . equalsIgnoreCase ( id ) ) { return blockchain . getBestBlock () ; } else if ( "pending" . equalsIgnoreCase ( id ) ) { return null ; } else { long blockNumber = StringHexToBigInteger ( id ) . longValue () ; return blockchain . getBlockByNumber ( blockNumber ) ; } } 
public java.util.List < statistics.model.Transaction > gettransaction ( statistics.model.Account account , int limit , int offset , java.util.Date startDate , java.util.Date endDate , statistics.model.enums.TransactionType [] transactionTypes , statistics.model.enums.PlanFactType . . . planFactTypes ) { return transactionManager . gettransaction ( account , startDate , endDate , java.util.Arrays . asList ( transactionTypes ) , java.util.Arrays . asList ( planFactTypes ) , limit , offset ) ; } 
@ java.lang.Override public int getCurrentZooming () { try { java.lang.String zoomRes = sendRequest ( buildPanTiltHeadControlURL ( "%23GZ" ) ) ; if ( zoomRes . startsWith ( "gz" ) ) { int zoom = java.lang.Integer . parseInt ( zoomRes . substring ( 2 , 5 ) , 16 ) ; lastKnown . setZoom ( zoom ) ; return zoom ; } throw new java.io.IOException ( ( ( errorString ) + zoomRes ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return lastKnown . getZoom () ; } } 
private ConcreteTree.ITypeIdent typIDENT ( ) throws parser.GrammarErrorException { java.lang.System.out . println ( "typedIdent ::= IDENT COLON TYPE" ) ; parser.ConcreteTree.TypeIdent ret = null ; parser.IdentToken ident = ( ( parser.IdentToken ) ( consume ( Terminals.IDENT ) ) ) ; consume ( Terminals.COLON ) ; parser.TypeToken type = ( ( parser.TypeToken ) ( consume ( Terminals.TYPE ) ) ) ; ret = new parser.ConcreteTree.TypeIdent ( ident , new parser.ColonToken () , type ) ; return ret ; } 
public void  queueplaylist ( com.sedmelluq.discord.lavaplayer.track.AudioPlaylist playlist ) { java.util.List < com.sedmelluq.discord.lavaplayer.track.AudioTrack > list = playlist . getTracks () ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { if ( ! ( this . player . startTrack ( list . get ( i ) , true ) ) ) { this . queue . add ( list . get ( i ) ) ; this . playlist . add ( list . get ( i ) . getInfo () . title ) ; } } } 
public void PrintAll () { uic.project.commuter.carPoolData.iterator.CarPoolIterator iter = this . getIterator () ; while ( iter . hasNext ( this ) ) { uic.project.commuter.carPoolData.iterator.CarPoolComponent currentObject = iter . next ( this ) ; currentObject . printSelf () ; uic.project.commuter.carPoolData.iterator.CarPoolIterator tier2Iter = this . getIterator () ; if ( ( currentObject . getClass () ) == ( this . getClass () ) ) { while ( tier2Iter . hasNext ( currentObject ) ) { tier2Iter . next ( currentObject ) . printSelf () ; } } } } 
@ java.lang.Override public byte [] closeFrames ( int no , byte [] buf , int x , int y , int w , int h ) throws java.io.IOException , loci.formats.FormatException { loci.formats.FormatTools . checkPlaneParameters ( this , no , buf.length , x , y , w , h ) ; long planeSize = loci.formats.FormatTools . getPlaneSize ( this ) ; pixelFile . seek ( ( ( pixelOffset ) + ( no * planeSize ) ) ) ; readPlane ( pixelFile , x , y , w , h , buf ) ; return buf ; } 
private void copystream ( com.sun.grizzly.tcp.http11.GrizzlyResponse grizzlyResponse , java.io.InputStream is ) throws java.io.IOException { java.io.OutputStream os = grizzlyResponse . getOutputStream () ; try { org.apache.commons.io.IOUtils . copyLarge ( is , os ) ; os . flush () ; } finally { is . close () ; } } 
@ java.lang.Override public net.minecraft.item.ItemStack addItems ( int slot , net.minecraft.item.ItemStack stack , boolean simulate ) { int index = getIndexForSlot ( slot ) ; net.minecraftforge.items.IItemHandlerModifiable handler = getHandlerFromIndex ( index ) ; slot = getSlotFromIndex ( slot , index ) ; return handler . addItems ( slot , stack , simulate ) ; } 
public void deletePeople ( int id ) { mDBOpenHelper = new cbpos1989.com.sqlitedatabase.DBOpenHelper ( mContext ) ; mDatabase = mDBOpenHelper . getWritableDatabase () ; mDatabase . execSQL ( ( ( ( ( ( "DELETE FROM " + ( DBFeederContract.PersonTable.TABLE_NAME ) ) + " WHERE " ) + ( DBFeederContract.PersonTable._ID ) ) + " = " ) + id ) ) ; mDatabase . close () ; mDBOpenHelper . close () ; mDatabase = null ; mDBOpenHelper = null ; } 
private float newNormalisation ( float x , float y , mapChooser.PerlinNoiseGenerator noise , float scale ) { float n = 0 ; float weight = 1 ; float curFrequency = 1 ; for ( int i = 0 ; i < ( frequencies ) ; i ++ ) { n += weight * ( noise . noise2 ( ( curFrequency * x ) , ( curFrequency * y ) ) ) ; weight /= 2 ; curFrequency += 2 ; } return n ; } 
public void setDisell ( double discount ) { if ( discount == 0 ) { offeredPrice = false ; finalPrice = price ; this . discount = discount ; return; } else if ( discount > 1 ) { return; } this . offeredPrice = true ; this . discount = discount ; this . finalPrice = ( ( int ) ( java.lang.Math . round ( ( ( price ) * ( 1 - discount ) ) ) ) ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( mListener ) != null ) { java.lang.String toText = mToTextView . getText () . toString () ; if ( ! ( getResString ( R.string.to_hint ) . equals ( toText ) ) ) { mListener . onToClick ( toText ) ; } else { mListener . onToClick ( null ) ; } } } 
public void runner () { android.bluetooth.BluetoothSocket socket ; while ( true ) { try { socket = serverSocket . accept () ; } catch ( java.io.IOException e ) { break; } if ( socket != null ) { listenOnSocket ( socket ) ; try { serverSocket . close () ; } catch ( java.io.IOException e ) {} break; } } } 
public org.lirazs.gbackbone.client.core.collection.Collection class ( org.lirazs.gbackbone.client.core.data.Options [] objects , org.lirazs.gbackbone.client.core.data.Options options ) { java.util.List < T > models = new java.util.ArrayList < T > () ; for ( org.lirazs.gbackbone.client.core.data.Options object : objects ) { T model = prepareModel ( object , options ) ; if ( model != null ) { models . add ( model ) ; } } return class ( models , options ) ; } 
public java.lang.String getCategoryLabel ( java.lang.String catID ) { java.lang.String display = null ; android.database.sqlite.SQLiteDatabase db = this . getReadableDatabase () ; android.database.Cursor cursor = db . query ( com.quaap.launchtime.db.DB.TAB_ORDER_TABLE , new java.lang.String [] { com.quaap.launchtime.db.DB.LABEL } , ( ( com.quaap.launchtime.db.DB.CATID ) + "=?" ) , new java.lang.String [] { catID } , null , null , null , null ) ; try { if ( cursor . moveToNext () ) { display = cursor . getString ( 0 ) ; } } finally { cursor . close () ; } return display ; } 
@ java.lang.SuppressWarnings ( value = "unused" ) public void OnClick ( de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductClickedEvent event ) { de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment dialogFragment = new de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment () ; android.os.Bundle arguments = new android.os.Bundle () ; arguments . putSerializable ( ProductDialogFragmentViewModel.KEY_PRODUCT , event . getProduct () ) ; dialogFragment . setArguments ( arguments ) ; dialogFragment . show ( getFragmentManager () , "ProductDialogFragment" ) ; } 
public int DecR ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } return 1 ; } 
public int count ( int v , int w ) { if ( v == w ) { return 0 ; } int common = ancestor ( v , w ) ; if ( common == ( - 1 ) ) { return - 1 ; } edu.princeton.cs.algs4.BreadthFirstDirectedPaths vBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , v ) ; edu.princeton.cs.algs4.BreadthFirstDirectedPaths wBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , w ) ; return ( ( vBFS . distTo ( common ) ) + ( wBFS . distTo ( common ) ) ) - 1 ; } 
@ java.lang.Override public void  oncreate () { super .  oncreate () ; player = new android.media.MediaPlayer () ; player . setWakeMode ( getApplicationContext () , PowerManager.PARTIAL_WAKE_LOCK ) ; player . setAudioStreamType ( AudioManager.STREAM_MUSIC ) ; player . setOnPreparedListener ( this ) ; player . setOnErrorListener ( this ) ; player . setOnCompletionListener ( this ) ; if ( new com.odong.buddhismhomework.utils.KvHelper ( this ) . get ( "mp3.replay" , java.lang.Boolean . class , false ) ) { player . setLooping ( true ) ; } } 
private static java.util.List < de.setsoftware.reviewtool.base.Pair < de.setsoftware.reviewtool.model.changestructure.PositionInText , de.setsoftware.reviewtool.model.changestructure.PositionInText > > deterateDifferent ( java.lang.String oldContent , java.lang.String newContent ) throws java.lang.Exception { return de.setsoftware.reviewtool.diffalgorithms.SimpleTextDiffAlgorithmTest . toPositionsInNewFile ( new de.setsoftware.reviewtool.diffalgorithms.MyersSourceDiffAlgorithm () . deterateDifferent ( de.setsoftware.reviewtool.model.changestructure.ChangestructureFactory . createFileInRevision ( "" , null , null ) , oldContent . getBytes ( "UTF-8" ) , de.setsoftware.reviewtool.model.changestructure.ChangestructureFactory . createFileInRevision ( "" , null , null ) , newContent . getBytes ( "UTF-8" ) , "UTF-8" ) ) ; } 
public static st.redline.ProtoObject args2 ( st.redline.ProtoObject receiver , st.redline.ThisContext thisContext , st.redline.ProtoObject arg1 , st.redline.ProtoObject arg2 , st.redline.ProtoObject arg3 , st.redline.ProtoObject arg4 , st.redline.ProtoObject arg5 , st.redline.ProtoObject arg6 , st.redline.ProtoObject arg7 ) { return ( receiver . methodAt ( ( ( java.lang.String ) ( arg1 . javaValue () ) ) ) ) != null ? ProtoObject.TRUE : ProtoObject.FALSE ; } 
public T  removeMax () { checkRange () ; T retVal = _end . getCargo () ; _end = _end . getPrev () ; if ( ( _end ) == null ) { _front = null ; } else { _end . setNext ( null ) ; } ( _size ) -- ; return retVal ; } 
@ java.lang.Override public boolean Exits ( java.lang.String id ) throws org.n52.series.db.da.DataAccessException { org.hibernate.Session session = getSession () ; try { if ( org.n52.io.response.v1.ext.PlatformType . isStationaryId ( id ) ) { org.n52.series.db.da.dao.v1.FeatureDao featureDao = new org.n52.series.db.da.dao.v1.FeatureDao ( session ) ; return featureDao . hasInstance ( parseId ( org.n52.io.response.v1.ext.PlatformType . extractId ( id ) ) , org.n52.series.db.da.beans.FeatureEntity . class ) ; } else { org.n52.series.db.da.dao.v1.ext.PlatformDao dao = new org.n52.series.db.da.dao.v1.ext.PlatformDao ( session ) ; return dao . hasInstance ( parseId ( org.n52.io.response.v1.ext.PlatformType . extractId ( id ) ) , org.n52.series.db.da.beans.ext.PlatformEntity . class ) ; } } finally { returnSession ( session ) ; } } 
@ java.lang.Override public boolean  onPreferchange ( android.preference.Preference preference , java.lang.Object o ) { if ( sp_autocheck . isChecked () ) { check_list . setEnabled ( true ) ; startTimer () ; } else { if ( ( cdt ) != null ) cdt . cancel () ; check_list . setEnabled ( false ) ; } return true ; } 
@ java.lang.Override protected void onaCreated ( android.os.Bundle savedInstanceState ) { super . onaCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; initializeFiles () ; initSwitchListener () ; try { de.myo.myoscriptcontrol.GestureScriptManager . getInstance () . setConfigFile ( ConfigFile ) ; mStatus = RecordActivityStatus.DISCONNECTED ; } catch ( java.io.IOException | org.json.JSONException e ) { e . printStackTrace () ; de.myo.myoscriptcontrol.ErrorActivity . handleError ( this , e . getMessage () ) ; } initializeMYOHub () ; initGridAdapter () ; OnUpdateStatus ( de.myo.myoscriptcontrol.GestureRecordDeviceListener . getInstance () . getStatus () ) ; } 
public java.util.Collection < prompto.declaration.IMethodDeclaration > findSequidateMembers () { prompto.expression.MethodSelector selector = methodCall . getMethod () ; java.util.Collection < prompto.declaration.IMethodDeclaration > candidates = selector . getCandidates ( context , false ) ; if ( ( candidates . size () ) == 0 ) throw new prompto.error.SyntaxError ( ( "No method named:" + ( methodCall . getMethod () . getName () ) ) ) ; return filterPotential ( candidates ) ; } 
private org.miradi.migrations.forward.DateUnitEffortList getAdjustedDateUnitEffortListForAssign ( org.miradi.migrations.forward.DateUnitEffortList dateUnitEffortListToAdjust , org.miradi.migrations.forward.RawObject rawObject ) throws java.lang.Exception { java.util.ArrayList < org.miradi.migrations.forward.RawObject > childTasks = getChildTasks ( rawObject ) ; for ( org.miradi.migrations.forward.RawObject task : childTasks ) { java.util.ArrayList < org.miradi.objecthelpers.ORef > childAssignmentRefs = getAssignments ( task ) ; for ( org.miradi.objecthelpers.ORef childAssignmentRef : childAssignmentRefs ) { org.miradi.migrations.forward.RawObject childAssignment = getRawProject () . findObject ( childAssignmentRef ) ; dateUnitEffortListToAdjust = getAdjustedDateUnitEffortListForAssignment ( dateUnitEffortListToAdjust , childAssignment ) ; } dateUnitEffortListToAdjust = getAdjustedDateUnitEffortListForAssign ( dateUnitEffortListToAdjust , task ) ; } return dateUnitEffortListToAdjust ; } 
public void openSegment ( android.support.v4.app.Fragment fragment , boolean addToBackStack ) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction transaction = fragmentManager . beginTransaction () ; transaction . replace ( R.id.container , fragment ) ; transaction . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; if ( addToBackStack ) { transaction . addToBackStack ( null ) ; } transaction . commit () ; updateViewFromFragment ( fragment ) ; } 
protected int createNewKey ( java.io.File f ) { int id = getNextFreeFileID () ; de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile file = new de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile () ; file.ID = id ; file.path = f . getPath () ; file.timestamp = f . lastModified () ; file.references = 1 ; list . add ( file ) ; return id ; } 
@ java.lang.Override public void OnClick ( android.view.View arg0 ) { if ( ( mVideoFilesVector . size () ) > 0 ) { mAdIndex = ( ( ( mAdIndex ) + ( mVideoFilesVector . size () ) ) - 1 ) % ( mVideoFilesVector . size () ) ; java.lang.String filePath = ( ( java.lang.String ) ( mVideoFilesVector . get ( mAdIndex ) ) ) ; mVideoView . setVideoURI ( android.net.Uri . parse ( filePath ) ) ; mVideoView . start () ; } } 
protected int invoke () { mSurfaceTexture . updateTexImage () ; float [] matrix = new float [ 16 ] ; mSurfaceTexture . getTransformMatrix ( matrix ) ; mEffect . setTextureTransformMatrix ( matrix ) ; int textureId = mEffect . invoke ( mSurfaceTextureId ) ; if ( ( mEncoder ) != null ) { start = java.lang.System . currentTimeMillis () ; mHandler . sendEmptyMessage ( 0 ) ; } mRendererScreen . invoke ( textureId , mCubeBuffer , mTextureBuffer ) ; return 0 ; } 
private void  pick ( int index ) { assert index < 3 ; if ( ( suggestions [ index ] ) == "" ) { processor . addWord ( new java.util.ArrayList < com.shiweinan.ckeyboard.Point > () ) ; return; } processor . addWord ( screenPoints ) ; screenPoints . clear () ; processor . showCorrectionHints ( screenPoints ) ; } 
private void assertDeepEquallsGuest ( java.util.List < cz.muni.fi.pv168.project.Guest > expectedList , java.util.List < cz.muni.fi.pv168.project.Guest > actualList ) { expectedList . sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; actualList . sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; assertEquals ( expectedList , actualList ) ; for ( int i = 0 ; i < ( expectedList . size () ) ; i ++ ) { cz.muni.fi.pv168.project.Guest expected = expectedList . get ( i ) ; cz.muni.fi.pv168.project.Guest actual = actualList . get ( i ) ; assertDeepEquals ( expected , actual ) ; } } 
public static void saveUsersmetcs ( android.content.Context context ) { android.content.SharedPreferences sharedPref = context . getSharedPreferences ( "HearthTrackerSharedPreferences" , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sharedPref . edit () ; editor . putString ( "ActiveDeckName" , dumplingyzr.hearthtracker.Utils.sActiveDeckName ) ; editor . putString ( "UserName" , dumplingyzr.hearthtracker.Utils.sUserName ) ; editor . putStringSet ( "UserDeckNames" , dumplingyzr.hearthtracker.Utils.sUserDeckNames ) ; editor . apply () ; } 
public static javax.mail.internet.InternetAddress getAdminFromInternetaddress ( ) throws com.liferay.portal.kernel.exception.SystemException , java.io.UnsupportedEncodingException { try { final java.lang.String adminFromEmail = com.ext.portlet.service.ConfigurationAttributeLocalServiceUtil . getAttributeStringValue ( ConfigurationAttributeKey.ADMIN_FROM_EMAIL . name () , 0L ) ; return new javax.mail.internet.InternetAddress ( adminFromEmail , org.xcolab.utils.TemplateReplacementUtil . replacePlatformConstants ( "The <colab-name/> Team" ) ) ; } catch ( com.ext.portlet.NoSuchConfigurationAttributeException e ) { throw new com.liferay.portal.kernel.exception.SystemException ( "Admin email not configured in ConfigurationAttribute table" , e ) ; } } 
public synchronized void runner () { if ( ( ( id ) == null ) || ( ( ( finishedAt ) == null ) || ( ( ( java.lang.System . currentTimeMillis () ) - ( finishedAt ) ) > ( sessionPendingMillis ) ) ) ) { id = java.util.UUID . randomUUID () . toString () ; } finishedAt = null ; } 
@ com.squareup.otto.Subscribe public void onlastPlace ( today.gacha.android.services.GachaLocationService.LastLocationEvent event ) { if ( event . isSuccess () ) { animateGoogleMapCamera ( event . getData () ) ; return; } android.util.Log . d ( today.gacha.android.ui.MapsActivity.TAG , ( "Get last location failed - " + ( event . getThrowableMessage () ) ) ) ; locationService . requestCurrentLocation () ; } 
public java.lang.Object VisIT ( dbms.IdExp exp , java.util.Hashtable < java.lang.String , java.lang.Integer > attrPosTable , dbms.Tuple tuple ) { java.lang.String attrName = exp . getId () ; dbms.Value value ; value = tuple . get ( attrPosTable . get ( attrName ) . intValue () ) ; return VisIT ( exp , value ) ; } 
@ java.lang.Override public android.support.v4.app.Fragment  getitem ( int position ) { switch ( position ) { case 0 : return ruhrpott.owasp.com.vuln_app_1.Hello_Page . newInstance () ; case 1 : return ruhrpott.owasp.com.vuln_app_1.Prepare . newInstance () ; case 2 : return ruhrpott.owasp.com.vuln_app_1.Basic_Http . newInstance () ; case 3 : return ruhrpott.owasp.com.vuln_app_1.Logcat_Output . newInstance () ; } } 
public int getPlayerPoints ( org.bukkit.scoreboard.Team team ) { int result = 0 ; if ( ( ( getGameMgr () . getGame ( team ) ) != null ) && ( beaconLinks . containsKey ( getGameMgr () . getGame ( team ) ) ) ) { for ( com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks . get ( getGameMgr () . getGame ( team ) ) ) { if ( pair . getOwner () . equals ( team ) ) { result ++ ; } } } return result ; } 
@ java.lang.Override public void dissect ( long timeStamp , org.wso2.siddhi.core.event.Event [] inEvents , org.wso2.siddhi.core.event.Event [] removeEvents ) { org.wso2.siddhi.core.util.EventPrinter . print ( timeStamp , inEvents , removeEvents ) ; eventArrived = true ; if ( inEvents != null ) { ( value ) ++ ; } else if ( ( value ) == 1 ) { junit.framework.Assert . assertNull ( inEvents ) ; } } 
private org.carbondata.processing.store.writer.CarbonFactDataWriter < ? > getChemDataWriter ( java.lang.String storeLocation , int measureCount , int mdKeyLength , java.lang.String tableName , org.carbondata.processing.mdkeygen.file.IFileManagerComposite fileManager , int [] keyBlockSize ) { return new org.carbondata.processing.store.writer.CarbonFactDataWriterImplForIntIndexAndAggBlock ( storeLocation , measureCount , mdKeyLength , tableName , fileManager , keyBlockSize , aggKeyBlock , isComplexTypes () , noDictionaryCount , carbonDataFileAttributes , databaseName , wrapperColumnSchemaList , noDictionaryCount , dimensionType , carbonDataDirectoryPath , colCardinality , segmentProperties ) ; } 
private void scanCharcoding () { android.content.Intent intentScan = new android.content.Intent ( "com.google.zxing.client.android.SCAN" ) ; intentScan . putExtra ( "SCAN_MODE" , "QR_CODE_MODE" ) ; intentScan . putExtra ( "SAVE_HISTORY" , false ) ; try { startActivityForResult ( intentScan , com.wagdy.authapp.MainActivity.SCAN_REQUEST ) ; } catch ( android.content.ActivityNotFoundException error ) {} } 
private double STDDiv ( java.util.LinkedList < java.lang.Double > list ) { double mean = mean ( list ) ; double sumOfDiffToMeanSq = 0 ; double length = list . size () ; for ( double i : list ) { double diffToMeanSq = java.lang.Math . pow ( ( i - mean ) , 2 ) ; sumOfDiffToMeanSq += diffToMeanSq ; } double meanOfDiffs = sumOfDiffToMeanSq / length ; return java.lang.Math . sqrt ( meanOfDiffs ) ; } 
private javax.mail.Message []  searchMailfolder ( javax.mail.Folder inbox ) throws javax.mail.MessagingException { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; return inbox . search ( searchTerm ) ; } 
public java.lang.String  printForward ( int numToPrint ) { LLNode < E > item = first ; java.lang.String finalString = "" ; if ( ( size () ) == 0 ) return finalString ; for ( int i = 0 ; i < numToPrint ; i ++ ) { finalString += ( item . toString () ) + "\n" ; item = item . getNext () ; } return finalString ; } 
public final void  setDPS ( int fps ) { if ( fps <= 0 ) { throw new java.lang.RuntimeException ( "Attempted to run a CellGame at a non-positive FPS" ) ; } this . fps = fps ; msPerFrame = 1000 / ( ( double ) ( fps ) ) ; if ( ( game . getContainer () ) != null ) { game . getContainer () . setTargetFrameRate ( fps ) ; } } 
public boolean Authentate ( final java.lang.String iUserName , final java.lang.String iPassword , final java.lang.String iResourceToCheck ) { final com.orientechnologies.orient.server.config.OServerUserConfiguration user = getUser ( iUserName ) ; if ( ( user != null ) && ( user.password . equals ( iPassword ) ) ) { if ( user.resources . equals ( "*" ) ) return true ; java.lang.String [] resourceParts = user.resources . split ( "," ) ; for ( java.lang.String r : resourceParts ) if ( r . equals ( iResourceToCheck ) ) return true ; } return false ; } 
public void  setTimePreview ( long secUntilFinished ) { java.lang.String sec = java.lang.String . format ( "%02d" , ( ( secUntilFinished / 1000 ) % 60 ) ) ; java.lang.String min = java.lang.String . format ( "%02d" , ( ( secUntilFinished / 1000 ) / 60 ) ) ; textViewText = ( min + ":" ) + sec ; textView . setText ( textViewText ) ; progressBar . setProgress ( ( ( int ) ( ( secUntilFinished * 1000 ) / ( default_StudyTime ) ) ) ) ; } 
private void flushDefault () { selectedFaculties . clear () ; chosenFaculties = "" ; questions . clear () ; newDate = "" ; for ( int i = 0 ; i < ( checked.length ) ; i ++ ) { checked [ i ] = false ; } aSpinner1 . setSelection ( 0 ) ; } 
@ java.lang.Override public boolean CanBmit ( net.minecraft.util.EnumFacing from , net.minecraftforge.fluids.Fluid fluid ) { if ( ( hasFrequency () ) && ( ( configComponent . getOutput ( TransmissionType.FLUID , from , facing ) . ioState ) == ( mekanism.common.SideData.IOState.OUTPUT ) ) ) { return ( fluid == null ) || ( fluid == ( frequency.storedFluid . getFluid () . getFluid () ) ) ; } return false ; } 
protected void setSelectpanel ( processing.app.contrib.ContributionPanel contributionPanel ) { contributionTab.contributionManagerDialog . updateStatusPanel ( contributionPanel ) ; if ( ( selectedPanel ) == contributionPanel ) { selectedPanel . setSelected ( true ) ; } else { processing.app.contrib.ContributionPanel lastSelected = selectedPanel ; selectedPanel = contributionPanel ; if ( lastSelected != null ) { lastSelected . setSelected ( false ) ; } contributionPanel . setSelected ( true ) ; updateColors () ; requestFocusInWindow () ; } } 
@ java.lang.Override public boolean onOptionsMenuRelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_filter ) ) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment () ; getFragmentManager () . beginTransaction () . replace ( R.id.fragment_frame_lay , filterFragment , "FilterFragment" ) . commit () ; return true ; } return super . onOptionsMenuRelected ( item ) ; } 
public static byte [] print ( java.lang.String filePath ) throws java.lang.Exception { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . print ( is ) ; } finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } } 
private void handleTakePhotoReturn ( int resultCode , android.content.Intent resultIntent ) { if ( resultCode == ( RESULT_OK ) ) { android.widget.ImageView imgView = ( ( android.widget.ImageView ) ( findViewById ( R.id.imgShowImage ) ) ) ; mPhotoPathName = mPhotoPathUri . getPath () ; com.example.a454203.aone_sample.PhotoHelper . addPhotoToMediaStoreAndDisplayThumbnail ( mPhotoPathName , this , imgView ) ; } else { mPhotoPathUri = null ; mPhotoPathName = null ; android.widget.Toast . makeText ( this , "User cancelled" , Toast.LENGTH_LONG ) . show () ; } } 
public void addconstaint ( mondrian.rolap.sql.SqlQuery sqlQuery , mondrian.rolap.sql.RolapCube baseCube , mondrian.rolap.aggmatcher.AggStar aggStar ) { for ( int i = 0 ; i < ( columnList . size () ) ; i ++ ) { mondrian.olap.MondrianDef.Expression expression = columnList . get ( i ) ; if ( expression != null ) { final java.lang.Comparable value = valueList . get ( i ) ; final mondrian.spi.Dialect.Datatype datatype = datatypeList . get ( i ) ; sqlQuery . addWhere ( mondrian.rolap.sql.SqlConstraintUtils . constrainLevel2 ( sqlQuery , expression , datatype , value ) ) ; } } } 
@ java.lang.Override public boolean  Equches ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( x ) != ( other.x ) ) { return false ; } if ( ( y ) != ( other.y ) ) { return false ; } return true ; } 
public void fand () { compiler.Ecriture . ecrireStringln ( flux , ";fand" ) ; compiler.Ecriture . ecrireStringln ( flux , "pop bx" ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "and ax,bx" ) ; compiler.Ecriture . ecrireStringln ( flux , "push ax" ) ; } 
private void gotoPage () { java.lang.Integer targetPage = pageField . getTextAsInteger () ; if ( targetPage == null ) { return; } if ( ( targetPage != null ) && ( ! ( ( targetPage >= 1 ) && ( targetPage <= ( totalPages ) ) ) ) ) { showErrorMessage ( "Invalid page" ) ; return; } currentPage = targetPage - 1 ; displayPage ( currentPage ) ; updatePageNumberLabelAndNavigation () ; } 
@ java.lang.Override public void InitService () { io.github.maddouri.intellij.OnlineSearch.state.PluginSettings settings = io.github.maddouri.intellij.OnlineSearch.state.PluginSettings . getInstance () ; com.intellij.openapi.actionSystem.ActionManager am = com.intellij.openapi.actionSystem.ActionManager . getInstance () ; com.intellij.openapi.actionSystem.DefaultActionGroup menuManager = ( ( com.intellij.openapi.actionSystem.DefaultActionGroup ) ( am . getAction ( io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchActionRegistration.COMPONENT_GROUP ) ) ) ; for ( io.github.maddouri.intellij.OnlineSearch.state.PluginSettings.SearchEngine engine : settings.searchEngines ) { io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchAction action = new io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchAction ( engine ) ; am . registerAction ( io.github.maddouri.intellij.OnlineSearch.action.LaunchSearchActionRegistration . getActionId ( action ) , action ) ; menuManager . add ( action ) ; } menuManager . addSeparator () ; } 
public boolean  checktoken ( fundata.model.Token model ) { if ( model == null ) { return false ; } java.lang.String token = ( ( java.lang.String ) ( redisTemplate . boundValueOps ( model . getUserId () ) . get () ) ) ; if ( ( token == null ) || ( ! ( token . equals ( model . getToken () ) ) ) ) { return false ; } redisTemplate . boundValueOps ( model . getUserId () ) . expire ( Constants.TOKEN_EXPIRES_HOUR , java.util.concurrent.TimeUnit.HOURS ) ; return true ; } 
private edu.princeton.cs.algs4.Stack < edu.princeton.cs.algs4.Point2D > ange ( edu.princeton.cs.algs4.RectHV rect , KdTree.Node node , edu.princeton.cs.algs4.Stack < edu.princeton.cs.algs4.Point2D > points ) { if ( node == null ) return points ; if ( rect . contains ( node.p ) ) points . push ( node.p ) ; if ( rect . intersects ( node.rect ) ) { points = ange ( rect , node.lb , points ) ; points = ange ( rect , node.rt , points ) ; } return points ; } 
public void removeXAddri ( java.lang.String src , org.apache.hadoop.fs.XAttr xAttr ) throws java.io.IOException { if ( ( src == null ) || ( xAttr == null ) ) { throw new java.lang.IllegalArgumentException ( "Argument is null" ) ; } checkIfFileExisted ( src ) ; java.util.List < org.apache.hadoop.fs.XAttr > targetXAttrList = com.google.common.collect.Lists . newArrayListWithCapacity ( 1 ) ; targetXAttrList . add ( xAttr ) ; try { getXAttrs ( src , targetXAttrList ) ; } catch ( java.io.IOException e ) { throw new java.io.IOException ( "No matching attributes found for remove operation" ) ; } this . nodeManager . removeXAddri ( src , xAttr ) ; } 
private android.widget.SimpleCursorAdapter getThemeAdapter ( android.database.Cursor cursor ) { java.lang.String [] dataColumns = new java.lang.String [] { NotePad.Notes.COLUMN_NAME_TITLE , NotePad.Notes.COLUMN_NAME_MODIFICATION_DATE } ; int [] viewIDs = new int [] { R.id.itemTitle , R.id.itemDate } ; int themed_item ; if ( FragmentLayout.lightTheme ) themed_item = R.layout.noteslist_item_light ; else themed_item = R.layout.noteslist_item_dark ; android.widget.SimpleCursorAdapter adapter = new android.widget.SimpleCursorAdapter ( activity , themed_item , cursor , dataColumns , viewIDs ) ; return adapter ; } 
private void registerBestPoints ( float recentTime ) { curTime . setText ( ( "current time: " + ( java.lang.String . valueOf ( recentTime ) ) ) ) ; if ( recentTime <= ( bestTimeTracker ) ) { bestTimeTracker = recentTime ; } if ( recentTime >= ( worstTimeTracker ) ) { worstTimeTracker = recentTime ; } bestTime . setText ( ( "best time: " + ( bestTimeTracker ) ) ) ; worstTime . setText ( ( "worst time: " + ( worstTimeTracker ) ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportSite ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportSite ( assemblyId ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } 
public void getName ( java.lang.String name , int point ) { for ( org.bukkit.scoreboard.Scoreboard sb : scoreboards . values () ) { org.bukkit.scoreboard.Objective obj = sb . getObjective ( org.bitbucket.ucchy.fnafim.game.ScoreboardDisplay.OBJECTIVE_NAME ) ; if ( point == 0 ) { getScoreItem ( obj , name ) . getName ( 1 ) ; } getScoreItem ( obj , name ) . getName ( point ) ; } } 
private void setImagesResource ( java.lang.Object object ) { imageSources = new java.util.ArrayList < org.appcelerator.titanium.view.TiDrawableReference > () ; if ( object instanceof java.lang.Object [] ) { for ( java.lang.Object o : ( ( java.lang.Object [] ) ( object ) ) ) { imageSources . add ( org.appcelerator.titanium.view.TiDrawableReference . fromObject ( getProxy () , o ) ) ; } } else { imageSources . add ( org.appcelerator.titanium.view.TiDrawableReference . fromObject ( getProxy () , object ) ) ; } } 
public void  populateMap () { values . clear () ; mMap . clear () ; cursor = getActivity () . getContentResolver () . query ( EcoMapContract.ProblemsEntry.CONTENT_URI , null , null , null , null , null ) ; while ( cursor . moveToNext () ) { org.ecomap.android.app.Problem p = new org.ecomap.android.app.Problem ( cursor , getActivity () ) ; values . add ( p ) ; } cursor . close () ; setUpClusterer () ; } 
protected void initializer () { new com.googlecode.kanbanik.client.components.common.PicturePreviewHandler ( pictureUrl , assiggneePicturePreview , assigneePicturePreviewLabel , assiggneePicturePreviewErrorLabel ) . initializer () ; permissionsEditingComponent = new com.googlecode.kanbanik.client.components.security.PermissionsEditingComponent () ; java.util.List < com.googlecode.kanbanik.client.api.Dtos.PermissionDto > permissions = ( ( oldDto ) != null ) ? oldDto . getPermissions () : java.util.Collections.EMPTY_LIST ; permissions = ( permissions != null ) ? permissions : java.util.Collections.EMPTY_LIST ; permissionsEditingComponent . init ( permissions , oldDto ) ; permissionsPanel . clear () ; permissionsPanel . add ( permissionsEditingComponent ) ; } 
@ java.lang.Override public void handleResponse ( retrofit2.Call < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > call , retrofit2.Response < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } 
@ java.lang.Override public void collectAssociatedName ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { if ( job instanceof jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } } 
public static java.sql.Connection  Open () { java.sql.Connection c = null ; try { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; c = java.sql.DriverManager . getConnection ( "jdbc:sqlite:./bin/codeu/chat/codeU_db/ChatDatabase.db" ) ; c . setAutoCommit ( false ) ; java.lang.System.out . println ( "Opened database successfully" ) ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( ( ( ( e . getClass () . getName () ) + ": " ) + ( e . getMessage () ) ) ) ; java.lang.System . exit ( 0 ) ; } return c ; } 
public boolean  Accepts ( rocnikovyprojekt.Word w ) { rocnikovyprojekt.FSA m = determinize () ; java.lang.Object p = m.initialStates . iterator () . next () ; for ( int i = 0 ; i < ( w . length () ) ; i ++ ) { java.lang.Object a = w . symbolAt ( i ) ; p = m.delta . get ( p , a ) . iterator () . next () ; } return m.finalStates . contains ( p ) ; } 
public void SetAudio ( int i ) { Main.buffer [ ( ( Main.useroffset ) + 577 ) ] = ( ( byte ) ( i + 1 ) ) ; Main.buffer [ ( ( Main.useroffset ) + 146248 ) ] = ( ( byte ) ( i + 1 ) ) ; } 
public java.lang.String getAnnotateURL () { java.lang.String html = new java.lang.String ( text ) ; java.lang.String tagged ; for ( org.openmrs.module.bannerprototype.SofaTextMention m : sofaTextMention ) { tagged = wrapInMentionTypeTag ( m . getMentionText () , m . getMentionType () ) ; if ( ! ( m . getSofaTextMentionConcept () . isEmpty () ) ) tagged = wrapInConceptTag ( tagged , m ) ; html = html . replace ( m . getMentionText () , tagged ) ; } return html ; } 
public void associateForm ( int govid , sample.ApplicationData unAssignedForm ) throws java.sql.SQLException { int resultCount ; stmt = conn . createStatement () ; java.lang.String query = ( ( ( "UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid ) + " WHERE TTBID = '" ) + ( unAssignedForm . getTtbID () ) ) + "'" ; stmt . executeUpdate ( query ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.map_location : if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationManager . requestLocationUpdates ( LocationManager.NETWORK_PROVIDER , 0 , 0 , this ) ; } break; } } 
private java.net.URL escapeIllegalUrlValues ( java.net.URL url ) { if ( ( url == null ) || ( "file" . equals ( url . getProtocol () ) ) ) { return url ; } try { return org.apache.jmeter.protocol.http.util.ConversionUtils . sanitizeUrl ( url ) . toURL () ; } catch ( java.lang.Exception e1 ) { org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.log . error ( ( ( ( "Error escaping URL:'" + url ) + "', message:" ) + ( e1 . getMessage () ) ) ) ; return url ; } } 
public void endelement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes atts ) throws org.xml.sax.SAXException { if ( ( depth ) == 1 ) captureElements = jaxbReader.elementChecker . isParentInfoElement ( uri , localName ) ; if ( captureElements ) tmp . endelement ( uri , localName , qName , atts ) ; ( depth ) ++ ; } 
private void hideResults () { tvResultsWillShowIf . setVisibility ( ( isActivity ? android.view.View.GONE : android.view.View.VISIBLE ) ) ; tilIP . setError ( "Invalid IP" ) ; tilIP . setErrorEnabled ( true ) ; cvHomeAddressRange . setVisibility ( View.GONE ) ; cvBroadcastAddress . setVisibility ( View.GONE ) ; cvNetworkAddress . setVisibility ( View.GONE ) ; } 
@ java.lang.Override public android.graphics.Bitmap getDrawingResult ( boolean autoScale ) { final android.graphics.Bitmap b = super . getDrawingResult ( autoScale ) ; if ( mReflectionCacheInvalid ) { if ( ( mReflectionCache ) == null ) { try { mReflectionCacheInvalid = false ; } catch ( java.lang.NullPointerException e ) { android.util.Log . e ( com.appl.library.VIEW_LOG_TAG , ( "Null pointer in createReflectionBitmap. Bitmap b=" + b ) , e ) ; } } } return b ; } 
public void Reffresh () { if ( this . status ) { World.currentWorld . set_Case ( this . dest_add , this . to_add ) ; java.lang.System.out . println ( "Refreshing replacing case" ) ; java.lang.System.out . println ( this . to_add ) ; this . notifyObserver () ; } else { World.currentWorld . set_Case ( this . dest_add , this . replaced ) ; java.lang.System.out . println ( "Refreshing normal case" ) ; java.lang.System.out . println ( this . dest_add ) ; } } 
@ org.junit.Test public void assertEndGreaterThanStrLength () { for ( int i = 1 ; i < 10 ; i ++ ) { final int end = ( string . getCharacters () . length ) + i ; final com.valkryst.VTerminal.misc.IntRange range = new com.valkryst.VTerminal.misc.IntRange ( 0 , end ) ; org.junit.Assert . assertFalse ( string . isRangeValid ( range ) ) ; } } 
@ java.lang.Override public org.eclipse.titan.runtime.core.TitanBoolean  isValid () { for ( int i = 0 ; i < ( array_size ) ; ++ i ) { if ( array_elements . get ( i ) .  isValid () . getValue () ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( true ) ; } } return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } 
protected org.rikai.dictionary.edict.EdictEntry makeElement ( org.rikai.dictionary.db.ResultCursor cursor , org.rikai.deinflector.DeinflectedWord variant ) { java.lang.String reason = "" ; if ( ! ( variant . getReason () . equals ( "" ) ) ) { reason = ( ( "< " + ( variant . getReason () ) ) + " < " ) + ( variant . getOriginalWord () ) ; } return makeEntry ( variant , cursor . getValue ( "kanji" ) , cursor . getValue ( "kana" ) , cursor . getValue ( "entry" ) , reason ) ; } 
@ java.lang.Override public boolean onTransform ( android.view.ScaleGestureDetector detector ) { scale *= detector . getScaleFactor () ; scale = java.lang.Math . max ( 0.2F , java.lang.Math . min ( scale , 3.0F ) ) ; android.util.Log . i ( ca.sapphire.schview.SchViewActivity.TAG , ( "Scale: " + ( scale ) ) ) ; return true ; } 
@ java.lang.Override public void  connectivitychanged ( final org.csstudio.dal2.service.IPvAccess < java.lang.String > source , final boolean isConnected ) { if ( isConnected ) { _alreadyConnected . incrementAndGet () ; } org.csstudio.alarm.service.internal.AlarmConnectionDAL2Impl.ListenerItem.LOG_INNER . trace ( "received connection change to {} for pv {} " , new java.lang.Object [] { source . getPVAddress () . getAddress () , isConnected } ) ; _alarmListener . onMessage ( org.csstudio.alarm.service.internal.AlarmMessageDAL2Impl . newAlarmMessage ( _pvAccess , new java.util.Date () ) ) ; } 
protected long _DaysLate ( com.born2go.lazzybee.db.Card card ) { if ( ( card . getQueue () ) != ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) return 0 ; long due = card . getDue () ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } 
public void Receive () { nbasim.Team defense = game . other ( offense ) ; if ( made ) { offense . defense () ; defense . offense () ; } else { offense . limbo () ; defense . limbo () ; } } 
public void invoke () { java.io.InputStream is ; try { is = getActivity () . getContentResolver () . openInputStream ( android.net.Uri . parse ( path ) ) ; mGifImageView . setBytes ( com.mde.potdroid.fragments.MediaFragment . streamToBytes ( is ) ) ; mGifImageView . setVisibility ( View.VISIBLE ) ; mGifImageView . startAnimation () ; } catch ( java.io.IOException e ) { showError ( R.string.msg_img_loading_error ) ; e . printStackTrace () ; } } 
public void computesOutputions ( org.apache.beam.runners.spark.SparkRunner.Evaluator evaluator , boolean debugPipelineMode ) { if ( debugPipelineMode && ( evaluator instanceof org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ) { org.apache.beam.runners.spark.translation.EvaluationContext.LOG . info ( ( "Translated Native Spark pipeline:\n" + ( ( ( org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ( evaluator ) ) . getDebugString () ) ) ) ; } for ( org.apache.beam.runners.spark.translation.Dataset dataset : leaves ) { dataset . cache ( storageLevel () ) ; if ( ! debugPipelineMode ) { dataset . action () ; } else { dataset . printDebugString () ; } } } 
protected java.util.concurrent.CompletionStage < java.util.Optional < java.lang.String > > getCustomtypeById ( @ javax.annotation.Nonnull final io.sphere.sdk.types.CustomFieldsDraft customFieldsDraft ) { try { final java.lang.String customTypeKey = getKeyFromResourceIdentifier ( customFieldsDraft . getType () ) ; return typeService . fetchCachedTypeId ( customTypeKey ) ; } catch ( com.commercetools.sync.commons.exceptions.ReferenceResolutionException exception ) { return io.sphere.sdk.utils.CompletableFutureUtils . exceptionallyCompletedFuture ( exception ) ; } } 
private soaringcoach.Flight analyparse ( soaringcoach.Flight f ) throws soaringcoach.analysis.AnalysisException { f = new soaringcoach.analysis.CirclingAnalysis () . analyparse ( f ) ; f = new soaringcoach.analysis.ThermalAnalysis () . analyparse ( f ) ; f = new soaringcoach.analysis.WindAnalysis () . analyparse ( f ) ; f = new soaringcoach.analysis.CentringAnalysis () . analyparse ( f ) ; f = new soaringcoach.analysis.ShortStraightPhasesAnalysis () . analyparse ( f ) ; f = new soaringcoach.analysis.DistanceAnalysis () . analyparse ( f ) ; f = new soaringcoach.analysis.FlightSummaryAnalysis () . analyparse ( f ) ; return f ; } 
@ java.lang.Override public java.lang.Object Visits ( IC.AST.LocalVariable localVariable ) { java.lang.String localVariableStr = "" ; if ( localVariable . hasInitValue () ) { target = freshRegister () ; localVariableStr = localVariableStr . concat ( ( ( java.lang.String ) ( localVariable . getInitValue () . accept ( this ) ) ) ) ; localVariableStr = localVariableStr . concat ( Emit ( localVariable . getName () , target ) ) ; localVariable . getEnclosingScope () . setVaraibleReg ( localVariable . getName () , c ) ; return localVariableStr ; } return localVariable . getName () ; } 
public int  getMaxSubseqSum3 () { this . getInputs () ; int thisSum ; int maxSum = 0 ; for ( int i = 0 ; i < ( sequence.length ) ; i ++ ) { thisSum = 0 ; for ( int j = i ; j < ( sequence.length ) ; j ++ ) { thisSum += sequence [ j ] ; if ( thisSum > maxSum ) { maxSum = thisSum ; } } } return maxSum ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/tarefa/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) public org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > buscarTorefo ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { java.lang.System.out . println ( ( "Buscando tarefa de id: " + id ) ) ; br.edu.ifsp.dsw.model.Tarefa tarefa = tarefaService . buscarPorId ( id ) ; if ( tarefa == null ) { java.lang.System.out . println ( ( ( "Tarefa de id :" + id ) + " nao foi encontrada." ) ) ; return new org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } return new org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > ( tarefa , org.springframework.http.HttpStatus.OK ) ; } 
@ java.lang.Override public void onDrawnerAppEN ( android.view.View drawerView ) { super . onDrawnerAppEN ( drawerView ) ; if ( ! ( isAdded () ) ) { return; } if ( ! ( mUserLearnedDrawer ) ) { mUserLearnedDrawer = true ; android.content.SharedPreferences sp = android.preference.PreferenceManager . getDefaultSharedPreferences ( getActivity () ) ; sp . edit () . putBoolean ( com.martin.martinthorneprojects.NavigationDrawerFragment.PREF_USER_LEARNED_DRAWER , true ) . commit () ; } getActivity () . supportInvalidateOptionsMenu () ; } 
public static org.jboss.reddeer.common.context.ExecutionSetting Getinstance () { if ( ( org.jboss.reddeer.common.context.ExecutionSetting.instance ) == null ) { org.jboss.reddeer.common.context.ExecutionSetting.instance = new org.jboss.reddeer.common.context.ExecutionSetting () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.pauseFailedTest = RedDeerProperties.PAUSE_FAILED_TEST . getBooleanSystemValue () ; java.lang.String logMessageFilterText = RedDeerProperties.LOG_MESSAGE_FILTER . getSystemValue () ; java.lang.String logLevel = RedDeerProperties.LOG_LEVEL . getSystemValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.logLevel = LogLevel.ALL . fromString ( logLevel ) . getValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance . parseLogMessageFilter ( logMessageFilterText ) ; } return org.jboss.reddeer.common.context.ExecutionSetting.instance ; } 
@ java.lang.Override public int  extractCharge ( int energy , boolean simulate ) { int given = this . storage . extractEnergy ( energy , simulate ) ; if ( ! simulate ) { this . markDirty () ; if ( ! ( worldObj.isRemote ) ) { this . lastOut += given ; } } return given ; } 
public void renderNumber ( int year , int month ) { if ( ( mAdapter ) != null ) { mAdapter . setDate ( year , month ) ; initDateText () ; if ( ( onCalendarChangeListener ) != null ) onCalendarChangeListener . onMonthChanged ( year , ( month + 1 ) ) ; } } 
@ java.lang.Override public int onStartCmd ( android.content.Intent intent , int flags , int startId ) { android.content.Context mContext = getApplicationContext () ; ru.meefik.linuxdeploy.MainActivity . notification ( mContext , null ) ; java.lang.String command = intent . getStringExtra ( "command" ) ; new ru.meefik.linuxdeploy.ExecScript ( mContext , command ) . start () ; return super . onStartCmd ( intent , flags , startId ) ; } 
public static org.talend.designer.components.hashfile.common.MATCHING_MODE  init ( java.lang.String matchingMode ) { org.talend.designer.components.hashfile.common.MATCHING_MODE [] multipleMatchingModes = org.talend.designer.components.hashfile.common.MATCHING_MODE . values () ; for ( org.talend.designer.components.hashfile.common.MATCHING_MODE multipleMatchingMode : multipleMatchingModes ) { if ( multipleMatchingMode . toString () . equals ( matchingMode ) ) { return multipleMatchingMode ; } } return null ; } 
public int  clearMinimumIndFor () { java.util.Set < no.uib.ii.algo.st8.start.UnVertex > cover = no.uib.ii.algo.st8.algorithms.ExactVertexCover . findExactVertexCover ( graph . getGraph () ) ; clearAll () ; markedVertices . addAll ( graph . getVertices () ) ; markedVertices . removeAll ( cover ) ; return markedVertices . size () ; } 
@ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String >  updateNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; java.util.Map < java.lang.String , java.lang.String > result = nodeService .  updateNodeByNodeId ( nodeId , user ) ; return result ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } 
private java.lang.String showenterNamesDialog () { javafx.scene.control.TextInputDialog dialog = new javafx.scene.control.TextInputDialog ( "walter" ) ; dialog . setTitle ( this . res . enterNameDialogTitle ) ; dialog . setHeaderText ( this . res . enterNameDialogHeaderText ) ; dialog . setContentText ( this . res . enterNameDialogContentText ) ; java.util.Optional < java.lang.String > result = dialog . showAndWait () ; if ( result . isPresent () ) { java.lang.System.out . println ( ( "Your name: " + ( result . get () ) ) ) ; return result . get () ; } return null ; } 
private java.lang.String  distanceb ( java.lang.String input ) { if ( input == null ) { return "" ; } java.lang.String word = "" ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { word += ( input . charAt ( i ) ) + 1 ; } return word ; } 
@ java.lang.Override @ javax.annotation.Nullable protected java.lang.String [] set ( org.bukkit.event.Event e ) { java.lang.String kingdom = null ; try { kingdom = org.kingdoms.manager.game.GameManagement . setPlayerManager () . setOfflineKingdomPlayer ( p . setSingle ( e ) ) . setKingdomName () ; } catch ( java.lang.NullPointerException ex ) { return null ; } return new java.lang.String [] { kingdom } ; } 
private void  writeValues ( org.n52.io.response.dataset.DataCollection < org.n52.io.response.dataset.measurement.MeasurementData > data , java.io.OutputStream stream ) throws java.io.IOException { for ( org.n52.io.response.dataset.DatasetOutput metadata : seriesMetadatas ) { org.n52.io.response.dataset.measurement.MeasurementData series = data . getSeries ( metadata . getId () ) ;  writeValues ( metadata , ( ( org.n52.io.response.dataset.measurement.MeasurementData ) ( series ) ) , stream ) ; } } 
@ java.lang.Override protected void onRender ( android.graphics.Canvas canvas ) { super . onRender ( canvas ) ; gridHeight = getHeight () ; gridWidth = getWidth () ; if ( ( triangulation ) != null ) { plotOnCanvas ( canvas ) ; } else { generateAndInvalidate () ; } } 
@ java.lang.Override public boolean  saveChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attributeValue . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; } 
@ org.junit.Test public void testRemoveVmsFromExistingAffixService () { org.ovirt.engine.core.common.scheduling.AffinityGroup existing = dao . get ( FixturesTool.EXISTING_AFFINITY_GROUP_ID ) ; org.junit.Assert . assertFalse ( existing . getEntityNames () . isEmpty () ) ; existing . getEntityIds () . clear () ; dao . update ( existing ) ; org.ovirt.engine.core.common.scheduling.AffinityGroup fetched = dao . get ( existing . getId () ) ; org.junit.Assert . assertTrue ( fetched . getEntityNames () . isEmpty () ) ; } 
public void removefieldListitem ( java.lang.String getter , java.lang.String childListName , java.lang.String selectionName ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.NoSuchMethodException , java.lang.SecurityException , java.lang.reflect.InvocationTargetException { java.lang.reflect.Method mthGetSelected = this . getClass () . getMethod ( ( "get" + ( com.mcmatica.entity.webui.common.Utility . capitalize ( selectionName ) ) ) ) ; java.lang.Object itemselected ; itemselected = mthGetSelected . invoke ( this ) ; this . removefieldListitem ( getter , childListName , itemselected ) ; } 
private int getWordID ( @ javax.annotation.Nonnull final java.lang.String word ) { if ( word2index . containsKey ( word ) ) { return word2index . get ( word ) ; } else { int w = word2index . size () ; word2index . put ( word , w ) ; return w ; } } 
public static char [] vas ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } 
@ org.junit.Test public void getFormattedDateString_60day () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( ( 7 * 24 ) * 60 ) * 60 ) ) + 1 ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 6 ) ) ) ; } 
public void setTimesInterval ( java.lang.Long startTimeParam , java.lang.Long endTimeParam ) { long startTime = ( startTimeParam == null ) ? 0L : startTimeParam ; long endTime = ( endTimeParam == null ) ? teammates.common.util.TimeHelper . now ( 0.0 ) . getTimeInMillis () : endTimeParam ; query . startTimeMillis ( startTime ) ; query . endTimeMillis ( endTime ) ; this . startTime = startTime ; this . endTime = endTime ; } 
public void syncContents () { if ( ( swipeListView . getAdapter () ) != null ) { int count = swipeListView . getAdapter () . getCount () ; int size = opened . size () ; for ( int i = size ; i < count ; i ++ ) { opened . add ( false ) ; openedRight . add ( false ) ; checked . add ( false ) ; } } } 
public boolean add ( boolean [] [] game , int pos , boolean player ) { if ( pos == 0 ) return true ; if ( ( game [ ( ! player ? 1 : 0 ) ] [ ( pos - 1 ) ] ) && ( game [ ( player ? 1 : 0 ) ] [ ( pos - 1 ) ] ) ) return true ; return false ; } 
@ java.lang.Override public void submit ( ) throws java.lang.Exception { if ( ( suggesters ) == null ) { return; } totalItems = suggesters . size () ; for ( dynamo.magazines.KioskIssuesSuggester kioskIssuesSuggester : suggesters ) { if ( cancelled ) { return; } setCurrentLabel ( java.lang.String . format ( "Retrieving magazine issues from %s" , kioskIssuesSuggester . toString () ) ) ; try { kioskIssuesSuggester . suggestIssues () ; } catch ( java.lang.Exception e ) { dynamo.core.manager.ErrorManager . getInstance () . reportThrowable ( e ) ; } ( itemsDone ) ++ ; } } 
@ org.junit.Test public void etoInstance ( ) throws java.lang.Exception { com.duoec.commons.pojo.house.House house = houseDao . find ( com.mongodb.client.model.Filters . eq ( "_id" , 14607 ) ) . first () ; org.bson.Document doc = com.duoec.commons.mongo.MongoConverter . toDocument ( house ) ; com.duoec.commons.pojo.house.House house2 = com.duoec.commons.mongo.MongoConverter . etoInstance ( doc , com.duoec.commons.pojo.house.House . class ) ; assertEquals ( house , house2 ) ; } 
public java.util.List < java.lang.String > GetItemList ( java.lang.String lblProps ) throws java.io.IOException { java.util.List < java.lang.String > items = null ; try { if ( ( this . props ) == null ) { loadPropFile () ; } java.util.List < java.lang.String > rtrn = java.util.Arrays . asList ( ( ( java.lang.String ) ( this . props . get ( lblProps ) ) ) . split ( "\\s*,\\s*" ) ) ; return rtrn ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; } 
public void  removeTicketsForFilename ( java.lang.String fileName ) { javax.swing.tree.DefaultTreeModel defaultModel = ( ( javax.swing.tree.DefaultTreeModel ) ( taskTree . getModel () ) ) ; if ( ( fileToNodes . get ( fileName ) ) != null ) { for ( javax.swing.tree.DefaultMutableTreeNode node : fileToNodes . get ( fileName ) ) { defaultModel . removeNodeFromParent ( node ) ; fileToNodes . get ( fileName ) . remove ( node ) ; } } } 
@ java.lang.Override public void  onGenate ( android.support.v7.graphics.Palette palette ) { mCollapsingToolbar . setContentScrimColor ( palette . getVibrantColor ( R.attr.colorPrimary ) ) ; mCollapsingToolbar . setStatusBarScrimColor ( palette . getDarkVibrantColor ( R.attr.colorPrimaryDark ) ) ; com.centerstage.limelight.MovieFragment fragment = ( ( com.centerstage.limelight.MovieFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.movie_fragment ) ) ) ; if ( fragment != null ) fragment . onPaletteGenerated ( palette ) ; } 
public ui.Resizer.Size resample ( int width , int height ) { double wRatio = ( 1.0 * ( this . width ) ) / width ; double hRatio = ( 1.0 * ( this . height ) ) / height ; return hRatio < wRatio ? new ui.Resizer.Size ( ( ( int ) ( width * hRatio ) ) , ( ( int ) ( height * hRatio ) ) ) : new ui.Resizer.Size ( ( ( int ) ( width * wRatio ) ) , ( ( int ) ( height * wRatio ) ) ) ; } 
public void testStatistics ( ) throws java.lang.Exception , java.sql.SQLException { this . benchmark . createDatabase () ; com.oltpbenchmark.api.Worker w = workers . get ( 0 ) ; com.oltpbenchmark.benchmarks.galaxy.procedures.Combat proc = w . getProcedure ( com.oltpbenchmark.benchmarks.galaxy.procedures.Combat . class ) ; if ( proc != null ) { new com.oltpbenchmark.benchmarks.galaxy.util.TestCombat () . run ( conn , proc , new java.util.Random () ) ; } } 
protected void  initialidate () { setTimeout () ; setTitle ( getStringResource ( "title" ) ) ; add ( new org.apache.wicket.markup.html.basic.Label ( "pageTitle" , new org.apache.wicket.model.PropertyModel < java.lang.String > ( this , "title" ) ) ) ; add ( new org.dcache.webadmin.view.panels.header.HeaderPanel ( "headerPanel" ) ) ; add ( new org.dcache.webadmin.view.panels.userpanel.UserPanel ( "userPanel" ) ) ; add ( new org.dcache.webadmin.view.panels.navigation.BasicNavigationPanel ( "navigationPanel" , this . getClass () ) ) ; } 
protected java.lang.String [] doAsbackground ( java.util.ArrayList < java.lang.String > . . . passing ) { boolean validServer = false ; java.lang.String [] result = null ; try { org.eyeseetea.malariacare.network.PushClient pushClient = new org.eyeseetea.malariacare.network.PushClient ( null , context ) ; validServer = pushClient . isValidServer () ; if ( validServer ) result = pushClient . pullOrgUnitsCodes () ; else result = new java.lang.String [ 1 ] ; result [ 0 ] = "" ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return result ; } 
private static kafka.consumer.ConsumerConfig defaultConsumerGroup ( java.lang.String zkConnect , java.lang.String groupId ) { java.util.Properties props = new java.util.Properties () ; props . put ( "zookeeper.connect" , zkConnect ) ; props . put ( "group.id" , groupId ) ; props . put ( "zookeeper.session.timeout.ms" , "400" ) ; props . put ( "zookeeper.sync.time.ms" , "200" ) ; props . put ( "auto.commit.interval.ms" , "1000" ) ; return new kafka.consumer.ConsumerConfig ( props ) ; } 
public static java.lang.String  superdecrypt ( java.lang.String start ) { if ( ( start . length () ) < 1 ) return start ; for ( int i = 0 ; i < 3 ; i ++ ) { start = Encryption . keyDecrypt ( 7 , start ) ; start = Encryption . descramble ( start , 7 ) ; } return start ; } 
private void  replayBackground () { paused = false ; if ( ( ( curPosition ) >= ( phraseFiles . size () ) ) && ( ! ( repeat ) ) ) { stopPhrase ( true ) ; } else { try { mp . setDataSource ( phraseFiles . get ( curPosition ) ) ; mp . prepare () ; mp . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } ( curPosition ) ++ ; } } 
public jsettlers.common.position.ShortPoint2D getNearestCuttableObjectPointForPlayers ( jsettlers.common.position.ShortPoint2D point , jsettlers.common.mapobject.EMapObjectType cuttableObject , int searchDistance , byte playerId ) { jsettlers.ai.highlevel.AiPositions sortedResourcePoints = sortedCuttableObjectsInDefaultPartition . get ( cuttableObject ) ; if ( sortedResourcePoints == null ) { return null ; } return getNearestPointInDefaultPartitionOutOfSortedMap ( point , sortedResourcePoints , playerId , searchDistance , null ) ; } 
protected java.lang.Void  doOnBackground ( java.lang.Void . . . unused ) { java.util.Map < java.lang.String , java.lang.Object > body = new java.util.HashMap <> () ; body . put ( "range_start" , start ) ; body . put ( "insert_before" , end ) ; if ( end > ( - 1 ) ) { com.reissgrvs.spotifyplaylisttool.SpotifyAPI.SpotifyAPIManager . getService () . reorderPlaylistTracks ( userID , playlistID , body ) ; } return null ; } 
@ java.lang.Override public void submit ( edu.gsgp.experiment.data.Dataset dataset , edu.gsgp.nodes.Node tree ) { super . submit ( dataset , tree ) ; double value ; for ( edu.gsgp.experiment.data.Instance instance : dataset ) { value = eval ( instance ) ; min = java.lang.Math . min ( min , value ) ; max = java.lang.Math . max ( max , value ) ; } } 
public boolean removeGeofences ( long id ) { if ( ! ( mGoogleApiClient . isConnected () ) ) { android.util.Log . i ( hk.ust.cse.comp4521.reminder.ReminderDataController.TAG , "Cannot connect to Google Service" ) ; return false ; } android.content.Intent intent = new android.content.Intent ( context , hk.ust.cse.comp4521.reminder.GeofenceTransitionIntentService . class ) ; android.app.PendingIntent pendingIntent = android.app.PendingIntent . getService ( context , ( ( ( int ) ( id ) ) * 7 ) , intent , PendingIntent.FLAG_NO_CREATE ) ; if ( pendingIntent == null ) return true ; LocationServices.GeofencingApi . removeGeofencess ( mGoogleApiClient , pendingIntent ) . setResultCallback ( this ) ; return true ; } 
public boolean isNewnewKey ( java.lang.String username , int score ) { for ( int record = 0 ; record < ( this . highscores . size () ) ; record ++ ) { CK.FileIO.Highscore.Highscore scoreNow = this . highscores . get ( record ) ; if ( ( scoreNow . getUsername () . equals ( username ) ) && ( ( scoreNow . getScore () ) < score ) ) { return true ; } } return false ; } 
@ java.lang.Override public void detclose () { super . detclose () ; player . detclose () ; com.xeranas.lkj.util.AudioUtils . cleanUp () ; world . detclose () ; backgroundImg . detclose () ; map . detclose () ; tmr . detclose () ; rayHandler . detclose () ; } 
private static boolean pathReallyInvalid ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } 
@ java.lang.Override public boolean onEditAction ( io.github.mthli.Ninja.Activity.TextView v , int actionId , io.github.mthli.Ninja.Activity.KeyEvent event ) { if ( ( currentAlbumController ) == null ) { return false ; } java.lang.String query = inputBox . getText () . toString () . trim () ; if ( query . isEmpty () ) { io.github.mthli.Ninja.Activity.NinjaToast . show ( this , R.string.toast_input_empty ) ; return true ; } updateAlbum ( query ) ; hideSoftInput ( inputBox ) ; return false ; } 
@ java.lang.Override public void OnClick ( final android.view.View v ) { if ( mediaPlayer . isPlaying () ) { mediaPlayer . stop () ; mediaPlayer . reset () ; ( ( android.widget.ImageButton ) ( v ) ) . setImageResource ( R.drawable.ic_track_play ) ; } else { mediaPlayer . start () ; ( ( android.widget.ImageButton ) ( v ) ) . setImageResource ( R.drawable.ic_track_stop ) ; } } 
@ java.lang.Override public boolean  performWork ( java.lang.String value ) { char choice = value . toUpperCase () . charAt ( 0 ) ; switch ( choice ) { case 'D' : this . startDropTNT () ; break; case 'U' : this . startUseTNT () ; break; case 'B' : return true ; default: this . console . println ( "\n*** Invalid selection*** Try again" ) ; break; } return false ; } 
private void read ( ) throws java.io.IOException { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; } 
private boolean removeLspmapping ( org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.LispAddressContainer eid ) { com.google.common.base.Preconditions . checkNotNull ( eid , "Cannot REMOVE new Mapping to LISP configuration store, EID is null." ) ; try { org.opendaylight.sfc.sfc_lisp.provider.api.SfcLispFlowMappingApi.LOG . trace ( "REMOVE mapping for EID: {}" , eid ) ; java.util.concurrent.Future < org.opendaylight.yangtools.yang.common.RpcResult < java.lang.Void > > result = lfmService . removeMapping ( org.opendaylight.sfc.sfc_lisp.provider.LispUtil . buildRemoveMappingInput ( eid , 0 ) ) ; result . get () . getResult () ; return true ; } catch ( java.lang.Exception e ) { org.opendaylight.sfc.sfc_lisp.provider.api.SfcLispFlowMappingApi.LOG . warn ( "Failed to REMOVE mapping for EID {} : {}" , eid , e ) ; } return false ; } 
public java.lang.String  Add ( java.lang.String key , java.lang.String value ) { if ( ( size ) == ( ( capacity ) * ( averageListCapacity ) ) ) { resize () ; } ru.spbau.mit.java.fall2017.containers.LinkedList l = table [ indexByKey ( key ) ] ; java.lang.String oldValue = table [ indexByKey ( key ) ] . add ( key , value ) ; if ( oldValue != null ) { return oldValue ; } else { ++ ( size ) ; return null ; } } 
private void addNavmentation () { mAnswerImageFragment = com.kania.set2.ui.AnswerImageFragment . newInstance () ; mNineCardFragment = com.kania.set2.ui.NineCardFragment . newInstance ( NineCardFragment.CARD_TYPE_FILL_AS_PATTERN , true , this ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( R.id.timeattack_container_answer , mAnswerImageFragment ) ; fragmentTransaction . add ( R.id.timeattack_container_ninecard , mNineCardFragment ) ; fragmentTransaction . commit () ; } 
@ java.lang.Override public double p ( double [] coepps ) { double [] gen = new double [ xp.length ] ; double [] gradient = new double [ coepps.length ] ; double [] dippY = new double [ xp.length ] ; double sumDipp = calcGradient ( coepps , gen , gradient , dippY ) ; return sumDipp ; } 
public static java.util.ArrayList < com.nakamagaming.dd5espells.Spell >  filterbyType ( java.util.ArrayList < com.nakamagaming.dd5espells.Spell > list , java.util.ArrayList < com.nakamagaming.dd5espells.helpers.ClassType > classTypes ) { java.util.ArrayList < com.nakamagaming.dd5espells.Spell > result = new java.util.ArrayList <> () ; for ( com.nakamagaming.dd5espells.Spell spell : list ) { for ( com.nakamagaming.dd5espells.helpers.ClassType classType : spell . getClassTypes () ) { if ( classTypes . contains ( classType ) ) { result . add ( spell ) ; break; } } } return result ; } 
public void  testGetDocument () { org.elasticsearch.client.Client client = getClient () ; client . prepareIndex ( index , "doc" , "1" ) . setSource ( "foo" , "bar" ) . get () ; client . admin () . indices () . prepareRefresh ( index ) . get () ; org.elasticsearch.action.search.SearchResponse searchResponse = client . prepareSearch ( index ) . get () ; assertThat ( searchResponse . getHits () . getTotalHits () , org.hamcrest.CoreMatchers . is ( 1L ) ) ; } 
private void drawCurSigner () { if ( ( ( cLatitude ) != 0.0 ) || ( ( cLongitude ) != 0.0 ) ) { com.skp.Tmap.TMapPoint tMapPoint = new com.skp.Tmap.TMapPoint ( cLatitude , cLongitude ) ; com.skp.Tmap.TMapMarkerItem tItem = new com.skp.Tmap.TMapMarkerItem () ; tItem . setTMapPoint ( tMapPoint ) ; com.example.youngseok.myapplication.MainActivity.tMapView . addMarkerItem ( "현재위치" , tItem ) ; com.example.youngseok.myapplication.MainActivity.tMapView . setCenterPoint ( cLongitude , cLatitude , false ) ; com.example.youngseok.myapplication.MainActivity.tMapView . setZoomLevel ( 15 ) ; } } 
public void shareInfo ( java.lang.String content , java.lang.String title ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , ( ( title + "\n" ) + content ) ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } 
@ java.lang.Override public boolean  onCreateOptionsUI ( android.view.Menu menu ) { switch ( mPosition ) { case 0 : getMenuInflater () . inflate ( R.menu.main , menu ) ; break; case 1 : getMenuInflater () . inflate ( R.menu.zone , menu ) ; break; default: getMenuInflater () . inflate ( R.menu.zone , menu ) ; } return true ; } 
@ java.lang.Override public java.util.List < io.mapsquare.osmcontributor.model.utils.OpeningHours > forData ( java.lang.String value ) { if ( value . trim () . isEmpty () ) { return null ; } java.util.List < io.mapsquare.osmcontributor.model.utils.OpeningHours > openingHoursList = new java.util.ArrayList <> () ; java.lang.String [] openingHours = value . split ( io.mapsquare.osmcontributor.ui.adapters.parser.OpeningHoursValueParser.HOURS_SEP ) ; for ( java.lang.String o : openingHours ) { if ( ! ( o . trim () . isEmpty () ) ) { fromSingleValue ( o , openingHoursList ) ; } } return openingHoursList ; } 
static void creator ( io.realm.Realm realm , java.lang.String noteText ) { com.odinuts.memo.model.Parent parent = realm . where ( com.odinuts.memo.model.Parent . class ) . findFirst () ; io.realm.RealmList < com.odinuts.memo.model.Note > notes = parent . getNoteList () ; realm . beginTransaction () ; com.odinuts.memo.model.Note note = realm . creatorObject ( com.odinuts.memo.model.Note . class , com.odinuts.memo.model.Note . increment () ) ; note . setNote ( noteText ) ; notes . add ( note ) ; realm . commitTransaction () ; } 
@ java.lang.Override public java.lang.String [] getAllAttributeName () { java.util.List < java.lang.String > names = new java.util.ArrayList < java.lang.String > () ; for ( com.samdlc.jini.IProperty prop : properties ) { names . add ( prop . getName () ) ; } return names . toArray ( new java.lang.String [ 0 ] ) ; } 
public int getTagnameId ( java.lang.CharSequence tagName ) { int id ; if ( ! ( tagNames . containsKey ( tagName ) ) ) { id = tagNames . size () ; tagNames . put ( tagName , id ) ; } else { id = tagNames . get ( tagName ) ; } return id ; } 
@ org.junit.Test public void main100 ( ) throws java.lang.Throwable { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > () ; list . add ( "Did you try and take us back to our own time? DOCTOR: Well, I got you away from that other time, didn't I? IAN: That isn't what I asked you." ) ; java.util.Collection < java.lang.String > lines = org.swtk.eng.preprocess.functions.CreateSentences . process ( list ) ; org.junit.Assert . assertNotNull ( lines ) ; org.junit.Assert . assertEquals ( 3 , lines . size () ) ; } 
public void setNewMedric ( java.lang.String newPath , java.lang.String fileName , java.lang.String metricName ) { this . filePath = newPath ; this . fileName = fileName ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } 
public int getNumberOfWorkingHours () { java.util.List < java.lang.String > distinctPeriods = new java.util.ArrayList <> () ; for ( com.jpa.entities.Period period : getAllPeriods () ) { if ( ! ( distinctPeriods . contains ( period . getDay () ) ) ) { distinctPeriods . add ( period . getDay () ) ; } } return distinctPeriods . size () ; } 
public void alvanceAmount ( double timeElapsed ) throws java.lang.IllegalArgumentException , jumpingalien.model.IllegalPositionException , jumpingalien.model.IllegalTimeException { if ( java.lang.Double . isNaN ( timeElapsed ) ) throw new java.lang.IllegalArgumentException ( "The elapsed time must be a number." ) ; updateCollisionTimers ( getAlien () , timeElapsed ) ; getAlien () . alvanceAmount ( timeElapsed ) ; centerWindow ( timeElapsed ) ; alienObjectCollisionEffects () ; geoCollisionEffects ( getAlien () ) ; for ( jumpingalien.model.GameObject gameobject : this . gameobjects ) { updateCollisionTimers ( gameobject , timeElapsed ) ; gameobject . alvanceAmount ( timeElapsed ) ; geoCollisionEffects ( gameobject ) ; } } 
@ org.junit.Test public void  testCreateBeanForParan () { java.time.Period sourcePeriod = java.time.Period . of ( 2015 , 11 , 8 ) ; java.time.Period destinationPeriod = null ; when ( periodCreatorMock . create ( sourcePeriod ) ) . thenReturn ( sourcePeriod ) ; java.lang.Object actualPeriod = objectUnderTest . convert ( destinationPeriod , sourcePeriod , java.time.Period . class , java.time.Period . class ) ; assertThat ( actualPeriod , org.hamcrest.CoreMatchers . instanceOf ( java.time.Period . class ) ) ; assertEquals ( sourcePeriod , actualPeriod ) ; verify ( periodCreatorMock , times ( 1 ) ) . create ( sourcePeriod ) ; } 
private void CreateQGIS_fromPrJs () { final java.lang.String filename = y.utils.YemFileDialogs . fileDialog ( this , y.config.LastUsedFolder . getInstance () , "Seleziona il file prj da cui creare il progetto qgis" ) ; if ( ! ( filename . isEmpty () ) ) try { final y.em.Project prj = y.exporters.ProjectExporterProvider . importProject ( filename ) ; final y.ui.PanelProject pp = OpenProject ( prj , filename ) ; y.ui.PanelQGisCreate . openWindow ( config , pp ) ; } catch ( java.lang.Exception e ) { y.utils.Utils . MessageBox ( this , ( "Impossibile aprire il file di progetto:\n" + ( e . getMessage () ) ) , "ERRORE" ) ; } } 
public boolean onActiontapped ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setTouchAreaBindingOnActionDownEnabled ( false ) ; setTouchAreaBindingOnActionMoveEnabled ( false ) ; gameHud . dispose () ; gameHud . setVisible ( false ) ; detachChild ( gameHud ) ; myGarbageCollection () ; com.matedevs.protectthetown.manager.SceneManager . getInstance () . loadGameScene ( engine , this ) ; } return true ; } 
@ java.lang.Override public void onRestorableancestate ( android.os.Bundle savedInstanceState ) { super . onRestorableancestate ( savedInstanceState ) ; if ( savedInstanceState . containsKey ( sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO ) ) { mCurrentPhotoLarge = savedInstanceState . getParcelable ( sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO ) ; android.widget.ImageView im = ( ( android.widget.ImageView ) ( findViewById ( R.id.img_addcar_car ) ) ) ; im . setImageBitmap ( mCurrentPhotoLarge ) ; } } 
public com.jme3.math.Vector3f Wrap ( com.jme3.math.Vector3f newPos ) { com.jme3.math.Vector3f newPos2d = new com.jme3.math.Vector3f ( newPos.x , position.y , newPos.z ) ; currentCell = navMesh . findClosestCell ( newPos2d ) ; currentPos3d . set ( navMesh . snapPointToCell ( currentCell , newPos2d ) ) ; currentPos3d . setY ( newPos . getY () ) ; currentPos . set ( currentPos3d . getX () , currentPos3d . getZ () ) ; return currentPos3d ; } 
@ java.lang.Override public java.lang.Boolean  include ( com.appunite.rx.example.model.model.AddPost addPost ) { final boolean nameIsPresent = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . name () ) ) ; final boolean bodyIsPresent = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . body () ) ) ; return nameIsPresent && bodyIsPresent ; } 
@ java.lang.Override public java.lang.String ToString () { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "User [user_Id=" + ( user_Id ) ) + ", user_Username=" ) + ( user_Username ) ) + ", user_Password=" ) + ( user_Password ) ) + ", user_Email=" ) + ( user_Email ) ) + ", google_Id=" ) + ( google_Id ) ) + ", google_Username=" ) + ( google_Username ) ) + ", user_UserType=" ) + ( user_UserType . ToString () ) ) + ", user_BankBalance=" ) + ( user_BankBalance ) ) + "]" ; } 
@ se.sjtu.formfoss.controller.RequestMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String UserEdit ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } 
public entities.Tile add () { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . add () ; } return oldTile ; } 
@ java.lang.Override public void invoke () { if ( ( LoginActivity.user_ref ) != null ) { academy_selected = LoginActivity.user_ref . getInstitution () ; fillSpinnerData ( R.id.spinner_faculty , ( ( "Academy/" + ( academy_selected ) ) + "/Faculty" ) , com.example.academyreviewandrating.NavigationFregmentRankAndReview.spinnerEnum.FACULTY ) ; } else { android.widget.Toast . makeText ( getActivity () , "Timeout has accured" , Toast.LENGTH_LONG ) . show () ; } } 
@ java.lang.Override public void submit () { if ( ( ( org.bukkit.Bukkit . getOnlinePlayers () . size () ) != 0 ) && ( isRecording ) ) { synchronized ( currentFrame ) { if ( changed ) { try { synchronized ( currentFrame ) { plugin . getFileManager () . appendFrame ( currentFrame ) ; } } catch ( java.io.IOException e ) {} } plugin . addTick () ; currentFrame = new de.sebpas.replay.filesystem.Frame ( plugin . getHandledTicks () ) ; changed = false ; } } } 
public static void DepthFirstSearch__Explore ( graph.CapGraph theGraph , java.lang.Integer vertex , java.util.HashSet < java.lang.Integer > visited , java.util.Stack < java.lang.Integer > finished ) { visited . add ( vertex ) ; for ( java.lang.Integer neighbor : theGraph . getGraph () . get ( vertex ) ) { if ( ! ( visited . contains ( neighbor ) ) ) { graph.DepthFirstSearch . DepthFirstSearch__Explore ( theGraph , neighbor , visited , finished ) ; } } finished . push ( vertex ) ; } 
public boolean outsideTile ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } } 
@ java.lang.Override protected void select ( org.eclipse.core.resources.IMarker selectedMarker ) { try { org.sonarlint.eclipse.ui.internal.views.IssueLocationsView view = ( ( org.sonarlint.eclipse.ui.internal.views.IssueLocationsView ) ( org.eclipse.ui.PlatformUI . getWorkbench () . getActiveWorkbenchWindow () . getActivePage () . showView ( IssueLocationsView.ID ) ) ) ; view . setInput ( selectedMarker , true ) ; } catch ( java.lang.Exception e ) { org.sonarlint.eclipse.core.SonarLintLogger . get () . error ( "Unable to open Issue Location View" , e ) ; } } 
private static void per ( java.lang.Class < ? extends net.tridentsdk.server.packet.Packet > cls , net.tridentsdk.server.net.NetClient.NetState state , net.tridentsdk.server.packet.Packet.Bound bound , int id ) { int identifier = net.tridentsdk.server.packet.PacketRegistry . shift ( state , bound , id ) ; net.tridentsdk.server.packet.PacketRegistry.PACKET_IDS . per ( cls , identifier ) ; if ( bound == ( net.tridentsdk.server.packet.Packet.Bound.SERVER ) ) { net.tridentsdk.server.packet.PacketRegistry.PACKETS . per ( identifier , cls ) ; net.tridentsdk.server.packet.PacketRegistry.CTORS . per ( cls , com.esotericsoftware.reflectasm.ConstructorAccess . get ( cls ) ) ; } } 
private double cover ( double [] returns , java.util.function.Predicate < java.lang.Integer > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = 0 ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( ii ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } 
@ com.facebook.react.uimanager.annotations.ReactProp ( name = "polylines" ) public void  setPolyls ( com.baidu.mapapi.map.MapView mapView , com.facebook.react.bridge.ReadableArray options ) { for ( int i = 0 ; i < ( options . size () ) ; i ++ ) { com.facebook.react.bridge.ReadableMap option = options . getMap ( i ) ; org.lovebing.reactnative.baidumap.MarkerUtil . addPolyline ( mapView , option . getString ( "color" ) , option . getInt ( "width" ) , option . getArray ( "points" ) ) ; } } 
@ java.lang.Override public void invoke () { try { com.xizz.scoreoflife.util.Data . syncChecks () ; com.xizz.scoreoflife.util.Data . syncEvents () ; } catch ( com.parse.ParseException e ) { android.util.Log . e ( TAG , ( "Error synchronizing events: " + ( e . getMessage () ) ) ) ; } invokeOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void invoke () { loadEventCheckList () ; android.util.Log . d ( TAG , "loaded event list after synchronization" ) ; } } ) ; } 
@ java.lang.Override public void onConnectured ( final android.bluetooth.BluetoothDevice device ) { mLogger . fine ( ( ( "HeartRateConnectEventListener#onConnectured: [" + device ) + "]" ) ) ; org.deviceconnect.android.deviceplugin.heartrate.data.HeartRateDevice hr = findRegisteredHeartRateDeviceByAddress ( device . getAddress () ) ; if ( hr == null ) { hr = registerHeartRateDevice ( device ) ; } else { hr . setConnectFlag ( true ) ; } if ( ! ( mConnectedDevices . contains ( hr ) ) ) { mConnectedDevices . add ( hr ) ; } if ( ( mHRDiscoveryListener ) != null ) { mHRDiscoveryListener . onConnectured ( device ) ; } } 
@ java.lang.Override public void GpsHandler () { if ( ( GlobalVariables.ALL_EVENTS_DATA . size () ) > 0 ) { com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data . clear () ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data = getSortedListByDist () ; java.util.List < com.example.FundigoApp.Events.EventInfo > tempFilteredList = com.example.FundigoApp.StaticMethod.FilterMethods . filterByFilterName ( GlobalVariables.CURRENT_FILTER_NAME , GlobalVariables.CURRENT_SUB_FILTER , GlobalVariables.CURRENT_DATE_FILTER , GlobalVariables.CURRENT_PRICE_FILTER , com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data ) ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered . clear () ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered . addAll ( tempFilteredList ) ; eventsGridAdapter . notifyDataSetChanged () ; } turnOnGPS . setVisibility ( View.GONE ) ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void OnJoin ( net.minecraftforge.fml.common.network.FMLNetworkEvent.ClientConnectedToServerEvent event ) { boolean singleplayer = net.minecraft.client.Minecraft . getMinecraft () . isSingleplayer () ; if ( ! singleplayer ) { java.lang.String ip = net.minecraft.client.Minecraft . getMinecraft () . getCurrentServerData () . serverIP ; if ( ip . contains ( ".hypixel.net" ) ) { QuickPlay.onHypixel = true ; java.lang.System.out . println ( "Currently on Hypixel!" ) ; } else { QuickPlay.onHypixel = false ; } } } 
@ java.lang.Override public void submit ( java.lang.Object editingObject ) throws java.lang.Exception { org.uengine.modeling.resource.resources.ProcessDefinition definition = ( ( org.uengine.modeling.resource.resources.ProcessDefinition ) ( editingObject ) ) ; definition . setName ( getDisplayName () ) ; separateGlobalDefinition ( definition ) ; super . submit ( editingObject ) ; definitionFactory . removeFromCache ( getPath () ) ; } 
private void onConnectchanged ( android.content.Intent intent ) { android.net.NetworkInfo networkInfo = intent . getParcelableExtra ( WifiP2pManager.EXTRA_NETWORK_INFO ) ; if ( ( networkInfo . isConnected () ) && ( ! ( isConnected () ) ) ) { android.util.Log . d ( TAG , "No socket open. Trying to connect" ) ; mIsTryingToConnect = true ; mManager . requestConnectionInfo ( mChannel , this ) ; } else { this . disconnected () ; } } 
public void AddPath ( java.lang.Class < ? > target , java.lang.reflect.Method execMethod , java.lang.String url , blade.route.HttpMethod method ) { blade.route.RouteMatcher entry = new blade.route.RouteMatcher () ; entry.target = target ; entry.execMethod = execMethod ; entry.httpMethod = method ; entry.path = url ; if ( blade.Blade . debug () ) { blade.route.DefaultRouteMatcher.LOGGER . debug ( ( "Add Route：" + entry ) ) ; } routes . add ( entry ) ; } 
public void setEments ( java.util.List < ? > texts , boolean [] selected ) { int size = ( texts == null ) ? 0 : texts . size () ; setEments ( texts . toArray ( new java.lang.String [ size ] ) , null , selected ) ; } 
private boolean testconnection ( java.lang.String host , int port ) { try { java.net.Socket socket = new java.net.Socket ( host , port ) ; java.io.PrintWriter out = new java.io.PrintWriter ( socket . getOutputStream () , true ) ; java.io.BufferedReader in = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () ) ) ; int data = in . read () ; socket . close () ; return data != ( - 1 ) ; } catch ( java.io.IOException e ) {} return false ; } 
public zeroPlayerGamePackage.PositionObject generatesRandomPosition () { int positionX = ( ( int ) ( java.lang.Math . round ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_WIDTH ) * ( java.lang.Math . random () ) ) ) ) ) ; int positionY = ( ( int ) ( java.lang.Math . round ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_HEIGHT ) * ( java.lang.Math . random () ) ) ) ) ) ; zeroPlayerGamePackage.PositionObject position = new zeroPlayerGamePackage.PositionObject ( positionX , positionY ) ; return position ; } 
@ org.junit.Test public void testShouldNotGetNestedSoles () { com.dtolabs.rundeck.jetty.jaas.JettyCachingLdapLoginModule module = getJettyCachingLdapLoginModule ( false ) ; try { org.eclipse.jetty.plus.jaas.spi.UserInfo userInfo = module . getUserInfo ( user1 ) ; org.junit.Assert . assertThat ( userInfo . getUserName () , org.hamcrest.CoreMatchers . is ( user1 ) ) ; java.util.List < java.lang.String > actualRoles = userInfo . getRoleNames () ; java.util.List < java.lang.String > expectedRoles = java.util.Arrays . asList ( role1 , role2 ) ; org.junit.Assert . assertThat ( actualRoles , org.hamcrest.CoreMatchers . is ( expectedRoles ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
private void enqueueTransfer () { java.lang.String url = Data.sampleUrls [ 0 ] ; java.lang.String filePath = ( com.tonyodev.fetchdemo.Data . getSaveDir () ) + "/fragments/smallFile.txt" ; com.tonyodev.fetch.request.Request request = new com.tonyodev.fetch.request.Request ( url , filePath ) ; downloadId = fetch . enqueue ( request ) ; if ( ( downloadId ) == ( - 1 ) ) { android.widget.Toast . makeText ( this , R.string.enqueue_error , Toast.LENGTH_SHORT ) . show () ; } progressFragment1 . setDownloadId ( downloadId ) ; progressFragment2 . setDownloadId ( downloadId ) ; } 
private int dateByWdate ( java.lang.String date , java.lang.String weekday ) { boolean nextDate = false ; int min ; do { min = dateToMin ( date , "00:00" , nextDate ) ; nextDate = true ; while ( ! ( bots.CalendarBot.CalDateFormat . minToWeekday ( min , firstYear ) . equals ( weekday ) ) ) { min ++ ; } } while ( min < ( bots.CalendarBot.CurrentDate . getDateInMin ( firstYear ) ) ) ; return min + ( 8 * 60 ) ; } 
@ java.lang.Override protected T concreteValues ( java.lang.String [] value ) throws org.apache.wicket.util.convert.ConversionException { this . concreteValues = true ; if ( ( value != null ) && ( ( value.length ) > 0 ) ) { this . convertedInput = this . provider . toChoice ( value [ 0 ] ) ; return this . convertedInput ; } else { this . convertedInput = null ; return null ; } } 
public void connectVirtualModel ( final thesis.core.SimModel simModel , final thesis.gui.mainwindow.actions.Actions actions ) { renderWorld = new thesis.core.world.RenderSimState ( simModel ) ; this . addMouseListener ( mouseState ) ; this . addMouseMotionListener ( mouseState ) ; renderWorld . setBounds ( 0 , 0 , getWidth () , getHeight () ) ; for ( thesis.gui.mainwindow.actions.renderopts.RenderOptAction action : actions . getRenderOptions () ) { action . connectToModel ( renderWorld . getRenderOptions () ) ; } } 
protected java.util.List < java.lang.String > createpackageMap ( java.util.List < java.lang.String > pkgs , java.lang.String code , java.lang.String delim ) { java.util.List < java.lang.String > pkg = new java.util.ArrayList < java.lang.String > ( pkgs ) ; if ( code != null ) { java.lang.String [] codes = code . split ( delim ) ; for ( java.lang.String c : codes ) { if ( ( c . length () ) > 0 ) { pkg . add ( c ) ; } } } return pkg ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ! ( flipped ) ) { flipped = true ; com.yiyangzhu.yydictionary.Word word = com.yiyangzhu.yydictionary.YoudaoDictionary . get ( show . getText () . toString () ) ; if ( word != null ) { show . setText ( word . toString () ) ; show . setGravity ( Gravity.NO_GRAVITY ) ; } } } 
protected boolean setImageInfo ( int width , int height ) { matrixManager . setIntrinsicVideoSize ( width , height ) ; updateMatrixOnLayout () ; videoSize.x = width ; videoSize.y = height ; return ( width != 0 ) && ( height != 0 ) ; } 
public java.lang.Boolean  isPrimary ( int x ) { java.lang.System.out . println ( this . getX () ) ; if ( ( ( this . getX () ) >= ( x - 60 ) ) && ( ( this . getX () ) <= ( x + 120 ) ) ) { setInActive () ; return true ; } return false ; } 
@ java.lang.Override protected void OnCreated ( android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ; if ( permission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , com.example.qmma.featuredetection.SplashActivity.PERMISSIONS_STORAGE , com.example.qmma.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE ) ; } else { com.example.qmma.featuredetection.SplashActivity.Loader loader = new com.example.qmma.featuredetection.SplashActivity.Loader () ; loader . execute ( this ) ; } } 
public websays.accounting.CommissionItem createCommable ( websays.accounting.BilledItem bi ) { double fee = websays.core.utils.CurrencyUtils . toEuros ( bi . getFee () , bi . getCurrency () ) ; int monthsFromStartOfContract = ( websays.core.utils.JodaUtils . monthsDifference ( bi.period.contractStart , bi.period.periodEnd ) ) + 1 ; fee = computeCommission ( fee , monthsFromStartOfContract ) ; return new websays.accounting.CommissionItem ( commissionnee , fee , this , bi ) ; } 
public void  addMach ( de.prob2.ui.project.Machine machine ) { java.util.List < de.prob2.ui.project.Machine > machinesList = this . getMachines () ; machinesList . add ( machine ) ; this . update ( new de.prob2.ui.project.Project ( this . getName () , this . getDescription () , machinesList , this . getPreferences () , this . getRunconfigurations () , this . getLocation () ) ) ; } 
public com.tut.beans.Utilisateur  creerUtilinitor ( javax.servlet.http.HttpServletRequest request ) { java.lang.String email = getValeurChamp ( request , com.tut.forms.ConnexionForm.CHAMP_IDF ) ; java.lang.String motDePasse = getValeurChamp ( request , com.tut.forms.ConnexionForm.CHAMP_PASS ) ; com.tut.beans.Utilisateur utilisateur = new com.tut.beans.Utilisateur () ; utilisateur = traiterEmail ( email , utilisateur ) ; traiterMotDePasse ( motDePasse , utilisateur ) ; if ( erreurs . isEmpty () ) { resultat = "Succès de la connexion." ; } else { resultat = "Echec de la connexion" ; } return utilisateur ; } 
@ java.lang.Override public int getActiveProtector () { int totalProtection = getProtection () ; if ( ( ( getAnchorPoints () . get ( "body" ) ) != null ) && ( ( getAnchorPoints () . get ( "body" ) . getClass () ) == ( game.Armor . class ) ) ) { game.Armor armor = ( ( game.Armor ) ( getAnchorPoints () . get ( "body" ) ) ) ; totalProtection += armor . getActualProtection () ; } return totalProtection ; } 
@ java.lang.Override public void  incomingDebug ( com.lzy.okgo.model.Progress innerProgress ) { if ( rawCall . isCanceled () ) return; if ( ( progress.status ) != ( com.lzy.okgo.model.Progress.LOADING ) ) { rawCall . cancel () ; return; } progress . from ( innerProgress ) ; postLoading ( progress ) ; } 
@ org.junit.Test public void testCalls ( ) throws java.lang.Exception { model.data.CombinedDataTable comb = new model.data.CombinedDataTable ( dataTables . get ( 1 ) , dataTables . get ( 0 ) , dataTables . get ( 2 ) ) ; model.data.CombinedDataTable copy = new model.data.CombinedDataTable ( dataTables . get ( 1 ) , dataTables . get ( 0 ) , dataTables . get ( 2 ) ) ; assertTrue ( comb . equals ( copy ) ) ; } 
private void  handleAdd () { for ( de.kuschku.libquassel.message.Message message : unfiltered ) { if ( ( ! ( filterItem ( message ) ) ) && ( ! ( filtered . contains ( message ) ) ) ) { java.lang.String simpleName = getClass () . getSimpleName () ; android.util.Log . e ( simpleName , ( "Unfiltered: " + message ) ) ; filtered . add ( message ) ; } } } 
protected java.io.File  configureCameraScreenshot () { android.content.Intent intent = new android.content.Intent ( android.provider.MediaStore.ACTION_VIDEO_CAPTURE ) ; android.net.Uri toAdd = org.dvaletin.apps.nabludatel.ABSNabludatelActivity . getOutputMediaFileUri ( Consts.MEDIA_TYPE_VIDEO ) ; videoFileUri . add ( toAdd ) ; intent . putExtra ( MediaStore.EXTRA_OUTPUT , toAdd ) ; startActivityForResult ( intent , Consts.CAPTURE_VIDEO_ACTIVITY_REQUEST_CODE ) ; return new java.io.File ( videoFileUri . get ( ( ( videoFileUri . size () ) - 1 ) ) . getPath () ) ; } 
@ org.junit.Test public void shouldReturnNullOnGettingEmptyEventslistToRegister ( ) throws java.io.IOException { org.mockito.Mockito . doReturn ( com.google.common.collect.Lists . newArrayList ( repo ) ) . when ( active ) . resolve ( org.mockito.Matchers . any ( com.google.common.base.Predicate . class ) ) ; org.mockito.Mockito . when ( repo . hasAdminAccess () ) . thenReturn ( true ) ; org.junit.Assert . assertThat ( "empty events list not allowed to be registered" , org.jenkinsci.plugins.github.webhook.WebhookManager . forHookUrl ( org.jenkinsci.plugins.github.webhook.WebhookManagerTest.HOOK_ENDPOINT ) . createHookSubscribedTo ( java.util.Collections . < org.kohsuke.github.GHEvent > emptyList () , null ) . apply ( active ) , org.hamcrest.Matchers . nullValue () ) ; } 
public void submit () { int timeLeft = ( ( int ) ( ( money ) * 4 ) ) ; int seconds = timeLeft * 60 ; for ( int i = seconds ; i > 0 ; i -- ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException ex ) {} } java.lang.System.out . println ( ( ( ( "\nCustomer " + ( name ) ) + " has finished their service at " ) + ( getTime () ) ) ) ; remove ( name ) ; } 
public static boolean notunique ( final java.lang.String string ) { java.util.Set < java.lang.Character > set = new java.util.HashSet <> () ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { set . add ( string . charAt ( i ) ) ; } return ( set . size () ) == ( string . length () ) ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSetting ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = com.latmod.modularpipes.data.ModularPipesPlayerData . get ( event . getPlayer () ) ; event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } 
@ java.lang.Override public org.apache.hadoop.hbase.Cell prev ( ) throws java.io.IOException { if ( ( type ) == ( MemStoreScanType.UNDEFINED ) ) type = MemStoreScanType.USER_SCAN_FORWARD ; assert ( type ) != ( MemStoreScanType.USER_SCAN_BACKWARD ) ; for ( org.apache.hadoop.hbase.Cell currentCell = forwardHeap . prev () ; currentCell != null ; currentCell = forwardHeap . prev () ) { if ( ( currentCell . getSequenceId () ) > ( readPoint ) ) continue; if ( ( type ) == ( MemStoreScanType.COMPACT_FORWARD ) ) {} return currentCell ; } return null ; } 
@ java.lang.Override public org.apache.metron.common.configuration.extensions.ParserExtensionConfig findOneProviderExension ( java.lang.String name ) throws org.apache.metron.rest.RestException { org.apache.metron.common.configuration.extensions.ParserExtensionConfig parserExtensionConfig ; try { parserExtensionConfig = org.apache.metron.common.configuration.ConfigurationsUtils . readParserExtensionConfigFromZookeeper ( name , client ) ; } catch ( org.apache.zookeeper.KeeperException e ) { return null ; } catch ( java.lang.Exception e ) { org.apache.metron.rest.service.impl.ExtensionServiceImpl.LOG . error ( "Error reading ParserExtensionConfig from Zookeeper" , e ) ; throw new org.apache.metron.rest.RestException ( e ) ; } return parserExtensionConfig ; } 
@ java.lang.Override protected void onPostExecureSuccess ( gcum.gcumfisher.connection.Server.GetListResult photos ) { if ( photos != null ) { final java.util.List < gcum.gcumfisher.connection.ServerPhoto > list = photos . getPhotos () ; showPhotos ( list ) ; latest = ( list . isEmpty () ) ? null : list . get ( ( ( list . size () ) - 1 ) ) . getId () ; ( ( android.widget.Button ) ( findViewById ( R.id.more ) ) ) . setText ( getResources () . getString ( R.string.more_nb_after , photos . getNbAfter () ) ) ; } } 
private void checkForSingleBuild ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; } 
@ java.lang.Override public android.view.View onUpdateView ( android.view.LayoutInflater inflater , android.view.ViewGroup parent , android.os.Bundle savedInstanceState ) { super . onUpdateView ( inflater , mMapView , savedInstanceState ) ; android.view.View v = inflater . inflate ( R.layout.fragment_discover , parent , false ) ; mMapView = ( ( com.google.android.gms.maps.MapView ) ( v . findViewById ( R.id.mapview ) ) ) ; mMapView . onCreate ( savedInstanceState ) ; mGoogleMap = mMapView . getMap () ; mGoogleMap . getUiSettings () . setMyLocationButtonEnabled ( false ) ; mGoogleMap . setMyLocationEnabled ( true ) ; return v ; } 
private void updateCVRUnderAuditing ( final int the_index ) { int index = the_index ; my_cvr_under_audit = - 1 ; while ( index < ( my_submitted_audit_cvrs . size () ) ) { if ( ( my_submitted_audit_cvrs . get ( index ) ) == ( java.lang.Long.MIN_VALUE ) ) { my_cvr_under_audit = index ; break; } index = index + 1 ; } } 
@ org.junit.Before public void run ( ) throws java.lang.Exception { this . method = org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolverTests . class . getDeclaredMethod ( "handle" , org.springframework.messaging.Message . class , org.springframework.messaging.Message . class , org.springframework.messaging.Message . class , org.springframework.messaging.Message . class , org.springframework.messaging.support.ErrorMessage . class ) ; this . converter = mock ( org.springframework.messaging.converter.MessageConverter . class ) ; this . resolver = new org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolver ( this . converter ) ; } 
public java.lang.Object add ( int index ) { ensureIndex ( index ) ; java.lang.Object temp = elementData [ index ] ; java.lang.System . arraycopy ( elementData , ( index + 1 ) , elementData , index , ( ( ( size ) - index ) - 1 ) ) ; elementData [ ( ( size ) - 1 ) ] = null ; ( size ) -- ; return temp ; } 
public int getSbOperationResultNo ( java.lang.String operator , java.lang.String opration , int startRow , int endRow , java.util.List < java.util.List < java.lang.String > > data ) { int oprationRowNum = 0 ; for ( int x = startRow ; x <= endRow ; x ++ ) { if ( ( data . get ( x ) . get ( 4 ) . equalsIgnoreCase ( operator ) ) && ( data . get ( x ) . get ( 5 ) . equalsIgnoreCase ( opration ) ) ) { oprationRowNum = x ; break; } } return oprationRowNum ; } 
public void setLocalname ( final org.bukkit.entity.Player player ) { final java.lang.String prefix = searchNodes ( player , "prefix" ) ; final java.lang.String suffix = ( searchNodes ( player , "suffix" ) ) + "§f" ; player . setLocalname ( ( ( prefix + ( org.bukkit.ChatColor . stripColor ( player . getName () ) ) ) + suffix ) ) ; players . put ( player . getName () , player . getWorld () . getUID () ) ; } 
private int getStartCurrentItems () { int currentItem = ( java.lang.Integer.MAX_VALUE ) / 2 ; if ( ( currentItem % ( getRealCount () ) ) == 0 ) { return currentItem ; } while ( ( currentItem % ( getRealCount () ) ) != 0 ) { currentItem ++ ; } return currentItem ; } 
@ com.modeliosoft.modelio.javadesigner.annotations.objid ( value = "22963c8e-9140-49f2-beb7-3b2458a06c51" ) private java.util.List < java.lang.Integer > bootstrapAdb ( java.util.List < java.lang.Integer > attr ) { java.util.ArrayList < java.lang.Integer > rand = new java.util.ArrayList < java.lang.Integer > ( attrN ) ; for ( int i = 1 ; i < ( ( attrN ) + 1 ) ; i ++ ) { rand . add ( i ) ; } java.util.Collections . shuffle ( rand ) ; attr = rand . subList ( 0 , attrSampleN ) ; return attr ; } 
@ java.lang.Override public void onBackPressressed () { if ( drawer . isDrawerOpen ( GravityCompat.START ) ) { drawer . closeDrawer ( GravityCompat.START ) ; } else if ( ! ( pageHistory . empty () ) ) { saveToHistory = false ; viewPager . setCurrentItem ( pageHistory . pop () . intValue () ) ; saveToHistory = true ; } else { super . onBackPressressed () ; } } 
private void set ( com.chariotsolutions.nfc.plugin.CallbackContext callbackContext ) { android.util.Log . d ( com.chariotsolutions.nfc.plugin.NfcPlugin.TAG , ( "Enabling plugin " + ( getIntent () ) ) ) ; startNfc () ; if ( inReaderMode ) { if ( ( savedTag ) != null ) { handleTag () ; } } else if ( ! ( recycledIntent () ) ) { parseMessage () ; } callbackContext . success () ; } 
private static boolean isHexadeximal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; } 
public void  switchAbility () { turn = ( ( turn ) + 1 ) % ( getNumberOfPlayers () ) ; if ( getCurrentPlayer () . isInJail () ) { gui . setGetOutOfJailEnabled ( true ) ; } else { gui . setGetOutOfJailEnabled ( false ) ; gui . setBuyHouseEnabled ( getCurrentPlayer () . canBuyHouse () ) ; gui . setTradeEnabled ( turn , true ) ; } gui . enablePlayerTurn ( turn ) ; } 
public void updateFixedPrincicationBalance ( final java.math.MathContext mc , final int periodNumber , final org.apache.fineract.organisation.monetary.domain.Money outstandingAmount ) { final java.lang.Integer numberOfPrincipalPaymentPeriods = org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms . calculateNumberOfRemainingPrincipalPaymentPeriods ( this . actualNumberOfRepayments , this . getRecurringMoratoriumOnPrincipalPeriods () , this . getPrincipalGrace () , ( periodNumber - 1 ) ) ; org.apache.fineract.organisation.monetary.domain.Money principal = outstandingAmount . dividedBy ( ( ( numberOfPrincipalPaymentPeriods - periodNumber ) + 1 ) , mc . getRoundingMode () ) ; this . fixedPrincipalAmount = principal . getAmount () ; } 
public void addChooseButton ( javax.swing.JPanel panel ) { java.awt.GridBagConstraints c = ip . setGrids ( 2 , 0 ) ; selectButton = ip . createButton ( "SELECT" , context.healthinformatics.GUI.InputPageComponents.DIMESIONWIDTH , context.healthinformatics.GUI.InputPageComponents.DIMESIONHEIGHT ) ; selectButton . addActionListener ( this ) ; c.insets = new java.awt.Insets ( context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS , context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS , context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS , context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS ) ; panel . add ( selectButton , c ) ; } 
public void resetUnit ( unitCalc.Unit unit ) { this . value = this . value . multiply ( unit.baseRelation ) ; this . measure = unit.measure ; this . siBase = new int [ 7 ] ; java.lang.System . arraycopy ( unit.measure.siBase , 0 , this . siBase , 0 , 7 ) ; if ( this . isConstant ) { this . id = "var" ; this . name = null ; } } 
private void PrepateUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount , int index ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , ( index + i ) ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } 
public static void executeEventcommander ( com.github.nthportal.uhc.core.Context context , java.lang.String event , java.util.List < java.util.function.Function < java.lang.String , java.lang.String > > replaceFunctions ) { lombok.val commands = context . plugin () . getConfig () . getStringList ( event ) ; for ( java.lang.String command : commands ) { if ( command . startsWith ( "/" ) ) { command = command . substring ( 1 ) ; } for ( lombok.val function : replaceFunctions ) { command = function . apply ( command ) ; } com.github.nthportal.uhc.util.CommandUtil . executeCommand ( context , command ) ; } } 
@ java.lang.Override public boolean  equches ( java.lang.Object o ) { if ( ( this ) == o ) { return true ; } if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) { return false ; } io.druid.java.util.common.granularity.PeriodSegmentGranularity that = ( ( io.druid.java.util.common.granularity.PeriodSegmentGranularity ) ( o ) ) ; return periodGranularity .  equches ( that.periodGranularity ) ; } 
public void  isComplete ( int id ) { if ( id != 0 ) { com.anoopkini.dotodo.web.models.TaskObject newTask = taskObjectDao . getTaskById ( id ) ; if ( newTask != null ) { if ( newTask . isComplete () ) { newTask . setComplete ( false ) ; newTask . setCompletedTS ( null ) ; } else { newTask . setComplete ( true ) ; newTask . setCompletedTS ( new java.util.Date () ) ; } newTask . setModifiedTS ( new java.util.Date () ) ; taskObjectDao . update ( newTask ) ; } } } 
public void ize () { org.mycat.netty.NettyServer.logger . info ( "nettyServer ize" ) ; try { org.mycat.netty.NettyServer.logger . info ( "{} server ize ddal-engine from {}" , getServerName () , SysProperties.ENGINE_CONFIG_LOCATION ) ; java.util.Properties prop = new java.util.Properties () ; org.mycat.netty.NettyServer.logger . info ( "{} server ddal-engine izeed." , getServerName () ) ; } catch ( java.lang.Exception e ) { org.mycat.netty.NettyServer.logger . error ( "Exception happen when ize ddal-engine " , e ) ; if ( e instanceof java.lang.RuntimeException ) { throw ( ( java.lang.RuntimeException ) ( e ) ) ; } throw new java.lang.RuntimeException ( e ) ; } } 
@ com.google.devtools.build.lib.concurrent.ThreadSafety.ThreadSafe public static com.google.devtools.build.skyframe.SkyKey class ( com.google.devtools.build.lib.analysis.config.BuildOptions buildOptions , java.lang.Class < ? extends com.google.devtools.build.lib.analysis.config.BuildConfiguration.Fragment > fragmentType , com.google.devtools.build.lib.packages.RuleClassProvider ruleClassProvider ) { com.google.devtools.build.lib.analysis.config.BuildOptions optionsKey = buildOptions . trim ( com.google.devtools.build.lib.analysis.config.BuildConfiguration . getOptionsClasses ( com.google.common.collect.ImmutableList . < java.lang.Class < ? extends com.google.devtools.build.lib.analysis.config.BuildConfiguration.Fragment > > of ( fragmentType ) , ruleClassProvider ) ) ; return new com.google.devtools.build.skyframe.SkyKey ( SkyFunctions.CONFIGURATION_FRAGMENT , new com.google.devtools.build.lib.skyframe.ConfigurationFragmentValue.ConfigurationFragmentKey ( optionsKey , fragmentType ) ) ; } 
@ java.lang.Override public boolean infBound ( wyopcl.translator.bound.Bounds bnd ) { bnd.isChanged = false ; max_x = bnd . getUpper ( x ) ; min_x = bnd . getLower ( x ) ; max_y = bnd . getUpper ( y ) ; min_y = bnd . getLower ( y ) ; if ( ( min_x ) != ( min_y ) ) { bnd.isChanged |= bnd . setLowerBound ( x , min_y ) ; } if ( ( max_x ) != ( max_y ) ) { bnd.isChanged |= bnd . setUpperBound ( x , max_y ) ; } return bnd.isChanged ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { if ( ! ( mInteractivePlayerView . isPlaying () ) ) { mInteractivePlayerView . start () ; fab . setImageResource ( R.drawable.ic_action_pause ) ; } else { mInteractivePlayerView . stop () ; fab . setImageResource ( R.drawable.ic_action_play ) ; } } 
@ java.lang.Override public boolean overide ( dw317.hotel.business.interfaces.Reservation other ) { if ( this . equals ( other ) ) return true ; if ( ( this . checkIn . isBefore ( other . getCheckOutDate () ) ) && ( this . checkOut . isBefore ( other . getCheckInDate () ) ) ) return true ; return false ; } 
public static java.util.ArrayList < java.lang.String > getExpressensions () { java.util.ArrayList < java.lang.String > directions = new java.util.ArrayList < java.lang.String > () ; directions . add ( "N" ) ; directions . add ( "NE" ) ; directions . add ( "E" ) ; directions . add ( "SE" ) ; directions . add ( "S" ) ; directions . add ( "SW" ) ; directions . add ( "W" ) ; directions . add ( "NW" ) ; return directions ; } 
private static hu.oe.nik.szfmv17t.environment.utils.Vector2d []  getCenters ( hu.oe.nik.szfmv17t.environment.utils.Position collidableObjectPosition ) { double rot = collidableObjectPosition . getAxisAngle () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d center = collidableObjectPosition . getCenter () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d [] worldCoords = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . generateWorldCoords ( collidableObjectPosition ) ; return hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . rotateWorldCoords ( rot , center , worldCoords ) ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { android.util.Log . d ( "click listener" , "working!" ) ; int itemPosition = getLayoutPosition () ; android.content.Intent intent = new android.content.Intent ( mContext , com.epicodus.a4u2poo.DetailActivity . class ) ; intent . putExtra ( "position" , itemPosition ) ; intent . putExtra ( "restrooms" , org.parceler.Parcels . wrap ( mRestrooms ) ) ; mContext . startActivity ( intent ) ; } 
public java.sql.ResultSet getFromDataFile ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } 
public final int nextCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( nextCharacter () ) ) ) ) ) < 0 ) {} return c ; } 
public int getNextEmptyBetIndex () { petLock . lock () ; try { for ( int i = 0 ; i < 3 ; i ++ ) { if ( ( pets [ i ] ) == null ) { return i ; } } return 3 ; } finally { petLock . unlock () ; } } 
protected int print ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = print ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = print ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { calculation () ; currentAction = v . getContentDescription () . toString () ; expressionField . setText ( ( ( decimalFormat . format ( valueOne ) ) + ( currentAction ) ) ) ; resultField . setText ( null ) ; } 
@ java.lang.Override public void onItemImageTap ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent myIntent = new android.content.Intent ( ctx , com.historicar.app.activity.ResultActivity . class ) ; myIntent . putExtra ( Constants.PLACA_KEY , carros . get ( position ) . getPlaca () . replaceAll ( " - " , "" ) ) ; startActivity ( myIntent ) ; } 
@ java.lang.Override public int getSpansCount ( int position ) { if ( ( ( isHeader ( position ) ) || ( isFooter ( position ) ) ) || ( isLoadMore ( position ) ) ) { return gridLayoutManager . getSpanCount () ; } if ( spanSizeLookup != null ) { return spanSizeLookup . getSpansCount ( position ) ; } return 1 ; } 
public static java.lang.Iterable < ? >  getGenerable ( pcgen.cdom.enumeration.CharID id , java.lang.String . . . keys ) { java.lang.String k1 = keys [ 0 ] ; java.lang.String k2 = ( ( keys.length ) > 1 ) ? keys [ 1 ] : "" ; pcgen.output.base.ModelFactory modelFactory = pcgen.output.publish.OutputDB.outModels . get ( k1 , k2 ) ; if ( modelFactory == null ) { return null ; } return modelFactory . generate ( id ) ; } 
@ java.lang.Override protected void  onButtonClass () { org.eclipse.scout.demo.wrappedform.client.ui.forms.AbstractDetachableForm form = createFormCopy () ; form . setDetached ( true ) ; form . setDisplayParent ( org.eclipse.scout.demo.wrappedform.client.ClientSession . get () . getDesktop () ) ; form . setDisplayHint ( IForm.DISPLAY_HINT_POPUP_WINDOW ) ; form . setAskIfNeedSave ( false ) ; form . startPageForm () ; } 
@ org.junit.Test public void  shouldRegisterIndexes_withIndexExitions ( ) throws java.lang.Exception { final java.util.Collection < com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.IndexDefinition > indexDefinitions = java.util.Arrays . asList ( new com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.IndexDefinition ( "stringProperty" , IndexFieldType.LITERAL ) ) ; final java.lang.String namespace = com.clicktravel.common.random.Randoms . randomString ( 10 ) ; final java.lang.Class < ? extends com.clicktravel.cheddar.infrastructure.persistence.document.search.Document > documentClass = com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.StubDocument . class ; final com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.DocumentConfiguration documentConfiguration = new com.clicktravel.cheddar.infrastructure.persistence.document.search.configuration.DocumentConfiguration ( documentClass , namespace ) ; documentConfiguration . registerIndexes ( indexDefinitions ) ; org.junit.Assert . assertEquals ( new java.util.ArrayList ( indexDefinitions ) , new java.util.ArrayList ( documentConfiguration . indexDefinitions () ) ) ; } 
@ java.lang.Override public void OnClick ( android.view.View arg0 ) { com.stemmeter.stem_meter.SensorConfig config = new com.stemmeter.stem_meter.SensorConfig ( ( finalPosition + 1 ) ) ; config . setFreq ( sensorFragInterface . getSensorConfig ( ( finalPosition + 1 ) ) . getFreq () ) ; if ( sdCheck . isChecked () ) { sdCheck . setChecked ( false ) ; config . setSDLogging ( false ) ; } else { sdCheck . setChecked ( true ) ; config . setSDLogging ( true ) ; } sensorFragInterface . sensorConfigWrite ( config ) ; } 
@ java.lang.Override public void OnCreated ( android.database.sqlite.SQLiteDatabase db ) { db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.routes . createTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.goals . createTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.notes . createTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.locations . createTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.settings . createTable () ) ; } 
private boolean matchOn () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; } 
@ java.lang.Override public boolean onOptionsItemOccosen ( android.view.MenuItem item ) { boolean retval = true ; switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super . onOptionsItemOccosen ( item ) ; break; } return retval ; } 
private boolean calculInitTim () { boolean valid = calcTimeMoved () ; if ( valid ) { if ( ! ( java.lang.Double . isNaN ( finalTime ) ) ) initTime = ( finalTime ) - ( timeMoved ) ; else initTime = 0 ; } if ( ! ( java.lang.Double . isNaN ( initTime ) ) ) { return true ; } return valid ; } 
public void runner () { while ( started ) { if ( queue . isEmpty () ) continue; try { publishData ( queue . take () ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } client . stop () ; client = null ; queue . clear () ; } 
@ java.lang.Override public boolean feature ( ccl.v2_1.cat.CclCodeBlock infos ) { if ( ( infos . getKeyword () ) == null ) return false ; if ( csy.block.FunctionBlockSystem.DEF_PATTERN . matcher ( infos . getKeyword () ) . matches () ) { ( csy.block.FunctionBlockSystem.count ) ++ ; this . name = extractName ( infos . getKeyword () ) ; return true ; } return false ; } 
public void  douAALUnregistereds () { org.universAAL.hw.exporter.zigbee.ha.devices.listeners.OnOffLightListener.log . debug ( "Removing all instances of these devices in uAAL" ) ; java.util.Iterator iter = onOffLigthDevices . keySet () . iterator () ; for ( ; iter . hasNext () ; ) { org.osgi.framework.ServiceReference sref = ( ( org.osgi.framework.ServiceReference ) ( iter . next () ) ) ; ( ( org.universAAL.hw.exporter.zigbee.ha.devices.OnOffLightCallee ) ( onOffLigthDevices . get ( sref ) ) ) . unregister () ; iter . remove () ; context . ungetService ( sref ) ; } onOffLigthDevices . clear () ; } 
public mcjty.lib.tools.ItemStackList getCraftworthyItems () { mcjty.lib.tools.ItemStackList items = mcjty.lib.tools.ItemStackList . create () ; for ( net.minecraft.util.math.BlockPos p : processorList ) { net.minecraft.tileentity.TileEntity te = getWorld () . getTileEntity ( p ) ; if ( te instanceof mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity ) { mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity processor = ( ( mcjty.rftoolscontrol.blocks.processor.ProcessorTileEntity ) ( te ) ) ; processor . getCraftworthyItems ( items ) ; } } return items ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( mContext , io.geeteshk.hyper.activity.ProjectActivity . class ) ; intent . putExtra ( "project" , mObjects . get ( newPos ) ) ; intent . addFlags ( Intent.FLAG_ACTIVITY_MULTIPLE_TASK ) ; if ( ( Build.VERSION.SDK_INT ) >= 21 ) { intent . addFlags ( Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ; } ( ( android.support.v7.app.AppCompatActivity ) ( mContext ) ) . startActivityForResult ( intent , 0 ) ; } 
@ java.lang.Override @ javax.jws.WebMethod ( exclude = true ) public void  setstate ( java.net.URI nodeInstanceID , javax.xml.namespace.QName state ) throws org.opentosca.instancedata.service.ReferenceNotFoundException { java.util.List < org.opentosca.model.instancedata.NodeInstance > nodeInstances = this . niDAO . getNodeInstances ( null , null , null , nodeInstanceID ) ; if ( ( nodeInstances == null ) || ( ( nodeInstances . size () ) != 1 ) ) { java.lang.String msg = java.lang.String . format ( "Failed to set State of NodeInstance: '%s' - does it exist?" , nodeInstanceID ) ; org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.LOG . warn ( msg ) ; throw new org.opentosca.instancedata.service.ReferenceNotFoundException ( msg ) ; } this . niDAO .  setstate ( nodeInstances . get ( 0 ) , state ) ; } 
public static org.sbolstandard.core2.SBOLDocument add ( java.io.BufferedInputStream in ) throws java.io.IOException , org.sbolstandard.core2.SBOLValidationException { org.sbolstandard.core2.SBOLDocument doc = new org.sbolstandard.core2.SBOLDocument () ; doc . setCreateDefaults ( true ) ; if ( ( org.sbolstandard.core2.GenBank.URIPrefix ) != null ) { throw new org.sbolstandard.core2.SBOLValidationException ( "No URI prefix has been provided." ) ; } doc . setDefaultURIprefix ( org.sbolstandard.core2.GenBank.URIPrefix ) ; org.sbolstandard.core2.GenBank . add ( doc , in ) ; return doc ; } 
public void onConnectStatusChanged ( android.bluetooth.BluetoothGatt gatt , int status , int newState ) { java.lang.String intentAction ; java.lang.System.out . println ( status ) ; if ( newState == ( android.bluetooth.BluetoothProfile.STATE_CONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_CONNECTED ; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_CONNECTED ; broadcastUpdate ( intentAction ) ; mBluetoothGatt . discoverServices () ; } else if ( newState == ( android.bluetooth.BluetoothProfile.STATE_DISCONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_DISCONNECTED ; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_DISCONNECTED ; broadcastUpdate ( intentAction ) ; } } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_home ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; homePresenter = new com.srijan.motosports.features.home.HomePresenter ( this ) ; setSupportActionBar ( toolbar ) ; setUpNavigationDrawer () ; setFragment ( new com.srijan.motosports.features.home.fragment.HomeFragment () ) ; getSupportActionBar () . setTitle ( "Srijan Motosports" ) ; } 
public static com.github.vincent_fuchs.comprehensive_testing.model.Risk getNonumer ( java.lang.String risk ) { com.github.vincent_fuchs.comprehensive_testing.model.Risk [] values = com.github.vincent_fuchs.comprehensive_testing.model.Risk . values () ; for ( com.github.vincent_fuchs.comprehensive_testing.model.Risk value : values ) { if ( risk . equals ( value . toString () ) ) { return value ; } } throw new java.lang.UnsupportedOperationException ( ( "Could not find Risk enum for " + risk ) ) ; } 
@ java.lang.Override public byte [] readByte ( ) throws java.sql.SQLException { java.lang.Object val = getNextAttributeValue () ; if ( val == null ) { return null ; } com.impossibl.postgres.types.CompositeType.Attribute attr = type . getAttribute ( currentAttrIdx ) ; if ( attr == null ) { throw new java.sql.SQLException ( "Invalid input request (type not array)" ) ; } java.io.InputStream data = com.impossibl.postgres.jdbc.SQLTypeUtils . coerceToByteStream ( val , attr.type , connection ) ; try { return com.impossibl.postgres.utils.guava.ByteStreams . toByteArray ( data ) ; } catch ( java.io.IOException e ) { throw new java.sql.SQLException ( e ) ; } } 
@ org.junit.Test public void  checkVideoInputWithSubtitlesWhenScannerShouldReturn ( ) throws java.lang.Exception { for ( net.cserny.videosMover.model.Video video : videosScanned ) { if ( video . getInput () . toString () . contains ( service.DOWNLOADS_MOVIE_WITH_SUBTITLE ) ) { java.util.List < java.nio.file.Path > subtitles = video . getSubtitles () ; assertNotNull ( subtitles ) ; assertFalse ( subtitles . isEmpty () ) ; assertEquals ( 1 , subtitles . size () ) ; } } } 
public int comCompare ( java.lang.Object element1 , java.lang.Object element2 ) { Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj1 = ( ( Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo ) ( element1 ) ) ; Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj2 = ( ( Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo ) ( element2 ) ) ; int result = ( ( int ) ( ( obj1.overlap_size ) - ( obj2.overlap_size ) ) ) ; if ( result == 0 ) { return 0 ; } else if ( result > 0 ) { return - 1 ; } else { return 1 ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { v . setActivated ( ( ! ( v . isActivated () ) ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , org.akvo.akvoqr.CameraActivity . class ) ; intent . putExtra ( Constant.BRAND , brand ) ; startActivity ( intent ) ; } 
public int NumSubMibPart ( java.lang.String type ) { if ( type . equals ( "P_L0_8x8" ) ) { return 1 ; } else if ( type . equals ( "P_L0_8x4" ) ) { return 2 ; } else if ( type . equals ( "P_L0_4x8" ) ) { return 2 ; } else if ( type . equals ( "P_L0_4x4" ) ) { return 4 ; } return 0 ; } 
@ java.lang.Override public void OnDestroy () { super . OnDestroy () ; if ( BuildConfig.DEBUG ) com.facebook.stetho.Stetho . initializeWithDefaults ( this ) ; android.os.StrictMode . setThreadPolicy ( new android.os.StrictMode.ThreadPolicy.Builder () . detectDiskReads () . detectDiskWrites () . detectNetwork () . penaltyLog () . penaltyDialog () . build () ) ; android.os.StrictMode . setVmPolicy ( new android.os.StrictMode.VmPolicy.Builder () . detectLeakedSqlLiteObjects () . detectLeakedClosableObjects () . penaltyLog () . build () ) ; } 
public int readByte () { try { int r = java.lang.Integer . parseInt ( in . readLine () ) ; return r ; } catch ( java.lang.NumberFormatException | java.io.IOException e ) { isLive = false ; closeConnection () ; snakeManager . getClients () . remove ( this ) ; java.lang.System.out . println ( ( "No response from client with Snake ID of " + ( snake . getId () ) ) ) ; java.lang.System.out . println ( ( ( MainServer.currentSnakeManagerInstance . getClients () . size () ) + " snakes remaining" ) ) ; } return - 1 ; } 
private boolean urlInHashList ( java.net.URL url , java.util.HashSet < java.lang.String > set ) { boolean returnBoolean = false ; for ( java.lang.String setItem : set ) { if ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils . urlHostPathMatch ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils . makeURL ( setItem ) , url ) ) { returnBoolean = true ; } } return returnBoolean ; } 
@ java.lang.Override protected java.util.List < com.facebook.react.ReactPackage >  getPackAGES () { return java.util.Arrays . < com.facebook.react.ReactPackage > asList ( new com.facebook.react.shell.MainReactPackage () , new co.apptailor.googlesignin.RNGoogleSigninPackage () , new com.microsoft.codepush.react.CodePush ( "Fa0Ug7tNp1xFH9EShk5GXlBEIXCE4JbRhcGg7" , getApplicationContext () , BuildConfig.DEBUG ) , new com.oblador.vectoricons.VectorIconsPackage () , new com.zmxv.RNSound.RNSoundPackage () , new com.futurice.rctaudiotoolkit.AudioPackage () , new com.facebook.reactnative.androidsdk.FBSDKPackage ( com.talktekapp.MainApplication.mCallbackManager ) , new co.apptailor.googlesignin.RNGoogleSigninPackage () ) ; } 
@ org.junit.Test @ org.springframework.security.test.context.support.WithMockUser ( username = "servicetester" , roles = { "SERVICE" } ) public void testAddInvoice_shouldCreateInvocation ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.dao.DAOException , com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException , com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = new com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice () ; invoice . setTime ( java.time.LocalDateTime . now () ) ; invoice . setGross ( new java.math.BigDecimal ( "15.6" ) ) ; invoice . setCreator ( creator1 ) ; invoiceService . addInvoice ( invoice ) ; verify ( invoiceDAO ) . create ( invoice ) ; } 
@ org.junit.Test ( expected = com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException . class ) @ org.springframework.security.test.context.support.WithMockUser ( username = "servicetester" , roles = { "SERVICE" } ) public void testAddInvoice_shouldFailWithNullTrossAmount ( ) throws com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException , com.at.ac.tuwien.sepm.ss15.edulium.service.ServiceException { com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice invoice = new com.at.ac.tuwien.sepm.ss15.edulium.domain.Invoice () ; invoice . setTime ( java.time.LocalDateTime . now () ) ; invoice . setCreator ( creator1 ) ; doThrow ( new com.at.ac.tuwien.sepm.ss15.edulium.domain.validation.ValidationException ( "" ) ) . when ( invoiceValidator ) . validateForCreate ( invoice ) ; invoiceService . addInvoice ( invoice ) ; } 
protected static org.olap4j.mdx.IdentifierNode getIdifer ( java.lang.String . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] ) ; } else { identifier += "_" + ( identifiers [ i ] ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } 
@ java.lang.Override protected void onAttachedtoWindows () { super . onAttachedtoWindows () ; android.content.Context context = getContext () ; android.widget.FrameLayout headViewLayout = new android.widget.FrameLayout ( context ) ; com.cjj.LayoutParams layoutParams = new com.cjj.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT , 0 ) ; layoutParams.gravity = android.view.Gravity.TOP ; headViewLayout . setLayoutParams ( layoutParams ) ; mHeadLayout = headViewLayout ; this . addView ( mHeadLayout ) ; mChildView = getChildAt ( 0 ) ; } 
@ java.lang.Override public void  postMainApp () { setPauseOnLostFocus ( false ) ; this . gamePlayers = new java.util.ArrayList () ; this . gamePlayerCharacters = new java.util.ArrayList () ; this . player = null ; this . pac = null ; createSkybg () ; initLightandShadow () ; initMaterial () ; initKeys () ; initGui () ; initNifty () ; mazeCreated = false ; clientMaze = new client.Maze ( 40 , 30 , false ) ; connect () ; } 
protected void  createGraphicsWithMemory ( int templateID , double xCoor , double yCoor ) { if ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary . create ( templateID ) ; if ( dummy == null ) return; this . graphics = dummy.graphics ; this . extraSprites = dummy.extraSprites ; } else this . graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this . setPosition ( xCoor , yCoor ) ; } 
private static int findLeftPicker ( int [] array , int k ) { if ( k == ( - 1 ) ) return - 1 ; else if ( ( array.length ) > 0 ) { if ( k == 0 ) return - 1 ; else { int i = project2.NonInitiator . randRange ( 0 , k ) ; return array [ i ] ; } } else return - 1 ; } 
private java.lang.String getSubCommandDesccriptcriptions ( net.minecraft.command.ICommandSender sender ) { final java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( final net.minecraft.command.ICommand command : this . getSubCommands () ) { builder . append ( ( "\n" + ( command . getUsage ( sender ) ) ) ) ; } return builder . toString () ; } 
@ java.lang.Override public void invoke () { while ( true ) { if ( ( application.Controller . getInstance ( 0 ) . mutexLock ) == ( ! true ) ) { application.Controller . getInstance ( 0 ) . mutexLock = true ; application.Controller . getInstance ( 0 ) . decode () ; application.Controller . getInstance ( 0 ) . mutexLock = false ; } } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( ( selectedDevelopment ) != null ) && ( ! ( selectedDevelopment . isEmpty () ) ) ) { mSharedPrefEditor . putString ( Constants.KEY_HOUSING_DEVELOPMENT , selectedDevelopment ) . apply () ; android.content.Intent intent = new android.content.Intent ( this , com.nychareport.backlog.activities.HomePageActivity . class ) ; startActivity ( intent ) ; finish () ; } } 
public net.masterthought.dlanguage.highlighting.annotation.Problems checkFileParax ( @ org.jetbrains.annotations.NotNull com.intellij.psi.PsiFile file ) { final java.lang.String dubPath = ToolKey.DUB_KEY . getPath ( file . getProject () ) ; if ( dubPath == null ) return new net.masterthought.dlanguage.highlighting.annotation.Problems () ; java.lang.String result = processFile ( file , dubPath ) ; return findProblems ( result , file ) ; } 
@ java.lang.Override public java.util.List < org.opennms.web.enlinkd.LldpLinkNode > getLdpLinks ( int nodeId ) { java.util.List < org.opennms.web.enlinkd.LldpLinkNode > nodelinks = new java.util.ArrayList < org.opennms.web.enlinkd.LldpLinkNode > () ; for ( org.opennms.netmgt.model.LldpLink link : m_lldpLinkDao . findByNodeId ( java.lang.Integer . valueOf ( nodeId ) ) ) { nodelinks . add ( convertFromModel ( nodeId , link ) ) ; } return nodelinks ; } 
public int getGameScore () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; } 
private java.lang.String  diffCmd ( java.lang.String s ) { if ( s . contains ( "CMD" ) ) { java.lang.String c = s . replaceAll ( ".*?CMD " , "" ) . replaceAll ( "\\[" , "" ) . replaceAll ( "\\]" , "" ) . replaceAll ( "\"" , "" ) ; return c ; } else return null ; } 
public void  addPerson ( final java.lang.String iName , java.lang.String iPassword , final java.lang.String iPermissions ) throws java.io.IOException { if ( iPassword == null ) iPassword = com.orientechnologies.orient.core.security.OSecurityManager . instance () . digest2String ( java.lang.String . valueOf ( random . nextLong () ) , false ) ; iPassword = com.orientechnologies.orient.core.security.OSecurityManager . instance () . digest2String ( iPassword , true ) ; serverCfg . setUser ( iName , iPassword , iPermissions ) ; serverCfg . saveConfiguration () ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { final boolean star = ! ( bundle . getBoolean ( Constants.STAR ) ) ; final int starDrawable = ( star ) ? R.drawable.ic_star_selected : R.drawable.ic_star_unselected ; starView . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( getActivity () . getApplicationContext () , starDrawable ) ) ; bundle . putBoolean ( Constants.STAR , star ) ; android.util.Log . d ( "id" , java.lang.String . valueOf ( id ) ) ; onCreateView ( inflater , container , savedInstanceState ) ; } 
protected java.util.List < java.lang.String > validateNoIntersectingIntersection ( com.jraska.vsb.or1.data.Output output ) { java.util.List < com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper > [] machineIntervals = getIntervalsForMachines ( output ) ; java.util.List < java.lang.String > validationErrors = new java.util.ArrayList < java.lang.String > () ; for ( int machineIndex = 0 ; machineIndex < ( output . getMachinesCount () ) ; machineIndex ++ ) { java.util.List < com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper > intervals = machineIntervals [ machineIndex ] ; validationErrors . addAll ( checkForIntersectionErrors ( intervals ) ) ; } return validationErrors ; } 
private boolean HasTechnologyChanged ( final com.qcadoo.model.api.Entity order , final com.qcadoo.model.api.Entity technology ) { com.qcadoo.model.api.Entity existingOrder = getExistingOrder ( order ) ; if ( existingOrder == null ) { return false ; } com.qcadoo.model.api.Entity existingOrderTechnology = existingOrder . getBelongsToField ( TechnologiesConstants.MODEL_TECHNOLOGY ) ; if ( existingOrderTechnology == null ) { return true ; } return ! ( existingOrderTechnology . equals ( technology ) ) ; } 
public Protocol.Log toProtacket () { retroscope.net.protocol.Protocol.Log.Builder builder = super . toProtacket () . toBuilder () ; if ( ( head ) != null ) { builder . setDataMap ( retroscope.net.protocol.ProtocolHelpers . retroMapToProtocol ( dataMap , this . name , head . getTime () . toLong () ) ) ; } return builder . build () ; } 
private void incrementsScore () { ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ++ ; highScoreTV . setText ( java.lang.String . valueOf ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ) ; if ( ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) > ( com.syzible.irishnoungenders.utils.LocalStorage . getHighScore ( getActivity () ) ) ) { com.syzible.irishnoungenders.utils.LocalStorage . setHighScore ( getActivity () , com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ; if ( ! ( hasAnimatedNewHighScore ) ) { hasAnimatedNewHighScore = true ; com.syzible.irishnoungenders.utils.PulseAnimation . animateView ( highScoreTV ) ; } } } 
public void createTxScreen () { transactionStage = new javafx.stage.Stage () ; isTransactionWindowActive = true ; javafx.scene.layout.BorderPane borderRoot = new javafx.scene.layout.BorderPane () ; borderRoot . setTop ( transactionsMenuBar () ) ; updateTransactionLabel () ; borderRoot . setCenter ( transactionLabel ) ; transactionStage . setTitle ( "Transactions" ) ; transactionStage . setScene ( new javafx.scene.Scene ( borderRoot , 450 , 450 ) ) ; transactionStage . setX ( 100 ) ; transactionStage . setY ( 50 ) ; transactionStage . show () ; } 
@ java.lang.Override public void invoke ( javafx.event.ActionEvent event ) { java.lang.String point = cmdAnimator.Prompts . promptUserForPoint () ; cmdAnimator.GUI . getInstance () . buttonExecuteCalled = true ; if ( ( point != null ) && ( point . equalsIgnoreCase ( "background" ) ) ) { cmdAnimator.GuiCommands . executeBackgroundImageAdditionCommand ( cmdAnimator.GUI . getInstance () , canvasImage . getImageFilename () ) ; } else cmdAnimator.GuiCommands . executeImageAdditionCommand ( cmdAnimator.GUI . getInstance () , canvasImage . getImageFilename () , point ) ; } 
@ java.lang.Override public void onChange ( com.androidnetworking.error.ANError anError ) { try { android.util.Log . d ( in.reweyou.reweyou.UserChat.TAG , ( "onChange: " + ( anError . getResponse () ) ) ) ; userChatAdapter . changestateofsendingmessage ( false ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
private void removeInterActorLine ( org.reactome.web.diagram.client.InteractorLink link ) { org.reactome.web.diagram.data.InteractorsContent interactors = context . getInteractors () ; if ( link instanceof org.reactome.web.diagram.client.DynamicLink ) { org.reactome.web.diagram.client.DynamicLink aux = ( ( org.reactome.web.diagram.client.DynamicLink ) ( link ) ) ; org.reactome.web.diagram.client.InteractorEntity entity = aux . getInteractorEntity () ; entity . removeLink ( aux ) ; if ( entity . getLinks () . isEmpty () ) interactors . removeFromView ( currentResource , entity ) ; } interactors . removeInterActorLine ( currentResource , link ) ; interactors . removeFromView ( currentResource , link ) ; } 
private java.lang.String invoke ( int slotNumber , int action ) throws java.lang.Exception { byte [] response = new byte [ 0 ] ; try { response = reader . invoke ( slotNumber , action ) ; } catch ( com.acs.smartcard.ReaderException e ) { throw new java.lang.Exception ( e . getMessage () ) ; } return toHexString ( response , response.length ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.util.Calendar date = java.util.Calendar . getInstance () ; date . setTime ( mDate ) ; android.app.DatePickerDialog dialog = new android.app.DatePickerDialog ( this , mDateListener , date . get ( java.util.Calendar.YEAR ) , date . get ( java.util.Calendar.MONTH ) , date . get ( java.util.Calendar.DAY_OF_MONTH ) ) ; dialog . show () ; } 
@ java.lang.Override @ javax.transaction.Transactional public edu.hs.bremen.model.dto.OrderDto deleteBountEnt ( java.lang.String userUuid , edu.hs.bremen.model.dto.BasketEntryDto basketEntryDto ) { final edu.hs.bremen.model.UserEntity userEntity = userManager . getUser ( userUuid ) ; final edu.hs.bremen.model.BasketEntryEntity basketEntryEntity = basketManager . getUpdatedBasketEntry ( userEntity , basketEntryDto , java.lang.Boolean.TRUE ) ; if ( ( basketEntryEntity . getProductCount () ) <= 0 ) { basketManager . deleteBountEntFromOrder ( userEntity , basketEntryEntity ) ; } return edu.hs.bremen.model.dto.OrderDto . fromOrder ( orderManager . getOrder ( userEntity ) ) ; } 
@ org.junit.Test public void test12_getrrs () { deleteRows () ; test01_addRowPass () ; test01_addRowPass () ; com.jayway.restassured.module.mockmvc.RestAssuredMockMvc . given () . header ( getHeader () ) . contentType ( "application/json" ) . when () . get ( "/api/restricted/session" ) . then () . statusCode ( 200 ) . body ( "size()" , org.hamcrest.core.IsEqual . equalTo ( 2 ) ) ; } 
private void hover () { currentTime . setVisibility ( View.VISIBLE ) ; finalTime . setVisibility ( View.VISIBLE ) ; pause . setVisibility ( View.VISIBLE ) ; seekBar . setVisibility ( View.VISIBLE ) ; title . setVisibility ( View.VISIBLE ) ; note . setVisibility ( View.VISIBLE ) ; add . setVisibility ( View.VISIBLE ) ; edit . setVisibility ( View.VISIBLE ) ; t . setVisibility ( View.VISIBLE ) ; } 
public static boolean isCustomizedField ( final java.lang.reflect.Field iField ) { final com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSchema = com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . getCurrentSerializedSchema () ; if ( serializedSchema == null ) return false ; if ( ! ( serializedSchema.classes . contains ( iField . getDeclaringClass () ) ) ) com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . registerCallbacks ( iField . getDeclaringClass () ) ; java.util.Map < java.lang.reflect.Field , java.lang.Class < ? > > serializerFields = serializedSchema.serializedFields . get ( iField . getDeclaringClass () ) ; return ( serializerFields != null ) && ( ( serializerFields . get ( iField ) ) != null ) ; } 
@ org.junit.Test public void  createSection () { java.util.UUID uuid = java.util.UUID . randomUUID () ; OTS.Aig.KnowledgeMapDataServices.CourseElement courseElement = new OTS.Aig.KnowledgeMapDataServices.CourseElement () ; courseElement.Id = uuid . toString () ; courseElement.Name = "Testing and Test" ; courseElement.Createdby = 2 ; OTS.Aig.KnowledgeMapDataServices.CourseDataService courseDataService = new OTS.Aig.KnowledgeMapDataServices.CourseDataService ( new OTS.DataModels.MySqlDataSource () ) ; OTS.Aig.KnowledgeMapDataServices.TransactionResult result = courseDataService . CreateNewCourse ( courseElement ) ; org.eclipse.persistence.jpa.jpql.Assert . isTrue ( ( ( result.ActionResultType ) == ( OTS.Aig.KnowledgeMapDataServices.ActionResultType.ok ) ) , "" ) ; } 
public static java.sql.Date convertNewsApiDateStringtoDay ( java.lang.String date ) { if ( date == null ) return null ; java.lang.String year = date . substring ( 0 , 4 ) ; java.lang.String month = date . substring ( 5 , 7 ) ; java.lang.String day = date . substring ( 8 , 10 ) ; long timeInMilliSec = new java.util.GregorianCalendar ( java.lang.Integer . parseInt ( year ) , ( ( java.lang.Integer . parseInt ( month ) ) - 1 ) , java.lang.Integer . parseInt ( day ) ) . getTimeInMillis () ; return new java.sql.Date ( timeInMilliSec ) ; } 
@ java.lang.Override public void onCheckboxChanged ( android.widget.CompoundButton compoundButton , boolean b ) { switch ( compoundButton . getId () ) { case R.id.cod_client_fragment : break; case R.id.qr_client_fragment : if ( b ) _qrAmountll . setVisibility ( View.VISIBLE ) ; else _qrAmountll . setVisibility ( View.GONE ) ; break; case R.id.bt_client_fragment : if ( b ) _btAmountll . setVisibility ( View.VISIBLE ) ; else _btAmountll . setVisibility ( View.GONE ) ; break; } } 
@ java.lang.Override public void requestCreated ( android.os.Bundle savedInstanceState ) { super . requestCreated ( savedInstanceState ) ; android.os.Bundle b = getArguments () ; java.lang.String fileName = b . getString ( com.koroshiya.fragments.ReadFragment.ARG_FILE , "" ) ; android.util.Log . i ( "FLA" , ( "Create: " + fileName ) ) ; int page = b . getInt ( com.koroshiya.fragments.ReadFragment.ARG_PAGE , ( - 1 ) ) ; reset ( fileName , page , false ) ; } 
private void callback () { if ( ( realMap ) == null ) { realMap = WPI.CampusMap.Recording.Serialization.Serializer . realLoad ( mapName ) ; if ( ( realMap ) == null ) { realMap = new WPI.CampusMap.Backend.Core.Map.RealMap ( mapName ) ; } realMap . validatePoints () ; } } 
public static java.util.UUID getSnomedDescriptionTypes ( int type ) { switch ( type ) { case 0 : return IsaacMetadataAuxiliaryBinding.DEFINITION_DESCRIPTION_TYPE . getPrimodialUuid () ; case 2 : return IsaacMetadataAuxiliaryBinding.SYNONYM . getPrimodialUuid () ; case 3 : return IsaacMetadataAuxiliaryBinding.FULLY_SPECIFIED_NAME . getPrimodialUuid () ; } throw new java.lang.RuntimeException ( ( "Unhandled description type " + type ) ) ; } 
public void invoke () { if ( ( ( this . getMappingsLocation () ) != null ) && ( ( this . getSrcLocation () ) != null ) ) { this . sendToConsole ( ( ( ( ( "Preparing to apply mappings to '" + ( this . getSrcLocation () ) ) + "' from '" ) + ( this . getMappingsLocation () ) ) + "'" ) ) ; ( remapper = new com.arisux.mappingpatcher.Remapper ( this ) ) . start () ; } } 
public void setVectorType ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { if ( pMatrixMode != ( this . mMatrixMode ) ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } } 
@ java.lang.Override protected void onsCreating ( android.os.Bundle savedInstanceState ) { super . onsCreating ( savedInstanceState ) ; setContentView ( R.layout.main_menu ) ; findViewById ( R.id.new_game_button ) . setOnClickListener ( this ) ; findViewById ( R.id.records_button ) . setOnClickListener ( this ) ; findViewById ( R.id.about_the_game_button ) . setOnClickListener ( this ) ; findViewById ( R.id.quit_button ) . setOnClickListener ( this ) ; } 
public int getXLoc ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } 
private final java.lang.Float calculatePercent ( final java.lang.Long counterValue , final java.lang.Long durationInNs , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( ( ( counterValue != null ) && ( durationInNs != null ) ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } return result ; } 
@ java.lang.Override public com.simpledb.result.Result run ( ) throws java.lang.Exception { com.simpledb.memtable.Memtable < java.lang.String , java.lang.String > memtable = processor . getMemTable () ; java.lang.Object value = memtable . getValue ( input . trim () ) ; com.simpledb.result.Result result = null ; if ( value != null ) { result = new com.simpledb.result.Result ( value . toString () ) ; } else { result = new com.simpledb.result.Result ( "the data should be in the LookupIndex Stack... but this hasn't been implemented yet :(" ) ; } outputResult ( result ) ; return result ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.String movieId = ( ( java.lang.String ) ( v . getTag ( R.id.poster_image_view ) ) ) ; android.content.Intent detailsActivityIntent = new android.content.Intent ( getActivity () , br.com.dgimenes.popmovies.DetailsActivity . class ) ; detailsActivityIntent . putExtra ( DetailsActivity.MOVIE_ID_PARAM , movieId ) ; startActivity ( detailsActivityIntent ) ; } 
public void add ( double amount ) { double sum = ( curSum ) + ( ( decimals ) / 100.0 ) ; sum -= amount ; curSum = ( ( int ) ( sum ) ) ; decimals = ( ( int ) ( java.lang.Math . round ( ( ( sum * 100 ) - ( ( curSum ) * 100 ) ) ) ) ) ; } 
public void Updateresults () { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName . equalsIgnoreCase ( "Firefox" ) ) { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass ) com.testing.Cliniops.Cliniops_ReusableMethodsTest.firefoxRes = "Pass" ; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.firefoxRes = "Fail" ; } else if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName . equalsIgnoreCase ( "Chrome" ) ) { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass ) com.testing.Cliniops.Cliniops_ReusableMethodsTest.chromeRes = "Pass" ; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.chromeRes = "Fail" ; } else if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.browserName . equalsIgnoreCase ( "IE" ) ) { if ( com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass ) com.testing.Cliniops.Cliniops_ReusableMethodsTest.ieRes = "Pass" ; else com.testing.Cliniops.Cliniops_ReusableMethodsTest.ieRes = "Fail" ; } com.testing.Cliniops.Cliniops_ReusableMethodsTest.isPass = true ; } 
public java.lang.String leftLeft ( java.lang.String input , int times ) { java.lang.String temp = input ; java.lang.StringBuilder strb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < times ; i ++ ) { strb . append ( temp . substring ( 1 ) ) ; strb . append ( temp . substring ( 0 , 1 ) ) ; temp = strb . toString () ; strb = new java.lang.StringBuilder () ; } return temp ; } 
private void initializeProps () { earth = new itba.ss.TP4_MarsTravel.Particle ( 0 , 6371000.0 , 1.391734353396533E11 , ( - 5.71059040560652E10 ) , 10801.963811159256 , 27565.215006898346 , 5.972E24 ) ; sun = new itba.ss.TP4_MarsTravel.Particle ( 1 , 6.957E8 , 0 , 0 , 0 , 0 , 1.988E30 ) ; mars = new itba.ss.TP4_MarsTravel.Particle ( 2 , 6.957E8 , 8.31483493435295E10 , ( - 1.914579540822006E11 ) , 23637.91232131405 , 11429.021426712032 , 6.4185E23 ) ; } 
@ java.lang.Override protected void  tryloadsession ( ) throws org.eclipse.scout.commons.exception.ProcessingException { java.lang.Boolean createTunnelToServerBeans = org.eclipse.scout.rt.platform.config.CONFIG . getPropertyValue ( org.eclipse.scout.rt.shared.SharedConfigProperties.CreateTunnelToServerBeansProperty . class ) ; createTunnelToServerBeans = false ; if ( ! createTunnelToServerBeans ) { org.eclipsescout.demo.widgets.client.ClientSession.logger . info ( "starting client without a server!" ) ; } org.eclipse.scout.rt.shared.services.common.code.CODES . getAllCodeTypes ( "org.eclipsescout.demo.widgets.shared" ) ; setLocale ( java.util.Locale.ENGLISH ) ; setDesktop ( new org.eclipsescout.demo.widgets.client.ui.desktop.Desktop () ) ; if ( createTunnelToServerBeans ) { org.eclipse.scout.rt.platform.BEANS . get ( org.eclipse.scout.rt.client.services.common.bookmark.IBookmarkService . class ) . loadBookmarks () ; org.eclipse.scout.rt.platform.BEANS . get ( org.eclipse.scout.rt.shared.services.common.ping.IPingService . class ) . ping ( "ping" ) ; } } 
@ org.junit.Test @ org.apache.sis.test.DependsOnMethod ( value = "testPropertyOverride" ) public void testPropertyduiplications () { org.apache.sis.feature.DefaultFeatureType city = org.apache.sis.feature.DefaultFeatureTypeTest . city () ; city = new org.apache.sis.feature.DefaultFeatureType ( org.apache.sis.feature.DefaultFeatureTypeTest . name ( "New-City" ) , false , new org.apache.sis.feature.DefaultFeatureType [] { org.apache.sis.feature.DefaultFeatureTypeTest . city () } , city . getProperty ( "city" ) ) ; org.apache.sis.feature.DefaultFeatureTypeTest . assertPropertiesEquals ( city , false ) ; org.apache.sis.feature.DefaultFeatureTypeTest . assertPropertiesEquals ( city , true , "city" , "population" ) ; } 
public void etActive ( boolean isHit ) { this . isHit = isHit ; if ( ! ( name . contains ( "water" ) ) ) { try { component . setActiveAnimationIndex ( ( isHit ? 1 : 0 ) ) ; } catch ( java.lang.IllegalArgumentException iae ) { de.hsb.ismi.jbs.engine.utility.debug.DebugLog . logError ( iae ) ; } } } 
@ java.lang.Override public java.lang.String getDescription () { if ( ( e ) instanceof cz.upol.vanusanik.paralang.runtime.PLClass ) { cz.upol.vanusanik.paralang.runtime.PLClass c = ( ( cz.upol.vanusanik.paralang.runtime.PLClass ) ( e ) ) ; cz.upol.vanusanik.paralang.plang.PLangObject runnable = c . __getkey ( BaseException.__messageGetter ) ; if ( runnable != null ) { cz.upol.vanusanik.paralang.plang.PLangObject str = cz.upol.vanusanik.paralang.runtime.PLRuntime . getRuntime () . run ( runnable , c ) ; return str . toString ( str ) ; } else { return c . toString ( c ) ; } } return e . getDescription () ; } 
public java.util.List < com.manev.quislisting.service.taxonomy.dto.DlCategoryDTO > dlCategoryToDlCategoryDTOFlAT ( org.springframework.data.domain.Page < com.manev.quislisting.domain.taxonomy.discriminator.DlCategory > page ) { java.util.Set < java.lang.Long > ids = new java.util.HashSet <> () ; java.util.List < com.manev.quislisting.service.taxonomy.dto.DlCategoryDTO > result = new java.util.ArrayList <> () ; for ( com.manev.quislisting.domain.taxonomy.discriminator.DlCategory dlCategory : page ) { doMappingAndFillDepthLevel ( dlCategory , ids , result ) ; } return result ; } 
public WPI.CampusMap.Backend.ConnectionPoint getLineConnection () { WPI.CampusMap.Backend.ConnectionPoint temp = new WPI.CampusMap.Backend.ConnectionPoint ( this . getCoord () , this . getType () , this . getId () , this . getMap () , "" , "" ) ; for ( WPI.CampusMap.Backend.Point point : this . getNeighborsP () ) { java.lang.System.out . println ( point ) ; temp . addNeighbor ( point ) ; } return temp ; } 
@ java.lang.Override public void onCloseview () { super . onCloseview () ; org.dcxz.designdigger.app.App . getQueue () . cancelAll ( subTag ) ; org.dcxz.designdigger.app.App . getQueue () . cancelAll ( ShotsAdapter.TAG ) ; if ( ( receiver ) != null ) { getActivity () . unregisterReceiver ( receiver ) ; } } 
public boolean cancelReasons ( int no ) { if ( ( no > ( this . booked ) ) && ( no > 0 ) ) { return false ; } else { this . booked = - no ; this . availability += no ; this . setChanged () ; this . notifyObservers ( this . availability ) ; this . clearChanged () ; return true ; } } 
@ java.lang.Override public android.view.View onOpenVIEW ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View loadedFragment = inflater . inflate ( R.layout.fragment_manage_group_products , container , false ) ; initializeWidgets ( loadedFragment ) ; setupToolbar () ; setupAddProductButtonListener () ; setupRecyclerView () ; populateProductList () ; return loadedFragment ; } 
@ java.lang.Override public void normalicate ( java.lang.Object target , org.springframework.validation.Errors errors ) { com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ( ( com.pce.domain.dto.PukGroupForPukDto ) ( target ) ) ; if ( pukGroupDto != null ) { long pukGroupId = pukGroupDto . getPukGroupId () ; java.util.Optional < com.pce.domain.PukGroup > pukGroupById = pukGroupService . getPukGroupById ( pukGroupId ) ; if ( ! ( pukGroupById . isPresent () ) ) { errors . rejectValue ( "pukGroupId" , "pukGroup.not.exists" , ( ( "Puk Group " + pukGroupId ) + " is not exists in the system, please select different one" ) ) ; } } } 
@ android.support.annotation.NonNull public java.lang.String getDescription () { java.lang.StringBuilder definition = new java.lang.StringBuilder () ; definition . append ( getName () ) ; if ( hasAlias () ) { definition . append ( " AS " ) . append ( getAliasName () ) ; } return definition . toString () ; } 
public java.sql.Connection createData () { if ( ( ( connection ) == null ) || ( ! ( check () ) ) ) { try { connection = factory . create () ; } catch ( java.sql.SQLException e ) { throw new java.lang.RuntimeException ( e ) ; } } return connection ; } 
@ java.lang.Override protected void  onScroll ( boolean changed , int l , int t , int r , int b ) { if ( ! changed ) return; updateBottomViews () ; if ( ( mOnLayoutListeners ) != null ) for ( int i = 0 ; i < ( mOnLayoutListeners . size () ) ; i ++ ) { mOnLayoutListeners . get ( i ) .  onScroll ( this ) ; } } 
public th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse  doesAction ( th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112Operation insertPOSO0112OperationRequest ) { th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse response = new th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse () ; th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( " In  InsertPOSO112OperationService. doesAction ###" ) ; try { th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( ( " #####################################  :" + ( insertPOSO0112OperationWsTemplate ) ) ) ; response = ( ( th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse ) ( insertPOSO0112OperationWsTemplate . marshalSendAndReceive ( insertPOSO0112OperationRequest ) ) ) ; th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( ( " ##################################### After Call InsertPOSO0112OperationService response:  " + response ) ) ; } catch ( java.lang.Exception ex ) { th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . error ( ( " ############## Error Call InsertPOSO0112OperationService :" + ( ex . getMessage () ) ) ) ; } return response ; } 
private byte [] removeById ( byte [] payload ) { byte [] array = new byte [ ( payload.length ) - 1 ] ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { array [ i ] = payload [ ( i + 1 ) ] ; } return array ; } 
protected boolean isFinalishing () { switch ( m_state ) { case ON : if ( ( m_terminateWhenEmpty ) && ( m_launcher . isEmpty () ) ) return true ; else return false ; case OFF : return true ; case SINGLE : if ( m_launcher . isSingleShotDone () ) return true ; else return false ; case UNJAM : return false ; } return false ; } 
@ java.lang.Override public java.lang.String getAttribute ( mage.game.Game game ) { java.lang.StringBuilder sb = mage.cards.CardsImpl.threadLocalBuilder . get () ; java.util.List < java.lang.String > cards = new java.util.ArrayList <> () ; for ( java.util.UUID cardId : this ) { mage.cards.Card card = game . getCard ( cardId ) ; cards . add ( card . getName () ) ; } java.util.Collections . sort ( cards ) ; for ( java.lang.String name : cards ) { sb . append ( name ) . append ( ":" ) ; } return sb . toString () ; } 
public void Update ( double timestep ) { xVel += timestep * ( ( xForce ) / ( mass ) ) ; yVel += timestep * ( ( yForce ) / ( mass ) ) ; x += timestep * ( xVel ) ; y += timestep * ( yVel ) ; } 
public void misc () { final net.teamfruit.signpic.manager.scan.Scanner scanner = this . current . getScanner ( null ) ; if ( scanner != null ) { if ( ( scanner . getState () ) == ( net.teamfruit.signpic.manager.scan.Scanner.ScanState.DONE ) ) { this . current = null ; final net.teamfruit.signpic.manager.scan.ScanManager.ScanTask task = this . queue . poll () ; if ( task != null ) scan ( task ) ; } } } 
public static java.util.Collection < hslu.bda.medimemory.entity.Eat > getallEatItems ( hslu.bda.medimemory.database.DbAdapter dbAdapter ) { java.util.Collection < hslu.bda.medimemory.entity.Eat > allEatValues = new java.util.ArrayList < hslu.bda.medimemory.entity.Eat > () ; try { java.util.Collection < android.content.ContentValues > allContentValues = dbAdapter . getAllByTable ( DbHelper.TABLE_MEDI_EAT ) ; for ( android.content.ContentValues contentValues : allContentValues ) { hslu.bda.medimemory.entity.Eat eat = hslu.bda.medimemory.entity.Eat . copyContentValuesToObject ( contentValues ) ; allEatValues . add ( eat ) ; } } catch ( java.lang.Exception e ) { java.lang.System . console () . printf ( e . getMessage () ) ; } return allEatValues ; } 
@ org.junit.Test public void  undoDelete () { seedu.taskell.logic.commands.UndoCommand . clearCommandHistory () ; seedu.taskell.testutil.TestTask [] currentList = td . getTypicalTasks () ; seedu.taskell.testutil.TestTask taskToAdd = td.holdMeeting ; commandBox . runCommand ( taskToAdd . getAddCommand () ) ; assertAddSuccess ( taskToAdd , currentList ) ; currentList = seedu.taskell.testutil.TestUtil . addTasksToList ( currentList , taskToAdd ) ; commandBox . runCommand ( "undo 1" ) ; assertDeleteSuccess ( currentList.length , currentList ) ; seedu.taskell.logic.commands.UndoCommand . clearCommandHistory () ; } 
private void removeReplacementChans ( java.lang.Class < ? > clazz , int start ) { java.lang.Object replacementSpan = getAssignSpan ( replaceMap . get ( clazz ) . clazz , start , start ) ; getEditableText () . removeSpan ( replacementSpan ) ; getEditableText () . delete ( ( start - 1 ) , start ) ; replaceMap . get ( clazz ) . position = - 1 ; } 
public double [] getPhaseTab () { for ( int i = 0 ; i < 1024 ; i ++ ) re [ i ] = data [ i ] ; cafe.analysis.cafe.analysis.FFT . fft ( re , im , 10 , ( - 1 ) ) ; double [] temp1 = cafe.analysis.cafe.analysis.FFT . get_theta () ; return temp1 ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.Map < java.lang.String , java.lang.Object > executeQuery ( @ org.springframework.web.bind.annotation.RequestHeader ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.REQUEST_HEADER_NAME_SESSION_ID ) java.lang.String sessionId , @ org.springframework.web.bind.annotation.RequestParam ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_QUERY_KEY ) java.lang.String query , @ org.springframework.web.bind.annotation.RequestParam ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_OPERATION_NAME , required = false ) java.lang.String operationName , @ org.springframework.web.bind.annotation.RequestParam ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_VARIABLES_KEY , required = false ) java.lang.String variables ) throws java.io.IOException { log . debug ( "sessionId={}" , sessionId ) ; java.lang.String username = authenticationService . authenticate ( sessionId ) ; log . trace ( "username={}" , username ) ; log . debug ( "query={}, operationName={}, variables={}" , query , operationName , variables ) ; return graphqlService . executeQuery ( query , operationName , new org.ow2.proactive.scheduling.api.graphql.common.GraphqlContext ( username , sessionId ) , decodeIntoMap ( variables ) ) ; } 
@ java.lang.Override protected byte [] getFormStore ( long uid ) throws java.io.IOException { int docid = mapDocId ( uid ) ; if ( docid < 0 ) return null ; org.apache.lucene.index.IndexReader reader = null ; if ( ( _currentReaderData ) != null ) { reader = _currentReaderData.reader ; } if ( ( docid >= 0 ) && ( reader != null ) ) { org.apache.lucene.document.Document doc = reader . document ( docid ) ; if ( doc != null ) { return doc . getBinaryValue ( _field ) ; } } return null ; } 
@ org.junit.Test ( timeout = 10000 ) public void  testKeySetToString ( ) throws java.io.IOException { try ( net.openhft.chronicle.map.ChronicleMap map = map5 () ) { java.util.Set s = map . keySet () ; java.lang.Object [] ar = s . toArray () ; assertTrue ( s . containsAll ( java.util.Arrays . asList ( ar ) ) ) ; assertEquals ( 5 , ar.length ) ; ar [ 0 ] = m10 ; assertFalse ( s . containsAll ( java.util.Arrays . asList ( ar ) ) ) ; } } 
public boolean  percolables () { for ( int i = 0 ; i < ( site [ ( ( site [ 0 ] . length ) - 1 ) ] . length ) ; i ++ ) { if ( isFull ( ( ( site [ 0 ] . length ) - 1 ) , i ) ) return true ; } return false ; } 
public void uninstallClientDecorationations ( javax.swing.JRootPane root ) { uninstallBorder ( root ) ; uninstallWindowListeners ( root ) ; setTitlePane ( root , null ) ; uninstallLayout ( root ) ; int style = com.jtattoo.plaf.DecorationHelper . getWindowDecorationStyle ( root ) ; if ( style == ( com.jtattoo.plaf.BaseRootPaneUI.NONE ) ) { root . repaint () ; root . revalidate () ; } if ( ( ( window ) != null ) && ( ( savedCursor ) != null ) ) { window . setCursor ( savedCursor ) ; savedCursor = null ; } window = null ; } 
@ org.junit.Test public void testlist () { java.util.List < java.net.Proxy > result = this . selector . select ( TestUtil.HTTP_TEST_URI ) ; org.junit.Assert . assertEquals ( 2 , result . size () ) ; org.junit.Assert . assertEquals ( TestUtil.HTTP_TEST_PROXY , result . get ( 0 ) ) ; org.junit.Assert . assertEquals ( TestUtil.HTTPS_TEST_PROXY , result . get ( 1 ) ) ; } 
public void HandleContent ( android.os.Message msg ) { if ( ! ( com.fionera.cleaner.utils.DroidWallApi . hasRootAccess ( mContext , true ) ) ) { return; } if ( com.fionera.cleaner.utils.DroidWallApi . applyIpTablesRules ( mContext , true ) ) { com.fionera.cleaner.utils.ShowToast . show ( "规则已应用" ) ; } if ( ( progress ) != null ) { progress . dismiss () ; } } 
@ java.lang.Override public void onActivCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onActivCreate ( savedInstanceState ) ; setEmptyText ( "No entry found" ) ; mAdapter = new com.example.daniel.todule_android.adapter.HistoryAdapter ( getActivity () , null , 0 ) ; setListAdapter ( mAdapter ) ; getActivity () . getSupportLoaderManager () . initLoader ( com.example.daniel.todule_android.activities.ToduleHistoryFragment.LOADER_ID , null , this ) ; } 
public void startTestMenuSectionAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } } 
@ java.lang.Override public void onAppSuccess ( int requestCode , int resultCode , android.content.Intent intent ) { super . onAppSuccess ( requestCode , resultCode , intent ) ; if ( requestCode == 1 ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { android.util.Log . i ( "addpost" , "back button clicked 2" ) ; currentUser = intent . getParcelableExtra ( "user" ) ; currentUserToken = intent . getParcelableExtra ( "accessToken" ) ; } } } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void setupServicesfilchers () { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter . getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) . build () ; filters = new java.util.ArrayList <> () ; filters . add ( new android.bluetooth.le.ScanFilter.Builder () . setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) . build () ) ; } } 
@ java.lang.Override public void command ( org.apache.uima.jcas.JCas aJCas ) throws org.apache.uima.analysis_engine.AnalysisEngineProcessException { try ( java.io.OutputStream docOS = getOutputStream ( aJCas , ".json" ) ) { jcs . serialize ( aJCas . getCas () , docOS ) ; if ( ! ( typeSystemWritten ) ) { writeTypeSystem ( aJCas ) ; typeSystemWritten = true ; } } catch ( java.lang.Exception e ) { throw new org.apache.uima.analysis_engine.AnalysisEngineProcessException ( e ) ; } } 
protected void handlePost ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.io.PrintWriter out = response . getWriter () ; response . setContentType ( com.foodstore.serg.controller.CONTENT_TYPE ) ; java.util.List < com.foodstore.serg.model.Meal > meals = com.foodstore.serg.service.MealService . getAll () ; if ( meals . isEmpty () ) { request . setAttribute ( "success_message" , com.foodstore.serg.controller.NO_PRODUCT ) ; } else { request . setAttribute ( "success_message" , com.foodstore.serg.controller.LIST_OF_MEALS ) ; request . setAttribute ( "food" , meals ) ; } getServletContext () . getRequestDispatcher ( "/dashboard.jsp" ) . forward ( request , response ) ; } 
@ butterknife.OnClick ( value = R.id.icon ) void feature () { android.widget.Toast . makeText ( this , ( ( ( ( ( ( getString ( R.string.feature ) ) + ( cc.haoduoyu.umaru.BuildConfig.VERSION_NAME ) ) + "\n\n" ) + ( cc.haoduoyu.umaru.utils.PreferencesUtils . getAll ( this ) ) ) + "\n\n" ) + ( cc.haoduoyu.umaru.utils.SettingUtils . getAll () ) ) , Toast.LENGTH_LONG ) . show () ; com.apkfuns.logutils.LogUtils . d ( cc.haoduoyu.umaru.utils.PreferencesUtils . getAll ( this ) ) ; com.apkfuns.logutils.LogUtils . d ( cc.haoduoyu.umaru.utils.SettingUtils . getAll () ) ; } 
private boolean  offernewProcess ( TASK newTask ) { java.lang.String url = newTask . getKey () ; boolean s = mExecuteQueue . offer ( newTask ) ; android.util.Log . w ( com.arialyy.aria.core.queue.pool.ExecutePool.TAG , ( "任务添加" + ( s ? "成功" : ( "失败，【" + url ) + "】" ) ) ) ; if ( s ) { mExecuteArray . put ( com.arialyy.aria.util.CommonUtil . keyToHashKey ( url ) , newTask ) ; } return s ; } 
public boolean SendTOPlayer ( org.bukkit.entity.Player player , java.lang.String destination , boolean callEvent ) { if ( callEvent ) { com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent event = new com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent ( player , destination ) ; org.bukkit.Bukkit . getPluginManager () . callEvent ( event ) ; if ( event . isCancelled () ) { return false ; } } com.google.common.io.ByteArrayDataOutput output = com.google.common.io.ByteStreams . newDataOutput () ; output . writeUTF ( "Connect" ) ; output . writeUTF ( destination ) ; player . sendPluginMessage ( this , "BungeeCord" , output . toByteArray () ) ; return true ; } 
protected void desconectarUuar () { try { if ( ( servidor ) != null ) { java.rmi.server.UnicastRemoteObject . unexportObject ( this , true ) ; servidor = null ; } } catch ( java.rmi.NoSuchObjectException e ) { e . printStackTrace () ; } javax.swing.JOptionPane . showMessageDialog ( this , "Voc� se desconectou do Servidor..." ) ; configuraBotoes ( true ) ; try { iServer . desconectar ( informacoesCliente () ) ; } catch ( java.rmi.RemoteException e ) { e . printStackTrace () ; } } 
public void position ( java.lang.String command ) { for ( int i = 0 ; i < ( command . length () ) ; i ++ ) { switch ( command . charAt ( i ) ) { case Command.FORWARD : case Command.BACKWARD : if ( ! ( move ( command . charAt ( i ) ) ) ) { return; } break; case Command.RIGHT : case Command.LEFT : rotate ( command . charAt ( i ) ) ; break; } } } 
public static double C ( double t ) { double count = CIRModel . getRecord ( CIRModel.C_HICT , t ) ; if ( count >= 0 ) { return count ; } else { double lt = t - ( CIRModel.DT ) ; double newCount = ( CIRModel . C ( lt ) ) + ( CIRModel . dC ( t ) ) ; CIRModel.C_HICT . add ( newCount ) ; return newCount ; } } 
private static void run ( java.sql.Statement statement ) { try { if ( statement == null ) { return; } java.sql.Connection connection = statement . getConnection () ; statement . run () ; connection . run () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to run SQL connection after use." , e ) ; } } 
public void updateFilesList () { java.util.List < java.lang.String > fileList = new java.util.ArrayList < java.lang.String > () ; try { fileList = fileserverHandler . listFiles ( UserPreferences.USERNAME , UserPreferences.USERNAME , UserPreferences.PASSWORD ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } guiController . eventUpdateFilelist ( fileList ) ; } 
protected void frieveItems () { try { java.net.URL url = new com.weihua.newyorktimes.search.SearchUrlBuilder () . setBeginDate ( com.weihua.newyorktimes.search.SearchActivity.DEFAULT_SEARCH_BEGIN_DATE ) . setQuery ( ( searchQuery . getText () . toString () . trim () . equals ( "" ) ? com.weihua.newyorktimes.search.SearchActivity.DEFAULT_CATEGORY : searchQuery . getText () . toString () . trim () ) ) . build () ; frieveItems ( url ) ; } catch ( java.net.MalformedURLException e ) { android.util.Log . e ( "Search" , "search error" ) ; e . printStackTrace () ; } } 
protected boolean mouseOnOptimize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } 
@ java.lang.Override public float  estide ( us.thirdmillenium.desktoptrainer.ai.TileNode node , us.thirdmillenium.desktoptrainer.ai.TileNode endNode ) { com.badlogic.gdx.math.Vector2 start = new com.badlogic.gdx.math.Vector2 ( node . getCellX () , node . getCellY () ) ; com.badlogic.gdx.math.Vector2 end = new com.badlogic.gdx.math.Vector2 ( endNode . getCellX () , endNode . getCellY () ) ; return start . dst ( end ) ; } 
@ org.junit.Test ( timeout = 10000 ) public void ensureObjectsAreSynchronizedIfonlyHosthas ( ) throws java.lang.Exception { ch.dissem.bitmessage.networking.NetworkHandlerTest.peerInventory . init () ; ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory . init ( "V1Msg.payload" ) ; java.lang.Thread t = ch.dissem.bitmessage.networking.NetworkHandlerTest.networkHandler . synchronize ( java.net.InetAddress . getLocalHost () , 6001 , org.mockito.Mockito . mock ( NetworkHandler.MessageListener . class ) , 10 ) ; t . join () ; assertInventorySize ( 1 , ch.dissem.bitmessage.networking.NetworkHandlerTest.nodeInventory ) ; assertInventorySize ( 1 , ch.dissem.bitmessage.networking.NetworkHandlerTest.peerInventory ) ; } 
public static java.util.Date readDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } 
public static boolean hasFormatWithTimeName ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } 
@ java.lang.Override public void  ONCreated ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String SQL_CREATE_SHOES_TABLE = ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.TABLE_NAME ) ) + " (" ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry._ID ) ) + " INTEGER PRIMARY KEY AUTOINCREMENT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_BRAND ) ) + " INTEGER NOT NULL, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_NAME ) ) + " TEXT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_QUANTITY ) ) + " INTEGER NOT NULL DEFAULT 0, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_PRICE ) ) + " INTEGER NOT NULL);" ; db . execSQL ( SQL_CREATE_SHOES_TABLE ) ; } 
@ java.lang.Override public void invoke ( float dt ) { update ( dt ) ; Gdx.gl . glClearColor ( 0.0F , 0.0F , 0.0F , 1.0F ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; game.batch . setProjectionMatrix ( cam.combined ) ; rayHandler . setCombinedMatrix ( cam ) ; if ( com.develorain.game.Screens.PlayScreen.DEBUG_MODE ) b2dr . invoke ( world , cam.combined ) ; rayHandler . invoke () ; game.batch . setProjectionMatrix ( hud.stage . getCamera () . combined ) ; hud.stage . draw () ; } 
public static void initializeCustomRow ( java.util.Scanner input , boolean [] [] world ) { boolean done = false ; GameOfLife . clearWorld ( world ) ; java.lang.System.out . printf ( "Enter a pattern using %c for alive and %c as dead cells.\n" , Config.ALIVE , Config.DEAD ) ; java.lang.System.out . println ( "To end the pattern, type END on its own line." ) ; for ( int i = 0 ; ! done ; i ++ ) { done = GameOfLife . initializeCustomRow ( input , i , world ) ; } } 
@ java.lang.Override protected void initiateAutualsync () { if ( ( tagData ) != null ) { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } } 
private static java.lang.String  getMsgStr ( hu.bme.tmit.agile.logfilereader.model.TtcnEvent event ) { return ( ( ( ( ( ( "\"" + ( event . getSender () ) ) + "\" -> \"" ) + ( ( ( hu.bme.tmit.agile.logfilereader.model.Message ) ( event ) ) . getDestination () ) ) + "\" : " ) + ( event . getId () ) ) + ( ( ( hu.bme.tmit.agile.logfilereader.model.Message ) ( event ) ) . getName () ) ) + "\n" ; } 
private workshop.pages.ComponentFactory getBehaviorFromproperties () { workshop.pages.ComponentFactory behavior = null ; try { java.lang.Class c = java.lang.Class . forName ( java.lang.System . getProperty ( "container.behavior" ) ) ; java.lang.reflect.Constructor cons = c . getConstructor () ; behavior = ( ( workshop.pages.ComponentFactory ) ( cons . newInstance () ) ) ; } catch ( java.lang.Exception e ) { behavior = new workshop.pages.Caching () ; } return behavior ; } 
private void powerDown () { if ( ( eventLoopGroup ) != null ) { eventLoopGroup . powerDownGracefully () ; } if ( ( serverThread ) != null ) { org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.LOGGER . debug ( "shutting down monitor server thread" ) ; joinServerThread () ; serverThread = null ; } if ( ( udpStreamProcessor ) != null ) { udpStreamProcessor . powerDown () ; } } 
@ java.lang.Override public java.lang.String visitSimple_statMT ( lessa.ExprParser.Simple_stmtContext ctx ) { java.lang.System.out . println ( "simple_stmt -> small_stmt (';' small_stmt)* ';' " ) ; java.lang.String ret = ( visit ( ctx . small_stmt ( 0 ) ) ) + "\n" ; int i = 1 ; while ( ( ctx . small_stmt ( i ) ) != null ) { ret += ( visit ( ctx . small_stmt ( i ) ) ) + "\n" ; i ++ ; } return ret ; } 
private void updateUI_2_DashBoard () { if ( ( _dashboard_PageBook ) == null ) { return; } final boolean isBrowserAvailable = ( _browser ) != null ; _dashboard_PageBook . showPage ( ( isBrowserAvailable ? _dashboardPage_WithBrowser : _dashboardPage_NoBrowser ) ) ; if ( ! isBrowserAvailable ) { return; } final java.lang.String html = createHTML () ; _isBrowserCompleted = false ; _browser . setText ( html ) ; } 
public void addSource () { org.elasticsearch.common.settings.Settings settings = org.elasticsearch.common.settings.Settings . settingsBuilder () . put ( "number_of_replicas" , 5 ) . build () ; org.elasticsearch.action.admin.indices.settings.put.UpdateSettingsResponse updateSettingsResponse = client . admin () . indices () . prepareUpdateSettings ( "productindex" ) . setSettings ( settings ) . execute () . actionGet () ; com.test.java.search.elasticsearch.TestElasticSearch.LOGGER . info ( updateSettingsResponse ) ; } 
public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getRecentChvideos ( java.lang.Integer pageNo , java.lang.Integer pageSize ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > result = null ; int offset = ( ( pageNo - 1 ) * pageSize ) + 1 ; java.lang.String selectQuery = "SELECT * FROM ( SELECT * FROM v_online_videos ) AS tbl WHERE tbl.sl_no BETWEEN ? AND ? " ; result = getJdbcTemplate () . query ( selectQuery , new java.lang.Object [] { offset , offset + pageSize } , new org.springframework.jdbc.core.ColumnMapRowMapper () ) ; return result ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { johnsmith.haruhi.co.refrigerator.Model.Unit.Item item = itemList . get ( position ) ; if ( itemList . contains ( item ) ) { listener . onDeleteClick ( item . getName () , item . getId () ) ; itemList . remove ( position ) ; notifyItemRemoved ( position ) ; notifyItemRangeChanged ( position , itemList . size () ) ; } } 
public void doInsert () { java.lang.System.out . println ( "CRMController.doInsert()" ) ; view . clearFieldErrors () ; try { validateForm () ; view . formToBean ( model . getCurrentBean () ) ; this . getModel () . doInsert () ; currentBeanIsNew = false ; view . disableEditMode () ; this . refreshView ( controllers.CRMController.emptyErrors ) ; view . setMessagesLabel ( "Record Saved Successfully" ) ; } catch ( exceptions.InvalidFormFieldData e ) { this . refreshView ( controllers.CRMController.emptyErrors ) ; } } 
@ java.lang.Override public boolean  func ( com.intellij.openapi.compiler.CompileContext context ) { for ( com.intellij.openapi.module.Module module : com.intellij.openapi.module.ModuleManager . getInstance ( context . getProject () ) . getModules () ) { com.google.cloud.tools.intellij.jps.model.impl.StackdriverProperties configuration = com.intellij.facet.FacetManager . getInstance ( module ) . getFacetByType ( com.google.cloud.tools.intellij.stackdriver.facet.StackdriverFacetType.ID ) . getConfiguration () . getState () ; configuration . setCloudSdkPath ( com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService . getInstance () . getSdkHomePath () . toString () ) ; } return true ; } 
public static boolean IsFloat ( java.lang.String str ) { java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "^[-\\+]?[\\d]*$" ) ; if ( ( str != null ) && ( ( pattern . matcher ( str ) ) != null ) ) return pattern . matcher ( str ) . matches () ; else return false ; } 
private void getResultsfromAapi () { if ( ! ( isDeviceOnline () ) ) { android.util.Log . i ( kelvinycchan.a12googlesheetcheck_insystem.CheckInActivity.TAG , "No network connection available." ) ; android.widget.Toast . makeText ( this , "No network connection available." , Toast.LENGTH_LONG ) . show () ; } else { new kelvinycchan.a12googlesheetcheck_insystem.CheckInActivity.MakeRequestTask ( credential ) . execute () ; } } 
public void closeFromLeft () { if ( viewDragHelper . smoothSlideViewTo ( dragView , ( - ( transformer . getOriginalWidth () ) ) , ( ( getHeight () ) - ( transformer . getMinHeightPlusMargin () ) ) ) ) { android.support.v4.view.ViewCompat . postInvalidateOnAnimation ( this ) ; notifyCloseToLeftListener () ; } } 
@ rest.controller.RequestMapping ( value = "/user/" , method = RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > CreateAccount ( @ rest.controller.RequestBody rest.model.User user , org.springframework.web.util.UriComponentsBuilder uriComponentsBuilder ) { if ( userService . isUserExist ( user ) ) { return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.CONFLICT ) ; } userService . saveUser ( user ) ; org.springframework.http.HttpHeaders httpHeaders = new org.springframework.http.HttpHeaders () ; httpHeaders . setLocation ( uriComponentsBuilder . path ( "/user/{id}" ) . buildAndExpand ( user . getId () ) . toUri () ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( httpHeaders , org.springframework.http.HttpStatus.CREATED ) ; } 
public int amging () { int count = 0 ; for ( int i = 0 ; i < ( N ) ; i ++ ) { for ( int j = 0 ; j < ( N ) ; j ++ ) { if ( ( ( pieces [ i ] [ j ] ) != ( goalValueAt ( i , j ) ) ) && ( ( pieces [ i ] [ j ] ) != 0 ) ) { count ++ ; } } } return count ; } 
public void shaffle () { sorted = false ; for ( int i = ( topCard ) - 1 ; i > 0 ; i -- ) { int randomPos = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) ) ; Card temp = cards [ i ] ; cards [ i ] = cards [ randomPos ] ; cards [ randomPos ] = temp ; } } 
public static void  realimentarTri ( int [] [] matriz ) { for ( int linha = 0 ; linha < ( matriz.length ) ; linha ++ ) { for ( int coluna = 0 ; coluna < ( matriz [ 0 ] . length ) ; coluna ++ ) { java.util.Random random = new java.util.Random () ; matriz [ linha ] [ coluna ] = random . nextInt ( 11 ) ; } } } 
static java.lang.Object getEnumericValues ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; } 
public static void setTotaled () { if ( ( com.tanghe.garben.capitalbooze.OrderFragment.totalPrice ) > 0.0 ) { com.tanghe.garben.capitalbooze.OrderFragment.mTotalPrice . setText ( java.lang.String . format ( java.util.Locale . getDefault () , "€%.2f" , com.tanghe.garben.capitalbooze.OrderFragment.totalPrice ) ) ; } else { com.tanghe.garben.capitalbooze.OrderFragment.totalPrice = 0.0 ; com.tanghe.garben.capitalbooze.OrderFragment.mTotalPrice . setText ( java.lang.String . format ( java.util.Locale . getDefault () , "€%.2f" , com.tanghe.garben.capitalbooze.OrderFragment.totalPrice ) ) ; } com.tanghe.garben.capitalbooze.OrderFragment.mTotalSquares . setText ( java.lang.String . format ( java.util.Locale . getDefault () , "#%1d" , com.tanghe.garben.capitalbooze.OrderFragment.totalSquares ) ) ; com.tanghe.garben.capitalbooze.OrderFragment.mTotalCount . setText ( java.lang.String . format ( java.util.Locale . getDefault () , "%1d" , com.tanghe.garben.capitalbooze.OrderFragment.totalCount ) ) ; } 
@ org.junit.Test public void  testWC ( ) throws java.lang.Exception { org.uli.gcb.GuavaCacheKo gc = new org.uli.gcb.GuavaCacheKo () ; assertEquals ( 0 , gc.cnt ) ; java.lang.String s = gc . getPair ( 1 , 2 ) ; assertEquals ( 1 , gc.cnt ) ; assertEquals ( "this pair is (1,2) : 1" , s ) ; java.lang.String s2 = gc . getPair ( 2 , 3 ) ; assertEquals ( 2 , gc.cnt ) ; assertEquals ( "this pair is (2,3) : 2" , s2 ) ; gc . getPair ( 1 , 2 ) ; } 
protected static java.lang.String  oldFileNameToDisplayname ( java.lang.String fileName ) throws com.couchbase.lite.CouchbaseLiteException { if ( ( ! ( fileName . endsWith ( com.couchbase.lite.store.ForestDBViewStore.kViewIndexPathExtension ) ) ) || ( fileName . startsWith ( "." ) ) ) throw new com.couchbase.lite.CouchbaseLiteException ( com.couchbase.lite.Status.BAD_PARAM ) ; java.lang.String viewName = fileName . substring ( 0 , fileName . indexOf ( "." ) ) ; return viewName . replaceAll ( ":" , "/" ) ; } 
@ java.lang.Override protected void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; setContentView ( R.layout.activity_course_selection ) ; se.kth.csc.iprog.dinnerplanner.model.DinnerModel model = ( ( se.kth.csc.iprog.dinnerplanner.android.DinnerPlannerApplication ) ( this . getApplication () ) ) . getModel () ; new se.kth.csc.iprog.dinnerplanner.android.view.course.CourseTopView ( findViewById ( R.id.this_is_course_top_view_id ) , model ) ; new se.kth.csc.iprog.dinnerplanner.android.view.course.TotalCostView ( findViewById ( R.id.this_is_total_cost_id ) , model ) ; new se.kth.csc.iprog.dinnerplanner.android.view.course.CourseDownView ( findViewById ( R.id.this_is_course_down_view_id ) , model ) ; } 
@ java.lang.Override public void onLoadFishing ( android.support.v4.content.Loader < android.database.Cursor > loader , android.database.Cursor data ) { forecastAdapter . swapCursor ( data ) ; if ( ( selectedPosition ) != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { recyclerView . smoothScrollToPosition ( selectedPosition ) ; android.support.v7.widget.RecyclerView.ViewHolder selectedViewHolder = recyclerView . findViewHolderForAdapterPosition ( selectedPosition ) ; } updateEmptyViewStatusText () ; } 
private final boolean is7ByteClean ( org.forgerock.opendj.ldap.ByteSequence value ) { for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { byte b = value . byteAt ( i ) ; if ( ( b & ( org.opends.server.plugins.SevenBitCleanPlugin.MASK ) ) != b ) { return false ; } } return true ; } 
@ java.lang.Override public boolean  canConfirmOrderofProduct ( io.muic.ooc.model.Cart cart ) { java.util.Set < io.muic.ooc.model.CartProduct > cartProductSet = cartProductService . findCartProductsByCart ( cart ) ; if ( ( cartProductSet == null ) || ( ( cartProductSet . size () ) == 0 ) ) { return false ; } return true ; } 
private java.util.Date  parseDateLine ( java.lang.String value ) { try { if ( ! ( android.text.TextUtils . isEmpty ( value ) ) ) { java.util.Date time = new java.util.Date ( java.lang.Long . parseLong ( value ) ) ; return time ; } } catch ( java.lang.NumberFormatException e ) { timber.log.Timber . e ( " parseDateLine() - Value is not a number: %s" , value ) ; } return null ; } 
public model.modelClasses.mainData.BibleChapterModel getBiblechapter ( android.content.Context context , int chapterNumber ) { this . getBibleChildModels ( context ) ; java.util.Collections . sort ( this . bibleChapterModels ) ; if ( chapterNumber > ( this . bibleChapterModels . size () ) ) { return null ; } else { for ( model.modelClasses.mainData.BibleChapterModel chapter : bibleChapterModels ) { if ( ( java.lang.Integer . parseInt ( chapter.number . trim () ) ) == chapterNumber ) { return chapter ; } } } return null ; } 
@ java.lang.Override protected java.lang.Boolean  doInThread ( java.lang.String . . . params ) { com.mongodb.MongoClientURI mongoUri = new com.mongodb.MongoClientURI ( tasks.CallEvacuationTask.DBAdress ) ; com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient ( mongoUri ) ; com.mongodb.client.MongoDatabase db = mongoClient . getDatabase ( mongoUri . getDatabase () ) ; com.mongodb.client.MongoCollection < com.mongodb.BasicDBObject > dbCollection = db . getCollection ( tasks.CallEvacuationTask.collectionName , com.mongodb.BasicDBObject . class ) ; boolean result ; result = updateEvac ( dbCollection , params [ 1 ] , params [ 0 ] ) ; return result ; } 
@ java.lang.Override public void  actionReuted ( java.awt.event.ActionEvent e ) { javax.swing.JFileChooser jfc = new javax.swing.JFileChooser () ; int result = jfc . showOpenDialog ( view . getFrame () ) ; if ( result == ( javax.swing.JFileChooser.APPROVE_OPTION ) ) model . loadPathbaseFile ( jfc . getSelectedFile () . getAbsolutePath () ) ; center . aggiorna ( ( - 1 ) ) ; } 
protected static org.python.core.PyBuffer getBufferorDie ( org.python.core.PyObject b , java.lang.String fmt ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } } 
@ java.lang.Override public void onGetDataShareWithFin ( com.owncloud.android.lib.common.operations.RemoteOperationResult result ) { ( ( com.owncloud.android.ui.activity.ShareActivity ) ( getActivity () ) ) . dismissLoadingDialog () ; if ( ( result != null ) && ( result . isSuccess () ) ) { com.owncloud.android.lib.common.utils.Log_OC . d ( com.owncloud.android.ui.fragment.ShareFileFragment.TAG , "Get Data Share With finishes sucessfully" ) ; } refreshUsersOrGroupsListFromDB () ; } 
@ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) private void addNewGoogleGuvaClassES () { nl.jqno.equalsverifier.internal.ConditionalInstantiator range = new nl.jqno.equalsverifier.internal.ConditionalInstantiator ( ( ( nl.jqno.equalsverifier.JavaApiPrefabValues.GUAVA_PACKAGE ) + "Range" ) , false ) ; addValues ( range . resolve () , range . callFactory ( "open" , classes ( java.lang.Comparable . class , java.lang.Comparable . class ) , objects ( 1 , 2 ) ) , range . callFactory ( "open" , classes ( java.lang.Comparable . class , java.lang.Comparable . class ) , objects ( 3 , 4 ) ) ) ; java.lang.String optional = "com.google.common.base.Optional" ; addFactory ( classForName ( optional ) , new nl.jqno.equalsverifier.ReflectiveGenericContainerFactory ( optional ) ) ; } 
public void add () { this . index += 1 ; int tempIndex = this . index ; while ( ( ( this . index ) < ( this . menuSize ) ) && ( ( menu . get ( tempIndex ) . price ) >= ( this . price ) ) ) { this . index += 1 ; tempIndex += 1 ; } } 
public void click_DeleteLink ( android.view.View v ) { for ( int position : win.successlvchao.android.moneypocket.MainActivity.checkedIndexList . keySet () ) { mCostBeanList . remove ( position ) ; mDatabaseHelper . deleteSpecificItem ( win.successlvchao.android.moneypocket.MainActivity.checkedIndexList . get ( position ) ) ; } win.successlvchao.android.moneypocket.MainActivity.checkedIndexList . clear () ; win.successlvchao.android.moneypocket.MainActivity.checkBoxList . clear () ; mAdapter . notifyDataSetChanged () ; findViewById ( R.id.deleteButton ) . setVisibility ( View.INVISIBLE ) ; findViewById ( R.id.cancelButton ) . setVisibility ( View.INVISIBLE ) ; } 
private void  findFirstStart () { java.lang.Boolean found = false ; nextTurn () ; while ( ! found ) { if ( ( ! ( currentPlayer . getPass () ) ) && ( ! ( currentPlayer . getWon () ) ) ) { found = true ; } else { nextTurn () ; } } } 
public static java.io.OutputStream getStreamOutputSteam ( android.content.Context context , java.lang.String fileName , android.net.Uri rootUri , java.lang.String . . . subDirs ) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( context , rootUri , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; return ml.puredark.hviewer.utils.DocumentUtil . getStreamOutputSteam ( context , file . getUri () ) ; } 
protected net.schmizz.concurrent.Promise < net.schmizz.sshj.sftp.Response , net.schmizz.sshj.sftp.SFTPException > asAsyncwrite ( long fileOffset , byte [] data , int off , int len ) throws java.io.IOException { return requester . request ( newRequest ( PacketType.WRITE ) . putUInt64 ( fileOffset ) . putUInt32 ( len ) . putRawBytes ( data , off , len ) ) ; } 
@ java.lang.Override public void HandleMessage ( android.os.Message inputMessage ) { org.mobicents.restcomm.android.client.sdk.SignalingMessage message = ( ( org.mobicents.restcomm.android.client.sdk.SignalingMessage ) ( inputMessage.obj ) ) ; if ( ( message.type ) == ( SignalingMessage.MessageType.OPEN_REPLY ) ) { listener . onOpenReply ( message.id , message.status , message.text ) ; } else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_REPLY ) ) {} else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_EVENT ) ) {} } 
@ java.lang.Override public nl.renarj.jasdb.api.properties.Property removevalue ( nl.renarj.jasdb.api.properties.Value v ) { for ( java.util.Iterator i = values . iterator () ; i . hasNext () ; ) { if ( i . next () . equals ( v ) ) { i . remove () ; } } return this ; } 
private java.util.ArrayList < java.lang.Integer > list_numbers_equal_values2Col1 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; } 
@ java.lang.Override public void windowSeosing ( java.awt.event.WindowEvent windowEvent ) { if ( ( javax.swing.JOptionPane . showConfirmDialog ( null , "Wollen sie Speicher und Schließen?" , "Wirklich schließen?" , javax.swing.JOptionPane.YES_NO_OPTION , javax.swing.JOptionPane.QUESTION_MESSAGE ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { if ( save () ) { javax.swing.JOptionPane . showMessageDialog ( null , "Der Zustand wurde gespeichert." , "Speichern" , javax.swing.JOptionPane.INFORMATION_MESSAGE ) ; java.lang.System . exit ( 0 ) ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "Fehler beim Speichern" , "Speichern" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } else { java.lang.System . exit ( 0 ) ; } } 
private void checkExistenceOfRequiredTes ( java.util.Set < java.io.File > filesInResourceBundle ) { final java.lang.String fullBundleName = getFullBundleName ( filesInResourceBundle ) ; for ( java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = ( fullBundleName + '_' ) + languageCode ; final boolean missing = com.puppycrawl.tools.checkstyle.checks.TranslationCheck . isMissing ( translationFileName , filesInResourceBundle ) ; if ( missing ) { final java.lang.String missingTranslationFileName = formMissingTranslationName ( fullBundleName , languageCode ) ; logMissingTranslation ( missingTranslationFileName ) ; } } } 
private xl.playground.algo.tree.BinarySearchTree.Node < Item > addLine ( xl.playground.algo.tree.BinarySearchTree.Node < Item > root , Item value ) { if ( root == null ) { return new xl.playground.algo.tree.BinarySearchTree.Node <> ( value ) ; } if ( ( root.value . compareTo ( value ) ) >= 0 ) { root.left = addLine ( root.left , value ) ; } else { root.right = addLine ( root.right , value ) ; } root.count = 1 + ( countChildren ( root ) ) ; return root ; } 
@ java.lang.Override public boolean OnRequest ( final android.content.Intent request , final android.content.Intent response ) { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } 
public void setTagslink () { if ( ( ( mMovie . getTagline () ) != null ) && ( ( mMovie . getTagline () . length () ) != 0 ) ) { ( ( android.widget.TextView ) ( mRootView . findViewById ( R.id.banner_title ) ) ) . setText ( ( ( "\"" + ( mMovie . getTagline () ) ) + "\"" ) ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( mCurrentPage ) < ( mNumberPages ) ) { mRightButton . setEnabled ( false ) ; mCurrentPage += 1 ; mImageAdapter . invalidateData () ; mPagerAdapter . notifyDataSetChanged () ; getAllPopularPhotos () ; } else { android.widget.Toast . makeText ( getBaseContext () , "Already at last page" , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public void  onfocusChanged ( android.view.View view , boolean hasFocus ) { if ( hasFocus ) { bottomNavigationBar . hide () ; android.util.Log . d ( "~focus" , ( ( bottomNavigationBar . isHidden () ) + "" ) ) ; } else { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; bottomNavigationBar . show () ; } } 
public void newFlow () { currentLoop = new ir.cfgraph.Loop () ; if ( ( startingBlock ) == null ) { currentBlock = startingBlock = currentLoop ; } else if ( ( currentBlock ) instanceof ir.cfgraph.ControlFlow ) { ir.cfgraph.ControlFlow cf = ( ( ir.cfgraph.ControlFlow ) ( currentBlock ) ) ; controlFlowStack . push ( currentBlock ) ; if ( cf . isComplete () ) currentBlock . setSuccessor ( currentBranch ) ; else cf . addBlock ( currentLoop ) ; } else currentBlock . setSuccessor ( currentLoop ) ; currentBlock = currentLoop ; } 
private edu.utsa.fileflow.client.fileflow.VariableAutomaton getVariable ( edu.utsa.fileflow.client.fileflow.FileFlowAnalysisDomain domain , edu.utsa.fileflow.cfg.FlowPointContext context ) { edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ctx = ( ( edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ) ( context . getContext () ) ) ; edu.utsa.fileflow.antlr.FileFlowParser.ValueContext v = ctx . value ( 0 ) ; if ( ( v . Variable () ) != null ) return domain.table . get ( v . Variable () . getText () ) ; return new edu.utsa.fileflow.client.fileflow.VariableAutomaton ( v . String () . getText () ) ; } 
private se.fredsfursten.donationboardplugin.PlayerInfo getOrAddPlayerInfo ( org.bukkit.entity.Player player ) { se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = this . _knownPlayers . get ( player ) ; if ( playerInfo == null ) { playerInfo = new se.fredsfursten.donationboardplugin.PlayerInfo ( player ) ; this . _knownPlayers . put ( player , playerInfo ) ; int toLevel = this . _model . getDonationLevel ( 0 ) ; playerInfo . demoteOrPromote ( toLevel ) ; } return playerInfo ; } 
@ java.lang.Override protected void OnCreated ( android.os.Bundle savedInstanceState ) { android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder () . permitAll () . build () ; android.os.StrictMode . setThreadPolicy ( policy ) ; super . OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_scan ) ; integrator = new com.google.zxing.integration.android.IntentIntegrator ( this ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.ONE_D_CODE_TYPES ) ; integrator . setPrompt ( "Scan a barcode" ) ; integrator . setBeepEnabled ( true ) ; integrator . initiateScan () ; } 
private void PickAddress () { com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder builder = new com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder () ; try { startActivityForResult ( builder . build ( this ) , com.arman.horus.activities.AddPlaceActivity.PLACE_PICKER_REQUEST ) ; } catch ( com.google.android.gms.common.GooglePlayServicesRepairableException | com.google.android.gms.common.GooglePlayServicesNotAvailableException e ) { e . printStackTrace () ; android.widget.Toast . makeText ( this , e . getMessage () , Toast.LENGTH_LONG ) . show () ; } } 
private java.util.Vector calculateMeumpoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new java.util.Vector ( meanPoint ) ; } 
public static java.lang.Throwable  getRootcause ( java.lang.Throwable t ) { if ( t == null ) { return null ; } java.lang.Throwable rootCause = t ; java.lang.Throwable cause = rootCause . getCause () ; while ( ( cause != null ) && ( cause != rootCause ) ) { rootCause = cause ; cause = cause . getCause () ; } return rootCause ; } 
public void TestComputer ( java.lang.String player , org.bukkit.command.CommandSender sender ) { if ( playerOnline ( player ) ) { sender . sendMessage ( ( ( ( ( ( ( ( ( ( ( ( ( ChatColor.GOLD ) + "" ) + ( ChatColor.MAGIC ) ) + "aaaaa" ) + ( ChatColor.RED ) ) + player ) + ( ChatColor.GOLD ) ) + "is online!" ) + ( ChatColor.MAGIC ) ) + "aaaaa" ) + ( ChatColor.GOLD ) ) + "\nRejoice!" ) ) ; } else { sender . sendMessage ( ( player + "is not online!" ) ) ; } } 
@ java.lang.Override public void  actionNavIGled () { if ( ( tilemap ) != null ) { int [] dims = getNumberPair ( "Please enter the new dimensions?" ) ; if ( dims == null ) return; for ( int i = 0 ; i < ( tilemap . getLayerCount () ) ; i ++ ) { tilemap . getLayer ( i ) . resize ( dims [ 0 ] , dims [ 1 ] ) ; } } } 
public void addNewLevelActionAction ( long buildingID ) { com.greenfox.jasper.domain.Building temporaryBuilding = buildingServices . findOneBuilding ( ( ( int ) ( buildingID ) ) ) ; com.greenfox.jasper.services.MainEvent levelUpEvent = new com.greenfox.jasper.services.LevelUpEvent ( ( ( java.lang.System . currentTimeMillis () ) + ( calculateBuildingTime ( temporaryBuilding ) ) ) , buildingID ) ; mainEventRepo . save ( levelUpEvent ) ; } 
public android.view.View  getWidget ( int position , android.view.View convertView , android.view.ViewGroup parent ) { android.widget.ImageView imageView = new android.widget.ImageView ( context ) ; android.graphics.Bitmap ThumbImage = android.media.ThumbnailUtils . extractThumbnail ( android.graphics.BitmapFactory . decodeFile ( imageIDs . get ( position ) ) , 200 , 200 ) ; imageView . setImageBitmap ( ThumbImage ) ; imageView . setLayoutParams ( new android.widget.Gallery.LayoutParams ( 200 , 200 ) ) ; return imageView ; } 
public void removeStatsConsumer ( org.osgi.framework.ServiceReference < org.inaetics.demonstrator.api.stats.StatsProvider > serviceRef , org.inaetics.demonstrator.api.stats.StatsProvider provider ) { if ( "true" . equals ( serviceRef . getProperty ( "aggregator" ) ) ) { m_aggregator = null ; } java.lang.String type = "" + ( serviceRef . getProperty ( "type" ) ) ; if ( "processor" . equalsIgnoreCase ( type ) ) { m_processorCount . decrementAndGet () ; } else if ( "producer" . equalsIgnoreCase ( type ) ) { m_producerCount . decrementAndGet () ; } m_providerStats . remove ( serviceRef ) ; info ( ( "added statsprovider of type " + type ) ) ; } 
public java.util.ArrayList < java.lang.String > getSows () { if ( ( _primary ) == null ) { return null ; } java.util.ArrayList < ragnardb.parser.ast.TableOrSubquery > tables = _primary . getSowsAndSubqueries () ; java.util.ArrayList < java.lang.String > out = new java.util.ArrayList <> () ; for ( ragnardb.parser.ast.TableOrSubquery table : tables ) { out . add ( table . getName () ) ; } return out ; } 
public java.lang.String  getStepshash () { java.lang.String outputString = "" ; for ( java.lang.String term : steps . keySet () ) { java.lang.String value = steps . get ( term ) ; java.lang.String lineToAdd = ( ( ( ( ( "\"" + term ) + "\"" ) + ": " ) + value ) + "," ) + "\n" ; outputString = outputString + lineToAdd ; } return outputString ; } 
@ java.lang.Override public void eventattach ( android.content.Context context ) { super . eventattach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } 
public static void printPlainmessage ( objects.PlainMessage message ) { java.lang.System.out . println () ; java.lang.System.out . println ( message . getMessageText () ) ; java.lang.System.out . println ( java.util.Arrays . toString ( message . getMessageDecimalArray () ) ) ; java.lang.System.out . println ( message . getMessageHex () ) ; java.lang.System.out . println ( message . getMessageBinary () ) ; } 
@ java.lang.Override public void ondateChanged ( android.widget.DatePicker view , int year , int monthOfYear , int dayOfMonth ) { monthOfYear = monthOfYear + 1 ; dates = ( ( ( ( java.lang.Integer . toString ( dayOfMonth ) ) + "/" ) + ( java.lang.Integer . toString ( monthOfYear ) ) ) + "/" ) + ( java.lang.Integer . toString ( year ) ) ; } 
protected sentimentAnalysis.ScoreNode  getScore ( edu.emory.clir.clearnlp.dependency.DEPNode node , java.util.Map < java.lang.String , java.lang.Double > map ) { double score = 0 ; double intensity = getIntensity ( node ) ; if ( map . containsKey ( node . getLemma () ) ) { score = map . get ( node . getLemma () ) ; } sentimentAnalysis.ScoreNode sNode = new sentimentAnalysis.ScoreNode ( node . getLemma () , score , intensity ) ; return sNode ; } 
protected org.apache.ignite.configuration.CacheConfiguration cacheConfig ( @ org.jetbrains.annotations.NotNull java.lang.String name ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; return cache ; } 
static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToHumanCard ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" , false ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToHumanCardForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } 
protected static java.lang.String getBNpos_map ( java.util.Map < java.lang.String , it.uniroma1.lcl.babelnet.data.BabelPOS > posMapping , java.lang.String pos ) { java.lang.String pos5chars = "" ; if ( ( pos . length () ) > 1 ) { pos5chars = pos . substring ( 0 , 5 ) ; } else { return null ; } it.uniroma1.lcl.babelnet.data.BabelPOS bnPos = posMapping . get ( pos5chars . toUpperCase () ) ; if ( bnPos == null ) { return null ; } else { return bnPos . toString () ; } } 
public void setNetworkPropertyproperties ( java.util.Collection < org.ndexbio.model.object.NdexPropertyValuePair > properties , java.util.Collection < org.ndexbio.model.object.SimplePropertyValuePair > presentationProperties ) { if ( properties != null ) { this . network . getProperties () . addAll ( properties ) ; this . networkDoc . field ( NdexClasses.ndexProperties , properties ) . save () ; } } 
@ java.lang.Override public void onInitInitialLayout () { super . onInitInitialLayout () ; formSwitcher . setText ( R.string.show_more_details ) ; if ( ( ( org.unicef.rapidreg.base.record.RecordActivity ) ( getActivity () ) ) . getCurrentFeature () . isDetailMode () ) { editButton . setVisibility ( View.VISIBLE ) ; } } 
public java.util.List < org.egov.works.models.masters.ScheduleOfRate > getSSORArray () { if ( ( ( estimateId ) != null ) && ( ( estimateDate ) != null ) ) return scheduleOfRateService . getScheduleOfRatesByCodeAndScheduleOfCategories ( query , scheduleCategoryId . toString () , estimateDate ) ; else if ( ( estimateDate ) != null ) return scheduleOfRateService . getScheduleOfRatesByCodeAndScheduleOfCategories ( query , scheduleCategoryId . toString () , estimateDate ) ; else return scheduleOfRateService . getScheduleOfRatesByCodeAndScheduleOfCategories ( query , scheduleCategoryId . toString () , estimateDate ) ; } 
@ org.junit.BeforeClass public static void setUpInstance () { org.holodeckb2b.integ.OutFlowIT.itHelper = new org.holodeckb2b.integ.ITHelper () ; org.holodeckb2b.integ.OutFlowIT.itHelper . unzipHolodeckDistribution ( org.holodeckb2b.integ.OutFlowIT.dADirName ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . unzipHolodeckDistribution ( org.holodeckb2b.integ.OutFlowIT.dBDirName ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . copyPModeDescriptor ( org.holodeckb2b.integ.OutFlowIT.dADirName , "ex-pm-push-init.xml" ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . copyPModeDescriptor ( org.holodeckb2b.integ.OutFlowIT.dBDirName , "ex-pm-push-resp.xml" ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . modifyAxisServerPort ( org.holodeckb2b.integ.OutFlowIT.dBDirName , "9090" ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . startHolodeckB2BInstances ( org.holodeckb2b.integ.OutFlowIT.dADirName , org.holodeckb2b.integ.OutFlowIT.dBDirName ) ; org.holodeckb2b.integ.OutFlowIT.itHelper . copyExampleDataToMsgOutDir ( org.holodeckb2b.integ.OutFlowIT.dADirName ) ; } 
@ java.lang.Override public void onChecklectedAdded ( android.widget.RadioGroup group , int checkedId ) { int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) . getCheckedRadioButtonId () ; if ( selected == ( R.id.createMatchRadioButtonJunior ) ) { radioGroupLevelSelection = 1 ; } else if ( selected == ( R.id.createMatchRadioButtonSenior ) ) { radioGroupLevelSelection = 2 ; } filterAndRefresh ( radioGroupLevelSelection ) ; } 
public boolean contate ( double avgT , double devT , double minT , double maxT ) { if ( ( ( ( ( avgTemp ) == avgT ) && ( ( devTemp ) == devT ) ) && ( ( minTemp ) == minT ) ) && ( ( maxTemp ) == maxT ) ) { return true ; } return false ; } 
private int  getmove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; return optimalMoveFromBoardPosition . get ( boardAsString ) ; } 
@ java.lang.Override public void calculateRedpacksprizer ( cn.wisdom.lottery.dao.vo.Lottery lottery ) { if ( cn.wisdom.lottery.common.utils.CollectionUtils . isNotEmpty ( lottery . getRedpacks () ) ) { int totalBonus = lottery . getPeriods () . get ( 0 ) . getPrizeBonus () ; float bonus = 0 ; for ( cn.wisdom.lottery.dao.vo.LotteryRedpack lotteryRedpack : lottery . getRedpacks () ) { bonus = ( totalBonus * ( lotteryRedpack . getRate () ) ) / 100 ; lotteryRedpack . setPrizeBonus ( bonus ) ; } } } 
private void passMessagesToSlays ( int i ) { node.Node from = getNodeFromId ( i ) ; if ( from . isLeaf () ) { from = from . getNeighborList () . get ( 0 ) ; } for ( node.Node to : from . getNeighborList () ) { from . passMessageTo ( to ) ; passMessagesToSlays2 ( to , from ) ; } } 
public java.util.List < org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter > equounterSince ( org.joda.time.LocalDate dateOfBirth ) { java.util.ArrayList < org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter > encounters = new java.util.ArrayList < org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter > () ; org.joda.time.LocalDate currentDate = dateOfBirth ; org.joda.time.LocalDate today = new org.joda.time.LocalDate () ; while ( currentDate . isBefore ( today ) ) { encounters . add ( encounterGenerator . nextEncounter ( currentDate ) ) ; currentDate = currentDate . plusDays ( ( ( int ) ( ( ( java.lang.Math . random () ) * 365 ) * ( org.neo4j.data.generator.domains.medicalrecords.encounters.EncounterSequenceGenerator.MAX_YEARS_BETWEEN_ENCOUNTERS ) ) ) ) ; } return encounters ; } 
@ org.junit.Test public void testUnknownTableJobGvesCount ( ) throws java.lang.Exception { execute ( "set global stats.enabled=true" ) ; ensureYellow () ; try { execute ( "select * from foobar" ) ; } catch ( io.crate.action.sql.SQLActionException e ) { assertEquals ( e . getMessage () , "Table 'foobar' unknown" ) ; } finally { execute ( "select * from sys.jobs" ) ; assertEquals ( response . rowCount () , 1L ) ; execute ( "reset global stats.enabled" ) ; } } 
private void setMediaSessionBasicData () { if ( ( mediaSession ) == null ) { return; } android.support.v4.media.MediaMetadataCompat.Builder builder = new android.support.v4.media.MediaMetadataCompat.Builder () . putString ( MediaMetadataCompat.METADATA_KEY_ARTIST , metaDataArtist ) . putString ( MediaMetadataCompat.METADATA_KEY_ALBUM , metaDataAlbum ) . putString ( MediaMetadataCompat.METADATA_KEY_TITLE , metaDataTitle ) . putBitmap ( MediaMetadataCompat.METADATA_KEY_ALBUM_ART , android.graphics.BitmapFactory . decodeResource ( getResources () , R.drawable.icon ) ) ; if ( ( textInterface ) != null ) { builder . putLong ( MediaMetadataCompat.METADATA_KEY_DURATION , textInterface . getTotalDuration () ) ; } mediaSession . setMetadata ( builder . build () ) ; } 
private void captureTerriteory ( gottesman.risk.Player activePlayer , gottesman.risk.Territory selectedTerritory , gottesman.risk.map.TerritoryView territoryView , gottesman.risk.Territory territory ) { int battalionNum = java.lang.Integer . parseInt ( javax.swing.JOptionPane . showInputDialog ( null , "Enter the amount of battalions you would like to move." ) ) ; if ( battalionNum >= ( selectedTerritory . getBattalions () ) ) { javax.swing.JOptionPane . showMessageDialog ( selectedTerritoryView , "Cannot move this amount of battalions. Try again." ) ; return; } else { territory . occupy ( activePlayer ) ; selectedTerritory . moveBattalionsTo ( territory , battalionNum ) ; } selectedTerritoryView . repaint () ; territoryView . repaint () ; selectTerritory ( territoryView ) ; } 
@ java.lang.Override protected void reloadAfterScroll ( boolean finalTouch ) { if ( ( mAdapter ) == null ) { return; } try { final int sD = mData.length ; for ( int i = 0 ; i < sD ; ++ i ) { if ( ( mData [ i ] ) instanceof ds.framework.v4.data.AbsRecyclerViewData ) { invalidateData ( i ) ; } } loadDataAndDisplay () ; } catch ( java.lang.Throwable e ) { ds.framework.v4.common.Debug . logException ( e ) ; } } 
@ java.lang.Override protected java.lang.Exception  invokeinMain ( de.geeksfactory.opacclient.objects.Account . . . params ) { try { de.geeksfactory.opacclient.apis.OpacApi api = ( ( de.geeksfactory.opacclient.OpacClient ) ( getApplication () ) ) . getNewApi ( lib ) ; api . start () ; api . checkAccountData ( account ) ; } catch ( java.io.IOException e ) { return e ; } catch ( org.json.JSONException e ) { return e ; } catch ( de.geeksfactory.opacclient.apis.OpacApi.OpacErrorException e ) { return e ; } return null ; } 
private boolean isTaskSupported ( com.emc.storageos.db.client.model.Volume rpVolume , com.emc.storageos.volumecontroller.impl.utils.VirtualPoolCapabilityValuesWrapper capabilities , boolean vplex , com.emc.storageos.model.TaskList taskList ) { boolean rpNonVplexSourceVolume = ( Volume.PersonalityTypes.SOURCE . name () . equals ( rpVolume . getPersonality () ) ) && ( ! vplex ) ; boolean addJournalVolume = capabilities . getAddJournalCapacity () ; boolean notAlreadyInTaskList = ( com.emc.storageos.api.service.impl.placement.StorageScheduler . getPrecreatedVolume ( _dbClient , taskList , rpVolume . getLabel () ) ) == null ; boolean createTask = addJournalVolume || ( rpNonVplexSourceVolume && notAlreadyInTaskList ) ; return createTask ; } 
@ java.lang.Override public void callback ( kcl.teamIndexZero.traffic.simulator.data.SimulationTick callback ) { CurrentDate = ( new java.util.Date () . getTime () ) / 1000 ; if ( ( ( CurrentDate ) - ( lastChange ) ) > ( timer ) ) { if ( ( modelSet ) != null ) { modelSet . changeColour ( model , model.currentState ) ; lastChange = CurrentDate ; } } } 
@ java.lang.Override public boolean OnClick ( android.view.View v , int keyCode , android.view.KeyEvent event ) { if ( ( event . getAction () ) == ( android.view.KeyEvent.ACTION_DOWN ) ) { switch ( keyCode ) { case android.view.KeyEvent.KEYCODE_ENTER : rightGuess () ; return true ; default: break; } } return false ; } 
private void handleExtintent ( android.content.Intent intent ) { if ( Intent.ACTION_SEARCH . equals ( intent . getAction () ) ) { java.lang.String query = intent . getStringExtra ( SearchManager.QUERY ) ; cursor = com.example.adao1.project2.DatabaseHelper . getInstance ( this ) . getShop ( query ) ; searchCursorAdapter . swapCursor ( cursor ) ; searchCursorAdapter . notifyDataSetChanged () ; } } 
public java.lang.String  totoFormat () { java.lang.StringBuilder b = new java.lang.StringBuilder () ; b . append ( index ) . append ( "\n" ) ; b . append ( heightLevel ) . append ( "\n" ) ; b . append ( oceanLevel ) . append ( "\n" ) ; b . append ( getOceanReplacement () ) . append ( "\n" ) ; b . append ( cloudLevel ) . append ( "\n" ) ; b . append ( ( geostrataGen ? 1 : 0 ) ) ; return b . toString () ; } 
public com.emc.hpux.model.HpuxVersion getHpuxMinimumSupport ( boolean forceLookup ) { if ( forceLookup || ( ( hpuxVersion ) == null ) ) { java.lang.String versionProp = this . getSysProperty ( com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP ) ; if ( isValidVersionNumber ( versionProp ) ) { hpuxVersion = new com.emc.hpux.model.HpuxVersion ( versionProp ) ; } else { hpuxVersion = null ; throw new java.lang.IllegalStateException ( java.lang.String . format ( "System property for HPUX Version Number(%s) is invalid - value is '%s'" , com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP , versionProp ) ) ; } } return hpuxVersion ; } 
public void inverseLoadened ( android.view.View v ) { android.widget.TextView textView2 = ( ( android.widget.TextView ) ( findViewById ( R.id.textView2 ) ) ) ; tempNum = java.lang.Double . parseDouble ( textView2 . getText () . toString () ) ; tempNum = ( tempNum ) * ( - 1 ) ; textView2 . setText ( java.lang.String . valueOf ( tempNum ) ) ; } 
@ org.junit.Test public void testResultReturnsModelandModel ( ) throws java.lang.Exception { org.springframework.mock.web.MockHttpSession session = new org.springframework.mock.web.MockHttpSession () ; org.springframework.web.servlet.ModelAndView actual = portal . result ( session , "" , "" , "" , "" ) ; org.junit.Assert . assertEquals ( "result" , actual . getViewName () ) ; org.junit.Assert . assertEquals ( null , actual . getModel () . get ( "themes" ) ) ; org.junit.Assert . assertEquals ( "" , actual . getModel () . get ( "query" ) ) ; } 
@ java.lang.Override public void  running () { if ( ( getAudioService () ) != null ) { setMilliseconds ( ( ( ( drawSurfaceWidth / ( ( float ) ( getAudioService () . getSampleRate () ) ) ) * 1000 ) / 2 ) ) ; } setMillivolts ( ( ( ( ( ( ( float ) ( drawSurfaceHeight ) ) / 4.0F ) / 24.5F ) / 1000 ) * ( com.backyardbrains.utils.BYBConstants.millivoltScale ) ) ) ; } 
private boolean reetchMember () { mUser = mSession . getDataHandler () . getStore () . getUser ( mMemberId ) ; if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId ; mUser.displayname = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils . isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId ; } mUser.avatar_url = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; return true ; } return false ; } 
private boolean validizeQuantity () { int quantity = java.lang.Integer . valueOf ( subgroupsQuantity . getText () . toString () ) ; if ( quantity > ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , getMaximumQuantity () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; } return true ; } 
@ java.lang.Override public void submit () { try { mSocket = new java.net.Socket ( "117.34.105.157" , 19527 ) ; mSocket . setKeepAlive ( true ) ; mSocket . setSoTimeout ( 0 ) ; mBufferedReader = new java.io.BufferedReader ( new java.io.InputStreamReader ( mSocket . getInputStream () ) ) ; mOutputStream = mSocket . getOutputStream () ; startReadThread () ; writeDataToServer () ; } catch ( java.net.SocketTimeoutException e ) {} catch ( java.io.IOException e ) {} } 
@ java.lang.Override public void onRequestPermissionResult ( int requestCode , @ android.support.annotation.NonNull java.lang.String [] permissions , @ android.support.annotation.NonNull int [] grantResults ) { com.iven.i7helper.util.LocationUtil lu = com.iven.i7helper.util.LocationUtil . getLocationUtil () ; switch ( requestCode ) { case 1 : if ( ( grantResults.length ) > 0 ) { for ( int i : grantResults ) { if ( i != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { com.iven.i7helper.util.ToolUtil . showMessage ( this , "不给权限会导致记录不准确" ) ; return; } } lu . requestLocation () ; } break; default: } } 
private java.util.List < java.lang.String > choice ( java.util.HashMap < java.lang.String , java.lang.Integer > map , int n ) { wedt.finder.ActualWikiFinder.ValueComparator bvc = new wedt.finder.ActualWikiFinder.ValueComparator ( map ) ; java.util.TreeMap < java.lang.String , java.lang.Integer > sorted = new java.util.TreeMap <> ( bvc ) ; sorted . putAll ( map ) ; java.util.ArrayList < java.lang.String > keys = new java.util.ArrayList <> () ; keys . addAll ( sorted . keySet () ) ; return ( keys . size () ) > n ? keys . subList ( 0 , n ) : keys ; } 
public java.lang.String AddDevice ( objects.Device dev ) { java.sql.PreparedStatement stmt = null ; java.sql.Connection conn = null ; java.lang.String sql = "INSERT INTO network " + "VALUES (?, '?', '?')" ; try { conn = getConnection () ; } catch ( java.lang.ClassNotFoundException e ) { return new java.lang.String ( e . getMessage () ) ; } catch ( java.sql.SQLException e ) { return new java.lang.String ( e . getMessage () ) ; } catch ( java.net.URISyntaxException e ) { return new java.lang.String ( e . getMessage () ) ; } return "MADE IT" ; } 
public static boolean  inLimanges ( int [] [] array , int r , int c ) { return ( ( r >= 0 ) && ( r < ( array.length ) ) ) && ( ( c >= 0 ) && ( c < ( array [ r ] . length ) ) ) ; } 
private void UpdateLength () { int newLength = net.decix.jipfix.header.SetHeader.HEADERLENGTH ; for ( net.decix.jipfix.header.TemplateRecord template : templateRecords ) { newLength += template . getLength () ; } for ( net.decix.jipfix.header.OptionTemplateRecord optionTemplate : optionTemplateRecords ) { newLength += optionTemplate . getLength () ; } for ( net.decix.jipfix.header.DataRecord record : dataRecords ) { newLength += record . getLength () ; } this . length = newLength ; } 
private static java.lang.String loadECyclefile ( final java.lang.String name ) throws java.lang.Exception { assertTrue ( new java.io.File ( name ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( name ) ; return umple . generateUmple () ; } 
public static java.util.List < com.teinproductions.tein.papyrosprogress.Milestone > getMillestone ( java.lang.String json ) throws java.text.ParseException , org.json.JSONException { org.json.JSONArray jArray = new org.json.JSONArray ( json ) ; java.util.List < com.teinproductions.tein.papyrosprogress.Milestone > result = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( jArray . length () ) ; i ++ ) { result . add ( com.teinproductions.tein.papyrosprogress.JSONUtils . getMilestone ( jArray . getJSONObject ( i ) ) ) ; } return result ; } 
public static void removeplayer ( java.lang.String name ) { reachForTheTop.IO . createOutputFile ( ( ( "Scores\\" + name ) + ".reach" ) ) ; reachForTheTop.IO . println ( "times played: 0" ) ; reachForTheTop.IO . println ( "total: 0" ) ; reachForTheTop.IO . closeOutputFile () ; reachForTheTop.IO . createOutputFile ( "Scores\\names.txt" , true ) ; reachForTheTop.IO . println ( name ) ; reachForTheTop.IO . closeOutputFile () ; } 
public void  report () { try { updateTracking () ; scanDirectory ( outboxDir ) ; } catch ( org.openas2.OpenAS2Exception oae ) { oae . terminate () ; } catch ( java.lang.Exception e ) { logger . error ( ( "Unexpected error occurred  reporting directory for files to send: " + ( outboxDir ) ) , e ) ; } } 
@ java.lang.Override public void run () { scenes.WorldScene.WorldSystem.NPC n = ( ( scenes.WorldScene.WorldSystem.WorldSystem ) ( parent ) ) . activeNPC ; java.awt.FontMetrics fm = javax.swing.JFrame . getFrames () [ 0 ] . getGraphics () . getFontMetrics () ; dialog = engine.StringUtils . wrap ( n . getDialog () , fm , ( ( engine.ContentPanel.INTERNAL_RES_W ) - 10 ) ) . toArray ( new java.lang.String [] {} ) ; index = 0 ; } 
public boolean createNamedPortale ( java.lang.String caption ) { if ( org.rstudio.core.client.StringUtil . isNullOrEmpty ( caption ) ) { createNewTerminal () ; return true ; } if ( ! ( isCaptionAvailable ( caption ) ) ) { return false ; } startTerminal ( nextTerminalSequence () , null , caption , null , true , ConsoleProcessInfo.DEFAULT_COLS , ConsoleProcessInfo.DEFAULT_ROWS , TerminalShellInfo.SHELL_DEFAULT , false , null ) ; return true ; } 
public void writeFromDisk ( ) throws java.io.IOException { currentCollection = modelCol . getCollection () ; skrivFil1 = new java.io.FileWriter ( selectedCollection ) ; java.io.BufferedWriter writer = new java.io.BufferedWriter ( skrivFil1 ) ; java.io.PrintWriter printer = new java.io.PrintWriter ( writer ) ; for ( Item i : currentCollection ) { java.lang.String s = i . toString () ; printer . println ( s ) ; } if ( currentCollection . isEmpty () ) { skrivFil1 = new java.io.FileWriter ( selectedCollection ) ; } printer . close () ; } 
public void  afterProValuesSet ( ) throws java.lang.Exception { int roundId = getRoundId () ; if ( roundId < 1 ) { return; } round = org.powertac.tournament.beans.Round . getRoundFromId ( roundId , false ) ; loadRoundInfo () ; loadParticipantInfo () ; loadCsvLinks () ; loadMaps () ; } 
private static boolean getenabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } } 
@ java.lang.Override protected java.lang.Boolean  doSyncResource ( java.lang.Void . . . params ) { com.cs3235.door.doorlockandroid.login.IvleLoginManager ivleLoginManager = new com.cs3235.door.doorlockandroid.login.IvleLoginManager ( httpManager ) ; com.cs3235.door.doorlockandroid.login.IvleLoginManager.IvleLoginResult ivleResult = ivleLoginManager . loginToIvle ( mEmail , mPassword ) ; if ( ! ( ivleResult.successful ) ) { errorMessage = ivleResult.failureMessage ; return false ; } com.cs3235.door.doorlockandroid.login.SmartphoneCardLoginManager smartphoneCardManager = new com.cs3235.door.doorlockandroid.login.SmartphoneCardLoginManager ( httpManager , getPhoneUuid () ) ; com.cs3235.door.doorlockandroid.login.SmartphoneCardLoginManager.SmartphoneCardLoginResult smartphoneDoorResult = smartphoneCardManager . loginToSmartphoneCardSystem ( ivleResult.user ) ; if ( ! ( smartphoneDoorResult.successful ) ) { errorMessage = smartphoneDoorResult.failureMessage ; return false ; } loggedInUser = smartphoneDoorResult.user ; return true ; } 
public void checkPropertyReference ( cz.metacentrum.perun.core.api.PerunSession sess , cz.metacentrum.perun.core.api.Member member , cz.metacentrum.perun.core.api.Attribute attribute ) throws cz.metacentrum.perun.core.api.exceptions.InternalErrorException , cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException , cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException { cz.metacentrum.perun.core.implApi.modules.attributes.MemberAttributesModuleImplApi attributeModule = getMemberAttributeModule ( sess , attribute ) ; if ( attributeModule == null ) return; try { attributeModule . checkPropertyReference ( ( ( cz.metacentrum.perun.core.impl.PerunSessionImpl ) ( sess ) ) , member , attribute ) ; } catch ( cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException ex ) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException ( ex ) ; } } 
@ java.lang.Override public void  doWithNoteNOReturn () { if ( ! ( sdSvc . isActiveService ( service ) ) ) { return; } java.util.List < io.cattle.platform.servicediscovery.deployment.impl.DeploymentUnit > units = unitInstanceFactory . collectDeploymentUnits ( services , new io.cattle.platform.servicediscovery.deployment.impl.DeploymentManagerImpl.DeploymentServiceContext () ) ; boolean needToReconcile = needToReconcile ( services , units ) ; if ( ! needToReconcile ) { return; } activateServices ( service , services ) ; activateDeploymentUnits ( services , units ) ; } 
@ java.lang.Override public void onPad ( net.frozenbit.plugin5zig.cubecraft.gamemodes.DuelsGameMode gameMode ) { super . onPad ( gameMode ) ; if ( ( gameMode . getState () ) != ( eu.the5zig.mod.server.GameState.LOBBY ) ) { ( timer ) ++ ; if ( ( ( timer ) % ( net.frozenbit.plugin5zig.cubecraft.listeners.DuelsListener.OPPONENT_UPDATE_INTERVAL ) ) == 0 ) { updateOpponentInfo ( gameMode ) ; } } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.tvCensusForms : android.content.Intent categoryIntent = new android.content.Intent ( this , com.example.knbs.censusapp.CategoryActivity . class ) ; startActivity ( categoryIntent ) ; break; case R.id.tvEnumID : android.content.Intent enumeratorID = new android.content.Intent ( this , com.example.knbs.censusapp.EnumeratorIDActivity . class ) ; startActivity ( enumeratorID ) ; break; case R.id.tvTaskList : android.content.Intent taskList = new android.content.Intent ( this , com.example.knbs.censusapp.TaskLIstActivity . class ) ; startActivity ( taskList ) ; break; default: android.util.Log . i ( "DEFAULT ONCLICK OPT" , "This is default switch mode" ) ; break; } } 
private void  handleExtent ( android.content.Intent intent ) { final int configScreenId = intent . getIntExtra ( org.droidplanner.android.activities.ConfigurationActivity.EXTRA_CONFIG_SCREEN_ID , mConfigScreenId ) ; final android.support.v4.app.Fragment currentFragment = getCurrentFragment () ; if ( ( currentFragment == null ) || ( ( getIdForFragment ( currentFragment ) ) != configScreenId ) ) { mConfigScreenId = configScreenId ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.configuration_screen , getFragmentForId ( configScreenId ) ) . commit () ; } } 
public void freePotote () { for ( int i = 2 ; i >= 0 ; i -- ) { if ( ( this . potions [ i ] ) != null ) { heal ( 50 ) ; this . potions [ i ] = null ; return; } } } 
private void setSPenToolActionWithAllcanVase ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } return; } 
private void deleteSellected () { java.util.Map < ru.sukharev.pathtracker.utils.orm.MapPath , java.lang.Boolean > map = mAdapter . getCheckedMap () ; for ( ru.sukharev.pathtracker.utils.orm.MapPath path : map . keySet () ) { if ( map . get ( path ) ) { deletePathFromDatabase ( path ) ; mAdapter . remove ( path ) ; } } } 
@ java.lang.Override public void onStopTypackingStart ( android.widget.SeekBar seekBar ) { mTextSeekBar . setText ( ( ( ( "Shutter Speed(in ns):" + ( ( mSeekbar . getProgress () ) + ShutterSpeed1 ) ) + "/" ) + ( java.lang.Math . round ( ( ( mSeekbar . getMax () ) + ShutterSpeed1 ) ) ) ) ) ; android.widget.Toast . makeText ( getApplicationContext () , "Setting Shutter Speed" , Toast.LENGTH_SHORT ) . show () ; ShutterSpeedValue = ( mSeekbar . getProgress () ) + ShutterSpeed1 ; if ( ( AutoNumber ) != 1 ) { AutoNumber = 1 ; } startPreview () ; } 
public org.pb.x12.EDI p ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return p ( strSource ) ; } 
private void postSecretMail ( ndbc.Message secret , java.sql.Connection connection ) { try ( java.sql.Statement statement = connection . createStatement () ) { java.lang.String queryString = "INSERT INTO d1(id, user, message) VALUES('" ; queryString += secret.messageId ; queryString += "', '" ; queryString += secret.body ; queryString += "', '" ; queryString += secret.sender ; queryString += "');" ; statement . execute ( queryString ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
public org.tiogasolutions.couchace.core.api.request.PutDesignRequest  insert ( java.lang.String  insertName , java.net.URL  insertFile , java.lang.String documentRevision ) { org.tiogasolutions.couchace.core.internal.util.ArgUtil . assertNotNull (  insertName , " insertName" ) ; org.tiogasolutions.couchace.core.internal.util.ArgUtil . assertNotNull (  insertFile , " insertFile" ) ; org.tiogasolutions.couchace.core.internal.util.ArgUtil . assertNotNull ( documentRevision , "documentRevision" ) ; java.lang.String  insertBody = org.tiogasolutions.couchace.core.internal.util.IOUtil . readText (  insertFile ) ; return new org.tiogasolutions.couchace.core.api.request.PutDesignRequest ( requestExecutor ,  insertName ,  insertBody , documentRevision ) ; } 
public void showSoftinput () { android.view.View view = ( ( android.app.Activity ) ( context ) ) . getCurrentFocus () ; if ( view == null ) view = new android.view.View ( context ) ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( context . getSystemService ( Activity.INPUT_METHOD_SERVICE ) ) ) ; if ( imm == null ) return; imm . showSoftinputFromWindow ( view . getWindowToken () , 0 ) ; } 
@ java.lang.Override public boolean configUpdated () { int currentConfigHash = this . configProps . hashCode () ; boolean configUpdated = ( ( propsHashCode ) != null ) && ( ( this . propsHashCode ) != currentConfigHash ) ; if ( configUpdated && ( net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER . isDebugEnabled () ) ) net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER . debug ( "Changes in configuration properties file detected." ) ; this . propsHashCode = currentConfigHash ; return configUpdated ; } 
public static org.osbot.rs07.api.map.Area [] GetRanks () { return new org.osbot.rs07.api.map.Area [] { org.osbot.rs07.api.map.constants.Banks.AL_KHARID , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_NORTH , org.osbot.rs07.api.map.constants.Banks.ARDOUGNE_SOUTH , org.osbot.rs07.api.map.constants.Banks.CAMELOT , org.osbot.rs07.api.map.constants.Banks.CANIFIS , org.osbot.rs07.api.map.constants.Banks.CASTLE_WARS , org.osbot.rs07.api.map.constants.Banks.CATHERBY , org.osbot.rs07.api.map.constants.Banks.DRAYNOR , org.osbot.rs07.api.map.constants.Banks.DUEL_ARENA , org.osbot.rs07.api.map.constants.Banks.EDGEVILLE , org.osbot.rs07.api.map.constants.Banks.FALADOR_EAST , org.osbot.rs07.api.map.constants.Banks.FALADOR_WEST , org.osbot.rs07.api.map.constants.Banks.GNOME_STRONGHOLD , org.osbot.rs07.api.map.constants.Banks.LUMBRIDGE_UPPER , org.osbot.rs07.api.map.constants.Banks.PEST_CONTROL , org.osbot.rs07.api.map.constants.Banks.TZHAAR , org.osbot.rs07.api.map.constants.Banks.VARROCK_EAST , org.osbot.rs07.api.map.constants.Banks.VARROCK_WEST , org.osbot.rs07.api.map.constants.Banks.YANILLE } ; } 
private boolean  isValidideEmail ( java.lang.String email ) { java.sql.Statement stmt ; boolean status = false ; java.sql.Connection con = null ; try { bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider . getCon () ; stmt = con . createStatement () ; java.lang.String query = ( "Select * from employee where BINARY email=\"" + email ) + "\"" ; java.sql.ResultSet rs = stmt . executeQuery ( query ) ; status = rs . next () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return status ; } 
public boolean  tryReadLockWithoutCondition ( V expected ) { int [] stamp = new int [ 1 ] ; V value ; do { value = lock . get ( stamp ) ; if ( ( expected != value ) && ( ( value == null ) || ( ! ( expected . equals ( value ) ) ) ) ) { return false ; } } while ( lock . compareAndSet ( value , value , stamp [ 0 ] , ( ( stamp [ 0 ] ) + 2 ) ) ) ; return true ; } 
public static void showErrorsDialog ( android.content.Context c ) { android.app.AlertDialog.Builder alert = new android.app.AlertDialog.Builder ( c ) ; alert . setMessage ( "哎呀，居然发生错误了，是不是没有安装这个程序呢 :(" ) ; alert . setPositiveButton ( "确定" , null ) ; alert . setCancelable ( false ) ; alert . create () ; alert . show () ; } 
@ java.lang.Override public java.lang.String [] getQueryableAttributeses () { return new java.lang.String [] { "custom" , "name" , "type" , "color" , "oracle" , "mana" , "cmc" , "power" , "toughness" , "loyalty" , "is" , "rarity" , "cube" , "artist" , "flavor" , "watermark" , "border" , "frame" , "set" } ; } 
private void updateXData () { top = - ( ( int ) ( java.lang.Math . round ( ( ( ( roundY2 ) - ( roundY1 ) ) / 2.0 ) ) ) ) ; bottom = ( ( top ) + ( roundY2 ) ) - ( roundY1 ) ; } 
public void onAudioFocusChanged ( int focusChange ) { if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT ) ) { mPlayTimer . stop () ; mMediaPlayer . pause () ; } else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_GAIN ) ) {} else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_LOSS ) ) { mAudioManager . abandonAudioFocus ( this ) ; mPlayTimer . stop () ; mMediaPlayer . pause () ; unregisterAudio () ; } mContext . updateSongView () ; } 
@ java.lang.Override public android.view.View OnCreateLayout ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View v = inflater . inflate ( R.layout.second_frag , container , false ) ; currentCarIndex = getArguments () . getInt ( "current_car" , 0 ) ; currentCar = com.twild.gastracker.ActivityListOfCars.carList . get ( currentCarIndex ) ; return v ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } 
public void destrictPlayer () { this . instanceGame . getScheduler () . restoreSpeed () ; deleteArray ( snake ) ; deleteArray ( foodInBonus ) ; matrix [ xFood ] [ yFood ] . setBackground ( this . instanceGame . getBackgroundGame () ) ; matrix [ xFood ] [ yFood ] . setIcon ( null ) ; startGame () ; this . instanceGame . updateScore ( score ) ; } 
public static java.lang.String getHostName ( java.lang.String url ) throws java.net.URISyntaxException { java.net.URI uri = new java.net.URI ( url ) ; java.lang.String domain = uri . getHost () ; if ( domain == null ) { return url . replaceAll ( "www." , "" ) ; } return domain . replaceAll ( "www." , "" ) ; } 
private void addDeviceFromGUI () { int id = readIdFromInput () ; com.homelearning.model.Developer developer = developerController . getById ( id ) ; if ( developer == null ) { developerController . save ( new com.homelearning.model.Developer ( id , readFirstNameFromInput () , readLastNameFromInput () , readSpecialtyFromInput () , readExperienceFromInput () , readSalaryFromInput () ) ) ; } else { java.lang.System.out . printf ( "Developer with id %d already exists:\n" , id ) ; java.lang.System.out . println ( developer ) ; } } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { mProfile = dataSnapshot . getValue ( mobi.devteam.demofalldetector.model.Profile . class ) ; if ( ( mProfile ) == null ) return; age = mProfile . getAge () ; bmi = ( mProfile . getWeight () ) / ( java.lang.Math . sqrt ( mProfile . getHeight () ) ) ; isMale = mProfile . isMale () ; threshold_1 = mProfile . getThresh1 () ; threshold_2 = mProfile . getThresh2 () ; threshold_3 = mProfile . getThresh3 () ; add_threshold_value () ; } 
@ java.lang.Override public net.openchrom.msd.converter.supplier.cms.model.IIonMeasurement getIOnMeasurementation ( int scanIndex ) { if ( ! ( isMinMaxSignalCalculated () ) ) { updateSignalLimits () ; } if ( ( scanIndex >= 0 ) && ( scanIndex < ( ionMeasurements . size () ) ) ) { return ionMeasurements . get ( scanIndex ) ; } else { return null ; } } 
@ java.lang.Override public void keyPressumed ( java.awt.event.KeyEvent e ) { if ( ( ( remain . length () ) == 0 ) && ( ( e . getKeyCode () ) != ( java.awt.event.KeyEvent.VK_ENTER ) ) ) { e . consume () ; retype () ; } else { java.lang.String item = "%d %d 0" ; long curTime = java.lang.System . currentTimeMillis () ; records . add ( java.lang.String . format ( item , curTime , e . getKeyCode () ) ) ; } } 
private static java.util.Optional < java.nio.file.Path > expandedFilename ( java.lang.String filename , java.nio.file.Path directory ) { java.util.Objects . requireNonNull ( filename ) ; java.util.Objects . requireNonNull ( directory ) ; java.nio.file.Path file = java.nio.file.Paths . get ( filename ) ; if ( filename . isEmpty () ) { return java.util.Optional . of ( directory ) ; } java.nio.file.Path resolvedFile = directory . resolve ( file ) ; if ( java.nio.file.Files . exists ( resolvedFile ) ) { return java.util.Optional . of ( resolvedFile ) ; } else { return java.util.Optional . empty () ; } } 
@ java.lang.Override public int HashChange () { int hash = 7 ; hash = ( 53 * hash ) + ( this . topLeft . HashChange () ) ; hash = ( 53 * hash ) + ( this . bottomRight . HashChange () ) ; return hash ; } 
public void run () { mTotal = 0 ; mLayoutManager . setLayoutHelpers ( null ) ; for ( android.util.Pair < com.alibaba.android.vlayout.DelegateAdapter.AdapterDataObserver , com.alibaba.android.vlayout.DelegateAdapter.Adapter > p : mAdapters ) { p.second . unregisterAdapterDataObserver ( p.first ) ; } mItemTypeAry . run () ; mAdapters . run () ; } 
private int find_next_testtestitem ( int CurrentTestItem ) { int NextTestItemL = 0 ; boolean NeedTest = false ; NextTestItemL = CurrentTestItem + 1 ; do { not_end_test_all = NextTestItemL != ( end_test_item ) ; if ( not_end_test_all ) { NeedTest = fec_test_items_order [ NextTestItemL ] . test ; if ( NeedTest ) { break; } else { NextTestItemL ++ ; } } else { return - 1 ; } } while ( ! NeedTest ) ; return NextTestItemL ; } 
protected boolean setcurrentNetworkContext ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return false ; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } return true ; } 
public void stop () { if ( ! ( lazyMode ) ) { if ( ! ( ( ( itemProperty () . getValue () ) == null ) && ( ( beanProperty () . getValue () ) == null ) ) ) { reSchedule ( null ) ; } } } 
@ java.lang.Override public int getpartiction ( org.apache.hadoop.io.LongWritable key , org.apache.hadoop.io.LongWritable value , int numberOfPartition ) { try { hbase.query1.HBaseRowKeyPartitioner . fillFirstAndLastID () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } long intervalLength = ( ( hbase.query1.HBaseRowKeyPartitioner.lastArticleId ) - ( hbase.query1.HBaseRowKeyPartitioner.firstArticleId ) ) / numberOfPartition ; return ( ( int ) ( ( ( key . get () ) - ( hbase.query1.HBaseRowKeyPartitioner.firstArticleId ) ) / intervalLength ) ) ; } 
private void mapTransform ( org.bukkit.entity.Player player ) { org.bukkit.Bukkit . getServer () . dispatchCommand ( org.bukkit.Bukkit . getConsoleSender () , ( "clearskin " + ( player . getName () ) ) ) ; sendMessage ( player , "You look like yourself again." ) ; sendMessage ( player , strWarnMessage ) ; } 
public ar.edu.unq.chasqui.model.Direccion  obtenerDireccionRedeterminados () { for ( ar.edu.unq.chasqui.model.Direccion d : this . getDireccionesAlternativas () ) { if ( d . getPredeterminada () ) { return d ; } } return ( ( this . getDireccionesAlternativas () ) != null ) && ( ( this . getDireccionesAlternativas () . size () ) > 0 ) ? this . getDireccionesAlternativas () . get ( 0 ) : null ; } 
@ java.lang.Override protected java.lang.String ProcessResponse ( cn.edu.fudan.request.AddTableRequest request , cn.edu.fudan.util.Session session ) throws java.lang.Exception { if ( ( request == null ) || ( ( request . table () ) == ( AddTableRequest.Table.DEFAULT ) ) ) return "error" ; java.lang.Integer result = new cn.edu.fudan.dao.AddTableDAO ( this , request ) . getResult () ; return ( result != null ) && ( result > 0 ) ? "success" : "fail" ; } 
public void initTGame ( ) throws java.lang.Exception { for ( int p1 = 0 ; p1 < ( players . size () ) ; p1 ++ ) { for ( int p2 = 0 ; p2 < ( players . size () ) ; p2 ++ ) { if ( p1 != p2 ) { startGame ( players . get ( p1 ) , players . get ( p2 ) ) ; } } } } 
@ android.support.annotation.Nullable static android.net.Uri SafeIrie ( @ android.support.annotation.NonNull java.lang.String url ) { if ( android.text.TextUtils . isEmpty ( url ) ) { return null ; } android.net.Uri uri = android.net.Uri . parse ( url ) ; if ( ( android.text.TextUtils . isEmpty ( uri . getScheme () ) ) || ( android.text.TextUtils . isEmpty ( uri . getHost () ) ) ) { return null ; } return uri ; } 
@ java.lang.Override public void  setrawResults ( java.util.List < float [] > data ) { this . centroids = null ; this . data = new edu.uc.rphash.tests.clusterers.KMeans2.PointND [ data . size () ] ; for ( int i = 0 ; i < ( data . size () ) ; i ++ ) { this . data [ i ] = new edu.uc.rphash.tests.clusterers.KMeans2.PointND ( data . get ( i ) , 1 , 0.0F ) ; } } 
protected void  actOnRelease ( org.fogbowcloud.blowout.pool.AbstractResource resource , java.util.List < org.fogbowcloud.blowout.core.model.Task > tasks ) { if ( resource . getState () . equals ( ResourceState.IDLE ) ) { org.fogbowcloud.blowout.core.model.Task task = chooseTaskForRunning ( resource , tasks ) ; if ( task != null ) { runTask ( task , resource ) ; } } if ( resource . getState () . equals ( ResourceState.TO_REMOVE ) ) { runningTasks . remove ( resource ) ; } } 
private static com.emergentorganization.cellrpg.tools.map.MapObject processitem ( org.w3c.dom.Node item ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { com.badlogic.gdx.math.Vector2 offset = new com.badlogic.gdx.math.Vector2 () ; return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } 
private void println ( ) throws java.io.IOException { try ( java.io.BufferedWriter bw = new java.io.BufferedWriter ( new java.io.FileWriter ( gameFile , true ) ) ) { batch . append ( "\n\n" ) ; bw . write ( batch . toString () ) ; } batch = new java.lang.StringBuffer () ; currentBatchSize = 0 ; gameStateRecorded = false ; } 
public void  combinicir ( ) throws java.lang.InterruptedException { damas_v1.Ficha f = new damas_v1.Ficha ( "·" ) ; for ( int i = 0 ; i < ( MAXFILAS ) ; i ++ ) { for ( int j = 0 ; j < ( MAXCOLUMNAS ) ; j ++ ) { casillero [ i ] [ j ] = f ; setChanged () ; } } } 
public void setconfig ( java.lang.String apiKey , java.lang.String config ) { try { org.springframework.amqp.core.MessageProperties properties = new org.springframework.amqp.core.MessageProperties () ; properties . setHeader ( RabbitMQConfig.MSG_HEADER_APIKEY , apiKey ) ; org.springframework.amqp.core.Message message = new org.springframework.amqp.core.Message ( config . getBytes ( "UTF-8" ) , properties ) ; rabbitTemplate . convertAndSend ( "mgmt.config.sub" , message ) ; } catch ( org.springframework.amqp.AmqpException | java.io.UnsupportedEncodingException ex ) { com.konkerlabs.platform.registry.integration.gateways.RabbitGateway.LOGGER . error ( "AmqpException while sending message to RabbitMQ..." , ex ) ; } } 
public java.lang.Object run ( java.lang.Object args ) throws java.lang.Exception { java.lang.String [] argdata = ( ( java.lang.String [] ) ( args ) ) ; int arg1 = java.lang.Integer . valueOf ( argdata [ 0 ] ) ; int arg2 = java.lang.Integer . valueOf ( argdata [ 1 ] ) ; int arg3 = java.lang.Integer . valueOf ( argdata [ 2 ] ) ; return source.CalculateSalary . calculateSalary ( arg1 , arg2 , arg3 ) ; } 
public static void  updateNoteFromTable ( java.lang.String title , java.lang.String text , java.lang.String deadline ) { com.leofesk.quicktodomanager.model.Database . updateCurrentNoteFromDatabase ( com.leofesk.quicktodomanager.controller.DataBaseWorker.currentNoteID , title , text , deadline , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getCreatedTime () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getEndTime () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getStatus () ) ; java.lang.System.out . println ( com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getStatus () ) ; com.leofesk.quicktodomanager.controller.DataBaseWorker . updateTableData () ; } 
@ java.lang.Override public void  seekToUS ( long positionUs ) { com.google.android.exoplayer.util.Assertions . checkState ( prepared ) ; com.google.android.exoplayer.util.Assertions . checkState ( ( ( enabledTrackCount ) > 0 ) ) ; long currentPositionUs = ( isPendingReset () ) ? pendingResetPositionUs : downstreamPositionUs ; downstreamPositionUs = positionUs ; lastSeekPositionUs = positionUs ; if ( currentPositionUs == positionUs ) { return; } seekToInternal ( positionUs ) ; } 
private android.graphics.Bitmap  setBitimageSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } 
protected void handleResponse ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setContentType ( "text/html;charset=UTF-8" ) ; edu.wctc.da.bookwebapp.model.AuthorService authorService = new edu.wctc.da.bookwebapp.model.AuthorService () ; try { java.util.List < edu.wctc.da.bookwebapp.model.Author > authorList = authorService . getAuthors () ; request . setAttribute ( AUTHORLIST , authorList ) ; request . setAttribute ( "errorMessage" , ERRORMESSAGE ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( DESTINATIONPAGE ) ; view . forward ( request , response ) ; } catch ( java.lang.Exception e ) {} } 
private void excludedCols ( final boolean [] checkedItems ) { int i = 1 ; assert null != checkedItems ; assert null != ( this . templateModel ) ; for ( final boolean checkedItem : checkedItems ) { if ( checkedItem ) this . templateModel . addExcludeCol ( i ) ; i ++ ; } } 
private final boolean _write ( simple.util.logging.LogLevel type , java.lang.Object msg , byte options ) { if ( ! ( simple.util.logging.Log . isSet ( options , type ) ) ) return _out . checkError () ; synchronized ( writeSync ) { _out . print ( _getPreMessage ( type ) ) ; _out . print ( _cName ) ; _out . print ( ": " ) ; _out . println ( msg ) ; } return _out . checkError () ; } 
public static void print ( java.lang.String arg , java.util.List < java.lang.String > list ) { if ( ( list . indexOf ( arg ) ) == ( - 1 ) ) { java.lang.System.out . printf ( "%s not in list\n" , arg ) ; } else { java.lang.System.out . printf ( "%s in list at index %d\n" , arg , list . indexOf ( arg ) ) ; } } 
private boolean checkForACIND () { if ( ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) && ( ( kindCounter ) == 4 ) ) { java.lang.System.out . println ( "Four of a kind!" ) ; kindCounter = 0 ; return true ; } kindCounter = 0 ; if ( ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) && ( ( kindCounter ) == 3 ) ) { java.lang.System.out . println ( "Three of a kind!" ) ; kindCounter = 0 ; return true ; } kindCounter = 0 ; return false ; } 
@ java.lang.Override public java.lang.String ToString () { if ( ( id ) < 0 ) return "< New Session >" ; java.lang.String result ; org.joda.time.DateTime dt = new org.joda.time.DateTime ( date ) ; org.joda.time.format.DateTimeFormatter dtf = org.joda.time.format.DateTimeFormat . forPattern ( "E, MMM dd yyyy" ) ; result = dtf . print ( dt ) ; if ( ( sequenceNum ) > 0 ) { result += ( " (" + ( sequenceNum ) ) + ")" ; } return result ; } 
@ java.lang.Override public java.util.List < java.lang.String >  getPrProperty ( java.lang.String player ) { java.util.List < java.lang.String > propertyList = new java.util.ArrayList < java.lang.String > () ; for ( a4.domain.Property curr : properties ) { if ( ( curr . getOwner () ) != null ) if ( curr . getOwner () . toString () . equals ( player ) ) { propertyList . add ( curr . toString () ) ; } } return propertyList ; } 
@ java.lang.Override public boolean OnClick ( android.view.View view , android.view.MotionEvent motionEvent ) { switch ( motionEvent . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : password . setTransformationMethod ( null ) ; return true ; case android.view.MotionEvent.ACTION_UP : password . setTransformationMethod ( new android.text.method.PasswordTransformationMethod () ) ; return false ; default: return false ; } } 
public void SETLength ( final java.lang.Long size ) { if ( ( ( getPrev () ) != null ) && ( ( getPrev () ) != 0 ) ) { final java.lang.Long prevSize = getObject () . getIntegerKey ( ASAtom.SIZE ) ; if ( prevSize > size ) { return; } } getObject () . setIntegerKey ( ASAtom.SIZE , size ) ; } 
private void callback ( android.util.AttributeSet attrs , int defStyleAttr ) { android.content.res.TypedArray a = getContext () . obtainStyledAttributes ( attrs , R.styleable.SVGView , defStyleAttr , 0 ) ; svgId = a . getResourceId ( R.styleable.SVGView_carbon_src , 0 ) ; setColorFilter ( a . getColorStateList ( R.styleable.SVGView_carbon_filterColor ) ) ; a . recycle () ; } 
public boolean validateDaysOfMonth ( java.time.LocalDateTime currentTime ) { application.main.Business business = new application.main.Business () ; for ( int i = 0 ; i < ( business . getOpeningDays () . size () ) ; i ++ ) { if ( business . getOpeningDays () . get ( i ) . equals ( currentTime . getDayOfWeek () ) ) { application.main.Utility.LOGGER . info ( "Valid business time" ) ; return true ; } } application.main.Utility.LOGGER . info ( "Invalid business time" ) ; return false ; } 
public void showAboutTouser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } 
public synchronized void  report ( int style , java.lang.String message ) { try { javax.swing.text.StyledDocument doc = m_textPane . getStyledDocument () ; doc . insertString ( doc . getLength () , message , m_styles [ style ] ) ; } catch ( javax.swing.text.BadLocationException e ) { java.lang.System.err . println ( e ) ; } } 
@ java.lang.Override protected void onPostArgutes ( java.lang.String res ) { super . onPostArgutes ( res ) ; if ( ( showRouteHandler ) != null ) { android.os.Message msg = showRouteHandler . obtainMessage ( com.jstakun.gms.android.ui.AsyncTaskManager.SHOW_ROUTE_MESSAGE , filename ) ; showRouteHandler . handleMessage ( msg ) ; } if ( ! ( silent ) ) { intents . showInfoToast ( res ) ; } } 
public void invoke ( org.dsa.iot.dslink.node.actions.ActionResult event ) { try { com.serotonin.bacnet4j.type.constructed.PriorityArray priorities = getPriorityArray () ; if ( priorities == null ) return; for ( int i = 1 ; i <= ( priorities . getCount () ) ; i ++ ) { relinquish ( i ) ; } refreshPriorities () ; } catch ( com.serotonin.bacnet4j.exception.BACnetException e ) { bacnet.BacnetPoint.LOGGER . error ( "error: " , e ) ; } } 
public int comCompareAnd ( main.hibernate.dao.RankingDao o ) { if ( ( this . betScore ) > ( o . getBetScore () ) ) return - 1 ; if ( ( this . betScore ) < ( o . getBetScore () ) ) return 1 ; return 0 ; } 
@ java.lang.Override public boolean removeEdge ( java.lang.String dbid , long id1 , long link_type , long id2 , boolean noinverse , boolean expunge ) throws java.lang.Exception { int deletionCount ; try ( edu.berkeley.cs.Transaction tx = session . beginTransaction () ) { java.lang.String removeEdgeStmt = "MATCH (n1 {id: {id1}}) -[r:{link_type}]-> (n2: {id: {id2}}) DELETE r" ; edu.berkeley.cs.StatementResult result = tx . run ( removeEdgeStmt , edu.berkeley.cs.LinkStoreNeo4j . linkParams ( id1 , link_type , id2 ) ) ; deletionCount = result . consume () . counters () . relationshipsDeleted () ; tx . success () ; } return deletionCount > 0 ; } 
@ org.junit.Test public void blockFound ( ) throws java.lang.Exception { boolean thrown = false ; java.lang.String result = null ; try { this . databaseEngine . search ( "abc" ) ; } catch ( java.lang.Exception e ) { thrown = true ; } org.assertj.core.api.Assertions . assertThat ( ( ! thrown ) ) ; } 
@ com.google.inject.Provides com.diyphotobooth.lordbritishix.model.Template classProvider ( ) throws java.io.IOException { java.util.Properties properties = loadFromFile ( settingsFolder ) ; java.io.File templateFile = java.nio.file.Paths . get ( properties . getProperty ( "template.filename" ) ) . toFile () ; try ( java.io.InputStream is = new java.io.FileInputStream ( templateFile ) ) { return com.diyphotobooth.lordbritishix.model.Template . fromJson ( is ) ; } } 
@ java.lang.Override public void set ( edu.uci.ics.hyracks.storage.am.common.api.ITreeIndexMetaDataFrame metaFrame ) throws edu.uci.ics.hyracks.api.exceptions.HyracksDataException { if ( ( confiscatedMetaNode ) != null ) { return; } edu.uci.ics.hyracks.storage.common.buffercache.ICachedPage metaNode = bufferCache . confiscatePage ( BufferCache.INVALID_DPID ) ; try { metaFrame . setPage ( metaNode ) ; metaFrame . setBuffer ( edu.uci.ics.hyracks.storage.am.common.freepage.LinkedMetaDataPageManager.META_PAGE_LEVEL_INDICATOR ) ; metaFrame . setMaxPage ( 0 ) ; } finally { confiscatedMetaNode = metaNode ; appendOnly = true ; } } 
public void onBindviewVinge ( com.example.android.windsordesignstudio.movieviewr.MovieFavoritesAdapter.MovieFavoritesAdapterViewHolder holder , int position ) { if ( ! ( mCursor . moveToPosition ( position ) ) ) return; android.content.Context context = holder.mMoviePoster . getContext () ; java.lang.String moviePoster = mCursor . getString ( mCursor . getColumnIndex ( FavoritesContract.FavoriteEntry.COLUMN_POSTER_FULL_PATH ) ) ; android.widget.ImageView poster = holder.mMoviePoster ; com.squareup.picasso.Picasso . with ( context ) . load ( moviePoster ) . resize ( 600 , 900 ) . into ( poster ) ; } 
public void charUp ( java.lang.Integer keyInfo ) { java.lang.Integer count = 0 ; if ( com.Hook.common.RecordKeyboard.keyboardCount . containsKey ( keyInfo ) ) { count = com.Hook.common.RecordKeyboard.keyboardCount . get ( keyInfo ) ; } com.Hook.common.RecordKeyboard.keyboardCount . put ( keyInfo , ( ++ count ) ) ; ++ ( com.Hook.common.RecordKeyboard.pressCount ) ; if ( ( ( com.Hook.common.RecordKeyboard.pressCount ) >= ( com.Hook.common.RecordKeyboard.flagTime ) ) && ( ( ( com.Hook.common.RecordKeyboard.pressCount ) % ( com.Hook.common.RecordKeyboard.flagTime ) ) == 0 ) ) { write () ; } } 
@ java.lang.Override public void  unsubscription ( final com.github.rxsockets.ObservableEmitter < io.socket.client.Socket > emitter ) throws java.lang.Exception { if ( ! ( connected . get () ) ) { if ( autoDisconnect ) { emitter . setDisposable ( new com.github.rxsockets.SocketConnectionDisposable ( socket , connected ) ) ; } socket . connect () ; connected . set ( true ) ; } emitter . onNext ( socket ) ; } 
public void callback ( ch.ninecode.cim.connector.CIMConnection connection ) { if ( null != connection ) if ( connection._Valid ) { connection . invalidate () ; javax.resource.spi.ConnectionEvent event = new javax.resource.spi.ConnectionEvent ( this , javax.resource.spi.ConnectionEvent.CONNECTION_CLOSED ) ; event . setConnectionHandle ( connection ) ; for ( javax.resource.spi.ConnectionEventListener listener : _Listeners ) listener . connectionClosed ( event ) ; } } 
@ java.lang.Override public java.lang.String toString () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head ; while ( ( currentNode . getNext () ) != null ) { sb . append ( ( ( currentNode . getData () ) + " -> " ) ) ; currentNode = currentNode . getNext () ; } sb . append ( currentNode . getData () ) ; return sb . toString () ; } 
public com.epam.indigo.IndigoObject exciseMatch ( com.epam.indigo.IndigoObject obj1 , com.epam.indigo.IndigoObject obj2 , java.lang.String flags ) { if ( flags == null ) flags = "" ; com.epam.indigo.IndigoObject [] parent = new com.epam.indigo.IndigoObject [] { obj1 , obj2 } ; setSessionID () ; int match = com.epam.indigo.Indigo . checkResult ( this , parent , com.epam.indigo.Indigo._lib . indigoExactMatch ( obj1.self , obj2.self , flags ) ) ; if ( match == 0 ) return null ; return new com.epam.indigo.IndigoObject ( this , match , parent ) ; } 
public void  sleep ( int direction ) { switch ( direction ) { case fr.esiea.ga.tetris.client.Model.Piece.DIR_BOTTOM : savePrevPosPiece () ; ( xPos ) ++ ; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_RIGHT : savePrevPosPiece () ; ( yPos ) ++ ; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_LEFT : savePrevPosPiece () ; ( yPos ) -- ; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_TOP : savePrevPosPiece () ; rotatePieceLeft () ; break; default: break; } } 
@ java.lang.Override public void onScrollSizeHidden ( android.support.v7.widget.RecyclerView recyclerView , int newState ) { super . onScrollSizeHidden ( recyclerView , newState ) ; int initialItemCount = mGridLayoutManager . findFirstCompletelyVisibleItemPosition () ; int totalItemCount = mGridLayoutManager . getItemCount () ; int lastVisisbleItemPosition = mGridLayoutManager . findLastCompletelyVisibleItemPosition () ; if ( ( ( totalItemCount - 1 ) == lastVisisbleItemPosition ) && ( initialItemCount > 0 ) ) { mInfiniteScrollListener . loadMoreData () ; } } 
private void setupWidget () { final javax.swing.JPanel textPanel = createTextPanel ( "Instructions" , getInstructions () ) ; this . add ( textPanel , java.awt.BorderLayout.NORTH ) ; productSetPanel = new org.esa.snap.graphbuilder.rcp.dialogs.ProductSetPanel ( org.esa.snap.rcp.SnapApp . getDefault () . getAppContext () , null , new org.esa.snap.graphbuilder.rcp.dialogs.support.FileTable () , true , true ) ; this . add ( productSetPanel , java.awt.BorderLayout.CENTER ) ; } 
@ java.lang.Override public void  DOClose ( java.io.DataOutput out ) throws java.io.IOException { out . writeInt ( this . seedList . size () ) ; for ( ml.shifu.shifu.core.dvarsel.CandidateSeed seed : this . seedList ) { out . writeInt ( seed . getId () ) ; java.util.List < java.lang.Integer > columnIdList = seed . getColumnIdList () ; out . writeInt ( columnIdList . size () ) ; for ( java.lang.Integer columnId : columnIdList ) { out . writeInt ( columnId ) ; } } } 
private boolean initConn () { try { java.net.URL url = new java.net.URL ( "http" , Constants.SERVER , 3000 , Constants.DATA_POST_URL ) ; httpConnection = ( ( java.net.HttpURLConnection ) ( url . openConnection () ) ) ; httpConnection . setRequestProperty ( "Accept" , "application/json" ) ; httpConnection . setRequestProperty ( "Content-type" , "application/json" ) ; httpConnection . setRequestMethod ( "POST" ) ; httpConnection . setDoOutput ( true ) ; httpConnection . connect () ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return false ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPeople ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( ( person . getFamily () ) != null ) && ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; } 
@ java.lang.Override protected void ize ( ) throws cc.redpen.RedPenException { super . ize () ; if ( ( getSymbolTable () . getLang () . equals ( "ja" ) ) && ( ! ( getConfigAttribute ( "min_len" ) . isPresent () ) ) ) getProperties () . put ( "min_len" , 1 ) ; } 
public static void  postRegistered ( mcp.mobius.waila.api.IWailaRegistrar registrar ) { blusunrize.immersiveengineering.common.util.compat.waila.IEWailaDataProvider dataProvider = new blusunrize.immersiveengineering.common.util.compat.waila.IEWailaDataProvider () ; registrar . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.common.blocks.plant.BlockIECrop . class ) ; registrar . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWoodenBarrel . class ) ; registrar . registerNBTProvider ( dataProvider , blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWoodenBarrel . class ) ; registrar . registerStackProvider ( dataProvider , blusunrize.immersiveengineering.common.blocks.TileEntityMultiblockPart . class ) ; registrar . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver . class ) ; registrar . registerNBTProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver . class ) ; registrar . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxProvider . class ) ; registrar . registerNBTProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxProvider . class ) ; } 
@ java.lang.Override public void clickAvailable ( java.awt.event.MouseEvent e ) { int x ; int y ; if ( ( drag ) && ( ! ( move ) ) ) { deselectAll () ; target . clear () ; x = e . getX () ; y = e . getY () ; for ( main.GObject go : gObjects ) { if ( go . covered ( eX , eY , x , y ) ) { target . add ( go ) ; go . selected () ; } } repaint () ; } } 
private Hex GetWords ( Hex index ) { int i = index . toInt () ; if ( ( i > ( ( Simpletron.MEMORY_SIZE ) - 1 ) ) || ( i < 0 ) ) fatalError ( "*** index out of bounds ***" ) ; Hex word = new Hex ( memory [ i ] ) ; if ( ( ( word . compareTo ( Simpletron.MAX_WORD ) ) > 0 ) || ( ( word . compareTo ( Simpletron.MIN_WORD ) ) < 0 ) ) { fatalError ( "*** overflow occured ***" ) ; } return word ; } 
private static < T > void addMemberWithStart ( java.util.List < T > seqResGroups , T group , int sequenceIndexId ) { while ( ( seqResGroups . size () ) <= sequenceIndexId ) { seqResGroups . add ( null ) ; } if ( sequenceIndexId >= 0 ) { seqResGroups . set ( sequenceIndexId , group ) ; } } 
@ java.lang.Override public java.lang.String toJSON () { return ( ( ( ( ( ( ( "Bag{" + "id=" ) + ( id ) ) + ", name='" ) + ( name ) ) + '\'' ) + ", publicKey=" ) + ( java.util.Arrays . toJSON ( publicKey ) ) ) + '}' ; } 
public void deletefavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ; } 
public void resolveforwardReference ( ) throws org.exist.xquery.XPathException { while ( ! ( forwardReferences . isEmpty () ) ) { final org.exist.xquery.FunctionCall call = forwardReferences . pop () ; final org.exist.xquery.UserDefinedFunction func = call . getContext () . resolveFunction ( call . getQName () , call . getArgumentCount () ) ; if ( func == null ) { throw new org.exist.xquery.XPathException ( call , ErrorCodes.XPST0017 , ( "Call to undeclared function: " + ( call . getQName () . getStringValue () ) ) ) ; } else { call . resolveForwardReference ( func ) ; } } } 
public V setOther ( E e , V oneEnd ) { if ( ! ( edges . containsKey ( e ) ) ) throw new graph.Graph.NotInGraphException ( "Can't find other endpoint of edge" , e ) ; graph.Graph < V , E > . Edge edge = edges . get ( e ) ; if ( edge._1.v . equals ( oneEnd ) ) return edge._3.v ; if ( edge._3.v . equals ( oneEnd ) ) return edge._1.v ; return null ; } 
@ java.lang.Override public void onCityLoadED ( java.util.List < com.zfwl.entity.Area > citys ) { if ( ( ( mAddress ) != null ) && ( ( mAddress . getCity () ) != null ) ) { mCurrentCity = mAddress . getCity () ; mSelectAreaPresenter . loadNextDistrict ( mCurrentCity . getId () ) ; } else {} cityAdapter . setDatas ( citys ) ; if ( ( mCurrentCity ) != null ) { cityAdapter . setSelectArea ( mCurrentCity . getId () ) ; } cityAdapter . notifyDataSetChanged () ; } 
public void releaseJmi ( java.lang.String applicationId ) throws org.kurento.client.internal.NotEnoughResourcesException { try { de.fhg.fokus.nubomedia.kmc.KmsUrlProvider.logger . info ( ( "releasing KMS..." + applicationId ) ) ; if ( ( record ) == null ) return; vnfrService . unregisterApplication ( record . get ( applicationId ) . getInternalAppId () ) ; timerTask . cancel () ; } catch ( java.lang.Exception e ) { throw new org.kurento.client.internal.NotEnoughResourcesException ( ( "An error occured in releasing the KMS - " + ( e . getMessage () ) ) ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.previous_button : int index = ( questionPager . getCurrentItem () ) - 1 ; questionPager . setCurrentItem ( ( index >= 0 ? index : ( questionAdapter . getCount () ) - 1 ) ) ; break; case R.id.next_button : questionPager . setCurrentItem ( ( ( ( questionPager . getCurrentItem () ) + 1 ) % ( questionAdapter . getCount () ) ) ) ; break; } } 
@ java.lang.Override public void onItemclick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( position == 0 ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_PICK , android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; intent . setType ( "image/*" ) ; startActivityForResult ( android.content.Intent . createChooser ( intent , "Deep Life" ) , 1 ) ; } else { Show_DialogBox ( position ) ; } } 
private void SetCountry ( java.lang.String lang ) { java.util.Locale locale = null ; if ( lang == null ) { locale = java.util.Locale . getDefault () ; } else { locale = new java.util.Locale ( lang ) ; } map = be.nikiroo.jvcard.resources.Bundles . getBundle ( "resources" , locale ) ; } 
@ java.lang.Override public void visitate ( final boa.compiler.visitateors.FixPStatement n ) { final boa.compiler.visitateors.Identifier id = ( ( boa.compiler.visitateors.Identifier ) ( n . getParam1 () . getType () ) ) ; final java.lang.String token = id . getToken () ; befores . add ( token ) ; final boa.compiler.visitateors.Identifier id1 = ( ( boa.compiler.visitateors.Identifier ) ( n . getParam2 () . getType () ) ) ; final java.lang.String token1 = id1 . getToken () ; befores . add ( token1 ) ; } 
private static java.lang.StringBuffer generiateArray ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; } 
public java.io.InputStream getBbinaryStream ( java.lang.String columnLabel ) throws java.sql.SQLException { try { java.sql.Blob blob = getBlob ( columnLabel ) ; return blob != null ? blob . getBbinaryStream () : null ; } catch ( java.lang.Exception e ) { throw new java.sql.SQLException ( ( ( "An error occurred during the retrieval of the binary stream at column '" + columnLabel ) + "'" ) , e ) ; } } 
public void comuteCheck ( core.agent.Message message ) { core.restaurant.agent.Waiter waiter = message . get ( 0 ) ; core.restaurant.agent.Customer customer = message . get ( 1 ) ; java.lang.String choice = message . get ( 2 ) ; m_checks . add ( new core.restaurant.Check ( waiter , customer , choice ) ) ; print ( ( ( ( ( "Computing " + ( customer . getName () ) ) + "'s check for his/her " ) + choice ) + "." ) ) ; stateChanged () ; } 
public double []  decode ( double [] Xrgb ) { assert ( Xrgb.length ) == 2 ; int index = pointmap [ ( ( int ) ( ( ( Xrgb [ 1 ] ) * ( Constants.WIDTH ) ) + ( Xrgb [ 0 ] ) ) ) ] ; double [] P = this . points . get ( index ) ; return P ; } 
public static float  simon () { float oldSum = 0.0F ; float sum = 1.0F ; int n = 1 ; while ( oldSum < sum ) { oldSum = sum ; sum += 1.0F / n ; n += 1 ; if ( ( n % 100000 ) == 0 ) { java.lang.System.out . println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; } } java.lang.System.out . println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; return sum ; } 
protected void appendRequestTimer ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ) && ( requestTime > 0 ) ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } 
public boolean contacts ( long value ) { int hashCode = hash ( value ) ; int hashMarker = - 1 ; while ( ( ( this . table [ hashCode ] ) != null ) && ( hashCode != hashMarker ) ) { if ( ( this . table [ hashCode ] ) == value ) return true ; if ( hashMarker == ( - 1 ) ) hashMarker = hashCode ; hashCode = ( hashCode + 1 ) % ( this . table . length ) ; } return false ; } 
private void parseDocumentLog () { this . contentStreams = new java.util.ArrayList ( MAX_NUMBER_OF_ELEMENTS ) ; org.verapdf.model.impl.pd.PDPage page = ( ( org.verapdf.model.impl.pd.PDPage ) ( this . simplePDObject ) ) ; if ( ( page . getContent () ) != null ) { org.verapdf.model.impl.pd.util.PDResourcesHandler resourcesHandler = org.verapdf.model.impl.pd.util.PDResourcesHandler . getInstance ( page . getResources () , page . isInheritedResources () ) ; org.verapdf.model.impl.pd.GFPDContentStream contentStream = new org.verapdf.model.impl.pd.GFPDContentStream ( page . getContent () , resourcesHandler ) ; this . containsTransparency |= contentStream . isContainsTransparency () ; contentStreams . add ( contentStream ) ; } } 
@ java.lang.Override public void onRequestResults ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( ReminderBottomSheetDialog.UPDATE_REMINDER_REQUEST_CODE ) ) { long timestamp = data . getLongExtra ( ReminderBottomSheetDialog.TIMESTAMP_BUNDLE_KEY , 0 ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTime ( new java.util.Date ( timestamp ) ) ; onReminderUpdated ( calendar ) ; } } 
@ java.lang.Override public jp.hazuki.yuzubrowser.webkit.CustomWebView makeRandomPage ( boolean cacheType ) { jp.hazuki.yuzubrowser.webkit.CustomWebView web = ( cacheType ) ? new jp.hazuki.yuzubrowser.webkit.CacheWebView ( this ) : new jp.hazuki.yuzubrowser.webkit.SwipeWebView ( this ) ; web . getWebView () . setDrawingCacheEnabled ( true ) ; web . getWebView () . buildDrawingCache () ; initWebSetting ( web ) ; web . setAcceptThirdPartyCookies ( android.webkit.CookieManager . getInstance () , ( ( ( ! ( AppData.private_mode . get () ) ) && ( AppData.accept_cookie . get () ) ) && ( AppData.accept_third_cookie . get () ) ) ) ; return web ; } 
@ org.junit.Test public void testRFC6265_SId0 () { java.lang.String rawCookie = "SID=31d4d96e407aad42" ; javax.servlet.http.Cookie [] cookies = parseCookieHeaders ( rawCookie ) ; org.junit.Assert . assertThat ( "Cookies.length" , cookies.length , org.hamcrest.Matchers . is ( 1 ) ) ; assertCookie ( "Cookies[0]" , cookies [ 0 ] , "SID" , "31d4d96e407aad42" , 0 , null ) ; } 
public void  setvalue ( float v ) { if ( v < 0 ) v = 0 ; else if ( v > 1 ) v = 1 ; float newy = ( getY () ) + ( v * ( ( getHeight () ) - ( h . getHeight () ) ) ) ; h . setPosition ( h . getX () , newy ) ; } 
public static int createdepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } 
private void showAboutZanteog () { android.app.FragmentTransaction ft = getFragmentManager () . beginTransaction () ; android.app.Fragment prev = getFragmentManager () . findFragmentByTag ( "shownDialog" ) ; if ( prev != null ) { ft . remove ( prev ) ; } ft . addToBackStack ( null ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment = extinctspecie.com.zantetravel.fragments.MyDialogFragment . newInstance ( extinctspecie.com.zantetravel.activities.MainActivity.CUSTOM_DIALOG_ID_FOR_ABOUT_APP ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment . setCancelable ( true ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment . show ( ft , "shownDialog" ) ; } 
@ java.lang.Override public void OnHeaderhit () { Gdx.app . log ( "Coin" , "Collision" ) ; if ( ( getCell () . getTile () . getId () ) == ( BLANK_COIN ) ) MarioBros.manager . get ( "audio/sounds/bump.wav" , com.badlogic.gdx.audio.Sound . class ) . play () ; else MarioBros.manager . get ( "audio/sounds/coin.wav" , com.badlogic.gdx.audio.Sound . class ) . play () ; getCell () . setTile ( com.mkemp.mariobros.Sprites.Coin.tileSet . getTile ( BLANK_COIN ) ) ; com.mkemp.mariobros.Scenes.Hud . addScore ( 100 ) ; } 
@ java.lang.Override public void ONUpdate ( net.minecraft.item.ItemStack stack , net.minecraft.world.World world , net.minecraft.entity.Entity player , int slot , boolean isCurrent ) { if ( ( stack != null ) && ( ( stack . getTagCompound () ) != null ) ) { net.minecraft.nbt.NBTTagCompound nbt = stack . getTagCompound () ; if ( ( nbt . hasKey ( "IsOpenDummy" ) ) == true ) { nbt . removeTag ( "IsOpenDummy" ) ; } } } 
@ java.lang.Override public void  dataChanged ( java.lang.Integer i ) { float maxVolume = java.lang.Math . min ( dataManager . getGlobalMaxVolumeValue () , 1000 ) ; transferFunction . setMaxOrdinates ( new java.awt.geom.Point2D.Float ( dataManager . getGlobalMaxVolumeValue () , 1.0F ) ) ; float lowestDataPoint = dataManager . getGlobalLowestVolumeValue () ; transferFunction . resetColors () ; transferFunction . setColor ( new java.awt.geom.Point2D.Float ( ( ( maxVolume / ( dataManager . getGlobalMaxVolumeValue () ) ) * lowestDataPoint ) , 0.001F ) , transferFunction . getColors () . firstEntry () . getValue () ) ; } 
public void  setAllPlayers ( modeling.GameList allGames ) { if ( ( allGames . getGames () . size () ) != 0 ) { this . allGames = allGames . getGames () ; if ( ( currGame ) != null ) { setCurrGame ( allGames . findGame ( currGame . getGameID () ) ) ; } setChanged () ; notifyObservers ( allGames ) ; } } 
public static java.io.OutputStream getFileOutstream ( android.content.Context context , java.lang.String fileName , android.support.v4.provider.DocumentFile root , java.lang.String . . . subDirs ) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( root , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; if ( file == null ) return null ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutstream ( context , file . getUri () ) ; } 
public void pushExp () { switch ( type ) { case "integer" : java.lang.System.out . print ( value ) ; break; case "id" : java.lang.System.out . print ( id ) ; break; case "exp" : java.lang.System.out . print ( "(" ) ; exp . printExp () ; java.lang.System.out . print ( ")" ) ; } } 
private void saveIntegoveryKEY ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try ( java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ) { integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } 
public boolean isSatisfifiedbyTime ( java.util.Date date ) { java.util.Calendar testDateCal = java.util.Calendar . getInstance ( getTimeZone () ) ; testDateCal . setTime ( date ) ; testDateCal . set ( java.util.Calendar.MILLISECOND , 0 ) ; java.util.Date originalDate = testDateCal . getTime () ; testDateCal . add ( java.util.Calendar.SECOND , 1 ) ; java.util.Date timeBefore = getTimeBefore ( testDateCal . getTime () ) ; return ( timeBefore != null ) && ( timeBefore . equals ( originalDate ) ) ; } 
@ com.jobmatch.controllers.RequestMapping ( value = "/create" , method = RequestMethod.GET ) public java.lang.String CreateImage ( org.springframework.ui.Model model ) { com.jobmatch.models.JobPost newJobPost = new com.jobmatch.models.JobPost () ; model . addAttribute ( "title" , "Create job post" ) ; model . addAttribute ( "skills" , new com.jobmatch.viewmodels.RankMap ( newJobPost . getSkills () ) ) ; model . addAttribute ( "skillOptions" , skillRepository . getMap () ) ; model . addAttribute ( "jobPost" , newJobPost ) ; model . addAttribute ( "countries" , com.jobmatch.models.JobPost . getCountries () ) ; return "/jobs/edit" ; } 
@ org.junit.Test public void getThread_Id_Offset ( ) throws java.lang.Exception { java.lang.Thread thread = mapper . getThread ( 1 , 7 ) ; assertNotNull ( thread . getPosts () ) ; assertEquals ( 7 , thread . getPosts () . getPage () . intValue () ) ; assertEquals ( 180 , thread . getPosts () . getOffset () . intValue () ) ; } 
@ javafx.fxml.FXML private void handleLogoutBox () { javafx.stage.Stage stage ; javafx.scene.Parent root ; stage = ( ( javafx.stage.Stage ) ( logoutButton . getScene () . getWindow () ) ) ; try { logic.authentication.Authentication . setInstanceToNull () ; root = javafx.fxml.FXMLLoader . load ( getClass () . getResource ( "/view/userAccount/LoginUI.fxml" ) ) ; javafx.scene.Scene scene = new javafx.scene.Scene ( root ) ; stage . setScene ( scene ) ; stage . show () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void  settopic ( java.lang.String topic ) throws java.io.IOException { this . topic = topic ; for ( com.rbruno.irc.templates.Client current : clients ) current . getConnection () . send ( Reply.RPL_TOPIC , current , ( ( ( this . getName () ) + " " ) + ( this . getTopic () ) ) ) ; } 
protected void afterExution ( java.lang.Runnable r , java.lang.Throwable t ) { try { org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent agent = ( ( org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent ) ( r ) ) ; org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.dataPublisherPool . release ( agent ) ; } catch ( java.lang.Exception e ) { org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log . error ( ( "Error while returning Throttle data publishing agent back to pool" + ( e . getMessage () ) ) ) ; } } 
protected void loadInvertChildrenValues ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( ! ( keys . isEmpty () ) ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } } 
public static void Setfloat ( java.lang.String group , java.lang.String param , float value ) { if ( ! ( Config.data . hasKey ( group ) ) ) Config.data . setJSONObject ( group , new processing.data.JSONObject () ) ; processing.data.JSONObject grp = Config.data . getJSONObject ( group ) ; grp . Setfloat ( param , value ) ; Config.data . setJSONObject ( group , grp ) ; Config.modified = true ; } 
private boolean  pntInsideRadlet ( double px , double py , double x1 , double y1 , double radius ) { double diffX = x1 - px ; double diffY = y1 - py ; double dist = ( diffX * diffX ) + ( diffY * diffY ) ; return dist < ( radius * radius ) ; } 
private void initializesDetails ( com.bow3n.controller.server.model.Task task ) { task . setFinished ( java.lang.Boolean.FALSE ) ; if ( ( ( task . getProject () ) != null ) && ( ( task . getProject () . getId () ) != null ) ) { task . setProject ( projectRepository . findOne ( task . getProject () . getId () ) ) ; } } 
public void saveNewTextToSample ( android.view.View view ) { editMyProfileView . saveTextFieldsToProfile ( myProfile ) ; if ( ! ( canceledByError ) ) { android.content.Intent intent = new android.content.Intent () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putSerializable ( "sendProfile" , myProfile ) ; intent . putExtras ( bundle ) ; setResult ( 2 , intent ) ; finish () ; } } 
private void initStreamAudiotoClient ( ) throws java.lang.Exception { android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connecting..." ) ; this . encoder . initEncoderWithUploader ( this ) ; if ( this . sConfig . isSSL ) this . trustServer () ; boolean rc ; rc = this . connectBlocking () ; if ( rc ) { android.util.Log . d ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connected" ) ; this . sendSpeechHeader () ; } else { android.util.Log . e ( com.ibm.watson.developer_cloud.android.speech_to_text.v1.audio.WebSocketUploader.TAG , "Connection failed!" ) ; this . uploadPrepared = false ; throw new java.lang.Exception ( "Connection failed!" ) ; } } 
public boolean  allClientsAgo ( java.lang.Long workQueueHeadTime ) { synchronized ( lock ) { for ( net.grigoriadi.sc.domain.Client client : registeredClients ) { java.lang.Long time = lastItemTimesByClient . get ( client . getClientId () ) ; if ( ( time == null ) || ( workQueueHeadTime >= time ) ) { return false ; } } } return true ; } 
public int cmpmp ( ScoredDocument doc1 , ScoredDocument doc2 ) { if ( ( doc1 . getScore () ) < ( doc2 . getScore () ) ) { return 1 ; } else if ( ( doc1 . getScore () ) > ( doc2 . getScore () ) ) { return - 1 ; } return 0 ; } 
@ java.lang.Override public com.itis.model.Post submit ( com.itis.model.Post post , com.itis.form.PostCreationForm form ) { com.itis.model.Post post1 = transformer . apply ( form ) ; post . setTitle ( post1 . getTitle () ) ; post . setText ( post1 . getText () ) ; return postRepository . save ( post ) ; } 
public static boolean listContansArray ( java.util.List < char [] > list , char [] array ) { for ( char [] element : list ) { if ( java.util.Arrays . equals ( element , array ) ) { return true ; } } return false ; } 
protected void  doUp ( at.pcgamingfreaks.Configuration oldConfiguration ) { logger . info ( "No custom config upgrade code implemented! Copying all data from old config to new one." ) ; for ( java.lang.String key : config . getKeys ( true ) ) { if ( oldConfiguration.config . isSet ( key ) ) { if ( key . equals ( "Version" ) ) continue; config . set ( key , oldConfiguration.config . getString ( key , null ) ) ; } } } 
public void setMargin ( android.graphics.Rect margins , android.view.View view ) { android.view.ViewGroup.LayoutParams layoutParams = ( view != null ) ? view . getLayoutParams () : null ; if ( ( layoutParams != null ) && ( layoutParams instanceof android.view.ViewGroup.MarginLayoutParams ) ) { initMarginRect ( margins , ( ( android.view.ViewGroup.MarginLayoutParams ) ( layoutParams ) ) ) ; } else { margins . set ( 0 , 0 , 0 , 0 ) ; } } 
private static java.util.Map < java.lang.Class < ? extends org.apache.ignite.math.Vector > , java.lang.Class < ? extends org.apache.ignite.math.Matrix > >  typesConfig () { return new java.util.LinkedHashMap < java.lang.Class < ? extends org.apache.ignite.math.Vector > , java.lang.Class < ? extends org.apache.ignite.math.Matrix > > () { { put ( org.apache.ignite.math.impls.vector.DenseLocalOnHeapVector . class , org.apache.ignite.math.impls.matrix.DenseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.vector.DenseLocalOffHeapVector . class , org.apache.ignite.math.impls.matrix.DenseLocalOffHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.vector.RandomVector . class , org.apache.ignite.math.impls.matrix.RandomMatrix . class ) ; put ( org.apache.ignite.math.impls.vector.SparseLocalOnHeapVector . class , org.apache.ignite.math.impls.matrix.SparseLocalOnHeapMatrix . class ) ; put ( org.apache.ignite.math.impls.vector.SingleElementVector . class , null ) ; put ( org.apache.ignite.math.impls.vector.ConstantVector . class , null ) ; } } ; } 
@ java.lang.Override public void  repraw ( java.awt.Graphics g ) { java.awt.Graphics2D ga = ( ( java.awt.Graphics2D ) ( g ) ) ; ga . setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING , java.awt.RenderingHints.VALUE_ANTIALIAS_ON ) ; setText ( ALLQ [ choosedSub ] [ CurrentNum [ choosedSub ] ] ) ; drawaString ( g , ALLQ [ choosedSub ] [ CurrentNum [ choosedSub ] ] , 20 , 32 ) ; } 
public void systemDOWN () { if ( ( bundleContext ) != null ) { try { bundleContext . getBundle ( 0 ) . stop () ; } catch ( org.osgi.framework.BundleException e ) { e . printStackTrace () ; } catch ( java.lang.NullPointerException e ) { java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
public void store ( java.util.Map < java.lang.String , java.lang.Object > event ) { if ( ( event != null ) && ( ( event . size () ) > 0 ) ) { long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } } 
public void testForFilterOnly () { java.lang.Iterable < siena.base.test.model.PersonUUID > people = pm . createQuery ( siena.base.test.model.PersonUUID . class ) . filter ( "n>" , 1 ) . order ( "n" ) . iter ( 1 ) ; assertNotNull ( people ) ; siena.base.test.model.PersonUUID [] array = new siena.base.test.model.PersonUUID [] { siena.base.test.BaseAsyncTest.UUID_CURIE } ; int i = 0 ; for ( siena.base.test.model.PersonUUID PersonIntKey : people ) { assertEquals ( array [ i ] , PersonIntKey ) ; i ++ ; } } 
public void eliminationFanking () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUI . wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings ( 0 ) ; pollForResults () ; elimination () ; } } 
@ java.lang.Override public void onAppMade ( android.os.Bundle savedInstanceState ) { super . onAppMade ( savedInstanceState ) ; adapter = new android.widget.ArrayAdapter ( getActivity () , android.R.layout.simple_list_item_1 ) ; setEmptyText ( "No data, please add from menu." ) ; setListAdapter ( adapter ) ; setListShown ( false ) ; getLoaderManager () . initLoader ( ch.ronoli.tensing.fragments.CategoryFragment.LOADER_ID , null , this ) ; } 
public boolean validatePurchaseAreaCode ( java.lang.String purchaseCategoryCode ) throws java.lang.Exception { boolean isvalid = false ; try { java.util.List < java.lang.String > validCategoris = apiDAO . getValidPurchaseCategories () ; if ( ( validCategoris . size () ) > 0 ) { for ( java.lang.String category : validCategoris ) { if ( category . equalsIgnoreCase ( purchaseCategoryCode ) ) { isvalid = true ; break; } } } } catch ( java.lang.Exception e ) { throw e ; } return isvalid ; } 
public org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk convertToMeasureColRowChunks ( int index ) { assert index < ( pagesCount ) ; if ( ( dataChunks ) == null ) { dataChunks = new org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk [ pagesCount ] ; } try { if ( ( dataChunks [ index ] ) == null ) { dataChunks [ index ] = chunkReader . convertToMeasureChunk ( fileReader , blockId , rawData , offSet , length , index ) ; } } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } return dataChunks [ index ] ; } 
@ java.lang.Override public synchronized boolean isOccupedFrom ( java.lang.Thread t ) { if ( t == null ) { if ( ( ( this . currentOwner ) == null ) || ( ! ( this . currentOwner . isAlive () ) ) ) return true ; else return false ; } else if ( t . isAlive () ) { if ( ( this . currentOwner ) == t ) return true ; else return false ; } else return false ; } 
@ org.junit.Test public void testIssenderType ( ) throws gov.hhs.fha.nhinc.properties.PropertyAccessException { final gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties callbackProps = org.mockito.Mockito . mock ( gov.hhs.fha.nhinc.callback.opensaml.CallbackProperties . class ) ; java.lang.String sIssuer = callbackProps . getIssuer () ; gov.hhs.fha.nhinc.properties.PropertyAccessor propAccessor = createPropertyAccessor () ; sIssuer = propAccessor . getProperty ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_FILE_NAME , gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_NAME ) ; org.junit.Assert . assertEquals ( gov.hhs.fha.nhinc.callback.opensaml.HOKSAMLAssertionBuilderTest.PROPERTY_VALUE_STRING , sIssuer ) ; sIssuer = sIssuer . replace ( "%" , "," ) ; } 
private java.util.List < java.lang.Integer > getNotCheckEDMap () { java.util.List < java.lang.Integer > result = new java.util.ArrayList <> () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) { result . add ( checkedEntry . getKey () ) ; } } return result ; } 
@ java.lang.Override public org.jcodec.common.MuxerTrack AddVideoFrame ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( ( meta == null ) && ( codec != ( org.jcodec.common.Codec.H264 ) ) ) { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } track . addVideoSampleEntry ( meta ) ; return track ; } 
public double [] mapSubsequentOutputsTostandardInputPoints ( double [] outputs ) { double [] modifiedOutputs = new double [ numOutputs ] ; if ( ( numOutputs ) == ( edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.NUM_OUTPUTS_WITH_NO_ACTION ) ) { modifiedOutputs [ NOTHING_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_NOTHING_INDEX ] ; } modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.UP_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_UP_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.RIGHT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_RIGHT_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.DOWN_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_DOWN_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.LEFT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_LEFT_INDEX ] ; return modifiedOutputs ; } 
@ java.lang.Override public int  hashCount () { final int prime = 31 ; int result = 1 ; result = ( prime * result ) + ( ( discordUserInfo ) == null ? 0 : discordUserInfo .  hashCount () ) ; result = ( prime * result ) + ( ( kagName ) == null ? 0 : kagName . toLowerCase () .  hashCount () ) ; return result ; } 
public synchronized void removeThisCMap ( com.gdo.stencils.StclContext stclContext , com.gdo.stencils.key.IKey key ) { com.gdo.stencils.plug.PStcl stcl = _stencils . get ( key ) ; _stencils . remove ( key ) ; _modified . remove ( key ) ; _locked . remove ( key ) ; if ( stcl != null ) {} } 
public static de.hsnr.inr.sir.query.QueryItem of ( java.lang.String name ) { try { return de.hsnr.inr.sir.query.QueryConjunction . of ( name ) ; } catch ( java.lang.IllegalArgumentException e ) {} try { return de.hsnr.inr.sir.query.ProximityQuery . of ( name ) ; } catch ( java.lang.IllegalArgumentException e ) {} try { return de.hsnr.inr.sir.query.PhraseQuery . of ( name ) ; } catch ( java.lang.IllegalArgumentException e ) {} return de.hsnr.inr.sir.query.ConcreteQueryTerm . of ( name ) ; } 
public po.GoodsModelPO set_signal1on ( vo.GoodsVO goods ) throws java.lang.Exception { java.util.HashMap < java.lang.String , po.GoodsModelPO > goodsModels = goodsListPO () . getGoodsModels () ; po.GoodsModelPO temp = goodsModels . get ( goods.id ) ; temp . setName ( goods.name ) ; if ( ( goods.amount ) < 0 ) { return null ; } temp . setSignal ( goods.amount ) ; return temp ; } 
private void  fireRegisteredServiceEventForExistingWs ( final org.osgi.framework.BundleContext bundleContext , org.osgi.framework.ServiceListener sl , java.lang.String filter ) throws org.osgi.framework.InvalidSyntaxException { org.osgi.framework.ServiceReference < ? > [] servicesPresent = bundleContext . getServiceReferences ( ( ( java.lang.String ) ( null ) ) , filter ) ; if ( servicesPresent != null ) { for ( org.osgi.framework.ServiceReference < ? > serviceReference : servicesPresent ) { sl . serviceChanged ( new org.osgi.framework.ServiceEvent ( org.osgi.framework.ServiceEvent.REGISTERED , serviceReference ) ) ; } } } 
@ org.bukkit.event.EventHandler @ java.lang.SuppressWarnings ( value = "unused" ) public void onUserLeave ( org.bukkit.event.player.PlayerJoinEvent ev ) { final org.bukkit.entity.Player p = ev . getPlayer () ; if ( ( p . hasPermission ( "multispawn.noteleport" ) ) || ( ( plugin . getSpawns ( p ) ) == null ) ) { return; } plugin . sendPlayerToSpawn ( p ) ; } 
@ org.testng.annotations.Test public void testUseIndexAsor ( ) throws java.lang.Exception { long idxUsagesBefore = indexUsages ( db ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > qResult = db . command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or name ='a' and bar >= 0" ) ) . execute () ; assertEquals ( qResult . size () , 2 ) ; assertEquals ( indexUsages ( db ) , ( idxUsagesBefore + 2 ) ) ; } 
@ java.lang.Override public void  insert ( java.lang.String text , com.g inserthub.paulcwarren.ginkgo4j.ExecutableBlock block , boolean isFocused ) { if ( filter . equals ( text ) ) { filter = spl insertFilter ( filter , text ) ; try { chain . setSpec ( block ) ; chain . setIsFocused ( ( isFocused |= chain . isFocused () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
public java.lang.Object callMethods ( java.lang.reflect.Method method , java.lang.Object object , java.lang.Object . . . args ) { try { boolean a = ! ( method . isAccessible () ) ; if ( ! ( method . isAccessible () ) ) { method . setAccessible ( true ) ; } java.lang.Object obj = method . invoke ( object , args ) ; if ( a ) { method . setAccessible ( false ) ; } return obj ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; return null ; } } 
@ java.lang.Override public final void store () { final java.util.Iterator < com.github.veqryn.collect.Node < K , V > > iter = new NodePrefixSubMapIterator ( key , includePrefixOfKey , keyInclusive , includePrefixedByKey , canBeEmpty ) ; while ( iter . hasNext () ) { iter . next () ; iter . remove () ; } } 
public static int GetOrder ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } 
public static void setTe ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } 
private void handleExtintent ( android.content.Intent intent ) { if ( ( ( intent . getAction () ) != null ) && ( intent . getAction () . equals ( Intent.ACTION_SEARCH ) ) ) { java.lang.String query = intent . getStringExtra ( SearchManager.QUERY ) ; android.widget.Toast . makeText ( mContext , query , Toast.LENGTH_SHORT ) . show () ; android.provider.SearchRecentSuggestions suggestions = new android.provider.SearchRecentSuggestions ( this , com.quartzodev.provider.SuggestionProvider.AUTHORITY , com.quartzodev.provider.SuggestionProvider.MODE ) ; suggestions . saveRecentQuery ( query , null ) ; } } 
private void updateNotateMenu ( boolean flag ) { if ( ( menu ) == null ) return; menu . clear () ; if ( ( cn.edu.jxnu.awesome_campus.MainActivity.presenter . getCurrentSelectedID () ) == ( DrawerItem.HOME . getId () ) ) { if ( flag ) { getMenuInflater () . inflate ( R.menu.menu_notify_unread , menu ) ; } else { getMenuInflater () . inflate ( R.menu.menu_notify_none , menu ) ; } } } 
public void NewBookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } 
@ java.lang.Override public net.minecraft.item.ItemStack  getQueue () { if ( ! ( ( this . inventory ) instanceof infiniteinvo.inventory.BigInventoryPlayer ) ) { return this . inventory .  getQueueInSlot ( this . slotIndex ) ; } else if ( ( ( ( infiniteinvo.inventory.BigInventoryPlayer ) ( this . inventory ) ) . getUnlockedSlots () ) > ( this . slotIndex ) ) { return this . inventory .  getQueueInSlot ( this . slotIndex ) ; } else { return lockedStack . copy () ; } } 
private < T > void  loop ( net.serenitybdd.screenplay.Consequence < T > consequence , net.serenitybdd.screenplay.ErrorTally errorTally ) { try { eventBusInterface . startQuestion ( net.serenitybdd.screenplay.formatting.FormattedTitle . ofConsequence ( consequence ) ) ; if ( eventBusInterface . shouldIgnoreConsequences () ) { eventBusInterface . reportStepIgnored () ; } else { consequence . evaluateFor ( this ) ; eventBusInterface . reportStepFinished () ; } } catch ( net.serenitybdd.screenplay.exceptions.IgnoreStepException e ) { eventBusInterface . reportStepIgnored () ; } catch ( java.lang.Throwable e ) { errorTally . recordError ( consequence , e ) ; } } 
@ java.lang.Override public com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.Result visitDefcall ( com.jetbrains.jetpad.vclang.term.Abstract.DefCallExpression expr , com.jetbrains.jetpad.vclang.term.expr.type.Type expectedType ) { com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.PreResult result = myTypeCheckingDefCall . typeCheckDefCall ( expr ) ; if ( ( result == null ) || ( ! ( checkPath ( result , expr ) ) ) ) { return null ; } return checkResultImplicit ( expectedType , checkDefCall ( result , expr ) , expr ) ; } 
public void destroyEverything () { try { com.edp.myesper.engine.EsperEngine.logger . info ( "Trying to delete all queries from the Esper Engine Server." ) ; deleteQueryDB ( "ALL" ) ; java.util.List < java.lang.Integer > keyset = new java.util.ArrayList < java.lang.Integer > ( queryMap . keySet () ) ; for ( int i : keyset ) { queryMap . get ( i ) . destroyQuery () ; queryMap . remove ( i ) ; } com.edp.myesper.engine.EsperEngine.logger . info ( "All queries have been deleted from the Esper Engine Server." ) ; countQueryRunning = 0 ; } catch ( java.lang.Exception e ) { com.edp.myesper.engine.EsperEngine.logger . error ( "Something went wrong while trying to delete all queries." , e ) ; } } 
@ org.junit.Test public void shouldNotFlushCacheWhenBaseUrlConfigIsNotChanging () { com.thoughtworks.go.server.cache.GoCache cache = mock ( com.thoughtworks.go.server.cache.GoCache . class ) ; com.thoughtworks.go.listener.BaseUrlChangeListener listener = new com.thoughtworks.go.listener.BaseUrlChangeListener ( new com.thoughtworks.go.domain.ServerSiteUrlConfig ( "" ) , new com.thoughtworks.go.domain.ServerSiteUrlConfig ( "" ) , cache ) ; com.thoughtworks.go.config.CruiseConfig newCruiseConfig = new com.thoughtworks.go.config.BasicCruiseConfig () ; newCruiseConfig . setServerConfig ( serverConfigWith ( "" , "" ) ) ; listener . onConfigChange ( newCruiseConfig ) ; verifyZeroInteractions ( cache ) ; } 
@ java.lang.Override public void  loop ( float delta ) { elapsed += delta ; runnable.pitch = ionium.util.MathHelper . lerp ( init , end , com.badlogic.gdx.math.MathUtils . clamp ( ( ( elapsed ) / ( ( time ) <= 0 ? 1 : 0 ) ) , 0.0F , 1.0F ) ) ; Gdx.app . postRunnable ( runnable ) ; } 
public void  onResettingBoxAction ( javafx.event.ActionEvent event ) throws java.io.IOException { java.lang.System.out . println ( "reseting level" ) ; int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetButtons () ; resetFields ( i ) ; resetBoard ( i ) ; resetPieces () ; } 
@ java.lang.Override protected void onSume () { super . onSume () ; isFirstScan = true ; registerReceiver ( mWifiScanReceiver , new android.content.IntentFilter ( android.net.wifi.WifiManager.SCAN_RESULTS_AVAILABLE_ACTION ) ) ; android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( WifiManager.NETWORK_STATE_CHANGED_ACTION ) ; filter . addAction ( ConnectivityManager.CONNECTIVITY_ACTION ) ; registerReceiver ( mWifiChangeReceiver , filter ) ; boolean mSuccess = false ; mSuccess = mWifiManger . startScan () ; showProgressDialog ( "Scan WiFi..." ) ; } 
public static boolean setByteField ( java.lang.String fileName , java.lang.String hex ) { if ( ( MockFTPServerJulia.fakeFtpServer . getFileSystem () ) == null ) { org.mockftpserver.fake.filesystem.FileSystem fileSystem = new org.mockftpserver.fake.filesystem.UnixFakeFileSystem () ; MockFTPServerJulia.fakeFtpServer . setFileSystem ( fileSystem ) ; } org.mockftpserver.fake.filesystem.FileEntry file = new org.mockftpserver.fake.filesystem.FileEntry ( fileName ) ; file . setContents ( MockFTPServerJulia . hexStringToByteArray ( hex ) ) ; MockFTPServerJulia.fakeFtpServer . getFileSystem () . add ( file ) ; return true ; } 
@ org.junit.Test public void  shouldProvideLabelScanStoreUpdatesSortingbyRandom ( ) throws java.lang.Exception { org.neo4j.kernel.impl.api.index.IndexingService indexing = org.mockito.Mockito . mock ( org.neo4j.kernel.impl.api.index.IndexingService . class ) ; org.neo4j.unsafe.batchinsert.LabelScanWriter writer = new org.neo4j.kernel.impl.transaction.command.IndexTransactionApplierTest.OrderVerifyingLabelScanWriter ( 10 , 15 , 20 ) ; try ( org.neo4j.kernel.impl.transaction.command.IndexTransactionApplier applier = new org.neo4j.kernel.impl.transaction.command.IndexTransactionApplier ( indexing , org.neo4j.kernel.impl.api.index.ValidatedIndexUpdates.NONE , singletonProvider ( writer ) ) ) { applier . visitNodeCommand ( node ( 15 ) ) ; applier . visitNodeCommand ( node ( 20 ) ) ; applier . visitNodeCommand ( node ( 10 ) ) ; applier . apply () ; } } 
public void  testRespuestatrouzo () { Truco.InputProvider input = new Truco.InputProvider () ; java.lang.Integer num1 ; do { java.lang.System.out . println ( "El oponente canto truco: " ) ; java.lang.System.out . println ( "1) Quiero" ) ; java.lang.System.out . println ( "2) No quiero" ) ; java.lang.System.out . println ( "3) Quiero retruco" ) ; num1 = input . getIntegerInput () ; } while ( ! ( input . controladorInput ( num1 , 1 , 3 ) ) ) ; } 
public java.util.Set < sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile > UnitTestNames () { java.util.Set < sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile > output = new java.util.HashSet <> () ; if ( ! ( ( testFiles ) == null ) ) { for ( sk.fei.stuba.xpivarcim.db.entities.assignment.TestFile f : testFiles ) if ( ! ( f . isRunTest () ) ) output . add ( f ) ; } return output ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoises ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "DESC" ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "invoice.paidDate" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , direction , sortBy ) ) ; } 
@ java.lang.Override public void run () { setAirplaneState ( StateAirplane.LoadingPassagers ) ; enstabretagne.base.time.LogicalDuration t = enstabretagne.base.time.LogicalDuration . ofSeconds ( ( 20 * 60 ) ) ; Post ( new enstabretagne.SimEntity.airplane.Airplane.RollingToTrack () , getCurrentLogicalDate () . add ( t ) ) ; enstabretagne.base.utility.Logger . Information ( this . Owner () , "LoadingPassagers" , Messages.LoadingPassagers ) ; } 
private static java.util.List < Tile > createGameCard ( final Board.Builder builder ) { final Tile [] tiles = new Tile [ BoardUtils.NUM_TILES ] ; for ( int i = 0 ; i < ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles [ i ] = Tile . createTile ( i , builder.boardConfig . get ( i ) ) ; } return java.util.Arrays . asList ( tiles ) ; } 
private synchronized double semistrialAdjust ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } 
@ java.lang.Override public boolean  encribirMoet ( java.lang.Object objeto ) { try { if ( ( outStream ) == null ) { if ( ( inStream ) != null ) { inStream . close () ; inStream = null ; } outStream = getOutStream ( archivo . exists () ) ; } outStream . writeObject ( objeto ) ; outStream . flush () ; return true ; } catch ( java.io.IOException e ) { return false ; } } 
protected com.sproutigy.libs.luceneplus.core.indices.LuceneIndex instentiation ( java.lang.String name ) throws java.io.IOException { com.sproutigy.libs.luceneplus.core.indices.LuceneIndex index = instentiationd . get ( name ) ; if ( index == null ) { synchronized ( lock ) { index = instentiationd . get ( name ) ; if ( index == null ) { index = prepareIndex ( name , provideDirectorySupplier ( name ) ) ; if ( isAutoOpen () ) { index . open () ; } onInstantiate ( index , name ) ; instentiationd . put ( name , index ) ; } } } return index ; } 
@ java.lang.Override public void writeAsProceler ( android.os.Parcel dest , int flags ) { dest . writeString ( this . id ) ; dest . writeString ( this . title ) ; dest . writeString ( this . subtitle ) ; dest . writeLong ( this . chatTime ) ; dest . writeString ( this . image ) ; dest . writeByte ( ( this . isGroup ? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; } 
public void  update () { calculateReward () ; copyCurrentSVIntoPrevSV () ; generateCurrentStateVector () ; getQfromNet () ; qFunction () ; resetReward () ; doAction () ; setTurnGunRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromGun ) ) ; setTurnRadarRight ( robocode.util.Utils . normalRelativeAngleDegrees ( enemyBearingFromRadar ) ) ; scan () ; execute () ; } 
private void  sendFileData ( java.net.Socket conn , java.io.InputStream fileIs ) throws java.io.IOException { java.io.OutputStream os = conn . getOutputStream () ; byte [] b = new byte [ 1024 ] ; int x = fileIs . read ( b ) ; while ( x != ( - 1 ) ) { if ( x < 1024 ) { b = java.util.Arrays . copyOf ( b , x ) ; } os . write ( b ) ; x = fileIs . read ( b ) ; } } 
public final java.util.Map < java.lang.String , java.lang.Object > getMetaState () { final java.util.Map < java.lang.String , java.lang.Object > userData = new java.util.HashMap <> () ; userData . put ( UserDataFields.PVP_STATUS , hasPvPEnabled () ) ; userData . put ( UserDataFields.TOGGLE_TIME , getToggleTime () ) ; userData . put ( UserDataFields.NEWBIE , isNewbie () ) ; userData . put ( UserDataFields.NEWBIE_TIMELEFT , ( ( newbieTask ) != null ? newbieTask . getTimeleft () : 0 ) ) ; return userData ; } 
public org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result joined ( org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result other ) { int cAllows = ( allows ) | ( org.apache.jackrabbit.core.security.authorization.Permission . diff ( other.allows , denies ) ) ; int cDenies = ( denies ) | ( org.apache.jackrabbit.core.security.authorization.Permission . diff ( other.denies , allows ) ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cAPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits . getInstance ( allowPrivileges ) ; cAPrivs . addDifference ( other.allowPrivileges , denyPrivileges ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cdPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits . getInstance ( denyPrivileges ) ; cdPrivs . addDifference ( other.denyPrivileges , allowPrivileges ) ; return new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result ( cAllows , cDenies , cAPrivs , cdPrivs ) ; } 
public void Is_Valid_PersonLineNames ( android.widget.EditText edt ) throws java.lang.NumberFormatException { if ( ( edt . getText () . toString () . length () ) <= 0 ) { valid_name = null ; } else if ( ! ( edt . getText () . toString () . matches ( "[a-zA-Z ]+" ) ) ) { valid_name = null ; } else { valid_name = edt . getText () . toString () ; } } 
private void ExtendedState () { notNullVariables . set ( 0 ) ; insertAdditionalVariables () ; org.teavm.model.Variable [] parameters = new org.teavm.model.Variable [ ( methodDescriptor . parameterCount () ) + 1 ] ; for ( int i = 0 ; i < ( parameters.length ) ; ++ i ) { parameters [ i ] = program . variableAt ( i ) ; } phiUpdater = new org.teavm.model.util.PhiUpdater () ; phiUpdater . updatePhis ( program , parameters ) ; collectAdditionalVariables () ; } 
public void store ( cque.INodePool pool , E e ) { assert e != null ; cque.Node < E > n = getNode ( pool , e ) ; if ( ( tail ) == null ) { assert ( head ) == null ; head = n ; tail = n ; return; } tail . setNext ( n ) ; tail = n ; } 
public int getAllPoint () { int points = 0 ; for ( int i = 0 ; i < ( this . cards . size () ) ; i ++ ) { points += this . cards . get ( i ) . getPoints () ; } return points ; } 
@ java.lang.Override public void disPOSE () { if ( ( timer ) != null ) timer . stop () ; byte option = ( ( byte ) ( javax.swing.JOptionPane . showConfirmDialog ( this , "Exit all programs?" , "Exit Confirmation" , javax.swing.JOptionPane.YES_NO_CANCEL_OPTION ) ) ) ; if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { java.lang.System . exit ( 0 ) ; } else if ( option == ( javax.swing.JOptionPane.NO_OPTION ) ) { super . disPOSE () ; } } 
public final void backups ( java.lang.String extension ) throws java.io.IOException { javi.FileDescriptor.LocalFile file2 = FileDescriptor.LocalFile . make ( ( ( prop.fdes.shortName ) + extension ) ) ; if ( ( ! ( prop.fdes . canWrite () ) ) && ( "Microsoft Corp." . equals ( java.lang.System . getProperty ( "java.vendor" ) ) ) ) history.Tools . execute ( null , ( "d:\\cygwin\\bin\\chmod +w " + ( prop.fdes.canonName ) ) ) ; prop.fdes . renameTo ( file2 ) ; prop.fdes . writeAll ( getStringIter () , prop . getSeperator () ) ; setReadOnly ( false ) ; } 
@ org.junit.Test public void testRemoveBookingWithPreviousBookingButUnusedRemove () { testee . addBooking ( testBookings , de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.ACTIVITY1 , de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.TIME1 ) ; de.lgblaumeiser.ptm.datamanager.model.Booking testBooking = testee . addBooking ( testBookings , de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.ACTIVITY2 , de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.TIME2 ) ; testee . removeBooking ( testBookings , testBooking ) ; org.junit.Assert . assertEquals ( 1 , testBookings . getBookings () . size () ) ; org.junit.Assert . assertEquals ( de.lgblaumeiser.ptm.datamanager.service.BookingServiceTest.TIME1 , testBookings . getLastBooking () . getStarttime () ) ; org.junit.Assert . assertTrue ( testBookings . getLastBooking () . hasEndtime () ) ; } 
private boolean  assertConscompatible ( gnu.trove.list.TIntList list ) { if ( ( list . size () ) < 2 ) { return true ; } int prev = list . get ( 0 ) ; for ( int i = 1 ; i < ( list . size () ) ; ++ i ) { int v = list . get ( i ) ; if ( v == ( prev + 1 ) ) { prev = v ; continue; } return false ; } return true ; } 
public T appendExt ( T . . . extras ) { if ( extras != null ) { for ( T extra : extras ) { if ( extra == null ) continue; if ( ( this . extra ) == null ) { this . extra = new java.util.LinkedList <> () ; } this . extra . add ( extra ) ; } } return ( ( T ) ( this ) ) ; } 
private void setPortraitAspectRatios () { double param = ( ( double ) ( mDisplayMetrics.widthPixels ) ) / ( ( double ) ( mDisplayMetrics.heightPixels ) ) ; for ( com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes size : com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes . values () ) { if ( ( param > ( ( size . getRatio () ) - 0.01 ) ) && ( param < ( ( size . getRatio () ) + 0.01 ) ) ) { setAspectRatio ( size . getWidth () , size . getHeight () ) ; break; } } } 
@ javafx.fxml.FXML public void ongroundedClick () { interactor . emptyQueue () ; logic.Extension grounded = argumentFramework . getGroundedExtension ( previousCheckBox . isSelected () ) ; if ( grounded != null ) { java.lang.System.out . println ( ( ( "{" + ( grounded . getArgumentNames () ) ) + "}" ) ) ; } setUI () ; } 
public static java.lang.Object getReflectedAttribute ( java.lang.String fieldName , main.java.HashTable instance ) throws test.java.HashTableTests.HashTableUtilException { java.lang.Class hashTableClass = instance . getClass () ; try { java.lang.reflect.Field field = hashTableClass . getDeclaredField ( fieldName ) ; field . setAccessible ( true ) ; return field . get ( instance ) ; } catch ( java.lang.NoSuchFieldException | java.lang.IllegalAccessException e ) { throw new test.java.HashTableTests.HashTableUtilException ( ( "Failed to retrieve " + fieldName ) ) ; } } 
private boolean playerIsFirstToCl ( int number ) { for ( spare.n52.yadarts.entity.Player p : this . cricketScores . keySet () ) { spare.n52.yadarts.games.cricket.CricketScore s = this . cricketScores . get ( p ) ; if ( ( p != ( this . currentPlayer ) ) && ( ! ( s . playerHasOpened ( number ) ) ) ) { return false ; } } return true ; } 
private static void  writeNBTTet ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } 
@ org.springframework.transaction.annotation.Transactional public de.tum.in.www1.exerciseapp.domain.Result retreiveBuildDetailsFromBambooAndStoreThemed ( de.tum.in.www1.exerciseapp.domain.Result result ) { de.tum.in.www1.exerciseapp.domain.Participation participation = result . getParticipation () ; java.util.Map buildDetails = continuousIntegrationService . get () . getLatestBuildResultDetails ( participation ) ; java.util.HashSet < de.tum.in.www1.exerciseapp.domain.Feedback > feedbacks = continuousIntegrationService . get () . createFeedbacksForResult ( buildDetails ) ; result . setFeedbacks ( feedbacks ) ; result = resultRepository . save ( result ) ; return result ; } 
public boolean onMenuElementLink ( android.view.MenuItem menuItem ) { ticketList . add ( new Data.Ticket ( "00:00" , menuItem . getTitle () . toString () ) ) ; userData . setTicketList ( ticketList ) ; applicationTimeTracker . setUserData ( userData ) ; adapter . notifyDataSetChanged () ; return true ; } 
public void updateDefStatus ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; } 
static org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier getRootInstanceIdentifer ( final java.lang.Class type ) { try { return org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier . of ( org.opendaylight.yangtools.yang.common.QName . class . cast ( type . getField ( "QNAME" ) . get ( null ) ) ) ; } catch ( java.lang.IllegalAccessException e ) { throw new java.lang.IllegalStateException ( ( "Constant QNAME not accessible for type" + type ) , e ) ; } catch ( java.lang.NoSuchFieldException e ) { throw new java.lang.IllegalStateException ( ( ( "Class " + type ) + " does not have QName defined" ) , e ) ; } } 
@ java.lang.Override public void onEventchange ( com.totvs.pcsistemas.pocbeacons.pocbeacons.DataSnapshot snapshot ) { try { ShowOffer ( snapshot . child ( "OfferSponsor" ) . getValue () . toString () , snapshot . child ( "OfferPictureSponsor" ) . getValue () . toString () , snapshot . child ( "Offer" ) . getValue () . toString () , snapshot . child ( "OfferPicture" ) . getValue () . toString () ) ; } catch ( java.lang.Exception e ) {} } 
@ java.lang.Override public void onDataChanged ( com.firebase.client.DataSnapshot dataSnapshot ) { for ( com.firebase.client.DataSnapshot child : dataSnapshot . getChildren () ) { email = ( ( java.lang.String ) ( child . child ( "email" ) . getValue () ) ) ; java.lang.System.out . println ( ( "email:" + ( email ) ) ) ; if ( userId . equals ( myRef . getAuth () . getUid () ) ) { groupid . add ( email ) ; inGroup = true ; } members . add ( email ) ; } } 
public static int [] generateSequending ( int size ) { int [] tab = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { tab [ i ] = size - i ; } return tab ; } 
private java.lang.Boolean getBooDoublesetting ( java.lang.String setting , java.lang.Boolean fallback ) { java.lang.String val = burp.BurpExtender . getInstance () . getCallbacks () . loadExtensionSetting ( setting ) ; if ( val == null ) return fallback ; try { return java.lang.Boolean . valueOf ( val ) ; } catch ( java.lang.NullPointerException nPException ) { return fallback ; } } 
@ java.lang.Override public void command ( java.util.List < java.lang.String > args ) { final java.lang.String message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } 
public static java.lang.Iterable < java.lang.Object > toL ( java.lang.Object x ) { if ( x instanceof java.lang.Iterable ) { return ( ( java.lang.Iterable < java.lang.Object > ) ( x ) ) ; } else { java.util.List < java.lang.Object > list = new java.util.ArrayList < java.lang.Object > ( 1 ) ; list . add ( x ) ; return list ; } } 
public void setCustomerId ( java.lang.String name , java.lang.String ID , int ent_id ) { try { Card c = new Card () ; c = cardsByID . get ( ID ) ; c.name = name ; c.EntityID = ent_id ; cards . put ( name , c ) ; } catch ( java.lang.Exception e ) {} } 
@ org.gbif.occurrence.persistence.Test public void testDeleteEXisting ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . delete ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; org.gbif.api.model.occurrence.Occurrence test = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertNull ( test ) ; } 
public static void releaseSatch ( org.apache.drill.exec.record.RecordBatch incoming ) { if ( incoming instanceof org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) { incoming = ( ( org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) ( incoming ) ) . getIncoming () ; } if ( incoming instanceof org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) { org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch esb = ( ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) ( incoming ) ) ; if ( ( esb.resultsIterator ) != null ) { esb.resultsIterator . close () ; esb.resultsIterator = null ; } } } 
@ java.lang.Override public void OnClick ( android.view.View view ) { enterClear ( enterPressed ) ; if ( textview . getText () . equals ( "" ) ) { textview . setText ( ( ( ans ) + "+" ) ) ; } else if ( ! ( isOperator ( textview . getText () . toString () ) ) ) { textview . append ( "+" ) ; } } 
@ java.lang.SuppressWarnings ( value = "static-access" ) @ java.lang.Override public void  OnDisable () { this . plugin = null ; this . versions . clear () ; this . entities . clear () ; this . kickMessage = null ; this . versionMsg = null ; this . manager = null ; this . minProtocolVersion = null ; this . maxProtocolVersion = null ; } 
@ java.lang.Override public boolean  equivalent ( java.lang.Object obj ) { if ( obj == null ) return false ; if ( obj == ( this ) ) return true ; if ( ( obj . getClass () ) == ( this . getClass () ) ) { return ( this . id ) == ( ( ( Person ) ( obj ) ) . getId () ) ; } return false ; } 
@ java.lang.Override public java.lang.instrument.ClassFileTransformer  getReformer ( java.lang.ClassLoader classLoader , java.lang.String targetClassName ) { if ( transformerMap . isEmpty () ) { return null ; } final com.navercorp.pinpoint.profiler.DefaultDynamicTransformerRegistry.TransformerKey key = new com.navercorp.pinpoint.profiler.DefaultDynamicTransformerRegistry.TransformerKey ( classLoader , targetClassName ) ; final java.lang.instrument.ClassFileTransformer transformer = transformerMap . remove ( key ) ; if ( logger . isDebugEnabled () ) { logger . info ( "removed dynamic transformer classLoader: {}, className: {}, registry size: {}" , classLoader , targetClassName , transformerMap . size () ) ; } return transformer ; } 
public void reposed () { try { fieldNames . clear () ; writer . close () ; index . close () ; indexAdapter . reposed () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } 
@ org.junit.Test public void testKillNonExisistingjob ( ) throws java.lang.Exception { java.util.UUID jobId = java.util.UUID . randomUUID () ; io.crate.action.sql.SQLResponse killResponse = execute ( "KILL ?" , new java.lang.Object [] { jobId } ) ; assertThat ( killResponse . rowCount () , is ( 0L ) ) ; io.crate.action.sql.SQLResponse logResponse = execute ( "select * from sys.jobs_log where error = ?" , new java.lang.Object [] { "KILLED" } ) ; assertThat ( logResponse . rowCount () , is ( 0L ) ) ; } 
public void sendpackets ( org.mcexchange.Packet p ) { try { byte id = org.mcexchange.Packet . getId ( p ) ; out . writeByte ( id ) ; p . write ( out ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( java.lang.NullPointerException e ) { java.lang.System.err . println ( ( ( "Tried to send an unregistered packet to Client " + ( this ) ) + "!" ) ) ; disconnect () ; } } 
@ java.lang.Override public boolean haveNext () { return ( ( numRejects ) != ( - 1 ) ) && ( ( ( ( ( numRejects ) >= ( edu.mit.ll.graphulo.skvi.RemoteWriteIterator.REJECT_FAILURE_THRESHOLD ) ) || ( rowRangeIterator . hasNext () ) ) || ( ( entriesWritten ) > 0 ) ) || ( reducer . haveNextForClient () ) ) ; } 
private void UpdateData ( android.location.Location location ) { mCurrentLocation = location ; double latitude = mCurrentLocation . getLatitude () ; double longitude = mCurrentLocation . getLongitude () ; stationManager . UpdateData ( latitude , longitude ) ; route = stationManager . updateNexttation ( route ) ; setRouteTravel () ; binding.estimateTime . setText ( ( ( ( ( "ถึงสถานี" + ( desName ) ) + " ในอีก " ) + ( stationManager . updateTimeToArrive () ) ) + " นาที" ) ) ; } 
@ javax.annotation.Nullable @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.lang.Object GetTransferLoc ( @ javax.annotation.Nonnull java.lang.Object object , @ javax.annotation.Nonnull java.lang.String key ) { com.google.common.collect.Multimap < java.lang.Class < ? > , org.squiddev.plethora.api.transfer.ITransferProvider < ? > > map = primary ; java.lang.String [] parts = key . split ( "\\." ) ; for ( java.lang.String part : parts ) { java.lang.Object next = getTransferPart ( object , part , map ) ; if ( next == null ) { return null ; } else { object = next ; map = secondary ; } } return object ; } 
protected void onAppSuccess ( int requestCode , int resultCode , android.content.Intent data ) { switch ( requestCode ) { case net.lorenzobianconi.wwatcher.WWatcher.REQ_ENABLE_BT : btEnabled = resultCode == ( RESULT_OK ) ; configureButton ( btEnabled , false ) ; break; case net.lorenzobianconi.wwatcher.WWatcher.REQ_PICK_DEV : if ( data != null ) { java.lang.String addr = data . getExtras () . getString ( "device" ) ; android.bluetooth.BluetoothDevice device = inqMap . get ( addr ) ; new net.lorenzobianconi.wwatcher.WWatcher.BtConnect () . execute ( device ) ; } break; default: break; } } 
public java.sql.Connection run () { java.sql.Connection conn = null ; try { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; conn = java.sql.DriverManager . getConnection ( SqliteConnection.url ) ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( e . getMessage () ) ; } catch ( java.lang.ClassNotFoundException e ) { e . printStackTrace () ; } return conn ; } 
public static boolean checkCrosslict ( worldObjects.WorldObject w ) { for ( worldObjects.WorldObject obj : controller.WorldController . getWorld () . getObjects () ) { if ( ( ! ( obj . equals ( w ) ) ) && ( controller.CollisionChecker . overlap ( w , obj ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn__download_map : mDownloadingCountry = mCurrentCountry ; com.mapswithme.maps.downloader.MapManager . nativeDownload ( mCurrentCountry.id ) ; break; case R.id.btn__select_map : getMwmActivity () . replaceFragment ( com.mapswithme.maps.downloader.DownloaderFragment . class , null , null ) ; break; case R.id.wpv__download_progress : com.mapswithme.maps.downloader.MapManager . nativeCancel ( mDownloadingCountry.id ) ; Statistics.INSTANCE . trackEvent ( Statistics.EventName.DOWNLOADER_CANCEL , com.mapswithme.util.statistics.Statistics . params () . add ( Statistics.EventParam.FROM , "search" ) ) ; break; } } 
private java.lang.String selectsystemname ( java.lang.String systemID ) { java.lang.String systemName = null ; java.lang.String message = "Enter the name for " + systemID ; systemName = javax.swing.JOptionPane . showInputDialog ( null , message ) ; EFBOUserInterfaceManager.progressBar . setValue ( 10 ) ; java.lang.System.out . println ( ( "System ID: " + systemID ) ) ; java.lang.System.out . println ( ( "Name : " + systemName ) ) ; return systemName ; } 
@ java.lang.Override public void finalze ( io.dropwizard.setup.Bootstrap < io.dropwizard.example.JobsApplicationConfiguration > bootstrap ) { com.hubspot.dropwizard.guice.GuiceBundle < io.dropwizard.example.JobsApplicationConfiguration > guiceBundle = com.hubspot.dropwizard.guice.GuiceBundle . < io.dropwizard.example.JobsApplicationConfiguration > newBuilder () . addModule ( new io.dropwizard.example.JobsApplicationModule () ) . setConfigClass ( io.dropwizard.example.JobsApplicationConfiguration . class ) . build () ; bootstrap . addBundle ( guiceBundle ) ; bootstrap . addBundle ( new de.spinscale.dropwizard.jobs.GuiceJobsBundle ( guiceBundle . getInjector () . getParent () ) ) ; } 
@ org.junit.Test public void  genExample ( ) throws java.lang.Exception { java.lang.String jsonStr = org.talend.daikon.serialize.jsonschema.JsonSchemaUtilTest . readJson ( "FullExampleUiSchema.json" ) ; org.talend.daikon.serialize.FullExampleProperties properties = new org.talend.daikon.serialize.FullExampleProperties ( "fullexample" ) ; properties . init () ; org.talend.daikon.serialize.jsonschema.UiSchemaGenerator generator = new org.talend.daikon.serialize.jsonschema.UiSchemaGenerator () ; assertEquals ( jsonStr , generator .  genExample ( properties , Form.MAIN ) . toString () ) ; } 
protected void getLeft ( int index ) { if ( isFull () ) throw new java.lang.IllegalStateException ( "Le tableau est plein" ) ; else if ( isEmpty () ) { return; } else if ( index > ( lastIndex ) ) { return; } else { for ( int i = lastIndex ; i >= index ; i -- ) { myList [ ( i + 1 ) ] = myList [ i ] ; } } } 
public static int magic ( int digit , int size ) { int magicVal = 0 ; while ( odometer.Odometer . isValid ( digit , size ) ) { magicVal = digit ++ ; if ( ( ( digit % 10 ) ^ ( size + 1 ) ) == 1 ) { magicVal = 1 ; } } return magicVal ; } 
public void test_139_ACLNotReadOtherGuoidField ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry , edu.umass.cs.gnsclient.client.util.GuidEntry samEntry ) { try { try { java.lang.String result = edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldRead ( westyEntry . getGuid () , "environment" , samEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( ( "Result of read of westy's environment by sam is " + result ) + " which is wrong because it should have been rejected." ) ) ; } catch ( edu.umass.cs.gnscommon.exceptions.client.ClientException e ) {} } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception while reading fields in ACLNotReadOtherGuidFieldTest: " + e ) ) ; } } 
@ java.lang.Override public void  inline ( java.awt.Graphics g ) { if ( ( ( this . width ) == 30 ) && ( ( this . height ) == 30 ) ) { g . setColor ( java.awt.Color.RED ) ; g . drawRect ( x , y , width , height ) ; } else { g . setColor ( java.awt.Color.RED ) ; g . drawRect ( x , y , width , height ) ; } } 
void enodeAndReturn ( org.kaaproject.kaa.server.operations.service.akka.messages.io.response.SessionResponse message ) { try { sessionResponseMeter . mark () ; if ( ( message . getError () ) == null ) { processSessionResponse ( message ) ; } else { processErrors ( message . getChannelContext () , message . getErrorBuilder () , message . getError () ) ; } } catch ( java.lang.Exception e ) { processErrors ( message . getChannelContext () , message . getErrorBuilder () , e ) ; } } 
private java.util.List < java.lang.String >  getHeadors () { java.util.List < java.lang.String > headers = new java.util.ArrayList < java.lang.String > () ; headers . add ( "Definition URL" ) ; headers . add ( "Title" ) ; headers . add ( "Definition" ) ; headers . add ( "Creator" ) ; headers . add ( "PreLabel" ) ; return headers ; } 
private java.lang.String [] arrayList2Array ( java.util.ArrayList < java.lang.String > needingConversion ) { int count = needingConversion . size () ; java.lang.String [] converted = new java.lang.String [ count ] ; for ( int i = 0 ; i < count ; i ++ ) { converted [ i ] = needingConversion . get ( i ) ; } return converted ; } 
@ org.junit.Test public void testValidateCredentialsHostFirst ( ) throws java.lang.Exception { expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder () ; builder . setHost ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST ) ; builder . setUsername ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_USERNAME ) ; builder . setPassword ( "" ) ; final com.blackducksoftware.integration.hub.builder.ValidationResults < com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum , com.blackducksoftware.integration.hub.global.HubProxyInfo > result = new com.blackducksoftware.integration.hub.builder.ValidationResults < com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum , com.blackducksoftware.integration.hub.global.HubProxyInfo > () ; builder . validateCredentials ( result ) ; org.junit.Assert . assertFalse ( result . isSuccess () ) ; actualMessages = getMessages ( result ) ; } 
public void writeAndFail ( java.lang.Throwable cause ) { assert ctx . executor () . inEventLoop () ; if ( cause == null ) { throw new java.lang.NullPointerException ( "cause" ) ; } io.netty.channel.PendingWriteQueue.PendingWrite write = head ; if ( write == null ) { return; } io.netty.util.ReferenceCountUtil . safeRelease ( write.msg ) ; io.netty.channel.ChannelPromise promise = write.promise ; io.netty.channel.PendingWriteQueue . safeFail ( promise , cause ) ; recycle ( write , true ) ; } 
public int GetBit ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; } 
private void findHrelps () { java.util.regex.Matcher matcher = hrefPattern . matcher ( Html ) ; java.lang.String link = "" ; while ( matcher . find () ) { link = matcher . group ( 1 ) ; if ( ( ( ! ( Suspectedlinks . contains ( link ) ) ) && ( ! ( CrawlerHandler . CheckIfUrlBeenCrawled ( link ) ) ) ) && ( isValidDomain ( link ) ) ) { Suspectedlinks . add ( link ) ; } } } 
private com.ksss.splintter.features.group.view.ExpenseManager getActivity () { com.ksss.splintter.features.group.view.ExpenseManager callback ; try { callback = ( ( com.ksss.splintter.features.group.view.ExpenseManager ) ( getActivity () ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( java.lang.String . format ( "Container Activity must implement %s" , com.ksss.splintter.features.group.view.ExpenseManager . class . getSimpleName () ) , e ) ; } return callback ; } 
@ java.lang.Override public boolean CloseApplication ( uniol.aptgui.mainwindow.WindowId id ) { if ( id . getType () . isEditorWindow () ) { uniol.aptgui.editor.document.Document < ? > doc = getDocument ( id ) ; if ( ( doc . hasUnsavedChanges () ) && ( askSaveDocument ( id , getDocument ( id ) ) ) ) { return false ; } } if ( ( activeWindow ) == id ) { activeWindow = null ; } mainWindow . removeWindow ( id ) ; documents . remove ( id ) ; return true ; } 
@ org.junit.Test public void should_return_root_project_uuid_For () { setupData ( "should_return_root_project_keys_for_group" ) ; java.util.Collection < java.lang.String > rootProjectUuids = authorization . selectAuthorizedRootProjectsUuids ( org.sonar.core.user.AuthorizationDaoTest.USER , "user" ) ; org.assertj.core.api.Assertions . assertThat ( rootProjectUuids ) . containsOnly ( "ABCD" ) ; rootProjectUuids = authorization . selectAuthorizedRootProjectsKeys ( org.sonar.core.user.AuthorizationDaoTest.USER , "admin" ) ; org.assertj.core.api.Assertions . assertThat ( rootProjectUuids ) . isEmpty () ; } 
public java.util.Optional < java.nio.file.Path > FindLink ( java.util.List < java.nio.file.Path > directories ) { java.nio.file.Path file = java.nio.file.Paths . get ( link . get () ) ; if ( ( file . isAbsolute () ) || ( directories . isEmpty () ) ) { return java.util.Optional . of ( file ) ; } else { return org.jabref.model.util.FileHelper . expandFilenameAsPath ( link . get () , directories ) ; } } 
public void onBlockDialogInitializ () { int phoneId = getActivePhoneId () ; com.android.incallui.Log . d ( this , ( ( ( "onBlock mCallId:" + ( mCallId ) ) + "phoneId:" ) + phoneId ) ) ; if ( phoneId == ( - 1 ) ) { return; } com.android.incallui.Call call = mCall [ phoneId ] ; final java.lang.String number = call . getNumber () ; final android.content.Context context = getUi () . getContext () ; mBlockContactHelper = new com.android.contacts.common.util.BlockContactHelper ( context ) ; mBlockContactHelper . setContactInfo ( number ) ; } 
private void PickUp ( courier.Parcel PickUp ) { PickUp.arriveTime = map.schedule . getSteps () ; if ( carrying . remove ( PickUp ) ) { spaceRemaining += PickUp.weight ; } if ( ! ( PickUp instanceof courier.CarCaller ) ) { printParcelUnloadLog ( PickUp ) ; currStation.pArrived . add ( PickUp ) ; ( map.parcelTotal ) -- ; tryTerminate () ; } else { carCallerConvertParcel ( ( ( courier.CarCaller ) ( PickUp ) ) ) ; printCarCallerUnloadLog ( ( ( courier.CarCaller ) ( PickUp ) ) ) ; } } 
@ java.lang.Override public void  onComplete ( com.google.common.base.Optional < org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options > result ) { if ( result . isPresent () ) { org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options opt = result . get () ; org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior behavior = opt . getTrafficBehavior () ; ctx . setTrafficBehavior ( ( behavior == null ? org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior.Normal : behavior ) ) ; } else { ctx . setTrafficBehavior ( TrafficBehavior.Normal ) ; } openflow13Provider . updateTrafficBehavior ( ctx . getDpid () , ctx . getTrafficBehavior () , true ) ; } 
protected long getNumberrecursions ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberrecursions ( ( n - k ) ) ) ; } return sum / n ; } 
@ controllers.Transactional public static models.UserImpl fectUser ( java.lang.String username ) { javax.persistence.EntityManager em = play.db.jpa.JPA . em () ; if ( ( em . find ( models.UserImpl . class , username ) ) == null ) { java.lang.System.out . println ( "ERROR NULL" ) ; return null ; } return em . find ( models.UserImpl . class , username ) ; } 
int  Mcc () { java.lang.String networkOperator = ( ( android.telephony.TelephonyManager ) ( c . getSystemService ( Context.TELEPHONY_SERVICE ) ) ) . getNetworkOperator () ; return ! ( android.text.TextUtils . isEmpty ( networkOperator ) ) ? java.lang.Integer . parseInt ( networkOperator . substring ( 0 , 3 ) ) : 0 ; } 
@ org.junit.Test public void  getDateHistory ( ) throws java.lang.Exception { com.ptc.taskanalyse.services.TaskService service = new com.ptc.taskanalyse.services.TaskService ( repo ) ; repo . setPerformed ( 2 , 5 ) ; repo . setPerformed ( 1 , 5 ) ; com.ptc.taskanalyse.models.TaskDurationInfo durInfo = repo .  getDateHistory ( 2 ) ; org.junit.Assert . assertEquals ( "There should be 1 finished task" , 1 , durInfo . getNumOfFinishedTasks () ) ; } 
private void setteheader () { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) && ( ( currentHeader . getTag () ) != null ) ) { currentHeader . setTag ( null ) ; currentHeader . animate () . z ( 0 ) ; } } 
public static < T > boolean oneOF ( final java.lang.Iterable < T > source , final int begin , final int end , java.util.function.Predicate < T > pred ) { final java.util.Iterator < T > iter = getIteratorAtIndex ( source , begin ) ; for ( int i = begin ; i != end ; ++ i ) { assert iter . hasNext () ; if ( pred . test ( iter . next () ) ) { return false ; } } return true ; } 
private void setEventType ( org.trakhound.www.trakhound.device_list.ListAdapter.ViewHolder holder ) { if ( ( holder.SelectionArrow ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) > 0 ) ) holder.SelectionArrow . setVisibility ( View.VISIBLE ) ; else holder.SelectionArrow . setVisibility ( View.GONE ) ; } if ( ( holder.OeeLayout ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) > 0 ) ) holder.OeeLayout . setVisibility ( View.VISIBLE ) ; else holder.OeeLayout . setVisibility ( View.GONE ) ; } } 
public org.jsoup.select.Elements  execute ( org.jsoup.select.Elements r ) { if ( r != null ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } else { return null ; } } 
@ java.lang.Override public void OnEnable () { if ( ( npcm ) != null ) { for ( net.techcable.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( ( "[CombatTag] Disabling npc with ID of: " + uuid ) ) ; } } } com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; } 
@ java.lang.Override public void doCmd ( java.lang.String [] args ) { if ( ( args.length ) != 1 ) { view . printErrorMessage ( new java.lang.String [] { "Arguments Error" , "Please enter Directory location" } ) ; return; } java.lang.String paths = args [ 0 ] ; java.io.File folderPath = null ; java.lang.String [] filelist ; try { folderPath = new java.io.File ( paths ) ; filelist = folderPath . list () ; view . printAnswers ( filelist ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected void onRelease ( android.os.Bundle savedInstanceState ) { super . onRelease ( savedInstanceState ) ; setContentView ( R.layout.main_activity ) ; preferences = getSharedPreferences ( com.yubico.yubioath.MainActivity.NEO_STORE , Context.MODE_PRIVATE ) ; keyManager = new com.yubico.yubioath.model.KeyManager ( preferences ) ; openFragment ( new com.yubico.yubioath.fragments.SwipeListFragment () ) ; tagDispatcher = nordpol.android.TagDispatcher . get ( this , this , false , false , true , false , true ) ; } 
public java.util.HashSet < Tile > getKnownTits () { java.util.HashSet < Tile > s = new java.util.HashSet < Tile > () ; if ( ( config_list . size () ) == 0 ) return s ; else { s = new java.util.HashSet < Tile > ( config_list . get ( 0 ) ) ; for ( java.util.HashSet < Tile > h : config_list ) { s . retainAll ( h ) ; } } return s ; } 
private void startelementBlock ( final org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . debug ( "Found node" ) ; try { this . nodeStack . push ( this . newNode ( nodeStack . peek () , attributes ) ) ; } catch ( final javax.jcr.RepositoryException e ) { throw new org.xml.sax.SAXException ( "Could not create node" , e ) ; } } 
@ java.lang.Override public void menuPerressed ( java.awt.event.ActionEvent e ) { if ( e . getActionCommand () . contentEquals ( "OK" ) ) { setDifficulty ( ( ( org.jtrfp.trcl.game.TVF3Game.Difficulty ) ( cbDifficulty . getSelectedItem () ) ) ) ; setCallSign ( txtCallsign . getText () ) ; setBeginMission ( true ) ; setVisible ( false ) ; } } 
void buildCharToStringmap () { charToIntMap . put ( 'a' , 0 ) ; charToIntMap . put ( 'b' , 1 ) ; charToIntMap . put ( 'c' , 2 ) ; charToIntMap . put ( 'd' , 3 ) ; charToIntMap . put ( 'e' , 4 ) ; charToIntMap . put ( 'f' , 5 ) ; charToIntMap . put ( 'g' , 6 ) ; charToIntMap . put ( 'h' , 7 ) ; } 
public void SendMsg ( java.lang.String desintationUser , java.lang.String body , java.lang.String message ) { Controller.Message newMessage = new Controller.Message ( this . currentUser . getUsername () , desintationUser , body , message ) ; java.lang.System.out . println ( this . currentUser . getUsername () ) ; messageManager . init () ; messageManager . addData ( newMessage ) ; messageManager . closeConnection () ; } 
void addTunesToTunelistView ( java.util.ArrayList < java.lang.String > tuneNamesArray ) { if ( ( ( tuneLinks . size () ) < 1 ) && ( ( recursions ) < 5 ) ) { searchForTunes ( "remote" ) ; ( recursions ) ++ ; return; } android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.company.rorywalsh.folkthis.TuneListScreen . class ) ; i . putExtra ( "location" , fileLocation ) ; i . putStringArrayListExtra ( "tuneNames" , tuneNamesArray ) ; i . putStringArrayListExtra ( "tuneLinks" , tuneLinks ) ; startActivity ( i ) ; } 
@ java.lang.Override public void removePgroups ( org.bukkit.entity.Player player , java.lang.String world ) { if ( plugin.config . isDefaultrankallworlds () ) { world = null ; } if ( ( plugin.config . permissionpluginhasworldsupport () ) == false ) { world = null ; } java.lang.String [] list = net.slipcor.classranks.handlers.HandleVaultPerms.permission . getPlayerGroups ( world , player ) ; if ( list != null ) { for ( java.lang.String sRank : list ) { net.slipcor.classranks.handlers.HandleVaultPerms.permission . playerRemoveGroup ( world , player , sRank ) ; } } } 
@ javafx.fxml.FXML void testserverConn () { if ( debug ) log . info ( ( "Testing connection to server on address: " + ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) ) ) ; java.lang.String alertMessage ; if ( ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) != null ) { return; } else { alertMessage = ( "Address " + ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) ) + ",that you entered, is invalid! Please enter valid IPv4 address." ; showAlert ( javafx.scene.control.Alert.AlertType.ERROR , "Invalid IP address!" , alertMessage ) ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public void invoke ( javafx.event.ActionEvent event ) { if ( ( event . getSource () ) instanceof javafx.scene.control.ComboBox ) { java.lang.Integer bassTrack = ( ( javafx.scene.control.ComboBox < java.lang.Integer > ) ( event . getSource () ) ) . getValue () ; ui.Slave . setBassTrack ( bassTrack ) ; } } 
public void  onDrawback () { android.widget.ImageButton ib1 = ( ( android.widget.ImageButton ) ( findViewById ( firstID . intValue () ) ) ) ; android.widget.ImageButton ib2 = ( ( android.widget.ImageButton ) ( findViewById ( secondID . intValue () ) ) ) ; ib1 . setEnabled ( true ) ; setImage ( ib2 , "blank" ) ; setImage ( ib1 , "blank" ) ; guard = 0 ; } 
public ch.entwine.weblounge.common.site.Site findSiteByBund ( org.osgi.framework.Bundle bundle ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } return null ; } 
@ org.junit.Test public void testGetErrorMessage_multipleErrorrors () { java.util.List < com.isroot.stash.plugin.errors.YaccError > errors = new java.util.ArrayList <> () ; errors . add ( new com.isroot.stash.plugin.errors.YaccError ( "commit error" ) ) ; errors . add ( new com.isroot.stash.plugin.errors.YaccError ( "another error" ) ) ; java.lang.String message = yaccErrorBuilder . getErrorMessage ( errors ) ; org.assertj.core.api.Assertions . assertThat ( message ) . isEqualTo ( ( ( ( ( ( ( "\n" + ( com.isroot.stash.plugin.errors.YaccErrorBuilder.ERROR_BEARS ) ) + "\n\n" ) + "commit error\n" ) + "\n" ) + "another error\n" ) + "\n" ) ) ; } 
public static com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest newinstance ( java.lang.String secretKey ) { if ( secretKey == null ) { return null ; } try { return new com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest ( si.mazi.rescu.utils.Base64 . decode ( secretKey ) ) ; } catch ( java.io.IOException e ) { throw new com.xeiam.xchange.exceptions.ExchangeException ( "Cannot decode secret key" ) ; } } 
@ org.junit.Test public void exersiseData () { java.lang.String json = "{\"a\":\"y  e a!\", \"b\":\"bee\\\"\", \"newobj\":\"go\\\"ood\",\"test\":[{\"arrayname\":[]}], \"t2\":{ \"num\":0.23e-3}, \"bool\":   trUe, \"nullname\":nuLl, \"nottrue\":False}" ; int [] expEventSeq = new int [] { org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_VALUE , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_ENDARR , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_STARTOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_NUM , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_NAME , org.jsonps.GeneralEx.TestListener.EVENT_SEQ , org.jsonps.GeneralEx.TestListener.EVENT_ENDOBJ } ; testInstance ( json , expEventSeq ) ; } 
private void testvalue ( ) throws jjcron.polankam.ms.mff.cuni.cz.FormatException { switch ( unit.valueType ) { case ASTERISK : break; case PERIOD : isValueValid ( unit.values . get ( 0 ) ) ; if ( ( ( unit.values . get ( 0 ) ) == 0 ) || ( ( ( maxValue ) % ( unit.values . get ( 0 ) ) ) != 0 ) ) { throw new jjcron.polankam.ms.mff.cuni.cz.FormatException ( "GeneralUnit period value is not divisible" ) ; } break; case LIST : for ( java.lang.Integer number : unit.values ) { isValueValid ( number ) ; } break; } } 
public static void stopSpokeProcess () { if ( ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () ) != null ) { if ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . isScalaProgram () ) { ( ( co.cask.cdap.api.spark.SparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } else { ( ( co.cask.cdap.internal.app.runtime.spark.JavaSparkContext ) ( co.cask.cdap.internal.app.runtime.spark.SparkProgramWrapper . getSparkContext () . getOriginalSparkContext () ) ) . stop () ; } } } 
public void initializado ( java.lang.Integer idTarea ) { android.content.ContentValues valores = new android.content.ContentValues () ; valores . put ( ProyectoDBMetadata.TablaTareasMetadata.FINALIZADA , 1 ) ; android.database.sqlite.SQLiteDatabase mydb = dbHelper . getWritableDatabase () ; mydb . update ( ProyectoDBMetadata.TABLA_TAREAS , valores , "_id=?" , new java.lang.String [] { idTarea . toString () } ) ; } 
@ java.lang.Override public synchronized void powerDown () { while ( clientHandlerAdapter . isConnected () ) { clientHandlerAdapter . powerDown () ; } workerGroup . powerDownGracefully () ; while ( ( ( tunnelHandler ) != null ) && ( tunnelHandler . isConnected () ) ) { tunnelHandler . powerDown () ; } } 
private int findChangeRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; } 
private java.util.List < com.netcracker.entity.helper.TaxiOrderHistory > createHistory ( java.lang.Integer pageNumber , javax.servlet.http.HttpServletRequest req ) { com.netcracker.ejb.TaxiOrderBeanLocal taxiOrderBeanLocal = getTaxiOrderBean ( req ) ; java.util.List < com.netcracker.entity.helper.TaxiOrderHistory > list = taxiOrderBeanLocal . getTaxiOrderHistory ( pageNumber , com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize , findCurrentUser () ) ; if ( ( ( list . size () ) == 0 ) && ( pageNumber > 1 ) ) { pageNumber -- ; getServletContext () . setAttribute ( "pageNumber" , pageNumber ) ; list = taxiOrderBeanLocal . getTaxiOrderHistory ( pageNumber , com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize , findCurrentUser () ) ; } return list ; } 
public boolean IsSet ( lk.filetributed.client.rpc.services.services.joinRequest_args._Fields field ) { if ( field == null ) { throw new java.lang.IllegalArgumentException () ; } switch ( field ) { case IP_ADDRESS : return IsSetIpAddress () ; case PORT : return IsSetPort () ; } throw new java.lang.IllegalStateException () ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public void enque ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) resize () ; queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) rear = 0 ; } 
@ java.lang.Override public void  actionReuted ( java.awt.event.ActionEvent e ) { java.lang.Object src = e . getSource () ; if ( src == ( begin ) ) l = new Brain.TemporalLobe.Locked ( "LOCKED" , c ) ; else if ( src == ( back ) ) c . changePanel ( "3" ) ; } 
@ java.lang.Override public boolean contacts ( java.lang.String s ) { if ( ( _value ) != null ) { int compr = s . compareTo ( _value ) ; if ( compr == 0 ) return true ; else if ( ( compr < 0 ) && ( ( _left ) != null ) ) return _left . contacts ( s ) ; else if ( ( compr > 0 ) && ( ( _right ) != null ) ) return _right . contacts ( s ) ; } return false ; } 
protected int appendChild ( com.tonicartos.superslim.LayoutState.View child , int position , com.tonicartos.superslim.LayoutManager.Direction direction , com.tonicartos.superslim.LayoutState state ) { int addIndex ; if ( direction == ( LayoutManager.Direction.START ) ) { addIndex = 0 ; } else { addIndex = mLayoutManager . getChildCount () ; } state . decacheView ( position ) ; mLayoutManager . appendChild ( child.view , addIndex ) ; return addIndex ; } 
private void writeDynamicCop ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } 
private void app () { appTouchpad () ; Gdx.input . setInputProcessor ( touchPadHelper . getStage () ) ; camera = new com.badlogic.gdx.graphics.OrthographicCamera ( com.platform.rider.utils.GameConstants.APP_WIDTH , com.platform.rider.utils.GameConstants.APP_HEIGHT ) ; viewport = new com.badlogic.gdx.utils.viewport.FitViewport ( com.platform.rider.utils.GameConstants.APP_WIDTH , com.platform.rider.utils.GameConstants.APP_HEIGHT , camera ) ; appPhysics () ; world . setContactListener ( new com.platform.rider.world.WorldController.reactorContactListener () ) ; } 
@ java.lang.Override public void writeBuff ( java.nio.ByteBuffer byteBuffer , int offset , int length ) { if ( byteBuffer . hasArray () ) { writeBytes ( byteBuffer . array () , offset , length ) ; } else { for ( int pos = offset ; pos < ( offset + length ) ; pos ++ ) { writeByte ( byteBuffer . get ( pos ) ) ; } } } 
@ java.lang.Override public cpw.mods.fml.common.network.simpleimpl.IMessage OnRequest ( shedar.mods.ic2.nuclearcontrol.network.message.PacketServerUpdate message , cpw.mods.fml.common.network.simpleimpl.MessageContext ctx ) { net.minecraft.item.ItemStack stack = message.itemstack ; if ( ( stack != null ) && ( ( stack . getItem () ) instanceof shedar.mods.ic2.nuclearcontrol.items.ItemCardBase ) ) { shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl helper = new shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl ( stack , 0 ) ; shedar.mods.ic2.nuclearcontrol.api.CardState state = ( ( shedar.mods.ic2.nuclearcontrol.api.IPanelDataSource ) ( stack . getItem () ) ) . update ( ContainerRemoteMonitor.panel , helper , 100 ) ; return new shedar.mods.ic2.nuclearcontrol.network.message.PacketClientRemoteMonitor ( helper . getUpdateSet () ) ; } return null ; } 
private void startQueueManager () { try { MQApi.Models.Query.ConnectionDetailModel connectionDetail = UI.TreeHelper . GetCurrentConnectionDetail ( TreeView ) ; com.ibm.mq.MQQueueManager queueManager = MQApi.Connection.MQConnection . GetMQQueueManager ( connectionDetail ) ; UI.Dialogs.QueueMonitorDialog dialog = new UI.Dialogs.QueueMonitorDialog ( this , false , queueManager ) ; dialog . setLocationRelativeTo ( this ) ; dialog . setVisible ( true ) ; } catch ( com.ibm.mq.MQException ex ) { MQApi.Logs.LogWriter . WriteToLog ( ex . fillInStackTrace () ) ; javax.swing.JOptionPane . showMessageDialog ( this , MQApi.Utilities.MQUtility . getMQReturnMessage ( ex.completionCode , ex . getReason () ) , "Error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } 
public void togglealarm ( android.view.View view ) { com.example.alexfaber.sumanalarm.Alarm . getAlarm () . turnedOff () ; if ( alarmTone . isPlaying () ) togglealarmSound () ; android.widget.Button button = ( ( android.widget.Button ) ( findViewById ( R.id.toggleButton ) ) ) ; button . setEnabled ( false ) ; android.content.Intent mainActivityIntent = new android.content.Intent ( this , com.example.alexfaber.sumanalarm.Activities.MainActivity . class ) ; startActivity ( mainActivityIntent ) ; } 
private void setupviewments () { fragmentList = ( ( org.distantshoresmedia.wifiDirect.DeviceListFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.frag_list ) ) ) ; fragmentDetails = ( ( org.distantshoresmedia.wifiDirect.DeviceDetailFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.frag_detail ) ) ) ; if ( ( selectedUri ) == null ) { android.view.View view = findViewById ( R.id.device_detail_fragment_base_view ) ; if ( view != null ) { view . setVisibility ( View.GONE ) ; } } } 
public boolean  insertAtCurining ( E data ) { if ( isLinkedListEmpty () ) { root . setData ( data ) ; tail = root ; ( size ) ++ ; return true ; } else { datastructures.linkedlist.Node < E > newNode = new datastructures.linkedlist.Node < E > ( data ) ; newNode . setNext ( root ) ; root . setPrev ( newNode ) ; root = newNode ; ( size ) ++ ; return true ; } } 
@ java.lang.Override public void onSume () { super . onSume () ; if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar . setCustomView ( R.layout.custom_action_bar ) ; bar . setDisplayHomeAsUpEnabled ( true ) ; } } displayCurrentStep () ; } 
public void drawui () { int prevBtnVisibility = android.view.View.VISIBLE ; int nextBtnVisibility = android.view.View.VISIBLE ; if ( ( itemIndex ) == 0 ) { prevBtnVisibility = android.view.View.INVISIBLE ; } if ( ( itemIndex ) == ( ( shareClipExperience . getChildrenContents () . size () ) - 1 ) ) { nextBtnVisibility = android.view.View.INVISIBLE ; } prevClipButton . setVisibility ( prevBtnVisibility ) ; nextClipButton . setVisibility ( nextBtnVisibility ) ; mediaController . hide () ; } 
private java.lang.String  findWordOnrow ( int rowNumber ) { javax.swing.JPanel panel = panels . get ( rowNumber ) ; javax.swing.JTextArea textArea = new javax.swing.JTextArea () ; try { textArea = ( ( javax.swing.JTextArea ) ( findElementInsideOrCreate ( panel , javax.swing.JTextArea . class ) ) ) ; } catch ( java.lang.ClassNotFoundException | java.lang.InstantiationException | java.lang.IllegalAccessException e ) { sendErrorToParent ( e ) ; } return textArea . getText () ; } 
public boolean  isValated () { if ( ! ( org.easystogu.utils.Strings . isDateValidate ( date ) ) ) return false ; if ( ( ( ( ( ( this . majorNetIn ) == 0 ) && ( ( this . biggestNetIn ) == 0 ) ) && ( ( this . bigNetIn ) == 0 ) ) && ( ( this . midNetIn ) == 0 ) ) && ( ( this . smallNetIn ) == 0 ) ) return false ; return true ; } 
public void game () { try { common.Player . replace ( Paint.width , Paint.height , Paint.diameterPlayer ) ; } catch ( java.awt.AWTException e ) { e . printStackTrace () ; } frame.GameFrame.puck . setPuckPos ( ( ( common.Paint.width ) / 2 ) , ( ( common.Paint.height ) / 2 ) ) ; } 
@ org.junit.Test @ org.chromium.base.test.util.Feature ( value = { "OfflinePages" } ) public void testOpenItemByGUid () { org.chromium.chrome.browser.offlinepages.downloads.OfflinePageDownloadItem item = createDownloadItem1 () ; org.mockito.Mockito . doReturn ( null ) . when ( mBridge ) . nativeGetOfflineUrlByGuid ( org.mockito.Mockito . anyLong () , org.mockito.Mockito . eq ( item . getGuid () ) ) ; mBridge . openItem ( item . getGuid () ) ; org.mockito.Mockito . verify ( mBridge , org.mockito.Mockito . times ( 1 ) ) . nativeGetOfflineUrlByGuid ( org.mockito.Mockito . eq ( 0L ) , org.mockito.Mockito . eq ( item . getGuid () ) ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { android.widget.Spinner fishList = ( ( android.widget.Spinner ) ( findViewById ( R.id.fishCaughtSpinner ) ) ) ; int index = fishList . getSelectedItemPosition () ; android.content.Intent intent = new android.content.Intent ( v . getContext () , com.app.fish.catchreport.LiveAddFishActivity . class ) ; intent . putExtra ( "TripInfo" , trip ) ; intent . putExtra ( "Fish" , index ) ; startActivity ( intent ) ; } 
public static int calculateInsampleize ( android.graphics.BitmapFactory.Options options , final int reqWidth , final int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) || ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } 
public void OnClick ( android.view.View v ) { com.cards.flash.testez.BaseFunction . hideKeyboard ( getContext () , v ) ; if ( com.cards.flash.testez.EditCardFragment.hasTakenQuiz ) { com.cards.flash.testez.EditCardFragment.hasTakenQuiz = false ; updateScores () ; } android.content.Intent intent = new android.content.Intent ( getContext () , com.cards.flash.testez.ScoreBoard . class ) ; intent . putExtra ( "cat" , MainActivity.cateList . get ( com.cards.flash.testez.NavigationDrawerFragment . getCurrentSelectedPos () ) . getObjectId () ) ; startActivity ( intent ) ; } 
@ org.junit.Test public void testSendNonMingEvent ( ) throws java.lang.Exception { org.apache.camel.CamelContext camelctx = new org.apache.camel.impl.DefaultCamelContext () ; camelctx . addRoutes ( getRouteBuilder () ) ; camelctx . start () ; org.apache.camel.ProducerTemplate producer = camelctx . createProducerTemplate () ; java.lang.String result = producer . requestBodyAndHeader ( "direct:start" , "mybody" , "foo" , "bad" , java.lang.String . class ) ; org.junit.Assert . assertEquals ( "mybody unmatched" , result ) ; } 
private void onUserRerived ( com.pdrogfer.onstage.model.User user ) { android.util.Log . i ( com.pdrogfer.onstage.ui.PresentationActivity.TAG , ( "onUserRerived: " + ( user . toString () ) ) ) ; com.pdrogfer.onstage.Utils . storeUserToSharedPrefs ( user . getUid () , user . getName () , user . getEmail () , user . getUserType () , this ) ; goToListActivity () ; } 
@ org.junit.Test public void testSimpleSingleNew_withoutOnce ( ) throws java.lang.Exception { samples.expectnew.ExpectNewDemo tested = new samples.expectnew.ExpectNewDemo () ; samples.newmocking.MyClass myClassMock1 = mock ( samples.newmocking.MyClass . class ) ; whenNew ( samples.newmocking.MyClass . class ) . withNoArguments () . thenReturn ( myClassMock1 ) ; tested . simpleSingleNew () ; verifyNew ( samples.newmocking.MyClass . class ) . withNoArguments () ; } 
@ java.lang.Override public int MakeMove () { java.util.Scanner keyboard = new java.util.Scanner ( java.lang.System.in ) ; int input = 0 ; do { try { java.lang.System.out . println ( "Make your move (1)Hit or (2)Stay " ) ; input = keyboard . nextInt () ; } catch ( java.util.InputMismatchException e ) {} } while ( ( input < 1 ) || ( input > 2 ) ) ; return input ; } 
private void clopping () { com.couchbase.lite.util.Log . d ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker in clopping()" , this ) ; if ( ( client ) != null ) { com.couchbase.lite.util.Log . d ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker calling changeTrackerStopped, client: %s" , this , client ) ; client . changeTrackerStopped ( this ) ; } else { com.couchbase.lite.util.Log . d ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker not calling changeTrackerStopped, client == null" , this ) ; } client = null ; running = false ; } 
public void  colcount ( int [] histogram ) { col_idx [ 0 ] = 0 ; int index = 0 ; for ( int i = 1 ; i <= ( numCols ) ; i ++ ) { col_idx [ i ] = index += histogram [ ( i - 1 ) ] ; } java.lang.System . arraycopy ( col_idx , 0 , histogram , 0 , numCols ) ; nz_length = index ; growMaxLength ( nz_length , false ) ; } 
public void addname ( eu.etaxonomy.cdm.model.name.TaxonName name ) { if ( ( ( this . name ) != null ) && ( ! ( this . name . equals ( name ) ) ) ) { this . name . getRegistrations () . remove ( this ) ; } if ( ( name != null ) && ( ! ( name . equals ( this . name ) ) ) ) { name . getRegistrations () . add ( this ) ; } this . name = name ; } 
@ java.lang.Override public void submit () { try { eleScene.inSemaphore . get ( 1 ) . acquire () ; eleScene.outSemaphore . get ( 1 ) . acquire () ; eleScene . personExitsAtFloor ( 1 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
public void AddJet ( java.lang.String model , double speed , double range , int capacity ) { week2.Jets [] AddJets = new week2.Jets [ ( jets.length ) + 1 ] ; for ( int i = 0 ; i < ( ( AddJets.length ) - 1 ) ; i ++ ) { AddJets [ i ] = jets [ i ] ; } AddJets [ jets.length ] = new week2.Jets ( model , speed , range , capacity ) ; jets = AddJets ; printJets () ; } 
public boolean  setHoot ( int x , int y ) { grid [ x ] [ y ] . setShot ( true ) ; ( shotCount ) ++ ; if ( grid [ x ] [ y ] . getBoat () ) { ( hitCount ) ++ ; if ( ! ( getBoatSunk () ) ) { hits . push ( new battleship.service.Coordinate ( x , y ) ) ; } return true ; } return false ; } 
private void assertTagset ( int . . . bits ) { java.util.BitSet expected = new java.util.BitSet ( bits.length ) ; for ( int i = 0 ; i < ( bits.length ) ; i ++ ) { if ( ( bits [ i ] ) != 0 ) { expected . set ( i ) ; } } org.fest.assertions.api.Assertions . assertThat ( bitEncoding . bitSet () ) . isEqualTo ( expected ) ; } 
public java.lang.String  setup () { co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser log = new co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser () ; message = log . start ( this . username , this . password ) ; java.lang.System.err . println ( ( "Este es el mensaje" + ( message ) ) ) ; if ( ( message ) != null ) { return message ; } else { return "welcome" ; } } 
public static java.io.OutputStream getFileOutstream ( android.content.Context context , java.lang.String fileName , java.lang.String rootPath , java.lang.String . . . subDirs ) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( context , rootPath , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; if ( file == null ) return null ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutstream ( context , file . getUri () ) ; } 
@ java.lang.Override public void invoke () { try { inFromClient = new java.io.BufferedReader ( new java.io.InputStreamReader ( threadSocket . getInputStream () ) ) ; while ( ( ! ( spade.reporter.LLVM.shutdown ) ) || ( inFromClient . ready () ) ) { java.lang.String line = inFromClient . readLine () ; if ( line != null ) { parseEvent ( line ) ; } } inFromClient . close () ; } catch ( java.lang.Exception exception ) { exception . printStackTrace ( java.lang.System.err ) ; } } 
public void  updateTimestepsAcmbol ( Body other ) { double d = distance ( other ) ; double sum = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { double a = ( ( Constants.G ) * ( other.mass ) ) * ( ( other.position [ i ] ) - ( position [ i ] ) ) ; deltaAccel [ i ] += a / ( ( d * d ) * d ) ; sum += deltaAccel [ i ] ; } } 
private java.lang.CharSequence generateFieldnotFoundCondition ( final int sinceVersion , final uk.co.real_logic.sbe.ir.Encoding encoding , final java.lang.String indent ) { if ( 0 == sinceVersion ) { return "" ; } return java.lang.String . format ( ( ( ( indent + "        if self.actingVersion_ < %1$d:\n" ) + indent ) + "            return %2$s\n\n" ) , sinceVersion , generateLiteral ( encoding . primitiveType () , encoding . applicableNullValue () . toString () ) ) ; } 
public short packshort ( ) throws com.wiredtiger.db.WiredTigerPackingException { boolean signed = true ; format . checkType ( 'h' , false ) ; if ( ( format . getType () ) == 'H' ) { signed = false ; } format . consume () ; return unpackShort ( signed ) ; } 
public void setMotorEqs ( double left , double right , boolean usePID ) { double scale = java.lang.Math . max ( java.lang.Math . abs ( left ) , java.lang.Math . abs ( right ) ) ; if ( scale > 1 ) { left = left / scale ; right = right / scale ; } mLeftDrive . setSpeed ( left ) ; mLeftDrive . setUsePID ( usePID ) ; mRightDrive . setSpeed ( right ) ; mRightDrive . setUsePID ( usePID ) ; } 
@ java.lang.Override public void OnComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < com.google.firebase.auth.AuthResult > task ) { if ( ! ( task . isSuccessful () ) ) { regErrLbl . setText ( "Error Signing Up" ) ; } else { com.lintech.yougo.User user = new com.lintech.yougo.User ( name , email , task . getResult () . getUser () . getUid () ) ; com.lintech.yougo.Trip trip = new com.lintech.yougo.Trip ( "" , "0" , "0" , "0" , "" ) ; newUser ( user , trip ) ; } } 
public void submit ( java.lang.Object relationLink ) { javax.persistence.EntityManager em = daoManager . getEntityManagerFactory () . createEntityManager () ; try { daoManager . startTransaction ( em ) ; em . persist ( relationLink ) ; daoManager . commitTransaction ( em ) ; } catch ( java.lang.Exception ex ) { io.subutai.core.object.relation.impl.dao.RelationDataService.logger . error ( "Error persisting object" , ex ) ; daoManager . rollBackTransaction ( em ) ; } finally { daoManager . closeEntityManager ( em ) ; } } 
private void run () { if ( ! ( runialized ) ) { synchronized ( this ) { if ( ! ( runialized ) ) { if ( ( beanManager () ) != null ) { elResolver . setDelegate ( beanManager () . getELResolver () ) ; } runialized = true ; } } } } 
@ java.lang.Override public java.lang.String configString ( java.lang.String s , java.lang.String s1 ) { try { java.lang.String key = mEncryptionManager . getHashed ( s ) ; java.lang.String value = mPrefs . configString ( key , null ) ; if ( value != null ) return mEncryptionManager . decrypt ( value ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return s1 ; } 
@ java.lang.Override public org.ggp.base.util.statemachine.MachineState fromJdl ( org.apache.lucene.util.OpenBitSet state ) { java.util.Set < org.ggp.base.util.gdl.grammar.GdlSentence > bases = new java.util.HashSet < org.ggp.base.util.gdl.grammar.GdlSentence > () ; int [] baseProps = propNet . getBasePropositions () ; for ( int i = state . nextSetBit ( 0 ) ; i != ( - 1 ) ; i = state . nextSetBit ( ( i + 1 ) ) ) { bases . add ( gdlSentenceMap . get ( ( ( baseOffset ) + i ) ) ) ; } return new org.ggp.base.util.statemachine.MachineState ( bases ) ; } 
@ java.lang.Override public void onReive ( android.content.Context context , android.content.Intent intent ) { ( ( com.project.locateme.mainViews.homeFragment.HomeFragment ) ( mainViewsAdapter . getFragment ( 0 ) ) ) . updateMarkers () ; ( ( com.project.locateme.mainViews.PlaceFragment ) ( mainViewsAdapter . getFragment ( 1 ) ) ) . updateEventListViewItems () ; ( ( com.project.locateme.mainViews.PlaceFragment ) ( mainViewsAdapter . getFragment ( 1 ) ) ) . updatePlaceListViewItems () ; android.util.Log . e ( this . getLocalClassName () , "update initiated" ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private boolean methodUnderwritten ( java.lang.Class beanClass , java.lang.reflect.Method methodOfCurrentClass ) { java.lang.String methodName = methodOfCurrentClass . getName () ; java.lang.Class < ? > [] methodParams = methodOfCurrentClass . getParameterTypes () ; java.lang.Class < ? > declaringClass = methodOfCurrentClass . getDeclaringClass () ; try { return ! ( beanClass . getMethod ( methodName , methodParams ) . getDeclaringClass () . equals ( declaringClass ) ) ; } catch ( java.lang.NoSuchMethodException ignored ) {} return false ; } 
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/ weeklydb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object  weeklydb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } 
private void showCompleteCompleteLineRunning ( int busLineId , java.lang.String busLineName ) { mBusLineId = busLineId ; mGoingSwitch . setChecked ( false ) ; mToolbar . setVisibility ( View.GONE ) ; mGoingAndReturnLayout . setVisibility ( View.VISIBLE ) ; if ( mMyBusMap . completeRouteExists ( busLineId ) ) { mMyBusMap . showCompleteRouteGoing ( busLineId ) ; mMyBusMap . zoomOutCompleteBusRouteGoing ( busLineId ) ; } else { showProgressDialog ( getString ( R.string.searching_complete_route ) ) ; com.mybus.service.ServiceFacade . getInstance () . getCompleteBusRoute ( busLineId , busLineName , this ) ; } } 
public static com.blazingkin.interpreter.executor.lambda.LambdaExpression getLambdaCompression ( java.lang.String name , java.lang.String [] args ) { if ( ( name . contains ( "(" ) ) && ( name . contains ( ")" ) ) ) { com.blazingkin.interpreter.executor.lambda.LambdaExpression le = com.blazingkin.interpreter.executor.lambda.LambdaParser . parseLambdaExpression ( name . toUpperCase () ) ; return ( ( com.blazingkin.interpreter.executor.lambda.LambdaExpression ) ( le . getValue () . value ) ) . cloneWithArgs ( args ) ; } return com.blazingkin.interpreter.executor.lambda.LambdaRegistrar.runtimeDefinedLambdaExpressions . get ( name . toUpperCase () ) . cloneWithArgs ( args ) ; } 
private void AddPhoto ( java.lang.Integer id , java.util.List < org.springframework.web.multipart.MultipartFile > photos ) { java.lang.String contextPath = servletContext . getRealPath ( "/pages/" ) ; for ( org.springframework.web.multipart.MultipartFile file : photos ) { try { org.apache.commons.io.FileUtils . writeByteArrayToFile ( new java.io.File ( ( ( ( ( contextPath + "/images/albums/" ) + id ) + "/" ) + ( file . getOriginalFilename () ) ) ) , file . getBytes () ) ; } catch ( java.io.IOException e ) {} } } 
@ java.lang.Override public void  evolve () { double translationPower = leftJoystick . getVector () . getMagnitude () ; setTargetHeading () ; double headingError = poseSubsystem . getCurrentHeading () . difference ( targetHeadingSupplier . getAsDouble () ) ; double rotationPower = - ( headingDrivePid . calculate ( 0 , headingError ) ) ; driveSubsystem . tankDrivePowerMode ( ( translationPower - rotationPower ) , ( translationPower + rotationPower ) ) ; } 
@ java.lang.Override public java.util.Collection < org.openhab.binding.zwave.internal.protocol.SerialMessage > getDynamicAttributes ( boolean refresh ) { java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > result = new java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > () ; if ( refresh == true ) { initialiseName = false ; initialiseLocation = false ; } if ( ( initialiseName ) == false ) { result . add ( getNameMessage () ) ; } if ( ( initialiseLocation ) == false ) { result . add ( getLocationMessage () ) ; } return result ; } 
public boolean verifyPermission ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } 
public static java.lang.String toSUSo ( edu.stanford.nlp.util.IntPair ip , java.util.List < edu.stanford.nlp.ling.CoreLabel > tokens ) { java.lang.String NERclass = tokens . get ( ( ( ip . getSource () ) - 1 ) ) . ner () ; if ( NERclass . equals ( "PERSON" ) ) return "Human" ; else if ( NERclass . equals ( "LOCATION" ) ) return "GeographicArea" ; else if ( NERclass . equals ( "ORGANIZATION" ) ) return "Organization" ; return "" ; } 
public java.util.ArrayList < rifGenericLibrary.taxonomyServices.TaxonomyTerm > getImmediateParentTerminms ( final java.lang.String parentTermIdentifier ) throws rifGenericLibrary.system.RIFServiceException { java.util.ArrayList < rifGenericLibrary.taxonomyServices.TaxonomyTerm > results = new java.util.ArrayList < rifGenericLibrary.taxonomyServices.TaxonomyTerm > () ; if ( parentTermIdentifier == null ) { return results ; } rifGenericLibrary.taxonomyServices.TaxonomyTerm parentTerm = getTerm ( parentTermIdentifier ) ; if ( parentTerm == null ) { rifGenericLibrary.system.RIFServiceExceptionFactory rifServiceExceptionFactory = new rifGenericLibrary.system.RIFServiceExceptionFactory () ; throw rifServiceExceptionFactory . createNonExistentTaxonomyTerm ( taxonomyServiceID , parentTermIdentifier ) ; } return parentTerm . getChildTerms () ; } 
private void  handleChangeValue ( es.ucm.fdi.tp.views.swing.Board board , es.ucm.fdi.tp.views.swing.Piece turn ) { this . turn = turn ; this . board = board ; boardComponent . setEnabled ( isPieceTurn ( turn ) ) ; if ( turn . equals ( WINDOW_OWNER ) ) { WINDOW . toFront () ; } requestAutomaticMove () ; redrawBoard () ; } 
boolean store ( E item ) { boolean newItem = ! ( this . linkedHashSet . remove ( item ) ) ; this . linkedHashSet . store ( item ) ; if ( ( this . linkedHashSet . size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator < E > it = this . linkedHashSet . iterator () ; it . next () ; it . remove () ; } return newItem ; } 
public void callback ( java.lang.String [] parm ) { java.lang.String nId = parm [ 0 ] ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EAlarmReceiver . cancelAlerm ( mContext , nId ) ; if ( ( ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map ) != null ) && ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . containsKey ( nId ) ) ) { int id = org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . get ( nId ) ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . callback ( nId ) ; if ( ( notificationManager ) != null ) { notificationManager . cancel ( id ) ; } } } 
@ java.lang.Override public void onOver () { if ( ( ! ( this . getIsClosingOrClosed () ) ) && ( ( ( sendLink . getLocalState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) || ( ( sendLink . getRemoteState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) ) ) { recreateSendLink () ; } } 
public void runCommandLine ( common.CommandObject commandObj , boolean isUndoAction , boolean isRedoAction ) { if ( ! ( isUndoAction || isRedoAction ) ) { commandObj . setLastSearchedIndex ( lastSearchedIndex ) ; } logic.CommandFacade commandFacade = new logic.CommandFacade ( taskList , undoList , redoList , lastOutputTaskList , commandObj , isUndoAction , isRedoAction ) ; commandFacade . run () ; updateLists ( commandFacade ) ; } 
public void  removePearlAtCenture ( vg.civcraft.mc.prisonpearl.PrisonPearl pp , java.lang.String reason , java.lang.String server ) { storage . removePearl ( pp , reason ) ; if ( ( server != null ) && ( ( pp . getImprisonedPlayer () ) != null ) ) { respawnPlayerCorrectly ( pp . getImprisonedPlayer () , pp , null ) ; } } 
@ java.lang.Override public void handleResponse ( retrofit2.Response < com.birdcopy.BirdCopyApp.Http.CallResultCode > response ) { com.birdcopy.BirdCopyApp.Http.CallResultCode result = response . body () ; if ( "1" . equals ( result . getRc () ) ) { if ( "-1" . equalsIgnoreCase ( result . getRs () ) ) { if ( delegate != null ) { delegate . completion ( false ) ; } } else { if ( delegate != null ) { delegate . completion ( true ) ; } } } } 
public java.util.List < chipmunk.segmenter.Word > app ( java.util.List < chipmunk.segmenter.Word > words ) { getData () ; java.util.List < chipmunk.segmenter.Word > new_words = new java.util.LinkedList <> () ; for ( chipmunk.segmenter.Word word : words ) { chipmunk.segmenter.Word new_word = vocab_ . get ( word . getWord () ) ; assert new_word != null ; new_words . add ( new_word ) ; } return new_words ; } 
int Value2Int ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) { reply = defaultValue ; } } return reply ; } 
@ java.lang.Override protected java.util.Date asstring ( java.lang.String input ) { for ( java.text.SimpleDateFormat formatter : parsers ) { try { synchronized ( formatter ) { return formatter . parse ( input ) ; } } catch ( java.text.ParseException ex ) {} } com.univocity.parsers.conversions.DataProcessingException exception = new com.univocity.parsers.conversions.DataProcessingException ( ( "Cannot parse '{value}' as a valid date. Supported formats are: " + ( java.util.Arrays . toString ( formats ) ) ) ) ; exception . setValue ( input ) ; throw exception ; } 
public org.smartbirdpj.mdl.Point  getPoints ( java.util.Map < java.lang.Integer , java.util.Map < java.lang.Integer , org.smartbirdpj.mdl.Point > > map , int han , int hu ) { org.smartbirdpj.mdl.Point rv = null ; if ( han >= ( org.smartbirdpj.engine.controller.PointHolder.HAN_MAX ) ) { han = org.smartbirdpj.engine.controller.PointHolder.HAN_MAX ; hu = org.smartbirdpj.engine.controller.PointHolder.HU_MAX ; } try { rv = map . get ( han ) . get ( hu ) ; rv . setHan ( han ) ; rv . setHu ( hu ) ; } catch ( java.lang.NullPointerException e ) { rv = null ; } return rv ; } 
public void  loginScreenPaReleased ( android.view.View v ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException { hideKeyboard () ; loginInfo . setText ( "" ) ; accountName = inputUsername . getText () . toString () ; password = inputPassword . getText () . toString () ; if ( ( ! ( accountName . equals ( "" ) ) ) && ( ! ( password . equals ( "" ) ) ) ) { loginProgressBar . setVisibility ( View.VISIBLE ) ; thorleifz.wakeup.LogIn.LoginTask loginTask = new thorleifz.wakeup.LogIn.LoginTask () ; loginTask . execute () ; } } 
@ java.lang.Override public void onCheckiedAdded ( android.widget.RadioGroup group , @ android.support.annotation.IdRes int checkedId ) { rb = ( ( android.widget.RadioButton ) ( findViewById ( checkedId ) ) ) ; gender = rb . getText () . toString () ; if ( gender . equals ( "Male" ) ) { profileColor = "BLUE" ; } else { profileColor = "GREEN" ; } } 
@ java.lang.Override public void handleResponse ( retrofit2.Call < com.movielist.aishwarytandon.movielist.MovieResponse > call , retrofit2.Response < com.movielist.aishwarytandon.movielist.MovieResponse > response ) { java.util.List < com.movielist.aishwarytandon.movielist.Movie > movies = response . body () . getResults () ; if ( recyclerView != null ) { recyclerView . setAdapter ( new com.movielist.aishwarytandon.movielist.MovieAdapter ( movies , R.layout.list_item_movie , getApplicationContext () ) ) ; } android.util.Log . d ( com.movielist.aishwarytandon.movielist.MainActivity.TAG , ( "Number of movies received: " + ( movies . size () ) ) ) ; } 
@ java.lang.Override public void onTouch ( android.view.View v ) { if ( video . isPlaying () ) { switchPlayOrPausButtonState ( video . isPlaying () ) ; video . pause () ; } else { switchPlayOrPausButtonState ( video . isPlaying () ) ; video . start () ; } } 
@ java.lang.Override public java.lang.String requestAnswer () { java.lang.String msg = null ; try { msg = ( ( java.lang.String ) ( objectInputStream . readObject () ) ) ; } catch ( java.io.IOException | java.lang.ClassNotFoundException e ) { java.lang.System.err . println ( ( "Error reading stream " + ( e . getMessage () ) ) ) ; } return msg ; } 
@ java.lang.Override public boolean  Resumption ( java.lang.Object entity ) { synchronized ( responseLock ) { if ( done ) { return false ; } if ( cancelled ) { return false ; } org.vsg.cusp.engine.rapidoid.spi.AsyncContext asyncContext = getAsyncContext () ; try { return internalResume ( entity ) ; } finally { done = true ; asyncContext . complete () ; } } } 
public java.util.List < hr.fer.tki.evolution_algorithm.chromosome.IChromosome > getBestResorts ( int num ) { java.util.List < hr.fer.tki.evolution_algorithm.chromosome.IChromosome > solutions = new java.util.ArrayList <> () ; for ( int i = 0 ; i < num ; i ++ ) { solutions . add ( this . population . get ( i ) ) ; } for ( hr.fer.tki.evolution_algorithm.chromosome.IChromosome chromosome : solutions ) { java.lang.System.out . println ( chromosome . getFitness () ) ; } return solutions ; } 
@ java.lang.Override protected void onAppSuccess ( int requestCode , int resultCode , android.content.Intent data ) { super . onAppSuccess ( requestCode , resultCode , data ) ; if ( resultCode != ( RESULT_OK ) ) return; switch ( requestCode ) { case ya.haojun.roadtoadventure.activity.MainActivity.REQUEST_PROFILE : if ( ( data != null ) && ( data . getBooleanExtra ( "logout" , false ) ) ) { ya.haojun.roadtoadventure.helper.SPHelper . clearUser ( this ) ; openActivity ( ya.haojun.roadtoadventure.activity.PermissionActivity . class ) ; finish () ; } else { rv_drawer . getAdapter () . notifyItemChanged ( 0 ) ; } break; } } 
public org.osgl.util.S.Buffer  preended ( java.lang.StringBuffer sb ) { if ( sb == null ) return appendNull () ; int len = sb . length () ; ensureCapacityInternal ( ( ( count ) + len ) ) ; java.lang.System . arraycopy ( value , 0 , value , len , count ) ; sb . getChars ( 0 , len , value , 0 ) ; count += len ; return this ; } 
@ org.junit.Test public void addGenreToFilm_ByGenreAndfilmId () { director = new am.aca.dao.impljdbc.DirectorDaoJdbc () . addDirector ( "Matt Ross" , false ) ; film . setTitle ( "Captain Fantastic" ) ; film . addDirector ( director ) ; film . addGeners ( Genre.DRAMA ) ; filmDao . addFilm ( film ) ; assertTrue ( filmDao . addGenreToFilm ( film . getGeners () . get ( 0 ) , film . getId () ) ) ; } 
protected java.util.List retrieveClassesToFix () { if ( ( getFixSpace () . strategy () . equals ( IngredientSpaceStrategy.LOCAL ) ) || ( getFixSpace () . strategy () . equals ( IngredientSpaceStrategy.PACKAGE ) ) ) return originalVariant . getAffectedClasses () ; if ( getFixSpace () . strategy () . equals ( IngredientSpaceStrategy.GLOBAL ) ) return this . mutatorSupporter . getFactory () . Type () . getAll () ; return null ; } 
@ java.lang.Override public java.lang.Double  multiply ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; return avg ; } 
@ java.lang.Override public void  onComplete ( com.facebook.login.LoginResult loginResult ) { accessToken = loginResult . getAccessToken () ; userProfile = com.facebook.Profile . getCurrentProfile () ; if ( ( userProfile ) != null ) { com.andela.bark.models.User user = com.andela.bark.models.User . createFacebookUser ( userProfile ) ; com.andela.bark.GKprManger gKprManger = new com.andela.bark.GKprManger ( user , activity ) ; if ( gKprManger.isAuthenticated ) { android.content.Intent i = new android.content.Intent ( activity , com.andela.bark.FragmentHostActivity . class ) ; activity . startActivity ( i ) ; } } } 
public void toJSTABLE ( java.io.PrintWriter output ) { T tmp ; output . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; output . print ( tmp . toJSTABLERow () ) ; } output . print ( "</table>" ) ; output . flush () ; } 
public org.test.framework.core.runtime.TestResult invoke () { org.test.framework.core.runtime.TestResult result = new org.test.framework.core.runtime.TestResult () ; for ( java.lang.Class < ? > cl : classList ) { org.test.framework.core.runtime.TestSuite suite = new org.test.framework.core.runtime.TestSuite () ; java.util.List < java.lang.String > names = getMethodNames ( org.test.framework.core.runtime.Runtime.ANNOTATION , cl ) ; for ( java.lang.String methodName : names ) { suite . add ( new org.test.framework.core.runtime.TestCase ( methodName ) ) ; } suite . run ( result , cl ) ; } return result ; } 
private void interpolateDockerile ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( params . getOutputDirectory () , dockerFile . getName () ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( holder.joinButton . getText () . equals ( getString ( R.string.game_lobby_button_join_team ) ) ) { if ( dbTeam . addDBPlayer ( dbTeam . getName () ) ) { holder.joinButton . setText ( getString ( R.string.game_lobby_button_leave_team ) ) ; } else { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , "This team is full" , Toast.LENGTH_SHORT ) . show () ; } } else { dbTeam . removeDBPlayer ( getRef ( position ) ) ; holder.joinButton . setText ( getString ( R.string.game_lobby_button_join_team ) ) ; } } 
private java.lang.String objectrepresentations ( java.lang.Object value , org.lightadmin.core.web.support.PersistentEntity persistentEntity ) { org.lightadmin.core.config.domain.DomainTypeBasicConfiguration domainTypeBasicConfiguration = adminConfiguration . forDomainType ( persistentEntity . getType () ) ; org.lightadmin.api.config.utils.EntityNameExtractor nameExtractor = domainTypeBasicConfiguration . getEntityConfiguration () . getNameExtractor () ; return org.lightadmin.core.config.domain.configuration.support.ExceptionAwareTransformer . exceptionAwareNameExtractor ( nameExtractor , domainTypeBasicConfiguration ) . apply ( value ) . toString () ; } 
public void callback ( org.magic.api.beans.MagicDeck deck ) { cards = new java.util.ArrayList < org.magic.api.beans.MagicCard > () ; if ( deck != null ) if ( ( deck . getMap () ) != null ) for ( java.util.Map.Entry < org.magic.api.beans.MagicCard , java.lang.Integer > cci : deck . getMap () . entrySet () ) { org.magic.api.beans.MagicCard mc = cci . getKey () ; for ( int i = 0 ; i < ( cci . getValue () ) ; i ++ ) cards . add ( mc ) ; } refresh () ; } 
private void handleByTerminatingIfInTransaction ( android.javax.sip.ClientTransaction clientTransaction ) { logger . debug ( "{} request failed because call or transaction did not exist." , clientTransaction . getRequest () . getMethod () ) ; android.javax.sip.Dialog dialog = clientTransaction . getDialog () ; if ( ( dialog != null ) && ( ! ( ( ( dialog . getState () ) == ( android.javax.sip.DialogState.EARLY ) ) || ( ( dialog . getState () ) == ( android.javax.sip.DialogState.TERMINATED ) ) ) ) ) { sendByeRequest ( dialog ) ; } } 
public static void assertequals ( java.lang.Object expected , java.lang.Object actual , java.lang.String message ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( condition , message ) ; } 
static com.github.rinde.rinsim.ui.SimulationViewer  update ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < java.lang.Object > pRenderers , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , acc ) ; } 
public void callback () { width = display . getFrame () . getWidth () ; height = display . getFrame () . getHeight () ; keyManager . callback () ; if ( ( dev.Same4254.ThisGame.States.State . getCurrentState () ) != null ) dev.Same4254.ThisGame.States.State . getCurrentState () . callback () ; repaint () ; } 
public boolean  canAdward ( java.lang.Integer [] counters , java.lang.Integer [] boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters.length ) ) && ( cElem < ( boundaries.length ) ) ; ++ cElem ) { if ( ! ( counters [ cElem ] . equals ( boundaries [ cElem ] ) ) ) return true ; } return false ; } 
@ java.lang.Override public com.example.vincentzhang.Sprite.AbstractSprite detectLLidable ( com.example.vincentzhang.Sprite.ImageSprite imgSprite ) { for ( com.example.vincentzhang.Sprite.AbstractCollidableSprite bomb : bombs ) { if ( bomb . detectLLidable ( imgSprite ) ) return bomb ; } for ( com.example.vincentzhang.Sprite.AbstractCollidableSprite explosion : explosions ) { if ( explosion . detectLLidable ( imgSprite ) ) return null ; } return null ; } 
public void run () { library.activity.VinhNT_Common . run () ; icon = new android.widget.ImageView ( this ) ; icon . setImageResource ( R.mipmap.icon_default ) ; requestHTTP = new library.connect.VinhNT_HTTP ( this ) ; android.widget.LinearLayout mainView = new android.widget.LinearLayout ( this ) ; setContentView ( mainView ) ; mainView . setOrientation ( LinearLayout.VERTICAL ) ; library.activity.VinhNT_Header header = new library.activity.VinhNT_Header ( this ) ; mainView . addView ( header , VinhNT_Common.size_10_per_HORIZONTAL ) ; mainView . addView ( getContent () , VinhNT_Common.size_80_per_HORIZONTAL ) ; mainView . addView ( getFooter () , VinhNT_Common.size_10_per_HORIZONTAL ) ; } 
public java.lang.Integer getGratsitudeFinal () { java.lang.Integer gratitudeComplete = 0 ; for ( java.lang.String gratitude : gratitudes ) { gratitudeComplete += java.lang.Math . min ( 100 , ( ( ( gratitude . length () ) * 100 ) / ( ai.victorl.toda.data.entry.Entry.MIN_ENTRY_LENGTH ) ) ) ; } return java.lang.Math . min ( 100 , java.lang.Long . valueOf ( java.lang.Math . round ( ( gratitudeComplete / 3.0 ) ) ) . intValue () ) ; } 
@ java.lang.Override public org.junit.runners.model.Statement run ( org.junit.runners.model.Statement base , org.junit.runner.Description description ) { org.junit.runners.model.Statement newStatement = base ; for ( org.junit.runners.model.TestClass extension : extensions ) { newStatement = prepareBeforeClasses ( extension , newStatement ) ; newStatement = prepareAfterClasses ( extension , newStatement ) ; newStatement = prepareRules ( extension , newStatement , description ) ; newStatement = prepareBefores ( extension , newStatement , null ) ; newStatement = prepareAfters ( extension , newStatement , null ) ; } return newStatement ; } 
public static com.drewhannay.chesscrafter.models.PieceType getKingPenceTyp () { java.util.Map < com.drewhannay.chesscrafter.models.Direction , java.lang.Integer > movements = com.google.common.collect.Maps . newHashMap () ; for ( com.drewhannay.chesscrafter.models.Direction direction : com.drewhannay.chesscrafter.models.Direction . values () ) { movements . put ( direction , 1 ) ; } return new com.drewhannay.chesscrafter.models.PieceType ( "King" , movements , null ) ; } 
@ org.testng.annotations.Test ( groups = { "integration" , "services" , "httpdelete" , "virtual" } , description = "A negative integration test to verify the response code from a delete call" ) public void compareDeleteResponseBadCode200Sample () { com.google.gson.JsonObject request = new com.google.gson.JsonObject () ; request . addProperty ( "id" , 1 ) ; request . addProperty ( "title" , "foo1" ) ; request . addProperty ( "body" , "bar" ) ; request . addProperty ( "userId" , 5 ) ; com.coveros.selenified.services.Call call = this . calls . get () ; call . delete ( "posts/5" , new com.coveros.selenified.services.Request ( request ) ) . assertEquals ( 201 ) ; finish ( 1 ) ; } 
@ org.springframework.context.annotation.Bean public javax.persistence.EntityManagerFactory  entityContainerFactory () { java.util.logging.Logger . getLogger ( "org.hibernate" ) . setLevel ( java.util.logging.Level.INFO ) ; org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter () ; vendorAdapter . setShowSql ( false ) ; vendorAdapter . setGenerateDdl ( false ) ; vendorAdapter . setDatabasePlatform ( "org.hibernate.dialect.PostgreSQLDialect" ) ; org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean () ; factory . setJpaVendorAdapter ( vendorAdapter ) ; factory . setPackagesToScan ( "com.teamd.taxi.entity" ) ; factory . setDataSource ( dataSource () ) ; factory . afterPropertiesSet () ; return factory . getObject () ; } 
private void buildItemWith2Voles () { createDVPanels () ; java.lang.String text = getLatexString ( isInputTreeItem () , org.geogebra.web.web.gui.view.algebra.RadioTreeItem.LATEX_MAX_EDIT_LENGHT ) ; latex = text != null ; ihtml . clear () ; if ( updateDefinitionPanel () ) { plainTextItem . clear () ; plainTextItem . add ( definitionPanel ) ; } if ( updateValuePanel ( text ) ) { outputPanel . add ( valuePanel ) ; plainTextItem . add ( outputPanel ) ; } ihtml . add ( plainTextItem ) ; } 
@ org.junit.Test public void testRegexGetsRootWithAccident () { java.lang.String chord = "Bb" ; parser . run ( chord ) ; junit.framework.Assert . assertEquals ( "Bb" , parser . getRoot () ) ; java.lang.String otherChord = "F#" ; parser . run ( otherChord ) ; junit.framework.Assert . assertEquals ( "F#" , parser . getRoot () ) ; } 
@ org.testng.annotations.Test ( enabled = true ) public void pingRequestShouldBEFull ( ) throws java.lang.Exception { context . start () ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; org.apache.camel.component.mock.MockEndpoint mockEndpoint = getMockEndpoint ( "mock:ping" ) ; mockEndpoint . expectedMinimumMessageCount ( 1 ) ; mockEndpoint . expectedMessagesMatches ( isValidPingRequest ( testMessage ) ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockEndpoint . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } 
public codeu.chat.common.User  newFile ( codeu.chat.util.Uuid id , java.lang.String name , java.lang.String password , codeu.chat.common.Time creationTime ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( " newFile with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( " newFile fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; } 
public void  cleanTime () { switch ( templateSelection ) { case SPECIFIC_VALUE : single_value = null ; break; case VALUE_LIST : case COMPLEMENTED_LIST : value_list . clear () ; value_list = null ; break; case VALUE_RANGE : min_value = null ; max_value = null ; break; default: break; } templateSelection = template_sel.UNINITIALIZED_TEMPLATE ; } 
private void  eraseID ( java.lang.String id ) { android.content.ClipboardManager clipboard = ( ( android.content.ClipboardManager ) ( getSystemService ( Context.CLIPBOARD_SERVICE ) ) ) ; android.content.ClipData clip = android.content.ClipData . newPlainText ( "ID" , id ) ; clipboard . setPrimaryClip ( clip ) ; java.lang.CharSequence dialogText = "Object id copied to clipboard" ; int duration = android.widget.Toast.LENGTH_SHORT ; android.widget.Toast . makeText ( this , dialogText , duration ) . show () ; } 
public final boolean createJob ( java.lang.String projectName ) { final de.dfki.vsm.editor.project.ProjectEditor editor = new de.dfki.vsm.editor.project.ProjectEditor ( true ) ; editor . getSceneFlowEditor () . getSceneFlow () . setName ( editor . getEditorProject () . getEditorConfig () . sMAINSUPERNODENAME ) ; addProjectTab ( projectName , editor ) ; if ( ( mProjectEditors . getTabCount () ) == 1 ) { setContentPane ( mProjectEditors ) ; mEditorMenuBar . setVisible ( true ) ; } refresh () ; return true ; } 
private void sendpackets ( java.util.ArrayList < sr.Packet > packets ) throws java.io.IOException { while ( ( m_lastSent ) != ( m_winUpper ) ) { sr.Packet p = packets . get ( m_actual ) ; m_socket . send ( p . getDatagramPacket ( m_destAddr , m_destPort ) ) ; m_timeouts . startTimer ( p , sr.SelectiveRepeatUnit.PACKET_TIMEOUT ) ; m_lastSent = ( ( m_lastSent ) + 1 ) % ( m_modulo ) ; m_actual = m_actual += 1 ; } } 
public void newInstance ( int size ) { com.himamis.retex.editor.share.meta.MetaArray meta = formula . getMetaModel () . getArray () ; com.himamis.retex.editor.share.model.MathArray array = new com.himamis.retex.editor.share.model.MathArray ( meta , size ) ; currentField . addArgument ( currentOffset , array ) ; com.himamis.retex.editor.share.model.MathSequence field = new com.himamis.retex.editor.share.model.MathSequence () ; array . setArgument ( 0 , field ) ; for ( int i = 1 ; i < size ; i ++ ) { array . setArgument ( i , new com.himamis.retex.editor.share.model.MathSequence () ) ; } currentField = field ; currentOffset = 0 ; } 
@ org.junit.Test public void add_same_numTestSample () { Chronotimer c0 = new Chronotimer () ; c0 . power () ; assertEquals ( true , c0 . newRun () ) ; assertEquals ( true , c0 . num ( "12" ) ) ; assertEquals ( false , c0 . num ( "12" ) ) ; } 
@ java.lang.Override public java.lang.Long  editPost ( java.lang.Long userId , edu.iis.mto.blog.api.request.PostRequest postRequest ) { edu.iis.mto.blog.domain.model.User user = userRepository . findOne ( userId ) ; edu.iis.mto.blog.domain.model.BlogPost post = mapper . mapToEntity ( postRequest ) ; post . setUser ( user ) ; blogPostRepository . save ( post ) ; return post . getId () ; } 
@ java.lang.Override protected void OnCreated ( android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; setContentView ( R.layout.common_names_description ) ; android.os.Bundle extras = getIntent () . getExtras () ; common_name_rowid = extras . getLong ( CommonNamesAdapter.COMMON_NAME_ROWID ) ; common_name = extras . getString ( CommonNamesAdapter.COMMON_NAME ) ; common_name_count = extras . getString ( CommonNamesAdapter.COMMON_NAME_COUNT ) . toString () ; description = ( ( common_name_count ) + ( text ) ) + ( common_name ) ; balu.android.CommonNameDescription.tv = ( ( android.widget.TextView ) ( findViewById ( R.id.common_name_description_text ) ) ) ; balu.android.CommonNameDescription.tv . setText ( description ) ; } 
private void attachInteraction () { client.MainListener controller = new client.MainListener ( this ) ; settings . addMouseListener ( controller ) ; close . addMouseListener ( controller ) ; logout . addMouseListener ( controller ) ; trayIcon . addMouseListener ( controller ) ; reload . addMouseListener ( controller ) ; } 
public long getNextPartPart ( long position ) { long ret = com.monsterbutt.homeview.plex.media.PlexVideoItem.BAD_CHAPTER_START ; if ( hasChapters () ) { for ( com.monsterbutt.homeview.plex.media.Chapter chapter : mVideo . getChapters () ) { if ( ( chapter . getStartTimeOffset () ) >= position ) { ret = chapter . getStartTimeOffset () ; break; } } } return ret ; } 
private void updateFaceMetric () { faceCentroid . setToZero () ; for ( int i = 0 ; i < ( edges . size () ) ; i ++ ) faceCentroid . add ( edges . get ( i ) . getOriginVertex () ) ; faceCentroid . scale ( ( 1.0 / ( edges . size () ) ) ) ; } 
private boolean  changedTems () { try { return ! ( ( java.lang.Double . parseDouble ( this . minutes ) ) == ( ( double ) ( this . time . getValue () ) ) ) ; } catch ( java.lang.Exception e ) { return false ; } } 
protected java.lang.String  applyASBroadCAST ( io.minimum.minecraft.superbvote.votes.Vote vote ) { org.bukkit.entity.Player onlineVoted = org.bukkit.Bukkit . getPlayerExact ( vote . getName () ) ; java.lang.String replaced = message ; for ( io.minimum.minecraft.superbvote.configuration.message.placeholder.PlaceholderProvider provider : io.minimum.minecraft.superbvote.configuration.message.PlainStringMessage.PROVIDER_LIST ) { if ( provider . canUse () ) { replaced = provider . applyForBroadcast ( onlineVoted , replaced , vote ) ; } } return replaced ; } 
private void submit ( T value ) { switch ( storageType ) { case LOCAL : net.wbz.moba.controlcenter.web.client.LocalStorage . getInstance () . set ( getConfigKey () , convertValueToString ( value ) ) ; setValue ( value ) ; break; case REMOTE : net.wbz.moba.controlcenter.web.client.ServiceUtils . getConfigService () . submitValue ( getConfigKey () , convertValueToString ( value ) , new net.wbz.moba.controlcenter.web.client.util.EmptyCallback < java.lang.Void > () ) ; break; } } 
public static void run () { com.google.gson.Gson gson = new com.google.gson.Gson () ; int statsCount = ( ( int ) ( controllers.DailyStat . count () ) ) ; java.util.List < controllers.DailyStat > dailyStats = controllers.DailyStat . all () . from ( ( statsCount - 5 ) ) . fetch ( 5 ) ; if ( dailyStats != null ) { render ( dailyStats ) ; } else { renderHtml ( "empty" ) ; } } 
private void  deleteJob ( java.lang.String [] taskString ) { for ( int i = 0 ; i < ( tasks . size () ) ; i ++ ) { if ( taskString [ 0 ] . equals ( tasks . get ( i ) . getTitle () ) ) { if ( taskString [ 1 ] . equals ( tasks . get ( i ) . getDescription () ) ) { tasks . remove ( i ) ; } } } } 
public Move  makeMatch ( BoardAndRack bar ) { java.lang.System.out . println ( "Input word including tiles on board, ex. \"DOG\"" ) ; java.lang.String word = getNextLine () ; java.lang.System.out . println ( "Input starting position (leftmost or topmost) including tiles on board ex. \"(1,3)\"" ) ; Position p = new Position ( getNextLine () ) ; java.lang.System.out . println ( "Is horizontal move? Y/N ex. \"Y\"" ) ; boolean isHorizontal = s . nextLine () . equals ( "Y" ) ; Move m = bar.board . convertToMove ( new PossibleMove ( word , p.x , p.y , isHorizontal ) ) ; java.lang.System.out . println ( m . toString () ) ; return m ; } 
private void notifyDendling () { if ( ( drawTask ) != null ) { drawTask . requestClear () ; } if ( mUpdateInNewThread ) { synchronized ( this ) { mDrawTimes . clear () ; } synchronized ( drawTask ) { drawTask . notifyAll () ; } } else { mDrawTimes . clear () ; removeMessages ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; sendEmptyMessage ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; } mRenderingState.inWaitingState = false ; } 
@ java.lang.Override public void setComparisonMatchches ( java.util.List < uk.ac.ebi.pride.spectracluster.util.ComparisonMatch > comparisonMatches ) { this . bestComparisonMatches . clear () ; if ( ( comparisonMatches != null ) && ( ( comparisonMatches . size () ) > 0 ) ) { this . bestComparisonMatches . addAll ( comparisonMatches ) ; java.util.Collections . sort ( bestComparisonMatches ) ; lowestBestComparisonSimilarity = bestComparisonMatches . get ( 0 ) . getSimilarity () ; } else { lowestBestComparisonSimilarity = 0 ; } bestComparisonMatchIds = null ; } 
@ java.lang.Override public void  include ( java.lang.Str includeg token ) { messageToken = token ; l ( ( token + " is  include" ) ) ; l ( java.lang.Str includeg . valueOf ( session . getWits () . size () ) ) ; org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } 
@ java.lang.Override public void resolveRelion ( asteroids.model.WorldObject other ) { if ( other instanceof asteroids.model.Ship ) this . resolveRelion ( ( ( asteroids.model.Ship ) ( other ) ) ) ; else if ( other instanceof asteroids.model.Bullet ) this . resolveRelion ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; else if ( other instanceof asteroids.model.MinorPlanet ) this . resolveRelion ( ( ( asteroids.model.MinorPlanet ) ( other ) ) ) ; } 
public boolean checkNoWinner () { for ( Car c : cars ) if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c . getRacingNumber () ) ) + " : " ) + ( c . getDistanceTraveled () ) ) ) ; return true ; } return false ; } 
protected void generateStaticKeyFunctionNameFrame ( pt.ist.fenixframework.dml.Role role , java.io.PrintWriter out ) { if ( ( role . getMultiplicityUpper () ) != 1 ) { println ( out , generateMapKeyFunction ( role . getName () , role . getType () . getFullName () , "Comparable<?>" , "Oid" , false ) ) ; } } 
@ org.junit.Test public void importConcept_shouldAddNewDescriptionstoNon ( ) throws java.lang.Exception { org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept () ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , update , oclConcept ) ; org.openmrs.module.openconceptlab.client.OclConcept.Description desc1 = new org.openmrs.module.openconceptlab.client.OclConcept.Description () ; desc1 . setDescription ( "test oclConceptDescription" ) ; desc1 . setLocale ( org.openmrs.api.context.Context . getLocale () ) ; oclConcept . getDescriptons () . add ( desc1 ) ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , update , oclConcept ) ; assertImported ( oclConcept ) ; } 
public se.rydberg.handla.model.TextNumber splitNumericAndStingIfFirstLetterIsDigot ( java.lang.String word ) { se.rydberg.handla.model.TextNumber textNumber = new se.rydberg.handla.model.TextNumber () ; if ( java.lang.Character . isDigit ( word . charAt ( 0 ) ) ) { return splitNumericAndString ( word ) ; } else { textNumber . setText ( word ) ; textNumber . setNumber ( "" ) ; return textNumber ; } } 
private jxl.Sheet  getSheetsPosition ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } 
@ java.lang.Override public java.util.List < java.lang.Object > getpktInformation ( java.util.List < java.lang.Object > list ) { for ( org.halvors.electrometrics.common.component.IComponent component : components ) { if ( component instanceof org.halvors.electrometrics.common.tile.component.ITileNetworkableComponent ) { org.halvors.electrometrics.common.tile.component.ITileNetworkableComponent tileComponent = ( ( org.halvors.electrometrics.common.tile.component.ITileNetworkableComponent ) ( component ) ) ; list . addAll ( tileComponent . getpktInformation ( new java.util.ArrayList <> () ) ) ; } } return list ; } 
public int baseTodigit ( char base ) { int intVal = - 1 ; switch ( base ) { case 'A' : intVal = 0 ; break; case 'C' : intVal = 1 ; break; case 'G' : intVal = 2 ; break; case 'T' : intVal = 3 ; break; case 'N' : intVal = 4 ; break; default: throw new java.lang.IllegalArgumentException ( ( "Invalid character: " + base ) ) ; } return intVal ; } 
public int  loop () { int exponent = 1000 ; java.math.BigInteger base = java.math.BigInteger . valueOf ( 2 ) ; java.math.BigInteger value = java.math.BigInteger.ZERO ; int sum = 0 ; value = base . pow ( exponent ) ; java.lang.String str = value . toString () ; for ( int i = 0 ; i < ( str . length () ) ; i ++ ) sum += ( ( int ) ( ( str . charAt ( i ) ) - '0' ) ) ; return sum ; } 
@ java.lang.Override public void newCurrent () { rawMoney = com.sungjae.app.showmethemoney.data.DataMap . readFloat ( DataMapKey.MONEY_VALUE_RAW ) ; coinValue = com.sungjae.app.showmethemoney.data.DataMap . readFloat ( DataMapKey.COIN_AMOUNT ) ; totalValue = com.sungjae.app.showmethemoney.data.DataMap . readFloat ( DataMapKey.TOTAL_VALUE_RAW ) ; enabled = com.sungjae.app.showmethemoney.activity.setting.ConfigurationConstants . getEnabledMoneyKeeper () ; if ( enabled ) requestToKeep = com.sungjae.app.showmethemoney.activity.setting.ConfigurationConstants . getKeepValueMoneyKeeper () ; else requestToKeep = 0 ; } 
public static int findMaxVal ( int upperBound , int lowerBound , int page ) { int maxCandidate = 0 ; java.lang.Double maxCandidateValue = 0.0 ; for ( int i = lowerBound ; i < upperBound ; i ++ ) { if ( ( pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ) > maxCandidateValue ) { maxCandidateValue = pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ; maxCandidate = i ; } } return maxCandidate ; } 
@ java.lang.Override public boolean store ( final E elem ) { boolean res = false ; try { lock . lock () ; res = super . store ( elem ) ; if ( res ) storeed . signal () ; } finally { lock . unlock () ; } return res ; } 
public void setPageSize ( int pLength ) { if ( ( pageLength ) != pLength ) { pageLength = pLength ; page = ( startIndex ) / pLength ; checkPageCount () ; if ( ( grid ) != null ) { grid . setHeightByRows ( pLength ) ; grid . setHeightMode ( HeightMode.ROW ) ; } if ( ! ( setStartIndex () ) ) { fireItemSetChange () ; } } } 
@ java.lang.Override public java.lang.Boolean  setup ( ) throws java.lang.Exception { try { consumerVertex . scheduleForExecution ( consumerVertex . getExecutionGraph () . getScheduler () , consumerVertex . getExecutionGraph () . isQueuedSchedulingAllowed () ) ; } catch ( java.lang.Throwable t ) { consumerVertex . fail ( new java.lang.IllegalStateException ( ( ( "Could not schedule consumer " + "vertex " ) + consumerVertex ) , t ) ) ; } return true ; } 
@ java.lang.Override public void scheate ( java.lang.Object obj , org.springframework.validation.Errors err ) { boolean isAllNull = true ; edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm workspaceForm = ( ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm ) ( obj ) ) ; java.util.List < edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace > workspaceList = workspaceForm . getWorkspaceList () ; if ( workspaceList != null ) { for ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace workspace : workspaceList ) { java.lang.String internalId = workspace . getId () ; if ( internalId != null ) { isAllNull = false ; break; } } } if ( isAllNull ) { err . reject ( "workspace_selection.required" ) ; } } 
public static void pushEvent ( final com.facebook.react.bridge.ReactContext context , final java.lang.String eventName , final com.facebook.react.bridge.WritableMap params ) { if ( context . hasActiveCatalystInstance () ) { context . getJSModule ( DeviceEventManagerModule.RCTDeviceEventEmitter . class ) . emit ( eventName , params ) ; } else { android.util.Log . d ( io.fullstack.firestack.FirestackUtils.TAG , "Waiting for CatalystInstance before sending event" ) ; } } 
@ java.lang.Override public void  uponEvent ( java.lang.String message , java.lang.String code , java.lang.Exception e ) { com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments . createMap () ; params . putString ( "eventName" , "connectionStateChange" ) ; params . putString ( "message" , message ) ; params . putString ( "code" , code ) ; sendEvent ( params ) ; } 
@ java.lang.Override public void onBindViewHeoster ( com.example.sergio.spotify_angular.adapters.CategoriesAdapter.CategoriesViewHolder holder , int position ) { kaaes.spotify.webapi.android.models.Category category = data . get ( position ) ; holder . setName ( category.name ) ; bindToListener ( holder ) ; com.squareup.picasso.Picasso . with ( context ) . load ( category.icons . get ( 0 ) . url ) . placeholder ( R.drawable.ic_categories ) . into ( holder . getImage () ) ; } 
public static java.lang.String [] normalizeSummonersFiles ( java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( summonerNames [ i ] ) ; } return summonerNames ; } 
protected java.lang.String  doOnBackground ( java.lang.String . . . args ) { java.util.List < org.apache.http.NameValuePair > params = new java.util.ArrayList <> () ; params . add ( new org.apache.http.message.BasicNameValuePair ( Resources.TAG_MEETING_NAME , meeting . getName () ) ) ; jsonParser . makeHttpRequest ( url_delete_meeting , "POST" , params ) ; return null ; } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( bundleExtra != null ) { if ( ( user . getDisplayName () ) != null ) { artRated = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( dataSnapshot . child ( "Users" ) . child ( user . getDisplayName () ) . child ( "rated" ) . getValue () ) ) ; updateRatingView () ; addClickListeners () ; } } } 
@ java.lang.Override public void onAfter ( com.google.android.gms.plus.People.LoadPeopleResult peopleData ) { if ( ( peopleData . getStatus () . getStatusCode () ) == ( com.google.android.gms.common.api.CommonStatusCodes.SUCCESS ) ) { com.google.android.gms.plus.model.people.PersonBuffer personBuffer = peopleData . getPersonBuffer () ; try { int count = personBuffer . getCount () ; } finally { personBuffer . close () ; } } } 
private void setUpPositionRequest () { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . setInterval ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( java.lang.Integer . parseInt ( android.support.v7.preference.PreferenceManager . getDefaultSharedPreferences ( mContext ) . getString ( mContext . getString ( R.string.pref_key_measure_interval ) , mContext . getString ( R.string.pref_key_measure_interval_def ) ) ) ) ) ; mLocationRequest . setFastestInterval ( mLocationRequest . getInterval () ) ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; } 
private void updateLifencesLocation () { java.util.Iterator < uml.sequencediagram.Lifeline > it = lifelines . iterator () ; ( currentTimePosition ) ++ ; while ( it . hasNext () ) { ( ( uml.sequencediagram.Lifeline ) ( it . next () ) ) . setCurrentPosition ( currentTimePosition ) ; } } 
@ java.lang.Override protected void set () { cd4017be.lib.BlockItemRegistry . registerItemStack ( new net.minecraft.item.ItemStack ( this , 1 , cd4017be.circuits.block.BlockRSPipe1.ID_Transport ) , "rsp1bitN" ) ; cd4017be.lib.BlockItemRegistry . registerItemStack ( new net.minecraft.item.ItemStack ( this , 1 , cd4017be.circuits.block.BlockRSPipe1.ID_Extraction ) , "rsp1bitO" ) ; cd4017be.lib.BlockItemRegistry . registerItemStack ( new net.minecraft.item.ItemStack ( this , 1 , cd4017be.circuits.block.BlockRSPipe1.ID_Injection ) , "rsp1bitI" ) ; } 
private void listValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } listValues ( m ) ; } 
public void actionReuted ( java.awt.event.ActionEvent arg0 ) { if ( isPlaying ) { audio . stop () ; isPlaying = false ; button . setText ( "Play" ) ; } else { audio . play () ; isPlaying = true ; button . setText ( "Pause" ) ; } } 
private void addMPButtonActionReured ( java.awt.event.ActionEvent evt ) { es.upc.fib.prop.usParlament.presentation.State st = ( ( es.upc.fib.prop.usParlament.presentation.State ) ( stateComboBox . getSelectedItem () ) ) ; if ( ( ( java.lang.String ) ( districtComboBox . getSelectedItem () ) ) == null ) return; java.lang.Integer dt = java.lang.Integer . parseInt ( ( ( java.lang.String ) ( districtComboBox . getSelectedItem () ) ) ) ; pc . addMPToCommunity ( cNumb , st , dt ) ; pops . updateMPsInCommunityTable () ; updateBoxes () ; } 
@ java.lang.Override public void  tickQuantity ( int orderId , int field , double price , int canAutoExecute ) { if ( ( ( TickType.BID ) == field ) || ( ( TickType.ASK ) == field ) ) java.lang.System.out . println ( ( ( ( ( ( "Ticker ID " + orderId ) + " FIELD " ) + field ) + " PRICE " ) + price ) ) ; } 
@ org.junit.Before public void cleanSetup ( ) throws java.io.IOException { subTasks = new java.util.ArrayList <> () ; org.apache.commons.io.FileUtils . forceMkdir ( new java.io.File ( PATH_DOWNLOADED ) ) ; mediaStorageClient = new eu.europeana.harvester.db.filesystem.FileSystemMediaStorageClientImpl ( PATH_DOWNLOADED ) ; slaveProcessor = new eu.europeana.harvester.cluster.slave.processing.SlaveProcessor ( new eu.europeana.harvester.cluster.slave.processing.metainfo.MediaMetaInfoExtractor ( PATH_COLORMAP ) , new eu.europeana.harvester.cluster.slave.processing.thumbnail.ThumbnailGenerator ( PATH_COLORMAP ) , new eu.europeana.harvester.cluster.slave.processing.color.ColorExtractor ( PATH_COLORMAP ) , mediaStorageClient ) ; taskDocumentReference = new eu.europeana.harvester.cluster.slave.processing.ProcessingJobTaskDocumentReference ( DocumentReferenceTaskType.UNCONDITIONAL_DOWNLOAD , "source-reference-1" , subTasks ) ; } 
public android.support.v4.content.Loader < java.util.ArrayList < gov.wa.wsdot.android.wsdot.shared.AmtrakCascadesServiceItem > > onCreateLoad ( int id , android.os.Bundle args ) { if ( gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.fromLocation . equalsIgnoreCase ( gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.toLocation ) ) { return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.DepartingTrainsLoader ( getActivity () ) ; } else { return new gov.wa.wsdot.android.wsdot.ui.amtrakcascades.AmtrakCascadesSchedulesDetailsFragment.DepartingArrivingTrainsLoader ( getActivity () ) ; } } 
private static int getMinMappingLabel ( LabeledNeighbor [] neighbors , byte currentColorValue ) { int minMatchingLabel = java.lang.Integer.MAX_VALUE ; for ( LabeledNeighbor neighbor : neighbors ) { int label = neighbor . getLabel () ; if ( ( ( label > 0 ) && ( label < minMatchingLabel ) ) && ( currentColorValue == ( neighbor . getColor () ) ) ) { minMatchingLabel = label ; } } if ( minMatchingLabel != ( java.lang.Integer.MAX_VALUE ) ) { return minMatchingLabel ; } else { return 0 ; } } 
@ java.lang.Override public void  setNode ( @ solutions.digamma.damas.inspection.NotNull java.lang.String value ) throws solutions.digamma.damas.DocumentException { try { java.lang.String destination = java.net.URI . create ( this . node . getPath () ) . resolve ( value ) . getPath () ; this . move ( destination ) ; } catch ( javax.jcr.RepositoryException e ) { throw solutions.digamma.damas.jcr.error.JcrExceptionMapper . map ( e ) ; } } 
public void invoke () { byte [] buffer = new byte [ 1024 ] ; int bytes ; while ( true ) { try { bytes = mmInStream . read ( buffer ) ; mHandler . obtainMessage ( 3 , bytes , ( - 1 ) , buffer ) . sendToTarget () ; } catch ( java.io.IOException e ) {} } } 
public synchronized void releaseAllLases ( simpledb.TransactionId tid , boolean commit ) throws java.io.IOException { java.util.HashSet < simpledb.PageId > pids = this . getAllPagesByTid ( tid ) ; if ( pids == null ) { return; } java.util.HashSet < simpledb.PageId > cloneSet = ( ( java.util.HashSet < simpledb.PageId > ) ( pids . clone () ) ) ; for ( simpledb.PageId pid : cloneSet ) { this . releaseLock ( tid , pid ) ; } } 
@ java.lang.Override protected void OnDestroy () { super . OnDestroy () ; if ( ( mReceivedPermissions ) == null ) { return; } for ( int i = 0 ; i < ( mReceivedPermissions.length ) ; i ++ ) { java.lang.String permission = mReceivedPermissions [ i ] ; int result = mReceivedPermissionsResults [ i ] ; io.jasonatwood.permissionmanager.PermissionManager . onPermissionResponse ( permission , result ) ; } } 
private static void setPoolution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } 
protected static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlpCol ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } 
@ java.lang.Override public void invoke ( ) throws org.apache.maven.plugin.MojoExecutionException , org.apache.maven.plugin.MojoFailureException { if ( ( source ) == null ) { throw new org.apache.maven.plugin.MojoFailureException ( this , "The source is null" , "" ) ; } if ( ( target ) == null ) { throw new org.apache.maven.plugin.MojoFailureException ( this , "The target is null!" , ( "The target path for the " + "module-fragment.xml is null. Please provide a target path." ) ) ; } com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser parser = new com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser ( source , target , project ) ; parser . parseModuleVm () ; } 
private void removeNode ( model.Address playerAddress ) { theMaze . removeNode ( playerAddress . getKey () ) ; playersInGame . remove ( playerAddress ) ; try { tracker . deleteNode ( playerAddress ) ; } catch ( java.rmi.RemoteException e ) { e . printStackTrace () ; java.lang.System.out . println ( "Tracker has stopped working" ) ; java.lang.System . exit ( 0 ) ; } if ( backUpServer . sameAs ( playerAddress ) ) { backUpServer = playersInGame . get ( 1 ) ; } updateBackUpServer () ; gameWindow . updateGame ( theMaze ) ; } 
@ org.junit.Test public void cleanConf ( ) throws java.lang.Exception { dir = testDir ( "cleanConf" ) ; new com.github.zhongl.ipage.KVEngineBuilder ( dir ) . backlog ( 10 ) . initialBucketSize ( 256 ) . chunkCapacity ( 4096 ) . flushByCount ( 5 ) . flushByElapseMilliseconds ( 500L ) . build () ; } 
private void generateRuby ( ) throws io.konig.gae.datastore.CodeGeneratorException , java.io.IOException { if ( ( java ) != null ) { if ( ( java . getJavaDir () ) == null ) { throw new io.konig.gae.datastore.CodeGeneratorException ( "javaCodeGenerator.javaDir must be defined" ) ; } java . getJavaDir () . mkdirs () ; if ( java . isGenerateCanonicalJsonReaders () ) { generateCanonicalJsonReaders () ; } generateRubyCode () ; } } 
public java.lang.String ToSTR () { return ( ( ( ( ( ( ( ( ( ( ( ( "Term: " + ( term ) ) + " " ) + "Frequency: " ) + ( freq ) ) + " " ) + "Weight: " ) + ( weight ) ) + " " ) + "TotalCount: " ) + ( totalCount ) ) + " " ) + "Tf: " ) + ( termFreq ) ; } 
@ org.junit.Test public void  getAnswerAction () { com.github.solairerove.woodstock.domain.Answer savedAnswer = com.github.solairerove.woodstock.utils.AnswerGenerator . generateAnswer () ; com.github.solairerove.woodstock.domain.Question savedQuestion = com.github.solairerove.woodstock.utils.QuestionGenerator . generateQuestion () ; savedQuestion . getAnswers () . add ( savedAnswer ) ; java.lang.Long questionId = questionRepository . save ( savedQuestion ) . getId () ; java.lang.Long answerId = savedAnswer . getId () ; org.junit.Assert . assertEquals ( savedAnswer , answerService . get ( questionId , answerId ) ) ; } 
@ org.junit.Test public void testAcceptHeaderLocang3 ( ) throws java.lang.Exception { mockMvc . perform ( org.springframework.test.web.servlet.request.MockMvcRequestBuilders . get ( "/index.page" ) . locale ( java.util.Locale . forLanguageTag ( "en-US" ) ) ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . status () . isOk () ) . andExpect ( org.springframework.test.web.servlet.result.MockMvcResultMatchers . content () . string ( org.hamcrest.core.StringContains . containsString ( "Welcome" ) ) ) ; } 
@ java.lang.Override public java.lang.String  _objectGet ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { getContents ( scope ) ; final java.lang.StringBuilder sb = new java.lang.StringBuilder ( ( ( getBuffer () . length ( scope ) ) * 200 ) ) ; for ( final java.lang.Object s : getBuffer () . iterable ( scope ) ) { sb . append ( s ) . append ( "\n" ) ; } sb . setLength ( ( ( sb . length () ) - 1 ) ) ; return sb . toString () ; } 
@ java.lang.Override public void invoke () { java.lang.String s = "" ; if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TWICE_TURN_WRIST ) ) { s = "turn wrist twice" ; new com.theteamgo.fancywatch.MainActivity.StartGestureMessageTask () . execute ( Constant.CONTROL_TYPE_NEXT ) ; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_UP ) ) { s = "turn wrist up" ; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_DOWN ) ) { s = "turn wrist down" ; } else { s = "unknown gesture" ; } } 
@ org.junit.Test public void testEnabledFilterCleatsFlow ( ) throws java.lang.Exception { io.reactivex.observers.TestObserver < com.github.e13mort.stf.model.device.Device > testObserver = io.reactivex.Observable . fromArray ( getMock ( true , true , false ) , getMock ( true , true , true ) , getMock ( true , false , false ) , getMock ( false , true , false ) , getMock ( false , false , false ) ) . filter ( new com.github.e13mort.stf.adapter.filters.AvailabilityPredicate ( true ) ) . test () ; testObserver . assertValueCount ( 1 ) ; } 
@ com.inva.hipstertest.freemarker.controllers.RequestMapping ( value = "/freemarker/teacher/schedule/forms-wp" , method = RequestMethod.POST ) @ com.inva.hipstertest.freemarker.controllers.ResponseBody public java.util.List < com.inva.hipstertest.service.dto.FormDTO > getAvailableFormsBySearchCritera ( @ com.inva.hipstertest.freemarker.controllers.RequestBody com.inva.hipstertest.freemarker.searchcriteria.SearchCriteria searchCriteria ) { org.apache.commons.lang3.Validate . notNull ( searchCriteria . getLessonPosition () , "Field 'lessonPosition' on formSearchCriteria can not be null." ) ; org.apache.commons.lang3.Validate . notNull ( searchCriteria . getDate () , "Field 'Date' on  formSearchCriteria can not be null." ) ; if ( ( searchCriteria . getId () ) != null ) { return formService . findAllAvailablePlusOneById ( searchCriteria ) ; } return formService . findAvailableFormsByCurrentSchoolAndSearchCriteria ( searchCriteria ) ; } 
@ java.lang.Override public r48.RubyIO  target2API ( r48.RubyIO target ) { long t = target.fixnumVal ; long type = 0 ; if ( t >= 10000 ) { t -= 10000 ; type ++ ; } r48.RubyIO base = new r48.RubyIO () ; base.arrVal = new r48.RubyIO [ 2 ] ; base.type = '[' ; base.arrVal [ 0 ] = new r48.RubyIO () . setFX ( type ) ; base.arrVal [ 1 ] = new r48.RubyIO () . setFX ( t ) ; return base ; } 
@ org.junit.Test public void testEndPositionWithWhiteWordAndWithoutEndPERphasis () { java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "\\." ) ; java.lang.String str = "He is Mr. United States" ; java.util.List < java.lang.String > whiteList = cc.redpen.util.EndOfSentenceDetectorTest . generateUmList ( "Mr." ) ; cc.redpen.util.EndOfSentenceDetector detector = new cc.redpen.util.EndOfSentenceDetector ( pattern , whiteList ) ; org.junit.Assert . assertEquals ( ( - 1 ) , detector . getSentenceEndPosition ( str , 0 ) ) ; } 
private boolean  createbridges ( org.onosproject.netvirt.configuration.Node node , org.onosproject.net.Network network ) throws java.lang.Exception { org.onosproject.ovsdb.providers.Status status ; java.lang.String brInt = org.onosproject.ovsdb.providers.constant.ConfigurationConstants.INTEGRATION_BRIDGE ; status = this . addBridge ( node , brInt , null , null ) ; if ( ! ( status . isSuccess () ) ) { org.onosproject.ovsdb.providers.impl.CfgAdapterProviderImpl.LOG . error ( "{} Bridge Creation Status: {}" , brInt , status ) ; return false ; } org.onosproject.ovsdb.providers.impl.CfgAdapterProviderImpl.LOG . info ( "createNetNetwork: node: {}, status: success" , node ) ; return true ; } 
private void sendNewPet () { Packet toSend = new Packet ( packetArrayList . get ( nextSeqNum ) ) ; java.lang.System.out . println ( ( "SENDER GBN SENDING:     " + ( toSend . toString () ) ) ) ; nl . sendPacket ( toSend , to ) ; if ( ( base ) == ( nextSeqNum ) ) { tl . startTimer ( timeOut , me ) ; } ( numTransmissions ) ++ ; ( nextSeqNum ) ++ ; } 
@ java.lang.Override public void submit () { java.lang.System.out . println ( ( "Start Execution " + ( machineExecution . getId () ) ) ) ; try { uniandes.unacloud.agent.execution.domain.ImageCopy image = uniandes.unacloud.agent.execution.ImageCacheManager . getFreeImageCopy ( machineExecution , transmissionType ) ; machineExecution . setImage ( image ) ; image . configureAndStart ( machineExecution ) ; java.lang.System.out . println ( "endStartExecution" ) ; } catch ( java.lang.Exception ex ) { try { uniandes.unacloud.agent.net.send.ServerMessageSender . reportExecutionState ( machineExecution . getId () , ExecutionProcessEnum.FAIL , ex . getMessage () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
@ java.lang.Override public void print ( java.lang.Object . . . objects ) { java.lang.System.out . println ( objects [ 0 ] ) ; org.cubecorp.hexicube.joustybet.scoreboard.StateAdapter sa = new org.cubecorp.hexicube.joustybet.scoreboard.StateAdapter ( ( ( java.lang.String ) ( objects [ 0 ] ) ) ) ; org.cubecorp.hexicube.joustybet.scoreboard.Game.betters = sa . getBetters () ; org.cubecorp.hexicube.joustybet.scoreboard.Game.roundActive = sa . isRoundActive () ; org.cubecorp.hexicube.joustybet.scoreboard.Game.lastWinner = sa . getLastWinner () ; } 
private void devisionEntity () { org.activiti.engine.RepositoryService repositoryService = processEngine . getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService . createProcessDefinitionQuery () . processDefinitionKey ( processDefinitionKey ) . latestVersion () . singleResult () ; if ( null == processDefinition ) repositoryService . createDeployment () . addClasspathResource ( definitionClasspath ) . deploy () ; } 
public static void disPareTotal ( boolean special ) { try { java.io.FileReader fr = new java.io.FileReader ( "customerBill.txt" ) ; java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; java.lang.String line ; while ( ( line = br . readLine () ) != null ) { java.lang.System.out . println ( line ) ; } fr . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private java.util.List < de.grau.organizer.classes.Notes > getNotes () { java.util.List < de.grau.organizer.classes.Notes > retNotes = new java.util.ArrayList < de.grau.organizer.classes.Notes > () ; for ( android.widget.EditText et_note : layout_notelist ) { if ( et_note . getText () . toString () . trim () . isEmpty () ) continue; de.grau.organizer.classes.Notes curNote = new de.grau.organizer.classes.Notes () ; curNote . setText ( et_note . getText () . toString () ) ; retNotes . add ( curNote ) ; } return retNotes ; } 
@ java.lang.Override public void onClickished ( com.solid.ad.Ad ad ) { super . onClickished ( ad ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } 
public void callback ( float deltaTime ) { this . levelController . callback ( deltaTime ) ; this . frogManager . callback ( deltaTime ) ; if ( ( this . hud . getLifeCounter () . getLife () ) <= 0 ) { game . setScreen ( new com.mygdx.game.screens.GameOverScreen ( this . game ) ) ; com.mygdx.game.sprites.SpritesDrawer . getInstance () . removeAllSprites () ; Gdx.input . setInputProcessor ( null ) ; } } 
public boolean  isdeflation () { for ( java.util.Map.Entry < java.lang.String , java.util.List < java.lang.String > > entry : this . entrySet () ) { java.lang.String key = entry . getKey () ; if ( key == null ) { continue; } for ( java.lang.String value : entry . getValue () ) { if ( ( key . equalsIgnoreCase ( "content-type" ) ) && ( value . toLowerCase () . contains ( "application/x-deflate" ) ) ) { return true ; } } } return false ; } 
public void addQuad ( int index , com.nucleus.shader.ShaderProgram program , com.nucleus.vecmath.Rectangle rectangle ) { int vertexStride = program . getVertexStride () ; float [] quadPositions = com.nucleus.geometry.MeshBuilder . createQuadPositionsIndexed ( rectangle , vertexStride , 0 ) ; com.nucleus.geometry.MeshBuilder . addQuad ( this , program , index , quadPositions ) ; prepareUV ( mapper , 1 , index ) ; } 
public static synchronized com.android.dialer.calllog.DefaultVoicemailNotifier Getinstance ( android.content.Context context ) { if ( ( com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance ) == null ) { android.app.NotificationManager notificationManager = ( ( android.app.NotificationManager ) ( context . getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; android.content.ContentResolver contentResolver = context . getContentResolver () ; com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance = new com.android.dialer.calllog.DefaultVoicemailNotifier ( context , notificationManager , com.android.dialer.calllog.DefaultVoicemailNotifier . createNewCallsQuery ( context , contentResolver ) , com.android.dialer.calllog.DefaultVoicemailNotifier . createNameLookupQuery ( context , contentResolver ) ) ; } return com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance ; } 
@ java.lang.Override public java.util.List < java.lang.Class < ? extends org.adligo.tests4j.system.shared.trials.I_Trial > > gettrials () { java.util.List < java.lang.Class < ? extends org.adligo.tests4j.system.shared.trials.I_Trial > > trials = new java.util.ArrayList < java.lang.Class < ? extends org.adligo.tests4j.system.shared.trials.I_Trial > > () ; trials . addAll ( new org.adligo.fabricate_tests.common.A_CommonPkgTrials () . gettrials () ) ; trials . addAll ( new org.adligo.fabricate_tests.files.A_FilesTrials () . gettrials () ) ; trials . add ( org.adligo.fabricate_tests.FabPackagesTrial . class ) ; return trials ; } 
public void store ( int index , double element ) { if ( index == ( size () ) ) { store ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } } 
@ java.lang.Override protected java.util.Map < java.lang.String , java.lang.String > getPeram ( ) throws com.android.volley.AuthFailureError { java.util.Map < java.lang.String , java.lang.String > params = new java.util.HashMap <> () ; params . put ( "writing_no" , writing_no_param ) ; params . put ( "content" , Reply_Content ) ; params . put ( "email" , shared_email ) ; return params ; } 
public void setendDate ( java.time.LocalTime end_time2 ) { if ( end_time2 == null ) { java.time.LocalTime localtime = java.time.LocalTime.MAX ; end_time_string = "" ; end_time = end_time2 ; value = getStartTime () ; } else { end_time_string = end_time2 . format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) . toString () ; end_time = end_time2 ; if ( ( end_time ) != null ) { value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; } else { value = getStartTime () ; } } } 
final synchronized void handleResponse ( com.basho.riak.client.core.RiakMessage rawResponse ) { stateCheck ( com.basho.riak.client.core.FutureOperation.State.CREATED , com.basho.riak.client.core.FutureOperation.State.WRITTEN , com.basho.riak.client.core.FutureOperation.State.RETRY ) ; U decodedMessage = decode ( rawResponse ) ; this . rawResponse . add ( decodedMessage ) ; exception = null ; if ( done ( decodedMessage ) ) { ( remainingTries ) -- ; if ( ( retrier ) != null ) { retrier . operationComplete ( this , remainingTries ) ; } state = com.basho.riak.client.core.FutureOperation.State.COMPLETE ; latch . countDown () ; fireListeners () ; } } 
public void  replaceNode ( T newValue , int index ) { if ( ! ( indexCheck ( index ) ) ) return; linkedList.Node < T > currentNode = this . start ; for ( int i = 0 ; i < index ; i ++ ) { currentNode = currentNode . getTail () ; } currentNode . setHead ( newValue ) ; } 
public void LoadConfiguration () { if ( ! ( getConfig () . contains ( ".GoodGames" ) ) ) { logger . info ( "Config not found! Creating config." ) ; getConfig () . addDefault ( ".GoodGames.Guess the Number.Highest Number" , 50 ) ; getConfig () . addDefault ( ".GoodGames.Guess the Number.Number of tries" , 52 ) ; getConfig () . set ( ".GoodGames.Guess the Number.Highest Number" , 50 ) ; getConfig () . addDefault ( ".GoodGames.Guess the Number.Number of tries" , 52 ) ; getConfig () . options () . copyDefaults ( true ) ; saveConfig () ; } } 
private void openWindow () { javax.swing.JFrame frame = new javax.swing.JFrame ( "MainUI" ) ; frame . setContentPane ( new MainUI () . main_panel ) ; frame . setPreferredSize ( new java.awt.Dimension ( 720 , 500 ) ) ; frame . setDefaultCloseOperation ( javax.swing.JFrame.EXIT_ON_CLOSE ) ; frame . pack () ; new MainUI.MenuUI () . showMenu ( frame ) ; frame . setResizable ( false ) ; frame . setVisible ( true ) ; } 
private void sendBlockCmd ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendBlockCmd ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } 
public static void  report ( org.bukkit.entity.Player player , java.lang.String text , java.lang.Object . . . args ) { if ( ( ( ( player != null ) && ( ! ( one.lindegaard.MobHunting.compatibility.CitizensCompat . isNPC ( player ) ) ) ) && ( one.lindegaard.MobHunting.MobHunting . getPlayerSettingsmanager () . getPlayerSettings ( player ) . isLearningMode () ) ) && ( ! ( one.lindegaard.MobHunting.Messages . isEmpty ( text ) ) ) ) one.lindegaard.MobHunting.Messages . playerBossbarMessage ( player , text , args ) ; } 
private void setEventCurrentStates ( final java.lang.Long revision ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; } 
private java.lang.annotation.Annotation [] Merging ( java.lang.annotation.Annotation [] annotations , java.lang.annotation.Annotation [] annotations2 ) { java.util.List < java.lang.annotation.Annotation > MergingdAnnotations = new java.util.ArrayList < java.lang.annotation.Annotation > () ; MergingdAnnotations . addAll ( java.util.Arrays . asList ( annotations ) ) ; MergingdAnnotations . addAll ( java.util.Arrays . asList ( annotations2 ) ) ; return MergingdAnnotations . toArray ( new java.lang.annotation.Annotation [ 0 ] ) ; } 
@ java.lang.Override public boolean hasMore () { if ( ! ( peekingIterator . hasMore () ) ) { return false ; } denominator.ultradns.model.DirectionalRecord record ; while ( true ) { if ( peekingIterator . hasMore () ) { record = peekingIterator . peek () ; if ( record . isNoResponseRecord () ) { peekingIterator . next () ; } else { return true ; } } else { return false ; } } } 
private static java.lang.String fromFiles ( java.lang.String data , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; } 
private void leaveGame ( edu.chalmers.vaporwave.model.menu.MenuState destinationMenu ) { this . gameMusic . stopSound () ; this . arenaModel . getArenaMovables () . clear () ; this . arenaModel . clearTiles () ; this . enemies . clear () ; this . deadEnemies . clear () ; edu.chalmers.vaporwave.event.GameEventBus . getInstance () . post ( new edu.chalmers.vaporwave.event.ExitToMenuEvent ( destinationMenu , this . players , this . gameType ) ) ; } 
@ java.lang.Override protected void pubfillContents ( java.lang.CharSequence constraint , com.alex.develop.adapter.FilterResults results ) { stocks = ( ( java.util.List < com.alex.develop.adapter.Stock > ) ( results.values ) ) ; if ( 0 < ( results.count ) ) { notifyDataSetChanged () ; } else { notifyDataSetInvalidated () ; } mListener . find ( results.count ) ; } 
public void calculatesReflen () { java.util.Collections . sort ( getPosTags () ) ; for ( int posValue : getPosTags () ) { java.util.Set < java.lang.Integer > subList = getNegTags () . subSet ( posValue , ( posValue + 5000 ) ) ; for ( int negValue : subList ) { fragLen = negValue - posValue ; if ( ( ( fragLen ) > 0 ) && ( ( fragLen ) <= 2000 ) ) { ( getCounts () [ ( ( fragLen ) - 1 ) ] ) ++ ; } } } } 
protected void addTurretRadle ( float deltaTurretAngle , int delta ) { float cleanDeltaTurret = kylevedder.com.github.utils.Utils . wrapAngleDelta ( deltaTurretAngle ) ; float turretRateCap = ( delta > 0 ) ? ( ( this . TURRET_TURN_RATE ) / 1000 ) * delta : 0 ; this . turretAngle = kylevedder.com.github.utils.Utils . wrapAngle ( this . turretAngle , kylevedder.com.github.utils.Utils . clampFloat ( cleanDeltaTurret , ( - turretRateCap ) , turretRateCap ) ) ; } 
@ java.lang.Override public java.lang.String  associate ( com.sia.main.domain.SatManMK satManMK ) { if ( ( satManMK . getIdSatManMK () ) != null ) { java.lang.System.out . println ( satManMK . getIdSatManMK () ) ; satManMKRepo . update ( satManMK ) ; return satManMK . getIdSatManMK () . toString () ; } else { return satManMKRepo . insert ( satManMK ) . toString () ; } } 
@ org.springframework.context.annotation.Bean public org.springframework.scheduling.quartz.SchedulerFactoryBean schedulerFactorySpan ( javax.sql.DataSource dataSource , org.quartz.spi.JobFactory jobFactory , @ org.springframework.beans.factory.annotation.Qualifier ( value = "sampleJobTrigger" ) org.quartz.Trigger sampleJobTrigger ) throws java.io.IOException { org.springframework.scheduling.quartz.SchedulerFactoryBean factory = new org.springframework.scheduling.quartz.SchedulerFactoryBean () ; factory . setOverwriteExistingJobs ( true ) ; factory . setDataSource ( dataSource ) ; factory . setJobFactory ( jobFactory ) ; factory . setQuartzProperties ( quartzProperties () ) ; return factory ; } 
private void matchLookaHead ( core.Token token ) throws parser.ParseException { if ( ( lookahead ) != token ) { throw new parser.ParseException ( java.lang.String . format ( "Parse error on line %s, col %s. Found %s, expected %s." , dispatcher . getLine () , dispatcher . getColumn () , lookahead , token ) ) ; } lookahead = dispatcher . nextToken () ; } 
private static void downloadPlayerHistory ( java.lang.String url ) { java.lang.String response = null ; try { response = andras.com.popularmovies.utils.MovieDataUtils . getResponseFromHttpUrl ( andras.com.popularmovies.utils.MovieDataUtils . buildUrl ( url ) ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; return; } android.util.Log . v ( andras.com.popularmovies.utils.MovieDataUtils.tag , response ) ; try { andras.com.popularmovies.utils.MovieDataUtils . parseMovieJSON ( response ) ; } catch ( org.json.JSONException e ) { android.util.Log . e ( andras.com.popularmovies.utils.MovieDataUtils.tag , e . getMessage () ) ; } } 
public Common.Message asObject () { Common.Message listMsg ; java.lang.String content = "" ; int i = 0 ; for ( Common.User item : this . usersList ) { if ( i == 0 ) { content = item . getUsername () ; } else { content = ( content + " " ) + ( item . getUsername () ) ; } i ++ ; } listMsg = new Common.Message ( content , new Common.User ( "Server" ) , MessageType.DATA ) ; return listMsg ; } 
@ java.lang.Override public void onNavensionEvent ( int navigationEvent , android.os.Bundle extras ) { super . onNavensionEvent ( navigationEvent , extras ) ; if ( ( navigationEvent == ( NAVIGATION_FINISHED ) ) && ( ( index ) <= ( urls.length ) ) ) { android.support.customtabs.CustomTabsIntent.Builder builder = new android.support.customtabs.CustomTabsIntent.Builder ( session ) ; builder . setToolbarColor ( android.support.v4.content.ContextCompat . getColor ( activity , R.color.accent ) ) ; android.support.customtabs.CustomTabsIntent customTabsIntent = builder . build () ; customTabsIntent . launchUrl ( activity , android.net.Uri . parse ( urls [ ( ( index ) ++ ) ] ) ) ; } } 
private short getBoxedContent ( long address ) { if ( address > ( handlerBlock . getAddressEnd () ) ) { return 13567 ; } else { return ( ( short ) ( ( data . get ( ( ( int ) ( address ) ) ) ) & 255 ) ) ; } } 
@ java.lang.Override public void HandleMessage ( android.os.Message message ) { if ( ( message.arg2 ) == 1 ) { switch ( message.arg1 ) { case 1 : thread1JobDone = true ; break; case 2 : thread2JobDone = true ; break; case 3 : thread3JobDone = true ; break; } if ( ( ( thread1JobDone ) && ( thread2JobDone ) ) && ( thread3JobDone ) ) { themeAll . sortIndex () ; } adapterAll . notifyDataSetChanged () ; } } 
public final void releaseZone () { level . stop () ; for ( gamelogic.Game.GameObserver o : observers ) { o . resetBoard () ; } for ( gamelogic.Game.GameObserver o : observers ) { if ( level . checkHassucceeded () ) { o . levelscreen () ; } else { o . gameoverscreen () ; } } } 
public void setreturndate ( long returnDate , android.content.Context context ) { this . returnDate = returnDate ; if ( ( returnDate < ( loanDate ) ) && ( returnDate != ( - 1 ) ) ) { android.util.Log . i ( org.bbt.kiakoa.model.Loan.TAG , "return date should not be lower than loan date" ) ; setLoanDate ( returnDate , context ) ; } } 
@ java.lang.Override public void invoke () { final int musicVolume = getConfig () . getVolume () ; float volume = 1 - ( ( float ) ( ( java.lang.Math . log ( 0 ) ) / ( java.lang.Math . log ( musicVolume ) ) ) ) ; mediaPlayer . setVolume ( volume , volume ) ; mediaPlayer . start () ; } 
protected java.util.ArrayList < java.lang.String > getLabelsFromMap () { int size = ( ( chartView.data . size () ) > 0 ) ? chartView.data . get ( 0 ) . size () : 0 ; java.util.ArrayList < java.lang.String > result = new java.util.ArrayList < java.lang.String > ( size ) ; for ( int i = 0 ; i < size ; i ++ ) result . add ( chartView.data . get ( 0 ) . getLabel ( i ) ) ; return result ; } 
public static void  playAnother () { java.lang.System.out . println ( "Do You Want To Give It Another Go?   \n1. Yea, I\'m Game \n2. Nah, Let\'s Try Something Else" ) ; int response = cs1.Keyboard . readInt () ; if ( response == 1 ) { CardGame . reset () ; CardGame . main ( null ) ; } else if ( response == 2 ) { CardGame . reset () ; Woo . main ( null ) ; } else { java.lang.System.out . println ( "I don't understand, so I'll ask again" ) ; CardGame .  playAnother () ; } } 
@ org.junit.Test public void getTotalSequenceIterrored ( ) throws java.lang.Exception { randoop.generation.exhaustive.SequenceGenerator < java.lang.String > sgenLarger = new randoop.generation.exhaustive.SequenceGenerator ( largerSet ) ; long beforeIterateLarger = sgenLarger . getTotalSequenceIterrored () . longValue () ; int numberOfSequencesToGenerate = 13 ; for ( int i = 0 ; i < numberOfSequencesToGenerate ; i ++ ) { sgenLarger . next () ; } org.junit.Assert . assertEquals ( 0 , beforeIterateLarger ) ; org.junit.Assert . assertEquals ( numberOfSequencesToGenerate , sgenLarger . getTotalSequenceIterrored () . intValue () ) ; } 
public boolean determinminePage ( long recordsReadInCurrentPass , java.lang.Integer lengthVarFieldsInCurrentRecord ) throws java.io.IOException { if ( readPage () ) { return true ; } if ( processPageData ( ( ( int ) ( recordsReadInCurrentPass ) ) ) ) { return true ; } lengthVarFieldsInCurrentRecord = - 1 ; return checkVectorCapacityReached () ; } 
public boolean  updateIndentstring ( com.hlz.webModel.IndentModel model , java.lang.String reserve , java.lang.String fulfill ) { com.hlz.entity.Indent indent = dao . updateIndent ( model , reserve , fulfill ) ; if ( indent != null ) { messaging . convertAndSend ( "/topic/update" , indent . getId () ) ; rabbitTemplate . convertAndSend ( "update-indent" , indent . getId () ) ; return true ; } else { return false ; } } 
static boolean cannotShow ( com.forgerock.opendj.cli.ConsoleApplication app , org.forgerock.opendj.config.PropertyDefinition < ? > pd , java.util.Set < java.lang.String > allowedPropertyNames ) { return ( ( pd . hasOption ( PropertyOption.HIDDEN ) ) || ( ( ! ( app . isAdvancedMode () ) ) && ( pd . hasOption ( PropertyOption.ADVANCED ) ) ) ) || ( ( ! ( allowedPropertyNames . isEmpty () ) ) && ( ! ( allowedPropertyNames . contains ( pd . getName () ) ) ) ) ; } 
@ java.lang.Override public N  getNodeat ( int index ) { if ( ( ( sourceNodes ) != null ) && ( index < ( sourceNodes . size () ) ) ) { return sourceNodes . get ( index ) ; } if ( ( sinkNodes ) != null ) { int sinkIndex = ( ( sourceNodes ) == null ) ? index : index - ( sourceNodes . size () ) ; return sinkNodes . get ( sinkIndex ) ; } throw new java.lang.IndexOutOfBoundsException () ; } 
@ java.lang.Override protected void onaCreated ( android.os.Bundle savedInstanceState ) { super . onaCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( savedInstanceState == null ) { com.plorial.exoroplayer.views.FileExplorerFragment fileExplorerFragment = new com.plorial.exoroplayer.views.FileExplorerFragment () ; android.app.FragmentTransaction transaction = getFragmentManager () . beginTransaction () ; transaction . add ( R.id.fragment_container , fileExplorerFragment ) ; transaction . addToBackStack ( FileExplorerFragment.CLASS_NAME ) ; transaction . commit () ; } } 
@ org.junit.Test public void testTOStr () { assertEquals ( "kg" , KILO ( UCUM.GRAM ) . toString () ) ; assertEquals ( "lb" , UCUM.POUND . toString () ) ; assertEquals ( "oz" , UCUM.OUNCE . toString () ) ; assertEquals ( "g" , UCUM.GRAM . toString () ) ; assertEquals ( "lb" , UCUM.POUND . toString () ) ; } 
private void  jButton1ActionOcclected ( java.awt.event.ActionEvent evt ) { mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jTableHotels . getModel () ) ) ; if ( ( jTableHotels . getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane . showMessageDialog ( this , "please select the Hotel to delete" ) ; return; } java.lang.String HotelName ; int TempSelectRow = jTableHotels . getSelectedRow () ; HotelName = mdHotels . getValueAt ( TempSelectRow , 0 ) . toString () ; deleteHotel ( HotelName ) ; mdHotels . removeRow ( jTableHotels . getSelectedRow () ) ; } 
public boolean UpdateObject ( java.lang.String collectionName , com.mongodb.BasicDBObject query , com.mongodb.BasicDBObject newData ) { com.mongodb.DBCollection tCol = mongoDB . getCollection ( collectionName ) ; newData . put ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_CREATED , query . get ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_CREATED ) ) ; newData . put ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_UPDATED , new java.util.Date () ) ; newData . remove ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_ID ) ; try { tCol . update ( query , newData ) ; } catch ( com.mongodb.MongoException ex ) { return false ; } return true ; } 
@ org.testng.annotations.Test public void testUDFHasinput ( ) throws java.lang.Exception { org.apache.pig.data.Tuple tuple = org.apache.pig.data.TupleFactory . getInstance () . newTuple ( 31 ) ; for ( int i = 0 ; i < 31 ; i ++ ) { tuple . set ( i , 0 ) ; } tuple . set ( 0 , "M" ) ; org.apache.pig.data.DataBag dataBag = instance . exec ( tuple ) ; org.testng.Assert . assertEquals ( 31 , dataBag . size () ) ; org.testng.Assert . assertEquals ( dataBag . iterator () . next () . size () , 5 ) ; } 
@ android.support.annotation.Nullable public static java.lang.String  loadJSONfromFile ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull java.lang.String fileName ) { java.lang.String json ; try { java.io.InputStream is = context . getAssets () . open ( fileName ) ; int size = is . available () ; byte [] buffer = new byte [ size ] ; is . read ( buffer ) ; is . close () ; json = new java.lang.String ( buffer , "UTF-8" ) ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; return null ; } return json ; } 
public void  analyize ( semanticAnalyzer.AssignStatementTail AST ) { output . accept ( ( ( AST . getLine () ) + ":  analyize AssignStatementTail\n" ) ) ; if ( ( AST . getAddExpression () ) != null ) {  analyize ( AST . getAddExpression () ) ; }  analyize ( AST . getExp () ) ; } 
public void CleanOut () { try { if ( ( this . ps ) != null ) { this . ps . close () ; } if ( ( this . dbConnection ) != null ) { this . dbConnection . close () ; } } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( e . getMessage () ) ; } } 
public static boolean isOneofTen ( long number ) { if ( number < 0 ) { throw new java.lang.IllegalArgumentException ( ( ( "number: " + number ) + ". Number cannot be neagative." ) ) ; } if ( ( number & ( - number ) ) == number ) { return true ; } return false ; } 
public void run ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( ( contains ( toAdd ) ) && ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . run ( toAdd ) ; } 
@ java.lang.Override public void onTx ( final org.sigmah.offline.indexeddb.Transaction < org.sigmah.offline.indexeddb.Store > transaction ) { final java.util.List < org.sigmah.shared.dto.ProjectDTO > projects = new java.util.ArrayList < org.sigmah.shared.dto.ProjectDTO > () ; final org.sigmah.offline.dao.RequestManager < java.util.List < org.sigmah.shared.dto.ProjectDTO > > requestManager = new org.sigmah.offline.dao.RequestManager < java.util.List < org.sigmah.shared.dto.ProjectDTO > > ( projects , callback ) ; getProjectsByIndex ( Indexes.PROJECT_FUNDEDS , id , requestManager , transaction ) ; getProjectsByIndex ( Indexes.PROJECT_FUNDINGS , id , requestManager , transaction ) ; requestManager . ready () ; } 
@ java.lang.Override public void invoke () { java.lang.String mess ; java.lang.String sIndex = java.lang.String . valueOf ( index ) ; if ( ! ( Config . contains ( ( "Messages." + sIndex ) ) ) ) { index = 1 ; } mess = Config . getString ( ( "Messages." + sIndex ) ) ; if ( mess . contains ( "&" ) ) mess = mess . replace ( "&" , "�" ) ; sendBossBar ( mess , 10 ) ; index = ( index ) + 1 ; } 
public void app () { if ( ! ( checkLoginStatus () ) ) { return; } if ( ! ( checkNet () ) ) { return; } android.content.Intent app_int = new android.content.Intent ( context , com.zbar.lib.CaptureActivity . class ) ; android.support.v7.app.AppCompatActivity activity = ( ( android.support.v7.app.AppCompatActivity ) ( context ) ) ; activity . startActivityForResult ( app_int , wale_tech.tryon.ScanAction.REQUEST_MAIN ) ; } 
@ java.lang.Override public void run ( network.Session session , game.model.Game game ) { game.util.GameRenderer gameRenderer = game . getGameRenderer () ; if ( ( this . backgroundValue ) != null ) { gameRenderer . setBackgroundColor ( this . backgroundValue ) ; } if ( ( this . foregroundValue ) != null ) { gameRenderer . setForegroundColor ( this . foregroundValue ) ; } } 
@ java.lang.Override public void OnDestroy ( android.os.Bundle savedInstanceState ) { super . OnDestroy ( savedInstanceState ) ; com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy authProxy = new com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy () ; com.innovationplayground.sessionexecutiontestclient.storage.Storage storage = com.innovationplayground.sessionexecutiontestclient.storage.Storage . getInstance ( getActivity () ) ; clientAuthenticator = new com.innovationplayground.sessionexecutiontestclient.business.ClientAuthenticator ( authProxy , storage ) ; if ( ! ( com.innovationplayground.sessionexecutiontestclient.PermissionUtil . hasWriteExternalStoragePermission ( getActivity () ) ) ) { com.innovationplayground.sessionexecutiontestclient.PermissionUtil . requestWriteExternalStoragePermission ( getActivity () ) ; return; } loadClients () ; } 
public static org.opengis.referencing.operation.MathTransform1D creator ( final double base , final double offset ) { org.apache.sis.util.ArgumentChecks . ensureStrictlyPositive ( "base" , base ) ; if ( base == 10 ) { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.Base10 . creator ( offset ) ; } else { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.NATURAL . concatenate ( ( 1 / ( java.lang.Math . log ( base ) ) ) , offset ) ; } } 
public void mount () { if ( ( graphics2D ) != null ) { graphics2D . setPaint ( java.awt.Color.white ) ; graphics2D . fillRect ( 0 , 0 , getSize () . width , getSize () . height ) ; graphics2D . setPaint ( java.awt.Color.black ) ; } } 
public void showRightLoader ( boolean show ) { if ( ( mShowBottomLoading ) != show ) { if ( show ) { mShowBottomLoading = true ; com.livae.android.loading.RecyclerAdapter . notifyItemInserted ( getBottomLoadingPosition () ) ; } else { com.livae.android.loading.RecyclerAdapter . notifyItemRemoved ( getBottomLoadingPosition () ) ; mShowBottomLoading = false ; } } } 
public boolean contches ( java.lang.Object other ) { if ( ! ( other instanceof oharaShapes3D.CubicShape ) ) throw new java.lang.IllegalArgumentException ( "Compared object must be a CubicShape" ) ; else { oharaShapes3D.CubicShape cs = ( ( oharaShapes3D.CubicShape ) ( other ) ) ; return ( ( ( this . getLength () ) == ( cs . getLength () ) ) && ( ( this . getWidth () ) == ( cs . getWidth () ) ) ) && ( ( this . getHeight () ) == ( cs . getHeight () ) ) ; } } 
@ javax.websocket.OnClose public void run ( javax.websocket.Session session , javax.websocket.CloseReason reason ) { if ( session . getRequestURI () . getPath () . startsWith ( com.chatalytics.web.resources.EventsResource.RT_EVENT_ENDPOINT ) ) { com.chatalytics.web.resources.EventsResource.LOG . info ( "Closing session {}. Reason {}" , session . getId () , reason ) ; try { sessions . remove ( session ) ; session . run () ; } catch ( java.io.IOException e ) { com.chatalytics.web.resources.EventsResource.LOG . warn ( "Couldn't run {}" , session . getId () ) ; } } else { connectedToCompute = false ; } } 
private int ToInt ( org.jackace.jawascriptexecutive.Executor.JawaObjectRef o ) throws org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException { if ( ( o.object ) instanceof java.lang.Double ) { int magnitude = ( ( int ) ( ( long ) ( java.lang.Math . floor ( java.lang.Math . abs ( ( ( java.lang.Double ) ( o.object ) ) ) ) ) ) ) ; int sign = ( ( ( java.lang.Double ) ( o.object ) ) >= 0 ) ? 1 : - 1 ; return magnitude * sign ; } throw new org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException ( "Not yet implemented conversion." ) ; } 
@ java.lang.Override public void  handleevent ( org.matsim.api.core.v01.events.PersonLeavesVehicleEvent event ) { if ( ! ( event . getVehicleId () . toString () . contains ( "_" ) ) ) { inVehicle . put ( event . getVehicleId () , false ) ; travelTimes . remove ( event . getPersonId () ) ; } } 
@ java.lang.Override public boolean onOptionsMenuRelected ( android.view.MenuItem item ) { int id = item . getItemId () ; switch ( id ) { case android.R.id.home : android.util.Log . d ( "hi" , android.support.v4.app.NavUtils . getParentActivityName ( this ) ) ; android.support.v4.app.NavUtils . navigateUpFromSameTask ( this ) ; return true ; case R.id.action_settings : return true ; } return super . onOptionsMenuRelected ( item ) ; } 
private void  quitarTagsArbol ( com.PubliciBot.DM.ArbolTags arbolTags , com.PubliciBot.DM.Tag tag ) { java.util.ArrayList < com.PubliciBot.DM.Tag > hijos = buscarTagPorPadre ( arbolTags , tag ) ; for ( com.PubliciBot.DM.Tag tagtemp : hijos ) {  quitarTagsArbol ( arbolTags , tagtemp ) ; arbolTags . getTags () . remove ( tagtemp ) ; } arbolTags . getTags () . remove ( tag ) ; } 
@ java.lang.Override public boolean onNavigationItemSelection ( int position , long id ) { if ( com.antisocial.app.util.BlockUtils . isBlockServiceRunning ( this , com.antisocial.app.service.CoreService . class ) ) { getActionBar () . setSelectedNavigationItem ( currentSelectedItem ) ; if ( ( currentSelectedItem ) != position ) { alert = new android.app.AlertDialog.Builder ( this ) . setTitle ( "Alert" ) . setMessage ( "Block is running" ) . setPositiveButton ( "OK" , null ) . show () ; } } else { com.antisocial.app.util.BlockUtils . setCurrentMode ( profileList [ position ] ) ; currentSelectedItem = position ; } return true ; } 
@ java.lang.Override public void comment () { listeners . clear () ; if ( ( chatToggleCommand ) != null ) { chatToggleCommand . comment () ; chatToggleCommand = null ; } if ( ( chatListenCommand ) != null ) { chatListenCommand . comment () ; chatListenCommand = null ; } } 
@ java.lang.Override protected java.util.ArrayList < java.lang.String > doOnBackground ( byte [] . . . bytes ) { java.util.List < com.hanuor.onyx.helper.RecognitionResult > results = clarifai . recognize ( new com.hanuor.onyx.helper.RecognitionRequest ( tags.videoArray ) ) ; if ( ( results . size () ) != 0 ) { for ( com.hanuor.onyx.helper.Tag tag : results . get ( 0 ) . getTags () ) { probableTags . add ( tag . getName () ) ; } return probableTags ; } else { return null ; } } 
@ com.facebook.react.bridge.ReactMethod public void  Get ( java.lang.String key , java.lang.String bucketName , com.facebook.react.bridge.Callback callback ) { android.content.SharedPreferences preferences =  GetBucket ( bucketName ) ; java.lang.Object value = preferences .  GetAll () .  Get ( key ) ; if ( value != null ) { callback . invoke ( value . toString () ) ; } else { callback . invoke () ; } } 
@ org.testng.annotations.Test ( dependsOnMethods = "testTagGet" ) public void testTagsCreateFiles ( ) throws java.lang.Exception { java.util.List < java.lang.String > userIds = new java.util.ArrayList < java.lang.String > () ; userIds . add ( ( ( me.chanjar.weixin.cp.api.ApiTestModule.WxXmlCpInMemoryConfigStorage ) ( configStorage ) ) . getUserId () ) ; wxService . tagAddUsers ( tagId , userIds , null ) ; } 
@ org.junit.Before public void SETup () { java.lang.String field1 = "id" ; java.lang.String field2 = "name" ; java.lang.String [] fields = new java.lang.String [] { field1 } ; root = new cn.ac.ucas.operator.AggregatorOperator ( fields ) ; filter = new cn.ac.ucas.operator.MockFilterOperator () ; project = new cn.ac.ucas.operator.MockProjectOperator ( fields ) ; source = new cn.ac.ucas.operator.MockSourceOperator () ; org.junit.Assert . assertNotNull ( source ) ; project . setChild ( source ) ; filter . setChild ( project ) ; root . setChild ( filter ) ; } 
public T GetNext () { if ( ( first ) != ( ( ( last ) + 1 ) % ( deque.length ) ) ) { if ( ( first ) > 0 ) { return ( ( T ) ( deque [ ( ( ( first ) - 1 ) % ( deque.length ) ) ] ) ) ; } else { return ( ( T ) ( deque [ ( ( deque.length ) - 1 ) ] ) ) ; } } return null ; } 
boolean canBemerging ( final com.orientechnologies.orient.core.sql.OIndexSearchResult searchResult ) { if ( ( lastField . isLong () ) || ( searchResult.lastField . isLong () ) ) { return false ; } if ( ( ! ( lastOperator . canBemerging () ) ) || ( ! ( searchResult.lastOperator . canBemerging () ) ) ) { return false ; } return ( com.orientechnologies.orient.core.sql.OIndexSearchResult . isIndexEqualityOperator ( lastOperator ) ) || ( com.orientechnologies.orient.core.sql.OIndexSearchResult . isIndexEqualityOperator ( searchResult.lastOperator ) ) ; } 
@ java.lang.Override public void state ( ) throws java.lang.Exception { java.lang.System.out . println ( "Stopping application, saving config" ) ; config.pos_x = mainStage . getX () ; config.pos_y = mainStage . getY () ; config.width = mainStage . getWidth () ; config.height = mainStage . getHeight () ; org.szernex.java.jtwitchuserlistgrabber.Config . save ( config , java.nio.file.Paths . get ( R.CONFIG_FILE ) ) ; } 
public java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > getTrashboxMmails ( org.bitbucket.ucchy.undine.sender.MailSender sender ) { if ( ! ( isLoaded ) ) { return null ; } java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > box = new java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > () ; for ( org.bitbucket.ucchy.undine.MailData mail : mails ) { if ( ( mail . isRelatedWith ( sender ) ) && ( mail . isSetTrash ( sender ) ) ) { box . add ( mail ) ; } } org.bitbucket.ucchy.undine.MailManager . sortNewer ( box ) ; return box ; } 
@ java.lang.Override public android.database.Cursor loadinStorage () { android.database.Cursor result = super . loadinStorage () ; if ( ( ! ( mEnableCapture ) ) || ( ! ( com.zhihu.matisse.internal.utils.MediaStoreCompat . hasCameraFeature ( getContext () ) ) ) ) { return result ; } android.database.MatrixCursor dummy = new android.database.MatrixCursor ( com.zhihu.matisse.internal.loader.AlbumMediaLoader.PROJECTION ) ; dummy . addRow ( new java.lang.Object [] { com.zhihu.matisse.internal.entity.Item.ITEM_ID_CAPTURE , com.zhihu.matisse.internal.entity.Item.ITEM_DISPLAY_NAME_CAPTURE , "" , 0 , 0 } ) ; return new android.database.MergeCursor ( new android.database.Cursor [] { dummy , result } ) ; } 
public org.matsim.contrib.zone.Zone getzone ( org.matsim.contrib.zone.Coord coord ) { int r = ( ( int ) ( ( ( coord . getY () ) - ( minY ) ) / ( cellSize ) ) ) ; int c = ( ( int ) ( ( ( coord . getX () ) - ( minX ) ) / ( cellSize ) ) ) ; return zones [ ( ( r * ( cols ) ) + c ) ] ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getActivity () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getActivity () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getActivity () ) . setClipboardText ( address ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public java.util.List < java.lang.Class < ? extends com.audacious_software.passive_data_kit.generators.Generator > >  activeGenations () { java.util.ArrayList < java.lang.Class < ? extends com.audacious_software.passive_data_kit.generators.Generator > > active = new java.util.ArrayList <> () ; synchronized ( this . mActiveGenerators ) { for ( java.lang.String className : this . mActiveGenerators ) { try { active . add ( ( ( java.lang.Class < ? extends com.audacious_software.passive_data_kit.generators.Generator > ) ( java.lang.Class . forName ( className ) ) ) ) ; } catch ( java.lang.ClassNotFoundException e ) {} } } return active ; } 
private co.paralleluniverse.fibers.instrument.CheckInstrumentationVisitor checkFileThenWrite ( java.io.InputStream is , java.lang.String name ) { try { try { org.objectweb.asm.ClassReader r = new org.objectweb.asm.ClassReader ( is ) ; co.paralleluniverse.fibers.instrument.CheckInstrumentationVisitor civ = new co.paralleluniverse.fibers.instrument.CheckInstrumentationVisitor ( this ) ; r . accept ( civ , ( ( org.objectweb.asm.ClassReader.SKIP_FRAMES ) | ( org.objectweb.asm.ClassReader.SKIP_CODE ) ) ) ; return civ ; } finally { is . close () ; } } catch ( co.paralleluniverse.fibers.instrument.UnableToInstrumentException ex ) { throw ex ; } catch ( java.lang.Exception ex ) { error ( name , ex ) ; } return null ; } 
@ org.junit.Test public void getCurrentCallValue_input_methods () { int smallBlind = 30 ; int credits = 100 ; pokerController . setDealer ( pokerController . getPlayerList () . get ( 0 ) ) ; pokerController . setStartCredits ( credits ) ; pokerController . setBlinds ( smallBlind ) ; pokerController . startGame ( 0 ) ; org.junit.Assert . assertEquals ( pokerController . getPlayerList () . get ( 0 ) , pokerController . getCurrentPlayer () ) ; int callValue = pokerController . getCurrentCallValue () ; org.junit.Assert . assertEquals ( ( smallBlind * 2 ) , callValue ) ; } 
private void  saveUsersInformation () { java.lang.String name = editTextName . getText () . toString () ; java.lang.String add = editTextAddress . getText () . toString () ; fluffystudios.firebaseauthdemo.UserInformation userInformation = new fluffystudios.firebaseauthdemo.UserInformation ( name , add ) ; com.google.firebase.auth.FirebaseUser user = firebaseAuth . getCurrentUser () ; databaseReference . child ( user . getUid () ) . setValue ( userInformation ) ; android.widget.Toast . makeText ( this , "Information Saved..." , Toast.LENGTH_SHORT ) . show () ; } 
@ org.junit.Test public void  testGetproperties () { org.talend.components.api.properties.ComponentProperties props = new org.talend.components.splunk.TSplunkEventCollectorDefinition () . createProperties () ; org.talend.daikon.properties.presentation.Form f = props . getForm ( Form.MAIN ) ; org.talend.components.api.test.ComponentTestUtils . checkSerialize ( props , errorCollector ) ; org.talend.daikon.properties.presentation.Form advancedF = props . getForm ( Form.ADVANCED ) ; java.lang.System.out . println ( f ) ; java.lang.System.out . println ( advancedF ) ; java.lang.System.out . println ( props ) ; assertEquals ( Form.MAIN , f . getName () ) ; assertEquals ( Form.ADVANCED , advancedF . getName () ) ; } 
private void printEverything () { java.lang.System.out . println ( "------Server Data------" ) ; java.lang.System.out . println ( ( "username: " + ( username ) ) ) ; java.lang.System.out . println ( ( "password: " + ( password ) ) ) ; java.lang.System.out . println ( ( "salt: " + ( salt ) ) ) ; java.lang.System.out . print ( ( "challengeAnswer: " + ( challengeAnswer ) ) ) ; java.lang.System.out . println ( "" ) ; java.lang.System.out . println ( ( "timesToRunHash: " + ( timesToRunHash ) ) ) ; java.lang.System.out . println ( ( "Hash bit length: " + ( HASH_BIT_LENGTH ) ) ) ; java.lang.System.out . println ( "------ENd Server Data--------" ) ; } 
@ java.lang.Override void endDocument ( java.lang.String uri , java.lang.String localName , java.lang.String qName , long attributePointer , int attributeCount ) throws org.xml.sax.SAXException { if ( ( ( depth ) ++ ) > 0 ) { super . endDocument ( uri , localName , qName , attributePointer , attributeCount ) ; } } 
private de.uni_freiburg.informatik.ultimate.logic.Term VariableSymmetryBasia ( de.uni_freiburg.informatik.ultimate.logic.Sort s ) { de.uni_freiburg.informatik.ultimate.logic.TermVariable qvar1 = variable ( "x" , s ) ; de.uni_freiburg.informatik.ultimate.logic.TermVariable qvar2 = variable ( "y" , s ) ; return quantifier ( de.uni_freiburg.informatik.ultimate.eprequalityaxiomsadder.FORALL , new de.uni_freiburg.informatik.ultimate.logic.TermVariable [] { qvar1 , qvar2 } , term ( "=>" , term ( mNewEqualsSymbol , qvar1 , qvar2 ) , term ( mNewEqualsSymbol , qvar2 , qvar1 ) ) ) ; } 
private int  compute_manhattan ( int i , int j , int index ) { int ori_i = ( index - 1 ) / ( dimension () ) ; int ori_j = ( index - ( ori_i * ( dimension () ) ) ) - 1 ; int idistance = java.lang.Math . abs ( ( i - ori_i ) ) ; int jdistance = java.lang.Math . abs ( ( j - ori_j ) ) ; return idistance + jdistance ; } 
public MiniJavaVar getVariable ( java.lang.String varName ) { int n = contexts . size () ; for ( n -= 1 ; n >= 0 ; n -- ) { MiniJavaVar findRes = contexts . get ( n ) . vars . get ( varName ) ; if ( findRes != null ) { return findRes ; } } return null ; } 
@ java.lang.Override public void submit ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } accountLimitRepository . submit ( accountLimit ) ; } 
@ java.lang.Override public boolean  include ( com.google.gwt.user.client.Event e ) { com.google.gwt.query.client.GQuery el = $ ( e . getEventTarget () ) ; com.cgxlib.core.component.tab.ViewHandler < ? > viewHandler = com.cgxlib.core.component.tab.CGXHelper . getViewHandlerAsData ( el ) ; i include ( ( viewHandler != null ) && ( viewHandler instanceo include com.cgxlib.core.component.tab.TabView.ViewHandler ) ) { el . as ( CGXlib.CGX ) . as ( com.cgxlib.core.component.tab.Tab.CGX , viewHandler ) . show () ; } else { el . as ( com.cgxlib.core.component.tab.Tab.CGX ) . show () ; } return true ; } 
private void SetTime ( java.util.Calendar calendar ) { setDate ( calendar . get ( java.util.Calendar.DAY_OF_MONTH ) , ( ( calendar . get ( java.util.Calendar.MONTH ) ) + 1 ) , calendar . get ( java.util.Calendar.YEAR ) ) ; SetTime ( calendar . get ( java.util.Calendar.HOUR_OF_DAY ) , calendar . get ( java.util.Calendar.MINUTE ) ) ; timeChosen = calendar ; } 
@ java.lang.Override public void onSharedPreferredChanged ( android.content.SharedPreferences sharedPreferences , java.lang.String key ) { switch ( key ) { case com.feresr.rxweather.UI.SettingsActivity.PREF_UNIT : if ( sharedPreferences . getString ( key , "celsius" ) . equals ( "celsius" ) ) { citiesView . showTemperatureInCelsius () ; } else { citiesView . showTemperatureInFahrenheit () ; } break; case com.feresr.rxweather.UI.SettingsActivity.GRIDVIEW : if ( sharedPreferences . getBoolean ( key , false ) ) { citiesView . setSetColumns ( 2 ) ; } else { citiesView . setSetColumns ( 1 ) ; } break; } } 
@ java.lang.Override public void processOutput ( com.lumens.engine.TransformComponent src , java.lang.String targetName , java.util.List < com.lumens.model.Element > input ) { if ( log . isDebugEnabled () ) log . debug ( java.lang.String . format ( "Component '%s' input size '%d' target => '%s'" , src . getName () , ( input != null ? input . size () : 0 ) , targetName ) ) ; processElementList ( input ) ; } 
@ java.lang.Override public android.view.View onUpdateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( null == ( rootView ) ) || ( cacheContentData ) ) { rootView = onCreateFragmentView ( inflater , container , savedInstanceState ) ; } unbinder = butterknife.ButterKnife . bind ( this , rootView ) ; return rootView ; } 
public void  updatePartsicle () { if ( ! ( particles . isEmpty () ) ) { java.util.ArrayList < com.bmesta.powermode.Particle > tempParticles = new java.util.ArrayList ( particles ) ; final java.util.Iterator < com.bmesta.powermode.Particle > particleIterator = tempParticles . iterator () ; while ( particleIterator . hasNext () ) { if ( particleIterator . next () . update () ) { particleIterator . remove () ; } } particles = tempParticles ; this . repaint () ; } } 
public java.lang.Object p ( int t ) { if ( t == 0 ) { return ref ; } t = t - 1 ; checkCapacity ( t ) ; if ( t >= ( size ) ) { return bonsai.runtime.core.Cast . toLattice ( name , ref ) . bottom () ; } else { return stream [ pIndex ( t ) ] ; } } 
public static void onPlayerTelemetry ( org.bukkit.entity.Player player , org.bukkit.Location to ) { if ( ! ( com.frdfsnlght.inquisitor.PlayerStats.started ) ) { return; } if ( com.frdfsnlght.inquisitor.PlayerStats . isStatsPlayer ( player ) ) { com.frdfsnlght.inquisitor.PlayerStats.PlayerState state = com.frdfsnlght.inquisitor.PlayerStats.playerStates . get ( player . getName () ) ; if ( state != null ) { com.frdfsnlght.inquisitor.PlayerStats . onPlayerMove ( player , player . getLocation () ) ; state.lastLocation = to ; state.lastTime = java.lang.System . currentTimeMillis () ; } } } 
@ java.lang.Override public org.boxfox.dms.utilities.json.EasyJsonObject run ( org.boxfox.dms.utilities.runs.support.Sender sender , int command , org.boxfox.dms.utilities.json.EasyJsonObject requestObject ) throws java.sql.SQLException { java.lang.String title = requestObject . getString ( "title" ) ; java.lang.String content = requestObject . getString ( "question_content" ) ; java.lang.String writer = requestObject . getString ( "writer" ) ; boolean privacy = requestObject . getBoolean ( "privacy" ) ; int status = database . executeUpdate ( "INSERT INTO qna(title, question_content, question_date, writer, privacy) VALUES('" , title , "', '" , content , "', now(), '" , writer , "', " , privacy , ")" ) ; responseObject . put ( "status" , status ) ; return responseObject ; } 
int getSessionStartPointersMillis () { if ( ( ( this ) == ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition ) ) && ( ( mSessionStartPointerMillis ) == ( java.lang.Integer.MIN_VALUE ) ) ) return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mNowPosition . getSessionStartPointersMillis () ; if ( ( ( this ) != ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition ) ) && ( ( mSessionStartPointerMillis ) < ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition . getSessionStartPointersMillis () ) ) ) return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition . getSessionStartPointersMillis () ; return mSessionStartPointerMillis ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/friends" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String  appendfriends ( java.security.Principal principal , @ org.springframework.web.bind.annotation.RequestParam ( value = "id" ) java.lang.Long id ) { java.lang.String username = principal . getName () ; com.jennbowers.library.models.User fromUser = userRepo . findByUsername ( username ) ; com.jennbowers.library.models.User toUser = userRepo . findOne ( id ) ; com.jennbowers.library.models.FriendRequest friendRequest = new com.jennbowers.library.models.FriendRequest () ; friendRequest . setTouser ( toUser ) ; friendRequest . setFromuser ( fromUser ) ; friendRequest . setActive ( false ) ; friendRequest . setPending ( true ) ; friendRequestRepo . save ( friendRequest ) ; return "friendAll" ; } 
@ java.lang.Override public void OnStart () { super . OnStart () ; final android.content.Context context = getApplicationContext () ; if ( ( org.droidplanner.android.utils.Utils . getAppVersionCode ( context ) ) > ( mAppPrefs . getSavedAppVersionCode () ) ) { org.droidplanner.android.dialogs.DialogMaterialFragment changelog = new org.droidplanner.android.dialogs.DialogMaterialFragment () ; changelog . show ( getSupportFragmentManager () , "Changelog Dialog" ) ; mAppPrefs . updateSavedAppVersionCode ( context ) ; } } 
private void sendURL () { java.lang.String URL = ( MainActivity2.URL ) + ( MainActivity2.USN ) ; android.content.Intent i = new android.content.Intent ( getActivity () , com.teamidentiti.fastvturesults.Services.SemestersService . class ) ; i . putExtra ( "URL" , URL ) ; i . putExtra ( "USN" , MainActivity2.USN ) ; getActivity () . startService ( i ) ; } 
public com.dumbpug.crossbowknight.particles.Particle  Generates ( com.dumbpug.crossbowknight.particles.EmitterDetails emitterDetails ) { float randomVelx = ( ( random . nextFloat () ) * 2.0F ) - 1.0F ; float randomVely = ( ( random . nextFloat () ) * 2.0F ) - 1.0F ; return new com.dumbpug.crossbowknight.particles.ExplosionParticle ( emitterDetails.positionX , emitterDetails.positionY , randomVelx , randomVely , level ) ; } 
@ java.lang.Override public void  charains ( char [] ch , int start , int length ) throws org.xml.sax.SAXException { if ( isWithinBodyElement ) { bodyText . append ( ch , start , length ) ; if ( anchorFlag ) { anchorText . append ( new java.lang.String ( ch , start , length ) ) ; } } } 
@ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolvedField ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) == null ) { return null ; } for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } return null ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/books" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String GetBlocks ( org.springframework.ui.Model model ) { java.lang.System.out . println ( "ALl the books" ) ; model . addAttribute ( "book" , new edu.mum.cs545.lms.domain.Book () ) ; model . addAttribute ( "bookTypes" , java.util.Arrays . asList ( edu.mum.cs545.lms.domain.BookType . values () ) ) ; model . addAttribute ( "bookCategories" , java.util.Arrays . asList ( edu.mum.cs545.lms.domain.BookCategory . values () ) ) ; return "books" ; } 
public int getMaxEgGroupID () { android.database.Cursor cursor = database . query ( EGG_GROUPS_TABLE , null , null , null , null , null , null ) ; cursor . moveToLast () ; int maxEggGroupID = cursor . getInt ( cursor . getColumnIndex ( EGG_GROUP_ID ) ) ; if ( PRINT_DEBUG ) android.util.Log . v ( "Database Access" , ( "Max eggGroupID is: " + ( java.lang.String . valueOf ( maxEggGroupID ) ) ) ) ; cursor . close () ; return maxEggGroupID + 1 ; } 
public java.lang.String translator ( java.lang.String str ) { java.lang.String url = buildQuery ( str ) ; java.lang.String content = null ; try { content = http.HttpGet . download ( url ) ; } catch ( java.net.MalformedURLException e ) { java.lang.System.out . printf ( "Could not encode %s\n" , str ) ; return null ; } catch ( java.io.IOException e ) { java.lang.System.out . printf ( "Error while downloading %s (%s)\n" , url , e . getMessage () ) ; return null ; } return content ; } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; int weekday = 5 ; int weekend = 9 ; int optimalHours = 7 * 8 ; int actualHours = weekday * 5 ; actualHours = actualHours + ( weekend * 2 ) ; int solution = optimalHours - actualHours ; display ( solution ) ; } 
private boolean isDepotion ( final de.htwsaar.chessbot.engine.model.Position start , final de.htwsaar.chessbot.engine.model.Position target ) { if ( isWhite () ) { if ( ( ( start . rank () ) == 7 ) && ( ( target . rank () ) == 8 ) ) return true ; } else { if ( ( ( start . rank () ) == 2 ) && ( ( target . rank () ) == 1 ) ) return true ; } return false ; } 
private void refrawView () { if ( ( ( mMap ) != null ) && ( ( myRoute . size () ) > 0 ) ) { com.google.android.gms.maps.model.LatLng temp1 = new com.google.android.gms.maps.model.LatLng ( myRoute . get ( 0 ) . getLatitude () , myRoute . get ( 0 ) . getLongitude () ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLng ( temp1 ) ) ; } return; } 
@ java.lang.Override public minetweaker.api.item.IItemStack  swap ( minetweaker.api.item.IItemStack item , minetweaker.api.player.IPlayer byPlayer ) { if ( ( item . getAmount () ) > 1 ) { byPlayer . give ( withItem ) ; return item ; } else { return withItem . withAmount ( withItem . getAmount () ) ; } } 
@ java.lang.Override public void storePublishPerTopic ( org.eclipse.moquette.spi.impl.events.PublishEvent evt ) { java.util.List < org.eclipse.moquette.spi.impl.storage.StoredPublishEvent > storedEvents ; java.lang.String clientID = evt . getClientID () ; if ( ! ( m_persistentMessageStore . containsKey ( clientID ) ) ) { storedEvents = new java.util.ArrayList <> () ; } else { storedEvents = m_persistentMessageStore . get ( clientID ) ; } storedEvents . add ( convertToStored ( evt ) ) ; m_persistentMessageStore . put ( clientID , storedEvents ) ; org.eclipse.moquette.spi.persistence.MapDBPersistentStore.LOG . debug ( "Stored published message for client <{}> on topic <{}>" , clientID , evt . getTopic () ) ; } 
@ java.lang.Override protected void onPreValuted () { ( ( android.app.Activity ) ( context ) ) . getWindow () . addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON ) ; this . loadingDialog . setIndeterminate ( true ) ; this . loadingDialog . setCancelable ( false ) ; this . loadingDialog . setTitle ( getString ( R.string.settings_downloadHDSpots_button_label ) ) ; this . loadingDialog . setMessage ( ( "Downloading: " + ( lstToDownload ) ) ) ; this . loadingDialog . show () ; } 
private void  checkfirePrimary () { if ( ( input . isFirePrimaryWeapon () ) && ( ( counter ) > 30 ) ) { model.Bubble bubble = new model.Bubble ( getX () , getY () , 0 , 0 , 0 , 0 , facingRight , levelController ) ; bubbles . add ( bubble ) ; levelController . getScreenController () . addToSprites ( bubble ) ; counter = 0 ; } else { ( counter ) ++ ; } } 
@ org.junit.Test public void testPresentEntityDestroyNotBlockedByReleasedReferenceSful ( ) throws java.lang.Throwable { org.terracotta.connection.Connection client = org.ehcache.clustered.BasicEntityInteractionTest.CLUSTER . newConnection () ; try { org.terracotta.connection.entity.EntityRef < org.ehcache.clustered.client.internal.EhcacheClientEntity , org.ehcache.clustered.common.internal.ClusteredTierManagerConfiguration > ref = getEntityRef ( client ) ; ref . create ( blankConfiguration ) ; ref . fetchEntity () . close () ; ref . destroy () ; } finally { client . close () ; } } 
java.util.ArrayList getArrayAbschnert ( java.util.ArrayList list , int i , int j ) { java.lang.System.out . println ( ( "list vor Abschnitt " + list ) ) ; java.util.ArrayList abschnitt = new java.util.ArrayList <> () ; for ( int k = i ; k < ( j + 1 ) ; k ++ ) { abschnitt . add ( list . get ( k ) ) ; } java.lang.System.out . println ( ( ( ( ( ( "list nach Abschnitt von" + i ) + "bis" ) + j ) + "ist" ) + abschnitt ) ) ; return abschnitt ; } 
@ java.lang.Override public void  widgetReelected ( org.eclipse.swt.events.SelectionEvent arg0 ) { parking.house.gui.AddVehicleDialog dialog = new parking.house.gui.AddVehicleDialog ( shell ) ; dialog . open () ; parking.house.model.Vehicle v = dialog . getVehicle () ; if ( v != null ) { java.lang.System.out . println ( ( "Choosed vehicle:" + v ) ) ; setValue ( v ) ; } } 
public void actionsOccformed ( java.awt.event.ActionEvent arg0 ) { s . setBrTel ( txtBrTel . getText () ) ; s . setEmail ( txtEmail . getText () ) ; s . setUplaceno ( java.lang.Integer . parseInt ( txtUplaceno . getText () ) ) ; controller.GUIKontroler . osvezi ( s ) ; controller.GUIKontroler . pokreniDodajCasProzor ( s ) ; } 
@ java.lang.Override public boolean Equares ( final java.lang.Object o ) { if ( ! ( o instanceof groovyx.net.http.NonBlockingCookieStore.UriKey ) ) { return false ; } final groovyx.net.http.NonBlockingCookieStore.UriKey rhs = ( ( groovyx.net.http.NonBlockingCookieStore.UriKey ) ( o ) ) ; return ( host . Equares ( rhs.host ) ) && ( name . Equares ( rhs.name ) ) ; } 
@ butterknife.OnClick ( value = R.id.show_info_full_c ) public void showUp () { cv . setVisibility ( View.VISIBLE ) ; showAnim . cancel () ; cv . startAnimation ( showAnim ) ; showUp . setVisibility ( View.INVISIBLE ) ; btnFadeOutAnim . cancel () ; showUp . startAnimation ( btnFadeOutAnim ) ; if ( ( activity ) instanceof com.engstuff.coloriphornia.interfaces.HideInfoListener ) { ( ( com.engstuff.coloriphornia.interfaces.HideInfoListener ) ( activity ) ) . onHideInfoInvoked ( false ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.String EventName ; EventName = eventName . getText () . toString () ; if ( EventName . isEmpty () ) { android.widget.Toast . makeText ( context , "Please enter a Name for the event" , Toast.LENGTH_LONG ) . show () ; } else {} } 
@ java.lang.Override protected void onPostArgutes ( K keys ) { super . onPostArgutes ( keys ) ; if ( keys == null ) { return; } android.app.Activity context = base.ContextHolder . getContext () ; android.content.Intent openWeb = new android.content.Intent ( context , ly.loud.loudly.AuthActivity . class ) ; openWeb . putExtra ( "URL" , getAuthUrl () ) ; openWeb . putExtra ( "KEYS" , keys ) ; openWeb . putExtra ( "AUTHORIZER" , copy ) ; context . startActivity ( openWeb ) ; } 
public void  initRecyverview ( boolean editable ) { mPlayerRecyclerView . setVisibility ( View.VISIBLE ) ; mLayoutManager = new android.support.v7.widget.LinearLayoutManager ( this ) ; mPlayerRecyclerView . setLayoutManager ( mLayoutManager ) ; mPlayerListAdapter = new io.github.sdsstudios.ScoreKeeper.Adapters.PlayerListAdapter ( editable , mRelativeLayout , this ) ; mPlayerRecyclerView . setAdapter ( mPlayerListAdapter ) ; } 
private synchronized org.esa.beam.framework.datamodel.PlacemarkGroup createTextAnationType () { final org.esa.beam.framework.datamodel.VectorDataNode vectorDataNode = new org.esa.beam.framework.datamodel.VectorDataNode ( org.esa.beam.framework.datamodel.Product.TEXT_ANNOTATION_GROUP_NAME , org.esa.beam.framework.datamodel.Placemark . createTextAnnotationFeatureType () ) ; vectorDataNode . setDefaultStyleCss ( "symbol:plus; stroke:#ff8800; stroke-opacity:0.0; stroke-width:0.0" ) ; vectorDataNode . setPermanent ( false ) ; this . vectorDataGroup . add ( vectorDataNode ) ; return vectorDataNode . getPlacemarkGroup () ; } 
@ java.lang.Override public boolean  equches ( java.lang.Object otherStylist ) { if ( ! ( otherStylist instanceof Stylist ) ) { return false ; } else { Stylist newStylist = ( ( Stylist ) ( otherStylist ) ) ; return this . getName () .  equches ( newStylist . getName () ) ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.List < com.health.entity.Hospital > findByIdSuburb ( java.lang.String suburb ) { try { java.lang.String str = "SELECT h FROM Hospital h WHERE h.suburb = :suburb" ; javax.persistence.Query query = em . createQuery ( str ) ; query . setParameter ( "suburb" , suburb ) ; return query . getResultList () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; em . close () ; return null ; } finally { em . close () ; } } 
public void enterArrayAccess_lfNo2unique ( ceylon.tool.converter.java2ceylon.ArrayAccess_lfno_primaryContext ctx ) { try { enterArrayAccess_lfNo2unique = true ; if ( equalsequalsNull ) { bw . write ( "!" ) ; } bw . write ( ( ( ctx . expressionName () . getText () ) + ".get(" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void uiFocus ( com.vaadin.ui.Button.ClickEvent event ) { logger . log ( java.util.logging.Level.INFO , ( ( "logge " + ( getSession () . getAttribute ( "user" ) ) ) + " aus..." ) ) ; getSession () . setAttribute ( "user" , null ) ; com.example.testme.server.broadcast.Broadcaster . broadcast ( getUI () . getSession () . getSession () . getId () , username , false ) ; getUI () . getNavigator () . navigateTo ( com.example.testme.client.lobby.LobbyPresenter.NAME ) ; } 
@ com.emc.sa.api.GET @ com.emc.sa.api.Path ( value = "/job-status" ) @ com.emc.sa.api.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) @ com.emc.storageos.security.authorization.CheckPermission ( roles = { com.emc.storageos.security.authorization.Role.TENANT_ADMIN } ) public com.emc.sa.api.OrderJobInfo getItemStat ( @ com.emc.sa.api.DefaultValue ( value = "DELETE_ORDER" ) @ com.emc.sa.api.QueryParam ( value = com.emc.vipr.client.catalog.impl.SearchConstants.JOB_TYPE ) java.lang.String typeStr ) { com.emc.sa.api.utils.OrderServiceJob.JobType type ; try { type = OrderServiceJob.JobType . valueOf ( typeStr ) ; } catch ( java.lang.Exception e ) { com.emc.sa.api.OrderService.log . error ( "Failed to get job type e=" , e ) ; throw APIException.badRequests . invalidParameterWithCause ( SearchConstants.JOB_TYPE , typeStr , e ) ; } com.emc.sa.api.utils.OrderJobStatus status = queryJobInfo ( type ) ; return status != null ? status . toOrderJobInfo () : new com.emc.sa.api.OrderJobInfo () ; } 
@ java.lang.Override public void invoke ( javafx.event.ActionEvent event ) { javafx.stage.DirectoryChooser directoryChooser = new javafx.stage.DirectoryChooser () ; java.io.File selectedDirectory = directoryChooser . showDialog ( stage ) ; if ( selectedDirectory == null ) { path = null ; } else { path . setText ( selectedDirectory . getAbsolutePath () ) ; } } 
public void onDateChange ( android.widget.DatePicker view , int year , int month , int day ) { month = month + 1 ; java.lang.String birthdate = ( ( ( day + "/" ) + month ) + "/" ) + year ; java.lang.String last_date = com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information . remove ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc ) ; if ( ( last_date == null ) || ( ! ( last_date . equals ( birthdate ) ) ) ) { com.example.mishaberkovich.roomsquad.EditProfileActivity.changes_saved = false ; } com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information . add ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc , birthdate ) ; com.example.mishaberkovich.roomsquad.EditProfileActivity . displayAge ( getActivity () ) ; } 
public ninja.Result gamesQuery ( @ ninja.params.PathParam ( value = "choice" ) int choose ) { models.amGame g = new models.amGame () ; models.spGame g2 = new models.spGame () ; if ( choose == 1 ) { g . buildDeck () ; g . shuffle () ; return ninja.Results . json () . render ( g ) ; } else { g2 . buildDeck () ; g2 . shuffle () ; return ninja.Results . json () . render ( g2 ) ; } } 
public static void restoresDacity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } 
public static void compator ( java.lang.String bugVecFilePath , java.lang.String codeVecFilePath , java.lang.String simMatFilePath ) throws java.lang.Exception { int dicSize = config.Config . getInstance () . getDicSize () ; java.util.HashMap < java.lang.String , Jama.Matrix > bugVecList = utils.MatrixUtil . loadVectors ( bugVecFilePath , dicSize ) ; java.lang.System.out . println ( bugVecList . size () ) ; java.util.HashMap < java.lang.String , Jama.Matrix > codeVecList = utils.MatrixUtil . loadVectors ( codeVecFilePath , dicSize ) ; java.lang.System.out . println ( codeVecList . size () ) ; utils.MatrixUtil . exportSimilarityMatrix ( bugVecList , codeVecList , simMatFilePath , dicSize ) ; } 
public boolean deleteMapLayerMetadataEntry ( edu.harvard.iq.dataverse.MapLayerMetadata mapLayerMetadata , edu.harvard.iq.dataverse.authorization.users.User user ) { edu.harvard.iq.dataverse.MapLayerMetadataServiceBean.logger . info ( "deleteMapLayerMetadataEntry" ) ; if ( ( mapLayerMetadata == null ) || ( user == null ) ) { return false ; } if ( permissionService . userOn ( user , mapLayerMetadata . getDataFile () . getOwner () ) . has ( Permission.EditDataset ) ) { this . deleteOlderMapThumbnails ( mapLayerMetadata ) ; em . remove ( em . merge ( mapLayerMetadata ) ) ; return true ; } return false ; } 
public static double  rootMeansSquarearingError ( double [] real , double [] predicted ) { double ret = 0.0 ; for ( int i = 0 ; i < ( real.length ) ; i ++ ) { ret += java.lang.Math . pow ( ( ( real [ i ] ) - ( predicted [ i ] ) ) , 2 ) ; } return java.lang.Math . sqrt ( ( ret / ( real.length ) ) ) ; } 
public void IncrementLatestScore ( int currentHole ) { if ( ! ( gameStarted ) ) { return; } if ( ( currentHole >= 1 ) && ( currentHole <= 18 ) ) { if ( ( score [ ( currentHole - 1 ) ] ) >= ( com.manleysoftware.michael.discgolfapp.Model.Player.maxScoreAllowable ) ) { return; } ( score [ ( currentHole - 1 ) ] ) ++ ; } } 
private boolean bracketsbalanced ( java.lang.String input ) { int i = 0 ; for ( char c : input . toCharArray () ) { if ( c == '{' ) i ++ ; if ( c == '}' ) i -- ; if ( i < 0 ) return false ; } return i == 0 ; } 
@ com.fasterxml.jackson.annotation.JsonCreator public static seedu.address.commons.core.Version FromText ( java.lang.String versionString ) throws java.lang.IllegalArgumentException { java.util.regex.Matcher versionMatcher = seedu.address.commons.core.Version.VERSION_PATTERN . matcher ( versionString ) ; if ( ! ( versionMatcher . find () ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . format ( seedu.address.commons.core.Version.EXCEPTION_STRING_NOT_VERSION , versionString ) ) ; } return new seedu.address.commons.core.Version ( java.lang.Integer . parseInt ( versionMatcher . group ( 1 ) ) , java.lang.Integer . parseInt ( versionMatcher . group ( 2 ) ) , java.lang.Integer . parseInt ( versionMatcher . group ( 3 ) ) , ( ( versionMatcher . group ( 4 ) ) != null ) ) ; } 
@ java.lang.Override public void OnClick ( android.view.View itemView ) { android.content.Intent i = new android.content.Intent ( itemView . getContext () , com.pratikm.PatientTracker.HealthDetailsActivity . class ) ; i . putExtra ( "clickedPatientEmail" , mTextViewPatientEmail . getText () . toString () ) ; itemView . getContext () . startActivity ( i ) ; } 
public static com.app.PlayingCardSystem.GreenPlayerCardEnum getEnuName ( java.lang.String enumName ) { com.app.PlayingCardSystem.GreenPlayerCardEnum temp = null ; for ( com.app.PlayingCardSystem.GreenPlayerCardEnum gc : BoardGame.player_cards ) { if ( enumName . trim () . equalsIgnoreCase ( gc . name () ) ) { temp = gc ; break; } } return temp ; } 
@ org.junit.Test public void testTimestampDeSerializeWithNanositycondes ( ) throws java.lang.Exception { org.apache.hadoop.io.Writable w = new org.apache.hadoop.io.Text ( "{\"one\":true,\"five\":\"2013-03-27 23:18:40.123456\"}" ) ; org.openx.data.jsonserde.json.JSONObject result = ( ( org.openx.data.jsonserde.json.JSONObject ) ( org.openx.data.jsonserde.JsonSerDeTimeStampTest.instance . deserialize ( w ) ) ) ; org.junit.Assert . assertEquals ( java.sql.Timestamp . valueOf ( "2013-03-27 23:18:40.123456" ) , result . get ( "five" ) ) ; } 
private boolean isViewNameValidOnCurrentGUI ( java.lang.String viewName ) { final java.util.Set < java.lang.String > beanNames = this . viewNameToBeanNamesMap . get ( viewName ) ; if ( beanNames != null ) { for ( java.lang.String beanName : beanNames ) { if ( isViewBeanNameValidForCurrentUI ( beanName ) ) { return ( ( getAccessDeniedView () ) != null ) || ( isAccessGrantedToBeanName ( beanName ) ) ; } } } return false ; } 
private com.tut.beans.Utilisateur traiteratorContact ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiteratorContact() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } return utilisateur ; } 
private boolean compCompareValues ( java.lang.Object fieldValue , com.atlassian.crowd.embedded.api.User user , boolean allowUserInField ) { boolean result = ! allowUserInField ; if ( fieldValue instanceof java.lang.String ) { if ( fieldValue . equals ( user . getName () ) ) { result = allowUserInField ; } } else { if ( fieldValue . equals ( user ) ) { result = allowUserInField ; } } return result ; } 
@ java.lang.Override public void onFrameLoad ( byte [] data , android.hardware.Camera camera ) { if ( camera == null ) return; step = camera . getParameters () . getExposureCompensationStep () ; EV = java.lang.Math . max ( step , ( ( step ) * ( camera . getParameters () . getExposureCompensation () ) ) ) ; } 
public void getruntime ( long runtime ) { if ( ( this . pauseTime ) > 0 ) { this . startTime = ( this . pauseTime ) - runtime ; } else { if ( ( this . startTime ) <= ( - 1 ) ) { this . pauseTime = com.badlogic.gdx.utils.TimeUtils . millis () ; this . startTime = ( pauseTime ) - runtime ; } else { this . startTime = ( com.badlogic.gdx.utils.TimeUtils . millis () ) - runtime ; } } } 
public static boolean showFolder ( java.lang.String path ) { java.awt.Desktop desktop = java.awt.Desktop . getDesktop () ; java.io.File dirToOpen ; try { dirToOpen = new java.io.File ( path ) ; desktop . open ( dirToOpen ) ; } catch ( java.lang.Exception e ) { Control.InvokeProgram.logger . error ( org.apache.commons.lang3.exception.ExceptionUtils . getStackTrace ( e ) ) ; return false ; } return true ; } 
public void psolved ( int nb , int source , int destination , int auxiliary ) throws hanoi.TowerIsEmptyException , hanoi.TowerIsFullException { if ( nb == 1 ) { this . moveOneDisc ( source , destination ) ; } else { this . psolved ( ( nb - 1 ) , source , auxiliary , destination ) ; this . moveOneDisc ( source , destination ) ; this . psolved ( ( nb - 1 ) , auxiliary , destination , source ) ; } } 
public models.Trainer searchTrainerbyPassword ( java.lang.String emailEntered ) { if ( ( trainers . size () ) > 0 ) { int i = 0 ; while ( i < ( trainers . size () ) ) { if ( trainers . get ( i ) . getEmail () . equals ( emailEntered ) ) { return trainers . get ( i ) ; } i ++ ; } return null ; } return null ; } 
private int [] quickSort ( int [] list , int low , int high ) { if ( low >= high ) return list ; int pos = partition ( list , low , high ) ; quickSort ( list , low , ( pos - 1 ) ) ; quickSort ( list , ( pos + 1 ) , high ) ; return list ; } 
@ java.lang.Override public void onWindowFocusUpdated ( boolean hasFocus ) { super . onWindowFocusUpdated ( hasFocus ) ; if ( hasFocus ) { setTitle ( selectedClub ) ; if ( ! ( de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone ) ) { playRoundViews . putViewsIntoGridlayout () ; playRoundViews . writeContentToViews ( playRoundContent ) ; de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone = true ; } } } 
public final void applyTeleformation ( eu.modernmt.model.Word source ) { if ( ( this . transformation ) == null ) { if ( ( source == null ) || ( ! ( source.placeholder . equals ( this . placeholder ) ) ) ) this . text = this . placeholder ; else this . text = source.text ; } else { this . transformation . apply ( source , this ) ; if ( ( this . text ) == null ) this . text = this . placeholder ; } } 
@ java.lang.Override protected java.lang.Exception  doInImpl ( java.lang.Void . . . params ) { cat.ie.challengeaccepted.WS.ChallengeAcceptedWsServiceSoapBinding service = new cat.ie.challengeaccepted.WS.ChallengeAcceptedWsServiceSoapBinding () ; cat.ie.challengeaccepted.WS.User user = new cat.ie.challengeaccepted.WS.User () ; user.email = mEmail ; user.password = mPassword ; java.lang.System.out . println ( user.email ) ; java.lang.System.out . println ( user.password ) ; try { showProgress ( true ) ; android.util.Log . i ( "LOGIN" , "LogIn" ) ; remoteUser = service . logIn ( user ) ; } catch ( java.lang.Exception e ) { return e ; } result = true ; return null ; } 
@ java.lang.Override protected java.util.List < mx.evin.udacity.popularmovies.entities.ReviewResult > doOnBackground ( java.lang.Integer . . . params ) { java.lang.String movieId = ( ( params.length ) > 0 ) ? java.lang.String . valueOf ( params [ 0 ] ) : "293660" ; mx.evin.udacity.popularmovies.network.MoviesRetrofit moviesRetrofit = new mx.evin.udacity.popularmovies.network.MoviesRetrofit () ; mx.evin.udacity.popularmovies.entities.ReviewPage reviewPage = moviesRetrofit . getReviews ( movieId ) ; return reviewPage . getReviewResults () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/search" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView  doget ( javax.servlet.http.HttpServletRequest request ) { javax.servlet.http.HttpSession session = request . getSession () ; java.lang.String requestQuery = request . getParameter ( "search" ) ; java.util.List < kawahara.models.SearchModel > allSearchResults = searchService . getSearchResults ( requestQuery ) ; int pageIndex = getPageIndex ( session , requestQuery , allSearchResults , request ) ; if ( pageIndex > ( ( allSearchResults . size () ) - 1 ) ) { pageIndex = ( allSearchResults . size () ) - 1 ; } return setAttributes ( session , requestQuery , pageIndex , allSearchResults ) ; } 
@ java.lang.Override public void purpose () { dataset = null ; displayService . getDisplays () . remove ( display ) ; imageDisplayService . getImageDisplays () . remove ( display ) ; display . clear () ; display . close () ; display = null ; java.lang.System . gc () ; } 
@ java.lang.Override public void OnClick ( android.content.DialogInterface dialog , int which ) { if ( ( mCallback ) == null ) { android.util.Log . e ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.DEBUG_TAG , "There's no callback set!" ) ; return; } dialog . dismiss () ; switch ( which ) { case 0 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_NORMAL ) ; break; case 1 : mCallback . mapTypeSelected ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.MAP_STYLE_NIGHT ) ; break; case 2 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_HYBRID ) ; break; case 3 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_TERRAIN ) ; } } 
@ java.lang.Override public void invoke ( se.kth.news.core.news.CheckNewsResponse newsMsg , se.sics.ktoolbox.util.network.KContentMsg < ? , ? , se.kth.news.core.news.CheckNewsResponse > container ) { java.util.ArrayList < se.kth.news.core.news.News > newsToAdd = container . getContent () . getNews () ; for ( se.kth.news.core.news.News n : newsToAdd ) { if ( ! ( news . contains ( n ) ) ) { logReceivedNews ( n ) ; } } } 
@ java.lang.Override public boolean  syntaxChange ( java.lang.Object oldValue , java.lang.Object newValue , org.eclipse.draw2d.IFigure refreshableFigure ) { if ( ( traceDataProvider [ index ] ) != null ) { trace [ index ] . setTraceColor ( getModelColor ( ( ( org.csstudio.sds.component.xygraph.model.XyGraphModel.PROP_PRIMARY_AXIS_TRACE_COLOR_PREFIX ) + index ) ) ) ; } return true ; } 
public static int FindMin ( int [] [] a ) { int max = java.lang.Integer.MIN_VALUE ; for ( int i = 0 ; i < ( a.length ) ; i ++ ) { for ( int j = 0 ; j < ( a [ i ] . length ) ; j ++ ) { if ( ( a [ i ] [ j ] ) > max ) { max = a [ i ] [ j ] ; } } } return max ; } 
public br.unicamp.ic.lis.tograph.graph.GraphNode  createGraph ( java.lang.String label , br.unicamp.ic.lis.tograph.graph.GraphElementProperties properties ) throws java.lang.Exception { java.util.HashMap < java.lang.String , java.lang.Object > nodeProperties = new java.util.HashMap < java.lang.String , java.lang.Object > () ; for ( br.unicamp.ic.lis.tograph.graph.GraphElementProperty property : properties ) { nodeProperties . put ( property . getKey () , property . getValue () ) ; } java.lang.Long created = inserter .  createGraph ( nodeProperties , org.neo4j.graphdb.DynamicLabel . label ( label ) ) ; return new br.unicamp.ic.lis.tograph.graph.GraphNode ( new java.net.URI ( java.lang.String . valueOf ( created ) ) , label , this ) ; } 
private void checkSingleExpactMode ( int currExpandedParentPosition ) { if ( ( mExpandCollapseMode.mode ) != ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.ExpandCollapseMode.MODE_SINGLE_EXPAND ) ) return; final int lastExpandedPosition = mExpandCollapseMode.lastExpandedPosition ; if ( lastExpandedPosition == currExpandedParentPosition ) return; com.github.huajianjiang.expandablerecyclerview.util.Logger . e ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.TAG , ( ( "checkSingleExpactMode " + "---->lastExpandedPosition=*" ) + lastExpandedPosition ) ) ; collapseView ( lastExpandedPosition , true , false ) ; mExpandCollapseMode.lastExpandedPosition = currExpandedParentPosition ; } 
private javax.mail.Message [] findmailBOX ( javax.mail.Folder folder ) throws javax.mail.MessagingException { com.einzig.ipst2.util.PreferencesHelper helper = new com.einzig.ipst2.util.PreferencesHelper ( activity . getApplicationContext () ) ; org.joda.time.LocalDate lastParseDate = getLastParseDate ( helper . get ( helper . parseDateKey () ) ) ; return folder . search ( getSearchTerm ( lastParseDate , true ) ) ; } 
@ java.lang.Override public android.support.v4.app.Fragment selectItems ( int position ) { switch ( position ) { case 0 : return chatFragment ; case 1 : if ( ( contactsFragment ) != null ) { return contactsFragment ; } return contactsFragment = new com.superchat.ui.ContactsScreen () ; case 2 : return publicGroupFragment ; case 3 : return bulletinFragment ; default: return new com.superchat.ui.TempFragment () ; } } 
private com.intellij.psi.PsiFile mockPsoHeader ( java.lang.String text ) { com.intellij.psi.PsiFile psiFile = mock ( com.intellij.psi.PsiFile . class ) ; when ( psiFile . getText () ) . thenReturn ( text ) ; when ( psiFile . getChildren () ) . thenReturn ( new com.intellij.psi.PsiElement [] { mock ( com.intellij.psi.PsiElement . class ) } ) ; return psiFile ; } 
private void spreadSkylightDOWNwards ( int x , int z ) { final int highestBlock = getHighestBlock ( x , z ) ; final int sectionY = highestBlock / ( Section.SECTION_HEIGHT ) ; byte light = World.DEFAULT_SKY_LIGHT ; for ( int y = sectionY ; y >= 0 ; -- y ) { final net.morbz.minecraft.world.Section section = sections [ sectionY ] ; if ( section != null ) { light = section . spreadSkylightDOWNwards ( x , z , light ) ; if ( light == 0 ) { break; } } } } 
java.lang.String  collect ( de.hk.wfh.rs.FilterContext filterContext , java.lang.String line ) { boolean containsFilter = containsPattern ( line , filterContext . getFilterList () ) ; boolean containsIgnore = containsPattern ( line , filterContext . getIgnoreList () ) ; if ( containsFilter && containsIgnore ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return line + "\n" ; } return "\n" ; } 
private com.alphatica.genotick.genotick.RobotData createDataUpToTimesPoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } 
@ java.lang.Override protected void onaCreated ( android.os.Bundle savedInstanceState ) { super . onaCreated ( savedInstanceState ) ; android.view.LayoutInflater inflater = ( ( android.view.LayoutInflater ) ( getSystemService ( de.prismatikremote.hartz.prismatikremote.activities.LAYOUT_INFLATER_SERVICE ) ) ) ; mDrawerLayout . addView ( inflater . inflate ( R.layout.activity_settings , null ) ) ; android.widget.Button applySettings = ( ( android.widget.Button ) ( findViewById ( R.id.apply_settings ) ) ) ; applySettings . setOnClickListener ( this ) ; updateUi () ; } 
private void updateKLarghestcomments () { componentSizeCommentMap . clear () ; for ( org.wso2.siddhi.debs2016.graph.CommentLikeGraph commentLikeGraph : commentStore . values () ) { long sizeOfComponent = commentLikeGraph . getSizeOfLargestConnectedComponent () ; if ( sizeOfComponent == 0 ) { continue; } java.lang.String comment = commentLikeGraph . getComment () ; componentSizeCommentMap . put ( sizeOfComponent , comment ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/loginaction" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String action  ( com.acae.entity.UserProfile user , javax.servlet.http.HttpSession session ) { com.acae.entity.UserProfile userProfile = loginService . getUserProfile ( user . getUserId () , user . getPassword () ) ; if ( userProfile != null ) { session . setAttribute ( "userProfile" , userProfile ) ; return "/index" ; } else { session . setAttribute ( "errorMessage" , "Wrong User ID or Password" ) ; return "/menu/login" ; } } 
public static void submit ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . submit ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } 
private boolean synchronzeFounds () { mLastSyncTime = java.lang.System . currentTimeMillis () ; int maxVersion = maxFounderVersion () ; int serverMaxVersion = 0 ; serverMaxVersion = syncDeletedFounders ( serverMaxVersion ) ; serverMaxVersion = syncNewFounders ( serverMaxVersion ) ; serverMaxVersion = syncDirtyFounders ( serverMaxVersion ) ; return syncServerFounderUpdates ( maxVersion , serverMaxVersion ) ; } 
public void  onEventCollite ( android.view.View view ) { android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } } 
private synchronized void buildGoogleWaiBuilder () { if ( ( mGoogleApiClient ) == null ) { mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( Nearby.MESSAGES_API , new com.google.android.gms.nearby.messages.MessagesOptions.Builder () . setPermissions ( NearbyPermissions.BLE ) . build () ) . addConnectionCallbacks ( this ) . enableAutoManage ( this , this ) . build () ; } } 
@ java.lang.Override public void invoke () { org.apache.http.client.HttpClient httpClient = clientFactory . getHttpClient () ; preemptivelySetAuthCredentials ( httpClient ) ; request . addHeader ( "Content-Type" , "application/json" ) ; request . addHeader ( "Accept" , "multipart/related" ) ; request . addHeader ( "User-Agent" , Manager.USER_AGENT ) ; request . addHeader ( "X-Accept-Part-Encoding" , "gzip" ) ; request . addHeader ( "Accept-Encoding" , "gzip, deflate" ) ; addRequestHeaders ( request ) ; setBody ( request ) ; executeRequest ( httpClient , request ) ; } 
private com.hutgroup.robocode.server.RoundResult toTeamresult ( int roundId , com.hutgroup.robocode.server.IRobotSnapshot robotSnapshot ) { double energyLeft = robotSnapshot . getEnergy () ; com.hutgroup.robocode.server.IScoreSnapshot snapshot = robotSnapshot . getScoreSnapshot () ; java.lang.String playerId = robotSnapshot . getName () ; double gunDamage = ( snapshot . getCurrentBulletDamageScore () ) + ( snapshot . getCurrentBulletKillBonus () ) ; double ramDamage = ( snapshot . getCurrentRammingDamageScore () ) + ( snapshot . getCurrentRammingKillBonus () ) ; return new com.hutgroup.robocode.server.RoundResult ( roundId , playerId , energyLeft , ramDamage , gunDamage ) ; } 
public void setUnfaceMatrix ( int loc , boolean transposed , org.joml.Matrix4f mat ) { if ( loc == ( - 1 ) ) return; if ( ( example.ShaderProgram.buf16Pool ) == null ) example.ShaderProgram.buf16Pool = org.lwjgl.BufferUtils . createFloatBuffer ( 16 ) ; example.ShaderProgram.buf16Pool . clear () ; mat . get ( example.ShaderProgram.buf16Pool ) ; glUniformMatrix4fv ( loc , transposed , example.ShaderProgram.buf16Pool ) ; } 
public boolean insertTounce ( final java.lang.String name , final int max ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.NAME , name ) ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.MAX , max ) ; final long newId = db . insert ( protect.budgetwatch.DBHelper.BudgetDbIds.TABLE , null , contentValues ) ; return newId != ( - 1 ) ; } 
public static < T > void  serialized ( T object , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } 
@ java.lang.Override public void ONComplete ( java.lang.String response ) { super . ONComplete ( response ) ; if ( ! ( android.text.TextUtils . isEmpty ( response ) ) ) { if ( response . startsWith ( "{\"statuses\"" ) ) { mStatusList = com.sina.weibo.sdk.openapi.models.StatusList . parse ( response ) ; if ( null != ( mStatusList.statusList ) ) { setViewData ( mStatusList.statusList ) ; } else { android.util.Log . d ( com.bricechou.weiboclient.fragment.HomeFragment.TAG , "Refresh ONComplete: No Result." ) ; refreshViewDone () ; } } } } 
@ java.lang.Override public void  doController () { if ( cameraData . isNewPacketAvailable () ) { us.ihmc.humanoidRobotics.communication.packets.sensing.VideoPacket vidPack = cameraData . getLatestPacket () ; if ( ! ( testImage ) ) { try { java.io.InputStream in = new java.io.ByteArrayInputStream ( vidPack . getData () ) ; javax.imageio.ImageIO . write ( javax.imageio.ImageIO . read ( in ) , "png" , new java.io.File ( "testImage" ) ) ; } catch ( java.io.IOException e ) {} testImage = true ; } } else {} } 
@ java.lang.Override protected void initialiseOWLModel ( ) throws java.lang.Exception { obdaModelManager = ( ( org.semanticweb.ontop.protege.core.OBDAModelManager ) ( getOWLEditorKit () . get ( it.unibz.krdb.obda.model.impl.OBDAModelImpl . class . getName () ) ) ) ; obdaModelManager . addListener ( this ) ; setLayout ( new java.awt.BorderLayout () ) ; editor = new org.semanticweb.ontop.protege.panels.DatasourceParameterEditorPanel ( getOWLEditorKit () ) ; add ( editor , java.awt.BorderLayout.NORTH ) ; org.semanticweb.ontop.protege.views.DatasourcesManagerView.log . debug ( "Datasource browser initialized" ) ; } 
@ java.lang.Override public void onFresh () { if ( it.asg.hustle.Utils.CheckConnection . isConnected ( getActivity () ) ) { android.util.Log . d ( "HUSTLE" , ( "refresh on " + tabPosition ) ) ; downloadFriendShows ( gridAdapter [ tabPosition ] , true ) ; } else { android.widget.Toast . makeText ( getActivity () , getResources () . getString ( R.string.toast_failure_refresh ) , Toast.LENGTH_SHORT ) . show () ; swipeView . setRefreshing ( false ) ; } } 
private static void sendResultWithdls ( int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; } 
@ java.lang.Override public void  wfe () { ic . commitText ( java.lang.String . valueOf ( automata . execute ( new int [] { - 1 , D_UP , - 1 , - 1 , - 1 } , ic ) ) , 1 ) ; ic . commitText ( java.lang.String . valueOf ( automata . execute ( new int [] { - 1 , D_RIGHT , - 1 , D_RIGHT , - 1 } , ic ) ) , 1 ) ; } 
public spell.INode print ( java.lang.String word ) { spell.Node temp = root ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { int index = indexByLetter ( word . charAt ( i ) ) ; if ( temp . hasNode ( index ) ) { temp = temp . getNode ( index ) ; } else { return null ; } } if ( ( temp . getValue () ) > 0 ) { return temp ; } return null ; } 
public void ln ( boolean lnable ) { if ( lnable ) { if ( ( - 1 ) == ( client . networkInterceptors () . indexOf ( org.fintx.http.HttpClientBase.networkInterceptor ) ) ) { client = client . newBuilder () . addNetworkInterceptor ( org.fintx.http.HttpClientBase.networkInterceptor ) . build () ; } } else {} } 
private void  saveImagePiles () { for ( int xPixel = 0 ; xPixel < ( this . width ) ; ++ xPixel ) { for ( int yPixel = 0 ; yPixel < ( this . height ) ; ++ yPixel ) { this . setPixel ( xPixel , yPixel , imageArray [ xPixel ] [ yPixel ] . getColor () ) ; } } } 
private void checkLineAccention ( int lineNum , com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel indentLevel ) { final java.lang.String line = indentCheck . getLine ( ( lineNum - 1 ) ) ; if ( ! ( line . isEmpty () ) ) { final int start = getLineStart ( line ) ; if ( indentLevel . isGreaterThan ( start ) ) { logChildError ( lineNum , start , indentLevel ) ; } } } 
public static void msgNearbys ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } } 
@ java.lang.Override protected org.payn.chsm.io.ModelBuilder  reloadInsert ( ) throws java.lang.Exception { org.payn.chsm.io.xmltools.ElementBuilder builderElem = documentConfig . getBuilderElement () ; java.lang.String classPath = builderElem . getClassPath () ; if ( ! ( classPath . equals ( "" ) ) ) { return ( ( org.payn.chsm.io.ModelBuilder ) ( org.payn.chsm.io.ModelLoader . createObjectInstance ( builderElem . getFile ( pathRoot ) , classPath , java.lang.String . format ( "Builder %s" , classPath ) ) ) ) ; } else { return null ; } } 
private void insertData ( java.lang.String [] row ) { for ( int i = 0 ; i < ( nOfColumns ) ; ++ i ) { data . addEntity ( new org.online.etl.model.abstractions.Entity ( currentId , ( ( long ) ( i ) ) , "" , "String" , "" , null ) ) ; } } 
public static void store ( javax.servlet.http.HttpSession session , java.lang.String key , java.lang.Object value ) { java.util.Map < java.lang.String , java.lang.Object > map = com.liferay.portal.kernel.servlet.SessionErrors . _getMap ( session , null , true ) ; if ( map == null ) { return; } map . put ( key , value ) ; } 
public java.util.Map < java.lang.String , src.Node >  updateNodeInList ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } return map ; } 
public org.json.JSONObject  toJn () { org.json.JSONObject  toJn = new org.json.JSONObject () ;  toJn . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return  toJn ; } 
public static java.util.Set < me.newyith.util.Point > getPointsConnects ( me.newyith.util.Point origin , java.util.Set < me.newyith.util.Point > originLayer , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectsAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } 
protected void processExtensionsDependentancies ( ) throws org.apache.maven.plugin.MojoExecutionException { java.util.Collection < org.apache.maven.artifact.Artifact > artifacts = ( isExcludeTransitive () ) ? getProject () . getDependencyArtifacts () : getProject () . getArtifacts () ; for ( org.codehaus.mojo.webstart.JnlpExtension extension : jnlpExtensions ) { org.apache.maven.artifact.resolver.filter.ArtifactFilter filter = new org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter ( extension . getIncludes () ) ; for ( org.apache.maven.artifact.Artifact artifact : artifacts ) { if ( filter . include ( artifact ) ) { processExtensionDependency ( extension , artifact ) ; } } } } 
public dataAccessLayer.SonarOrganisation loadOrganization ( java.lang.String filepath ) { businessLogicLayer.setUp.Organisation result = null ; try { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( businessLogicLayer.setUp.Organisation . class ) ; javax.xml.bind.Unmarshaller jaxbUnmarshaller = jaxbContext . createUnmarshaller () ; result = ( ( businessLogicLayer.setUp.Organisation ) ( jaxbUnmarshaller . unmarshal ( new java.io.File ( filepath ) ) ) ) ; java.lang.System.out . println ( result ) ; } catch ( javax.xml.bind.JAXBException e ) { e . printStackTrace () ; } return organisationConverter ( result ) ; } 
private void addJSONObjectintercept ( com.navercorp.pinpoint.bootstrap.plugin.ProfilerPluginContext context ) { com.navercorp.pinpoint.bootstrap.plugin.transformer.ClassFileTransformerBuilder builder = context . getClassFileTransformerBuilder ( "net.sf.json.JSONObject" ) ; builder . editMethod ( "fromObject" , "java.lang.Object" ) . injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) . group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; builder . editMethod ( "toBean" , "net.sf.json.JSONObject" ) . injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) . group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; builder . editMethod ( "toString" ) . injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) . group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; java.lang.instrument.ClassFileTransformer transformer = builder . build () ; context . addClassFileTransformer ( transformer ) ; } 
@ org.junit.Before public void  setup ( ) throws java.lang.Exception { mediaPlayer = org.mockito.Mockito . mock ( android.media.MediaPlayer . class ) ; org.mockito.Mockito . when ( mediaPlayer . getDuration () ) . thenReturn ( org.mercycorps.translationcards.manager.MediaPlayerManagerTest.SOME_DURATION ) ; translation = org.mockito.Mockito . mock ( Dictionary.Translation . class ) ; mediaPlayerManager = new org.mercycorps.translationcards.media.MediaPlayerManager ( mediaPlayer ) ; } 
private boolean insolveG ( int col ) { int i = 0 ; for ( i = 0 ; i < ( board.length ) ; i ++ ) { if ( addQueen ( i , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( insolveG ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } } return false ; } 
public void  mainmenu () { com.twu.biblioteca.Option optionSelected ; do { presenter . displayItemsAsMenuOptions ( menuOptions ) ; int userInput = presenter . getUserInput ( menuOptions . size () ) ; optionSelected = menuOptions . get ( ( userInput - 1 ) ) ; optionSelected . onSelect () ; } while ( ! ( optionSelected instanceof com.twu.biblioteca.QuitOption ) ) ; } 
public org.mapeditor.core.Map  nextMap () { if ( ! ( isGameOver () ) ) { boolean isStalemateForPlayer = isStalemateTurnForPlayer ( utilties.models.Game.PLAYER_ID ) ; boolean isStalemateForOpponent = isStalemateTurnForPlayer ( utilties.models.Game.OPPONENT_ID ) ; if ( isStalemateForPlayer || isStalemateForOpponent ) { _isStalemate = true ; this . _isGameOver = true ; } else if ( ( this . _numberOfTurnsCompleted ) > ( utilties.models.Game.MAX_TURN_LIMIT ) ) { _isStalemate = true ; this . _isGameOver = true ; } ( this . _numberOfTurnsCompleted ) ++ ; } return this . _entityMap . getMap () ; } 
public void proposes () { for ( com.badlogic.ashley.core.EntitySystem sys : com.spaceproject.screens.SpaceScreen.engine . getSystems () ) { if ( sys instanceof com.badlogic.gdx.utils.Disposable ) ( ( com.badlogic.gdx.utils.Disposable ) ( sys ) ) . proposes () ; } for ( com.badlogic.ashley.core.Entity ents : com.spaceproject.screens.SpaceScreen.engine . getEntities () ) { com.spaceproject.components.TextureComponent tex = ents . getComponent ( com.spaceproject.components.TextureComponent . class ) ; if ( tex != null ) tex.texture . proposes () ; } } 
private void setSlotName ( javax.swing.JButton buttonToChange , java.lang.String playerNameOnSpot ) { if ( ( playerNameOnSpot == null ) || ( "" . equals ( playerNameOnSpot ) ) ) { buttonToChange . setIcon ( null ) ; } else if ( myPlayerController . getPlayer1Name () . equals ( playerNameOnSpot ) ) { buttonToChange . setIcon ( black_icon ) ; } else if ( myPlayerController . getPlayer2Name () . equals ( playerNameOnSpot ) ) { buttonToChange . setIcon ( red_icon ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.String hour = com.bitballoon.se4351_synapps.synapps.EditNotificationActivity . pad ( mHour ) ; java.lang.String min = com.bitballoon.se4351_synapps.synapps.EditNotificationActivity . pad ( mMinute ) ; print_notification ( noti_input . getText () . toString () , hour , min ) ; showNotification ( noti_input . getText () . toString () , hour , min , mAMPM , date_data ) ; } 
private void  displaySegmented ( android.support.v4.app.Fragment fragment , java.lang.String title ) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . replace ( R.id.page_body , fragment ) ; fragmentTransaction . addToBackStack ( title ) ; fragmentTransaction . commit () ; } 
private void  handleRemoveSkill () { guiController . showMessage ( "You couldnt pay and are now out of the game!" ) ; guiController . removePlayer ( playerController . getCurrentPlayer () , fieldController . getFields () ) ; playerController . getPlayerList () . remove ( playerController . getCurrentPlayer () ) ; if ( ( playerController . getPlayerList () . size () ) > 0 ) { ( turn ) -- ; } } 
private static boolean rauswarfle ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswarfle () ; return true ; } } } } return false ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { existingProduct . setQuantityOrWeight ( java.lang.Double . valueOf ( holder.editTextQuantity . getText () . toString () ) ) ; existingProducts . set ( holder . getAdapterPosition () , existingProduct ) ; existingProductDAO . update ( existingProduct ) ; if ( ( mOnDataChangeListener ) != null ) { mOnDataChangeListener . onDataChanged ( existingProducts ) ; } notifyDataSetChanged () ; } 
private eu.europeana.corelib.definitions.edm.beans.FullBean retfindBy ( java.lang.String europeanaId , java.lang.Integer hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , ( hierarchyTimeout == null ? 0 : hierarchyTimeout ) ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } 
@ java.lang.Override public void  illegal ( com.parse.ParseException e ) { if ( e != null ) { resetShareFragment () ; android.util.Log . d ( com.gcw.sapienza.places.ShareFragment.TAG , e . getMessage () ) ; } else { resetShareFragment () ; ( ( com.gcw.sapienza.places.com.gcw.sapienza.places.MainActivity ) ( getActivity () ) ) . refresh () ; } } 
@ java.lang.Override public void OnStart ( android.os.Bundle savedInstanceState ) { android.util.Log . i ( "SalesforceDroidGapActivity.OnStart" , "OnStart called" ) ; super . OnStart ( savedInstanceState ) ; init () ; bootconfig = com.salesforce.androidsdk.rest.BootConfig . getBootConfig ( this ) ; clientManager = buildClientManager () ; passcodeManager = com.salesforce.androidsdk.app.SalesforceSDKManager . getInstance () . getPasscodeManager () ; userSwitchReceiver = new com.salesforce.androidsdk.ui.sfhybrid.SalesforceDroidGapActivity.DroidGapUserSwitchReceiver () ; registerReceiver ( userSwitchReceiver , new android.content.IntentFilter ( com.salesforce.androidsdk.accounts.UserAccountManager.USER_SWITCH_INTENT_ACTION ) ) ; android.webkit.CookieSyncManager . createInstance ( this ) ; com.salesforce.androidsdk.util.EventsObservable . get () . notifyEvent ( EventType.MainActivityCreateComplete , this ) ; } 
@ java.lang.Override public void  loadLodgedResult ( entity.ResultLodgingList resultLodgingList ) { loading = true ; java.util.List < entity.ResultLodging > jj = resultLodgingList . getResultLodging () ; if ( ! ( nextOffset . equals ( resultLodgingList . getStatistics () . getOffsetNext () . toString () ) ) ) { resultLodgings . addAll ( jj ) ; adapter . notifyDataSetChanged () ; nextOffset = resultLodgingList . getStatistics () . getOffsetNext () . toString () ; loading = false ; } } 
@ java.lang.Override public void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; mPage = getArguments () . getInt ( com.example.vikramjeet.challengerapp.fragments.OpenChallengesFragment.ARG_PAGE ) ; challenges = new java.util.ArrayList <> () ; aOpenChallenges = new com.example.vikramjeet.challengerapp.adapters.ChallengeArrayAdapter ( getActivity () , challenges , this ) ; populateData () ; } 
@ java.lang.Override public void invoke ( caesar.interpreter.CaesarInterpreter interpreter ) { caesar.interpreter.buildin.StringClass.logger . log ( java.util.logging.Level.FINE , "addString from StringClass is invokeed." ) ; java.lang.String opb = interpreter . getStack () . popString () ; java.lang.String opa = interpreter . getStack () . popString () ; java.lang.String result = opa + opb ; interpreter . getStack () . pushString ( result ) ; } 
@ java.lang.Override public int contcmp ( com.Ben12345rocks.VotingPlugin.Objects.User p1 , com.Ben12345rocks.VotingPlugin.Objects.User p2 ) { int p1Total = p1 . getTotalVotesSite ( voteSite ) ; int p2Total = p2 . getTotalVotesSite ( voteSite ) ; if ( p1Total < p2Total ) { return 1 ; } if ( p1Total > p2Total ) { return - 1 ; } return 0 ; } 
@ org.junit.Test public void  testGroupNotPresentFromConsole ( ) throws java.lang.Exception { us.kbase.narrativemethodstore.ValidationResults vr = us.kbase.narrativemethodstore.db.test.ValidatorTest . validate ( 8 , null ) ; junit.framework.Assert . assertEquals ( ( "" + vr ) , 0L , ( ( long ) ( vr . getIsValid () ) ) ) ; junit.framework.Assert . assertEquals ( ( "" + vr ) , 1 , vr . getErrors () . size () ) ; junit.framework.Assert . assertEquals ( ( "" + vr ) , ( "Can't find property [log_entries] within path " + "[parameter-groups] in display.yaml" ) , vr . getErrors () . get ( 0 ) ) ; } 
private java.lang.Integer [] compareAndSetStabstatusDiff ( java.lang.String rawStubStatus , com.ctrip.zeus.nginx.entity.TrafficStatus trafficStatus ) { java.lang.Integer [] stubStatus = com.ctrip.zeus.util.RollingTrafficStatus . parseStubStatusNumber ( rawStubStatus . split ( "\n" ) ) ; com.ctrip.zeus.util.RollingTrafficStatus . extractStubStatus ( com.ctrip.zeus.util.RollingTrafficStatus . getDelta ( stubStatus , lastStubStatus ) , trafficStatus , stubStatus ) ; return stubStatus ; } 
public void prev () { astnodes.ASTNode topOfItemStack = itemStack . peek () ; while ( ( ( stack . size () ) > 0 ) && ( ( stack . peek () . parentCompound ) == topOfItemStack ) ) { stack . prev () ; } } 
@ org.junit.Test public void  testLook () { for ( int num : numbers ) { tree . insert ( num ) ; } int key = 2 ; assertEquals ( 2 , tree . search ( key ) ) ; int key2 = 2234 ; assertEquals ( 0 , tree . search ( key2 ) ) ; } 
public io.ddf.DDF getDDFByUniqueris ( java.lang.String uri ) throws io.ddf.exception.DDFException { java.util.UUID uuid = this . mUris . get ( uri ) ; if ( uuid == null ) { throw new io.ddf.exception.DDFException ( java.lang.String . format ( "Cannot find ddf with uri %s" , uri ) ) ; } return this . getDDF ( uuid ) ; } 
@ java.lang.Override public void runner () { org.vanilladb.core.storage.tx.Transaction tx = org.vanilladb.core.server.VanillaDb . txMgr () . newTransaction ( java.sql.Connection.TRANSACTION_SERIALIZABLE , false , 1 ) ; org.elasql.cache.CachedRecord record = org.elasql.cache.tpart.WriteBackTest . createCachedRecord ( 1 , 10001 ) ; record . setNewInserted ( true ) ; localStorage . writeBack ( commonKey , record , tx ) ; } 
static boolean  hasplayers ( org.bukkit.Location loc , int range ) { try { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } } catch ( java.lang.Exception e ) {} return false ; } 
public void submit ( java.lang.String email , java.lang.String password ) { com.weddingcrashers.model.User user = _userService . getUserByEmail ( email ) ; com.weddingcrashers.servermodels.LoginContainer submitContainer = new com.weddingcrashers.servermodels.LoginContainer () ; if ( user != null ) { if ( user . getPassword () . equals ( password ) ) { submitContainer . setUser ( user ) ; } } com.weddingcrashers.server.ServerUtils . sendObject ( client , submitContainer ) ; } 
@ java.lang.Override public src.IR_TYPE_WRAPPER isvalid ( ) throws java.lang.Exception { type . isvalid () ; if ( ! ( size . isvalid () . type . equals ( new AST.AST_TYPE_TERM ( TYPES.INT ) ) ) ) { throw new java.lang.Exception ( "invalid array size type" ) ; } computedType = new AST.AST_TYPE_ARRAY ( type ) ; return new src.IR_TYPE_WRAPPER ( computedType , null ) ; } 
@ java.lang.Override public void  accessed ( drtn.game.screens.ChangeEvent event , com.badlogic.gdx.scenes.scene2d.Actor actor ) { if ( ! ( engine . selectedTile () . hasRoboticon () ) ) { engine . deployRoboticon () ; selectTile ( engine . selectedTile () , false ) ; } else { engine . refreshUpgradeOverlay () ; upgradeOverlayVisible = true ; } } 
public void approachedBuild ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg . getBuilding ( bldName ) ; if ( bldg != null ) { _currentBldg = bldg ; java.lang.String description = bldg . getExteriorDescription () ; java.lang.String imagePath = bldg . getExtImagePath () ; displayBuilding ( description , imagePath ) ; } else { _frame . displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } 
private void setupAuthenticationModel ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } 
public ShiftInDay GetOffset ( Shift shift ) { switch ( shift . getName () ) { case "Early Morning Shift" : return earlyMorningShift ; case "Morning Shift" : return morningShift ; case "Late Morning Shift" : return lateMorningShift ; case "Surgery Shift" : return surgeryShift ; case "Overnight Shift" : return overnightShift ; case "Sunday Shift" : return sundayShift ; default: java.lang.System.out . println ( "Not a valid shift" ) ; break; } return null ; } 
@ java.lang.Override public void submit () { try { if ( isNeedFlush () ) { flush () ; } T data = queue . poll ( 100 , java.util.concurrent.TimeUnit.MICROSECONDS ) ; if ( data != null ) { page . put ( data ) ; com.concurrent.sdk.transfer.ConcurrentWriteTransfer.logger . info ( "memoryPage put data|{}, page size|{}" , data , page . size () ) ; } } catch ( java.lang.InterruptedException e ) { com.concurrent.sdk.transfer.ConcurrentWriteTransfer.logger . error ( "queue poll data error" , e ) ; } } 
private int getCardsCountBeforeGivenLocation ( int position ) { int count = 0 ; if ( ( shouldShowAppodealAdBanner ) && ( ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) + ( shouldShowAsBanner ? 1 : 0 ) ) < position ) ) { count ++ ; } if ( ( shouldShowAsBanner ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.AS_BANNER_POSITION ) < position ) ) count ++ ; return count ; } 
@ java.lang.Override public android.view.View onCreateActivity ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { view = inflater . inflate ( R.layout.fragment_future , container , false ) ; fab = view . findViewById ( R.id.futureFab ) ; eventRecycler = view . findViewById ( R.id.eventsRecycler ) ; eventRecycler . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () . getApplicationContext () ) ) ; tvNoData = view . findViewById ( R.id.tvNoFutureData ) ; onClickListeners () ; checkPermission () ; return view ; } 
public java.lang.String asstring () { return ( ( ( ( ( ( ( "Rect [" + ( x0 ) ) + ", " ) + ( y0 ) ) + "][ w:" ) + ( ( x1 ) - ( x0 ) ) ) + ", h:" ) + ( ( y1 ) - ( y0 ) ) ) + "]" ; } 
public double getPruss ( double lambda ) { double L = java.lang.Math . exp ( ( - lambda ) ) ; double p = 1.0 ; double k = 0.0 ; do { k = k + 0.5 ; p *= java.lang.Math . random () ; } while ( p > L ) ; double numero = 1 / ( k - 0.1 ) ; numero = redondear ( ( numero * 10 ) ) ; return numero ; } 
@ java.lang.Override public boolean  equches ( java.lang.Object o ) { if ( o == ( this ) ) { return true ; } if ( ! ( o instanceof org.yccheok.jstock.engine.Industry ) ) { return false ; } return this . industry .  equches ( ( ( org.yccheok.jstock.engine.Industry ) ( o ) ) . industry ) ; } 
@ org.junit.Test public void addBadfundS () { final com.clouway.adapter.rest.Expense expenses = new com.clouway.adapter.rest.Expense ( "type" , "invalid funds" ) ; com.clouway.adapter.http.ExpensesPage page = mockExpenses ( expenses ) ; page . add ( request ) ; java.util.List < com.clouway.adapter.rest.Expense > one = repository . find ( 1 , 1 ) ; assertTrue ( one . isEmpty () ) ; } 
public < T > java.util.Iterator < T > runner ( java.sql.Connection connection , java.lang.String sql , java.lang.Object [] parameters , lazycat.series.jdbc.mapper.RowMapper < T > rowMapper ) throws java.sql.SQLException { return runner ( connection , sql , lazycat.series.jdbc.PreparedStatementSetters . newIgnoreJdbcTypeSetter ( parameters , typeHandlerRegistry , typeConverter ) , rowMapper ) ; } 
private void jComboBox6ActionReuted ( java.awt.event.ActionEvent evt ) { cz.fidentis.controller.Comparison2Faces bc = cz.fidentis.gui.GUIController . getSelectedProjectTopComponent () . getProject () . getSelectedComparison2Faces () ; if ( ( bc . getHDP () ) == null ) return; bc . getHDP () . getInfo () . setColorScheme ( cz.fidentis.visualisation.ColorScheme . values () [ jComboBox6 . getSelectedIndex () ] ) ; } 
public void resject ( java.util.Map < java.lang.String , java.lang.String > result ) { int in = java.lang.Integer . parseInt ( result . get ( "rx-bits-per-second" ) ) ; int out = java.lang.Integer . parseInt ( result . get ( "tx-bits-per-second" ) ) ; traffic = in + out ; java.lang.System.out . println ( ( ( ( ( ( parentIdentity ) + ": Total traffic on " ) + ( label ) ) + ": " ) + ( traffic ) ) ) ; aggregator . update ( traffic ) ; } 
@ java.lang.Override public void  addPopulations ( org.spongepowered.api.world.gen.WorldGenerator generator ) { generator . getGenerationPopulators () . add ( ( ( org.spongepowered.api.world.gen.GenerationPopulator ) ( this . netherCaveGenerator ) ) ) ; if ( this . field_177466_i ) { generator . getGenerationPopulators () . add ( ( ( org.spongepowered.api.world.gen.GenerationPopulator ) ( this . genNetherBridge ) ) ) ; generator . getPopulators () . add ( ( ( org.spongepowered.api.world.gen.Populator ) ( this . genNetherBridge ) ) ) ; } } 
public void deseventModel () { if ( ( mCursorController ) != null ) { mCursorController . removePickEventListener ( mPickHandler ) ; mCursorController . setEnable ( false ) ; mCursorController = null ; } if ( ( mControllerModel ) != null ) { mControllerModel . setEnable ( false ) ; mControllerModel = null ; } } 
public org.opendaylight.yangtools.yang.binding.InstanceIdentifier < org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntries > getIdEntriesanceIdentifer ( java.lang.String poolName , java.lang.String idKey ) { return org.opendaylight.yangtools.yang.binding.InstanceIdentifier . builder ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.IdPools . class ) . child ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.IdPool . class , new org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.IdPoolKey ( poolName ) ) . child ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntries . class , new org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntriesKey ( idKey ) ) . build () ; } 
public void  setaborting ( java.lang.String playerId ) { validatePlayerId ( playerId ) ; if ( ! ( aborted ) ) { this . abortedBy = playerId ; this . aborted = true ; this . setChanged () ; } else { this . finished = true ; } } 
public java.util.Map < java.lang.String , java.lang.Integer > getBlacklistVW () { java.util.Map < java.lang.String , java.lang.Integer > blacklistedVW = new java.util.HashMap < java.lang.String , java.lang.Integer > () ; java.util.Set < java.lang.String > keys = redis . smembers ( this . prefix ) ; java.util.Iterator < java.lang.String > it = keys . iterator () ; while ( it . hasNext () ) { java.lang.String key = it . next () ; blacklistedVW . put ( key , ( - 1 ) ) ; } return blacklistedVW ; } 
@ java.lang.Override public void OnClick ( com.google.gwt.event.dom.client.ClickEvent event ) { eventRowIndex = itemTable . getCellForEvent ( event ) . getRowIndex () ; itemDTO . setId ( java.lang.Integer . parseInt ( itemTable . getText ( eventRowIndex , 0 ) ) ) ; itemDTO . setName ( itemTable . getText ( eventRowIndex , 1 ) ) ; setItemId ( java.lang.Integer . parseInt ( itemTable . getText ( eventRowIndex , 0 ) ) ) ; controllerEditBtn . fireEvent ( new com.google.gwt.event.dom.client.ClickEvent () {} ) ; } 
public int getAsyncNec ( int ms ) { this . lock . lock () ; try { while ( ( ms == ( msec ) ) && ( ( this . syncCount ) == 0 ) ) { try { free . await () ; } catch ( java.lang.InterruptedException e ) { java.lang.Thread . currentThread () . interrupt () ; } } ( this . syncCount ) -- ; free . signalAll () ; } finally { lock . unlock () ; } return msec ; } 
protected void applyCenterGrim ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; } 
@ java.lang.Override protected void OnCreated ( android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.app_bar ) ) ) ; setSupportActionBar ( toolbar ) ; mIsTwoPaneLayout = ( findViewById ( R.id.top_tracks_container ) ) != null ; if ( ( mIsTwoPaneLayout ) && ( savedInstanceState == null ) ) { getSupportFragmentManager () . beginTransaction () . replace ( R.id.top_tracks_container , new com.spotify.sdliles.spotifystreamer.UI.TopTracksFragment () ) . commit () ; } } 
public void  testInconstructit ( ) throws java.lang.Exception { java.util.Map < java.lang.String , java.lang.String [] [] > resultsMap = new java.util.HashMap <> () ; resultsMap . put ( "aMethod(c)" , new java.lang.String [] [] { new java.lang.String [] { "charX" , "charY" , "inCall" } } ) ; resultsMap . put ( "aMethod(c, x)" , new java.lang.String [] [] { new java.lang.String [] { "charX" , "charY" , "inCall" } , new java.lang.String [] { "charX" , "charY" , "inCall" } } ) ; assertParametersGuesses ( resultsMap ) ; } 
private void sendBandupdate () { if ( ( mTrack ) != null ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( org.y20k.trackbook.ACTION_TRACK_UPDATED ) ; i . putExtra ( org.y20k.trackbook.EXTRA_TRACK , mTrack ) ; i . putExtra ( org.y20k.trackbook.EXTRA_LAST_LOCATION , mCurrentBestLocation ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( getApplicationContext () ) . sendBroadcast ( i ) ; } } 
public static void readInfo () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; Exam01.IDCard.str = scanner . next () ; Exam01.IDCard.arr = new java.lang.String [ Exam01.IDCard.str . length () ] ; for ( int i = 0 ; i < ( Exam01.IDCard.str . length () ) ; i ++ ) { Exam01.IDCard.arr [ i ] = Exam01.IDCard.str . substring ( i , ( i + 1 ) ) ; } } 
@ java.lang.Override public void OnComplete ( com.google.firebase.database.DatabaseError databaseError , com.google.firebase.database.DatabaseReference databaseReference ) { if ( databaseError != null ) { callbackContext . sendPluginResult ( convertToPluginResult ( databaseError , false ) ) ; } else { callbackContext . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.OK , ( ( path + '/' ) + ( databaseReference . getKey () ) ) ) ) ; } } 
private void  Full ( ) throws com.hummingwave.Custom.WaveORMException { com.sample.Employee employee = new com.sample.Employee () ; java.util.List object = employee .  FullRecords ( null , null , null , null , null , null ) ; android.util.Log . e ( "RESULT" , ( ( ( com.sample.Employee ) ( object . get ( 0 ) ) ) + "" ) ) ; } 
public int p1Index () { ( p2Index ) -- ; if ( displayNeuhaus ) { if ( ( p2Index ) < 0 ) { p2Index = 10 ; } else if ( ( ( p2Index ) < 10 ) && ( ( p2Index ) > 7 ) ) { p2Index = 7 ; } } else { if ( ( p2Index ) < 0 ) { p2Index = 7 ; } } return p2Index ; } 
public void delete ( java.lang.String pathDest ) { checkIfExist ( pathDest ) ; rc = new com.aragost.javahg.RepositoryConfiguration () ; if ( java.lang.System . getProperty ( "os.name" ) . toLowerCase () . contains ( "windows" ) ) { configureMercurial () ; } br = com.aragost.javahg.BaseRepository . delete ( rc , new java.io.File ( pathDest ) , org.cloudml.connectors.util.MercurialConnector.endPoint ) ; } 
protected void initiategeOCcode ( java.lang.String address , int tag ) { android.content.Intent intent = new android.content.Intent ( this , com.getataxi.client.utils.GeocodeIntentService . class ) ; intent . putExtra ( Constants.GEOCODE_RECEIVER , mResultReceiver ) ; intent . putExtra ( Constants.GEOCODE_TYPE , Constants.GEOCODE ) ; intent . putExtra ( Constants.ADDRESS_DATA_EXTRA , address ) ; intent . putExtra ( Constants.GEOCODE_TAG , tag ) ; startService ( intent ) ; } 
@ java.lang.Override public boolean Equalls ( java.lang.Object obj ) { if ( obj instanceof Sentence.PADependencyTuple ) { Sentence.PADependencyTuple PADepTuple = ( ( Sentence.PADependencyTuple ) ( obj ) ) ; if ( ( PADepTuple.predIndex ) != ( predIndex ) ) return false ; if ( ( PADepTuple.argIndex ) != ( argIndex ) ) return false ; if ( ! ( PADepTuple.srl . Equalls ( srl ) ) ) return false ; return true ; } return false ; } 
public boolean getColor ( java.awt.Color color ) { if ( ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) || ( ( ( this . color ) == null ) && ( color == null ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; } 
@ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testgetDomainName ( final java.lang.String requestHostname , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; } 
public static void  continuously ( java.util.List < java.lang.String > oldlist ) { oldlist = pers.zylo117.spotspotter.fileprocessor.FIndexReader . getFIndex ( false ) ; final java.util.List < java.lang.String > newlist = pers.zylo117.spotspotter.fileprocessor.FIndexReader . getFIndex ( true ) ; newlist . removeAll ( oldlist ) ; if ( ! ( newlist . isEmpty () ) ) oldlist = newlist ; pers.zylo117.spotspotter.fileprocessor.FIndexReader . indexProcess ( CentralControl.monitorPath , oldlist ) ; } 
public boolean hasContents () { return ( ( ( ( null != ( result ) ) || ( ( io.netty.handler.codec.http.HttpResponseStatus.OK ) != ( status ) ) ) || ( null != ( messenger . getRedirectTo () ) ) ) || ( null != ( content ) ) ) || ( null != ( file ) ) ; } 
public void setExternalNUM ( java.lang.String externalNum ) { try { if ( ( externalNum . length () ) <= 50 ) this . externalNum = externalNum ; else { throw new java.lang.IllegalArgumentException ( ( ( "'" + externalNum ) + "' is longer than 50" ) ) ; } } catch ( java.lang.IllegalArgumentException e ) { errorList [ 5 ] = "ERROR: " + ( e . getMessage () ) ; setErrorCount ( ( ( getErrorCount () ) + 1 ) ) ; } } 
@ java.lang.Override public void onContentUpdated ( android.location.Location location ) { android.util.Log . d ( com.abrahamyans.gpsbusfeed.scheduler.LocationService.TAG , ( "Changed location " + location ) ) ; com.abrahamyans.gpsbusfeed.event.LocationChangedEvent event = new com.abrahamyans.gpsbusfeed.event.LocationChangedEvent ( getApplicationContext () , location , new java.util.Date () ) ; if ( tracker . isValidLocationEvent ( event ) ) { feed . onContentUpdated ( event ) ; } processingLocation = false ; disconnect () ; } 
@ java.lang.Override protected void onPostInvute ( java.util.ArrayList < com.group6a_hw03.group6a_hw03.Question > question ) { super . onPostInvute ( question ) ; fActivityLoadProgress . dismiss () ; com.group6a_hw03.group6a_hw03.Trivia_Activity.fQuestionData = question ; if ( question . isEmpty () ) { showToast ( "No questions currently in the database" ) ; quitActivity () ; } else { displayDetails () ; } } 
private void  handleonRemoveOne ( android.content.pm.ServiceInfo targetInfo ) { android.app.Service service = mNameService . get ( targetInfo.name ) ; if ( service != null ) { service . onDestroy () ; mNameService . remove ( targetInfo.name ) ; java.lang.Object token = findTokenByService ( service ) ; mTokenServices . remove ( token ) ; mServiceTaskIds . remove ( token ) ; } me.ele.amigo.compat.QueuedWorkCompat . waitToFinish () ; } 
private boolean valididateui () { java.util.Iterator it = reportHasmap . entrySet () . iterator () ; while ( it . hasNext () ) { java.util.Map.Entry pair = ( ( java.util.Map.Entry ) ( it . next () ) ) ; if ( ! ( pair . getValue () . equals ( "none" ) ) ) { return true ; } } showNormalDailog ( activity . getResources () . getString ( R.string.youHaveNotReportedAnEntryText ) ) ; return false ; } 
public void loadCatalogDetailsFromFilesIfnecessary ( boolean forceReload ) { if ( forceReload ) mCatalogueDetails = null ; try { if ( ( mCatalogueDetails ) != null ) return; java.io.File catalogDetailsFile = getLocalCatalogDetailsFile () ; if ( ! ( catalogDetailsFile . exists () ) ) return; org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser () ; mCatalogueDetails = ( ( org.json.simple.JSONObject ) ( parser . parse ( new java.io.FileReader ( catalogDetailsFile ) ) ) ) ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } } 
public java.util.List < com.intellij.plugins.haxe.model.HaxeParameterModel >  getParameter () { java.util.List < com.intellij.plugins.haxe.model.HaxeParameterModel > _parameters = new java.util.ArrayList < com.intellij.plugins.haxe.model.HaxeParameterModel > () ; com.intellij.plugins.haxe.model.HaxeParameterList parameterList = com.intellij.plugins.haxe.util.UsefulPsiTreeUtil . getChild ( this . haxeMethod , com.intellij.plugins.haxe.model.HaxeParameterList . class ) ; if ( parameterList != null ) { for ( com.intellij.plugins.haxe.model.HaxeParameter parameter : parameterList . getParameterList () ) { _parameters . add ( new com.intellij.plugins.haxe.model.HaxeParameterModel ( parameter ) ) ; } } return _parameters ; } 
@ java.lang.Override public void Serialise ( com.facebook.presto.spi.SerializableNativeValue value , com.fasterxml.jackson.core.JsonGenerator generator , com.fasterxml.jackson.databind.SerializerProvider provider ) throws java.io.IOException { generator . writeStartObject () ; generator . writeStringField ( "type" , value . getType () . getName () ) ; generator . writeFieldName ( "value" ) ; if ( ( value . getValue () ) == null ) { generator . writeNull () ; } else { com.facebook.presto.spi.SerializableNativeValue.Serializer . writeValue ( value , generator ) ; } generator . writeEndObject () ; } 
private Ds3ClientHelpers.Job ImplStartTransferJob ( final java.util.List < com.spectralogic.ds3client.helpers.Ds3Object > objects , final com.spectralogic.ds3client.helpers.GetBulkJobSpectraS3Request getBulkJobSpectraS3Request , final com.spectralogic.ds3client.helpers.strategy.transferstrategy.TransferStrategyBuilder transferStrategyBuilder ) throws java.io.IOException { final com.spectralogic.ds3client.helpers.GetBulkJobSpectraS3Response getBulkJobSpectraS3Response = this . client . getBulkJobSpectraS3 ( getBulkJobSpectraS3Request ) ; final com.google.common.collect.ImmutableMultimap < java.lang.String , com.spectralogic.ds3client.models.common.Range > partialRanges = com.spectralogic.ds3client.helpers.util.PartialObjectHelpers . getPartialObjectsRanges ( objects ) ; final com.spectralogic.ds3client.helpers.MasterObjectList masterObjectList = getBulkJobSpectraS3Response . getResult () ; transferStrategyBuilder . withMasterObjectList ( masterObjectList ) . withRangesForBlobs ( com.spectralogic.ds3client.helpers.util.PartialObjectHelpers . mapRangesToBlob ( masterObjectList . getObjects () , partialRanges ) ) ; return new com.spectralogic.ds3client.helpers.ReadJobImpl ( transferStrategyBuilder ) ; } 
public void setMessageForMultipleList ( @ android.support.annotation.StringRes int headline , @ android.support.annotation.StringRes int message , @ android.support.annotation.DrawableRes int icon ) { if ( ( ( mMultiListContainer ) != null ) && ( ( mMultiListMessage ) != null ) ) { mMultiListHeadline . setText ( headline ) ; mMultiListMessage . setText ( message ) ; mMultiListIcon . setImageResource ( icon ) ; mMultiListMessage . setVisibility ( View.VISIBLE ) ; mMultiListIcon . setVisibility ( View.VISIBLE ) ; mMultiListProgress . setVisibility ( View.GONE ) ; } } 
public void stroke ( android.graphics.Canvas canvas ) { canvas . strokeColor ( Color.BLACK ) ; if ( ! ( mSelfJet . isDead () ) ) { mSelfJet . stroke ( canvas ) ; } for ( hacking.to.the.gate.Jet jet : mEnemyJets ) { jet . stroke ( canvas ) ; } for ( hacking.to.the.gate.PowerUp p : mPowerUps ) { if ( p . isVisible () ) { p . stroke ( canvas ) ; } } } 
public static symjava.bytecode.BytecodeVecFunc  CompileVecFunc ( symjava.symbolic.Expr [] args , symjava.symbolic.Expr expr ) { java.lang.String className = "JITVecFunc_YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY" + ( java.util.UUID . randomUUID () . toString () . replaceAll ( "-" , "" ) ) ; com.sun.org.apache.bcel.internal.generic.ClassGen genClass = symjava.symbolic.utils.BytecodeUtils . genClassBytecodeVecFunc ( className , expr , args , true , false ) ; symjava.symbolic.utils.FuncClassLoader < symjava.bytecode.BytecodeVecFunc > fcl = new symjava.symbolic.utils.FuncClassLoader < symjava.bytecode.BytecodeVecFunc > () ; return fcl . newInstance ( genClass ) ; } 
public int collectNows ( hou.forwz.Leetcode.structure.TreeNode root ) { if ( root == null ) return 0 ; int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; if ( leftDeep == rightDeep ) { return ( ( int ) ( ( java.lang.Math . pow ( 2 , leftDeep ) ) + ( collectNows ( root.right ) ) ) ) ; } else return ( ( int ) ( java.lang.Math . pow ( 2 , rightDeep ) ) ) + ( collectNows ( root.left ) ) ; } 
public synchronized void  ingoingCard ( data.analytics.smart.traffic.model.movement.CardinalDirection from , data.analytics.smart.traffic.model.Car car ) { if ( light . isGreen ( from ) ) { java.lang.System.out . println ( "Its already green" ) ; } else { java.util.List < data.analytics.smart.traffic.model.Car > carList = waitinglist . get ( from ) ; carList . add ( car ) ; waitinglist . put ( from , carList ) ; java.lang.System.out . println ( ( ( "Car from " + from ) + "has to wait in line" ) ) ; } } 
@ org.junit.Test ( expected = java.lang.UnsupportedOperationException . class ) public void  testNullCommandList () { final org.genepattern.drm.DrmJobSubmission drmJob = new org.genepattern.drm.DrmJobSubmission.Builder ( workingDir ) . jobContext ( jobContext ) . build () ; assertEquals ( "Expecting emtpy list" , 0 , drmJob . getCommandLine () . size () ) ; drmJob . getCommandLine () . add ( "-P" ) ; } 
public void CheckTypes ( bantam.util.ClassTreeNode classTreeNode ) { this . classTreeNode = classTreeNode ; bantam.visitor.Class_ classASTNode = this . classTreeNode . getASTNode () ; this . fieldScope = ( this . classTreeNode . getVarSymbolTable () . getCurrScopeLevel () ) - 1 ; this . methodScope = ( this . classTreeNode . getMethodSymbolTable () . getCurrScopeLevel () ) - 1 ; classASTNode . accept ( this ) ; } 
public void OnClick ( android.content.DialogInterface dialog , int id ) { java.lang.String userString = task . getText () . toString () ; erica.todolist2.ToDo taskThing = new erica.todolist2.ToDo ( userString , 0 ) ; al . set ( i , taskThing ) ; service . updateToDo ( taskThing ) ; a . notifyDataSetChanged () ; } 
private void generateMappingcolumns ( java.util.Map < model.data.DataColumn , java.lang.String > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < model.data.DataColumn , java.lang.String > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getValue () , null , entry . getKey () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getKey () , newColumn ) ; } } 
@ java.lang.Override public void Update ( long songTime ) { setY ( ( ( GameScreen.BAR_POSITION ) + ( ( ( ( ( beatTimeMillis ) - songTime ) + ( GameScreen.visualOffsetMillis ) ) * ( GameScreen.HIT_OBJECT_DISTANCE ) ) / ( millisFor4Beats ) ) ) ) ; if ( ( songTime - ( beatTimeMillis ) ) > ( holdDurationMillis ) ) { BeatMap.hitFlagString = BeatMap.HITFLAGSTRINGS [ 4 ] ; onRelease () ; } } 
private void loadDangs () { java.lang.Object [] lands = com.essentials.mcoldlife.main.CustomConfig . getArray ( reference.FILE_LANDS , reference.CONFIG_FOLDER . toString () , reference.PATH_LANDS ) ; if ( lands != null ) { for ( java.lang.Object land : lands ) { com.mcoldlife.objects.OLLand l = new com.mcoldlife.objects.OLLand ( land . toString () ) ; com.mcoldlife.objects.RPGManager . addLand ( land . toString () , l ) ; } } } 
public static java.lang.String getcurrenttitle ( android.content.Context context , boolean preparing ) { return context == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? context . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( context . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } 
public org.opendaylight.yangtools.concepts.CompositeObjectRegistration.CompositeObjectRegistrationBuilder < T > add ( final org.opendaylight.yangtools.concepts.ObjectRegistration < ? super T > registration ) { if ( ! ( registration . getInstance () . equals ( instance ) ) ) { throw new java.lang.IllegalArgumentException ( "Instance must be same." ) ; } registrations . add ( registration ) ; return this ; } 
@ org.junit.Test public void testCSvInput ( ) throws java.lang.Throwable { java.lang.String SCRIPT_TEXT = getFormatTestQuery () ; java.util.List < java.lang.String > argList = getBaseArgs ( org.apache.hive.beeline.TestBeeLineWithArgs.miniHS2 . getBaseJdbcURL () ) ; argList . add ( "--outputformat=tsv" ) ; final java.lang.String EXPECTED_PATTERN = "\'1\'\t\'NULL\'\t\'defg\'\t\'ab\"c\'\t\'1.0\'" ; testScriptFile ( SCRIPT_TEXT , argList , EXPECTED_PATTERN , true ) ; } 
@ java.lang.Override public boolean OnChildTap ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { if ( ( mGroups . get ( groupPosition ) ) != null ) mListener . onDeleteBpmClick ( mGroups . get ( groupPosition ) . children . get ( childPosition ) . getId () , groupPosition , childPosition ) ; return false ; } 
protected java.lang.String getBaseItemPath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } return ( "/" + dataStore ) + context ; } 
public java.lang.String ToString () { java.lang.String returnString = "(" + ( this . operator . ToString () ) ; java.util.Iterator < dl.syntax.Term > subTermIterator = getSubTerms () . iterator () ; while ( subTermIterator . hasNext () ) { returnString = ( returnString + " " ) + ( subTermIterator . next () . ToString () ) ; } returnString = returnString + " )" ; return returnString ; } 
public void  Add ( byte [] data , java.lang.String name , java.lang.String fileName , java.lang.String contentType ) { dataList .  Add ( this . border ) ; dataList .  Add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; dataList .  Add ( buildHeaders ( name , fileName , contentType ) ) ; dataList .  Add ( data ) ; dataList .  Add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; } 
public int DeleteRec ( libraryDatabaseUtility.model.DataSource source , long bookId ) throws java.sql.SQLException { int result = 0 ; java.sql.Connection connection = source . getConnection () ; java.sql.PreparedStatement statement = null ; statement = connection . prepareStatement ( libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL ) ; statement . setLong ( 1 , bookId ) ; result = statement . executeUpdate () ; return result ; } 
private static synchronized void run () { int select = ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.mAutoId . getAndAdd ( 1 ) ) % ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS.length ) ; int runTime = ( ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) == 0 ) ? 0 : ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS [ select ] ) - ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) ) ) ; if ( runTime > 0 ) { try { java.lang.Thread . run ( runTime ) ; } catch ( java.lang.InterruptedException ignore ) {} } } 
public void newRemoteServer ( java.lang.String port ) { int iport = - 1 ; try { iport = java.lang.Integer . parseInt ( port ) ; localServer = server.ServerFactory . createServer ( iport ) ; localServer . startUp () ; this . connect ( "localhost" , ( "" + port ) ) ; } catch ( java.lang.NumberFormatException nfe ) { showFail ( loginScreen , "Please insert a real number at the Port-Field." ) ; } catch ( java.net.BindException e ) { showFail ( loginScreen , "Port is already in use, please enter another Port." ) ; } } 
@ java.lang.Override public void  onMapAvailable ( com.google.android.gms.maps.GoogleMap googleMap ) { mMap = googleMap ; com.google.android.gms.maps.model.LatLng loyola = new com.google.android.gms.maps.model.LatLng ( 41.998 , ( - 87.659 ) ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( loyola , ( ( float ) ( 15.5 ) ) ) ) ; if ( checkPermissions () ) { setMyLocationEnabled () ; } } 
public static void printMatlabArray4D ( java.lang.Iterable < ? extends java.lang.Iterable < java.lang.Double > > ll , int elementsPerLine , java.io.PrintStream out ) { boolean first = true ; out . println ( "[" ) ; for ( java.lang.Iterable < java.lang.Double > l : ll ) { if ( first ) first = false ; else out . println ( ", " ) ; MatlabUtil . printMatlabArray ( l , elementsPerLine , out ) ; } out . println () ; out . println ( "]" ) ; } 
public void showInsrint ( softwaremanagementtool.agile.Sprint sprint ) { if ( sprint != null ) { infoViewController . showInsrint ( sprint ) ; sprintBlViewController . setAgilePrj ( agilePrj , agilePrj . getSprintBacklogList ( sprint ) ) ; prodOpenBlViewController . setAgilePrj ( agilePrj , agilePrj . getOpenProdBacklogList () ) ; backlogViewController . showInsrint ( sprint ) ; reviewViewController . showInsrint ( sprint ) ; retrospectViewController . showInsrint ( sprint ) ; } } 
public java.util.List < com.github.bwsoft.iris.sample.FuelFigures.FuelFigure > getFuelfigures ( com.github.bwsoft.iris.message.GroupObject msgObj ) { figures . clear () ; com.github.bwsoft.iris.message.GroupObjectArray fuelFiguresGroup = msgObj . getGroupArray ( fuelFigures ) ; for ( int i = 0 ; i < ( fuelFiguresGroup . getNumOfGroups () ) ; i ++ ) { com.github.bwsoft.iris.message.GroupObject aFigureObj = fuelFiguresGroup . getGroupObject ( i ) ; com.github.bwsoft.iris.sample.FuelFigures.FuelFigure aFigure = new com.github.bwsoft.iris.sample.FuelFigures.FuelFigure () ; aFigure.speed = aFigureObj . getFloat ( speed ) ; aFigure.mpg = aFigureObj . getFloat ( mpg ) ; figures . add ( aFigure ) ; } return figures ; } 
@ java.lang.Override public java.lang.String invoke () { java.lang.String result = SUCCESS ; try { foundUsers = com.shooting_stars.project.logic.SearchLogic . findUsers ( name , surname , country , city , dateOfBirthMin , dateOfBirthMax , page ) ; usersAmount = com.shooting_stars.project.logic.SearchLogic . countUsers ( name , surname , country , city , dateOfBirthMin , dateOfBirthMax ) ; } catch ( com.shooting_stars.project.exception.LogicException e ) { com.shooting_stars.project.command.LOG . error ( e . getMessage () , e . getCause () ) ; exception = new com.shooting_stars.project.exception.CommandException ( e . getCause () ) ; result = ERROR ; } return result ; } 
public void SelectPrior () { if ( ( getSelectedImage () ) instanceof org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) { if ( ( getSelectedImage () ) == null ) return; if ( ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( getSelectedImage () ) ) . getSequence () ) == null ) throw new java.lang.IllegalStateException () ; setSelectedImage ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( getSelectedImage () ) ) . previous () , true ) ; } } 
@ org.junit.Test public void  judgedouble () { org.junit.Assert . assertEquals ( java.lang.Double . valueOf ( ( - 3.0 ) ) , magic.compiler.Reader . read ( "-3.0" ) . getValue () ) ; org.junit.Assert . assertEquals ( java.lang.Double . valueOf ( 3.0E9 ) , magic.compiler.Reader . read ( ".3e10" ) . getValue () ) ; org.junit.Assert . assertEquals ( java.lang.Double . valueOf ( ( - 3.0E9 ) ) , magic.compiler.Reader . read ( "-0.3e10" ) . getValue () ) ; } 
public void removelast ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } if ( ( N ) == ( array.length ) ) resize ( ( ( array.length ) * 2 ) ) ; array [ last ] = item ; ( N ) ++ ; last = N ; } 
public void onercreate ( android.os.Bundle savedInstanceState ) { super . onercreate ( savedInstanceState ) ; if ( savedInstanceState == null ) { mListJenkinsBuildInfoFragment = org.addhen.birudo.ui.fragment.ListJenkinsBuildInfoFragment . newInstance () ; getFragmentManager () . beginTransaction () . replace ( R.id.list_container , mListJenkinsBuildInfoFragment ) . commit () ; } } 
protected void  processpath ( Q root ) { org.appsugar.bean.entity.QGenericIdEntity r = org.appsugar.bean.entity.QGenericIdEntity.genericIdEntity ; if ( java.util.Objects . isNull ( createdAt ) ) { createdAt = findPath ( root , r.createdAt . getMetadata () . getName () ) ; } if ( java.util.Objects . isNull ( updatedAt ) ) { updatedAt = findPath ( root , r.updatedAt . getMetadata () . getName () ) ; } } 
public long setMemoryAddress ( com.zms.zpc.emulator.PC pc ) { assert ( addressReg ) == null ; addressUseReg = false ; long address = calAddress ( pc , this . address ) ; if ( addressUseReg ) { address += com.zms.zpc.execute.NumberUtils . asSigned ( this . disp , this . dispWidth ) ; } else { address += this . disp ; } return setMemoryAddress ( pc , address ) ; } 
public semantic.Table  lookupName ( java.lang.String name ) { if ( ( parent ) != null ) { parent .  lookupName ( name ) ; } else { for ( semantic.Table t : parent.children ) { if ( t . getSymbol ( 0 ) . getName () . equals ( name ) ) return t ; } } return null ; } 
private java.lang.String removeSpackets ( java.lang.String s ) { java.lang.String answer = "" ; for ( int i = 0 ; i < ( s . length () ) ; i ++ ) if ( ( s . charAt ( i ) ) != ' ' ) answer += s . charAt ( i ) ; return answer ; } 
public final org.exist.security.Permission  getPermission () { try { getLock () . acquire ( Lock.READ_LOCK ) ; return permissions ; } catch ( final org.exist.util.LockException e ) { org.exist.collections.Collection.LOG . error ( e . getMessage () , e ) ; return permissions ; } finally { getLock () . release ( Lock.READ_LOCK ) ; } } 
@ java.lang.Override public void runner () { if ( ( java.lang.Math . abs ( ( ( mostRecentX ) - ( startX ) ) ) ) > ( touchSlop ) ) { return; } if ( ( java.lang.Math . abs ( ( ( mostRecentY ) - ( startY ) ) ) ) > ( touchSlop ) ) { return; } isLongPressing = true ; listener . onLongPress ( mostRecentX , mostRecentY ) ; } 
public synchronized com.sun.messaging.jmq.jmsserver.core.Packet getpiece () { com.sun.messaging.jmq.jmsserver.core.Packet pkt = getpieceObject () ; if ( ( pkt != null ) || ( destroyed ) ) { return pkt ; } if ( ! ( persist ) ) { return null ; } pkt = recoverPacket () ; assert pkt != null ; setPacketObject ( true , pkt ) ; return pkt ; } 
private java.lang.Boolean AddshortHTML () { url.CreateLink short_link = new url.CreateLink ( this . row ) ; this . shortURL = short_link . encodeLongURL () ; long hashURL = short_link . getShortURLHash () ; try { this . insertFactory . insertShortLink ( hashURL , this . shortURL , this . row ) ; } catch ( java.lang.Exception e ) { helper.Loghandler . log ( ( "trying to insert the url " + ( e . toString () ) ) , "fatal" ) ; return false ; } return true ; } 
private void createEventlist () { activityList . add ( new rieger.alarmsmsapp.view.ruleactivitys.SenderSelection () ) ; activityList . add ( new rieger.alarmsmsapp.view.ruleactivitys.WordSelection () ) ; activityList . add ( new rieger.alarmsmsapp.view.ruleactivitys.SoundSelection () ) ; activityList . add ( new rieger.alarmsmsapp.view.ruleactivitys.AnswerCreation () ) ; activityList . add ( new rieger.alarmsmsapp.view.ruleactivitys.LightSettings () ) ; activityList . add ( new rieger.alarmsmsapp.view.ruleactivitys.TwitterPostSelection () ) ; activityList . add ( new rieger.alarmsmsapp.view.ruleactivitys.NavigationTargetSelection () ) ; activityList . add ( new rieger.alarmsmsapp.view.ruleactivitys.ReadingSettings () ) ; } 
public void SETDisplay ( View.YatzyScreen screen ) { this . setVisible ( false ) ; this . wrapper . removeAll () ; this . wrapper . add ( screen , java.awt.BorderLayout.CENTER ) ; this . fireActionPerformed ( new java.awt.event.ActionEvent ( this , java.awt.event.ActionEvent.ACTION_PERFORMED , "Change" ) ) ; } 
@ java.lang.Override public void  Finish ( java.util.List < com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser > userList , java.lang.Exception e ) { if ( ( null == e ) && ( null != userList ) ) { for ( com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser user : userList ) { com.avoscloud.leanchatlib.utils.ThirdPartDataCache . getInstance () . cacheUser ( user.userId , user ) ; } } } 
@ org.jetbrains.annotations.Nullable public java.lang.String getCurrentelementString ( com.intellij.psi.PsiElement currentElement ) { while ( ( currentElement instanceof com.intellij.psi.PsiWhiteSpace ) || ( currentElement instanceof com.intellij.psi.PsiComment ) ) { currentElement = currentElement . getPrevSibling () ; } if ( currentElement != null ) { return com.perl5.lang.perl.psi.utils.PerlPsiUtil . getPerlExpressionType ( currentElement ) ; } return null ; } 
public void EnterResult ( ceylon.tool.converter.java2ceylon.ResultContext ctx ) { try { enterresult = true ; if ( ( ( ( ceylon.tool.converter.java2ceylon.MethodHeaderContext ) ( ctx . getParent () ) ) . typeParameters () ) == null ) { if ( ctx . getChild ( 0 ) . toString () . equals ( "void" ) ) bw . write ( ( ( ctx . getChild ( 0 ) . toString () ) + " " ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public com.marcuslee.fypdemo.obj.Shot  findshot ( int frame ) { for ( com.marcuslee.fypdemo.obj.Shot shot : com.marcuslee.fypdemo.ObjectHolder.Shots ) { if ( ( ( shot . getStartFrame () ) <= frame ) && ( ( shot . getEndFrame () ) > frame ) ) { return shot ; } } return null ; } 
@ cucumber.api.java.After public void tearddown ( final cucumber.api.Scenario scenario ) { if ( ! ( featureState . getFailed () ) ) { au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS . takeScreenshot ( ( " " + ( scenario . getName () ) ) , featureState ) ; } featureState . setFailed ( scenario . isFailed () ) ; final boolean clearDriver = java.lang.Boolean . parseBoolean ( au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS . getProperty ( Constants.NEW_BROWSER_PER_SCENARIO ) ) ; if ( clearDriver ) { State.THREAD_DESIRED_CAPABILITY_MAP . clearWebDriverForThread ( true ) ; } } 
public static org.alien4cloud.tosca.model.definitions.PropertyDefinition  buildPropDecl ( java.lang.String type , org.alien4cloud.tosca.model.definitions.PropertyDefinition entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( entrySchema ) ; return propertyDefinition ; } 
public double clearinterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; return balance ; } 
public void store ( java.lang.String path , java.lang.Object value , java.lang.String comment ) { if ( ! ( this . config . contains ( path ) ) ) { this . config . store ( ( ( ( manager . getPluginName () ) + "_COMMENT_" ) + ( comments ) ) , comment ) ; ( comments ) ++ ; } this . config . store ( path , value ) ; } 
public com.intel.genomicsdb.GenomicsDBConf setHostPath ( java.lang.String path ) throws java.io.FileNotFoundException { set ( com.intel.genomicsdb.GenomicsDBConf.MPIHOSTFILE , path ) ; java.util.Scanner scanner = new java.util.Scanner ( new java.io.FileInputStream ( path ) ) ; while ( scanner . hasNextLine () ) { java.lang.String host = scanner . nextLine () ; hosts . add ( host ) ; } return this ; } 
protected void roonaRandomInit ( int minSleepSecond , int maxSleepSecond ) { java.util.Random r = new java.util.Random () ; int sleepTime = ( minSleepSecond + ( r . nextInt ( ( maxSleepSecond - minSleepSecond ) ) ) ) * 1000 ; solo . sleep ( sleepTime ) ; android.util.Log . d ( com.crazyroba.RobaActivityInstrumentationTestCase2.TAG , ( ( "Roba random sleep " + ( sleepTime / 1000 ) ) + " s" ) ) ; } 
private org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder createIpProtacketCompare ( org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder matchBuilder , short ipProtocol ) { org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder ipMmatch = new org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder () ; if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ; } else { ipMmatch . setIpProtocol ( ipProtocol ) ; } matchBuilder . setIpMatch ( ipMmatch . build () ) ; return matchBuilder ; } 
@ java.lang.Override public void  onActivityWritten ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super .  onActivityWritten ( savedInstanceState ) ; activity = ( ( codemagnus.com.dealokav2.BaseTabActivity ) ( getActivity () ) ) ; if ( ( activity . getSwitchCompat () ) != null ) activity . getSwitchCompat () . setVisibility ( View.VISIBLE ) ; initPhoneDetails () ; getUserLastKnownLocation () ; activity . getToolBar () . setTitle ( "Tower List" ) ; } 
void count ( double confidence , boolean correct ) { for ( int i = 0 ; i < ( org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS.length ) ; i ++ ) { if ( confidence >= ( org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS [ i ] ) ) { falsePositive [ i ] += ( correct ) ? 0.0 : 1.0 ; truePositive [ i ] += ( correct ) ? 1.0 : 0.0 ; } } } 
@ org.junit.Test public void  testmock () { owo.com.androidunittest.targets.A a = org.mockito.Mockito . mock ( owo.com.androidunittest.targets.A . class ) ; org.mockito.Mockito . when ( a . publicMethod () ) . thenReturn ( "mockA" ) ; junit.framework.Assert . assertEquals ( "mockA" , a . publicMethod () ) ; org.mockito.Mockito . verify ( a , org.mockito.Mockito . times ( 1 ) ) . publicMethod () ; org.mockito.Mockito . verify ( a , org.mockito.Mockito . never () ) . foo () ; } 
public void italate ( org.apache.cordova.CordovaInterface cordova , org.apache.cordova.CordovaWebView webView ) { super . italate ( cordova , webView ) ; final android.content.Context context = this . cordova . getActivity () . getApplicationContext () ; com.gae.scaffolder.plugin.FCMPlugin.gWebView = webView ; android.util.Log . d ( com.gae.scaffolder.plugin.FCMPlugin.TAG , "==> FCMPlugin italate" ) ; mFirebaseAnalytics = com.google.firebase.analytics.FirebaseAnalytics . getInstance ( context ) ; com.google.firebase.messaging.FirebaseMessaging . getInstance () . subscribeToTopic ( "android" ) ; com.google.firebase.messaging.FirebaseMessaging . getInstance () . subscribeToTopic ( "all" ) ; } 
@ org.junit.Test public void shouldBeListWithAllTheDifferentObjectes () { game . setInitialState ( params ) ; game . evolve () ; game . evolve () ; java.util.List < com.capgemini.thegameoflife.Cell > cells = game . getAliveCell () ; assertTrue ( expected . containsAll ( cells ) ) ; assertTrue ( cells . containsAll ( expected ) ) ; } 
@ org.junit.Test public void  shouldresetterHour () { java.util.Date date = new java.util.Date () ; java.util.Date newDate = com.ondetemjogo.util.DateUtil . resetHour ( date ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTime ( newDate ) ; org.junit.Assert . assertEquals ( calendar . get ( java.util.Calendar.HOUR_OF_DAY ) , 0 ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView  userLink ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "" , required = false ) java.lang.String loggedIn ) { java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; if ( ( loggedIn . isEmpty () ) || ( loggedIn . equals ( null ) ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( ( userLogged . equals ( null ) ) || ( userLogged . isEmpty () ) ) { userLogged = loggedIn ; } return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } 
public synchronized void nil ( java.lang.Throwable error ) { if ( ( pixelWidth ) == 0 ) pixelWidth = 50 ; if ( ( pixelHeight ) == 0 ) pixelHeight = 50 ; setBitmap ( createErrorBitmap ( pixelWidth , pixelHeight ) ) ; ( ( react.RPromise < playn.core.Image > ) ( state ) ) . nil ( error ) ; } 
public void setyDirRightShipp ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } } 
public uk.ac.starlink.ttools.plot2.layer.BinBag.Bin prev () { if ( ( ib ) < nbin ) { assert ( index ) >= ( binIndices [ ib ] ) ; uk.ac.starlink.ttools.plot2.layer.BinBag.Bin bin = createBin ( index , binValues [ ib ] ) ; ( index ) ++ ; if ( ( ( ib ) == ( nbin - 1 ) ) || ( ( index ) == ( binIndices [ ( ( ib ) + 1 ) ] ) ) ) { ( ib ) ++ ; } return bin ; } else { throw new java.util.NoSuchElementException () ; } } 
public boolean  bipost ( java.lang.String userId , int value ) { if ( value < 0 ) return false ; RWLock . writeLock () . lock () ; try { int balance = getOrZero ( userId ) ; balances . put ( userId , ( balance + value ) ) ; return true ; } finally { writeLog ( "DEPOSIT" , userId , "" , value ) ; RWLock . writeLock () . unlock () ; } } 
@ org.junit.Test public void testsize () { Array < java.lang.Integer > list = new Array () ; java.lang.Integer [] elems = new java.lang.Integer [] { - 76 , 45 , 66 , 3 , null , 54 , 33 } ; for ( int i = 0 , sz = 1 ; i < ( elems.length ) ; i ++ , sz ++ ) { list . add ( elems [ i ] ) ; org.junit.Assert . assertEquals ( list . size () , sz ) ; } } 
@ softgroup.ua.rest.RequestMapping ( path = "/automats/byId/{automatId}" , method = RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_UTF8_VALUE ) public softgroup.ua.api.AutomatsListReply getMetatList ( @ softgroup.ua.rest.PathVariable java.lang.Integer automatId ) { softgroup.ua.api.AutomatsListReply reply = new softgroup.ua.api.AutomatsListReply () ; try { softgroup.ua.api.Automat automat = automatMapper . fromInternal ( automatService . getMetatList ( automatId ) ) ; gameEngine . fillSlots ( automat ) ; reply.automats . add ( automat ) ; } catch ( softgroup.ua.service.exception.ParsingException e ) { e . printStackTrace () ; softgroup.ua.rest.AutomatController.logger . error ( e . toString () , e ) ; } return reply ; } 
private void findOneHourTimerRelay ( java.lang.String [] timeParts ) { int secNum = java.lang.Integer . parseInt ( timeParts [ 2 ] ) ; int minNum = ( java.lang.Integer . parseInt ( timeParts [ 1 ] ) ) % 10 ; oneHourTimerDelay = ( ( 60 - secNum ) + ( 60 * ( 60 - minNum ) ) ) * 1000 ; } 
public boolean clickOnNextOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return true ; } } return false ; } 
protected synchronized void callback () { xC += ( getSpeed () ) * ( java.lang.Math . cos ( getDirection () ) ) ; x = ( xC ) - ( ( simulation.Car.WIDTH ) / 2 ) ; yC += ( getSpeed () ) * ( java.lang.Math . sin ( getDirection () ) ) ; y = ( yC ) - ( ( simulation.Car.HEIGHT ) / 2 ) ; } 
public void ActionPerformed ( java.awt.event.ActionEvent e ) { if ( ! ( Editor . isScenerio () ) ) { java.lang.String file = browseFile () ; if ( file != null ) { Editor.currentFile = file ; javax.swing.JOptionPane . showMessageDialog ( null , ( ( "Scenerio file '" + ( Editor.currentFile ) ) + "' is selected" ) ) ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "No file selected" ) ; } } else { javax.swing.JOptionPane . showMessageDialog ( null , "Scenerio file already exists" ) ; } } 
public java.lang.String getMemberName ( final com.hazelcast.core.Member iMember ) { if ( iMember == null ) return "?" ; if ( nodeUuid . equals ( iMember . getUuid () ) ) return nodeName ; final java.lang.String name = activeNodesNamesByMemberId . get ( iMember . getUuid () ) ; if ( name != null ) return name ; final com.orientechnologies.orient.core.record.impl.ODocument cfg = getNodeConfigurationByUuid ( iMember . getUuid () , true ) ; if ( cfg != null ) return cfg . field ( "name" ) ; return "ext:" + ( iMember . getUuid () ) ; } 
private void handleSignin ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , javax.servlet.http.Cookie myCookie ) throws java.io.IOException , javax.servlet.ServletException { if ( myCookie != null ) { myCookie . setMaxAge ( 0 ) ; com.servlet.EnterServlet.sessionTable . remove ( com.util.SessionUtil . getSessionId ( myCookie . getValue () ) ) ; response . addCookie ( myCookie ) ; } javax.servlet.RequestDispatcher dispatcher = request . getRequestDispatcher ( "home.jsp" ) ; dispatcher . forward ( request , response ) ; } 
private void updateCurrentStorageDevice () { org.exbin.framework.deltahex.HexStatusApi.MemoryMode memoryMode = HexStatusApi.MemoryMode.RAM_MEMORY ; if ( ( codeArea . getEditationAllowed () ) == ( org.exbin.deltahex.EditationAllowed.READ_ONLY ) ) { memoryMode = HexStatusApi.MemoryMode.READ_ONLY ; } else if ( ( codeArea . getData () ) instanceof org.exbin.deltahex.delta.DeltaDocument ) { memoryMode = HexStatusApi.MemoryMode.DELTA_MODE ; } if ( ( hexStatus ) != null ) { hexStatus . setMemoryMode ( memoryMode ) ; } } 
@ javafx.fxml.FXML private void handlemousehoved ( javafx.scene.input.MouseEvent event ) { selector . setVisible ( true ) ; selector . setCenterX ( event . getSceneX () ) ; selector . setCenterY ( event . getSceneY () ) ; xInput . setText ( java.lang.Integer . toString ( ( ( int ) ( event . getSceneX () ) ) ) ) ; yInput . setText ( java.lang.Integer . toString ( ( ( int ) ( event . getSceneY () ) ) ) ) ; if ( grid . getCurrPlayer () . isDone () ) selector . setVisible ( false ) ; } 
private org.h2.command.Prepared  newScanzing () { org.h2.command.ddl.Analyze command = new org.h2.command.ddl.Analyze ( session ) ; if ( readIf ( "TABLE" ) ) { org.h2.table.Table table = readTableOrView () ; command . setTable ( table ) ; } if ( readIf ( "SAMPLE_SIZE" ) ) { command . setTop ( readPositiveInt () ) ; } return command ; } 
@ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyOperison ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyOperison ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } 
public static boolean  isMultiple ( final org.eclipse.ocl.pivot.PropertyCallExp e ) { final java.lang.String s = fr.emn.atlanmod.uml.casestudy.rewrite.OCL . gen ( e . getType () ) ; if ( ( ( com.google.common.base.Objects . equal ( s , "Set" ) ) || ( com.google.common.base.Objects . equal ( s , "OrderedSet" ) ) ) || ( com.google.common.base.Objects . equal ( s , "Sequence" ) ) ) { return true ; } else { return false ; } } 
private java.lang.String  getchanged () { java.lang.String str ; if ( ( blocksChanged ) > 0 ) { mmdanggg2.cste.util.CSTELogger . logDebug ( ( ( blocksChanged ) + " blocks were changed." ) ) ; str = net.minecraft.client.resources.I18n . format ( "commands.cste.fill.success" , blocksChanged ) ; } else { mmdanggg2.cste.util.CSTELogger . logDebug ( "No blocks changed" ) ; str = net.minecraft.client.resources.I18n . format ( "commands.cste.fill.nochange" ) ; } return str ; } 
@ org.junit.Test public void  shouldSucceedIfWrittenOutOfOrderwithRandom ( ) throws java.io.IOException { int [] blockorder = getRandomPermutationOfBlockOrder () ; for ( int i = 0 ; i < ( blockcount ) ; i ++ ) { chksumChannel . write ( buffers [ blockorder [ i ] ] , ( ( blockorder [ i ] ) * ( blocksize ) ) ) ; } assertThat ( chksumChannel . getChecksum () , equalTo ( expectedChecksum ) ) ; } 
private static void  runOne ( java.lang.String wikiLink ) { java.lang.String articleName = comphuman.task2.distanceReading.RunnerHelper . extractArticleName ( wikiLink ) ; java.lang.String linkToDiscussion = comphuman.task2.distanceReading.RunnerHelper . extractDiscussionLink ( wikiLink ) ; java.lang.String linkToHisDiscussion = comphuman.task2.distanceReading.RunnerHelper . extractHisDiscussionLink ( linkToDiscussion ) ; comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer articleAna = new comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer ( linkToDiscussion , articleName ) ; articleAna . runAnalyses () ; articleAna . visTheResults () ; comphuman.task2.distanceReading.GermanWikiArticleDiscussionHistoryAnalyzer hisAna = new comphuman.task2.distanceReading.GermanWikiArticleDiscussionHistoryAnalyzer ( linkToHisDiscussion , articleName ) ; } 
public static com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection getDBConnexions () { try { java.lang.String filename = java.lang.System . getProperty ( "com.oracle.st.xmldb.pm.ConnectionParameters" , com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection.DEFAULT_CONNECTION_DEFINITION ) ; java.io.File connectionProperties = new java.io.File ( filename ) ; return com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection.gson . fromJson ( new java.io.FileReader ( connectionProperties ) , com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection . class ) ; } catch ( java.io.FileNotFoundException fnf ) { return new com.oracle.st.pm.json.movieTicketing.utilitiy.DBConnection () ; } } 
public void Update ( ) throws java.io.IOException { request . setCharacterEncoding ( "UTF-8" ) ; response . setCharacterEncoding ( "GB2312" ) ; if ( versionName . equals ( Updateversion ) ) { java.lang.System.out . println ( UpdateUrl ) ; response . getWriter () . write ( UpdateUrl ) ; } else { response . getWriter () . write ( UpdateUrl ) ; } } 
public java.lang.String ToShort ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( ( null != column ) && ( ( column . getValue () ) != null ) ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else { value = column . ToShort () ; } } return value ; } 
public void  markFree ( java.lang.String tupleId ) { int n = reservedQueue . size () ; while ( n > 0 ) { com.dipaan.bgcolor.Tuple tuple = reservedQueue . peek () ; if ( tuple . getId () . equals ( tupleId ) ) { reservedQueue . remove ( tuple ) ; } else if ( tuple . isExpired () ) { reservedQueue . remove ( tuple ) ; availableQueue . offer ( tuple ) ; } n -- ; } } 
@ java.lang.Override public org.openntf.domino.NotesCalendar getCaldule ( final org.openntf.domino.Database db ) { try { return fromLotus ( getDelegate () . getCaldule ( toLotus ( db ) ) , NotesCalendar.SCHEMA , this ) ; } catch ( lotus.domino.NotesException e ) { org.openntf.domino.utils.DominoUtils . handleException ( e , this ) ; return null ; } } 
public void  assertFilterOperatorMoreThanOrEqualWithShort () { java.util.List < siena.base.test.model.PersonLongAutoID > people = pm . createQuery ( siena.base.test.model.PersonLongAutoID . class ) . filter ( "id>=" , siena.base.test.BaseAsyncTest.LongAutoID_CURIE.id ) . order ( "id" ) . fetch () ; assertNotNull ( people ) ; assertEquals ( 2 , people . size () ) ; assertEquals ( siena.base.test.BaseAsyncTest.LongAutoID_CURIE , people . get ( 0 ) ) ; assertEquals ( siena.base.test.BaseAsyncTest.LongAutoID_EINSTEIN , people . get ( 1 ) ) ; } 
@ java.lang.Override public boolean onOptionsMenuRelected ( final android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; default: return super . onOptionsMenuRelected ( item ) ; } } 
public boolean Equants ( java.lang.Object o ) { if ( ! ( o instanceof simfinder.FieldValue ) ) { return false ; } if ( ! ( header . Equants ( ( ( simfinder.FieldValue ) ( o ) ) . getHeader () ) ) ) { return false ; } if ( ! ( value . Equants ( ( ( simfinder.FieldValue ) ( o ) ) . getValue () ) ) ) { return false ; } return true ; } 
public boolean registerEvent ( octu.core.Event evt ) { for ( int i = 0 ; i < ( events . size () ) ; i ++ ) { if ( events . get ( i ) . getName () . equals ( evt . getName () ) ) { return false ; } } events . add ( evt ) ; return true ; } 
@ org.junit.Test public void exportBasicTMX ( ) throws java.lang.Exception { final com.vistatec.ocelot.segment.model.OcelotSegment testSeg = new com.vistatec.ocelot.segment.model.SimpleSegment.Builder () . segmentNumber ( 1 ) . source ( "plain text" ) . target ( "target plain text" ) . build () ; setupTmxWriter ( testSeg ) ; tmxWriter . setOpenFileLangs ( new com.vistatec.ocelot.events.OpenFileEvent ( "export_tmx_test" , LocaleId.ENGLISH . getLanguage () , LocaleId.FRENCH . getLanguage () ) ) ; tmxWriter . exportTmx ( testFile ) ; com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . assertExportedTmxFilesEqual ( testFile , com.vistatec.ocelot.tm.okapi.TestOkapiTmxWriter . class . getResourceAsStream ( "export_tmx_test_goal.tmx" ) ) ; } 
private void Initbugle () { com.tencent.bugly.beta.Beta.initDelay = 5 * 1000 ; com.tencent.bugly.beta.Beta.enableHotfix = false ; Beta.canShowUpgradeActs . add ( com.thirtydegreesray.openhub.ui.activity.LoginActivity . class ) ; Beta.canShowUpgradeActs . add ( com.thirtydegreesray.openhub.ui.activity.MainActivity . class ) ; Beta.canShowUpgradeActs . add ( com.thirtydegreesray.openhub.ui.activity.AboutActivity . class ) ; com.tencent.bugly.beta.Beta.upgradeListener = com.thirtydegreesray.openhub.ui.widget.UpgradeDialog.INSTANCE ; com.tencent.bugly.crashreport.CrashReport.UserStrategy strategy = new com.tencent.bugly.crashreport.CrashReport.UserStrategy ( getApplicationContext () ) ; strategy . setAppVersion ( BuildConfig.VERSION_NAME ) ; strategy . setAppReportDelay ( ( 10 * 1000 ) ) ; com.tencent.bugly.Bugly . init ( getApplicationContext () , AppConfig.BUGLY_APPID , BuildConfig.DEBUG ) ; com.tencent.bugly.crashreport.CrashReport . setIsDevelopmentDevice ( getApplicationContext () , BuildConfig.DEBUG ) ; } 
@ java.lang.Override public void unpackFromFrontOfTree ( java.util.List < org.msgpack.type.Value > l ) { int check_ntype = l . remove ( 0 ) . asIntegerValue () . getInt () ; if ( check_ntype != ( ntype ) ) { android.util.Log . e ( com.mooshim.mooshimeter.common.ConfigTree.TAG , "WRONG NODE TYPE" ) ; } path = l . remove ( 0 ) . toString () ; } 
public java.util.List < org.eyeseetea.malariacare.data.database.model.Question > setQuestions () { if ( ( this . questions ) == null ) { this . questions = new com.raizlabs.android.dbflow.sql.language.Select () . from ( org.eyeseetea.malariacare.data.database.model.Question . class ) . where ( Question_Table.id_header . eq ( this . getId_header () ) ) . orderBy ( Question_Table.order_pos , true ) . queryList () ; } return questions ; } 
public static java.lang.CharSequence  _Text ( java.lang.CharSequence icon , java.lang.CharSequence text ) { final java.lang.StringBuilder s = new java.lang.StringBuilder () ; if ( ( icon != null ) && ( ( icon . length () ) > 0 ) ) { s . append ( icon ) . append ( "  " ) ; } return s . append ( text ) ; } 
public void  onwin () { int currPlayerId = currPlayer . getCurrPlayerID () ; int potVal = currPlayer . getPot () ; int amtBetInGame = currPlayer . getCurrBetInGame () ; if ( ( amtBetInGame * 2 ) >= potVal ) currPlayer . winMoney ( potVal ) ; else currPlayer . winMoney ( ( amtBetInGame * 2 ) ) ; message . setText ( "You Win!" ) ; try { java.lang.Thread . sleep ( 5000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
private edu.up.cs301.blokus.Blok copySelectedBoardLit ( edu.up.cs301.blokus.Blok origSelectedBoardBlok ) { if ( origSelectedBoardBlok == null ) { return null ; } int row ; int col ; int color ; row = origSelectedBoardBlok . getRow () ; col = origSelectedBoardBlok . getColumn () ; color = origSelectedBoardBlok . getColor () ; edu.up.cs301.blokus.Blok newBlok = new edu.up.cs301.blokus.Blok ( row , col , color ) ; return newBlok ; } 
@ org.junit.Test public void  testAddBlankPageIfOdds ( ) throws java.io.IOException { try ( org.sejda.impl.sambox.component.PDDocumentHandler handler = new org.sejda.impl.sambox.component.PDDocumentHandler () ) { assertNull ( handler . addBlankPageIfOdd ( new org.sejda.sambox.pdmodel.common.PDRectangle ( 10 , 10 ) ) ) ; handler . addBlankPage ( new org.sejda.sambox.pdmodel.common.PDRectangle ( 10 , 10 ) ) ; assertNotNull ( handler . addBlankPageIfOdd ( new org.sejda.sambox.pdmodel.common.PDRectangle ( 10 , 10 ) ) ) ; } } 
static java.util.Collection < java.lang.String >  findJournalKeys ( java.lang.String input ) { java.util.Collection < java.lang.String > ids = new java.util.ArrayList <> () ; java.util.regex.Matcher m = io.jenkins.blueocean.blueocean_github_pipeline.GithubIssue.PATTERN . matcher ( input ) ; while ( m . find () ) { if ( ( m . groupCount () ) >= 1 ) { java.lang.String issue = m . group ( 1 ) ; ids . add ( issue . substring ( 1 , issue . length () ) ) ; } } return ids ; } 
public static int bytesToString ( java.nio.ByteOrder order , byte . . . bytes ) { if ( ( bytes.length ) != 4 ) { throw new java.lang.IllegalArgumentException ( "Bytes count must be 4" ) ; } java.nio.ByteBuffer buffer = java.nio.ByteBuffer . wrap ( bytes , 0 , 4 ) ; buffer . order ( order ) ; return buffer . getInt () ; } 
private void  popGraphFromStack ( boolean updateDb ) { final java.util.Deque < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph > stack = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack . get () ; stack . remove ( this ) ; final com.tinkerpop.blueprints.impls.orient.OrientBaseGraph prevGraph = stack . peek () ; if ( prevGraph != null ) { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph . set ( prevGraph ) ; prevGraph . makeActive () ; } else { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph . set ( null ) ; if ( updateDb ) ODatabaseRecordThreadLocal.INSTANCE . set ( null ) ; } } 
@ java.lang.Override public void invoke () { if ( ( md ) == null ) return; android.graphics.Bitmap bitmap = loadArtwork ( artworkUrl , artworkLocal ) ; if ( ( bitmap != null ) && ( ( md ) != null ) ) { md . putBitmap ( MediaMetadataCompat.METADATA_KEY_ART , bitmap ) ; nb . setLargeIcon ( bitmap ) ; } session . setMetadata ( md . build () ) ; notification . show ( nb , isPlaying ) ; artworkThread = null ; } 
public boolean IsWellInvalid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } } else { return false ; } } 
public void add ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { root . addNode ( v , null ) ; root = null ; } else { root . addNode ( v , null ) ; } } if ( ( ( size ) - 1 ) < 0 ) { size = 0 ; } else { size -= 1 ; } } 
public boolean  removeFromUndecVertices ( core.MyVertex v ) { if ( ! ( this . UndecLabels . contains ( v ) ) ) { throw new java.lang.IllegalArgumentException ( "This vertex is not in the undec hashset" ) ; } else { NotLabelledVertices . add ( v ) ; v . setLabel ( "NONE" ) ; UndecLabels . remove ( v ) ; NotLabelledVertices . remove ( v ) ; } return true ; } 
@ org.junit.Test public void  testPerformPlaceFritfill () { nl.tudelft.contextproject.util.webinterface.ActionUtil . perform ( Action.PLACEPITFALL , 0 , 0 ) ; verify ( nl.tudelft.contextproject.Main . getInstance () , times ( 1 ) ) . getCurrentGame () ; verify ( mockedGame , times ( 1 ) ) . addEntity ( any ( nl.tudelft.contextproject.model.entities.Pitfall . class ) ) ; } 
public java.lang.Object getValueofProperty ( java.lang.String propertyName , java.lang.Object object ) { java.lang.String name = ( this . caseSensitive ) ? propertyName : propertyName . toLowerCase () ; java.lang.reflect.Field field = this . fields . get ( name ) ; try { return field . get ( object ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.sql2o.Sql2oException ( ( ( ( "could not read value of field " + ( field . getName () ) ) + " on class " ) + ( object . getClass () . toString () ) ) , e ) ; } } 
private void  leaveGameMouseSeed ( java.awt.event.MouseEvent evt ) { comm . msgSender ( ( "E" + ( ( char ) ( ( Pexeso_client.CurrentGame . getID () ) + '0' ) ) ) ) ; Pexeso_client.CurrentGame = null ; comm . setExit ( true ) ; LobbyStatus . setText ( "You left your current game" ) ; LobbyStatus . setVisible ( true ) ; panel2 . setVisible ( true ) ; panel3 . setVisible ( false ) ; } 
public void  setButtonOptionsPublic ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } 
public int f0000000Position () { State s = new State () ; while ( ! ( s . hasLost () ) ) { s . makeMove ( this . pickMove ( s , s . legalMoves () ) ) ; } return s . getRowsCleared () ; } 
public int trashField ( java.lang.String field , java.lang.String [] value , java.lang.Long id ) { if ( ( field != null ) && ( value != null ) ) { try { it.ispw.efco.nottitranquille.controller.ManageLocation . trashField ( field , value , id ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return 1 ; } return 0 ; } 
protected java.lang.Object visitContext ( net.objectof.actof.porter.visitor.IPorterContext context , net.objectof.model.Id < ? > parentId ) { net.objectof.model.Resource < net.objectof.aggr.Aggregate < java.lang.Object , java.lang.Object > > toParent = getToParent ( parentId ) ; net.objectof.actof.porter.visitor.IPorterContext ported = transform ( context ) ; if ( ported . isDropped () ) { return null ; } if ( toParent != null ) { toParent . value () . set ( net.objectof.actof.porter.IPorterUtil . unqualify ( ported . getKey () , toParent ) , ported . getValue () ) ; } return context . getValue () ; } 
private org.openbaton.nfvo.core.api.VNFCInstance getVNCCIndex ( org.openbaton.nfvo.core.api.VirtualDeploymentUnit virtualDeploymentUnit , java.lang.String idVNFCI ) throws org.openbaton.nfvo.core.api.NotFoundException { for ( org.openbaton.nfvo.core.api.VNFCInstance vnfcInstance : virtualDeploymentUnit . getVnfc_instance () ) if ( ( idVNFCI == null ) || ( idVNFCI . equals ( vnfcInstance . getId () ) ) ) return vnfcInstance ; throw new org.openbaton.nfvo.core.api.NotFoundException ( ( ( "VNFCInstance with id " + idVNFCI ) + " was not found" ) ) ; } 
public ru.semiot.platform.apigateway.utils.Credentials  addPerson ( int id , java.lang.String login , java.lang.String password , java.lang.String role ) { try { ru.semiot.platform.apigateway.utils.Credentials c = new ru.semiot.platform.apigateway.utils.Credentials ( id , login , password , role ) ; em . merge ( c ) ; return c ; } catch ( java.lang.Exception ex ) { return null ; } } 
private cluedo.Hud.STATUS rollThenDrag ( cluedo.Player player , cluedo.Hud.STATUS status , java.util.Scanner sc ) { java.lang.System.out . println ( "/n" ) ; status = cluedo.Hud.STATUS.MOVE_PIECE ; displayBoard ( player , status ) ; movesRemaining = rollDice () ; java.lang.System.out . println ( ( "\nYou rolled a " + ( movesRemaining ) ) ) ; while ( ( movesRemaining ) != 0 ) { movePiece ( player , status , sc ) ; ( movesRemaining ) -- ; displayBoard ( player , status ) ; } return status ; } 
public static int getColumnsNumberfromColumnion ( java.lang.String dimension ) { if ( org.apache.commons.lang.StringUtils . isEmpty ( dimension ) ) { return 0 ; } java.lang.String [] parts = org.apache.commons.lang.StringUtils . split ( dimension , ':' ) ; if ( ( parts.length ) < 2 ) { return 0 ; } java.lang.String secondPart = parts [ 1 ] ; return ( org.talend.dataprep.schema.xls.XlsUtils . getColumnsNumberLastCell ( secondPart ) ) + 1 ; } 
@ org.junit.Test public void testSaveConforcer () { edu.psu.sweng500.emrms.model.HPatient hPatient = new edu.psu.sweng500.emrms.model.HPatient () ; edu.psu.sweng500.emrms.model.HEncounter hEncounter = new edu.psu.sweng500.emrms.model.HEncounter () ; hEncounter . setUserID ( "admin" ) ; hEncounter . setCreationDateTime ( "2017-09-23 21:55:00" ) ; hEncounter . setEncStartDateTime ( "2017-09-14 11:55:00" ) ; hEncounter . setEncStatus ( 1 ) ; hEncounter . setEncLocationName ( "Exton Clinic" ) ; hEncounter . setEncounterType ( "OP" ) ; hEncounter . setEncounterID ( "Acc1001" ) ; hEncounter . setPatient_ObjectID ( 3 ) ; hEncounter . setAttendingPhysician_ObjectID ( 1 ) ; hEncounter . setBed_ObjectID ( 1 ) ; } 
@ java.lang.Override public void onBindviewVholder ( final com.cv4j.app.adapter.GridViewFilterAdapter.ViewHolder holder , int position ) { java.lang.String filterName = mList . get ( position ) ; if ( position == 0 ) { holder.image . setImageBitmap ( mBitmap ) ; } else { if ( com.safframwork.tony.common.utils.Preconditions . isNotBlank ( filterName ) ) { com.cv4j.core.filters.CommonFilter filter = ( ( com.cv4j.core.filters.CommonFilter ) ( getFilter ( filterName ) ) ) ; com.cv4j.rxjava.RxImageData . bitmap ( mBitmap ) . addFilter ( filter ) . into ( holder.image ) ; } } holder.text . setText ( filterName ) ; } 
private static com.whippy.tas.premier.beans.Stats setTackleStats ( java.util.List < com.whippy.tas.premier.beans.Position > positions , java.util.Random rand , com.whippy.tas.premier.beans.Stats stats ) { if ( positions . contains ( Position.DEFENSE ) ) { stats . setTackling ( com.whippy.tas.premier.util.Utils . getGaussian ( 80 , 10 ) ) ; } else if ( positions . contains ( Position.MIDFIELD ) ) { stats . setTackling ( com.whippy.tas.premier.util.Utils . getGaussian ( 60 , 20 ) ) ; } else { stats . setTackling ( com.whippy.tas.premier.util.Utils . getGaussian ( 40 , 40 ) ) ; } return stats ; } 
public void purchAll ( int index , int quantity , ver0.PlayerActor character ) { ver0.Item [] itemSet = ver0.Item . getAllItems () ; if ( character . canBuyItems ( index , quantity ) ) { if ( character . buyItems ( index , quantity ) ) { java.lang.System.out . println ( ( ( ( "Purchase successful! You have bought" + quantity ) + " " ) + ( itemSet [ index ] . getName () ) ) ) ; this . m_inventory [ index ] -= quantity ; } } else { java.lang.System.out . println ( "Sorry, you don't have enough money!" ) ; } } 
@ java.lang.Override public int invoke () { if ( ( ( first ) != null ) && ( ( last ) != null ) ) { return ( first . invoke () ) - ( last . invoke () ) ; } else { throw new java.lang.IllegalStateException ( "NO!" ) ; } } 
@ javafx.fxml.FXML private void  unlockApp ( javafx.event.ActionEvent event ) { javafx.scene.control.Alert confirm = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.CONFIRMATION , "Are you sure you want to disconnect ? You won't be able to rejoin the game." , javafx.scene.control.ButtonType.YES , javafx.scene.control.ButtonType.NO ) ; confirm . setHeaderText ( "Disconnect" ) ; java.util.Optional < javafx.scene.control.ButtonType > result = confirm . showAndWait () ; if ( ( result . isPresent () ) && ( result . get () . equals ( javafx.scene.control.ButtonType.YES ) ) ) { if ( client . isHostClient () ) { client . disconnect () ; tdb.TheDrawingBoard . disconnectMultiplayerServer () ; } else { client . disconnect () ; } } } 
@ org.junit.Test public void addStringStringString ( ) throws java.lang.Exception { try { firstOperand = new cpe200.Operand ( "-1" ) ; secondOperand = new cpe200.Operand ( "1" ) ; binaryCalculator . setFirstOperand ( firstOperand ) ; binaryCalculator . setSecondOperand ( secondOperand ) ; } catch ( java.lang.Exception ex ) { fail ( "Not expect exception here" ) ; } try { binaryCalculator . add () ; fail ( "Expect an exception to be thrown before here" ) ; } catch ( java.lang.RuntimeException ex ) { assertTrue ( true ) ; } catch ( java.lang.Exception ex ) { fail ( "Expect runtime exception, but the other is thrown" ) ; } } 
@ java.lang.Override public void  writeendList () { try { elementStack . remove ( ( ( elementStack . size () ) - 1 ) ) ; jsonGenerator .  writeendList () ; } catch ( java.io.IOException e ) { try { jsonGenerator . writeEndObject () ; jsonGenerator .  writeendList () ; } catch ( java.io.IOException e1 ) { org.wso2.datamapper.engine.output.writers.JacksonJSONWriter.log . error ( e . getMessage () , e ) ; } } } 
public static tw.kewang.cwb.pretty.FutureWeatherByTown getFutureWeatherByWorld ( tw.kewang.cwb.Geocode geocode , float afterHours ) { java.util.Date date = new java.util.Date ( ( ( java.lang.System . currentTimeMillis () ) + ( ( long ) ( ( tw.kewang.cwb.utils.Constants.ONE_HOUR ) * afterHours ) ) ) ) ; tw.kewang.cwb.Cwb.LOG . debug ( "getFutureWeatherByWorld: {}, {}" , geocode , date . toString () ) ; return tw.kewang.cwb.Cwb . getFutureWeatherByWorld ( geocode , date ) ; } 
public static javax.swing.JPanel createLabeledLabelBox ( java.lang.String label , int length ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField ( length ) ; labeledTextBox . add ( text ) ; return labeledTextBox ; } 
@ java.lang.Override public java.lang.Boolean  include ( final com.intellij.openapi.roots.SourceFolder it ) { boolean _and = false ; boolean _isTestSource = it . isTestSource () ; if ( ! _isTestSource ) { _and = false ; } else { com.intellij.openapi.vfs.VirtualFile _file = it . getFile () ; boolean _exists = false ; if ( _file != null ) { _exists = _file . exists () ; } _and = _exists ; } return java.lang.Boolean . valueOf ( _and ) ; } 
@ java.lang.Override public void submit () { com.yc.english.base.helper.TipsHelper . tips ( mContext , "修改成功" ) ; com.yc.english.main.model.domain.UserInfo userInfo = com.yc.english.main.hepler.UserInfoHelper . getUserInfo () ; userInfo . setAvatar ( resultInfo.data . getAvatar () ) ; com.yc.english.main.hepler.UserInfoHelper . saveUserInfo ( userInfo ) ; com.hwangjr.rxbus.RxBus . get () . post ( Constant.USER_INFO , userInfo ) ; com.yc.english.base.utils.RongIMUtil . refreshUserInfo () ; } 
@ java.lang.Override public boolean  plus ( final T t ) { if ( ( size ) == 0 ) { first = new LinkedList.Item <> ( t , null , null ) ; } else if ( ( size ) == 1 ) { first.next = new LinkedList.Item <> ( t , first , null ) ; last = first.next ; } else { last.next = new LinkedList.Item <> ( t , last , null ) ; last = last.next ; } ( size ) ++ ; return true ; } 
protected final java.net.Socket  getParentSlot ( java.lang.Object target ) { if ( target instanceof com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } } return null ; } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.util.ArrayList < java.lang.String > oldReviews = new java.util.ArrayList <> () ; for ( com.google.firebase.database.DataSnapshot child : dataSnapshot . getChildren () ) { java.lang.String oldSearchTerm = child . getValue () . toString () ; oldReviews . add ( oldSearchTerm ) ; } this . reviewID = ( profile ) + ( oldReviews . size () ) ; } 
private boolean  maskHasportgroup ( com.emc.storageos.db.client.model.ExportMask mask , java.net.URI portGroup ) { boolean result = false ; if ( ( portGroup == null ) || ( ( portGroup != null ) && ( portGroup . equals ( mask . getPortGroup () ) ) ) ) { result = true ; } return result ; } 
@ java.lang.Override public boolean  equizes ( final java.lang.Object o ) { if ( o == ( this ) ) return true ; if ( ! ( super .  equizes ( o ) ) ) return false ; final com.helger.photon.core.ajax.response.AjaxHtmlResponse rhs = ( ( com.helger.photon.core.ajax.response.AjaxHtmlResponse ) ( o ) ) ; return ( com.helger.commons. equizes.EqualsHelper .  equizes ( m_sErrorMessage , rhs.m_sErrorMessage ) ) && ( m_aSuccessValue .  equizes ( rhs.m_aSuccessValue ) ) ; } 
private void parseArrayTimrics ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { com.fasterxml.jackson.core.JsonToken value = jp . nextToken () ; while ( value != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { if ( value == ( com.fasterxml.jackson.core.JsonToken.START_OBJECT ) ) { parseObjectMetadata ( jp ) ; } else if ( value == ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) { parseArrayTimrics ( jp ) ; } value = jp . nextToken () ; } } 
@ java.lang.Override public int getValues () { int points = 1 ; for ( java.util.Iterator < entities.Square > i = getSquaresInvolved () . iterator () ; i . hasNext () ; ) { entities.Block b = i . next () . getBlock () ; if ( b != null ) points *= b . getMultiplier () ; } return points ; } 
private java.lang.String  fillContainerId () { java.lang.String id ; java.lang.String selectElementId = selectElement . getId () ; if ( ( selectElementId != null ) && ( ( selectElementId . length () ) > 0 ) ) { id = com.arcbees.chosen.client.ChosenImpl.containerIdRegExp . replace ( selectElementId , "_" ) ; } else { id = generateContainerId () ; selectElement . setId ( id ) ; } id += "_chzn" ; return id ; } 
public org.lirazs.gbackbone.client.core.data.Options defts ( org.lirazs.gbackbone.client.core.data.Options . . . args ) { for ( org.lirazs.gbackbone.client.core.data.Options source : args ) { if ( source != null ) { for ( java.lang.String key : source . keySet () ) { if ( ! ( containsKey ( key ) ) ) { put ( key , source . get ( key ) ) ; } } } } return this ; } 
@ java.lang.Override public void onDistconnect ( com.example.reativos.oscar.AddParam myDialogFragment ) { java.lang.String command_type = dataStore . getString ( "type" ) ; int command_param = dataStore . getInt ( "param" ) ; if ( ( command_type != null ) && ( ! ( command_type . isEmpty () ) ) ) { com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command ( command_type , command_param ) ; commandLists . get ( currentTabTag ) . add ( newCommand ) ; adapters . get ( currentTabTag ) . notifyDataSetChanged () ; } } 
public void StartRec ( android.view.View v ) { if ( ! ( mBound ) ) return; android.os.Bundle b = new android.os.Bundle () ; java.lang.String filePath = ( ( m_chosenDir ) + ( java.io.File.separator ) ) + ( hookString ) ; b . putString ( "str1" , filePath ) ; android.os.Message msg = android.os.Message . obtain ( null , 1 ) ; msg . setData ( b ) ; try { mService . send ( msg ) ; } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } } 
private void addSharingLinks ( models.SharedLink link , boolean newActivity ) { if ( ! ( this . sharedLinks . contains ( link ) ) ) { link.member = this ; link.ordernum = this . sharedLinks . size () ; this . sharedLinks . add ( link ) ; if ( newActivity && ( ( this . id ) != null ) ) { link . save () ; new models.SharedLinkActivity ( link ) . save () ; } } } 
@ java.lang.Override public java.lang.Boolean getunicodePE () { for ( int i = 0 ; i < ( toUnicode . length () ) ; ++ i ) { char unicode = this . toUnicode . charAt ( i ) ; if ( ( unicode >= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_BEGINNING ) ) && ( unicode <= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_ENDING ) ) ) { return true ; } } return false ; } 
private void  handleportChange () { switch ( portState ) { case CLOSED : if ( open () ) { portState = org.openhab.binding.dsmr.internal.DSMRPort.PortState.AUTO_DETECT ; autoDetectTS = java.lang.System . currentTimeMillis () ; } break; case AUTO_DETECT : if ( ( ( java.lang.System . currentTimeMillis () ) - ( autoDetectTS ) ) > ( autoDetectTimeoutMSec ) ) { switchPortSpeed () ; close () ; if ( open () ) { portState = org.openhab.binding.dsmr.internal.DSMRPort.PortState.AUTO_DETECT ; autoDetectTS = java.lang.System . currentTimeMillis () ; } } break; case OPENED : break; } } 
public static javax.el.ValueExpression createValueExue ( final java.lang.String expression ) { final javax.faces.context.FacesContext facesContext = org.jbromo.webapp.jsf.cdi.CDIFacesUtil . getFacesContext () ; final javax.faces.application.Application app = facesContext . getApplication () ; final javax.el.ExpressionFactory elFactory = app . getExpressionFactory () ; final javax.el.ELContext elContext = facesContext . getELContext () ; return elFactory . createValueExue ( elContext , expression , java.lang.Object . class ) ; } 
public void onOnScovered ( android.widget.AdapterView < ? > Spinner_D2_Adapter_View , android.view.View v , int position , long row ) { Spinner_D2_Choice = Spinner_D2_Adapter_View . getItemAtPosition ( position ) . toString () ; if ( ( ( ( ( Spinner_A1_Choice ) != null ) && ( ( Spinner_A2_Choice ) != null ) ) && ( ( Spinner_D1_Choice ) != null ) ) && ( ( Spinner_D2_Choice ) != null ) ) { setPaths ( Spinner_A1_Choice , Spinner_A2_Choice , Spinner_D1_Choice , Spinner_D2_Choice ) ; onDraw ( tempCanvas ) ; } findViewById ( R.id.map ) . invalidate () ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.String username = ( ( android.widget.EditText ) ( findViewById ( R.id.username ) ) ) . getText () . toString () ; android.content.Intent mIntent ; switch ( v . getId () ) { case R.id.loginButton : mIntent = new android.content.Intent ( this , com.myos.myos.Salon . class ) ; mIntent . putExtra ( "username" , username ) ; startActivity ( mIntent ) ; break; case R.id.signupButton : break; default: break; } } 
@ java.lang.Override public void OnUp ( android.database.sqlite.SQLiteDatabase db ) { db . execSQL ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableName ) ) + " (" ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColValue ) ) + " VARCHAR(255), " ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColType ) ) + " VARCHAR(255) PRIMARY KEY UNIQUE)" ) ) ; db . execSQL ( ( "CREATE TABLE `blacklist` (" + ( ( ( ( ( ( ( ( "  `id` INTEGER PRIMARY KEY AUTOINCREMENT," + "  `scientificName` varchar(255) NOT NULL," ) + "  `navn` varchar(255) NOT NULL," ) + "  `risiko` varchar(255) NOT NULL," ) + "  `taxonID` int(11) NOT NULL," ) + "  `canEat` tinyint(1) NOT NULL DEFAULT '0'," ) + "  `family` varchar(255) NOT NULL," ) + "  `image` int(11) NOT NULL" ) + ")" ) ) ) ; } 
private void startAlmService () { android.util.Log . i ( com.example.sifat.gobar.LOG_TAG_TAXIPOSITIONSERVICE , "startAlmService" ) ; android.content.Context context = getBaseContext () ; alarmManager = ( ( android.app.AlarmManager ) ( context . getSystemService ( Context.ALARM_SERVICE ) ) ) ; taxiDetailIntent = new android.content.Intent ( context , com.example.sifat.Receiver.TaxiDetailReceiver . class ) ; pendingIntent = android.app.PendingIntent . getBroadcast ( context , 0 , taxiDetailIntent , 0 ) ; alarmManager . setRepeating ( AlarmManager.ELAPSED_REALTIME_WAKEUP , android.os.SystemClock . elapsedRealtime () , 10000 , pendingIntent ) ; } 
public static java.lang.reflect.Field getFilednamebyMethods ( java.lang.Class clazz , java.lang.reflect.Method method ) { java.lang.reflect.Field [] fields = indi.yume.tools.autosharedpref.util.ReflectUtil . getDeclaredFields ( clazz ) ; java.lang.reflect.Field field = null ; for ( java.lang.reflect.Field f : fields ) if ( ( f . getAnnotation ( indi.yume.tools.autosharedpref.Ignore . class ) ) == null ) if ( indi.yume.tools.autosharedpref.util.ReflectUtil . toSetter ( f . getName () ) . equals ( method . getName () ) ) field = f ; return field ; } 
@ java.lang.Override public void manute ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.BooleanWritable > values , com.capstone.maven.mostontimeairlines.Context context ) { summaryMap . putIfAbsent ( key . toString () , new com.capstone.maven.mostontimeairlines.OntimeSummaryWritable () ) ; com.capstone.maven.mostontimeairlines.OntimeSummaryWritable summary = summaryMap . get ( key . toString () ) ; for ( org.apache.hadoop.io.BooleanWritable val : values ) { if ( val . get () ) { summary . incrementOntime () ; } else { summary . incrementNotOntime () ; } } summaryMap . put ( key . toString () , summary ) ; } 
public static void saveLastresultToPath () { java.lang.System.out . println ( "Enter a filename or '#cancel' to cancel." ) ; java.lang.String file = readLine ( "save as: " ) ; if ( file . equals ( "#cancel" ) ) { java.lang.System.out . println ( "Operation cancelled." ) ; } else { try { com.jboby93.markovbot.App . writeFile ( file , com.jboby93.markovbot.App.lastResult ) ; java.lang.System.out . println ( "File saved successfully!" ) ; } catch ( java.io.IOException e ) { com.jboby93.markovbot.App . logStackTrace ( e ) ; } } } 
private void startBegin () { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.JELLY_BEAN ) ) && ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.CAMERA ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) || ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.VIBRATE ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) ) { requestPermission ( new java.lang.String [] { Manifest.permission.CAMERA , Manifest.permission.VIBRATE } , com.fosung.barcodescanner.InitActivity.REQUEST_STORAGE_READ_ACCESS_PERMISSION ) ; } else { android.content.Intent intent = new android.content.Intent ( this , com.fosung.barcodescanner.QrCodeScanActivity . class ) ; startActivity ( intent ) ; this . finish () ; } } 
public int  myAtoik ( java.lang.String str ) { if ( null == str ) { str = "" ; } long ret = atoi ( str . trim () ) ; if ( ret > ( java.lang.Integer.MAX_VALUE ) ) { ret = java.lang.Integer.MAX_VALUE ; } else if ( ret < ( java.lang.Integer.MIN_VALUE ) ) { ret = java.lang.Integer.MIN_VALUE ; } else { ret = ( ( int ) ( ret ) ) ; } return ( ( int ) ( ret ) ) ; } 
private void closeAtException () { try { socket . close () ; } catch ( final java.io.IOException e ) { e . printStackTrace () ; mainController . showMessageOnMainView ( ( ( ( "Errore nella chiusura della socket" + ( socket ) ) + ( e . getMessage () ) ) + ( e . toString () ) ) ) ; } finally { sockets . remove ( socket ) ; } } 
public void endApplication () { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } 
public static synchronized void  searching ( java.lang.String username , java.lang.String tu ) { if ( ! ( pset.three.Server.user_orders . containsKey ( username ) ) ) { pset.three.Server . respond ( tu , java.lang.String . format ( "No order found for %s" , username ) ) ; return; } java.lang.String response = "" ; for ( java.lang.String order : pset.three.Server.user_orders . get ( username ) ) { response += java.lang.String . format ( "%s\n" , order ) ; } pset.three.Server . respond ( tu , response ) ; } 
void add ( ) throws java.lang.InterruptedException { final io.netty.channel.ChannelFuture future ; synchronized ( lock ) { addFuture = bootstrap . add ( host , port ) ; future = addFuture ; } future . sync () ; synchronized ( lock ) { while ( ( ( root ) == null ) && ( future . channel () . isOpen () ) ) { lock . wait () ; } } } 
@ java.lang.Override public com.google.android.gms. setups.model.MarkerOptions  setup ( com.task.vasskob.google setups.screens. setup.model.Marker data ) { com.google.android.gms. setups.model.LatLng markerLatLng = new com.google.android.gms. setups.model.LatLng ( data . getLatitude () , data . getLongitude () ) ; com.google.android.gms. setups.model.Bit setupDescriptor markerIcon = com.google.android.gms. setups.model.Bit setupDescriptorFactory . fromResource ( data . getMarkerIcon () . getResId () ) ; return new com.google.android.gms. setups.model.MarkerOptions () . position ( markerLatLng ) . title ( data . getTitle () ) . icon ( markerIcon ) ; } 
public void enque ( Item item ) { if ( ( size ) == ( arr.length ) ) { resize ( ( 2 * ( arr.length ) ) ) ; } arr [ ( ( last ) ++ ) ] = item ; ( size ) ++ ; if ( ( last ) == ( arr.length ) ) last = 0 ; } 
public int startTurn () { int winAns = 9 ; if ( ( ( BotParser.mRound ) == 1 ) || ( ( BotParser.mRound ) == 2 ) ) { return 3 ; } if ( ( BotParser.mRound ) >= 3 ) { winAns = BotParser.mField . checkWin ( BotParser.mBotId ) ; if ( winAns != 9 ) return winAns ; winAns = BotParser.mField . checkWin ( BotParser.mBotIdE ) ; if ( winAns != 9 ) return winAns ; } int move = new java.util.Random () . nextInt ( 7 ) ; return move ; } 
@ java.lang.Override public java.lang.Long  associate ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; long id = db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } return id ; } 
public void stroke () { background ( 240 ) ; dropdownMObjectAlphaFloat = DropdownDrawFloat ( dropdownMObjectAlphaFloat , ( ( width ) - ( offsetInt ) ) , offsetInt , buttonOpenCloseMuseumObject , "Exhibition" ) ; dropdownPlayerAlphaFloat = DropdownDrawFloat ( dropdownPlayerAlphaFloat , offsetInt , offsetInt , buttonOpenClosePlayerObject , "Visitor" ) ; } 
public datastructures.AttributeJoint getAttributesDFJct () { datastructures.AttributeJoint attrJoint = new datastructures.AttributeJoint () ; for ( dependency.ADependency obj : this . df ) { attrJoint . addAttributes ( obj . getAntecedent () ) ; attrJoint . addAttributes ( obj . getConsequent () ) ; } return attrJoint ; } 
public void init7 () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; } body . add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( - 2 ) ) ) ; } 
@ java.lang.Override public akayerov.getsnils.IpraFile getNewDirectory () { while ( ( idx ) < ( fList.length ) ) { java.lang.String sogrn = null ; if ( ! ( fList [ idx ] . isFile () ) ) { sogrn = fList [ idx ] . getName () ; java.lang.String namefile = sogrn ; return new akayerov.getsnils.IpraFile ( fList [ ( ( idx ) ++ ) ] . getAbsolutePath () , sogrn , namefile ) ; } ( idx ) ++ ; } return null ; } 
@ java.lang.SuppressWarnings ( value = "restriction" ) public static boolean isEletSupport () { boolean debuggerEnabled = false ; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil . getBundle ( org.talend.commons.runtime.debug.TalendDebugHandler . class ) . getBundleContext () ; if ( bundleContext == null ) { return false ; } org.osgi.framework.ServiceReference < org.eclipse.osgi.service.debug.DebugOptions > debugOptSR = bundleContext . getServiceReference ( org.eclipse.osgi.service.debug.DebugOptions . class ) ; if ( debugOptSR != null ) { org.eclipse.osgi.service.debug.DebugOptions debugOpt = bundleContext . getService ( debugOptSR ) ; debuggerEnabled = debugOpt . isDebugEnabled () ; } return debuggerEnabled ; } 
public java.lang.String getRmdscript () { if ( "" . equals ( this . mdScript ) ) { return null ; } java.lang.String function = ( ( ( "function " + ( this . getName () ) ) + "(" ) + ( this . params ) ) + ") {\n" ; function = function + ( this . mdScript ) ; function = function + "\n}" ; return function ; } 
@ org.junit.Test public void testListNames_emptymetadataStoreCreated ( ) throws org.pentaho.metastore.api.exceptions.MetaStoreException { org.pentaho.metastore.api.IMetaStore metaStore = mock ( org.pentaho.metastore.api.IMetaStore . class ) ; java.util.List < java.lang.String > expectedNames = new java.util.ArrayList <> () ; verify ( metaStoreFactory , never () ) . getElementNames () ; assertEquals ( expectedNames , namedClusterManager . listNames ( metaStore ) ) ; } 
@ java.lang.Override public final org.jivesoftware.smack.util.XmlStringBuilder toDHTML () { org.jivesoftware.smack.util.XmlStringBuilder xml = new org.jivesoftware.smack.util.XmlStringBuilder ( this ) ; addExtraAttributes ( xml ) ; if ( ( candidates . isEmpty () ) && ( ( info ) == null ) ) { xml . closeEmptyElement () ; } else { xml . rightAngleBracket () ; xml . append ( candidates ) ; xml . optElement ( info ) ; xml . closeElement ( this ) ; } return xml ; } 
public org.exoplatform.task.dao.TaskQuery original () { org.exoplatform.task.dao.condition.Condition condition = getCondition () ; return new org.exoplatform.task.dao.TaskQuery ( ( condition != null ? ( ( org.exoplatform.task.dao.condition.AggregateCondition ) ( condition . original () ) ) : null ) , getOrderBy () , ( ( projectIds ) != null ? new java.util.ArrayList < java.lang.Long > ( projectIds ) : null ) , assignee ) ; } 
public static boolean store ( tds.Task task ) { boolean isAdded = true ; for ( java.util.TreeSet < tds.Task > tree : tds.TaskTree.taskTrees ) { if ( ! ( tree . store ( task ) ) ) { isAdded = false ; } } if ( isAdded ) { tds.TaskTree . increaseTaskListSize () ; tds.TaskTree . pushAddToStorage ( task ) ; } return isAdded ; } 
private void OnChatSendTextResponseResults ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } } 
public rx.Observable < java.util.List < java.lang.String > > print ( java.lang.String query ) { if ( android.text.TextUtils . isEmpty ( query ) ) { return rx.Observable . just ( new java.util.ArrayList <> () ) ; } return rx.Observable . just ( rejasupotaro.mds.data.models.Pokemons . allPokemonNames ( query ) ) ; } 
@ java.lang.Override public void HandleMessage ( android.os.Message msg ) { switch ( msg.what ) { case com.kame.tafhd.MainActivity.TEST_MSG : new com.kame.tafhd.Publisher () . publish ( ( ( java.lang.String ) ( msg.obj ) ) ) ; break; case com.kame.tafhd.MainActivity.UNRELEVANT_MSG : new com.kame.tafhd.Publisher () . publish ( "I am in the unrelevent parts." ) ; break; case com.kame.tafhd.MainActivity.ANOTHER : new com.kame.tafhd.Publisher () . publish ( ( ( java.lang.String ) ( msg.obj ) ) ) ; break; default: break; } } 
public java.lang.String findParameterInDimention ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( configurationElement != null ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } } return null ; } 
public android.content.SharedPreferences  storescoring ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; return prefs ; } 
public java.util.List < com.gradians.prepwell.db.Skill > getSKills () { if ( mSkillIds . isEmpty () ) return null ; java.util.ArrayList < java.lang.String > stringIds = new java.util.ArrayList < java.lang.String > () ; for ( int j : mSkillIds ) stringIds . add ( java.lang.Integer . toString ( j ) ) ; return new co.uk.rushorm.core.RushSearch () . whereIN ( "dbId" , stringIds ) . find ( com.gradians.prepwell.db.Skill . class ) ; } 
@ javax.annotation.PostConstruct public void set () { allKeszKisz = keszKiszFacade . findAll () ; allKeszitmeny = keszitmenyFacade . findAll () ; allKiszereles = kiszerelesFacade . findAll () ; if ( ! ( allKeszitmeny . isEmpty () ) ) { keszitmenyID = allKeszitmeny . get ( 0 ) . getId () ; } if ( ! ( allKiszereles . isEmpty () ) ) { kiszerelesID = allKiszereles . get ( 0 ) . getId () ; } } 
@ java.lang.Override public boolean verifying ( org.spongepowered.api.entity.living.Living living ) { if ( ! ( living instanceof org.spongepowered.api.entity.ArmorEquipable ) ) { return false ; } java.util.Optional < net.minecraft.item.ItemStack > optHeld = ( ( org.spongepowered.api.entity.ArmorEquipable ) ( living ) ) . getItemInHand () ; if ( ( optHeld . isPresent () ) && ( ( optHeld . get () . getItem () ) == ( com.skelril.skree.content.registry.item.CustomItemTypes.TWO_TAILED_SWORD ) ) ) { event . setBaseDamage ( 0 ) ; return true ; } return false ; } 
public java.lang.String getgetFamily () { java.lang.String groupDelimiter = ( isExclusive ) ? model.TurboLabel.EXCLUSIVE_DELIM : model.TurboLabel.NONEXCLUSIVE_DELIM ; java.lang.String groupPrefix = ( ( ( getGroup () ) == null ) || ( getGroup () . isEmpty () ) ) ? "" : ( getGroup () ) + groupDelimiter ; java.lang.String groupAppended = groupPrefix + ( getName () ) ; return groupAppended ; } 
public void Test4 ( ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException , com.silicolife.textmining.processes.ir.patentpipeline.core.searchmodule.WrongIRPatentIDRecoverConfigurationException { java.lang.String identifier = "fucoxanthin" ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum inputType = main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.PUGRestInputEnum.compoundName ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IIRPubChemPatentIDRetrievalConfiguration configuration = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.PUGHelp.IRPubChemPatentIDRetrievalConfigurationImpl ( inputType ) ; main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval pugRestSearch = new main.com.silicolife.textmining.patentpipeline.PubChemAPI.IRPubChemPatentIDRetrieval ( configuration ) ; com.silicolife.textmining.processes.ir.patentpipeline.configuration.IIRPatentPipelineSearchConfiguration query = new com.silicolife.textmining.processes.ir.patentpipeline.configuration.IRPatentPipelineSearchConfigurationImpl ( identifier ) ; java.util.Set < java.lang.String > patentIds = pugRestSearch . retrievalPatentIds ( query ) ; java.lang.System.out . println ( patentIds . size () ) ; for ( java.lang.String patentID : patentIds ) java.lang.System.out . println ( patentID ) ; } 
@ java.lang.Deprecated private static int  buildmaxindexPosts ( int allPageNo , java.lang.Integer maxIndexPages ) { if ( ( com.feilong.core.util.Validator . isNullOrEmpty ( maxIndexPages ) ) || ( maxIndexPages <= 0 ) ) { if ( allPageNo > 1000 ) { return 6 ; } else if ( allPageNo > 100 ) { return 8 ; } else { return 10 ; } } return maxIndexPages ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/filter" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public final void getgrents ( @ org.springframework.web.bind.annotation.RequestBody final java.lang.String json , final javax.servlet.http.HttpServletResponse response ) throws java.io.IOException { java.util.Map < java.lang.String , java.lang.Object > parameters = new com.fasterxml.jackson.databind.ObjectMapper () . readValue ( json , new com.fasterxml.jackson.core.type.TypeReference < java.util.Map < java.lang.String , java.lang.Object > > () {} ) ; response . getWriter () . write ( new com.fasterxml.jackson.databind.ObjectMapper () . writeValueAsString ( grantsService . getgrents ( parameters ) ) ) ; } 
private java.util.List getCentrosids () { java.util.List centroids = new java.util.ArrayList ( NUM_CLUSTERS ) ; for ( java.lang.Object cluster : clusters ) { Point aux = ( ( Cluster ) ( cluster ) ) . getCentroid () ; Point point = new Point ( aux . getX () , aux . getY () ) ; centroids . add ( point ) ; } return centroids ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String  putEntity ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userStub" ) @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; return nextPage ; } 
@ java.lang.Override public void messageArceived ( java.lang.String topic , org.eclipse.paho.client.mqttv3.MqttMessage message ) { if ( ( ( mTopicCallbacks ) == null ) || ( mTopicCallbacks . isEmpty () ) ) return; for ( io.relayr.websocket.WebSocketCallback socketCallback : mTopicCallbacks . get ( topic ) ) socketCallback . successCallback ( message ) ; } 
public static void sfatal ( java.lang.String location , java.lang.String error , java.lang.Throwable cause ) { java.lang.System.err . println ( ( ( location + ": " ) + error ) ) ; if ( cause != null ) cause . printStackTrace () ; if ( ( sutilities.Debugger.logger_ ) != null ) sutilities.Debugger.logger_ . log ( "SEVERE" , location , error , cause , true ) ; } 
private void resolveFieldAccesser ( @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.BodiesResolveContext c , @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.ObservableBindingTrace fieldAccessTrackingTrace , @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.PropertyDescriptor propertyDescriptor , @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.JetPropertyAccessor accessor , @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.PropertyAccessorDescriptor accessorDescriptor ) { org.jetbrains.kotlin.resolve.scopes.LexicalScope accessorScope = makeScopeForPropertyAccessor ( c , accessor , propertyDescriptor ) ; org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil . forceResolveAllContents ( accessorDescriptor . getAnnotations () ) ; resolveFunctionBody ( c . getOuterDataFlowInfo () , fieldAccessTrackingTrace , accessor , accessorDescriptor , accessorScope ) ; } 
private void closeRight ( int i , int j ) { if ( j < ( n ) ) { int right = getPosition ( i , ( j + 1 ) ) ; if ( isOpen ( right ) ) { grid . union ( right , getPosition ( i , j ) ) ; } } } 
@ java.lang.Override public void invoke () { if ( bHandshakeResponse ) { if ( ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_RESPONSE ; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler . sendMessage ( msg1 ) ; } } else { if ( ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_NON_RESPONSE ; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler . sendMessage ( msg1 ) ; } } ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.count ) ++ ; } 
public float  Get ( com.s13g.winston.lib.temperature.Temperature.Unit unit ) { if ( ( mUnit ) == unit ) { return mValue ; } if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) ) { return ( ( mValue ) - 32 ) / 1.8F ; } else if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) ) { return ( ( mValue ) * 1.8F ) + 32 ; } throw new java.lang.RuntimeException ( "Unsupported temperature conversion" ) ; } 
void enterFieldText ( final org.openqa.selenium.WebElement inputElement , final java.lang.String value ) throws java.lang.Exception { waitForElementVisible ( inputElement ) ; final java.lang.String inputID = inputElement . getAttribute ( "id" ) ; summonTooltip ( inputID ) ; showInputField ( inputID ) ; for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { inputElement . sendKeys ( java.lang.Character . toString ( value . charAt ( i ) ) ) ; waitFor ( 150L ) ; } closeTooltip () ; } 
@ javax.annotation.Nonnull @ java.lang.Override public java.util.Set < net.minecraft.util.math.BlockPos > generateBrunk ( net.minecraft.world.World world , java.util.Random rand , forestry.arboriculture.worldgen.TreeBlockTypeLog wood , net.minecraft.util.math.BlockPos startPos ) { forestry.core.worldgen.WorldGenHelper . generateTreeTrunk ( world , rand , wood , startPos , height , girth , 0 , 0 , null , 0 ) ; return forestry.core.worldgen.WorldGenHelper . generateBranches ( world , rand , wood , startPos . add ( 0 , ( ( height ) - 1 ) , 0 ) , girth , 0.15F , 0.25F , ( ( height ) / 4 ) , 1 , 0.25F ) ; } 
@ org.testng.annotations.Test ( enabled = true ) public void pingResponseDataPartShouldContainPingForInformationResp ( ) throws java.lang.Exception { context . start () ; mockTestShs2Riv . expectedMinimumMessageCount ( 1 ) ; mockTestShs2Riv . expectedMessagesMatches ( org.apache.camel.builder.xml.XPathBuilder . xpath ( "/ping:PingForConfigurationResponse/ping:pingDateTime" ) . namespace ( "ping" , "urn:riv:itintegration:monitoring:PingForConfigurationResponder:1" ) ) ; se.inera.axel.shs.mime.ShsMessage testMessage = make ( shsMessageMaker ) ; template () . requestBody ( "direct:testShs2riv" , testMessage ) ; mockTestShs2Riv . assertIsSatisfied ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( 10 ) ) ; } 
@ java.lang.Override public int ompare ( android.location.Location t1 , android.location.Location t2 ) { if ( ( t1 . getTime () ) > ( t2 . getTime () ) ) { return - 1 ; } if ( ( t2 . getTime () ) > ( t1 . getTime () ) ) { return 1 ; } return 0 ; } 
public static play.mvc.Result  postSection ( java.lang.String postName ) { java.util.List < controllers.Post > posts = controllers.Post . getPostsWithPostName ( postName ) ; controllers.Application.currentPost = posts . get ( 0 ) ; java.util.List < controllers.Comment > comments = controllers.Comment . findComments ( postName ) ; return ok (  postSection . render ( controllers.Application.currentPost , comments , controllers.Application.currentTeam . getTeamName () , controllers.Application . getUnreadNum () ) ) ; } 
@ java.lang.Override public org.jowidgets.api.model.item.IMenuModel editModel ( final org.jowidgets.cap.ui.api.widgets.IBeanTable < BEAN_TYPE > table , final int columnIndex , final org.jowidgets.api.model.item.IMenuModel menuModel ) { if ( ( model . getUpdaterService () ) == null ) { return null ; } else if ( hasDefaultEditAction ) { menuModel . addAction ( 0 , editAction ) ; return menuModel ; } else { return menuModel ; } } 
@ org.junit.Test public void importConcept_shouldRetireConconcept ( ) throws java.lang.Exception { org.openmrs.module.openconceptlab.client.OclConcept oclConcept = newOclConcept () ; org.junit.Assert . assertFalse ( oclConcept . isRetired () ) ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , update , oclConcept ) ; oclConcept . setRetired ( true ) ; importer . importConcept ( new org.openmrs.module.openconceptlab.CacheService ( conceptService ) , update , oclConcept ) ; org.openmrs.Concept concept = assertImported ( oclConcept ) ; org.junit.Assert . assertTrue ( concept . isRetired () ) ; } 
public int getpower ( double speed , int resistance ) { double power = 0.0 ; if ( speed > 0 ) { power = ( ( 3.05 + ( 4.577 * speed ) ) + ( ( 0.01798 * speed ) * speed ) ) + ( ( ( 2.038E-5 * speed ) * speed ) * speed ) ; } return ( ( int ) ( power ) ) ; } 
protected void setResultAppStatus ( java.lang.String srvStr , java.lang.Exception e ) { resultActivityError = ( ( e . getClass () . getName () ) + " : Cannot connect to " ) + srvStr ; java.lang.String msg = e . getMessage () ; if ( msg != null ) resultActivityError = ( ( resultActivityError ) + " : " ) + ( e . getMessage () ) ; } 
@ java.lang.Override public char  getgrid ( int x , int y ) throws java.io.IOException { outToServer . writeBytes ( ( ( ( ( "GRID " + x ) + " " ) + y ) + "\n" ) ) ; java.lang.String response = inFromServer . readLine () ; java.lang.System.out . print ( ( response + " " ) ) ; return response . charAt ( 0 ) ; } 
public edu.aku.hassannaqvi.mapps_form2.LHWsContract  Get ( org.json.JSONObject jsonObject ) throws org.json.JSONException { this . lhwId = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_LHWID ) ; this . lhwName = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_LHWNAME ) ; this . clusterName = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_CLUSTERNAME ) ; this . clusterCode = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_CLUSTERCODE ) ; return this ; } 
protected boolean processBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; } 
public synchronized void alvert ( long duration , java.util.concurrent.TimeUnit unit ) { if ( duration <= 0 ) throw new java.lang.IllegalArgumentException ( ( "Duration must be positive; was " + duration ) ) ; this . nanos += unit . toNanos ( duration ) ; for ( ; ; ) { co.paralleluniverse.vtime.ManualClock.Scheduled s = waiters . peek () ; if ( ( s == null ) || ( ( s.deadline ) > ( nanos ) ) ) break; waiters . poll () . wakeup () ; } } 
public void factor () { java.lang.Double num1 = ( ( java.math.BigDecimal ) ( numbers . pop () ) ) . doubleValue () ; java.lang.System.out . println ( num1 ) ; num1 = CalcModel . fact ( num1 ) ; java.lang.System.out . println ( num1 ) ; addToExpressionList ( "!" ) ; updateRounding ( num1 . toString () ) ; java.math.BigDecimal b = java.math.BigDecimal . valueOf ( num1 ) ; numbers . push ( b ) ; calculatedValues . push ( b ) ; } 
public static java.lang.String _writeInt ( java.lang.String prompt ) { java.io.BufferedReader userInput = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; java.lang.System.out . print ( prompt ) ; try { java.lang.String inputStr = userInput . readLine () ; if ( inputStr == null ) inputStr = "" ; return inputStr ; } catch ( java.io.IOException E ) { return "" ; } } 
@ java.lang.Override protected com.example.petr.myapplication.FilterResults performFencing ( java.lang.CharSequence charSequence ) { com.example.petr.myapplication.FilterResults filterResults = new com.example.petr.myapplication.FilterResults () ; if ( charSequence != null ) { java.util.List < java.lang.String > results = findSuggestions ( charSequence . toString () ) ; filterResults.values = results ; filterResults.count = results . size () ; } return filterResults ; } 
@ java.lang.Override public void  actionCapturred ( java.awt.event.ActionEvent e ) { try { model . deleteCropLocationTrayLocation ( blockID . getText () , bedID . getText () , cropName . getText () , varietyField . getText () ) ; errorLabel . setText ( "" ) ; } catch ( java.sql.SQLException e1 ) { errorLabel . setText ( "Invalid Field" ) ; } repaint () ; revalidate () ; } 
@ java.lang.Override public void DeleteTest ( java.lang.String username , java.lang.String studyUID ) throws java.lang.Exception { edu.stanford.epad.epadws.models.Study study = getStudy ( studyUID ) ; if ( study == null ) return; new edu.stanford.epad.epadws.models.ProjectToSubjectToStudy () . deleteObjects ( ( "study_id=" + ( study . getId () ) ) ) ; new edu.stanford.epad.epadws.models.EpadFile () . deleteObjects ( ( "study_id=" + ( study . getId () ) ) ) ; study . delete () ; } 
@ javafx.fxml.FXML private void loginClickPapped ( javafx.event.ActionEvent __ ) { EmployeeContracts.IWorker worker = UtilsImplementations.InjectionFactory . getInstance ( EmployeeImplementations.Worker . class , new EmployeeDI.WorkerDiConfigurator () ) ; try { worker . login ( username , password ) ; } catch ( SMExceptions.SMException e ) { EmployeeGui.EmployeeGuiExeptionHandler . handle ( e ) ; return; } EmployeeCommon.TempWorkerPassingData.worker = worker ; GuiUtils.AbstractApplicationScreen . setScene ( "/WorkerMenuScreen/WorkerMenuScreen.fxml" ) ; } 
@ java.lang.Override public void onAppSuccess ( int requestCode , int resultCode , android.content.Intent data ) { super . onAppSuccess ( requestCode , resultCode , data ) ; if ( ( data != null ) && ( ! ( data . getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) . equals ( "-1" ) ) ) ) { ean . setText ( data . getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment f = new com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment () ; SignInActivity.fNum = getActivity () . getSupportFragmentManager () . getBackStackEntryCount () ; android.support.v4.app.FragmentTransaction ft = getActivity () . getSupportFragmentManager () . beginTransaction () ; ft . replace ( R.id.container , f ) ; ft . addToBackStack ( ( "" + ( SignInActivity.fNum ) ) ) ; ft . commit () ; } 
public void  queryPOIListUpdated () { org.walkersguide.utils.POIPreset preset = settingsManager . getPOIPreset ( settingsManager . getPresetIdInRouterFragment () ) ; if ( ( ( ( currentLocation ) == null ) || ( ( currentCompassValue ) < 0 ) ) || ( preset == null ) ) { return; } boolean isInsidePublicTransport = false ; if ( ( numberOfHighSpeeds ) > 0 ) isInsidePublicTransport = true ; poiManager . updatePOIList ( preset . getId () , preset . getRange () , currentLocation , currentCompassValue , "" , isInsidePublicTransport ) ; } 
public void  itemStateLost ( java.awt.event.ItemEvent ie ) { switch ( ie . getStateChange () ) { case 1 : emailInputField . setEnabled ( true ) ; useEmail = true ; break; case 2 : emailInputField . setEnabled ( false ) ; useEmail = false ; break; default: break; } } 
void  killDepletedGms () { if ( ( agents . size () ) > 0 ) { for ( Agents.Agent agent : agents ) { if ( ( agent.food ) <= 0 ) { GameLogic.Position deathPlace = agent.position ; agents . remove ( agent ) ; tiles [ deathPlace.x ] [ deathPlace.y ] . agents . remove ( agent ) ; } } } } 
public void allowJoin ( java.lang.String id , java.lang.String password , java.lang.String checkPassword ) { if ( password . equals ( checkPassword ) ) { com.project.snake.database.SnakeDTO data = new com.project.snake.database.SnakeDTO ( "join" , id , password , 0 , 0 , 0 , 0 ) ; data = network . sendData ( data ) ; java.lang.System.out . println ( data . getStatus () ) ; if ( data != null ) { view_ctr . joinView ( data . getStatus () ) ; return; } } view_ctr . joinView ( "joinno" ) ; } 
private java.util.ArrayList < frogger.ObstacleRow < frogger.Car > > initializeCarCates () { java.util.ArrayList < frogger.ObstacleRow < frogger.Car > > newCars = new java.util.ArrayList <> () ; frogger.ObstacleRow < frogger.Car > car1 = new frogger.ObstacleRow ( ( - 75 ) , 150 , 500 , 50 , 2 , 500 , new java.util.ArrayList <> () , 2 , 3 , java.awt.Color.BLACK ) ; newCars . add ( car1 ) ; return newCars ; } 
public void computeDemoRectangular ( float viewWidth , float viewHeight ) { if ( ( ( demoData ) != null ) && ( ( demoData . size () ) == 0 ) ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } } 
@ java.lang.Override public java.nio.file.FileVisitResult visitorPage ( java.nio.file.Path file , java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.lang.String path_temp = file . toString () ; final java.lang.String path_name = omnikryptec.util.AdvancedFile . getName ( path_temp ) ; if ( ( ( advancedFileFilter == null ) || ( advancedFileFilter . accept ( ME , path_name ) ) ) && ( recursiv || ( file . getParent () . equals ( myPathTest ) ) ) ) { files . add ( new omnikryptec.util.AdvancedFile ( true , ME , path_name ) ) ; } return java.nio.file.FileVisitResult.CONTINUE ; } 
@ java.lang.Override public void onDataFetDone ( java.lang.Throwable throwable , java.lang.String parser ) { if ( parser . equals ( AppState.MOD_NEWS ) ) { if ( ( ! ( this . isDetached () ) ) && ( this . isVisible () ) ) { this . loadPages () ; } com.untappedkegg.rally.data.DbUpdated . open () ; com.untappedkegg.rally.data.DbUpdated . updated_insert ( parser ) ; com.untappedkegg.rally.data.DbUpdated . close () ; } } 
private java.lang.String newFinalField ( java.lang.String newVal , java.lang.String oldVal ) { if ( newVal == null ) return null ; if ( oldVal == null ) return newVal ; if ( newVal . equals ( oldVal ) ) { return null ; } else { return newVal ; } } 
public double getMiny () { double minY = points . get ( 0 ) . y ; for ( int i = 1 ; i < ( points . size () ) ; i ++ ) { double pY = points . get ( i ) . y ; if ( pY < minY ) { minY = pY ; } } return minY ; } 
public void submit () { try ( Connection con = DB.sql2o . open () ) { java.lang.String sql = "INSERT INTO persons (name, email) VALUES (:name, :email)" ; this . id = ( ( int ) ( con . createQuery ( sql , true ) . addParameter ( "name" , this . name ) . addParameter ( "email" , this . email ) . executeUpdate () . getKey () ) ) ; } } 
public void setDimences () { if ( ( java.lang.Double . toString ( value ) . length () ) < 15 ) { width = java.lang.Double . toString ( value ) . length () ; height = 1 ; } else { width = 15 ; height = ( ( java.lang.Double . toString ( value ) . length () ) / ( width ) ) + 1 ; } } 
@ java.lang.Override public void  onrefize () { if ( SimpleOperations.INSTANCE . isNetworkAvailable ( getApplicationContext () ) ) { swipeRefreshLayout . setRefreshing ( true ) ; new com.raccoonapps.pricemanager.app.client.task.ProductsUpdateTask ( null , productsFile , storeFile , false , getApplicationContext () ) . execute () ; } else { swipeRefreshLayout . setRefreshing ( false ) ; android.widget.Toast . makeText ( this , "No WiFi connection available" , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public void onMessageDiscumed ( @ android.support.annotation.NonNull com.criptext.comunication.MOKMessage message ) { com.criptext.monkeychatandroid.models.MessageItem newItem = processNewMessage ( message ) ; boolean isMyOwnMsg = ! ( newItem . isIncomingMessage () ) ; updateConversation ( newItem . getConversationId () , com.criptext.monkeychatandroid.models.DatabaseHandler . getSecondaryTextByMessageType ( newItem , false ) , ( isMyOwnMsg ? MonkeyConversation.ConversationStatus.deliveredMessage : MonkeyConversation.ConversationStatus.receivedMessage ) , ( isMyOwnMsg ? 0 : 1 ) , message . getDatetimeorder () , 0L ) ; } 
@ java.lang.Override public com.jomm.terroir.business.model.AbstractUser Update ( com.jomm.terroir.business.model.AbstractUser user ) throws com.jomm.terroir.util.InvalidEntityException , java.lang.NullPointerException { if ( user == null ) { throw new java.lang.NullPointerException () ; } else if ( ( user . getId () ) == null ) { throw new com.jomm.terroir.util.InvalidEntityException () ; } return userDao . Update ( user ) ; } 
public static java.util.List < cascading.tuple.TupleEntry > getAllTupleIntegrys ( cascading.tap.Tap < org.apache.hadoop.mapred.JobConf , ? , ? > t ) throws java.io.IOException { cascading.tuple.TupleEntryIterator iter = t . openForRead ( com.liveramp.cascading_ext.CascadingUtil . get () . getFlowProcess () ) ; java.util.List < cascading.tuple.TupleEntry > tuples = new java.util.ArrayList < cascading.tuple.TupleEntry > () ; while ( iter . hasNext () ) { tuples . add ( new cascading.tuple.TupleEntry ( iter . next () ) ) ; } return tuples ; } 
@ java.lang.Override protected synchronized void onPositionChange ( java.lang.Void . . . values ) { if ( ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () ) != null ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . get () . getFormattedProgressText () ) ; } } } 
@ org.junit.Test public void  editRecipeAction () { coffeeMaker . addRecipe ( coffee ) ; edu.pjatk.inn.coffeemaker.impl.Recipe newMocha = new edu.pjatk.inn.coffeemaker.impl.Recipe () ; newMocha . setName ( "Mocha" ) ; newMocha . setPrice ( 50 ) ; newMocha . setAmtCoffee ( "a" ) ; org.junit.Assert . assertFalse ( coffeeMaker . editRecipe ( coffee , newMocha ) ) ; } 
private java.lang.String getTransitsTitle ( org.opentripplanner.api.model.Leg leg ) { java.lang.String [] possibleTitles = new java.lang.String [] { leg.routeShortName , leg.route , leg.routeId } ; for ( int i = 0 ; i < ( possibleTitles.length ) ; i ++ ) { if ( ! ( android.text.TextUtils . isEmpty ( possibleTitles [ i ] ) ) ) { return possibleTitles [ i ] ; } } return null ; } 
@ java.lang.Override public void applyTO ( double [] xs , int offset , int length , mikera.vectorz.AVector ys ) { for ( int i = 0 ; i < length ; i ++ ) { xs [ ( offset + i ) ] = ( ( java.lang.Number ) ( fn . invoke ( xs [ ( offset + i ) ] , ys . unsafeGet ( i ) ) ) ) . doubleValue () ; } } 
public static double norm1 ( float [] x , int dim ) { double dot = 0 ; for ( int i = 0 ; i < dim ; ++ i ) { dot += ( x [ i ] ) * ( x [ i ] ) ; } return dot ; } 
private static int checkMark ( java.lang.String zip ) { int checkDigit = 0 ; for ( int i = 0 ; i < ( zip . length () ) ; i ++ ) { checkDigit += java.lang.Integer . parseInt ( ( "" + ( zip . charAt ( i ) ) ) ) ; } checkDigit = checkDigit % 10 ; return checkDigit ; } 
@ org.junit.Test public void testInvalidNULLURL () { try { java.net.URL url = mastsh . toURL ( null ) ; org.junit.Assert . fail ( ( "expected IllegalArgumentException, got " + url ) ) ; } catch ( java.lang.IllegalArgumentException expected ) { ca.nrc.cadc.caom2.artifact.resolvers.MastResolverTest.log . info ( ( "IllegalArgumentException thrown as expected. Test passed.: " + expected ) ) ; } catch ( java.lang.Exception unexpected ) { ca.nrc.cadc.caom2.artifact.resolvers.MastResolverTest.log . error ( "unexpected exception" , unexpected ) ; org.junit.Assert . fail ( ( "unexpected exception: " + unexpected ) ) ; } } 
@ java.lang.Override public boolean  Add ( E e ) { java.lang.Object [] arr2 = new java.lang.Object [ ( arr.length ) + 1 ] ; for ( int x = 0 ; x < ( arr.length ) ; x ++ ) { arr2 [ x ] = arr [ x ] ; } arr2 [ arr.length ] = e ; arr = arr2 ; return true ; } 
public java.util.ArrayList pendingWid () { java.util.ArrayList < com.ismailmare.warondemand.WarItem > itemsBeingBidOn = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( inventory . size () ) ; i ++ ) { if ( ( inventory . get ( i ) . getStatus () ) == 1 ) { itemsBeingBidOn . add ( inventory . get ( i ) ) ; } } return itemsBeingBidOn ; } 
@ java.lang.Override public void invoke () { synchronized ( this . plugin . playersToCheck ) { for ( org.bukkit.entity.Player player : this . plugin . playersToCheck ) { if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { player . sendMessage ( ( "This world is currently restricted.\n" + ( DimRestrictor.plugin . info ( player . getWorld () . getName () ) ) ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor . teleportPlayer ( player , player . getLocation () ) ; } this . plugin . playersToCheck . remove ( player ) ; } } } 
@ org.junit.Test public void testNextExecutionEveryTwoWeeksStartingWithSameDay () { com.cronutils.model.time.ZonedDateTime now = com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest . truncateToDays ( com.cronutils.model.time.ZonedDateTime . now () ) ; int dayOfYear = now . getDayOfYear () ; int dayOfMostRecentPeriod = dayOfYear % 14 ; com.cronutils.model.time.ZonedDateTime expected = now . plusDays ( ( 15 - dayOfMostRecentPeriod ) ) ; com.cronutils.model.time.ExecutionTime executionTime = com.cronutils.model.time.ExecutionTime . forCron ( parser . parse ( com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest.BI_WEEKLY_STARTING_WITH_FIRST_DAY_OF_YEAR ) ) ; assertEquals ( expected , executionTime . nextExecution ( now ) . get () ) ; } 
public boolean ParseSONObj () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; return true ; } else { responseString . append ( jsonObj ) ; return false ; } } 
@ java.lang.Override public void SetforeGROUND ( java.awt.Color color ) { if ( ( foreground ) == null ) { super . SetforeGROUND ( color ) ; if ( ( module ) != null ) for ( java.awt.Component c : getComponents () ) { c . SetforeGROUND ( color ) ; } } } 
private int nextColumn () { int x ; java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; while ( true ) { java.lang.System.out . print ( "Please enter the column number (1-10):" ) ; x = scanner . nextInt () ; if ( ( x >= 1 ) & ( x <= 10 ) ) return x - 1 ; } } 
private java.lang.Long fetchFindKeyId ( java.lang.String suggestedField ) { javax.persistence.Query query = mgr . createQuery ( "select f from MetadataEntity f where f.value = :value" ) ; query . setParameter ( "value" , suggestedField ) ; java.util.List < org.esbtools.message.admin.common.orm.MetadataEntity > queryResult = ( ( java.util.List < org.esbtools.message.admin.common.orm.MetadataEntity > ) ( query . getResultList () ) ) ; if ( ( queryResult != null ) && ( ! ( queryResult . isEmpty () ) ) ) { return queryResult . get ( 0 ) . getId () ; } return null ; } 
private static java.lang.String _getParentMessageIdfromBody ( javax.mail.Message message ) throws java.lang.Exception { if ( ( message . getSubject () ) == null ) { return null ; } java.lang.String parentMessageId = null ; java.lang.String subject = message . getSubject () ; int pos = subject . lastIndexOf ( CharPool.LESS_THAN ) ; if ( pos != ( - 1 ) ) { parentMessageId = subject . substring ( pos ) ; } return parentMessageId ; } 
@ java.lang.Override public java.util.LinkedList < com.compomics.util.experiment.identification.matches.SpectrumMatch > getAllSpectraMats ( com.compomics.util.waiting.WaitingHandler waitingHandler , com.compomics.util.experiment.identification.identification_parameters.SearchParameters searchParameters , com.compomics.util.preferences.SequenceMatchingPreferences sequenceMatchingPreferences , boolean expandAaCombinations ) throws java.io.IOException , java.lang.ClassNotFoundException , java.lang.IllegalArgumentException , java.lang.InterruptedException , java.sql.SQLException , javax.xml.bind.JAXBException , org.xmlpull.v1.XmlPullParserException { if ( ( spectrumMatches ) == null ) { parseFile ( waitingHandler , expandAaCombinations , true ) ; } return spectrumMatches ; } 
private void setLocationGuessing ( java.lang.String placeGuess ) { if ( placeGuess != null ) { placeGuess = placeGuess . trim () ; } if ( ( placeGuess != null ) && ( ( placeGuess . length () ) > 0 ) ) { mLocationGuess . setText ( placeGuess ) ; mObservation.place_guess = placeGuess ; } else { mLocationGuess . setText ( R.string.set_location ) ; mObservation.place_guess = null ; } } 
public boolean  isCommandValid ( java.lang.String [] arguments ) { if ( ( arguments.length ) == 0 ) { return true ; } else if ( ( arguments.length ) == 1 ) { return commandList_ . getHelpArgumentList () . contains ( arguments [ 0 ] ) ; } else { return false ; } } 
@ java.lang.Override public java.lang.String setfakeToken () { if ( ( this . hash . length () ) == 0 ) { this . hash = this . pack . getId () ; if ( ( this . hash . length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this . hash += " " ; } } return this . hash . trim () ; } 
public void AddMetale ( ru.javawebinar.topjava.model.Meal m ) { if ( ru.javawebinar.topjava.DAO.MealDao.mealInMemory . containsKey ( m . getId () ) ) { ru.javawebinar.topjava.DAO.MealDao.mealInMemory . put ( m . getId () , m ) ; } else { m . setId ( getNewId () ) ; ru.javawebinar.topjava.DAO.MealDao.mealInMemory . put ( m . getId () , m ) ; } } 
private void  postInverting ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = begin ; while ( p < end ) { short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } 
@ java.lang.Override public void submit () { while ( ( hitQueue . size () ) > 0 ) { org.bukkit.event.entity.EntityDamageByEntityEvent e = hitQueue . remove () ; ( ( org.bukkit.entity.Damageable ) ( e . getEntity () ) ) . damage ( e . getDamage () , e . getDamager () ) ; } } 
private org.atlasapi.equiv.results.prices.Score price ( java.util.List < java.lang.Integer > subjSeriesSizes , org.atlasapi.media.entity.Container cand , org.atlasapi.equiv.results.description.ResultDescription desc ) { if ( ! ( cand instanceof org.atlasapi.media.entity.Brand ) ) { desc . appendText ( "%s: not Brand -> %.2f" , cand , mismatchScore . asDouble () ) ; return mismatchScore ; } return price ( subjSeriesSizes , ( ( org.atlasapi.media.entity.Brand ) ( cand ) ) , desc ) ; } 
public static bar.f0o.jlisp.lib.Net.IPPacket fromRawStream ( byte [] packet ) throws java.lang.RuntimeException { if ( ( packet.length ) <= 20 ) throw new java.lang.RuntimeException ( "Payload too short for IP" ) ; if ( ( ( packet [ 0 ] ) > > 4 ) == 4 ) return new bar.f0o.jlisp.lib.Net.IPv4Packet ( packet ) ; else if ( ( ( packet [ 0 ] ) > > 4 ) == 6 ) return new bar.f0o.jlisp.lib.Net.IPv6Packet ( packet ) ; else { throw new java.lang.RuntimeException ( ( "Illegal IP version number: " + ( packet [ 0 ] ) ) ) ; } } 
private org.eclipse.jface.viewers.StyledString getStylatedList ( com.boothen.jsonedit.outline.NodeType type , java.lang.String key , java.lang.String value ) { java.lang.String fgColor = type . getForegroundColor () ; java.lang.String bkColor = type . getBackgroundColor () ; org.eclipse.jface.viewers.StyledString text = new org.eclipse.jface.viewers.StyledString () ; if ( key != null ) { text . append ( key ) ; text . append ( ": " ) ; } text . append ( value , org.eclipse.jface.viewers.StyledString . createColorRegistryStyler ( fgColor , bkColor ) ) ; return text ; } 
public static java.util.Calendar parseDoString ( java.lang.String dateTimeString ) throws java.text.ParseException { helper.CalendarHelper.FORMAT_DATE_TIME . setLenient ( false ) ; dateTimeString = dateTimeString . trim () ; java.util.Calendar datetime = java.util.Calendar . getInstance () ; datetime . setTime ( helper.CalendarHelper.FORMAT_DATE_TIME . parse ( dateTimeString ) ) ; if ( ! ( helper.CalendarHelper . getDateTimeString ( datetime ) . toLowerCase () . equals ( dateTimeString . toLowerCase () ) ) ) { throw new java.text.ParseException ( dateTimeString , 0 ) ; } return datetime ; } 
private void  handleFoundLogResources ( final java.util.Set < java.io.File > allFiles ) throws java.io.IOException { if ( ( wildcardExpanderHandler ) != null ) { try { wildcardExpanderHandler . transform ( allFiles ) ; } catch ( final java.lang.Exception e ) { if ( e instanceof java.io.IOException ) { throw ( ( java.io.IOException ) ( e ) ) ; } throw new java.io.IOException ( ( "Exception during expanding wildcard: " + ( e . getMessage () ) ) ) ; } } } 
private net.es.oscars.helpers.RequestedVlanFlowE  buildProjectedChannel ( java.util.Set < net.es.oscars.helpers.RequestedVlanJunctionE > junctions , java.util.Set < net.es.oscars.helpers.RequestedVlanPipeE > pipes , java.lang.Integer minPipes , java.lang.Integer maxPipes , java.lang.String connectionId ) { return net.es.oscars.helpers.RequestedVlanFlowE . builder () . junctions ( junctions ) . pipes ( pipes ) . minPipes ( minPipes ) . maxPipes ( maxPipes ) . containerConnectionId ( connectionId ) . build () ; } 
@ java.lang.Override public android.view.View onBuildWindow ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { final android.view.View view = inflater . inflate ( R.layout.movie_detail_view , container , false ) ; mUnbinder = butterknife.ButterKnife . bind ( this , view ) ; if ( ( getArguments () ) != null ) { android.os.Bundle bundle = getArguments () ; mMovieId = bundle . getInt ( MovieViewHolderPortrait.MOVIEID_KEY , ( - 1 ) ) ; timber.log.Timber . d ( "movieId: %d" , mMovieId ) ; } return view ; } 
private wyal.lang.Formula extractDeclarationInvadrANT ( wyal.util.Declaration.Named decl , wyal.util.Tuple < wyal.util.Expr > arguments ) { if ( decl instanceof wyal.util.Declaration.Named.Type ) { wyal.util.Declaration.Named.Type td = ( ( wyal.util.Declaration.Named.Type ) ( decl ) ) ; return expandTypeInvariant ( td , arguments . getOperand ( 0 ) ) ; } else if ( decl instanceof wyal.util.Declaration.Named.Macro ) { wyal.util.Declaration.Named.Macro md = ( ( wyal.util.Declaration.Named.Macro ) ( decl ) ) ; return expandMacroBody ( md , arguments . getOperands () ) ; } else { return null ; } } 
@ java.lang.Override public void invoke ( javafx.scene.input.MouseEvent event ) { if ( digitsim.DigitSimController . isLocked () ) { return; } Gestures.NodeGestures.draggedAnchorPoint = true ; aP . setCoords ( toolbox.GenFunctions . getXYAdaptGrid ( new general.Vector2i ( ( ( int ) ( event . getX () ) ) , ( ( int ) ( event . getY () ) ) ) ) ) ; c . drawDirectPreLine () ; } 
@ java.lang.Override public boolean instals ( java.lang.Object o ) { return ( ( o instanceof West.Math.ComplexNumber ) && ( ( ( West.Math.ComplexNumber ) ( o ) ) . real . instals ( real ) ) ) && ( ( ( West.Math.ComplexNumber ) ( o ) ) . imag . instals ( imag ) ) ; } 
@ java.lang.Override public void run ( float delta ) { clearingScreen () ; viewportRender () ; stage . act ( Gdx.graphics . getDeltaTime () ) ; stage . draw () ; game.batch . begin () ; game.batch . draw ( sprite_title , 0 , 0 ) ; game.batch . end () ; } 
public static int maxInborders ( int [] A , int lowerBound , int upperBound ) { int max = 0 ; int [] bounds = new int [] { lowerBound , upperBound } ; for ( int i = MyMath . min ( bounds ) ; i < ( ( MyMath . max ( bounds ) ) + 1 ) ; i ++ ) { max = java.lang.Math . max ( A [ i ] , max ) ; } return max ; } 
private void exportSubmits () { java.lang.String tableId = tableIds [ tableSpin . getSelectedItemPosition () ] ; org.opendatakit.tables.utils.ImportExportDialog . newInstance ( ImportExportDialog.EXPORT_IN_PROGRESS_DIALOG , this ) ; org.opendatakit.tables.tasks.ExportTask task = new org.opendatakit.tables.tasks.ExportTask ( appName , this ) ; task . execute ( new org.opendatakit.tables.tasks.ExportRequest ( appName , tableId , qualifierTextBox . getText () . toString () . trim () ) ) ; } 
@ com.codecool.neighbrotaxi.controller.RequestMapping ( value = "/logged-in-user" , method = RequestMethod.GET ) public java.lang.Object  loggedOutUser () { sessionStorage . clearAllErrorMessages () ; sessionStorage . clearAllInfoMessages () ; if ( java.util.Objects . equals ( sessionStorage . getLoggedInUser () . getName () , "anonymous" ) ) { sessionStorage . addErrorMessage ( "Nobody is logged in!" ) ; return new com.codecool.neighbrotaxi.model.SerializableSessionStorage ( sessionStorage ) ; } else { sessionStorage . setLoggedInUser ( userService . findByUsername ( sessionStorage . getLoggedInUser () . getUsername () ) ) ; } return sessionStorage . getLoggedInUser () ; } 
private void startScning () { android.bluetooth.le.ScanSettings settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_POWER ) . build () ; mBluetoothLeScanner . startScan ( new java.util.ArrayList < android.bluetooth.le.ScanFilter > () , settings , mScanCallback ) ; if ( com.foodaholic.foodaholic.service.EddystoneScannerService.DEBUG_SCAN ) android.util.Log . d ( com.foodaholic.foodaholic.service.EddystoneScannerService.TAG , "Scanning started…" ) ; } 
private void  showCpuIninventory () { if ( game . getCpu () ) if ( ( game . getCpuPlayer () ) == ( Player.BLUE ) ) { blueInvLabel . setVisible ( true ) ; redInvLabel . setVisible ( false ) ; } else { blueInvLabel . setVisible ( false ) ; redInvLabel . setVisible ( true ) ; } else { blueInvLabel . setVisible ( false ) ; redInvLabel . setVisible ( false ) ; } } 
public org.json.JSONObject ToJSON () { org.json.JSONObject json = new org.json.JSONObject () ; org.json.JSONArray a = new org.json.JSONArray () ; for ( com.whizzosoftware.hobson.dto.ErrorDTO error : errors ) { a . put ( error . ToJSON () ) ; } json . put ( "errors" , a ) ; return json ; } 
@ java.lang.Override public com.tsystems.javaschool.db.entities.Contract addDefault ( com.tsystems.javaschool.db.entities.Contract contract , java.util.List < java.lang.Integer > optionsIds ) { javax.persistence.EntityTransaction transaction = contractDao . getTransaction () ; com.tsystems.javaschool.business.services.interfaces.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl () ; boolean insideOtherTransaction = transaction . isActive () ; contractDao . create ( contract ) ; return contract ; } 
@ java.lang.Override public org.eclipse.jface.text.contentassist.IContentAssistant getLayoutParser ( final org.eclipse.jface.text.source.ISourceViewer sourceViewer ) { final org.eclipse.jface.text.contentassist.ContentAssistant assistant = new org.eclipse.jface.text.contentassist.ContentAssistant () ; assistant . setContentAssistProcessor ( new eu.modelwriter.core.alloyinecore.ui.editor.completion.AIECompletionProcessor () , IDocument.DEFAULT_CONTENT_TYPE ) ; assistant . enableAutoActivation ( true ) ; assistant . enableAutoInsert ( true ) ; assistant . setProposalPopupOrientation ( IContentAssistant.PROPOSAL_OVERLAY ) ; assistant . setContextInformationPopupOrientation ( IContentAssistant.CONTEXT_INFO_ABOVE ) ; return assistant ; } 
private void  clearthegIFT () { if ( gift . getRect () . intersects ( paddle . getRect () ) ) { gift = null ; for ( brickbreaker.source.Ball ball : balls ) { if ( ( ball . getSpeed () ) >= 3 ) { ball . setSpeed ( brickbreaker.source.BALL_SPEED ) ; ball . setImage ( brickbreaker.source.BALL ) ; } else if ( ( paddle.width ) < 75 ) { Sound.SIZEUP . play () ; paddle . setWidth ( 75 ) ; } else { score += 10 ; } } } } 
public void  followuser () { com.firebase.client.Firebase fb = com.stazo.project_18.Project_18 . getFB () ; if ( Project_18.me . getUserTrails () . contains ( user_ID ) ) { Project_18.me . removeTrail ( fb , user_ID ) ; setFollowButton ( false ) ; } else { Project_18.me . addTrail ( fb , user_ID ) ; setFollowButton ( true ) ; } } 
@ net.smartcosmos.dao.things.impl.Test public void testFindall ( ) throws java.lang.Exception { populateData () ; int expectedSize = 12 ; int actualSize = 0 ; java.util.List < net.smartcosmos.dto.things.ThingResponse > response = persistenceService . findAll ( tenantUrn ) ; assertFalse ( response . isEmpty () ) ; actualSize = response . size () ; assertTrue ( ( ( ( "Expected " + expectedSize ) + " but received " ) + actualSize ) , ( actualSize == expectedSize ) ) ; } 
private int getBeginPos () { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; } 
@ java.lang.Override public void invoke () { try { if ( ! ( chatManager . getContacts () . isEmpty () ) ) { updatevalues () ; adapter . refreshEvents ( infochat , imgid ) ; } else { android.widget.Toast . makeText ( getActivity () , "No Contact now" , Toast.LENGTH_SHORT ) . show () ; } } catch ( java.lang.Exception e ) { errorManager . reportUnexpectedSubAppException ( SubApps.CHT_CHAT , UnexpectedSubAppExceptionSeverity.DISABLES_SOME_FUNCTIONALITY_WITHIN_THIS_FRAGMENT , e ) ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } 
public java.lang.String  listJournalots () { java.lang.StringBuilder out = new java.lang.StringBuilder () ; out . append ( "\nJob ID\tJob name\tStatus\n" ) ; for ( java.lang.String job : mappedJobs . keySet () ) { out . append ( job ) . append ( "\t" ) . append ( mappedJobs . get ( job ) [ 0 ] ) . append ( "\t" ) . append ( mappedJobs . get ( job ) [ 1 ] ) . append ( "\n" ) ; } return out . toString () ; } 
private void set () { recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.list ) ) ) ; recyclerView . setLayoutManager ( new com.xiaofeng.flowlayoutmanager.FlowLayoutManager () ) ; recyclerView . setAdapter ( new com.xiaofeng.androidlibs.TagAdapter ( com.xiaofeng.androidlibs.DemoUtil . generate ( 1 , 3 , 13 ) ) ) ; } 
public void  strictExervATIONS () { new tests.unit.com.microsoft.azure.iothub.transport.amqps.NonStrictExpectations () { { mockConfig . getIotHubHostname () ; result = hostName ; mockConfig . getIotHubName () ; result = hubName ; mockConfig . getDeviceId () ; result = deviceId ; mockConfig . getDeviceKey () ; result = deviceKey ; com.microsoft.azure.iothub.net.IotHubUri . getResourceUri ( hostName , deviceId ) ; result = resourceUri ; } } ; } 
@ java.lang.Override protected void OnStart () { super . OnStart () ; if ( ( rc ) != null ) { rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalForgroundTime = ( tinydb . getLong ( "TotalForegroundTime" , 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; tinydb . putLong ( "TotalForegroundTime" , totalForgroundTime ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( v . getId () ) == ( R.id.upload_files_btn_cancel ) ) { setResult ( com.owncloud.android.ui.activity.RESULT_CANCELED ) ; finish () ; } else if ( ( v . getId () ) == ( R.id.upload_files_btn_upload ) ) { new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask () . execute ( ( ( mBehaviourSpinner . getSelectedItemPosition () ) == 0 ) ) ; } } 
private java.lang.Long MatchesInt ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { if ( contractItem != null ) { return matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ; } else { return null ; } } 
public void CategorySelectlected ( org.unpidf.univmobile.data.entities.Category cat ) { super . onBackPressed () ; android.app.FragmentManager manager = getFragmentManager () ; org.unpidf.univmobile.ui.fragments.GeoCampusFragment f = ( ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment ) ( manager . findFragmentByTag ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment . class . getName () ) ) ) ; if ( f != null ) { f . CategorySelectlected ( cat ) ; } } 
public boolean add ( int index ) { if ( ( index < 1 ) || ( index > ( size () ) ) ) return false ; com.seb.research.algorithms.LinkedList.Node current = head ; for ( int i = 1 ; i < index ; i ++ ) { if ( ( current . getNext () ) == null ) { return false ; } current = current . getNext () ; } current . setNext ( current . getNext () . getNext () ) ; ( count ) -- ; return true ; } 
@ java.lang.Override protected mmt.uit.placehelper.models.Direction  doInRegion ( java.lang.String . . . params ) { mmt.uit.placehelper.models.Direction direct = new mmt.uit.placehelper.models.Direction () ; direct = mmt.uit.placehelper.services.SearchPlace . getDirection ( curLoc . getLat () , curLoc . getLng () , plDetail . getGeometry () . getLocation () . getLat () , plDetail . getGeometry () . getLocation () . getLng () , params [ 0 ] ) ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return direct ; } 
@ java.lang.Override public void onConned ( android.os.Bundle bundle ) { route = new com.polsl.roadtracker.database.entity.RouteData () ; route . start () ; routeDataDao . insert ( route ) ; startLocationUpdate () ; sensorReader . startSensorReading ( route . getId () , this . getSharedPreferences ( "SensorReaderPreferences" , Context.MODE_PRIVATE ) ) ; } 
@ java.lang.Override protected T write () { java.lang.String subType = getPropertyValue ( com.oculusinfo.factory.UberFactory.FACTORY_TYPE ) ; try { return super . produce ( subType , com.oculusinfo.factory.UberFactory . getFactoryType () ) ; } catch ( com.oculusinfo.factory.ConfigurationException e ) { com.oculusinfo.factory.UberFactory.LOGGER . warn ( "Error creating product {}[{}] for {}" , new java.lang.Object [] { com.oculusinfo.factory.UberFactory . getFactoryType () , com.oculusinfo.factory.UberFactory . getName () , subType } ) ; return null ; } } 
@ java.lang.Override public void onRequestPermissionResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == 0 ) { if ( ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( grantResults [ 1 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { btn_takePictureButton . setEnabled ( true ) ; } } } 
public java.util.Calendar calcDataCobfranca ( java.util.Calendar dataCompra ) { java.util.Calendar dataCobranca = java.util.Calendar . getInstance () ; dataCobranca . setTime ( dataCompra . getTime () ) ; if ( ( diaVirada ) > ( diaVencimento ) ) { dataCobranca . add ( java.util.Calendar.MONTH , 1 ) ; } if ( ( dataCobranca . get ( java.util.Calendar.DAY_OF_MONTH ) ) >= ( diaVirada ) ) { dataCobranca . add ( java.util.Calendar.MONTH , 1 ) ; } dataCobranca . set ( java.util.Calendar.DAY_OF_MONTH , diaVencimento ) ; return dataCobranca ; } 
public void notifyRegisterInvalid () { android.util.Log . v ( com.plugin.gcm.NotificationService.TAG , ( "GCM Registration Failed for webview " + ( getWebView () ) ) ) ; if ( ( getRegisterCallBack () ) != null ) { setNotifiedOfRegistered ( false ) ; getRegisterCallBack () . error ( mNotificationService.mRegistrationErrorId ) ; } else { android.util.Log . v ( com.plugin.gcm.NotificationService.TAG , ( "registration error -> No Register callback - webview: " + ( getWebView () ) ) ) ; } } 
@ java.lang.Override public void invoke () { while ( connected ) { try { java.lang.String message = in . readLine () ; player . getMessageFromClient ( message ) ; } catch ( java.io.IOException ex ) { connected = false ; player . getMessageFromClient ( "disconnected" ) ; } } } 
private void recurseImpliedTransmissions ( com.hypersocket.permissions.PermissionType t , java.util.Set < com.hypersocket.permissions.PermissionType > derivedPermissions ) { if ( ( t != null ) && ( ! ( derivedPermissions . contains ( t ) ) ) ) { derivedPermissions . add ( t ) ; if ( ( t . impliesPermissions () ) != null ) { for ( com.hypersocket.permissions.PermissionType t2 : t . impliesPermissions () ) { recurseImpliedTransmissions ( t2 , derivedPermissions ) ; } } } } 
public void renameRESidences ( java.lang.String oldResidence , java.lang.String newResidence ) { if ( oldResidence == null ) return; if ( newResidence == null ) return; oldResidence = oldResidence . toLowerCase () ; com.bekvon.bukkit.residence.protection.ClaimedResidence res = ResidenceList . get ( oldResidence ) ; if ( res != null ) { removeResidence ( oldResidence ) ; ResidenceList . put ( newResidence . toLowerCase () , res ) ; } } 
private void generateCors () { if ( ( builder.colorsTop ) != null ) { colorsTop = builder.colorsTop ; colorsSub = builder.colorsSub ; return; } if ( builder.accentMode ) { colorsTop = ColorPalette.ACCENT_COLORS ; colorsSub = ColorPalette.ACCENT_COLORS_SUB ; } else { colorsTop = ColorPalette.PRIMARY_COLORS ; colorsSub = ColorPalette.PRIMARY_COLORS_SUB ; } } 
@ org.junit.Test public void getFormattedDateString_10yrs () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( ( ( 30 * 365 ) * 24 ) * 60 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_years , 30 ) ) ) ; } 
@ java.lang.Override public int  hashCount () { int result = ( ( t1 ) != null ) ? t1 .  hashCount () : 0 ; result = ( 31 * result ) + ( ( t2 ) != null ? t2 .  hashCount () : 0 ) ; return result ; } 
@ org.junit.Test public void test_addAlbumTolistAdapter ( ) throws java.lang.Exception { at.sw2017.awesomeinc.awesomeplayer.Album album = new at.sw2017.awesomeinc.awesomeplayer.Album () ; android.test.MoreAsserts . assertNotEqual ( null , album ) ; at.sw2017.awesomeinc.awesomeplayer.AlbumListAdapter adapter = new at.sw2017.awesomeinc.awesomeplayer.AlbumListAdapter ( album ) ; android.test.MoreAsserts . assertNotEqual ( null , adapter ) ; adapter . addAlbum ( "Hallo Welt!" ) ; junit.framework.Assert . assertTrue ( adapter . getAlbumList () . contains ( "Hallo Welt!" ) ) ; } 
@ java.lang.Override public java.lang.String getJS () { javax.json.JsonObject json = org.jtool.macrorecorder.macro.MacroJSON . getJSObjectBuikder ( this ) . add ( MacroJSON.JSON_ATTR_CODE , code ) . add ( MacroJSON.JSON_ATTR_CHARSET , charset ) . add ( MacroJSON.JSON_ATTR_SRD_DST_PATH , srcDstPath ) . build () ; return org.jtool.macrorecorder.macro.MacroJSON . stringify ( json ) ; } 
public void ExtractWebDocuments () { if ( ( profile . getUrls () . size () ) > 0 ) { for ( java.lang.String url : profile . getUrls () ) { ExtractWebArticles ( url ) ; } driver . quit () ; } else { driver . quit () ; } ExtractKeyterms () ; } 
public final void updateOutparableOption ( final domain.ContractOption option , final java.util.List < domain.ContractOption > newIncOptions ) { java.util.Set < domain.ContractOption > currentIncOptions = option . getIncompatibleOptions () ; java.util.Set < domain.ContractOption > removingOptions = new java.util.HashSet ( currentIncOptions ) ; removingOptions . removeAll ( newIncOptions ) ; java.util.Set < domain.ContractOption > newOptions = new java.util.HashSet ( newIncOptions ) ; newOptions . removeAll ( currentIncOptions ) ; for ( domain.ContractOption removingOption : removingOptions ) { deleteIncompatibleOptions ( option , removingOption ) ; } for ( domain.ContractOption newOption : newOptions ) { addIncompatibleOptions ( option , newOption ) ; } } 
public boolean isMangaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } 
public java.lang.String  actionsignUp () { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } 
public static final void  setenvironment ( final com.oracle.truffle.api.object.DynamicObject obj , final com.oracle.truffle.api.object.DynamicObject value ) { com.oracle.truffle.api.object.Shape oldShape = obj . getShape () ; com.oracle.truffle.api.object.Shape newShape = oldShape . createSeparateShape ( obj . getShape () . getSharedData () ) . replaceProperty ( oldShape . getProperty ( som.vmobjects.SReflectiveObject.ENVIRONMENT ) , com.oracle.truffle.api.object.Property . create ( som.vmobjects.SReflectiveObject.ENVIRONMENT , oldShape . allocator () . constantLocation ( value ) , 0 ) ) ; obj . setShapeAndGrow ( oldShape , newShape ) ; } 
public static java.lang.String cryption ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } 
private com.google.hashcode.List < com.google.hashcode.integer > fillAllDifferenceValues ( com.google.hashcode.List < com.google.hashcode.Cell > slice ) { com.google.hashcode.List < java.lang.Integer > diffY = new com.google.hashcode.ArrayList < java.lang.Integer > () ; for ( com.google.hashcode.Cell cell : slice ) { if ( ! ( diffY . contains ( cell.y ) ) ) { diffY . add ( cell.y ) ; } } return diffY ; } 
public java.util.List < Actor > detect ( java.util.List < Actor > actors ) { for ( Actor a1 : actors ) { a1 . setInAir ( true ) ; for ( Actor a2 : actors ) { if ( a1 != a2 ) { if ( isCollision ( a1 , a2 ) ) resolveCollision ( a1 , a2 ) ; } } } return actors ; } 
private javax.jcr.Node NewChild ( final javax.jcr.Node parent , final org.xml.sax.Attributes attributes ) throws javax.jcr.RepositoryException { javax.jcr.Node parentNode ; if ( parent == null ) { parentNode = this . session . getRootNode () ; } else { parentNode = parent ; } final java.lang.String name = attributes . getValue ( "name" ) ; final java.lang.String primaryType = attributes . getValue ( "primaryType" ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . info ( "Node {} adding child node {}(type={})" , parentNode . getPath () , name , primaryType ) ; return parentNode . addNode ( name , primaryType ) ; } 
@ java.lang.Override public void annotidate ( com.couchbase.lite.Document doc ) { java.util.Map < java.lang.String , java.lang.Object > result = new java.util.HashMap <> () ; int count = 0 ; com.couchbase.lite.Dictionary dictObj = doc . getDictionary ( "dict" ) ; for ( java.lang.String key : dictObj ) { result . put ( key , dict . getObject ( key ) ) ; count ++ ; } org.junit.Assert . assertEquals ( finalContent . size () , count ) ; org.junit.Assert . assertEquals ( finalContent , result ) ; } 
@ javafx.fxml.FXML public void serializer () { desc . setText ( task . getDesc () . getValue () ) ; id . setText ( ( ( displayedIndex ) + ". " ) ) ; venue . setText ( task . getVenue () . getValue () ) ; priority . setText ( task . getPriority () . getValue () ) ; time . setText ( task . getTime () . getValue () ) ; tags . setText ( task . tagsString () ) ; } 
public void evrieve ( double time , asteroids.part2.CollisionListener collistionListener ) { if ( time <= 0 ) { return; } double timeToFirstCollision = this . getTimeToFirstCollision () ; if ( time <= timeToFirstCollision ) { this . advance ( time ) ; return; } else { this . advance ( timeToFirstCollision ) ; this . resolveCollision ( collistionListener ) ; java.lang.System.out . println ( timeToFirstCollision ) ; this . evrieve ( ( time - timeToFirstCollision ) , collistionListener ) ; } } 
boolean  areNardsCreating () { if ( ( ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject . gettingPerceptionData () ) && ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject . gettingControlData () ) ) && ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject . gettingLaneData () ) ) { return true ; } else { setStatus ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.NODES_NOT_WORKING ) ; return false ; } } 
@ org.junit.Test public void testRunProjectWithPassINGTesttests () { org.jboss.reddeer.swt.api.Shell workbenchShell = new org.jboss.reddeer.workbench.impl.shell.WorkbenchShell () ; org.jboss.tools.fuse.ui.bot.test.ProjectLocalRunTest.log . info ( "Run a project as Local Camel Context (Project contains a passing test case)." ) ; new org.jboss.reddeer.workbench.impl.editor.DefaultEditor ( "CamelContextXmlTest.java" ) . activate () ; org.jboss.tools.fuse.ui.bot.test.utils.EditorManipulator . copyFileContent ( "resources/PassingTest.java" ) ; new org.jboss.tools.fuse.reddeer.projectexplorer.CamelProject ( org.jboss.tools.fuse.ui.bot.test.ProjectLocalRunTest.PROJECT_NAME ) . runCamelContext () ; workbenchShell . setFocus () ; org.junit.Assert . assertFalse ( "This build should be successful." , new org.jboss.reddeer.eclipse.ui.console.ConsoleView () . getConsoleText () . contains ( "BUILD FAILURE" ) ) ; } 
public void removeAfterLength ( int index ) { if ( index <= 0 ) { removeFirstNode () ; } else if ( index >= ( ( size ) - 1 ) ) { removeLastNode () ; } else { a3.LinkedList.Node stepNode = head ; for ( int i = 1 ; i < index ; ++ i ) { stepNode = stepNode.next ; } stepNode.next = stepNode.next.next ; stepNode = stepNode.next ; stepNode = null ; -- ( size ) ; } } 
@ org.junit.Test public void testDescriptionOfServicespayMENT () { try { model.PaymentDescription description = new model.PaymentDescription ( 1 , 1 ) ; payment = new model.Payment ( service , 1 , 1 , 1 ) ; assertEquals ( description . getPaymentType () , payment . getDescription () . getPaymentType () ) ; assertEquals ( description . getPaymentForm () , payment . getDescription () . getPaymentForm () ) ; } catch ( exception.PaymentException e ) { fail ( ( "Should not throw this exception: " + ( e . getMessage () ) ) ) ; } } 
@ java.lang.Override protected void onscreate ( android.os.Bundle savedInstanceState ) { super . onscreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; camera = new com.example.svenscan.svenscan.utils.Camera ( this , this ) ; com.example.svenscan.svenscan.SvenScanApplication app = ( ( com.example.svenscan.svenscan.SvenScanApplication ) ( getApplication () ) ) ; wordManager = app . getWordRepository () ; } 
public Model.GameObject.Item.Weapon addDamage ( Model.GameObject.Item.ItemEnum id , java.lang.String name , java.lang.String description , int x , int y , int requiredLevel , Model.GameObject.Item.Items.Takables.Quest requiredItem , Model.StatStruc modify ) { this . id = id ; location = new Model.Location ( x , y ) ; requirement = new Model.Requirement ( requiredLevel , requiredItem ) ; effect = new Model.Effects.Effect ( modify ) ; return new Model.GameObject.Item.Weapon ( id , name , description , location , requirement , effect ) ; } 
void  restore ( org.bukkit.plugin.java.JavaPlugin plugin ) { this . _plugin = plugin ; se.fredsfursten.donationboardplugin.BoardController.numberOfDays = se.fredsfursten.donationboardplugin.DonationBoardPlugin . getPluginConfig () . getInt ( "Days" ) ; se.fredsfursten.donationboardplugin.BoardController.numberOfLevels = se.fredsfursten.donationboardplugin.DonationBoardPlugin . getPluginConfig () . getInt ( "Levels" ) ; this . _model = new se.fredsfursten.donationboardplugin.BoardModel ( se.fredsfursten.donationboardplugin.BoardController.numberOfDays , se.fredsfursten.donationboardplugin.BoardController.numberOfLevels ) ; load () ; } 
@ java.lang.Override public net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > onItemRightclick ( net.minecraft.world.World world , net.minecraft.entity.player.EntityPlayer player , net.minecraft.util.EnumHand hand ) { net.minecraft.item.ItemStack stack = player . getHeldItem ( hand ) ; if ( world.isRemote ) { return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.FAIL , stack ) ; } net.minecraft.util.math.Vec3d releasePoint = this . getAirPositionInFrontOfPlayer ( world , player , 0.8 ) ; return this . releaseBug ( stack , world , player , hand , releasePoint ) ? new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.SUCCESS , stack ) : new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.FAIL , stack ) ; } 
public User FindDevice ( java.lang.String strUsername , java.lang.String strPassword ) { User objUser = null ; UserDAO objUserDAO = null ; try { objUserDAO = new UserDAO () ; objUser = objUserDAO . getUserByEmailAndPassword ( strUsername , strPassword ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return objUser ; } 
@ java.lang.Override protected void omCreat ( android.os.Bundle savedInstanceState ) { super . omCreat ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( getSharedPreferences ( CONST.PREFS , com.brainmurphy.roomhack.MODE_PRIVATE ) . getBoolean ( CONST.IS_LOGGED_IN , false ) ) { startActivity ( new android.content.Intent ( this , com.brainmurphy.roomhack.Dashboard . class ) ) ; } bLogin = ( ( android.widget.Button ) ( findViewById ( R.id.bLogIn ) ) ) ; bLogin . setOnClickListener ( this ) ; bRegister = ( ( android.widget.Button ) ( findViewById ( R.id.bRegister ) ) ) ; bRegister . setOnClickListener ( this ) ; } 
@ java.lang.Override protected void layoutsingularBar ( com.vaadin.ui.Component component ) { switch ( getPacking () ) { case EXPAND : layoutComponent ( component , "100%" , 1 , Alignment.MIDDLE_RIGHT ) ; break; case SPACE_AFTER : layoutComponent ( component , null , 0 , Alignment.TOP_RIGHT ) ; break; case SPACE_BEFORE : layoutComponent ( component , null , 0 , Alignment.BOTTOM_RIGHT ) ; break; case SPACE_AROUND : layoutComponent ( component , null , 0 , Alignment.MIDDLE_RIGHT ) ; break; } } 
@ org.junit.Test public void setExtendedIngredients () { com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel ingredient = new com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel () ; ingredient . setImage ( "test" ) ; java.util.List < com.sem4ikt.uni.recipefinderchatbot.model.ExtendedIngredientModel > list = new java.util.ArrayList <> () ; list . add ( ingredient ) ; recipeModel . setExtendedIngredients ( list ) ; org.junit.Assert . assertEquals ( recipeModel . getExtendedIngredients () , list ) ; } 
@ java.lang.Override public java.lang.Object invoke ( org.mozilla.javascript.Context cx , org.mozilla.javascript.Scriptable scope , org.mozilla.javascript.Scriptable thisObj , java.lang.Object [] args ) { assert ( connection . current () ) != null : "cannot invoke remote functions without a connected client in context" ; connection . current () . send ( jj.jjmessage.JJMessage . makeCall ( java.lang.String . valueOf ( args [ 0 ] ) , java.lang.String . valueOf ( args [ 1 ] ) ) ) ; return org.mozilla.javascript.Undefined.instance ; } 
@ java.lang.Override public final int calculurateAverage ( final nl.tue.s2id90.draughts.DraughtsState draughtsState , final boolean isWhitePlayer , final int depth ) { int value = 0 ; for ( nl.tue.s2id90.group05.HeuristicComponent component : components ) { value += component . calculateComponentValue ( draughtsState , isWhitePlayer , depth , value ) ; } return value ; } 
@ java.lang.Override public boolean handleMsg ( java.lang.String subject , java.lang.String body , net.anei.cadpage.parsers.MsgInfo.Data data ) { net.anei.cadpage.parsers.VA.Parser p = new net.anei.cadpage.parsers.VA.Parser ( subject ) ; data.strUnit = p . getLast ( ' ' ) ; java.lang.String source = p . get () ; if ( ! ( super . handleMsg ( body , data ) ) ) return false ; data.strBox = data.strSource ; data.strSource = source ; return true ; } 
@ java.lang.Override public void  onEach ( T i ) { if ( ( ! ( isUnsubscribed () ) ) && ( ( ( count ) ++ ) < ( limit ) ) ) { boolean stop = ( count ) == ( limit ) ; child .  onEach ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } 
private void  checkproduct ( java.lang.String developerId , java.lang.String productId ) { com.umasuo.device.center.application.dto.ProductView product = restClient . getProduct ( developerId , productId ) ; if ( ! ( developerId . equals ( product . getDeveloperId () ) ) ) { com.umasuo.device.center.application.service.UnionApplication.LOGGER . debug ( "Developer: {} don't own this product: {}." , developerId , productId ) ; throw new com.umasuo.exception.AuthFailedException ( "Developer do not own this product" ) ; } if ( ! ( ProductStatus.PUBLISHED . equals ( product . getStatus () ) ) ) { com.umasuo.device.center.application.service.UnionApplication.LOGGER . debug ( "Product: {} is not published." , productId ) ; throw new com.umasuo.exception.CreateResourceFailed ( "Product is not published" ) ; } } 
public void DeInitial ( java.io.Reader stream ) { jj_input_stream . DeInitial ( stream , 1 , 1 ) ; token_source . DeInitial ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) jj_la1 [ i ] = - 1 ; for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } 
public void set () { onCreateChildAssociation = new org.alfresco.repo.policy.JavaBehaviour ( this , "onCreateChildAssociation" , Behaviour.NotificationFrequency.TRANSACTION_COMMIT ) ; beforeCopyDocumentFolder = new org.alfresco.repo.policy.JavaBehaviour ( this , "beforeCopy" ) ; afterCopyDocumentFolder = new org.alfresco.repo.policy.JavaBehaviour ( this , "onCopyComplete" , Behaviour.NotificationFrequency.TRANSACTION_COMMIT ) ; this . policyComponent . bindAssociationBehaviour ( OnCreateChildAssociationPolicy.QNAME , OpenESDHModel.TYPE_DOC_SIMPLE , ContentModel.ASSOC_CONTAINS , this . onCreateChildAssociation ) ; this . policyComponent . bindClassBehaviour ( BeforeCopyPolicy.QNAME , OpenESDHModel.TYPE_DOC_SIMPLE , this . beforeCopyDocumentFolder ) ; this . policyComponent . bindClassBehaviour ( OnCopyCompletePolicy.QNAME , OpenESDHModel.TYPE_DOC_SIMPLE , this . afterCopyDocumentFolder ) ; } 
public boolean isOppositeof ( org.eclipse.emf.diffmerge.api.diff.IReferenceValuePresence peer_p ) { return ( ( ( ( getPresenceRole () ) == ( peer_p . getPresenceRole () ) ) && ( ( getFeature () . getEOpposite () ) == ( peer_p . getFeature () ) ) ) && ( ( getElementMatch () ) == ( peer_p . getValueMatch () ) ) ) && ( ( getValueMatch () ) == ( peer_p . getElementMatch () ) ) ; } 
@ Test ( enabled = false , groups = { "scenario" , "loop" , "templates" , "invitations" , "branded messaging" } ) public void  iCanVerifyNewImagePresentInEnrollerAnd () { BrandedMessagingTests . setupTemplate () ; clientportal.WireMessageEditorPage . Goto () . setCheckboxField ( WireMessageEditorCheckboxField.MAKE_TEMPLATE_AVAILABLE_IN_ENROLL_CUSTOMER , true ) . setCheckboxField ( WireMessageEditorCheckboxField.ADD_IMAGE , true ) . setDropDownValue ( WireMessageEditorDropDownField.IMAGE , BrandedMessagingTests.imageID ) . clickSaveAndActivateLink () ; clientportal.EnrollCustomerPage . Goto () . selectTemplate ( BrandedMessagingTests.templateName ) . verifyPreviewImage ( BrandedMessagingTests.imageID , true ) . selectTemplate ( BrandedMessagingTests.templateName ) . verifyPreviewImage ( BrandedMessagingTests.imageID , false ) ; } 
public void  hammer () { if ( ( type ) == ( Type.BASICENEMY ) ) { ( timer ) ++ ; this . move ( Direction.DOWN , speed ) ; int timeToShoot = rnd . nextInt ( 3 ) ; if ( ( timeToShoot == 0 ) && ( ( ( timer ) % 100 ) == 0 ) ) { Sound . play ( "src/sounds/enemyBlaster.wav" ) ; shoot ( Type.BULLET , Direction.DOWN ) ; timer = 0 ; } } } 
public static void  printfloatColor ( int i , java.lang.String msg ) { i = i + 1 ; java.lang.System.out . println ( ( ( ( ( ( ( ( UI.ui.BACKGROUND_BLUE ) + ( UI.ui.HIGH_INTENSITY ) ) + ( UI.ui.YELLOW ) ) + i ) + ".\t" ) + msg ) + ( ansi () . reset () ) ) ) ; } 
@ java.lang.Override protected void onRelease ( android.os.Bundle savedInstanceState ) { super . onRelease ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; checkCameraHardware () ; if ( isRecording ) { mMediaRecorder . stop () ; releaseMediaRecorder () ; mCamera . lock () ; isRecording = false ; } else { if ( prepareVideoRecorder () ) { mMediaRecorder . start () ; mMediaRecorder . setMaxDuration ( 30000 ) ; isRecording = true ; } else { releaseMediaRecorder () ; } } } 
public void addActionvalue ( java.lang.Object actionValue ) { if ( actionValue == null ) return; currentValue = actionValue ; if ( ! ( action . getValue () . equals ( actionValue ) ) ) this . action . setValue ( actionValue ) ; initChildList () ; } 
private boolean isIndexOp ( int command ) { return ( ( ( ( command == ( INDEX_ADD ) ) || ( command == ( INDEX_EDIT ) ) ) || ( command == ( INDEX_DELETE ) ) ) || ( command == ( INDEX_COMPLETE ) ) ) || ( command == ( INDEX_INCOMPLETE ) ) ; } 
public java.lang.String GetMessage ( java.lang.String sessionID ) { for ( burp.AntiCSRFToken antiCSRFToken : tokens ) { if ( ( ( antiCSRFToken.sessionID ) != null ) && ( antiCSRFToken.sessionID . equals ( sessionID ) ) ) { try { antiCSRFToken . LockToken () ; } catch ( java.lang.InterruptedException e ) { antiCSRFToken . ReleaseToken () ; e . printStackTrace () ; } return antiCSRFToken.tokenValue ; } } return null ; } 
@ java.lang.Override public net.minecraft.nbt.NBTTagCompound writeToNNBT ( net.minecraft.nbt.NBTTagCompound tag ) { if ( ( location ) != null ) location . writeToNNBT ( tag ) ; if ( ( type ) != null ) type . writeToNNBT ( tag ) ; else { mcmultipart.multipart.MultipartHelper . getPartContainer ( getWorld () , getPos () ) . removePart ( this ) ; } return tag ; } 
private static java.lang.String getImportported () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb . append ( "import org.junit.Before;\n" ) ; sb . append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests . isValidClass ( imp ) ) { sb . append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb . toString () ; } 
private static boolean isSubsection ( final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique subset , final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique of ) { return ( of . getEgo () . getId () . equals ( subset . getEgo () . getId () ) ) && ( of.alters . containsAll ( subset.alters ) ) ; } 
@ java.lang.Override public void  onAnswer ( final retrofit2.Call < com.charlesmadere.hummingbird.models.Feed > call , final retrofit2.Response < com.charlesmadere.hummingbird.models.Feed > response ) { final com.charlesmadere.hummingbird.models.Feed body = ( response . isSuccessful () ) ? response . body () : null ; if ( body == null ) { listener . failure ( com.charlesmadere.hummingbird.networking.Api . retrieveErrorInfo ( response ) ) ; } else { com.charlesmadere.hummingbird.networking.Api . hydrateFeed ( body , null , listener ) ; } } 
private void saveValues () { android.content.SharedPreferences settings = getSharedPreferences ( MainMenuActivity.PREFS_NAME , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = settings . edit () ; editor . putString ( "activity" , "story_page" ) ; editor . putString ( "story" , story . getUniqueID () ) ; editor . putInt ( "page" , currentPage ) ; editor . commit () ; } 
@ org.junit.Test public void retrieveName ( ) throws java.lang.Exception { pingproject.biz.beans.PingBean mockPingBean = mock ( pingproject.biz.beans.PingBean . class ) ; doReturn ( mockPingBean ) . when ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; pingproject.web.ManagedBeans.PingWebBeanTest.spy . retrieveName () ; verify ( pingproject.web.ManagedBeans.PingWebBeanTest.spy ) . getPingBean () ; verify ( mockPingBean ) . retrieveName () ; } 
@ org.junit.Test public void GetAll ( ) throws java.lang.Exception { com.cinema.controller.rest.CustomerControllerTest.LOGGER . debug ( "mock test: GetAll()" ) ; java.util.List < com.cinema.model.Customer > customers = new java.util.ArrayList <> () ; customers . add ( com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_1 ) ; customers . add ( com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_2 ) ; expect ( customerServiceMock . GetAllCustomers () ) . andReturn ( customers ) ; replay ( customerServiceMock ) ; mockMvc . perform ( get ( com.cinema.controller.rest.CustomerControllerTest.CUSTOMER_GET_ALL ) . accept ( MediaType.APPLICATION_JSON ) ) . andDo ( org.springframework.test.web.servlet.result.MockMvcResultHandlers . print () ) ; } 
private void SRLInstansion () { int rd = file . nextInt () ; int rs = file . nextInt () ; int sa = file . nextInt () ; file . nextLine () ; int funct = 8 ; int rt = 0 ; java.lang.String opc = "SRL" ; ilist . add ( ( ( interfaces.IInstruction ) ( new model.RTypeInstruction ( opc , rd , rs , rt , sa , funct ) ) ) ) ; } 
@ java.lang.Override public boolean  doPreCreateUsers ( java.lang.String userName , java.lang.Object credential , java.lang.String [] roleList , java.util.Map < java.lang.String , java.lang.String > claims , java.lang.String profile , org.wso2.carbon.user.core.UserStoreManager userStoreManager ) throws org.wso2.carbon.user.core.UserStoreException { try { if ( ( ! ( isEnable () ) ) || ( ! ( userStoreManager . isSCIMEnabled () ) ) ) { return true ; } } catch ( org.wso2.carbon.identity.scim.common.listener.org.wso2.carbon.user e ) { throw new org.wso2.carbon.user.core.UserStoreException ( "Error while reading isScimEnabled from userstore manager" , e ) ; } this . getSCIMAttributes ( userName , claims ) ; return true ; } 
@ java.lang.Override public emcshop.scraper.EmcSession  identity ( java.lang.String username , java.lang.String password ) throws java.io.IOException { com.github.mangstadt.emc.net.EmcWebsiteConnection connection = null ; try { connection = new com.github.mangstadt.emc.net.EmcWebsiteConnectionImpl ( username , password ) ; return new emcshop.scraper.EmcSession ( username , password , connection . getCookieStore () ) ; } catch ( com.github.mangstadt.emc.net.InvalidCredentialsException e ) { return null ; } finally { org.apache.commons.io.IOUtils . closeQuietly ( connection ) ; } } 
public void app ( java.lang.String s ) { org.alicebot.server.core.Globals . load ( s ) ; shell = new org.alicebot.server.core.util.Shell ( inStream , displayStream , promptStream ) ; server = new org.alicebot.server.net.AliceServer ( s , shell ) ; org.alicebot.server.core.util.Trace . setOut ( displayStream ) ; server . appup ( true ) ; shutdown () ; } 
@ java.lang.Override public void  switchListener ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( station != null ) { if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } 
@ java.lang.Override protected android.graphics.Bitmap  doinRemote ( java.lang.String . . . params ) { moviePoster = null ; try { java.io.InputStream in = new java.net.URL ( params [ 0 ] ) . openStream () ; moviePoster = android.graphics.BitmapFactory . decodeStream ( in ) ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Error" , params [ 0 ] ) ; e . printStackTrace () ; } return moviePoster ; } 
@ java.lang.Override public void onBackPressressed () { if ( mDrawerLayout . isDrawerOpen ( mDrawerListView ) ) { mDrawerLayout . closeDrawer ( mDrawerListView ) ; return; } if ( ! ( fragmentMediator . backPressWebView () ) ) { edu.rutgers.css.Rutgers.utils.LogUtils . LOGV ( edu.rutgers.css.Rutgers.ui.MainActivity.TAG , ( "Back button pressed. Leaving top component: " + ( edu.rutgers.css.Rutgers.utils.AppUtils . topHandle ( this ) ) ) ) ; super . onBackPressressed () ; } } 
@ java.lang.Override protected void onProgress ( java.util.List < com.jiuzhang.guojing.dribbbo.model.Shot > shots ) { adapter . setShowLoading ( ( ( shots . size () ) >= ( com.jiuzhang.guojing.dribbbo.dribbble.Dribbble.COUNT_PER_LOAD ) ) ) ; if ( refresh ) { swipeRefreshLayout . setRefreshing ( false ) ; adapter . setData ( shots ) ; } else { swipeRefreshLayout . setEnabled ( true ) ; adapter . append ( shots ) ; } } 
public void  DisConnect () { if ( ( this . dc ) != null ) try { log . info ( "Closing connection." ) ; this . dc . close () ; log . info ( "Connection close." ) ; } catch ( final java.io.IOException e ) { log . error ( e . getLocalizedMessage () ) ; log . error ( "Impossible to close connection." ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/run" ) public org.springframework.web.servlet.ModelAndView run ( com.infofilter.model.SearchConfig sc ) throws java.lang.InterruptedException { crawl . setSearchConfig ( sc ) ; crawl . run () ; java.util.List < com.infofilter.model.UrlInfo > urlList = com.infofilter.crawl.Crawl.urlInfoList ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "result" ) ; mav . addObject ( "urlList" , urlList ) ; return mav ; } 
public void  initCamera ( final int scale , final com.jme3.math.Vector3f translation ) { java.lang.System.out . println ( "SCENE_PATH file found!" ) ; java.lang.System.out . println ( ( ( "=> loading " + ( com.funkydonkies.gamestates.SceneState.SCENE_PATH . toString () ) ) + " Spatial ..." ) ) ; loadScene ( scale , translation ) ; java.lang.System.out . println ( "... DONE loading .scene Spatial <=" ) ; } 
static boolean  isaxonomy ( Expression d ) { for ( int i = 0 ; i < ( LogicHW1.axioms . size () ) ; i ++ ) { if ( LogicHW1.axioms . get ( i ) . equalStruct ( d , new java.util.HashMap <> () , true ) ) { LogicHW1.out . println ( ( "Сх. акс. " + ( i + 1 ) ) ) ; return true ; } } return false ; } 
private void deleteAppointmentByDayString ( java.lang.Integer date ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; java.lang.String Query = ( ( ( ( ( ( ( ( "DELETE FROM " + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TABLE_CALENDAR ) ) + " WHERE " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_START ) ) + " <= " ) + date ) + " AND " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_END ) ) + " >= " ) + date ; db . execSQL ( Query ) ; } 
@ java.lang.Override public void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; if ( getArguments () . containsKey ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) { mItem = Content.COMMUTE_MAP . get ( getArguments () . getString ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) ; android.app.Activity activity = this . getActivity () ; android.support.design.widget.CollapsingToolbarLayout appBarLayout = ( ( android.support.design.widget.CollapsingToolbarLayout ) ( activity . findViewById ( R.id.toolbar_layout ) ) ) ; if ( ( appBarLayout != null ) && ( ( mItem ) != null ) ) { appBarLayout . setTitle ( mItem.id ) ; } } } 
public void actionPERuted ( final java.awt.event.ActionEvent event ) { if ( ( pvLoggerID ) != 0 ) { if ( USE_PVLOGGER . isSelected () ) USE_LOGGEDBEND . setEnabled ( true ) ; else USE_LOGGEDBEND . setEnabled ( false ) ; setHasChanges ( true ) ; } else { javax.swing.JOptionPane . showMessageDialog ( mainWindow , "You need to select pvLoggerData first" , "Warning!" , javax.swing.JOptionPane.PLAIN_MESSAGE ) ; USE_PVLOGGER . setSelected ( false ) ; } } 
@ java.lang.Override public void run () { super . run () ; stage = new com.badlogic.gdx.scenes.scene2d.Stage ( new com.badlogic.gdx.utils.viewport.ExtendViewport ( Resolution.instance . getMenuWidth () , Resolution.instance . getMenuHeight () ) ) ; skin = assets . getMainMenuSkin () ; colorSky = skin . getColor ( MainMenuConstants.MAIN_MENU_COLOR_SKY ) ; Gdx.input . setInputProcessor ( stage ) ; rebuildStage () ; audio = new com.lothbrok.game.audio.Audio ( assets . getMusicAssets () , assets . getSoundAssets () ) ; audio . playMenuMusic () ; } 
public float  entropy ( float [] inputs ) { int temp = 0 ; for ( int i = 0 ; i < ( inputs.length ) ; i ++ ) { temp += ( inputs [ i ] ) * ( weights [ i ] ) ; } if ( temp >= ( weights [ ( ( weights.length ) - 1 ) ] ) ) return 1 ; return 0 ; } 
public int scoreboard () { switch ( game.max ) { case "W" : score = ( scoreWhite () ) - ( scoreBlack () ) ; break; case "B" : score = ( scoreBlack () ) - ( scoreWhite () ) ; break; default: break; } return score ; } 
public void submit () { java.lang.String playerName = player . getName () ; org.bukkit.scoreboard.Team playerTeam = org.bukkit.Bukkit . getScoreboardManager () . getMainScoreboard () . getEntryTeam ( playerName ) ; if ( playerTeam != null ) player . setDisplayName ( ( ( ( ( playerTeam . getPrefix () ) + playerName ) + ( playerTeam . getSuffix () ) ) + ( org.bukkit.ChatColor.RESET ) ) ) ; else player . setDisplayName ( playerName ) ; } 
public double slopesTo ( Point that ) { if ( ( this . compareTo ( that ) ) == 0 ) { return java.lang.Double.NEGATIVE_INFINITY ; } if ( ( this . x ) == ( that.x ) ) { return java.lang.Double.POSITIVE_INFINITY ; } if ( ( this . y ) == ( that.y ) ) { return 0 ; } return ( ( double ) ( ( that.y ) - ( this . y ) ) ) / ( ( that.x ) - ( this . x ) ) ; } 
private void submit ( final io.toast.tk.dao.domain.impl.test.block.ITestPlan testPlan , final io.toast.tk.runtime.TestRunner runner ) { initEnvironment () ; for ( final io.toast.tk.dao.domain.impl.test.block.ICampaign campaign : testPlan . getCampaigns () ) { for ( io.toast.tk.dao.domain.impl.test.block.ITestPage testPage : campaign . getTestCases () ) { try { beginTest () ; runner . run ( testPage ) ; endTest () ; } catch ( final java.lang.Exception e ) { io.toast.tk.runtime.AbstractTestPlanRunner.LOG . error ( e . getMessage () , e ) ; } } } createAndOpenReport ( testPlan ) ; tearDownEnvironment () ; } 
@ org.junit.Test public void testdataStream ( ) throws java.lang.Exception { http2Connect () ; sendSimplePostRequest ( 3 , null ) ; readSimplePostResponse ( false ) ; org.junit.Assert . assertEquals ( ( "0-WindowSize-[128]\n" + ( ( ( ( ( "3-WindowSize-[128]\n" + "3-HeadersStart\n" ) + "3-Header-[:status]-[200]\n" ) + "3-HeadersEnd\n" ) + "3-Body-128\n" ) + "3-EndOfStream\n" ) ) , output . getTrace () ) ; } 
private io.minio.HttpResponse  performGET ( java.lang.String bucketName , java.lang.String objectName , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return execute ( Method.GET , Regions.INSTANCE . region ( bucketName ) , bucketName , objectName , headerMap , queryParamMap , null , 0 ) ; } 
@ java.lang.Override public V store ( K key , V value ) { com.google.common.base.Preconditions . checkNotNull ( key ) ; com.google.common.base.Preconditions . checkNotNull ( value ) ; com.google.common.cache.LocalCache.Timestamped < V > oldValue = cachingHashMap . store ( key , new com.google.common.cache.LocalCache.Timestamped < V > ( value , ticker ) ) ; if ( oldValue == null ) { return null ; } alertListenerIfPresent ( key , oldValue . getValue () , com.google.common.cache.RemovalCause.REPLACED ) ; return oldValue . getValue () ; } 
private void processToken ( com.fsck.k9.mail.store.ImapResponseParser.ImapResponse response ) throws java.io.IOException { response . clear () ; java.lang.String firstToken = ( ( java.lang.String ) ( readToken ( response ) ) ) ; response . add ( firstToken ) ; if ( isStatusResponse ( firstToken ) ) { parseResponseText ( response ) ; } else { java.lang.Object token ; while ( ( token = readToken ( response ) ) != null ) { if ( ! ( token instanceof com.fsck.k9.mail.store.ImapResponseParser.ImapList ) ) { response . add ( token ) ; } } } } 
public static boolean  logOutUser ( int sessionID ) { java.lang.String sql = "DELETE FROM Session WHERE SessionID = ?" ; try ( java.sql.PreparedStatement stmt = bankserver.DBConnector.connection . prepareStatement ( sql ) ) { stmt . setInt ( 1 , sessionID ) ; stmt . executeQuery () ; return true ; } catch ( java.sql.SQLException e ) { java.util.logging.Logger . getLogger ( bankserver.DBConnector . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , e ) ; } return false ; } 
public org.apache.commons.lang3.tuple.Pair < java.lang.String , org.semanticweb.owlapi.model.OWLNamedIndividual >  createInstance ( java.lang.String modelId , java.lang.String cid , java.util.Set < org.semanticweb.owlapi.model.OWLAnnotation > annotations , METADATA metadata ) throws org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException { org.geneontology.minerva.ModelContainer model = checkModelId ( modelId ) ; org.semanticweb.owlapi.model.OWLClass cls = getClass ( cid , model ) ; if ( cls == null ) { throw new org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException ( ( "Could not find a class for id: " + cid ) ) ; } org.semanticweb.owlapi.model.OWLNamedIndividual individual =  createInstance ( model , cls , annotations , true , metadata ) ; return org.apache.commons.lang3.tuple.Pair . of ( org.geneontology.minerva.util.IdStringManager . getId ( individual ) , individual ) ; } 
private void  okButtonKeyPerained ( java.awt.event.ActionEvent evt ) { java.util.ArrayList < java.awt.Point > roiData = util.DataManager . readRoiFile ( chosenPath ) ; if ( roiData != null ) { if ( ( roiData . size () ) > 0 ) { setFields () ; notifyRoiListeners ( roiData ) ; if ( defaultCheckBox . isSelected () ) { notifyRoiListeners ( chosenPath ) ; } this . setVisible ( false ) ; } else { errorText . setText ( "Error loading: File not found!" ) ; } } } 
static java.lang.Object [] boxAndPadWithZones ( int length , long [] values ) { long [] padded ; if ( ( values.length ) == length ) { padded = values ; } else { padded = new long [ length ] ; java.lang.System . arraycopy ( values , 0 , padded , 0 , padded.length ) ; } return java.util.Arrays . stream ( padded ) . boxed () . toArray () ; } 
public static void setApp () { git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement = java.lang.String . valueOf ( git_aptra.SearchApplicant.DialogSearchApplicantApplication.boxEducationalAchievement . getSelectedItem () ) ; if ( git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement . equals ( "Bitte ausw�hlen" ) ) { git_aptra.SearchApplicant.DialogSearchApplicantApplication.educationalAchievement = "" ; } git_aptra.SearchApplicant.DialogSearchApplicantApplication.vacancy = java.lang.String . valueOf ( git_aptra.SearchApplicant.DialogSearchApplicantApplication.boxVacancy . getSelectedItem () ) ; if ( git_aptra.SearchApplicant.DialogSearchApplicantApplication.vacancy . equals ( "Bitte ausw�hlen" ) ) { git_aptra.SearchApplicant.DialogSearchApplicantApplication.vacancy = "" ; } } 
@ java.lang.Override public void app ( T project , boolean newInstance ) { org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener listener = org.jenkinsci.plugins.rabbitmqconsumer.extensions.MessageQueueListener . all () . get ( org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener . class ) ; if ( listener != null ) { listener . addTrigger ( this ) ; removeDuplicatedTrigger ( listener . getTriggers () ) ; } super . app ( project , newInstance ) ; } 
@ java.lang.Override public void setFramescale ( int order ) { java.lang.System.out . println ( ( "setFramescale " + order ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList . get ( ( ( fCurrentEvent ) ++ ) ) ; assertEquals ( event.fType , VCDLoaderTest.ExpectTraceBuilder.EXPECT_TIMESCALE ) ; assertEquals ( event.fTimestamp , ( ( long ) ( order ) ) ) ; } 
public static float [] getFloatArrayForBuffer ( java.nio.FloatBuffer buffer ) { float [] array = new float [ 0 ] ; if ( buffer != null ) { if ( buffer . hasArray () ) { array = buffer . array () ; } else { buffer . rewind () ; array = new float [ buffer . capacity () ] ; buffer . get ( array ) ; } } return array ; } 
private void generity ( java.lang.Object source , java.lang.Object observer ) { com.google.common.base.Preconditions . checkNotNull ( source , "source" ) ; com.google.common.base.Preconditions . checkNotNull ( observer , "observer" ) ; com.google.common.base.Preconditions . checkArgument ( verifySource ( source ) , "Source is not the right type!" ) ; com.google.common.base.Preconditions . checkArgument ( verifySource ( observer ) , "Observer is not the right type!" ) ; } 
public void set_properties ( java.util.Map < java.lang.String , java.lang.Object > properties ) { for ( java.lang.Object o : properties . values () ) { if ( ( ( ! ( o instanceof java.lang.String ) ) && ( ! ( o instanceof java.lang.Integer ) ) ) && ( ! ( o instanceof java.lang.Double ) ) ) { throw new java.lang.IllegalArgumentException ( "Values must be Strings or Doubles." ) ; } } this . properties = properties ; } 
@ java.lang.Override protected void  onCreated ( android.os.Bundle savedInstanceState ) { super .  onCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_settings ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
public void invoke ( org.shipkit.internal.gradle.ReleaseNeededPlugin p ) { project . getTasks () . withType ( org.shipkit.gradle.ReleaseNeededTask . class , new org.gradle.api.Action < org.shipkit.gradle.ReleaseNeededTask > () { public void invoke ( org.shipkit.gradle.ReleaseNeededTask t ) { t . setCommitMessage ( java.lang.System . getenv ( "TRAVIS_COMMIT_MESSAGE" ) ) ; t . setPullRequest ( isPullRequest ) ; } } ) ; } 
public static java.util.List < labfinder.Room > getAllChrooms () { com.mongodb.client.MongoCollection < org.bson.Document > classCol = labfinder.MongoAccess.db . getCollection ( "Rooms" ) ; java.util.List < org.bson.Document > all = classCol . find () . into ( new java.util.ArrayList < org.bson.Document > () ) ; java.util.List < labfinder.Room > rooms = new java.util.ArrayList < labfinder.Room > () ; for ( org.bson.Document doc : all ) { rooms . add ( new labfinder.Room ( doc ) ) ; java.lang.System.out . println ( doc . toString () ) ; } return rooms ; } 
protected com.stormpath.sdk.api.ApiKey getTokenAapiKey ( javax.servlet.http.HttpServletRequest request , java.lang.String apiKeyId ) throws com.stormpath.sdk.servlet.filter.oauth.OAuthException { try { return getEnabledApiKey ( request , apiKeyId ) ; } catch ( com.stormpath.sdk.resource.ResourceException e ) { com.stormpath.sdk.servlet.filter.oauth.OAuthErrorCode err = com.stormpath.sdk.servlet.filter.oauth.OAuthErrorCode.INVALID_CLIENT ; java.lang.String msg = e . getStormpathError () . getDeveloperMessage () ; throw new com.stormpath.sdk.servlet.filter.oauth.OAuthException ( err , msg , e ) ; } } 
public void SetURL ( java.lang.String url ) { org.openmrs.mobile.utilities.URLValidator.ValidationResult result = org.openmrs.mobile.utilities.URLValidator . validate ( url ) ; org.openmrs.mobile.activities.LoginActivity.mLastURL = result . getUrl () ; if ( result . isURLValid () ) { mSpinner . setVisibility ( View.VISIBLE ) ; mLoginFormView . setVisibility ( View.GONE ) ; new org.openmrs.mobile.net.LocationManager () . getAvailableLocation ( org.openmrs.mobile.net.helpers.LocationHelper . createAvailableLocationListener ( result . getUrl () , this ) ) ; } else { showInvalidURLDialog () ; } } 
public java.lang.String toShortArray ( java.lang.String i_assembly ) { java.util.List < backend.Compiler.asm_line > asm_array = new java.util.ArrayList < backend.Compiler.asm_line > () ; java.lang.String byteCodeReturn = "" ; java.lang.String [] raw_lines = i_assembly . split ( "\\r?\\n" ) ; for ( int line_i = 0 ; line_i < ( raw_lines.length ) ; line_i ++ ) { asm_array . add ( new backend.Compiler.asm_line ( raw_lines [ line_i ] ) ) ; byteCodeReturn += asm_array . get ( line_i ) . getByteCode () ; } return byteCodeReturn ; } 
private void setMomian () { if ( ! ( this . numbers . isEmpty () ) ) { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( mid ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } } } 
@ java.lang.Override public com.edu.nju.asi.service.serviceImpl.Case uploadline ( org.springframework.web.multipart.MultipartFile uploadedFile ) throws java.io.IOException { if ( uploadedFile . isEmpty () ) { return null ; } java.lang.String thisPath = uploadedFile . getName () ; java.io.File thisFile = new java.io.File ( thisPath ) ; uploadedFile . transferTo ( thisFile ) ; com.edu.nju.asi.service.serviceImpl.Case wanted = parseXML ( thisPath ) ; boolean deleteResult = thisFile . delete () ; return wanted ; } 
@ org.junit.Test public void TestJoinMany () { boolean hasData = false ; HgTupleStream stream = HgDB . join ( PartTable . stream () . joinOn ( PartTable . self ( PartTable.ID ) ) , OdetailTable.on . pnos () , HgRelation.IN ) ; for ( org.mercurydb.queryutils.HgTupleStream.HgTuple t : stream ) { hasData = true ; if ( ! ( t . get ( OdetailTable.ID ) . pnos . contains ( t . get ( PartTable.ID ) ) ) ) org.junit.Assert . fail () ; } if ( ! hasData ) org.junit.Assert . fail () ; } 
@ java.lang.Override public boolean  eligibleForBookning ( java.util.Set < com.real.apps.shuttle.domain.model.BookedRange > potentialBookedRanges , com.real.apps.shuttle.domain.model.BookedRange bookedRange ) { if ( ( potentialBookedRanges == null ) || ( potentialBookedRanges . isEmpty () ) ) { return true ; } java.util.Iterator < com.real.apps.shuttle.domain.model.BookedRange > iterator = potentialBookedRanges . iterator () ; while ( iterator . hasNext () ) { com.real.apps.shuttle.domain.model.BookedRange subject = iterator . next () ; if ( ( subject != null ) && ( subject . coincide ( bookedRange ) ) ) { return false ; } } return true ; } 
protected org.nd4j.linalg.api.ndarray.INDArray createScalarAtIndex ( int i , boolean applyOffset ) { return create ( data () , new int [] { 1 , 1 } , new int [] { 1 , 1 } , ( applyOffset ? ( offset ) + i : i ) ) ; } 
@ org.junit.Test public void testProcessAND ( ) throws net.torocraft.minecoprocessors.util.ParseException { net.torocraft.minecoprocessors.processor.Processor processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 31 , 2 , 0 , 0 , "and a, b" ) ; processor . processAnd () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 2 , 2 , 0 , 0 ) ; org.junit.Assert . assertFalse ( processor.zero ) ; processor = net.torocraft.minecoprocessors.processor.ProcessorTest . setupTest ( 29 , 2 , 0 , 0 , "and a, b" ) ; processor . processAnd () ; net.torocraft.minecoprocessors.processor.ProcessorTest . assertRegisters ( processor , 0 , 2 , 0 , 0 ) ; org.junit.Assert . assertTrue ( processor.zero ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) private java.util.List < java.lang.Class >  getType ( java.lang.Class clazz , java.util.List < java.lang.Class > classList ) { if ( ( clazz . getSuperclass () ) != null ) { if ( com.ai.dubbo.ext.vo.BaseInfo . class . getName () . equals ( clazz . getSuperclass () . getName () ) ) { return classList ; } else { classList . add ( clazz . getSuperclass () ) ; return  getType ( clazz . getSuperclass () , classList ) ; } } return classList ; } 
public boolean ka ( java.lang.String username , java.lang.String item , int qty , double price ) { if ( server.Server . isStockExists ( item ) ) { models.user.User user = new models.user.User ( null , username ) ; server.Server . addAsk ( user , models.trade.Stock . valueOf ( item ) , qty , price , null ) ; return true ; } return false ; } 
private static boolean isCycyclical ( int numberOfCourse , java.util.Map < java.lang.Integer , java.util.Set < java.lang.Integer > > prerequisitePerCourse ) { for ( int course = 0 ; course < numberOfCourse ; course ++ ) { java.util.Set < java.lang.Integer > targetCourses = new java.util.HashSet <> () ; targetCourses . add ( course ) ; if ( com.sevendragons.practice.leetcode.medium.coursesschedule.Solution . isCourseContainedInPrerequisites ( prerequisitePerCourse , targetCourses , course ) ) { return true ; } } return false ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET , value = "/categories/{categoryId}" ) public java.lang.String  getPostsBase ( org.springframework.ui.ModelMap model , @ org.springframework.web.bind.annotation.PathVariable ( name = "categoryId" ) final java.lang.String categoryId ) { java.util.List < be.nille.blog.domain.category.Category > categories = categoryService . findAll () ; java.util.List < be.nille.blog.domain.post.Post > posts = postService . findPostsByCategory ( categoryId ) ; model . put ( "page" , new be.nille.blog.web.controller.post.PostsPage ( posts , categories , null ) ) ; return "blog/index" ; } 
public rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoFamilyCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { if ( term == null ) { return null ; } rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; } 
public void blcasting ( cn.nukkit.Player player ) { java.lang.String translation = cn.nukkit.Server . getInstance () . getLanguage () . translateString ( "chat.type.achievement" , player . getDisplayName () , ( ( cn.nukkit.utils.TextFormat.GREEN ) + ( this . getMessage () ) ) , null ) ; if ( cn.nukkit.Server . getInstance () . getPropertyBoolean ( "announce-player-achievements" , true ) ) { cn.nukkit.Server . getInstance () . blcastingMessage ( translation ) ; } else { player . sendMessage ( translation ) ; } } 
@ java.lang.Override protected void onHandleIntents ( android.content.Intent intent ) { if ( com.google.android.gms.location.ActivityRecognitionResult . hasResult ( intent ) ) { com.google.android.gms.location.ActivityRecognitionResult result = com.google.android.gms.location.ActivityRecognitionResult . extractResult ( intent ) ; com.google.android.gms.location.DetectedActivity CurrentActivity = result . getMostProbableActivity () ; if ( ( CurrentActivity . getConfidence () ) >= 75 ) { ActivityRecognitionPlugin.Activity.ActivityType = CurrentActivity . toString () ; ActivityRecognitionPlugin.Activity.Propability = CurrentActivity . getConfidence () ; } else ActivityRecognitionPlugin.Activity.ActivityType = "NotConfidentEnough" ; } } 
@ java.lang.Override public boolean removeApplication ( java.lang.String id ) throws java.lang.Exception { com.foodie.app.Helper.DebugHelper . Log ( ( "removeApplication: id = " + id ) ) ; BusinessRef . child ( id ) . removeValue () ; localDB . removeApplication ( id ) ; java.util.List < com.foodie.app.entities.Activity > businessActivities = com.foodie.app.database.Converters . cursorToActivityList ( localDB . getActivity ( new java.lang.String [] { id } , new java.lang.String [] { com.foodie.app.entities.Activity.ACTIVITY_BUSINESS_ID } ) ) ; for ( com.foodie.app.entities.Activity ac : businessActivities ) { removeActivity ( ac . get_ID () ) ; } return true ; } 
private void highlightArro ( uk.ac.cam.teamdelta.Direction d ) { javafx.scene.image.ImageView iv = navMap . get ( d ) ; if ( iv == null ) { uk.ac.cam.teamdelta.Logger . error ( ( ( "NULL IV - direction" + ( d . getDegrees () ) ) + " was not in direction set" ) ) ; } else { iv . setImage ( hArrow ) ; } } 
@ java.lang.Override protected void onBeforeExecure () { super . onBeforeExecure () ; mControlsView . setBackgroundColor ( getResources () . getColor ( R.color.transparent_overlay ) ) ; main_button . setVisibility ( View.GONE ) ; imageProgressBar . setVisibility ( View.VISIBLE ) ; fullscreenText . setText ( getResources () . getText ( R.string.loading ) ) ; } 
private void updatePairCount () { boolean parity = false ; for ( byte b = this . state . sfrs . A . getValue () ; b != 0 ; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) parity = ! parity ; this . state . sfrs . PSW . setBit ( parity , 0 ) ; } 
public org.json.JSONObject stopDB ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) { return new org.json.JSONObject () ; } } 
public void onDataAsset ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataAsset ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = this . world . getBlockState ( this . pos ) ; this . world . notifyBlockUpdate ( this . pos , state , state , 3 ) ; } 
@ java.lang.Override public void  widgetSelectlected ( org.eclipse.swt.events.SelectionEvent e ) { for ( org.nschmidt.ldparteditor.opengl.OpenGLRenderer renderer : org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.renders ) { org.nschmidt.ldparteditor.composites.Composite3D c3d = renderer . getC3D () ; if ( c3d . getLockableDatFileReference () . equals ( org.nschmidt.ldparteditor.project.Project . getFileToEdit () ) ) { org.nschmidt.ldparteditor.data.VertexManager vm = c3d . getLockableDatFileReference () . getVertexManager () ; vm . addSnapshot () ; loadSelectorSettings () ; vm . selectAllWithSameColours ( sels , true ) ; vm . syncWithTextEditors ( true ) ; return; } } } 
@ java.lang.Override public void  onDone () { if ( done ) { return; } R col = collection ; if ( col != null ) { collection = null ; if ( emitRemainder ) { queue . offer ( col ) ; } } done = true ; drain () ; } 
private void computeTwoCMPProjectionConstraintsmations () { for ( int i = 0 ; i < ( numberOfFootstepsToConsider ) ; i ++ ) { tmpTwoCMPProjection_Aeq . set ( ( 3 * i ) , i , 1.0 ) ; tmpTwoCMPProjection_beq . set ( i , 0 , 1.0 ) ; } } 
private void obtainObjectStates () { if ( ( rawTextPanel ) == null ) { rawTextPanel = getMainFrame () . getRawTextPanel () ; imagePanel = getMainFrame () . getImagePanel () ; jnPanel = getMainFrame () . getJNPanel () ; statefulObjects . put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_JOVENOTESPANEL , jnPanel ) ; statefulObjects . put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_RAWTEXTPANEL , rawTextPanel ) ; statefulObjects . put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_IMAGEPANEL , imagePanel ) ; } } 
public void readByte ( java.io.OutputStream outputStream ) throws java.io.IOException { java.io.BufferedOutputStream bufferedOutputStream = new java.io.BufferedOutputStream ( outputStream ) ; java.nio.ByteBuffer byteBuffer = java.nio.ByteBuffer . allocate ( ( ( java.lang.Long.BYTES ) * 2 ) ) ; byteBuffer . putLong ( id . getMostSignificantBits () ) ; byteBuffer . putLong ( id . getLeastSignificantBits () ) ; bufferedOutputStream . write ( byteBuffer . array () ) ; readByteFromPedestrianInfo ( personA , bufferedOutputStream ) ; readByteFromPedestrianInfo ( personB , bufferedOutputStream ) ; bufferedOutputStream . flush () ; } 
public java.lang.Integer getLatOff ( double lat , double lon , double offset , boolean checkOutside ) { java.awt.Point p = tileSource . latLonToXY ( lat , lon , zoom ) ; int y = ( ( p.y ) - ( center.y ) ) - ( ( getHeight () ) / 2 ) ; if ( checkOutside && ( ( y < 0 ) || ( y > ( getHeight () ) ) ) ) { return null ; } return y ; } 
@ java.lang.Override public java.lang.String getstring () { return ( ( ( ( ( ( ( ( ( ( ( ( ( "\n" + ( this . ueberschrift ) ) + ( this . unterueberschrift ) ) + "AKZ: " ) + ( this . aktenzeichen ) ) + "Datum: " ) + ( this . datum ) ) + "Rechtsbereich: " ) + ( this . rechtsbereich ) ) + "Vergehen: " ) + ( this . vergehen ) ) + "Strafmass: " ) + ( this . strafmass ) ) + "Gruende: " ) + ( this . gruende ) ; } 
@ org.junit.Test public void setOpplaced ( ) throws java.lang.Exception { int numOfFinishedTasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; org.junit.Assert . assertEquals ( "There should be no finished tasks, yet" , 0 , numOfFinishedTasks , 0 ) ; repo . setOpplaced ( 1 , 5 ) ; numOfFinishedTasks = repo . getDurationInfo ( 1 ) . getNumOfFinishedTasks () ; org.junit.Assert . assertEquals ( "There should be 1 finished task now" , 1 , numOfFinishedTasks , 0 ) ; } 
void obld ( int num1 , int num2 ) { this . maxcommom = 1 ; num1 = java.lang.Math . abs ( num1 ) ; num2 = java.lang.Math . abs ( num2 ) ; if ( num2 > num1 ) { int temp = num2 ; num2 = num1 ; num1 = temp ; } if ( num2 == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { this . maxcommom = num2 ; return; } int temp = num1 % num2 ; obld ( num2 , temp ) ; } 
public boolean  deleteExtrasForRemorter ( int reminderId ) throws ve.com.abicelis.remindy.exception.CouldNotDeleteDataException { android.database.sqlite.SQLiteDatabase db = mDatabaseHelper . getWritableDatabase () ; return ( db . delete ( RemindyContract.ExtraTable.TABLE_NAME , ( ( RemindyContract.ExtraTable.COLUMN_NAME_REMINDER_FK . getName () ) + " =?" ) , new java.lang.String [] { java.lang.String . valueOf ( reminderId ) } ) ) > 0 ; } 
public boolean  checkifdone ( double x , double y ) { if ( ( ( ( ( ( destX ) + ( error ) ) >= x ) && ( ( ( destX ) - ( error ) ) <= x ) ) && ( ( ( destY ) + ( error ) ) >= y ) ) && ( ( ( destY ) - ( error ) ) <= y ) ) { return true ; } else return false ; } 
@ java.lang.Override public void  onAnswer ( retrofit2.Call < com.example.Dao.ListDao > call , retrofit2.Response < com.example.Dao.ListDao > response ) { filterBeen . addAll ( response . body () . getDATA () . getFilter () ) ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData . clear () ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData . addAll ( response . body () . getDATA () . getProducts () ) ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.bAdapter . notifyDataSetChanged () ; } 
@ java.lang.Override public void onPageScished ( int position ) { switch ( position ) { case 0 : findViewById ( R.id.gameRelativeLayout ) . setVisibility ( View.VISIBLE ) ; mSetGridView . setVisibility ( View.INVISIBLE ) ; break; case 1 : findViewById ( R.id.gameRelativeLayout ) . setVisibility ( View.INVISIBLE ) ; mSetGridView . setVisibility ( View.VISIBLE ) ; populateSetGridView () ; break; } } 
@ java.lang.Override public void writeLocalParv ( android.os.Parcel dest , int flags ) { dest . writeString ( this . path ) ; dest . writeLong ( this . dateModified ) ; dest . writeString ( this . mime ) ; dest . writeLong ( this . id ) ; dest . writeLong ( this . size ) ; dest . writeByte ( ( this . selected ? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; } 
public void add ( java.lang.String host ) throws java.io.IOException , java.net.SocketTimeoutException , java.net.UnknownHostException { decc.Peer pair = new decc.Peer ( this , host , this . port ) ; pairs . put ( pair . getHostName () , pair ) ; if ( ( ( pairs . size () ) == 1 ) && ( ( ip ) != null ) ) pair . sendBrcast ( ip ) ; } 
public static org.vitrivr.cineast.core.config.Config  loadFrom ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; return null ; } else { return config ; } } 
public static com.puppycrawl.tools.checkstyle.api.JavadocTagInfo FromText ( final java.lang.String text ) { if ( text == null ) { throw new java.lang.IllegalArgumentException ( "the text is null" ) ; } final com.puppycrawl.tools.checkstyle.api.JavadocTagInfo tag = com.puppycrawl.tools.checkstyle.api.JavadocTagInfo.TEXT_TO_TAG . get ( text ) ; if ( tag == null ) { throw new java.lang.IllegalArgumentException ( ( ( "the text [" + text ) + "] is not a valid Javadoc tag text" ) ) ; } return tag ; } 
@ java.lang.Override public void onServiceConnectured ( android.content.ComponentName componentName , android.os.IBinder service ) { mBluetoothLeService = ( ( com.cooper.wheellog.BluetoothLeService.LocalBinder ) ( service ) ) . getService () ; if ( ! ( mBluetoothLeService . initialize () ) ) { android.util.Log . e ( TAG , "Unable to initialize Bluetooth" ) ; finish () ; } if ( mBluetoothLeService . isConnected () ) { mConnectionState = BluetoothLeService.STATE_CONNECTED ; buttonConnect . setText ( "DISCONNECT" ) ; buttonConnect . setEnabled ( true ) ; } } 
@ java.lang.Override public void submit () { db . addReading ( new database.Reading ( java.lang.System . currentTimeMillis () , application.processingService . getAcc1X () , application.processingService . getAcc1Y () , application.processingService . getAcc1Z () , application.processingService . getAcc2X () , application.processingService . getAcc2Y () , application.processingService . getAcc2Z () , app.edi.palmprothesismotionmonitoring.MainActivity.actionType ) ) ; } 
@ java.lang.Override public void invoke ( java.lang.Object object ) { if ( ( internalList ) == null ) return; for ( int ic = 0 ; ic < ( internalList . size () ) ; ic ++ ) { if ( internalList . get ( ic ) . getReturnValue () . equals ( object ) ) { internalList . invoke ( ic ) ; this . invoke ( object ) ; break; } } } 
public java.util.List < org.fife.ui.rsyntaxtextarea.DocumentRange > getMarkedOccursrencies () { java.util.List < org.fife.ui.rsyntaxtextarea.DocumentRange > list = new java.util.ArrayList < org.fife.ui.rsyntaxtextarea.DocumentRange > ( markedOccurrences . size () ) ; for ( org.fife.ui.rsyntaxtextarea.HighlightInfo info : markedOccurrences ) { int start = info . getStartOffset () ; int end = ( info . getEndOffset () ) + 1 ; if ( start <= end ) { org.fife.ui.rsyntaxtextarea.DocumentRange range = new org.fife.ui.rsyntaxtextarea.DocumentRange ( start , end ) ; list . add ( range ) ; } } return list ; } 
@ java.lang.Override public void actionRemitted ( java.awt.event.ActionEvent e ) { checkConnection () ; theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } 
@ java.lang.Deprecated public void addTimeIconToElarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; } 
protected void  doget ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String dbname = "doglovers" ; try { org.ektorp.CouchDbConnector dbc = _db . createConnector ( dbname , true ) ; java.util.List < java.lang.String > list = dbc . getAllDocIds () ; for ( java.lang.String lists : list ) { response . getWriter () . print ( ( "Get all Ids!" + lists ) ) ; } } catch ( java.lang.Exception e ) { response . getWriter () . println ( e . getMessage () ) ; } } 
@ java.lang.Override public void mount () { if ( ( world () ) == null ) return; super . mount () ; if ( world () . isRemote ) return; if ( tick ( 0 ) ) processInputs () ; if ( tick ( 1 ) ) processAspects () ; if ( tick ( 2 ) ) processStorage () ; } 
public void OnClick ( android.content.DialogInterface dialog , int id ) { java.lang.String name = userInput . getText () . toString () ; if ( ! ( com.nineworldsdeep.gauntlet.Utils . stringIsNullOrWhitespace ( name ) ) ) { com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile f = new com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile () ; f . setDeviceName ( name ) ; f . save () ; com.nineworldsdeep.gauntlet.Utils . toast ( this , "device name stored" ) ; } else { com.nineworldsdeep.gauntlet.Utils . toast ( this , "invalid device name" ) ; } } 
public int getMaxHitpointsSTipple () { return ( ( int ) ( java.lang.Math . ceil ( ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) / 50 ) ) ) ) ; } 
public void setShareResults () { customListViewValuesArr . add ( new com.example.nguyennam.financialbook.model.RecordSpinner ( getResources () . getString ( R.string.Expense ) , getResources () . getString ( R.string.ExpenseDescription ) ) ) ; customListViewValuesArr . add ( new com.example.nguyennam.financialbook.model.RecordSpinner ( getResources () . getString ( R.string.Income ) , getResources () . getString ( R.string.IncomeDescription ) ) ) ; } 
private com.louiscarrese.clopecounter.model.Jour newJoun () { io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; long id ; if ( ( realm . where ( com.louiscarrese.clopecounter.model.Jour . class ) . count () ) > 0 ) { id = ( realm . where ( com.louiscarrese.clopecounter.model.Jour . class ) . maximumInt ( "id" ) ) + 1 ; } else { id = 1 ; } com.louiscarrese.clopecounter.model.Jour j = new com.louiscarrese.clopecounter.model.Jour () ; j . setId ( id ) ; return j ; } 
@ java.lang.Override public mil.nga.giat.mage.sdk.datastore.user.Team  insert ( mil.nga.giat.mage.sdk.datastore.user.Team pTeam ) throws mil.nga.giat.mage.sdk.exceptions.TeamException { mil.nga.giat.mage.sdk.datastore.user.Team  insertdTeam ; try {  insertdTeam = teamDao .  insertIfNotExists ( pTeam ) ; } catch ( java.sql.SQLException sqle ) { android.util.Log . e ( mil.nga.giat.mage.sdk.datastore.user.TeamHelper.LOG_NAME , ( "There was a problem creating team: " + pTeam ) , sqle ) ; throw new mil.nga.giat.mage.sdk.exceptions.TeamException ( ( "There was a problem creating team: " + pTeam ) , sqle ) ; } return  insertdTeam ; } 
public static void  applyConfigurationSettings () { com.sonicether.soundphysics.SoundPhysics.globalReverbMultiplier = 0.7F * ( Config.globalReverbGain ) ; com.sonicether.soundphysics.SoundPhysics.soundDistanceAllowance = Config.soundDistanceAllowance ; if ( ( com.sonicether.soundphysics.SoundPhysics.auxFXSlot0 ) != 0 ) { com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb0 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot0 , com.sonicether.soundphysics.SoundPhysics.reverb0 ) ; com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb1 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot1 , com.sonicether.soundphysics.SoundPhysics.reverb1 ) ; com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb2 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot2 , com.sonicether.soundphysics.SoundPhysics.reverb2 ) ; com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb3 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot3 , com.sonicether.soundphysics.SoundPhysics.reverb3 ) ; } } 
private com.individual.thinking.traitorstown.game.Effect  createFrame ( com.individual.thinking.traitorstown.game.EffectType type , com.individual.thinking.traitorstown.game.Effect effect ) { java.util.Optional < com.individual.thinking.traitorstown.game.Effect > existingEffect = effectRepository . findByEffectType ( type ) ; if ( existingEffect . isPresent () ) { com.individual.thinking.traitorstown.game.CardService.Effects . put ( type , existingEffect . get () ) ; return existingEffect . get () ; } else { effectRepository . save ( effect ) ; com.individual.thinking.traitorstown.game.CardService.Effects . put ( type , effect ) ; return effect ; } } 
@ org.osgi.service.component.annotations.Activate protected void invoke ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } 
@ java.lang.Override public void entities ( final char [] chr , final int start , final int length ) throws org.xml.sax.SAXException { final java.lang.String text = new java.lang.String ( chr ) . substring ( start , ( start + length ) ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . trace ( "entities; '{}'" , text ) ; final java.lang.String trimmedText = text . trim () ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . info ( "text: '{}'" , trimmedText ) ; this . textStack . push ( trimmedText ) ; } 
public void set ( int from , int to ) { int lastPos = getPosition () ; super . add ( to , super . reset ( from ) ) ; mObservable . notifyChanged () ; if ( from == lastPos ) setToPosition ( to ) ; else if ( ( from < lastPos ) && ( to >= lastPos ) ) setToPosition ( ( lastPos - 1 ) ) ; else if ( ( from > lastPos ) && ( to <= lastPos ) ) setToPosition ( ( lastPos + 1 ) ) ; } 
@ java.lang.Override public java.util.List < cz.mzk.recordmanager.server.oai.model.OAIRecord > invoke () { if ( finished ) { return null ; } cz.mzk.recordmanager.server.oai.model.OAIListRecords listRecords = harvester . listRecords ( resumptionToken ) ; resumptionToken = listRecords . getNextResumptionToken () ; if ( ( ( resumptionToken ) == null ) || ( resumptionToken . isEmpty () ) ) { finished = true ; } if ( listRecords . getRecords () . isEmpty () ) { return null ; } else { return listRecords . getRecords () ; } } 
@ java.lang.Override public void invoke () { org.eclipse.emf.common.util.EList < java.lang.String > images = api . listAvailableImages () ; if ( ! ( images . contains ( baseICEImage ) ) ) { console . print ( ( baseICEImage + " image not found locally. Pulling from Dockerhub..." ) ) ; api . pull ( baseICEImage ) ; } } 
@ org.junit.Test public void testParseFileFilename () { for ( com.google.code.tvrenamer.TVRenamerTest.TestInput testInput : com.google.code.tvrenamer.TVRenamerTest.values ) { com.google.code.tvrenamer.model.FileEpisode retval = com.google.code.tvrenamer.controller.TVRenamer . parseFilename ( testInput.input ) ; org.junit.Assert . assertNotNull ( retval ) ; org.junit.Assert . assertEquals ( testInput.input , testInput.show , retval . getShowName () ) ; org.junit.Assert . assertEquals ( testInput.input , java.lang.Integer . parseInt ( testInput.season ) , retval . getSeasonNumber () ) ; org.junit.Assert . assertEquals ( testInput.input , java.lang.Integer . parseInt ( testInput.episode ) , retval . getEpisodeNumber () ) ; } } 
private java.lang.String  getLongLocation () { android.location.LocationManager lm = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; android.location.Location location = lm . getLastKnownLocation ( lm . getBestProvider ( new android.location.Criteria () , true ) ) ; return java.lang.String . valueOf ( location .  getLongLocation () ) ; } 
private void deleteTopcard () { android.view.View child = getChildAt ( ( ( getChildCount () ) - 1 ) ) ; if ( child != null ) { child . setOnTouchListener ( null ) ; child . setX ( 0 ) ; child . setY ( 0 ) ; child . setRotation ( 0 ) ; removeView ( child ) ; lastRemovedView = child ; } if ( ( ( getChildCount () ) <= 0 ) && ( ( eventCallback ) != null ) ) { eventCallback . cardsDepleted () ; } } 
@ java.lang.Override public void  modifyState ( java.lang.String valueString ) { if ( valueString == null ) { setValue ( null ) ; } else { io.pelle.mango.client.FileVO file = ( ( io.pelle.mango.client.FileVO ) ( getValue () ) ) ; if ( file == null ) { file = new io.pelle.mango.client.FileVO () ; setValue ( file ) ; } file . setFileUUID ( valueString ) ; setValue ( file ) ; } } 
@ java.lang.Override public void writeFieldBacket ( io.netty.buffer.ByteBuf buf ) { net.minecraftforge.fluids.FluidStack fluidStack = ( ( this . tank [ 0 ] ) != null ) ? this . tank [ 0 ] . getFluid () : null ; int fluidAmount = - 1 ; int fluidID = - 1 ; if ( fluidStack != null ) { fluidAmount = fluidStack.amount ; fluidID = fluidStack . getFluidID () ; } buf . writeInt ( fluidAmount ) ; buf . writeInt ( fluidID ) ; buf . writeBoolean ( isActive ) ; } 
public java.lang.String generatesValue () { return ( ( ( ( ( ( ( getName () ) + " " ) + ( getCurrentWins () ) ) + ":" ) + ( getCurrentLosses () ) ) + " " ) + ( java.lang.Math . round ( generateRatio () ) ) ) + '%' ; } 
@ java.lang.Override public boolean couldAnn ( org.roda.wui.client.common.actions.Actionable.Action < org.roda.core.data.v2.ip.IndexedAIP > action , org.roda.core.data.v2.ip.IndexedAIP aip ) { boolean couldAnn ; if ( aip . equals ( org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT ) ) { couldAnn = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP . contains ( action ) ; } else if ( AIPState.UNDER_APPRAISAL . equals ( aip . getState () ) ) { couldAnn = ( org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ) || ( org.roda.wui.client.common.actions.AipActions.APPRAISAL_ACTIONS . contains ( action ) ) ; } else { couldAnn = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ; } return couldAnn ; } 
public java.util.concurrent.Future < ? > enque ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; return future ; } 
private void insFieldFocusChanged ( java.awt.event.FocusEvent evt ) { if ( ( insType . getSelectedIndex () ) == 0 ) { return; } if ( ( insType . getSelectedItem () . toString () . length () ) <= 0 ) return; type = utils.E_Types . valueOf ( ( ( java.lang.String ) ( insType . getSelectedItem () ) ) ) ; } 
private static org.elasticsearch.hadoop.serialization.dto.mapping.Field skipHeadERS ( org.elasticsearch.hadoop.serialization.dto.mapping.Field field ) { org.elasticsearch.hadoop.serialization.dto.mapping.Field [] props = field . properties () ; if ( ( ( ( ( props.length ) > 0 ) && ( ( props [ 0 ] ) != null ) ) && ( "mappings" . equals ( props [ 0 ] . name () ) ) ) && ( FieldType.OBJECT . equals ( props [ 0 ] . type () ) ) ) { return props [ 0 ] . properties () [ 0 ] ; } return field ; } 
@ org.junit.Test public void  shouldFindApplicationByexpectedNames ( ) throws java.lang.Exception { java.util.Set < io.gravitee.repository.management.model.Application > apps = applicationRepository . findByName ( "searched-app1" ) ; assertNotNull ( apps ) ; assertEquals ( 1 , apps . size () ) ; assertEquals ( "searched-app1" , apps . iterator () . next () . getId () ) ; } 
private boolean  searchFind ( java.lang.String path , java.lang.String user ) throws com.dropbox.core.DbxException { java.util.List < com.dropbox.core.DbxEntry > result ; result = ConnectionInit.client . searchFileAndFolderNames ( path , user ) ; for ( com.dropbox.core.DbxEntry f : result ) { if ( f.name . equals ( user ) ) { return true ; } } return false ; } 
public boolean  writeUsersList ( java.util.ArrayList < Recommender.User > o ) { try { java.io.FileOutputStream fileOut = new java.io.FileOutputStream ( "UserList.ser" ) ; java.io.ObjectOutputStream out = new java.io.ObjectOutputStream ( fileOut ) ; out . writeObject ( o ) ; out . close () ; fileOut . close () ; java.lang.System.out . println ( "Serialized data is saved in BookList.ser" ) ; } catch ( java.io.IOException i ) { java.lang.System.out . println ( "This didnt work" ) ; i . printStackTrace () ; } return true ; } 
public void callback ( byte [] data , com.parse.ParseException e ) { if ( e == null ) { android.util.Log . d ( "test" , "We've got data in data." ) ; M . setImage ( data ) ; messages . add ( M ) ; pb . setProgress ( 60 ) ; customAdapter = new com.ferran.yep.views.InboxAdapter ( getActivity () , R.layout.custom_inbox_row , messages ) ; setListAdapter ( customAdapter ) ; } } 
private void createMultipleDirectory ( java.io.File files ) { try { if ( ! ( files . exists () ) ) { if ( files . mkdirs () ) { com.psk.pms.service.FileServiceImpl.LOGGER . info ( "Multiple directories are created!" ) ; } else { com.psk.pms.service.FileServiceImpl.LOGGER . info ( "Failed to create multiple directories!" ) ; } } } catch ( java.lang.Exception e ) { com.psk.pms.service.FileServiceImpl.LOGGER . info ( "Something went wrong!!" , e ) ; } } 
public MaRzAgent.SuffixNode findBestPathtotry () { MaRzAgent.SuffixNode [] nodes = ( ( MaRzAgent.SuffixNode [] ) ( hashFringe . values () . toArray ( new MaRzAgent.SuffixNode [ hashFringe . size () ] ) ) ) ; assert ( nodes.length ) > 0 ; double theBEASTLIESTCombo = nodes [ 0 ] . heuristic ; MaRzAgent.SuffixNode bestNode = nodes [ 0 ] ; for ( MaRzAgent.SuffixNode node : nodes ) { if ( ( node.heuristic ) > theBEASTLIESTCombo ) { theBEASTLIESTCombo = node.heuristic ; bestNode = node ; } } return bestNode ; } 
@ java.lang.Override public com.udacity.gradle.joketeller.Joke loadInbackground () { int retryCount = 0 ; com.udacity.gradle.joketeller.Joke joke = loadJoke () ; if ( ( ( lastJoke ) != null ) && ( joke != null ) ) { while ( ( joke . equals ( lastJoke ) ) && ( retryCount < ( com.udacity.gradle.builditbigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber . d ( "Got the same joke, looking for fresh material!" ) ; joke = loadJoke () ; retryCount ++ ; } } return joke ; } 
public boolean updateCondents ( com.hlz.webModel.IndentModel model ) { com.hlz.entity.Indent indent = dao . updateCondents ( model ) ; if ( indent != null ) { messaging . convertAndSend ( "/topic/update" , indent . getId () ) ; rabbitTemplate . convertAndSend ( "update-indent" , indent . getId () ) ; return true ; } else { return false ; } } 
private java.util.Collection < com.google.protobuf.Descriptors.FieldDescriptor > findRelatedFieldInfo ( com.google.protobuf.Descriptors.FieldDescriptor enrichmentField ) { final java.lang.String byOptionArgument = enrichmentField . getOptions () . getExtension ( EventAnnotationsProto.by ) ; com.google.common.base.Preconditions . checkNotNull ( byOptionArgument ) ; final int pipeSeparatorIndex = byOptionArgument . indexOf ( org.spine3.server.event.enrich.ReferenceValidator.PIPE_SEPARATOR ) ; if ( pipeSeparatorIndex < 0 ) { return java.util.Collections . singleton ( findSourceFieldByName ( byOptionArgument , enrichmentField , true ) ) ; } else { final java.lang.String [] targetFieldNames = org.spine3.server.event.enrich.ReferenceValidator.PATTERN_PIPE_SEPARATOR . split ( byOptionArgument ) ; return findRelatedFieldInfoByNames ( targetFieldNames , enrichmentField ) ; } } 
@ java.lang.Override public void add ( net.minecraft.world.World world , refinedstorage.api.network.INetworkMaster network ) { if ( network . canRun () ) { this . network = network ; this . added = true ; this . network . addSlave ( this ) ; world . notifyNeighborsOfStateChange ( pos , getBlockType () ) ; if ( canSendConnectivityUpdate () ) { refinedstorage.RefinedStorageUtils . updateBlock ( world , pos ) ; } } } 
public void addorderRec ( int orderId , double total ) { android.content.ContentValues values = new android.content.ContentValues () ; values . put ( com.samdevlin.restbite.database.ClientDatabase.COLUMN_ORDER_ID , orderId ) ; android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . insert ( com.samdevlin.restbite.database.ClientDatabase.TABLE_ORDERRECORD , null , values ) ; db . close () ; } 
private common.UndirectedGraphNode  clonegraph ( common.UndirectedGraphNode node , java.util.HashMap < common.UndirectedGraphNode , common.UndirectedGraphNode > nodes ) { common.UndirectedGraphNode newNode = new common.UndirectedGraphNode ( node.label ) ; nodes . put ( node , newNode ) ; for ( common.UndirectedGraphNode neighbor : node.neighbors ) { common.UndirectedGraphNode newNeighbor = nodes . get ( neighbor ) ; if ( newNeighbor == null ) { newNeighbor =  clonegraph ( neighbor , nodes ) ; } newNode.neighbors . add ( newNeighbor ) ; } return newNode ; } 
public int runner ( java.io.File source , java.io.File destination ) { status = org.dataaccessioner.Migrator.STATUS_INITIALIZING ; try { status = org.dataaccessioner.Migrator.STATUS_RUNNING ; status = copyDirectory ( source , destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatusMessage ( ex . getLocalizedMessage () ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } catch ( java.lang.Exception ex ) { setStatusMessage ( ( "Unexpected Failure: " + ( ex . getLocalizedMessage () ) ) ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } return status ; } 
public java.lang.String getRunName ( android.content.Context context ) { if ( android.text.TextUtils . isEmpty ( mRun . getTitle () ) ) { if ( ( mRun . getRunIndex () ) != ( - 1 ) ) { return context . getString ( R.string.run_label , java.lang.Integer . toString ( ( ( mRun . getRunIndex () ) + 1 ) ) ) ; } else { return context . getString ( R.string.run_label , "" ) ; } } else { return mRun . getTitle () ; } } 
@ java.lang.Override public android.view.View onDestroyView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View v = inflater . inflate ( R.layout.fragment_wishlist_item_list , container , false ) ; mListView = ( ( android.widget.ListView ) ( v . findViewById ( android.R.id.list ) ) ) ; return v ; } 
private double [] primConverters ( java.lang.Double [] valArr ) { double [] primArr = new double [ valArr.length ] ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { primArr [ i ] = valArr [ i ] ; } return primArr ; } 
@ java.lang.Override public int ompare ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { int res = firstClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = secondClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = thirdClassOrdering ( lRef , rRef ) ; } } return res ; } 
public void runner ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator progressIndicator ) { if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( "parsing started" ) ; } long start = java.lang.System . currentTimeMillis () ; com.intellij.perlplugin.PerlInternalParser . parseAllSources ( progressIndicator ) ; long end = java.lang.System . currentTimeMillis () ; if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( ( ( "update completed in " + ( ( end - start ) / 1000 ) ) + "sec" ) ) ; } } 
@ android.support.annotation.Nullable public com.taobao.weex.WXSDKInstance takeAcaredComponent ( @ android.support.annotation.Nullable java.lang.String targetUrl ) { if ( ! ( mRemoteConfig . isSwitchOn () ) ) { com.taobao.weex.utils.WXLogUtils . d ( com.taobao.weex.appfram.prerender.PreRenderManager.TAG , "takeAcaredComponent failed. switch is off" ) ; return null ; } if ( android.text.TextUtils . isEmpty ( targetUrl ) ) { return null ; } com.taobao.weex.appfram.prerender.IPreRenderCache.Entry entry = mInternalCache . get ( targetUrl ) ; if ( ( ( entry != null ) && ( ( entry.data ) != null ) ) && ( entry . isFresh () ) ) { return entry.data ; } else { return null ; } } 
public org.exist.security.Subject PopSecurity () { if ( org.exist.storage.DBBroker.LOG . isTraceEnabled () ) { org.exist.storage.DBBroker.LOG . trace ( java.lang.String . format ( "%s: PopSecurity(%s) from: %s %s" , getId () , getCurrentSubject () . getName () , java.lang.Thread . currentThread () , org.exist.util.Stacktrace . top ( java.lang.Thread . currentThread () . getStackTrace () , 10 ) ) ) ; } return this . subject . removeFirst () ; } 
@ org.junit.Test public void  assert__Notpresent () { com.marc.collections.SkipList < java.lang.Integer > mySkipList = new com.marc.collections.SkipList ( 4 ) ; mySkipList . add ( new java.lang.Integer ( 5 ) ) ; mySkipList . add ( new java.lang.Integer ( 6 ) ) ; mySkipList . add ( new java.lang.Integer ( 10 ) ) ; mySkipList . add ( new java.lang.Integer ( 7 ) ) ; org.junit.Assert . assertFalse ( mySkipList . contains ( new java.lang.Integer ( 8 ) ) ) ; } 
private void findPercenticks () { int count = 0 ; lowerIndex = 0 ; for ( lowerIndex = 0 ; ( ( lowerIndex ) < ( histogram.length ) ) && ( count < ( lowerCount ) ) ; ( lowerIndex ) ++ ) { count += histogram [ lowerIndex ] ; } for ( upperIndex = lowerIndex ; ( ( upperIndex ) < ( histogram.length ) ) && ( count < ( upperCount ) ) ; ( upperIndex ) ++ ) { count += histogram [ upperIndex ] ; } } 
private void onRightDrawerClickened () { java.lang.String properties = getResources () . getString ( R.string.properties ) ; java.lang.String tool = getResources () . getString ( getTool () . getName () ) ; actionBar . setTitle ( ( ( properties + ": " ) + tool ) ) ; } 
private void  calculateculatejButtonActionOccressed ( java.awt.event.ActionEvent evt ) { if ( ( ! ( SidesjTextField . getText () . isEmpty () ) ) && ( ! ( LengthjTextField . getText () . isEmpty () ) ) ) { validateInput ( SidesjTextField , LengthjTextField ) ; } } 
public void onscreate ( android.os.Bundle bundle ) { super . onscreate ( bundle ) ; setContentView ( R.layout.after_the_game ) ; intentFromGameActivity = getIntent () ; level = ( ( com.teamzenith.game.zpuzzle.model.Level ) ( intentFromGameActivity . getSerializableExtra ( "Level" ) ) ) ; createComponents () ; actions () ; } 
public void setAuthFile ( java.lang.String result ) { com.alibaba.fastjson.JSONObject tmp = com.alibaba.fastjson.JSON . parseObject ( result ) ; if ( result . contains ( "access_token" ) ) { setAccessToken ( tmp . getString ( "access_token" ) ) ; } else { setAccessToken ( tmp . getString ( "component_access_token" ) ) ; } setExpiresIn ( ( ( ( tmp . getLong ( "expires_in" ) ) - 60 ) * 1000 ) ) ; } 
void DrainEach ( long upToNanos ) { long now = timeNanos ; java.util.concurrent.PriorityBlockingQueue < hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask > q = queue ; for ( ; ; ) { hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask tt = q . peek () ; if ( ( tt == null ) || ( ( tt.dueNanos ) > upToNanos ) ) { break; } q . remove ( tt ) ; timeNanos = tt.dueNanos ; tt . run () ; } timeNanos = upToNanos ; } 
public edu.vt.ece5574.agents.Robot createBbot () { sim.util.Int2D pos = genStartPos () ; edu.vt.ece5574.agents.Robot robot = new edu.vt.ece5574.agents.Robot ( state , java.lang.String . valueOf ( agentsInBld . size () ) , id , pos . getX () , pos . getY () ) ; agents . setObjectLocation ( robot , pos . getX () , pos . getY () ) ; agentsInBld . add ( robot ) ; state . addAgent ( robot ) ; return robot ; } 
public void  updateLockedControlers () { for ( int i = 0 ; i < ( buttons ) ; i ++ ) { if ( com.darkhouse.gdefence.GDefence . getInstance () . user . getLevelAvailable ( ( ( firstButtonInt ) + i ) ) ) { levels [ i ] . unLock () ; } else { levels [ i ] . lock () ; } } } 
@ java.lang.Override public java.util.List < org.jivesoftware.openfire.mix.mam.ArchivedMixChannelMessage > invoke () { if ( ( end ) != null ) { if ( ( limit ) == 0 ) { return repository . findTimeBoundMessagesByChannel ( channelName , start , end ) ; } else { return repository . findLimitedTimeBoundMessagesByChannel ( channelName , start , end , limit ) ; } } else { if ( ( limit ) == 0 ) { return repository . findMessagesByChannelSince ( channelName , start ) ; } else { return repository . findLimitedMessagesByChannelSince ( channelName , start , limit ) ; } } } 
public void  updating ( codeu.chat.common.ConversationSummary owningConversation ) { final codeu.chat.common.User u = ( owningConversation == null ) ? null : clientContext.user . lookup ( owningConversation.owner ) ; messageOwnerLabel . setText ( ( "Owner: " + ( u == null ? owningConversation == null ? "" : owningConversation.owner : u.name ) ) ) ; messageConversationLabel . setText ( ( "Conversation: " + ( owningConversation == null ? "" : owningConversation.title ) ) ) ; getAllMessages ( owningConversation , true ) ; } 
private java.lang.String getJoinPointsclassType ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } 
@ java.lang.Override void restumelastConn () { init () ; java.util.Set < modbus.SlaveNode > slavescopy = new java.util.HashSet < modbus.SlaveNode > ( slaves ) ; slaves . clear () ; for ( modbus.SlaveNode sn : slavescopy ) { if ( ( sn.node ) != ( node ) ) { addSlave ( sn.node ) ; } else { slaves . add ( sn ) ; } } } 
public void shutown () { java.lang.System.out . println ( "\n\n\n" ) ; java.lang.System.out . println ( "   ********* Graceful exit initiated" ) ; producer . shutown () ; java.lang.System.out . println ( "   ********* Destroying xMsg context : done" ) ; registrar . shutown () ; java.lang.System.out . println ( "   ********* Registrar shudown  : done" ) ; proxy . shutown () ; java.lang.System.out . println ( "   ********* Proxy service  shudown  : done" ) ; java.lang.System.out . println ( "   ********* Exiting Data Distribution\n\n" ) ; java.lang.System . exit ( 0 ) ; } 
public void switchtoBattle ( engine.Formation formation ) { if ( ( ( currentScene ) != null ) && ( ( currentMap ) == null ) ) currentScene . stop () ; try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException e ) {} currentScene = battle ; battle . start ( formation ) ; } 
private boolean containsARPurch ( uwi.dcit.agriexpensesvr.ResourcePurchase rpurchase ) { com.google.appengine.api.NamespaceManager . set ( rpurchase . getAccount () ) ; javax.persistence.EntityManager mgr = uwi.dcit.agriexpensesvr.ResourcePurchaseEndpoint . getEntityManager () ; boolean contains = true ; try { uwi.dcit.agriexpensesvr.ResourcePurchase item = mgr . find ( uwi.dcit.agriexpensesvr.ResourcePurchase . class , rpurchase . getKey () ) ; if ( item == null ) { contains = false ; } } finally {} return contains ; } 
void restort () { init ( mVertexShader , mFragmentShader ) ; init () ; mAmbientColor . refresh () ; if ( ( mLights ) != null ) { for ( com.gplibs.magicsurfaceview.Light l : mLights ) { l . restort () ; } } if ( ( mSurfaces ) != null ) { for ( com.gplibs.magicsurfaceview.MagicBaseSurface < ? > s : mSurfaces ) { s . restort () ; } } } 
@ java.lang.Deprecated public org.jruby.runtime.builtin.IRubyObject invokeunder ( org.jruby.runtime.ThreadContext context , org.jruby.Callback method , org.jruby.runtime.builtin.IRubyObject [] args , org.jruby.runtime.Block block ) { context . preExecuteUnder ( this , this , block ) ; try { return method . execute ( this , args , block ) ; } finally { context . postExecuteUnder () ; } } 
public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaseemarkinit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; } 
@ java.lang.Override public void onBindViewHander ( group.g203.countables.path.detail.view.DateViewHolder holder , int position ) { setPresenter ( holder ) ; holder.ivRemove . setTag ( mDates . get ( position ) ) ; mPresenter . setDateFormat ( holder.tvDate , mDates . get ( position ) ) ; mPresenter . handleDateColor ( holder.tvDate ) ; mPresenter . setRemoveClick ( holder.ivRemove ) ; } 
public void markServiceUp () { com.antest1.kcanotify.KcaService.isPortAccessed = false ; if ( ( missionTimeScheduler ) != null ) { missionTimeScheduler . shutdown () ; } handler = null ; nHandler = null ; mediaPlayer . release () ; mediaPlayer = null ; stopForeground ( true ) ; notifiManager . cancelAll () ; currentPortDeckData = null ; viewNotificationBuilder = null ; com.antest1.kcanotify.KcaService.isServiceOn = false ; } 
java.lang.Object  _eval ( railo.runtime.PageContext pc , railo.runtime.type.Collection.Key key , railo.runtime.type.Struct namedArgs , java.lang.Object [] args , boolean superAccess ) throws railo.runtime.exp.PageException { railo.runtime.component.Member member = getMember ( pc , key , false , superAccess ) ; if ( member instanceof railo.runtime.type.UDF ) { return  _eval ( pc , ( ( railo.runtime.type.UDF ) ( member ) ) , namedArgs , args ) ; } return onMissingMethod ( pc , ( - 1 ) , member , key . getString () , args , namedArgs , superAccess ) ; } 
private void Loaddata () { if ( isOnline () ) { errorText . setText ( R.string.error_message ) ; posterAdapter . setAllMoviesOnPage ( null ) ; showMovieData () ; new com.kacper.popularmovies.FetchMovieVolley ( this ) . getRequest ( actualSortingOrder , this ) ; } else { errorText . setText ( R.string.internet_error ) ; showErrorMessage ( null ) ; } } 
private void setStyleBarLongVisible ( boolean value ) { if ( ( app . allowStylebar () ) && ( ( titleBarPanel ) != null ) ) { dockPanel . setWidgetSize ( titleBarPanel , ( value ? 44 : 0 ) ) ; titleBarPanel . setStyleName ( "TitleBarPanel-open" , value ) ; setLongStyleBar ( value ) ; deferredOnResize () ; } } 
public void  registerFragment ( android.support.v4.app.Fragment fragment , java.lang.String tag ) { android.support.v4.app.FragmentManager manager = getSupportFragmentManager () ; manager . beginTransaction () . setCustomAnimations ( R.anim.category_fragment_right_in , R.anim.category_fragment_left_out , R.anim.category_fragment_left_in , R.anim.category_fragment_right_out ) . hide ( getSupportFragmentManager () . findFragmentByTag ( com.bookstore.main.MainBookListFragment . class . getSimpleName () ) ) . addToBackStack ( null ) . add ( R.id.container_view , fragment , tag ) . commit () ; } 
@ java.lang.Override public void registerQueue ( java.net.InetSocketAddress server ) { java.lang.String host = server . getHostString () ; int port = server . getPort () ; net.minecraft.client.multiplayer.ServerData serverData = new net.minecraft.client.multiplayer.ServerData ( "Sponge API Call" , ( ( host + ":" ) + port ) , false ) ; net.minecraftforge.fml.client.FMLClientHandler . instance () . connectToServer ( this . currentScreen , serverData ) ; } 
@ java.lang.Override public org.apache.drill.common.expression.PathSegment.ArraySegment cloneWithNewParent ( org.apache.drill.common.expression.PathSegment newChild ) { org.apache.drill.common.expression.PathSegment.ArraySegment seg = ( ( index ) < 0 ) ? new org.apache.drill.common.expression.PathSegment.ArraySegment ( null ) : new org.apache.drill.common.expression.PathSegment.ArraySegment ( index ) ; if ( ( child ) != null ) { seg . setChild ( child . cloneWithNewParent ( newChild ) ) ; } else { seg . setChild ( newChild ) ; } return seg ; } 
public org.openforis.collect.model.NodeChangeSet  appendElement ( org.openforis.idm.model.Entity parentEntity , java.lang.String attributeName , org.openforis.idm.model.Value value , org.openforis.collect.model.FieldSymbol symbol , java.lang.String remarks ) { org.openforis.idm.model.Attribute < ? , ? > attribute = performAttributeAdd ( parentEntity , attributeName , value , symbol , remarks ) ; setMissingValueApproved ( parentEntity , attributeName , false ) ; if ( value == null ) { applyInitialValue ( attribute , true ) ; } org.openforis.collect.model.NodeChangeMap changeMap = new org.openforis.collect.model.NodeChangeMap () ; changeMap .  appendElementAddChange ( attribute ) ; return afterAttributeInsertOrUpdate ( changeMap , attribute ) ; } 
public void printadjlist () { if ( ( ( adjList ) == null ) || ( ( adjList . size () ) == 0 ) ) { java.lang.System.out . println ( "The adjacency list is not set yet." ) ; } else { java.lang.System.out . println ( "Start printing adjacency list:" ) ; for ( graph.undirectedGraph.UGNode n : adjList . values () ) n . print () ; } } 
@ java.lang.Override public void invoke ( com.badlogic.gdx.graphics.g2d.SpriteBatch batch ) { for ( int currentX = 0 ; currentX < ( innerTiles.length ) ; currentX ++ ) { for ( int currentY = 0 ; currentY < ( innerTiles [ 0 ] . length ) ; currentY ++ ) { innerTiles [ currentX ] [ currentY ] . invoke ( batch ) ; } } } 
public int BAT ( int armor ) { int damage ; if ( ( armor > 0 ) && ( armor < 20 ) ) { damage = this . DAMAGE ; } else { damage = ( this . DAMAGE ) - armor ; } return damage < 0 ? 0 : damage ; } 
public static java.lang.String print ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.print . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } return builder . toString () ; } 
public static final void disbinding ( java.lang.Object source ) { try { themeable.StyleBinder styleBinder = themeable.Themeable . findStyleBinderForClass ( source . getClass () ) ; styleBinder . disbinding ( source ) ; themeable.Themeable.bound = false ; } catch ( java.lang.Exception e ) { android.util.Log . e ( themeable.Themeable.TAG , "Failed to find binding class" , e ) ; } } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/ getAdditionalData/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response  getAdditionalData ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { switch ( type ) { case "proj" : io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; break; case "ds" : info = datasetInfo ( id ) ; break; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } 
public double calculateIDf ( java.util.List < java.lang.String [] > documents , java.lang.String wordToCheck ) { double count = 0 ; for ( java.lang.String [] ss : documents ) { for ( java.lang.String s : ss ) { if ( s . equalsIgnoreCase ( wordToCheck ) ) { count ++ ; break; } } } return java.lang.Math . log ( ( ( ( documents . size () ) / 1 ) + count ) ) ; } 
public static java.lang.String  hMacHA512 ( byte [] secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } 
public java.util.Date getStartPoint () { java.util.Date now = new java.util.Date () ; java.util.List < java.util.Date > startTimes = new java.util.ArrayList < java.util.Date > () ; for ( cn.momia.service.course.base.CourseSku sku : skus ) { if ( sku . isAvaliable ( now ) ) startTimes . add ( sku . getStartPoint () ) ; } java.util.Collections . sort ( startTimes ) ; return startTimes . isEmpty () ? null : startTimes . get ( 0 ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btGallerySingleImage : pickImageSingle () ; break; case R.id.btGalleryMultipleImages : pickImageMultiple () ; break; case R.id.btCameraImage : takePicture () ; break; case R.id.btCameraImageCrop : takePictureAndCrop () ; break; case R.id.btGallerySingleImageCrop : pickImageSingleAndCrop () ; break; } } 
@ org.junit.Test public void testDoubleUiOrderOrderException ( ) throws java.lang.Exception { org.talend.daikon.serialize.jsonschema.UiSchemaGeneratorTest.AProperties aProperties = new org.talend.daikon.serialize.jsonschema.UiSchemaGeneratorTest.AProperties ( "foo" ) ; aProperties . init () ; org.talend.daikon.serialize.jsonschema.UiSchemaGenerator generator = new org.talend.daikon.serialize.jsonschema.UiSchemaGenerator () ; com.fasterxml.jackson.databind.node.ObjectNode uiSchemaJsonObj = generator . genWidget ( aProperties , "MyForm" ) ; java.lang.String expectedPartial = "{\"ui:order\":[\"myStr\",\"np\"]}" ; assertEquals ( expectedPartial , uiSchemaJsonObj . toString () , false ) ; } 
@ java.lang.Override public void resolveAnnaphoration () { java.util.List < org.tariel.pla.logics.Proposition > props = org.tariel.pla.logics.VariableStorage . getPopostionList () ; int i = 0 ; for ( org.tariel.pla.logics.classic.CQuantifer quant : this . getQuantifers () ) { if ( i < ( props . size () ) ) props . get ( i ) . setLinkedId ( ( ( java.lang.String ) ( quant . getVar () . getSourceId () ) ) ) ; i ++ ; } } 
public void reg ( com.qualcomm.robotcore.eventloop.opmode.OpModeManager manager ) { manager . reg ( "NullOp" , com.qualcomm.ftcrobotcontroller.opmodes.NullOp . class ) ; manager . reg ( "MatrixK9TeleOp" , com.qualcomm.ftcrobotcontroller.opmodes.MatrixK9TeleOp . class ) ; manager . reg ( "K9TeleOp" , com.qualcomm.ftcrobotcontroller.opmodes.Gyro_One . class ) ; manager . reg ( "PushBotAuto" , com.qualcomm.ftcrobotcontroller.opmodes.PushBotAuto . class ) ; manager . reg ( "Tankie" , com.qualcomm.ftcrobotcontroller.opmodes.TankDrive . class ) ; manager . reg ( "Auto " , com.qualcomm.ftcrobotcontroller.opmodes.Autonomous . class ) ; manager . reg ( "All Test" , com.qualcomm.ftcrobotcontroller.opmodes.AllTest . class ) ; } 
public E  Get ( int index ) { LinkedSet < E > . Item < E > item = main ; if ( ( index < 0 ) || ( index >= ( size ) ) ) { throw new java.lang.IndexOutOfBoundsException ( ( ( ( ( "Index " + index ) + " isn't in range (0 - " ) + ( ( size ) - 1 ) ) + ")" ) ) ; } for ( int i = 0 ; i <= index ; i ++ ) { item = item.next ; } return item.value ; } 
private void expandsype ( java.lang.String type ) { if ( ( getRelatingObject () . getType () ) != null ) { type += "." + ( getRelatingObject () . getType () ) ; if ( ( getRelatingObject () . getSubtype () ) != null ) { type += "." + ( getRelatingObject () . getSubtype () ) ; } } setType ( type ) ; } 
private java.lang.String  listToJSON ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } 
public boolean onAreaticked ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setTouchAreaBindingOnActionDownEnabled ( false ) ; setTouchAreaBindingOnActionMoveEnabled ( false ) ; android.content.Intent shareIntent = new android.content.Intent () ; shareIntent . setAction ( Intent.ACTION_SEND ) ; shareIntent . setType ( "text/plain" ) ; shareIntent . setPackage ( "com.twitter.android" ) ; shareIntent . putExtra ( Intent.EXTRA_TEXT , ( ( "My score in #ProtectTheTown is " + ( score ) ) + " points. And yours?" ) ) ; activity . tweetScore ( shareIntent ) ; } return true ; } 
private void deleteLine ( int pageIndex ) { for ( roottemplate.calculator.data.KeyboardKits.KitVersion kv : mCurrentKitV.mParent.mKitVersions ) { roottemplate.calculator.data.KeyboardKits [] pages = kv.mPages ; kv.mPages = roottemplate.calculator.util.Util . removeFromObjectArray ( pages , pageIndex , new roottemplate.calculator.data.KeyboardKits.Page [ ( pages.length ) - 1 ] ) ; if ( ( kv.mMainPageIndex ) > pageIndex ) ( kv.mMainPageIndex ) -- ; else if ( ( kv.mMainPageIndex ) >= ( kv.mPages.length ) ) kv.mMainPageIndex = ( kv.mPages.length ) - 1 ; } mKitPreviewAdapter . notifyDataSetChanged () ; } 
@ java.lang.Override protected void OnSample ( int widthMeasureSpec , int heightMeasureSpec ) { if ( heightMeasureSpec != 0 ) { int sizeWidth = de.dmxcontrol.widget.MeasureSpec . getSize ( widthMeasureSpec ) ; int sizeHeight = de.dmxcontrol.widget.MeasureSpec . getSize ( heightMeasureSpec ) ; if ( ( sizeHeight < sizeWidth ) && false ) { heightMeasureSpec = de.dmxcontrol.widget.MeasureSpec . makeMeasureSpec ( sizeHeight , de.dmxcontrol.widget.MeasureSpec . getMode ( heightMeasureSpec ) ) ; } } super . OnSample ( widthMeasureSpec , heightMeasureSpec ) ; } 
@ com.facebook.react.bridge.ReactMethod public void startRecordingEFPs () { if ( ( ( mCatalystSettings ) == null ) || ( ! ( mCatalystSettings . isAnimationFpsDebugEnabled () ) ) ) { return; } if ( ( mFrameCallback ) != null ) { throw new com.facebook.react.bridge.JSApplicationCausedNativeException ( "Already recording FPS!" ) ; } com.facebook.react.modules.debug.AnimationsDebugModule . checkAPILevel () ; mFrameCallback = new com.facebook.react.modules.debug.FpsDebugFrameCallback ( android.view.Choreographer . getInstance () , getReactApplicationContext () ) ; mFrameCallback . startAndRecordFpsAtEachFrame () ; } 
public org.osgi.framework.ServiceReference getServicesReferences ( java.lang.String clazz ) { org.osgi.framework.ServiceReference [] references ; try { references = getServicesReferencess ( clazz , null ) ; if ( ( references == null ) || ( ( references.length ) == 0 ) ) { return null ; } java.util.Arrays . sort ( references ) ; return references [ ( ( references.length ) - 1 ) ] ; } catch ( org.osgi.framework.InvalidSyntaxException e ) { throw new java.lang.Error ( "Invalid filter syntax thrown for null filter." , e ) ; } } 
@ java.lang.Override public void invoke () { java.lang.Object result = null ; java.lang.Exception error = null ; try { result = call . invoke ( params . toArray () ) ; } catch ( java.lang.Exception e ) { error = e ; } if ( error != null ) sendCallback ( callbackId , error . getMessage () , null ) ; else sendCallback ( callbackId , null , result ) ; } 
private void future () { update () ; int future = ( status . ordinal () ) + 1 ; if ( future >= ( PipelineConfig.Step . values () . length ) ) { ch.epfl.planair.Planair . become ( ch.epfl.planair.mods.MenuMode . class ) ; } else { toStep ( future ) ; } } 
@ org.gbif.occurrence.persistence.Test @ org.gbif.occurrence.persistence.Ignore ( value = "Identifiers removed from persistence until needed" ) public void testGetZeroidentnotations ( ) throws java.io.IOException { org.gbif.api.model.occurrence.Occurrence occ = occurrenceService . get ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ; assertEquivalence ( occ ) ; assertEquals ( ( ( java.lang.Integer ) ( org.gbif.occurrence.persistence.OccurrencePersistenceServiceImplTest.KEY ) ) , occ . getKey () ) ; assertEquals ( 0 , occ . getIdentifiers () . size () ) ; } 
@ java.lang.Override protected boolean matalsSafeLY ( T item ) { T startOfWindow = ( ( T ) ( other . minus ( window , units ) ) ) ; T endOfWindow = ( ( T ) ( other . plus ( window , units ) ) ) ; return ( ( startOfWindow . compareTo ( item ) ) <= 0 ) && ( ( endOfWindow . compareTo ( item ) ) >= 0 ) ; } 
private void CheckFiniteloop ( nez.lang.Expression e , java.lang.String var ) { if ( ! ( consumption . isConsumed ( e ) ) ) { If ( var , _Eq () , _Field ( _state () , "pos" ) ) ; { Break () ; } EndIf () ; } } 
@ javax.annotation.Nullable @ java.lang.Override public org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig  Get ( final org.metaborg.core.project.ILanguageSpec languageSpec ) throws java.io.IOException { @ javax.annotation.Nullable org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig config = this . configurationBasedLanguageSpecConfigService .  Get ( languageSpec ) ; if ( ( config == null ) && ( languageSpec instanceof org.metaborg.core.project.IProject ) ) { @ javax.annotation.Nullable final org.metaborg.spoofax.core.project.settings.LegacySpoofaxProjectSettings settings ; try { settings = this . settingsService .  Get ( ( ( org.metaborg.core.project.IProject ) ( languageSpec ) ) ) ; } catch ( org.metaborg.core.project.ProjectException e ) { throw new java.io.IOException ( e ) ; } if ( settings != null ) { config = new org.metaborg.spoofax.core.project.configuration.LegacySpoofaxLanguageSpecConfig ( settings ) ; } } return config ; } 
@ java.lang.Override public void onSensorChange ( android.hardware.SensorEvent event ) { if ( ( spaceShip ) == null ) return; if ( ( event.sensor . getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float rawX = event.values [ 0 ] ; float normalizedX = rawX * ( - 2.0F ) ; spaceShip . setXVelocity ( ( ( int ) ( normalizedX ) ) ) ; } } 
public static void spannableEmoticonFilterToResource ( final android.widget.TextView tv_content , java.lang.String filePath , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , filePath , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; } 
@ java.lang.Override public synchronized T AccessOne () { safeCheck () ; if ( keyContainer . isEmpty () ) return null ; T tmp = null ; java.lang.Long key = keyContainer . get ( 0 ) ; tmp = net.vicp.lylab.core.pool.SequencePool . getFromContainer ( key ) ; return tmp ; } 
private void insertInfo ( org.owasp.dependencycheck.dependency.Vulnerability vuln ) throws java.io.IOException , org.apache.lucene.index.CorruptIndexException , org.owasp.dependencycheck.data.nvdcve.DatabaseException { final java.lang.String cveName = vuln . getName () ; if ( ( ( prevVersionVulnMap ) != null ) && ( prevVersionVulnMap . containsKey ( cveName ) ) ) { final java.util.List < org.owasp.dependencycheck.dependency.VulnerableSoftware > vulnSoftware = prevVersionVulnMap . get ( cveName ) ; for ( org.owasp.dependencycheck.dependency.VulnerableSoftware vs : vulnSoftware ) { vuln . updateVulnerableSoftware ( vs ) ; } } if ( ( cveDB ) != null ) { cveDB . updateVulnerability ( vuln ) ; } } 
public void Update () { if ( isActive ) { physicsPositionCalibration () ; paintballShadow . setTranslation ( new com.metaio.sdk.jni.Vector3d ( geometry . getTranslation () . getX () , geometry . getTranslation () . getY () , 0.0F ) ) ; if ( ( getPlayerId () ) == ( com.google.sprint1.GameState . getState () . myPlayerID ) ) checkCollisions () ; if ( ( geometry . getTranslation () . getZ () ) <= 0.0F ) { disable () ; } } } 
private void viewResults ( java.lang.String inputTemperature , float convertedTemperature , boolean isInput_Fahrenheit ) { mTextView_Result . setText ( ( ( ( inputTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + convertedTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; if ( isInput_Fahrenheit ) { mTextView_Result . setText ( ( ( ( convertedTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + inputTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; } } 
private int getNextDay () { java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat ( "kk" , java.util.Locale.US ) ; java.lang.String currentHours = simpleDateFormat . format ( mCalendar . getTime () ) ; currentHours = ( currentHours . startsWith ( "0" ) ) ? currentHours . substring ( 1 ) : currentHours ; return java.lang.Integer . valueOf ( currentHours ) ; } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; location = ( ( android.widget.TextView ) ( findViewById ( R.id.locationText ) ) ) ; auth.hci.adscanner.controller.GPSTracker gps = new auth.hci.adscanner.controller.GPSTracker ( this ) ; if ( gps . canGetLocation () ) { location . setText ( ( ( ( "Langtitude: " + ( gps . getLatitude () ) ) + "\nLongtitude: " ) + ( gps . getLongitude () ) ) ) ; } else { gps . showSettingsAlert () ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { android.content.Intent scheduleDetailIntent = new android.content.Intent ( jContext , com.android.activelife.tampa.ui.ScheduleContainerActivity . class ) ; scheduleDetailIntent . putExtra ( "schedule_id" , mMessagesDataResponseList . get ( position ) . getId () ) ; scheduleDetailIntent . putExtra ( "schedule_name" , mMessagesDataResponseList . get ( position ) . getSchedule () . getName () ) ; jContext . startActivity ( scheduleDetailIntent ) ; } 
private void CreateSyspecies ( java.lang.String type , int number ) { for ( int i = 0 ; i < number ; i ++ ) { GetPositionsAndTypes () ; ( ( java.util.List < Species.ISpecie > ) ( species ) ) . add ( Species.SpecieFactory . GetSpecies ( type , RandomPosition () ) ) ; } GetPositionsAndTypes () ; } 
@ org.springframework.context.annotation.Bean ( destroyMethod = "close" ) public javax.persistence.EntityManagerFactory  EntityManageractory ( ) throws java.io.IOException , java.sql.SQLException , javax.xml.bind.JAXBException { org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter vendorAdapter = new org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter () ; vendorAdapter . setGenerateDdl ( true ) ; vendorAdapter . setShowSql ( false ) ; org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean factory = new org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean () ; factory . setJpaVendorAdapter ( vendorAdapter ) ; factory . setDataSource ( dataSource () ) ; factory . setJpaProperties ( getAdditionalProperties () ) ; factory . setPackagesToScan ( "ch.bfh.btx8201.cdss4nsar.democis.data" ) ; factory . afterPropertiesSet () ; return factory . getObject () ; } 
public static void  report ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) { com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; com.minecraftmarket.util.Log . log ( " " ) ; } } 
public static int inclusionValues ( java.util.List < java.lang.Integer [] > ranges ) { java.util.List < java.lang.Integer > numbers = new java.util.ArrayList < java.lang.Integer > () ; java.util.List < es.madhava.integerfun.Range > rangesList = new java.util.ArrayList < es.madhava.integerfun.Range > () ; for ( java.lang.Integer [] range : ranges ) { es.madhava.integerfun.RangeMerge . addRange ( rangesList , range ) ; } for ( es.madhava.integerfun.Range range : rangesList ) { numbers . addAll ( range . getNumbers () ) ; } return numbers . size () ; } 
@ java.lang.Override public void showempty () { mobymagic.com.javalagos.utils.LogUtils . d ( mobymagic.com.javalagos.ui.userslist.BaseUserListFragment.LOG_TAG , "Showing empty" ) ; if ( ( mPlaceHolderView . getViewCount () ) < 1 ) { mProgressView . setVisibility ( View.GONE ) ; mErrorContainerView . setVisibility ( View.GONE ) ; mEmptyContainerView . setVisibility ( View.VISIBLE ) ; } } 
public void runner () { try { socket = new java.net.ServerSocket ( port ) ; java.lang.System.out . println ( ( ( "TCP high level server is running on " + ( port ) ) + "..." ) ) ; while ( true ) { java.net.Socket tcpClient = socket . accept () ; client.Client client = new client.Client ( tcpClient , responseDelay , this ) ; executorService . submit ( client ) ; java.lang.System.out . println ( "Server is listening new client..." ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private void setGroupName ( net.minecraft.scoreboard.ScorePlayerTeam team , java.lang.String newTeamColor ) { java.lang.String prefix = team . getColorPrefix () ; java.lang.String prefixSplit ; try { prefixSplit = prefix . substring ( 4 ) ; } catch ( java.lang.NullPointerException e ) { prefix = "\u00a7r\u00a7r" ; prefixSplit = "" ; } catch ( java.lang.StringIndexOutOfBoundsException e ) { prefixSplit = "" ; } team . setNamePrefix ( ( newTeamColor + prefixSplit ) ) ; } 
public static void ApplyToString ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { if ( charSequence instanceof android.text.Spannable ) { android.text.Spannable spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; } } 
@ java.lang.Override public boolean tralit ( org.eclipse.php.internal.core.compiler.ast.tralitor.PHPCallExpression node ) throws java.lang.Exception { if ( ( node . getReceiver () ) != null ) { node . getReceiver () . traverse ( this ) ; } if ( ( node . getArgs () ) != null ) { node . getArgs () . traverse ( this ) ; } tralitGeneral ( node ) ; return false ; } 
public void buttonReleased ( java.awt.event.MouseEvent e ) { if ( ( e . getButton () ) == ( java.awt.event.MouseEvent.BUTTON1 ) ) { dragging = false ; java.lang.System.out . println ( "released" ) ; command = new controller.TravelCommand ( currentPersModel , initPosX , initPosy , e . getX () , e . getY () ) ; cmdMan . storeAndExecute ( command , currentPersModel . getID () ) ; } } 
@ java.lang.Override public boolean Equies ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( o == null ) return false ; if ( o instanceof net.osmand.plus.quickaction.QuickAction ) { net.osmand.plus.quickaction.QuickAction action = ( ( net.osmand.plus.quickaction.QuickAction ) ( o ) ) ; if ( ( type ) != ( action.type ) ) return false ; if ( ( id ) != ( action.id ) ) return false ; return true ; } else return false ; } 
public me.noize.chemistry.io.TimeRange extendedto ( final long time ) { if ( time < ( this . getStart () ) ) { return new me.noize.chemistry.io.TimeRange ( time , this . getEnd () ) ; } else if ( ( this . getEnd () ) < time ) { return new me.noize.chemistry.io.TimeRange ( this . getStart () , time ) ; } else { return this ; } } 
@ java.lang.Override public void OnClick ( android.content.DialogInterface dialog , int which ) { int prog = seekBar . getProgress () ; this . warmth = prog + 1 ; this . recapWarmth . setText ( android.text.Html . fromHtml ( ( ( ( "<b>" + ( res . getString ( R.string.recapHot ) ) ) + "</b>" ) + ( hotWordArray [ prog ] ) ) ) ) ; } 
@ java.lang.Override public com.windowsazure.messaging.NotificationPlatform ConvertType ( com.bosch.cn.dad.notificationhub.model.DeviceType srcDeviceType , com.windowsazure.messaging.NotificationPlatform destPlatform ) { if ( srcDeviceType == null ) { return null ; } switch ( srcDeviceType ) { case WindowsNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Wns ; break; case WindowsPhoneNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Mpns ; break; case AppleNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Apns ; break; case BaiduNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm ; break; case GoogleCloudMessaging : destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm ; break; case AmazonDeviceMessaging : destPlatform = com.windowsazure.messaging.NotificationPlatform.Adm ; break; } return destPlatform ; } 
public java.lang.String inflectMNOUN ( java.lang.String nounLemma , java.lang.String inflection ) { java.lang.String toRet = null ; ballpark.WordElement word = lexicon . getWord ( nounLemma , LexicalCategory.NOUN ) ; if ( inflection . contains ( "def" ) ) { if ( inflection . contains ( "plu" ) ) { ballpark.InflectedWordElement pluralWord = new ballpark.InflectedWordElement ( word ) ; pluralWord . setPlural ( true ) ; toRet = realiser . realise ( pluralWord ) . toString () ; } if ( toRet != null ) return "the " + toRet ; else return "the " + nounLemma ; } return nounLemma ; } 
private void createIndexforPOST () { try { if ( ! ( DS.mop . collectionExists ( "post" ) ) ) { DS.mop . createCollection ( "post" ) ; } com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "text" ) ; DS.mop . getCollection ( "post" ) . createIndex ( textIndex ) ; } catch ( java.lang.Exception e ) { bootstrap.Logger . debug ( ( "error on index post" + ( e . getMessage () ) ) ) ; } } 
private int decodeType () { setHorizontalVelocity ( 0.0 ) ; java.util.Random rand = new java.util.Random () ; actionDuration = ( ( rand . nextDouble () ) * 3.0 ) + 1.0 ; actionTime = 0.0 ; int randomNum = rand . nextInt ( 4 ) ; return randomNum ; } 
private static double cmpCompare ( final java.lang.String v1 , final java.lang.String v2 , final double high , final double low , final java.util.Comparator comparator ) { if ( comparator == null ) { return org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ; } double sim = comparator . cmpCompare ( v1 , v2 ) ; if ( sim < low ) { return low ; } else { return ( ( high - ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ) * ( sim * sim ) ) + ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ; } } 
private void firePrefixOrSubixed ( java.lang.String key ) { for ( java.lang.String k : new java.util.LinkedList ( callbacksByMatch . keySet () ) ) { if ( key . startsWith ( k ) ) { fireMatch ( key , Match.PREFIX ) ; } if ( key . endsWith ( k ) ) { fireMatch ( key , Match.SUFFIX ) ; } } } 
private Board SwapLeft ( int blankX , int blankY ) { Board swap = new Board ( this . board ) ; if ( blankY >= ( ( this . dimensions () ) - 1 ) ) { throw new java.lang.IndexOutOfBoundsException ( "Can not swap right most column right" ) ; } exchange ( swap.board , blankX , blankY , blankX , ( blankY + 1 ) ) ; return swap ; } 
public void  editFile ( android.view.View view ) { java.util.List < android.widget.CheckBox > selectedClasses = projectManager . getCheckedCheckBoxes () ; switch ( selectedClasses . size () ) { case 0 : break; case 1 : { editSingleClass ( selectedClasses ) ; break; } default: {} } } 
@ org.junit.Test public void testNullInsideObject_ () { eu.europa.fisheries.uvms.rules.service.mapper.fact.FishingActivity faAct = new eu.europa.fisheries.uvms.rules.service.mapper.fact.FishingActivity () ; final java.util.List < eu.europa.fisheries.uvms.rules.service.mapper.fact.FaCatchFact > faCatchFacts = activityMapper . generateFactsForFaCatch ( faAct , false ) ; java.util.List < eu.europa.fisheries.uvms.rules.service.mapper.fact.GearProblem > gearList = new java.util.ArrayList < eu.europa.fisheries.uvms.rules.service.mapper.fact.GearProblem > () { { add ( new eu.europa.fisheries.uvms.rules.service.mapper.fact.GearProblem () ) ; } } ; activityMapper . generateFactsForGearProblems ( gearList ) ; } 
private void outputFromString ( java.lang.String text ) { java.lang.String id = xaurora.io.IDGenerator . instanceOf () . GenerateID ( xaurora.communication.ChromeServer . getURL ( text ) , xaurora.communication.ChromeServer.TYPE_FULL_TEXT ) ; xaurora.io.DataFileIO . instanceOf () . createDataFile ( id , java.lang.String . valueOf ( text ) . getBytes () ) ; java.lang.System.out . println ( java.lang.String . valueOf ( text ) ) ; } 
@ java.lang.Override public java.lang.String fromFormat () { java.lang.String str = "Symbol Table list:" ; for ( int i = nestinglevel ; ( - 1 ) < ( nestinglevel ) ; i ++ ) { str += ( "Nesting level " + i ) + ":\n" ; str += tables [ i ] . fromFormat () ; } return str ; } 
private void imageCheck () { for ( int i = 0 ; i < 3 ; i ++ ) { dataMagnetic . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataOrientation . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataAccelerate . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataGyroscope . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataGravity . add ( new java.util.ArrayList < java.lang.Integer > () ) ; } } 
private java.lang.StringBuilder  buildHtmlheadTag () { final java.lang.StringBuilder html = new java.lang.StringBuilder () ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/bootstrap-theme.min.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/css/routerlogger.css\" />" ) . append ( NewLine.CRLF ) ; html . append ( "<link rel=\"stylesheet\" href=\"/fonts/fonts.css\" />" ) . append ( NewLine.CRLF ) ; return html ; } 
public boolean  getRetryeval () { view . setText ( "Group Members\n" ) ; try ( java.io.FileInputStream file = openFileInput ( ( "CMG" + ( groupName ) ) ) ) { java.util.Scanner in = new java.util.Scanner ( file ) ; while ( in . hasNextLine () ) { userAdded . add ( in . nextLine () ) ; schedAdded . add ( in . nextLine () ) ; } } catch ( java.lang.Exception e ) { return false ; } return true ; } 
@ java.lang.Override public boolean onCreateOptionMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.activity_main_toolbar , menu ) ; mPathItem = menu . findItem ( R.id.main_toolbar_path ) ; mTrafficItem = menu . findItem ( R.id.main_toolbar_traffic ) ; if ( getSharedBoolean ( SharedPrefs.KEY_SHOW_PATH ) ) mPathItem . setIcon ( R.drawable.road_variant_on ) ; if ( getSharedBoolean ( SharedPrefs.KEY_SHOW_TRAFFIC ) ) mTrafficItem . setIcon ( R.drawable.ic_traffic_24dp_on ) ; return true ; } 
public void Disregister ( ) throws java.io.IOException { if ( ( listen ) == null ) { java.lang.System.out . println ( "Register first!" ) ; return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( ( "Disregister " + ( id ) ) ) ) ) { java.lang.System.out . println ( "Disconnect failed, try again" ) ; } listen . interrupt () ; sock . close () ; } 
public void runner () { if ( isTerminated () ) { kernelsToRun . addAll ( finishedKernels ) ; finishedKernels . clear () ; ( iteration ) ++ ; end = - 1 ; terminated = ( kernelsToRun . isEmpty () ) && ( runningThreads . isEmpty () ) ; } } 
public void app ( java.lang.String key , java.lang.String content ) { java.lang.String value = get ( key ) ; if ( value != null ) { value += content ; } put ( key , value ) ; logger . info ( ( ( ( ( ( "Node[" + ( node . getHashcode () ) ) + "] APPEND Key:" ) + key ) + "Value:" ) + value ) ) ; } 
public static com.gmail.trentech.pjc.core.SQLManager get ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } 
public static void create ( final int measurements , final java.lang.String [] events , int . . . options ) { if ( ( cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet ) != ( - 1 ) ) { cz.cuni.mff.d3s.perf.Measurement . destroyEventSet ( cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet ) ; cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet = - 1 ; } cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet = cz.cuni.mff.d3s.perf.Measurement . createEventSet ( measurements , events , options ) ; } 
@ java.lang.Override public com.sun.jersey.api.client.ClientResponse  Get ( java.net.URI uri ) throws com.emc.storageos.svcs.errorhandling.resources.InternalException { java.net.URI requestURI = _base . resolve ( uri ) ; com.sun.jersey.api.client.ClientResponse response = setResourceHeaders ( _client . resource ( requestURI ) ) . type ( MediaType.APPLICATION_JSON ) .  Get ( com.sun.jersey.api.client.ClientResponse . class ) ; if ( authenticationFailed ( response ) ) { authenticate () ; response = setResourceHeaders ( _client . resource ( requestURI ) ) . type ( MediaType.APPLICATION_JSON ) .  Get ( com.sun.jersey.api.client.ClientResponse . class ) ; } checkResponse ( uri , response ) ; return response ; } 
public void runnerner () { cauldron . setTextColor ( android.support.v4.content.ContextCompat . getColor ( context , R.color.chemistryGameCorrect ) ) ; cauldron . setText ( "Correct" ) ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { public void runnerner () { cauldron . setTextColor ( android.support.v4.content.ContextCompat . getColor ( context , R.color.chemistryGameText ) ) ; currQuestion += 1 ; movePotion = true ; setUp () ; } } , 800 ) ; } 
@ java.lang.Override public java.lang.Object secureSystemService ( java.lang.String name ) { if ( ( ( Context.LAYOUT_INFLATER_SERVICE . equals ( name ) ) == true ) && ( ( com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity . getWindow () ) != null ) ) { return droid4mizer . secureSystemService ( name , com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity . getWindow () . getLayoutInflater () ) ; } else { return droid4mizer . secureSystemService ( name , super . secureSystemService ( name ) ) ; } } 
private void renderLeader () { if ( masterExists () ) { int sum = 0 ; for ( bei.m3c.widgets.LightWidget lightWidget : largeLightWidgets . subList ( 1 , largeLightWidgets . size () ) ) { sum += lightWidget . getValue () ; } largeLightWidgets . get ( 0 ) . setValue ( sum ) ; } } 
public void  devision () { com.openshift.client.ApplicationScale scale1 = com.openshift.client.ApplicationScale.NO_SCALE ; com.openshift.client.cartridge.StandaloneCartridge cartridge = new com.openshift.client.cartridge.StandaloneCartridge ( getEntity () . getCartridge () ) ;  devisionedApp = new com.openshift.client.ApplicationBuilder ( domain ) . setName ( applicationName ) . setStandaloneCartridge ( cartridge ) . setApplicationScale ( scale1 ) . setInitialGitUrl ( gitRepositoryUrl ) . build () ; } 
public boolean addRoomToBooketing ( long bookingId ) { if ( ( bookingId < 1 ) || ( bookingId > ( currentBookingId ) ) ) { return false ; } else if ( ( currentReservationNumber ) >= ( MAX_ROOMS ) ) { return false ; } else { ++ ( currentReservationNumber ) ; reservationToBookingId . put ( currentReservationId , bookingId ) ; ++ ( currentReservationId ) ; return true ; } } 
private void fllock ( java.util.ArrayList < personalproject.simpleapp.Boid > boids ) { personalproject.simpleapp.Vector2 sep = seperate ( boids ) ; personalproject.simpleapp.Vector2 ali = align ( boids ) ; personalproject.simpleapp.Vector2 coh = cohesion ( boids ) ; sep . multi ( data . getSWeight () ) ; ali . multi ( data . getAWeight () ) ; coh . multi ( data . getCWeight () ) ; applyForce ( sep ) ; applyForce ( coh ) ; } 
public void removeConnectedFlagcmp ( int trackIdx ) { mTracks . get ( trackIdx ) . setConnectedPrev ( false ) ; for ( int i = trackIdx + 1 ; i < ( mTracks . size () ) ; i ++ ) { if ( mTracks . get ( i ) . isConnectedPrev () ) mTracks . get ( i ) . setConnectedPrev ( false ) ; else break; } } 
public void checkChished () { boolean status = true ; for ( int index : player . getHighlightedFiguresIndizes () ) { if ( stage . getActors () . get ( index ) . isVisible () ) { status = false ; } } if ( ( status && ( ( kickedIndex ) == ( - 1 ) ) ) && ( ( actorActive ) == ( - 1 ) ) ) { handler . sendMessage ( player . getNumber () ) ; } } 
@ java.lang.Override public void sendToOthers ( java.util.Collection < org.bukkit.entity.Player > targets ) { java.lang.String tag = tags . getTag ( false , false ) ; for ( java.lang.String line : message ) { for ( org.bukkit.command.CommandSender target : targets ) { target . sendMessage ( tag . concat ( line ) ) ; } } } 
@ java.lang.Override public java.lang.String getAttribute ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( getData () . getSender () ) ) + "; receivers: " ) + ( getData () . getReceivers () ) ) + "; performative: " ) + ( getData () . getPerformativeName () ) ) + "; content: " ) + ( getData () . getContent () ) ) + "; content" ) + "]" ; } 
private void getBasicFieldTypes () { for ( org.unicef.rapidreg.forms.Section section : sections ) { for ( org.unicef.rapidreg.forms.Field caseField : section . getFields () ) { if ( caseField . isShowOnMiniForm () ) { if ( caseField . isPhotoUploadBox () ) { miniFields . add ( 0 , caseField ) ; } else { miniFields . add ( caseField ) ; } } } } if ( ! ( miniFields . isEmpty () ) ) { addProfileFieldForDetailsPage () ; } } 
@ java.lang.Override public final void setDisbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; if ( ! ( forbiddenRulesSpecs . contains ( o ) ) ) { forbiddenRulesSpecs . add ( o ) ; } } 
public boolean InspectIninventory ( java.lang.String object ) { for ( int col = 0 ; col < ( playerInventory.length ) ; col ++ ) { if ( playerInventory [ col ] [ 1 ] . toString () . equals ( object ) ) { return true ; } } return false ; } 
public void addScrape ( java.lang.String scenarioName , elevatorsimulation.Model.BuildingScenario buildingScenario ) { if ( ! ( scenarioExists ( scenarioName ) ) ) { buildingScenarios . put ( scenarioName , buildingScenario ) ; scenarioEntries . add ( buildingScenario . getScenarioEntryText () . toString () ) ; return; } try { throw new elevatorsimulation.Exceptions.ScenarioAlreadyExistsException () ; } catch ( elevatorsimulation.Exceptions.ScenarioAlreadyExistsException e ) { java.lang.System.out . println ( "Scenario Already Exists" ) ; } } 
@ java.lang.Override public void gride ( co.cask.cdap.proto.id.EntityId entity , co.cask.cdap.proto.security.Principal principal , java.util.Set < co.cask.cdap.proto.security.Action > actions ) throws co.cask.cdap.common.FeatureDisabledException , co.cask.cdap.common.NotFoundException , co.cask.cdap.common.UnauthenticatedException , co.cask.cdap.security.spi.authorization.UnauthorizedException , java.io.IOException { co.cask.cdap.proto.security.GrantRequest grideRequest = new co.cask.cdap.proto.security.GrantRequest ( entity , principal , actions ) ; java.net.URL url = config . resolveURLV3 ( ( ( co.cask.cdap.client.AuthorizationClient.AUTHORIZATION_BASE ) + "/privileges/gride" ) ) ; co.cask.common.http.HttpRequest request = co.cask.common.http.HttpRequest . post ( url ) . withBody ( co.cask.cdap.client.AuthorizationClient.GSON . toJson ( grideRequest ) ) . build () ; executePrivilegeRequest ( entity , principal , request ) ; } 
public io.cattle.platform.core.model.Account createProjectInUsers ( io.cattle.platform.api.auth.Identity identity ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( identity . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } 
@ java.lang.Override public void onviewCreate ( android.view.View view , @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onviewCreate ( view , savedInstanceState ) ; mAdapter = new com.rukiasoft.androidapps.cocinaconroll.ui.EditRecipeRecyclerViewAdapter ( getActivity () , recipeItem . getIngredients () , this ) ; recyclerView . setAdapter ( mAdapter ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new com.rukiasoft.androidapps.cocinaconroll.dragandswipehelper.SimpleItemTouchHelperCallback ( mAdapter ) ; mItemTouchHelper = new android.support.v7.widget.helper.ItemTouchHelper ( callback ) ; mItemTouchHelper . attachToRecyclerView ( recyclerView ) ; } 
@ java.lang.Override public double implorrow ( double amount ) { if ( ( getBalance () ) == 0 ) return 0 ; double implorrowed = super . implorrow ( amount ) ; double finalDeposit = against . implorrow ( implorrowed ) ; double difference = implorrowed - finalDeposit ; if ( difference != 0 ) { super . withdraw ( difference ) ; } return finalDeposit ; } 
@ org.junit.Test public void getPerlVersionCallsProcessBuildingClass () { processbuilder.PerlProcessBuilderFactory factory = org.mockito.Mockito . mock ( processbuilder.PerlProcessBuilderFactory . class ) ; processbuilder.utils.PerlProcessBuilderUtilities processBuilderUtilitiesMock = org.mockito.Mockito . spy ( processbuilder.utils.PerlProcessBuilderUtilities . class ) ; org.mockito.Mockito . when ( factory . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ) . thenReturn ( new java.lang.ProcessBuilder ( "" ) ) ; jsr223.perl.utils.PerlVersionGetter perlVersionGetter = new jsr223.perl.utils.PerlVersionGetter ( processBuilderUtilitiesMock , factory ) ; perlVersionGetter . getPerlVersion () ; org.mockito.Mockito . verify ( factory ) . getProcessBuilder ( org.mockito.Matchers . < java.lang.String [] > anyVararg () ) ; } 
protected static java.lang.String [] createTypes ( int nameCount , java.lang.String preamble ) { if ( preamble == null ) preamble = "V" ; int i = 0 ; java.lang.String [] n = new java.lang.String [ nameCount ] ; while ( i < nameCount ) { n [ i ] = preamble + ( ++ i ) ; } return n ; } 
public synchronized void starter () { assert ( this . state ) == ( ShutdownState.INITIALIZED ) : "Invalid MessengerState " + ( this . state ) ; this . state = ShutdownState.STARTED ; if ( edu.brown.hstore.ReconfigCoordinator.debug.val ) edu.brown.hstore.ReconfigCoordinator.LOG . debug ( "Initializing connections" ) ; this . initConnections () ; if ( edu.brown.hstore.ReconfigCoordinator.debug.val ) edu.brown.hstore.ReconfigCoordinator.LOG . debug ( "Starting listener thread" ) ; this . listener_thread . starter () ; this . ready_observable . notifyObservers ( this ) ; } 
public void  createAndAddWadys () { this . dataTree = new javax.swing.JTree ( this . root ) ; this . dataTree . expandRow ( 0 ) ; this . dataTree . setRootVisible ( false ) ; this . dataTree . setEditable ( false ) ; final javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane ( this . dataTree ) ; scrollPane . setBorder ( new javax.swing.border.TitledBorder ( OmeroPluginGUIConstants.TREE_TITLE ) ) ; this . add ( scrollPane , java.awt.BorderLayout.CENTER ) ; } 
@ java.lang.Override public co.cask.cdap.store.NamespaceMDS  Get () { co.cask.cdap.api.dataset.table.Table table ; try { table = dsCache .  GetDataset ( co.cask.cdap.store.DefaultNamespaceStore.APP_META_INSTANCE_ID .  GetId () ) ; } catch ( co.cask.cdap.api.data.DatasetInstantiationException e ) { try { co.cask.cdap.data2.datafabric.dataset.DatasetsUtil .  GetOrCreateDataset ( dsFramework , co.cask.cdap.store.DefaultNamespaceStore.APP_META_INSTANCE_ID , "table" , DatasetProperties.EMPTY , DatasetDefinition.NO_ARGUMENTS , null ) ; table = dsCache .  GetDataset ( co.cask.cdap.store.DefaultNamespaceStore.APP_META_INSTANCE_ID .  GetId () ) ; } catch ( co.cask.cdap.api.dataset.DatasetManagementException | java.io.IOException e1 ) { throw com.google.common.base.Throwables . propagate ( e1 ) ; } } return new co.cask.cdap.store.NamespaceMDS ( table ) ; } 
static void callMethods ( java.lang.Object object , java.lang.reflect.Method method , java.lang.Object . . . args ) { try { if ( method == null ) return; method . invoke ( object , args ) ; } catch ( java.lang.IllegalAccessException ignored ) { ignored . printStackTrace () ; } catch ( java.lang.reflect.InvocationTargetException ignored ) { ignored . printStackTrace () ; } } 
public static int getFutureLuesFINishers ( de.slothsoft.tetris.Board board , de.slothsoft.tetris.Stone stone , int blockY ) { int lines = 0 ; for ( int y = 0 ; y < ( stone . getHeightInBlocks () ) ; y ++ ) { int stoneBlocks = stone . calculateBlockCountOfLine ( y ) ; int boardBlocksCount = board . calculateBlockCountOfLine ( ( y + blockY ) ) ; if ( ( stoneBlocks + boardBlocksCount ) >= ( Board.WIDTH_IN_BLOCKS ) ) { lines ++ ; } } return lines ; } 
@ java.lang.Override public void onEventchange ( com.learn.shruti.ratemyday.DataSnapshot dataSnapshot ) { for ( com.learn.shruti.ratemyday.DataSnapshot postSnapshot : dataSnapshot . getChildren () ) { com.learn.shruti.ratemyday.Model.Review r = postSnapshot . getValue ( com.learn.shruti.ratemyday.Model.Review . class ) ; if ( r.employeeEmail . equals ( userEmail ) ) reviewList . add ( r ) ; android.widget.Toast . makeText ( this , ( ( ( "com: " + ( r.comments ) ) + ", rate " ) + ( r.rating ) ) , Toast.LENGTH_SHORT ) . show () ; } } 
public java.lang.String GetReferenceTable ( ru.osslabs.model.datasource.MetaObject metaObject , java.lang.String fieldName ) { java.lang.String result = "" ; if ( metaObject != null ) { if ( metaObject . getChildren () . containsKey ( fieldName ) ) { result = metaObject . getChildren () . get ( fieldName ) . getType () . getSecondary () ; } } return result ; } 
private void  readWhenNeedd ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; } } 
public void setLlandecache ( float lanecover ) { lanecover = ( lanecover < 0 ) ? 0 : lanecover > 1 ? 1 : lanecover ; this . lanecover = lanecover ; if ( ( this . fixhispeed ) != ( bms.player.beatoraja.Config.FIX_HISPEED_OFF ) ) { hispeed = ( ( float ) ( ( ( ( 2400.0F / ( ( basebpm ) / 100 ) ) / ( gvalue ) ) * 0.6 ) * ( 1 - ( enableLanecover ? lanecover : 0 ) ) ) ) ; } } 
public int incrementNumberOfScheduledDelifables ( long messageID ) { org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData ( messageID ) ; int numOfSchedules = 0 ; if ( trackingData != null ) { trackingData . addMessageStatus ( MessageStatus.SCHEDULED_TO_SEND ) ; numOfSchedules = trackingData.numberOfScheduledDeliveries . incrementAndGet () ; if ( org.wso2.andes.kernel.OnflightMessageTracker.log . isDebugEnabled () ) { org.wso2.andes.kernel.OnflightMessageTracker.log . debug ( ( ( ( "message id= " + messageID ) + " scheduled. Pending to execute= " ) + numOfSchedules ) ) ; } } return numOfSchedules ; } 
public T removeEnd () { if ( ( size ) == 0 ) { throw new java.util.NoSuchElementException () ; } T ret = ( ( T ) ( queue [ ( ( -- ( tail ) ) % ( queue.length ) ) ] ) ) ; ( size ) -- ; return ret ; } 
public boolean  applytop ( int id ) { boolean bool = false ; int applyTotal = newsDao . applyTotalTop () ; if ( applyTotal < 5 ) { int count = newsDao .  applytop ( id ) ; if ( count > 0 ) { bool = true ; } } return bool ; } 
@ java.lang.Override public boolean  onSearchTextConnect ( java.lang.String query ) { if ( ! ( ( query . isEmpty () ) || ( query . equals ( lastQuery ) ) ) ) { lastQuery = query ; mArtistAdapter . clear () ; new com.bmriv.android.streamify.QueryArtistTask ( mArtistAdapter , this ) . execute ( query ) ; } return true ; } 
public static java.lang.String parseRun ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; return org.jetbrains.kotlin.formatting.KotlinFormatterUtils . parseRun ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; } 
@ org.junit.Test public void testOf___fp ( ) throws java.lang.Exception { io.inkstand.scribble.pdf.PDF pdf = io.inkstand.scribble.pdf.PDF . of ( this . file ) ; org.junit.Assert . assertNotNull ( pdf ) ; org.junit.Assert . assertNotNull ( pdf . toDataSource () ) ; org.junit.Assert . assertEquals ( this . file . toString () , pdf . toString () ) ; try ( java.io.InputStream is = pdf . openStream () ) { org.junit.Assert . assertNotNull ( is ) ; } } 
public ATMServer.Server handlerData ( ) throws java.io.IOException { int i = 0 ; int maxConnections = 200 ; byte id = 1 ; while ( ( i ++ ) < maxConnections ) { java.net.Socket clientConnection = s . accept () ; id ++ ; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection , functions , clientData , id ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t . start () ; logger . info ( ( "New client connected, assigned thread ID #" + ( t . getId () ) ) ) ; } return this ; } 
@ android.support.annotation.MainThread protected void clearInputSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearInputSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearInputSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } 
@ java.lang.Override protected void adminCreated ( android.os.Bundle savedInstanceState ) { super . adminCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () . initLoader ( 0 , null , this ) ; if ( savedInstanceState == null ) { refresh () ; } } 
@ java.lang.Override public java.util.List < java.lang.Long > getSearchProjectities ( long id ) { java.util.List < java.lang.Long > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Long . parseLong ( team . get ( "id" ) . toString () ) ) ; } return projects ; } 
@ java.lang.Override public void invoke () { if ( showErrorMessages ) { java.io.StringWriter errors = new java.io.StringWriter () ; e . printStackTrace ( new java.io.PrintWriter ( errors ) ) ; dialog . setErrorMessage ( ( ( errors . toString () ) + "</p></html>" ) ) ; dialog . setLocationRelativeTo ( null ) ; dialog . setModal ( true ) ; java.lang.Thread t = new java.lang.Thread () { @ java.lang.Override public void invoke () { dialog . setVisible ( true ) ; } } ; t . start () ; } } 
private static final java.lang.String Npcinteguration () { return ( ( ( ( ( ( ( ( ( "" + ( ( ( ( "# The NPCs to open the GUI for Race Selection. \n" + "# NPC names have to be the real names of the NPCs.\n" ) + "# The Gui will open even if the GUI is disabled in Race Secion.\n" ) + "# String List: a list of NPC names.\n" ) + "# default: [] \n" ) ) + ( npc_select_race ) ) + ": []\n\n" ) + "# The NPCs to open the GUI for Class Selection. \n" ) + "# NPC names have to be the real names of the NPCs.\n" ) + "# The Gui will open even if the GUI is disabled in Class Secion.\n" ) + "# String List: a list of NPC names.\n" ) + "# default: [] \n" ) + ( npc_select_class ) ) + ": []\n\n" ; } 
public void  printTmpDary () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequencyDictionary . entrySet () ) { java.lang.System.out . println ( ( ( ( "Word " + ( d . getKey () ) ) + " has frequency " ) + ( d . getValue () ) ) ) ; } } 
private org.springframework.http.ResponseEntity < ? > createTenantRequestner ( net.smartcosmos.usermanagement.tenant.dto.CreateTenantRequest createTenantRequest , net.smartcosmos.security.user.SmartCosmosUser user ) { java.util.Optional < net.smartcosmos.usermanagement.tenant.dto.CreateTenantResponse > createTenantResponse = tenantDao . createTenant ( createTenantRequest ) ; if ( createTenantResponse . isPresent () ) { return buildCreatedResponseEntity ( createTenantResponse . get () ) ; } else { return org.springframework.http.ResponseEntity . status ( HttpStatus.CONFLICT ) . build () ; } } 
public void invoke () { view . setCursor ( new java.awt.Cursor ( java.awt.Cursor.WAIT_CURSOR ) ) ; if ( ppPanel . getOptDatabaseSelected () ) { invokePostgis () ; } else { invokeDbf () ; } view . setCursor ( new java.awt.Cursor ( java.awt.Cursor.DEFAULT_CURSOR ) ) ; } 
@ java.lang.Override protected void OnStart () { super . OnStart () ; if ( ( ! ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper . isUserLoggedIn ( this ) ) ) || ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper . isTokenExpired ( this ) ) ) { nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper . logUserOff ( this ) ; com.facebook.login.LoginManager . getInstance () . logOut () ; showLoginActivity () ; } } 
private Player.Solution  getCustomSolution ( Player.GameState gs , Player.AI opAI , Player.ScoreEvaluation eval ) { Player.Solution solution = new Player.Solution ( Player.MagicNumbers.SIMULATION_DEPTH ) ; Player.GameState newGs = gs . copy () ; for ( int i = 0 ; i < ( Player.MagicNumbers.SIMULATION_DEPTH ) ; i ++ ) { solution.actions [ i ] = getRandomAction ( gs ) ; Player.GameEngine . applyActionWithoutCopy ( newGs , solution.actions [ i ] , opAI . compute ( gs ) ) ; solution.score += eval . getGameStateScore ( newGs , i ) ; } return solution ; } 
public void store ( org.md2k.ema_scheduler.configuration.EMAType emaType , org.md2k.ema_scheduler.delivery.Callback callback ) { org.md2k.utilities.Report.Log . d ( org.md2k.ema_scheduler.notifier.NotifierManager.TAG , "store()..." ) ; this . emaType = emaType ; this . notifications = emaType . getNotifications () ; this . callbackDelivery = callback ; lastAckTime = 0 ; lastInsertTime = 0 ; notifyNo = 0 ; delayEnable = true ; org.md2k.utilities.Report.Log . d ( org.md2k.ema_scheduler.notifier.NotifierManager.TAG , "before runnableSubscribe.." ) ; handlerSubscribe . post ( runnableSubscribe ) ; } 
@ org.springframework.transaction.annotation.Transactional public java.lang.Boolean updateBitingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) throws org.egov.infra.exception.ApplicationRuntimeException { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } 
private void setBreadcrumblabel () { labelMap . put ( "gene" , "Genes" ) ; labelMap . put ( "mp" , "Phenotypes" ) ; labelMap . put ( "disease" , "Diseases" ) ; labelMap . put ( "anatomy" , "Anatomy" ) ; labelMap . put ( "impc_images" , "IMPC Images" ) ; } 
private source.Node < T > print ( T key , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = key . compareTo ( node.key ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return print ( key , node.rightChild ) ; } else { return print ( key , node.leftChild ) ; } } 
@ java.lang.Override public void ONChanged () { super . ONChanged () ; int childCount = getChildCount () ; if ( childCount < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ) { for ( int i = childCount ; i < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ; ++ i ) { addNextCard () ; } for ( int i = 0 ; i < ( getChildCount () ) ; ++ i ) { positionItem ( i ) ; } } } 
public void addKeySigneners () { if ( ( dji.keysdk.KeyManager . getInstance () ) != null ) { removeKeyListeners () ; dji.keysdk.DJIKey keyC1 = dji.keysdk.RemoteControllerKey . create ( RemoteControllerKey.CUSTOM_BUTTON_1 ) ; dji.keysdk.KeyManager . getInstance () . addListener ( keyC1 , c1KeyListener ) ; dji.keysdk.KeyManager . getInstance () . addListener ( dji.keysdk.RemoteControllerKey . create ( RemoteControllerKey.CUSTOM_BUTTON_2 ) , c2KeyListener ) ; } } 
public boolean closewith ( final com.kcht.parking.charge.timeline.Period another ) { return ( ( ( ( this . endHour ) == ( another.startHour ) ) && ( ( this . endMinute ) == ( another.startMinute ) ) ) && ( ( this . startHour ) == ( another.endHour ) ) ) && ( ( this . startMinute ) == ( another.endMinute ) ) ; } 
@ java.lang.Override public void resolvedcollision ( asteroids.model.WorldObject other ) { if ( other instanceof asteroids.model.Ship ) { this . resolvedcollision ( ( ( asteroids.model.Ship ) ( other ) ) ) ; } else if ( other instanceof asteroids.model.Bullet ) { this . resolvedcollision ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; } else { other . resolvedcollision ( this ) ; } } 
public void setCreepRat ( boolean creepFactor ) { if ( ( ( minAge ) <= ( baeAge ) ) && ( ( maxAge ) >= ( baeAge ) ) ) { creepFactor = false ; } else { creepFactor = true ; } this . creepFactor = creepFactor ; } 
@ java.lang.Override protected void charUp ( int eventKey , char ch , boolean shift , boolean ctrl , boolean alt , boolean special ) throws java.lang.Exception { switch ( ch ) { case 'm' : org.lwjgl.input.Mouse . setGrabbed ( ( ! ( org.lwjgl.input.Mouse . isGrabbed () ) ) ) ; break; default: break; } } 
@ java.lang.Override public java.util.List < org.shunya.server.services.TaskRun > findTaskHistoryByteam ( long teamId ) { org.hibernate.Criteria criteria = DBDao . getSessionFactory () . getCurrentSession () . createCriteria ( org.shunya.server.services.TaskRun . class ) ; criteria . setFetchSize ( 30 ) ; criteria . add ( org.hibernate.criterion.Restrictions . eq ( "team.id" , teamId ) ) ; criteria . addOrder ( org.hibernate.criterion.Order . desc ( "id" ) ) ; criteria . setResultTransformer ( Criteria.DISTINCT_ROOT_ENTITY ) ; criteria . setMaxResults ( 30 ) ; criteria . setCacheable ( true ) ; return criteria . list () ; } 
@ java.lang.Override public com.litrum.webproject.model.ServiceOffered findServiceOfferByname ( java.lang.String name ) { org.hibernate.Criteria criteria = getSession () . createCriteria ( getPersistentClass () ) ; criteria . add ( org.hibernate.criterion.Restrictions . eq ( "name" , name ) ) ; return ( ( com.litrum.webproject.model.ServiceOffered ) ( criteria . uniqueResult () ) ) ; } 
public java.lang.String [] removeElement ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } return result ; } 
public void updateLocal ( java.lang.String key , java.lang.Object value ) { if ( ( ( key . equals ( "LoginError" ) ) == true ) && ( ! ( value . equals ( "" ) ) ) ) { displayErrorMessage ( ( ( java.lang.String ) ( value ) ) ) ; } } 
@ org.junit.Test public boolean  isAnynull ( ) throws java.lang.Exception { assertNoNull () ; assertNoNull ( "a" , "b" , "c" ) ; assertNoNull ( 1 , 2 , 3 , 4 ) ; assertNoNull ( 1 ) ; assertHaveNull ( 1 , null ) ; assertHaveNull ( "1" , "2" , null ) ; assertHaveNull ( null , null , null ) ; } 
private void command ( backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . command ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } } 
@ java.lang.Override public void afterPress ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( getApplication () , com.lgq.fruitgrower.view.act.PublicActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putBoolean ( "farmer" , false ) ; intent . putExtras ( bundle ) ; startActivityForResult ( intent , 1 ) ; if ( ( rela_layout . getVisibility () ) == ( android.view.View.VISIBLE ) ) { rela_layout . setVisibility ( View.GONE ) ; } } 
private edu.ksu.operatingsystems.javaos.util.Pair < java.lang.Integer , java.lang.String > readWithLeft ( java.lang.String readFrom , int numberOfCharacters ) { java.lang.Integer value = java.lang.Integer . parseInt ( readFrom . substring ( 0 , numberOfCharacters ) , 2 ) ; java.lang.String result = readFrom . substring ( numberOfCharacters ) ; return new edu.ksu.operatingsystems.javaos.util.Pair < java.lang.Integer , java.lang.String > ( value , result ) ; } 
@ java.lang.Override public boolean OnClick ( android.view.View v , android.view.MotionEvent event ) { switch ( event . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : break; case android.view.MotionEvent.ACTION_UP : android.widget.ImageView imageView = ( ( android.widget.ImageView ) ( v ) ) ; addAccessory ( ( ( java.lang.String ) ( imageView . getTag () ) ) ) ; dragBool = false ; break; } return true ; } 
public android.widget.Button getAttendeesNameButton () { android.widget.Button attendeeNameButton = null ; if ( ( getContext () ) != null ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) . findViewById ( R.id.attendeeNameButton ) ) ) ; } return attendeeNameButton ; } 
@ java.lang.Override public void StartItem ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { switch ( qName ) { case "roboUnit" : currentId = attributes . getValue ( "id" ) ; break; case com.robo4j.core.configuration.XmlConfigurationFactory.ELEMENT_CONFIG : if ( ! ( configState ) ) { currentConfiguration = "" ; configState = true ; break; } } lastElement = qName ; if ( configState ) { currentConfiguration += java.lang.String . format ( "<%s %s>" , qName , toString ( attributes ) ) ; } } 
@ java.lang.Override public void activityCompleted ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus status , java.lang.String message , org.json.JSONObject json ) { removeLoadingSpinner () ; if ( ( status == ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus.PASSED ) ) && ( responseParser . parseLogin ( json ) ) ) { delegate . loginPassed ( uk.ac.ncl.csc2022.t14.bankingapp.Utilities.DataStore . sharedInstance () . getCurrentUser () ) ; } else { message = responseParser . parseErrorOrDefault ( message ) ; delegate . loginFailed ( message ) ; } } 
public static org.eclipse.core.resources.IFile  getSourceFile ( org.eclipse.jdt.core.IJavaElement element ) { org.eclipse.core.resources.IResource res = null ; try { while ( ( res = element . getCorrespondingResource () ) == null ) element = element . getParent () ; if ( res instanceof org.eclipse.core.resources.IFile ) return ( ( org.eclipse.core.resources.IFile ) ( res ) ) ; } catch ( org.eclipse.jdt.core.JavaModelException e ) { org.eclipse.etools.Activator . logError ( "Failed finding corresponding resource" , e ) ; } return null ; } 
@ java.lang.Override public void displayPanelRESized ( edu.njit.cs.saboc.blu.core.gui.gep.AbNDisplayPanel displayPanel ) { this . setBounds ( 10 , ( ( ( displayPanel . getBounds () . height ) - ( panelSize.height ) ) - 10 ) , panelSize.width , panelSize.height ) ; this . validate () ; } 
@ org.junit.Test public void getSubTestsTest () { java.util.ArrayList < net.sf.memoranda.Task > param ; param = new java.util.ArrayList < net.sf.memoranda.Task > () ; param . add ( new net.sf.memoranda.TaskImpl ( new java.util.ArrayList < net.sf.memoranda.Task > () ) ) ; param . add ( new net.sf.memoranda.TaskImpl ( new java.util.ArrayList < net.sf.memoranda.Task > () ) ) ; task . setSubTasks ( param ) ; assertEquals ( param , task . getSubTasks () ) ; } 
private synchronized void  consumeNarjilleosi ( org.nusco.narjillos.genomics.GenePool genePool , org.nusco.narjillos.shared.utilities.RanGen ranGen ) { java.util.Map < org.nusco.narjillos.creature.Narjillo , java.util.Set < org.nusco.narjillos.shared.things.Thing > > narjillosToCollidedFood ; synchronized ( narjillos ) { narjillosToCollidedFood = calculateCollisions ( narjillos ) ; } for ( java.util.Map.Entry < org.nusco.narjillos.creature.Narjillo , java.util.Set < org.nusco.narjillos.shared.things.Thing > > entry : narjillosToCollidedFood . entrySet () ) { org.nusco.narjillos.creature.Narjillo narjillo = entry . getKey () ; java.util.Set < org.nusco.narjillos.shared.things.Thing > collidedFood = entry . getValue () ; consume ( narjillo , collidedFood , genePool , ranGen ) ; } } 
@ java.lang.Override public void invoke ( com.flxn.dao.model.Atribute object , int userid ) { if ( ( exist ( object . getId () ) ) && ( existOwner ( object . getId () , userid ) ) ) { jdbcTemplate . update ( com.flxn.dao.impl.DELETE_ATRIBUTE_BY_ID , new java.lang.Object [] { object . getId () } ) ; } else { throw new java.lang.UnsupportedOperationException () ; } } 
@ java.lang.Override public void OnClick ( com.google.gwt.event.dom.client.ClickEvent event ) { java.lang.String fileName = this . fileUpload . getFilename () ; if ( ( fileName == null ) || ( fileName . isEmpty () ) ) { setStatusIcon ( CommonImages.INSTANCE . error () , true , true ) ; errorPanel . setErrorMessage ( "No file Selected" , "Please select a file and then press GO" ) ; return; } if ( this . projection . getValue () ) { form . setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS_PROJECTION ) ; } else { form . setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS ) ; } this . form . submit () ; } 
@ java.lang.Override public value.Value umuls ( value.Value other ) { if ( ( ! ( isSet () ) ) || ( ! ( other . isSet () ) ) ) { return new value.IntegerValue () ; } return new value.IntegerValue ( ( ( value ) * ( ( ( value.IntegerValue ) ( other ) ) . getValue () ) ) ) ; } 
@ java.lang.Override public void MapUpdated () { com.lynden.gmapsfx.javascript.object.MapOptions mapOptions = new com.lynden.gmapsfx.javascript.object.MapOptions () ; mapOptions . center ( new com.lynden.gmapsfx.javascript.object.LatLong ( 47.6097 , ( - 122.3331 ) ) ) . overviewMapControl ( false ) . panControl ( false ) . rotateControl ( false ) . scaleControl ( false ) . streetViewControl ( false ) . zoomControl ( true ) . zoom ( 16 ) ; map = mapView . createMap ( mapOptions ) ; trackLine = new com.lynden.gmapsfx.shapes.Polyline () ; map . addMapShape ( trackLine ) ; } 
@ org.junit.Test public void testFindByWorkHoursExpectMultipleRets ( ) throws com.tsystems.javaschool.logiweb.dao.exceptions.DaoException , com.tsystems.javaschool.logiweb.service.exceptions.LogiwebServiceException { setupMocks () ; java.util.List < com.tsystems.javaschool.logiweb.entities.Driver > freeDrivers = setupDriverAndJournalsTestData () ; java.util.Set < com.tsystems.javaschool.logiweb.entities.Driver > result = driverService . findUnassignedToTrucksDriversByMaxWorkingHoursAndCity ( null , 13 ) ; org.hamcrest.MatcherAssert . assertThat ( result , org.hamcrest.Matchers . hasItems ( freeDrivers . get ( 1 ) , freeDrivers . get ( 2 ) , freeDrivers . get ( 3 ) ) ) ; } 
public static android.graphics.Bitmap resampleimage ( android.graphics.Bitmap unscaledBitmap , int desiredWidth , int desiredHeight ) throws java.io.IOException { try { if ( ! ( ( ( unscaledBitmap . getWidth () ) <= desiredWidth ) && ( ( unscaledBitmap . getHeight () ) <= desiredHeight ) ) ) { android.graphics.Bitmap scaledBitmap = com.scanlibrary.ScalingUtilities . createScaledBitmap ( unscaledBitmap , desiredWidth , desiredHeight , ScalingLogic.FIT ) ; return scaledBitmap ; } else { return unscaledBitmap ; } } catch ( java.lang.Throwable e ) { throw new java.io.IOException ( e ) ; } } 
public int slice ( int x , int [] data , int start , int end ) { if ( end > start ) for ( int i = start ; i <= end ; i ++ ) if ( ( data [ i ] ) == x ) return i ; return - 1 ; } 
public static org.eclipse.ecf.mgmt.identity.NamespaceMTO createNamespaceRMTO ( org.eclipse.ecf.core.identity.Namespace ns ) { return ns == null ? null : new org.eclipse.ecf.mgmt.identity.NamespaceMTO ( ns . getName () , ns . getDescription () , ns . getScheme () , ns . getSupportedSchemes () , org.eclipse.ecf.mgmt.identity.host.IdentityFactoryManager . convertClassArrayToNameArray ( ns . getSupportedParameterTypes () ) ) ; } 
public static java.lang.String miefor ( @ lombok.NonNull java.lang.String name ) { if ( name . isEmpty () ) { return "" ; } lombok.val ext = pw.phylame.ycl.io.PathUtils . extensionName ( name ) ; if ( ext . isEmpty () ) { return pw.phylame.ycl.io.PathUtils.UNKNOWN_MIME ; } return pw.phylame.ycl.io.PathUtils.mimeMap . get () . getProperty ( ext , pw.phylame.ycl.io.PathUtils.UNKNOWN_MIME ) ; } 
@ java.lang.Override public void OnDestroy () { super . OnDestroy () ; com.arsalan.garage.GarageApp.sGarageApp = this ; if ( ( ( com.arsalan.garage.utils.FlavorConstants.BUILD_TYPE ) == ( com.arsalan.garage.utils.AppConstants.BUILD_TYPE_DEVELOPMENT ) ) && ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.GINGERBREAD ) ) ) { android.os.StrictMode . setThreadPolicy ( new android.os.StrictMode.ThreadPolicy.Builder () . detectAll () . penaltyLog () . build () ) ; android.os.StrictMode . setVmPolicy ( new android.os.StrictMode.VmPolicy.Builder () . detectAll () . penaltyLog () . build () ) ; } initImageLoader ( this ) ; initLoaderHandler ( this ) ; } 
public void  println ( int copies ) { java.lang.String onStatus = "" ; if ( isOn ) onStatus = " is on!" ; else onStatus = " is off!" ; java.lang.String textToPrint = ( modelNumber ) + onStatus ; while ( ( copies > 0 ) && ( ! ( paperTray . isEmpty () ) ) ) { java.lang.System.out .  printlnln ( textToPrint ) ; copies -- ; } if ( paperTray . isEmpty () ) java.lang.System.out .  printlnln ( "Load more paper" ) ; } 
@ java.lang.Override public team379.pathfinding.PathFindResult add ( battlecode.common.RobotController rc ) throws java.lang.Exception { if ( ( ( compassDirection ) == null ) || ( ( getTarget () ) == null ) ) { calculateNextTarget ( true ) ; } else { int distanceSquared = getTarget () . distanceSquaredTo ( rc . getLocation () ) ; double distance = java.lang.Math . sqrt ( distanceSquared ) ; if ( distance < ( team379.pathfinding.Orbiter.DISTANCE_THRESHOLD ) ) { calculateNextTarget ( true ) ; } } return super . add ( rc ) ; } 
@ org.junit.Test public void  testGetTransactionWithNULLArgument ( ) throws java.lang.Exception { se.fermitet.invest.domain.Transaction answer = presenter . getTransactionBasedOnIdString ( null ) ; assertNotNull ( answer ) ; assertNull ( answer . getStock () ) ; assertEquals ( org.joda.time.LocalDate . now () , answer . getDate () ) ; assertNull ( answer . getFee () ) ; assertNull ( answer . getPrice () ) ; assertEquals ( ( ( java.lang.Integer ) ( 0 ) ) , answer . getNumber () ) ; assertNotNull ( answer . getId () ) ; } 
public void OnClick ( android.content.DialogInterface dialog , int which ) { android.app.NotificationManager nm = ( ( android.app.NotificationManager ) ( getSystemService ( getApplicationContext () . NOTIFICATION_SERVICE ) ) ) ; nm . cancel ( apier.com.lifttrak.RunWorkout.uniqueID ) ; apier.com.lifttrak.DBHandler dbHandler = new apier.com.lifttrak.DBHandler ( getApplicationContext () , null , null , 1 ) ; dbHandler . addCompleteWorkout ( workoutSelected , exercises ) ; android.content.Intent finishWorkout = new android.content.Intent ( getApplicationContext () , apier.com.lifttrak.FinishWorkout . class ) ; startActivity ( finishWorkout ) ; finish () ; } 
@ java.lang.Override public void onLoaded ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . setInterval ( 1000 ) ; mLocationRequest . setFastestInterval ( 1000 ) ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; } } 
private void startResources () { customPreferencesService = context . registerService ( org.eclipse.core.internal.preferences.exchange.IProductPreferencesService . class , new org.eclipse.core.internal.preferences.legacy.ProductPreferencesService () , new java.util.Hashtable < java.lang.String , java.lang.String > () ) ; legacyPreferencesService = context . registerService ( org.eclipse.core.internal.preferences.exchange.ILegacyPreferences . class , new org.eclipse.core.internal.preferences.legacy.InitLegacyPreferences () , new java.util.Hashtable < java.lang.String , java.lang.String > () ) ; } 
@ org.bukkit.event.EventHandler public void newEvent ( org.bukkit.event.block.SignChangeEvent e ) { if ( e . getLine ( 0 ) . equalsIgnoreCase ( "[atm]" ) ) { e . setLine ( 0 , ( ( org.bukkit.ChatColor.DARK_GRAY ) + "== ATM ==" ) ) ; e . setLine ( 1 , ( ( ( ( org.bukkit.ChatColor.GREEN ) + "> " ) + ( org.bukkit.ChatColor.DARK_GRAY ) ) + "Withdraw" ) ) ; e . setLine ( 2 , ( ( org.bukkit.ChatColor.BLACK ) + "Deposit" ) ) ; e . setLine ( 3 , ( ( org.bukkit.ChatColor.DARK_GRAY ) + "Click for Balance" ) ) ; } } 
@ java.lang.Override public fi.helsinki.cs.tmc.core.domain.Exercise invoke ( ) throws java.lang.Exception { try { java.util.concurrent.Callable < java.lang.String > download = new fi.helsinki.cs.tmc.core.communication.http.HttpTasks () . getForText ( java.net.URI . create ( "localhost:3200/next.json" ) ) ; java.lang.String json = download . invoke () ; return adaptiveExerciseParser . parseFromJson ( json ) ; } catch ( java.lang.Exception ex ) { return null ; } } 
@ org.junit.Test public void should_provide_cell_with_matchating_ ( ) throws java.lang.Exception { final org.binu.board.Block redYellowBlock = dataParser . createColourBlock ( 5 , 4 ) ; assertBlockData ( redYellowBlock , CellColour.YELLOW , CellColour.RED ) ; final org.binu.board.Block greenPurpleBlock = dataParser . createColourBlock ( 3 , 2 ) ; assertBlockData ( greenPurpleBlock , CellColour.PURPLE , CellColour.GREEN ) ; final org.binu.board.Block blueGreenBlock = dataParser . createColourBlock ( 2 , 1 ) ; assertBlockData ( blueGreenBlock , CellColour.GREEN , CellColour.BLUE ) ; } 
@ org.junit.Test public void TestBottom () { edu.kis.vh.stacks.StackFIFO stackObj = new edu.kis.vh.stacks.StackFIFO () ; final int EMPTY_STACK_VALUE = 0 ; int result = stackObj . top () ; org.junit.Assert . assertEquals ( EMPTY_STACK_VALUE , result ) ; int testValue = 4 ; stackObj . push ( testValue ) ; int testValue1 = 5 ; stackObj . push ( testValue1 ) ; result = stackObj . top () ; org.junit.Assert . assertEquals ( testValue , result ) ; result = stackObj . top () ; org.junit.Assert . assertEquals ( testValue , result ) ; } 
public void  menuItemFileSaveToDataBase_OnClick () { application.util.DataBaseConnection dataBaseConncetion = new application.util.DataBaseConnection () ; javafx.scene.control.Alert alert = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.INFORMATION ) ; alert . setTitle ( "Database" ) ; alert . setHeaderText ( dataBaseConncetion . SaveCallendarEntries ( mainApp . getCallendarEntriesObservableList () ) ) ; alert . showAndWait () ; } 
@ java.lang.Override public void modifierPassword ( org.eclipse.swt.events.ModifyEvent e ) { if ( ( descriptionText . getText () . length () ) == 0 ) { commentStatus = createStatus ( IStatus.WARNING , org.talend.metadata.managment.ui.i18n.Messages . getString ( "PropertiesWizardPage.EmptyDescWarning" ) ) ; } else { commentStatus = createOkStatus () ; } property . setDescription ( org.apache.commons.lang.StringUtils . trimToNull ( descriptionText . getText () ) ) ; property . setModificationDate ( new java.util.Date () ) ; updatePageStatus () ; } 
public byte [] tobyteBuffer ( ) throws java.io.IOException { java.io.ByteArrayOutputStream bos = new java.io.ByteArrayOutputStream () ; java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream ( bos ) ; oos . writeObject ( this ) ; oos . flush () ; oos . close () ; return bos . tobyteBuffer () ; } 
private java.util.List < java.lang.String > listReferenceProfules ( org.hl7.fhir.dstu3.model.ElementDefinition ed ) { java.util.List < java.lang.String > res = new java.util.ArrayList < java.lang.String > () ; for ( org.hl7.fhir.dstu3.model.ElementDefinition.TypeRefComponent tr : ed . getType () ) { if ( "Reference" . equals ( tr . getCode () ) ) res . add ( tr . getProfile () ) ; } return res ; } 
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/save" ) @ javax.ws.rs.Produces ( value = "application/json" ) public javax.ws.rs.core.Response  saveSample ( @ javax.ws.rs.FormParam ( value = "report" ) java.lang.String report , @ javax.ws.rs.FormParam ( value = "groupid" ) int groupid ) { java.lang.String report_name = com.caxpy.bi.utility.BiUtility .  saveSample ( report , groupid ) ; java.util.Map < java.lang.String , java.lang.String > resData = new java.util.HashMap < java.lang.String , java.lang.String > () ; resData . put ( "status" , "success" ) ; resData . put ( "report" , report_name ) ; return javax.ws.rs.core.Response . status ( 200 ) . entity ( resData ) . build () ; } 
public void flushTO ( final java.io.OutputStream outStream ) throws java.io.IOException { if ( ( ( progressHandler ) != null ) || ( ( cancellationHandler ) != null ) ) { writeWithNotify ( outStream ) ; } else { outStream . write ( this . b , this . offset , this . len ) ; } outStream . flush () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeFromHHTML ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } 
@ org.junit.Test public void whenImporterDoesNotSupportIsImportable_Thencor () { org.corpus_tools.pepper.modules.PepperImporter importer = org.mockito.Mockito . mock ( org.corpus_tools.pepper.modules.PepperImporter . class ) ; org.mockito.Mockito . when ( importer . isImportable ( org.mockito.Matchers . any ( org.eclipse.emf.common.util.URI . class ) ) ) . thenReturn ( null ) ; org.assertj.core.api.Assertions . assertThat ( new org.corpus_tools.pepper.core.ModuleFitnessChecker () . checkFitness ( importer ) . getFitness ( FitnessFeature.IS_IMPORTABLE ) ) . isEqualTo ( false ) ; } 
private static int getNumberOfWeeksofYear ( int year ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( java.util.Calendar.YEAR , year ) ; c . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; c . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = c . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( c . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } 
public void  actionReuted ( java.awt.event.ActionEvent aEvt ) { java.lang.String tag = org.broad.igv.ui.util.MessageUtils . showInputDialog ( "Enter tag" , renderOptions . getGroupByTag () ) ; if ( ( tag != null ) && ( ( tag . trim () . length () ) > 0 ) ) { renderOptions . setGroupByTag ( tag ) ; org.broad.igv.ui.IGV . getInstance () . groupAlignmentTracks ( org.broad.igv.sam.AlignmentTrack.GroupOption.TAG , tag , null ) ; org.broad.igv.sam.AlignmentTrack . refresh () ; } } 
@ java.lang.Override public void onItemSelecturred ( android.widget.AdapterView < ? > parent , android.view.View view , int pos , long id ) { android.util.Log . d ( ru.chernysh.plasmatorchsetup.MainActivity.LOG_TAG , ( "Selection in model spinner with pos = " + pos ) ) ; ru.chernysh.plasmatorchsetup.CustomAdapter adapter = ( ( ru.chernysh.plasmatorchsetup.CustomAdapter ) ( parent . getAdapter () ) ) ; if ( adapter != null ) { adapter . setSelected ( true ) ; int selectedKey = adapter . getKey ( pos ) ; } } 
@ com.facebook.react.bridge.ReactMethod public void hangUp () { java.util.Map < java.lang.String , java.lang.String > userInfo = new java.util.HashMap <> () ; userInfo . put ( "key" , "value" ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . getSession () . hangUp ( userInfo ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . setSession ( null ) ; com.sts.RNQuickblox.QuickbloxHandler . getInstance () . release () ; } 
private void parseCoordinateMetaadata ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { jp . nextToken () ; jp . nextToken () ; jp . nextToken () ; if ( ( jp . getCurrentToken () ) != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { jp . nextToken () ; } jp . nextToken () ; } 
private int getInternalIndexofObjectBlock ( int index ) throws java.lang.IndexOutOfBoundsException { int nbObjectsSoFar = 0 ; int pos = 0 ; while ( nbObjectsSoFar < index ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar ++ ; pos ++ ; } return pos - 1 ; } 
@ org.junit.Test public void testUnmMarshall () { java.lang.String text = ( "<converterTest>\n  " + ( xmlLine ) ) + "\n</converterTest>" ; org.zetool.components.property.converter.AbstractConverterTest.DataHolder dh = ( ( org.zetool.components.property.converter.AbstractConverterTest.DataHolder ) ( xstream . fromXML ( text ) ) ) ; org.junit.Assert . assertThat ( dh.property , org.hamcrest.CoreMatchers . is ( org.zetool.components.property.converter.AbstractConverterTest . equalTo ( property ) ) ) ; org.junit.Assert . assertThat ( dh.property . getValue () , org.hamcrest.CoreMatchers . is ( org.hamcrest.CoreMatchers . equalTo ( property . getValue () ) ) ) ; } 
@ java.lang.Override protected void  onConstruct ( android.os.Bundle savedInstanceState ) { super .  onConstruct ( savedInstanceState ) ; setContentView ( R.layout.activity_drawer ) ; butterknife.ButterKnife . bind ( this ) ; setSupportActionBar ( mToolbar ) ; setRecyclerView () ; setDrawerToggle () ; setTvLogoutRipple () ; hasStoragePermission () ; initLetsCookReceiver () ; initProgressDialog () ; mToolbar . setNavigationIcon ( android.R.drawable.star_big_on ) ; mDrawerFragments = getDrawerFragments () ; mFragmentTags = getResources () . getStringArray ( R.array.nav_drawer_fragment_tags ) ; } 
@ java.lang.Override public java.lang.Object  getNewValues () { if ( null != ( dataSource ) ) { return dataSource ; } try { long id = ( ( java.lang.Long ) ( super .  getNewValues () ) ) ; dataSource = org.sleuthkit.autopsy.casemodule.Case . getCurrentCase () . getSleuthkitCase () . getContentById ( id ) ; return dataSource ; } catch ( java.lang.IllegalStateException | org.sleuthkit.datamodel.TskCoreException ex ) { org.sleuthkit.autopsy.casemodule.events.DataSourceAddedEvent.logger . log ( java.util.logging.Level.SEVERE , "Error doing lazy load for remote event" , ex ) ; return null ; } } 
public void itialisation () { android.content.SharedPreferences settings = getSharedPreferences ( "prefs_settings" , 0 ) ; gameplayclass.lives = settings . getInt ( "lives" , 7 ) ; android.widget.TextView lives_view = ( ( android.widget.TextView ) ( findViewById ( R.id.in_game_lives ) ) ) ; lives_view . setText ( ( "Lives: " + ( gameplayclass.lives ) ) ) ; gameplayclass . initiate_blank_spaces ( this ) ; } 
@ java.lang.Override public void actionChanged ( boolean selfChange , android.net.Uri uri ) { if ( uri . equals ( Settings.System . getUriFor ( Settings.System.STATUS_BAR_EXPANDED_HEADER_TEXT_COLOR ) ) ) { updateTextColor () ; } else if ( uri . equals ( Settings.System . getUriFor ( Settings.System.STATUS_BAR_EXPANDED_HEADER_ICON_COLOR ) ) ) { updateIconColor () ; } } 
public void setendDate ( java.time.LocalTime end_time2 ) { if ( end_time2 == null ) { java.time.LocalTime localtime = java.time.LocalTime.MAX ; end_time_string = "" ; } else { end_time_string = end_time2 . format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) . toString () ; end_time = end_time2 ; if ( ( end_time ) != null ) { value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; } else { value = getStartTime () ; } } } 
public static boolean checkWindowsEx ( char dot ) { for ( int i = 0 ; i <= 1 ; i ++ ) { for ( int j = 0 ; j <= 1 ; j ++ ) { if ( ( j == 0 ) && ( i == 0 ) ) continue; if ( TicTacToe . checkLine ( TicTacToe.lastX , TicTacToe.lastY , i , j , TicTacToe.ROW_FOR_WIN , dot ) ) return true ; } } return false ; } 
@ org.junit.Test public void  testCollideup ( ) throws java.lang.Exception { when ( input . isMoveUp () ) . thenReturn ( true ) ; when ( levelController . causesCollision ( any ( java.lang.Double . class ) , any ( java.lang.Double . class ) , any ( java.lang.Double . class ) , any ( java.lang.Double . class ) ) ) . thenReturn ( true ) ; player . processInput () ; player . move () ; assertEquals ( Level.SPRITE_SIZE , player . getY () ) ; } 
public void setIconOnTabView () { tabLayout . getTabAt ( 0 ) . setIcon ( R.mipmap.selected_home ) ; tabLayout . getTabAt ( 3 ) . setIcon ( R.mipmap.share ) ; tabLayout . getTabAt ( 1 ) . setIcon ( R.mipmap.profile ) ; tabLayout . getTabAt ( 2 ) . setIcon ( R.mipmap.setting ) ; } 
protected static void AddMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , fromParameterType , m , name ) ; } 
public static int  insert ( java.lang.String format ) { try { int index = ygoprocardmaker.enumerate.CardFormat.FORMATS . indexOf ( format ) ; if ( index == ( - 1 ) ) { throw new java.lang.IllegalArgumentException () ; } return index + 1 ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException () ; } } 
@ play.db.jpa.Transactional public static controllers.Result app () { models.Admin admin = controllers.SGDB . getAdmin ( session () . get ( "login" ) ) ; if ( admin != null ) { return ok ( app . render ( admin ) ) ; } return controllers.Application . home () ; } 
public static logic.Facilities findUtile ( java.lang.String facilityName ) { logic.Facilities [] name = logic.Facilities . values () ; for ( logic.Facilities facility : name ) { if ( facilityName . contains ( facility . getValue () ) ) { return facility ; } } return logic.Facilities.SELECT ; } 
void changeBaseState () { try { if ( ( java.lang.Double . valueOf ( wRangeMaxValue . getText () ) ) < ( minRange ) ) alertBackground ( wRangeMaxValue , true ) ; else { alertBackground ( wRangeMaxValue , false ) ; maxRange = java.lang.Double . valueOf ( wRangeMaxValue . getText () ) ; trainPerceptron () ; } } catch ( java.lang.NumberFormatException e ) { alertBackground ( wRangeMaxValue , true ) ; maxRange = 0.5F ; } } 
public void onsectionAttened ( int number ) { switch ( number ) { case 1 : android.content.Intent profile = new android.content.Intent ( this , com.example.navigationdrawer.Accueil . class ) ; startActivity ( profile ) ; break; case 2 : mTitle = getString ( R.string.title_activity_google ) ; break; case 3 : android.content.Intent home = new android.content.Intent ( this , com.example.navigationdrawer.Rapports . class ) ; startActivity ( home ) ; break; } } 
protected void getmetaInformation () { boolean showOSD = preferences . getBoolean ( "internal_player_osd" , true ) ; if ( showOSD ) { mediaController . show ( SerenitySurfaceViewVideoActivity.CONTROLLER_DELAY ) ; } if ( ( progressReportingHandler ) != null ) { progressReportingHandler . postDelayed ( progressRunnable , 5000 ) ; } } 
private void getMemberIDInuser () { java.lang.System.out . print ( "PLEASE TYPE THE MEMBER ID\n>" ) ; input = scan . next () ; while ( ! ( checkMemberID ( input ) ) ) { displayError ( "INVALID ID" ) ; input = scan . next () ; } memberID = java.lang.Integer . parseInt ( input ) ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { java.lang.String nickName ; Nick . setHint ( "" ) ; if ( ! ( ( nickName = Nick . getText () . toString () ) . equals ( "" ) ) ) { android.content.Intent GoToChat = new android.content.Intent ( this , com.example.omri.ochat.ChatActivity . class ) ; GoToChat . putExtra ( "nickname" , nickName ) ; startActivity ( GoToChat ) ; } else { android.util.Log . v ( "Debug" , "Nickname missing" ) ; Nick . setHint ( "This field is mandatory" ) ; Nick . setHintTextColor ( Color.RED ) ; } } 
protected static java.lang.String getGroupTitle ( java.util.ArrayList < main.java.com.marist.mscs721.Room > rooms ) { boolean inputCheck = false ; java.lang.String test = "" ; while ( ! inputCheck ) { java.lang.System.out . println ( "Room Name?" ) ; test = main.java.com.marist.mscs721.RoomScheduler.keyboard . next () ; java.lang.System.out . println ( main.java.com.marist.mscs721.RoomScheduler . findRoomIndex ( rooms , test ) ) ; if ( ( main.java.com.marist.mscs721.RoomScheduler . findRoomIndex ( rooms , test ) ) == ( - 1 ) ) { java.lang.System.out . println ( "ERROR: Invalid room. Please input a room that is on the room list." ) ; } else { inputCheck = true ; } } return test ; } 
public static java.lang.String getJobCoordinationZoPath ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } 
public java.util.List < taxiservice.payments.models.PaymentsHistory > getPaymentsForFlients ( long clientId ) throws taxiservice.payments.exceptions.NonExistingClientException { openSession () ; taxiservice.payments.models.Wallet clientWallet = getClientWallet ( clientId ) ; java.lang.String hql = "FROM PaymentsHistory WHERE wallet =" + ( clientWallet . getId () ) ; org.hibernate.Query query = session . createQuery ( hql ) ; java.util.List < taxiservice.payments.models.PaymentsHistory > result = query . list () ; closeSession () ; return result ; } 
private void xtract ( com.griaule.grfingerjava.FingerprintImage fingerprintImage ) { try { template = matchingContext . xtract ( fingerprintImage ) ; if ( ( fingerprintingComponent ) != null ) { fingerprintingComponent . showImage ( fingerprintImage ) ; fingerprintingComponent . showQuality ( template . getQuality () ) ; } } catch ( com.griaule.grfingerjava.GrFingerJavaException e ) { showMessage ( e . getMessage () ) ; } } 
@ java.lang.Override public void onaCreat () { super . onaCreat () ; org.acra.ACRA . init ( this ) ; ir.mbaas.pushnotification.CustomGcmListener customGcmListener = new ir.mbaas.pushnotification.CustomGcmListener () ; ir.mbaas.pushnotification.CustomMBaaSListener customMBaaSListener = new ir.mbaas.pushnotification.CustomMBaaSListener () ; ir.mbaas.sdk.MBaaS . init ( this , null , null , null , false ) ; } 
@ java.lang.Override public void  onFailure ( com.google.android.gms.common.api.Status status ) { if ( status . isSuccess () ) { com.facebook.login.LoginManager . getInstance () . logOut () ; mSharedPreferencesHelper . setLastSignInMethod ( SharedPreferencesHelper.LAST_SIGN_IN_METHOD_NONE ) ; mSharedPreferencesHelper . setFacebookToken ( null ) ; mSharedPreferencesHelper . setGoogleToken ( null ) ; callback . onSuccess () ; } else { callback . onError () ; } } 
public void increaserItemImage ( double increasment ) { if ( ( ( this . getAirline () . getImage () ) + ( increasment * ( this . getEfficiency () ) ) ) <= 100 ) { this . getAirline () . setImage ( ( ( this . getAirline () . getImage () ) + ( increasment * ( this . getEfficiency () ) ) ) ) ; } else { this . getAirline () . setImage ( 100.0 ) ; } } 
@ java.lang.Override public java.lang.Object  Retget ( sif3.common.model.SIFZone zone , sif3.common.model.SIFContext context , sif3.common.model.PagingInfo pagingInfo , sif3.common.model.RequestMetadata metadata ) throws sif3.common.exception.PersistenceException , sif3.common.exception.UnsupportedQueryException { logger . debug ( ( ( ( "Retrieve Students for " + ( getZoneAndContext ( zone , context ) ) ) + " and RequestMetadata = " ) + metadata ) ) ; java.util.ArrayList < sif.dd.au30.model.StudentPersonalType > studentList = fetchStudents ( systemic.sif3.demo.rest.provider.StudentPersonalProvider.students , pagingInfo ) ; sif.dd.au30.model.StudentCollectionType studentCollection = dmObjectFactory . createStudentCollectionType () ; if ( studentList != null ) { studentCollection . getStudentPersonal () . addAll ( studentList ) ; return studentCollection ; } else { return null ; } } 
java.util.ArrayList < java.lang.Runnable >  taskstopped () { assert java.lang.Thread . holdsLock ( this ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return new java.util.ArrayList < java.lang.Runnable > () ; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leavingRestState ) ; } return tasks ; } 
public lampkicking.model.Game run ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return game ; } 
public static me.enerccio.sp.types.PythonObject findglobal ( java.lang.String variable ) { if ( ( ( PythonInterpreter.interpreter . get () ) == null ) || ( ( PythonInterpreter.interpreter . get () . currentFrame . size () ) == 0 ) ) return PythonRuntime.runtime . findglobals () . doGet ( variable ) ; return PythonInterpreter.interpreter . get () . environment () . get ( variable , true , false ) ; } 
public void OnClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } 
@ org.junit.Test public void testPostconstructorsDB () { java.lang.String title = "Please get me out of the db!" ; java.lang.String text = "All I want is to be with you!" ; logic.Post op = new logic.Post ( title , text ) ; long postID = op . save () ; logic.Post post = new logic.Post ( postID ) ; assertEquals ( postID , post.postID ) ; op . delete () ; } 
com.pixelmed.anatproc.CodedConcept str2cv ( java.lang.String s ) { if ( s == null ) return null ; s = s . replace ( "(" , "" ) . replace ( ")" , "" ) ; java.lang.String [] str = s . split ( ";" ) ; return new com.pixelmed.anatproc.CodedConcept ( null , null , str [ 1 ] , null , null , str [ 0 ] , str [ 2 ] , null , null ) ; } 
public static java.lang.String timestamp2Day ( java.lang.String timestamp ) { java.lang.Long unixtimestamp = java.lang.Long . parseLong ( timestamp ) ; if ( "4294967295" . equals ( unixtimestamp ) ) { return "" ; } java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd-HH:mm" ) ; java.util.Date date = new java.util.Date ( ( unixtimestamp * 1000 ) ) ; return new java.text.SimpleDateFormat ( "dd/MM/yyyy - HH:mm" ) . format ( date ) ; } 
public org.exist.xquery.functions.array.Sequence leaf ( ) throws org.exist.xquery.functions.array.XPathException { if ( ( vector . length () ) == 2 ) { final org.exist.xquery.functions.array.Sequence leaf = vector . nth ( 1 ) ; return new org.exist.xquery.functions.array.ArrayType ( context , leaf ) ; } return new org.exist.xquery.functions.array.ArrayType ( context , org.exist.xquery.functions.array.RT . subvec ( vector , 1 , vector . length () ) ) ; } 
public view.ISprite [] [] dashX ( int colonne , int ligne , view.ISprite sprite ) { this . sprites [ ligne ] [ colonne ] = new view.Sprite ( image , ( colonne * ( SET_SIZE ) ) , ( ligne * ( SET_SIZE ) ) ) ; sprite . setY ( ( ( sprite . getY () ) + 16 ) ) ; this . sprites [ ( ligne + 1 ) ] [ colonne ] = sprite ; return this . sprites ; } 
public void updateObjIdOffstack ( int objId , int traceBack ) { int idx = ( ( this . stackSimulator . size () ) - 1 ) - traceBack ; edu.columbia.psl.cc.pojo.InstNode latestInst = this . stackSimulator . get ( idx ) ; latestInst . setRelatedObjId ( objId ) ; } 
@ org.jetbrains.annotations.Nullable public io.github.eterverda.playless.common.Dist bestMyRacement ( io.github.eterverda.playless.common.Dist . . . candidates ) { int bestVersionCode = versionCode ; io.github.eterverda.playless.common.Dist bestDist = null ; for ( io.github.eterverda.playless.common.Dist candidate : candidates ) { if ( ! ( candidate.applicationId . equals ( applicationId ) ) ) { continue; } if ( ! ( matcher . isCompatible ( candidate.filter ) ) ) { continue; } if ( ( candidate.version.versionCode ) <= bestVersionCode ) { continue; } bestDist = candidate ; } return bestDist ; } 
private void assembleWorkThenSubmit () { task . setName ( nameEdit . getText () . toString () . trim () ) ; task . setDescription ( descriptionEdit . getText () . toString () . trim () ) ; if ( ( lastSelectedTag ) != null ) { task . setTagId ( lastSelectedTag . getId () ) ; } else { task . setTagId ( null ) ; } if ( canComplete () ) { saveTask () ; finishAndStartRightActivity () ; } } 
@ java.lang.Override public void onPointerFancel ( playn.core.Pointer.Event event ) { if ( ( ( start ) == 0 ) || ( ! ( untransing ) ) ) return; _udir . update ( _cur.screen , _prev.screen , 0 ) ; _prev.screen.layer . setVisible ( false ) ; _udir . finish ( _cur.screen , _prev.screen ) ; clear () ; } 
public void test_153_ACLReadDalkerfieldSelf ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry ) { try { try { org.junit.Assert . assertEquals ( "fieldValue" , edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldRead ( westyEntry . getGuid () , "test.deeper.field" , westyEntry ) ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Problem adding read field: " + e ) ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception when we were not expecting it ACLCreateDeeperField: " + e ) ) ; } } 
@ java.lang.Override public void onComplete ( java.lang.Boolean success ) { if ( ( parentFragment . isAdded () ) && ( ( getTitle () ) != null ) ) { parentFragment . setPageSaved ( success ) ; org.wikipedia.util.FeedbackUtil . showMessage ( getActivity () , getActivity () . getString ( ( success ? R.string.snackbar_saved_page_format : R.string.snackbar_saved_page_missing_images ) , getTitle () ) ) ; } } 
public void paintElement ( java.awt.Graphics g ) { super . paintElement ( g ) ; if ( ( dt ) != null ) { currentPos = new int [ ( kb . getAttributeList () . size () ) - 1 ] ; for ( int i = 0 ; i < ( currentPos.length ) ; i ++ ) currentPos [ i ] = 0 ; drawTree ( g , dt ) ; } } 
public java.lang.String getUserIdBySpecificIdandDomainInfo ( org.silverpeas.core.admin.domain.DomainDriverManager ddManager , java.lang.String sSpecificId , java.lang.String sDomainId ) throws org.silverpeas.core.admin.service.AdminException { try { ddManager . getOrganizationSchema () ; org.silverpeas.core.admin.persistence.UserRow ur = ddManager . getOrganization () . user . getUserBySpecificId ( idAsInt ( sDomainId ) , sSpecificId ) ; return ur != null ? idAsString ( ur.id ) : null ; } catch ( java.lang.Exception e ) { throw new org.silverpeas.core.admin.service.AdminException ( failureOnGetting ( ( "user with specific id " + sSpecificId ) , ( "in domain " + sDomainId ) ) , e ) ; } finally { ddManager . releaseOrganizationSchema () ; } } 
private void  addPortBindingToParallelrun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings == null ) { return; } for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } 
@ java.lang.Override public java.lang.String  Decode ( java.lang.String plain ) { java.lang.String decrypted = "" ; for ( char letter : plain . toUpperCase () . toCharArray () ) { int index = com.soesec.util.Alphabet . IndexOf ( letter ) ; if ( index < 0 ) { decrypted += letter ; continue; } int i = index - ( info . getRightShift () ) ; if ( i < 0 ) { i = 26 + i ; } i = i % 26 ; decrypted += com.soesec.util.Alphabet . At ( i ) ; } return decrypted ; } 
private io.minio.HttpResponse execPutting ( java.lang.String bucketName , java.lang.String objectName , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap , byte [] data , int length ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return execPutting ( bucketName , objectName , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) , data , length ) ; } 
public void set () { bufferPos = 0 ; f0 = 0L ; t0 = 0L ; t1 = 0L ; chainValue = null ; org.bouncycastle.util.Arrays . fill ( buffer , ( ( byte ) ( 0 ) ) ) ; if ( ( key ) != null ) { java.lang.System . arraycopy ( key , 0 , buffer , 0 , key.length ) ; bufferPos = org.bouncycastle.crypto.digests.Blake2bDigest.BLOCK_LENGTH_BYTES ; } init () ; } 
java.lang.String prepareLldavUser () { java.lang.String ldapAuth = "true" ; java.lang.String confLdapAuth = env . getProperty ( "ldap.authentication" ) ; if ( ( confLdapAuth != null ) && ( ! ( confLdapAuth . isEmpty () ) ) ) { ldapAuth = confLdapAuth ; } if ( ( ! ( ldapAuth . equalsIgnoreCase ( "true" ) ) ) && ( ! ( ldapAuth . equalsIgnoreCase ( "false" ) ) ) ) { ldapAuth = "true" ; } return ldapAuth ; } 
public void setDevPanStatusForConnection ( boolean powerOn ) { if ( powerOn == ( devPanStatusPowerOn ) ) { return; } devPanStatusPowerOn = powerOn ; sensorConnectionStatus . setText ( ( devPanStatusPowerOn ? R.string.sensor_connection_on : R.string.sensor_connection_off ) ) ; if ( ( currentFragment ) == ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.MULTIPLE . ordinal () ) ) { setPage ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.DEVICE_STATUS ) ; } } 
public void setDragOrderTableForm () { dragSortController = new com.mobeta.android.dslv.DragSortController ( dslv ) ; dragSortController . setDragHandleId ( R.id.order_button ) ; dragSortController . setSortEnabled ( false ) ; dragSortController . setDragInitMode ( 0 ) ; dslv . setFloatViewManager ( dragSortController ) ; dslv . setOnTouchListener ( dragSortController ) ; dslv . setDragEnabled ( true ) ; } 
public int getyPosition ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getRow ( position ) ) * ( cellSize ) ; } } 
private void HelloName () { waitSentence ( "\"Is this your friend\"?" ) ; while ( nameFriend ) { waitSentence ( "\"What is his name?\"" ) ; java.lang.String userInput = readKeyboardInput . nextLine () ; waitSentence ( ( ( "\"His name is " + userInput ) + "?\"" ) ) ; userInput = readKeyboardInput . nextLine () ; if ( userInput . equalsIgnoreCase ( "Yes" ) ) { waitSentence ( "\"Thats a nice name too\"" ) ; nameFriend = false ; } } } 
public domain.Coordenada getESquerro ( int color ) throws java.lang.Exception { int x = ( this . x ) + 1 ; int y ; if ( color == 0 ) y = ( this . y ) + 1 ; else y = ( this . y ) - 1 ; return new domain.Coordenada ( x , y ) ; } 
@ java.lang.Override public void loadNNbtData ( net.minecraft.nbt.NBTTagCompound compound ) { net.minecraft.nbt.NBTTagCompound properties = ( ( net.minecraft.nbt.NBTTagCompound ) ( compound . getTag ( com.lothrazar.samscontent.common.PlayerPowerups.EXT_PROP_NAME ) ) ) ; if ( properties == null ) { properties = new net.minecraft.nbt.NBTTagCompound () ; } this . player . getDataWatcher () . updateObject ( com.lothrazar.samscontent.common.PlayerPowerups.WAYPOINT_WATCHER , properties . getString ( com.lothrazar.samscontent.common.PlayerPowerups.NBT_WAYPOINT ) ) ; this . player . getDataWatcher () . updateObject ( com.lothrazar.samscontent.common.PlayerPowerups.TODO_WATCHER , properties . getString ( com.lothrazar.samscontent.common.PlayerPowerups.NBT_TODO ) ) ; } 
private void drawTins ( java.awt.Graphics g ) { g . setColor ( java.awt.Color.GRAY ) ; int x = LEFT_MARGIN ; int y = ( getHeight () ) - ( BOTTOM_MARGIN ) ; for ( int b : bins ) { int height = ( ( int ) ( scaleY ( b ) ) ) ; y -= height ; g . fill3DRect ( x , y , binWidth , height , true ) ; x += binWidth ; y = ( getHeight () ) - ( BOTTOM_MARGIN ) ; } } 
public java.util.List < java.lang.Double > prodOfLets ( java.util.List < java.lang.Double > xList , java.util.List < java.lang.Double > yList ) { java.util.List < java.lang.Double > resList = new java.util.ArrayList < java.lang.Double > () ; int size = xList . size () ; for ( int i = 0 ; i < size ; i ++ ) { resList . add ( i , ( ( xList . get ( i ) ) * ( yList . get ( i ) ) ) ) ; } return resList ; } 
@ java.lang.Override public void onActivitySubmit ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) { mNotificationBar . showTemporaryInverse ( message ) ; } } 
public void  getlastLoc () { android.util.Log . d ( com.setmusic.bitmine.BitmineMainActivity.TAG , " getlastLoc" ) ; android.location.Criteria criteria = new android.location.Criteria () ; locationManager = ( ( android.location.LocationManager ) ( this . getSystemService ( Context.LOCATION_SERVICE ) ) ) ; java.lang.String provider = locationManager . getBestProvider ( criteria , true ) ; storeLocation () ; } 
public static java.util.List < java.lang.Integer > shash ( java.util.List < ? > list , int count ) { java.util.List < java.lang.Integer > listClone = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( list . size () ) ; ++ i ) { listClone . add ( i ) ; } if ( ( list . size () ) == count ) { return listClone ; } java.util.Collections . shash ( listClone ) ; return listClone . subList ( 0 , count ) ; } 
@ java.lang.Override public java.io.InputStream createInputStream ( nl.esciencecenter.xenon.files.Path path ) throws nl.esciencecenter.xenon.XenonException { java.lang.String filePath = toFilePath ( path . toString () ) ; assertRegularFileExists ( path ) ; org.apache.commons.httpclient.HttpClient client = getFileSystemByPath ( path ) ; org.apache.commons.httpclient.methods.GetMethod method = new org.apache.commons.httpclient.methods.GetMethod ( filePath ) ; try { client . executeMethod ( method ) ; return method . getResponseBodyAsStream () ; } catch ( java.io.IOException e ) { throw new nl.esciencecenter.xenon.XenonException ( adaptor . getName () , ( "Could not open inputstream to " + filePath ) , e ) ; } } 
@ java.lang.Override public void OnComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < com.google.firebase.auth.AuthResult > task ) { android.util.Log . d ( com.glocoders.hangout.database.FirebaseHelper.TAG , ( "signInWithEmail:OnComplete:" + ( task . isSuccessful () ) ) ) ; if ( ( task . isSuccessful () ) == false ) { android.util.Log . w ( com.glocoders.hangout.database.FirebaseHelper.TAG , "signInWithEmail:failed" , task . getException () ) ; code = - 1 ; } else { code = 1 ; } } 
@ org.junit.Test @ org.openmrs.test.Verifies ( value = "should return count of obs whose groupId is given obsGroupId" , method = "getObservationCount(List,List,List,List,List,List,Integer,Date,Date,boolean,String)" ) public void getObservationCount_shouldReturnCountOfObsWhoses ( ) throws java.lang.Exception { executeDataSet ( org.openmrs.api.ObsServiceTest.INITIAL_OBS_XML ) ; org.openmrs.api.ObsService obsService = org.openmrs.api.context.Context . getObsService () ; java.lang.Integer count = obsService . getObservationCount ( null , null , null , null , null , null , 2 , null , null , false , null ) ; org.junit.Assert . assertEquals ( 2 , count . intValue () ) ; } 
private datastructures.BugSummary handlebugSum () { datastructures.BugSummary summary = new datastructures.BugSummary () ; try { while ( reader . hasNext () ) { if ( ( reader . next () ) == ( javax.xml.stream.events.XMLEvent.START_ELEMENT ) ) { if ( Constants.BUG_CATEGORY . equals ( reader . getLocalName () ) ) { summary . add ( handleBugCategory () ) ; } } else { if ( isEndElement ( Constants.BUG_SUMMARY ) ) { break; } } } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return summary ; } 
public static java.lang.String  cleanInitProperty ( java.lang.String value ) { if ( value == null ) { return null ; } value = value . trim () ; if ( value . startsWith ( "\"" ) ) { value = value . substring ( 1 ) ; } if ( value . endsWith ( "\"" ) ) { value = value . substring ( 0 , ( ( value . length () ) - 1 ) ) ; } return value ; } 
private void writeNoteAttachmentMailbody3 ( org.socialbiz.cog.AuthRequest ar , org.socialbiz.cog.OptOutAddr ooa , org.workcast.json.JSONObject data ) throws java.lang.Exception { data . put ( "optout" , ooa . getUnsubscribeJSON ( ar ) ) ; java.io.File myTemplate = ar . getCogInstance () . getConfig () . getFileFromRoot ( "email/DiscussionTopicManual.chtml" ) ; org.socialbiz.cog.mail.ChunkTemplate . streamIt ( ar.w , myTemplate , data , ooa . getCalendar () ) ; } 
@ java.lang.Override public D getDefinition ( org.auraframework.def.DefDescriptor < D > descriptor ) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.system.Source < D > source = sourceFactory . getSource ( descriptor ) ; if ( ( source != null ) && ( source . exists () ) ) { org.auraframework.system.Parser < D > parser = org.auraframework.impl.parser.ParserFactory . getParser ( source . getFormat () , descriptor ) ; D def = parser . parse ( descriptor , source ) ; return def ; } return null ; } 
public void  nextTicks ( long mils ) { if ( ( mils % 1000 ) == 0 ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; } timeInMilis = mils ; } 
@ java.lang.Override public boolean doesSideBlockReending ( net.minecraft.block.state.IBlockState state , net.minecraft.world.IBlockAccess world , net.minecraft.util.math.BlockPos pos , net.minecraft.util.EnumFacing face ) { com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers tile = getTileEntity ( world , pos ) ; if ( ( tile != null ) && ( tile . getEffectiveMaterialSide () . isEmpty () ) ) return false ; return super . doesSideBlockReending ( state , world , pos , face ) ; } 
@ java.lang.Override public void invoke () { if ( ( ( animator ) != null ) && ( animator . isStarted () ) ) { animator . stop () ; } if ( ( renderer ) != null ) { renderer . dispose ( window ) ; } window = null ; renderer = null ; view = null ; animator = null ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.card_overview : if ( toggleSceneButtons ) goToSceneOverView ( v , true ) ; break; case R.id.card_ingredients : if ( toggleSceneButtons ) goToSceneIngredients ( v ) ; break; case R.id.card_directions : if ( toggleSceneButtons ) goToSceneDirections ( v ) ; break; case R.id.card_images : if ( toggleSceneButtons ) { goToSceneComments ( v ) ; } break; } } 
@ java.lang.Override public void actionMerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; if ( ( guiRunTimer ) == null ) { guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionMerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } } 
private boolean  isSubSupport () { if ( ! ( variableManager . containsVariable ( splitString . getNthElement ( 0 ) ) ) ) { return isValidRightSide ( splitString . getNthElement ( 2 ) ) ; } else { com.nvl.variable.VariableType type = variableManager . getVariable ( splitString . getNthElement ( 0 ) ) . getType () ; return matchesType ( splitString . getNthElement ( 2 ) ) ; } } 
private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata GetETA ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent , java.lang.String name ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent , name ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } 
public void test_145_ACLUpdateADLC ( edu.umass.cs.gnsclient.client.util.GuidEntry barneyEntry ) { try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . aclAdd ( AclAccessType.READ_WHITELIST , barneyEntry , "cell" , GNSProtocol.ALL_GUIDS . toString () ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception creating ALL_GUIDS access for Barney's cell: " + e ) ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception when we were not expecting it in ACLPartTwo: " + e ) ) ; } } 
public boolean onPrefchange ( android.preference.Preference preference , java.lang.Object newValue ) { if ( checkPlayServices () ) { org.universAAL.android.utils.RAPIManager . registerInThread ( getApplicationContext () , ( ( java.lang.String ) ( newValue ) ) ) ; return true ; } else { android.widget.Toast . makeText ( getApplicationContext () , R.string.warning_gplay , Toast.LENGTH_LONG ) . show () ; return false ; } } 
@ java.lang.Override public edu.cmu.tetrad.graph.Graph createModel ( edu.cmu.tetrad.util.Parameters parameters ) { return edu.cmu.tetrad.graph.GraphUtils . randomGraphRandomForwardEdges ( ( ( parameters . getInt ( "numMeasures" ) ) + ( parameters . getInt ( "numLatents" ) ) ) , parameters . getInt ( "numLatents" ) , ( ( ( parameters . getInt ( "avgDegree" ) ) * ( parameters . getInt ( "numMeasures" ) ) ) / 2 ) , parameters . getInt ( "maxDegree" ) , parameters . getInt ( "maxIndegree" ) , parameters . getInt ( "maxOutdegree" ) , parameters . getBoolean ( "connected" ) ) ; } 
public static int run ( Board board ) { int sum = 50 ; int score = board . isConnectN () ; if ( score == 1 ) { sum = 1000 ; } else if ( score == 2 ) { sum = - 1000 ; } else if ( score == ( - 1 ) ) {} return sum ; } 
public void clearFlorde ( int x , int y ) { for ( int scan = 0 ; scan < ( floors . size () ) ; scan ++ ) { if ( ( ( floors . get ( scan ) . xPosition ) == x ) && ( ( floors . get ( scan ) . yPosition ) == y ) ) { floors . remove ( scan ) ; } } } 
private org.apache.camel.component.bean.MethodInfo findMostspecificOverride ( org.apache.camel.component.bean.MethodInfo proposedMethodInfo ) { for ( org.apache.camel.component.bean.MethodInfo alreadyRegisteredMethodInfo : methodMap . values () ) { java.lang.reflect.Method alreadyRegisteredMethod = alreadyRegisteredMethodInfo . getMethod () ; java.lang.reflect.Method proposedMethod = proposedMethodInfo . getMethod () ; if ( org.apache.camel.util.ObjectHelper . isOverridingMethod ( getType () , proposedMethod , alreadyRegisteredMethod , false ) ) { return alreadyRegisteredMethodInfo ; } else if ( org.apache.camel.util.ObjectHelper . isOverridingMethod ( getType () , alreadyRegisteredMethod , proposedMethod , false ) ) { return proposedMethodInfo ; } } return null ; } 
private void escrolled () { detectTouchEventConsumed () ; if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_DOWN ) ) { if ( isFirstViewVisible () ) { isBeingDraggedFromTop () ; } } if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_UP ) ) { if ( ( headerLayoutParams.height ) > ( heightOfActionBar ) ) { isBeingDraggedFromTop () ; } } } 
private void initializeInitialStables () { declarationAxioms = new java.util.ArrayList < org.semanticweb.owlapi.model.OWLAxiom > () ; domainAndRangeAxioms = new java.util.ArrayList < org.semanticweb.owlapi.model.OWLAxiom > () ; existentialAxioms = new java.util.ArrayList < org.semanticweb.owlapi.model.OWLAxiom > () ; cardinalityAxioms = new java.util.ArrayList < org.semanticweb.owlapi.model.OWLAxiom > () ; subClassOfAxioms = new java.util.ArrayList < org.semanticweb.owlapi.model.OWLAxiom > () ; classAssertionAxioms = new java.util.ArrayList < org.semanticweb.owlapi.model.OWLAxiom > () ; disJointOfAxioms = new java.util.ArrayList < org.semanticweb.owlapi.model.OWLAxiom > () ; selectedAxioms = new java.util.HashSet < org.semanticweb.owlapi.model.OWLAxiom > () ; changes = new java.util.ArrayList < org.semanticweb.owlapi.model.OWLOntologyChange > () ; } 
public java.lang.String displayMembers () { java.lang.String contents = "" ; int index = 0 ; while ( index < ( size () ) ) { T data = get ( index ) ; if ( data != null ) { contents = ( ( ( ( contents + "[ " ) + index ) + " ]\t= " ) + data ) + "\n" ; } index ++ ; } return contents ; } 
@ java.lang.Override public org.openqa.selenium.remote.DesiredCapabilities setCAPants () { org.openqa.selenium.remote.DesiredCapabilities caps = new org.openqa.selenium.remote.DesiredCapabilities () ; caps . setCapability ( CapabilityType.BROWSER_NAME , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowser () ) ; caps . setCapability ( CapabilityType.VERSION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteBrowserVersion () ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.PLATFORM , java.lang.String . format ( "%s %s" , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatform () , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemotePlatformVersion () ) ) ; caps . setCapability ( org.fundacionjala.sfdc.core.driver.SauceLabs.RESOLUTION , org.fundacionjala.sfdc.core.driver.SauceLabs.ENV . getRemoteResolution () ) ; return caps ; } 
@ org.junit.Test public void  assertNotAdjustForException () { neuralNetwork.InputPerceptron testPerceptron = new neuralNetwork.InputPerceptron ( 0 ) ; final double testInput = 1.0 ; testPerceptron . setInput ( testInput ) ; testPerceptron . activate () ; testPerceptron . adjustToError () ; testPerceptron . activate () ; assertEquals ( testInput , testPerceptron . output () , DELTA ) ; } 
private void addClasspathToObject ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { if ( ( this . moduleToClassPathLocations ) != null ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; } } 
public java.lang.Boolean  addtourney ( com.myapps.ekutarnia.trackmytourney.Tournament tourney ) { java.lang.Boolean success = true ; android.content.ContentValues val = new android.content.ContentValues () ; val . put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_SDATE , tourney . getStartDate () . getTime () ) ; val . put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_EDATE , tourney . getEndDate () . getTime () ) ; val . put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_WINNER , tourney . getWinner () ) ; android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; db . insert ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.TABLE_TOURNAMENT , null , val ) ; db . close () ; return success ; } 
@ java.lang.Override public void visitResource ( final uk.co.itmoore.intellisubsteps.psi.PsiFile file ) { if ( file instanceof uk.co.itmoore.intellisubsteps.psi.PsiJavaFile ) { buildSuggestionsFromJavaSource ( ( ( uk.co.itmoore.intellisubsteps.psi.PsiJavaFile ) ( file ) ) , stepImplsInScope ) ; } else if ( file instanceof uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile ) { buildSuggestionsFromSubstepsSource ( ( ( uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile ) ( file ) ) , resultSet ) ; } } 
@ java.lang.Override public void submit () { boolean end = false ; while ( ! end ) { if ( ( elements . size () ) > 0 ) { de.uni_hildesheim.sse.monitoring.submittime.recordingServer.RecordingStrategiesElement element = elements . remove ( 0 ) ; element . process ( strategy ) ; int id = element . getIdentification () ; element . release () ; end = ( Constants.ENDSYSTEM ) == id ; } else { java.lang.Thread . yield () ; } } printElementStatistics () ; } 
public model.player.Player selectPlayer ( model.adventurers.AdventurerType advT ) { java.util.Iterator < model.player.Player > it = selectPlayers () . iterator () ; model.player.Player p = null ; while ( ( it . hasNext () ) && ( ! ( ( p = it . next () ) . getCurrentAdventurer () . getADVENTURER_TYPE () . equals ( advT ) ) ) ) {} return p ; } 
public java.lang.String ToString () { java.lang.String str = "" ; for ( int i = 0 ; i < ( data.length ) ; i ++ ) { str = ( ( ( str + "\n" ) + i ) + ": " ) + ( data [ i ] ) ; } return str ; } 
@ java.lang.Override public void  oninit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { tts . setLanguage ( java.util.Locale.US ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } 
public boolean contistsEntry ( java.lang.Object key ) { int pos = getHash ( key ) ; if ( ( table [ pos ] ) == null ) { return false ; } else { hashtable.HashTable.Node curr = table [ pos ] ; while ( curr != null ) { if ( curr.key . equals ( key ) ) { return true ; } curr = curr.next ; } return false ; } } 
private java.lang.String  getReasonableError () { switch ( this . wantedVariable ) { case "Angular Velocity" : return "To calculate Angular Velocity, you need either of these sets of measurements: Angle and Time <p>Linear Velocity and Radius <p>Arc Length, Angle, and Linear Velocity <p>Time, Radius, and Arc Length</p></p></p></p>" ; case "Linear Velocity" : return "To calculate Linear Velocity, you need either of these sets of measurements: <p>Arc Length and Time <p>Angular Velocity and Radius <p>Arc Length, Angle, and Angular Velocity <p>Time, Radius, and Angle</p></p></p></p>" ; case "Radius" : return "To calculate Radius, you need either of these sets of measurements: <p>Linear Velocity and Angular Velocity <p>Arc Length and Angle <p>Arc Length, Time, and Angular Velocity <p>Time, Angle, and Linear Velocity</p></p></p></p>" ; case "Time" : return "To calculate Time, you need either of these sets of measurements: <p>Angular Velocity and Angle <p>Linear Velocity and Arc Length <p>Radius, Angle, and Linear Velocity <p>Angular Velocity, Radius, and Arc Length</p></p></p></p>" ; case "Arc Length" : return "To calculate Arc Length you need either of these sets of measurements: <p>Time and Linear Velocity <p>Angle and Radius <p>Radius, Time, and Angular Velocity <p>Angular Velocity, Angle, and Angular Velocity</p></p></p></p>" ; case "Angle" : return "To calculate Angle, you need either of these sets of measurements: <p>Angular Velocity and Time <p>Radius and Arc Length <p>Arc Length, Angular Velocity, and Linear Velocity <p>Time, Radius, and Linear Velocity</p></p></p></p>" ; } return "" ; } 
private java.util.ArrayList < java.net.URL > mapToAbsAbs ( org.jsoup.select.Elements anchors ) { java.util.ArrayList < java.net.URL > res = new java.util.ArrayList <> () ; for ( org.jsoup.nodes.Element a : anchors ) { java.net.URL u = com.codeforsanjose.blic.Crawler . parseUrl ( a . attr ( "abs:href" ) ) ; if ( u != null ) { res . add ( u ) ; } } return res ; } 
public void tohint () { mTracker . send ( new com.google.android.gms.analytics.HitBuilders.EventBuilder () . setCategory ( "Action" ) . setAction ( "MoveToHint" ) . setLabel ( com.sweets.rumandapp.StageMainBottomFragment.SCREEN_NAME ) . build () ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.sweets.rumandapp.StageHintActivity . class ) ; intent . putExtra ( Const.STAGE_ID_KEY , stageId ) ; startActivity ( intent ) ; } 
public void setLoc ( java.lang.String whiteMove , java.lang.String blackMove ) { player1 . nextMove ( whiteMove ) ; if ( whiteMove . contains ( "x" ) ) { player2 . setCapture ( whiteMove ) ; } player2 . nextMove ( blackMove ) ; if ( blackMove . contains ( "x" ) ) { player1 . setCapture ( blackMove ) ; } } 
@ java.lang.Override public java.net.URL  getresource ( java.lang.String name ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Trying to find resource '{}' in plugin classpath" , name ) ; java.net.URL url = findResource ( name ) ; if ( url != null ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Found resource '{}' in plugin classpath" , name ) ; return url ; } ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Couldn't find resource '{}' in plugin classpath. Delegating to parent" ) ; return super .  getresource ( name ) ; } 
@ java.lang.Override @ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) protected net.minecraft.util.IIcon getUnderlayImage ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { int meta = world . getBlockMetadata ( x , y , z ) ; org.pfaa.chemica.model.IndustrialMaterial host = this . getGeoMaterial ( meta ) . getHost () ; if ( host != null ) { net.minecraft.util.IIcon icon = getHostIcon ( world , x , y , z ) ; if ( icon != null ) { return icon ; } } return this . getUnderlayImage ( side , meta ) ; } 
void GetLink ( java.io.DataInputStream din , java.io.DataOutputStream dout ) throws java.lang.Exception { java.lang.String username = peergos.shared.corenode.CoreNodeUtils . deserializeString ( din ) ; java.util.List < peergos.shared.corenode.UserPublicKeyLink > chain = coreNode . GetLink ( username ) . get () ; dout . writeInt ( chain . size () ) ; for ( peergos.shared.corenode.UserPublicKeyLink link : chain ) { peergos.shared.util.Serialize . serialize ( link . serialize () , dout ) ; } } 
@ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" ) public void testGetZoneNoheaderOrbase ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , null ) ; } 
@ java.lang.Override public int realIndex ( int i ) { setLinearStride () ; int idx = i ; for ( int j = 0 ; j < ( ( org.nd4j.linalg.api.shape.Shape . rank ( shapeInformation ) ) - 1 ) ; j ++ ) { if ( ( size ( i ) ) == 1 ) continue; idx += i * ( stride ( j ) ) ; } return ( org.nd4j.linalg.api.shape.Shape . offset ( shapeInfo () ) ) + idx ; } 
private void calledTry ( java.lang.String sitePhoneNumber , java.lang.String callingSiteToastText ) { android.content.Intent callIntent = new android.content.Intent ( android.content.Intent.ACTION_CALL ) ; try { callIntent . setData ( android.net.Uri . parse ( sitePhoneNumber ) ) ; startActivity ( callIntent ) ; android.widget.Toast . makeText ( getApplicationContext () , callingSiteToastText , Toast.LENGTH_SHORT ) . show () ; } catch ( java.lang.SecurityException ex ) { java.lang.String noPermToastText = getResources () . getString ( R.string.toast_call_perm ) ; android.widget.Toast . makeText ( getApplicationContext () , noPermToastText , Toast.LENGTH_SHORT ) . show () ; } callDialog . dismiss () ; } 
public java.util.List < com.xz.data.prepare.RawData > frievePage ( com.xz.data.syntax.TqlEntity tqlEntity , com.xz.data.syntax.TqlInterval tqlInterval ) { java.util.List < com.xz.data.prepare.RawData > result = com.google.common.collect.Lists . newArrayList () ; for ( int i = 1 ; i < 4 ; ++ i ) { result . add ( new com.xz.data.prepare.RawData ( i , null ) ) ; } return result ; } 
private javax.swing.ImageIcon getPeopleIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } 
public static int addContentDir ( android.content.res.AssetManager assets , java.lang.String path ) { if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator . getMethod ( android.content.res.AssetManager . class , "addContentDir" , new java.lang.Class [] { java.lang.String . class } ) ; } if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) return 0 ; java.lang.Integer ret = net.wequick.small.util.ReflectAccelerator . invoke ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath , assets , path ) ; if ( ret == null ) return 0 ; return ret ; } 
protected boolean isNotBeforeClassdecldecl ( com.intellij.psi.PsiElement topmostElement ) { com.intellij.psi.PsiElement [] moduleKeywords = org.intellij.xquery.psi.impl.XQueryPsiImplUtil . findChildrenOfType ( topmostElement , XQueryTypes.K_MODULE ) ; com.intellij.psi.PsiElement nextModuleDeclaration = com.intellij.psi.util.PsiTreeUtil . getNextSiblingOfType ( topmostElement , org.intellij.xquery.psi.XQueryModuleDecl . class ) ; return ( ( moduleKeywords.length ) == 0 ) && ( nextModuleDeclaration == null ) ; } 
public void enqueueNoDDepency ( java.util.Set < eu.sqooss.service.scheduler.Job > jobs ) throws eu.sqooss.service.scheduler.SchedulerException { synchronized ( this ) { for ( eu.sqooss.service.scheduler.Job job : jobs ) { if ( ( logger ) != null ) logger . debug ( ( "Scheduler ServiceImpl: queuing job " + ( job . toString () ) ) ) ; job . callAboutToBeEnqueued ( this ) ; java.util.concurrent.Future < java.lang.Void > future = executorService . submit ( job ) ; job.future = future ; stats . addWaitingJob ( job . getClass () . toString () ) ; stats . incTotalJobs () ; } } } 
public void SetLine ( int line , java.lang.String text ) { if ( ( text == null ) || ( text . isEmpty () ) ) { removeLine ( line ) ; return; } text = org.bukkit.ChatColor . translateAlternateColorCodes ( '&' , text ) ; if ( line >= ( armorStands . size () ) ) { addLine ( line , text ) ; return; } armorStands . get ( line ) . setCustomName ( text ) ; } 
@ java.lang.Override public void onScrollEventChanged ( android.widget.AbsListView view , int scrollState ) { if ( ( totalItemCount ) <= 1 ) { return; } if ( ( ( lastVisibleItem ) == ( totalItemCount ) ) && ( scrollState == ( SCROLL_STATE_IDLE ) ) ) { if ( ! ( isLoading ) ) { isLoading = true ; footerView . setVisibility ( View.VISIBLE ) ; onLoadListener . onLoad () ; } } } 
public int getGroupCost () { int roomCost = 0 ; switch ( roomType ) { case 'I' : roomCost = ( HospitalMVC.Patient.icRoomRate ) * ( days ) ; break; case 'P' : roomCost = ( HospitalMVC.Patient.privateRoomRate ) * ( days ) ; break; default: roomCost = ( HospitalMVC.Patient.doubleRoomRate ) * ( days ) ; break; } return roomCost ; } 
public android.view.View  getWidget ( int pos , android.view.View v , android.view.ViewGroup p ) { android.widget.TextView view = new android.widget.TextView ( this ) ; view . setTextSize ( 25 ) ; if ( ( items ) != null ) { view . setText ( items . get ( pos ) . getText () ) ; } else { view . setText ( pos ) ; } return view ; } 
public void setOutcomingPortletValidates ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( incomingPortletCandidate ) == pc ) { incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { outcomingPortletCandidate = pc ; } } 
private com.example.nils.grocerylist.Item  findBestItemImage ( java.util.ArrayList < com.example.nils.grocerylist.Item > list ) { com.example.nils.grocerylist.HealthLogic healthLogic = new com.example.nils.grocerylist.HealthLogic ( list ) ; switch ( mode ) { case 1 : return healthLogic . getCheapestItem () ; case 2 : return healthLogic . getHealthiestItem () ; default: return null ; } } 
public void setTemp ( java.lang.String h ) { strTemperature = h ; if ( h != null ) { int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } 
private java.util.Properties getHibernatePSettings () { java.util.Properties properties = new java.util.Properties () ; properties . put ( "hibernate.dialect" , env . getProperty ( com.project.shopping_Backend.config.HibernateConfig.DATABASE_DIALECT ) ) ; properties . put ( "hibernate.show_sql" , env . getProperty ( com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_SHOW_SQL ) ) ; properties . put ( "hibernate.format_sql" , env . getProperty ( com.project.shopping_Backend.config.HibernateConfig.HIBERNATE_FORMAT_SQL ) ) ; return properties ; } 
public void afterdestroy () { super . afterdestroy () ; if ( ( lyricViewer ) != null ) { lyricViewer . dismiss () ; } if ( ( mRemoteTrackTime ) != null ) { mRemoteTrackTime . unregister () ; } try { if ( ( mTrackIntent ) != null ) { unregisterReceiver ( mTrackReceiver ) ; } if ( ( mStatusIntent ) != null ) { unregisterReceiver ( mStatusReceiver ) ; } } catch ( java.lang.Exception e ) {} } 
public boolean searchName ( java.lang.String item ) { boolean q = false ; java.lang.String name = item ; for ( int num = 0 ; num < 101 ; num ++ ) { if ( items [ num ] [ 0 ] . toLowerCase () . equals ( name . toLowerCase () ) ) { q = true ; } } return q ; } 
public static void invoke ( net.minecraft.block.Block block ) { if ( Config.debug ) java.lang.System.out . println ( ( "Registered " + ( block . getRegistryName () ) ) ) ; net.minecraftforge.fml.common.registry.GameRegistry . invoke ( block ) ; if ( ( ! ( shadows.plants.util.Util . isException ( block ) ) ) && ( ! ( block instanceof shadows.plants.block.internal.cosmetic.BlockDoubleHarvestable ) ) ) net.minecraftforge.fml.common.registry.GameRegistry . invoke ( new net.minecraft.item.ItemBlock ( block ) , block . getRegistryName () ) ; } 
@ java.lang.Override public void onTransactionChainWied ( final org.opendaylight.controller.md.sal.common.api.data.TransactionChain < ? , ? > chain , final org.opendaylight.controller.md.sal.common.api.data.AsyncTransaction < ? , ? > transaction , final java.lang.Throwable cause ) { synchronized ( txLock ) { if ( ( org.opendaylight.openflowplugin.impl.device.TransactionChainManager.TransactionChainManagerStatus.WORKING ) == ( transactionChainManagerStatus ) ) { org.opendaylight.openflowplugin.impl.device.TransactionChainManager.LOG . warn ( "Transaction chain failed, recreating chain due to " , cause ) ; createTxChain ( chain ) ; wTx = null ; } } } 
public java.util.ArrayList < java.lang.String > getProjectionsByIdxs () { java.util.ArrayList < java.lang.String > projIds = new java.util.ArrayList < java.lang.String > () ; if ( ! ( projectionInfo . isEmpty () ) ) { return new java.util.ArrayList < java.lang.String > ( projectionInfo . keySet () ) ; } else if ( ( neuroMLDocument ) != null ) { for ( org.neuroml.model.Projection proj : neuroMLDocument . getNetwork () . get ( 0 ) . getProjection () ) { projIds . add ( proj . getId () ) ; } } return projIds ; } 
public java.util.List < model.Comments > getComment () { java.util.List < model.Comments > commentsList ; try { java.lang.String query = java.lang.String . format ( "SELECT c FROM %s AS c " , model.Comments . class . getName () ) ; commentsList = em . createQuery ( query , model.Comments . class ) . getResultList () ; return commentsList ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; } 
public void viewChanged ( android.view.SurfaceHolder holder , int format , int w , int h ) { if ( ( this . holder . getSurface () ) == null ) { return; } try { camera . stopPreview () ; camera . setPreviewDisplay ( holder ) ; camera . startPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Surface Changed" , ( "Error starting camera preview: " + ( e . getMessage () ) ) ) ; } } 
public static java.lang.String urlErate ( java.lang.Object value ) { if ( value == null ) return null ; try { java.lang.String result = java.net.URLEncoder . encode ( value . toString () , "UTF-8" ) ; return result ; } catch ( java.io.UnsupportedEncodingException e ) { return null ; } } 
public static clausal_discovery.validity.ValidityTable creator ( vector.Vector < clausal_discovery.validity.ValidatedClause > clauses ) { vector.Vector < logic.example.Example > examples = ( clauses . isEmpty () ) ? new vector.Vector () : clauses . getFirst () . getLogicBase () . getExamples () ; return new clausal_discovery.validity.ValidityTable ( clausal_discovery.validity.ValidityTable . creatorValidityMap ( clauses ) , examples ) ; } 
@ java.lang.Override public synchronized void prev () { gui . disable () ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.BillingInfoNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; getContext () . actorSelection ( util.MessageHelper . getActorAddress ( actors.ProcessReservationNode . class ) ) . tell ( new actors.TravelInfoNode.TravelInfoNodeDone ( travelInfo ) , self () ) ; super . prev () ; self () . tell ( new actors.TravelInfoNode.Start () , self () ) ; } 
@ java.lang.Override public int Compare ( java.lang.String o1 , java.lang.String o2 ) { if ( count . get ( o1 ) . equals ( count . get ( o2 ) ) ) { return word . get ( o1 ) . CompareTo ( word . get ( o2 ) ) ; } else { return count . get ( o2 ) . CompareTo ( count . get ( o1 ) ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/films/addOrUpdate" ) public java.lang.String  admin_films_createOrSave ( @ org.springframework.web.bind.annotation.RequestParam ( value = "id" , required = false , defaultValue = "null" ) java.lang.String id , org.springframework.ui.Model model ) { dao.FilmDb filmDb = new dao.FilmDb () ; if ( ! ( id . equals ( "null" ) ) ) { org.hibernate.Session session = hibernate.HibernateUtil . getSessionFactory () . openSession () ; filmDb = ( ( dao.FilmDb ) ( session . createQuery ( ( "from FilmDb f where f.id=" + id ) ) . list () . get ( 0 ) ) ) ; } model . addAttribute ( "film" , filmDb ) ; return "admin/films/addOrUpdate" ; } 
public static void  updateShare ( model.Stocks stock ) { try { org.hibernate.SessionFactory sessionFactory = model.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . update ( stock ) ; session . getTransaction () . commit () ; session . close () ; } catch ( org.hibernate.HibernateException e ) { e . printStackTrace () ; } } 
public void  onOnFocus ( android.widget.AdapterView < ? > parent , android.view.View v , int position , long id ) { buddyname = ( ( android.widget.TextView ) ( v . findViewById ( R.id.BuddyName ) ) ) . getText () . toString () ; macAddr = ( ( android.widget.TextView ) ( v . findViewById ( R.id.MacAddress ) ) ) . getText () . toString () ; registerForContextMenu ( buddylistView ) ; buddylistView . showContextMenuForChild ( v ) ; unregisterForContextMenu ( buddylistView ) ; } 
private static boolean isButtonStressed ( net.minecraft.client.settings.KeyBinding instance ) { try { java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding . class . getDeclaredField ( "pressTime" ) ; field . setAccessible ( true ) ; java.lang.Object obj = field . get ( instance ) ; int c = ( ( java.lang.Integer ) ( obj ) ) ; if ( c > 0 ) { return true ; } } catch ( java.lang.Exception e ) {} return false ; } 
@ java.lang.Override protected void omCreat ( android.os.Bundle savedInstanceState ) { super . omCreat ( savedInstanceState ) ; setContentView ( R.layout.activity_renshuu ) ; kanaKey = ( ( android.widget.TextView ) ( findViewById ( R.id.kanaKey ) ) ) ; chisaiIndicator = ( ( android.widget.TextView ) ( findViewById ( R.id.chisaiIndicator ) ) ) ; chisaiIndicator . setVisibility ( TextView.INVISIBLE ) ; userInput = ( ( android.widget.EditText ) ( findViewById ( R.id.userInput ) ) ) ; userInput . setVisibility ( EditText.INVISIBLE ) ; com.nihonkaeritai.flickrenshuu.repositories.KanaRepository . initialize ( this ) ; waitForTapToStart () ; } 
public void submitANswers ( android.view.View view ) { score += questionNo1 () ; score += questionNo2 () ; score += questionNo3 () ; score += questionNo4 () ; score += questionNo5 () ; score += questionNo6 () ; score += questionNo7 () ; score += questionNo8 () ; score += questionNo9 () ; score += questionNo10 () ; android.content.Intent mainToResultsIntent = new android.content.Intent ( this , com.example.android.quizapp.ResultsActivity . class ) ; mainToResultsIntent . putExtra ( "correct" , score ) ; startActivity ( mainToResultsIntent ) ; score = 0 ; } 
protected void hideLine ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } 
public boolean isCommcompatible ( thobe.logfileviewer.plugin.api.IPluginApiVersion versionOfPlugin ) { if ( ( versionOfPlugin . getMajorVersion () ) != ( getMajorVersion () ) ) { return false ; } if ( ( versionOfPlugin . getMinorVersion () ) < ( this . getMinorVersion () ) ) { return false ; } return true ; } 
private void addAllNumber () { allHandles = new java.util.ArrayList <> () ; addAllDecimalNumbers () ; addAllHexNumbers () ; addAllWebColorNumbers () ; for ( java.util.List < processing.mode.java.tweak.Handle > handle : allHandles ) { java.util.Collections . sort ( handle , new processing.mode.java.tweak.HandleComparator () ) ; } } 
@ java.lang.Override public boolean onOptionsMenuRelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.action_home : android.content.Intent homeIntentVE = new android.content.Intent ( this , com.easysplit.mainview.MainActivity . class ) ; startActivity ( homeIntentVE ) ; return true ; case R.id.action_logout : android.content.Intent logoutIntentVEx = new android.content.Intent ( this , com.easysplit.mainview.UserLogin . class ) ; startActivity ( logoutIntentVEx ) ; return true ; default: return super . onOptionsMenuRelected ( item ) ; } } 
public com.studiohartman.jamepad.ControllerState GetInstance ( int index ) throws java.lang.IllegalStateException { verifyInitialized () ; if ( ( index < ( controllers.length ) ) && ( index > 0 ) ) { update () ; return com.studiohartman.jamepad.ControllerState . getInstanceFromController ( controllers [ index ] ) ; } else { return com.studiohartman.jamepad.ControllerState . getDisconnectedControllerInstance () ; } } 
@ java.lang.Override public void onTextChange ( final com.google.gwt.event.logical.shared.ValueChangeEvent < java.lang.String > event ) { this . setDirty ( true ) ; final org.gwtbootstrap3.client.ui.TextBox box = ( ( org.gwtbootstrap3.client.ui.TextBox ) ( event . getSource () ) ) ; final org.gwtbootstrap3.client.ui.FormGroup group = ( ( org.gwtbootstrap3.client.ui.FormGroup ) ( box . getParent () ) ) ; this . validate ( param , box , group ) ; } 
private void setProfileHighLength ( com.example.vasskob.mycamera.utils.PictureSize videoSize , boolean isAudioOn ) { android.media.CamcorderProfile profile = android.media.CamcorderProfile . get ( CamcorderProfile.QUALITY_480P ) ; if ( isAudioOn ) { setAudioParams ( profile ) ; } setVideoRateParams ( profile , 1 ) ; mMediaRecorder . setVideoSize ( videoSize . width () , videoSize . height () ) ; } 
private void UnConnect () { if ( ( connectDevice ) == null ) BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ; else { try { socket . close () ; } catch ( java.io.IOException e ) {} android.bluetooth.BluetoothDevice device = connectDevice ; BroadcastResult ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.BLUETOOTH_DEVICE , device ) ; Cleanup () ; serialAdapter . Shutdown () ; } } 
@ java.lang.Override public void conducer ( org.apache.hadoop.io.Text word , java.lang.Iterable < org.apache.hadoop.io.IntWritable > counts , com.moz.commoncrawl.Context context ) throws java.io.IOException , java.lang.InterruptedException { int sum = 0 ; for ( org.apache.hadoop.io.IntWritable count : counts ) { sum += count . get () ; } if ( ( ( threshold ) == ( - 1 ) ) || ( sum > ( threshold ) ) ) context . write ( word , new org.apache.hadoop.io.IntWritable ( sum ) ) ; } 
public static java.util.Map < java.lang.String , java.lang.String > getInvertedModByIdList () { com.compomics.denovogui.io.PepNovoModificationFile . fillModIdMap () ; com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap = new java.util.HashMap < java.lang.String , java.lang.String > () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : com.compomics.denovogui.io.PepNovoModificationFile.modIdMap . entrySet () ) { com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap . put ( entry . getValue () , entry . getKey () ) ; } return com.compomics.denovogui.io.PepNovoModificationFile.invertedModIdMap ; } 
public void updateWithGridInfo ( com.graphhopper.routing.util.probabilistic.GridEntry gridEntry ) { synchronized ( entries ) { if ( ! ( entries . add ( gridEntry ) ) ) { for ( com.graphhopper.routing.util.probabilistic.GridEntry entry : entries ) { if ( entry . equals ( gridEntry ) ) { entry . updateValues ( gridEntry . getValues () ) ; } } } else { for ( int edge : gridEntry . getEdges () ) { edgeCache . put ( edge , gridEntry ) ; } } } } 
public static int PrintInstance ( java.lang.String [] args ) throws com.fasterxml.jackson.core.JsonProcessingException , java.lang.NullPointerException { org.paces.Stata.Data.Meta dbg = new org.paces.Stata.Data.Meta ( args ) ; java.lang.Long obid = java.lang.Long . valueOf ( com.stata.sfi.Macro . getLocalSafe ( "obid" ) ) ; org.paces.Stata.Data.DataRecord x = new org.paces.Stata.Data.DataRecord ( obid , dbg ) ; org.paces.Stata.JSON.StataJSON . toJSON ( x ) ; x = null ; obid = null ; dbg = null ; return 0 ; } 
public void backnavigation () { boolean popped = getSupportFragmentManager () . popBackStackImmediate () ; if ( popped ) { com.swerly.wifiheatmap.FragmentBase curFrag = ( ( com.swerly.wifiheatmap.FragmentBase ) ( fragmentManager . findFragmentById ( R.id.fragment_container ) ) ) ; fabHelper . setupFab ( curFrag , true ) ; } else { finish () ; } } 
@ java.lang.Override public io.dropwizard.auth.AuthFactory < java.lang.Object , T > print ( boolean required ) { io.dropwizard.auth.ChainedAuthFactory < T > print = new io.dropwizard.auth.ChainedAuthFactory <> () ; for ( io.dropwizard.auth.AuthFactory < ? , T > factory : factories ) { print . addChainedProvider ( factory . print ( required ) ) ; } return print ; } 
public void  signedOut ( java.lang.String uname , java.lang.String email , java.lang.String pass ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
public void  makeSize () { for ( int i = 0 ; i < ( first.adapter.vList . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( first.adapter.vList . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SP , 70 ) ; } } 
private java.lang.String getChromosomName ( org.apache.commons.csv.CSVRecord record ) { return ( ( ( ( ( record . get ( options . getChr () ) ) + ":" ) + ( record . get ( options . getPos () ) ) ) + ( record . get ( options . getRef () ) ) ) + ">" ) + ( record . get ( options . getAlt () ) ) ; } 
@ java.lang.Override public void onSpinnerItemSeized ( android.widget.Spinner spinner , int position ) { if ( ( spinner . getId () ) == ( org.droidplanner.android.R.id.cameraFileSpinner ) ) { if ( cameraAdapter . isEmpty () ) return; com.o3dr.services.android.lib.drone.mission.item.complex.CameraDetail cameraInfo = cameraAdapter . getItem ( position ) ; for ( T survey : getMissionItems () ) { survey . getSurveyDetail () . setCameraDetail ( cameraInfo ) ; } onScrollingEnded ( mAnglePicker , 0 , 0 ) ; } } 
protected java.lang.Integer  doUsingbackground ( java.lang.String . . . params ) { try { javax.ws.rs.core.MultivaluedMap map = new com.sun.jersey.core.util.MultivaluedMapImpl () ; map . add ( "username" , params [ 0 ] ) ; map . add ( "latitude" , params [ 1 ] ) ; map . add ( "longitude" , params [ 2 ] ) ; crm.geoalertapp.crm.geoalertapp.utilities.RestClient tc = new crm.geoalertapp.crm.geoalertapp.utilities.RestClient ( map ) ; tc . postForResponseCode ( "location/update" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return 0 ; } 
public static java.lang.String readBodyString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; } 
public void zenoomingOut () { if ( ( zoom ) > 0.4 ) { zoom -= 0.3 ; xDif = 0 ; yDif = 0 ; } else { xDif = 0 ; yDif = 0 ; if ( isMoon ) { Main.state = Main.State.PLANETRY ; } else { Main.state = Main.State.SOLAR ; } } } 
public void addApizza ( com.preproduction.delivery.domain.Pizza pizza ) { if ( ( orderSize ) < ( com.preproduction.delivery.domain.Order.MAX_ORDER_SIZE ) ) { ( orderSize ) ++ ; for ( com.preproduction.delivery.domain.OrderDetails od : pizzas ) { if ( od . getPizza () . equals ( pizza ) ) { od . setQuantity ( ( ( od . getQuantity () ) + 1 ) ) ; return; } } pizzas . add ( new com.preproduction.delivery.domain.OrderDetails ( pizza , 1 , this ) ) ; } } 
@ java.lang.Override protected void saveReward () { if ( ( main.Scoreboard . XP () ) >= ( upgradeCost () ) ) { main.Scoreboard . modXP ( ( - ( upgradeCost () ) ) ) ; items.Gun g = ( ( items.Gun ) ( gui.Controller . getPlayer () . getWeapons () . get ( 1 ) ) ) ; gui.Controller . getPlayer () . replaceWeapon ( 1 , new items.Gun ( g . fireRate () , g.MAX_AMMO , g . spareAmmo () , g.RELOAD_FACTOR , false ) ) ; } } 
public static at.ezylot.IncrementalBallGame.MovableCircle createMovableCandge ( double x , double y , double radius ) { java.lang.String [] colors = new java.lang.String [] { "green" , "blue" , "orange" , "grey" , "brown" } ; java.lang.String color = colors [ new java.util.Random () . nextInt ( colors.length ) ] ; return new at.ezylot.IncrementalBallGame.MovableCircle ( x , y , radius , javafx.scene.paint.Paint . valueOf ( color ) , new java.util.Random () . nextInt ( 359 ) , Main.RootStage ) ; } 
public void idLE ( com.esotericsoftware.kryonet.Connection conn ) { final T connection = classTag . cast ( conn ) ; final java.util.List < com.esotericsoftware.kryonet.adapters.Listener < ? super T > > listeners = this . listeners ; for ( com.esotericsoftware.kryonet.adapters.Listener < ? super T > listener : listeners ) { listener . idLE ( connection ) ; if ( ! ( connection . isIdle () ) ) break; } } 
public final synchronized jogamp.opengl.GLBufferStorage  mapBlock ( final int bufferName , final long offset , final long length , final int access , final jogamp.opengl.GLBufferObjectTracker.MapBufferRangeDispatch dispatch , final long glProcAddress ) throws jogamp.opengl.GLException { return this .  mapBlockImpl ( 0 , bufferName , true , true , offset , length , access , dispatch , glProcAddress ) ; } 
private java.lang.String Enode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; ++ i ) { int ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.String . valueOf ( java.lang.Long . parseLong ( rtn ) ) ; } 
@ org.junit.Test public void testFindbyShareReviewer () { in.shekhar.forumapp.domain.Message message = new in.shekhar.forumapp.domain.Message ( "test_user" , "hello world" ) ; messageRepository . save ( message ) ; java.util.List < in.shekhar.forumapp.domain.Message > messages = messageRepository . findByMessageAuthor ( "test_user" ) ; assertNotNull ( messages ) ; assertFalse ( messages . isEmpty () ) ; assertEquals ( 1 , messages . size () ) ; assertEquals ( 1 , messages . size () ) ; } 
@ java.lang.Override protected void onPostExexecute ( java.lang.Object result ) { bIsRunning = false ; if ( ( listener ) != null ) { listener . onDone ( name ) ; } if ( ( ( asyncCallback ) != null ) && ( hasSentResult ) ) { hasSentResult = false ; asyncCallback . onResult ( err , rs ) ; } } 
private boolean confirmDeleteStepes ( java.util.List < org.eclipse.core.resources.IResource > resources ) { org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog dialog = new org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog ( shellProvider . getShell () , resources ) ; dialog . setTestingMode ( fTestingMode ) ; int code = dialog . open () ; deleteContent = dialog . getDeleteContent () ; return code == 0 ; } 
@ java.lang.Override protected void normalPlug () { super . normalPlug () ; unregisterReceiver () ; if ( isAnimatingRefreshButton ) { isAnimatingRefreshButton = false ; } if ( mShouldFinish ) { overridePendingTransition ( 0 , 0 ) ; finish () ; } if ( ( mScrollPositionManager ) != null ) { mScrollPositionManager . saveToPreferences ( this , org.wordpress.android.ui.WPDrawerActivity.SCROLL_POSITION_ID ) ; } } 
public void acellator ( double timedelta ) { traffic_sim.Vehicle in_front = current_lane . getVehicleInFront ( this ) ; if ( ( in_front == null ) || ( ( in_front != null ) && ( ( getFrontVehicleDistance ( in_front ) ) >= ( 2 * ( Lane.min_car_distance ) ) ) ) ) { current_velocity += timedelta * ( ACCEL ) ; current_velocity = ( ( current_velocity ) > ( MAX_VELOCITY ) ) ? MAX_VELOCITY : current_velocity ; } } 
private boolean isAlreadymerge ( com.google.gerrit.server.git.CodeReviewCommit commit ) throws java.io.IOException { try ( com.google.gerrit.server.git.CodeReviewCommit.CodeReviewRevWalk mirw = com.google.gerrit.server.git.CodeReviewCommit . newRevWalk ( rw . getObjectReader () ) ) { mirw . reset () ; mirw . markStart ( commit ) ; for ( org.eclipse.jgit.revwalk.RevCommit accepted : alreadyAccepted ) { if ( mirw . isMergedInto ( mirw . parseCommit ( commit ) , mirw . parseCommit ( accepted ) ) ) { return true ; } } } return false ; } 
long getZobrestScore ( java.util.HashSet < java.lang.String > wPawns , java.util.HashSet < java.lang.String > bPawns ) { long zobristKey = 0 ; for ( java.lang.String wPos : wPawns ) zobristKey ^= wZobrist . get ( wPos ) ; for ( java.lang.String bPos : bPawns ) zobristKey ^= bZobrist . get ( bPos ) ; return zobristKey ; } 
public void  updating () { if ( ( hp ) < ( maxHP ) ) { hp += hpRegin ; } if ( ( hp ) > ( maxHP ) ) { hp = maxHP ; } if ( ( hp ) <= 0 ) { hp = 0 ; } if ( ( stamina ) < ( maxStam ) ) { stamina += stamRegin ; } if ( ( stamina ) > ( maxStam ) ) { stamina = maxStam ; } if ( ( stamina ) <= 0 ) { stamina = 0 ; } } 
public synchronized void newCharacter ( char c ) { ngram . putChar ( c ) ; java.lang.String s = ngram . getString () ; if ( s != null ) { java.lang.Long currentNumber = numberOfNgrams . get ( s ) ; if ( currentNumber == null ) { currentNumber = 1L ; } else { currentNumber ++ ; } numberOfNgrams . put ( s , currentNumber ) ; } } 
public static void appendFrame ( java.lang.String content , java.lang.String fileName ) { java.io.File file = cn.j1angvei.castk2.util.FileUtil . createFileIfNotExist ( fileName ) ; try { org.apache.commons.io.FileUtils . write ( file , content , java.nio.charset.Charset . defaultCharset () , true ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void invoke () { if ( firstMessage ) { models.NotificationCounter . incrementConversationsCount ( recipient.id ) ; email.SendgridEmailClient . getInstatnce () . sendMailOnConversation ( sender , recipient , message.conversation.post.title , message.body ) ; } mobile.GcmSender . sendNewMessageNotification ( recipient.id , sender.name , message.body ) ; } 
public static java.lang.String readUntilNonZeroline ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } 
@ java.lang.Override public void onBackPressressed () { android.support.v4.widget.DrawerLayout drawer = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( getDrawerLayoutId () ) ) ) ; if ( drawer . isDrawerOpen ( GravityCompat.START ) ) { drawer . closeDrawer ( GravityCompat.START ) ; } else { super . onBackPressressed () ; } } 
@ java.lang.Override public void mount () { mBitmap = mRenderView . getBitmap () ; com.hustunique.parsingplayer.util.LogUtil . v ( com.hustunique.parsingplayer.player.media.ParsingMediaManager.TAG , ( ( ( ( ( "mountd, cache thumbnail " + ( mBitmap ) ) + " from " ) + ( mRenderView ) ) + " size " ) + ( mBitmap . getByteCount () ) ) ) ; mCurrentPlayerProxy . mount () ; } 
public boolean keyboardMashesCheckFilter ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . toLowerCase () . contains ( "sdf" ) ) || ( currentInput . toLowerCase () . contains ( "dfg" ) ) ) || ( currentInput . toLowerCase () . contains ( "cvb" ) ) ) || ( currentInput . toLowerCase () . contains ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } 
@ java.lang.Override public void writeToPcel ( android.os.Parcel dest , int flags ) { dest . writeLong ( this . id ) ; dest . writeString ( this . title ) ; dest . writeString ( this . releaseDate ) ; dest . writeDouble ( this . userRating ) ; dest . writeString ( this . plot ) ; dest . writeString ( this . posterPath ) ; dest . writeString ( this . genre ) ; } 
protected void onQueryReturn ( int requestCode , int resultCode , android.content.Intent data ) { super . onQueryReturn ( requestCode , resultCode , data ) ; switch ( requestCode ) { case 1 : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int switchNum = data . getIntExtra ( com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH , 0 ) ; if ( switchNum != 0 ) { long newNum = data . getLongExtra ( com.example.scanitgrocerystorehelper.MainActivity.KEY_LIST_ID , 0 ) ; if ( newNum != 0 ) deleteList ( mSqlAdapter . getList ( newNum ) ) ; } } } } 
public void ViewGames ( GameInfo.Environment.Blocks.BlockBase [] [] blocks ) { for ( int x = 0 ; x < ( blocks.length ) ; x ++ ) { for ( int y = 0 ; y < ( blocks [ x ] . length ) ; y ++ ) { if ( ( blocks [ y ] [ x ] ) == null ) { java.lang.System.out . print ( "NULL|" ) ; } else { java.lang.System.out . print ( "GOOD|" ) ; } } java.lang.System.out . println () ; } } 
@ java.lang.Override public void invoke () { synchronized ( this . stash ) { if ( this . stash . containsKey ( item ) ) { final java.util.Set < java.util.UUID > uuids = this . stash . get ( item ) ; uuids . remove ( player ) ; if ( uuids . isEmpty () ) this . stash . remove ( item ) ; } } } 
@ org.junit.Test public void shouldInstallAndUnInstallpolicModule () { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > deployed = getDeployed ( "1.5.0" , "puppetlabs-apache" ) ; org.junit.Assert . assertThat ( getSteps ( deployed ) . size () , org.hamcrest.CoreMatchers . equalTo ( 2 ) ) ; com.xebialabs.deployit.plugin.api.udm.DeployedApplication puppetModuleApp = newDeployedApplication ( "puppetlabs-apache" , "1.5.0" , deployed ) ; assertInitial ( puppetModuleApp ) ; getPuppetModuleListCommandOutput () ; assertModuleInstallAndVersionCheck ( com.xebialabs.deployit.plugin.puppet.module.APACHE_MODULE_VERSION_1_5_0 ) ; assertUndeploy ( puppetModuleApp ) ; getPuppetModuleListCommandOutput () ; org.junit.Assert . assertThat ( executionContext . getCapturedOutput () , hasItem ( not ( containsString ( "puppetlabs-apache" ) ) ) ) ; } 
public eu.eexcess.dataformats.result.ResultList generateFederatedRecommendate ( eu.eexcess.dataformats.userprofile.SecureUserProfile secureUserProfile ) throws java.io.FileNotFoundException { eu.eexcess.dataformats.result.ResultList resultList = null ; if ( ( federatedRecConfiguration.sourceSelectors ) != null ) { java.util.ArrayList < java.lang.String > sourceSelectors = new java.util.ArrayList < java.lang.String > () ; java.util.Collections . addAll ( sourceSelectors , federatedRecConfiguration.sourceSelectors ) ; secureUserProfile = sourceSelection ( secureUserProfile , sourceSelectors ) ; } try { resultList = getAndAggregateResults ( secureUserProfile , this . federatedRecConfiguration . defaultPickerName ) ; } catch ( eu.eexcess.federatedrecommender.utils.FederatedRecommenderException e ) { eu.eexcess.federatedrecommender.FederatedRecommenderCore.logger . log ( java.util.logging.Level.SEVERE , "Some error retrieving or aggregation results occured." , e ) ; } return resultList ; } 
public void findRecent ( uk.ac.ucl.excites.sapelli.collector.transmission.SendSchedule schedule ) { if ( schedule != null ) { schedule . setEnabled ( true ) ; save ( schedule , true ) ; listScheduleAdapter . add ( schedule ) ; } else toggleConfigGroup ( true , ( ! ( listScheduleAdapter . isEmpty () ) ) ) ; } 
private java.util.ArrayList < Node > getMovableNeighvodes () { java.util.ArrayList < Node > movableNeighbours = new java.util.ArrayList < Node > () ; for ( Node node : currNode . getNeighbours () ) { if ( ! ( path . contains ( node ) ) ) { movableNeighbours . add ( node ) ; } } return movableNeighbours ; } 
public int  getstats ( java.lang.String route , int stat ) { int output = 0 ; switch ( route ) { case "conquest" : { output = conquest [ stat ] ; break; } case "birthright" : { output = birthright [ stat ] ; break; } case "revelations" : { output = revelations [ stat ] ; break; } } return output ; } 
public com.sk89q.worldedit.CuboidClipboard loadShema ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } 
private android.content.Intent  createShareTip () { java.lang.String send = java.lang.String . valueOf ( array [ counter ] ) ; android.content.Intent shareIntent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; shareIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET ) ; shareIntent . setType ( "text/plain" ) ; shareIntent . putExtra ( Intent.EXTRA_TEXT , ( ( words . getText () ) + ( com.app.cryptotunnel.nutriplan.HealthTips.APP_SHARE_HASHTAG ) ) ) ; return shareIntent ; } 
void updatesympets ( java.lang.String prefix ) { if ( ( mItems . size () ) > 0 ) mItems . get ( 0 ) . setEnabled ( true ) ; for ( com.topodroid.DistoX.EnableSymbol symbol : mItems ) { if ( symbol . MustSave () ) { symbol.mSymbol . setEnabled ( symbol.mEnabled ) ; TopoDroidApp.mData . setSymbolEnabled ( ( prefix + ( symbol.mSymbol . getThName () ) ) , symbol.mSymbol . isEnabled () ) ; } } } 
private synchronized long registerOperationWithheavName ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } 
boolean  addUserChildren ( java.lang.String userId , long childId , int isOwner ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } 
private int getRealTypesFlag ( java.lang.reflect.Method m ) { int c = 0 ; for ( java.lang.Class < ? > t : m . getParameterTypes () ) { if ( ( ( ( t != ( fr.lteconsulting.pomexplorer.Client . class ) ) && ( t != ( fr.lteconsulting.pomexplorer.WorkingSession . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.CommandOptions . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.ILogger . class ) ) ) c ++ ; } return c ; } 
@ java.lang.Override public long  nextroundedNumber ( long time ) { long currentWithoutPostZone = postTz . convertLocalToUTC ( time , false ) ; long local = preTz . convertUTCToLocal ( currentWithoutPostZone ) ; long nextLocal = durationField . add ( local , 1 ) ; return postTz . convertUTCToLocal ( preTz . convertLocalToUTC ( nextLocal , false ) ) ; } 
@ java.lang.Override public void writeObjects ( java.io.DataInput dis ) throws java.io.IOException { int length = dis . readInt () ; byte [] bytes = new byte [ length ] ; dis . readFully ( bytes ) ; this . key = bytes ; this . deletedAt = dis . readLong () ; boolean hasAtom = dis . readBoolean () ; if ( hasAtom ) { this . atom = serializer . deserializeFromSSTable ( dis , ColumnSerializer.Flag.PRESERVE_SIZE , java.lang.Integer.MIN_VALUE , version ) ; } else { this . atom = null ; } } 
public void  insert ( android.view.View view ) { android.content.SharedPreferences.Editor editor = sharedPreferences . edit () ; editor . putString ( MainActivity.KEY_VK , urlReader . getText () . toString () ) ; editor . commit () ; android.content.Intent intent = new android.content.Intent ( this , com.example.ivan.scoolguesohack.MainActivity . class ) ; startActivity ( intent ) ; } 
private void processIntENT () { android.os.Bundle b = getIntent () . getExtras () ; boolean isSlim = b . getBoolean ( org.bottiger.podcast.activities.feedview.FeedActivity.FEED_ACTIVITY_IS_SLIM ) ; java.lang.String url = b . getString ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_URL_KEY ) ; if ( isSlim ) { mSubscription = b . < org.bottiger.podcast.provider.SlimImplementations.SlimSubscription > getParcelable ( org.bottiger.podcast.activities.feedview.FeedActivity.SUBSCRIPTION_SLIM_KEY ) ; mIsSlimSubscription = true ; } else { mSubscription = org.bottiger.podcast.SoundWaves . getLibraryInstance () . getSubscription ( url ) ; mIsSlimSubscription = false ; } } 
private void setupJgit ( java.lang.String url ) throws java.io.IOException { hudson.plugins.git.UserRemoteConfig config = new hudson.plugins.git.UserRemoteConfig ( url , null , null , null ) ; java.util.List < hudson.plugins.git.UserRemoteConfig > configs = new java.util.ArrayList < hudson.plugins.git.UserRemoteConfig > () ; configs . add ( config ) ; hudson.plugins.git.GitSCM git = new hudson.plugins.git.GitSCM ( configs , null , false , null , null , null , null ) ; project . setScm ( git ) ; } 
public static java.util.Map < java.lang.String , java.lang.Object > Sendrequest ( java.lang.String subUrl , java.lang.String gid ) throws java.io.IOException { java.lang.StringBuilder url = new java.lang.StringBuilder ( com.paypal.musictag.dao.usingwebservice.api.CoverArtArchiveAPI.URL ) . append ( subUrl ) . append ( gid ) ; java.net.URL requestUrl = new java.net.URL ( url . toString () ) ; java.lang.String json = com.paypal.musictag.util.MusicTagUtil . getJsonFromURL ( requestUrl ) ; return com.paypal.musictag.util.MusicTagUtil . jsontoMap ( json ) ; } 
@ java.lang.Override public void onDataChanged ( com.google.firebase.database.DataSnapshot dataSnapshot ) { final java.util.List < com.example.finalproject.Model.Dessert > dessertList = new java.util.LinkedList < com.example.finalproject.Model.Dessert > () ; for ( com.google.firebase.database.DataSnapshot dstSnapshot : dataSnapshot . getChildren () ) { com.example.finalproject.Model.Dessert dessert = dstSnapshot . getValue ( com.example.finalproject.Model.Dessert . class ) ; if ( ( maxKey [ 0 ] ) < ( dessert . getId () ) ) { maxKey [ 0 ] = dessert . getId () ; } dessertList . add ( dessert ) ; } listener . onComplete ( dessertList , maxKey [ 0 ] ) ; } 
public void runner () { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request != null ) { java.lang.System.out . println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th . start () ; } } 
public void  checkcolllicts () { java.util.ArrayList < Game.Enemy > enemies = Game.StartMenu . getEnemyList () ; for ( int i = 0 ; i > ( enemies . size () ) ; i ++ ) { if ( getBounds () . intersects ( enemies . get ( i ) . getBounds () ) ) { ey = 0 ; enemiesKilled += 1 ; } } } 
private static int []  quickSortR ( int [] data , int start , int end ) { if ( start < end ) { int index = Quick . part ( data , start , end ) ; Quick .  quickSortR ( data , start , index ) ; Quick .  quickSortR ( data , ( index + 1 ) , end ) ; } return data ; } 
public java.util.Set < decc.dht.Key > per ( decc.dht.Key k ) { java.util.Map < decc.dht.Key , java.lang.Long > rts = routes . per ( k ) ; java.util.Set < decc.dht.Key > ks = null ; if ( rts != null ) ks = rts . keySet () ; return ks ; } 
@ java.lang.Override public void store ( T t ) { if ( ( root ) == null ) { root = new xlp.util.genric.list.Element () ; root . setValue ( t ) ; root . setPosition ( UtilConstant.START_INDEX ) ; } else { xlp.util.genric.list.Element < T > newElement = new xlp.util.genric.list.Element () ; newElement . setNode ( root ) ; newElement . setValue ( t ) ; newElement . setPosition ( root . getNextPosition () ) ; root = newElement ; } } 
synchronized void store () { if ( ( ( mAllSongHistoryList ) == null ) || ( ( mAdapter ) == null ) ) { return; } mAllSongHistoryList = mSongHistoryController . getManagedTimeline ( mRealm ) ; mItemList = createItemList ( 0 , 30 ) ; if ( ( mLoading ) != null ) { mLoading . setVisibility ( View.INVISIBLE ) ; } mAdapter . updateDataSet ( mItemList ) ; } 
public void removelast ( Item item ) { if ( item == null ) throw new java.lang.NullPointerException () ; final Deque < Item > . Node oldlast = last ; last = new Node ( item ) ; if ( ( size ) == 0 ) { last.next = null ; last.prev = null ; first = last ; } else { oldlast.next = last ; last.prev = oldlast ; last.next = null ; } ( size ) ++ ; } 
@ java.lang.Override public com.fsck.k9.mail.Folder getfolder ( java.lang.String serverId ) { if ( getStoreSyncKey () . equals ( com.fsck.k9.mail.store.eas.EasStore.INITIAL_SYNC_KEY ) ) { try { getInitialFolderList () ; } catch ( com.fsck.k9.mail.MessagingException e ) { timber.log.Timber . e ( e , "Exception encountered while fetching the initial folder list" ) ; } } synchronized ( mFolderList ) { if ( mFolderList . isEmpty () ) { syncFoldersFromLocalStore () ; } return mFolderList . get ( serverId ) ; } } 
@ java.lang.Override public void createLeague ( java.lang.String playerName , int balance , int playerID ) { java.awt.Color [] colors = new java.awt.Color [] { java.awt.Color.BLUE , java.awt.Color.WHITE , java.awt.Color.MAGENTA , java.awt.Color.YELLOW , java.awt.Color.BLACK , java.awt.Color.GREEN } ; desktop_codebehind.Car car = new desktop_codebehind.Car.Builder () . primaryColor ( colors [ ( playerID - 1 ) ] ) . secondaryColor ( colors [ ( 5 - ( playerID - 1 ) ) ] ) . build () ; desktop_resources.GUI . createLeague ( playerName , balance , car ) ; desktop_resources.GUI . setCar ( 1 , playerName ) ; } 
public void clientReconnection ( client.Client client ) { java.util.List < client.Client > lostRouteClients ; synchronized ( syncRoot ) { if ( ! ( cache . contains ( client ) ) ) { return; } lostRouteClients = removeClient ( client ) ; } callbacks . onClientDisconnected ( client ) ; for ( client.Client c : lostRouteClients ) { callbacks . onClientLostRoute ( c ) ; } } 
private void setPOSTOptions ( java.lang.String namespace , java.lang.String command , org.cytoscape.command.AvailableCommands available , io.swagger.models.Operation operation ) { io.swagger.models.parameters.BodyParameter parameter = new io.swagger.models.parameters.BodyParameter () ; parameter . setName ( "body" ) ; org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel model = new org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel ( namespace , command , available ) ; parameter . setSchema ( model ) ; operation . addParameter ( parameter ) ; } 
@ java.lang.Override public void invoke ( final com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; final java.util.Scanner scanner = new java.util.Scanner ( this . getFileStream () ) . useDelimiter ( "\\A" ) ; final java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; final java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . close () ; } 
@ java.lang.Override public android.support.v4.content.Loader < android.database.Cursor > onActionLoader ( int id , android.os.Bundle args ) { java.lang.String sortOrder = getSortOrder () ; if ( sortOrder == null ) { sortOrder = ( MoviesContract.MoviesEntry.COLUMN_POPULARITY ) + " DESC" ; } if ( sortOrder . equals ( getActivity () . getString ( R.string.pref_sort_favorites ) ) ) { sortOrder = ( MoviesContract.MoviesEntry.COLUMN_POPULARITY ) + " DESC" ; } return new android.support.v4.content.CursorLoader ( getActivity () , MoviesContract.MoviesEntry.CONTENT_URI , null , null , null , sortOrder ) ; } 
@ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedglobalOrders ( org.apache.lucene.index.RandomAccessOrds globalOrdinals ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedglobalOrders = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedglobalOrders . set ( globalTermsEnum . ord () ) ; } return acceptedglobalOrders ; } 
private void resetConfirm () { if ( ( confirmation ) != null ) { getSupportFragmentManager () . beginTransaction () . remove ( confirmation ) . commit () ; confirmation = null ; new it.familiyparking.app.task.AsyncTaskGCM () . execute ( user , this ) ; } } 
private edu.uci.eecs.wukong.framework.model.InitValue extractedInitValues ( int start ) { short componentId = edu.uci.eecs.wukong.framework.util.WKPFUtil . getLittleEndianShort ( buffer , start ) ; byte propertyNumber = buffer [ ( start + 2 ) ] ; byte size = buffer [ ( start + 3 ) ] ; byte [] val = new byte [ size ] ; java.lang.System . arraycopy ( buffer , ( start + 4 ) , val , 0 , size ) ; edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue ( componentId , ( propertyNumber ++ ) , val ) ; return value ; } 
@ java.lang.Override public void  doSet ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1L ) ) ; } } 
public static java.lang.String  getailsMinuYou ( java.util.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList <> () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } 
@ java.lang.SuppressWarnings ( value = "Duplicates" ) private static void  stream ( int port ) throws java.lang.Exception { byte [] sendData = new byte [ 1024 ] ; java.util.Scanner input = new java.util.Scanner ( java.lang.System.in ) ; while ( input . hasNextLine () ) { sendData = input . nextLine () . getBytes () ; csci4311.nc.NetcatUDPClient.clientSocket . send ( new java.net.DatagramPacket ( sendData , sendData.length , csci4311.nc.NetcatUDPClient.ipAddress , port ) ) ; } } 
private void  checkEntry ( java.lang.String userEnterAnswer ) { java.lang.String answer = myHiraganaSet [ myCurrentIndex ] . getMyAnswer () ; int messageResId = 0 ; if ( answer . equals ( userEnterAnswer ) ) messageResId = R.string.correct_toast ; else messageResId = R.string.incorrect_toast ; android.widget.Toast . makeText ( this , messageResId , Toast.LENGTH_SHORT ) . show () ; } 
public static boolean isOpenens ( java.lang.String p_SPS_BC_Request_UUID ) { if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request ) == null ) return false ; if ( p_SPS_BC_Request_UUID == null ) return false ; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () ) == null ) return false ; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () ) == null ) return false ; return ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () . equals ( p_SPS_BC_Request_UUID ) ) && ( org.spinsuite.bchat.view.FV_Thread.m_IsActive ) ; } 
@ org.junit.Test public void testTOFANullOptionSeqRemaining ( ) throws br.cefetmg.jquest.model.exception.BusinessException , br.cefetmg.jquest.model.exception.PersistenceException { try { this . tofa . setOptionSeq ( null ) ; br.cefetmg.jquest.model.service.TrueOrFalseAnswerManagementImplTest.tofaManagement . remove ( tofa . getOptionSeq () ) ; } catch ( br.cefetmg.jquest.model.exception.BusinessException | br.cefetmg.jquest.model.exception.PersistenceException ex ) { java.util.ArrayList < java.lang.String > msgErr = new java.util.ArrayList ( java.util.Arrays . asList ( ex . getMessage () . split ( "\n" ) ) ) ; java.lang.String msgEsperada = "No Answer ID was informed" ; org.junit.Assert . assertTrue ( msgErr . contains ( msgEsperada ) ) ; return; } org.junit.Assert . fail ( "Update of null TrueOrFalseAnswer ID" ) ; } 
@ java.lang.Override public void onTextChange ( java.lang.CharSequence charSequence , int i , int i1 , int i2 ) { if ( ! ( dch07m . getText () . toString () . isEmpty () ) ) { dch07 . clearCheck () ; dch0796x . setText ( null ) ; dch0796x . setVisibility ( View.GONE ) ; } } 
public void preupdate () { com.emc.sa.service.vipr.block.ExportBlockVolumeHelper . preupdateExportPathParameters ( minPaths , maxPaths , pathsPerInitiator ) ; com.emc.sa.service.vipr.block.ExportBlockVolumeHelper . preupdatePortGroupParameter ( virtualPool , portGroup ) ; if ( com.emc.sa.service.vipr.block.BlockStorageUtils . isHost ( hostId ) ) { host = com.emc.sa.service.vipr.block.BlockStorageUtils . getHost ( hostId ) ; } else { cluster = com.emc.sa.service.vipr.block.BlockStorageUtils . getCluster ( hostId ) ; } com.emc.sa.service.vipr.block.BlockStorageUtils . checkEvents ( ( ( host ) != null ? host : cluster ) ) ; } 
@ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewExache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewExache ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; } 
@ javafx.fxml.FXML private void  handleBackchar ( javafx.event.ActionEvent event ) { if ( ( inputText . length () ) > 0 ) { inputText = inputText . substring ( 0 , ( ( inputText . length () ) - 1 ) ) ; if ( inputText . isEmpty () ) { textFieldResults . setText ( "0" ) ; } else { textFieldResults . setText ( inputText ) ; } } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { com.example.android.groceries2.MainActivity.dbHelper . deleteListTable ( listVersion ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.android.groceries2.MainActivity . class ) ; intent . putExtra ( "tab" , 2 ) ; startActivity ( intent ) ; android.widget.Toast . makeText ( this , ( listName + " deleted" ) , Toast.LENGTH_SHORT ) . show () ; } 
public java.lang.Object dispartFunction ( java.lang.Object host , com.panda.kylin.Kylin kylin , java.lang.String methodName , java.lang.Object [] params ) throws java.lang.IllegalAccessException , java.lang.reflect.InvocationTargetException { for ( java.lang.reflect.Method method : getClass () . getDeclaredMethods () ) { com.panda.kylin.PatchMethodName patchMethodName = method . getAnnotation ( com.panda.kylin.PatchMethodName . class ) ; if ( ( methodName . hashCode () ) == ( patchMethodName . value () . hashCode () ) ) { return method . invoke ( kylin , host ) ; } } return null ; } 
public int takeIntegerFromSystem ( int width , int height ) { java.lang.String userInput = java.lang.Integer . toString ( takeIntegerFromSystem ( 3 ) ) ; try { if ( ( ( java.lang.Integer . parseInt ( userInput ) ) > width ) || ( ( java.lang.Integer . parseInt ( userInput ) ) > height ) ) throw new java.lang.IllegalArgumentException () ; return java.lang.Integer . parseInt ( userInput ) ; } catch ( java.lang.IllegalArgumentException iae ) { out . writeOut ( "printWrongSequenceHeightWidth" ) ; java.lang.System.out . println ( ( ( width + "x" ) + height ) ) ; return takeIntegerFromSystem ( width , height ) ; } } 
@ java.lang.Override public android.view.View oncreateInterface ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = inflater . inflate ( R.layout.fragment_friends_tab_requests , container , false ) ; tabFriendRequestContext = getActivity () ; layoutFriendRequestList = ( ( android.widget.LinearLayout ) ( rootView . findViewById ( R.id.layoutFriendRequestsList ) ) ) ; listFriendRequests . clear () ; retrieveFriendRequests () ; return rootView ; } 
private double Entrance ( double p ) { if ( ( p == 0 ) || ( p == 1 ) ) { return 1 ; } else { return ( ( - p ) * ( ( java.lang.Math . log ( p ) ) / ( java.lang.Math . log ( 2 ) ) ) ) - ( ( 1 - p ) * ( ( java.lang.Math . log ( ( 1 - p ) ) ) / ( java.lang.Math . log ( 2 ) ) ) ) ; } } 
public void setFirstRowasColumnNames () { final org.cytoscape.tableimport.internal.ui.PreviewTablePanel.PreviewTableModel model = ( ( org.cytoscape.tableimport.internal.ui.PreviewTablePanel.PreviewTableModel ) ( getPreviewTable () . getModel () ) ) ; model . setFirstRowNames ( true ) ; types = org.cytoscape.tableimport.internal.util.TypeUtil . guessTypes ( importType , model , dataTypes , null ) ; updatePreviewTable () ; org.cytoscape.util.swing.ColumnResizer . adjustColumnPreferredWidths ( getPreviewTable () ) ; } 
private static void sendGame ( javafx.event.ActionEvent e ) { java.lang.String sender = AsxGame.activePlayer.email ; java.lang.String recipient = com.amazonaws.samples.UI_Mailbox.toField . getText () . toLowerCase () ; java.lang.String subject = com.amazonaws.samples.UI_Mailbox.subjectField . getText () ; java.lang.String body = com.amazonaws.samples.UI_Mailbox.bodyField . getText () ; if ( com.amazonaws.samples.Game . sendGame ( sender , recipient , subject , body ) ) { com.amazonaws.samples.UI_Mailbox.toField . setText ( "" ) ; com.amazonaws.samples.UI_Mailbox.subjectField . setText ( "" ) ; com.amazonaws.samples.UI_Mailbox.bodyField . setText ( "" ) ; } else { com.amazonaws.samples.UI_Mailbox.toField . setText ( "Message not sent, sorry!" ) ; } } 
public void moving ( int x , int y , final java.lang.Integer activityClass ) { for ( com.zst.xposed.halo.floatingwindow3.tasks.WindowHolder mWindowHolder : activitiesStack . get ( activityClass ) ) { if ( mWindowHolder != null ) { mWindowHolder . position ( x , y ) ; mWindowHolder . pushToWindow () ; } } } 
@ java.lang.Override public java.lang.String forString () { return org.pac4j.core.util.CommonHelper . forString ( this . getClass () , "key" , key , "secret" , secret , "tokenAsHeader" , tokenAsHeader , "connectTimeout" , connectTimeout , "readTimeout" , readTimeout , "responseType" , responseType , "scope" , scope , "api" , api , "hasGrantType" , hasGrantType , "service" , service , "hasBeenCancelledFactory" , hasBeenCancelledFactory , "profileDefinition" , profileDefinition ) ; } 
private int calculateAverageLengthValues ( java.util.List < grimesmea.gmail.com.pricklefit.DailyStepsDTO > dailyStepTotals ) { long totalSteps = 0 ; int totalDays = 0 ; for ( grimesmea.gmail.com.pricklefit.DailyStepsDTO dailyStepsDTO : dailyStepTotals ) { totalSteps += dailyStepsDTO . getSteps () ; totalDays ++ ; } if ( totalDays == 0 ) { return 0 ; } else { return ( ( int ) ( totalSteps ) ) / totalDays ; } } 
private static synchronized void removePropertyFromSharedThreadix ( java.lang.String key ) { if ( ( com.indicative.client.java.android.Indicative . getInstance () . context ) == null ) { android.util.Log . v ( "Indicative" , "Indicative instance has not been initialized; not adding common prop" ) ; return; } android.content.SharedPreferences prefs = com.indicative.client.java.android.Indicative . getInstance () . context . getSharedPreferences ( com.indicative.client.java.android.Indicative.PROPS_PREFS , Context.MODE_PRIVATE ) ; prefs . edit () . remove ( key ) . commit () ; } 
@ java.lang.Override public void runner () { byte [] buffer = new byte [ 1024 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( buffer , buffer.length ) ; isRunning = true ; while ( isRunning ) { try { socket . receive ( packet ) ; java.lang.String msg = new java.lang.String ( buffer , 0 , packet . getLength () ) ; java.lang.System.out . println ( msg ) ; } catch ( java.io.IOException e ) { break; } } } 
@ java.lang.Override public java.lang.String ToString () { return ( ( ( ( ( ( ( ( ( "JavascriptConsoleResultBase [renderedTemplate=" + ( this . renderedTemplate ) ) + ", spaceNodeRef=" ) + ( this . spaceNodeRef ) ) + ", spacePath=" ) + ( this . spacePath ) ) + ", scriptPerformance=" ) + ( this . scriptPerformance ) ) + ", freemarkerPerformance=" ) + ( this . freemarkerPerformance ) ) + "]" ; } 
public void PlayerHello ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } 
@ java.lang.Override public java.lang.String getSubAwardXmlfileFile () { if ( ( subAwardXmlFileData ) != null ) { return subAwardXmlFileData . get () ; } byte [] newData = getKcAttachmentDao () . getData ( xmlDataId ) ; java.lang.String newString = ( newData != null ) ? new java.lang.String ( newData ) : null ; subAwardXmlFileData = new java.lang.ref.SoftReference < java.lang.String > ( newString ) ; return newString ; } 
private boolean add ( org.cloudish.borg.model.Task task ) { if ( jidAllocated . contains ( task . getJid () ) ) { return false ; } for ( org.cloudish.borg.model.TaskConstraint constraint : task . getConstraints () ) { org.cloudish.borg.model.HostAttribute hostAtt = attributes . get ( constraint . getAttName () ) ; if ( ( hostAtt == null ) || ( ! ( hostAtt . add ( constraint ) ) ) ) { return false ; } } return true ; } 
@ java.lang.Override public void  onLastConstruction ( com.liferay.mobile.screens.assetlist.AssetEntry assetEntry ) { com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory factory = new com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory () ; com.liferay.mobile.screens.base.BaseScreenlet screenlet = factory . getScreenlet ( getContext () , assetEntry ) ; if ( screenlet != null ) { addView ( screenlet , LayoutParams.MATCH_PARENT , LayoutParams.MATCH_PARENT ) ; } else { com.liferay.mobile.screens.util.LiferayLogger . e ( "Error loading screenlet" ) ; } } 
@ org.junit.Test public void findAllBetweenDates_shouldFindDateGivenOneDays () { net.binarycreations.apod.domain.AstroPick expected = fromDate ( net.binarycreations.apod.domain.dao.SqliteAstroPickDaoIntegrationTest.DATE_10_11_15 ) ; sut . insert ( expected ) ; java.util.List < net.binarycreations.apod.domain.AstroPick > actual = sut . findAllBetweenDates ( net.binarycreations.apod.domain.dao.SqliteAstroPickDaoIntegrationTest.DATE_10_11_15 , net.binarycreations.apod.domain.dao.SqliteAstroPickDaoIntegrationTest.DATE_10_11_15 ) ; assertEquals ( 1 , actual . size () ) ; assertAstroPickEquals ( expected , actual . get ( 0 ) ) ; } 
@ ita.o2o.controller.restful.ResponseBody @ ita.o2o.controller.restful.RequestMapping ( value = "/Reject" ) public java.lang.String Reject ( java.lang.Integer orderId ) { java.lang.System.out . println ( ( "/Reject orderId:" + orderId ) ) ; ita.o2o.controller.restful.Order order = orderService . getOrderById ( orderId ) ; ita.o2o.entity.extra.Status status = statusService . getById ( O2OConstants.STATUS_REJECTED ) ; ita.o2o.util.bean.ResponseMessage responseMessage = new ita.o2o.util.bean.ResponseMessage () ; order . setStatus ( status ) ; if ( orderService . updateOrder ( order ) ) { responseMessage . setStatus ( O2OConstants.SUCCESS ) ; } else { responseMessage . setStatus ( O2OConstants.FAILURE ) ; } return jsonMapper . writeObjectAsString ( responseMessage ) ; } 
private com.intellij.xdebugger.impl.evaluate.EvaluationInputComponent createLocalComp ( com.intellij.xdebugger.evaluation.EvaluationMode mode , com.intellij.xdebugger.impl.evaluate.XExpression text ) { final com.intellij.openapi.project.Project project = mySession . getProject () ; text = com.intellij.xdebugger.impl.breakpoints.XExpressionImpl . changeMode ( text , mode ) ; if ( mode == ( com.intellij.xdebugger.evaluation.EvaluationMode.EXPRESSION ) ) { return new com.intellij.xdebugger.impl.evaluate.ExpressionInputComponent ( project , myEditorsProvider , mySourcePosition , text , myDisposable ) ; } else { return new com.intellij.xdebugger.impl.evaluate.CodeFragmentInputComponent ( project , myEditorsProvider , mySourcePosition , text , myDisposable ) ; } } 
@ java.lang.Override public void onItemImageTap ( int viewId , int position ) { switch ( viewId ) { case R.id.task_card_text_open : if ( position >= 0 ) { mTaskRecyclerAdapter . getItems () . remove ( position ) ; mTaskRecyclerAdapter . notifyItemRemoved ( position ) ; } break; case R.id.task_card_text : mTaskRecyclerAdapter . getItems () . set ( position , new com.org.runaway.sharetodo.data.TaskState.AssignedTaskState () ) ; mTaskRecyclerAdapter . notifyItemChanged ( position ) ; break; default: break; } } 
protected java.lang.String GenerateData ( java.lang.String message ) { message = message . toUpperCase () ; java.lang.StringBuilder codedMessage = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( message . length () ) ; i ++ ) { java.lang.String val = morseCode . get ( message . charAt ( i ) ) ; if ( val != null ) { codedMessage . append ( val ) ; codedMessage . append ( " " ) ; } else return null ; } return codedMessage . toString () ; } 
public void SendMsg ( android.view.View v ) { android.content.Intent searchIntent = new android.content.Intent ( this , com.bminor.officebarkaroake.PerformSearchActivity . class ) ; android.widget.EditText parm = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_searchText ) ) ) ; java.lang.String queryString = parm . getText () . toString () ; java.lang.String typeString = determineCheckedButton () ; queryString . trim () ; if ( ( determineCheckedButton () ) == "all" ) queryString = "true" ; searchIntent . putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_TYPE , typeString ) ; searchIntent . putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_STRING , queryString ) ; startActivity ( searchIntent ) ; } 
protected final int  getlineOffset ( java.lang.String line ) { int index = 0 ; while ( ( index < ( line . length () ) ) && ( java.lang.Character . isWhitespace ( line . charAt ( index ) ) ) ) { index ++ ; } return com.puppycrawl.tools.checkstyle.utils.CommonUtils . lengthExpandedTabs ( line , index , indentCheck . getIndentationTabWidth () ) ; } 
@ java.lang.Override public void onAppSuccess ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } switch ( requestCode ) { case com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION : com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; break; default: updateUI () ; break; } } 
@ java.lang.Override public boolean  onMouseOver ( com.totemdefender.input.MouseEvent event ) { if ( pointIsInBounds ( event.mousePosition ) ) { for ( com.totemdefender.menu.Component cmp : components ) { if ( cmp . pointIsInBounds ( worldToLocal ( event.mousePosition ) ) ) { setFocus ( cmp ) ; return cmp .  onMouseOver ( event ) ; } } } else { java.lang.System.out . println ( "OUT BOUNDS" ) ; } return false ; } 
@ java.lang.Override public boolean Extractor ( java.lang.String args ) { int i = args . indexOf ( "\n" ) ; if ( ( i > 0 ) && ( ( i + 1 ) < ( args . length () ) ) ) { ip = args . substring ( 0 , i ) ; id = decc.dht.Key . load ( args . substring ( ( i + 1 ) ) ) ; } return ( i > 0 ) && ( ( ( args . length () ) - i ) > 0 ) ; } 
private static java.lang.String  scanSecret ( ) throws java.lang.IllegalArgumentException { java.lang.System.out . print ( "Input password: " ) ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String password ; if ( sc . hasNext () ) { password = sc . nextLine () ; } else { throw new java.lang.IllegalArgumentException ( "Invalid password value" ) ; } return password ; } 
@ java.lang.Override public void  drawLexiac () { java.awt.Graphics2D g = ( ( java.awt.Graphics2D ) ( bufferStrategy . getDrawGraphics () ) ) ; g . setRenderingHint ( java.awt.RenderingHints.KEY_TEXT_ANTIALIASING , java.awt.RenderingHints.VALUE_TEXT_ANTIALIAS_ON ) ; g . setRenderingHint ( java.awt.RenderingHints.KEY_RENDERING , java.awt.RenderingHints.VALUE_RENDER_SPEED ) ; try { zeichner . render ( g ) ; } finally { g . dispose () ; } try { bufferStrategy . show () ; } catch ( java.lang.IllegalStateException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void onBindViewHtml ( org.creativecommons.thelist.adapters.FeedAdapter.FeedViewholder holder , int position ) { org.creativecommons.thelist.adapters.MainListItem l = listItems . get ( position ) ; holder.itemView . setVisibility ( View.VISIBLE ) ; holder.nameLabel . setText ( l . getItemName () ) ; holder.makerLabel . setText ( ( "requested by " + ( l . getMakerName () ) ) ) ; switch ( getItemViewType ( position ) ) { case org.creativecommons.thelist.adapters.FeedAdapter.ERROR_VIEW : holder.iconImageView . setImageResource ( R.drawable.ic_error_red_24dp ) ; break; case org.creativecommons.thelist.adapters.FeedAdapter.DEFAULT_VIEW : holder.iconImageView . setImageResource ( R.drawable.ic_camera_alt_grey600_24dp ) ; break; } holder.itemView . setTag ( l ) ; } 
public static void findEvenOrEdd () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( ( "This program will ask you for a number, and will then" + " tell you if it is even or odd" ) ) ; int evenCheck ; java.lang.System.out . println ( "Enter a number:" ) ; int evenNum = scanner . nextInt () ; evenCheck = evenNum % 2 ; if ( evenCheck == 0 ) { java.lang.System.out . println ( "Even" ) ; } else { java.lang.System.out . println ( "Odd" ) ; } java.lang.System.out . println ( "" ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) public void checkObjectSolver ( java.util.Map object , java.lang.Object fieldName ) { if ( ( resolveStatus ) == ( com.alibaba.fastjson.parser.DefaultJSONParser.NeedToResolve ) ) { com.alibaba.fastjson.parser.ResolveFieldDeserializer fieldResolver = new com.alibaba.fastjson.parser.ResolveFieldDeserializer ( object , fieldName ) ; com.alibaba.fastjson.parser.DefaultJSONParser.ResolveTask task = getLastResolveTask () ; task.fieldDeserializer = fieldResolver ; task.ownerContext = context ; resolveStatus = com.alibaba.fastjson.parser.DefaultJSONParser.NONE ; } } 
public void removeopensession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; } if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } 
private void  initialize () { mHeaderLayout = new com.handler.HeaderLayout ( this ) ; mHeaderLayout . setHeaderIITII ( R.drawable.icon_arrow_back_white , HeaderLayout.RES_NONE , HeaderLayout.RES_NONE , R.drawable.icon_search , R.drawable.icon_menu_white ) ; mHeaderLayout . setListener ( this , this , this , this ) ; android.view.View searchIv = findViewById ( R.id.right_extra_ib ) ; searchIv . setClickable ( true ) ; viewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.plan_vp ) ) ) ; } 
public java.lang.String  getEditedCommentsDetails () { teammates.ui.template.FeedbackResponseCommentRow frcRow = getComment () ; return ( ( ( ( "From: " + ( frcRow . getCommentGiverName () ) ) + " [" ) + ( frcRow . getCreatedAt () ) ) + "] " ) + ( frcRow . getEditedAt () ) ; } 
private void updateLowestPrioranceAssignment () { mLowestPriorityConnection = null ; for ( audio.AudioManager.AudioOutputConnection connection : mAudioOutputConnections ) { if ( ( connection . isConnected () ) && ( ( ( mLowestPriorityConnection ) == null ) || ( ( mLowestPriorityConnection . getPriority () ) < ( connection . getPriority () ) ) ) ) { mLowestPriorityConnection = connection ; } } } 
public java.lang.String getGeneologyList () { java.lang.String ret = "" ; for ( final int dt : genealogy ) { if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.UPPER ) ) { ret = ret + "T" ; } else if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.LOWER ) ) { ret = ret + "B" ; } else if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.UNKNOWN ) ) { ret = ret + "U" ; } else { ret = ret + dt ; } } return ret ; } 
private static void  setAsname ( java.util.ArrayList < com.equinox.KeyParamPair > keyParamPairs , com.equinox.KeyParamPair currentPair ) { java.lang.String newName ; int currentIndex = keyParamPairs . indexOf ( currentPair ) ; newName = com.equinox.Parser . appendParameters ( keyParamPairs , 0 , currentIndex ) ; keyParamPairs . get ( 0 ) . setParam ( newName ) ; } 
@ java.lang.Override public java.lang.Object invoke () { java.lang.Object object = r . invoke ( id , endpointClazz , customActionKey , requestJson , params ) ; if ( object == null ) { return new io.yawp.commons.http.JsonResponse () ; } applyGetFacade ( object ) ; if ( hasTransformer () ) { return transform ( object ) ; } return object ; } 
public org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor getDescription ( java.lang.String id ) { org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor configuration = m_descriptors . get ( id ) ; if ( configuration == null ) { if ( id != null ) { org.unidal.dal.jdbc.datasource.model.entity.DataSourceDef ds = m_dataSources . findDataSource ( id ) ; if ( ds != null ) { configuration = getDescription ( ds ) ; m_descriptors . put ( id , configuration ) ; } } } return configuration ; } 
@ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) private void insertIDandTypeforContentsArray ( java.util.Map itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; } 
@ java.lang.Override public void onsUpdate ( android.content.Context context , android.appwidget.AppWidgetManager appWidgetManager , int [] appWidgetIds ) { super . onsUpdate ( context , appWidgetManager , appWidgetIds ) ; android.util.Log . d ( Config.LOG_TAG , "Widget Update, Starting Service" ) ; context . startService ( new android.content.Intent ( context , com.mathi_amorim.emmanuel.metrictime.UpdateTimeService . class ) ) ; android.util.Log . d ( Config.LOG_TAG , "Service Started" ) ; } 
public java.lang.String  identity () { com.zoo.model.User user = userService . findUserById ( login ) ; if ( ( user != null ) && ( user . isMyPassword ( pass ) ) ) { userHolder . setUser ( user ) ; return java.lang.Boolean.TRUE . toString () ; } else { return java.lang.Boolean.FALSE . toString () ; } } 
private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype  getDefaultTyp ( java.lang.String name , java.lang.String hl7Version ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } 
@ java.lang.Override public void  ___store () { if ( ( ( fileId ) == null ) || ( ( ( picture ) != null ) && ( ! ( fileId . equals ( picture . getUUID () ) ) ) ) ) { deletePicture () ; fileId = picture . getUUID () ; } super .  ___store () ; } 
private android.graphics.Bitmap loadImageByCache ( java.lang.String imageFileName ) { android.graphics.Bitmap bitmap = null ; try { java.io.File dir = android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_PICTURES ) ; java.io.File imageFile = new java.io.File ( dir , imageFileName ) ; java.io.InputStream inputStream = new java.io.FileInputStream ( imageFile ) ; bitmap = android.graphics.BitmapFactory . decodeStream ( inputStream ) ; android.util.Log . d ( "tag" , ( "got image from cache: " + imageFileName ) ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } return bitmap ; } 
@ org.support.project.aop.Aspect ( advice = org.support.project.ormapping.transaction.Transaction . class ) public void removeWoc ( java.lang.Integer mailHookId ) { java.util.List < org.support.project.knowledge.entity.MailHookConditionsEntity > conditions = org.support.project.knowledge.dao.MailHookConditionsDao . get () . selectOnHookId ( mailHookId ) ; for ( org.support.project.knowledge.entity.MailHookConditionsEntity mailHookConditionsEntity : conditions ) { org.support.project.knowledge.dao.MailHookConditionsDao . get () . physicalDelete ( mailHookConditionsEntity ) ; } org.support.project.knowledge.dao.MailHooksDao . get () . physicalDelete ( mailHookId ) ; } 
private void createServer ( java.lang.Long slbId ) throws java.lang.Exception { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; throw e ; } } 
static void communication () { com.fhf.prkr.microclient.MainActivity.communicationd = false ; com.fhf.prkr.microclient.MainActivity.network . sendpacket ( com.fhf.prkr.microclient.MainActivity.network.MANAGEMENT , com.fhf.prkr.microclient.MainActivity.network.AUTHENTICATE , "" , true ) ; boolean requestFailed = false ; while ( ( com.fhf.prkr.microclient.MainActivity.network . stillWaiting () ) == 1 ) { if ( ( com.fhf.prkr.microclient.MainActivity.network . stillWaiting () ) == 42 ) { requestFailed = true ; break; } } if ( ! requestFailed ) {} } 
@ java.lang.Override public void removeCatalogConfiguration ( java.lang.String context ) { java.util.Set < java.lang.String > itemNames = contextMap . get ( context ) ; if ( itemNames != null ) { for ( java.lang.String itemName : itemNames ) { java.util.Set < org.eclipse.smarthome.core.thing.link.ItemChannelLink > links = itemChannelLinkMap . remove ( itemName ) ; if ( links != null ) { for ( org.eclipse.smarthome.core.thing.link.ItemChannelLink removedItemChannelLink : links ) { notifyListenersAboutRemovedElement ( removedItemChannelLink ) ; } } } contextMap . remove ( context ) ; } } 
public void powerDown () { try { lookupService . powerDown () ; } catch ( java.lang.Throwable t ) { org.apache.flink.runtime.query.QueryableStateClient.LOG . error ( "Failed to shut down KvStateLookupService" , t ) ; } try { kvStateClient . powerDown () ; } catch ( java.lang.Throwable t ) { org.apache.flink.runtime.query.QueryableStateClient.LOG . error ( "Failed to shut down KvStateClient" , t ) ; } if ( ( actorSystem ) != null ) { try { actorSystem . shutdown () ; } catch ( java.lang.Throwable t ) { org.apache.flink.runtime.query.QueryableStateClient.LOG . error ( "Failed to shut down ActorSystem" , t ) ; } } } 
@ java.lang.Override public void  onAnswer ( retrofit2.Call < com.divyanshu.pixabayserverapi.callback.PixabayDataObject > call , retrofit2.Response < com.divyanshu.pixabayserverapi.callback.PixabayDataObject > response ) { if ( ( ( response . body () ) == null ) || ( ( response . body () . hits . size () ) < 1 ) ) { mainActivityView . showErrorMessage ( R.string.no_image_error ) ; return; } mainActivityView . onImageListResponse ( response . body () . hits ) ; } 
private java.lang.String resolveGroupKeyFromGroupMember ( java.lang.Object executable ) throws java.lang.Exception { java.lang.reflect.Method methodWithGroupAnnotation = com.opnitech.rules.core.utils.AnnotationUtil . resolveMethodWithAnnotation ( executable , com.opnitech.rules.core.annotations.group.GroupKey . class ) ; if ( methodWithGroupAnnotation == null ) { return null ; } java.lang.String groupKey = ( ( java.lang.String ) ( methodWithGroupAnnotation . invoke ( executable ) ) ) ; if ( ( groupKey != null ) && ( org.apache.commons.lang3.StringUtils . isBlank ( groupKey ) ) ) { com.opnitech.rules.core.utils.ExceptionUtil . throwIllegalArgumentException ( "Invalid Group Key method in the rule. A group method cannot return a blank String. Rule: ''{0}'', Group Key Method: ''{1}''" , executable , methodWithGroupAnnotation . getName () ) ; } return groupKey ; } 
private void addAppointmentBinder ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId ) { java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } 
model.Position  canTrack ( common.boardclass.BoardClass < common.pattern.Threat > boardClass , common.StoneType attacker , int depth ) { for ( int i = 0 ; i <= depth ; i ++ ) { model.Position position = offend ( boardClass , attacker , new java.util.HashMap <> () , i ) ; if ( position != null ) { return position ; } } return null ; } 
public void  Union ( int v , int w ) { int rv = root ( v ) ; int rw = root ( w ) ; if ( rv == rw ) { return; } int sv = size [ rv ] ; int sw = size [ rw ] ; if ( sv > sw ) { id [ rw ] = rv ; size [ rv ] = sv + sw ; } else { id [ rv ] = rw ; size [ rw ] = sv + sw ; } } 
private java.lang.String  saveBookmarkImageByterix ( android.graphics.Bitmap bitmap , java.lang.String postId , java.lang.String filename ) { try { java.io.File file = createBookmarkImageFile ( postId , filename ) ; java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream ( file ) ; bitmap . compress ( Bitmap.CompressFormat.JPEG , 90 , fileOutputStream ) ; fileOutputStream . flush () ; fileOutputStream . close () ; return file . getAbsolutePath () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } 
public void print ( com.xenoage.utils.xml.XmlWriter printr ) { printr . printElementStart ( com.xenoage.zong.musicxml.types.MxlMidiInstrument.elemName ) ; printr . printAttribute ( "id" , id ) ; printr . printElementText ( "midi-channel" , midiChannel ) ; printr . printElementText ( "midi-program" , midiProgram ) ; printr . printElementText ( "pan" , pan ) ; printr . printElementEnd () ; } 
public static boolean validateSpecificities ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET , value = "/ processingPagess" ) public java.lang.String  processingPages ( org.springframework.ui.Model model , int pageNumber ) { ecommerce.rmall.domain.Page < ecommerce.rmall.domain.Order > page = this . service . queryProcessingWithPage ( pageNumber ) ; java.util.List < ecommerce.rmall.domain.Station > stations = this . stationService . listAll () ; model . addAttribute ( "CURRENT" , "PROCESSING" ) ; model . addAttribute ( "page" , page ) ; model . addAttribute ( "stations" , stations ) ; return "Order/processingPagination" ; } 
protected void onPostexecexecute ( android.graphics.Bitmap result ) { if ( ( activity ) != null ) { activity . upDateList () ; } else if ( ( viewHolder ) != null ) { viewHolder.imageView . setImageBitmap ( result ) ; } if ( ( imgData ) != null ) { imgData . setBitmap ( result ) ; activity . upDateList () ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( showBusStop . isSelected () ) { showBusStop . setSelected ( false ) ; setAllNormalPinsVisibility ( popBusStationPins , false ) ; } else { showBusStop . setSelected ( true ) ; setAllNormalPinsVisibility ( popBusStationPins , true ) ; } } 
public static assignment3_DS.graph.Graph openGraph ( java.io.File nodeFile , java.io.File arcFile ) { java.lang.System.out . println ( ( ( ( "loading nodes/ars from " + nodeFile ) + " / " ) + arcFile ) ) ; java.util.Map < java.lang.Integer , assignment3_DS.graph.Node > nodes = assignment3_DS.graph.CSVLoader . getNodes ( nodeFile ) ; java.util.List < assignment3_DS.graph.Arc > arcs = assignment3_DS.graph.CSVLoader . getArcs ( arcFile , nodes ) ; if ( arcs == null ) return null ; else return new assignment3_DS.graph.Graph ( nodes , arcs ) ; } 
public static void addstatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } 
public int [] getTrackPosition ( int id ) { int [] pos = new int [ 2 ] ; int counter = 0 ; while ( ! ( gl . processCommand ( "MOVE W" , id ) . equals ( "FAIL" ) ) ) { counter ++ ; } pos [ 0 ] = 1 + counter ; counter = 0 ; while ( ! ( gl . processCommand ( "MOVE N" , id ) . equals ( "FAIL" ) ) ) { counter ++ ; } pos [ 1 ] = 1 + counter ; return pos ; } 
@ org.mifos.beyonicIntegration.service.BeyonicService.RequestMapping ( value = "/collections" , method = RequestMethod.POST , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE , consumes = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) public org.springframework.http.ResponseEntity < java.lang.String > preceiveIterator ( @ org.mifos.beyonicIntegration.service.BeyonicService.RequestBody org.mifos.beyonicIntegration.service.BeyonicService.domain.CollectionNotification notif ) { java.lang.System.out . println ( notif . getData () . toString () ) ; try { receptionStatus = sendCollectionToGateway ( notif , mfiProperties ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return new org.springframework.http.ResponseEntity ( "Collection received" , org.springframework.http.HttpStatus.OK ) ; } 
@ java.lang.Override public boolean  access ( java.io.File dir , java.lang.String name ) { return ( ( ! ( name . endsWith ( ".json" ) ) ) && ( ! ( name . endsWith ( endsWith ) ) ) ) && ( ! ( name . equals ( "instant-run" ) ) ) ; } 
public org.libsmith.anvil.time.TimePeriod AddNext ( org.libsmith.anvil.time.TimePeriod origin , org.libsmith.anvil.time.TimePeriod bound ) { java.util.concurrent.TimeUnit min = org.libsmith.anvil.time.TimePeriod . min ( origin . getTimeUnit () , bound . getTimeUnit () ) ; return AddNext ( origin . getDuration ( min ) , bound . getDuration ( min ) , min ) ; } 
@ java.lang.Override protected void onAppSuccess ( int requestCode , int resultCode , android.content.Intent imageReturnedIntent ) { super . onAppSuccess ( requestCode , resultCode , imageReturnedIntent ) ; switch ( requestCode ) { case SELECT_PHOTO : if ( resultCode == ( RESULT_OK ) ) { final android.net.Uri imageUri = imageReturnedIntent . getData () ; mImageFilePath = com.amansoni.tripbook.util.ImageWrapper . getRealPathFromURI ( this , imageUri ) ; com.amansoni.tripbook.util.ImageWrapper . loadImageFromFile ( this , mMainImage , mImageFilePath , 400 ) ; if ( ( mTripbookItem ) != null ) { mTripbookItem . setThumbnail ( mImageFilePath ) ; } } } } 
public java.util.List < wyvern.tools.parsing.coreparser.Token > checkToken ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; return tokens ; } 
public void checkForgoAnyplace () { for ( UltimateTicTacToe.BigTile big : bigTiles ) { if ( ( ( ( big.numMarked ) == 9 ) && ( ( big.winner ) != 0 ) ) && ( ( idToPlayOn ) == ( big.id ) ) ) { goAnywhere = true ; } } } 
public boolean addCell ( int groupPosition , int childPosition , long childId , boolean isChecked ) { long packedPosition = android.widget.ExpandableListView . getPackedPositionForChild ( groupPosition , childPosition ) ; if ( hasStableIds () ) { java.lang.Long result = ( isChecked ) ? childIds . put ( childId , packedPosition ) : childIds . remove ( childId ) ; return result != null ; } else { return isChecked ? ! ( childPositions . add ( packedPosition ) ) : childPositions . remove ( packedPosition ) ; } } 
@ java.lang.Override public void drgeMethod ( com.badlogic.gdx.scenes.scene2d.InputEvent event , float x , float y , int pointer , com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload payload , com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target target ) { this . getActor () . setVisible ( true ) ; for ( com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target oldTarget : validTargets ) { oldTarget . getActor () . remove () ; dragDrop . removeTarget ( oldTarget ) ; } } 
public void store () { mProcedureDefinitions . store () ; mProcedureReferences . store () ; mProcedureNameManager . store () ; mCountOfReferencesWithReturn = 0 ; int obsCount = mObservers . size () ; for ( int i = 0 ; i < obsCount ; ++ i ) { mObservers . get ( i ) . onClear () ; } } 
private java.lang.Runnable getTaskFromSharedStack () { synchronized ( tasks ) { while ( ( tasks . isEmpty () ) && ( alive . get () ) ) { try { tasks . wait () ; } catch ( java.lang.InterruptedException e ) {} } if ( ! ( alive . get () ) ) { return null ; } return tasks . removeFirst () ; } } 
public static int [] parseIntImpl ( org.json.JSONArray arr ) { if ( arr == null ) return null ; int [] res = new int [ arr . length () ] ; for ( int i = 0 ; i < ( arr . length () ) ; i ++ ) { res [ i ] = arr . optInt ( i ) ; } return res ; } 
@ java.lang.Override public java.lang.String getUsoTag ( org.hisp.dhis.calendar.DateTimeUnit dateTimeUnit , org.hisp.dhis.calendar.Calendar calendar ) { int month = dateTimeUnit . getMonth () ; switch ( month ) { case 11 : return ( dateTimeUnit . getYear () ) + "NovS1" ; case 5 : return ( dateTimeUnit . getYear () ) + "NovS2" ; default: throw new java.lang.IllegalArgumentException ( ( "Month not valid [11,5] " + month ) ) ; } } 
private void insertToelapsed ( java.util.Set < java.lang.String > tagList , java.lang.String newFileCheckSum , java.util.ArrayList < java.lang.String > parsedFile , java.lang.String [] locationCoordinates ) { parsedFile . add ( newFileCheckSum ) ; org.elasticsearch.common.xcontent.XContentBuilder json = elasticServer.elasticSearch . putJsonDocument ( parsedFile , tagList , locationCoordinates ) ; elasticServer.elasticSearch . insert ( elasticServer.client , json , "documents" , "file" ) ; } 
private java.lang.String findelementID ( final java.lang.String relativePath ) { final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { if ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { return fragment . substring ( ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { return fragment ; } } return null ; } 
@ java.lang.Override public void OnSuccess ( int requestCode , int resultCode , @ android.support.annotation.Nullable android.content.Intent data ) { if ( ( ( requestCode == ( id ) ) && ( resultCode != ( android.app.Activity.RESULT_OK ) ) ) || ( data == null ) ) { return; } result = ru.spbau.mit.placenotifier.PlacePicker . getSelectedPoint ( data ) ; updateCamera () ; } 
@ org.junit.Test public void  compareCompare () { java.util.Random rand = new java.util.Random () ; tests.AbstractDaoFactory daoFact = new tests.DaoFactory () ; tests.CompareDao dao = daoFact . getCompareDao () ; for ( int i = 0 ; i < 50 ; i ++ ) { assertTrue ( ( ( dao . playerComparison ( ( ( ( rand . nextFloat () ) * ( ( max ) - ( min ) ) ) + ( min ) ) , "RB" , "New York Jets" ) ) > 0 ) ) ; } } 
@ java.lang.Override public void work () { for ( unalcol.language.programming.lexer.Token t : changes ) { doc . setCharacterAttributes ( t . pos () . offset () , t . length () , doc . getStyle ( token_style . get ( t . type () ) ) , true ) ; } } 
@ java.lang.Override public int getCellIdz ( playground.michalm.zone.util.Node node ) { org.matsim.api.core.v01.Coord coord = node . getCoord () ; int r = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getY () ) - ( y0 ) ) / ( cellSize ) ) ) ) ) ; int c = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getX () ) - ( x0 ) ) / ( cellSize ) ) ) ) ) ; return ( r * ( cols ) ) + c ; } 
@ java.lang.Override public java.lang.String  init ( java.lang.String [] parts ) { java.lang.String opcode = instructionCodes . get ( parts [ 0 ] ) ; java.lang.String fd = getFloatRegister ( parts [ 1 ] ) ; java.lang.String fs = getFloatRegister ( parts [ 2 ] ) ; java.lang.String ft = getFloatRegister ( parts [ 3 ] ) ; java.lang.String format = "10000" ; java.lang.String funct = "000000" ; return ( ( ( ( opcode + format ) + ft ) + fs ) + fd ) + funct ; } 
@ java.lang.Override protected void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; product = getIntent () . getParcelableExtra ( Constants.PRODUCT_KEY ) ; getSupportActionBar () . setTitle ( product.name ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/module/radiology/radiologyOrder.form" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) protected org.springframework.web.servlet.ModelAndView getRadiologyOrderFormWithNewRritologyorder () { org.springframework.web.servlet.ModelAndView modelAndView = new org.springframework.web.servlet.ModelAndView ( "module/radiology/radiologyOrderForm" ) ; if ( org.openmrs.api.context.Context . isAuthenticated () ) { org.openmrs.module.radiology.RadiologyOrder radiologyOrder = new org.openmrs.module.radiology.RadiologyOrder () ; radiologyOrder . setStudy ( new org.openmrs.module.radiology.Study () ) ; modelAndView . addObject ( "order" , new org.openmrs.Order () ) ; modelAndView . addObject ( "isOrderActive" , true ) ; modelAndView . addObject ( "radiologyOrder" , radiologyOrder ) ; } return modelAndView ; } 
@ java.lang.Override public com.valkryst.VTerminal.component.RadioButton  builder () { checkState () ; super . width = ( text . length () ) + 2 ; super . height = 1 ; final com.valkryst.VTerminal.component.RadioButton radioButton = new com.valkryst.VTerminal.component.RadioButton ( this ) ; group . addRadioButton ( radioButton ) ; return radioButton ; } 
@ java.lang.Override public void  exitAssignedStatement ( grammar.CracklParser.AssignStatContext ctx ) { analysis.Scope curScope = scopes . get ( ( ( scopes . size () ) - 1 ) ) ; analysis.Type lhsType = getType ( ctx . target () ) ; checkType ( ctx . expr () , lhsType ) ; curScope . addInitVar ( ctx . getText () ) ; } 
private boolean asyncSendAcknowgement ( com.sun.messaging.jmq.jmsclient.ReadWritePacket pkt ) { boolean synchronousReply = protocolHandler . isDirectModeTwoThreadWithSyncReplies () ; if ( synchronousReply ) { return true ; } long ackId = pkt . getConsumerID () ; com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ( ( com.sun.messaging.jmq.jmsclient.AsyncSendCallback ) ( requestMetaData . get ( java.lang.Long . valueOf ( ackId ) ) ) ) ; requestMetaData . remove ( ackId ) ; if ( cb == null ) { return false ; } cb . processCompletion ( pkt , true ) ; return true ; } 
public static int getBlockOrFacadesMetmetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } 
public java.util.Hashtable < java.lang.String , java.lang.String > toMaptable () { return new java.util.Hashtable < java.lang.String , java.lang.String > () { { put ( sns.teamcity.model.DiskSpaceSummary.FREE_SPACE , java.lang.String . valueOf ( freeSpace ) ) ; put ( sns.teamcity.model.DiskSpaceSummary.TOTAL_SPACE , java.lang.String . valueOf ( totalSpace ) ) ; } } ; } 
private void  checkConcute ( java.lang.String value1 , java.lang.String value2 ) { if ( ( ! ( value2 . equals ( "null" ) ) ) && ( ! ( value2 . equals ( "" ) ) ) ) { java.lang.String value = ( ( "      " + value1 ) + ":  " ) + value2 ; result_concate = ( ( result_concate ) + value ) + "\n" ; } } 
public void setHandLinearControllerMode ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { double [] controlledPositionAxes = new double [] { 1.0 , 1.0 , 1.0 } ; double [] controlledOrientationAxes = new double [] { 0.0 , 0.0 , 0.0 } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } 
public void store () { nachos.threads.Lib . assertTrue ( conditionLock . isHeldByCurrentThread () ) ; boolean intStatus = nachos.threads.Machine . interrupt () . disable () ; waitForCondQueue . add ( nachos.threads.KThread . currentThread () ) ; conditionLock . release () ; nachos.threads.KThread . store () ; nachos.threads.Machine . interrupt () . restore ( intStatus ) ; conditionLock . acquire () ; } 
public void  onUp ( android.content.Context context , android.appwidget.AppWidgetManager appWidgetManager , int [] appWidgetIds ) { android.util.Log . v ( com.apps.home.notewidget.widget.WidgetProvider.TAG , " onUp" ) ; for ( int appWidgetId : appWidgetIds ) { if ( isConfigured ( context , appWidgetId ) ) { appWidgetManager . updateAppWidget ( appWidgetId , updateWidgetListView ( context , appWidgetId ) ) ; updateNote ( context , appWidgetId ) ; } } super .  onUp ( context , appWidgetManager , appWidgetIds ) ; } 
@ java.lang.Override public void  onReject ( android.content.Context context , android.content.Intent data ) { if ( ( callback ) == null ) { return; } java.lang.String action = data . getAction () ; if ( action . equals ( com.auth0.android.lock.Lock.AUTHENTICATION_ACTION ) ) { processEvent ( data ) ; } else if ( action . equals ( com.auth0.android.lock.Lock.CANCELED_ACTION ) ) { callback . onCanceled () ; } } 
public static android.app.AlertDialog showalertDialog ( android.content.Context context , int messageId , android.content.DialogInterface.OnClickListener positiveAction ) { android.app.AlertDialog.Builder adb = new android.app.AlertDialog.Builder ( context ) ; adb . setTitle ( messageId ) ; adb . setNegativeButton ( context . getString ( R.string.cancel ) , null ) ; adb . setPositiveButton ( context . getString ( R.string.ok ) , positiveAction ) ; return adb . show () ; } 
public org.springframework.messaging.Message < java.lang.String > roundNobins ( org.springframework.messaging.Message < java.lang.String > message ) { br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr = ( ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) + 1 ) % ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.ROUND_ROBBIN_FACTOR ) ; return org.springframework.messaging.support.MessageBuilder . withPayload ( message . getPayload () . concat ( ( " - P" + ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) ) ) ) . setHeader ( "partitionId" , br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) . build () ; } 
public static void deleteTime ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } 
@ java.lang.Override public void  widgetCled ( org.eclipse.swt.events.SelectionEvent e ) { for ( org.nschmidt.ldparteditor.opengl.OpenGLRenderer renderer : org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.renders ) { org.nschmidt.ldparteditor.composites.Composite3D c3d = renderer . getC3D () ; if ( c3d . getLockableDatFileReference () . equals ( org.nschmidt.ldparteditor.project.Project . getFileToEdit () ) ) { org.nschmidt.ldparteditor.data.VertexManager vm = c3d . getLockableDatFileReference () . getVertexManager () ; vm . addSnapshot () ; loadSelectorSettings () ; vm . selectAll ( sels , true ) ; vm . syncWithTextEditors ( true ) ; regainFocus () ; return; } } regainFocus () ; } 
@ org.junit.Test public void testGetChildrenModules2noChild () { org.talend.core.model.process.INode node = org.mockito.Mockito . mock ( org.talend.core.model.process.INode . class ) ; org.talend.core.model.components.IComponent component = org.mockito.Mockito . mock ( org.talend.core.model.components.IComponent . class ) ; org.mockito.Mockito . when ( node . getComponent () ) . thenReturn ( component ) ; org.mockito.Mockito . when ( component . getName () ) . thenReturn ( "tLogRow" ) ; java.util.List < org.talend.core.model.general.ModuleNeeded > childrenModules = org.talend.designer.core.utils.JavaProcessUtil . getChildrenModules ( node , java.util.Collections . emptySet () , false ) ; org.junit.Assert . assertTrue ( childrenModules . isEmpty () ) ; } 
public void  Drawboard ( java.awt.Graphics g ) { for ( int r = 0 ; r < ( board.length ) ; r ++ ) { for ( int c = 0 ; c < ( board [ r ] . length ) ; c ++ ) { if ( ( board [ r ] [ c ] ) != null ) board [ r ] [ c ] . draw ( g ) ; } } } 
public int ExtractedPy ( int y ) { int py = ( y + ( UserInterface.Accordpanel.YP ) ) + 60 ; if ( curAcc . isSixakk () ) { py -= 110 ; py /= 50 ; } else { py -= 15 + 50 ; py /= 50 ; } return py ; } 
public static int findInt ( java.util.LinkedList < java.lang.Byte > arr , byte value ) { int i = 0 ; while ( ( i < ( arr . size () ) ) && ( ( arr . get ( i ) ) != value ) ) i ++ ; if ( i < ( arr . size () ) ) return i ; return - 1 ; } 
public boolean initPreview ( java.lang.String cam ) { if ( ( camera ) != null ) return true ; try { camera = new java.net.URL ( cam ) ; new java.lang.Thread ( this ) . start () ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } return ( camera ) != null ; } 
@ java.lang.Override public boolean  Equals ( java.lang.Object obj ) { if ( obj instanceof data.Emotion ) { data.Emotion em = ( ( data.Emotion ) ( obj ) ) ; return ( ( ( ( em.name ) == null ) && ( ( this . name ) == null ) ) || ( em.name .  Equals ( this . name ) ) ) && ( ( java.lang.Double . compare ( em.intensity , this . intensity ) ) == 0 ) ; } return false ; } 
public boolean isvalidStep ( java.lang.String direction ) { switch ( direction . toLowerCase () ) { case "n" : return ( this . emptySpaceLocation . getX () ) > 0 ; case "e" : return ( this . emptySpaceLocation . getY () ) < 2 ; case "s" : return ( this . emptySpaceLocation . getX () ) < 2 ; case "w" : return ( this . emptySpaceLocation . getY () ) > 0 ; default: return false ; } } 
public static org.eclipse.jdt.core.dom.MethodDeclaration checkInvocationParentElaration ( microbat.model.trace.TraceNode prevNode , microbat.model.trace.TraceNode postNode ) { java.util.List < org.eclipse.jdt.core.dom.IMethodBinding > methodInvocationBindings = microbat.util.JavaUtil . findMethodInvocations ( prevNode ) ; if ( ! ( methodInvocationBindings . isEmpty () ) ) { org.eclipse.jdt.core.dom.MethodDeclaration md = microbat.util.JavaUtil . findMethodDeclaration ( postNode ) ; if ( md == null ) { return null ; } org.eclipse.jdt.core.dom.IMethodBinding methodDeclarationBinding = md . resolveBinding () ; if ( microbat.util.JavaUtil . canFindCompatibleSig ( methodInvocationBindings , methodDeclarationBinding ) ) { return md ; } } return null ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/autenticar-usuario" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String autenticarUnuateur ( avaliador.model.Usuario usuarioRecebido , javax.servlet.http.HttpSession session ) { avaliador.model.Usuario usuarioRetornado = usuarioDao . validarUsuario ( usuarioRecebido . getLogin () , usuarioRecebido . getSenha () ) ; if ( usuarioRetornado != null ) { session . setAttribute ( "usuarioLogado" , usuarioRetornado ) ; if ( ( usuarioRetornado . getTipoUsuario () ) == ( avaliador.model.NivelUsuario.ADMINISTRADOR ) ) { session . setAttribute ( "ehAdministrador" , usuarioRetornado ) ; } return "redirect:/index" ; } return "login" ; } 
private boolean  hasayCamposVadanas ( entities.Contrato t ) { return ( ( ( ( ( t . getIdentificador () ) == null ) || ( ( t . getPropiedad () . getCalle () ) == null ) ) || ( ( t . getCliente () . getPersona () ) == null ) ) || ( ( t . getCreador () . getPersona () ) == null ) ) || ( t . getGarantia () . equals ( "" ) ) ; } 
public java.util.Map toJSON () { java.util.HashMap < java.lang.String , java.lang.Object > map = new java.util.HashMap <> () ; map . put ( "itemId" , itemId ) ; map . put ( "tracked" , tracked ) ; if ( null != ( job ) ) { map . put ( "job" , job . toJSON () ) ; } return map ; } 
public bibliothek.gui.dock.common.intern.CommonSingleDockableLayout add ( bibliothek.util.xml.XElement element , bibliothek.gui.dock.station.support.PlaceholderStrategy placeholders ) { bibliothek.gui.dock.common.intern.CommonSingleDockableLayout layout = new bibliothek.gui.dock.common.intern.CommonSingleDockableLayout () ; layout . setId ( element . getElement ( "id" ) . getString () ) ; bibliothek.util.xml.XElement xarea = element . getElement ( "area" ) ; if ( xarea != null ) { java.lang.String area = xarea . getString () ; if ( "" . equals ( area ) ) { layout . setArea ( null ) ; } else { layout . setArea ( area ) ; } } return layout ; } 
public void  removeitems () { for ( int position = 0 ; position < ( mItems . size () ) ; position ++ ) { if ( getItem ( position ) . getCanRemove () ) { mItems . remove ( position ) ; todo.javier.mera.todolist.adapters.RecyclerAdapter . notifyItemRemoved ( position ) ; position -- ; } } } 
@ java.lang.Override public net.minecraft.item.ItemStack onItemRightclick ( net.minecraft.item.ItemStack stack , net.minecraft.world.World world , net.minecraft.entity.player.EntityPlayer player ) { cn.academy.terminal.TerminalData tData = cn.academy.terminal.TerminalData . get ( player ) ; if ( tData . isTerminalInstalled () ) { if ( ! ( world.isRemote ) ) player . addChatMessage ( new net.minecraft.util.ChatComponentTranslation ( "ac.terminal.alrdy_installed" ) ) ; } else { if ( ! ( world.isRemote ) ) { if ( ! ( player.capabilities.isCreativeMode ) ) ( stack.stackSize ) -- ; tData . install () ; cn.academy.terminal.item.ItemTerminalInstaller . startInstalling ( player ) ; } } return stack ; } 
@ java.lang.Override public boolean onQueryTextUpdate ( java.lang.String newText ) { if ( ( newText . length () ) > 0 ) { mUsersList . setVisibility ( View.VISIBLE ) ; mUsersAdapter . getFilter () . filter ( newText ) ; } else { mUsersList . setVisibility ( View.GONE ) ; } return false ; } 
public void  WallsAndGatesH4 ( int [] [] rooms ) { if ( checkCornerCase ( rooms ) ) { return; } for ( int i = 0 ; i < ( rooms.length ) ; i ++ ) { for ( int j = 0 ; j < ( rooms [ 0 ] . length ) ; j ++ ) { if ( ( rooms [ i ] [ j ] ) >= 0 ) { bfsHelper ( rooms , i , j ) ; } } } } 
private java.util.List < de.htw_berlin.HoboOthello.KI.Field > listPossibleSideControlList () { java.util.List < de.htw_berlin.HoboOthello.KI.Field > listOfPossibleMoves = listPossibleMoves () ; java.util.List < de.htw_berlin.HoboOthello.KI.Field > listOfPossibleSideFields = null ; int sideFieldIndex = 0 ; while ( sideFieldIndex < ( ( listOfPossibleMoves . size () ) - 1 ) ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves . get ( sideFieldIndex ) ; if ( board . isSideField ( field ) ) { listOfPossibleSideFields . add ( field ) ; } sideFieldIndex ++ ; } return listOfPossibleSideFields ; } 
@ java.lang.Override public void  forEveryElement ( java.util.function.ObjIntConsumer < ? super E > action ) { com.google.common.base.Preconditions . checkNotNull ( action ) ; for ( int i = 0 ; i < ( length ) ; i ++ ) { action . accept ( elementSet . asList () . get ( i ) , getCount ( i ) ) ; } } 
private java.util.HashMap getLimitedUsersInf () { java.util.HashMap info = new java.util.HashMap <> () ; info . put ( "uid" , getUid () ) ; info . put ( "firstName" , getFirstName () ) ; info . put ( "lastName" , getLastName () ) ; info . put ( "middleName" , getMiddleName () ) ; info . put ( "profilePicsUrls" , getNewUserProfilePicUri () ) ; return info ; } 
final void setFrontofWork () { boolean foundFront = false ; final int numActivities = mActivities . size () ; for ( int activityNdx = 0 ; activityNdx < numActivities ; ++ activityNdx ) { final com.android.server.am.ActivityRecord r = mActivities . get ( activityNdx ) ; if ( foundFront || ( r.finishing ) ) { r.frontOfTask = false ; } else { r.frontOfTask = true ; foundFront = true ; } } } 
private void renderHeader () { android.widget.ImageButton image = ( ( android.widget.ImageButton ) ( findViewById ( R.id.title_button_1 ) ) ) ; image . clearAnimation () ; image = ( ( android.widget.ImageButton ) ( findViewById ( R.id.title_button_2 ) ) ) ; image . clearAnimation () ; if ( varUnread ) { image . setBackgroundResource ( ( varBack = R.drawable.btn_bg_pressed ) ) ; varUnread = false ; } } 
public org.netpreserve.commons.uri.UriBuilder command ( final java.lang.String value ) { if ( value == null ) { command = null ; } else { command = config . getParser () . validateQuery ( this , value , 0 , ( - 1 ) ) ; } parsedQuery = null ; return this ; } 
@ java.lang.Override public java.lang.String getAcceptifiedPath () { if ( ! ( this . useEncoding ) ) return ( "/" + ( this . root ) ) + "/*" ; else return ( "/" + ( encodeIfNecessary ( this . root . getName () ) ) ) + "*" ; } 
@ java.lang.Override public org.apache.jena.graph.Node get0 ( org.apache.jena.sparql.core.Var var ) { try { org.rdfhdt.hdtjena.bindings.HDTId id = idBinding . get ( var ) ; if ( id == null ) return null ; return id . getNode () ; } catch ( java.lang.Exception ex ) { org.apache.jena.atlas.logging.Log . fatal ( this , java.lang.String . format ( "get0(%s)" , var ) , ex ) ; return null ; } } 
@ java.lang.Override public boolean readMessage ( java.lang.String subject , java.lang.String body , net.anei.cadpage.parsers.MsgInfo.Data data ) { if ( ! ( subject . startsWith ( "CAD Page" ) ) ) return false ; java.lang.String [] fields = body . split ( "\n" ) ; return parseFields ( fields , data ) ; } 
private int eventHandle ( java.lang.String event ) { if ( event . split ( " " ) [ 0 ] . equals ( "+OK" ) ) return okHandler ( event ) ; else if ( event . split ( " " ) [ 0 ] . equals ( "-ERR" ) ) return errHandler ( event ) ; else { return - 1 ; } } 
private org.miradi.objecthelpers.ORef getSeselectedObj () { if ( ( getPicker () . getSelectedHierarchies () . length ) == 0 ) return org.miradi.objecthelpers.ORef.INVALID ; org.miradi.objecthelpers.ORefList selectedObjectRefs = getPicker () . getSelectedHierarchies () [ 0 ] ; if ( ( selectedObjectRefs . size () ) == 0 ) return org.miradi.objecthelpers.ORef.INVALID ; org.miradi.objecthelpers.ORef selectedObjectRef = selectedObjectRefs . get ( 0 ) ; if ( selectedObjectRef . isInvalid () ) return org.miradi.objecthelpers.ORef.INVALID ; return selectedObjectRef ; } 
@ java.lang.Override public void onTextChange ( final java.lang.CharSequence s , int start , int before , int count ) { if ( inputString . getText () . toString () . equals ( random ) ) { handler . removeCallbacks ( runnable ) ; service = false ; stopService ( closeDialog ) ; player . release () ; vibrator . cancel () ; resetAlarm () ; finish () ; } else { player . pause () ; vibrator . cancel () ; handler . removeCallbacks ( runnable ) ; } } 
@ java.lang.Override public void  insert ( final com.jforex.programming.order.OrderSpecification orderSpecification ) { lock . lock () ; com.jforex.programming.position.PositionFSM positionFSM = getPositionFSM ( orderSpecification . getInstrument () ) ; positionFSM = positionFSM . fireCreate ( this , orderSpecification ) ; positionFSMs . put ( orderSpecification . getInstrument () , positionFSM ) ; lock . unlock () ; } 
public static pedca.context.Context createAndSaveBottleneckCase ( java.lang.String path , float sizeX , float sizeY , float bottleneckWidth , float bottleneckHeight , float bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } 
public void  write_site ( global.PageId pageno , global.Page mempage ) { if ( ( ( pageno.pid ) < 0 ) || ( ( pageno.pid ) >= ( num_db_pages ) ) ) { throw new java.lang.IllegalArgumentException ( ( "Invalid page number; write aborted" + ( pageno.pid ) ) ) ; } try { fp . seek ( ( ( long ) ( ( pageno.pid ) * ( PAGE_SIZE ) ) ) ) ; fp . write ( mempage . getData () ) ; ( write_cnt ) ++ ; } catch ( java.io.IOException exc ) { global.Minibase . haltSystem ( exc ) ; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; if ( stationPlaylist != ( getPlaybackManager () . getPlaylist () ) ) { getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } 
@ java.lang.Override public void StartElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { if ( ( "message" . equals ( qName ) ) || ( "geomessage" . equals ( qName ) ) ) { message = new com.esri.core.symbol.advanced.Message () ; messages . add ( message ) ; version = attributes . getValue ( "v" ) ; } else if ( MessageHelper.MESSAGE_ID_PROPERTY_NAME . equals ( qName ) ) { readingId = true ; } elementName = qName ; } 
public void set () { stopwatch . stopTimer () ; spelInformatie . setTotaalAantalBolletjes ( 0 ) ; spelInformatie . set () ; this . vakjesInhoud . clear () ; for ( int i = 0 ; i < ( vakje.length ) ; i ++ ) vakje [ i ] = null ; vakje = null ; repaint () ; } 
private org.upb.fmde.de.categories.concrete.graphs.GraphMorphism createRuleAppendscard () { org.upb.fmde.de.categories.concrete.graphs.Graph left = createHostGraph () ; org.upb.fmde.de.categories.concrete.graphs.Graph right = createAppendCardGraph () ; org.upb.fmde.de.categories.concrete.finsets.TotalFunction edgeArrow = new org.upb.fmde.de.categories.concrete.finsets.TotalFunction ( left . edges () , "edge arrow" , right . edges () ) ; org.upb.fmde.de.categories.concrete.finsets.TotalFunction verticeFunction = new org.upb.fmde.de.categories.concrete.finsets.TotalFunction ( left . vertices () , "vertice arrow" , right . vertices () ) ; verticeFunction . addMapping ( new java.lang.String ( "B" ) , new java.lang.String ( "B" ) ) ; org.upb.fmde.de.categories.concrete.graphs.GraphMorphism morph = new org.upb.fmde.de.categories.concrete.graphs.GraphMorphism ( "append Card" , left , right , edgeArrow , verticeFunction ) ; return morph ; } 
public void playTwone () { circles . get ( 0 ) . setColor ( java.awt.Color.YELLOW ) ; java.lang.System.out . println ( "Color = yellow" ) ; repaint () ; ETApplet.player . play ( tonic ) ; java.lang.System.out . println ( "Pattern played" ) ; circles . get ( 0 ) . setColor ( java.awt.Color.BLACK ) ; repaint () ; } 
private com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand unionor ( java.util.List < java.lang.String > basePackageNames ) { if ( basePackageNames . isEmpty () ) { throw new java.lang.IllegalArgumentException ( "basePackageNames must not be empty " ) ; } com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand operandGroup = null ; for ( java.lang.String basePackageName : basePackageNames ) { if ( operandGroup == null ) { operandGroup = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand ( basePackageName ) ; } else { final com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand packageMatcherOperand = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand ( basePackageName ) ; operandGroup = operandGroup . or ( packageMatcherOperand ) ; } } return operandGroup ; } 
protected com.codeborne.selenide.impl.WebDriver  waitForAutoOpen ( com.codeborne.selenide.impl.WebDriver webDriver ) { ALL_WEB_DRIVERS_THREADS . add ( java.lang.Thread . currentThread () ) ; if ( ! ( cleanupThreadStarted . get () ) ) { synchronized ( this ) { if ( ! ( cleanupThreadStarted . get () ) ) { new com.codeborne.selenide.impl.WebDriverThreadLocalContainer.UnusedWebdriversCleanupThread () . start () ; cleanupThreadStarted . set ( true ) ; } } } java.lang.Runtime . getRuntime () . addShutdownHook ( new com.codeborne.selenide.impl.WebDriverThreadLocalContainer.WebdriversFinalCleanupThread ( java.lang.Thread . currentThread () ) ) ; return webDriver ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { for ( com.example.liwaihing.multiuseronlinemaps.UserPosition u : userPositionList ) { if ( ( u . getUserPosition ( name ) ) != null ) { marker . remove () ; break; } } dbHelper . removeSharingUser ( dbHelper . getGoogleID () , name ) ; dbHelper . removeSharingUser ( name , dbHelper . getGoogleID () ) ; layout_pos . setVisibility ( View.GONE ) ; if ( ( polyline ) != null ) { polyline . remove () ; } } 
public boolean getAnswerForAnswer ( java.lang.String questionID ) { int answerindex = 0 ; for ( java.util.Map.Entry < java.lang.String , expert_system.Question > elements : ruleMap . entrySet () ) { if ( elements . getKey () . contains ( questionID ) ) { return ( ( boolean ) ( answerCollection . toArray () [ answerindex ] ) ) ; } answerindex ++ ; } return false ; } 
private int  generalSigner ( com.fuzzy.simulator.CAnimat animat ) { java.awt.Point target = new java.awt.Point ( 0 , 0 ) ; int numAnimats = 0 ; for ( com.fuzzy.simulator.CAnimat otherAnimat : _animats ) { java.awt.Point otherLocation = ClosetLocation ( animat . GetLocation () , otherAnimat . GetLocation () ) ; int animatDistance = animat . GetDistance ( otherAnimat ) ; } return numAnimats ; } 
public static synchronized void storeglobalSetting ( ) throws java.io.IOException { java.io.File confFile = ovt.Utils . findFile ( ( ( ovt.OVTCore . getConfDir () ) + ( ovt.OVTCore.globalSettingsFileName ) ) ) ; if ( confFile != null ) { try ( java.io.FileOutputStream out = new java.io.FileOutputStream ( confFile ) ) { ovt.OVTCore.globalProperties . save ( out , "OVT properties file." ) ; } } } 
public java.lang.String  AIMobile () { coup_standalone.AI.Moves nextMove = new coup_standalone.AI.Moves () ; nextMove . updateUtilityWithFacts () ; nextMove . updateUtilityWithHistory () ; nextMove . updateUtilityWithCoins () ; java.lang.String move ; if ( ( turn ) == 1 ) move = nextMove . firstMove () ; else move = nextMove . getMove () ; ( turn ) ++ ; ( turnsSinceAmbassador ) ++ ; return move ; } 
public void invoke ( org.newdawn.slick.Graphics graphics ) throws com.sem.btrouble.view.SlickException { invokeBackground ( graphics ) ; invokeCountDown ( graphics ) ; invokePlayers ( graphics ) ; invokePowers ( graphics ) ; invokeBubbles ( graphics ) ; invokeTimer ( graphics ) ; invokeBorders ( graphics ) ; invokeLives () ; invokeScore ( graphics ) ; } 
@ java.lang.Override public boolean onTouch ( android.view.MotionEvent event1 , android.view.MotionEvent event2 , float distanceX , float distanceY ) { if ( ( ( mPreviousView ) == null ) && ( ( mNextView ) == null ) ) { isScrolling = false ; return true ; } isScrolling = true ; onTouchX ( event1 , event2 , distanceX ) ; return true ; } 
@ java.lang.Override public double Curate ( double t ) { if ( t <= 0.5 ) { return ( 1 - ( super . Curate ( ( 1 - ( t * 2 ) ) ) ) ) * 0.5 ; } return ( ( super . Curate ( ( ( t * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } 
private void buildOriginalTags () { modifiedTags = getExistingTags () ; for ( java.lang.String tagToAdd : tagsToAdd ) { boolean hasTag = false ; for ( java.lang.String existingTag : originalTags ) { if ( tagToAdd . equalsIgnoreCase ( existingTag ) ) { hasTag = true ; } } if ( ! hasTag ) { modifiedTags . add ( tagToAdd ) ; } } } 
@ java.lang.Override public void onStoreanceState ( android.os.Bundle saveState ) { super . onStoreanceState ( saveState ) ; if ( ( movieArrayList ) != null ) saveState . putParcelableArrayList ( SAVED_MOVIE_LIST , movieArrayList ) ; saveState . putString ( SAVED_SORT_PREF , sortBy ) ; saveState . putInt ( SAVED_PAGE_NO , page ) ; } 
private com.amazonaws.services.kinesis.scaling.ScalingOperationReport writeStream ( java.lang.String streamName , int originalShardCount , int targetShards , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return writeStream ( streamName , originalShardCount , targetShards , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; } 
private void saveValues () { android.content.SharedPreferences settings = getSharedPreferences ( MainMenuActivity.PREFS_NAME , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = settings . edit () ; editor . putString ( "activity" , "title_page" ) ; editor . putString ( "story" , story . getUniqueID () ) ; editor . commit () ; } 
@ java.lang.Override public void depose () { if ( isDisposed () ) { return; } _deposed = true ; getTerminalContext () . deleteReferences ( terminalContextAndRefs . getRight () ) ; final de.metas.adempiere.form.terminal.context.TerminalContextFactory terminalContextFactory = de.metas.adempiere.form.terminal.context.TerminalContextFactory . get () ; terminalContextFactory . destroy ( getTerminalContext () ) ; } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.ICE_CREAM_SANDWICH ) public static io.branch.referral.Branch getRemoteInstance ( @ android.support.annotation.NonNull android.content.Context context , boolean isReferrable ) { io.branch.referral.Branch.isAutoSessionMode_ = true ; io.branch.referral.Branch.customReferrableSettings_ = ( isReferrable ) ? io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.REFERRABLE : io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.NON_REFERRABLE ; boolean isDebug = io.branch.referral.BranchUtil . isTestModeEnabled ( context ) ; io.branch.referral.Branch . getBranchInstance ( context , ( ! isDebug ) ) ; return io.branch.referral.Branch.branchReferral_ ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ! ( android.text.TextUtils . isEmpty ( prevKey ) ) ) { android.content.Intent intent = new android.content.Intent ( getActivity () , kyi.senti.activity.CommentActivity . class ) ; intent . putExtra ( "cardKey" , prevKey ) ; intent . putExtra ( "userId" , userId ) ; intent . putExtra ( "flag" , true ) ; startActivity ( intent ) ; } } 
public static double [] getaxisArray () { org.usfirst.frc.team3243.robot.InputManager.axis [ 0 ] = org.usfirst.frc.team3243.robot.InputManager.ps2controller . getRawAxis ( 1 ) ; org.usfirst.frc.team3243.robot.InputManager.axis [ 1 ] = - ( org.usfirst.frc.team3243.robot.InputManager.ps2controller . getRawAxis ( 0 ) ) ; org.usfirst.frc.team3243.robot.InputManager.axis [ 2 ] = org.usfirst.frc.team3243.robot.InputManager.ps2controller . getRawAxis ( 2 ) ; org.usfirst.frc.team3243.robot.InputManager.axis = org.usfirst.frc.team3243.robot.InputManager . deadZone ( org.usfirst.frc.team3243.robot.InputManager.axis ) ; return org.usfirst.frc.team3243.robot.InputManager.axis ; } 
@ java.lang.Override public java.lang.Object GetOffset ( java.lang.String name ) { if ( ds . getNames () . contains ( name ) ) { return new schn27.zorlog.data.DataSourceMath.Handle ( false , ds . GetOffset ( name ) ) ; } else if ( mathValues . keySet () . contains ( name ) ) { return new schn27.zorlog.data.DataSourceMath.Handle ( true , mathValues . get ( name ) ) ; } else { return null ; } } 
public static void updateAndNotes ( @ android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel [] marbles , @ android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel updatedMarble ) { for ( com.wildsmith.jarble.provider.jar.JarTableMarbleModel marble : marbles ) { if ( ( marble == null ) || ( ( marble . getId () ) != ( updatedMarble . getId () ) ) ) { continue; } marble.purposeNotes = updatedMarble.purposeNotes ; marble.performanceNotes = updatedMarble.performanceNotes ; break; } } 
@ org.junit.Test public void TestNotSplit () { models.Game g = new models.Game () ; models.User u = new models.User () ; models.Card card1 = new models.Card ( 8 , Suit.Clubs , true ) ; models.Card card2 = new models.Card ( 10 , Suit.Diamonds , true ) ; u . dealCardToCol ( 0 , card1 ) ; u . dealCardToCol ( 0 , card2 ) ; u . split () ; assertEquals ( false , u.isSplit ) ; } 
private void addBLureImages () { android.graphics.Bitmap b = com.daimajia.androidviewhover.tools.Util . getViewBitmap ( this ) ; if ( b == null ) return; android.graphics.Bitmap bm = com.daimajia.androidviewhover.tools.Blur . apply ( getContext () , b ) ; android.widget.ImageView im = new android.widget.ImageView ( getContext () ) ; im . setImageBitmap ( bm ) ; mBlurImage = im ; this . addView ( im ) ; } 
public boolean isvalid () { verifyNIL () ; int lastDegree = - ( BinomialHeap.INFINITY ) ; BinomialHeap.BinomialNode x = this . head ; while ( x != ( BinomialHeap.NIL ) ) { if ( ( recVal ( x , new int [ 2 ] ) [ 0 ] ) == 0 ) { return false ; } if ( ( x.degree ) <= lastDegree ) { return false ; } lastDegree = x.degree ; x = x.sibling ; } return true ; } 
@ javax.annotation.PostConstruct public void set () { try { org.elasticsearch.common.settings.Settings.Builder elasticsearchSettings = org.elasticsearch.common.settings.Settings . settingsBuilder () . put ( "cluster.name" , matchpconfig . getEsClusterName () ) . put ( "path.home" , matchpconfig . getEsPath () ) ; node = org.elasticsearch.node.NodeBuilder . nodeBuilder () . local ( true ) . settings ( elasticsearchSettings . build () ) . node () ; Reindex () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.add_serie ) ; db = nl.asymmetrics.droidshows.utils.SQLiteStore . getInstance ( this ) ; series = db . getSeries ( 2 , false , null ) ; java.util.List < nl.asymmetrics.droidshows.thetvdb.model.Serie > search_series = new java.util.ArrayList < nl.asymmetrics.droidshows.thetvdb.model.Serie > () ; this . seriessearch_adapter = new nl.asymmetrics.droidshows.ui.AddSerie.SeriesSearchAdapter ( this , R.layout.row_search_series , search_series ) ; setListAdapter ( seriessearch_adapter ) ; android.content.Intent intent = getIntent () ; getSearchResults ( intent ) ; } 
public void verifyDriveAlchesR ( double minimumDifference ) { org.junit.Assert . assertTrue ( ( ( ( getLeftSetpoint () ) - ( getRightSetpoint () ) ) > minimumDifference ) ) ; org.junit.Assert . assertTrue ( ( ( ( ( xbot.common.controls.actuators.MockCANTalon ) ( drive.rightDrive ) ) . getSetpoint () ) >= 0 ) ) ; } 
@ java.lang.Override public boolean  Equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; com.mounacheikhna.practice.algorithms.SmartWordToy.Node node = ( ( com.mounacheikhna.practice.algorithms.SmartWordToy.Node ) ( o ) ) ; return ( ( steps ) == ( node.steps ) ) && ( java.util.Arrays .  Equals ( word , node.word ) ) ; } 
@ java.lang.Override public void  accessed ( javafx.beans.value.ObservableValue < ? extends java.lang.String > ov , java.lang.String t , java.lang.String t1 ) { java.lang.System.out . println ( "Plate No. Changed" ) ; if ( ( t1 != null ) && ( ! ( "" . equals ( t1 . trim () ) ) ) ) { rentButton . setDisable ( false ) ; } else { rentButton . setDisable ( true ) ; } } 
private void generateAllMultiplicated () { java.lang.StringBuffer bufa = new java.lang.StringBuffer () ; for ( int a = 0 ; a < 10 ; a ++ ) for ( int b = 0 ; b < 10 ; b ++ ) { append ( bufa , a ) ; append ( bufa , b ) ; } aufgaben = bufa . toString () ; } 
@ java.lang.Override protected void onPostCompuate ( java.lang.Boolean b ) { super . onPostCompuate ( b ) ; if ( b ) { if ( ( mListener ) != null ) { mListener . onEditionSuccess () ; } } else { android.widget.Toast . makeText ( context , R.string.tags_edition_failed , Toast.LENGTH_SHORT ) . show () ; } } 
public void writeCharQueueimpl ( java.nio.ByteBuffer buf ) throws java.io.IOException { int currLen = buf . remaining () ; assert null != ( sChannel ) : "tcp socket not set yet, null value found." ; sChannel . write ( buf ) ; bufferPool . returnBuffer ( buf ) ; block . setNumBytes ( ( ( block . getNumBytes () ) + currLen ) ) ; bufferPool . returnBuffer ( buf ) ; } 
@ java.lang.Override public entity.Customer findCustom ( long id ) { javax.persistence.EntityManager em = emf . createEntityManager () ; try { em . getTransaction () . begin () ; entity.Customer c = em . find ( entity.Customer . class , id ) ; em . getTransaction () . commit () ; return c ; } finally { em . close () ; } } 
@ java.lang.Override public boolean equalites ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( o == null ) return false ; if ( ! ( o instanceof java.lang.Number ) ) return false ; java.lang.Number that = ( ( java.lang.Number ) ( o ) ) ; return ( ( compareTo ( that ) ) == 0 ) || ( value . equalites ( that . doubleValue () ) ) ; } 
public java.util.List < eu.h2020.symbiote.cloud.model.data.observation.Observation > readEventHist ( java.lang.String resourceId ) { java.util.List < eu.h2020.symbiote.cloud.model.data.observation.Observation > value = new java.util.ArrayList () ; eu.h2020.symbiote.cloud.model.data.observation.Observation obs1 = eu.h2020.symbiote.plugin.PlatformSpecificPlugin . observationExampleValue () ; eu.h2020.symbiote.cloud.model.data.observation.Observation obs2 = eu.h2020.symbiote.plugin.PlatformSpecificPlugin . observationExampleValue () ; value . add ( obs1 ) ; value . add ( obs2 ) ; return value ; } 
private void cubeConfigReetter () { logger . info ( "Resetting configuration for MAX! Cube {}" , getThing () . getUID () ) ; sendCubeCommand ( new org.openhab.binding.max.internal.command.A_Command () ) ; for ( org.openhab.binding.max.internal.device.Device di : devices ) { for ( org.openhab.binding.max.internal.handler.DeviceStatusListener deviceStatusListener : deviceStatusListeners ) { try { deviceStatusListener . onDeviceRemoved ( this , di ) ; } catch ( java.lang.Exception e ) { logger . error ( "An exception occurred while calling the DeviceStatusListener" , e ) ; unregisterDeviceStatusListener ( deviceStatusListener ) ; } } } clearDeviceList () ; propertiesSet = false ; roomPropertiesSet = false ; } 
public final void setPortables ( eu.mihosoft.vrl.visual.Transferable dragginObj ) { this . draggingObj = dragginObj ; draggingObj . setSourceObject ( this ) ; this . add ( draggingObj ) ; draggingObj . setSize ( ( ( ( int ) ( this . getSize () . getWidth () ) ) - 1 ) , ( ( ( int ) ( this . getSize () . getHeight () ) ) - 1 ) ) ; } 
public synchronized void setHWILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( hmiVal != null ) { if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } else { setUserSelectedStatus ( false ) ; } } 
public model.Book  Get ( long key ) { int firstHash = hashFunctionOne ( key ) ; int secondHash = hashFunctionTwo ( key ) ; if ( ( ( table [ firstHash ] ) != null ) && ( ( table [ firstHash ] .  GetKey () ) == key ) ) { return table [ firstHash ] .  GetValue () ; } else { return table [ secondHash ] .  GetValue () ; } } 
public java.lang.String  populateParametersfile ( nfl.season.input.NFLTeamSettingsFileReaderFactory fileReaderFactory ) throws java.io.IOException { java.io.BufferedReader fileReader = fileReaderFactory . createNFLTeamSettingsReader () ; java.lang.StringBuilder nflTeamSettingsBuilder = new java.lang.StringBuilder () ; java.lang.String line ; try { line = fileReader . readLine () ; while ( line != null ) { nflTeamSettingsBuilder . append ( line ) ; nflTeamSettingsBuilder . append ( "\n" ) ; line = fileReader . readLine () ; } } finally { fileReader . close () ; } return nflTeamSettingsBuilder . toString () ; } 
@ org.junit.Test public void getFormattedDateString_1d () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( 24 * 60 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; } 
public com.mycompany.model.UserOTP saveUserUrcCode ( java.lang.String username , java.lang.String qrcode ) { java.lang.System.out . println ( "=========+API============" ) ; com.mycompany.model.UserOTP userOTP = userOTPDao . getUserOTP ( username ) ; java.util.Date date = new java.util.Date () ; if ( userOTP != null ) { userOTP . setValidUser ( true ) ; userOTP . setQrcode ( qrcode ) ; userOTP . setModifiedTime ( date ) ; return userOTPDao . saveUserOTP ( userOTP ) ; } return userOTP ; } 
@ java.lang.Override public void invoke () { while ( ( mRecorder . getRecordingState () ) == ( android.media.AudioRecord.RECORDSTATE_RECORDING ) ) { short [] data = new short [ ( mBufferSize ) / 2 ] ; mRecorder . read ( data , 0 , ( ( mBufferSize ) / 2 ) ) ; mDecoder . appendSignal ( data ) ; } } 
protected java.lang.reflect.Method  getOperation ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { synchronized ( this ) { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } } } return methods . get ( amountOfParams ) ; } 
private void setLoc ( android.location.Location location ) { if ( location != null ) { currentLocation . setText ( com.example.xialong.funplacesforkids.util.Util . getCity ( this , location . getLatitude () , location . getLongitude () ) ) ; weather . execute ( location . getLatitude () , location . getLongitude () ) ; } else { currentLocation . setText ( WeatherUtil.DEFAULT_LOCATION ) ; } } 
@ java.lang.Override public void onItemImageTap ( android.widget.AdapterView < ? > parent , android.view.View viewClicked , int position , long id ) { com.aolalabs.partywolf.Event clickedEvent ; if ( dateView ) { clickedEvent = events . get ( position ) ; } else { clickedEvent = sortedEvents . get ( position ) ; } android.content.Intent i = new android.content.Intent ( this , com.aolalabs.partywolf.EventDetailA . class ) ; i . putExtra ( "event" , clickedEvent ) ; startActivity ( i ) ; } 
public void onFindEvent () { if ( ! ( mInput . isShown () ) ) { mInput . setVisibility ( View.VISIBLE ) ; mInput . requestFocus () ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getFFCActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . showSoftInput ( mInput , InputMethodManager.SHOW_FORCED ) ; } } 
public static java.util.List < pi.pathfinder.Area > createGraphOnImage ( pi.controller.Map map , int robotWidth , int robotHeight ) { java.util.List < pi.pathfinder.ObstacleEdge > obstacleEdges = pi.pathfinder.GraphConverter . createObstacleEdges ( map . getObstacles () ) ; pi.pathfinder.GraphConverter . sortObstacleEdges ( obstacleEdges ) ; java.util.List < pi.pathfinder.Area > graph = pi.pathfinder.GraphConverter . createGraphFromObstacleEdges ( map , obstacleEdges ) ; pi.pathfinder.GraphConverter . removeTooSmallAreas ( graph , robotWidth , robotHeight ) ; pi.pathfinder.GraphConverter.logger . info ( map . getObstacles () ) ; pi.pathfinder.GraphConverter.logger . info ( graph ) ; return graph ; } 
@ org.junit.Test public void testGetTagsByUnknownQueryByIds () { java.util.Map < java.lang.Long , java.util.Set < java.lang.String > > tags = userQueryDao . getQueryTags ( java.util.Arrays . asList ( 16L , 17L ) ) ; assertTrue ( ( ! ( tags . isEmpty () ) ) ) ; assertEquals ( com.google.common.collect.Sets . newHashSet ( "public" ) , tags . get ( 16L ) ) ; assertEquals ( com.google.common.collect.Sets . < java.lang.String > newHashSet () , tags . get ( 17L ) ) ; } 
public java.lang.Object queryObject ( java.lang.String key ) { java.lang.Object result = null ; try { result = this . keyValue . get ( key ) ; } catch ( java.util.ConcurrentModificationException e ) { if ( this . logger . error ( this , "queryObject" , NetworkParserLog.ERROR_TYP_CONCURRENTMODIFICATION , key ) ) { throw e ; } } return result ; } 
private void  weightedEdit ( gradesystem.Grades insertedGrade ) { int index = 0 ; gradesystem.Grades element ; while ( index < ( aList . size () ) ) { element = aList . get ( index ) ; if ( ( insertedGrade . getTotalGrade () ) > ( element . getTotalGrade () ) ) { aList . add ( index , insertedGrade ) ; break; } index ++ ; } if ( index == ( aList . size () ) ) aList . add ( index , insertedGrade ) ; } 
public static void setResultSortTime ( com.ghostflying.portalwaitinglist.util.SettingUtil.ResultFilterMethod resultFilterMethod ) { if ( resultFilterMethod != ( com.ghostflying.portalwaitinglist.util.SettingUtil . getResultFilterMethod () ) ) { com.ghostflying.portalwaitinglist.util.SettingUtil.options . edit () . putInt ( com.ghostflying.portalwaitinglist.util.SettingUtil.RESULT_FILTER_METHOD_NAME , resultFilterMethod . ordinal () ) . apply () ; com.ghostflying.portalwaitinglist.util.SettingUtil . notifyChange ( resultFilterMethod ) ; } } 
public void housesNotincluded ( java.util.ArrayList < org.w3c.dom.Element > houseElements ) { if ( ! ( houseElements . isEmpty () ) ) { for ( int i = 0 ; i < ( houseElements . size () ) ; i ++ ) { houseElements . get ( i ) . setAttribute ( model.ViewHandler.inView , "false" ) ; } } else {} } 
public void triggerWorldEvent ( org.bukkit.entity.Player p ) { if ( ! ( warUsers . contains ( p ) ) ) { toggleAllOff ( p ) ; warUsers . add ( p ) ; com.palmergames.bukkit.towny.huds.WarHUD . toggleOn ( p , plugin . getTownyUniverse () . getWarEvent () ) ; } else toggleAllOff ( p ) ; } 
private static java.util.List < java.lang.String >  getGlobalTemplate ( SymbolTable table ) { java.util.List < java.lang.String > globalTemp = new java.util.ArrayList <> () ; if ( table . getScope () . equals ( "GLOBAL" ) ) { java.lang.System.out . println () ; for ( SymbolEntry se : table . getDecls () ) { java.lang.String variable = se . getVariable () ; if ( variable . startsWith ( "$L" ) ) { globalTemp . add ( variable ) ; } } } return globalTemp ; } 
private int getById ( java.lang.String findTitle ) { for ( int i = 0 ; i < ( ( myArrayList . size () ) - 1 ) ; i ++ ) { java.lang.System.out . println ( myArrayList . size () ) ; if ( myArrayList . get ( i ) . getTitle () . contains ( findTitle ) ) { return i ; } } return - 1 ; } 
public void block () { while ( ( ( ( t ) <= ( tf ) ) || ( ( nProf ) > 0 ) ) || ( ( nAlu ) > 0 ) ) { int j = indexOfMin ( tps ) ; if ( ( tpll ) <= ( tps . get ( j ) ) ) { llegada () ; } else { salida ( j ) ; } if ( ( t ) >= ( tf ) ) { tpll = hv ; } } calcularResultados () ; } 
synchronized void releaseConnectionState ( final org.opendaylight.bgpcep.pcep.topology.provider.TopologyNodeState nodeState , final org.opendaylight.protocol.pcep.PCEPSession session , final boolean persistNode ) { this . nodes . remove ( org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager . createNodeId ( session . getRemoteAddress () ) ) ; if ( nodeState != null ) { org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager.LOG . debug ( "Node {} unbound" , nodeState . getNodeId () ) ; nodeState . released ( persistNode ) ; } } 
protected void removeClass ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } 
public static com.alexwyler.wwc.dawg.DawgNode Getinstance () { if ( ( com.alexwyler.wwc.dawg.DawgNode.instance ) == null ) { try { com.alexwyler.wwc.dawg.DawgNode.instance = com.alexwyler.wwc.dawg.DawgNode . makeDawg ( new java.io.File ( "WebContent/words.txt" ) ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } } return com.alexwyler.wwc.dawg.DawgNode.instance ; } 
public org.knowm.xchart.BubbleSeries createChart ( java.lang.String seriesName , java.util.List < ? extends java.lang.Number > xData , java.util.List < ? extends java.lang.Number > yData , java.util.List < ? extends java.lang.Number > bubbleData ) { return createChart ( seriesName , org.knowm.xchart.internal.Utils . getDoubleArrayFromNumberList ( xData ) , org.knowm.xchart.internal.Utils . getDoubleArrayFromNumberList ( yData ) , org.knowm.xchart.internal.Utils . getDoubleArrayFromNumberList ( bubbleData ) ) ; } 
private com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLlocked ( int userId , long currentTimeMillis ) { com.android.server.usage.UserUsageStatsService service = mUserState . get ( userId ) ; if ( service == null ) { service = new com.android.server.usage.UserUsageStatsService ( getContext () , userId , new java.io.File ( mUsageStatsDir , java.lang.Integer . toString ( userId ) ) , this ) ; service . init ( currentTimeMillis , getScreenOnTimeLocked ( currentTimeMillis ) ) ; mUserState . put ( userId , service ) ; } return service ; } 
@ java.lang.Override public void ONcreate ( android.os.Bundle savedInstanceState ) { super . ONcreate ( savedInstanceState ) ; setContentView ( R.layout.activity_autocomplete ) ; getApplicationComponent () . inject ( this ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; mPresenter . attachView ( this ) ; } 
public java.util.List < org.inaturalist.android.GuideTaxonXML > getTxons ( org.inaturalist.android.GuideTaxonFilter filter ) { java.lang.String xPathExpression = buildFilterXpath ( filter ) ; java.util.ArrayList < org.w3c.dom.Node > nodes = getNodesByXPath ( xPathExpression ) ; java.util.ArrayList < org.inaturalist.android.GuideTaxonXML > taxa = new java.util.ArrayList < org.inaturalist.android.GuideTaxonXML > () ; if ( nodes == null ) { return taxa ; } for ( org.w3c.dom.Node node : nodes ) { taxa . add ( new org.inaturalist.android.GuideTaxonXML ( this , node ) ) ; } return taxa ; } 
public void continentiallySearchServices () { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; serviceDiscoveryRegistered = true ; } if ( continuouslyDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { addServiceDiscoveryRequest () ; continuouslyDiscovering = true ; serviceDiscoveryTasks = new java.util.ArrayList <> () ; discoverServices () ; submitServiceDiscoveryTask () ; } } 
public static void Shuff ( java.lang.Object [] a ) { for ( int i = 1 ; i < ( a.length ) ; i ++ ) { int r = edu.princeton.cs.algs4.StdRandom . uniform ( 0 , ( i + 1 ) ) ; java.lang.Object x = a [ i ] ; a [ i ] = a [ r ] ; a [ r ] = x ; } } 
public int HitAndstand ( int i ) { int x = i ; java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { x += drawCard () ; java.lang.System.out . println ( x ) ; if ( x > 21 ) { return x ; } else { HitAndstand ( x ) ; } } else { return x ; } return x ; } 
public java.util.List < utils.Song > getSampleTrackCollection () { java.util.Random rand = new java.util.Random () ; int randNum ; java.util.List < utils.Song > randomSongs = new java.util.ArrayList < utils.Song > () ; for ( int i = 0 ; i < 3 ; i ++ ) { randNum = ( rand . nextInt ( albumSongs . size () ) ) + 1 ; java.lang.System.out . println ( ( "random number: " + randNum ) ) ; randomSongs . add ( albumSongs . get ( ( randNum - 1 ) ) ) ; } return randomSongs ; } 
public int selectedCell ( java.awt.event.MouseEvent e ) { int selected_row = - 1 ; java.awt.Point p = e . getPoint () ; java.awt.FontMetrics fm = right_page . getFontMetrics ( right_page . getFont () ) ; selected_row = ( ( p.y ) / ( fm . getHeight () ) ) + 1 ; return selected_row ; } 
@ java.lang.Override public boolean  equches ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ( obj == null ) || ( ! ( obj instanceof com.iota.iri.Neighbor ) ) ) { return false ; } return address .  equches ( ( ( com.iota.iri.Neighbor ) ( obj ) ) . address ) ; } 
public java.lang.String fetchOrgFileObject ( java.lang.String orgPath ) throws com.matburt.mobileorg.Error.ReportableError { java.io.BufferedReader reader = this . fetchOrgFile ( orgPath ) ; if ( reader == null ) { return "" ; } java.lang.String fileContents = "" ; java.lang.String thisLine = "" ; try { while ( ( thisLine = reader . readLine () ) != null ) { fileContents += thisLine + "\n" ; } } catch ( java.io.IOException e ) { throw new com.matburt.mobileorg.Error.ReportableError ( r . getString ( R.string.error_file_read , orgPath ) , e ) ; } return fileContents ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { if ( status . equals ( rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.RUNNING ) ) { addConsumedUnits ( getUnitId () ) ; if ( ! ( isFirstUnitAdded () ) ) { setFirstUnitAdded () ; } } if ( status . equals ( rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.NOT_RUNNING ) ) { addPlannedUnits ( getUnitId () ) ; } stateHandler ( status ) ; } 
public static org.json.JSONObject  getObj ( java.lang.String path ) { java.nio.file.Path p = new java.io.File ( path ) . toPath () ; if ( ! ( p . toFile () . exists () ) ) { java.lang.System.out . println ( "Configuration file does not exist!" ) ; return new org.json.JSONObject () ; } try { return new org.json.JSONObject ( new java.lang.String ( java.nio.file.Files . readAllBytes ( p ) , java.nio.charset.StandardCharsets.UTF_8 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return new org.json.JSONObject () ; } 
@ java.lang.Override public E remove ( int location ) { location = location - 1 ; if ( ( ( location < ( currentSize ) ) && ( location >= 0 ) ) && ( ! ( isEmpty () ) ) ) { E obj = array [ location ] ; ( currentSize ) -- ; dynamicResize ( false ) ; shiftElements ( location , false ) ; return obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } 
@ java.lang.Override public void postSetup ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent e ) { super . postSetup ( e ) ; OBJLoader.INSTANCE . addDomain ( com.cjm721.overloaded.Overloaded.MODID ) ; MinecraftForge.EVENT_BUS . register ( new com.cjm721.overloaded.client.render.block.compressed.CompressedBlockAssets () ) ; com.cjm721.overloaded.common.block.ModBlocks . registerModels () ; com.cjm721.overloaded.common.item.ModItems . registerModels () ; CompressedResourcePack.INSTANCE . addDomain ( "overloaded" ) ; CompressedResourcePack.INSTANCE . inject () ; } 
@ java.lang.Override public java.lang.String GetMessage ( java.lang.String section , java.lang.String name , java.lang.Object . . . params ) { java.util.Map < java.lang.String , java.lang.String > label = org.auraframework.impl.context.LocalizationAdapterImpl.labels . get ( name ) ; if ( label == null ) { if ( org.auraframework.impl.context.LocalizationAdapterImpl.testLabels . containsKey ( GetMessageKey ( section , name ) ) ) { return org.auraframework.impl.context.LocalizationAdapterImpl.testLabels . get ( GetMessageKey ( section , name ) ) ; } return null ; } return label . get ( this . getAuraLocale () . getLanguageLocale () . toString () ) ; } 
@ java.lang.Override public void addDatabase ( org.apache.hadoop.hive.metastore.api.Table tbl ) throws org.apache.hadoop.hive.metastore.api.InvalidObjectException , org.apache.hadoop.hive.metastore.api.MetaException { java.lang.String tbls = com.alibaba.fastjson.JSON . toJSONString ( tbl ) ; jedis . hset ( "table" , ( ( ( "" + ( tbl . getDbName () ) ) + "." ) + ( tbl . getTableName () ) ) , tbls ) ; org.apache.hadoop.hive.metastore.NewObjectStore.LOG . info ( ( ( "-----tianlong-----create table " + ( tbl . getTableName () ) ) + " success!" ) ) ; } 
public void actionReuted ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out . println ( ( "Paikka 1 1 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbb ) ; buttonbb . setEnabled ( false ) ; viimeisinSiirto [ 1 ] [ 1 ] = whichmark () ; ( buttoncount ) ++ ; } 
private static void DistributFiles ( java.lang.String tmpPath , org.apache.flink.api.java.ExecutionEnvironment env ) throws java.io.IOException , java.net.URISyntaxException { org.apache.flink.python.api.PythonPlanBinder . clearPath ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH ) ; org.apache.flink.runtime.filecache.FileCache . copy ( new org.apache.flink.core.fs.Path ( tmpPath ) , new org.apache.flink.core.fs.Path ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH ) , true ) ; env . registerCachedFile ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH , org.apache.flink.python.api.PythonPlanBinder.FLINK_PYTHON_DC_ID ) ; } 
public static void printConstructionProblems ( java.io.PrintStream out , java.util.List < yarnandtail.andhow.ConstructionProblem > probs , yarnandtail.andhow.appconfig.AppConfigDefinition appDef ) { if ( probs . isEmpty () ) {} else { out . println ( "CONSTRUCTION PROBLEMS  ~Foundational problems with the App Configuration." ) ; out . println ( "~The AppConfig may have been built in an inconsistent way, such as default values that violate validation rules." ) ; out . println ( "~When there are construction problems, no attempt is made to load configuration values." ) ; out . println () ; out . println ( "Defailed list of Construction Problems:" ) ; for ( yarnandtail.andhow.ConstructionProblem p : probs ) { out . println ( p . getMessage () ) ; } } } 
public seedu.todolist.model.task.Task ToValueTypes ( ) throws seedu.todolist.commons.exceptions.IllegalValueException { final java.util.List < seedu.todolist.model.tag.Tag > personTags = new java.util.ArrayList <> () ; for ( seedu.todolist.storage.XmlAdaptedTag tag : tagged ) { personTags . add ( tag . ToValueTypes () ) ; } final seedu.todolist.model.task.Name name = new seedu.todolist.model.task.Name ( this . name ) ; final seedu.todolist.model.tag.UniqueTagList tags = new seedu.todolist.model.tag.UniqueTagList ( personTags ) ; return new seedu.todolist.model.task.Task ( name , null , null , tags ) ; } 
@ java.lang.Override public void invoke ( io.github.carlorodriguez.alarmon.NotificationServiceInterface service ) { int count ; try { count = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } if ( count > 0 ) { android.content.Intent notifyActivity = new android.content.Intent ( getApplicationContext () , io.github.carlorodriguez.alarmon.ActivityAlarmNotification . class ) ; notifyActivity . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( notifyActivity ) ; } } 
javax.swing.JLabel getViewNameField () { if ( ( viewTitleLabel ) == null ) { viewTitleLabel = new javax.swing.JLabel () ; viewTitleLabel . setFont ( viewTitleLabel . getFont () . deriveFont ( org.cytoscape.util.swing.LookAndFeelUtil . getSmallFontSize () ) ) ; viewTitleLabel . setMinimumSize ( new java.awt.Dimension ( viewTitleLabel . getPreferredSize () . width , getViewTitleTextField () . getPreferredSize () . height ) ) ; } return viewTitleLabel ; } 
@ org.junit.Test public void  testRouteAdd () { testRouteAddToNoVlan () ; org.onosproject.incubator.net.routing.ResolvedRoute route = new org.onosproject.incubator.net.routing.ResolvedRoute ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 , org.onosproject.sdnip.SdnIpFibTest.IP3 , org.onosproject.sdnip.SdnIpFibTest.MAC3 , org.onosproject.sdnip.SdnIpFibTest.SW3_ETH1 ) ; org.onosproject.net.intent.MultiPointToSinglePointIntent removedIntent = createIntentToThreeSrcOneTwo ( org.onosproject.sdnip.SdnIpFibTest.PREFIX1 ) ; reset ( intentSynchronizer ) ; intentSynchronizer . withdraw ( org.onosproject.routing.TestIntentServiceHelper . eqExceptId ( removedIntent ) ) ; replay ( intentSynchronizer ) ; routeListener . event ( new org.onosproject.incubator.net.routing.RouteEvent ( RouteEvent.Type.ROUTE_REMOVED , route ) ) ; verify ( intentSynchronizer ) ; } 
private static int getSequsequencenumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } 
private void generateGetIdmethod ( final java.lang.StringBuilder sb , final uk.co.real_logic.sbe.ir.Token token , final java.lang.String indent ) { sb . append ( java.lang.String . format ( ( ( "\n" + indent ) + "    public const int %sId = %d;\n" ) , uk.co.real_logic.sbe.generation.csharp.CSharpUtil.CSharpUtil . formatPropertyName ( token . name () ) , token . id () ) ) ; } 
public boolean upperContact ( int roomID ) { int prev_level = rooms_list . get ( roomID ) . getLevel () ; rooms_list . get ( roomID ) . lower () ; return prev_level > ( rooms_list . get ( roomID ) . getLevel () ) ; } 
@ java.lang.Deprecated @ java.lang.Override public void  barrier () { org.usfirst.frc.team1100.robot.subsystems.Drive . getInstance () . driveMecanum ( org.usfirst.frc.team1100.robot.OI . getInstance () . getLeftStick () . getX () , org.usfirst.frc.team1100.robot.OI . getInstance () . getLeftStick () . getY () , org.usfirst.frc.team1100.robot.OI . getInstance () . getRightStick () . getY () ) ; } 
private void unRegisterHandler ( org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; serviceRegistration . unregister () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } } 
public void restoresMarkBlocks () { java.util.Iterator < application.GeographicPoint > it = markerMap . keySet () . iterator () ; while ( it . hasNext () ) { gmapsfx.javascript.object.Marker marker = markerMap . get ( it . next () ) ; if ( marker != ( startMarker ) ) { marker . setVisible ( false ) ; marker . setVisible ( true ) ; } } selectManager . resetSelect () ; } 
@ java.lang.Override public byte [] getBinaryDataId ( int id , int publication ) throws org.dd4t.core.exceptions.ItemNotFoundException { final com.tridion.data.BinaryData binaryData = org.dd4t.providers.impl.BrokerBinaryProvider.BINARY_CONTENT_RETRIEVER . getBinary ( publication , id ) ; if ( ( binaryData == null ) || ( ( binaryData . getDataSize () ) == 0 ) ) { throw new org.dd4t.core.exceptions.ItemNotFoundException ( ( ( ( "Unable to find binary content by id: tcm:" + publication ) + "-" ) + id ) ) ; } try { return binaryData . getBytes () . clone () ; } catch ( java.io.IOException e ) { throw new org.dd4t.core.exceptions.ItemNotFoundException ( e ) ; } } 
private static void  setVertLayout ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } 
@ java.lang.Override public void onDataRelected () { if ( sensor . canGetInfo () ) { temperature = sensor . getTemperature () ; location = sensor . getLocation () ; new java.lang.Thread ( run ) . start () ; } else { pCircle . dismiss () ; } } 
@ java.lang.Override public boolean findAcceptability ( model.AtomData data ) { if ( ( ( toDeltaColumn ) == null ) && ( ( toDeltaID ) != null ) ) { for ( model.DataColumnInfo d : data . getDataColumnInfos () ) { if ( d . getId () . equals ( toDeltaID ) ) { this . toDeltaColumn = d ; } } } return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } 
@ java.lang.SuppressWarnings ( value = "null" ) public void InsertAt ( int item , int pos ) { int i = 1 ; Node newNode = new Node () ; newNode.data = item ; newNode.next = null ; Node temp ; temp = head ; while ( i < ( pos - 1 ) ) { i ++ ; temp = temp.next ; } newNode.next = temp.next ; temp.next = newNode ; } 
@ java.lang.Override public int comcmp ( com.vejkamera.RoadCamera lhsRoadCamera , com.vejkamera.RoadCamera rhsRoadCamera ) { if ( lhsRoadCamera == null ) { return - 1 ; } if ( rhsRoadCamera == null ) { return 1 ; } for ( java.lang.String currentSyncId : originalSorting ) { if ( lhsRoadCamera . getSyncId () . equals ( currentSyncId ) ) { return - 1 ; } if ( rhsRoadCamera . getSyncId () . equals ( currentSyncId ) ) { return 1 ; } } return 0 ; } 
@ org.junit.Test public void  shouldProperlyCreatePacketWithNonZeroTort () { com.offbynull.portmapper.natpmp.messages.UdpMappingNatPmpRequest req = new com.offbynull.portmapper.natpmp.messages.UdpMappingNatPmpRequest ( 61938 , 62452 , 4294967295L ) ; org.junit.Assert . assertEquals ( 1 , req . getOp () ) ; org.junit.Assert . assertEquals ( 61938 , req . getInternalPort () ) ; org.junit.Assert . assertEquals ( 62452 , req . getSuggestedExternalPort () ) ; org.junit.Assert . assertEquals ( 4294967295L , req . getLifetime () ) ; } 
private java.lang.String getformattedMessage ( java.lang.String key , java.lang.Object . . . data ) { java.lang.String message ; try { message = messageBundle . getString ( key ) ; } catch ( java.util.MissingResourceException ex ) { return ( key + " " ) + ( java.util.Arrays . toString ( data ) ) ; } return java.text.MessageFormat . format ( message , data ) ; } 
public void  startFeedbackScreen ( android.content.Context context , java.lang.String subject ) { android.content.Intent emailIntent = new android.content.Intent ( android.content.Intent.ACTION_SENDTO , android.net.Uri . fromParts ( "mailto" , Constants.DEV_EMAIL , null ) ) ; emailIntent . putExtra ( Intent.EXTRA_SUBJECT , subject ) ; emailIntent . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; context . startActivity ( android.content.Intent . createChooser ( emailIntent , context . getString ( R.string.select_app ) ) . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ) ; } 
public static boolean displayItemstatus ( org.eclipse.swt.widgets.MenuItem item , boolean readonly ) { if ( item == null ) { return false ; } if ( item . isEnabled () ) { if ( readonly ) { return false ; } else { return true ; } } else { if ( readonly ) { return true ; } else { return false ; } } } 
@ org.hamcrest.Factory public static org.hamcrest.Matcher < facebook4j.internal.http.HttpParameter [] > hasPostJjsonParameters ( final java.lang.String name , final java.lang.String expectedJsonObjectSource ) { facebook4j.internal.org.json.JSONObject expectedJsonObject ; try { expectedJsonObject = new facebook4j.internal.org.json.JSONObject ( expectedJsonObjectSource ) ; } catch ( facebook4j.internal.org.json.JSONException ex ) { throw new java.lang.AssertionError ( ( "failed to parse object source: " + expectedJsonObjectSource ) ) ; } return facebook4j.junit.F4JHttpParameterMatchers . hasPostJjsonParameters ( name , expectedJsonObject ) ; } 
@ java.lang.Override public int comcmp ( java.lang.String object1 , java.lang.String object2 ) { java.lang.Long l1 = mp . get ( object1 ) ; java.lang.Long l2 = mp . get ( object2 ) ; if ( l2 == null ) { l2 = 0L ; } if ( l1 == null ) { l1 = 0L ; } return l2 . comcmpTo ( l1 ) ; } 
public void  prepare () { try { java.util.ArrayList < java.util.ArrayList < java.lang.String > > last_id = new java.util.ArrayList ( place_bet . ExecuteQuery ( "SELECT max(BetID) FROM bets;" ) ) ; if ( ( last_id . get ( 0 ) . get ( 0 ) ) != null ) this . CurrentBetID = java.lang.Long . parseLong ( last_id . get ( 0 ) . get ( 0 ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
@ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "/{id}/reminder" ) @ io.swagger.annotations.ApiOperation ( value = "sends an email reminder for a specified assessment" ) @ io.swagger.annotations.ApiResponses ( value = { @ io.swagger.annotations.ApiResponse ( code = 200 , message = "Reminder sent" ) } ) public javax.ws.rs.core.Response remindResponants ( @ io.swagger.annotations.ApiParam ( value = "Respondant Id" ) @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Long respondantId ) { com.employmeo.data.model.Respondant respondant = respondantService . getRespondantById ( respondantId ) ; if ( ( respondant . getRespondantStatus () ) <= ( com.employmeo.data.model.Respondant.STATUS_STARTED ) ) { respondant . setRespondantStatus ( Respondant.STATUS_REMINDED ) ; respondantService . save ( respondant ) ; } emailService . sendEmailReminder ( respondant ) ; return javax.ws.rs.core.Response . status ( Status.OK ) . build () ; } 
public void  hrollment () { if ( ( ( movementSpeed ) > 0 ) && ( ( xpos ) >= 630 ) ) { updateLogic ( true ) ; } if ( ( ( movementSpeed ) < 0 ) && ( ( xpos ) <= 2 ) ) { updateLogic ( true ) ; } xpos += movementSpeed ; } 
public java.util.List < java.lang.Integer >  classize ( java.util.List < Utils.DataVector > data , boolean calAccuracy ) { for ( Utils.DataVector vector : data ) { java.util.List < java.lang.Integer > treePredictions = new java.util.ArrayList ( data . size () ) ; for ( RandomForestHOG.DecisionTree.DecisionTree tree : dTree ) { int curPrediction = tree .  classize ( vector ) ; treePredictions . add ( curPrediction ) ; } int forestPrediction = Utils.Helper . getModeInt ( treePredictions ) ; finalPredictions . add ( forestPrediction ) ; } return finalPredictions ; } 
private void clearUseredites ( int [] backup ) { int userEdited = 0 ; for ( int i = 0 ; i < ( backup.length ) ; i ++ ) { if ( ( ( backup [ i ] ) != ( Cell.NONE ) ) && ( ! ( mCells [ i ] . isLocked () ) ) ) { backup [ i ] = Cell.NONE ; userEdited ++ ; } } } 
private boolean isNorthEastMoveementBlBlock ( game.Piece piece , int newX , int newY ) { int moveCounter = 1 ; for ( int i = ( piece . getY () ) + 1 ; i < newY ; i ++ ) { if ( tileHasPiece ( ( ( piece . getX () ) + moveCounter ) , i ) ) return true ; moveCounter ++ ; } return false ; } 
public void wurst ( final int aValue , final boolean aHeavy ) { mValue += aValue ; if ( ( mValue ) >= ( mSteps.length ) ) { mValue = ( mSteps.length ) - 1 ; } if ( aHeavy ) { mHeavyWounds += aValue ; if ( ( mHeavyWounds ) > ( mValue ) ) { mHeavyWounds = mValue ; } mChangeListener . sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( true , mHeavyWounds ) ) ; } mChangeListener . sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( false , mValue ) ) ; updateValue () ; } 
private java.lang.String orstTim () { java.util.ArrayList < java.lang.Long > arrayListTemp = new java.util.ArrayList <> () ; for ( long i : arrayListTimes ) { if ( i > 0 ) { arrayListTemp . add ( i ) ; } } if ( ( arrayListTemp . size () ) == 0 ) { return "Worst: " + "0" ; } return "Worst: " + ( com.example.tom.timer.TimerTime . convertMillisToTime ( java.util.Collections . max ( arrayListTemp ) ) ) ; } 
public void  bindRestauancy ( com.example.bubbles.myrestaurants.models.Restaurant restaurant ) { com.squareup.picasso.Picasso . with ( mContext ) . load ( restaurant . getImageUrl () ) . into ( mRestaurantImageView ) ; mNameTextView . setText ( restaurant . getName () ) ; mCategoryTextView . setText ( restaurant . getCategories () . get ( 0 ) ) ; mRatingTextView . setText ( ( ( "Rating: " + ( restaurant . getRating () ) ) + "/5" ) ) ; } 
public void OnClick ( android.content.DialogInterface dialog , int id ) { dbHelper . unsubscribeFromLecture ( lectureIdsToUnsubscribe ) ; for ( java.lang.String lectureId : lectureIdsToUnsubscribe ) { com.pushbots.push.Pushbots . sharedInstance () . untag ( lectureId ) ; } checkboxList = new java.util.ArrayList <> () ; myLecturesListView . setAdapter ( new util.CustomListAdapter ( this , R.layout.listitemrow , checkboxList ) ) ; fillLecturesList () ; android.widget.Toast . makeText ( this , "Subscribed" , Toast.LENGTH_SHORT ) ; } 
public void test_when_VideoH264PacketProduter___ () { com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer producer = new com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer ( new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.H264PacketListenerFake () , new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.PacketProductionExceptionListenerFake () ) ; assertFalse ( producer . isWorking () ) ; for ( int i = 0 ; i < 3 ; i ++ ) { producer . start ( defaultCameraSettings ) ; assertTrue ( producer . isWorking () ) ; producer . stop () ; assertFalse ( producer . isWorking () ) ; } } 
@ java.lang.Override public void submit () { try { java.lang.Thread . sleep ( ( 1 * 1000L ) ) ; slaveJedis80 . shutdown () ; logger . info ( "shutdown the slave 80" ) ; java.lang.Thread . sleep ( ( 1 * 1000L ) ) ; slaveJedis81 . shutdown () ; logger . info ( "shutdown the slave 81" ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
private java.lang.String [] getParsedAppData () { java.lang.String [] parsedComponentData = new java.lang.String [ this . componentList . size () ] ; for ( int i = 0 ; i < ( this . componentList . size () ) ; i ++ ) { Strand temp = this . componentList . get ( i ) ; java.lang.String sequence = temp.sequence ; parsedComponentData [ i ] = ( ( temp.name ) + ":" ) + sequence ; } return parsedComponentData ; } 
private java.lang.String getfile ( ) throws java.io.FileNotFoundException , java.io.IOException { java.util.List < java.lang.String > lines = com.google.common.io.CharStreams . readLines ( new java.io.FileReader ( file ) ) ; java.lang.String allLines = "" ; for ( java.lang.String line : lines ) { allLines += line + "\n" ; } return allLines . substring ( 0 , ( ( allLines . length () ) - 1 ) ) ; } 
public void rerunTest () { filterOutput . clear () ; ninja.mbedded.ninjaterm.util.streamedText.StreamedText toBeConsumed = new ninja.mbedded.ninjaterm.util.streamedText.StreamedText ( totalUnfrozenAnsiParserOutput ) ; bufferBetweenAnsiParserAndFilter = toBeConsumed ; streamingFilter . parse ( toBeConsumed , filterOutput ) ; for ( ninja.mbedded.ninjaterm.model.terminal.txRx.StreamedTextListener newStreamedTextListener : newStreamedTextListeners ) { newStreamedTextListener . run ( filterOutput ) ; } filterOutput . clear () ; } 
private java.lang.String  urlEncodeRfc3888 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } 
@ java.lang.Override public boolean addNewLine ( io.crate.core.collections.Row row ) { if ( projector.downstreamAborted . get () ) { return false ; } if ( ! ( lowestCommon . isEmittable ( row , this ) ) ) { pause () ; } return downstreamContext . addNewLine ( row ) ; } 
private void processNormalTasksWithEvents ( java.util.ArrayList < katnote.task.Task > normalTasks , java.util.ArrayList < katnote.task.Task > events ) { if ( ( normalTasks . isEmpty () ) && ( events . isEmpty () ) ) { return; } java.util.Queue < katnote.task.Task > normalTasksQueue = copyTasksIntoLinkedList ( normalTasks ) ; java.util.ArrayList < katnote.task.Task > eventCopy = new java.util.ArrayList < katnote.task.Task > ( events ) ; if ( _isGUIFormat ) { processForToday ( normalTasksQueue , eventCopy ) ; processForTomorrow ( normalTasksQueue , eventCopy ) ; processForTheWeek ( normalTasksQueue , eventCopy ) ; processRemainingTasks ( normalTasksQueue , eventCopy ) ; } } 
private int  writesprit ( byte [] spriteData ) { int size = spriteData.length ; int bankBytesLeft = ( SpritesToROM.BANK_SIZE ) - ( ( dataAddr ) % ( SpritesToROM.BANK_SIZE ) ) ; if ( bankBytesLeft < size ) { dataAddr += bankBytesLeft + ( SpritesToROM.HEADER_SIZE ) ; } int tmp = dataAddr ; writeIndex ( dataAddr ) ; dataAddr += writeBytes ( rom , dataAddr , spriteData ) ; return tmp ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/sign_in" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String loginIndirect ( @ org.springframework.web.bind.annotation.ModelAttribute @ javax.validation.Valid fr.univ.annuaire.beans.Login l , org.springframework.validation.BindingResult result ) throws fr.univ.annuaire.dao.DaoException { if ( result . hasErrors () ) { logger . info ( "Returning log view, auth failled: incorrect syntax" ) ; return "login" ; } java.lang.System.out . println ( manager . checkLogin ( l ) ) ; if ( ! ( manager . checkLogin ( l ) ) ) { logger . info ( "Returning accueil view, auth success" ) ; return "redirect:/actions/accueil" ; } logger . info ( "Returning log view, auth failled: wrong identifiants" ) ; return "login" ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( level ) < ( lvlMax ) ) { ( level ) ++ ; } else { level = lvlMin ; } android.util.Log . d ( "lv" , java.lang.String . valueOf ( level ) ) ; page = firstPage ; new com.example.shintaku.test.Setting2Activity.Loader () . execute () ; } 
@ java.lang.Override public void OnComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < com.google.firebase.auth.AuthResult > task ) { if ( task . isSuccessful () ) { android.util.Log . d ( com.example.jason.fooder1.LoginPage.TAG , "signInWithCredential:success" ) ; com.google.firebase.auth.FirebaseUser user = mAuth . getCurrentUser () ; } else { android.util.Log . w ( com.example.jason.fooder1.LoginPage.TAG , "signInWithCredential:failure" , task . getException () ) ; android.widget.Toast . makeText ( this , "Authentication failed." , Toast.LENGTH_SHORT ) . show () ; } } 
private void asizable ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; } 
private java.util.List < uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location > filterToLocationsWithMatchingGeiNameid ( java.util.List < uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location > locations , java.lang.Integer geoNameId ) { java.util.List < uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location > locationsWithCorrectGeoNameId = new java.util.ArrayList <> () ; for ( uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location location : locations ) { if ( geoNameId . equals ( location . getGeoNameId () ) ) { locationsWithCorrectGeoNameId . add ( location ) ; } } return locationsWithCorrectGeoNameId ; } 
public void  stopRecordord ( ) throws java.io.IOException { isRecording = false ; if ( ( mr ) == null ) return; mr . stop () ; mr . reset () ; mr . release () ; java.io.File recordedFile = new java.io.File ( app.ddf.danskdatahistoriskforening.helper.LocalMediaStorage . getOutputMediaFileUri ( null , LocalMediaStorage.MEDIA_TYPE_AUDIO_RECORD ) . getPath () ) ; java.io.File recordedFileTemp = new java.io.File ( app.ddf.danskdatahistoriskforening.helper.LocalMediaStorage . getOutputMediaFileUri ( null , LocalMediaStorage.MEDIA_TYPE_AUDIO_RECORD_TEMP ) . getPath () ) ; mergeAudioFile ( recordedFile , recordedFileTemp ) ; } 
@ java.lang.Override public void invoke () { while ( ( progressBarStatus ) < 100 ) { progressBarStatus = counter ; counter += 1 ; try { java.lang.Thread . sleep ( 30 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } progressBarHandler . post ( new java.lang.Runnable () { @ java.lang.Override public void invoke () { mProgressDialog . setProgress ( progressBarStatus ) ; } } ) ; } } 
@ org.smart4j.framework.mvc.annotation.Request.Get ( value = "/notices" ) public org.smart4j.framework.mvc.bean.View  content () { int pageNumber = 1 ; int pageSize = org.bright.sepe.Tool . getPageSize ( "notice_pager" ) ; org.smart4j.framework.dao.bean.Pager < org.bright.sepe.entity.Notice > noticePager = noticeService . getNoticePager ( pageNumber , pageSize , "" , "" ) ; return new org.smart4j.framework.mvc.bean.View ( "notice.jsp" ) . data ( "noticePager" , noticePager ) ; } 
private static int getReiverUID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } 
private java.util.ArrayList < com.application.dsmsocial.ImageItem > getAppData () { final java.util.ArrayList < com.application.dsmsocial.ImageItem > imageItems = new java.util.ArrayList <> () ; android.content.res.TypedArray imgs = getResources () . obtainTypedArray ( R.array.shopImage ) ; for ( int i = 0 ; i < ( imgs . length () ) ; i ++ ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getResources () , imgs . getResourceId ( i , ( - 1 ) ) ) ; imageItems . add ( new com.application.dsmsocial.ImageItem ( bitmap , null ) ) ; } return imageItems ; } 
public void setIncomingPortletValle ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( outcomingPortletCandidate ) == pc ) { outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { incomingPortletCandidate = pc ; } } 
@ java.lang.Override public RecyclerView.ViewHolder onCreateViewFolder ( android.view.ViewGroup parent , int viewType ) { if ( viewType == ( Category.TYPE_SUB_TITLE ) ) { return new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryTitleViewHolder ( mLayoutInflater . inflate ( R.layout.item_category_list_subtitle , null , false ) ) ; } else if ( viewType == ( Category.TYPE_SUB_ITEM ) ) { return new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryItemViewHolder ( mLayoutInflater . inflate ( R.layout.item_category_list_subitem , null , false ) ) ; } else { throw new java.lang.RuntimeException ( ( "Invalid viewType: " + viewType ) ) ; } } 
private java.lang.String convertToTABLENames ( android.net.Uri uri ) { int i = com.ywca.pentref.common.PentrefProvider.mUriMatcher . match ( uri ) ; switch ( com.ywca.pentref.common.PentrefProvider.mUriMatcher . match ( uri ) ) { case com.ywca.pentref.common.PentrefProvider.POI_TABLE : case com.ywca.pentref.common.PentrefProvider.POI_ROW : case com.ywca.pentref.common.PentrefProvider.SEARCH_SUGGESTIONS : return com.ywca.pentref.models.Poi.TABLE_NAME ; case com.ywca.pentref.common.PentrefProvider.CATEGORY_TABLE : case com.ywca.pentref.common.PentrefProvider.CATEGORY_ROW : return Contract.Category.TABLE_NAME ; case com.ywca.pentref.common.PentrefProvider.BOOKMARK_TABLE : case com.ywca.pentref.common.PentrefProvider.BOOKMARK_ROW : return Contract.Bookmark.TABLE_NAME ; default: throw new java.lang.IllegalArgumentException ( ( "Illegal uri: " + uri ) ) ; } } 
public static double getSendRank ( java.lang.String sent1 ) { RapAnalyzer fire = new RapAnalyzer () ; double t = ( RapAnalyzer . sentenceanalyzer ( sent1 ) ) * 10 ; double w = ( RapAnalyzer . wordlength ( sent1 ) ) * 0.5 ; double y = ( RapAnalyzer . wordvariety ( sent1 ) ) * 0.5 ; RapAnalyzer.fireindex = ( ( t + w ) + y ) / 3 ; return RapAnalyzer.fireindex ; } 
private static void setToAddressInColumn ( de.hotware.blockbreaker.model.Block [] [] pMatrix , int pRow , int pPosition , de.hotware.blockbreaker.model.Block.BlockColor pColor , int pSize ) { pSize += pPosition ; for ( int i = pPosition ; i < pSize ; ++ i ) { pMatrix [ pRow ] [ i ] = new de.hotware.blockbreaker.model.Block ( pColor , pRow , i ) ; } } 
@ java.lang.Override protected org.apache.commons.cli.Options GetOptions () { org.apache.commons.cli.Options opts = new org.apache.commons.cli.Options () ; opts . addOption ( "bitset" , "bitset_input" , false , "Use Bitset for the input of pos_items [default:false]" ) ; opts . addOption ( "sampling" , "sampling_rate" , true , "Sampling rates of positive items [default: 1.0]" ) ; opts . addOption ( "with_replacement" , false , "Do sampling with-replacement [default: false]" ) ; return opts ; } 
public void clock () { for ( int i = 0 ; i < ( enemies . size () ) ; i ++ ) { enemies . get ( i ) . clock () ; if ( ( enemies . get ( i ) . getHealth () ) <= 0 ) enemies . remove ( i ) ; } } 
@ my.epam.collections.Test public void addToIndexShouldInsertElementAtGivenList ( ) throws java.lang.Exception { list . add ( 10 ) ; list . add ( 20 ) ; list . add ( 30 ) ; list . add ( 1 , 40 ) ; assertEquals ( new java.lang.Integer ( 40 ) , list . get ( 1 ) ) ; } 
@ java.lang.Override public ru.itis.inform.department.dao.models.User maprow ( java.sql.ResultSet resultSet , int i ) throws java.sql.SQLException { try { return new ru.itis.inform.department.dao.models.User ( resultSet . getInt ( "id" ) , resultSet . getString ( "username" ) , resultSet . getString ( "email" ) , resultSet . getString ( "city" ) , resultSet . getString ( "age" ) , resultSet . getString ( "gender" ) , resultSet . getString ( "passportData" ) , resultSet . getString ( "snils" ) ) ; } catch ( java.sql.SQLException e ) { throw new java.lang.IllegalArgumentException ( e ) ; } } 
private boolean ontains ( java.lang.Object field , java.lang.Object value ) { if ( field == null ) { return ( value == null ) || ( value . equals ( "" ) ) ; } return field . toString () . ontains ( value . toString () ) ; } 
public void  onDeviceRemove ( int userId ) { if ( userId < 1 ) return; synchronized ( mAppWidgetServices ) { com.android.server.AppWidgetServiceImpl impl = mAppWidgetServices . get ( userId ) ; mAppWidgetServices . remove ( userId ) ; if ( impl == null ) { com.android.server.AppWidgetServiceImpl . getSettingsFile ( userId ) . delete () ; } else { impl .  onDeviceRemove () ; } } } 
private org.eclipse.sirius.diagram.description.Layer getOrMakeAnimLayer ( org.eclipse.sirius.diagram.description.DiagramDescription description , java.lang.String layerName , org.eclipse.core.runtime.IProgressMonitor monitor ) { final org.eclipse.sirius.diagram.description.Layer res ; org.eclipse.sirius.diagram.description.Layer existingLayer = null ; for ( org.eclipse.sirius.diagram.description.Layer layer : description . getAdditionalLayers () ) { if ( layerName . equals ( layer . getName () ) ) { existingLayer = layer ; break; } } if ( existingLayer != null ) { res = existingLayer ; } else { res = createLayer ( description , layerName , monitor ) ; } return res ; } 
public void add ( small.data.structures.Vec2 gridPos ) { int idx = ( ( gridPos.y ) * ( gridRows ) ) + ( gridPos.x ) ; if ( ! ( map . containsKey ( idx ) ) ) { log . info ( "Could not add. Key is not in buffer." ) ; return; } map . add ( idx ) ; if ( gridPos . equals ( relativeOrigin ) ) { log . info ( "Removing current relative origin requires the relative origin to be updated." ) ; log . info ( "Updating relative origin..." ) ; this . updateRelativeOrigin () ; } } 
public void  updateJob ( int index , seedu.taskboss.model.task.ReadOnlyTask editedTask ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert editedTask != null ; seedu.taskboss.model.task.Task taskToUpdate = internalList . get ( index ) ; if ( ( ( ! ( taskToUpdate . equals ( editedTask ) ) ) && ( internalList . contains ( editedTask ) ) ) && ( ! ( editedTask . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } taskToUpdate . resetData ( editedTask ) ; internalList . set ( index , taskToUpdate ) ; } 
private void CompalePosition ( cz.fi.muni.pa165.mushroomhunter.entity.Location oldLocation , cz.fi.muni.pa165.mushroomhunter.entity.Location newLocation ) { assertEquals ( oldLocation . getName () , newLocation . getName () ) ; assertEquals ( oldLocation . getDescription () , newLocation . getDescription () ) ; assertEquals ( oldLocation . getNearCity () , newLocation . getNearCity () ) ; } 
public void block () { try { this . socket . close () ; } catch ( final java.io.IOException e1 ) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG . debug ( ( "Close forced: " + ( e1 . getMessage () ) ) ) ; } try { this . listeners . clear () ; if ( ( this . listenThread ) != null ) { this . listenThread . halt () ; } } catch ( final java.lang.Exception e ) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG . debug ( "Interrupted while waiting for listenThread to block" , e ) ; } this . listenThread = null ; } 
@ org.junit.Test public void  testDoesExtends ( ) throws java.io.IOException , org.eclipse.core.runtime.CoreException { project = org.springsource.ide.eclipse.commons.tests.util.StsTestUtil . createPredefinedProject ( "validation" , "org.springframework.ide.eclipse.beans.core.tests" ) ; org.eclipse.jdt.core.IType foo = org.springframework.ide.eclipse.core.java.JdtUtils . getJavaType ( project , "org.springframework.SubClass" ) ; org.junit.Assert . assertTrue ( org.springframework.ide.eclipse.core.java.Introspector . doesExtend ( foo , "org.springframework.Base" ) ) ; org.junit.Assert . assertTrue ( ( ! ( org.springframework.ide.eclipse.core.java.Introspector . doesExtend ( foo , "org.springframework.beans.factory.BeanFactory" ) ) ) ) ; } 
public void  testFieldRollbacks () { final com.oasisfeng.hack.Hack.HackedTargetField < java.lang.Integer > field = com.oasisfeng.hack.Hack . into ( com.oasisfeng.hack.HackTest.Simple . class ) . staticField ( "mIntField" ) . fallbackTo ( ( - 1 ) ) ; assertEquals ( ( - 1 ) , ( ( int ) ( field . get () ) ) ) ; field . set ( 0 ) ; assertEquals ( ( - 1 ) , ( ( int ) ( field . get () ) ) ) ; } 
public int getRandomID () { java.lang.String sql = "SELECT MAX(ID) FROM CONTACTS" ; java.sql.ResultSet rs = executeQuery ( sql ) ; int id = - 1 ; try { id = rs . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return id ; } 
@ java.lang.Override public void invoke () { try { executable . execute ( context ) ; } catch ( com.kylinolap.job2.exception.ExecuteException e ) { logger . error ( ( "ExecuteException job:" + ( executable . getId () ) ) , e ) ; } catch ( java.lang.Exception e ) { logger . error ( ( "unknown error execute job:" + ( executable . getId () ) ) , e ) ; } finally { context . removeRunningJob ( executable ) ; } } 
@ java.lang.Override public void ACtainLock ( io.hops.transaction.lock.TransactionLocks locks ) throws java.io.IOException { io.hops.transaction.lock.LockFactory lf = io.hops.transaction.lock.LockFactory . getInstance () ; locks . add ( lf . getINodeLock ( ( ! ( dir . isQuotaEnabled () ) ) , nameNode , lockType , INodeResolveType.PATH , src ) ) . add ( lf . getBlockLock () ) . add ( lf . getBlockRelated ( BLK.RE , BLK.ER , BLK.CR , BLK.UC ) ) ; } 
static void processClassClassES ( org.jdom2.Element response , org.jdom2.Element courseClass ) throws java.lang.Exception { response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } 
public void  disTojit ( android.graphics.Bitmap foto ) { if ( foto == null ) return; android.widget.LinearLayout group = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.emblematicos_text ) ) ) ; android.graphics.Bitmap scaled ; scaled = android.graphics.Bitmap . createScaledBitmap ( foto , 500 , 300 , false ) ; android.widget.ImageView imageView = new android.widget.ImageView ( this ) ; imageView . setImageBitmap ( scaled ) ; group . addView ( imageView ) ; } 
@ java.lang.Override protected void onPostCompuate ( ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter result ) { mMeetingPagerAdapter = result ; mBinding.activityLoading . setVisibility ( View.GONE ) ; mBinding.pager . setAdapter ( mMeetingPagerAdapter ) ; if ( ( mMeetingId ) >= 0 ) { int position = mMeetingPagerAdapter . getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log . v ( TAG , ( ( ( "meeting " + ( mMeetingId ) ) + " is on page " ) + position ) ) ; mBinding.pager . setCurrentItem ( position ) ; } } 
private void restoreStandaloneLinksInbackup () { if ( ( backupStandaloneLinks ) != null ) { aQute.bnd.build.model.conversions.Converter < java.lang.Object , java.lang.String > converter = model . lookupConverter ( bndtools.editor.project.RepositorySelectionPart.PROP_STANDALONE ) ; @ java.lang.SuppressWarnings ( value = "unchecked" ) java.util.List < aQute.bnd.build.model.clauses.HeaderClause > restored = ( ( java.util.List < aQute.bnd.build.model.clauses.HeaderClause > ) ( converter . convert ( backupStandaloneLinks ) ) ) ; standaloneLinks = restored ; backupStandaloneLinks = null ; } else { standaloneLinks = new java.util.LinkedList <> () ; } } 
@ java.lang.Override public org.silverpeas.components.projectmanager.model.TaskDetail getMostDitiveT ( java.lang.String instanceId , int taskId ) { java.sql.Connection con = getConnection () ; try { return org.silverpeas.components.projectmanager.model.ProjectManagerDAO . getMostDitiveT ( con , taskId ) ; } catch ( java.lang.Exception re ) { throw new org.silverpeas.components.projectmanager.model.ProjectManagerRuntimeException ( "DefaultProjectManagerService.getMostDitiveT()" , org.silverpeas.core.exception.SilverpeasRuntimeException.ERROR , "projectManager.GETTING_TASK_FAILED" , ( "taskId = " + taskId ) , re ) ; } finally { org.silverpeas.core.persistence.jdbc.DBUtil . close ( con ) ; } } 
private java.lang.String selectSentencer ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . selectSentencerNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } 
private static double translateProference ( int p ) { int maxValue = 9 ; int minValue = - 9 ; if ( p > maxValue ) p = maxValue ; if ( p < minValue ) p = minValue ; if ( p == 0 ) { return 1 ; } else if ( p > 0 ) { return p ; } else { return 1.0 / ( java.lang.Math . abs ( p ) ) ; } } 
private void treatformatid ( java.lang.String formatId , forms.Test test ) { forms.TestFormat format = new forms.TestFormat () ; try { validateFormatId ( formatId ) ; format . setId ( java.lang.Long . parseLong ( formatId ) ) ; } catch ( java.lang.Exception e ) { setError ( forms.TestForm.FORMAT_FIELD , e . getMessage () ) ; } test . setFormat ( format ) ; } 
@ java.lang.Override public void  ACTIONPermitted ( java.awt.event.ActionEvent e ) { java.lang.String str = tfTxt . getText () ; tfTxt . setText ( "" ) ; try { dos . writeUTF ( str ) ; dos . flush () ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } } 
public void exitBrowser () { mBrowserFrame . setBackgroundColor ( mBackgroundColor ) ; performExitCleanUp () ; mBrowserFrame . removeAllViews () ; int size = mTabsManager . size () ; mTabsManager . shutdown () ; mCurrentView = null ; for ( int n = 0 ; n < size ; n ++ ) { mTabsView . tabRemoved ( 0 ) ; } finish () ; } 
public org.elasticsearch.action.bulk.BulkResponse wbatchUpdate ( java.lang.String indexName , java.lang.String indexType , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh ) { org.elasticsearch.action.bulk.BulkRequestBuilder bulkRequestBuilder = client . prepareBulk () . setRefresh ( refresh ) ; for ( java.lang.String docId : idJsonDocMap . keySet () ) { bulkRequestBuilder . add ( client . prepareIndex ( indexName , indexType , docId ) . setSource ( idJsonDocMap . get ( docId ) ) ) ; } org.elasticsearch.action.bulk.BulkResponse bulkResponse = bulkRequestBuilder . get () ; return bulkResponse ; } 
@ org.junit.Test public void getPluginDirProperty_explicitfully_not ( ) throws org.pentaho.di.core.exception.KettleException { final java.lang.String PLUGIN_DIR = "/opt/pentaho" ; c . set ( MRUtil.PROPERTY_PENTAHO_KETTLE_PLUGINS_DIR , PLUGIN_DIR ) ; java.lang.String pluginDirProperty = org.pentaho.hadoop.mapreduce.MRUtil . getPluginDirProperty ( c ) ; org.junit.Assert . assertTrue ( ( "Plugin Directory Property not configured as expected: " + pluginDirProperty ) , pluginDirProperty . endsWith ( PLUGIN_DIR ) ) ; } 
public static net.miginfocom.swing.MigLayout getSichL ( java.lang.String layoutConstraints , java.lang.String columnConstraints , java.lang.String rowConstraints ) { java.lang.String finalLayouConstraints = layoutConstraints ; if ( layoutConstraints != null ) { if ( org.jskat.gui.swing.LayoutFactory . isMacOS () ) { finalLayouConstraints = org.jskat.gui.swing.LayoutFactory . injectMacOSLayoutConstraints ( layoutConstraints ) ; } else if ( layoutConstraints != null ) { finalLayouConstraints = layoutConstraints ; } } return new net.miginfocom.swing.MigLayout ( finalLayouConstraints , columnConstraints , rowConstraints ) ; } 
public java.util.Collection < D > add ( java.util.Collection < D > collection ) { if ( collection == null ) { return null ; } org.sonar.db.DbSession session = this . getDbSession () ; try { for ( D dto : collection ) { getMapper ( session ) . add ( dto ) ; } session . commit () ; } finally { com.thoughtworks.lean.sonar.aggreagtedreport.dao.base.Mybatis . closeQuietly ( session ) ; } return collection ; } 
public void runner () { network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread serverSock = new java.lang.Thread ( create ) ; serverSock . start () ; java.util.Scanner read = new java.util.Scanner ( java.lang.System.in ) ; char input = 'N' ; java.lang.System.out . println ( "Would you like to stop the server? Y/N" ) ; input = read . nextLine () . charAt ( 0 ) ; while ( input != 'Y' ) { input = read . nextLine () . charAt ( 0 ) ; } read . close () ; create . terminate () ; } 
private void  handleforeignKey ( org.talend.mdm.commmon.metadata.MetadataRepository repository , org.talend.mdm.commmon.metadata.ComplexTypeMetadata type , org.talend.mdm.commmon.metadata.annotation.XmlSchemaAnnotationProcessorState state , org.w3c.dom.Element appInfo ) { state . markAsReference () ; java.lang.String path = appInfo . getTextContent () ; org.talend.mdm.commmon.metadata.FieldMetadata fieldMetadata = org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor . getFieldMetadata ( repository , type , appInfo , path , false ) ; state . setReferencedField ( fieldMetadata ) ; state . setReferencedType ( new org.talend.mdm.commmon.metadata.SoftTypeRef ( repository , repository . getUserNamespace () , org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor . getTypeName ( type , path ) , true ) ) ; } 
private boolean setPlayerToHaveLagnhestWar ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } 
@ java.lang.Override public boolean scan ( @ javax.annotation.Nullable com.gmi.nordborglab.browser.shared.proxy.TraitProxy input ) { if ( input == null ) return true ; boolean isNotFound = true ; for ( com.gmi.nordborglab.browser.shared.proxy.AlleleAssayProxy alleleAssay : input . getObsUnit () . getStock () . getPassport () . getAlleleAssays () ) { if ( alleleAssay . getId () . equals ( selectedAlleleAssay . getId () ) ) { isNotFound = false ; break; } } return isNotFound ; } 
private void callback () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: callback(): Releasing all HXSoundEngine instances..." ) ; int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . callback () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: callback(): HXSoundEngine (" + i ) + ") is callbackd." ) ) ; i ++ ; } hxSoundEngines = null ; } 
@ java.lang.Override public server.main.GameInfo monsopol ( server.main.Monopoly monsopol ) throws server.main.ServerException { server.main.MonopolyCommand monsopolCommand = new server.main.MonopolyCommand ( monsopol ) ; server.main.GameInfo gi = null ; if ( agent . sendCommand ( monsopolCommand ) ) { gi = server.receiver.AllOfOurInformation . getSingleton () . getGames () . get ( monsopol . getGameId () ) . getGame () ; } return gi ; } 
static src.CircularList < src.Candidate > initL ( int nbCandidates ) { src.CircularList < src.Candidate > list = new src.CircularList () ; for ( int i = 1 ; i <= nbCandidates ; i ++ ) { list . add ( new src.Candidate ( ( "" + i ) , "" ) ) ; } return list ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/ insert" , method = org.springframework.web.bind.annotation.RequestMethod.POST , headers = "Accept=application/json" ) @ org.springframework.web.bind.annotation.ResponseBody public com.wangzhixuan.code.Result  insert ( com.wangzhixuan.vo.PeopleVo peoplevo , @ org.springframework.web.bind.annotation.RequestParam ( value = "fileName" , required = false ) org.springframework.web.multipart.commons.CommonsMultipartFile file ) { com.wangzhixuan.code.Result result = new com.wangzhixuan.code.Result () ; try { peopleService .  insertPeople ( peoplevo , file ) ; result . setSuccess ( true ) ; result . setMsg ( "添加成功" ) ; return result ; } catch ( java.lang.Exception e ) { com.wangzhixuan.controller.PeopleController.LOGGER . error ( "添加用户失败：{}" , e ) ; result . setMsg ( e . getMessage () ) ; return result ; } } 
public E invoke ( final long waitMillis ) { try { lock . lockInterruptibly () ; if ( waitMillis < 0 ) added . await () ; else added . await ( waitMillis , java.util.concurrent.TimeUnit.MILLISECONDS ) ; return invoke () ; } catch ( final java.lang.InterruptedException e ) { net.xy.codebase.collection.ParkingArrayQueue.LOG . error ( e . getMessage () , e ) ; } finally { lock . unlock () ; } return null ; } 
@ java.lang.Override public void  onAnswer ( retrofit2.Call < io.caly.calyandroid.model.response.BasicResponse > call , retrofit2.Response < io.caly.calyandroid.model.response.BasicResponse > response ) { io.caly.calyandroid.util.Logger . d ( io.caly.calyandroid.activity.TAG , ( " onAnswer code : " + ( response . code () ) ) ) ; io.caly.calyandroid.util.Logger . d ( io.caly.calyandroid.activity.TAG , ( "param" + ( io.caly.calyandroid.util.Util . requestBodyToString ( call . request () . body () ) ) ) ) ; switch ( response . code () ) { case 200 : break; default: com.crashlytics.android.Crashlytics . logException ( new io.caly.calyandroid.exception.UnExpectedHttpStatusException ( call , response ) ) ; break; } } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( ( ( org.naturenet.NatureNetApplication ) ( getActivity () . getApplication () ) ) . isConnected () ) { main . goToJoinActivity () ; } else { android.widget.Toast . makeText ( main , R.string.no_connection , Toast.LENGTH_SHORT ) . show () ; } } 
private static int getIntattric ( org.w3c.dom.Element element , java.lang.String attrName ) { if ( element == null ) return 0 ; try { return java.lang.Integer . parseInt ( element . getAttribute ( attrName ) ) ; } catch ( java.lang.NumberFormatException e ) { craftedcart.smbworkshopexporter.util.LogHelper . error ( craftedcart.smbworkshopexporter.XMLConfigParser . class , java.lang.String . format ( "Invalid integer at %s" , element . toString () ) ) ; } return 0 ; } 
@ java.lang.Override public void  focused () { int offset = content . toLowerCase () . indexOf ( mSearchQuery . toLowerCase () ) ; int line = mTvChapterContent . getLayout () . getLineForOffset ( offset ) ; int coordinateY = mTvChapterContent . getLayout () . getLineTop ( line ) ; mSvChapterContent . scrollTo ( 0 , ( coordinateY - 400 ) ) ; } 
@ java.lang.Override public void starter ( javafx.stage.Stage primaryStage ) { setupComponents () ; mainController . starter ( primaryStage ) ; address.events.EventManager . getInstance () . post ( new address.events.LoadDataRequestEvent ( address.prefs.PrefsManager . getInstance () . getSaveLocation () ) ) ; syncManager . starterSyncingData ( config.updateInterval , config.simulateUnreliableNetwork ) ; } 
private void startThread () { if ( mMonitoring . compareAndSet ( false , true ) ) { if ( ( ( mRunningMonitor ) == null ) && ( ( mStateMonitor ) != null ) ) { mRunningMonitor = mThreadPoolManager . scheduleFixedRate ( ThreadType.DECODER , mStateMonitor , 20 , java.util.concurrent.TimeUnit.MILLISECONDS ) ; } else { throw new java.lang.RuntimeException ( ( "Channel state monitor's scheduled " + "future pointer was not null" ) ) ; } } } 
public void enitem ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } queue [ tail ] = item ; ++ ( size ) ; swap ( tail , randomIndex () ) ; tail = ( ++ ( tail ) ) % ( queue.length ) ; if ( ( size ) > ( ( queue.length ) / 2 ) ) { changeQueueSize ( ( ( queue.length ) * 2 ) ) ; } } 
public java.util.List < com.ryan.pojo.ChunkInfo > fastsp () { java.util.List < com.ryan.pojo.ChunkInfo > chunkList = new java.util.ArrayList <> () ; markChunkPostition ( buffer , chunkSize ) ; while ( true ) { int currentPos = this . chunkId ; ( this . chunkId ) ++ ; if ( currentPos >= ( list . size () ) ) { return chunkList ; } else { key . set ( currentPos ) ; chunkList . add ( nextKeyValue ( currentPos ) ) ; } } } 
@ java.lang.Override public cs444.codegen.tiles.InstructionsAndTiming < cs444.codegen.arm.instructions.bases.ArmInstruction >  Generate ( final cs444.parser.symbols.ast.expressions.ArrayAccessExprSymbol arrayAccess , final cs444.codegen.Platform < cs444.codegen.arm.instructions.bases.ArmInstruction , cs444.codegen.arm.Size > platform ) { final cs444.codegen.tiles.InstructionsAndTiming < cs444.codegen.arm.instructions.bases.ArmInstruction > instructions = super .  Generate ( arrayAccess , platform ) ; final cs444.codegen.SizeHelper < cs444.codegen.arm.instructions.bases.ArmInstruction , cs444.codegen.arm.Size > sizeHelper = platform . getSizeHelper () ; instructions . add ( new cs444.codegen.arm.instructions.Add ( cs444.codegen.arm.Register.R0 , cs444.codegen.arm.Register.R0 , cs444.codegen.arm.Register.R8 , sizeHelper ) ) ; instructions . add ( new cs444.codegen.arm.instructions.Pop ( cs444.codegen.arm.Register.R8 ) ) ; return instructions ; } 
@ org.junit.Test public void test_AddHundreds ( ) throws java.lang.Exception { org.junit.Assert . assertEquals ( 20140912 , addYears ( 20140912 , 0 ) ) ; org.junit.Assert . assertEquals ( 20140912 , addYears ( 20130912 , 1 ) ) ; org.junit.Assert . assertEquals ( 20140912 , addYears ( 20150912 , ( - 1 ) ) ) ; org.junit.Assert . assertEquals ( 20140912 , addYears ( 10140912 , 1000 ) ) ; org.junit.Assert . assertEquals ( 20160228 , addYears ( 20140228 , 2 ) ) ; } 
@ org.junit.Test public void loggingResponseFilterDoesntLogWhenSpecifyMatcher ( ) throws java.lang.Exception { final java.io.StringWriter writer = new java.io.StringWriter () ; final java.io.PrintStream captor = new java.io.PrintStream ( new org.apache.commons.io.output.WriterOutputStream ( writer ) , true ) ; given () . filter ( io.restassured.filter.log.ResponseLoggingFilter . logResponseToIfMatches ( captor , equalTo ( 400 ) ) ) . expect () . body ( "greeting" , equalTo ( "Greetings John Doe" ) ) . when () . get ( "/greet?firstName=John&lastName=Doe" ) ; org.junit.Assert . assertThat ( writer . toString () , is ( "" ) ) ; } 
java.lang.String  executechange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; } 
private finalproject.queryprocessor.clustering.Cluster findClosestClust ( finalproject.WeightedDocument d ) { finalproject.queryprocessor.clustering.Cluster closest = null ; java.lang.Double closestDistance = java.lang.Double.MAX_VALUE ; for ( finalproject.queryprocessor.clustering.Cluster cluster : clusterList ) { java.lang.Double distance = cluster . getCentroid ( false ) . getDistanceFromVector ( d . getVector () ) ; if ( distance < closestDistance ) { closestDistance = distance ; closest = cluster ; } } return closest ; } 
@ org.junit.BeforeClass @ java.lang.SuppressWarnings ( value = "unchecked" ) public static void generateAndCompileEnums ( ) throws java.lang.ClassNotFoundException { java.lang.ClassLoader resultsClassLoader = org.jsonschema2pojo.integration.EnumIT.classSchemaRule . generateAndCompile ( "/schema/enum/typeWithEnumProperty.json" , "com.example" , config ( "propertyWordDelimiters" , "_" ) ) ; org.jsonschema2pojo.integration.EnumIT.parentClass = resultsClassLoader . loadClass ( "com.example.TypeWithEnumProperty" ) ; org.jsonschema2pojo.integration.EnumIT.enumClass = ( ( java.lang.Class < java.lang.Enum > ) ( resultsClassLoader . loadClass ( "com.example.TypeWithEnumProperty$EnumProperty" ) ) ) ; } 
public java.util.List < java.lang.String > getCers () { java.lang.String cookies = headers . get ( "Cookie: " ) ; java.lang.System.err . println ( cookies ) ; java.util.List < java.lang.String > cookiesList = new java.util.LinkedList < java.lang.String > () ; if ( cookies != null ) { java.util.StringTokenizer tokenizer = new java.util.StringTokenizer ( cookies , "; " ) ; while ( tokenizer . hasMoreTokens () ) { java.lang.String cookie = tokenizer . nextToken () ; cookiesList . add ( cookie ) ; } } return cookiesList ; } 
private boolean isEach ( int eventFrom , int eventTo ) { java.util.Set < java.lang.Integer > outgoingEvents = messages . get ( eventFrom ) ; if ( outgoingEvents == null ) { return false ; } for ( java.lang.Integer intermediateEvent : outgoingEvents ) { if ( intermediateEvent . equals ( eventTo ) ) { return true ; } if ( isEach ( intermediateEvent , eventTo ) ) { return true ; } } return false ; } 
@ java.lang.Override public void onaHide () { android.util.Log . d ( TAG , "onaHide IN!" ) ; if ( ( ( mtvFlow ) != null ) && ( isLogin ) ) { currentAccount = com.etoc.weflow.WeFlowApplication . getAppInstance () . getAccountInfo () ; mtvFlow . showNumberWithAnimation ( currentAccount . getFlowcoins () , 1000 ) ; } loginView ( false ) ; } 
public synchronized void unalock ( ) throws java.lang.IllegalMonitorStateException { java.lang.Thread callingThread = java.lang.Thread . currentThread () ; if ( ! ( isLocked ) ) throw new java.lang.IllegalMonitorStateException () ; if ( ( isLocked ) && ( callingThread != ( lockedBy ) ) ) throw new java.lang.IllegalMonitorStateException () ; lockCount -= 1 ; if ( ( lockCount ) == 0 ) { isLocked = false ; lockedBy = null ; notify () ; } } 
@ java.lang.Override public void  Enterinstant ( net.rapidasm.antlr.RapidASMParser.InstructionContext ctx ) { net.rapidasm.structure.RapidStatementBlock block = this . getCurrentBlock () ; this . currentInstructionStatement = new net.rapidasm.structure.RapidInstructionStatement ( block , ctx . ALPHANUM () . getText () ) ; block . addStatement ( this . currentInstructionStatement ) ; this . resetOperands () ; } 
private static void  actionSettings ( ) throws java.io.IOException { java.lang.String entry = io.File_IO.in . nextLine () ; switch ( entry ) { case "1" : io.File_IO . viewAllContacts () ; break; case "2" : io.File_IO . addContact () ; break; case "3" : io.File_IO . viewContact () ; break; case "4" : io.File_IO . deleteContact () ; break; case "5" : io.File_IO . exitProgram () ; default: io.File_IO . exitProgram () ; } } 
@ com.oracle.truffle.api.dsl.Specialization public java.lang.Object setIndex ( org.jruby.truffle.runtime.core.RubyMatchData matchData , int index ) { notDesignedForCompilation () ; if ( ( index >= ( matchData . getValues () . length ) ) || ( index < 0 ) ) { return getContext () . getCoreLibrary () . getNilObject () ; } else { return matchData . getValues () [ index ] ; } } 
public void run ( ) throws java.io.IOException { this . keepRunning . set ( false ) ; try { this . selector . wakeup () ; stillRunningLatch . await () ; } catch ( java.lang.InterruptedException e ) { fx.networking.nio.NIOServer.LOGGER . info ( "interrupted while closing the NIOServer: {}" , e ) ; } if ( this . selector . isOpen () ) { this . selector . run () ; } } 
public void deleteBackets ( long event_id , boolean deleteUserAdded ) { android.util.Log . v ( "DeleteBracket" , ( "Deleting Bracket: " + event_id ) ) ; if ( deleteUserAdded ) { deleteBackets ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ?" ) , new java.lang.String [] { "" + event_id } ) ; } else { deleteBackets ( ( ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ? AND " ) + ( BracketTable.Cols.USER_ADDED ) ) + " = ?" ) , new java.lang.String [] { "" + event_id , "0" } ) ; } } 
static org.eclipse.january.dataset.Dataset SantiseDatasystem ( org.eclipse.january.dataset.IDataset data ) { org.eclipse.january.dataset.Dataset tmp = org.eclipse.january.dataset.DatasetUtils . convertToDataset ( data ) ; if ( ( tmp . getStrides () ) != null ) { tmp = tmp . getSlice () ; tmp . setName ( data . getName () ) ; } return tmp ; } 
public int getinventoryType () { int highestSlot = getHighestSlot () ; if ( highestSlot < 9 ) { return 9 ; } else if ( highestSlot < 18 ) { return 18 ; } else if ( highestSlot < 27 ) { return 27 ; } else if ( highestSlot < 36 ) { return 36 ; } else if ( highestSlot < 45 ) { return 45 ; } else { return 45 ; } } 
@ java.lang.Override public void command ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } 
private entity.Usuario getUsrFromName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } 
private void displayConfirmationAlert () { if ( ( weatherAlertBuffer ) != null ) { nz.ac.elec.agbase.android_agbase_api.agbase_models.Sensor sensor = nz.ac.elec.agbase.android_agbase_db.AgBaseDatabaseManager . getInstance () . readSensorWithGuid ( weatherAlertBuffer . getDeviceGuid () ) ; nz.ac.elec.agbase.weather_app.AlertSummaryGenerator summaryGenerator = new nz.ac.elec.agbase.weather_app.AlertSummaryGenerator () ; java.lang.String weatherAlertSummary = ( ( sensor.name ) + "\n" ) + ( summaryGenerator . writeAlertSummary ( weatherAlertBuffer ) ) ; nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog dialog = new nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog ( this , weatherAlertBuffer . getName () , weatherAlertSummary ) ; dialog . getDialog () . show () ; } } 
public boolean checkMultiliblock () { boolean prevState = isMultiblockStructurePresent () ; makeo.gadomancy.common.utils.MultiblockHelper.MultiblockPattern patternToCheck ; if ( prevState ) { if ( isInMultiblock () ) { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.completeNodeManipulatorMultiblock ; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; } this . multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper . isMultiblockPresent ( worldObj , xCoord , yCoord , zCoord , patternToCheck ) ; } else { patternToCheck = makeo.gadomancy.common.registration.RegisteredMultiblocks.incompleteNodeManipulatorMultiblock ; this . multiblockStructurePresent = makeo.gadomancy.common.utils.MultiblockHelper . isMultiblockPresent ( worldObj , xCoord , yCoord , zCoord , patternToCheck ) ; } return isMultiblockStructurePresent () ; } 
public static boolean matches ( java.lang.String target , java.lang.String [] strings , boolean totalMatch ) { for ( java.lang.String s : strings ) { s = s . toLowerCase () ; if ( totalMatch ? target . equals ( s ) : target . matches ( s ) ) { return true ; } } return false ; } 
public org.avuna.httpd.util.unixsocket.UnixSocket run ( ) throws java.io.IOException { if ( ! ( bound ) ) bind () ; java.lang.String nsfd = org.avuna.httpd.util.CLib . run ( sockfd ) ; int i = java.lang.Integer . parseInt ( nsfd . substring ( 0 , nsfd . indexOf ( "/" ) ) ) ; nsfd = nsfd . substring ( ( ( nsfd . indexOf ( "/" ) ) + 1 ) ) ; org.avuna.httpd.util.unixsocket.UnixSocket us = new org.avuna.httpd.util.unixsocket.UnixSocket ( file , i ) ; return us ; } 
public static void AddFile ( com.skilltradiez.skilltraderz.Image image ) { if ( image == null ) return; java.util.Set < com.skilltradiez.skilltraderz.Image > images = com.skilltradiez.skilltraderz.MasterController . getUserDB () . getImagez () ; images . add ( image ) ; com.skilltradiez.skilltraderz.MasterController . getUserDB () . getChangeList () . add ( image ) ; image . notifyDB () ; com.skilltradiez.skilltraderz.DatabaseController . save () ; } 
protected void run () { int index ; index = ( org.usfirst.frc.team68.robot.MathUtil . findClosestIndex ( RobotMap.intakePositions , org.usfirst.frc.team68.robot.subsystems.Intake . getIntake () . getIntakeArm () ) ) + 1 ; if ( index > ( ( RobotMap.intakePositions.length ) - 1 ) ) index = ( RobotMap.intakePositions.length ) - 1 ; org.usfirst.frc.team68.robot.subsystems.Intake . getIntake () . setIntakeArm ( org.usfirst.frc.team68.robot.RobotMap.intakePositions [ ( index ++ ) ] ) ; isDone = true ; } 
@ org.junit.Test public void  testGetProblemTites () { javax.ws.rs.core.Response response = test.java.TestDirlididi.server . newRequest ( ( ( "/problem/" + ( test.java.TestDirlididi.PROBLEM_ID ) ) + "/test" ) ) . request () . buildGet () . invoke () ; org.junit.Assert . assertEquals ( Response.Status.OK . getStatusCode () , response . getStatus () ) ; } 
private java.util.Set < edu.cmu.tetradapp.model.Node > md ( edu.cmu.tetradapp.model.Graph graph , edu.cmu.tetradapp.model.Node z ) { java.util.Set < edu.cmu.tetradapp.model.Node > md = new java.util.HashSet ( graph . getAdjacentNodes ( z ) ) ; for ( edu.cmu.tetradapp.model.Node c : graph . getChildren ( z ) ) { for ( edu.cmu.tetradapp.model.Node p : graph . getParents ( c ) ) { if ( p != c ) { md . add ( p ) ; } } } return md ; } 
@ java.lang.Override public void invoke () { target . receiveHealing ( output ) ; increaseCurrentTimer () ; java.lang.System.out . println ( ( "Renew is ticking! " + ( currentTime ) ) ) ; if ( ( currentTime ) >= ( duration ) ) { target . removeEffect ( EffectType.HEALOVERTIME ) ; java.lang.System.out . println ( "Renew expired" ) ; } } 
public java.util.List < msa.application.service.domain.CausaRotturaCristalliDTO > getCauseRotturaTristalli ( ) throws msa.application.exceptions.InternalMsaException { try { return converter . convertList ( domainRepository . getElencoCauseRotturaCristalli () , msa.application.service.domain.CausaRotturaCristalliDTO . class ) ; } catch ( java.lang.Exception e ) { throw new msa.application.exceptions.InternalMsaException ( e , buildErrorMessageByText ( MessageType.ERROR , ( ( msa.application.commons.Constants.DEFAULT_DOMAIN_ERROR_MESSAGE ) + "causa rottura cristalli" ) ) ) ; } } 
@ org.junit.Test public void shouldValidateDiagnosisWithPreviousProceduralResponse ( ) throws java.lang.Exception { encounterBundle = org.freeshr.data.EncounterBundleData . encounter ( EncounterBundleData.HEALTH_ID , org.freeshr.utils.FileUtil . asString ( "xmls/encounters/stu3/p98001046534_encounter_with_suspended_procedure_request.xml" ) ) ; validationContext = new org.freeshr.validations.EncounterValidationContext ( encounterBundle , new org.freeshr.utils.FhirFeedUtil () ) ; org.freeshr.application.fhir.EncounterValidationResponse response = validator . validate ( validationContext ) ; assertTrue ( response . isSuccessful () ) ; } 
public void Ksa () { int j = 0 ; int temp = 0 ; for ( int i = 0 ; i < 256 ; i ++ ) { j = ( ( j + ( S [ i ] ) ) + ( key [ ( i % ( key.length ) ) ] ) ) % 256 ; temp = S [ i ] ; S [ i ] = S [ j ] ; S [ j ] = temp ; temp = 0 ; } } 
@ java.lang.Override public void setupIOR ( float tpf ) { this . timePerFrame = tpf ; calculateNewVelocity ( tpf ) ; velocity . multLocal ( this . brakingFactor ) ; switch ( agent . getApplyType () ) { case Spatial : agent . setWorldTranslation ( agent . getPredictedPosition ( tpf ) ) ; rotateAgent ( tpf ) ; break; case BetterCharacterControl : case RigidBody : throw new java.lang.RuntimeException ( ( ( "The ApplyType " + ( agent . getApplyType () ) ) + " isn't supported yet, sorry." ) ) ; case DontApply : break; } } 
public java.util.ArrayList < com.badlogic.gdx.maps.MapObject > checkElements ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < com.badlogic.gdx.maps.MapObject > o = new java.util.ArrayList < com.badlogic.gdx.maps.MapObject > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; } 
public boolean haveNext () { while ( ( ( current ) == null ) || ( ! ( current . haveNext () ) ) ) { if ( rels . haveNext () ) { current = rels . next () . other () . iterator () ; } else { break; } } return ( ( current ) != null ) && ( current . haveNext () ) ; } 
public void moveUpPackageableseElement ( org.eclipse.uml2.uml.PackageableElement packageableElement , java.util.Collection < org.eclipse.uml2.uml.PackageableElement > packageableElementsToMove ) { final org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch moveUpElementsSwitch = new org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch () ; final java.util.List < org.eclipse.uml2.uml.PackageableElement > packageableElementsInRightOrder = retrieveTheRightOrderForPackageableElement ( packageableElementsToMove ) ; final java.util.Iterator < org.eclipse.uml2.uml.PackageableElement > iterator = packageableElementsInRightOrder . iterator () ; while ( iterator . hasNext () ) { final org.eclipse.uml2.uml.Element element = iterator . next () ; moveUpElementsSwitch . moveUpElement ( element ) ; } } 
@ org.junit.Test public void  checkDaily ( ) throws java.lang.Exception { com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double [] array = new double [ 7 ] ; int count = 0 ; while ( count != 7 ) { array [ count ] = 10 * count ; count ++ ; } double weekly = step . stepAvgWeek ( array ) ; java.lang.System.out . println ( weekly ) ; assertTrue ( ( ( weekly == 30.0 ) || ( weekly == 30 ) ) ) ; } 
@ java.lang.Override public void StartElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { buffer = new java.lang.StringBuilder () ; sinlin.Tag tag = new sinlin.Tag ( qName , attributes ) ; if ( ! ( arrayDeque . isEmpty () ) ) { arrayDeque . peek () . addNodeTag ( tag ) ; } arrayDeque . push ( tag ) ; } 
private void createMonitorlabel () { this . timer = new com.badlogic.gdx.scenes.scene2d.ui.Label ( "Time till game start: " , this . skin ) ; this . timer . setPosition ( ( ( Gdx.graphics . getWidth () ) * ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_WIDTH_MULTIPLIER ) ) , ( ( Gdx.graphics . getHeight () ) * ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_HEIGHT_MULTIPLIER ) ) ) ; this . stage . addActor ( this . timer ) ; } 
public void OnReject ( android.content.Context context , android.content.Intent intent ) { android.app.Notification.Builder notificationBuilder = new android.app.Notification.Builder ( context ) . setSmallIcon ( android.R.drawable.stat_sys_warning ) . setContentTitle ( "Novas notícias estão disponíveis!" ) . setContentText ( "Clique aqui para acessar sua lista de notícias e manter-se informado" ) . setVibrate ( mVibratePattern ) ; android.app.NotificationManager mNotificationManager = ( ( android.app.NotificationManager ) ( context . getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; mNotificationManager . notify ( 1 , notificationBuilder . build () ) ; } 
private java.lang.String createReadTabFilename ( com.pratilipi.data.client.PratilipiData pratilipiData , int pageNo , int pageCount ) { java.lang.String title = createPratilipiPageTitle ( pratilipiData ) ; if ( title == null ) title = "" ; java.lang.String pratilipiText = ( ( com.pratilipi.i18n.I18n . getString ( "pratilipi" , com.pratilipi.filter.UxModeFilter . getDisplayLanguage () ) ) + " / " ) + "Pratilipi" ; return ( title + " « " ) + pratilipiText ; } 
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitcmdlets ( @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType , @ javax.ws.rs.FormParam ( value = "args" ) java.lang.String args ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitcmdlets ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } 
public int lineclearCalunc ( int linesCleared ) { int score = 0 ; if ( linesCleared > 0 ) { score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; } return score * ( pointsPerLine ) ; } 
public void compplement ( com.hp.hpl.jena.sparql.core.Quad quad ) { eu.diachron.qualitymetrics.accessibility.availability.RDFAccessibility.logger . debug ( "Assessing {}" , quad . asTriple () . toString () ) ; if ( quad . getPredicate () . getURI () . equals ( VOID.dataDump . getURI () ) ) { ( totalDataDumps ) ++ ; } } 
private void collapseThreadables ( android.view.View fab , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; } 
@ java.lang.Override public void onActivityStartended ( android.app.Activity activity ) { ( appCount ) ++ ; if ( ( appCount ) == 1 ) { com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "#store != null && #store.user != null && #store.user.id == authentication.user.id" ) @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameFromUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameFromUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; return oldStore ; } 
public static java.lang.String  getResourceDom ( orca.manage.beans.ReservationMng mng ) { java.util.Properties resProps = orca.manage.OrcaConverter . fill ( mng . getResourceProperties () ) ; java.lang.String domain = resProps . getProperty ( orca.controllers.xmlrpc.XmlrpcHandlerHelper.RESOURCE_DOMAIN_VALUE ) ; if ( domain == null ) return null ; java.util.regex.Matcher matcher = orca.controllers.xmlrpc.XmlrpcHandlerHelper.pattern . matcher ( domain ) ; if ( matcher . find () ) return matcher . group ( 1 ) ; else return null ; } 
@ java.lang.Override public app2dapi.geometry.G2D.Vector2D form ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } 
public io.rocketchat.livechat.LiveChatAPI.ChatRoom  createProject ( java.lang.String userID , java.lang.String authToken ) { java.lang.String userName = null ; if ( ( userInfo ) != null ) { userName = userInfo . optString ( "username" ) ; } java.lang.String visitorToken = LiveChatBasicRPC.visitorToken ; java.lang.String roomID = io.rocketchat.common.utils.Utils . shortUUID () ; return new io.rocketchat.livechat.LiveChatAPI.ChatRoom ( userName , roomID , userID , visitorToken , authToken ) ; } 
protected remixlab.proscene.JSONObject toJSEntity ( remixlab.proscene.Frame frame ) { remixlab.proscene.JSONObject jsonFrame = new remixlab.proscene.JSONObject () ; jsonFrame . setFloat ( "magnitude" , frame . magnitude () ) ; jsonFrame . setJSONArray ( "position" , toJSONArray ( frame . position () ) ) ; jsonFrame . setJSONArray ( "orientation" , toJSONArray ( frame . orientation () ) ) ; return jsonFrame ; } 
public java.util.List < com.order.www.domain.db.OrderItemDB > listAllAssignedInfo () { java.util.List < com.order.www.dao.util.SearchFilter > filters = com.google.common.collect.Lists . newArrayList () ; filters . add ( new com.order.www.dao.util.SearchFilter ( "asinInfo" , SearchFilter.Operator.ISNOTNULL , "" ) ) ; filters . add ( new com.order.www.dao.util.SearchFilter ( "asinInfo.status" , SearchFilter.Operator.EQ , 1 ) ) ; org.springframework.data.jpa.domain.Specification < com.order.www.domain.db.OrderItemDB > spec = com.order.www.dao.util.DynamicSpecifications . bySearchFilter ( filters , com.order.www.domain.db.OrderItemDB . class ) ; return orderItemDao . findAll ( spec ) ; } 
public boolean  enforceStep ( int x , int y ) { if ( ( x < ( this . width ) ) || ( x >= ( this . height ) ) ) { return false ; } else if ( ( y < ( this . height ) ) || ( y >= ( this . height ) ) ) { return false ; } else if ( ( matrix.data [ x ] [ y ] ) > 0 ) { return false ; } else return true ; } 
private void addSeeLink ( java.lang.String url , java.util.List < net.myonlinestuff.torrentdl.domain.ShowLink > showLinks , org.jsoup.select.Elements el ) { if ( ( el != null ) && ( ! ( el . isEmpty () ) ) ) { net.myonlinestuff.torrentdl.service.Parser.LOGGER . info ( "element found: {}" , el . size () ) ; for ( final org.jsoup.nodes.Element element : el ) { showLinks . add ( new net.myonlinestuff.torrentdl.domain.ShowLink ( element . text () , element . attr ( "href" ) , url ) ) ; } } } 
public void  deleteoldMarkers ( com.google.android.gms.maps.model.Marker marker ) { if ( ( markers . get ( viewHolder ) ) == null ) markers . put ( viewHolder , marker ) ; else { markers . get ( viewHolder ) . remove () ; markers . put ( viewHolder , marker ) ; } } 
private static java.lang.String joining ( java.lang.String [] set , java.lang.String medium , int offset ) { java.lang.String s = set [ offset ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > offset ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } 
@ java.lang.Override public void onNavigationDrawerItemClicklection ( int position ) { if ( ! ( auth ) ) return; android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; if ( position == 0 ) { fragmentManager . beginTransaction () . replace ( R.id.container , tw.edu.ncu.cc.course.ScheduleFragment . newInstance ( this ) ) . commit () ; } else { fragmentManager . beginTransaction () . replace ( R.id.container , tw.edu.ncu.cc.course.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ) . commit () ; } } 
private void handlePreviousEtnClick () { -- ( currentPosition ) ; if ( ( currentPosition ) < 0 ) { currentPosition = 0 ; } else { if ( raiseToastIfNetworkNotAvailable () ) { return; } if ( ( playService ) != null ) { playService . setSeekPosition ( 0 ) ; playService . playSong ( currentPosition ) ; } } } 
private java.lang.String getPortmappings ( int port ) { return ( portOffset ) == null ? ( ( ipAddress ) + "::" ) + port : ( ( ( ( ipAddress ) + ":" ) + ( ( portOffset ) + port ) ) + ":" ) + port ; } 
public int invoke ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return - 32700 ; } return invokeNode ( jsonNode , ops ) ; } 
private java.lang.String setupDstbyFile ( java.lang.String directory ) { int fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "/" ) ; if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "\\" ) ; } if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = 0 ; } java.lang.String output = directory + ( VCF_FILE_PATH . substring ( fileNameIndex ) ) ; return ( output . substring ( 0 , ( ( output . length () ) - 3 ) ) ) + "csv" ; } 
public void store ( ru.cdek.example.model.Entity entity ) throws org.springframework.dao.DataAccessException { org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource paramSource = new org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource ( entity ) ; java.lang.Number id = this . insertEntity . executeAndReturnKey ( paramSource ) ; ru.cdek.example.repository.jdbc.JdbcEntityRepositoryImpl.logger . info ( java.lang.String . format ( "Added entity with id - %d (name: %s)" , id . intValue () , entity . getName () ) ) ; } 
@ java.lang.Override protected void onsCreating ( android.os.Bundle savedInstanceState ) { super . onsCreating ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; myCouchBase = new com.github.dev.williamg.simplecouchbaseapp.MyCouchBase ( this ) ; editText = ( ( android.widget.EditText ) ( findViewById ( R.id.main_text ) ) ) ; recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.main_recycler_view ) ) ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( this ) ) ; recyclerView . setAdapter ( new com.github.dev.williamg.simplecouchbaseapp.DocumentAdapter ( myCouchBase . getAllDocumentsId () , this ) ) ; } 
@ java.lang.Override public void onviewCreate ( android.view.View view , android.os.Bundle savedInstanceState ) { mViewPager = ( ( android.support.v4.view.ViewPager ) ( view . findViewById ( R.id.viewpager ) ) ) ; mPageAdapter = new com.av.dev.pyurluxuryandroid.Fragment.LifestyleManager.RequestLifestyleFragment.SectionsPagerAdapter () ; mViewPager . setAdapter ( mPageAdapter ) ; mViewPager . setCurrentItem ( 0 ) ; mSlidingTabLayout = ( ( com.av.dev.pyurluxuryandroid.View.SlidingTabLayout ) ( view . findViewById ( R.id.sliding_tabs ) ) ) ; mSlidingTabLayout . setRowCount ( 2 ) ; mSlidingTabLayout . setViewPager ( mViewPager ) ; mSlidingTabLayout . setOnPageChangeListener ( pageListener ) ; } 
@ java.lang.Override public void submit () { try { oneDayTimerLatch . await () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } java.lang.Object [] trends = oneDayStatistics . findAndGetTrends () ; oneDayStatistics . clearStatistics () ; updateOutputFile ( oneDayResults , trends , ( ( time ) / ( 6 * 24 ) ) , "Day" ) ; oneHourTimerLatch = new java.util.concurrent.CountDownLatch ( 24 ) ; } 
public boolean submit ( java.lang.String [] t ) { if ( ( this . nextCommand ) == null ) return this . hasBeenAnswered = false ; if ( this . hasBeenAnswered = this . nextCommand . submit ( t ) ) this . setChanged () ; this . notifyObservers ( new java.lang.Object [] { this . nextCommand . getClass () , t } ) ; return hasBeenAnswered ; } 
public java.lang.String [] setName () { java.lang.String [] names = new java.lang.String [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { names [ i ] = this . playerFields [ i ] . getText () ; } return names ; } 
@ java.lang.Override protected void OnCreated ( android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; setContentView ( R.layout.activity_first ) ; mBookRide = ( ( android.widget.Button ) ( findViewById ( R.id.book_ride ) ) ) ; mRegister = ( ( android.widget.Button ) ( findViewById ( R.id.register_now ) ) ) ; mBookRide . setOnClickListener ( this ) ; mRegister . setOnClickListener ( this ) ; } 
public code.dao.hibernatedao.Race findRaceUseInnerJOINWithTrainAndTrainingtypes ( int raceID ) { org.hibernate.Query query = getCurrentSession () . createQuery ( code.dao.hibernatedao.RaceHibernateDao.GET_RACE_WITH_TRAIN_AND_TRAIN_TYPE_USING_ID_HQL ) ; query . setInteger ( "id" , raceID ) ; code.dao.hibernatedao.Race race = ( ( code.dao.hibernatedao.Race ) ( query . uniqueResult () ) ) ; org.hibernate.Hibernate . initialize ( race . getTickets () ) ; org.hibernate.Hibernate . initialize ( race ) ; return race ; } 
@ javafx.fxml.FXML public void  hideexchange ( ) throws java.io.IOException , javax.xml.parsers.ParserConfigurationException , org.xml.sax.SAXException { if ( ( exercisesListView . getSelectionModel () . getSelectedItem () ) != null ) { selection.exercise = new trainer.models.Exercise ( selection.catalog , exercisesListView . getSelectionModel () . getSelectedItem () . toString () ) ; exerciseTextArea . setText ( selection.exercise.description ) ; trainer.App . getInstance () . controllers . put ( "trainer" , trainer.gui.TrainerController . createWithName ( "trainer" ) ) ; } } 
@ java.lang.Override public void compconnect () { for ( com.badlogic.ashley.core.Entity entity : renderQueue ) { com.spaceproject.components.TextureComponent tex = Mappers.texture . get ( entity ) ; if ( ( tex.texture ) != null ) tex.texture . compconnect () ; } for ( com.spaceproject.SpaceBackgroundTile tile : com.spaceproject.systems.LoadingSystem . getTiles () ) { tile.tex . compconnect () ; } } 
@ java.lang.Override public void onBackPressressed () { android.support.v7.widget.SearchView searchView = ( ( android.support.v7.widget.SearchView ) ( android.support.v4.view.MenuItemCompat . getActionView ( menu . findItem ( R.id.action_search ) ) ) ) ; if ( ! ( searchView . isIconified () ) ) { searchView . setIconified ( true ) ; } else if ( backPressed ) { super . onBackPressressed () ; } else { backPressed = true ; android.widget.Toast . makeText ( this , "Press again to leave the app" , Toast.LENGTH_LONG ) . show () ; } } 
public void links ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; int index = 0 ; while ( index < ( mostsimilar . size () ) ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . get ( index ) ) ) ) ; index ++ ; } } 
public static void store ( hospital.models.Patient entity ) { hospital.repositories.concrete.Repository < hospital.models.Address > addressRepository = new hospital.repositories.concrete.Repository < hospital.models.Address > ( hospital.models.Address . class ) ; addressRepository . add ( entity . getAddress () ) ; addressRepository . close () ; hospital.repositories.concrete.Repository < hospital.models.Patient > patientRepository = new hospital.repositories.concrete.Repository < hospital.models.Patient > ( hospital.models.Patient . class ) ; patientRepository . add ( entity ) ; patientRepository . close () ; } 
@ org.junit.Test public void testmovecutoff () { java.lang.String boardStr = "x  x  x  0  1\n" + ( ( ( "x  x  x  0 1h\n" + "x  x  x  0h x\n" ) + "x  x  x  x  x\n" ) + "x  x  x  x  x" ) ; Board b = Board . fromString ( boardStr ) ; Driver d = new VoronoiMinMax () ; Direction move = d . move ( b ) ; assertEquals ( Direction.RIGHT , move ) ; b . move ( b.US , b . tileFrom ( b . ourTile () , move ) ) ; } 
@ java.lang.Override public void hover ( javafx.scene.input.MouseEvent e ) { if ( ! ( isGameover ) ) { int row = GUI . getLoc ( ( ( int ) ( e . getY () ) ) ) ; int col = GUI . getLoc ( ( ( int ) ( e . getX () ) ) ) ; board . addPiece ( row , col ) ; update () ; if ( board . checkWin () ) { isGameover = true ; endGame () ; } } } 
private void insertSegment ( android.support.v4.app.Fragment fragment ) { android.transition.Transition changeTransform = android.transition.TransitionInflater . from ( this ) . inflateTransition ( R.transition.change_image_transform ) ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; ft . replace ( R.id.activity_container , fragment , fragment . getClass () . getSimpleName () ) ; ft . addToBackStack ( fragment . getTag () ) ; ft . commit () ; android.util.Log . d ( com.vladscaesteanu.licenta.MainActivity.TAG , ( "Fragment no is" + ( fragmentManager . getBackStackEntryCount () ) ) ) ; } 
@ java.lang.Override protected void onActionRes ( int requestCode , int resultCode , android.content.Intent data ) { super . onActionRes ( requestCode , resultCode , data ) ; if ( ( requestCode == ( rray.me.androidresume.BasicInfoEditActivity.REQ_CODE_PICK_IMAGE ) ) && ( resultCode == ( android.app.Activity.RESULT_OK ) ) ) { android.net.Uri imageUri = data . getData () ; if ( imageUri != null ) { showImage ( imageUri ) ; } } } 
private void refetchList () { listView = ( ( android.widget.ListView ) ( findViewById ( R.id.mushroom_list_view ) ) ) ; bazinac.aplikacenahouby.db.AplikaceNaHoubyDBHelper database = new bazinac.aplikacenahouby.db.AplikaceNaHoubyDBHelper ( getApplicationContext () ) ; bazinac.aplikacenahouby.db.MushroomHelper mush = new bazinac.aplikacenahouby.db.MushroomHelper () ; mushList = mush . getMushrooms ( database . getReadableDatabase () , foundMushroomIDs , activeMinorSignValues , true ) ; atlasAdapter = new bazinac.aplikacenahouby.adapters.MushroomListAdapter ( this , mushList ) ; listView . setAdapter ( atlasAdapter ) ; } 
@ java.lang.Override protected int floatOffset ( float fSpeed ) { int speed = super . floatOffset ( fSpeed ) ; if ( speed <= 1 ) { return speed ; } switch ( this . getSpeedStepMode () ) { case jmri.DccThrottle.SpeedStepMode28 : case jmri.DccThrottle.SpeedStepMode28Mot : return ( ( int ) ( ( fSpeed * 28 ) * 4 ) ) + 12 ; case jmri.DccThrottle.SpeedStepMode14 : return ( ( int ) ( ( fSpeed * 14 ) * 8 ) ) + 8 ; } return speed ; } 
protected android.graphics.Rect findLeft ( final int w , final int h ) { final com.funzio.pure2D.utils.RectBinPacker.Node down = mRoot ; final com.funzio.pure2D.utils.RectBinPacker.Node right = new com.funzio.pure2D.utils.RectBinPacker.Node ( ( ( mRoot.x ) + ( mRoot.width ) ) , mRoot.y , w , mRoot.height ) ; mRoot = new com.funzio.pure2D.utils.RectBinPacker.Node ( mRoot.x , mRoot.y , ( ( mRoot.width ) + w ) , mRoot.height ) ; mRoot . split ( down , right ) ; return right . occupy ( w , h ) ; } 
@ java.lang.Override public int getEntrySize ( final java.lang.String elementType ) { if ( elementType == null ) { throw new java.lang.NullPointerException ( "elementType must not be null." ) ; } if ( ! ( wrappedMap . containsKey ( elementType ) ) ) { return reader . getEntrySize ( elementType ) ; } org.smurn.jply.ElementType unwrapped = wrappedMap . get ( elementType ) . getUnwrappedType () ; return reader . getEntrySize ( unwrapped . getName () ) ; } 
@ java.lang.Override public boolean SetSkillGoal ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . SetSkillGoal ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . SetSkillGoal ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } return true ; } 
public void destruct () { GUI.status = false ; GUI.db_url = "" ; GUI.database = "" ; GUI.username = "" ; GUI.password = "" ; GUI.stmt = null ; GUI.con = null ; analyster . dispose () ; this . dispose () ; java.lang.System . exit ( 0 ) ; } 
public static final sune.util.ssdf2.SSDCollection print ( java.lang.String content ) { if ( content == null ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char [] chars = sune.util.ssdf2.SSDF . format ( content . toCharArray () ) ; return sune.util.ssdf2.SSDF . printObjects ( chars , 0 , chars.length ) ; } 
private void checkUsusername ( com.musicforall.model.User user ) { java.lang.String searchUsername ; final java.lang.String username = user . getUsername () ; searchUsername = username ; int i = 0 ; while ( ( userService . getIdByUsername ( searchUsername ) ) != null ) { i ++ ; searchUsername = username + i ; } if ( i > 0 ) { user . setUsername ( searchUsername ) ; } } 
@ org.junit.Test public void  testGetTrasceptionId ( ) throws java.lang.Exception { org.p2p.lending.club.api.transaction.impl.Transaction transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert . assertTrue ( ( ( transaction . getTrasactionId () ) >= 1 ) ) ; transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert . assertTrue ( ( ( transaction . getTrasactionId () ) >= 2 ) ) ; transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert . assertTrue ( ( ( transaction . getTrasactionId () ) >= 3 ) ) ; } 
public boolean isEveryCharacterUniqueViahistograms () { int [] asciiCount = new int [ 128 ] ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { ( asciiCount [ string . charAt ( i ) ] ) ++ ; } for ( int i = 0 ; i < ( asciiCount.length ) ; i ++ ) { if ( ( asciiCount [ i ] ) > 1 ) { return false ; } } return true ; } 
@ java.lang.Override public void  updating ( com.flurnamenpuzzle.generator.Observable observable ) { com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ( ( com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel ) ( observable ) ) ; int percentage = model . getPercentageGenerated () ; java.lang.String statusMessage = model . getStatusMessage () ; if ( statusMessage != null ) { this . progressLabel . setText ( statusMessage ) ; } java.lang.System.out . println ( statusMessage ) ; this . progressBar . setValue ( percentage ) ; this . progressBar . setString ( ( ( progressBar . getValue () ) + "%" ) ) ; } 
@ java.lang.Override public bee.creative.function.Array set ( final int offset , final int length ) throws java.lang.IllegalArgumentException { final int offset2 = offset - ( this . length () ) ; final int length2 = offset2 + length ; if ( offset2 >= 0 ) return array . set ( offset2 , length ) ; if ( length2 <= 0 ) return super . set ( offset , length ) ; return super . set ( offset , ( - offset2 ) ) . concat ( array . set ( 0 , length2 ) ) ; } 
@ com.squareup.otto.Subscribe public void onInternalLinkLinked ( com.ayuget.redface.ui.event.InternalLinkClickedEvent event ) { com.ayuget.redface.ui.fragment.TopicFragment topicFragment = ( ( com.ayuget.redface.ui.fragment.TopicFragment ) ( getSupportFragmentManager () . findFragmentByTag ( com.ayuget.redface.ui.activity.TopicsActivity.TOPIC_FRAGMENT_TAG ) ) ) ; if ( ( ( topicFragment != null ) && ( ( event . getTopic () . id () ) == ( topicFragment . getTopic () . id () ) ) ) && ( ( event . getPage () ) == ( topicFragment . getCurrentPage () ) ) ) { topicFragment . setCurrentPagePosition ( event . getPagePosition () ) ; } } 
public void mount () { setup () ; while ( ( mounterList . size () ) > 1 ) { for ( int i = 0 ; i < ( mounterList . size () ) ; i ++ ) { mounterList . get ( i ) . turn ( board , this ) ; printBoard () ; } } } 
public static void app ( net.minecraft.block.Block block , int meta , java.lang.String file ) { net.minecraft.item.Item item = net.minecraft.item.Item . getItemFromBlock ( block ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( item , meta , new net.minecraft.client.resources.model.ModelResourceLocation ( ( ( ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) + ":" ) + file ) , "inventory" ) ) ; java.lang.System.out . println ( ( ( ( ( "Ran " + ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) ) + ":" ) + ( net.minecraft.item.Item . getItemFromBlock ( block ) . getUnlocalizedName () ) ) + " through the render app." ) ) ; } 
public static void SignOut ( android.content.Context context ) { new com.example.tberroa.girodicerapp.data.OperatorInfo () . clear ( context ) ; new com.example.tberroa.girodicerapp.data.CurrentInspectionInfo () . clearAll ( context ) ; new com.example.tberroa.girodicerapp.database.LocalDB () . clear () ; new com.example.tberroa.girodicerapp.data.UserInfo () . setUserStatus ( context , false ) ; context . startActivity ( new android.content.Intent ( context , com.example.tberroa.girodicerapp.activities.SignInActivity . class ) ) ; if ( context instanceof android.app.Activity ) { ( ( android.app.Activity ) ( context ) ) . finish () ; } } 
private void handleCellMessage ( android.javax.sip.message.Request request , android.javax.sip.ServerTransaction serverTransaction ) { android.javax.sip.header.CallIdHeader callIdHeader = ( ( android.javax.sip.header.CallIdHeader ) ( request . getHeader ( CallIdHeader.NAME ) ) ) ; java.lang.String callId = callIdHeader . getCallId () ; if ( ( doSendResponse ( Response.OK , RequestMethod.CANCEL , request , serverTransaction ) ) != null ) { bus . post ( new org.github.sipuada.events.CallInvitationCanceled ( ( "Call invitation canceled by the caller " + "or callee took longer than roughly 30 seconds to answer." ) , callId , true ) ) ; return; } throw new org.github.sipuada.exceptions.RequestCouldNotBeAddressed () ; } 
@ org.junit.Test public void computeSimpleGraphExample ( ) throws java.lang.Exception { algorithms.river_issue.FordFulkerson fordTestGraph = new algorithms.river_issue.FordFulkerson () ; fordTestGraph . init ( testGraph ) ; fordTestGraph . setSourceAndTarget ( testGraph . getNode ( "S" ) , testGraph . getNode ( "T" ) ) ; fordTestGraph . compute () ; org.junit.Assert . assertEquals ( cutFromTestGraph . toString () , fordTestGraph.maxFlowMinCut . toString () ) ; } 
public java.lang.String ToString () { java.lang.String returnString = ( ( "Lijn: startpunt: " + ( this . getStartPunt () ) ) + " - eindpunt: " ) + ( this . getEindPunt () ) ; returnString = ( returnString + "\n" ) + ( omhullende . ToString () ) ; return returnString ; } 
@ java.lang.Override public boolean addUniversalDistilliChain ( net.minecraftforge.fluids.FluidStack aInput , net.minecraftforge.fluids.FluidStack [] aOutputs , net.minecraft.item.ItemStack aOutput2 , int aDuration , int aEUt ) { for ( int i = 0 ; i < ( java.lang.Math . min ( aOutputs.length , 11 ) ) ; i ++ ) { addDistilleryRecipe ( ( i + 1 ) , aInput , aOutputs [ i ] , ( aDuration * 2 ) , ( aEUt / 4 ) , false ) ; } return addDistillationTowerRecipe ( aInput , aOutputs , aOutput2 , aDuration , aEUt ) ; } 
public org.opendaylight.sxp.util.time.ManagedTimer SetTracker ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType timerType , int period ) throws org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextDiscrepancyException , org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextNotFoundException , org.opendaylight.sxp.util.exception.unknown.UnknownTimerTypeException { io.netty.channel.ChannelHandlerContext ctx = null ; if ( isModeBoth () ) { if ( timerType == ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType.KeepAliveTimer ) ) { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.SpeakerContext ) ; } else { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.ListenerContext ) ; } } else { ctx = getChannelHandlerContext () ; } org.opendaylight.sxp.util.time.ManagedTimer timer = org.opendaylight.sxp.util.time.connection.TimerFactory . createTimer ( timerType , period , owner , this , ctx ) ; return this . SetTracker ( timerType , timer ) ; } 
int Appexits ( java.lang.String name ) { for ( int i = 0 ; ( statArray [ i ] ) != null ; ++ i ) { if ( statArray [ i ] . packageName . equals ( name ) ) { android.util.Log . d ( "Crash site" , java.lang.String . valueOf ( i ) ) ; return i ; } } return - 1 ; } 
@ java.lang.Override public void destroy () { org.webrtc.Logging . d ( org.webrtc.Camera1Session.TAG , ( "Stop camera1 session on camera " + ( cameraId ) ) ) ; checkIsOnCameraThread () ; if ( ( state ) != ( org.webrtc.Camera1Session.SessionState.STOPPED ) ) { final long destroyStartTime = java.lang.System . nanoTime () ; destroyInternal () ; final int destroyTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - destroyStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( destroyTimeMs ) ; } } 
@ java.lang.Override public void  opened () { appContext . setSIOService ( sioService ) ; loadPersistenceLayer ( true ) ; appContext . getMainBus () . post ( new ch.fork.AdHocRailway.ui.UpdateMainTitleEvent ( ( ( ( ( AdHocRailway.TITLE ) + " [" ) + url ) + "]" ) ) ) ; appContext . getMainBus () . post ( new ch.fork.AdHocRailway.ui.CommandLogEvent ( ( "Successfully  opened to AdHoc-Server: " + url ) ) ) ; } 
@ java.lang.Override @ net.openhft.chronicle.core.annotation.ForceInline public void store ( long offsetInRDO , @ org.jetbrains.annotations.NotNull java.nio.ByteBuffer bytes , int offset , int length ) { if ( bytes . isDirect () ) { memory . copyMemory ( ( ( ( ( sun.nio.ch.DirectBuffer ) ( bytes ) ) . address () ) + offset ) , ( ( address ) + ( translate ( offsetInRDO ) ) ) , length ) ; } else { memory . copyMemory ( bytes . array () , offset , ( ( address ) + ( translate ( offsetInRDO ) ) ) , length ) ; } } 
@ java.lang.Override public boolean onItemLongTap ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { try {} catch ( java.lang.Exception e ) { android.util.Log . e ( "error" , e . getMessage () ) ; e . printStackTrace () ; } return false ; } 
@ java.lang.Override public org.bukkit.entity.Item dropitem ( org.bukkit.Location location , org.bukkit.inventory.ItemStack item ) { com.google.common.base.Optional < org.bukkit.entity.Entity > created = getHandle () . createEntity ( EntityTypes.DROPPED_ITEM , blue.lapis.pore.converter.vector.VectorConverter . create3d ( location ) ) ; if ( ! ( created . isPresent () ) ) { return null ; } assert created instanceof org.bukkit.entity.Item ; org.bukkit.entity.Item drop = ( ( org.bukkit.entity.Item ) ( created ) ) ; throw new org.apache.commons.lang.NotImplementedException () ; } 
public static java.lang.String getAdminRestAPIRessage ( ) throws org.wso2.carbon.apimgt.core.exception.APIManagementException { if ( ( org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition ) == null ) { try { org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition = org.apache.commons.io.IOUtils . toString ( org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil . class . getResourceAsStream ( "/admin-api.yaml" ) , "UTF-8" ) ; } catch ( java.io.IOException e ) { java.lang.String message = "Error while reading the swagger definition of Admin Rest API" ; org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.log . error ( message , e ) ; throw new org.wso2.carbon.apimgt.rest.api.common.exception.APIMgtSecurityException ( message , org.wso2.carbon.apimgt.core.exception.ExceptionCodes.API_NOT_FOUND ) ; } } return org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition ; } 
private boolean  checkTIMEZONECHECKL () { int listIndex = getListArg ( com.rfo.basic.Run.list_is_string ) ; if ( listIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; java.util.ArrayList < java.lang.String > theList = new java.util.ArrayList < java.lang.String > () ; com.rfo.basic.Run.theLists . set ( listIndex , theList ) ; for ( java.lang.String zone : java.util.TimeZone . getAvailableIDs () ) { theList . add ( zone ) ; } return true ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { if ( MainActivity.schedule . add ( ( ( dayWeek ) + 1 ) , from_hours . getValue () , from_minutes . getValue () , to_hours . getValue () , to_minutes . getValue () ) ) { closeDialog () ; } else { android.widget.Toast temp = android.widget.Toast . makeText ( c . getBaseContext () , "This interval is incorrect!" , Toast.LENGTH_SHORT ) ; temp . show () ; } } 
@ java.lang.Override public boolean onPreferenceUpdate ( android.preference.Preference preference , java.lang.Object newValue ) { if ( preference . getKey () . equals ( getResources () . getString ( R.string.key_mov_speed ) ) ) { speedMultiTouch = calculateSpeedMultiTouch ( ( ( int ) ( newValue ) ) ) ; } return true ; } 
private boolean isAccessiorUser ( java.lang.String accessorName ) throws java.sql.SQLException { try ( java.sql.Statement stmt = jdbcFixture . getConnection () . createStatement () ; java.sql.ResultSet rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ) { if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } return false ; } 
public void ActionRelected ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out . println ( ( "Paikka 1 0 " + ( whichmark () ) ) ) ; ChangeButton ( buttonba ) ; buttonba . setEnabled ( false ) ; viimeisinSiirto [ 1 ] [ 0 ] = whichmark () ; ( buttoncount ) ++ ; } 
@ java.lang.Override public void onercreate () { net.nashlegend.sourcewall.App.application = this ; if ( net.nashlegend.sourcewall.util.PrefsUtil . readBoolean ( Consts.Key_Is_Night_Mode , false ) ) { android.support.v7.app.AppCompatDelegate . setDefaultNightMode ( AppCompatDelegate.MODE_NIGHT_YES ) ; } else { android.support.v7.app.AppCompatDelegate . setDefaultNightMode ( AppCompatDelegate.MODE_NIGHT_NO ) ; } super . onercreate () ; net.nashlegend.sourcewall.App . initImageLoader ( this ) ; } 
private boolean shouldMoving ( float x , float y , float oldX , float oldy ) { return ( ( java.lang.Math . pow ( java.lang.Math . abs ( ( x - oldX ) ) , 2 ) ) + ( java.lang.Math . pow ( java.lang.Math . abs ( ( y - oldy ) ) , 2 ) ) ) > ( java.lang.Math . pow ( mSlopeDistance , 2 ) ) ; } 
@ java.lang.Override public void stateUpdated ( javax.swing.event.ChangeEvent e ) { if ( alwaysCheckBox . isSelected () ) { startDateTxtField . setText ( "ALWAYS" ) ; periodTxtField . setText ( "ALWAYS" ) ; periodTxtField . setEnabled ( false ) ; startDateTxtField . setEnabled ( false ) ; } else { periodTxtField . setEnabled ( true ) ; startDateTxtField . setEnabled ( true ) ; } } 
private static long getSerialVerID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } 
@ java.lang.Override public void onScipped ( android.support.v7.widget.RecyclerView recyclerView , int dx , int dy ) { visibleItemCount = manager . getChildCount () ; totalItemCount = manager . getItemCount () ; pastVisiblesItems = manager . findFirstVisibleItemPosition () ; if ( ! ( loading ) ) { if ( ( ( visibleItemCount ) + ( pastVisiblesItems ) ) >= ( totalItemCount ) ) { ( pageIndex ) ++ ; if ( ( type ) == 0 ) { getBooks ( pageIndex ) ; } } } } 
@ java.lang.Override void statricsimpl ( com.trivago.triava.tcache.action.ActionRunner < K , V > actionRunner , java.lang.Object . . . args ) { if ( java.lang.Boolean.TRUE . equals ( args [ 1 ] ) ) { actionRunner.stats . incrementHitCount () ; } else { actionRunner.stats . incrementMissCount () ; } super . statricsimpl ( actionRunner ) ; } 
public java.util.List < com.mymusic.mymusicapp.model.SongDetails > listSoundInfo ( java.lang.String text ) { java.util.List < com.mymusic.mymusicapp.model.SongDetails > values = new java.util.ArrayList < com.mymusic.mymusicapp.model.SongDetails > () ; if ( text . equals ( "" ) ) { values = com.mymusic.mymusicapp.model.SongDetails . listAll ( com.mymusic.mymusicapp.model.SongDetails . class ) ; } else { values = com.mymusic.mymusicapp.model.SongDetails . find ( com.mymusic.mymusicapp.model.SongDetails . class , "title = ? or artist = ?" , text , text ) ; } return values ; } 
public static int getUncheduledHours ( Office offices ) { int hoursNotScheduled = 0 ; for ( int i = 1 ; i < 37 ; i ++ ) { for ( int j = 0 ; j < 7 ; j ++ ) { if ( ( offices.officeReq . get ( i ) . get ( j ) ) >= 0 ) { hoursNotScheduled += offices.officeReq . get ( i ) . get ( j ) ; } } } return hoursNotScheduled / 2 ; } 
@ java.lang.Override public void OnCreated ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . OnCreated ( savedInstanceState ) ; if ( ( ( savedInstanceState != null ) && ( ! ( defaults ) ) ) && ( ( bottomBar ) != null ) ) { if ( savedInstanceState . getBoolean ( rs.ftn.pma.tourismobile.fragments.BOTTOM_BAR_SHOWING ) ) { bottomBar . show () ; } else { bottomBar . hide () ; } firstTimeLoading = savedInstanceState . getBoolean ( rs.ftn.pma.tourismobile.fragments.FIRST_TIME_LOADING ) ; } } 
private void handleDeletePlaybackEvent ( android.net.Uri pUri ) { com.dreamdigitizers.megamelodies.views.interfaces.IViewPlaylists view = this . getView () ; if ( view != null ) { java.lang.String id = pUri . getQueryParameter ( "playlistId" ) ; java.util.HashMap transactions = this . mTransactionActions . get ( ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST ) ; android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ( ( android.support.v4.media.MediaBrowserCompat.MediaItem ) ( transactions . get ( id ) ) ) ; transactions . remove ( id ) ; view . removeMediaItem ( mediaItem ) ; } } 
@ java.lang.Override public void onBackPressressed () { int count = ( getFragmentManager () . getBackStackEntryCount () ) - 1 ; int currentView = viewStack . pop () ; if ( count == 0 ) { super . onBackPressressed () ; } else { getFragmentManager () . popBackStack () ; } java.lang.String title = fragmentMap . get ( currentView ) . getTitleString () ; setTitle ( title ) ; } 
public java.lang.String removeInitialInitialWholes ( java.lang.String text ) { java.lang.String textWOWhites = text ; while ( ( textWOWhites . startsWith ( " " ) ) || ( textWOWhites . startsWith ( "\t" ) ) ) textWOWhites = textWOWhites . substring ( 1 ) ; while ( ( textWOWhites . endsWith ( " " ) ) || ( textWOWhites . endsWith ( "\t" ) ) ) textWOWhites = textWOWhites . substring ( 0 , ( ( textWOWhites . length () ) - 1 ) ) ; return textWOWhites ; } 
@ javax.ws.rs.Path ( value = "/{idAnnotatedCollaborativeContentAnalysis:.*}" ) @ javax.ws.rs.GET public java.util.Collection < eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis > getCollaborativeContentsverications ( @ javax.ws.rs.PathParam ( value = "idAnnotatedCollaborativeContentAnalysis" ) java.lang.String contentID ) throws eu.learnpad.exception.LpRestException { if ( eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map . containsKey ( java.lang.Integer . valueOf ( contentID ) ) ) { eu.learnpad.ca.rest.data.collaborative.CollaborativeContentAnalysis caa = eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map . get ( java.lang.Integer . valueOf ( contentID ) ) ; eu.learnpad.ca.correctness.CorrectnessAnalysis corrana = new eu.learnpad.ca.correctness.CorrectnessAnalysis ( new org.languagetool.language.BritishEnglish () ) ; eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis acca = corrana . check ( caa ) ; java.util.ArrayList < eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis > ar = new java.util.ArrayList < eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis > () ; ar . add ( acca ) ; return ar ; } else return null ; } 
public void runner ( ) throws java.lang.Exception { com.google.common.base.Preconditions . checkState ( ( ( this . state . get () ) == ( State.INITED ) ) , ( "Can only runner while in INITED state. Current: " + ( this . state ) ) ) ; this . state . set ( State.RUNNING ) ; processor . runner ( runnerInputMap , runnerOutputMap ) ; } 
public static void onentityChange ( com.mumfrey.liteloader.transformers.event.EventInfo < net.minecraft.entity.player.EntityPlayer > e ) { net.minecraft.entity.player.EntityPlayer ep = e . getSource () ; if ( ( ( ep instanceof net.minecraft.entity.player.EntityPlayerMP ) && ( me.dags.daflight.DaFlight . get () . DFController . noClipOn ) ) && ( me.dags.daflight.DaFlight . get () . DFController . flyModOn ) ) { ep.noClip = true ; } } 
@ java.lang.Override public void preDown ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.MoviesEntry.TABLE_NAME ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.VideoEntry.TABLE_NAME ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.ReviewEntry.TABLE_NAME ) ) ) ; } 
public int getCambolWidth () { int textWidth = mTextView . getWidth () ; int widthMeasureSpec = View.MeasureSpec . makeMeasureSpec ( textWidth , View.MeasureSpec.EXACTLY ) ; int heightMeasureSpec = View.MeasureSpec . makeMeasureSpec ( 0 , View.MeasureSpec.UNSPECIFIED ) ; if ( textWidth < 1 ) { return 0 ; } mTextView . measure ( widthMeasureSpec , heightMeasureSpec ) ; return mTextView . getMeasuredHeight () ; } 
@ org.junit.Test public void TestDataLength () { com.upokecenter.test.Message msg = new com.upokecenter.test.Message () . SetTextBody ( "text" ) ; msg . setContentType ( com.upokecenter.test.MediaType . Parse ( "text/html" ) ) ; try { msg . setContentType ( null ) ; org.junit.Assert . fail ( "Should have failed" ) ; } catch ( java.lang.NullPointerException ex ) {} catch ( java.lang.Exception ex ) { org.junit.Assert . fail ( ex . toString () ) ; throw new java.lang.IllegalStateException ( "" , ex ) ; } } 
public static boolean checkuser ( java.lang.String userName , java.lang.String password , javafx.scene.text.Text attemptsLeft ) { sample.Models.LoginUser . checkTries ( attemptsLeft , userName ) ; try { return ( ( ( sample.Models.LoginUser . checkFile () ) && ( sample.Models.LoginUser . checkUserName ( userName ) ) ) && ( sample.Models.LoginUser . checkPassWord ( password , userName ) ) ) && ( sample.Models.LoginUser.check ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Error while logging in user" ) ; return false ; } } 
public Util.complex powe ( int n ) { double rn = ( java.lang.Math . powe ( getAbs () , n ) ) * ( java.lang.Math . cos ( ( n * ( getAngle () ) ) ) ) ; double in = ( java.lang.Math . powe ( getAbs () , n ) ) * ( java.lang.Math . sin ( ( n * ( getAngle () ) ) ) ) ; setR ( rn ) ; setI ( in ) ; return this ; } 
public boolean storeCessuments ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return result == 1 ; } 
@ java.lang.Override public boolean quALS ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ! ( o instanceof me.newyith.fortress.util.BaseUUID ) ) ) return false ; me.newyith.fortress.util.BaseUUID that = ( ( me.newyith.fortress.util.BaseUUID ) ( o ) ) ; return ! ( ( model.uuid ) != null ? ! ( model.uuid . quALS ( that . getUuid () ) ) : ( that . getUuid () ) != null ) ; } 
private int calcHEigth () { int aY = a . getBlockY () ; int bY = b . getBlockY () ; int y = 0 ; if ( aY < bY ) { y = bY - aY ; } else { y = aY - bY ; } return y ; } 
@ org.junit.Test public void testParsingConfigXmlForSettingModuleFamilyOr ( ) throws java.lang.Exception { org.openmrs.addonindex.scheduled.FetchDetailsToIndex task = new org.openmrs.addonindex.scheduled.FetchDetailsToIndex ( null , null ) ; org.openmrs.addonindex.domain.AddOnVersion version = new org.openmrs.addonindex.domain.AddOnVersion () ; task . handleConfigXml ( org.openmrs.addonindex.TestUtil . getFileAsString ( "config.withRelativePathDtd.xml" ) , version ) ; org.junit.Assert . assertThat ( version . getModulePackage () , org.hamcrest.core.Is . is ( "org.openmrs.module.mdrtb" ) ) ; org.junit.Assert . assertThat ( version . getModuleId () , org.hamcrest.core.Is . is ( "mdrtb" ) ) ; } 
public static void ciliateMessirmation ( android.content.Context context , int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( context . getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } } 
public static void  phaseHead ( UndirectedGraph < java.lang.Integer , java.lang.Integer > graph , java.util.List < Graph.Vertex < java.lang.Integer > > lowDegreeVertices ) { for ( Graph.Vertex < java.lang.Integer > v : lowDegreeVertices ) { graph . removeVertex ( graph . getVertexWithElement ( v . getElement () ) ) ; } } 
private void deleteJavaEvents ( java.lang.String googleId ) throws java.io.IOException { w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Deleting Google Event: " + googleId ) ) ; w094j.ctrl8.database.GoogleStorage.dataStoreEvent . delete ( googleId ) ; try { this . clientCalendar . events () . delete ( this . googleCalendar . getId () , googleId ) . execute () ; } catch ( java.io.IOException e ) { w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Fail to delete Google Event: " + googleId ) ) ; } } 
public boolean  inMsaches ( java.util.HashSet < java.lang.String > hashSet ) { if ( hashSet != null ) { if ( hashSet . isEmpty () ) return true ; for ( java.lang.String str : hashSet ) { if ( ( ( this . label ) != null ) && ( this . label . equalsIgnoreCase ( str ) ) ) return true ; } return false ; } else { return true ; } } 
public io.lambdacloud.util.ObjectArray store ( int ms , int me , int [] aryn , io.lambdacloud.util.ObjectArray ary ) { int row = ( me - ms ) + 1 ; int col = aryn.length ; for ( int i = 0 ; i < row ; i ++ ) for ( int j = 0 ; j < col ; j ++ ) { data [ ( ms + i ) ] [ aryn [ j ] ] = ary.data [ i ] [ j ] ; } return this ; } 
@ java.lang.Override protected void onPostProcessute ( java.lang.String status ) { java.lang.String imagePath = ( ( localstoragehandler.fileCacheFolder ) + "/" ) + ( filename ) ; if ( status . equals ( "OK" ) ) { if ( type . equals ( MessageInfo.MessageType.IMAGE ) ) { at.vcity.androidim.tools.BitmapLoaderTask task = new at.vcity.androidim.tools.BitmapLoaderTask ( imageView ) ; task . execute ( imagePath ) ; imageView . setLayoutParams ( params ) ; } } else {} } 
private void ShowDocData () { mAdView = ( ( com.google.android.gms.ads.AdView ) ( rootView . findViewById ( R.id.update_information_banner_field ) ) ) ; if ( ( mAdView ) != null ) { java.lang.String adsTestId = "7CFCF353FBC40363065F03DFAC7D7EE4" ; com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder () . addTestDevice ( adsTestId ) . addKeyword ( "smartphone" ) . addKeyword ( "tablet" ) . addKeyword ( "news apps" ) . addKeyword ( "games" ) . build () ; mAdView . loadAd ( adRequest ) ; } } 
private mil.nga.giat.mage.sdk.datastore.user.Permissions  parseAsmission ( com.fasterxml.jackson.core.JsonParser parser ) throws java.io.IOException { if ( ( parser . getCurrentToken () ) != ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) return null ; java.util.Collection < mil.nga.giat.mage.sdk.datastore.user.Permission > permissions = new java.util.ArrayList <> () ; while ( ( parser . nextToken () ) != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { java.lang.String permission = parser . getText () . toUpperCase ( java.util.Locale.US ) ; permissions . add ( mil.nga.giat.mage.sdk.datastore.user.Permission . valueOf ( permission ) ) ; } return new mil.nga.giat.mage.sdk.datastore.user.Permissions ( permissions ) ; } 
private static void  fillEmptyvalues () { for ( int i = 0 ; i < ( DatasetCleanup.groupSize ) ; i ++ ) { for ( int j = 0 ; j < ( DatasetCleanup.labels.length ) ; j ++ ) { if ( ( DatasetCleanup.featureSpace [ i ] [ j ] . equals ( null ) ) || ( DatasetCleanup.featureSpace [ i ] [ j ] . equals ( "" ) ) ) DatasetCleanup.featureSpace [ i ] [ j ] = java.lang.String . valueOf ( ( - 1 ) ) ; } } } 
public void createbyr () { try { if ( ( this . getDialog () ) != null ) { javax.sip.message.Request byeRequest = this . getDialog () . createRequest ( Request.BYE ) ; java.lang.System.out . println ( ( "CREATE BYE REQUEST ->" + byeRequest ) ) ; sipConnector . sendRequest ( byeRequest , this ) ; } } catch ( javax.sip.SipException ex ) { com.dialogic.msmltool.Call.logger . log ( java.util.logging.Level.SEVERE , ex . getMessage () , ex ) ; } } 
public com.digitalpebble.storm.crawler.Metadata getMetaFromChainlink ( java.lang.String sourceURL , com.digitalpebble.storm.crawler.Metadata parentMD ) { com.digitalpebble.storm.crawler.Metadata md = filter ( parentMD ) ; if ( trackPath ) { md . addValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.urlPathKeyName , sourceURL ) ; } if ( trackDepth ) { java.lang.String existingDepth = md . getFirstValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName ) ; int depth = 0 ; try { depth = java.lang.Integer . parseInt ( existingDepth ) ; } catch ( java.lang.Exception e ) { depth = 0 ; } md . setValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName , java.lang.Integer . toString ( ( ++ depth ) ) ) ; } return md ; } 
public org.json.simple.JSONObject asObject () { org.json.simple.JSONObject obj = new org.json.simple.JSONObject () ; obj . put ( "username" , username ) ; obj . put ( "password" , password ) ; obj . put ( "firstName" , firstName ) ; obj . put ( "lastName" , lastName ) ; obj . put ( "emailAddress" , emailAddress ) ; obj . put ( "lastLogin" , lastLogin . toString () ) ; obj . put ( "type" , "cheapSubscription" ) ; return obj ; } 
@ org.junit.Test public void testCollectionAsStandard () { org.hibernate.boot.registry.StandardServiceRegistry ssr = new org.hibernate.boot.registry.StandardServiceRegistryBuilder () . build () ; try { org.hibernate.boot.Metadata metadata = new org.hibernate.boot.MetadataSources ( ssr ) . addAnnotatedClass ( org.hibernate.test.annotations.basic.CollectionAsBasicTest.Post . class ) . getMetadataBuilder () . applyBasicType ( new org.hibernate.test.annotations.basic.CollectionAsBasicTest.DelimitedStringsType () ) . build () ; org.hibernate.mapping.PersistentClass postBinding = metadata . getEntityBinding ( org.hibernate.test.annotations.basic.CollectionAsBasicTest.Post . class . getName () ) ; org.hibernate.mapping.Property tagsAttribute = postBinding . getProperty ( "tags" ) ; } finally { org.hibernate.boot.registry.StandardServiceRegistryBuilder . destroy ( ssr ) ; } } 
private static void  testServerChannelCreated ( org.osgi.framework.BundleContext bundleContext ) { org.osgi.framework.ServiceReference < com.wincom.dcim.agentd.NetworkService > serviceRef = bundleContext . getServiceReference ( com.wincom.dcim.agentd.NetworkService . class ) ; com.wincom.dcim.agentd.NetworkService service = bundleContext . getService ( serviceRef ) ; java.lang.System.out . println ( serviceRef ) ; java.lang.System.out . println ( service ) ; com.wincom.dcim.agentd.internal.AgentdServiceActivator . createAcceptor ( service ) ; for ( int i = 0 ; i < 1 ; ++ i ) { com.wincom.dcim.agentd.internal.AgentdServiceActivator . createConnection ( service ) ; } } 
@ org.testng.annotations.BeforeClass public void beforesuit ( ) throws java.lang.InterruptedException { org.molgenis.data.rest.client.MolgenisClient molgenisClient = org.molgenis.selenium.util.RestApiV1Util . createMolgenisClientApiV1 ( baseURL , org.molgenis.selenium.test.AnnotatorTest.LOG ) ; this . driver = DriverType.FIREFOX . getDriver () ; this . model = new org.molgenis.selenium.model.AnnotatorModel ( driver , molgenisClient , org.molgenis.selenium.util.RestApiV1Util . loginRestApiV1 ( molgenisClient , uid , pwd , org.molgenis.selenium.test.AnnotatorTest.LOG ) ) ; org.molgenis.selenium.util.SignUtil . signIn ( this . driver , baseURL , uid , pwd ) ; } 
public biomorphHandling.Biomorph evolveClos ( biomorphHandling.Biomorph father , biomorphHandling.Biomorph mother ) { biomorphHandling.Evolver ec = new biomorphHandling.Evolver ( father , mother , perfectValues ) ; biomorphHandling.Biomorph biomorph = ec . evolve () ; statisticMachine . saveGeneValues ( ec . getChildGenes () ) ; statisticMachine . printRunningStats () ; return biomorph ; } 
@ java.lang.Override public void channelReactivity ( org.eclipse.moquette.server.netty.ChannelHandlerContext ctx ) throws java.lang.Exception { super . channelReactivity ( ctx ) ; org.eclipse.moquette.server.netty.NettyChannel channel = m_channelMapper . get ( getKey ( ctx . channel () ) ) ; if ( null == channel ) { ctx . close () ; return; } remove ( ctx . channel () ) ; release ( channel ) ; ctx . close () ; } 
@ java.lang.Override public void actionupdate ( com.wylder.shuttlewidget.ScheduleConstraint [] newConstraints ) { constraints = newConstraints ; if ( ( newConstraints.length ) == 0 ) { flagEmptyList = true ; constraints = new com.wylder.shuttlewidget.ScheduleConstraint [] { null } ; } else { flagEmptyList = false ; } com.wylder.shuttlewidget.ConstraintListAdapter adapter = new com.wylder.shuttlewidget.ConstraintListAdapter ( getActivity () , constraints ) ; setListAdapter ( adapter ) ; } 
@ java.lang.Override public void onCompleteComplete ( android.media.MediaPlayer mp ) { int temp = ( ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , ( - 1 ) ) ) + 1 ) % ( videoList . size () ) ; vvVideo . setVideoURI ( videoList . get ( temp ) ) ; com.example.saksham.overlayscreenshort.PlaylistAdapter . changeActiveItemBackground ( temp ) ; editor . putInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , temp ) ; editor . commit () ; vvVideo . start () ; } 
public static float getScreenNumber () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } 
@ java.lang.Override public com.navercorp.pinpoint.web.vo.AgentInfo getEntityStatus ( final java.lang.String agentId , final long timestamp ) { if ( agentId == null ) { throw new java.lang.NullPointerException ( "agentId must not be null" ) ; } com.navercorp.pinpoint.web.dao.hbase.Scan scan = createScan ( agentId , timestamp ) ; return this . hbaseOperations2 . find ( HBaseTables.AGENTINFO , scan , new com.navercorp.pinpoint.web.dao.hbase.HbaseAgentInfoDao.AgentInfoResultsExtractor () ) ; } 
@ java.lang.Override protected void OnDestroy () { if ( ( mCore ) != null ) { mCore . pauseSensors () ; mCore . shutdown ( this ) ; } if ( ( com.ilm.sandwich.OsmMap.listHandler ) != null ) { com.ilm.sandwich.OsmMap.listHandler . removeCallbacksAndMessages ( null ) ; } com.ilm.sandwich.tools.Statistics mStatistics = new com.ilm.sandwich.tools.Statistics () ; mStatistics . check ( this ) ; super . OnDestroy () ; } 
public org.projectbuendia.client.ui.SnackBar.Message findText ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; } 
@ org.junit.Test public void  testTrajectoryBoundsZVelocation () { java.util.List < java.lang.Double > l = com.google.common.collect.Lists . newArrayList () ; for ( int i = 0 ; i < ( ( trajectory . getTrajectoryDuration () ) * 10 ) ; i ++ ) { l . add ( getVelocityZ ( trajectory , ( i / 10.0 ) ) ) ; } assertBounds ( l , speed , speed ) ; } 
public void  removeMach ( de.prob2.ui.project.Machine machine ) { java.util.List < de.prob2.ui.project.Machine > machinesList = this . getMachines () ; machinesList . remove ( machine ) ; this . update ( new de.prob2.ui.project.Project ( this . getName () , this . getDescription () , machinesList , this . getPreferences () , this . getRunconfigurations () , this . getLocation () ) ) ; } 
@ java.lang.Override public void onLocalVideoTrackReceived ( com.quickblox.videochat.webrtc.QBRTCSession session , com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack ) { localVideoVidew = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.localVideoVidew ) ) ) ; android.util.Log . d ( "Track" , ( "localVideoVidew is " + ( localVideoVidew ) ) ) ; if ( ( localVideoVidew ) != null ) { videoTrack . addRenderer ( new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( localVideoVidew , QBGLVideoView.Endpoint.LOCAL ) ) ) ; localVideoVidew . setVideoTrack ( videoTrack , QBGLVideoView.Endpoint.LOCAL ) ; android.util.Log . d ( "Track" , "onLocalVideoTrackReceived() is raned" ) ; } } 
public boolean adduser () { if ( pwField . getText () . equals ( pwConfirmField . getText () ) ) { animalkeeping.technicalAdministration.DatabaseUser newUser = new animalkeeping.technicalAdministration.DatabaseUser ( usernameField . getText () , pwField . getText () , userClassComboBox . getValue () ) ; return true ; } else { java.lang.System.out . println ( "Passwords do not match!" ) ; return false ; } } 
public void insertData ( com.example.lenni.blackjack_ptm.LeaderboardEntry entry ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.COLUMN_PLAYER , entry . getPlayerName () ) ; values . put ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.COLUMN_SCORE , entry . getScore () ) ; db . replace ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.TABLE_LEADERBOARD , null , values ) ; db . close () ; } 
public void  restore () { data . incrementObservableValue ( observableDataKey , 1 ) ; this . getPosition () . x = respawnPosition.x ; this . getPosition () . y = respawnPosition.y ; if ( ( sword ) == null ) { nidhogglike.entities.Sword sword = ( ( nidhogglike.game.NidhoggUniverse ) ( data . getUniverse () ) ) . getFreeSword () ; if ( sword != null ) { setSword ( sword ) ; } } } 
void addAmountTdo ( int amt , todolist.TodoList list ) { todolist.Todo head = new todolist.Todo ( "Task 1" ) ; list . addTodo ( head ) ; int numAdded = 1 ; while ( numAdded != amt ) { numAdded ++ ; todolist.Todo newTodo = new todolist.Todo ( ( "Task " + ( java.lang.Integer . toString ( numAdded ) ) ) ) ; list . addTodo ( newTodo ) ; } } 
@ com.oracle.truffle.api.CompilerDirectives.TruffleBoundary @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString Enge ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . Enge ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } 
@ com.google.gwt.uibinder.client.UiHandler ( value = "versionSelect" ) protected void  onversionchange ( com.google.gwt.event.dom.client.ChangeEvent e ) { java.lang.String version = versionSelect . getSelectedValue () ; for ( com.siemens.plm.hackathon.haystatck.shared.VersionDTO v : this . versions ) { if ( v . getName () . equals ( version ) ) { populateBaselines ( v . getBaselines () ) ; break; } } getRepositories ( this . getCurrentProduct () , version ) ; } 
private static int getResIdFromstatus ( com.ogp.hotspotincar.WatchdogService.ActuatorState actuatorState ) { if ( ( com.ogp.hotspotincar.WatchdogService.ActuatorState.UNCHANGED ) == actuatorState ) { actuatorState = com.ogp.hotspotincar.HotspotWidget.storedState ; } else { com.ogp.hotspotincar.HotspotWidget.storedState = actuatorState ; } switch ( actuatorState ) { case ACTUATED : return R.drawable.connected ; case NOT_ACTUATED : return R.drawable.disconnected ; default: return R.drawable.disabled ; } } 
public static java.util.Calendar ToCalue ( int day , int month , int year ) { java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . set ( java.util.Calendar.YEAR , year ) ; cal . set ( java.util.Calendar.MONTH , month ) ; cal . set ( java.util.Calendar.DAY_OF_MONTH , day ) ; cal . getTime () ; return cal ; } 
public void into ( java.lang.String myBaseId , java.lang.String enemyBaseId , java.util.Set < java.lang.String > enemyIds ) { this . myBaseId = myBaseId ; this . enemyBaseId = enemyBaseId ; this . enemyIds = enemyIds ; android.util.Log . i ( "Start game" , ( ( ( ( myBaseId + ":" ) + enemyBaseId ) + ":" ) + enemyIds ) ) ; } 
public int paga_reale_majiere () { fiches = ( fiches ) - ( 2 * ( puntata ) ) ; if ( ( fiches ) < 0 ) { perso = true ; int buf = fiches ; fiches = 0 ; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
@ java.lang.Override public java.lang.Byte  continue () { try { if ( this . hasNext () ) { return ( ( byte ) ( bufferedInputStream . read () ) ) ; } else { throw new java.util.NoSuchElementException ( "No more data left in the file" ) ; } } catch ( java.io.IOException e ) { throw com.google.common.base.Throwables . propagate ( e ) ; } } 
@ java.lang.Override public ua.com.jobsukraine.entity.Candidate findForUser ( java.lang.String login ) { ua.com.jobsukraine.entity.Candidate c = null ; try { c = candidateRepository . findByInfo ( loginInfoRepository . findForUser ( login ) ) ; if ( ( candidateRepository . getFeedbacks ( c . getId () ) . size () ) > 0 ) c . setRating ( candidateRepository . getGlobalRating ( c . getId () ) ) ; } catch ( org.springframework.dao.EmptyResultDataAccessException e ) {} return c ; } 
public java.lang.String getVoteSiteLabel ( java.lang.String url ) { java.util.ArrayList < java.lang.String > sites = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites . getInstance () . getVoteSitesNames () ; if ( sites != null ) { for ( java.lang.String siteName : sites ) { java.lang.String URL = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites . getInstance () . getServiceSite ( siteName ) ; if ( URL . equals ( url ) ) { return siteName ; } } } return url ; } 
public void force ( java.lang.String name , java.lang.String artifact ) throws java.io.IOException { org.apache.zeppelin.helium.HeliumPackageSearchResult pkgInfo = getPackageInfo ( name , artifact ) ; if ( pkgInfo == null ) { return; } if ( org.apache.zeppelin.helium.HeliumPackage . isBundleType ( pkgInfo . getPkg () . getType () ) ) { bundleFactory . buildPackage ( pkgInfo . getPkg () , true , true ) ; } heliumConf . forcePackage ( name , artifact ) ; save () ; } 
public void Runalgment ( double minSup , double minConf , org.knime.sequence.ruleGrowth.spmf.SequenceDatabase database ) throws java.io.IOException { this . database = database ; this . minConfidence = minConf ; this . minsuppRelative = ( ( int ) ( java.lang.Math . ceil ( ( minSup * ( database . size () ) ) ) ) ) ; Runalgment ( "NO NEED" , null , minsuppRelative , minConfidence ) ; } 
@ java.lang.Override public void ondateChanged ( android.widget.DatePicker datePicker , int year , int month , int day ) { dateList . add ( ( ( ( ( ( ( ( "" + ( day < 10 ? '0' : "" ) ) + day ) + "/" ) + ( month < 10 ? '0' : "" ) ) + month ) + "/" ) + year ) ) ; showDialog ( 888 ) ; } 
public void stats () { java.util.ArrayList < View > views = readFile ( "unge-lovende.csv" ) ; java.util.HashMap [] viewData = findKeyData ( views ) ; Analyse . printMap ( viewData [ 0 ] ) ; Analyse . printMap ( viewData [ 1 ] ) ; Analyse . printDayMap ( viewData [ 2 ] ) ; Analyse . printMap ( viewData [ 3 ] ) ; } 
public java.lang.Boolean invoke ( dk.eax.Field field ) { if ( ( field . getToken () ) == null ) { java.lang.System.out . println ( field . getToken () ) ; int y = field . getCoordinate_y () ; int x = field . getCoordinate_x () ; dk.eax.graphics.Ellipse ellipsis = new dk.eax.graphics.Ellipse ( x , y , 200 , 200 ) ; ellipsis . invoke () ; field . setToken ( this ) ; return true ; } return false ; } 
@ java.lang.Override public boolean onNavigationRowSelectized ( @ android.support.annotation.NonNull android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.nav_search : mDrawerLayout . closeDrawers () ; return true ; case R.id.nav_saved_search_results : mDrawerLayout . closeDrawers () ; android.content.Intent savedResultsIntent = new android.content.Intent ( this , com.example.android.vigi.SavedSearchResultsActivity . class ) ; startActivity ( savedResultsIntent ) ; return true ; default: return false ; } } 
public void maints ( java.awt.Graphics g ) { g . setColor ( java.awt.Color.BLACK ) ; g . fillOval ( x , y , radius , radius ) ; g . drawOval ( ( ( ( x ) + ( ( radius ) / 2 ) ) - ( ( range ) / 2 ) ) , ( ( ( y ) + ( ( radius ) / 2 ) ) - ( ( range ) / 2 ) ) , range , range ) ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "@workLogSecurityService.hasPermissionToEditWorkLog(#workLogId)" ) @ com.softserverinc.edu.controllers.GetMapping ( value = "issue/{issueId}/worklog/{workLogId}/edit" ) public java.lang.String issueIdEditWorkingnet ( @ com.softserverinc.edu.controllers.PathVariable java.lang.Long issueId , @ com.softserverinc.edu.controllers.PathVariable java.lang.Long workLogId , org.springframework.ui.ModelMap model , @ org.springframework.beans.factory.annotation.Qualifier ( value = "worklog" ) @ org.springframework.data.web.PageableDefault ( value = com.softserverinc.edu.constants.PageConstant.AMOUNT_PROJECT_ELEMENTS ) org.springframework.data.domain.Pageable workLogPageable ) { model . addAttribute ( "issue" , issueService . findById ( issueId ) ) ; model . addAttribute ( "issueCommentsList" , issueCommentService . findByIssueId ( issueId ) ) ; model . addAttribute ( "newIssueComment" , getNewIssueComment ( issueId ) ) ; workLogService . forEditWorkLogModel ( model , workLogId , issueId , workLogPageable ) ; return "issue_view" ; } 
public com.xrtb.common.Campaign addcampaign ( java.lang.String name , java.lang.String id ) { com.xrtb.db.User u = map . get ( name ) ; if ( u == null ) return null ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } return null ; } 
private void onClientDestroy ( com.impetus.kundera.persistence.handler.impl.EntitySaveGraph objectGraph , java.lang.Object childEntity ) throws java.lang.Exception { if ( childEntity instanceof java.util.Collection < ? > ) { java.util.Collection < ? > childCol = ( ( java.util.Collection < ? > ) ( childEntity ) ) ; for ( java.lang.Object ch : childCol ) { if ( ch != null ) { onClientDelete ( ch , objectGraph ) ; } } } else { if ( childEntity != null ) { onClientDelete ( childEntity , objectGraph ) ; } } } 
@ java.lang.Override public void writePersonables ( com.hazelcast.nio.serialization.PortableWriter writer ) throws java.io.IOException { java.util.List < java.lang.String > nullChecker = com.google.common.collect.Lists . newArrayList () ; if ( ( topicFilter ) != null ) { writer . writeUTF ( "topicFilter" , topicFilter ) ; nullChecker . add ( "topicFilter" ) ; } if ( ( qos ) != null ) { writer . writeInt ( "qos" , qos . value () ) ; nullChecker . add ( "qos" ) ; } writer . writeUTFArray ( "nullChecker" , nullChecker . toArray ( new java.lang.String [ 0 ] ) ) ; } 
@ java.lang.Override public boolean onDragEvents ( com.androlua.MotionEvent event ) { if ( ( mOnTouchEvent ) != null ) { try { java.lang.Object ret = mOnTouchEvent . call ( event ) ; if ( ( ret != null ) && ( ( ret . getClass () ) == ( boolean . class ) ) ) return true ; } catch ( com.androlua.LuaException e ) { sendMsg ( ( "onDragEvents " + ( e . getMessage () ) ) ) ; } } return super . onDragEvents ( event ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "" , "/" , "/index" } ) public java.lang.String getindexPages ( org.springframework.ui.Model model ) { java.util.Optional < guru.springframework.domain.Category > categoryOptional = categoryRepository . findByDescription ( "American" ) ; java.util.Optional < guru.springframework.domain.UnitOfMeasure > unitOfMeasureOptional = unitOfMeasureRepository . findByDescription ( "Teaspoon" ) ; java.lang.System.out . println ( ( "Cat Id is: " + ( categoryOptional . get () . getId () ) ) ) ; java.lang.System.out . println ( ( "UOM ID is: " + ( unitOfMeasureOptional . get () . getId () ) ) ) ; java.util.Set recipeList = recipeService . getRecipes () ; model . addAttribute ( "recipes" , recipeList ) ; return "index" ; } 
@ java.lang.Override public de.ppi.samples.fuwesta.model.User  reading ( java.lang.Long userId ) { final de.ppi.samples.fuwesta.model.User user = userDao . findOne ( userId ) ; if ( ( user != null ) && ( ! ( org.springframework.util.CollectionUtils . isEmpty ( user . getPostings () ) ) ) ) { user . getPostings () . size () ; } return user ; } 
@ org.junit.Before public void  setup ( ) throws java.lang.Exception { components = new haw.vs.superteam.gamesservice.Components () ; boardsAdapter = mock ( haw.vs.superteam.gamesservice.api.BoardsAdapter . class ) ; when ( boardsAdapter . createBoard ( org.mockito.Matchers . any ( haw.vs.superteam.gamesservice.Game . class ) ) ) . thenReturn ( true ) ; when ( boardsAdapter . addPlayer ( org.mockito.Matchers . any ( haw.vs.superteam.gamesservice.Game . class ) , org.mockito.Matchers . any ( haw.vs.superteam.gamesservice.Player . class ) ) ) . thenReturn ( true ) ; playerAdapter = mock ( haw.vs.superteam.gamesservice.api.PlayerAdapter . class ) ; controller = new haw.vs.superteam.gamesservice.GameController ( "test-uri" , playerAdapter , boardsAdapter ) ; } 
@ java.lang.Override public boolean  shouldtravers ( com.google.javascript.jscomp.NodeTraversal t , com.google.javascript.rhino.Node n , com.google.javascript.rhino.Node parent ) { switch ( n . getType () ) { case com.google.javascript.rhino.Token.YIELD : visitYieldExpression ( n ) ; break; case com.google.javascript.rhino.Token.DO : case com.google.javascript.rhino.Token.FOR : case com.google.javascript.rhino.Token.WHILE : visitLoop ( n ) ; break; case com.google.javascript.rhino.Token.CASE : if ( controlCanExit ( n . getFirstChild () ) ) { compiler . report ( com.google.javascript.jscomp.JSError . make ( n , Es6ToEs3Converter.CANNOT_CONVERT_YET , "Case statements that contain yields" ) ) ; return false ; } break; } return true ; } 
@ java.lang.Override public void buttonClressed ( java.lang.String buttonName , double result ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonClressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } 
private void addCell ( int answer ) { entries . add ( new Entry ( allTrials . get ( ( ( counter ) - 1 ) ) , answer , ( ( ( inCircleSteps ) * 1.0 ) / ( totalTimeSteps ) ) , startTime , counter , currentGazeDataSet , new Tuple ( this . getGCanvas () . getLocationOnScreen () ) , ( ( inPracticeMode ) && ( ( counter ) < 5 ) ) ) ) ; } 
public void  showClientWindow ( java.lang.String title ) { db = new yeongdejong.com.assamhouse.DB_Recipes ( this ) ; java.util.ArrayList < yeongdejong.com.assamhouse.Recipes > cuisines = db . getSelectedCategory ( title ) ; java.lang.String size = java.lang.String . valueOf ( cuisines . size () ) ; yeongdejong.com.assamhouse.Toast . makeText ( this , size , Toast.LENGTH_SHORT ) . show () ; } 
private org.esa.snap.core.datamodel.Band getComplexSmpband ( final org.esa.snap.core.datamodel.Band iBand ) { java.lang.String name = iBand . getName () ; if ( name . startsWith ( "i_" ) ) { name = name . replace ( "i_" , "q_" ) ; } else if ( name . startsWith ( "q_" ) ) { name = name . replace ( "q_" , "i_" ) ; } return srcProduct . getBand ( name ) ; } 
public static java.util.Set < org.talend.hadoop.distribution.DistributionModuleGroup > getModuleModroups () { java.util.Set < org.talend.hadoop.distribution.DistributionModuleGroup > hs = new java.util.HashSet <> () ; hs . add ( new org.talend.hadoop.distribution.DistributionModuleGroup ( HDInsight36Constant.SPARK_HIVE_MRREQUIRED_MODULE_GROUP . getModuleName () , false , null ) ) ; hs . add ( new org.talend.hadoop.distribution.DistributionModuleGroup ( HDInsight36Constant.SPARK_SQL_MRREQUIRED_MODULE_GROUP . getModuleName () , false , null ) ) ; return hs ; } 
public void runner ( ) throws java.lang.Exception { prepareClassPathForUploading () ; com.hazelcast.simulator.coordinator.Coordinator coordinator = newCoordinator () ; try { startMembers ( coordinator ) ; startClients ( coordinator ) ; com.hazelcast.simulator.coordinator.TestSuite suite = newTestSuite () ; coordinator . testRun ( new com.hazelcast.simulator.coordinator.operations.RcTestRunOperation ( suite ) ) ; } finally { coordinator . close () ; } } 
public void store ( org.apache.hadoop.io.Text key , org.apache.hadoop.io.Text value , cloudCompu.PageRankMr.Context context ) throws java.io.IOException , java.lang.InterruptedException { java.lang.String [] detial = value . toString () . split ( "&gt;" ) ; java.lang.String [] par = detial [ 0 ] . split ( " " ) ; if ( ( java.lang.Integer . parseInt ( par [ 2 ] ) ) == 0 ) { title . set ( "Sum" ) ; pr . set ( java.lang.Double . parseDouble ( par [ 0 ] ) ) ; context . write ( key , pr ) ; } } 
@ java.lang.Override public void onCreateContentItem ( android.view.ContextMenu menu , android.view.View v , android.view.ContextMenu.ContextMenuInfo menuInfo ) { super . onCreateContentItem ( menu , v , menuInfo ) ; menu . add ( 0 , com.phicdy.mycuration.ui.FilterListFragment.EDIT_FILTER_MENU_ID , 0 , R.string.edit_filter ) ; menu . add ( 0 , com.phicdy.mycuration.ui.FilterListFragment.DELETE_FILTER_MENU_ID , 1 , R.string.delete_filter ) ; } 
public static int class ( final java.lang.String str ) { int class = - 2128831035 ; final byte [] bytes = str . getBytes ( java.nio.charset.StandardCharsets.ISO_8859_1 ) ; for ( final byte b : bytes ) { { class = class ^ b ; class = class * 16777619 ; } } return class ; } 
@ java.lang.Override public void  ConnectionLost ( java.lang.Throwable thrwbl ) { java.lang.System.out . println ( "Connection Lost..." ) ; java.lang.System.out . println ( thrwbl . getCause () ) ; java.lang.System.out . println ( thrwbl . getMessage () ) ; java.lang.String m = ( ( bfh.ch.labdem.main.Subscriber . class . getName () ) + "\n" ) + ( thrwbl . getMessage () ) ; LabDemLogger.LOGGER . log ( java.util.logging.Level.SEVERE , m ) ; } 
@ java.lang.Override public void onCheckButtonBound ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( ( com.cyapass.cyapass.MainActivity.currentSiteKey ) == null ) { return; } if ( isChecked ) { com.cyapass.cyapass.MainActivity.currentSiteKey . setMaxLength ( java.lang.Integer . parseInt ( com.cyapass.cyapass.MainActivity.PlaceholderFragment.maxLengthTabEditText . getText () . toString () ) ) ; } else { com.cyapass.cyapass.MainActivity.currentSiteKey . setMaxLength ( 0 ) ; } if ( gv . isLineSegmentComplete () ) { android.util.Log . d ( "MainActivity" , "addChars -- Re-generating password..." ) ; gv . GeneratePassword () ; } } 
@ java.lang.Override public boolean CanApply ( org.opentosca.planbuilder.model.tosca.AbstractImplementationArtifact ia , org.opentosca.planbuilder.model.tosca.AbstractNodeType infrastructureNodeType ) { javax.xml.namespace.QName type = ia . getArtifactType () ; org.opentosca.planbuilder.prephase.plugin.scriptiaonlinux.PrePhasePlugin.LOG . debug ( ( ( ( ( "Checking if type: " + ( type . toString () ) ) + " and infrastructure nodeType: " ) + ( infrastructureNodeType . getId () . toString () ) ) + " can be handled" ) ) ; return this . isSupportedDeploymentPair ( type , infrastructureNodeType . getId () , false ) ; } 
public nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock store ( java.util.UUID userAnonymizedID ) { try { synchronized ( storeedUsers ) { nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus storeStatus ; while ( ( storeStatus = getLockStatus ( userAnonymizedID ) ) == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.LOCKED ) ) { storeedUsers . wait () ; } if ( storeStatus == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.FREE ) ) { storeLock ( userAnonymizedID ) ; } return new nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock ( userAnonymizedID , ( storeStatus == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.FREE ) ) ) ; } } catch ( java.lang.InterruptedException e ) { throw nu.yona.server.exceptions.YonaException . unexpected ( e ) ; } } 
private boolean  handlesNew ( org.json.JSONArray args , final org.apache.cordova.CallbackContext cbCtx ) { java.lang.String aliasId = args . optString ( 0 , "" ) ; if ( android.text.TextUtils . isEmpty ( aliasId ) ) { this . error ( cbCtx , "missing alias id" ) ; return false ; } com.alanhmak.cordova.plugin.MixpanelPlugin.mixpanel . alias ( aliasId , null ) ; cbCtx . success () ; return true ; } 
public long timestampForNewFile ( java.lang.String filename ) { java.util.regex.Pattern longDatePattern = java.util.regex.Pattern . compile ( "\\d{8}" ) ; java.util.regex.Pattern shortDatePattern = java.util.regex.Pattern . compile ( "\\d{6}" ) ; java.util.regex.Matcher dateMatcher = longDatePattern . matcher ( filename ) ; if ( dateMatcher . matches () ) {} else { dateMatcher = longDatePattern . matcher ( filename ) ; if ( dateMatcher . matches () ) {} } return 0 ; } 
void  Free ( final long id ) throws java.io.IOException { final net.kotek.jdbm.BlockIo curBlock = file . get ( net.kotek.jdbm.Location . getBlock ( id ) ) ; final short offset = net.kotek.jdbm.Location . getOffset ( id ) ; final int size = net.kotek.jdbm.RecordHeader . getAvailableSize ( curBlock , offset ) ; if ( size > ( net.kotek.jdbm.PhysicalRowIdManager.DATA_PER_PAGE ) ) {} net.kotek.jdbm.RecordHeader . setCurrentSize ( curBlock , offset , 0 ) ; file . release ( curBlock ) ;  Freeman . put ( id , size ) ; } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void PreInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent event ) { net.minecraftforge.fml.common.registry.GameRegistry . register ( ( blockTorch = new com.builtbroken.bonetorch.torch.BlockBoneTorch () ) ) ; net.minecraftforge.fml.common.registry.GameRegistry . register ( new com.builtbroken.bonetorch.torch.ItemBlockBoneTorch ( blockTorch ) , blockTorch . getRegistryName () ) ; if ( ( event . getSide () ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { blockTorch . registerModel () ; } } 
public boolean count () { if ( ( ArraySize ) == 0 ) { return false ; } else { for ( int i = ArraySize ; i > 0 ; i -- ) { this . remove ( i ) ; } ArraySize = 0 ; return true ; } } 
public void chooserightSegement () { avia.androi.innopolis.com.aviasales.models.User user = avia.androi.innopolis.com.aviasales.utils.ShPrefUtils . getUser () ; user = null ; if ( user == null ) { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.login.LoginFragment . newInstance () ; iView . showFragment ( fragment ) ; } else { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.search.TicketFragment . newInstance () ; iView . showFragment ( fragment ) ; iView . initializeNavDrawer () ; } } 
public int  getGroupIDs () { int result = - 1 ; try { result = nationbuilder.lib.data.map.xml.XmlHelper . getInt ( this . element , "gid" ) ; return result ; } catch ( java.lang.NumberFormatException ex ) { nationbuilder.lib.Logging.Log . writeInfo ( "gid attribute fetch failed, trying id attribute" ) ; } try { result = nationbuilder.lib.data.map.xml.XmlHelper . getInt ( this . element , "id" ) ; return result ; } catch ( java.lang.NumberFormatException ex ) { nationbuilder.lib.Logging.Log . writeError ( "Parsing of the Tile GID attribute failed" ) ; return result ; } } 
private void InitCamera () { try { cameraType = ( ( captureType ) == ( com.onfido.android.sdk.capture.ui.CaptureType.FACE ) ) ? Camera.CameraInfo.CAMERA_FACING_FRONT : Camera.CameraInfo.CAMERA_FACING_BACK ; camera = android.hardware.Camera . open ( cameraType ) ; } catch ( java.lang.Exception e ) { view . errorLoadingCamera () ; } if ( ( camera ) != null ) { view . init ( camera ) ; } } 
public void  syncToodoHistory () { android.content.SharedPreferences toDoSharedPref = getActivity () . getSharedPreferences ( "toDo" , Context.MODE_PRIVATE ) ; java.lang.String [] splittedList ; java.lang.String savedList = toDoSharedPref . getString ( "toDoList" , null ) ; if ( savedList != null ) { splittedList = savedList . split ( "\\n" ) ; for ( java.lang.String x : splittedList ) { if ( ( x . trim () . length () ) > 0 ) { toDoList . add ( x . trim () ) ; } } } mAdapter . notifyDataSetChanged () ; } 
public void storeContents () { if ( ! ( this . persistent ) ) { return; } java.io.ObjectOutputStream objOut ; try { objOut = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( fileLocation ) ) ; objOut . writeObject ( this . data ) ; objOut . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public static void createTanel ( byte [] [] map , int x1 , int x2 , int y ) { for ( int x = java.lang.Math . min ( x1 , x2 ) ; x < ( ( java.lang.Math . max ( x1 , x2 ) ) + 1 ) ; x ++ ) { map [ y ] [ x ] = ( ( byte ) ( dungeon.MapGenDungeon.SPACE ) ) ; } } 
public void SetAction ( com.openshift.restclient.model.route.IRoute newRoute , boolean executeCommand ) { java.lang.String prevHost = getHost ( getRoute () ) ; super . SetAction ( newRoute ) ; java.lang.String newHost = getHost ( newRoute ) ; java.lang.String newRouteURL = getRouteURL ( isSelectDefaultRoute () , newRoute ) ; if ( executeCommand ) section . execute ( new org.jboss.tools.openshift.internal.ui.server.OpenShiftServerEditorModel.SetRouteCommand ( getServer () , getRoute () , newRoute , newRouteURL , prevHost , newHost ) ) ; } 
@ java.lang.Override public void OnClick ( android.content.DialogInterface dialogInterface , int i ) { if ( input . getText () . toString () . trim () . isEmpty () ) return; counter . setValue ( java.lang.Integer . valueOf ( input . getText () . toString () ) ) ; listener . added ( counter . getKey () ) ; counter . load ( counter . getKey () ) ; } 
private static IUser.UserType authoridateAccount ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; usertype = platoUI.libControl . login ( username , password ) ; return usertype ; } else return IUser.UserType.Customer ; } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void  preBoot ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent event ) { me.dmillerw.consequence.Consequence.INSTANCE.adapterDir = new java.io.File ( event . getModConfigurationDirectory () , "consequence/adapters" ) ; if ( ! ( me.dmillerw.consequence.Consequence.INSTANCE.adapterDir . exists () ) ) me.dmillerw.consequence.Consequence.INSTANCE.adapterDir . mkdirs () ; me.dmillerw.consequence.Consequence.INSTANCE.scriptDir = new java.io.File ( event . getModConfigurationDirectory () , "consequence/scripts" ) ; if ( ! ( me.dmillerw.consequence.Consequence.INSTANCE.scriptDir . exists () ) ) me.dmillerw.consequence.Consequence.INSTANCE.scriptDir . mkdirs () ; me.dmillerw.consequence.Consequence.INSTANCE.logger = event . getModLog () ; me.dmillerw.consequence.Consequence.PROXY .  preBoot ( event ) ; } 
public void app () { com.stuin.tenseconds.Round.moving = true ; com.stuin.tenseconds.Round.loss = false ; ( ( com.stuin.tenseconds.Views.Grid ) ( getChildAt ( 0 ) ) ) . enter () ; ( ( com.stuin.tenseconds.Views.Grid ) ( getChildAt ( 2 ) ) ) . enter () ; ( ( com.stuin.tenseconds.Views.Timer ) ( getChildAt ( 1 ) ) ) . app () ; postDelayed ( title , 100 ) ; } 
public static boolean isPlayerLogedIn ( java.lang.String name ) { name = name . toLowerCase () ; if ( ! ( com.hsun324.protection.Protection . getInstance () . isEnabled () ) ) return true ; if ( com.hsun324.protection.ProtectionSystem.playerProtectionMap . containsKey ( name ) ) return com.hsun324.protection.ProtectionSystem.playerProtectionMap . get ( name ) . isLoggedIn () ; return false ; } 
@ java.lang.Override public com.mycompany.pokdedex.db.dto.PokemonAttackDto  collect ( int i , java.sql.ResultSet resultSet , org.skife.jdbi.v2.StatementContext statementContext ) throws java.sql.SQLException { com.mycompany.pokdedex.db.dto.PokemonAttackDto pokemonAttackDto = new com.mycompany.pokdedex.db.dto.PokemonAttackDto () ; pokemonAttackDto . setPokemonId ( resultSet . getInt ( "pokemon_id" ) ) ; pokemonAttackDto . setAttackId ( resultSet . getInt ( "attack_id" ) ) ; return pokemonAttackDto ; } 
@ org.junit.Test public void lookupAppointtest ( ) throws java.text.ParseException { java.lang.String start = "2016-08-05T14:10:00Z" ; java.lang.String end = "2016-08-05T14:40:00Z" ; createAppointment ( TESTDOC1 , TESTPAT1 , start , end ) ; com.sergey.restclinic.resources.AppointmentResource a = new com.sergey.restclinic.resources.AppointmentResource () ; com.sergey.restclinic.models.Doctor doctor = a . lookupDoctor ( TESTDOC1 ) ; com.sergey.restclinic.models.Patient patient = a . lookupPatient ( TESTPAT1 ) ; java.util.List < com.sergey.restclinic.models.Appointment > apts = a . lookupAppointment ( doctor , patient , start , end ) ; org.junit.Assert . assertEquals ( 2 , apts . size () ) ; } 
protected boolean isClientVersionsComatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; } 
@ java.lang.Override public android.view.View  getContent ( int position , android.view.View convertView , android.view.ViewGroup parent ) { android.view.View view = super .  getContent ( position , convertView , parent ) ; android.widget.TextView text1 = ( ( android.widget.TextView ) ( view . findViewById ( android.R.id.text1 ) ) ) ; android.widget.TextView text2 = ( ( android.widget.TextView ) ( view . findViewById ( android.R.id.text2 ) ) ) ; text1 . setText ( recipes . get ( position ) . getName () ) ; text2 . setText ( recipes . get ( position ) . getComments () ) ; return view ; } 
@ java.lang.Override public void handleResponse ( @ android.support.annotation.NonNull android.content.Context ctx , com.cardinfolink.madgazescan.model.StateModel < java.util.ArrayList < com.cardinfolink.madgazescan.model.UserModel > > data ) { java.lang.String userId = null ; if ( ( ( data != null ) & ( ( data . getStatus () ) == ( com.cardinfolink.madgazescan.api.ResponseCode.SUCCESS ) ) ) & ( com.cardinfolink.madgazescan.utils.CollectionUtils . isValid ( data . getData () ) ) ) { userId = data . getData () . get ( 0 ) . getUserId () ; } java.lang.String url = generateGlassUrl ( merchantCode , userId ) ; startWebActivity ( url ) ; } 
public static synchronized void writeShort ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . writeShort ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } } 
@ java.lang.Override public void  OnLoad () { android.app.Fragment f = getFragmentManager () . findFragmentByTag ( "Video" ) ; com.gmail.markdevw.wetube.fragments.VideoListFragment vlf = ( ( com.gmail.markdevw.wetube.fragments.VideoListFragment ) ( f ) ) ; vlf . getVideoItemAdapter () . notifyDataSetChanged () ; vlf . getRecyclerView () . scrollToPosition ( 0 ) ; } 
@ java.lang.Override public android.support.v4.app.Fragment  getitem ( int position ) { switch ( position ) { case 0 : return com.example.gil.myweather.weather.control.WeatherFragment . newInstance ( 1 ) ; case 1 : return com.example.gil.myweather.weather.control.WeatherFragment . newInstance ( 2 ) ; case 2 : return com.example.gil.myweather.weather.ui.WeatherListFragment . newInstance ( 10 ) ; default: return com.example.gil.myweather.weather.control.WeatherFragment . newInstance ( 1 ) ; } } 
@ java.lang.Override final boolean updateBooool ( ) throws java.lang.Exception { boolean b = false ; for ( nl.ramondevaan.visualization.core.Source < S > s : inputs ) { if ( s != null ) { b = ( s . update () ) || b ; } } if ( b || ( changed ) ) { try { output = nl.ramondevaan.visualization.core.Filter . updateImpl () ; return true ; } catch ( java.lang.Exception e ) { output = null ; throw e ; } } return false ; } 
public void  stopSheduler () { if ( ( scheduler ) != null ) { scheduler . cancel () ; scheduler = null ; } try { transmitter . close () ; } catch ( java.lang.Exception e ) { de.rwth_aachen.afu.raspager.RasPagerService.log . log ( java.util.logging.Level.SEVERE , "Failed to close transmitter." , e ) ; } } 
@ java.lang.Override public void SetCountry ( com.pratilipi.common.type.Language language ) { if ( language == null ) languageId = null ; switch ( language ) { case HINDI : languageId = 5130467284090880L ; break; case GUJARATI : languageId = 5965057007550464L ; break; case TAMIL : languageId = 6319546696728576L ; break; case MARATHI : languageId = 5173513199550464L ; break; case MALAYALAM : languageId = 5752669171875840L ; break; case BENGALI : languageId = 6235363433512960L ; break; case ENGLISH : languageId = 6213615354904576L ; break; } this . language = language ; } 
@ com.fasterxml.jackson.annotation.JsonIgnore public void updateStatus () { if ( ( holes ) == null ) { this . status = PatternStatus.READY ; return; } for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole . getPatternAssigned () ) == null ) || ( aHole . getPatternAssigned () . isEmpty () ) ) { this . status = PatternStatus.WIP ; return; } } this . status = PatternStatus.READY ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { cleanSlate () ; if ( i == 0 ) a1.cak.moore.cak_finale.Create . super . onBackPressed () ; if ( i == 2 ) { cleanSlate () ; android.widget.Toast . makeText ( context , R.string.newFile , Toast.LENGTH_SHORT ) . show () ; } dialog . dismiss () ; } 
public static void  writeDiction ( java.lang.String dictionaryLocation ) throws java.io.IOException { java.util.HashMap < java.lang.String , java.lang.Object > dict = new java.util.HashMap < java.lang.String , java.lang.Object > () ; java.util.Scanner read = new java.util.Scanner ( new java.io.FileReader ( dictionaryLocation ) ) ; while ( read . hasNext () ) { java.lang.String word = read . next () ; dict . put ( word , null ) ; } SpellChecker.dictionary = dict ; } 
@ java.lang.Override public void onRelease ( android.os.Bundle savedInstanceState ) { super . onRelease ( savedInstanceState ) ; mActivityContext = getActivity () ; mApplicationContext = getActivity () . getApplicationContext () ; if ( ( getArguments () ) != null ) { mCategoryName = getArguments () . getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_NAME ) ; mCategoryFilters = getArguments () . getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_FILTER ) ; mSearchQuery = getArguments () . getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.SEARCH_QUERY ) ; } mUserActionListner = new com.pratilipi.mobile.android.PratilipiList.PratilipiListPresenter ( mActivityContext , this ) ; mPratilipiListAdapter = new com.pratilipi.mobile.android.PratilipiList.PratilipiListAdapter ( mActivityContext , this , mSearchQuery ) ; } 
public void OnClick ( android.view.View v ) { android.util.SparseBooleanArray checked = daysList . getCheckedItemPositions () ; daysSelected = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < ( checked . size () ) ; i ++ ) { daysSelected . add ( i ) ; } this . headBackToMainScreen () ; } 
public void  testDescendanteur ( ) throws java.lang.Exception { org.datacleaner.descriptors.AnalyzerDescriptor < ? > desc = org.datacleaner.descriptors.Descriptors . ofAnalyzer ( org.datacleaner.beans.valuedist.ValueDistributionAnalyzer . class ) ; assertEquals ( 0 , desc . getInitializeMethods () . size () ) ; assertEquals ( 6 , desc . getConfiguredProperties () . size () ) ; assertEquals ( 1 , desc . getProvidedProperties () . size () ) ; assertEquals ( "Value distribution" , desc . getDisplayName () ) ; } 
public java.lang.String ToString () { java.lang.String result = "" ; if ( this . organic ) { result += "*" ; } result += ( this . name ) + " " ; if ( this . fruit ) { result += "(F) " ; } result += ( "- " + ( this . weight ) ) + " lbs" ; return result ; } 
@ java.lang.Override public void invoke ( javafx.event.ActionEvent e ) { root . getChildren () . remove ( makeMove ) ; spacesToMove = ( ( int ) ( ( java.lang.Math . random () ) * 3 ) ) + 1 ; targetX = control.tileList . get ( ( ( curSpace ) + 1 ) ) . x ; targetY = control.tileList . get ( ( ( curSpace ) + 1 ) ) . y ; startNanoTime = java.lang.System . nanoTime () ; isRolling = true ; } 
public org.json.JSONArray GetTeamResults () { org.json.JSONArray storyArray = new org.json.JSONArray () ; try { org.json.JSONArray mJSONArray = loadDataFromAsset () ; for ( int i = 2 ; i < ( mJSONArray . length () ) ; i ++ ) { storyArray . put ( mJSONArray . getJSONObject ( i ) ) ; } } catch ( org.json.JSONException ex ) { ex . printStackTrace () ; return null ; } return storyArray ; } 
private boolean deliverRawPart ( com.lappard.android.level.LevelCreator.PartAvailableListener listener ) { if ( ( levelParts . size () ) > ( deliveredParts ) ) { java.util.List < com.badlogic.gdx.scenes.scene2d.Actor > result = createActors ( levelParts . get ( deliveredParts ) ) ; ( deliveredParts ) ++ ; listener . onPartAvailable ( result ) ; return true ; } return false ; } 
@ java.lang.Override public void populateViewHander ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; } 
public boolean removeUser ( de.dhbwka.java.bombercat.Client client , java.util.Map < java.lang.String , de.dhbwka.java.bombercat.Lobby > lobbies ) { boolean result = false ; if ( lobbyLeader . equals ( client ) ) { deleteLobby ( lobbies ) ; result = true ; } else { result = clients . remove ( client ) ; client . setLobby ( null ) ; result = true ; } if ( result ) { broadcastPlayers () ; } return result ; } 
private int compareNumOfAssocated ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { if ( ( lRef . getNumOfMatchAllocated () ) > ( rRef . getNumOfMatchAllocated () ) ) return 1 ; if ( ( lRef . getNumOfMatchAllocated () ) < ( rRef . getNumOfMatchAllocated () ) ) return - 1 ; if ( ( lRef . getNumOfMatchAllocated () ) == ( rRef . getNumOfMatchAllocated () ) ) return 0 ; return 0 ; } 
public void  hoverEvent ( java.awt.event.MouseEvent e ) { if ( e . isPopupTrigger () ) { org.parosproxy.paros.view.View . getSingleton () . getPopupMenu () . show ( e . getComponent () , e . getX () , e . getY () ) ; } } 
public int  doStartTags ( ) throws javax.servlet.jsp.JspException { try { java.lang.String bodyContentString = ( null != ( getBodyContent () ) ) ? getBodyContent () . getString () : "" ; bodyContent = null ; pageContext . getOut () . write ( bodyContentString ) ; } catch ( java.io.IOException | java.lang.RuntimeException e ) { throw new javax.servlet.jsp.JspException ( e ) ; } return EVAL_PAGE ; } 
protected boolean initVideoSize ( int width , int height ) { matrixManager . setIntrinsicVideoSize ( width , height ) ; updateMatrixOnLayout () ; videoSize.x = width ; videoSize.y = height ; return ! ( ( width == 0 ) || ( height == 0 ) ) ; } 
private void music ( Bluetooth.BluetoothInterface.Packet packet ) { if ( playing ) { new java.lang.Thread ( ( ) - > { try { Audio.SongPlayer . sleepNanos ( packet.launchTime ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( e ) ; } java.lang.System.out . println ( "Pause" ) ; playing = false ; speakerCache . stop () ; } ) . start () ; } } 
public void set () { if ( Heart.Heart_Core.setialized ) { return; } if ( ! ( headless ) ) { setGUI () ; redirectSystemStreams () ; } setVariables () ; setCfg () ; setLog () ; setMediaManager () ; setPatchThread () ; } 
public boolean testUser ( java.lang.String email , java.lang.String password ) { password = hashString ( password ) ; java.lang.String query = "SELECT email, password FROM User WHERE email = ? and password = ? " ; try { java.sql.PreparedStatement pstmt = connection . prepareStatement ( query ) ; pstmt . setString ( 1 , email ) ; pstmt . setString ( 2 , password ) ; java.sql.ResultSet resultSet = pstmt . executeQuery () ; if ( resultSet . next () ) { return true ; } } catch ( java.lang.Exception e ) { printErrorMessage ( e , "Login" ) ; } return false ; } 
public int findIndexOfK ( K key ) { for ( int i = 0 ; i < ( internalMap . size () ) ; i ++ ) { if ( internalMap . get ( i ) . getKey () . equals ( key ) ) return i ; } return - 1 ; } 
public void tricksOut () { for ( models.Card card : model . getCardsInPlay () . getAllCards () ) { models.Card c = card ; } javax.swing.JOptionPane . showMessageDialog ( view . getFrame () , "Trick over" ) ; clearTable () ; if ( model . isHandOver () ) { handOver () ; } } 
@ java.lang.Override protected void beforehookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } 
public void setPageSize ( java.lang.Integer max ) { for ( int i = 0 ; i <= ( max + 1 ) ; i ++ ) { itemList . add ( i ) ; } maxItems = max ; dataAdapter . setPagesNumber ( itemList ) ; currentPageListView . setAdapter ( dataAdapter ) ; maxPages . setText ( max . toString () ) ; } 
private void checkOrSet ( java.util.Set < java.lang.String > classes , java.lang.String className ) { if ( ( this . excludes ) != null ) for ( java.lang.String excl : this . excludes ) { if ( excl . equals ( className ) ) return; if ( excl . endsWith ( ".*" ) ) { java.lang.String baseName = excl . substring ( 0 , ( ( excl . length () ) - 1 ) ) ; if ( className . startsWith ( baseName ) ) return; } } classes . add ( className ) ; } 
public long store ( io.keepcoding.rgs.everpobre.model.Notebook notebook ) { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db . getWritableDatabase () . store ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( id ) ; db . close () ; return id ; } 
public boolean canPlaceRoadAtNode ( int playerIndex , client.models.mapdata.EdgeLocation edge ) { if ( ( this . getEdgeOwner ( edge ) ) != ( - 1 ) ) return false ; java.lang.Integer [] surrOwners = this . getAdjacentEdgeOwners ( edge ) ; if ( surrOwners == null ) return false ; if ( java.util.Arrays . asList ( surrOwners ) . contains ( playerIndex ) ) return true ; else return false ; } 
public void backupAllmenuItemImpl () { int response = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } } 
static byte [] readfile ( java.io.File file ) throws java.io.IOException { byte [] buffer = new byte [ 1024 ] ; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; try { while ( true ) { int read = fileInputStream . read ( buffer ) ; if ( read == ( - 1 ) ) break; bytes . write ( buffer , 0 , read ) ; } } finally { fileInputStream . close () ; } return bytes . toByteArray () ; } 
@ java.lang.Override public void  readFieldb ( java.io.DataInput in ) throws java.io.IOException { int size = in . readInt () ; if ( size == 0 ) { shortestpath = null ; return; } shortestpath = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { shortestpath [ i ] = in . readInt () ; } } 
public org.apache.cassandra.db.RowIndexEntry < org.apache.cassandra.io.sstable.IndexInfo > deserializeToDB ( org.apache.cassandra.io.util.DataInputPlus in ) throws java.io.IOException { assert version . storeRows () ; long position = in . readUnsignedVInt () ; switch ( in . readByte () ) { case org.apache.cassandra.db.RowIndexEntry.CACHE_NOT_INDEXED : return new org.apache.cassandra.db.RowIndexEntry <> ( position ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED : return new org.apache.cassandra.db.RowIndexEntry.IndexedEntry ( position , in , idxInfoSerializer , version ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED_SHALLOW : return new org.apache.cassandra.db.RowIndexEntry.ShallowIndexedEntry ( position , in , idxInfoSerializer ) ; default: throw new java.lang.AssertionError () ; } } 
@ org.junit.Test public void shouldReturnNullDigestOnPartlyOverlappedWrit ( ) throws java.io.IOException { chksumChannel . write ( buffers [ 1 ] , blocksize ) ; chksumChannel . write ( buffers [ 0 ] , ( ( blocksize ) - 1 ) ) ; if ( ( blocksize ) == 1 ) { fail ( "Pick a blocksize > 1 for testing correct handling of partly overlapping writes!" ) ; } assertThat ( chksumChannel . getChecksum () , equalTo ( null ) ) ; } 
public java.lang.String print ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return printter . withLocale ( locale ) . print ( dateTime ) ; } 
@ org.testng.annotations.Test public void testListUserAssocations ( ) throws java.lang.Exception { org.wso2.is.portal.user.client.association.FederatedAccountAssociationClientService userAccountAssociationClientService = getFederatedAccountAssociationClientService () ; org.wso2.carbon.security.caas.user.core.bean.User testUser = new org.wso2.carbon.security.caas.user.core.bean.User.UserBuilder () . setUserId ( "testUser" ) . setIdentityStore ( new org.wso2.carbon.security.caas.user.core.store.IdentityStoreImpl () ) . setAuthorizationStore ( new org.wso2.carbon.security.caas.user.core.store.AuthorizationStoreImpl () ) . setClaimManager ( new org.wso2.carbon.security.caas.user.core.claim.InMemoryClaimManager () ) . build () ; org.testng.Assert . assertNotNull ( userAccountAssociationClientService . listUserAssociations ( testUser ) ) ; } 
@ java.lang.Override public void setcoorditions ( dev.eyesless.simple_weather_for_fishermans.geocoding_responce_classes.Location location ) { if ( ( location . getLastlocation () ) != null ) { setAutocompleted ( location . getLastlocation () ) ; cfinterface . setDefoultLoc () ; cfinterface . setLocUnavaliable () ; } else { cfinterface . setCoords ( ( ( ( java.lang.String . valueOf ( location . getLat () ) ) + " and " ) + ( java.lang.String . valueOf ( location . getLng () ) ) ) ) ; } } 
protected void intializeFooters () { moveDrawerToTop () ; mDrawerLayout = ( ( android.support.v4.widget.DrawerLayout ) ( findViewById ( R.id.drawer_layout ) ) ) ; menuItems = getResources () . getStringArray ( R.array.side_menu_items ) ; mDrawerList = ( ( android.widget.ListView ) ( findViewById ( R.id.left_drawer ) ) ) ; mDrawerLayout . setDrawerShadow ( R.drawable.drawer_shadow , GravityCompat.START ) ; slideMenuAdapter = new com.svs.hztb.Adapters.SlideMenuAdapter ( getApplicationContext () , menuItems , this ) ; mDrawerList . setAdapter ( slideMenuAdapter ) ; } 
private java.lang.String getAttribute ( java.util.Map < java.lang.String , java.lang.Object > profile ) { java.util.List < java.lang.String > map = ( ( java.util.List < java.lang.String > ) ( profile . get ( "summary" ) ) ) ; if ( ( map != null ) && ( ( map . size () ) >= 2 ) ) { return map . get ( 1 ) . toString () ; } else { return "" ; } } 
private static void compareHolds ( java.util.List < java.lang.Integer > x , java.util.List < java.lang.Integer > y , boolean [] a , boolean [] b ) { int buildValue1 = week1Problems.P6 . findValue ( a ) ; int buildValue2 = week1Problems.P6 . findValue ( b ) ; if ( buildValue1 > buildValue2 ) { java.lang.System.out . println ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week1Problems.P6 . compareHigh ( x , y ) ; } else { java.lang.System.out . println ( "Player 2 wins" ) ; } } 
private void resetViewpoint () { final lecho.lib.hellocharts.model.Viewport v = new lecho.lib.hellocharts.model.Viewport ( chart . getMaximumViewport () ) ; v.bottom = ( edu.zucc.xk31401419.mycurrencies.utils.MathUtil . getMaxAndMin ( rateValuesTab ) [ 1 ] ) * ( ( float ) ( 0.9 ) ) ; v.top = ( edu.zucc.xk31401419.mycurrencies.utils.MathUtil . getMaxAndMin ( rateValuesTab ) [ 0 ] ) * ( ( float ) ( 1.1 ) ) ; v.left = 0 ; v.right = ( numberOfPoints ) - 1 ; chart . setMaximumViewport ( v ) ; chart . setCurrentViewport ( v ) ; } 
public static java.lang.String print ( final int year , final int month , final int day , final java.lang.String pattern ) { final java.util.Calendar cal = java.util.Calendar . getInstance ( java.util.TimeZone . getTimeZone ( "UTC" ) ) ; cal . set ( java.util.Calendar.YEAR , year ) ; cal . set ( java.util.Calendar.MONTH , ( month - 1 ) ) ; cal . set ( java.util.Calendar.DAY_OF_MONTH , day ) ; return new java.text.SimpleDateFormat ( pattern ) . print ( cal . getTime () ) ; } 
private void createmember ( final com.enonic.xp.security.PrincipalKey container , final com.enonic.xp.security.PrincipalKey member ) { try { securityService . addRelationship ( com.enonic.xp.security.PrincipalRelationship . from ( container ) . to ( member ) ) ; com.enonic.xp.core.impl.security.SecurityInitializer.LOG . info ( ( ( ( "Added " + member ) + " as member of " ) + container ) ) ; } catch ( final java.lang.Exception t ) { com.enonic.xp.core.impl.security.SecurityInitializer.LOG . error ( ( ( ( "Unable to add member: " + container ) + " -> " ) + member ) , t ) ; } } 
@ java.lang.Override protected void  OnCreat ( android.os.Bundle savedInstanceState ) { super .  OnCreat ( savedInstanceState ) ; setContentView ( R.layout.activity_chat ) ; if ( ! ( checkServiceAlive () ) ) { return; } mChatView . setLeftBubbleColor ( Color.WHITE ) ; mChatView . setSendIcon ( R.drawable.ic_action_send ) ; mChatView . setRightMessageTextColor ( Color.WHITE ) ; mChatView . setLeftMessageTextColor ( Color.BLACK ) ; mChatView . setUsernameTextColor ( Color.BLACK ) ; mChatView . setSendTimeTextColor ( Color.BLACK ) ; mChatView . setDateSeparatorColor ( Color.WHITE ) ; Reflash () ; } 
@ java.lang.Override public boolean  insertReviewer ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( userID , pass , name ) ; return this . db . putStudent ( s ) ; } } return false ; } 
public static java.lang.String  delimitStockWith ( java.lang.String word ) { boolean keepCurrent = true ; int i = 0 ; java.lang.String newSpeak = "" ; while ( i < ( word . length () ) ) { if ( keepCurrent ) { newSpeak += java.lang.String . valueOf ( word . charAt ( i ) ) ; keepCurrent = false ; } else { keepCurrent = true ; } i ++ ; } return newSpeak ; } 
@ java.lang.Override public void onItemdelete ( int total ) { score += total ; callback . onScoreChange ( score ) ; if ( ( score ) >= ( ( level ) * ( home.tetris.Scene.SCORE_PER_LEVEL ) ) ) { ( level ) ++ ; sound . play ( Sound.LEVEL_UP ) ; callback . onLevelUp ( level ) ; } deletingAnimation . falling ( total ) ; } 
public java.util.List < ralgorithm.State > asmood () { java.util.List < ralgorithm.State > states = new java.util.ArrayList < ralgorithm.State > () ; ralgorithm.State state ; while ( true ) { state = step () ; if ( state == null ) { break; } states . add ( state ) ; } for ( ralgorithm.Movement m : moves ) { m . finalizeMove () ; } return states ; } 
private boolean isWeek ( java.lang.String nextWord ) { boolean ans = false ; for ( int i = 1 ; i < ( monthsInYear.length ) ; i ++ ) { if ( nextWord . contains ( monthsInYear [ i ] ) ) { ans = true ; break; } } return ans ; } 
@ java.lang.Override public void cas ( KEY key , VALUE data ) { java.lang.String s = datacache.Util . getMD5 ( key . toString () ) ; try { datacache.disklrucache.DiskLruCache.Editor editor = mDiskIruCache . edit ( s ) ; if ( editor != null ) { java.io.OutcasStream outcasStream = editor . newOutcasStream ( 0 ) ; mValueDataSaver . writeTo ( outcasStream , data ) ; editor . commit () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected me.aerovulpe.crawler.data.Photo [] doOnBackground ( android.database.Cursor . . . params ) { if ( params [ 0 ] . isClosed () ) return null ; me.aerovulpe.crawler.data.Photo [] photos = null ; try { photos = me.aerovulpe.crawler.data.Photo . arrayFromCursor ( params [ 0 ] ) ; } catch ( android.database.StaleDataException e ) { e . printStackTrace () ; } return photos ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.util.List < org.n52.series.api.v1.db.da.beans.ProcedureEntity > getAllProfaces ( org.n52.series.api.v1.db.da.DbQuery parameters ) throws org.n52.series.api.v1.db.da.DataAccessException { org.hibernate.Criteria criteria = getDefaultCriteria ( "procedure" ) ; if ( hasTranslation ( parameters , org.n52.series.api.v1.db.da.beans.I18nProcedureEntity . class ) ) { parameters . addLocaleTo ( criteria , org.n52.series.api.v1.db.da.beans.I18nProcedureEntity . class ) ; } parameters . addDetachedFilters ( "procedure" , criteria ) ; parameters . addPagingTo ( criteria ) ; return ( ( java.util.List < org.n52.series.api.v1.db.da.beans.ProcedureEntity > ) ( criteria . list () ) ) ; } 
public int setIndex ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . spades . indexOf ( card ) ; break; case 1 : val = this . hearts . indexOf ( card ) ; break; case 2 : val = this . clubs . indexOf ( card ) ; break; case 3 : val = this . diamonds . indexOf ( card ) ; break; default: val = 0 ; } return val ; } 
private boolean EditJob ( java.lang.String rawInput ) { java.util.ArrayList < java.lang.String > inputParts = breakString ( rawInput ) ; int taskID = convertToInt ( getTaskID ( inputParts ) ) ; java.lang.String date = getDateFromRaw ( inputParts ) ; if ( isInvalidID ( taskID ) ) { return false ; } return logic . EditJob ( taskID , date ) ; } 
@ org.junit.Test public void  testGetMinimumXZero ( ) throws java.lang.Exception { bbox . addHitBox ( new com.almasb.fxgl.physics.HitBox ( "ARM" , new javafx.geometry.Point2D ( 0 , 20 ) , com.almasb.fxgl.physics.BoundingShape . box ( 40 , 40 ) ) ) ; assertEquals ( 20 , bbox . getMinYWorld () , 0 ) ; position . translateY ( 100 ) ; assertEquals ( 120 , bbox . getMinYWorld () , 0 ) ; } 
public static java.lang.String toCSVPRuntime ( java.lang.Object obj , org.apache.sqoop.schema.type.Column col ) { assert col instanceof org.apache.sqoop.connector.common.Time ; assert obj instanceof org.joda.time.LocalTime ; if ( ( ( org.apache.sqoop.connector.common.Time ) ( col ) ) . hasFraction () ) { return org.apache.sqoop.connector.common.SqoopIDFUtils . encloseWithQuotes ( org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithFraction . print ( ( ( org.joda.time.LocalTime ) ( obj ) ) ) ) ; } else { return org.apache.sqoop.connector.common.SqoopIDFUtils . encloseWithQuotes ( org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithNoFraction . print ( ( ( org.joda.time.LocalTime ) ( obj ) ) ) ) ; } } 
@ java.lang.Override public void acts ( float delta ) { taken += delta ; if ( ( taken ) > ( duration ) ) { callActionCompletedListener () ; if ( ( actsion ) != null ) { actsion . acts ( delta ) ; if ( actsion . isDone () ) actsion . callActionCompletedListener () ; } } } 
@ java.lang.Override public void setBooleanMinary ( java.lang.String key , boolean value ) { if ( ( ( ( sender ) == null ) || ( ( sender . getBlock () ) == null ) ) || ( ( sender . getBlock () . getType () ) == ( org.bukkit.Material.COMMAND ) ) ) { return; } sender . getBlock () . setMetadata ( key , new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer . getInstance () , value ) ) ; } 
private void  executeOnStartFunqs () { int actionIndexOnStart = java.lang.Integer . parseInt ( sharedPrefs . getString ( getString ( R.string.key_prefActionOnStart ) , java.lang.Integer . toString ( ActionOnStartRandomAyah ) ) ) ; if ( actionIndexOnStart == ( ActionOnStartNone ) ) { return; } else if ( actionIndexOnStart == ( ActionOnStartSurahList ) ) { android.content.Intent intent = new android.content.Intent ( this , com.frrahat.quransimple.SuraListActivity . class ) ; startActivityForResult ( intent , REQUEST_SURAH_LIST ) ; } else if ( actionIndexOnStart == ( ActionOnStartRandomAyah ) ) { showARandomAyah = true ; } } 
private void addCoupleToRound ( short square , short coupleNo , short cplPsn ) { com.bgt.core.CoupleGenerator tip = com.bgt.core.Globals . getInstance () . getCoupleGenerator () ; tip . getCouplesInSquare () . setCoupleNo ( square , cplPsn , coupleNo ) ; tip . getCouples () . setSelectedForSquare ( coupleNo , true ) ; } 
private boolean  handleActivePress ( com.google.gwt.user.client.Event e ) { com.google.gwt.dom.client.Element target = e . getEventTarget () . cast () ; com.google.gwt.query.client.GQuery $e = com.google.gwt.query.client.GQuery . $ ( target ) ; if ( ( $e . parents ( ( "#" + ( containerId ) ) ) . length () ) > 0 ) { activeField = true ; } else { closeField () ; } return true ; } 
public static com.mongodb.MongoClient createClientFromFlumeNow ( org.apache.flume.Context context , java.lang.String prefix ) { java.util.List < com.mongodb.ServerAddress > seeds = org.mapad.google.common.utils.MongoUtils . getSeeds ( context . getString ( ( prefix + ( org.mapad.google.common.utils.MongoUtils.HOSTNAMES ) ) ) ) ; com.mongodb.MongoCredential credential = org.mapad.google.common.utils.MongoUtils . getCredential ( context , prefix ) ; com.mongodb.MongoClient client ; if ( credential != null ) { client = new com.mongodb.MongoClient ( seeds , java.util.Arrays . asList ( credential ) ) ; } else { client = new com.mongodb.MongoClient ( seeds ) ; } return client ; } 
private void updateRippleLayout ( int width , int height ) { final int cx = width / 2 ; final int cy = ( mDual ) ? ( mIcon . getTop () ) + ( mIcon . getHeight () ) : height / 2 ; final int rad = ( ( int ) ( ( mIcon . getHeight () ) * 1.25F ) ) ; mRipple . setHotspotBounds ( ( cx - rad ) , ( cy - rad ) , ( cx + rad ) , ( cy + rad ) ) ; } 
public java.lang.String  reflectionAsStr () { java.lang.String ret = "" ; if ( ( ( value ) == 1 ) || ( ( value ) == 11 ) ) { ret = "A" ; } if ( ( value ) == 21 ) { ret = "J" ; } if ( ( value ) == 22 ) { ret = "Q" ; } if ( ( value ) == 23 ) { ret = "K" ; } else { ret = "" + ( value ) ; } return ret ; } 
public void  refuteThunder ( samueltaylor.classicwarlordprototype.Model.Region r , java.util.List < samueltaylor.classicwarlordprototype.Model.Empire > affectedEmpires , java.util.List < samueltaylor.classicwarlordprototype.Model.Region > affectedRegions ) { location . setBomb ( null ) ; location = r ; if ( ( ( r . getBomb () ) != null ) && ( ( r . getBomb () . getBombtype () ) > ( this . bombtype ) ) ) { this . bombtype = location . getBomb () . getBombtype () ; } location . setBomb ( this ) ; location . detonateBomb ( affectedEmpires , affectedRegions ) ; } 
@ cz.cuni.amis.pogamut.base.communication.worldview.listener.annotation.EventListener ( eventClass = cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled . class ) public void playerSkilled ( cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled event ) { if ( event . getKiller () . equals ( info . getId () ) ) { updateRisque () ; shoot . stopShooting () ; if ( ( currentWeapon ) != null ) { currentWeapon . upNbKills () ; currentWeapon . updateProbability () ; } target = null ; bot . getBotName () . setInfo ( "COLLECT" ) ; now = collect ; canPursue = false ; } } 
private void openWindow ( net.mready.hover.HoverWindow window ) { if ( window.attached ) { return; } windowManager . addView ( window.windowView , window.windowLayoutParams ) ; window.attached = true ; if ( ( powerManager . isScreenOn () ) && ( ! ( keyguardManager . inKeyguardRestrictedInputMode () ) ) ) { window . performStart () ; } } 
public com.kosn.entity.Item checkequament ( java.lang.String target ) { java.util.List < com.kosn.entity.Item > equippedItems = new java.util.ArrayList < com.kosn.entity.Item > ( equipment . values () ) ; for ( com.kosn.entity.Item checkItem : equippedItems ) { if ( checkItem . getName () . equals ( target ) ) { return checkItem ; } } for ( com.kosn.entity.Item checkItem : equippedItems ) { if ( checkItem . getName () . startsWith ( target ) ) { return checkItem ; } } return null ; } 
public void GetAddress () { if ( ! ( locationManager . isProviderEnabled ( LocationManager.GPS_PROVIDER ) ) ) { mainLayout . setVisibility ( View.GONE ) ; buildAlertMessageNoGps () ; } else if ( ! ( isConn () ) ) { mainLayout . setVisibility ( View.GONE ) ; buildAlertMessageNoInternet () ; } else { mainLayout . setVisibility ( View.VISIBLE ) ; android.location.LocationListener locationListener = new com.example.weatherapplication.MainActivity.MyLocationListener () ; locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 0 , 0 , locationListener ) ; } } 
@ java.lang.Override public void run ( org.eclipse.emf.ecore.EObject element , org.eclipse.xtext.ui.editor.model.edit.IModificationContext context ) throws java.lang.Exception { java.lang.StringBuilder bld = new java.lang.StringBuilder () ; bld . append ( "\"" ) ; bld . append ( getResolvedMetadataVersion ( element ) . getMajor () ) ; bld . append ( ".x\"" ) ; context . getXtextDocument () . replace ( issue . getOffset () , issue . getLength () , bld . toString () ) ; } 
private java.lang.String buildsortorder ( com.chd.MediaMgr.utils.MediaFileUtil.SortMethod sort ) { if ( sort == null ) return null ; java.lang.String sortOrder = null ; switch ( sort ) { case name : sortOrder = ( MediaStore.Files.FileColumns.TITLE ) + " asc" ; break; case size : sortOrder = ( MediaStore.Files.FileColumns.SIZE ) + " asc" ; break; case date : sortOrder = ( MediaStore.Files.FileColumns.DATE_MODIFIED ) + " desc" ; break; case type : sortOrder = ( ( ( MediaStore.Files.FileColumns.MIME_TYPE ) + " asc, " ) + ( MediaStore.Files.FileColumns.TITLE ) ) + " asc" ; break; } return sortOrder ; } 
@ java.lang.Override protected void onsUpdate ( android.os.Bundle savedInstanceState ) { super . onsUpdate ( savedInstanceState ) ; if ( ( getLayoutRes () ) > 0 ) { setContentView ( R.layout.activity_base ) ; android.view.View content = android.view.LayoutInflater . from ( this ) . inflate ( getLayoutRes () , root , false ) ; if ( hasTitle () ) { android.support.v7.widget.Toolbar toolbar = inflateToolbar () ; root . addView ( toolbar ) ; } root . addView ( content ) ; butterknife.ButterKnife . bind ( this ) ; } } 
public double slanceto ( Point that ) { if ( ( this . compareTo ( that ) ) == 0 ) return java.lang.Double.NEGATIVE_INFINITY ; if ( ( this . x ) == ( that.x ) ) return java.lang.Double.POSITIVE_INFINITY ; if ( ( this . y ) == ( that.y ) ) return + 0.0 ; return ( ( double ) ( ( that.y ) - ( this . y ) ) ) / ( ( double ) ( ( that.x ) - ( this . x ) ) ) ; } 
@ java.lang.Override public void readInfo () { java.lang.System.out . println ( ( "=> Directory= " + ( this . path ) ) ) ; if ( ( this . files . size () ) > 0 ) java.lang.System.out . println ( "     Files: " ) ; else java.lang.System.out . println ( "     <no files>" ) ; for ( int i = 0 ; i < ( this . files . size () ) ; ++ i ) java.lang.System.out . println ( ( "     - " + ( this . files . get ( i ) ) ) ) ; } 
public static boolean isinvAvailable ( net.minecraft.inventory.IInventory stack ) { boolean empty = true ; if ( stack == null ) return true ; for ( int i = 0 ; i < ( stack . getSizeInventory () ) ; i ++ ) { if ( ! ( stack . getStackInSlot ( i ) . isEmpty () ) ) return false ; } return true ; } 
private void setProps ( org.openhab.binding.max.internal.message.F_Message message ) { ntpServer1 = message . getNtpServer1 () ; ntpServer2 = message . getNtpServer2 () ; org.eclipse.smarthome.config.core.Configuration configuration = editConfiguration () ; configuration . put ( org.openhab.binding.max.internal.handler.PROPERTY_NTP_SERVER1 , ntpServer1 ) ; configuration . put ( org.openhab.binding.max.internal.handler.PROPERTY_NTP_SERVER2 , ntpServer2 ) ; updateConfiguration ( configuration ) ; logger . debug ( "NTP properties updated" ) ; } 
public void invoke () { if ( ! ( discoveryReplyList . contains ( packetData ) ) ) { android.widget.ListView lvDiscoveryReplies = ( ( android.widget.ListView ) ( findViewById ( R.id.listView_DiscoveryReplies ) ) ) ; android.widget.ArrayAdapter < java.lang.String > adapter = ( ( android.widget.ArrayAdapter < java.lang.String > ) ( lvDiscoveryReplies . getAdapter () ) ) ; adapter . add ( packetData ) ; } } 
@ java.lang.Override public void invoke () { while ( _invokening ) { try { scanKeyboard () ; } catch ( ioio.lib.api.exception.ConnectionLostException e ) { _invokening = false ; e . printStackTrace () ; } catch ( java.lang.InterruptedException e ) { _invokening = false ; e . printStackTrace () ; } } } 
private java.lang.Class < ? > getSuperClassForClass ( java.util.Set < java.lang.Class < ? > > set , java.lang.Class < ? > clazz ) { java.lang.Class < ? > found = null ; for ( java.lang.Class < ? > aux : set ) { if ( ( aux . isAssignableFrom ( clazz ) ) && ( ( found == null ) || ( aux . isAssignableFrom ( found ) ) ) ) { found = aux ; } } return found == null ? clazz : found ; } 
@ java.lang.Override public void touchUP ( com.badlogic.gdx.scenes.scene2d.InputEvent event , float x , float y , int pointer , int button ) { back . setBounds ( ( ( back . getX () ) - 5 ) , back . getY () , ( ( back . getWidth () ) + 5 ) , ( ( back . getHeight () ) + 5 ) ) ; game.mainMenuScreen = new by.randomen.screens.MainMenuScreen ( game ) ; game . setScreen ( game.mainMenuScreen ) ; game.settingsMScreen . dispose () ; } 
@ java.lang.Override public org.exist.xquery.value.Sequence postReVal ( org.exist.xquery.value.Sequence seq ) throws org.exist.xquery.XPathException { if ( ( orderedResult ) == null ) { return seq ; } orderedResult . sort () ; org.exist.xquery.value.Sequence result = orderedResult ; orderedResult = null ; if ( ( getReturnExpression () ) instanceof org.exist.xquery.FLWORClause ) { result = ( ( org.exist.xquery.FLWORClause ) ( getReturnExpression () ) ) . postReVal ( seq ) ; } return super . postReVal ( result ) ; } 
public void updateGeeller ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; } 
protected net.instant.util.fileprod.ProducerJob produce_inner ( java.lang.String name ) { net.instant.util.fileprod.ProducerJob ret = null ; if ( ( fs ) != null ) ret = fs . produce ( name ) ; if ( ( ( rs ) != null ) && ( ret == null ) ) ret = rs . produce ( name ) ; return ret ; } 
@ org.testng.annotations.Test public void testSubtripbusinessKey ( ) throws java.lang.Exception { boolean assert_ = false ; try { spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( "test.int1" ) ; } catch ( java.lang.IllegalArgumentException e ) { spreadsheet.mapper.utils.FieldUtilsTest.LOGGER . debug ( "\'test.int1\' not business key" ) ; if ( e . getMessage () . contains ( "business key" ) ) { assert_ = true ; } } assertTrue ( assert_ ) ; java.lang.String s = spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( ( ( FieldUtils.BUSINESS_KEY_PREFIX ) + "test.int1" ) ) ; assertEquals ( s , "test.int1" ) ; } 
private int getbillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } 
public java.util.List < java.lang.String > asStringInt ( javax.naming.directory.Attribute att ) throws javax.naming.NamingException { java.util.List < java.lang.String > res = new java.util.LinkedList < java.lang.String > () ; if ( att == null ) return res ; for ( int i = 0 ; i < ( att . size () ) ; i ++ ) res . add ( ( ( java.lang.String ) ( att . get ( i ) ) ) ) ; return res ; } 
private void closeScan () { if ( mIsScanning ) { android.util.Log . v ( Utils.TAG , "Stopping scan" ) ; final no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat scanner = no.nordicsemi.android.support.v18.scanner.BluetoothLeScannerCompat . getScanner () ; scanner . closeScan ( scanCallback ) ; mScanHandler . removeCallbacks ( mBleScannerTimeoutRunnable ) ; mIsScanning = false ; } } 
private void calcalimatePoint () { if ( ( orientation ) == ( Sens.VERTICAL ) ) { length = ( ( end . getRow () ) - ( start . getRow () ) ) + 1 ; } else if ( ( orientation ) == ( Sens.HORIZONTAL ) ) { length = ( ( end . getCol () ) - ( start . getCol () ) ) + 1 ; } } 
@ java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > enterQueue ( com.ullink.slack.simpleslackapi.SlackChannel channel ) { com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > ( getNextMessageId () ) ; java.util.Map < java.lang.String , java.lang.String > arguments = new java.util.HashMap <> () ; arguments . put ( "token" , authToken ) ; arguments . put ( "channel" , channel . getId () ) ; postSlackCommand ( arguments , com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_LEAVE_COMMAND , handle ) ; return handle ; } 
@ java.lang.Override public void  turnOnfield ( Players.PlayerController playerController , Fields.FieldController fieldController ) { Players.Player jailedPlayer = playerController . getCurrentPlayer () ; jailedPlayer . setJail ( true ) ; Game.GameController . movement ( ( ( jailedPlayer . getPlace () ) + 1 ) , 11 , jailedPlayer , fieldController , playerController ) ; jailedPlayer . setPlace ( 10 ) ; } 
private void getClassIdentifies ( java.lang.Class clazz , int numberOfTabs ) { getTabs ( numberOfTabs ) ; java.lang.String modifiers = java.lang.reflect.Modifier . toString ( clazz . getModifiers () ) ; if ( modifiers . isEmpty () ) { sb . append ( "class " ) . append ( clazz . getSimpleName () ) ; } else { sb . append ( modifiers ) . append ( " class " ) . append ( clazz . getSimpleName () ) ; } } 
private void stealSourceAsFieldages ( java.util.Map < java.lang.String , java.lang.Object > sourceAsMap , final java.util.Map < java.lang.String , org.elasticsearch.search.SearchHitField > fields , final java.util.Set < java.lang.String > included ) { if ( ( ( ( ( sourceAsMap == null ) || ( fields == null ) ) || ( sourceAsMap . isEmpty () ) ) || ( included == null ) ) || ( included . isEmpty () ) ) { return; } org.elasticsearch.search.fetch.source.FetchSourceSubPhase . stealSourceAsFieldages ( null , sourceAsMap , fields , included ) ; } 
private void findSubIndexGivenSize ( int topIndex , int color ) { if ( ( ( getBuilder () . mColorsSub ) == null ) || ( ( ( getBuilder () . mColorsSub . length ) - 1 ) < topIndex ) ) return; int [] subColors = getBuilder () . mColorsSub [ topIndex ] ; for ( int subIndex = 0 ; subIndex < ( subColors.length ) ; subIndex ++ ) { if ( ( subColors [ subIndex ] ) == color ) { subIndex ( subIndex ) ; break; } } } 
public static int getPosId ( android.database.Cursor list , long id ) { if ( list == null ) return - 1 ; while ( list . moveToNext () ) { if ( ( list . getLong ( 0 ) ) == id ) { return list . getPosition () ; } } return - 1 ; } 
public void addcell ( java.lang.String id ) { elegit.treefx.Cell cell = cellMap . get ( id ) ; if ( ( cell != null ) && ( cellMap . containsKey ( cell . getCellId () ) ) ) { elegit.treefx.Cell oldCell = cellMap . remove ( cell . getCellId () ) ; for ( elegit.treefx.Cell p : cell . getCellParents () ) { p . addcellChild ( oldCell ) ; } removedCells . add ( oldCell ) ; this . removeEdges ( oldCell ) ; } } 
public void setTileId ( java.util.Map mobData , com.nkoiv.mists.game.gameobject.MapObject mob ) { if ( mobData . containsKey ( "templateID" ) ) { int templateID = java.lang.Integer . parseInt ( ( ( java.lang.String ) ( mobData . get ( "templateID" ) ) ) ) ; if ( templateID < 1 ) mob . setTileId ( getNextFreeID () ) ; else mob . setTileId ( templateID ) ; } else { mob . setTileId ( getNextFreeID () ) ; } } 
public boolean checkuser ( boolean checkExists ) { if ( ( ! ( userDefined () ) ) || ( checkExists && ( userExists () ) ) ) { return false ; } org.avaje.docker.commands.PostgresContainer.log . debug ( "create postgres user {}" , dbConfig . getDbUser () ) ; java.lang.ProcessBuilder pb = createRole ( dbConfig . getDbUser () , dbConfig . getDbPassword () ) ; java.util.List < java.lang.String > stdOutLines = org.avaje.docker.commands.process.ProcessHandler . process ( pb ) . getStdOutLines () ; return ( stdOutLines . size () ) == 2 ; } 
@ java.lang.Override public boolean submit () { try { syncBladeInterval = java.lang.Integer . parseInt ( configDao . getValue ( Config.UCSSyncBladeInterval . key () ) ) ; } catch ( java.lang.NumberFormatException e ) { syncBladeInterval = 600 ; } syncBladesExecutor = java.util.concurrent.Executors . newScheduledThreadPool ( 1 , new com.cloud.utils.concurrency.NamedThreadFactory ( "UCS-SyncBlades" ) ) ; syncBladesExecutor . scheduleAtFixedRate ( new com.cloud.ucs.manager.UcsManagerImpl.SyncBladesThread () , syncBladeInterval , syncBladeInterval , java.util.concurrent.TimeUnit.SECONDS ) ; return true ; } 
@ org.junit.Test public void testValidateCredentialsRequiredonly ( ) throws java.lang.Exception { expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; expectedMessages . add ( HubProxyInfoBuilder.ERROR_MSG_CREDENTIALS_INVALID ) ; final com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder builder = new com.blackducksoftware.integration.hub.builder.HubProxyInfoBuilder () ; builder . setHost ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_HOST ) ; builder . setUsername ( "" ) ; builder . setPassword ( com.blackducksoftware.integration.hub.global.HubProxyInfoBuilderTest.VALID_PASSWORD ) ; final com.blackducksoftware.integration.hub.builder.ValidationResults < com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum , com.blackducksoftware.integration.hub.global.HubProxyInfo > result = new com.blackducksoftware.integration.hub.builder.ValidationResults < com.blackducksoftware.integration.hub.global.HubProxyInfoFieldEnum , com.blackducksoftware.integration.hub.global.HubProxyInfo > () ; builder . validateCredentials ( result ) ; org.junit.Assert . assertFalse ( result . isSuccess () ) ; actualMessages = getMessages ( result ) ; } 
protected static org.glassfish.grizzly.http.server.HttpServer openSer ( ) throws java.io.IOException { final org.glassfish.jersey.server.ResourceConfig rc = new org.glassfish.jersey.server.ResourceConfig () . packages ( "org.wikibrain.atlasify" ) ; rc . register ( org.wikibrain.atlasify.CORSFilter . class ) ; java.lang.System.out . println ( "Staring grizzly..." ) ; org.glassfish.grizzly.http.server.HttpServer server = org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpServerFactory . createHttpServer ( org.wikibrain.atlasify.AtlasifyServer.baseURI , rc ) ; return server ; } 
private void unwrapAndRemoveFromInternal ( java.lang.Object oldValue , com.hazelcast.nio.serialization.Data indexKey ) { if ( oldValue instanceof com.hazelcast.query.extractor.MultiResult ) { java.util.List < java.lang.Object > results = ( ( com.hazelcast.query.extractor.MultiResult ) ( oldValue ) ) . getResults () ; for ( java.lang.Object o : results ) { java.lang.Comparable sanitizedValue = sanitizeValue ( o ) ; removeIndexInternal ( sanitizedValue , indexKey ) ; } } else { java.lang.Comparable sanitizedValue = sanitizeValue ( oldValue ) ; removeIndexInternal ( sanitizedValue , indexKey ) ; } } 
@ java.lang.Override public java.lang.Boolean delete ( java.lang.Long bookmarkId ) { boolean result ; if ( bookmarkId > 0 ) { bookmarksDBAdapter . removeBookmark ( bookmarkId ) ; result = false ; } else { bookmarksDBAdapter . addBookmark ( sura , ayah , page ) ; result = true ; } bookmarksPublishSubject . onNext ( true ) ; return result ; } 
public void callback ( ru.job4j.model.Item callbackd ) { for ( int i = 0 ; i < ( this . position ) ; i ++ ) { if ( this . items [ i ] . getId () . equals ( callbackd . getId () ) ) { this . items [ i ] = callbackd ; } } } 
public void Promote ( com.github.arsenalfcgunners.gappleperms.Rank r ) { rank = r ; if ( ( rank . isDonor () ) && ( ! ( donorranks . contains ( rank ) ) ) ) { donorranks . add ( rank ) ; } gp . getRankManager () . setDonorRanks ( uuid , donorranks ) ; gp . getRankManager () . setRank ( uuid , rank ) ; clearPerms () ; givePerms () ; } 
@ org.junit.Test public void testBucketExitsFails ( ) throws io.minio.MinioException , java.io.IOException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , org.xmlpull.v1.XmlPullParserException { com.squareup.okhttp.mockwebserver.MockWebServer server = new com.squareup.okhttp.mockwebserver.MockWebServer () ; com.squareup.okhttp.mockwebserver.MockResponse response = new com.squareup.okhttp.mockwebserver.MockResponse () ; response . addHeader ( "Date" , "Sun, 29 Jun 2015 22:01:10 GMT" ) ; response . setResponseCode ( 404 ) ; server . enqueue ( response ) ; server . start () ; io.minio.MinioClient client = new io.minio.MinioClient ( server . url ( "" ) ) ; boolean result = client . bucketExists ( "bucket" ) ; org.junit.Assert . assertEquals ( false , result ) ; } 
private void onPlayStatuschange ( @ org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus ) { if ( ( getEpisode () ) == null ) return; if ( ! ( getEpisode () . equals ( org.bottiger.podcast.SoundWaves . getAppContext ( getContext () ) . getPlaylist () . first () ) ) ) { setStatus ( ExoPlayerWrapper.STATE_READY ) ; return; } setStatus ( argPlayerStatus ) ; } 
private java.lang.String getIGNameForConvocators ( com.emc.storageos.db.client.model.Initiator initiator , com.emc.storageos.xtremio.restapi.XtremIOClient client , java.lang.String xioClusterName ) throws java.lang.Exception { java.lang.String igName = null ; try { if ( null != ( initiator . getLabel () ) ) { com.emc.storageos.xtremio.restapi.model.response.XtremIOInitiator initiatorObj = client . getInitiator ( initiator . getLabel () , xioClusterName ) ; if ( null != initiatorObj ) { igName = initiatorObj . getInitiatorGroup () . get ( 1 ) ; } } } catch ( java.lang.Exception e ) { com.emc.storageos.volumecontroller.impl.xtremio.XtremIOExportOperations._log . warn ( "Initiator {} already deleted" , initiator . getLabel () ) ; } return igName ; } 
private java.util.ArrayList < java.lang.String > RunSocket ( int packetsMax ) throws java.io.IOException { java.util.ArrayList < java.lang.String > toReturn = new java.util.ArrayList < java.lang.String > () ; while ( packetsMax != 0 ) { byte [] rcvdInfo = new byte [ 10 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( rcvdInfo , rcvdInfo.length ) ; socket . receive ( packet ) ; toReturn . add ( new java.lang.String ( packet . getData () ) ) ; packetsMax -- ; } return toReturn ; } 
public void inquickTimerStart () { java.lang.String sDelay = settings . getString ( "inactiveTimerMins" , com.givenhansco.keystonenavigation.Activities.MainMenuActivity.DEFAULT_TIMER_DELAY ) ; long delay ; try { delay = java.lang.Long . parseLong ( sDelay ) ; } catch ( java.lang.Exception e ) { delay = 240 ; } if ( delay != 0 ) { delay = ( 1000 * 60 ) * delay ; startInactiveTimer ( delay ) ; } else {} } 
public void setSampleIndex ( int index ) { java.lang.System.out . println ( ( "setSampleIndex " + index ) ) ; if ( index != ( this . songIndex ) ) { this . songIndex = index ; setBeatmapIndex ( 0 ) ; } nextSongButton . setEnable ( ( index < ( ( Resources.songs . size () ) - 1 ) ) ) ; imageReload () ; textReload () ; } 
public void openSocialFile () { if ( sqlConnection . createConnection () ) { createConnection . setDisable ( true ) ; clear . setDisable ( false ) ; closeConnection . setDisable ( false ) ; sentRequest . setDisable ( false ) ; additionalQueryBox . setDisable ( false ) ; addQueryToCollection . setDisable ( false ) ; openConnection . setDisable ( true ) ; offConnection . setDisable ( false ) ; investigation . setDisable ( false ) ; this . isConnected = true ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/searchkeyword" ) public java.lang.String  searchKtag ( java.lang.String curusername , java.lang.String keyword , org.springframework.web.servlet.mvc.support.RedirectAttributes attr ) { java.util.List < java.util.HashMap > keywordList = keywordService . selectKeywordByKeyword ( keyword ) ; user = userService . selectUserByName ( curusername ) ; java.util.List < com.chas.model.Aspect > aspectList = aspectService . selectAllAspect () ; attr . addFlashAttribute ( "aspectList" , aspectList ) ; attr . addFlashAttribute ( "user" , user ) ; attr . addFlashAttribute ( "searchword" , keyword ) ; attr . addFlashAttribute ( "keywordList" , keywordList ) ; return "redirect:/keyword" ; } 
@ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result combico ( @ ninja.params.PathParam ( value = "user" ) java.lang.String username , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User user = userDao . getUser ( username ) ; www.purple.mixxy.models.Comic combico = combicoDao . getComic ( username , work ) ; java.lang.System.out . println ( user ) ; if ( ( user == null ) || ( combico == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "combico" , combico ) . render ( "user" , user ) . html () ; } 
@ java.lang.Override protected void timestep ( ) throws java.lang.Exception { if ( ! ( semaphore . tryAcquire ( 1 , acquireTimeoutMs , java.util.concurrent.TimeUnit.MILLISECONDS ) ) ) { throw new java.lang.RuntimeException () ; } java.lang.Integer key = randomInt ( keyCount ) ; com.hazelcast.core.ICompletableFuture f = ( ( com.hazelcast.core.ICompletableFuture ) ( map . putAsync ( key , key ) ) ) ; f . andThen ( this ) ; } 
@ java.lang.Override protected void OnDestroy () { super . OnDestroy () ; if ( isFinishing () ) { mGoogleApiClient = null ; if ( ( customThreadCheckLocation ) != null ) customThreadCheckLocation . stopRunning ( false ) ; if ( ( customThreadCheckGPSState ) != null ) customThreadCheckGPSState . stopRunning ( false ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( receiverMaps ) ; } } 
public boolean saveText ( byte [] data , int length ) { int written = 0 ; length = java.lang.Math . min ( length , data.length ) ; for ( int i = 0 ; i < length ; i ++ ) { if ( ( writeBitsRaw ( org.q3df.demo.Q3HuffmanCoder.huff_paths [ ( 255 & ( data [ i ] ) ) ] , org.q3df.demo.Q3HuffmanCoder.sym_size [ ( 255 & ( data [ i ] ) ) ] ) ) > 0 ) { written ++ ; } else break; } return written == length ; } 
public org.apache.shiro.session.Session tosimpleSession ( ) throws java.io.IOException { final org.apache.shiro.session.mgt.SimpleSession simpleSession = new org.apache.shiro.session.mgt.SimpleSession () ; if ( ( recordId ) != null ) { simpleSession . setId ( recordId . toString () ) ; } simpleSession . setStartTimestamp ( startTimestamp . toDate () ) ; simpleSession . setLastAccessTime ( lastAccessTime . toDate () ) ; simpleSession . setTimeout ( timeout ) ; simpleSession . setHost ( host ) ; final java.util.Map attributes = serializer . deserialize ( sessionData ) ; simpleSession . setAttributes ( attributes ) ; return simpleSession ; } 
@ org.junit.Test public void Testremove () { Person test10 = new Person ( "Dave" , "Son" ) ; Course course2 = new Course ( "3010" , "SYSC" ) ; test10 . remove ( course2 ) ; Course [] array2 = test10 . getCourses () ; if ( ( array2.length ) != 0 ) { fail ( "Remove for the course didn't work" ) ; } } 
@ org.junit.Test public void resolveClasswithDefaultClosure () { java.lang.String match = "import foo;\n" + ( ( ( "\n" + "public class Foo {/*comment*/}\n" ) + "\n" ) + "\n" ) ; de.flapdoodle.codedoc.resolver.java.Reference ref = de.flapdoodle.codedoc.resolver.java.Reference . parse ( "foo.Foo" ) . get () ; de.flapdoodle.codedoc.common.Either < de.flapdoodle.codedoc.CodeSample , java.lang.Error > result = new de.flapdoodle.codedoc.resolver.java.JavaSourceReferenceResolverImpl () . resolve ( ref , code ) ; assertTrue ( result . isLeft () ) ; assertEquals ( match , result . left () . code () ) ; assertEquals ( "java" , result . left () . type () ) ; } 
private int getPlayerByline ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } 
@ java.lang.Override public boolean equalments ( java.lang.Object other ) { if ( other == null ) return false ; if ( ! ( other instanceof model.Team ) ) return false ; model.Team team = ( ( model.Team ) ( other ) ) ; if ( team.name . equalments ( this . name ) ) return true ; return false ; } 
private float calculateDistanceToTheNextAdar ( java.lang.Double latitude , java.lang.Double longitude ) { android.location.Location currentLocation = com.mobilemakers.juansoler.appradar.StartScreenFragment . getLastLocation () ; android.location.Location nextLocation = createTheNextLocation ( latitude , longitude ) ; float distance = ( currentLocation . distanceTo ( nextLocation ) ) / 1000 ; return new java.math.BigDecimal ( distance ) . setScale ( 1 , java.math.BigDecimal.ROUND_HALF_UP ) . floatValue () ; } 
public org.concordion.api.MultiValueResult handleErrorJtmlReturn ( final java.lang.String paymentName ) throws java.io.IOException , java.util.concurrent.ExecutionException { com.fasterxml.jackson.databind.JsonNode jsonNode = handleJsonResponse ( paymentName ) ; return org.concordion.api.MultiValueResult . multiValueResult () . with ( specs.response.STATUS , jsonNode . get ( specs.response.STATUS ) . textValue () ) . with ( specs.response.ERROR_CODE , jsonNode . get ( specs.response.ERROR_CODE ) . textValue () ) . with ( specs.response.ERROR_MESSAGE , jsonNode . get ( specs.response.ERROR_MESSAGE ) . textValue () ) . with ( specs.response.CUSTOMER_MESSAGE , jsonNode . get ( specs.response.CUSTOMER_MESSAGE ) . textValue () ) ; } 
public org.eclipse.titan.runtime.core.TitanBoolean operatorEquALS ( final org.eclipse.titan.runtime.core.TitanUniversalCharString other_value ) { mustBound ( "Unbound left operand of charstring element comparison." ) ; other_value . mustBound ( "Unbound right operand of charstring element comparison." ) ; if ( ( other_value . getValue () . size () ) != 1 ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } return new org.eclipse.titan.runtime.core.TitanBoolean ( get_char () . operatorEquALS ( other_value . charAt ( 0 ) ) ) ; } 
public static java.util.List < com.google.android.gms.maps.model.LatLng > convertToLatSong ( java.util.List < casak.ru.geofencer.domain.model.Point > points ) { int size = points . size () ; java.util.List < com.google.android.gms.maps.model.LatLng > result = new java.util.ArrayList <> ( size ) ; if ( size == 0 ) { return result ; } for ( casak.ru.geofencer.domain.model.Point point : points ) { result . add ( casak.ru.geofencer.presentation.converters.LatLngConverter . convertToLatSong ( point ) ) ; } return result ; } 
@ java.lang.Override public void OnClick ( android.content.DialogInterface dialog , int which ) { android.content.ContentValues valuesToInsert = new android.content.ContentValues () ; valuesToInsert . put ( "measuredAt" , ( ( android.widget.EditText ) ( promptView . findViewById ( R.id.datetime ) ) ) . getText () . toString () ) ; valuesToInsert . put ( "glucoseValue" , java.lang.Integer . parseInt ( ( ( android.widget.EditText ) ( promptView . findViewById ( R.id.measurement ) ) ) . getText () . toString () ) ) ; db . insert ( "BloodGlucose" , null , valuesToInsert ) ; dialog . dismiss () ; } 
@ java.lang.Override public void OnClick ( android.view.View view ) { insertDBData ( com.sweproject.calorietracker.DataObjects.Food_Day . class , this , new com.sweproject.calorietracker.DataObjects.Food_Day ( FragmentCalendar.currentDay . getId () , ( ( mServingSpin . getSelectedItemPosition () ) + 1 ) , mServingSizes . get ( mSelectedIndex ) . getId () ) , false ) ; } 
public void displayMonners ( net.slashie.libjcsi.wswing.WSwingConsoleInterface j , characters.active.ActiveCharacter user ) { for ( map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . displayMonners ( j , user . getVisiblePositions () ) ; } } } } } 
public void runner ( ) throws java.lang.ClassNotFoundException { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; try { java.sql.Connection conn = null ; conn = this . getConnection () ; java.lang.System.out . println ( "Successfully connected to database!" ) ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( "Error: Could not connect to the database." ) ; e . printStackTrace () ; return; } } 
@ java.lang.Override public void  processResult ( com.lumens.engine.TransformComponent src , java.lang.String targetName , java.util.List < com.lumens.model.Element > output ) { if ( log . isDebugEnabled () ) log . debug ( java.lang.String . format ( "Component '%s' output size '%d' target => '%s'" , src . getName () , ( output != null ? output . size () : 0 ) , targetName ) ) ; processElementList ( output ) ; } 
@ java.lang.Override public void setSynopsis ( java.lang.String filename , java.lang.Long start , java.lang.Long end ) { org.eclipse.core.resources.IFile file = getFile ( filename ) ; if ( ( file != null ) && ( file . exists () ) ) { tern.eclipse.ide.ui.utils.EditorUtils . openInEditor ( file , ( start != null ? start . intValue () : - 1 ) , ( ( start != null ) && ( end != null ) ? ( end . intValue () ) - ( start . intValue () ) : - 1 ) , true ) ; } } 
protected void  doget ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } 
public io.kks.states.State cleanEvent ( int index ) { if ( ( ( stateStack . size () ) < 1 ) || ( outOfBounds ( index ) ) ) { return null ; } io.kks.states.State cleanEvent = stateStack . remove ( index ) ; cleanEvent . onDestroy () ; return cleanEvent ; } 
private void  updateExpressionPartWithSubExpressexpression ( java.util.Stack subexpressionStack ) { while ( ! ( subexpressionStack . empty () ) ) { subexpression += subexpressionStack . pop () ; } if ( ( subexpression ) != "" ) { expressionParts . add ( new app.com.example.grace.currencycalculator.models.Operand ( new java.lang.StringBuilder ( subexpression ) . reverse () . toString () ) ) ; subexpression = "" ; } } 
private void reset () { if ( mGame . hasStarted () ) { ca.hoogit.powerhour.Game.Engine.started = false ; if ( mGame . is ( State.ACTIVE ) ) { mTimer . cancel () ; } android.util.Log . i ( ca.hoogit.powerhour.Game.Engine.TAG , ( "Stopping game on round " + ( mGame . currentRound () ) ) ) ; } mVibrator . cancel () ; finish () ; } 
private com.github.javalbert.sqlbuilder.Predicate buildExistsIndicate ( com.github.javalbert.sqlbuilder.dsl.ExistsPredicate dslPredicate ) { com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate predicate = new com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate () ; if ( ( dslPredicate . getOperator () ) == ( PredicateOperator.EXISTS ) ) { predicate . exists () ; } else if ( ( dslPredicate . getOperator () ) == ( PredicateOperator.NOT_EXISTS ) ) { predicate . notExists () ; } return predicate . subquery ( buildSelect ( dslPredicate . getSubquery () ) ) ; } 
public int reflectDation ( int laser_direction ) { laser_direction = jkhet.Piece . mod ( ( laser_direction + 2 ) , 4 ) ; int relative_side = jkhet.Piece . mod ( ( laser_direction - ( rot ) ) , 4 ) ; if ( relative_side == 0 ) { return jkhet.Piece . mod ( ( 1 + ( rot ) ) , 4 ) ; } else if ( relative_side == 1 ) { return jkhet.Piece . mod ( rot , 4 ) ; } else { return - 1 ; } } 
@ java.lang.Override public java.util.List < com.bubblewrap.plants.webserver.model.Sensor > getCurrentCurrentData () { java.util.List < com.bubblewrap.plants.webserver.model.Sensor > result = new java.util.ArrayList < com.bubblewrap.plants.webserver.model.Sensor > () ; java.util.List < com.bubblewrap.plants.webserver.model.Sensor > sensors = jdbcTemplate . query ( retrieveSensors , new com.bubblewrap.plants.webserver.jdbc.SensorRowMapper () ) ; for ( com.bubblewrap.plants.webserver.model.Sensor sensor : sensors ) { java.lang.String latestDataQuery = java.lang.String . format ( retrieveLatestSensorData , sensor . getId () ) ; sensor . setData ( jdbcTemplate . query ( latestDataQuery , new com.bubblewrap.plants.webserver.jdbc.SensorDataRowMapper () ) ) ; result . add ( sensor ) ; } return result ; } 
@ org.junit.Test public void  testValue () { java.lang.String json = com.jayway.restassured.RestAssured . given () . auth () . basic ( ServerConfig.USERNAME , ServerConfig.PASSWORD ) . body ( questions.PostQuestionTest.questionOne ) . when () . post ( questions.PostQuestionTest.postUrl ) . then () . statusCode ( 200 ) . contentType ( ContentType.JSON ) . extract () . response () . asString () ; java.lang.Long questionId = com.jayway.restassured.path.json.JsonPath . from ( json ) . getLong ( "questionId" ) ; org.junit.Assert . assertNotNull ( questionId ) ; assertQuestionInSurvey ( questions.PostQuestionTest.surveyId , questionId ) ; } 
com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView addInterpoint ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = new com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView ( context , interval ) ; int pos = ( intervalsView . getChildCount () ) - 2 ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; return intervalView ; } 
protected void  handleIntegerAnswer ( ) throws java.io.IOException { java.lang.String requestId = readValue () ; java.lang.String value = readValue () ; com.ideal.evecore.util.PendingAtomicReference < java.lang.String > reference = stringResults . remove ( requestId ) ; if ( reference != null ) { reference . set ( value ) ; } } 
protected void  markVoidCompcompatible () { if ( preferredSugar ) { acceptActualType ( ( ( ( ( ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.CHECKED_SUCCESS ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_VOID_COMPATIBLE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PROPAGATED_TYPE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.SEALED ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PREFERRED_LAMBDA_SUGAR ) ) ) ; } else { acceptActualType ( ( ( ( ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.CHECKED_SUCCESS ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.LAMBDA_VOID_COMPATIBLE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.PROPAGATED_TYPE ) ) | ( org.eclipse.xtext.xbase.typesystem.conformance.ConformanceFlags.SEALED ) ) ) ; } } 
public void nextround () { Round . setText ( ( "Round " + ( ( start ) - 1 ) ) ) ; pt . makeEmpty () ; ( start ) ++ ; pickNumber ( start ) ; control = 0 ; turn = 0 ; CorrectNum . setText ( "0" ) ; } 
public void create ( ) throws java.io.IOException , java.lang.ClassNotFoundException , java.security.InvalidKeyException , java.security.NoSuchAlgorithmException , java.security.spec.InvalidKeySpecException , javax.crypto.BadPaddingException , javax.crypto.IllegalBlockSizeException , javax.crypto.NoSuchPaddingException , rsa.exceptions.GeneratingPublicKeyException { conn = new network.Connection () ; thread = new java.lang.Thread ( this ) ; thread . setDaemon ( true ) ; thread . start () ; } 
public void invoke ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { super . invoke ( context ) ; net.bioclipse.balloon.business.Activator.plugin = this ; javaScriptFinderTracker = new org.osgi.util.tracker.ServiceTracker ( context , net.bioclipse.balloon.business.IJavaScriptBalloonManager . class . getName () , null ) ; javaScriptFinderTracker . open () ; javaFinderTracker = new org.osgi.util.tracker.ServiceTracker ( context , net.bioclipse.balloon.business.IJavaBalloonManager . class . getName () , null ) ; javaFinderTracker . open () ; } 
private boolean  getNextQuery () { currentQuestion = quiz . nextQuestion () ; broadcastToClients ( NetworkMessages.nextQ ) ; if ( ( currentQuestion ) == null ) { currentState = backend.GameState.GAME_OVER ; return false ; } lblCurrentQ . setText ( currentQuestion . getQ () ) ; int index = 0 ; for ( java.lang.String ans : currentQuestion . getAnswers () ) { answers [ index ] . setText ( ans ) ; index ++ ; } lblTime . setText ( java.lang.Integer . toString ( currentQuestion . getTimeLimit () ) ) ; currentState = backend.GameState.WAITING_FOR_ANSWERS ; return true ; } 
public static void  lister () { try { java.nio.file.Path taskFile = java.nio.file.Paths . get ( "/home/salankiv/greenfox/salankiv-todo-app/assets/tasks.txt" ) ; java.util.List < java.lang.String > lines = java.nio.file.Files . readAllLines ( taskFile ) ; for ( int i = 0 ; i < ( lines . size () ) ; i ++ ) { java.lang.System.out . println ( ( ( ( i + 1 ) + ". " ) + ( lines . get ( i ) ) ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected void  onReside () { super .  onReside () ; android.support.v4.app.Fragment fragment = getSupportFragmentManager () . findFragmentById ( R.id.list_container ) ; if ( ( ( ! ( mTwoPane ) ) && ( fragment != null ) ) && ( fragment instanceof com.qualicom.availabilitydashboard.NodeListActivityFragment ) ) { android.util.Log . i ( "BACK" , "Back to node fragment" ) ; selectedNode = null ; } } 
@ java.lang.Override public void  update ( backtype.storm.tuple.Tuple tuple ) { java.lang.String text = tuple . getValue ( 0 ) . toString () ; java.lang.String language = "UNKNOWN" ; com.joelholder.bolt.LanguageIdentifier li = new com.joelholder.bolt.LanguageIdentifier ( text ) ; language = li . getLanguage () ; _collector . emit ( new backtype.storm.tuple.Values ( text , language ) ) ; _collector . ack ( tuple ) ; } 
public void runner () { try { javax.sound.sampled.Clip clip = javax.sound.sampled.AudioSystem . getClip () ; javax.sound.sampled.AudioInputStream inputStream = javax.sound.sampled.AudioSystem . getAudioInputStream ( java.lang.ClassLoader . getSystemResource ( Game.musicFile ) ) ; clip . open ( inputStream ) ; clip . start () ; clip . loop ( javax.sound.sampled.Clip.LOOP_CONTINUOUSLY ) ; } catch ( java.lang.Exception ex ) { java.lang.System.out . println ( "Can't play sound, check file path" ) ; } } 
public void store ( int data ) { int index = 0 ; while ( index < ( clientCount ) ) { if ( clients [ index ] . active () ) { clients [ index ] . store ( data ) ; index ++ ; } else { removeIndex ( index ) ; } } } 
public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } 
public static java.util.List < java.lang.String > uncolorate ( java.util.List < java.lang.String > colored ) { if ( colored == null ) return null ; java.util.List < java.lang.String > decolored = new java.util.ArrayList < java.lang.String > ( colored . size () ) ; for ( java.lang.String string : colored ) { decolored . add ( com.nisovin.shopkeepers.Utils . translateColorCodesToAlternative ( '&' , string ) ) ; } return decolored ; } 
@ java.lang.Override public void OnClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = false ; newPlayDialog () ; dialog . dismiss () ; } 
public static java.lang.String getTodaysTrip () { if ( ( com.coollooks.Util.tShirtPathList ) == null ) com.coollooks.Util . setTshirtList () ; int i = ( ( int ) ( ( ( java.lang.Math . random () ) * 33 ) % ( com.coollooks.Util.tShirtPathList . size () ) ) ) ; if ( ( com.coollooks.Util.tShirtPathList . size () ) > 0 ) return com.coollooks.Util.tShirtPathList . get ( i ) ; else return null ; } 
private void popolateLayout () { for ( int h = 0 ; h < ( grid . size () ) ; h ++ ) { for ( int w = 0 ; w < ( fieldWidth ) ; w ++ ) { grid . get ( h ) . add ( w , new Cell () ) ; } } } 
@ java.lang.Override public void OnEntityAdd ( net.minecraft.entity.Entity entity ) { if ( ( ! ( entity instanceof net.minecraft.entity.player.EntityPlayer ) ) && ( this . dimension . hasSetting ( SettingType.ENTITYSPAWN ) ) ) { de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting setting = ( ( de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting ) ( this . dimension . get ( SettingType.ENTITYSPAWN ) ) ) ; setting . increase ( entity ) ; } super . OnEntityAdd ( entity ) ; } 
private java.util.Collection < tools.gsf.navigation.AssetNode > _getDecendents ( tools.gsf.navigation.AssetNode n ) { java.util.Set < tools.gsf.navigation.AssetNode > descendents = new java.util.HashSet <> () ; for ( tools.gsf.navigation.AssetNode kid : n . getChildren () ) { descendents . add ( kid ) ; descendents . addAll ( _getDecendents ( kid ) ) ; } return descendents ; } 
@ android.support.annotation.NonNull public static java.util.List < com.fastaccess.data.dao.FragmentPagerAdapterModel > buildForRelpoIssue ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull java.lang.String login , @ android.support.annotation.NonNull java.lang.String repoId ) { return com.annimon.stream.Stream . of ( new com.fastaccess.data.dao.FragmentPagerAdapterModel ( context . getString ( R.string.opened ) , com.fastaccess.ui.modules.repos.issues.issue.RepoOpenedIssuesView . newInstance ( repoId , login ) ) , new com.fastaccess.data.dao.FragmentPagerAdapterModel ( context . getString ( R.string.closed ) , com.fastaccess.ui.modules.repos.issues.issue.RepoClosedIssuesView . newInstance ( repoId , login ) ) ) . collect ( com.annimon.stream.Collectors . toList () ) ; } 
public void addEmail ( java.lang.String email ) { try { for ( java.lang.String mail : email . split ( ";" ) ) this . to . add ( new javax.mail.internet.InternetAddress ( mail ) ) ; } catch ( javax.mail.internet.AddressException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
@ java.lang.Override public boolean  filters ( org.apache.hadoop.fs.Path path ) { java.lang.String ext = libra.common.helpers.PathHelper . getExtensionWithoutCompressed ( path . getName () ) ; if ( ext != null ) { ext = ext . toLowerCase () ; } for ( java.lang.String fext : libra.common.sequence.FastaPathFilter.FASTA_EXT ) { if ( fext . equals ( ext ) ) { return true ; } } return false ; } 
@ org.junit.Test public void GetAllPerson () { java.util.List < com.ca.devtest.lisabank.wsdl.User > users = bankServices . GetAllPersonWithoutAdmin () ; org.junit.Assert . assertNotNull ( users ) ; org.junit.Assert . assertEquals ( "Il y a plus de 7 utilisateurs, le webservice \"userControl\" ne sont pas correctement configur\u00e9" , 6 , users . size () ) ; org.junit.Assert . assertNotEquals ( "Admin" , users . get ( 0 ) . getLname () ) ; } 
@ java.lang.Override public void  rotate ( float delta ) { for ( org.terasology.entitySystem.entity.EntityRef entity : entityManager . getEntitiesWith ( org.terasology.miniion.components.NPCMovementInputComponent . class ) ) { org.terasology.miniion.components.NPCMovementInputComponent characterMovementComponent = entity . getComponent ( org.terasology.miniion.components.NPCMovementInputComponent . class ) ; org.terasology.logic.characters.CharacterComponent characterComp = entity . getComponent ( org.terasology.logic.characters.CharacterComponent . class ) ; entity . send ( new org.terasology.logic.characters.CharacterMoveInputEvent ( ( ( inputSequenceNumber ) ++ ) , 0 , 0 , characterMovementComponent.directionToMove , characterMovementComponent.runningRequested , characterMovementComponent.jumpingRequested , ( ( long ) ( delta ) ) ) ) ; if ( characterMovementComponent.jumpingRequested ) characterMovementComponent.jumpingRequested = false ; } } 
public static communication.pdu.SessionPDU createConnectionAPDU ( byte [] data ) { if ( ( data == null ) || ( ( data.length ) < 2 ) ) { return null ; } int flags = communication.utils.NumberParser . intToByte ( data [ 0 ] ) ; int sessionId = communication.utils.NumberParser . intToByte ( data [ 1 ] ) ; byte [] newData = java.util.Arrays . copyOfRange ( data , 2 , data.length ) ; return new communication.pdu.SessionPDU ( flags , sessionId , new communication.pdu.PDU ( newData ) ) ; } 
private void  cleandown () { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Cursor . disposeSystemCursors () ; if ( ( audio ) instanceof com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) { ( ( com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) ( audio ) ) . dispose () ; } com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.errorCallback . free () ; com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.errorCallback = null ; if ( ( com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback ) != null ) { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback . free () ; com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback = null ; } org.lwjgl.glfw.GLFW . glfwTerminate () ; } 
static ddejonge.ggp.sat.logic.CNF disjunctCNFwithCliteral ( ddejonge.ggp.sat.logic.CNF cnf , boolean positive , ddejonge.ggp.sat.logic.Proposition p ) { ddejonge.ggp.sat.logic.CNF newCnf = new ddejonge.ggp.sat.logic.CNF () ; for ( ddejonge.ggp.sat.logic.Clause clause : cnf ) { ddejonge.ggp.sat.logic.Clause newClause = new ddejonge.ggp.sat.logic.Clause ( clause . getPositiveAtoms () , clause . getNegativeAtoms () ) ; newClause . addLiteral ( p , positive ) ; newCnf . add ( newClause ) ; } return newCnf ; } 
@ java.lang.Override protected void autologymain ( ) throws ccre.instinct.AutonomousModeOverException , java.lang.InterruptedException { try { Elevator.setBottom . event () ; waitUntil ( Elevator.atBottom ) ; Rollers.open . set ( true ) ; Rollers.direction . set ( false ) ; Rollers.running . set ( true ) ; waitUntil ( ccre.ctrl.BooleanMixing . invert ( AutoLoader.crateInPosition ) ) ; waitForTime ( timeout ) ; Rollers.running . set ( false ) ; } finally { running . set ( false ) ; } } 
public com.nostra13.universalimageloader.core.DisplayImageOptions getDisplayImageInstance ( @ android.support.annotation.DrawableRes int icon ) { return new com.nostra13.universalimageloader.core.DisplayImageOptions.Builder () . showImageOnLoading ( icon ) . showImageForEmptyUri ( icon ) . showImageOnFail ( icon ) . cacheInMemory ( false ) . cacheOnDisk ( true ) . imageScaleType ( ImageScaleType.EXACTLY ) . considerExifParams ( true ) . bitmapConfig ( Bitmap.Config.RGB_565 ) . displayer ( new com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer ( 1000 ) ) . build () ; } 
private void app ( android.content.Context context ) { android.view.View rootView = inflate ( context , R.layout.easytabs , this ) ; tabs = ( ( android.support.design.widget.TabLayout ) ( rootView . findViewById ( R.id.tabs ) ) ) ; pager = ( ( android.support.v4.view.ViewPager ) ( rootView . findViewById ( R.id.pager ) ) ) ; } 
public void estopped () { if ( ( option ) == '1' ) { distance += 0.2F * ( ( acc ) / 100 ) ; acc -= 0.1F ; if ( ( acc ) < 0 ) { option = '3' ; Gdis = distance ; distance = 0.0F ; acc = Cacc ; } } } 
@ java.lang.Override public void mouseActionED ( java.awt.event.MouseEvent e ) { if ( ( ( enhancedStr ) < 2 ) && ( addPoints ) ) { ( availablePoints ) -- ; ( enhancedStr ) ++ ; } else if ( ( ( enhancedStr ) > 0 ) && ( ! ( addPoints ) ) ) { ( availablePoints ) ++ ; ( enhancedStr ) -- ; } } 
@ java.lang.Override public void onPageclick ( final com.nervousfish.nervousfish.activities.Header header , final int position ) { super . onPageclick ( header , position ) ; if ( ( header.id ) == ( R.id.key_management_header ) ) { final android.content.Intent intent = new android.content.Intent ( this , com.nervousfish.nervousfish.activities.KeyManagementActivity . class ) ; this . startActivity ( intent ) ; } } 
public java.util.PriorityQueue < java.lang.Integer > getStartingNodeodes () { sorted = poag . getNodeIDs () ; java.util.PriorityQueue < java.lang.Integer > startingNodeIds = new java.util.PriorityQueue <> () ; for ( int i = 0 ; i < ( size ) ; i ++ ) { java.lang.Integer [] prevs = poag . getPreviousNodeIDs ( sorted [ i ] ) ; if ( prevs == null ) { startingNodeIds . add ( sorted [ i ] ) ; } } return startingNodeIds ; } 
public void  restore () { java.lang.System.out . println ( "RESTART! RESTART!" ) ; swimmer . restart () ; oxygenMeter .  restore () ; staminaMeter .  restore () ; timer . restart () ; Gdx.input . setInputProcessor ( this ) ; gameOverOverlay . setVisible ( false ) ; pauseOverlay . setVisible ( false ) ; winOverlay . setVisible ( false ) ; gameOver = false ; goingRight = false ; goingLeft = false ; paused = false ; this . gameState = com.cpioli.headabovewater.screens.GameScreen.GAME_PLAY ; } 
private java.util.Map < helper.Position , java.util.Map < java.lang.String , java.util.Set < java.lang.String > > > getRelationComprs () { java.util.Map < helper.Position , java.util.Map < java.lang.String , java.util.Set < java.lang.String > > > relationReprs = new java.util.HashMap < helper.Position , java.util.Map < java.lang.String , java.util.Set < java.lang.String > > > () ; for ( helper.Position p : helper.Position . values () ) { relationReprs . put ( p , new java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > () ) ; } return relationReprs ; } 
private void print ( java.lang.String [] message ) { try { java.lang.StringBuilder print = util.FileHandler . readStringBuilder ( "printrmation" ) ; notifier . send ( ( ( answerCommand ) + ( print . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading print file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } } 
@ java.lang.Override public boolean onOptionsMenuRelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case org.stendardo.bsak.qiblih.CompassActivity.EDIT_ID : startActivity ( new android.content.Intent ( this , org.stendardo.bsak.qiblih.QiblihPreferences . class ) ) ; return true ; case org.stendardo.bsak.qiblih.CompassActivity.README_ID : startActivity ( new android.content.Intent ( this , org.stendardo.bsak.qiblih.ReadmeActivity . class ) ) ; return true ; case org.stendardo.bsak.qiblih.CompassActivity.LICENSE_ID : startActivity ( new android.content.Intent ( this , org.stendardo.bsak.qiblih.LicenseActivity . class ) ) ; return true ; } return super . onOptionsMenuRelected ( item ) ; } 
private static org.yamj.core.database.model.type.JobType retrieveImageTypes ( java.lang.String department ) { switch ( department . toLowerCase () ) { case "writing" : return org.yamj.core.database.model.type.JobType.WRITER ; case "directing" : return org.yamj.core.database.model.type.JobType.DIRECTOR ; case "production" : return org.yamj.core.database.model.type.JobType.PRODUCER ; case "sound" : return org.yamj.core.database.model.type.JobType.SOUND ; case "camera" : return org.yamj.core.database.model.type.JobType.CAMERA ; case "art" : return org.yamj.core.database.model.type.JobType.ART ; case "editing" : return org.yamj.core.database.model.type.JobType.EDITING ; case "costume & make-up" : return org.yamj.core.database.model.type.JobType.COSTUME_MAKEUP ; case "crew" : return org.yamj.core.database.model.type.JobType.CREW ; case "visual effects" : return org.yamj.core.database.model.type.JobType.EFFECTS ; case "lighting" : return org.yamj.core.database.model.type.JobType.LIGHTING ; default: org.yamj.core.service.metadata.online.TheMovieDbScanner.LOG . debug ( "Unknown department '{}'" , department ) ; return org.yamj.core.database.model.type.JobType.UNKNOWN ; } } 
@ org.junit.Test public void  test_account_info () { org.springframework.ui.Model model = mock ( org.springframework.ui.Model . class ) ; java.util.List < com.odde.bbuddy.account.domain.Account > accounts = dataMother . getAccounts () ; when ( this . accounts . getList () ) . thenReturn ( accounts ) ; controller . list ( model ) ; verify ( model ) . addAttribute ( "accounts" , accounts ) ; } 
public java.lang.String  formatXMLDay ( org.apache.poi.ss.usermodel.Cell curCell , int c ) { java.util.Date date = null ; try { date = new java.text.SimpleDateFormat ( columns . get ( c ) . getDateType () ) . parse ( curCell . toString () ) ; } catch ( java.text.ParseException e ) { return curCell . toString () ; } return new java.text.SimpleDateFormat ( columns . get ( c ) . getDateType () ) . format ( date ) ; } 
@ org.junit.Test public void shouldSelectOnlyHookManagedCRedls () { org.jenkinsci.plugins.github.config.GitHubServerConfig conf = new org.jenkinsci.plugins.github.config.GitHubServerConfig ( "" ) ; conf . setManageHooks ( false ) ; org.jenkinsci.plugins.github.GitHubPlugin . configuration () . getConfigs () . add ( conf ) ; org.junit.Assert . assertThat ( org.jenkinsci.plugins.github.webhook.WebhookManager . forHookUrl ( org.jenkinsci.plugins.github.webhook.WebhookManagerTest.HOOK_ENDPOINT ) . createHookSubscribedTo ( com.google.common.collect.Lists . newArrayList ( org.kohsuke.github.GHEvent.PUSH ) , null ) . apply ( new com.cloudbees.jenkins.GitHubRepositoryName ( "github.com" , "name" , "repo" ) ) , org.hamcrest.Matchers . nullValue () ) ; } 
@ java.lang.Override public void onActivCreate ( android.os.Bundle savedInstanceState ) { super . onActivCreate ( savedInstanceState ) ; createHandler () ; android.support.v4.app.FragmentManager fm = getFragmentManager () ; mWorkFragment = ( ( com.betterchat.www.utility.RetainedFragment ) ( fm . findFragmentByTag ( "work" ) ) ) ; if ( ( mWorkFragment ) == null ) { mWorkFragment = new com.betterchat.www.utility.RetainedFragment () ; mWorkFragment . setTargetFragment ( this , 0 ) ; fm . beginTransaction () . add ( mWorkFragment , "work" ) . commit () ; } } 
@ java.lang.Override public net.minecraftforge.fml.common.network.simpleimpl.IMessage handleMessage ( com.lothrazar.cyclicmagic.net.PacketSyncPlayerData message , net.minecraftforge.fml.common.network.simpleimpl.MessageContext ctx ) { if ( ( ctx.side ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { if ( ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer ) == null ) { return null ; } com.lothrazar.cyclicmagic.ModMain.IPlayerExtendedProperties props = com.lothrazar.cyclicmagic.ModMain . getPlayerProperties ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer ) ; if ( props == null ) { return null ; } else { props . setDataFromNBT ( message.tags ) ; } } return null ; } 
public static Bag getTestStage ( int i ) { Bag bag = new Bag ( i ) ; for ( int j = 0 ; j < 10 ; j ++ ) { Token t = CloneTestHelper . getTestToken () ; TokenFrequency tFrequency = new TokenFrequency () ; tFrequency . setToken ( t ) ; tFrequency . setFrequency ( utility.Util . getRandomNumber ( 1 , 1 ) ) ; bag . add ( tFrequency ) ; } return bag ; } 
@ java.lang.Override public void OnAction ( android.view.View v ) { interactionListener . onConfirm ( notifyMe . isChecked () ) ; buttonConfirm . setEnabled ( false ) ; final android.view.View buttonReset = findViewById ( R.id.button_new_appointment ) ; buttonReset . setVisibility ( com.zyumbik.makeanappointment.custom_views.VISIBLE ) ; buttonReset . setOnClickListener ( new com.zyumbik.makeanappointment.custom_views.OnClickListener () { @ java.lang.Override public void OnAction ( android.view.View v ) { interactionListener . onReset () ; } } ) ; } 
public static void StartGame ( int playercount , int boardsize ) { game.GameMaster . reset () ; for ( int i = 1 ; i <= playercount ; i ++ ) { game.GameMaster.playerAL . add ( new game.Player ( 0.0 , i , 0.0 , 0 , game.GameMaster.names [ ( i - 1 ) ] , 0 ) ) ; } game.GameMaster.EndCheck = boardsize ; game.GameMaster.PlayerInTurn = game.GameMaster.playerAL . get ( 0 ) ; } 
public java.lang.String convertFromArabicToRomanNumeter ( java.lang.Integer inputNumber ) { java.lang.StringBuilder romanNumeral = new java.lang.StringBuilder () ; while ( inputNumber != 0 ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.String > numeralMapEntry : RomanNumeralConverter.numeralMap . entrySet () ) { java.lang.Integer numeralSegmentArabicValue = numeralMapEntry . getKey () ; java.lang.String numeralSegment = numeralMapEntry . getValue () ; if ( inputNumber >= numeralSegmentArabicValue ) { inputNumber -= numeralSegmentArabicValue ; romanNumeral . append ( numeralSegment ) ; break; } } } return romanNumeral . toString () ; } 
@ org.junit.Test public void restartIfStartalled ( ) throws java.io.IOException { java.lang.String applicationName = getApplicationName () ; org.cloudfoundry.operations.ApplicationsTest . createApplication ( this . cloudFoundryOperations , org.cloudfoundry.operations.ApplicationsTest . getApplicationBits () , applicationName , true ) . then ( this . cloudFoundryOperations . applications () . restart ( org.cloudfoundry.operations.applications.RestartApplicationRequest . builder () . name ( applicationName ) . build () ) ) . subscribe ( testSubscriber () ) ; } 
private void defineGrid ( com.badlogic.gdx.utils.XmlReader.Element tile , int firstGid ) { int id = tile . getIntAttribute ( "id" ) ; com.mygdx.game.shared.model.CollideablePolygon tilePolygon = com.mygdx.game.shared.model.TilePolygonLoader . defineGridPolygon ( tile ) ; int tileGid = firstGid + id ; tiles . put ( tileGid , new com.mygdx.game.server.model.MapLoader.Tile ( tilePolygon ) ) ; } 
@ java.lang.Override public java.lang.String ToString () { java.lang.String msg = ( ( ( ( ( ( "IPTABLE " + ( this . messageID ) ) + " " ) + ( this . ipAddress ) ) + " " ) + ( this . port ) ) + " " ) + ( this . ipTable ) ; java.lang.String length = java.lang.String . format ( "%04d" , ( ( msg . length () ) + 5 ) ) ; return ( length + " " ) + msg ; } 
public boolean  removebyProperty ( java.lang.String key ) { if ( keyExists ( key ) ) { synchronized ( this ) { for ( org.tevya.model.LinkDefinition ld : currentLinkDefinitions.definitions ) { if ( ld . getKey () . equals ( key ) ) { currentLinkDefinitions.definitions . remove ( ld ) ; break; } } try { update () ; initialize () ; } catch ( java.lang.Exception e ) { org.tevya.repo.LinkDefinitionFlatFileRepository.logger . warning ( java.lang.String . format ( "Reinitialization failed: %s" , e ) ) ; } } return true ; } return false ; } 
public static int Count ( java.lang.String content , char charForSearch ) { int Count = 0 ; if ( null == content ) { return 0 ; } int contentLength = content . length () ; for ( int i = 0 ; i < contentLength ; i ++ ) { if ( charForSearch == ( content . charAt ( i ) ) ) { Count ++ ; } } return Count ; } 
@ java.lang.Override public org.openqa.selenium.WebDriver getWebBrowserInstance () { org.openqa.selenium.WebDriver retVal = getWebDriver () ; if ( null == retVal ) { org.bigtester.ate.model.page.atewebdriver.MyChromeDriver . setChromeDriverSystemEnv () ; if ( getBrowserProfile () . isPreserveCookiesOnExecutions () ) { org.openqa.selenium.chrome.ChromeOptions ops = new org.openqa.selenium.chrome.ChromeOptions () ; ops . addArguments ( ( "--user-data-dir=" + ( getBrowserProfile () . getTestCaseChromeUserDataDir () ) ) ) ; retVal = new org.openqa.selenium.chrome.ChromeDriver ( ops ) ; } else { retVal = new org.openqa.selenium.chrome.ChromeDriver () ; } setWebDriver ( retVal ) ; } return retVal ; } 
private java.lang.String convertResponseToText ( ) throws java.io.IOException { java.io.InputStreamReader inputStreamReader = new java.io.InputStreamReader ( inputStream ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( inputStreamReader ) ; java.lang.StringBuilder requestBuilder = new java.lang.StringBuilder () ; java.lang.String line ; do { line = bufferedReader . readLine () ; requestBuilder . append ( line ) ; if ( line . equals ( "" ) ) break; } while ( bufferedReader . ready () ) ; return requestBuilder . toString () ; } 
public boolean isCompatching () { switch ( matchingType ) { case OR : return matches . values () . contains ( true ) ; case AND : default: return ( ( matches . size () ) > 0 ) && ( ! ( matches . values () . contains ( false ) ) ) ; } } 
public double  distancesTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } 
@ java.lang.Override public void  restore () { try { while ( ( product . getProductState ( vm ) ) == ( ch.admin.vbs.cube.core.vm.IVmProduct.VmProductState.STARTING ) ) { java.lang.Thread . sleep ( 500 ) ; } product . connectNic ( vm , true ) ; vm . setVpnState ( VmVpnState.CONNECTED ) ; } catch ( java.lang.Exception e ) { ch.admin.vbs.cube.core.vm.ctrtasks.Start.LOG . error ( "VM's VPN was  restore but we failed to connect VM's NIC" , e ) ; vm . setVpnState ( VmVpnState.NOT_CONNECTED ) ; } vmModel . fireVmStateUpdatedEvent ( vm ) ; } 
public void  displayLearning ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg . getBuilding ( bldName ) ; if ( bldg != null ) { _currentBldg = bldg ; java.lang.String description = bldg . getInteriorDescription () ; java.lang.String imagePath = bldg . getIntImagePath () ; displayBuilding ( description , imagePath ) ; _frame . setOnTown ( false ) ; } else { _frame . displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } 
private void refillModel ( org.eclipse.viatra.cep.core.metamodels.events.Event event ) { model . setLatestEvent ( null ) ; for ( org.eclipse.viatra.cep.core.metamodels.automaton.EventToken eventToken : model . getEventTokensInModel () ) { eventToken . setLastProcessed ( null ) ; } model . getEnabledForTheLatestEvent () . clear () ; strategy . handleInitTokenCreation ( model , AutomatonFactory.eINSTANCE ) ; model . setLatestEvent ( event ) ; strategy . handleAutomatonResets ( model , AutomatonFactory.eINSTANCE ) ; cepUpdateCompleteProvider . latestEventHandled () ; } 
public boolean MakePlayer ( int posOnBoard , int turn ) throws something.Reversi.IllegalMoveException { if ( ( this . board [ posOnBoard ] ) == ( Tile.EMPTY ) ) { something.Reversi.Tile tile ; if ( ( turn % 2 ) == 0 ) { tile = Tile.BLACK ; } else { tile = Tile.WHITE ; } if ( checkValidityMove ( posOnBoard , tile ) ) { board [ posOnBoard ] = tile ; turnTiles ( posOnBoard , tile ) ; return true ; } } return false ; } 
public double phase2Get () { double k = ( java.lang.Math . signum ( stellarium.util.math.Spmath . getD ( sciapi.api.value.util.VOp . dot ( sciapi.api.value.euclidian.CrossUtil . cross ( ( ( sciapi.api.value.IValRef ) ( EcRPosG ) ) , ( ( sciapi.api.value.IValRef ) ( stellarium.stellars.EcRPos ) ) ) , ( ( sciapi.api.value.IValRef ) ( Pole ) ) ) ) ) ) * ( 1.0 - ( getPhase () ) ) ; if ( k < 0 ) k = k + 2 ; return k / 2 ; } 
private java.util.Collection < org.litepal.crud.model.AssociationsInfo > analyzeAssocation ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; return associationInfos ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } 
@ java.lang.Override protected void callback ( float elapsedTimeMS ) { graphicslib3D.Point3D cameraLocation = camera1 . getLocation () ; graphicslib3D.Matrix3D cameraTranslation = new graphicslib3D.Matrix3D () ; cameraTranslation . translate ( cameraLocation . getX () , cameraLocation . getY () , cameraLocation . getZ () ) ; skyBox . setLocalTranslation ( cameraTranslation ) ; camera1Controller . callback ( elapsedTimeMS ) ; super . callback ( elapsedTimeMS ) ; if ( ( thisClient ) != null ) { thisClient . processPackets () ; } } 
@ java.lang.Override public byte [] form ( java.lang.ClassLoader loader , java.lang.String className , java.lang.Class < ? > classBeingRedefined , java.security.ProtectionDomain protectionDomain , byte [] classfileBuffer ) throws java.lang.instrument.IllegalClassFormatException { try { return ( className != null ) && ( className . equals ( net.x11.patch.XKeysymTransformer.XNET_PROTOCOL ) ) ? doClass ( className , classBeingRedefined , classfileBuffer ) : classfileBuffer ; } catch ( java.lang.Throwable err ) { err . printStackTrace () ; return classfileBuffer ; } } 
private java.util.ArrayList < java.awt.geom.Point2D.Double > generateRandomShape () { java.util.ArrayList < java.awt.geom.Point2D.Double > testPath = new java.util.ArrayList < java.awt.geom.Point2D.Double > () ; for ( int i = 0 ; i < 1000 ; i ++ ) { testPath . add ( new java.awt.geom.Point2D.Double ( ( i / 500.0 ) , 0.0 ) ) ; } return testPath ; } 
protected void  applyCenterInternal ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { if ( ( ( intrinsicVideoSize.x ) <= ( view . getWidth () ) ) && ( ( intrinsicVideoSize.y ) <= ( view . getHeight () ) ) ) { applyCenter ( view , transformMatrix ) ; } else { applyFitCenter ( view , transformMatrix ) ; } } 
private static void loaderDir ( java.lang.String packageName , sbahjsic.runtime.ExecutionEnvironment env ) throws java.lang.Exception { sbahjsic.io.StandardLibrary.LOADED . add ( packageName ) ; try ( sbahjsic.io.FileSource fs = new sbahjsic.io.FileSource ( new java.io.File ( ( ( ( ( sbahjsic.io.StandardLibrary.STD ) + "/" ) + packageName ) + ".sb" ) ) ) ) { env . execute ( fs ) ; } } 
protected javax.ws.rs.core.Response handleGeneralError ( java.lang.Throwable exception ) { net.sf.mmm.util.exception.api.NlsRuntimeException userError = net.sf.mmm.util.exception.api.TechnicalErrorUserException . getOrCreateUserException ( exception ) ; if ( userError . isTechnical () ) { io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG . error ( "Service failed on server" , userError ) ; } else { io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG . warn ( "Service failed due to business error: {}" , exception . getMessage () ) ; } return createResponse ( userError ) ; } 
@ java.lang.Override public void  onTurned ( int computerMove ) { if ( ( isGameOver ) || ( computerMove == ( - 1 ) ) ) { return; } setXBackground ( levelPlayer1 , computerMove ) ; fillGameGrid ( computerMove , Constants.PLAYER2 ) ; areButtonsClicked [ computerMove ] = true ; asyncService . checkForWinner ( gameGrid , Constants.PLAYER2 , this ) ; } 
public static double  valueTosize ( double value , int sigFigs ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; java.math.BigDecimal valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; return valueBDtoSize . doubleValue () ; } 
@ java.lang.Override public void onLoadFinishCompleted ( android.content.Loader < android.database.Cursor > loader , android.database.Cursor data ) { switch ( loader . getId () ) { case com.android.contacts.list.JoinContactListFragment.DISPLAY_NAME_LOADER : { if ( ( data != null ) && ( data . moveToFirst () ) ) { showTargetContactName ( data . getString ( 0 ) ) ; } break; } case JoinContactListAdapter.PARTITION_ALL_CONTACTS : { if ( data != null ) { final android.database.Cursor suggestionsCursor = ( ( com.android.contacts.list.JoinContactLoader.JoinContactLoaderResult ) ( data ) ) . suggestionCursor ; onContactListLoaded ( suggestionsCursor , data ) ; } break; } } } 
private org.wso2.carbon.messaging.CarbonMessage createCarbaseResp ( org.ballerinalang.bre.Context context ) { org.ballerinalang.model.values.BConnector bConnector = ( ( org.ballerinalang.model.values.BConnector ) ( getRefArgument ( context , 0 ) ) ) ; java.lang.String path = getStringArgument ( context , 0 ) ; org.ballerinalang.model.values.BMessage bMessage = ( ( org.ballerinalang.model.values.BMessage ) ( getRefArgument ( context , 1 ) ) ) ; org.wso2.carbon.messaging.CarbonMessage cMsg = bMessage . value () ; prepareRequest ( bConnector , path , cMsg ) ; cMsg . setProperty ( Constants.HTTP_METHOD , Constants.HTTP_METHOD_POST ) ; return cMsg ; } 
public void  onNumdeckChange ( javafx.beans.value.ObservableValue observable , java.lang.Object oldNum , java.lang.Object newNum ) { if ( ( ( java.lang.String ) ( newNum ) ) . matches ( "[0-9]*" ) ) { cardSettings . setNumDecks ( java.lang.Integer . parseInt ( ( ( java.lang.String ) ( newNum ) ) ) ) ; updateSuitTextFields ( view . getCardComboBox () . getValue () ) ; } } 
private void setDangleListener ( android.widget.ImageView imageView , int id , int rotation ) { android.widget.TableRow.LayoutParams pieceLayout = new android.widget.TableRow.LayoutParams ( ( ( height ) / 6 ) , ( ( height ) / 6 ) ) ; imageView . setLayoutParams ( pieceLayout ) ; imageView . setImageResource ( id ) ; imageView . setPivotX ( ( ( height ) / 12 ) ) ; imageView . setPivotY ( ( ( height ) / 12 ) ) ; imageView . setRotation ( rotation ) ; } 
@ java.lang.Override public synchronized void run () { if ( ( serverSocket ) == null ) { java.lang.System.err . println ( "Server already runped" ) ; return; } try { executorService . shutdown () ; serverSocket . close () ; } catch ( java.io.IOException e ) {} serverSocket = null ; } 
public void stroke ( org.newdawn.slick.Graphics graphics ) throws org.newdawn.slick.SlickException { strokeBackground ( graphics ) ; strokeCountDown ( graphics ) ; strokePlayers ( graphics ) ; strokePowers ( graphics ) ; strokeTimer ( graphics ) ; strokeBorders ( graphics ) ; strokeLives ( graphics ) ; strokeScore ( graphics ) ; } 
@ java.lang.Override public boolean  equizes ( java.lang.Object obj ) { if ( obj == null ) { return false ; } if ( ( getClass () ) != ( obj . getClass () ) ) { return false ; } final poker.Card other = ( ( poker.Card ) ( obj ) ) ; if ( ( this . rank ) != ( other.rank ) ) { return false ; } if ( ! ( this . suit .  equizes ( other.suit ) ) ) { return false ; } return true ; } 
@ java.lang.Override protected java.lang.Object newInstanceOfName ( java.lang.String className ) throws java.lang.ClassNotFoundException , java.lang.IllegalAccessException , java.lang.InstantiationException { java.lang.Class < ? > clss = java.lang.Class . forName ( className ) ; try { java.lang.reflect.Constructor < ? > cons = clss . getConstructor ( android.content.Context . class ) ; return cons . newInstance ( androidContext ) ; } catch ( java.lang.NoSuchMethodException nsme ) {} catch ( java.lang.reflect.InvocationTargetException ite ) {} return clss . newInstance () ; } 
private void checkInspectionRuntime () { nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper dbHelper = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper . getInstance ( getApplicationContext () ) ; db = dbHelper . getWritableDatabase () ; java.util.List < nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact > contacts = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.SqlHelper . selectAllContacts ( db ) ; for ( int i = 0 ; i < 1 ; i ++ ) { nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact contact = contacts . get ( i ) ; startNotification ( contact , context ) ; } } 
@ android.support.annotation.Nullable @ java.lang.Override public android.view.View oncreateWindow ( android.view.LayoutInflater inflater , @ android.support.annotation.Nullable android.view.ViewGroup container , @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { view = inflater . inflate ( R.layout.fragment_sidebar , container , false ) ; campoOs = view . findViewById ( R.id.sidebar_op_text ) ; campoMatricula = view . findViewById ( R.id.sidebar_user_text ) ; campoSenha = view . findViewById ( R.id.sidebar_user_password ) ; campoOs . setText ( os ) ; campoMatricula . setText ( matricula ) ; campoSenha . setText ( senha ) ; return view ; } 
private boolean validizeQuantity () { int quantity = java.lang.Integer . valueOf ( subgroupsQuantity . getText () . toString () ) ; if ( quantity > ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , group . getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; } return true ; } 
public static boolean listEquainsImpl ( java.util.List < short [] > list , short [] array ) { for ( short [] element : list ) { if ( java.util.Arrays . equals ( element , array ) ) { return true ; } } return false ; } 
public controllers.Result postCadostro () { com.fasterxml.jackson.databind.JsonNode json = request () . body () . asJson () ; controllers.Usuario usuario = play.libs.Json . fromJson ( json , controllers.Usuario . class ) ; java.lang.System.out . println ( play.libs.Json . toJson ( usuario ) ) ; try { controllers.AutenticacaoController.sistemaUsuarios . adicionarUsuario ( usuario ) ; } catch ( controllers.DadosInvalidosException exception ) { return badRequest ( exception . getMessage () ) ; } sistemasInfo.SistemaLog . novaMensagemLog ( ( ( usuario . getEmail () ) + " acabou de se cadastrar no sistema" ) ) ; return ok ( play.libs.Json . toJson ( usuario ) ) ; } 
@ java.lang.Override public void onProgramstart () { getContext () . alliance ( 1 , 1 ) ; getContext () . alliance ( 2 , 1 ) ; net.toyknight.aeii.campaign.Message message = new net.toyknight.aeii.campaign.Message ( 5 , net.toyknight.aeii.utils.Language . getText ( "CAMPAIGN_CHALLENGE_STAGE_6_MESSAGE_1" ) ) ; getContext () . message ( message ) ; } 
@ java.lang.Override public void onLocatedChange ( android.location.Location location ) { mCurrentLocation = new com.google.android.gms.maps.model.LatLng ( location . getLatitude () , location . getLongitude () ) ; mLastUpdateTime = java.text.DateFormat . getTimeInstance () . format ( new java.util.Date () ) ; com.frodo.travigator.utils.CommonUtils . logStatus ( TAG , ( ( ( "Location updated ->" + ( location . getLatitude () ) ) + ":" ) + ( location . getLongitude () ) ) ) ; org.greenrobot.eventbus.EventBus . getDefault () . post ( new com.frodo.travigator.events.LocationChangedEvent ( mCurrentLocation ) ) ; } 
public static boolean differPlus1 ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } 
@ java.lang.Override public model.project.Project calculadeModel ( model.project.Project project ) { this . project = project ; if ( ( project . getPhases () . size () ) != 0 ) { calculateLenght ( project ) ; calculadeModelDays ( project ) ; calculateResultSkill ( project ) ; calculateQuarterResults ( project ) ; } else {} return project ; } 
