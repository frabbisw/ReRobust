private void insertAll ( wyil.lang.CodeBlock.Index index , java.util.Collection < wyil.lang.Attribute > attributes ) { wyil.lang.CodeBlock.Index idx = index . prepend ( ID ) ; for ( wyil.lang.Attribute.Map < wyil.lang.Attribute > map : this . attributes . values () ) { map . insert ( idx , null ) ; } putAll ( index , attributes ) ; } 
@ java.lang.Override public void remove ( int id ) { try { java.lang.String query = "DELETE FROM suppliers WHERE id = ?" ; java.sql.Connection connection = getConnection () ; java.sql.PreparedStatement stmt = connection . prepareStatement ( query ) ; stmt . setInt ( 1 , id ) ; stmt . executeQuery () ; } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( "Could not remove supplier from database." ) ; } } 
private void appendTypeVarsFromEnclosingFunctions ( java.util.List < gw.lang.ir.IRSymbol > parameters , gw.internal.gosu.parser.IGosuClassInternal gsClass ) { while ( gsClass . isAnonymous () ) { gw.lang.parser.IDynamicFunctionSymbol dfs = getEnclosingDFS ( gsClass ) ; if ( dfs == null ) { break; } if ( dfs . isReified () ) { addTypeParamDescriptor ( parameters , getTypeVarsForDFS ( dfs ) ) ; } gsClass = ( ( gw.internal.gosu.parser.IGosuClassInternal ) ( dfs . getGosuClass () ) ) ; } } 
@ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try ( java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ) { java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } 
@ java.lang.Override protected void generalServerHttpBidirOrStreamr ( boolean isStreamr ) { cfg . setReachableBy ( data . getBundle ( res . getString ( R.string.i2ptunnel_wizard_k_reachable_on ) ) . getString ( Page.SIMPLE_DATA_KEY ) ) ; if ( ! isStreamr ) cfg . setPort ( java.lang.Integer . parseInt ( data . getBundle ( res . getString ( R.string.i2ptunnel_wizard_k_binding_port ) ) . getString ( Page.SIMPLE_DATA_KEY ) ) ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( requestCode != ( EditFragment.REQUEST_TAKE_PHOTO ) ) return; com.example.jbt.omdb.EditFragment editFrag = mFragmentHelper . getEditFragmentIfExists () ; if ( editFrag != null ) editFrag . onCameraActivityResult ( resultCode ) ; } 
private void mergeDataWithinTransaction ( final org.opendaylight.controller.md.sal.dom.api.DOMDataReadWriteTransaction writeTransaction , final org.opendaylight.controller.md.sal.common.api.data.LogicalDatastoreType datastore , final org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier path , final org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode < ? , ? > payload , final org.opendaylight.yangtools.yang.model.api.SchemaContext schemaContext ) { org.opendaylight.netconf.sal.restconf.impl.BrokerFacade.LOG . trace ( "Merge {} within Restconf PATCH: {} with payload {}" , datastore . name () , path , payload ) ; ensureParentsByMerge ( datastore , path , writeTransaction , schemaContext ) ; if ( payload instanceof org.opendaylight.yangtools.yang.data.api.schema.MapNode ) { writeTransaction . merge ( datastore , path , payload ) ; } else { writeTransaction . put ( datastore , path , payload ) ; } } 
public void assertEqual ( java.lang.Object o1 , java.lang.Object o2 , java.lang.String expression ) { if ( java.util.Objects . equals ( o1 , o2 ) ) { expect ( true , ( ( expression + " == " ) + o2 ) ) ; } else { expect ( false , ( ( expression + " != " ) + o2 ) ) ; } } 
@ java.lang.Override public java.util.Map < java.lang.String , java.lang.Object > merge ( java.util.Map < java.lang.String , java.lang.Object > mergeInto , java.util.Map < java.lang.String , java.lang.Object > mergeFrom ) { java.util.Map < java.lang.String , java.lang.Object > result = new java.util.HashMap <> () ; if ( mergeInto != null ) { result . putAll ( mergeInto ) ; } if ( mergeFrom != null ) { result . putAll ( mergeFrom ) ; } return result ; } 
public boolean isFriendOrNot ( int userID1 , int userID2 ) { return ( ( ( ( this . userID1 ) == userID1 ) && ( ( this . userID2 ) == userID2 ) ) || ( ( ( this . userID1 ) == userID2 ) && ( ( this . userID2 ) == userID1 ) ) ) || ( userID1 == userID2 ) ; } 
public boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) textPane . select ( matcher . start () , matcher . end () ) ; return found ; } 
public boolean equals ( com.magnet.mmx.protocol.MMXTopic topic ) { if ( topic == ( this ) ) return true ; if ( ( topic == null ) || ( ( ( getUserId () ) == null ) ^ ( ( topic . getUserId () ) == null ) ) ) return false ; if ( ( ( mUserId ) != null ) && ( ! ( mUserId . equalsIgnoreCase ( topic . getUserId () ) ) ) ) return false ; return mTopic . equalsIgnoreCase ( topic . getName () ) ; } 
public static boolean isXml ( java.io.File file ) throws edu.brandeis.cs.nlp.mae.io.MaeIOException { try { java.util.Scanner scanner = new java.util.Scanner ( new java.io.BufferedReader ( new java.io.FileReader ( file ) ) ) ; while ( scanner . hasNext () ) { java.lang.String nextLine = scanner . nextLine () . trim () ; if ( ( nextLine . length () ) > 1 ) { return nextLine . startsWith ( "<?xml" ) ; } } } catch ( java.io.FileNotFoundException e ) { throw new edu.brandeis.cs.nlp.mae.io.MaeIOException ( "file not found" , e ) ; } return false ; } 
private static org.stepik.api.objects.StudyObject getLessonStudyObject ( long lessonId , long unitId ) { org.stepik.api.client.StepikApiClient stepikApiClient = org.stepik.core.stepik.StepikAuthManager . authAndGetStepikApiClient () ; org.stepik.api.objects.lessons.CompoundUnitLesson unitLesson = org.stepik.plugin.utils.Utils . getCompoundUnitLessonStudyObject ( stepikApiClient , unitId , lessonId ) ; org.stepik.api.objects.units.Unit unit = unitLesson . getUnit () ; if ( ( unit . getId () ) != 0 ) { org.stepik.api.objects.sections.Section section = org.stepik.plugin.utils.Utils . getSectionStudyObject ( stepikApiClient , unit . getSection () ) ; if ( section != null ) { return org.stepik.plugin.utils.Utils . getCourseStudyObject ( section . getCourse () ) ; } } return unitLesson ; } 
private boolean readJsonStream ( java.io.InputStream in , com.josephcmontgomery.bookscanner.BookInformation book ) throws java.lang.Exception { android.util.JsonReader reader = new android.util.JsonReader ( new java.io.InputStreamReader ( in , "UTF-8" ) ) ; try { return com.josephcmontgomery.bookscanner.BookJsonInterpreter . processSearchResult ( reader , book ) ; } finally { reader . close () ; } } 
private void loadFromAngles ( double tilt , double azumeth , double elevation ) { setStorage ( new org.apache.commons.math3.geometry.euclidean.threed.Rotation ( com.neuronrobotics.sdk.addons.kinematics.math.RotationNR . getOrder () , com.neuronrobotics.sdk.addons.kinematics.math.RotationNR . getConvention () , java.lang.Math . toRadians ( azumeth ) , java.lang.Math . toRadians ( elevation ) , java.lang.Math . toRadians ( tilt ) ) ) ; } 
public void setEnabled ( boolean state ) { this . state = state ; if ( state == false ) { oscP5.OscMessage myMessage = new oscP5.OscMessage ( "/control/joystick/state" ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; oscP5 . send ( myMessage , myRemoteLocation ) ; } } 
protected java.io.File getComponentFile ( java.io.File pathFile , java.lang.String componentName ) throws de.invation.code.toval.misc.wd.ProjectComponentException { try { return new java.io.File ( java.lang.String . format ( de.invation.code.toval.misc.wd.AbstractComponentContainer.componentFileFormat , pathFile . getCanonicalPath () , componentName , ".pnml" ) ) ; } catch ( java.io.IOException e ) { throw new de.invation.code.toval.misc.wd.ProjectComponentException ( "Cannot compose component file." , e ) ; } } 
public void reduce ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.DoubleWritable > values , org.apache.hadoop.mapreduce.Reducer.Context context ) throws java.io.IOException , java.lang.InterruptedException { double tmppr = 0.0 ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val . get () ; } title . set ( key ) ; err . set ( java.lang.String . valueOf ( tmppr ) ) ; context . write ( title , err ) ; } 
@ java.lang.Override public void afterTextChanged ( android.text.Editable s ) { java.lang.String text = s . toString () . trim () ; savedApis . clear () ; for ( int i = 0 ; i < ( allsavedApis . size () ) ; i ++ ) { if ( allsavedApis . get ( i ) . getName () . toLowerCase () . contains ( text . toLowerCase () ) ) { savedApis . add ( allsavedApis . get ( i ) ) ; } } mAdapter . notifyDataSetChanged () ; setEmptyText () ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final int index = tblProducts . getSelectedRow () ; final io.github.davidg95.JTill.jtillserver.WasteItem it = wasteItems . get ( index ) ; final io.github.davidg95.JTill.jtillserver.Product p = it . getProduct () ; if ( index == ( - 1 ) ) { return; } if ( ( javax.swing.JOptionPane . showInternalConfirmDialog ( this , ( "Are you sure you want to remove this item?\n" + p ) , "Stock Item" , javax.swing.JOptionPane.YES_NO_OPTION ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { wasteItems . remove ( index ) ; updateTable () ; } } 
@ com.facebook.react.bridge.ReactMethod public void isSimCardValid ( com.facebook.react.bridge.Callback callback ) { android.telephony.TelephonyManager tm = ( ( android.telephony.TelephonyManager ) ( this . reactContext . getSystemService ( Context.TELEPHONY_SERVICE ) ) ) ; java.lang.Boolean isSimCardValid = ( tm . getSimState () ) == ( android.telephony.TelephonyManager.SIM_STATE_READY ) ; callback . invoke ( isSimCardValid ) ; } 
@ java.lang.Override public synchronized net.torocraft.toroquest.civilization.Province register ( int chunkX , int chunkZ ) { net.torocraft.toroquest.civilization.Province province = atLocation ( chunkX , chunkZ ) ; if ( province != null ) { updateExistingProvince ( province , chunkX , chunkZ ) ; } else { province = buildNewProvince ( chunkX , chunkZ ) ; } markDirty () ; return province ; } 
public static void mergeDelimitedFrom ( com.google.protobuf.Message.Builder builder , java.io.InputStream in ) throws java.io.IOException { final int firstByte = in . read () ; if ( firstByte == ( - 1 ) ) {} else { final int size = com.google.protobuf.CodedInputStream . readRawVarint32 ( firstByte , in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in , size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream . newInstance ( limitedInput ) ; codedInput . setSizeLimit ( size ) ; builder . mergeFrom ( codedInput ) ; codedInput . checkLastTagWas ( 0 ) ; } } 
private boolean isEmailAccountConfigured ( android.content.Context ctx ) { android.accounts.AccountManager am = android.accounts.AccountManager . get ( ctx ) ; try { return ( am . getAccounts () . length ) > 0 ; } catch ( java.lang.Exception e ) { android.util.Log . e ( de.appplant.cordova.emailcomposer.EmailComposer.LOG_TAG , "Missing GET_ACCOUNTS permission." ) ; return true ; } } 
private static void addBodyIfExists ( java.net.HttpURLConnection connection , com.android.volley.Request < ? > request ) throws com.android.volley.AuthFailureError , java.io.IOException { byte [] body = request . getBody () ; connection . addRequestProperty ( com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE , request . getBodyContentType () ) ; if ( body != null ) { connection . setDoOutput ( true ) ; java.io.DataOutputStream out = new java.io.DataOutputStream ( connection . getOutputStream () ) ; out . write ( body ) ; out . close () ; } } 
public void receive ( final org.thingml.java.ext.Event event , final org.thingml.java.Port p ) { if ( active . get () ) { event . setPort ( p ) ; queue . offer ( event ) ; if ( ( ( root ) == null ) && ( active . get () ) ) { for ( org.thingml.java.Component child : forks ) { final org.thingml.java.ext.Event child_e = event . clone () ; child . receive ( child_e , p ) ; } } } } 
private eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType calculateMessageValidationStatus ( eu.europa.ec.fisheries.uvms.rules.model.dto.ValidationResultDto validationResult ) { if ( validationResult != null ) { if ( validationResult . isError () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.FAILED ; } else if ( validationResult . isWarning () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL_WITH_WARNINGS ; } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL ; } } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.UNKNOWN ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { setTaskImage () ; if ( isTeamATurn ) android.widget.Toast . makeText ( com.example.michael.archerygame.GameActivity . getGameContext () , getNextPlayerTeamA () , Toast.LENGTH_SHORT ) . show () ; else android.widget.Toast . makeText ( com.example.michael.archerygame.GameActivity . getGameContext () , getNextPlayerTeamB () , Toast.LENGTH_SHORT ) . show () ; isTeamATurn = ! ( isTeamATurn ) ; } 
private double getElevation ( model.battlefield.map.Tile t , model.battlefield.map.cliff.Cliff c ) { if ( ( t . getModifiedLevel () ) > ( ( c.level ) + 1 ) ) { return ( ( c.level ) + 1 ) * ( model.battlefield.map.Tile.STAGE_HEIGHT ) ; } return t . getElevation () ; } 
public static com.neikeq.kicksemu.game.inventory.Expiration fromInt ( int value ) { switch ( value ) { case 9200007 : case 9201007 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_7 ; case 9200030 : case 9201030 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_30 ; case 9200999 : case 9201999 : return com.neikeq.kicksemu.game.inventory.Expiration.DAYS_PERM ; case 9101010 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_10 ; case 9101050 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_50 ; case 9101100 : return com.neikeq.kicksemu.game.inventory.Expiration.USAGE_100 ; default: return null ; } } 
private void setPlayerHandOffset ( int player , int offset ) { switch ( player ) { case 0 : this . player0HandOffset = offset ; break; case 1 : this . player1HandOffset = offset ; break; case 2 : this . player2HandOffset = offset ; break; case 3 : this . player3HandOffset = offset ; break; } } 
public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex vertex ) { java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( int i = 0 ; i < ( vertexList . size () ) ; i ++ ) { if ( adjacencyList . contains ( vertex ) ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( i ) ) ) ; } } return upstreamNeighboursList ; } 
private static int argument ( char [] array , int cursor , java.lang.StringBuilder argument ) { for ( int i = cursor ; i < ( array.length ) ; i ++ ) { char c = array [ i ] ; switch ( c ) { case ',' : case ')' : return i + 1 ; case ' ' : if ( ( argument . length () ) == 0 ) continue; default: argument . append ( c ) ; } } return array.length ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View layout = inflater . inflate ( R.layout.fragment_highscore , container , false ) ; addButtonListeners ( layout ) ; highscoreList = ( ( android.widget.ListView ) ( layout . findViewById ( R.id.highscore_list ) ) ) ; highscoreAdapter = new com.guesstheurf.guesstheurf.activities.adapters.HighscoreAdapter ( getActivity () , R.layout.highscore_entry , Session.INSTANCE . getHighscores () ) ; highscoreList . setAdapter ( highscoreAdapter ) ; com.guesstheurf.guesstheurf.activities.fragments.HighscoreFragment . setListViewHeightBasedOnChildren ( highscoreList ) ; return layout ; } 
public static void releaseColor ( int color , int which ) { switch ( which ) { case com.kmbapps.classscheduler.ClassLoader.DESIRED_CLASSES : if ( ! ( com.kmbapps.classscheduler.ClassLoader.availableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.availableColors . push ( color ) ; } break; case com.kmbapps.classscheduler.ClassLoader.CURR_SCHEDULE : if ( ! ( com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . contains ( color ) ) ) { com.kmbapps.classscheduler.ClassLoader.currScheduleAvailableColors . push ( color ) ; } break; } } 
public static org.joda.time.LocalDate alignProposedBillCycleDate ( final org.joda.time.LocalDate proposedDate , final int billingCycleDay ) { final int lastDayOfMonth = proposedDate . dayOfMonth () . getMaximumValue () ; int proposedBillCycleDate = proposedDate . getDayOfMonth () ; if ( proposedBillCycleDate < billingCycleDay ) { if ( billingCycleDay <= lastDayOfMonth ) { proposedBillCycleDate = billingCycleDay ; } else { proposedBillCycleDate = lastDayOfMonth ; } } return new org.joda.time.LocalDate ( proposedDate . getYear () , proposedDate . getMonthOfYear () , proposedBillCycleDate , proposedDate . getChronology () ) ; } 
private static in.jaaga.learning.api.ChatReply [] convertToChatReplyOptions ( java.lang.String [] options ) { java.util.ArrayList < in.jaaga.learning.api.ChatReply > replies = new java.util.ArrayList <> ( options.length ) ; in.jaaga.learning.api.ChatReply reply ; for ( int i = 0 ; i < ( options.length ) ; i ++ ) { reply = new in.jaaga.learning.api.ChatReply () ; reply.type = ChatReplyType.Regular ; reply.displayText = options [ i ] ; replies . add ( reply ) ; } return replies . toArray ( new in.jaaga.learning.api.ChatReply [ 0 ] ) ; } 
@ java.lang.Override public void onServicesDiscovered ( final android.bluetooth.BluetoothGatt gatt , final int status ) { android.util.Log . e ( "debug" , "onServicesDiscovered" ) ; if ( gatt . getDevice () . getName () . contains ( "SensorTag" ) ) { sensorTag ( gatt ) ; } else {} } 
private void printCosts ( int level ) { org.sat4j.core.Vec < java.math.BigInteger > costsToPrint = new org.sat4j.core.Vec < java.math.BigInteger > () ; costs . copyTo ( costsToPrint ) ; for ( int i = level - 1 ; i >= 0 ; i -- ) { costsToPrint . set ( i , computeCostOfLevel ( i ) ) ; } solver . printCosts ( costsToPrint ) ; } 
protected java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } 
@ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { if ( cyanogenOTAUpdate != null ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } } 
protected void configure ( org.springframework.security.config.annotation.web.builders.HttpSecurity security ) throws java.lang.Exception { security . authorizeRequests () . antMatchers ( "/css/**" ) . permitAll () . anyRequest () . authenticated () . and () . formLogin () . loginPage ( "/login" ) . permitAll () . failureUrl ( "/login?error" ) . permitAll () . and () . logout () . permitAll () ; } 
public void switchContactAvailability ( final java.lang.String user , boolean available ) { for ( final com.pz.supportchat.commons.models.PresenceAwareRosterEntry rosterEntry : mRosterEntries ) { if ( org.apache.commons.lang3.StringUtils . equals ( rosterEntry . getUser () , user ) ) { mRosterEntries . get ( mRosterEntries . indexOf ( rosterEntry ) ) . setPresence ( available ) ; } } } 
@ java.lang.Override protected void updateItem ( program.Employee t , boolean bln ) { super . updateItem ( t , bln ) ; if ( t != null ) { setText ( t . getName () ) ; } else { listviewEmployees . setPlaceholder ( new javafx.scene.control.Label ( "No Employees" ) ) ; } } 
@ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest arg0 , javax.servlet.http.HttpServletResponse arg1 , java.lang.Object arg2 , org.springframework.web.servlet.ModelAndView arg3 ) throws java.lang.Exception { if ( arg3 == null ) return; arg3 . addObject ( "baseurl" , com.cportal.config.ConfigDB . retrnConf () . getBASEURL () ) ; java.lang.System.out . println ( ( "---Request Completed---" + ( com.cportal.config.ConfigDB . getBASEURL () ) ) ) ; } 
private java.lang.String getRiskBucket ( java.lang.String productName , com.github.vincent_fuchs.comprehensive_testing.model.CountryRating countryRating ) { java.lang.String productVolatilityIndex = volatilityIndexService . getProductVolatilityIndex ( productName ) ; com.github.vincent_fuchs.comprehensive_testing.model.Risk volatilityIndexRisk = computeVolatilityIndexRisk ( productVolatilityIndex ) ; com.github.vincent_fuchs.comprehensive_testing.model.Risk countryRisk = computeCountryRisk ( countryRating ) ; return ( ( HIGH ) == volatilityIndexRisk ) || ( ( HIGH ) == countryRisk ) ? com.github.vincent_fuchs.comprehensive_testing.service.HIGH . toString () : ( ( MEDIUM ) == volatilityIndexRisk ) || ( ( MEDIUM ) == countryRisk ) ? com.github.vincent_fuchs.comprehensive_testing.service.MEDIUM . toString () : com.github.vincent_fuchs.comprehensive_testing.service.LOW . toString () ; } 
public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( movies ) != null ) { inflater . inflate ( R.menu.menu_detail , menu ) ; final android.view.MenuItem favorite = menu . findItem ( R.id.action_favorite ) ; new com.ashwinpilgaonkar.popularmovies.Backend.Favorite ( getActivity () , movies , favorite , 0 ) ; } } 
public void ExpectedPresident ( courtree.Node focusNode ) { if ( focusNode != null ) { ExpectedPresident ( focusNode.leftChild ) ; if ( ( president . getbDate () ) <= ( focusNode . getbDate () ) ) { java.lang.System.out . println ( focusNode ) ; setPresident ( focusNode ) ; } ExpectedPresident ( focusNode.rightChild ) ; } } 
@ java.lang.Override public void write ( io.netty.buffer.ByteBuf byteBuf ) throws java.lang.Exception { byteBuf . writeInt ( getPlayername () . length () ) ; byteBuf . writeCharSequence ( getPlayername () , com.google.common.base.Charsets.UTF_8 ) ; byteBuf . writeInt ( getHost () . length () ) ; byteBuf . writeCharSequence ( getHost () , com.google.common.base.Charsets.UTF_8 ) ; byteBuf . writeInt ( getPort () ) ; } 
@ java.lang.Override public void restoreFromBundle ( com.watabou.utils.Bundle bundle ) { super . restoreFromBundle ( bundle ) ; int [] values = bundle . getIntArray ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PRESSES ) ; for ( int value : values ) presses . add ( value ) ; partialTime = bundle . getFloat ( com.shatteredpixel.shatteredpixeldungeon.items.artifacts.TimekeepersHourglass.timeFreeze.PARTIALTIME ) ; } 
@ java.lang.Override public int generatePageTotal ( int total , int pageSize ) { if ( total <= pageSize ) return 1 ; return ( ( int ) ( java.lang.Math . ceil ( ( ( ( double ) ( total ) ) / ( pageSize - 9 ) ) ) ) ) ; } 
public boolean removeDataSet ( T d ) { if ( d == null ) return false ; boolean removed = mDataSets . remove ( d ) ; if ( removed ) { mYValCount -= d . getEntryCount () ; mYValueSum -= d . getYValueSum () ; calcMinMax () ; } return removed ; } 
private synchronized be.olsson.slackappender.SlackAppender.MessageStat getMessageStat ( org.apache.log4j.spi.LoggingEvent event ) { if ( meltdownProtection ) { java.lang.String key = event . getMessage () . toString () ; be.olsson.slackappender.SlackAppender.MessageStat stat = similar . get ( key ) ; if ( stat == null ) { stat = new be.olsson.slackappender.SlackAppender.MessageStat () ; stat.lastLogged = java.lang.System . currentTimeMillis () ; } similar . put ( key , stat ) ; ( stat.countSinceLastLog ) ++ ; stat.lastSeen = java.lang.System . currentTimeMillis () ; return stat ; } return null ; } 
public synchronized void calculateReceiptsVisibility ( org.iabako.client.ui.form.business.sale.SalePaymentsForm salePaymentsForm ) { if ( ( invoiceTable ) == null ) { return; } org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm . getInstallmentTable () ; int installmentsNumber = ( installmentsTable != null ) ? installmentsTable.queryDefinitionDTO . getCountTotal () : 0 ; int invoicesNumber = ( ( invoiceTable ) != null ) ? invoiceTable.queryDefinitionDTO . getCountTotal () : 0 ; if ( ( invoicesNumber == 1 ) && ( installmentsNumber == 0 ) ) { receiptsPanel . setVisible ( false ) ; } else { receiptsPanel . setVisible ( true ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_image ) ; android.content.Intent intent = getIntent () ; android.os.Bundle bundle = intent . getExtras () ; thenextvoyager.wallser.Data.DataModel object = ( ( thenextvoyager.wallser.Data.DataModel ) ( bundle . getSerializable ( thenextvoyager.wallser.Data.Constants.MODEL_TAG ) ) ) ; thenextvoyager.wallser.fragment.ImageFragment fragment = thenextvoyager.wallser.fragment.ImageFragment . newInstance ( object ) ; getSupportFragmentManager () . beginTransaction () . add ( R.id.image_frag_container , fragment , thenextvoyager.wallser.Data.Constants.IMAGE_FRAGMENT_TAG ) . commit () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_alarm_edit ) ; java.lang.String title ; title = getString ( R.string.editAlarmHeader ) ; if ( ( getActionBar () ) != null ) { getActionBar () . setTitle ( title ) ; } alarmTimePicker = ( ( android.widget.TimePicker ) ( findViewById ( R.id.alarmTimePicker ) ) ) ; alarmManager = ( ( android.app.AlarmManager ) ( getSystemService ( csuchico.smartnap.ALARM_SERVICE ) ) ) ; alarmNameText = ( ( android.widget.EditText ) ( findViewById ( R.id.alarmNameEdit ) ) ) ; } 
public int unpin ( tachyon.TachyonURI path ) throws java.io.IOException { try { mTfs . unpin ( mTfs . open ( path ) ) ; java.lang.System.out . println ( ( ( "File '" + path ) + "' was successfully unpinned." ) ) ; return 0 ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; java.lang.System.out . println ( ( ( "File '" + path ) + "' could not be unpinned." ) ) ; return - 1 ; } } 
public static java.util.List get ( java.lang.String query ) { org.hibernate.Session session = de.bpetry.data.HibernateSession.sessionFactory . openSession () ; session . beginTransaction () ; java.util.List result = session . createQuery ( query ) . list () ; session . getTransaction () . commit () ; session . close () ; return result ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO . initSharedPreferences ( getPreferences ( Context.MODE_PRIVATE ) ) ; java.lang.String token = be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO . loadToken () ; if ( token . equals ( "" ) ) {} else { be.kandoe_groepj.kandoeproject.kandoeproject.helper.TokenIO . removeToken () ; } com.facebook.FacebookSdk . sdkInitialize ( getApplicationContext () ) ; setContentView ( R.layout.activity_login ) ; bindComponents () ; addEventsToComponents () ; presenter = new be.kandoe_groepj.kandoeproject.kandoeproject.login.LoginPresenterImpl ( this ) ; } 
@ java.lang.Override public boolean removeEdge ( csula.cs4660.graphs.Edge x ) { if ( ( ! ( nodes . contains ( x . getFrom () ) ) ) || ( ! ( nodes . contains ( x . getTo () ) ) ) ) { java.lang.System.out . println ( "Error: fromNode or toNode not exists" ) ; } else { if ( edges . remove ( x ) ) { return true ; } } return false ; } 
private org.springframework.data.geo.Point fillCoordinates ( com.geolocation.search.model.Place place ) { org.springframework.data.geo.Point coordinates ; try { java.lang.Double [] latLong = geoApiHelper . getLatLong ( place . getAddress () . getAddress () ) ; coordinates = new org.springframework.data.geo.Point ( latLong [ 1 ] , latLong [ 0 ] ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( "Could not find the coordinates to the address provided: " + ( place . getAddress () . getAddress () ) ) ) ; } return coordinates ; } 
@ org.junit.Test public void testBasicApply () { ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > concat = new ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > () { @ java.lang.Override public java.lang.String apply ( java.lang.Integer arg1 , java.lang.Double arg2 ) { return ( arg1 . toString () ) + ( arg2 . toString () ) ; } } ; org.junit.Assert . assertEquals ( "1233.14" , concat . apply ( 123 , 3.14 ) ) ; } 
public long requestBook ( long bookId ) throws library_project.models.BookIsOutException { library_project.models.Reservation newReservation = null ; synchronized ( this ) { if ( ! ( isOut ( bookId ) ) ) { newReservation = new library_project.models.Reservation ( bookId ) ; allReservations . add ( newReservation ) ; return newReservation . getId () ; } } throw new library_project.models.BookIsOutException () ; } 
@ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendStickyOrderedBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendStickyOrderedBroadcastAsUser ( intent , user , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } 
@ java.lang.Override public eu.einfracentral.domain.aai.User activate ( java.lang.String id ) { eu.einfracentral.domain.aai.User ret = reveal ( get ( id ) ) ; if ( ( ret . getJoinDate () ) == null ) { ret . setJoinDate ( new java.util.Date () . toString () ) ; update ( ret ) ; } return ret ; } 
public com.intplus.shoppingspace.model.Shop getShopById ( int sid ) { com.intplus.shoppingspace.model.Shop currentShop = null ; try { com.intplus.shoppingspace.controller.AppController.shopDatabase = new com.intplus.shoppingspace.model.ShopDatabase ( this . activity ) ; com.intplus.shoppingspace.controller.AppController.shopDatabase . open () ; currentShop = com.intplus.shoppingspace.controller.AppController.shopDatabase.shopsDao . fetchShopBySid ( sid ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( com.intplus.shoppingspace.controller.AppController.APPLOG , ( ( "Shop with given id:" + sid ) + "is not found" ) ) ; } finally { com.intplus.shoppingspace.controller.AppController.shopDatabase . close () ; android.util.Log . e ( com.intplus.shoppingspace.controller.AppController.APPLOG , "Db is closed" ) ; } return currentShop ; } 
@ java.lang.Override public java.lang.Object visitArrayVariable ( DECAF2.DECAF2Parser.ArrayVariableContext ctx ) { java.lang.String nombreVar = ctx . getChild ( 0 ) . getText () ; int locationSave = java.lang.Integer . parseInt ( ctx . getChild ( 2 ) . getText () ) ; java.util.ArrayList returnArray = new java.util.ArrayList () ; returnArray . add ( nombreVar ) ; returnArray . add ( locationSave ) ; return returnArray ; } 
private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion two ) { if ( one . equals ( two ) ) { return one ; } if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( savedInstanceState == null ) || ( ! ( savedInstanceState . containsKey ( "movieList" ) ) ) ) {} else { movieList = savedInstanceState . getParcelableArrayList ( "movieList" ) ; } if ( ( getArguments () ) != null ) {} } 
private boolean teamHasSpace ( int userId , int teamId ) { if ( teamId == 0 ) { return true ; } try { se.plushogskolan.casemanagement.model.User user = userRepository . getUserById ( userId ) ; if ( ( user . getTeamId () ) == teamId ) { return true ; } else { return numberOfUsersInTeamLessThanTen ( teamId ) ; } } catch ( se.plushogskolan.casemanagement.exception.RepositoryException e ) { return numberOfUsersInTeamLessThanTen ( teamId ) ; } } 
public boolean upload ( java.lang.String nyIpName , java.lang.String fileName , FileContents contents ) { java.lang.System.out . println ( ( "Received file! Name: " + fileName ) ) ; ServerCachedFile serverFile = getFile ( fileName ) ; if ( ( serverFile.state ) == ( FileState.Not_Shared ) ) { java.lang.System.out . println ( "File not shared!" ) ; return false ; } serverFile.fileContents = contents ; writeFile ( serverFile ) ; invalidateClients ( fileName , serverFile.currentWriter ) ; serverFile.currentWriter = null ; serverFile.state = FileState.Not_Shared ; return true ; } 
private void stop ( int resId , java.lang.Object . . . formatArgs ) { java.lang.String message = ( resId > 0 ) ? getString ( resId , formatArgs ) : null ; if ( isPlaying ) { isPlaying = false ; stopForeground ( true ) ; } if ( ( player ) != null ) { isPrepared = false ; player . reset () ; player . release () ; } broadcastEvent ( PlayerEvent.STOP , message ) ; stopSelf () ; } 
public static com.raizlabs.android.dbflow.sql.language.ColumnAlias columnsWithFunction ( java.lang.String functionName , com.raizlabs.android.dbflow.sql.language.ColumnAlias . . . columnAliases ) { com.raizlabs.android.dbflow.sql.QueryBuilder queryBuilder = new com.raizlabs.android.dbflow.sql.QueryBuilder ( functionName ) . append ( "(" ) ; for ( int i = 0 ; i < ( columnAliases.length ) ; i ++ ) { if ( i > 0 ) { queryBuilder . append ( "," ) ; } queryBuilder . append ( columnAliases [ i ] . getAliasName () ) ; } queryBuilder . append ( ")" ) ; return com.raizlabs.android.dbflow.sql.language.ColumnAlias . columnRaw ( queryBuilder . getQuery () ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.common.PreferanceUtil preferanceUtil = new com.common.PreferanceUtil ( getActivity () ) ; preferanceUtil . setCardDetail ( mCard ) ; com.common.SingletonClass . sharedInstance () . setCard ( mCard ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , com.marchant.HomeActivity . class ) ; intent . putExtra ( "ActivityName" , "Splash" ) ; startActivity ( intent ) ; } 
private void drawWifi ( com.anwesome.games.dataindicationbutton.Canvas canvas , com.anwesome.games.dataindicationbutton.Paint paint ) { float r = ( radius ) / 60 ; canvas . drawCircle ( 0 , 0 , r , paint ) ; for ( int i = 1 ; i <= 3 ; i ++ ) { float newR = r * ( i * 10 ) ; canvas . drawArc ( new com.anwesome.games.dataindicationbutton.RectF ( ( - newR ) , ( - newR ) , newR , newR ) , 240 , 60 , false , paint ) ; } } 
private void upload ( com.webessay.model.Orders orders , org.springframework.web.multipart.MultipartFile file ) throws java.lang.Exception { if ( ( file . getSize () ) > 0 ) { com.webessay.model.Uploadfile entity = new com.webessay.model.Uploadfile () ; entity . setFileContentType ( file . getContentType () ) ; entity . setFileName ( file . getOriginalFilename () ) ; entity . setFileSize ( file . getSize () ) ; entity . setFile ( file . getBytes () ) ; uploadrepo . save ( entity ) ; orders . setFileId ( entity . getId () ) ; } } 
public java.util.List < java.lang.Integer > getDaysFromThisMonth ( int month , int year ) { java.util.Calendar cal = new java.util.GregorianCalendar () ; cal . set ( year , month , 1 ) ; int max = cal . getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.lang.System.out . println ( max ) ; java.util.List < java.lang.Integer > daysFromThisMonth = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < max ; i ++ ) { daysFromThisMonth . add ( ( i + 1 ) ) ; } return daysFromThisMonth ; } 
private void revertInformationOfRequest ( final com.dmm.leavemanagementsystem.models.LeaveRequest request , final int position ) { setupTextViewStatus ( request ) ; setupLinearLayoutApproveOrUnapprove ( request , position ) ; setupSpinnerSubject ( request ) ; setupTextViewPhone ( request ) ; setupEditTextMessage ( request ) ; setupTextViewFromDate ( request ) ; setupTextViewFromHour ( ( ( request . getSt_approve () ) == 0 ) ) ; setupSpinnerDuration ( request . getDuration () ) ; setupTextViewUnitDuration () ; setupLinearLayoutDeleteAndRevert ( request , position ) ; } 
public final hu.akarnokd.rxjava2.basetypes.Solo < T > doOnComplete ( hu.akarnokd.rxjava2.basetypes.Action onComplete ) { hu.akarnokd.rxjava2.basetypes.ObjectHelper . requireNonNull ( onComplete , "onComplete is null" ) ; return hu.akarnokd.rxjava2.basetypes.Solo . onAssembly ( new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , onComplete , Functions.EMPTY_ACTION , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_LONG_CONSUMER , Functions.EMPTY_ACTION ) ) ; } 
public java.lang.String getJSONByCode ( java.lang.String reference ) throws error.ApiNotReachableException , error.InvalidTokenException , error.KoronaCloudAPIErrorMessageException , org.codehaus.jettison.json.JSONException { reference = reference . replaceAll ( "%" , "%20" ) ; reference = reference . replaceAll ( " " , "%20" ) ; reference = reference . replaceAll ( "/" , "%2F" ) ; reference = reference . replaceAll ( "&" , "%26" ) ; reference = reference . replaceAll ( "#" , "%23" ) ; reference = reference . replaceAll ( "!" , "%21" ) ; return new java.lang.String ( link.CloudLink.ApiCon . fetchData ( DataType.product , ReferenceType.code , reference ) ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { switch ( requestCode ) { case io.card.payment.CardIOActivity.PERMISSION_REQUEST_ID : { waitingForPermission = false ; if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { showCameraScannerOverlay () ; } else { manualEntryFallbackOrForced = true ; } } } } 
public void restore_to ( java.util.ArrayList < java.lang.Integer > old_playable , java.util.ArrayList < java.lang.Integer > old_played , int level ) { playable = new name.cantanima.idealnim.Ideal ( old_playable ) ; played = new name.cantanima.idealnim.Ideal ( old_played ) ; game_level = level ; evaluator = new name.cantanima.idealnim.Game_Evaluation_Hashmap ( getContext () , playable , played , game_level ) ; evaluator . game_value () ; game_control = new name.cantanima.idealnim.Game_Control () ; game_control . new_game ( this , view_xmax , view_ymax , game_level , false ) ; invalidate () ; } 
public static boolean checkPlayersTiles ( java.lang.String board , int player , int value , int numOfValues ) { java.lang.String tiles = game.manger.SaveTheIslandGame.Board . getPlayersTiles ( player , board ) ; int count = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { if ( ( java.lang.Integer . parseInt ( tiles . substring ( i , ( i + 1 ) ) ) ) == value ) { count ++ ; } } return count >= numOfValues ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.String . . . params ) { bl.CampusBLService . viewThisPost ( postId ) ; java.lang.String postId = params [ 0 ] ; isFollowed = bl.CampusBLService . isFollowed ( postId ) ; isPraised = bl.CampusBLService . isPraised ( postId ) ; post = bl.CampusBLService . getPostDetail ( postId ) ; replies = post . getReplyList () ; return null ; } 
public double getNumSteps ( android.graphics.Point p1 , android.graphics.Point p2 , int stepSize ) { int x = ( p2.x ) - ( p1.x ) ; int y = ( p2.y ) - ( p1.y ) ; double distance = ( java.lang.Math . abs ( java.lang.Math . sqrt ( ( ( x * x ) + ( y * y ) ) ) ) ) / ( player . getScale () ) ; android.util.Log . i ( "Distance between p1/p2" , ( "" + distance ) ) ; return distance / stepSize ; } 
@ java.lang.Override public void onHandleMessage ( olof.sjoholm.Net.Server.Player player , olof.sjoholm.Net.Both.Envelope envelope ) { if ( envelope instanceof olof.sjoholm.Net.Both.Envelope.PlayerSelectColor ) { player . setColor ( ( ( olof.sjoholm.Net.Both.Envelope.PlayerSelectColor ) ( envelope ) ) . getColor () ) ; gameBoard . updatePlayer ( player ) ; } if ( envelope instanceof olof.sjoholm.Net.Both.Envelope.PlayerSelectName ) { player . setName ( ( ( olof.sjoholm.Net.Both.Envelope.PlayerSelectName ) ( envelope ) ) . name ) ; gameBoard . updatePlayer ( player ) ; } } 
@ java.lang.Override public boolean onDependentViewChanged ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.FloatingActionButton fab , android.view.View dependency ) { if ( dependency instanceof android.support.design.widget.AppBarLayout ) { if ( ( dependency . getY () ) >= 0 ) { fab . show () ; } else { fab . hide () ; } } return true ; } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound nbtTagCompound ) { if ( nbtTagCompound . hasKey ( Names.NBT.SOURCES ) ) { net.minecraft.nbt.NBTTagList list = nbtTagCompound . getTagList ( Names.NBT.SOURCES , Constants.NBT.TAG_INT_ARRAY ) ; for ( int i = 0 ; i < ( list . tagCount () ) ; i ++ ) { sources . add ( de.keridos.floodlights.util.GeneralUtil . getPosFromIntArray ( list . getIntArrayAt ( i ) ) ) ; } } } 
private < TGeo extends de.k3b.geo.api.GeoPointDto > TGeo getYandexUri ( java.lang.String uri , TGeo parseResult ) { int dataStart = contentIndexBehind ( uri , "ll=" ) ; java.lang.String [] parts = getParts ( uri , dataStart , "[,?&]" , 2 ) ; if ( parts != null ) { de.k3b.geo.io.GeoUri . setLatLonZoom ( parseResult , parts [ 1 ] , parts [ 0 ] , null ) ; } return uriParamParse ( uri , parseResult ) ; } 
public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } } 
private com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord getContractDataRecord ( java.lang.String assetPublicKey , java.lang.String name , java.lang.String value ) throws com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.DatabaseOperationException , com.bitdubai.fermat_dap_plugin.layer.middleware.asset.issuer.developer.bitdubai.version_1.exceptions.MissingAssetDataException { com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTable databaseTable = getDatabaseTable ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_TABLE_NAME ) ; com.bitdubai.fermat_api.layer.osa_android.database_system.DatabaseTableRecord record = databaseTable . getEmptyRecord () ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_ASSET_PUBLIC_KEY_COLUMN , assetPublicKey ) ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_NAME_COLUMN , name ) ; record . setStringValue ( AssertFactoryMiddlewareDatabaseConstant.ASSET_FACTORY_CONTRACT_VALUE_COLUMN , value ) ; return record ; } 
protected android.os.Bundle createTransportOptionsBundle ( android.util.Pair [] sharedViews ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( sharedViews != null ) { java.util.ArrayList < android.util.Pair > sharedViewList = extendsSharedViewsForTransport ( new java.util.ArrayList ( java.util.Arrays . asList ( sharedViews ) ) ) ; sharedViews = new android.util.Pair [ sharedViewList . size () ] ; sharedViewList . toArray ( sharedViews ) ; return android.app.ActivityOptions . makeSceneTransitionAnimation ( this , sharedViews ) . toBundle () ; } } return null ; } 
@ java.lang.Override public boolean isInGroup ( java.lang.String world , java.lang.String permName , org.bukkit.entity.Player player ) { if ( plugin.config . isDefaultrankallworlds () ) { world = null ; } if ( ( plugin.config . permissionpluginhasworldsupport () ) == false ) { world = null ; } return net.slipcor.classranks.handlers.HandleVaultPerms.permission . playerInGroup ( world , player . getName () , permName ) ; } 
public void setCapacity ( edmondskarp.Gui.Arrow arrow , int capacity ) { arrow . getEdge () . setCapacity ( capacity ) ; arrow . getEdge () . getInverse () . setCapacity ( capacity ) ; arrow . getEdge () . getInverse () . setFlow ( capacity ) ; saveState () ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { long [] [] temp = new long [ [ n ] [ n ] ; sim . eqiv ( temp , grid ) ; done . push ( temp ) ; if ( undone . isEmpty () ) sim . eqiv ( grid , sim . takeStep ( grid , mmax ) ) ; else sim . eqiv ( grid , undone . pop () ) ; sim . updateToGrid ( frame , panel , grid , mmax ) ; } 
public int advance ( int target ) throws java.io.IOException { int doc = scorer . advance ( target ) ; if ( doc == ( NO_MORE_DOCS ) ) { return doc ; } currentScore = innerScore () ; if ( ( currentScore ) < ( minScore ) ) { return nextDoc () ; } return doc ; } 
private void createElanForwardingTablesList ( java.lang.String elanName , org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry macEntry , org.opendaylight.controller.md.sal.binding.api.WriteTransaction tx ) { org.opendaylight.yangtools.yang.binding.InstanceIdentifier < org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry > macEntryId = org.opendaylight.netvirt.elan.utils.ElanUtils . getMacEntryOperationalDataPath ( elanName , macEntry . getMacAddress () ) ; com.google.common.base.Optional < org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry > existingMacEntry = elanUtils . read ( broker , LogicalDatastoreType.OPERATIONAL , macEntryId ) ; if ( ( ! ( existingMacEntry . isPresent () ) ) && ( ( elanUtils . getElanMacTable ( elanName ) ) != null ) ) { tx . put ( LogicalDatastoreType.OPERATIONAL , macEntryId , macEntry , true ) ; } } 
@ org.junit.Test @ junitparams.Parameters ( value = { "astText.md, astText.ast" } ) public void dumpAST ( java.lang.String mkdSrc , java.lang.String astSrc ) throws java.io.IOException { java.lang.String mkd = loadResource ( mkdSrc ) . trim () ; java.lang.String ast = loadResource ( astSrc ) . trim () ; org.pegdown.PegDownProcessor processor = new org.pegdown.PegDownProcessor ( org.pegdown.Extensions.ALL ) ; org.pegdown.ast.RootNode rootNode = processor . parseMarkdown ( normalize ( mkd ) . toCharArray () ) ; java.lang.String s = dumpAST ( rootNode ) ; org.assertj.core.api.Assertions . assertThat ( normalize ( s . trim () ) ) . isEqualTo ( normalize ( ast ) ) ; } 
public android.database.Cursor getAllNotes ( java.lang.String sortOrder ) { android.database.Cursor cursor = null ; if ( sortOrder == "date" ) { cursor = mDb . query ( NotesContract.TABLE_NAME , null , null , null , null , null , ( ( NotesContract.COLUMN_DATE ) + " DESC" ) ) ; } else if ( sortOrder == "fav" ) { cursor = mDb . query ( NotesContract.TABLE_NAME , null , null , null , null , null , ( ( NotesContract.COLUMN_FAV ) + " DESC" ) ) ; } return cursor ; } 
private void handleDCPRequest ( final com.couchbase.client.core.message.dcp.DCPRequest req ) { if ( req instanceof com.couchbase.client.core.message.dcp.MutationMessage ) { com.couchbase.client.core.message.dcp.MutationMessage msg = ( ( com.couchbase.client.core.message.dcp.MutationMessage ) ( req ) ) ; handleMutation ( msg , msg . partition () ) ; } else if ( req instanceof com.couchbase.client.core.message.dcp.RemoveMessage ) { com.couchbase.client.core.message.dcp.RemoveMessage msg = ( ( com.couchbase.client.core.message.dcp.RemoveMessage ) ( req ) ) ; handleRemove ( msg , msg . partition () ) ; } } 
private void updateCell ( int x , int y ) { javafx.scene.shape.Rectangle r = getRectangle ( x , y ) ; if ( game . isAlive ( x , y ) ) { r . setFill ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; r . setStroke ( com.jsaop.conways.app.GameOfLife.CELL_FILL_COLOR ) ; } else { r . setFill ( javafx.scene.paint.Color.BLACK ) ; r . setStroke ( javafx.scene.paint.Color.BLACK ) ; } } 
@ java.lang.Override public void init ( ijfx.ui.module.input.Input input ) { if ( ChannelSelector.STYLE . equals ( input . getWidgetType () ) ) { channelSelector = new ijfx.ui.correction.ChannelSelector ( null ) ; channelSelector . channelNumberProperty () . setValue ( 10 ) ; valueProperty () . bindBidirectional ( channelSelector . selectedChannelProperty () . asObject () ) ; channelSelector . selectChannel ( ( ( int ) ( input . getValue () ) ) ) ; node = channelSelector ; } else { super . init ( input ) ; node = super . getNode () ; } } 
private void mapLetters ( BoggleBoard board , int rows , int cols ) { letters = new edu.princeton.cs.algs4.SeparateChainingHashST < java.lang.Integer , java.lang.Character > () ; for ( int i = 0 ; i < rows ; i ++ ) for ( int j = 0 ; j < cols ; j ++ ) { int x = ( i * cols ) + j ; letters . put ( x , board . getLetter ( i , j ) ) ; } } 
public void rotate ( double winkel ) { double radius = java.lang.Math . sqrt ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this . x = radius * ( java.lang.Math . cos ( winkel ) ) ; this . y = radius * ( java.lang.Math . sin ( winkel ) ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > adapterView , android.view.View view , int position , long id ) { android.database.Cursor cursor = ( ( android.database.Cursor ) ( adapterView . getItemAtPosition ( position ) ) ) ; if ( cursor != null ) { ( ( it.jaschke.alexandria.api.Callback ) ( getActivity () ) ) . onItemSelected ( cursor . getString ( cursor . getColumnIndex ( AlexandriaContract.BookEntry._ID ) ) ) ; } } 
public void moveAttachmentToBackupFolder ( java.lang.String path , java.lang.String filePath ) { java.io.File source = new java.io.File ( filePath ) ; java.io.File dest = new java.io.File ( path . trim () ) ; try { org.apache.commons.io.FileUtils . copyFileToDirectory ( source , dest ) ; } catch ( java.io.IOException e ) { org.wso2.dynamictools.extension.zapwso2jiraplugin.FileHandleUtill.log . error ( "File not found in the specified path" ) ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean status ; switch ( item . getItemId () ) { case R.id.action_settings : startActivity ( new android.content.Intent ( this , io.github.data4all.activity.SettingsActivity . class ) ) ; status = true ; break; case R.id.action_help : status = true ; break; case android.R.id.home : this . onWorkflowFinished ( null ) ; status = true ; break; default: return super . onOptionsItemSelected ( item ) ; } return status ; } 
@ java.lang.Override public void onBindViewHolder ( com.spiewak.workoutlogger.adapters.SetAdapter.SetHolder holder , int position ) { com.spiewak.workoutlogger.models.WorkoutSet workoutSet = workoutSets . get ( position ) ; java.lang.String setAndReps = ( ( java.lang.Integer . toString ( workoutSet . getReps () ) ) + "x" ) + ( java.lang.Double . toString ( workoutSet . getLoad () ) ) ; holder.workoutSet . setText ( setAndReps ) ; } 
@ java.lang.Override public void onSuccess ( int statusCode , cz.msebera.android.httpclient.Header [] headers , org.json.JSONObject response ) { android.util.Log . i ( "response" , response . toString () ) ; try { java.lang.String token = response . getString ( "access_token" ) ; com.singh.harsukh.redder.AccessActivity . setToken ( token ) ; android.util.Log . e ( "Access_token" , token ) ; } catch ( org.json.JSONException j ) { j . printStackTrace () ; } } 
public static void printResult ( double [] result ) { java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { java.lang.System.out . print ( ( ( result [ i ] ) + " " ) ) ; } } 
public boolean guess ( int guessNumber ) { count += 1 ; if ( guessNumber == ( secretNumber ) ) { this . hint = "Correct.  The secret number is " + ( secretNumber ) ; return true ; } else if ( guessNumber > ( secretNumber ) ) { this . hint = "Sorry, your guess is too big" ; return false ; } else { this . hint = "Sorry, your guess is too small" ; return false ; } } 
public void moveNextPosition ( boolean smooth ) { if ( ( getRealAdapter () ) == null ) throw new java.lang.IllegalStateException ( "You did not set a slider adapter" ) ; mViewPager . setCurrentItem ( ( ( mViewPager . getCurrentItem () ) + 1 ) , smooth ) ; if ( mIsShuffle ) { setPagerTransformer ( true , getShuffleTransformer () ) ; } } 
void addToBoundIntent ( android.content.Intent intent , android.app.IServiceConnection connection ) { com.lody.virtual.server.am.ServiceRecord.IntentBindRecord record = peekBinding ( intent ) ; if ( record == null ) { record = new com.lody.virtual.server.am.ServiceRecord.IntentBindRecord () ; record.intent = intent ; synchronized ( bindings ) { bindings . add ( record ) ; } } record . addConnection ( connection ) ; } 
private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; } 
public java.sql.ResultSet queryExecution ( java.lang.String query ) throws java.lang.Exception { java.sql.PreparedStatement preparedquery = db . prepareStatement ( ( query + ";" ) ) ; preparedquery . clearParameters () ; java.sql.ResultSet result = null ; try { result = preparedquery . executeQuery () ; } catch ( java.lang.Exception ex ) {} return result ; } 
@ java.lang.Override public boolean create ( POJO.User user ) throws java.sql.SQLException { stmt = connect . prepareStatement ( "INSERT INTO User (pseudo, password, mail) VALUES (?, ?, ?)" ) ; stmt . setString ( 1 , user . getPseudo () ) ; stmt . setString ( 2 , user . getPassword () ) ; stmt . setString ( 3 , user . getEmail () ) ; stmt . executeUpdate () ; stmt . close () ; return true ; } 
private void onGameOver ( android.graphics.Canvas canvas ) { canvas . drawText ( getContext () . getString ( R.string.game_over_text ) , ( ( startP_ ) + ( ( cellSize_ ) * 2.5F ) ) , ( ( startP_ ) + ( ( cellSize_ ) * 4.7F ) ) , noticePaint_ ) ; } 
public static edu.ucsd.sccn.LSL.StreamInfo [] resolve_streams ( double wait_time ) { com.sun.jna.Pointer [] buf = new com.sun.jna.Pointer [ 1024 ] ; int num = edu.ucsd.sccn.LSL.inst . lsl_resolve_all ( buf , buf.length , wait_time ) ; edu.ucsd.sccn.LSL.StreamInfo [] res = new edu.ucsd.sccn.LSL.StreamInfo [ num ] ; for ( int k = 0 ; k < num ; k ++ ) res [ k ] = new edu.ucsd.sccn.LSL.StreamInfo ( buf [ k ] ) ; return res ; } 
public static javax.swing.JLabel createJLabel ( java.lang.String label , int fontSize , boolean border ) { javax.swing.JLabel comp = new javax.swing.JLabel ( label ) ; com.tri.pgs.client.surface.ui.UISystem . init ( comp , border , true ) ; comp . setFont ( new java.awt.Font ( java.awt.Font.SANS_SERIF , java.awt.Font.BOLD , fontSize ) ) ; return comp ; } 
public void changeLane ( int carIndex ) { Car car = cars . get ( carIndex ) ; cars . remove ( carIndex ) ; numCars = cars . size () ; java.lang.System.out . print ( ( ( ( ( "Lane " + ( laneIndex ) ) + " has " ) + ( numCars ) ) + " cars after one left." ) ) ; TrafficSimulator.lanes . get ( newLaneIndex ) . addCar ( car , ( ( laneIndex ) - ( newLaneIndex ) ) ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( MUSIC_LIST_VIEW_REQUEST ) ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { currentSong = data . getIntExtra ( "position" , 1 ) ; playSong () ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; setSupportActionBar ( toolbar ) ; connectionService = com.northghost.caketube.AFConnectionService . newBuilder ( this ) . addConnectionCallbacksListener ( this ) . addVPNConnectionStateListener ( this ) . build () ; } 
public void geometricSeriesApproximation ( double x ) { double nextApproximation = x ; for ( int i = 0 ; i < ( this . steps ) ; i ++ ) { nextApproximation = nextApproximation * x ; } this . approximation = ( this . lastApproximation ) + nextApproximation ; ( this . steps ) ++ ; if ( ! ( isAccurate () ) ) { geometricSeriesApproximation ( x ) ; } else { return; } } 
@ java.lang.Override public void setUser ( com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.UsersLogged userLogged ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException { if ( ( this . userLogged . getCurrentUserLogged () ) == null ) { login ( userLogged . getCurrentUserLogged () . getAuUsername () , userLogged . getCurrentUserLogged () . getAuPassword () ) ; } else { login ( userLogged . getCurrentUserLogged () . getAuUsername () , userLogged . getCurrentUserLogged () . getAuPassword () ) ; } } 
public boolean gelijkAan ( nl.detoren.ijc.data.groepen.Speler speler ) { return ( ( this . getNaam () . equals ( speler . getNaam () ) ) && ( this . getInitialen () . equals ( speler . getInitialen () ) ) ) && ( ( this . getKNSBnummer () ) == ( speler . getKNSBnummer () ) ) ; } 
public void showSearch ( boolean animate ) { if ( isSearchOpen () ) { return; } searchEditText . requestFocus () ; shadowView . setVisibility ( View.VISIBLE ) ; setVisibility ( View.VISIBLE ) ; if ( animate ) { setVisibleWithAnimation () ; } else { setVisibility ( com.radiationpressure.mickhardins.mtgrecall.searchview.VISIBLE ) ; } isSearchOpen = true ; } 
private void cancelDueToException ( java.lang.Exception e ) { if ( cancelled ) return; cancelled = true ; android.util.Log . w ( org.floens.chan.utils.FileCache.TAG , "IOException downloading file" , e ) ; purgeOutput () ; post ( new java.lang.Runnable () { @ java.lang.Override public void run () { callback . onProgress ( 0 , 0 , true ) ; callback . onFail ( false ) ; } } ) ; } 
public com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult validate ( final java.io.File file ) { final com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult validationResult = new com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult () ; com.fasterxml.jackson.databind.JsonNode spec ; try { spec = readFileContent ( file ) ; } catch ( final java.lang.Exception e ) { validationResult . addMessage ( ( ( ( "Error while parsing file " + file ) + ": " ) + ( e . getMessage () ) ) ) ; validationResult . encounteredError () ; return validationResult ; } readSwaggerSpec ( spec , file , validationResult ) ; validateSwagger ( spec , validationResult ) ; return validationResult ; } 
@ java.lang.Override public void onConnected ( android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } LocationServices.FusedLocationApi . requestLocationUpdates ( mclientAPI , mLocationRequest , this ) ; } 
public static com.izik.recipebook.Model instance ( android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.instance ; } 
public boolean removeOrder ( PurchasedItem item ) { if ( ( numItems ) > 0 ) { for ( int i = 0 ; i < ( numItems ) ; i ++ ) { if ( items [ i ] . equals ( item ) ) { for ( int j = i + 1 ; j < ( numItems ) ; j ++ ) { items [ ( j - 1 ) ] = items [ j ] ; } ( numItems ) -- ; return true ; } } } return false ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.m_add_sample_data : addSampleData () ; displayData () ; return true ; case R.id.m_add_book : android.content.Intent intent = new android.content.Intent ( this , divyanshu.bookinventory.AddBookActivity . class ) ; startActivity ( intent ) ; return true ; case R.id.m_delete_all_data : deleteAllData () ; displayData () ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
public void printGrid () { java.lang.System.out . println ( "----------" ) ; for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "----------" ) ; } 
public boolean hasOrders ( java.lang.String value ) { for ( int i = 0 ; i < ( orderFields . size () ) ; i ++ ) { java.lang.String option = ( ( java.lang.String ) ( orderFields . elementAt ( i ) ) ) ; if ( ( option . toLowerCase () . compareTo ( value . toLowerCase () ) ) == 0 ) return true ; } return false ; } 
@ java.lang.Override protected void doSearch ( jdepend.model.result.AnalysisResult result ) throws jdepend.framework.exception.JDependException { jdepend.util.analyzer.element.helper.ServiceOrVO sov ; for ( jdepend.model.JavaClass javaClass : result . getClasses () ) { if ( ! ( javaClass . isInner () ) ) { continue; } sov = researchServiceOrVO ( javaClass ) ; this . printTable ( "类名" , javaClass . getName () ) ; this . printTable ( "类型" , ( ( sov . getType () ) + ( sov . getIndex () ) ) ) ; } } 
@ com.squareup.otto.Subscribe public void onPriceReceived ( com.radiationpressure.mickhardins.mtgrecall.ottoEvents.PriceReceivedEvent e ) { if ( e . getExpansion () . equals ( mtgCard . getSetName () ) ) { this . prices = e . getPrices () ; if ( ( this . cardprices ) != null ) { this . cardprices . setText ( prices ) ; swipeLayout . setRefreshing ( false ) ; } } } 
@ java.lang.Override public void onClick ( com.eemc.aida.DialogInterface p1 , int p2 ) { setCardView ( 0 ) ; symad.showing . clear () ; for ( int i = 0 ; i < ( symnum ) ; ++ i ) { if ( syms . get ( i ) . demangledname . contains ( kw . getText () . toString () ) ) { symad.showing . add ( i ) ; } } symad . notifyDataSetChanged () ; } 
@ java.lang.Override @ javax.jws.WebMethod public java.util.List < com.softserve.tc.diary.entity.Record > getAllPublicRecordsByNickName ( java.lang.String nickName ) { java.util.List < com.softserve.tc.diary.entity.Record > list = recordDAO . getAllPublicRecordsByNickName ( nickName ) ; java.util.Collections . sort ( list , new java.util.Comparator < com.softserve.tc.diary.entity.Record > () { @ java.lang.Override public int compare ( com.softserve.tc.diary.entity.Record o1 , com.softserve.tc.diary.entity.Record o2 ) { return ( o2 . getCreatedTime () . getTime () ) > ( o1 . getCreatedTime () . getTime () ) ? 1 : - 1 ; } } ) ; return list ; } 
private java.util.List < java.lang.Integer > getColorsList ( final java.util.List < simulator.common.graphic.Point > pointList ) { java.util.List < java.lang.Integer > colorsList = new java.util.ArrayList < java.lang.Integer > ( pointList . size () ) ; for ( simulator.common.graphic.Point point : pointList ) { colorsList . add ( point . getColor () . getValue () ) ; } return colorsList ; } 
public int addworkout ( java.lang.String name ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( "name" , name ) ; try { db . insertOrThrow ( "workout" , null , values ) ; } catch ( jeffdev.workingset.android e ) { db . close () ; return 1 ; } db . close () ; return 0 ; } 
private long getVideoLengthInSeconds ( java.lang.String pFileName ) { try { com.coremedia.iso.IsoFile lIsoFile = new com.coremedia.iso.IsoFile ( new com.coremedia.iso.IsoBufferWrapperImpl ( new java.io.File ( pFileName ) ) ) ; lIsoFile . parse () ; return ( lIsoFile . getMovieBox () . getMovieHeaderBox () . getDuration () ) / ( lIsoFile . getMovieBox () . getMovieHeaderBox () . getTimescale () ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( "streamletService-getVideoLengthInSeconds" , e . getMessage () ) ; } return 0 ; } 
@ java.lang.Override public void setValue ( java.lang.String key , java.lang.String value ) { com.google.common.base.Preconditions . checkNotNull ( nodeName , "Node name cannot be null." ) ; co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue tokenValue = tokenValueMap . get ( key ) ; if ( tokenValue == null ) { tokenValue = new co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue () ; tokenValueMap . put ( key , tokenValue ) ; } tokenValue . putValue ( nodeName , value ) ; } 
public void processPages ( long recordsToReadInThisPass ) throws java.io.IOException { reset () ; if ( recordsToReadInThisPass > 0 ) { do { determineSize ( recordsToReadInThisPass ) ; } while ( ( ( valuesReadInCurrentPass ) < recordsToReadInThisPass ) && ( pageReader . hasPage () ) ) ; } org.apache.drill.exec.store.parquet.columnreaders.ColumnReader.logger . trace ( "Column Reader: {} - Values read in this pass: {} - " , this . getColumnDescriptor () . toString () , valuesReadInCurrentPass ) ; valueVec . getMutator () . setValueCount ( valuesReadInCurrentPass ) ; } 
private synchronized void setExportProperties ( org.gephi.preview.api.PreviewModel m ) { org.gephi.preview.api.PreviewProperties props = m . getProperties () ; props . putValue ( PreviewProperty.VISIBILITY_RATIO , 1.0F ) ; props . putValue ( "width" , width ) ; props . putValue ( "height" , height ) ; oldColor = props . getColorValue ( PreviewProperty.BACKGROUND_COLOR ) ; if ( transparentBackground ) { props . putValue ( PreviewProperty.BACKGROUND_COLOR , null ) ; } props . putValue ( PreviewProperty.MARGIN , new java.lang.Float ( margin ) ) ; } 
public java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > constructAuxVarMapping ( final java.util.Set < de.uni_freiburg.informatik.ultimate.logic.TermVariable > auxVars ) { final java.util.HashMap < de.uni_freiburg.informatik.ultimate.logic.TermVariable , de.uni_freiburg.informatik.ultimate.logic.Term > result = new java.util.HashMap <> () ; for ( final de.uni_freiburg.informatik.ultimate.logic.TermVariable auxVar : auxVars ) { final de.uni_freiburg.informatik.ultimate.logic.Term auxVarConst = getOrConstructConstForAuxVar ( auxVar ) ; result . put ( auxVar , auxVarConst ) ; } return result ; } 
@ java.lang.Override public java.util.Optional < java.lang.String > sendMessage ( messages.BotTextMessage msg , java.lang.String channelTo ) { java.lang.String [] messagesWithoutNewline = bots.IrcBot.COMPILE . split ( msg . getText () ) ; for ( java.lang.String messageToken : messagesWithoutNewline ) { this . client . sendMessage ( channelTo , java.lang.String . format ( "%s/%s/%s: %s" , msg . getBotFrom () . getId () , msg . getChannelFrom () , msg . getNicknameFrom () , messageToken ) ) ; } return java.util.Optional . empty () ; } 
@ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( @ org.cba.rest.resources.PathParam ( value = "id" ) int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company == null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } 
public static double timeSortedInput ( java.lang.String alg , int n , int trials ) { double total = 0.0 ; java.lang.Double [] a = new java.lang.Double [ n ] ; for ( int t = 0 ; t < trials ; t ++ ) { for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = 1.0 * i ; } total += SortCompare . time ( alg , a ) ; } return total ; } 
public void editInactiveExecutionPlan ( java.lang.String executionPlan , java.lang.String filename ) throws org.wso2.carbon.event.processor.core.exception.ExecutionPlanConfigurationException , org.wso2.carbon.event.processor.core.exception.ExecutionPlanDependencyValidationException { org.wso2.carbon.event.processor.core.internal.util.helper.EventProcessorHelper . validateExecutionPlan ( executionPlan ) ; org.wso2.carbon.event.processor.core.ExecutionPlan parsedExecutionPlan = org.wso2.siddhi.query.compiler.SiddhiCompiler . parse ( executionPlan ) ; java.lang.String newExecutionPlanName = org.wso2.siddhi.query.api.util.AnnotationHelper . getAnnotationElement ( EventProcessorConstants.ANNOTATION_NAME_NAME , null , parsedExecutionPlan . getAnnotations () ) . getValue () ; org.wso2.carbon.event.processor.core.internal.util.EventProcessorConfigurationFilesystemInvoker . delete ( filename ) ; org.wso2.carbon.event.processor.core.internal.util.EventProcessorConfigurationFilesystemInvoker . save ( executionPlan , newExecutionPlanName , filename ) ; } 
@ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( getActivity () ) ; android.view.LayoutInflater inflater = getActivity () . getLayoutInflater () ; android.view.View view = inflater . inflate ( R.layout.dialog_progress , null ) ; builder . setView ( view ) ; return builder . create () ; } 
@ java.lang.Override public void render ( float delta ) { Gdx.gl . glClearColor ( 0.0F , 0.0F , 0.0F , 1.0F ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; game.batch . begin () ; background . updateAndRender ( delta , game.batch ) ; game.batch . end () ; update ( delta ) ; stage . draw () ; } 
private java.lang.String decrypt ( final java.lang.String key , java.lang.String value ) { try { return com.microsoft.aad.adal.DefaultTokenCacheStore.sHelper . decrypt ( value ) ; } catch ( java.lang.Exception e ) { com.microsoft.aad.adal.Logger . e ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , "Decryption failure" , "" , ADALError.ENCRYPTION_FAILED , e ) ; if ( ! ( com.microsoft.aad.adal.StringExtensions . IsNullOrBlank ( value ) ) ) { com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Decryption error for key: '%s'. Item will be removed" , key ) ) ; removeItem ( key ) ; com.microsoft.aad.adal.Logger . v ( com.microsoft.aad.adal.DefaultTokenCacheStore.TAG , java.lang.String . format ( "Item removed for key: '%s'" , key ) ) ; } } return null ; } 
private int skip ( int n_skip ) throws java.io.IOException { int n_skipped = 0 ; skipWhiteSpace () ; if ( ( ( ( current ) != ',' ) && ( ( current ) != ']' ) ) && ( ( current ) != '}' ) ) { skipInner () ; n_skipped = 1 ; } while ( ( ( current ) == ',' ) && ( ( n_skipped ++ ) != n_skip ) ) { skipWhiteSpace () ; skipInner () ; } return n_skipped ; } 
void update ( gt.Population otherPop ) { java.util.Enumeration < java.lang.String > players = fractions . keys () ; while ( players . hasMoreElements () ) { java.lang.String currentPlayer = players . nextElement () ; double updatedFraction = updateFraction ( currentPlayer ) ; fractions . put ( currentPlayer , updatedFraction ) ; } } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional public org.orcid.jaxb.model.message.OrcidProfile updateOrcidBio ( org.orcid.jaxb.model.message.OrcidProfile updatedOrcidProfile ) { org.orcid.jaxb.model.message.OrcidProfile existingProfile = retrieveOrcidProfile ( updatedOrcidProfile . getOrcidIdentifier () . getPath () ) ; if ( existingProfile == null ) { return null ; } orcidJaxbCopyManager . copyUpdatedBioToExistingWithVisibility ( existingProfile . getOrcidBio () , updatedOrcidProfile . getOrcidBio () ) ; return updateOrcidProfile ( existingProfile ) ; } 
@ java.lang.Override public ru.javawebinar.topjava.model.UserMeal get ( int id , int userId ) { java.util.List < ru.javawebinar.topjava.model.UserMeal > userMeals = em . createNamedQuery ( UserMeal.GET_BY_ID , ru.javawebinar.topjava.model.UserMeal . class ) . setParameter ( 1 , userId ) . setParameter ( 2 , id ) . getResultList () ; if ( ! ( userMeals . isEmpty () ) ) { if ( ( userMeals . get ( 0 ) . getUser () . getId () ) == userId ) { return userMeals . get ( 0 ) ; } else return null ; } else return null ; } 
@ WebTests.BeforeSuite ( groups = "InternetExplorer" ) public void setUpDriverIE ( ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; } 
@ org.springframework.scheduling.annotation.Async private void start ( java.lang.String url ) { if ( ! ( com.prapps.app.core.controller.CoreController.keepAlive ) ) { com.prapps.app.core.controller.CoreController.keepAlive = true ; while ( com.prapps.app.core.controller.CoreController.keepAlive ) { try { new java.net.URL ( url ) . openConnection () ; java.lang.Thread . sleep ( ( ( ( 1000 * 60 ) * 60 ) * 12 ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { mSectionsPagerAdapter . notifyDataSetChanged () ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; tabLayout . setupWithViewPager ( mViewPager ) ; mViewPager . setCurrentItem ( 0 , true ) ; prefEditor . putInt ( getString ( R.string.living_room_mode ) , selection [ 0 ] ) ; prefEditor . apply () ; dialog . hide () ; } 
public int [] getOutput ( short [] pcm , int sampleRate ) { if ( pcm == null ) return null ; double [] spectrum = getSpectrum ( pcm ) ; final int amount = 100 ; int [] s = spectrumStrategy . execute ( spectrum , sampleRate ) ; for ( int i = 0 ; i < ( s.length ) ; i ++ ) { s [ i ] = ( ( int ) ( ( spectrum [ i ] ) / 1000 ) ) ; } return s ; } 
public static org.openremote.model.syslog.SyslogLevel getLevel ( int level ) { if ( level == 1000 ) { return org.openremote.model.syslog.SyslogLevel.ERROR ; } else if ( level == 900 ) { return org.openremote.model.syslog.SyslogLevel.WARN ; } else if ( ( level == 800 ) || ( level == 700 ) ) { return org.openremote.model.syslog.SyslogLevel.INFO ; } return null ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { int startOption = START_NOT_STICKY ; if ( intent == null ) { return startOption ; } int mapID = intent . getIntExtra ( appConstants.DOWNLOAD_INTENT_NAME , 0 ) ; if ( ( ( activeDownloadsList [ mapID ] ) != null ) && ( activeDownloadsList [ mapID ] ) ) { com.noveogroup.android.log.Log . d ( "Duplicate download request for the same map type" ) ; return startOption ; } activeDownloadsList [ mapID ] = true ; downloadMap ( mapID ) ; return startOption ; } 
@ java.lang.Override public boolean retryFurther ( java.lang.Long offset ) { org.apache.storm.kafka.ExponentialBackoffMsgRetryManager.MessageRetryRecord record = this . records . get ( offset ) ; return ! ( ( ( record != null ) && ( ( this . retryLimit ) > 0 ) ) && ( ( this . retryLimit ) <= ( record.retryNum ) ) ) ; } 
public java.lang.Object [] [] toMultiArrayNumber ( com.softserve.edu.atqc.data.apps.ApplicationSources applicationSources , java.util.List < ? > list ) { java.lang.Object [] [] array = toMultiArrayNumber ( 2 , list ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { array [ i ] [ 0 ] = applicationSources ; } return array ; } 
private void evaluateNotification ( int idx , java.lang.String prayId , java.lang.String prayName , java.util.Date date ) { cancelNotification ( idx ) ; cancelNotification ( ( idx + 10 ) ) ; long delay = ( date . getTime () ) - ( new java.util.Date () . getTime () ) ; if ( delay > 0 ) { sendPrayAlarm ( idx , prayId , prayName , delay ) ; } } 
@ java.lang.Override public void processReservation ( commonosgi.model.TravelInfo travelInfo ) { if ( ( queue . isEmpty () ) && ( ( this . travelInfo ) == null ) ) { this . travelInfo = travelInfo ; commonosgi.util.NodeBehavior . processReservationBehavior ( this . travelInfo ) ; gui . notify ( travelInfo , null ) ; gui . enable () ; } else { queue . add ( travelInfo ) ; } } 
public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; } 
private javax.persistence.TypedQuery < testJpa.simple.parentChild.domain.ParentTable > createDataQuery ( final java.lang.String data ) { final javax.persistence.criteria.CriteriaBuilder cb = em . getCriteriaBuilder () ; final javax.persistence.criteria.CriteriaQuery < testJpa.simple.parentChild.domain.ParentTable > cq = cb . createQuery ( testJpa.simple.parentChild.domain.ParentTable . class ) ; final javax.persistence.criteria.Root < testJpa.simple.parentChild.domain.ParentTable > root = cq . from ( testJpa.simple.parentChild.domain.ParentTable . class ) ; cq . where ( cb . equal ( root . get ( "data" ) , data ) ) ; return em . createQuery ( cq ) ; } 
private void loadUrl ( java.lang.String url ) { if ( ( url != null ) && ( Patterns.WEB_URL . matcher ( url ) . matches () ) ) { webView . getSettings () . setJavaScriptEnabled ( true ) ; webView . setWebViewClient ( new in.mobileappdev.news.ui.NewsDetailWebActivity.CustomWebViewclient ( this ) ) ; webView . loadUrl ( url ) ; } else { android.widget.Toast . makeText ( this , "Url not valid, Navigating to Home screen" , Toast.LENGTH_LONG ) . show () ; startActivity ( new android.content.Intent ( this , in.mobileappdev.news.ui.SplashScreenActivity . class ) ) ; finish () ; } } 
@ java.lang.Override public void done ( java.util.List < com.example.user.simpleui.Order > objects , com.parse.ParseException e ) { if ( e == null ) { com.example.user.simpleui.Order . pinAllInBackground ( "Order" , objects ) ; callback . done ( objects , e ) ; } else { com.example.user.simpleui.Order . getQuery () . fromLocalDatastore () . findInBackground ( callback ) ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.util.Random rand = new java.util.Random () ; vehicleTypePrivacyField . setValue ( rand . nextDouble () ) ; emergencyTypePrivacyField . setValue ( rand . nextDouble () ) ; malfunctionTypePrivacyField . setValue ( rand . nextDouble () ) ; numOfPeoplePrivacyField . setValue ( rand . nextDouble () ) ; thresholdPrivacyField . setValue ( rand . nextDouble () ) ; } 
public void reset ( com.studiau.amazinggravity.Ship ship ) { float randomFloat = random . nextFloat () ; radius = ( com.studiau.amazinggravity.ExhaustParticle.BASE_RADIUS ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_RADIUS ) ) ; locationX = ship . getExhaustLocationX () ; locationY = ship . getExhaustLocationY () ; speedX = ( ( ( random . nextFloat () ) - 0.5F ) * 2 ) * ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDX ) ; speedY = ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDY ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_SPEEDY ) ) ; } 
@ java.lang.Override public void onConnected ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { android.Manifest.permission.ACCESS_FINE_LOCATION } , LOCATION_PERMISSION_REQUEST_CODE ) ; } else { getNewLocation () ; } } 
private void assertActualReportEqualsTo ( ru.sbt.refactoring.solidhomework.MailSender fakeMailSender , java.lang.String expectedReportPath ) throws java.io.IOException , javax.mail.MessagingException { org.mockito.ArgumentCaptor < java.lang.String > messageTextArgumentCaptor = org.mockito.ArgumentCaptor . forClass ( java.lang.String . class ) ; verify ( fakeMailSender ) . createMessageWithHTMLCode ( messageTextArgumentCaptor . capture () , anyString () , anyString () ) ; java.nio.file.Path path = java.nio.file.Paths . get ( expectedReportPath ) ; java.lang.String expectedReportContent = new java.lang.String ( java.nio.file.Files . readAllBytes ( path ) ) ; org.junit.Assert . assertEquals ( messageTextArgumentCaptor . getValue () , expectedReportContent ) ; } 
public java.lang.String getBestSuggestion ( java.lang.String typed ) { if ( ( typed == null ) || ( ( typed . length () ) == 0 ) ) return null ; for ( java.lang.String keyword : keywords ) { if ( keyword . startsWith ( typed ) ) return keyword ; } return null ; } 
private static java.util.Set < java.lang.String > getAffiliationsFromArgs ( java.lang.String affiliationArguments ) throws seedu.addressbook.data.exception.IllegalValueException { if ( affiliationArguments . isEmpty () ) { return java.util.Collections . emptySet () ; } final java.util.Collection < java.lang.String > affiliationStrings = java.util.Arrays . asList ( affiliationArguments . replaceFirst ( " f/" , "" ) . split ( " f/" ) ) ; return new java.util.HashSet <> ( affiliationStrings ) ; } 
@ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { mDrawerLayout . closeDrawers () ; switch ( menuItem . getItemId () ) { case R.id.collect : openPage ( "collect" , null , CoreAnim.slide ) ; break; case R.id.update : update () ; break; case R.id.clear : clear () ; break; case R.id.about : openPage ( "about" , null , CoreAnim.slide ) ; break; default: break; } return true ; } 
public void removeRows ( int [] indices ) { java.util.Arrays . sort ( indices ) ; for ( int i = ( indices.length ) - 1 ; i >= 0 ; i -- ) { rows . remove ( indices [ i ] ) ; } nl.gogognome.lib.swing.AbstractListTableModel . fireTableDataChanged () ; } 
public void clearCacheLocal ( uk.gov.ea.datareturns.distributedtransaction.impl.Cache cache ) { switch ( cache ) { case SITE_PERMIT_CACHES : siteDao . clearCaches () ; uniqueIdentifierDao . clearCaches () ; uniqueIdentifierAliasDao . clearCaches () ; search . initialize () ; uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER . info ( ( "Cleared cache group: " + cache ) ) ; break; default: uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER . error ( ( "Not implemented: " + cache ) ) ; } } 
private float [] cutArray ( int index ) { float [] retArr = new float [ filterSize ] ; int j = 0 ; for ( int i = index - ( side ) ; i <= ( index + ( side ) ) ; i ++ ) { retArr [ j ] = array [ i ] ; j ++ ; } return retArr ; } 
private void actionApresClickCorrect ( int x , int y ) { try { enAttente = true ; java.rmi.registry.Registry reg = java.rmi.registry.LocateRegistry . getRegistry ( 3212 ) ; interaction.ServeurInterface serveur = ( ( interaction.ServeurInterface ) ( reg . lookup ( "Serv" ) ) ) ; positionCourante = new model.Position ( y , x ) ; serveur . sendPosition ( positionCourante ) ; } catch ( java.rmi.RemoteException | java.rmi.NotBoundException ex ) { java.util.logging.Logger . getLogger ( graphic.StageJeu . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } 
private pcbuilder.controllers.Component findComponent ( pcbuilder.controllers.ProductData productData ) { pcbuilder.controllers.Component component = componentRepository . findByManufacturerPartNumber ( productData . getMpn () ) ; if ( ( ( component == null ) && ( ( productData . getEan () ) != null ) ) && ( ! ( productData . getEan () . equals ( "9999999999999" ) ) ) ) { component = componentRepository . findByEuropeanArticleNumber ( productData . getEan () ) . get ( 0 ) ; } return component ; } 
@ java.lang.Override public java.io.InputStream exportDatatypeLibraryDocumentAsHtml ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.DatatypeLibraryDocument datatypeLibraryDocument , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportConfig exportConfig , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportFontConfig exportFontConfig ) { if ( datatypeLibraryDocument != null ) { gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.util.ExportParameters exportParameters = exportUtil . setExportParameters ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.DOCUMENT_TITLE_DATATYPE_LIBRARY , true , false , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.EXPORT_FORMAT_HTML , exportConfig , exportFontConfig ) ; return exportUtil . exportAsHtmlFromXsl ( serializationService . serializeDatatypeLibrary ( datatypeLibraryDocument , exportConfig ) . toXML () , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.GLOBAL_STYLESHEET , exportParameters , datatypeLibraryDocument . getMetaData () ) ; } else { return new org.apache.commons.io.input.NullInputStream ( 1L ) ; } } 
protected java.lang.String getGroupRedirect ( com.liferay.portal.theme.ThemeDisplay themeDisplay , long groupId ) throws java.lang.Exception { java.util.List < com.liferay.portal.model.Layout > layouts = com.liferay.portal.service.LayoutLocalServiceUtil . getLayouts ( groupId , false , LayoutConstants.DEFAULT_PARENT_LAYOUT_ID , false , 0 , 1 ) ; if ( ( layouts . size () ) > 0 ) { com.liferay.portal.model.Layout layout = layouts . get ( 0 ) ; return com.liferay.portal.util.PortalUtil . getLayoutURL ( layout , themeDisplay ) ; } return null ; } 
public static void paintMultiMaps ( java.awt.Graphics2D g2 , com.wpi.cs509.teamA.bean.Path path , com.wpi.cs509.teamA.util.LinearTransform plt ) { if ( ( null == path ) || ( ( path . getNodes () . size () ) == 0 ) ) { return; } com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintPath ( path , g2 , plt ) ; com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintNodes ( path . getNodes () , g2 , PaintHelperBasics.DrawStyleEnum.BasicNode , plt ) ; com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintStartEndNode ( g2 , path , plt ) ; } 
@ java.lang.Override public synchronized void storeUpperLimit ( final long limit ) { DebugLogger.logger . debug ( "[PUT] Storing upper limit of {}." , limit ) ; try { cassandraTimestampStore . storeTimestampBound ( currentLimit , limit ) ; currentLimit = limit ; } catch ( java.util.ConcurrentModificationException e ) { throw new com.palantir.timestamp.MultipleRunningTimestampServiceError ( ( "CAS unsuccessful; this may indicate that another timestamp service is running against this" + ( ( " cassandra keyspace, possibly caused by multiple copies of a service running without" + " a configured set of leaders, or a CLI being run with an embedded timestamp service" ) + " against an already running service." ) ) , e ) ; } } 
public void loadPosition ( int x , int y ) { ensureSafeWindowPosition ( x , y ) ; org.micromanager.internal.utils.DefaultUserProfile profile = org.micromanager.internal.utils.DefaultUserProfile . getInstance () ; setBounds ( profile . getInt ( this . getClass () , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_X ) ) , x ) , profile . getInt ( this . getClass () , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_Y ) ) , y ) , getWidth () , getHeight () ) ; } 
public boolean judgeUserExist ( java.lang.String name ) { java.lang.String sql = ( "select * from User where NAME='" + name ) + "'" ; boolean result = false ; try { java.sql.PreparedStatement pstmt = conn . prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt . executeQuery () ; if ( rs . next () ) result = true ; pstmt . close () ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } return result ; } 
@ java.lang.Override public final java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > getNodeRules ( final byte net , final com.github.sdnwiselab.sdnwise.util.NodeAddress dst ) { java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > list = new java.util.ArrayList <> () ; com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry fte ; int i = 0 ; while ( ( fte = getNodeRule ( net , dst , i ) ) != null ) { list . add ( i , fte ) ; i ++ ; } return list ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { switch ( position ) { case 0 : return oneFragment . newInstance ( "1" , "2" ) ; case 1 : return twoFragment . newInstance ( "1" , "2" ) ; case 2 : return oneFragment . newInstance ( "1" , "2" ) ; case 3 : return twoFragment . newInstance ( "1" , "2" ) ; case 4 : return oneFragment . newInstance ( "1" , "2" ) ; default: return null ; } } 
public Objects.MapTypes.MapInterface createMap ( int mapSize , int numOfPlayers , int choice ) { if ( choice == 1 ) { Objects.MapTypes.SafeMapCreator creator = new Objects.MapTypes.SafeMapCreator () ; return creator . create ( mapSize , numOfPlayers ) ; } else { Objects.MapTypes.HazardousMapCreator creator2 = new Objects.MapTypes.HazardousMapCreator () ; return creator2 . create ( mapSize , numOfPlayers ) ; } } 
private static java.lang.String removeCommandWord ( java.lang.String userInput ) { java.lang.String [] inputArray = userInput . split ( parser.EventParser.SYMBOL_WHITESPACE ) ; java.lang.String remainingText = parser.EventParser.SYMBOL_EMPTY ; if ( ( inputArray.length ) >= ( parser.EventParser.ARRAY_MINIMUM_LENGTH ) ) { for ( int i = 1 ; i < ( inputArray.length ) ; i ++ ) { remainingText += inputArray [ i ] ; remainingText += parser.EventParser.SYMBOL_WHITESPACE ; } } return remainingText ; } 
@ java.lang.Override public void execute ( com.prey.actions.observer.ActionJob actionJob , android.content.Context ctx ) { com.prey.PreyConfig preyConfig = com.prey.PreyConfig . getPreyConfig ( ctx ) ; if ( preyConfig . isFroyoOrAbove () ) { preyConfig . setLock ( true ) ; com.prey.backwardcompatibility.FroyoSupport . getInstance ( ctx ) . changePasswordAndLock ( getConfig () . get ( "unlock_pass" ) , true ) ; } } 
public java.util.List < sdk.SDKMessage > get ( int userId ) { java.util.List < sdk.SDKMessage > result = null ; try { sdk.SitchozrServices service = sdk.SitchozrSDK . getInstance () . getSitchozrServices () ; result = service . readMessages ( userId ) ; } catch ( java.lang.Exception e ) { android.util.Log . w ( SitchozrSDK.WARNING_TAG , "An error occured while getting message" ) ; } return result ; } 
@ java.lang.Override protected java.lang.Object doInBackground ( java.lang.Object [] objects ) { java.lang.String methodName = "insertPersonDetails" ; webService = new com.idbi.app.network.SOAPWebservice ( mContext ) ; com.idbi.app.model.Output object = null ; getNomineeData () ; if ( ( ( nomineeDetailsList ) != null ) && ( ( nomineeDetailsList . size () ) > 0 ) ) { for ( int i = 0 ; i < ( nomineeDetailsList . size () ) ; i ++ ) { object = webService . insertUpdatePersonalDetails ( nomineeDetailsList . get ( i ) , methodName ) ; } } return object ; } 
@ java.lang.Override public void dragOver ( java.awt.dnd.DropTargetDragEvent e ) { java.awt.Point cursorLocationBis = e . getLocation () ; javax.swing.tree.TreePath destinationPath = getPathForLocation ( cursorLocationBis.x , cursorLocationBis.y ) ; if ( isDroppable ( selectedTreePath , destinationPath ) ) { e . acceptDrag ( java.awt.dnd.DnDConstants.ACTION_MOVE ) ; setCursor ( org.openflexo.gina.swing.view.widget.JFIBBrowserWidget.DnDJTree.dropOK ) ; } else { e . rejectDrag () ; setCursor ( org.openflexo.gina.swing.view.widget.JFIBBrowserWidget.DnDJTree.dropKO ) ; } } 
private void addRecord ( java.lang.String key , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , key ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( key ) ; if ( oldList == null ) map . put ( key , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( key , newList ) ; } } 
public void removeSelection ( int pos ) { android.view.View view = manager . findViewByPosition ( pos ) ; if ( view == null ) return; android.widget.TextView title = ( ( android.widget.TextView ) ( view . findViewById ( R.id.aa_title ) ) ) ; android.widget.TextView subtitle = ( ( android.widget.TextView ) ( view . findViewById ( R.id.subtitle ) ) ) ; title . setTextColor ( Color.WHITE ) ; subtitle . setTextColor ( android.support.v4.content.ContextCompat . getColor ( getContext () , android.R.color.darker_gray ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int index = 0 ; for ( int i = 1 ; i < ( day ) ; i ++ ) index += ( getItinerarySizeByDay ( getContext () , i ) ) - 1 ; final int indexToAssign = index ; uz.samtuit.samapp.helpers.ItineraryHelper . addNewItemFromItinerary ( getFragmentManager () , day , indexToAssign ) ; } 
public void setShowOriginal ( boolean b ) { if ( b ) { if ( ( state ) == ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ) { return; } setState ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ; } else { if ( ( state ) == ( pixelitor.layers.ImageLayer.State.PREVIEW ) ) { return; } setState ( pixelitor.layers.ImageLayer.State.PREVIEW ) ; } comp . imageChanged ( pixelitor.Composition.ImageChangeActions.REPAINT ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public < T > T [] toArray ( T [] a ) { T [] result = null ; if ( ( a.length ) >= ( this . size () ) ) result = a ; else result = ( ( T [] ) ( java.lang.reflect.Array . newInstance ( a . getClass () . getComponentType () , this . size () ) ) ) ; java.lang.System . arraycopy ( this . array , this . start , result , 0 , result.length ) ; return result ; } 
public void setLongitude ( java.lang.String longitude ) { int [] longitudeDMS = fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility . decimalToDMSArray ( java.lang.Double . valueOf ( longitude ) ) ; latitudeDegreesEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 0 ] ) ) ; latitudeMinutesEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 1 ] ) ) ; latitudeSecondsEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 2 ] ) ) ; longitudeCardinalDirectionSwitch . setChecked ( ( ( java.lang.Double . valueOf ( longitude ) ) >= 0 ) ) ; } 
private void processAttributes ( android.content.Context context , android.util.AttributeSet attrs ) { android.content.res.TypedArray a = context . obtainStyledAttributes ( attrs , R.styleable.ColorButton ) ; final int N = a . getIndexCount () ; for ( int i = 0 ; i < N ; ++ i ) { int attr = a . getIndex ( i ) ; if ( attr == ( R.styleable.ColorButton_jr_color ) ) { mColor = a . getColor ( attr , 0 ) ; colorify () ; break; } } a . recycle () ; } 
protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; outState . putByteArray ( "audio" , this . getShareFragment () . getAudio () ) ; outState . putByteArray ( "pic" , this . getShareFragment () . getPic () ) ; outState . putByteArray ( "video" , this . getShareFragment () . getVideo () ) ; } 
@ java.lang.Override public void initialize ( java.net.URL url , java.util.ResourceBundle rb ) { DataModel = Model.Sync . getInstance () ; FencerColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "fullName" ) ) ; FencingSchoolColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "fencingSchool" ) ) ; AgeColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "birthday" ) ) ; TournamentColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "name" ) ) ; DateColumn . setCellValueFactory ( new javafx.scene.control.cell.PropertyValueFactory <> ( "date" ) ) ; UpdateView () ; } 
private void makeNewHeader ( org.json.JSONObject transforms ) { for ( int x = 1 ; x < ( ( transforms . length () ) + 1 ) ; x ++ ) { java.lang.String curTransform = "transform" + x ; java.lang.String newField = getCurrTransformNewField ( transforms , curTransform ) ; if ( newField . equals ( "" ) ) {} else if ( checkHeaderDuplicate ( newHeader , newField ) ) { newHeader . put ( newHeader . length () , newField ) ; } } } 
public synchronized void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { ( requestTotal ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } } 
@ org.junit.jupiter.api.Test void shouldInjectCustomInstanceAsParameter ( io.specto.hoverfly.junit.core.Hoverfly hoverfly ) { io.specto.hoverfly.junit5.HoverflyCustomCaptureTest.hoverflyInstance = hoverfly ; org.assertj.core.api.Assertions . assertThat ( hoverfly . getMode () ) . isEqualTo ( HoverflyMode.CAPTURE ) ; org.assertj.core.api.Assertions . assertThat ( hoverfly . getHoverflyInfo () . getModeArguments () . getHeadersWhitelist () ) . containsExactly ( "*" ) ; } 
public void setFilename ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } } 
public boolean contains ( java.lang.String key ) { int [] hashes = getHashes ( key ) ; for ( int hash : hashes ) { if ( ! ( store . getBit ( ( hash % ( capacity ) ) ) ) ) { return false ; } } return true ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { java.lang.Double value = setValue ( dataSnapshot . getValue () ) ; if ( value != null ) { myRef . child ( path ) . setValue ( ( value + passedValue ) ) ; } else { myRef . child ( path ) . setValue ( passedValue ) ; } } catch ( java.lang.Exception e ) { android.util.Log . d ( "Error catched" , e . toString () ) ; } } 
void upsertCF ( com.datastax.driver.core.Session session ) { session . execute ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE IF NOT EXISTS " + ( TableName ) ) + " (\"_id\" text PRIMARY KEY, name list<text>) WITH bloom_filter_fp_chance = 0.01 " ) + " AND caching = \'{\"keys\":\"ALL\", \"rows_per_partition\":\"NONE\"}\'" ) + " AND comment = 'Auto-created by Elassandra' " ) + " AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'} " ) + " AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'} " ) + " AND dclocal_read_repair_chance = 0.1  " ) + " AND default_time_to_live = 0 " ) + " AND gc_grace_seconds = 864000 " ) + " AND max_index_interval = 2048 " ) + " AND memtable_flush_period_in_ms = 0 " ) + " AND min_index_interval = 128 " ) + " AND read_repair_chance = 0.0 " ) + " AND speculative_retry = '99.0PERCENTILE'; " ) ) ; session . execute ( "CREATE CUSTOM INDEX elastic_external_name_idx ON customer.external (name) USING 'org.elasticsearch.cassandra.index.ExtendedElasticSecondaryIndex';" ) ; } 
public static void init ( final java.lang.String keyFiles , final java.lang.String pageRankFile ) throws java.io.IOException { if ( ! ( de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized ) ) { final java.util.Set < java.lang.Integer > indicies ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Load topic specific page rank file..." ) ; indicies = de.citec.sc.templates.TopicSpecificPageRankTemplate . loadTopicSpecificPageRanks ( pageRankFile ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Done, loading topic specific page rank index mapping file" ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Load topic specific page rank index mapping file..." ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate . loadIndexMapping ( keyFiles , indicies ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.log . info ( "Done, loading topic specific page rank index mapping file" ) ; de.citec.sc.templates.TopicSpecificPageRankTemplate.isInitialized = true ; } } 
public void gameCycle ( java.awt.Color color ) { if ( color == ( chosenColor ) ) { gui.ColorGameGUI.finalScore = ( gui.ColorGameGUI.finalScore ) + 100 ; setWord () ; setColor () ; count = ( count ) + 1 ; } else { setWord () ; setColor () ; count = ( count ) + 1 ; } if ( ( count ) == 5 ) { endGame () ; } } 
private com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey generateZoneKey ( final org.xbill.DNS.Name name , final java.util.List < org.xbill.DNS.Record > list , final boolean dynamicRequest , final boolean dnssecRequest ) { if ( dynamicRequest && ( ! dnssecRequest ) ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name , list ) ; } else if ( ( isDnssecEnabled ( name ) ) && ( name . subdomain ( com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneManager . getTopLevelDomain () ) ) ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.SignedZoneKey ( name , list ) ; } else { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name , list ) ; } } 
@ com.linkbit.beidou.controller.workOrder.RequestMapping ( value = "/add2LocCart" , method = RequestMethod.POST ) @ com.linkbit.beidou.controller.workOrder.ResponseBody public com.linkbit.beidou.domain.workOrder.WorkOrderReportCart add2LocCart ( @ com.linkbit.beidou.controller.workOrder.RequestParam ( value = "locationId" ) java.lang.Long locationId , @ com.linkbit.beidou.controller.workOrder.RequestParam ( value = "orderDesc" ) java.lang.String orderDesc , @ com.linkbit.beidou.controller.workOrder.RequestParam ( value = "reporter" ) java.lang.String reporter , @ com.linkbit.beidou.controller.workOrder.RequestParam ( value = "eqClassId" ) java.lang.Long eqClassId , javax.servlet.http.HttpSession httpSession ) { java.lang.String creator = ( ( java.lang.String ) ( httpSession . getAttribute ( "personName" ) ) ) ; com.linkbit.beidou.domain.workOrder.WorkOrderReportCart workOrderReportCart = workOrderReportCartService . add2LocCart ( locationId , orderDesc , creator , reporter , eqClassId ) ; return workOrderReportCart ; } 
private void handleAutoImprov ( int slotInPlayback ) { int gap = lickgenFrame . getGap () ; if ( ( lickgenFrame . getRecurrent () ) && ( slotInPlayback >= ( ( stopPlaybackAtSlot ) - gap ) ) ) { ( recurrentIteration ) ++ ; setFirstChorus ( false ) ; setStatus ( ( "Chorus " + ( recurrentIteration ) ) ) ; originalGenerate ( lickgen , improviseStartSlot , improviseEndSlot ) ; } } 
public void insert ( com.bergamin.contactlist.model.Contact contact ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues data = new android.content.ContentValues () ; data . put ( "name" , contact . getName () ) ; data . put ( "address" , contact . getAddress () ) ; data . put ( "phone" , contact . getPhone () ) ; data . put ( "webSite" , contact . getWebSite () ) ; db . insert ( "Contacts" , null , data ) ; } 
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } 
public boolean insert ( int newData ) { Node newestNode = new Node () ; if ( newestNode == null ) { java.lang.System.out . println ( "Out of memory error." ) ; return false ; } else { newestNode . setData ( newData ) ; newestNode . setNext ( head . getNext () ) ; head . setNext ( newestNode ) ; return true ; } } 
@ java.lang.Override public boolean isDisabled ( java.lang.String layerName ) { uk.ac.rdg.resc.edal.catalogue.jaxb.VariableConfig xmlVariable = getXmlVariable ( layerName ) ; if ( xmlVariable != null ) { return xmlVariable . isDisabled () ; } else { uk.ac.rdg.resc.edal.ncwms.config.NcwmsDynamicService dynamicService = getDynamicServiceFromLayerName ( layerName ) ; if ( dynamicService != null ) { return dynamicService . isDisabled () ; } else { return true ; } } } 
public void uploadPicture ( com.pervasive.sth.network.Media mediaFile ) throws java.lang.Exception { android.util.Log . d ( LOG_TAG , "Uploading picture on web server." ) ; org.json.JSONObject jsonPicture = new org.json.JSONObject () ; jsonPicture . put ( "PIC_NAME" , mediaFile . getMediaName () ) ; byte [] pictureData = mediaFile . getData () ; java.lang.String encodedData = android.util.Base64 . encodeToString ( pictureData , Base64.DEFAULT ) ; jsonPicture . put ( "PIC_DATA" , encodedData ) ; pictureClient . executePost ( jsonPicture . toString () ) ; } 
@ java.lang.Override public void update ( float delta ) { com.osreboot.ridhvl.painter.HvlCamera . setX ( ( ( com.osreboot.ridhvl.painter.HvlCamera . getX () ) + ( ( ( HvlInputSeriesAction.HORIZONTAL . getCurrentOutput () ) * delta ) * 256.0F ) ) ) ; com.osreboot.ridhvl.painter.HvlCamera . setY ( ( ( com.osreboot.ridhvl.painter.HvlCamera . getY () ) + ( ( ( HvlInputSeriesAction.VERTICAL . getCurrentOutput () ) * delta ) * 256.0F ) ) ) ; if ( ( tilemaps ) != null ) { tilemaps . update ( delta ) ; tilemaps . draw ( delta ) ; } } 
public void loadAlbums ( android.content.Context context , boolean hidden ) { this . hidden = hidden ; java.util.ArrayList < org.fossasia.phimpme.leafpic.data.Album > list ; org.fossasia.phimpme.leafpic.data.providers.StorageProvider p = new org.fossasia.phimpme.leafpic.data.providers.StorageProvider ( context ) ; list = p . getAlbums ( context , hidden ) ; dispAlbums = list ; sortAlbums ( context ) ; } 
private static void addGenericItem ( net.minecraft.item.Item item ) { com.xplosivesnet.explochem.xplosivesnet_items.items [ com.xplosivesnet.explochem.xplosivesnet_items.counter ] = item ; if ( ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) != 0 ) item . setContainerItem ( com.xplosivesnet.explochem.xplosivesnet_items.items [ 0 ] ) ; ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) ++ ; cpw.mods.fml.common.registry.GameRegistry . registerItem ( item , item . getUnlocalizedName () ) ; } 
public void interact ( Entity ent ) { if ( ent instanceof Player ) { if ( ( GameStats . getPowerupState () ) == 0 ) { ent . setHeight ( ( ( ent . getHeight () ) * 2 ) ) ; ent . setY ( ( ( ent . getY () ) - ( ( ent . getHeight () ) / 2 ) ) ) ; GameStats . setPowerupState ( 1 ) ; } GameStats . incrementScore ( 1000 ) ; remove ( getGame () . getControlVar () ) ; } } 
@ java.lang.Override public model.Cell put ( model.Position key , model.Cell value ) { model.Cell previousValue = get ( key ) ; remove ( key ) ; if ( value instanceof model.ActiveCell ) { activeCells . put ( key , ( ( model.ActiveCell ) ( value ) ) ) ; } else { staticCells . put ( key , value ) ; } return previousValue ; } 
@ java.lang.Override public java.lang.Object execute ( org.eclipse.core.commands.ExecutionEvent event ) throws org.eclipse.core.commands.ExecutionException { if ( eu.modelwriter.configuration.internal.AlloyUtilities . isExists () ) { this . candidateToTypeChanging = new java.util.ArrayList < org.eclipse.core.resources.IMarker > () ; addRemoveType () ; } else { org.eclipse.jface.dialogs.MessageDialog infoDialog = new org.eclipse.jface.dialogs.MessageDialog ( eu.modelwriter.marker.MarkerActivator . getShell () , "System Information" , null , "You dont have any registered alloy file to system." , org.eclipse.jface.dialogs.MessageDialog.INFORMATION , new java.lang.String [] { "OK" } , 0 ) ; infoDialog . open () ; } return null ; } 
public boolean isPointInArea ( java.awt.Point pos , int areaLeftX , int areaRightX , int areaUpY , int areaDownY ) { return ( ( ( areaLeftX < ( pos.x ) ) && ( ( pos.x ) < areaRightX ) ) && ( areaUpY < ( pos.y ) ) ) && ( ( pos.y ) < areaDownY ) ; } 
public PokemonSpecies findCaughtSpeciesData ( java.lang.String speciesName ) throws PokedexException { for ( int i = 0 ; i < ( pokedex . size () ) ; i ++ ) { PokemonSpecies poke = pokedex . get ( i ) ; if ( poke . getSpeciesName () . equals ( speciesName ) ) { if ( poke . isEmpty () ) { throw new PokedexException ( Config.UNCAUGHT_POKEMON ) ; } else { return poke ; } } } throw new PokedexException ( Config.UNSEEN_POKEMON ) ; } 
public boolean isCallTime ( int timeIndex ) { return ( ( ( ( double ) ( timeIndex ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) . getInt () ) ) - 1 ) == ( ( java.lang.Math . ceil ( ( ( ( double ) ( timeIndex ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) . getInt () ) ) ) ) - 1 ) ; } 
@ java.lang.Override public void afterTextChanged ( android.text.Editable s ) { if ( ( weightPrevLength ) > ( s . length () ) ) { com.kq.liftplusone.models.ExerciseSet set = mSets . get ( position ) ; set . setWeight ( ( ( s . length () ) > 0 ? java.lang.Float . parseFloat ( s . toString () ) : 0 ) ) ; mSets . set ( position , set ) ; } } 
public static java.lang.String fetchWebpageData ( java.lang.String requestUrl ) { java.net.URL url = com.example.android.hashseparator.QueryUtils . createUrl ( requestUrl ) ; java.lang.String response = null ; try { response = com.example.android.hashseparator.QueryUtils . makeHttpRequest ( url ) ; } catch ( java.io.IOException e ) { com.example.android.hashseparator.QueryUtils.exception = "Problem making the HTTP request." ; } return response ; } 
@ java.lang.Override public void onFocusChange ( android.view.View v , boolean hasFocus ) { if ( ! hasFocus ) { if ( ( ( mCardNumber ) != null ) && ( ( mCardNumber . length () ) > 12 ) ) { if ( ( mType ) == ( com.vinaygaba.creditcardview.CardType.AUTO ) ) { mCardTypeView . setBackgroundResource ( getLogo () ) ; } mCardNumberView . setText ( getFormattedCardNumber ( addSpaceToCardNumber () ) ) ; } } } 
public void MedienBrowser ( javafx.event.ActionEvent event ) { javafx.stage.FileChooser fileChooser = new javafx.stage.FileChooser () ; fileChooser . setTitle ( "Open Media File" ) ; java.io.File file = fileChooser . showOpenDialog ( this . getScene () . getWindow () ) ; if ( file != null ) { tbxMedienBrowser . setUserData ( file ) ; tbxMedienBrowser . setText ( file . getAbsolutePath () ) ; } } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu , menu ) ; android.support.v7.widget.SearchView searchView = ( ( android.support.v7.widget.SearchView ) ( android.support.v4.view.MenuItemCompat . getActionView ( menu . findItem ( R.id.action_search ) ) ) ) ; android.app.SearchManager searchManager = ( ( android.app.SearchManager ) ( getSystemService ( com.example.karthik.listview.SEARCH_SERVICE ) ) ) ; searchView . setSearchableInfo ( searchManager . getSearchableInfo ( getComponentName () ) ) ; searchView . setOnQueryTextListener ( this ) ; return true ; } 
@ java.lang.Override public void onConnected ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = com.google.android.gms.location.LocationRequest . create () ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; mLocationRequest . setInterval ( 2000 ) ; if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( getApplicationContext () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; } } 
public void onClick ( android.content.DialogInterface dialog , int id ) { int newActionId = com.ha81dn.webausleser.backend.DatabaseHandler . getNewId ( db , "actions" ) ; copyAction ( db , a . getId () , newActionId , sortNr , com.ha81dn.webausleser.backend.DatabaseHandler . getUniqueCopiedActionName ( activity , db , input . getText () . toString () . trim () , com.ha81dn.webausleser.MainActivity.sourceId ) , idShow , false ) ; com.ha81dn.webausleser.MainActivity.appActionMode . finish () ; db . close () ; com.ha81dn.webausleser.MainActivity . displaySection ( activity , "SOURCE" , idShow , null , newActionId ) ; } 
@ java.lang.Override public void mouseDragged ( int oldx , int oldy , int newx , int newy ) { if ( ! ( active ) ) return; consumeEvent () ; int diff = newy - oldy ; if ( diff != 0 ) scrolling . dragged ( ( - diff ) ) ; } 
public int compareTo ( java.lang.Object t ) { if ( ( votes ) < ( ( ( Translator ) ( t ) ) . votes ) ) return 1 ; else if ( ( votes ) > ( ( ( Translator ) ( t ) ) . votes ) ) return - 1 ; else return 0 ; } 
@ java.lang.Override protected void controlUpdate ( float tpf ) { if ( ! ( com.nx.util.jme3.base.SpatialUtil . hasControl ( originalSpatial , skeletonControl ) ) ) { cachedControls . remove ( skeletonControl ) ; removeFromDebug ( originalSpatial , skeletonDebugger ) ; return; } if ( ! ( skeletonDebugger . getLocalTransform () . equals ( originalSpatial . getWorldTransform () ) ) ) { skeletonDebugger . setLocalTransform ( originalSpatial . getWorldTransform () ) ; } } 
public com.youcruit.billogram.objects.response.billogram.BillogramResponse commandCredit ( java.lang.String billogramId , java.math.BigDecimal amount , com.youcruit.billogram.client.BillogramClient.CreditMode creditMode ) throws java.io.IOException { java.util.Map < java.lang.String , java.lang.Object > creditRequest = new java.util.HashMap <> () ; creditRequest . put ( "mode" , creditMode ) ; creditRequest . put ( "amount" , amount ) ; final java.net.URI uri = httpClient . pathToUri ( "billogram" , billogramId , "command" , "credit" ) ; return httpClient . sync ( uri , creditRequest , com.youcruit.billogram.client.http.HttpClient.Method.POST , com.youcruit.billogram.objects.response.billogram.BillogramResponse . class ) ; } 
public bufmgr.PageId newPage ( bufmgr.Page firstpage , int howmany ) throws chainexception.ChainException { bufmgr.PageId id = new bufmgr.PageId () ; try { Minibase.DiskManager . allocate_page ( id , howmany ) ; } catch ( java.lang.Exception e ) { throw new bufmgr.DiskMgrException ( e , ( ( "Unable to allocate " + howmany ) + " pages." ) ) ; } pinPage ( id , firstpage , false ) ; return id ; } 
public boolean regConsumer ( com.seveniu.consumer.Consumer consumer ) { if ( this . consumerMap . containsKey ( consumer . getName () ) ) { logger . warn ( "consumer '{}' has reg" , consumer . getName () ) ; return false ; } else { this . consumerMap . put ( consumer . getName () , consumer ) ; logger . info ( "reg consumer : {}" , consumer ) ; consumer . start () ; return true ; } } 
public void modulo ( pl.kryptografia.rabin.bignum.BigNum modulus ) { while ( absGreaterOrEqualTo ( modulus ) ) { pl.kryptografia.rabin.bignum.BigNum x = new pl.kryptografia.rabin.bignum.BigNum ( modulus ) ; int shift = findMaximumLeftShift ( x ) ; x . shiftLeft ( shift ) ; absSubtract ( x ) ; } if ( ( sign ) == ( - 1 ) ) { add ( modulus ) ; sign = 1 ; } } 
public cn.com.hellowood.rocketmq.util.SendResult sendOneWayMessage ( cn.com.hellowood.rocketmq.util.Message message ) { cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( "MQ start send ONE_WAY message " ) ; long startTimestamp = java.lang.System . currentTimeMillis () ; producer . sendOneway ( message ) ; long costTime = ( java.lang.System . currentTimeMillis () ) - startTimestamp ; cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( ( ( "MQ completed send ONE_WAY message in " + costTime ) + " ms" ) ) ; return null ; } 
@ java.lang.Override protected void listItemClicked ( int position ) { if ( position != 0 ) { edu.mit.mitmobile2.shuttles.model.MITShuttleStopWrapper stop = adapter . getItem ( ( position - 1 ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , edu.mit.mitmobile2.shuttles.activities.ShuttleStopActivity . class ) ; intent . putExtra ( Constants.ROUTE_ID_KEY , routeId ) ; intent . putExtra ( Constants.STOP_ID_KEY , stop . getId () ) ; startActivity ( intent ) ; } } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { if ( ( LocationUtil.mMarkers . get ( marker ) ) != null ) { mMarkerId = LocationUtil.mMarkers . get ( marker ) ; android.util.Log . i ( "Position of arraylist" , ( ( mMarkerId ) + "" ) ) ; } return false ; } 
private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color , int size ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , size ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } 
private java.lang.String cleanupDedicatoryPrayer ( java.lang.String originalDed ) { try { java.lang.String removeCommaEscapes = originalDed . replaceAll ( "\\\\\"" , "\"" ) ; return org.apache.commons.lang3.StringEscapeUtils . unescapeJava ( removeCommaEscapes ) ; } catch ( java.lang.Exception ex ) { assert false ; ex . printStackTrace () ; } return "" ; } 
private org.embulk.input.kafka.data.Record getRecord ( byte [] message ) throws org.embulk.input.kafka.exception.DataTypeNotFoundException { org.embulk.input.kafka.data.Record record = null ; switch ( format ) { case Csv : record = org.embulk.input.kafka.data.DataConverter . convert ( message , "," , enclosedChar ) ; break; case Tsv : record = org.embulk.input.kafka.data.DataConverter . convert ( message , "\t" , enclosedChar ) ; break; case Ltsv : record = org.embulk.input.kafka.data.DataConverter . convertFromLtsv ( message , enclosedChar ) ; break; case Json : record = org.embulk.input.kafka.data.DataConverter . convertFromJson ( message ) ; break; case MessagePack : break; } return record ; } 
@ java.lang.Override public void delete ( java.lang.String id ) { for ( int i = 0 ; i < ( arraySize ) ; i ++ ) { if ( ( simpleArray . get ( i ) . getId () . equals ( id ) ) && ( ( simpleArray . get ( i ) ) != null ) ) { this . simpleArray . delete ( java.lang.Integer . parseInt ( simpleArray . get ( i ) . getId () ) ) ; break; } } } 
@ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER_USERID ) int id ) { jdbclib.IConnector db ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } 
private java.awt.image.BufferedImage resizeImage ( java.awt.image.BufferedImage originalImage , com.images3.data.impl.ResizingConfig resizingConfig ) { java.awt.image.BufferedImage resizedImage = null ; if ( resizingConfig . isKeepProportions () ) { resizedImage = org.imgscalr.Scalr . resize ( originalImage , Scalr.Method.SPEED , Scalr.Mode.AUTOMATIC , resizingConfig . getWidth () , resizingConfig . getHeight () ) ; } else { resizedImage = org.imgscalr.Scalr . resize ( originalImage , Scalr.Method.SPEED , Scalr.Mode.FIT_EXACT , resizingConfig . getWidth () , resizingConfig . getHeight () ) ; } return resizedImage ; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { outState . putShort ( slapshotapp.game.tictactoe.SetUpGame.GAME_BOARD_DIMENSION_KEY , _GameBoardDimensions ) ; outState . putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_ONE_NAME_KEY , _PlayerOne . GetName () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_ONE_ICON_KEY , _PlayerOne . GetSymbolValue () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_TWO_NAME_KEY , _PlayerTwo . GetName () ) ; outState . putCharSequence ( slapshotapp.game.tictactoe.SetUpGame.PLAYER_TWO_ICON_KEY , _PlayerTwo . GetSymbolValue () ) ; super . onSaveInstanceState ( outState ) ; } 
@ java.lang.Override public void onErrorResponse ( com.android.volley.VolleyError error ) { java.util.HashMap < java.lang.String , java.lang.String > errorProperties = new java.util.HashMap <> () ; errorProperties . put ( org.wordpress.android.ui.accounts.login.MagicLinkRequestFragment.ERROR_KEY , error . getMessage () ) ; org.wordpress.android.analytics.AnalyticsTracker . track ( AnalyticsTracker.Stat.LOGIN_MAGIC_LINK_FAILED , errorProperties ) ; if ( ( getView () ) != null ) { android.support.design.widget.Snackbar . make ( getView () , R.string.magic_link_unavailable_error_message , Snackbar.LENGTH_SHORT ) ; } if ( ( mListener ) != null ) { mListener . onEnterPasswordRequested () ; } } 
public static int readInt ( java.util.Scanner scanner , java.lang.String message ) { java.lang.Integer res = null ; do { java.lang.System.out . print ( ( message + " " ) ) ; try { res = scanner . nextInt () ; scanner . nextLine () ; } catch ( java.util.InputMismatchException e ) { java.lang.System.out . println ( "Invalid value" ) ; scanner . nextLine () ; } } while ( res == null ) ; return res ; } 
public int compare ( java.lang.Object o1 , java.lang.Object o2 ) { com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry x1 = ( ( com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry ) ( o1 ) ) ; com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry x2 = ( ( com.sun.messaging.jmq.jmsserver.multibroker.raptor.TakingoverEntry.XidEntry ) ( o2 ) ) ; return java.lang.Long . compare ( x1.brokerSession . getTimestamp () , x2.brokerSession . getTimestamp () ) ; } 
public void modifyautosmssms ( int id , java.lang.String number , java.lang.String message ) { android.content.ContentValues values = new android.content.ContentValues () ; values . put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_NUMBER , number ) ; values . put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_MESSAGE , message ) ; android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . update ( com.abezukor.abezukor.autosms.DBHandler.TABLE_AUTOSMSTABLE , values , ( "_id=" + id ) , null ) ; db . close () ; } 
private java.lang.String calculateStatus ( org.traccar.model.Position position ) { if ( position . getAttributes () . containsKey ( Event.KEY_ALARM ) ) { return "0xF841" ; } else if ( ( position . getSpeed () ) < 1.0 ) { return "0xF020" ; } else { return "0xF11C" ; } } 
public static com.oasisfeng.android.ui.Dialogs.Builder buildAlert ( final android.content.Context context , final java.lang.CharSequence title , final java.lang.CharSequence message ) { final com.oasisfeng.android.ui.Dialogs.Builder builder = new com.oasisfeng.android.ui.Dialogs.Builder ( context ) ; builder . setCancelable ( true ) ; if ( title != null ) builder . setTitle ( title ) ; if ( message != null ) builder . setMessage ( message ) ; return builder ; } 
private static int whereToGo ( int situation , boolean findUpper ) { switch ( situation ) { case 1 : if ( findUpper ) return 0 ; else return 1 ; case 2 : if ( findUpper ) return 2 ; else return 0 ; case 3 : if ( findUpper ) return 2 ; else return 1 ; default: if ( findUpper ) return 1 ; else return 2 ; } } 
@ android.support.annotation.Nullable public static java.io.File createImageFile ( final long orderNumber ) { final java.lang.String imageFileName = ( ( com.bionic.kvt.serviceapp.GlobalConstants.LMRA_PHOTO_FILE_NAME ) + orderNumber ) + "_" ; try { return java.io.File . createTempFile ( imageFileName , ".jpg" , com.bionic.kvt.serviceapp.utils.Utils . getOrderDir ( orderNumber ) ) ; } catch ( java.io.IOException e ) { com.bionic.kvt.serviceapp.Session . addToSessionLog ( ( "Error on creating LMRA file: " + ( e . toString () ) ) ) ; return null ; } } 
private void connect ( java.lang.String server , java.lang.Integer port ) throws java.io.IOException { try { socket = new java.net.Socket ( server , port ) ; socket . setKeepAlive ( false ) ; in = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () , "UTF-8" ) ) ; out = new java.io.OutputStreamWriter ( socket . getOutputStream () , "UTF-8" ) ; } catch ( java.io.IOException e ) { reconnect () ; } } 
public synchronized void syncNewDriver ( java.lang.String name , java.lang.String street , java.lang.String city , java.lang.String state , java.lang.String zip ) { com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver sendInfoDriver = new com.example.android.rowanparkingpass.Networking.SendInfo.SendInfoDriver () ; org.json.JSONObject json ; int oldID = db . addDriver ( name , street , city , arrayOfStates [ java.lang.Integer . parseInt ( state ) ] . valueOf ( arrayOfStates [ java.lang.Integer . parseInt ( state ) ] . name () ) . toString () , zip ) ; sendInfoDriver . addDriver ( oldID , name , street , city , state , zip ) ; return; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( CAMERA_PIC_REQUEST ) ) { if ( data != null ) { android.graphics.Bitmap image = ( ( android.graphics.Bitmap ) ( data . getExtras () . get ( "data" ) ) ) ; android.widget.ImageView imageview = ( ( android.widget.ImageView ) ( findViewById ( R.id.imglogo ) ) ) ; imageview . setImageBitmap ( image ) ; new com.example.audi.uaspenir.Main.PostTask () . execute ( imageToString ( image ) , "test" ) ; buatsnackbar ( "Uploading image . . ." ) ; } } } 
public void increaseWorkSpaceLevel ( de.dfki.vsm.editor.Node node ) { mIgnoreMouseInput = true ; clearCurrentWorkspace () ; de.dfki.vsm.model.sceneflow.SuperNode superNode = ( ( de.dfki.vsm.model.sceneflow.SuperNode ) ( node . getDataNode () ) ) ; getSceneFlowManager () . addActiveSuperNode ( superNode ) ; mSceneFlowEditor . addPathComponent ( superNode ) ; mGridManager . update ( superNode ) ; showCurrentWorkSpace () ; } 
public static void registerSingleThreadVirtualTarget ( java.lang.Thread thread , java.lang.String targetName ) { pj.pr.target.VirtualTarget virtualTarget = pj.PjRuntime.targetExecutorMap . get ( targetName ) ; if ( null == virtualTarget ) { virtualTarget = new pj.pr.target.SingleThreadVirtualTarget ( targetName , thread ) ; pj.PjRuntime.targetExecutorMap . put ( targetName , virtualTarget ) ; } else {} } 
public static com.badlogic.gdx.scenes.scene2d.ui.CheckBox addCheckBox ( java.lang.String labelText , com.badlogic.gdx.scenes.scene2d.ui.Table parent , com.badlogic.gdx.scenes.scene2d.ui.Skin skin ) { com.badlogic.gdx.scenes.scene2d.ui.CheckBox info = new com.badlogic.gdx.scenes.scene2d.ui.CheckBox ( labelText , skin ) ; parent . add ( info ) . right () . fillX () . expandX () . row () ; return info ; } 
public static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; } 
private com.github.com.ricardobaumann.jankenpon.Player.MOVE getMove ( int index ) { com.github.com.ricardobaumann.jankenpon.Player.MOVE [] moves = com.github.com.ricardobaumann.jankenpon.Player.MOVE . values () ; int movesAmount = moves.length ; int moveIndex = ( index > movesAmount ) ? index / movesAmount : index ; return moves [ ( moveIndex - 1 ) ] ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.util.List < org.n52.series.api.v1.db.da.beans.ProcedureEntity > getAllInstances ( org.n52.series.api.v1.db.da.DbQuery parameters ) throws org.n52.series.api.v1.db.da.DataAccessException { org.hibernate.Criteria criteria = getDefaultCriteria ( "procedure" ) ; if ( hasTranslation ( parameters , org.n52.series.api.v1.db.da.beans.I18nProcedureEntity . class ) ) { parameters . addLocaleTo ( criteria , org.n52.series.api.v1.db.da.beans.I18nProcedureEntity . class ) ; } criteria = parameters . addDetachedFilters ( "procedure" , criteria ) ; parameters . addPagingTo ( criteria ) ; return ( ( java.util.List < org.n52.series.api.v1.db.da.beans.ProcedureEntity > ) ( criteria . list () ) ) ; } 
public static java.lang.String formatQueryString ( java.lang.String url , java.lang.String field , java.lang.Enum value ) { if ( null == value ) { return url ; } return url + ( url . contains ( "?" ) ? ( ( "&" + field ) + "=" ) + value : ( ( "?" + field ) + "=" ) + value ) ; } 
void onScanFilterEnableDisabled ( int action , int status , int clientIf ) { if ( com.android.bluetooth.gatt.GattService.DBG ) { android.util.Log . d ( com.android.bluetooth.gatt.GattService.TAG , ( ( ( ( ( "onScanFilterEnableDisabled() - clientIf=" + clientIf ) + ", status=" ) + status ) + ", action=" ) + action ) ) ; } if ( status != 0 ) {} mStateMachine . callbackDone () ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_sub_category_layout ) ; mMainCategoryItem = ( ( com.accessbox.category.MainCategoryItem ) ( getIntent () . getSerializableExtra ( "Category" ) ) ) ; position = getIntent () . getIntExtra ( "position" , 0 ) ; setupFab () ; setUpAdapter () ; } 
public static boolean pressed ( java.lang.String key ) { if ( ( key == null ) || ( ( apcs.Window.keyMap ) == null ) ) return false ; else if ( apcs.Window.keyMap . containsKey ( key ) ) return apcs.Window . getInstanceFromThread () . isVirtualKeyPressed ( apcs.Window.keyMap . get ( key ) ) ; else if ( ( key . length () ) > 0 ) return apcs.Window.key . pressed ( key . charAt ( 0 ) ) ; return false ; } 
public boolean addEdge ( boolean isAnySymbol , java.lang.String transition , int sourceVertex , int sinkVertex ) { if ( ( sourceVertex < ( graphStructure . size () ) ) && ( sinkVertex < ( graphStructure . size () ) ) ) { graphStructure . get ( sourceVertex ) . getValue () . add ( new com.sonechka.graph.Edge ( isAnySymbol , transition , sourceVertex , sinkVertex ) ) ; return true ; } return false ; } 
public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } consumption . setValue ( value ) ; setChanged ( true ) ; } 
@ java.lang.Override public org.apache.jmeter.report.processor.ResultData customizeResult ( org.apache.jmeter.report.processor.ResultData result ) { org.apache.jmeter.report.processor.MapResultData customizedResult = new org.apache.jmeter.report.processor.MapResultData () ; customizedResult . setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_RESULT , result ) ; if ( ( extraOptions ) != null ) { org.apache.jmeter.report.processor.MapResultData extraResult = new org.apache.jmeter.report.processor.MapResultData () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > extraEntry : extraOptions . getProperties () . entrySet () ) { extraResult . setResult ( extraEntry . getKey () , new org.apache.jmeter.report.processor.ValueResultData ( extraEntry . getValue () ) ) ; } customizedResult . setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_EXTRA_OPTIONS , extraResult ) ; } return customizedResult ; } 
@ java.lang.Override protected void registerArgumentValueAnalyses ( edu.psu.cse.siis.ic3.Ic3CommandLineArguments commandLineArguments ) { edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerDefaultArgumentValueAnalyses () ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis ( "classType" , new edu.psu.cse.siis.ic3.ClassTypeValueAnalysis () ) ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis ( "authority" , new edu.psu.cse.siis.ic3.AuthorityValueAnalysis () ) ; edu.psu.cse.siis.coal.arguments.ArgumentValueManager . v () . registerArgumentValueAnalysis ( "path" , new edu.psu.cse.siis.ic3.PathValueAnalysis () ) ; } 
private void writeToFile ( java.lang.String stringToFile ) throws tasknote.shared.TaskListIOException { try { byte [] bufferMemory = stringToFile . getBytes () ; int totalNumberOfBytesToWrite = bufferMemory.length ; int maxWriteLength = magicValuesRetriever . getBufferSize () ; java.io.BufferedOutputStream fileWriter = new java.io.BufferedOutputStream ( new java.io.FileOutputStream ( tasknote.storage.FileManipulation.textFile ) ) ; loopWriteOneObjectToFile ( bufferMemory , totalNumberOfBytesToWrite , maxWriteLength , fileWriter ) ; fileWriter . close () ; } catch ( java.io.IOException ioe ) { throw new tasknote.shared.TaskListIOException () ; } } 
public void setDataTermino ( java.lang.String dataTermino ) { int dia = java.lang.Integer . parseInt ( dataTermino . substring ( 0 , 2 ) ) ; int mes = ( java.lang.Integer . parseInt ( dataTermino . substring ( 3 , 5 ) ) ) - 1 ; int ano = java.lang.Integer . parseInt ( dataTermino . substring ( 6 ) ) ; java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( ano , mes , dia ) ; this . dataTermino = c ; } 
private void writeImports ( java.io.Writer writer , java.lang.String className ) throws java.io.IOException { final java.lang.String currentPackageName = ru.spbau.mit.SimpleImplementor . getPackageName ( className ) ; if ( ! ( currentPackageName . isEmpty () ) ) { writer . append ( "package " ) . append ( currentPackageName ) . append ( ";" ) . append ( ru.spbau.mit.SimpleImplementor.NEW_LINE ) ; } } 
@ java.lang.Override public void removeChildGui ( org.eclipse.e4.ui.model.application.ui.MUIElement child , org.eclipse.e4.ui.model.application.ui.MElementContainer < org.eclipse.e4.ui.model.application.ui.MUIElement > element ) { org.eclipse.e4.ui.model.application.ui.advanced.MPerspectiveStack stack = ( ( org.eclipse.e4.ui.model.application.ui.advanced.MPerspectiveStack ) ( ( org.eclipse.e4.ui.model.application.ui.MElementContainer < ? > ) ( element ) ) ) ; org.eclipse.e4.ui.model.application.ui.advanced.MPerspective p = ( ( org.eclipse.e4.ui.model.application.ui.advanced.MPerspective ) ( child ) ) ; com.vaadin.ui.Button button = perspective_button . remove ( p ) ; if ( button != null ) { perspectiveSwitcherPanel . removeComponent ( button ) ; button2ContextMenu . remove ( button ) ; } refreshPerspectiveStackVisibility ( stack ) ; } 
public boolean updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return updateStorageLocation ( ctx ) ; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return true ; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; return true ; } 
private boolean canDelete ( java.util.List < org.eclipse.core.resources.IResource > resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( resources . isEmpty () ) { return false ; } for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isPhantom () ) { return false ; } } return true ; } 
public void draw ( java.awt.Graphics g , boolean showEdges , boolean showDelaunay , boolean showSites , boolean showData ) { this . g = g ; g2 = ( ( java.awt.Graphics2D ) ( g ) ) ; g2 . setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING , java.awt.RenderingHints.VALUE_ANTIALIAS_ON ) ; checkMovement () ; drawVoronoiArea () ; drawBounding () ; drawVoronoiCluster () ; drawClusterNodes ( showSites , showData ) ; drawDelaunay ( showDelaunay ) ; drawEdges ( showEdges ) ; drawTestEdge () ; drawNodes () ; } 
@ java.lang.Override protected boolean onBalloonTap ( int index , com.google.android.maps.OverlayItem item ) { if ( item instanceof nu.placebo.whatsup.model.ExtendedOverlayItem ) { android.content.Intent startAnnotation = new android.content.Intent ( activity , nu.placebo.whatsup.activity.AnnotationActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "nid" , ( ( nu.placebo.whatsup.model.ExtendedOverlayItem ) ( item ) ) . getId () ) ; startAnnotation . putExtras ( bundle ) ; activity . startActivity ( startAnnotation ) ; } return true ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { if ( ! ( mNavigationDrawerFragment . isDrawerOpen () ) ) { switch ( internal_layout ) { case LAYOUT_LIST : getMenuInflater () . inflate ( R.menu.main , menu ) ; break; case LAYOUT_TRACKING : case LAYOUT_SEARCH : case LAYOUT_ABOUT : default: getMenuInflater () . inflate ( R.menu.main_reduced , menu ) ; break; } restoreActionBar () ; return true ; } return super . onCreateOptionsMenu ( menu ) ; } 
public static java.lang.String getProductPathFile ( java.lang.String productId , java.lang.String productName ) { java.lang.String path = ( ( ( ( ( com.tana.utilities.VariableUtility . getCurrentDir () ) + ( com.tana.utilities.VariableUtility.IMG_PATH_PRODUCTS ) ) + productId ) + "_" ) + ( productName . trim () ) ) + "/" ; com.tana.utilities.VariableUtility.LOGGER . info ( ( "Get product path file : " + path ) ) ; return path ; } 
@ java.lang.Override public void call ( com.moac.android.refuge.activity.MainActivity.CirclesViewModel circlesViewModel ) { mapFragment . clear () ; if ( ( circlesViewModel.maxFlow ) > 0 ) { com.moac.android.refuge.util.Visualizer . drawCountries ( refugeeDataStore , mapFragment , circlesViewModel.countries , circlesViewModel.maxFlow ) ; } else if ( ! ( circlesViewModel.countries . isEmpty () ) ) { android.widget.Toast . makeText ( this , "No refugee flows found" , Toast.LENGTH_LONG ) . show () ; } } 
@ java.lang.Override public void visitMethodInsn ( int opcode , java.lang.String owner , java.lang.String name , java.lang.String desc ) { if ( ( ( done ) || ( opcode != ( org.objectweb.asm.Opcodes.INVOKESPECIAL ) ) ) || ( ! ( org.caesarj.runtime.mixer.ConstructorMixer . isConstructor ( name ) ) ) ) { super . visitMethodInsn ( opcode , owner , name , desc ) ; return; } done = true ; super . visitMethodInsn ( opcode , this . owner , name , this . desc ) ; } 
private boolean better ( java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode == ( RESULT_OK ) ) { io.emqtt.emqandroidtoolkit.model.Connection connection = data . getParcelableExtra ( ConnectionActivity.EXTRA_CONNECTION ) ; if ( null != connection ) { switch ( requestCode ) { case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_ADD : mConnectionAdapter . notifyItemInserted ( ( ( mConnectionResults . size () ) - 1 ) ) ; break; case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_EDIT : mConnectionAdapter . notifyItemChanged ( mPosition ) ; break; default: break; } } } } 
private void init ( com.jaspersoft.jasperserver.jaxrs.client.core.SessionStorage sessionStorage ) { com.jaspersoft.jasperserver.jaxrs.client.core.RestClientConfiguration configuration = sessionStorage . getConfiguration () ; contentType = ( ( configuration . getContentMimeType () ) == ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML ; acceptType = ( ( configuration . getAcceptMimeType () ) == ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML ; headers = new javax.ws.rs.core.MultivaluedHashMap < java.lang.String , java.lang.String > () ; usersWebTarget = sessionStorage . getRootTarget () . path ( "/rest_v2" ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( duringDetail . getVisibility () ) == ( android.view.View.GONE ) ) { duringDetail . setVisibility ( View.VISIBLE ) ; duringDetail . startAnimation ( fadeIn ) ; } else { duringDetail . setVisibility ( View.GONE ) ; duringDetail . startAnimation ( fadeOut ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.btn_start : startLevel ( 0 ) ; break; case R.id.btn_level_easy : startLevel ( 1 ) ; break; case R.id.btn_level_medium : startLevel ( 2 ) ; break; case R.id.btn_level_difficult : startLevel ( 3 ) ; break; } } 
public static void activeClock ( int id ) { mine.android.api.modules.ClockEntry clockEntry = mine.android.api.ClockEntryAPI . getById ( id ) ; java.util.Calendar nextAlarmTime = mine.android.api.AlarmAPI . getNextAlarmTime ( clockEntry ) ; android.util.Log . i ( ( "next alarm time for id: " + id ) , nextAlarmTime . getTime () . toString () ) ; mine.android.api.AlarmAPI . setTimer ( id , nextAlarmTime ) ; } 
public void destroyTool ( int slot ) { if ( ( slot == ( - 1 ) ) || ( ( slots [ slot ] ) == null ) ) return; if ( ( com.vanhal.progressiveautomation.ref.ToolHelper . tinkersType ( slots [ slot ] . getItem () ) ) >= 0 ) { addToInventory ( slots [ slot ] ) ; } else { if ( ! ( com.vanhal.progressiveautomation.PAConfig.destroyTools ) ) { addToInventory ( slots [ slot ] ) ; } } slots [ slot ] = null ; } 
public net.sf.memoranda.EventsManager.Month getMonth ( int m ) { nu.xom.Elements ms = yearElement . getChildElements ( "month" ) ; java.lang.String mm = java.lang.Integer . toString ( m ) ; for ( int i = 0 ; i < ( ms . size () ) ; i ++ ) if ( ms . get ( i ) . getAttribute ( "month" ) . getValue () . equals ( mm ) ) return new net.sf.memoranda.EventsManager.Month ( ms . get ( i ) ) ; return null ; } 
public static short categoryLevel ( java.lang.String category ) { for ( short level = 1 ; level < 101 ; level ++ ) for ( short level = 1 ; level < 101 ; level ++ ) { for ( Controlleur.Question q : Controlleur.JavaOverflow.database . getQuestions () ) {} } return 100 ; } 
public static com.tealcubegames.minecraft.spigot.versions.api.actionbars.ActionBarMessage createActionBarMessage ( java.lang.String message ) { java.lang.String serverPackageName = org.bukkit.Bukkit . getServer () . getClass () . getPackage () . getName () ; java.lang.String nmsVersion = serverPackageName . substring ( ( ( serverPackageName . lastIndexOf ( "." ) ) + 1 ) ) ; switch ( nmsVersion ) { case "v1_10_R1" : return new com.tealcubegames.minecraft.spigot.versions.actionbars.ActionBarMessageImpl ( message ) ; default: throw new org.apache.commons.lang3.NotImplementedException ( ( nmsVersion + " is not supported" ) ) ; } } 
protected void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; } 
@ java.lang.Override public int compare ( hu.schonherz.training.web.supervisor.accessories.UserResults o1 , hu.schonherz.training.web.supervisor.accessories.UserResults o2 ) { return ( ( o1 . getExamSum () ) + ( o1 . getHomeworkSum () ) ) > ( ( o2 . getExamSum () ) + ( o2 . getHomeworkSum () ) ) ? - 1 : ( ( o1 . getExamSum () ) + ( o1 . getHomeworkSum () ) ) == ( ( o2 . getExamSum () ) + ( o2 . getHomeworkSum () ) ) ? 0 : 1 ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/getGeneratedCode" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String getGeneratedCode ( @ org.springframework.web.bind.annotation.RequestParam ( value = "name" , required = true ) java.lang.String name , @ org.springframework.web.bind.annotation.RequestParam ( value = "tbName" , required = true ) java.lang.String tbName ) throws java.lang.Exception { java.lang.String generatedCode = "" ; if ( ( name . length () ) > 100 ) { return generatedCode ; } sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables tbEnum = sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables . valueOf ( tbName ) ; if ( tbEnum == null ) { return generatedCode ; } generatedCode = new sg.com.fbs.services.common.codegen.mgr.CodeGeneratorManagerBD () . getGeneratedCode ( tbEnum . getTableName () , name ) ; return generatedCode ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( savedInstanceState == null ) { android.content.Intent intent = getIntent () ; if ( intent . getBooleanExtra ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.EXTRA_SKIP_WELCOME , false ) ) { next ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.PAGE_WELCOME , null , true ) ; } else { next ( ( ( java.lang.String ) ( null ) ) , null ) ; } } else { android.util.Log . w ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.TAG , "onCreate() savedInstanceState != null" ) ; } } 
private boolean contains ( java.io.File file ) { boolean result ; try { java.lang.String sFile = file . toString () ; result = ( ( ( location . length () ) > 0 ) && ( sFile . startsWith ( location . toString () ) ) ) || ( sFile . startsWith ( location . getCanonicalPath () . toString () ) ) ; } catch ( java.io.IOException e ) { result = false ; } return result ; } 
public com.sproutigy.commons.binary.BinaryBuilder append ( java.io.InputStream inputStream ) throws com.sproutigy.commons.binary.BinaryException { try { byte [] buffer = new byte [ 4 * 1024 ] ; int readlen ; while ( ( readlen = inputStream . read ( buffer ) ) != ( Binary.EOF ) ) { append ( buffer , 0 , readlen ) ; } } catch ( java.io.IOException e ) { throw new com.sproutigy.commons.binary.BinaryException ( e ) ; } return this ; } 
public static java.lang.Character loadCharacter ( int Id ) { com.tda367.infinityrun.Utils.LoadCharacter loader = new com.tda367.infinityrun.Utils.LoadCharacter ( Id ) ; int [] levels = loader . getSaveData () ; java.lang.Character loadedCharacter = new java.lang.Character ( levels [ 0 ] , levels [ 1 ] , levels [ 2 ] , levels [ 3 ] , levels [ 3 ] , levels [ 5 ] , levels [ 6 ] , levels [ 7 ] , levels [ 8 ] , levels [ 9 ] ) ; loadedCharacter . setCharacterID ( Id ) ; return loadedCharacter ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent i = new android.content.Intent ( getActivity () , com.mintminter.simpletwitter.activity.ComposeActivity . class ) ; if ( ( mUser ) != null ) { i . putExtra ( Util.EXTRA_USER , org.parceler.Parcels . wrap ( mUser ) ) ; } getActivity () . startActivityForResult ( i , Util.REQUESTCODE_COMPOSE ) ; } 
private static long convertToUsDollar ( long quantity , long exchange ) { if ( exchange > 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( quantity ) ) / ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } else if ( exchange < 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( quantity ) ) * ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } return quantity ; } 
public void slotsChanged ( clojure.lang.IPersistentMap addedslots , java.lang.Boolean clear ) { if ( clear ) edu.buffalo.cse.sneps3.gui.business.Slot . clearSlots () ; java.util.ArrayList < edu.buffalo.cse.sneps3.gui.business.Slot > s = new java.util.ArrayList < edu.buffalo.cse.sneps3.gui.business.Slot > ( edu.buffalo.cse.sneps3.gui.business.Slot . reinitializeSlots ( addedslots , clear ) ) ; for ( edu.buffalo.cse.sneps3.gui.business.IView i : views ) { i . slotUpdate ( s , clear ) ; } } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { io.mstream.mstream.player.MStreamAudioService service = mWeakReference . get () ; if ( ( service != null ) && ( ( service.playbackManager . getPlayback () ) != null ) ) { if ( service.playbackManager . getPlayback () . isPlaying () ) { android.util.Log . d ( io.mstream.mstream.player.MStreamAudioService.TAG , "Ignoring delayed stop since the media player is in use." ) ; return; } android.util.Log . d ( io.mstream.mstream.player.MStreamAudioService.TAG , "Stopping service with delay handler." ) ; service . stopSelf () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_select_training_plan ) ; android.app.FragmentManager fragmentManager = getFragmentManager () ; android.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; com.race.planner.fragments.SelectNameFragment selectNameFragment = new com.race.planner.fragments.SelectNameFragment () ; java.lang.String tag = selectNameFragment . toString () ; fragmentTransaction . replace ( R.id.fragment_swap , selectNameFragment , tag ) ; fragmentTransaction . commit () ; } 
@ java.lang.Override public boolean accept ( T t ) { if ( ( t == null ) && ( ( this . matching ) == null ) ) { return true ; } if ( t == null ) { return false ; } return t . equals ( matching ) ; } 
private boolean tryRegister ( java.lang.String user , java.lang.String password ) { try { new PwdManager.Registration ( user , password ) ; return true ; } catch ( java.nio.file.FileAlreadyExistsException e ) { PwdManager.UI.UIUtility . errorMessage ( "Registration." , ( ( "User " + user ) + " already exists." ) ) ; return false ; } catch ( java.lang.Exception e ) { PwdManager.UI.UIUtility . errorMessage ( "Registration" , e . getMessage () ) ; return false ; } } 
public static java.util.ArrayList < dhbw.timetable.data.Appointment > GetAppointmentsOfDay ( java.util.GregorianCalendar day , java.util.ArrayList < dhbw.timetable.data.Appointment > list ) { java.util.ArrayList < dhbw.timetable.data.Appointment > dayAppointments = new java.util.ArrayList <> () ; if ( list == null ) return dayAppointments ; java.lang.String currDate = new java.text.SimpleDateFormat ( "dd.MM.yyyy" , java.util.Locale.GERMANY ) . format ( day . getTime () ) ; for ( dhbw.timetable.data.Appointment a : list ) { if ( a . getDate () . equals ( currDate ) ) { dayAppointments . add ( a ) ; } } return dayAppointments ; } 
public static boolean isUserAdmin ( net.dv8tion.jda.core.entities.User user ) { if ( com.xelitexirish.elitedeveloperbot.UserPrivs.adminUsers . contains ( user ) ) { return true ; } else { for ( net.dv8tion.jda.core.entities.Role role : user . getJDA () . getGuildById ( Constants.DISCORD_SERVER_ID ) . getMember ( user ) . getRoles () ) { if ( role . getId () . equalsIgnoreCase ( Constants.ROLE_ADMIN_ID ) ) { return true ; } } } return false ; } 
@ java.lang.Override @ org.molgenis.security.core.runas.RunAsSystem public void changePassword ( java.lang.String username , java.lang.String newPassword ) { org.molgenis.auth.MolgenisUser user = dataService . query ( org.molgenis.security.account.MOLGENIS_USER , org.molgenis.auth.MolgenisUser . class ) . eq ( org.molgenis.security.account.USERNAME , username ) . findOne () ; if ( user == null ) { throw new org.molgenis.security.user.MolgenisUserException ( java.lang.String . format ( "Unknown user [%s]" , username ) ) ; } user . setPassword ( newPassword ) ; user . setChangePassword ( false ) ; dataService . update ( org.molgenis.security.account.MOLGENIS_USER , user ) ; org.molgenis.security.account.AccountServiceImpl.LOG . info ( "Changed password of user [{}]" , username ) ; } 
public void setCurrentFile ( com.alperez.bt_microphone.rest.response.commonmodels.DeviceFile devFile ) { setCurrentTimeStart ( devFile . startTime () ) ; setCurrentDuration ( devFile . durationMillis () ) ; setCurrentPosition ( devFile . currentPosition () ) ; setCurrentSampleRate ( java.lang.Integer . toString ( devFile . sampleRate () ) ) ; setCurrentLocation ( devFile . geoLocation () ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { com.lucianofabris.booklistingapp.Volume currentVolume = adapter . getItem ( position ) ; android.net.Uri webPageUri = android.net.Uri . parse ( currentVolume . getInfoLink () ) ; android.content.Intent webIntent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , webPageUri ) ; startActivity ( webIntent ) ; } 
@ org.auraframework.system.Annotations.AuraEnabled public static org.auraframework.instance.Application getApplication ( @ org.auraframework.system.Annotations.Key ( value = "name" , loggable = true ) java.lang.String name , @ org.auraframework.system.Annotations.Key ( value = "attributes" ) java.util.Map < java.lang.String , java.lang.Object > attributes ) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.service.DefinitionService definitionService = org.auraframework.Aura . getDefinitionService () ; org.auraframework.def.DefDescriptor < org.auraframework.def.ApplicationDef > desc = definitionService . getDefDescriptor ( name , org.auraframework.def.ApplicationDef . class ) ; definitionService . updateLoaded ( desc ) ; return org.auraframework.Aura . getInstanceService () . getInstance ( desc , attributes ) ; } 
@ java.lang.Override public void onReceive ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull android.content.Intent intent ) { super . onReceive ( context , intent ) ; timber.log.Timber . d ( "Intent Received" ) ; if ( QuoteSyncJob.ACTION_DATA_UPDATED . equals ( intent . getAction () ) ) { android.appwidget.AppWidgetManager appWidgetManager = android.appwidget.AppWidgetManager . getInstance ( context ) ; int [] appWidgetIds = appWidgetManager . getAppWidgetIds ( new android.content.ComponentName ( context , getClass () ) ) ; appWidgetManager . notifyAppWidgetViewDataChanged ( appWidgetIds , R.id.stock_list ) ; } } 
private void dispatchAckSend ( org.json.JSONObject income ) throws org.json.JSONException { org.json.JSONObject data = income . getJSONObject ( "data" ) ; if ( ( chatListener ) != null ) { ru.mail.park.chat.models.Message message = new ru.mail.park.chat.models.Message ( data , getContext () ) ; chatListener . onAcknowledgeSendMessage ( message ) ; } } 
@ java.lang.Override public org.nd4j.linalg.api.ndarray.INDArray scalar ( float value ) { if ( ( dtype ) == ( DataBuffer.Type.FLOAT ) ) return create ( new float [] { value } , new int [] { 1 , 1 } , new int [] { 1 , 1 } , 0 ) ; else if ( ( dtype ) == ( DataBuffer.Type.DOUBLE ) ) return scalar ( ( ( double ) ( value ) ) ) ; else return scalar ( ( ( int ) ( value ) ) ) ; } 
public static void showPlayers ( final games.strategy.engine.framework.IGame game , final java.awt.Component parent ) { final games.strategy.triplea.ui.PlayersPanel panel = new games.strategy.triplea.ui.PlayersPanel ( game . getPlayerManager () , game . getData () ) ; javax.swing.JOptionPane . showMessageDialog ( javax.swing.JOptionPane . getFrameForComponent ( parent ) , panel , "Players" , javax.swing.JOptionPane.PLAIN_MESSAGE ) ; } 
public com.tetris.saar.tetris.Blocks moveLeft ( com.tetris.saar.tetris.Blocks block , int [] [] board ) { com.tetris.saar.tetris.Blocks temp = block . getNextBlock () ; temp . setPlace ( block . getPlace () [ 0 ] , block . getPlace () [ 1 ] ) ; setEmptySpaceBlockPos ( temp , board ) ; return temp ; } 
public void initProgram () { vertexHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aPosition" ) ; textureHandle = android.opengl.GLES20 . glGetAttribLocation ( mProgram , "aTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; sTextureHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "sTexture" ) ; uMVPMatrixHandle = android.opengl.GLES20 . glGetUniformLocation ( mProgram , "uMVPMatrix" ) ; } 
@ java.lang.Override public void setEnabled ( boolean enabled ) { super . setEnabled ( enabled ) ; if ( ( isProgress ) || ( ( mSuccessAnimationState ) >= ( com.miruker.fabprogress.Fab.SUCCESS_ANIMATION.ON ) ) ) { setAlpha ( 1.0F ) ; } else { setAlpha ( ( enabled ? 1.0F : com.miruker.fabprogress.Fab.FAB_DISABLED_ALPHA ) ) ; } } 
public void remove ( java.lang.String key ) { com.cdoframework.cdolib.data.cdo.Field objExt = hmItem . remove ( key ) ; if ( ( ( objExt != null ) && ( ( objExt . getType () . getDataType () ) == ( com.cdoframework.cdolib.base.DataType.FILE_TYPE ) ) ) && ( ! ( key . contains ( "." ) ) ) ) { ( fileCount ) -- ; } } 
@ java.lang.SafeVarargs public static < T > java.util.List < T > toList ( T . . . values ) { java.util.List < T > list = new java.util.ArrayList < T > ( values.length ) ; for ( T val : values ) { list . add ( val ) ; } return list ; } 
private java.lang.String [] solveConfirmationRedeemMCoupon ( java.lang.String message ) { org.json.JSONObject json = new org.json.JSONObject ( message ) ; java.lang.String [] params = new java.lang.String [ 4 ] ; params [ 2 ] = json . getString ( "signaturemerchant" ) ; params [ 3 ] = json . getString ( "signatureissuer" ) ; return params ; } 
private org.esbtools.message.admin.model.MetadataField searchField ( org.esbtools.message.admin.model.MetadataField tree , org.esbtools.message.admin.model.MetadataField field ) { org.esbtools.message.admin.model.MetadataField result = null ; if ( ( tree != null ) && ( field != null ) ) { if ( tree . getId () . equals ( field . getId () ) ) { return tree ; } else { for ( org.esbtools.message.admin.model.MetadataField child : tree . getChildren () ) { org.esbtools.message.admin.model.MetadataField dfsResult = searchField ( child , field ) ; if ( dfsResult != null ) { return dfsResult ; } } } } return result ; } 
private static java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( ! ( obj instanceof gov.gtas.model.Document ) ) return false ; final gov.gtas.model.Document other = ( ( gov.gtas.model.Document ) ( obj ) ) ; return java.util.Objects . equals ( this . documentNumber , other.documentNumber ) ; } 
public void refresh ( org.openhab.binding.antiferencematrix.internal.model.OutputPortDetails outputPortDetails ) { updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () . getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.PORT_STATUS_MESSAGE_CHANNEL ) , new org.eclipse.smarthome.core.library.types.StringType ( outputPortDetails . getStatusMessage () ) ) ; org.eclipse.smarthome.core.library.types.OnOffType power ; if ( ( outputPortDetails . getSinkPowerStatus () ) > 0 ) { power = org.eclipse.smarthome.core.library.types.OnOffType.ON ; } else { power = org.eclipse.smarthome.core.library.types.OnOffType.OFF ; } updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () . getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.POWER_CHANNEL ) , power ) ; updateStatusIfRequired ( ThingStatus.ONLINE ) ; } 
public java.util.concurrent.Future < com.sun.jersey.api.client.ClientResponse > write ( java.lang.String path , hsyndicate.rest.datatypes.FileDescriptor fi , long offset , int len , byte [] buffer ) throws java.io.IOException { hsyndicate.rest.common.WebParamBuilder builder = new hsyndicate.rest.common.WebParamBuilder ( path ) ; builder . addParam ( getAPI ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE ) ) ; builder . addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_FD , fi . getFd () ) ; builder . addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_OFFSET , offset ) ; builder . addParam ( hsyndicate.rest.client.SyndicateUGHttpClient.WRITE_LENGTH , len ) ; return this . client . postAsync ( builder . build () , buffer ) ; } 
@ java.lang.Override public boolean removeAppointment ( java.lang.String emplid , java.lang.String id ) { try { service = getCalendarService ( emplid ) ; if ( ( service ) != null ) { cosbas.appointment.Appointment event = appointmentRepository . findById ( id ) ; appointmentRepository . delete ( event ) ; service . events () . delete ( "primary" , event . getEventID () ) . setSendNotifications ( true ) . execute () ; return true ; } } catch ( java.io.IOException e ) { java.lang.System.out . println ( "COSBAS Calendar: In GoogleCalendarService could not initialize the service" ) ; } return false ; } 
public static JyNI.PyObject PyImport_AddModule ( java.lang.String name ) { java.lang.String nm = name . intern () ; JyNI.PySystemState pss = JyNI.Py . getSystemState () ; JyNI.PyObject er = pss.modules . __finditem__ ( nm ) ; if ( er != null ) return er ; else { er = new JyNI.PyModule ( nm , new JyNI.PyNativeRefHoldingStringMap () ) ; pss.modules . __setitem__ ( nm , er ) ; return er ; } } 
public static void put ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . put ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } 
@ java.lang.Override public java.lang.String changeStorageFilePath ( java.lang.String newFilePath ) throws java.io.IOException , seedu.task.commons.events.ui.DisplayDirectoryChooserRequestEvent.DirectoryChooserOperationCancelledException { if ( newFilePath . isEmpty () ) { newFilePath = getNewFilePathFromDirectoryChooser () ; } newFilePath += "\\taskbook.xml" ; raise ( new seedu.task.commons.events.storage.StorageFilePathChangedEvent ( newFilePath , taskBook ) ) ; seedu.task.commons.util.ConfigUtil . saveConfig ( new seedu.task.commons.core.Config ( newFilePath ) , Config.USER_CONFIG_FILE ) ; return newFilePath ; } 
@ java.lang.Override public com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { int layout = 0 ; switch ( viewType ) { case VIEW_TYPE_HEADER : layout = R.layout.item_persoanl_project_header ; break; case VIEW_TYPE_ITEM : layout = R.layout.item_personal_project ; break; default: break; } android.view.View v = android.view.LayoutInflater . from ( parent . getContext () ) . inflate ( layout , parent , false ) ; return new com.ckt.ckttodo.ui.ProjectActivity.ProjectAdapter.MainVH ( v , this ) ; } 
public static FoodItem getFoodItemFromByteArray ( char [] tagCode , byte [] bytes ) { java.lang.String splittableString = new java.lang.String ( bytes ) ; java.lang.String [] strings = splittableString . split ( FoodItem.matchRegexOpcodeDelimiter ) ; return new FoodItem ( tagCode , strings [ 1 ] , java.lang.Integer . parseInt ( strings [ 2 ] ) ) ; } 
@ java.lang.Override public void processResult ( int rc , java.lang.String path , java.lang.Object ctx ) { trace . commit () ; org.apache.curator.framework.api.CuratorEvent event = new org.apache.curator.framework.imps.CuratorEventImpl ( client , org.apache.curator.framework.api.CuratorEventType.REMOVE_WATCHES , rc , path , null , ctx , null , null , null , null , null , null ) ; client . processBackgroundOperation ( operationAndData , event ) ; } 
public static com.sailing.kafka.KafkaClient getKafkaProducer ( java.lang.String kafkaName , java.util.Properties kafkaProducerProps ) { com.sailing.kafka.KafkaClient client = com.sailing.kafka.KafkaSet.kafkaMap . get ( kafkaName ) ; if ( client == null ) { client = new com.sailing.kafka.KafkaClient ( kafkaProducerProps ) ; com.sailing.kafka.KafkaClient clientTrue = com.sailing.kafka.KafkaSet.kafkaMap . putIfAbsent ( kafkaName , client ) ; if ( clientTrue != null ) { client . close () ; return clientTrue ; } else { return client ; } } return client ; } 
private void range ( KdTree.Node node , edu.princeton.cs.algs4.RectHV rect ) { if ( ! ( node.rect . intersects ( rect ) ) ) return; if ( ( node.point ) == null ) return; if ( rect . contains ( node.point ) ) range . add ( node.point ) ; range ( node.left , rect ) ; range ( node.right , rect ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_shared_preferences ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; editText = ( ( android.widget.EditText ) ( findViewById ( R.id.editText ) ) ) ; retreiveString () ; } 
public boolean setCurrentMap ( java.lang.String tag ) { net.samongi.SamongiLib.Maps.MapData map = this . maps . get ( tag ) ; if ( map == null ) return false ; net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent event = new net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent ( this . current_map , map ) ; this . current_map = map ; org.bukkit.Bukkit . getServer () . getPluginManager () . callEvent ( event ) ; return true ; } 
public void setArrayKey ( final org.verapdf.as.ASAtom key , final org.verapdf.cos.COSObject array ) { if ( ( ( this . base ) == null ) || ( ! ( this . base . setArrayKey ( key , array ) ) ) ) { org.verapdf.cos.COSObject obj = org.verapdf.cos.COSArray . construct () ; this . base = new org.verapdf.cos.COSDictionary ( key , obj ) ; } } 
public boolean remove ( spoon.reflect.code.CtBlock parentBlock , spoon.reflect.code.CtStatement fixStatement , int pos ) { spoon.reflect.code.CtStatement s = parentBlock . getStatement ( pos ) ; if ( fixStatement . equals ( s ) ) { parentBlock . getStatements () . remove ( pos ) ; return true ; } else { java.lang.System.out . println ( ( ( ( "\n fx: " + fixStatement ) + "\n" ) + s ) ) ; throw new java.lang.IllegalStateException ( "Undo: Not valid fix position" ) ; } } 
private boolean isMyIDP ( @ javax.annotation.Nonnull org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( idpName . isEmpty () ) ) || ( idpName . equals ( idp . getName () ) ) ; } 
public int pull_chunk ( byte [] data_buffer , double [] timestamp_buffer , double timeout ) throws java.lang.Exception { int [] ec = new int [] { 0 } ; long res = edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_c ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec ) ; edu.ucsd.sccn.LSL . check_error ( ec ) ; return ( ( int ) ( res ) ) ; } 
void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; } resultFragment . setResult ( result ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } 
private void onSignedInInitialize ( java.lang.String username , java.lang.String uid , java.lang.String email ) { if ( ! ( uid . isEmpty () ) ) { mUsername = username ; com.amycui.medsminder.ui.MainActivity.mUserUid = uid ; mUserEmail = email ; addNewUserToUserEntry () ; getSupportLoaderManager () . initLoader ( com.amycui.medsminder.ui.MainActivity.PRESCRIPTION_LOADER , null , this ) ; } } 
private double calculate ( us.team.awesome.calculator.math.CalculationList list ) throws us.team.awesome.calculator.util.MathException { if ( list . isEmpty () ) { return 0 ; } int index = getNextOperatorToCalculate ( list ) ; if ( index > 0 ) { us.team.awesome.calculator.math.CalculationOperator operator = ( ( us.team.awesome.calculator.math.CalculationOperator ) ( list . get ( index ) ) ) ; list = operator . calculate ( index , list ) ; return calculate ( list ) ; } else { return ( ( us.team.awesome.calculator.math.CalculationNumber ) ( list . getFirst () ) ) . getValue () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; org.greenrobot.eventbus.EventBus . getDefault () . register ( this ) ; progressDialog = new com.afollestad.materialdialogs.MaterialDialog.Builder ( this ) . title ( R.string.hacking_progress ) . content ( R.string.changing_contacts ) . progress ( false , 100 , true ) . cancelable ( false ) . build () ; } 
@ java.lang.Override public void run ( final io.dropwizard.setup.Bootstrap < ? > bootstrap , final net.sourceforge.argparse4j.inf.Namespace namespace ) throws java.lang.Exception { io.paradoxical.cassandra.loader.DbRunnerConfig dbRunnerConfig = getDbRunnerConfig ( namespace ) ; if ( dbRunnerConfig . getRecreateDatabase () ) { io.paradoxical.cassieq.commands.SetupDbCommand . recreateDatabase ( dbRunnerConfig ) ; } io.paradoxical.cassandra.loader.DbScriptsRunner dbScriptsRunner = new io.paradoxical.cassandra.loader.DbScriptsRunner ( dbRunnerConfig ) ; dbScriptsRunner . run () ; } 
public boolean bookSeats ( int no ) { if ( ( no > ( this . availability ) ) && ( no > 0 ) ) { return false ; } else { this . availability = - no ; this . booked = no ; this . setChanged () ; this . notifyObservers ( this . availability ) ; this . clearChanged () ; return true ; } } 
public static void drawSprite ( com.badlogic.gdx.graphics.g2d.Sprite sprite , com.badlogic.gdx.graphics.g2d.Batch batch , float x , float y , float w , float h ) { if ( sprite != null ) { batch . begin () ; batch . draw ( sprite , x , ( ( ( net.awhipple.zombiebird.ZBGame.SCREEN_H ) - y ) - h ) , w , h ) ; batch . end () ; } } 
public void setup ( chess.GameHistory history ) { this . setup () ; this . history = history ; for ( chess.Move m : this . history . logList ) { try { this . move ( m ) ; } catch ( chess.IllegalMoveException e ) { java.lang.System.out . println ( ( e + "History is corrupted." ) ) ; } } } 
public void setSelected ( ru.sukharev.pathtracker.utils.orm.MapPath path ) { if ( ( ( selectedPath ) != null ) && ( mObjects . contains ( selectedPath ) ) ) notifyItemChanged ( mObjects . indexOf ( selectedPath ) ) ; selectedPath = path ; if ( ( ( selectedPath ) != null ) && ( mObjects . contains ( selectedPath ) ) ) notifyItemChanged ( mObjects . indexOf ( selectedPath ) ) ; } 
@ java.lang.Override public void onSuccess ( java.lang.Void result ) { if ( isClosed () ) { initFuture . setException ( new com.datastax.driver.core.ConnectionException ( host . getSocketAddress () , "Pool was closed during initialization" ) ) ; connection . closeAsync () . force () ; } else { com.datastax.driver.core.SingleConnectionPool.logger . trace ( "Created connection pool to host {}" , host ) ; connectionRef . set ( connection ) ; open . set ( true ) ; phase = Phase.READY ; initFuture . set ( null ) ; } } 
public int getNewProductIdByCategory ( java.lang.String categoryId ) { java.util.ArrayList < sg.edu.nus.iss.universitysouvenirstore.Product > p = this . getProductListByCategory ( categoryId ) ; int largest = 0 ; for ( sg.edu.nus.iss.universitysouvenirstore.Product product : p ) { java.lang.String [] splitString = product . getProductId () . split ( "/" ) ; int splitProductId = java.lang.Integer . parseInt ( splitString [ 1 ] ) ; if ( largest <= splitProductId ) { largest = splitProductId ; } } return largest + 1 ; } 
public void addLikeOnClickHandler ( android.view.View v ) { isep.moodup.Incident item = ( ( isep.moodup.Incident ) ( v . getTag () ) ) ; session = new isep.moodup.SessionManager ( getApplicationContext () ) ; java.util.HashMap < java.lang.String , java.lang.String > user = session . getUserDetails () ; final java.lang.String idUser = user . get ( Config.KEY_USER_ID ) ; final java.lang.String idIncident = item . getId () ; addLike ( idIncident , idUser ) ; } 
public void addPost ( android.internest.com.internest.Post post ) { android.content.ContentValues values = new android.content.ContentValues () ; values . put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_TITLE , java.lang.String . valueOf ( post . getPtitle () ) ) ; values . put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_BODY , java.lang.String . valueOf ( post . getPbody () ) ) ; values . put ( android.internest.com.internest.MyDBHandler.POST_COLUMN_URL , java.lang.String . valueOf ( post . getPurl () ) ) ; if ( ( db ) == null ) { db = getWritableDatabase () ; } db . insert ( android.internest.com.internest.MyDBHandler.TABLE_POST , null , values ) ; } 
public void setIsAI ( boolean isAI ) { if ( ( this . isAI ) && ( ! isAI ) ) { com.dyllongagnier.triad.gui.controller.Players . resetAI () ; } boolean isDiff = isAI ^ ( this . isAI ) ; this . isAI = isAI ; if ( isDiff && ( this . gameInProgress () ) ) { this . takeTurn ( this . currentGame ) ; } } 
protected java.util.List < java.lang.String > splitQueryString ( java.lang.String query ) { final int qLen = query . length () ; java.util.List < java.lang.String > blocks = new java.util.ArrayList < java.lang.String > () ; for ( int index = 0 ; ( index + ( seqSize ) ) < qLen ; index += window ) { blocks . add ( query . substring ( index , ( index + ( seqSize ) ) ) ) ; } return blocks ; } 
private double vectorNorm ( java.util.HashMap < java.lang.String , java.lang.Double > inputVector ) { double result = 0.0 ; for ( java.lang.String key : inputVector . keySet () ) { double temp = inputVector . get ( key ) ; result += temp * temp ; } return java.lang.Math . sqrt ( result ) ; } 
private void changes ( java.util.List < org.jasr.currentcy.domain.Sample > changes , java.util.List < org.jasr.currentcy.domain.Sample > samples , org.jasr.currentcy.domain.Currencies currency ) { java.util.List < org.jasr.currentcy.domain.Sample > snapshots = samplerDAO . getSnapshot ( currency ) ; for ( org.jasr.currentcy.domain.Sample sample1 : samples ) { boolean result = false ; for ( org.jasr.currentcy.domain.Sample sample2 : snapshots ) { result = result || ( sample1 . equals ( sample2 ) ) ; } if ( ! result ) { changes . add ( sample1 ) ; } } } 
public void EntityDeathHelper ( org.bukkit.event.entity.EntityDeathEvent event , int damage , java.lang.Double droprate ) { java.lang.Double dropchance = prng . nextDouble () ; org.bukkit.entity.Player killer = event . getEntity () . getKiller () ; if ( dropchance >= droprate ) { return; } if ( ( plugin.configFile . getBoolean ( "mobpkonly" ) ) && ( ( killer == null ) || ( ! ( killer . hasPermission ( "playerheads.canbeheadmob" ) ) ) ) ) { return; } event . getDrops () . add ( org.shininet.bukkit.playerheads.Skull . getItemStack ( damage ) ) ; } 
public T get ( javax.servlet.ServletRequest request , java.util.Map < java.lang.String , java.lang.Object > expandContext ) { org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor < T > aa = new org.apache.ofbiz.base.util.collections.FlexibleServletAccessor.AttributeAccessor ( name , expandContext , this . attributeName , this . fma , this . needsExpand ) ; return aa . get ( request ) ; } 
private void sendStateRequest ( java.lang.Integer transactionId , java.util.Collection < java.lang.Integer > processes ) { for ( java.util.Iterator < java.lang.Integer > i = processes . iterator () ; i . hasNext () ; ) { send ( new StateRequest ( transactionId , this . id , i . next () , null ) ) ; } } 
private final void drawGrid ( android.graphics.Canvas canvas , float offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { float itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } canvas . drawLine ( ( min - 1 ) , 0 , ( min - 1 ) , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } 
private static final java.lang.String computeMD5SumFile ( java.io.File file ) throws java.io.IOException { java.security.MessageDigest md5Digest ; try { md5Digest = java.security.MessageDigest . getInstance ( "MD5" ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.io.IOException ( e ) ; } try ( java.io.InputStream is = new java.io.FileInputStream ( file ) ) { new java.security.DigestInputStream ( is , md5Digest ) ; } return new java.math.BigInteger ( 1 , md5Digest . digest () ) . toString ( 16 ) ; } 
static boofcv.alg.feature.detect.squares.SquareNode pickNot ( boofcv.alg.feature.detect.squares.SquareNode target , boofcv.alg.feature.detect.squares.SquareNode child0 , boofcv.alg.feature.detect.squares.SquareNode child1 ) { for ( int i = 0 ; i < 4 ; i ++ ) { boofcv.alg.feature.detect.squares.SquareEdge e = target.edges [ i ] ; if ( e == null ) continue; boofcv.alg.feature.detect.squares.SquareNode c = e . destination ( target ) ; if ( ( c != child0 ) && ( c != child1 ) ) return c ; } throw new java.lang.RuntimeException ( "There was no odd one out some how" ) ; } 
public void onCraftMatrixChanged ( net.minecraft.inventory.IInventory inv ) { for ( int i = 0 ; i < ( inv . getSizeInventory () ) ; i ++ ) { this . te . setInventorySlotContents ( ( i + 1 ) , inv . getStackInSlot ( i ) ) ; } if ( ( this . craftMatrix ) != null ) this . craftResult . setInventorySlotContents ( 0 , net.minecraft.item.crafting.CraftingManager . getInstance () . findMatchingRecipe ( this . craftMatrix , this . te . getWorldObj () ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.manual : break; case R.id.parking : break; case R.id.auto : android.content.Intent changeToCamera = new android.content.Intent ( getApplicationContext () , pegasus.bluetootharduino.CameraActivity . class ) ; startActivity ( changeToCamera ) ; break; case R.id.advanced : android.content.Intent changeToSettings = new android.content.Intent ( getApplicationContext () , pegasus.bluetootharduino.AdvSettingsActivity . class ) ; startActivity ( changeToSettings ) ; break; } } 
public boolean removeLine ( int index ) { java.util.List lines = readFromFile () ; try { java.nio.file.Files . delete ( path ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( Wallet . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; return false ; } lines . remove ( index ) ; writeToFile ( lines ) ; return true ; } 
public java.util.Set < D > computeTargets ( D source ) { if ( source . equals ( fromValue ) ) { return heros.flowfunc.Transfer . twoElementSet ( source , toValue ) ; } else if ( source . equals ( toValue ) ) { return java.util.Collections . emptySet () ; } else { return java.util.Collections . singleton ( source ) ; } } 
public eta.runtime.thunk.UpdateInfo push ( eta.runtime.thunk.Thunk updatee , boolean marked ) { eta.runtime.thunk.UpdateInfo ui ; if ( ( free ) != null ) { ui = free ; free = free.prev ; ui.updatee = updatee ; } else { ui = new eta.runtime.thunk.UpdateInfo ( updatee , marked ) ; } if ( ( bottom ) == null ) { bottom = top = ui ; ui.prev = null ; ui.next = null ; } else { ui.prev = top ; ui.next = null ; top.next = ui ; top = ui ; } return ui ; } 
private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } 
private static void initializeRoom ( double leftDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , hasObstacle ) ; } } 
private android.view.View getViewReview ( int position , android.view.View convertView ) { review.ReviewCell view ; if ( ( convertView == null ) || ( ! ( convertView instanceof review.ReviewCell ) ) ) { view = new review.ReviewCell ( context , null ) ; } else view = ( ( review.ReviewCell ) ( convertView ) ) ; view . setModel ( memoryData . getText ( position ) , recallData . getText ( position ) ) ; return view ; } 
public void showImage ( boolean idolized , android.widget.ImageView view ) { android.util.Log . d ( "im" , ( ( ( "ID: " + ( id ) ) + "\n URL showImage:" ) + ( card_image ) ) ) ; if ( idolized || ( is_promo ) ) new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view , false ) . execute ( card_idolized_image , card_image ) ; else new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view , false ) . execute ( card_image , card_idolized_image ) ; } 
@ java.lang.Override public java.lang.String getPath ( org.eclipse.debug.core.model.IBreakpoint breakpoint ) throws org.eclipse.core.runtime.CoreException { org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( breakpoint ) ) ; java.lang.String type = bp . getTypeName () ; if ( type != null ) { int innerClassIndex = type . indexOf ( '$' ) ; if ( innerClassIndex > 0 ) { type = type . substring ( 0 , innerClassIndex ) ; } return ( type . replace ( '.' , '/' ) ) + ".java" ; } else { return null ; } } 
public javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 0 ) ; return circleBBox ; } 
public static boolean isTaskNameMatching ( java.io.File file , java.lang.String taskName ) throws edu.brandeis.cs.nlp.mae.io.MaeIOException { try { edu.brandeis.cs.nlp.mae.io.MaeXMLParser loader = new edu.brandeis.cs.nlp.mae.io.MaeXMLParser () ; return loader . isTaskNameMatching ( file , taskName ) ; } catch ( java.io.IOException e ) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catchIOError ( file , e ) ; } catch ( org.xml.sax.SAXParseException e ) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catchSAXParseError ( e ) ; } catch ( org.xml.sax.SAXException e ) { edu.brandeis.cs.nlp.mae.io.AnnotationLoader . catchSAXError ( file , e ) ; } return false ; } 
public void write ( java.nio.ByteBuffer ip ) { try { mVpnOut . write ( ip ) ; if ( ip . hasRemaining () ) { trikita.capture.IPUtils . panic ( "incomplete write to VPN fd" ) ; } } catch ( java.io.IOException e ) { trikita.capture.IPUtils . panic ( ( "exception in write to VPN fd" + ( e . getMessage () ) ) ) ; } } 
private int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } 
private java.lang.String arrayToString ( char [] [] array ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { for ( int j = 0 ; j < ( array [ 0 ] . length ) ; j ++ ) { sb . append ( array [ i ] [ j ] ) ; } sb . append ( "\n" ) ; } return sb . toString () ; } 
private void broadcastUpdate ( final java.lang.String action , final android.bluetooth.BluetoothGattCharacteristic characteristic ) { final android.content.Intent intent = new android.content.Intent ( action ) ; if ( characteristic == null ) { this . sendBroadcast ( intent ) ; return; } android.util.Log . d ( DEBUG_TAG , characteristic . getStringValue ( 0 ) ) ; if ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.HEART_BEAT_UUID . equals ( characteristic . getUuid () ) ) { java.lang.String value = characteristic . getStringValue ( 0 ) ; intent . putExtra ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.EXTRA_DATA , value ) ; this . sendBroadcast ( intent ) ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { name.kion.twipstr.gui.LinkLabel info = new name.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.APP_INFO_NAME_AND_VERSION , name.kion.twipstr.Constants.APP_INFO_URL ) ; name.kion.twipstr.gui.LinkLabel author = new name.kion.twipstr.gui.LinkLabel ( name.kion.twipstr.Constants.APP_INFO_AUTHOR , name.kion.twipstr.Constants.APP_INFO_AUTHOR_URL ) ; javax.swing.JOptionPane . showMessageDialog ( null , new java.awt.Component [] { info , author } , "Twipstr :: About & Help" , javax.swing.JOptionPane.PLAIN_MESSAGE , infoIcon ) ; statusTextArea . requestFocusInWindow () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page , @ org.springframework.web.bind.annotation.RequestParam ( value = "out" , required = false ) java.lang.String out ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; android.widget.ListView myListView = ( ( android.widget.ListView ) ( getActivity () . findViewById ( R.id.equipmentList ) ) ) ; connectToJSON ( "?sort_by=it_no" ) ; int layoutID = R.layout.list_item ; myAdapterInstance = new com.example.jim.myapplication.EquipmentAdapter ( getActivity () , layoutID , equipmentList ) ; myListView . setAdapter ( myAdapterInstance ) ; } 
static java.util.List < com.myjeeva.digitalocean.pojo.Key > getAvailableKeys ( java.lang.String authToken ) throws com.myjeeva.digitalocean.exception.DigitalOceanException , com.myjeeva.digitalocean.exception.RequestUnsuccessfulException { com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient ( authToken ) ; java.util.List < com.myjeeva.digitalocean.pojo.Key > availableKeys = new java.util.ArrayList < com.myjeeva.digitalocean.pojo.Key > () ; com.myjeeva.digitalocean.pojo.Keys keys ; int page = 0 ; do { page += 1 ; keys = client . getAvailableKeys ( page ) ; availableKeys . addAll ( keys . getKeys () ) ; } while ( ( keys . getMeta () . getTotal () ) > ( availableKeys . size () ) ) ; return availableKeys ; } 
public void onClick ( android.view.View view ) { java.lang.String newYaxis = ( ( java.lang.String ) ( yAxisSpinner . getSelectedItem () ) ) ; histogram . removeAllSeries () ; if ( newYaxis . equals ( "Virus" ) ) {} else {} java.lang.String titleToShow = ( ( reportYear + " " ) + newYaxis ) + " Histogram" ; histogramTitle . setText ( titleToShow ) ; } 
private void presentNotificationsList ( final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . presentNotificationsList () ; } } 
public void sendEmail ( java.util.List < java.lang.String > institutionCodes , java.lang.Integer totalRecordCount , java.lang.Integer failedRecordCount , java.lang.String transmissionType , java.lang.String dateTimeStringForFolder , java.lang.String toEmailAddress ) { org.recap.camel.EmailPayLoad emailPayLoad = new org.recap.camel.EmailPayLoad () ; emailPayLoad . setInstitutions ( institutionCodes ) ; emailPayLoad . setLocation ( getLocation ( transmissionType , dateTimeStringForFolder ) ) ; emailPayLoad . setCount ( totalRecordCount ) ; emailPayLoad . setFailedCount ( failedRecordCount ) ; emailPayLoad . setTo ( toEmailAddress ) ; producer . sendBody ( ReCAPConstants.EMAIL_Q , emailPayLoad ) ; } 
@ java.lang.Override public void createHaver ( @ android.support.annotation.NonNull long desireId , @ android.support.annotation.NonNull de.fau.cs.mad.wanthavers.common.Haver haver , @ android.support.annotation.NonNull wanthavers.mad.cs.fau.de.wanthavers_android.data.source.haver.CreateHaverCallback callback ) { try { de.fau.cs.mad.wanthavers.common.Haver ret = haverEndpoint . createHaver ( desireId , haver ) ; callback . onHaverCreated ( ret ) ; } catch ( java.lang.Throwable t ) { callback . onCreateFailed () ; } } 
public java.lang.String getSlice ( int startLine , int endLine ) { java.util.List < java.lang.String > lines = cl . getCodeSlice ( startLine , endLine ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( java.lang.String line : lines ) { if ( ( sb . length () ) != 0 ) { sb . append ( PMD.EOL ) ; } sb . append ( line ) ; } return sb . toString () ; } 
public void onUriChange ( android.net.Uri locationWithDateUri ) { android.util.Log . v ( LOG_TAG , "onUriChange" ) ; if ( locationWithDateUri != null ) { _locationWithDateUri = locationWithDateUri ; if ( ( getLoaderManager () ) == null ) { android.util.Log . v ( LOG_TAG , "onUriChange: null" ) ; } else { android.util.Log . v ( LOG_TAG , "onUriChange: !null" ) ; getLoaderManager () . restartLoader ( LOADER_ID , null , this ) ; } } } 
@ java.lang.Override public java.util.ArrayList < cg.group4.rewards.collectibles.Collectible > sortCollectibles ( final java.util.HashSet < cg.group4.rewards.collectibles.Collectible > set ) { java.util.ArrayList < cg.group4.rewards.collectibles.Collectible > sortedList = new java.util.ArrayList < cg.group4.rewards.collectibles.Collectible > ( set . size () ) ; for ( cg.group4.rewards.collectibles.Collectible c : set ) { if ( sortedList . isEmpty () ) { sortedList . add ( c ) ; } else { sortedList . add ( findPosition ( c , sortedList ) , c ) ; } } return sortedList ; } 
private java.util.Calendar mergeDate ( java.util.Date d , java.sql.Time t ) { java.util.Calendar dCal = java.util.Calendar . getInstance () ; dCal . setTime ( d ) ; if ( t == null ) { return dCal ; } java.util.Calendar tCal = java.util.Calendar . getInstance () ; tCal . setTime ( t ) ; dCal . set ( java.util.Calendar.HOUR_OF_DAY , tCal . get ( java.util.Calendar.HOUR_OF_DAY ) ) ; dCal . set ( java.util.Calendar.MINUTE , tCal . get ( java.util.Calendar.MINUTE ) ) ; dCal . set ( java.util.Calendar.SECOND , tCal . get ( java.util.Calendar.SECOND ) ) ; return dCal ; } 
@ java.lang.Override protected void configure ( org.springframework.security.config.annotation.web.builders.HttpSecurity http ) throws java.lang.Exception { http . authorizeRequests () . anyRequest () . authenticated () . and () . formLogin () . failureUrl ( "/login?error" ) . permitAll () . and () . logout () . permitAll () ; http . addFilterBefore ( myFilterSecurityInterceptor , org.springframework.security.web.access.intercept.FilterSecurityInterceptor . class ) ; } 
@ java.lang.Override public javax.jms.Session createSession ( boolean transacted , int ackMode ) throws javax.jms.JMSException { org.apache.activemq.jms.pool.PooledSession result = ( ( org.apache.activemq.jms.pool.PooledSession ) ( pool . createSession ( transacted , ackMode ) ) ) ; loanedSessions . add ( result ) ; result . addSessionEventListener ( this ) ; return result ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ! ( obj instanceof org.eclipse.equinox.http.servlet.internal.registration.ListenerRegistration ) ) { return false ; } org.eclipse.equinox.http.servlet.internal.registration.ListenerRegistration listenerRegistration = ( ( org.eclipse.equinox.http.servlet.internal.registration.ListenerRegistration ) ( obj ) ) ; return listenerRegistration . getT () . equals ( super . getT () ) ; } 
public void parseAdd ( java.lang.String command ) throws java.lang.Exception { CO . setCommandType ( parser.Parser.ADD_INDEX ) ; parser.CommandParser AP = new parser.AddParser () ; command = command . replaceFirst ( Constants.REGEX_ADD , "" ) . trim () ; TO = AP . process ( command ) ; TO . setTaskId ( _taskId ) ; setCategory () ; CO . setTaskObject ( TO ) ; AP . reset () ; } 
public static void writeDatasetToFile ( java.lang.String fileName , int n ) throws java.io.IOException { java.io.File file = new java.io.File ( fileName ) ; java.io.FileOutputStream fos = new java.io.FileOutputStream ( file ) ; java.io.BufferedWriter bw = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( fos ) ) ; for ( int i = 1 ; i <= n ; i ++ ) { bw . write ( generator.PuzzleGenerator . encode ( generator.PuzzleGenerator . generate () ) ) ; bw . newLine () ; } bw . close () ; } 
@ java.lang.Override protected java.util.List < com.jojo.googlenewsreader.pojo.Article > doInBackground ( java.lang.Void . . . params ) { java.util.List < com.jojo.googlenewsreader.pojo.Article > articles = new java.util.ArrayList <> () ; try { if ( query . equals ( com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.DEFAULT_RESEARCH ) ) { articles = searchFromQuery ( com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.DEFAULT_RESEARCH ) ; } else { query = java.net.URLEncoder . encode ( query , "UTF-8" ) ; articles = searchFromQuery ( ( ( com.jojo.googlenewsreader.asyncTasks.LoadArticleAsyncTask.API_URL ) + ( query ) ) ) ; } } catch ( java.io.UnsupportedEncodingException e ) { e . printStackTrace () ; } return articles ; } 
public int getRangePixelCount ( android.graphics.Rect range ) { int top = range.top ; int bottom = range.bottom ; int left = range.left ; int right = range.right ; return ( pixelCount . get ( bottom , right ) ) - ( pixelCount . get ( top , left ) ) ; } 
@ java.lang.Override public java.lang.Boolean necesitaAutorizacion ( java.lang.Integer idPractica , java.lang.Integer idPlan ) throws ar.edu.ungs.commons.exception.BusinessException { try { ar.edu.ungs.persistence.entities.practica.CoberturaID id = new ar.edu.ungs.persistence.entities.practica.CoberturaID () ; id . setPlan ( idPlan ) ; id . setPractica ( idPractica ) ; ar.edu.ungs.persistence.entities.practica.Cobertura cobertura = coberturaDao . findById ( id ) ; if ( cobertura != null ) return cobertura . getRequiereAutorizacion () ; return false ; } catch ( ar.edu.ungs.commons.exception.DaoException e ) { throw new ar.edu.ungs.commons.exception.BusinessException ( e ) ; } } 
public static void putObjectWrapper$$PHOSPHORTAGGED ( sun.misc.Unsafe unsafe , java.lang.Object o , int key_tag , long key , java.lang.Object val , java.lang.Class c ) { if ( ( ( c != null ) && ( val != null ) ) && ( ! ( c . isAssignableFrom ( val . getClass () ) ) ) ) { val = ( ( edu.columbia.cs.psl.phosphor.instrumenter.LazyArrayIntTags ) ( val ) ) . getVal () ; } unsafe . putObject ( o , key , val ) ; } 
@ java.lang.Override protected java.util.List < com.dotmarketing.business.Permission > getInheritablePermissions ( com.dotmarketing.business.Permissionable permissionable , boolean bitPermissions ) throws com.dotmarketing.exception.DotDataException { java.util.List < com.dotmarketing.business.Permission > bitPermissionsList = permissionCache . getPermissionsFromCache ( permissionable . getPermissionId () ) ; if ( bitPermissionsList == null ) { bitPermissionsList = loadPermissions ( permissionable ) ; } if ( ! bitPermissions ) return convertToNonBitPermissions ( filterOnlyInheritablePermissions ( bitPermissionsList , permissionable . getPermissionId () ) ) ; else return filterOnlyInheritablePermissions ( bitPermissionsList , permissionable . getPermissionId () ) ; } 
public void hideFragment ( android.support.v4.app.Fragment fragment , android.support.v4.app.Fragment fragment1 ) { if ( ( null != fragment ) && ( null != fragment1 ) ) { fragmentTransaction = getSupportFragmentManager () . beginTransaction () ; fragmentTransaction . hide ( fragment ) . hide ( fragment1 ) ; fragmentTransaction . commit () ; } } 
private int maxIndex ( int [] arr ) { int maxIndex = 0 ; for ( int i = 0 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) >= ( arr [ maxIndex ] ) ) { maxIndex = i ; } } return maxIndex ; } 
boolean compareArray ( int [] A , int [] B ) { if ( ( ( A.length ) - 1 ) != ( ( B.length ) - 1 ) ) { return false ; } for ( int i = 0 ; i < ( ( A.length ) - 1 ) ; i ++ ) { if ( ( A [ i ] ) != ( B [ i ] ) ) { return false ; } } return true ; } 
private boolean canAttack ( final me.NoChance.PvPManager.PvPlayer attacker , final me.NoChance.PvPManager.PvPlayer defender ) { if ( ( attacker . isInCombat () ) && ( defender . isInCombat () ) ) return dependencyManager . canAttack ( attacker . getPlayer () , defender . getPlayer () ) ; return false ; } 
public java.lang.Object deserialize ( java.io.InputStream input ) { java.lang.Object result = null ; try { com.caucho.hessian.io.Hessian2Input hi = new com.caucho.hessian.io.Hessian2Input ( input ) ; hi . startMessage () ; result = hi . readObject () ; hi . completeMessage () ; hi . close () ; input . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return result ; } 
private void comboBoxFieldActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.System.out . println ( ( "here" + ( comboBoxStartToSearch ) ) ) ; searchColName = comboBoxField . getSelectedItem () . toString () ; searchValue = comboBoxValue . getSelectedItem () . toString () ; java.lang.String tabName = getSelectedTabName () ; updateComboList ( searchColName , tabName ) ; comboBoxValue . setSelectedItem ( searchValue ) ; comboBoxStartToSearch = true ; } 
public static org.sosy_lab.cpachecker.cpa.policyiteration.PolicyAbstractedState empty ( org.sosy_lab.cpachecker.cfa.model.CFANode node , org.sosy_lab.java_smt.api.BooleanFormula pPredicate , org.sosy_lab.cpachecker.cpa.policyiteration.StateFormulaConversionManager pManager ) { return new org.sosy_lab.cpachecker.cpa.policyiteration.PolicyAbstractedState ( node , com.google.common.collect.ImmutableMap . of () , ( - 1 ) , pManager , org.sosy_lab.cpachecker.util.predicates.pathformula.SSAMap . emptySSAMap () , org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.PointerTargetSet . emptyPointerTargetSet () , pPredicate , null , null , null ) ; } 
@ java.lang.Override public void putAll ( java.util.Map < ? extends java.lang.String , ? extends K > add ) { for ( java.util.Map.Entry < ? extends java.lang.String , ? extends K > entry : add . entrySet () ) { put ( entry . getKey () , entry . getValue () ) ; } } 
public void injectCacheName ( java.lang.Object obj , java.lang.String cacheName ) throws org.apache.ignite.IgniteCheckedException { assert obj != null ; if ( log . isDebugEnabled () ) log . debug ( ( "Injecting cache name: " + obj ) ) ; obj = unwrapTarget ( obj ) ; inject ( obj , GridResourceIoc.ResourceAnnotation.CACHE_NAME , null , null , cacheName ) ; } 
@ java.lang.Override public io.netty.channel.ChannelHandler call ( final io.netty.channel.Channel channel , final java.lang.Integer allIdleTimeout ) { return new io.netty.handler.timeout.IdleStateHandler ( 0 , 0 , allIdleTimeout ) { @ java.lang.Override protected void channelIdle ( io.netty.channel.ChannelHandlerContext ctx , io.netty.handler.timeout.IdleStateEvent evt ) throws java.lang.Exception { if ( org.jocean.http.util.Nettys.LOG . isInfoEnabled () ) { org.jocean.http.util.Nettys.LOG . info ( "channelIdle:{} , close channel[{}]" , evt . state () . name () , ctx . channel () ) ; } ctx . channel () . close () ; } } ; } 
public byte [] downloadTMDToByteArray ( long titleID , int version ) throws java.io.IOException { java.lang.String version_suf = "" ; if ( version > 0 ) version_suf = "." + version ; java.lang.String URL = ( ( ( ( de.mas.jnustool.util.Downloader.URL_BASE ) + "/" ) + ( java.lang.String . format ( "%016X" , titleID ) ) ) + "/tmd" ) + version_suf ; return downloadFileToByteArray ( URL ) ; } 
protected void appendCgroupsCmds ( java.lang.StringBuilder cmdLine ) { if ( cfg . getFrameworkSuperUser () . isPresent () ) { cmdLine . append ( " export TASK_DIR=`basename $PWD`&&" ) ; appendSudo ( cmdLine ) ; cmdLine . append ( ( ( "chown " + ( cfg . getFrameworkUser () . get () ) ) + " " ) ) ; cmdLine . append ( cfg . getCGroupPath () ) ; cmdLine . append ( "/cpu/mesos/$TASK_DIR &&" ) ; } else { org.apache.myriad.scheduler.NMExecutorCLGenImpl.LOGGER . info ( "frameworkSuperUser not enabled ignoring cgroup configuration" ) ; } } 
public java.awt.Component prepareRenderer ( javax.swing.table.TableCellRenderer renderer , int row , int column ) { java.awt.Component c = super . prepareRenderer ( renderer , row , column ) ; if ( ! ( isRowSelected ( row ) ) ) c . setBackground ( ( ( row % 2 ) != 0 ? getBackground () : java.awt.Color.LIGHT_GRAY ) ) ; return c ; } 
@ java.lang.Override protected org.eclipse.emf.ecore.EObject getEObjectByID ( java.lang.String id ) { org.eclipse.emf.ecore.EObject idObject = super . getEObjectByID ( id ) ; if ( idObject == null ) { for ( org.eclipse.emf.ecore.EObject eObject : getContents () ) { if ( eObject instanceof no.hal.pgo.osm.OSM ) { no.hal.pgo.osm.Tagged tagged = no.hal.pgo.osm.util.OsmResourceImpl . getTagged ( id , eObject , OsmPackage.eINSTANCE . getOSM_Nodes () , OsmPackage.eINSTANCE . getOSM_Relations () ) ; if ( tagged != null ) { return tagged ; } } } } return idObject ; } 
public void addBatch ( java.lang.String batchId ) { net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity [] batchObjects = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity [ 1 ] ; batchObjects [ 0 ] = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity () ; batchObjects [ 0 ] . objectUrn = ( net.smartcosmos.android.ProfilesTransactionRequest.PREFIX_BATCH ) + batchId ; batchObjects [ 0 ] . type = net.smartcosmos.android.ProfilesTransactionRequest.TYPE_BATCH ; batchObjects [ 0 ] . name = batchId ; addObjects ( batchObjects ) ; } 
public void updateBoardContent ( char [] [] board ) { this . boardContent = new char [ [ board.length ] [ board [ 0 ] . length ] ; for ( int i = 0 ; i < ( boardContent.length ) ; i ++ ) { for ( int j = 0 ; j < ( boardContent [ 0 ] . length ) ; j ++ ) { boardContent [ i ] [ j ] = board [ i ] [ j ] ; } } } 
public int countEventsAtLocation ( java.lang.String id ) { int counter = - 1 ; java.lang.String request = handlers.HttpHandler . eventCounter ( id ) ; try { counter = java.lang.Integer . parseInt ( new handlers.HttpTask () . execute ( "GET" , request ) . get () . trim () ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } return counter ; } 
protected void installPropertyChangeListener ( java.lang.Object element ) { org.eclipse.tcf.te.ui.interfaces.IViewerInput viewerInput = org.eclipse.tcf.te.ui.trees.ViewerStateManager . getViewerInput ( element ) ; if ( ( viewerInput != null ) && ( ! ( viewerInputs . contains ( viewerInput ) ) ) ) { viewerInput . addPropertyChangeListener ( commonViewerListener ) ; viewerInputs . add ( viewerInput ) ; } } 
@ java.lang.Override public void onBindViewHolder ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder , int position ) { a1.a2017.iff.seriesanimes.Adapter.SerieAdapter.SerieViewHolder holder_series = ( ( a1.a2017.iff.seriesanimes.Adapter.SerieAdapter.SerieViewHolder ) ( viewHolder ) ) ; a1.a2017.iff.seriesanimes.Model.Serie serie = series . get ( position ) ; holder_series.tituloSerie . setText ( serie . getTitulo () ) ; holder_series.ano_lancamentoSerie . setText ( serie . getAno_lancamento () ) ; holder_series.descricaoSerie . setText ( serie . getDescricao () ) ; holder_series.tipoSerie . setText ( serie . getTipo () ) ; android.util.Log . i ( "------XXXXXXXXX------" , serie . getDescricao () ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object object ) { if ( object instanceof qora.assets.Trade ) { qora.assets.Trade trade = ( ( qora.assets.Trade ) ( object ) ) ; return ( trade . getInitiator () . equals ( this . getInitiator () ) ) && ( trade . getTarget () . equals ( this . getTarget () ) ) ; } return false ; } 
@ java.lang.Override public android.view.View getView ( int position , android.view.View convertView , android.view.ViewGroup parent ) { final org.unicef.rapidreg.forms.childcase.CaseField field = getItem ( position ) ; org.unicef.rapidreg.widgets.helper.WidgetHelper widgetHelper = org.unicef.rapidreg.widgets.helper.WidgetHelperFactory . getWidgetHelper ( getContext () , field ) ; widgetHelper . setValue () ; widgetHelper . setOnClickListener () ; return widgetHelper . getConvertView () ; } 
@ java.lang.Override public org.apache.tajo.datum.Datum terminate ( org.apache.tajo.plan.function.FunctionContext ctx ) { org.apache.tajo.engine.function.builtin.StdDevContext StdDevCtx = ( ( org.apache.tajo.engine.function.builtin.StdDevContext ) ( ctx ) ) ; if ( ( StdDevCtx.count ) <= 1 ) { return org.apache.tajo.datum.NullDatum . get () ; } return org.apache.tajo.datum.DatumFactory . createFloat8 ( java.lang.Math . sqrt ( ( ( StdDevCtx.squareSumOfDiff ) / ( ( StdDevCtx.count ) - 1 ) ) ) ) ; } 
public void writePlans ( final java.lang.String outputDir ) { new org.matsim.core.population.PopulationWriter ( scenario . getPopulation () ) . write ( ( ( ( outputDir + "/initial_urban_plans_" ) + ( cloningFactor ) ) + "pct.xml.gz" ) ) ; new org.matsim.utils.objectattributes.ObjectAttributesXmlWriter ( scenario . getPopulation () . getPersonAttributes () ) . writeFile ( ( ( ( outputDir + "/initial_urban_persionAttributes_" ) + ( cloningFactor ) ) + "pct.xml.gz" ) ) ; playground.agarwalamit.mixedTraffic.patnaIndia.input.urban.PatnaUrbanDemandGenerator.LOG . info ( "Writing Plan and person attributes files are finished." ) ; } 
@ java.lang.Override public void onError ( com.iflytek.cloud.SpeechError error ) { if ( error != null ) { showTip ( ( ( ( "error:" + ( error . getErrorCode () ) ) + "," ) + ( error . getErrorDescription () ) ) ) ; } else { android.util.Log . d ( com.lixl.waveform.WaveformViewModule.TAG , "evaluator over" ) ; } } 
@ java.lang.Override public void positionModifierChange ( int [] oldP , int [] newP , boolean topDown , int positiv , boolean gameWon ) { this . gameWon = gameWon ; if ( ( ( oldP [ 0 ] ) != ( newP [ 0 ] ) ) || ( ( oldP [ 1 ] ) != ( newP [ 1 ] ) ) ) { positionChanged = true ; playerOld = oldP ; playerNew = newP ; this . topDown = topDown ; this . positiv = positiv ; } } 
public org.smartdata.model.SystemInfo getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) . get ( 0 ) ; } 
@ java.lang.Override public void onFinishedWithResult ( java.lang.String monthName , int day , int year , long time ) { if ( setDateFromTime ) { if ( time < ( dateToTime ) ) dateFromTime = time ; } else { if ( time > ( dateFromTime ) ) dateToTime = time ; } updateDateRangeLabels ( true ) ; } 
@ java.lang.Override public void onRegisterStatus ( final android.content.Context context , final com.meizu.cloud.pushsdk.platform.message.RegisterStatus registerStatus ) { if ( ( com.jiang.android.push.flyme.FlymeReceiver.mPushInterface ) != null ) { com.jiang.android.push.utils.JHandler . handler () . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { com.jiang.android.push.flyme.FlymeReceiver.mPushInterface . onRegister ( context , registerStatus . getPushId () ) ; } } ) ; } } 
@ java.lang.Override public void render ( gov.nasa.worldwind.render.DrawContext dc ) { try { super . render ( dc ) ; } catch ( java.lang.NullPointerException e ) { boolean followTerrain = isFollowTerrain () ; try { setFollowTerrain ( false ) ; super . render ( dc ) ; } finally { setFollowTerrain ( followTerrain ) ; } } } 
@ java.lang.Override public double distance ( final geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; final double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; } 
@ java.lang.Override public void removeTable ( final java.lang.String tableName ) throws java.sql.SQLException { this . logger . info ( java.lang.String . format ( "Removing table for sid %d and tablename %s" , getSid () , tableName ) ) ; final java.lang.String sql = java.lang.String . format ( "DROP TABLE IF EXISTS %s" , wrapName ( tableName ) ) ; try { executeUpdate ( sql ) ; } catch ( final java.sql.SQLException e ) { this . logger . error ( java.lang.String . format ( "Removing table for sid %d and tablename %s FAILED" , getSid () , tableName ) , e ) ; throw e ; } } 
public void add ( int index , long element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; ( end ) ++ ; } } 
private java.lang.String readStream ( java.io.InputStream in ) throws java.io.IOException { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( in , "utf-8" ) ) ) { java.lang.String line = reader . readLine () ; while ( line != null ) { sb . append ( line . trim () ) ; line = reader . readLine () ; } } return sb . toString () ; } 
@ java.lang.Override public java.lang.String getNString ( int ref ) { android.util.Log . v ( tk.thebrightstuff.blindtale.view.SceneActivity.TAG , ( ( ( ( "Removing accents from " + ( getIString ( ref ) ) ) + " (" ) + ref ) + ")" ) ) ; return tk.thebrightstuff.blindtale.utils.StringUtils . removeAccents ( getIString ( ref ) ) . toLowerCase () ; } 
public static java.util.Date getLatestDate ( java.lang.Class articleClass ) throws java.lang.NullPointerException { org.hibernate.Session session = com.cse10.database.HibernateUtil . getSessionFactory () . openSession () ; java.sql.Date latestDate = ( ( java.sql.Date ) ( session . createCriteria ( articleClass ) . setProjection ( org.hibernate.criterion.Projections . max ( "createdDate" ) ) . uniqueResult () ) ) ; session . close () ; return new java.util.Date ( latestDate . getTime () ) ; } 
public java.lang.String parseTicketID ( java.lang.String subject ) { java.lang.String [] full_subject = subject . split ( "#" ) ; if ( ( full_subject [ 1 ] ) != "" ) { java.lang.String second_part_subject = full_subject [ 1 ] ; java.lang.String trimmed_subject = second_part_subject . trim () ; java.lang.String [] id = trimmed_subject . split ( " " ) ; return id [ 0 ] ; } else { return subject . trim () ; } } 
public java.lang.String getUnlocalizedName ( net.minecraft.item.ItemStack stack ) { net.minecraft.nbt.NBTTagCompound tag = stack . getTagCompound () ; if ( tag != null ) { return ( ( super . getUnlocalizedName ( stack ) ) + "." ) + ( tag . getString ( "name" ) ) ; } else { return super . getUnlocalizedName ( stack ) ; } } 
@ java.lang.Override public java.lang.CharSequence getPageTitle ( int position ) { if ( position < ( data . getCount () ) ) { java.lang.Object item = data . getItem ( position ) ; if ( item instanceof itkach.aard2.BlobDescriptor ) { return ( ( itkach.aard2.BlobDescriptor ) ( item ) ) . key ; } if ( item instanceof itkach.slob.Slob.Blob ) { return ( ( itkach.slob.Slob.Blob ) ( item ) ) . key ; } } return "???" ; } 
@ java.lang.Override protected mobop.booklist.app.data.api.ApiBook doInBackground ( java.lang.String . . . params ) { try { mobop.booklist.app.data.api.ApiBook book = mapper . readValue ( params [ 0 ] , mobop.booklist.app.data.api.ApiBook . class ) ; android.util.Log . d ( "Api" , book . toString () ) ; return book ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } } 
@ java.lang.Override public void setStyleType ( final org.openflexo.fge.shapes.ShapeSpecification.ShapeType shapeType ) { final org.openflexo.fge.shapes.ShapeSpecification.ShapeType oldShapeType = this . getStyleType () ; if ( oldShapeType == shapeType ) { return; } final org.openflexo.fge.shapes.ShapeSpecification oldSS = this . getShapeSpecification () ; this . shapeType = shapeType ; this . pcSupport . firePropertyChange ( org.openflexo.fge.control.tools.STYLE_CLASS_CHANGED , oldShapeType , this . getStyleType () ) ; this . pcSupport . firePropertyChange ( "styleType" , oldShapeType , this . getStyleType () ) ; this . pcSupport . firePropertyChange ( "shapeSpecification" , oldSS , this . getShapeSpecification () ) ; } 
private void startActivity ( int i ) { android.os.Bundle bundle ; android.content.Intent intent ; bundle = new android.os.Bundle () ; bundle . putInt ( "room" , i ) ; intent = new android.content.Intent ( this , hevs.project.SketchAgenda . class ) ; intent . putExtras ( bundle ) ; this . startActivity ( intent ) ; finish () ; } 
public java.util.List < bb.tokenizer.Token > tokenize ( java.lang.String str ) { java.util.ArrayList < bb.tokenizer.Token > tokens = new java.util.ArrayList < bb.tokenizer.Token > () ; while ( ( str . length () ) > 0 ) { str = addNextToken ( str , tokens ) ; } line = 1 ; column = 1 ; return tokens ; } 
@ java.lang.Override public boolean execute () { formDesignerPanel . getSaveButton () . setText ( I18N.CONSTANTS . save () ) ; formDesignerPanel . getSaveButton () . setEnabled ( true ) ; formDesignerPanel . getStatusMessage () . setHTML ( I18N.CONSTANTS . saved () ) ; formDesigner . getSavedGuard () . setSaved ( true ) ; return false ; } 
public void GameOver ( MyPanel myPanelB , int ClickedInX , int ClickedInY ) { if ( HasBomb ( myPanelB , ClickedInX , ClickedInY ) ) { for ( int posArray = 0 ; posArray < ( posXBomb.length ) ; posArray ++ ) { myPanelB.colorArray [ ClickedInX ] [ ClickedInY ] = bombs ; myPanelB.colorArray [ posXBomb [ posArray ] ] [ posYBomb [ posArray ] ] = bombs ; myPanelB . repaint () ; } } } 
public final void cvttpd2dq ( jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { assert ( dst . getRegisterCategory () . equals ( AMD64.XMM ) ) && ( src . getRegisterCategory () . equals ( AMD64.XMM ) ) ; com.oracle.graal.asm.amd64.AMD64InstructionAttr attributes = new com.oracle.graal.asm.amd64.AMD64InstructionAttr ( com.oracle.graal.asm.amd64.AMD64Assembler.AvxVectorLen.AVX_128bit , false , false , false , false , target ) ; int encode = simdPrefixAndEncode ( dst , Register.None , src , com.oracle.graal.asm.amd64.AMD64Assembler.VexSimdPrefix.VEX_SIMD_66 , com.oracle.graal.asm.amd64.AMD64Assembler.VexOpcode.VEX_OPCODE_0F , attributes ) ; emitByte ( 230 ) ; emitByte ( ( 192 | encode ) ) ; } 
@ java.lang.Override public boolean onFetchFirstPage ( org.wordpress.android.models.PeopleListFilter filter ) { org.wordpress.android.models.Blog blog = org.wordpress.android.WordPress . getCurrentBlog () ; if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.TEAM ) ) && ( mCanRefreshUsers ) ) { return fetchUsersList ( blog . getDotComBlogId () , blog . getLocalTableBlogId () , 0 ) ; } else if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.FOLLOWERS ) ) && ( mCanRefreshFollowers ) ) { return fetchFollowersList ( blog . getDotComBlogId () , blog . getLocalTableBlogId () , 1 ) ; } return false ; } 
@ org.springframework.web.bind.annotation.ExceptionHandler ( value = com.carser.viamais.exception.LogException . class ) public void handleException ( final com.carser.viamais.exception.LogException e ) { org.slf4j.Logger logger = org.slf4j.LoggerFactory . getLogger ( e . getSource () ) ; logger . error ( e . getMessage () ) ; com.carser.viamais.entity.MailConfiguration config = mailConfigurationRepository . findByEvent ( MailConfiguration.Event.ERROR_MESSAGE ) ; mailService . sendHtmlEmail ( adminMail , config . getDefaultSender () , config . getDefaultSubject () , e . getMessage () ) ; } 
public static java.lang.String convertToGroupString ( java.lang.String [] group ) { java.lang.String str = "" ; for ( int i = 0 ; i < ( ( group.length ) - 1 ) ; i ++ ) { str += ( group [ i ] ) + ":" ; } str += group [ ( ( group.length ) - 1 ) ] ; return str ; } 
@ java.lang.Override void replaceDefunctConnection ( final com.datastax.driver.core.Connection connection ) { if ( connection.state . compareAndSet ( com.datastax.driver.core.OPEN , com.datastax.driver.core.GONE ) ) open . decrementAndGet () ; if ( connections . remove ( connection ) ) manager . blockingExecutor () . submit ( new java.lang.Runnable () { @ java.lang.Override public void run () { addConnectionIfUnderMaximum () ; } } ) ; } 
public static boolean isRosterPath ( java.lang.String path ) { path = path . trim () . toLowerCase () ; return ( ( path . endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) || ( path . endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION ) ) ) || ( path . endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION_OLD ) ) ; } 
public void putLongArray ( final long [] data , boolean length ) { int l = data.length ; if ( length ) putInt ( l ) ; l *= com.heerbann.unsafe.UnsafeBuffer.sizeOfLong ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( data , com.heerbann.unsafe.UnsafeBuffer.longArrayOffset , null , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
public void renderSegment ( lemon.engine.render.Renderable renderable ) { org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_BLEND ) ; org.lwjgl.opengl.GL11 . glBlendFunc ( GL11.GL_SRC_ALPHA , GL11.GL_ONE_MINUS_SRC_ALPHA ) ; org.lwjgl.opengl.GL11 . glEnable ( GL11.GL_DEPTH_TEST ) ; org.lwjgl.opengl.GL20 . glUseProgram ( program . getId () ) ; lineRenderer . render ( renderable ) ; org.lwjgl.opengl.GL20 . glUseProgram ( 0 ) ; org.lwjgl.opengl.GL11 . glDisable ( GL11.GL_DEPTH_TEST ) ; org.lwjgl.opengl.GL11 . glDisable ( GL11.GL_BLEND ) ; } 
static java.io.File constructFile ( java.lang.String basePath , java.lang.String fileName ) { java.io.File file ; java.io.File absolute = new java.io.File ( fileName ) ; if ( ( org.apache.commons.lang3.StringUtils . isEmpty ( basePath ) ) || ( absolute . isAbsolute () ) ) { file = absolute ; } else { file = new java.io.File ( org.apache.commons.configuration2.io.FileLocatorUtils . appendPath ( basePath , fileName ) ) ; } return file ; } 
public void connectionLost ( java.lang.Throwable cause ) { log ( new java.lang.StringBuilder ( "Connection to lost! " ) . append ( cause ) . toString () ) ; com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments . createMap () ; params . putString ( "event" , "closed" ) ; params . putString ( "message" , "Connection to lost!" ) ; sendEvent ( _reactContext , "mqtt_events" , params ) ; } 
public void doIt ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String error = null ; if ( error != null ) { response . sendRedirect ( ( "home.do?error=" + error ) ) ; } else { response . sendRedirect ( "home.do" ) ; } } 
public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { if ( actorConfigTab.currentEditSite . getName () . equals ( actorConfigTab.newSiteName ) ) { new gov.nist.toolkit.xdstools2.client.PopupMessage ( "You must give site a real name before saving" ) ; return; } if ( gov.nist.toolkit.xdstools2.client.PasswordManagement.isSignedIn ) { actorConfigTab.saveSignedInCallback . onSuccess ( true ) ; } else { gov.nist.toolkit.xdstools2.client.PasswordManagement . addSignInCallback ( actorConfigTab.saveSignedInCallback ) ; new gov.nist.toolkit.xdstools2.client.AdminPasswordDialogBox ( actorConfigTab . getTabTopPanel () ) ; } } 
private java.lang.String getLine ( int number ) throws java.lang.Exception { java.lang.String value = null ; java.lang.String pageContent = FitnesseFixtureContext.page . getHtml () ; java.lang.String lineizedContent = fitnesse.fixtures.ResponseExaminer . convertBreaksToLineSeparators ( pageContent ) ; java.util.StringTokenizer tokenizedLines = tokenizeLines ( lineizedContent ) ; for ( int i = number ; i != 0 ; i -- ) value = tokenizedLines . nextToken () ; return value != null ? value . trim () : null ; } 
public void assertEquals ( java.lang.Object expected , java.lang.Object actual ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; } 
public int lookup ( int index , short remainder ) { int currentIndex = index ; org.bucaojit.filter.Slot currentSlot = set . get ( currentIndex ) ; int runStart = 0 ; if ( currentSlot . getMetadata () . isClear () ) return - 1 ; runStart = findRunStart ( currentIndex ) ; return checkQuotient ( runStart , remainder ) ; } 
@ java.lang.Override public void placeInPortal ( net.minecraft.entity.Entity entity , float rotation ) { worldServer.theChunkProviderServer . loadChunk ( ( ( int ) ( x ) ) , ( ( int ) ( z ) ) ) ; entity . setPosition ( x , y , z ) ; entity.motionX = entity.motionY = entity.motionZ = 0 ; } 
private void setPositionsOfPlayers ( java.util.List < game.db.GameResultEntity > gameResults , java.util.List < java.lang.Integer > points ) { java.util.Collections . sort ( points ) ; for ( int i = 0 ; i < ( points . size () ) ; i ++ ) { for ( game.db.GameResultEntity gameResult : gameResults ) { if ( gameResult . getPoints () . equals ( points . get ( i ) ) ) { gameResult . setPosition ( ( i + 1 ) ) ; } } } } 
protected static java.lang.String _gen ( final org.eclipse.ocl.pivot.TypeExp e ) { org.eclipse.xtend2.lib.StringConcatenation _builder = new org.eclipse.xtend2.lib.StringConcatenation () ; java.lang.String _replace = e . getReferredType () . toString () . replace ( "::" , "!" ) ; _builder . append ( _replace ) ; return _builder . toString () ; } 
public void updateCallback ( java.util.Map < java.lang.String , ? > properties ) { this . lexevsRemoteApiUrl = ( ( java.lang.String ) ( properties . get ( "lexevsRemoteApiUrl" ) ) ) ; this . lgConfigFile = ( ( java.lang.String ) ( properties . get ( edu.mayo.cts2.framework.plugin.service.lexevs.LexBigServiceFactory.LG_CONFIG_FILE_ENV ) ) ) ; this . hasBeenConfigured = true ; } 
public java.lang.String addDate ( java.lang.String date , char typeRepeat ) { switch ( typeRepeat ) { case 'D' : return this . addDayInDate ( date ) ; case 'M' : return this . addMonthInDate ( date ) ; case 'A' : return this . addYearInDate ( date ) ; default: return date ; } } 
long exceptsPerCycle ( int cycle ) { net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts.StoreTailer tailer = acquireTailer () ; try { long index = rollCycle . toIndex ( cycle , 0 ) ; if ( tailer . moveToIndex ( index ) ) { assert ( tailer.store . refCount () ) > 0 ; return ( tailer.store . lastSequenceNumber ( tailer ) ) + 1 ; } else { return - 1 ; } } catch ( java.io.StreamCorruptedException e ) { throw new java.lang.IllegalStateException ( e ) ; } finally { tailer . release () ; } } 
private java.lang.String getBaseUri ( final org.apache.olingo.odata2.api.processor.ODataRequest request ) { java.lang.String baseUri = request . getPathInfo () . getServiceRoot () . toASCIIString () ; if ( baseUri . endsWith ( "/" ) ) { baseUri = baseUri . substring ( 0 , ( ( baseUri . length () ) - 1 ) ) ; } return baseUri ; } 
public void remGroup ( java.lang.String uname , java.lang.String gID ) { for ( de.jattyv.jcapi.server.virtual.dataController.data.User user : users ) { if ( user . getUserName () . equals ( uname ) ) { for ( de.jattyv.jcapi.client.gui.cell.FG fg : user . getFgs () ) { if ( fg . getId () . equals ( gID ) ) { if ( ( fg . getType () ) == ( de.jattyv.jcapi.client.gui.cell.FG.FG_TYPE_GROUP ) ) { user . getFgs () . remove ( fg ) ; return; } } } } } } 
@ java.lang.Override public void done ( java.io.File file , com.parse.ParseException e ) { com.clothapp.resources.Image toAdd = new com.clothapp.resources.Image ( file , object . getObjectId () , object . getString ( "user" ) , object . getList ( "like" ) , object . getInt ( "nLike" ) , object . getList ( "hashtag" ) , object . getList ( "vestiti" ) , object . getList ( "tipo" ) ) ; if ( ! ( com.clothapp.ImageFragment.lista . contains ( toAdd ) ) ) { com.clothapp.ImageFragment.lista . add ( toAdd ) ; mPagerAdapter . notifyDataSetChanged () ; } } 
@ com.google.gwt.uibinder.client.UiHandler ( value = "browseCentury" ) public void onClickOfBrowseCentury ( com.google.gwt.event.dom.client.ClickEvent e ) { centuryPopup . clear () ; centuryPresenterWidget . setAddResourceData ( centurySelectedValues ) ; centuryPopup . add ( centuryPresenterWidget . getWidget () ) ; centuryPopup . show () ; centuryPopup . center () ; centuryPopup . getElement () . getStyle () . setZIndex ( 999999 ) ; } 
@ java.lang.Override public interfaces.Problem hcSteepestAscent ( interfaces.Problem prob ) { puzzle.PuzzleProblem current = ( ( puzzle.PuzzleProblem ) ( prob ) ) ; puzzle.PuzzleState neighbor ; while ( true ) { neighbor = ( ( puzzle.PuzzleState ) ( current . getBestNeighbor () ) ) ; if ( ( neighbor . getValue () ) >= ( current . getState () . getValue () ) ) return current ; current . addAction ( neighbor.actstr ) ; current . setState ( neighbor ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btnTimerPlay : com.mkhan.myapplication.TimerActivity.isTimerOn = true ; togglePlayButtontext ( ( ( android.widget.Button ) ( v ) ) ) ; break; case R.id.btnTimerReset : com.mkhan.myapplication.TimerActivity.isTimerOn = false ; togglePlayButtontext ( ( ( android.widget.Button ) ( v ) ) ) ; break; } } 
private static java.lang.Class < ? extends java.lang.Object > getContentType ( jade.lang.acl.ACLMessage msg ) { try { java.lang.Object content = msg . getContentObject () ; if ( content != null ) return content . getClass () ; } catch ( jade.lang.acl.UnreadableException e ) { e . printStackTrace () ; } return null ; } 
private void shopDetection ( com.mygdx.runrunrun.sprites.MoveableObject firstObj ) { shop = ( ( com.mygdx.runrunrun.sprites.Shop ) ( firstObj ) ) ; if ( ( firstObj . contains ( hero . getPosition () ) ) && ( ( firstObj . getHide () ) == false ) ) { stopForShop = true ; if ( ( flyCount ) <= 0 ) exitShopTimer = 100 ; } else { stopForShop = false ; enteredShop = false ; if ( hero . getStop () ) { hero . toggleStop () ; } } } 
private void addWorkers ( int count ) { workerCount = count ; workers = new java.util.ArrayList <> () ; for ( int i = 0 ; i < count ; i ++ ) { com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker = new com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker ( this , i ) ; workers . add ( worker ) ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Object resultObject ) { if ( resultObject == null ) {} else if ( resultObject instanceof byte [] ) { mImageBytesConsumer . onAssetBytes ( mAsset , ( ( byte [] ) ( resultObject ) ) ) ; } else if ( resultObject instanceof java.lang.Exception ) { mImageBytesConsumer . onAssetError ( mAsset , ( ( java.lang.Exception ) ( resultObject ) ) ) ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; tcBaseDelegate . setOverWriteTitle ( false ) ; try { app = getBaseApplicationInterface () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } tcBaseDelegate . onCreate ( this , savedInstanceState , app ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public void onViewCreated ( android.view.View view , android.os.Bundle savedInstanceState ) { super . onViewCreated ( view , savedInstanceState ) ; final P presenter = getPresenter () ; if ( presenter != null ) { butterknife.ButterKnife . bind ( presenter , view ) ; } if ( presenter != null ) { presenter . setView ( this ) ; } ready () ; } 
@ java.lang.Override public void onEndpointPoolConfigurationSet ( org.openhab.io.transport.modbus.endpoint.ModbusSlaveEndpoint endpoint , org.openhab.io.transport.modbus.endpoint.EndpointPoolConfiguration otherConfig ) { synchronized ( this ) { if ( ( ( ( this . configuration ) != null ) && ( endpoint . equals ( this . endpoint ) ) ) && ( ! ( this . configuration . equals ( otherConfig ) ) ) ) { updateStatus ( ThingStatus.OFFLINE , ThingStatusDetail.CONFIGURATION_ERROR , java.lang.String . format ( "Endpoint '%s' has conflicting parameters: parameters of this thing (%s) {} are different from {}" , endpoint , this . thing , this . configuration , otherConfig ) ) ; } } } 
@ java.lang.Override public void onTimeChanged ( android.widget.TimePicker timePicker , int hourOfDay , int minute ) { super . onTimeChanged ( timePicker , hourOfDay , minute ) ; if ( ! ( mIgnoreEvent ) ) { minute = getRoundedMinute ( minute ) ; mIgnoreEvent = true ; timePicker . setCurrentMinute ( minute ) ; mIgnoreEvent = false ; } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parentView , android.view.View selectedItemView , int position , long id ) { java.lang.String [] userName = userSpinner . getSelectedItem () . toString () . split ( " " ) ; com.iutbmteprow.shootingarchery.dbman.Utilisateur curUser = db . getUtilisateurFromName ( userName [ 1 ] , userName [ 0 ] ) ; idUserSelected = curUser . getId () ; ListArcFragments ( curUser . getId () ) ; } 
public java.lang.String getFormattedDate ( java.lang.String str ) { com.github.TimeParser tp = new com.github.TimeParser () ; long [] time = tp . GetInput ( str ) ; java.util.Date date0 = new java.util.Date ( time [ 0 ] ) ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss z" ) ; sdf . setTimeZone ( java.util.TimeZone . getTimeZone ( "GMT-4" ) ) ; java.lang.String formattedDate = sdf . format ( date0 ) ; return formattedDate ; } 
public static java.lang.String toSystemPath ( java.lang.String rawpath ) { java.nio.file.Path path = java.nio.file.FileSystems . getDefault () . getPath ( rawpath ) ; if ( java.nio.file.Files . exists ( path ) ) { try { path = path . toRealPath () ; } catch ( java.io.IOException e ) { path = path . toAbsolutePath () ; e . printStackTrace () ; } } else { path = path . toAbsolutePath () ; } return path . toString () ; } 
public void setThumbnailBitmap ( android.graphics.Bitmap bm , java.lang.String thumbPath ) { photos_iv . setEnabled ( true ) ; android.graphics.Bitmap thumbnail = android.media.ThumbnailUtils . extractThumbnail ( bm , 213 , 213 ) ; btn_thumbnail . setImageBitmap ( thumbnail ) ; this . thumbPath = thumbPath ; btn_thumbnail . setVisibility ( View.VISIBLE ) ; } 
private boolean hasUnknownTokenAt ( org.languagetool.AnalyzedTokenReadings [] tokens , int startPos , int endPos ) { for ( int i = startPos ; i < endPos ; i ++ ) { org.languagetool.AnalyzedTokenReadings token = tokens [ i ] ; for ( org.languagetool.AnalyzedToken analyzedToken : token . getReadings () ) { if ( analyzedToken . hasNoTag () ) { return true ; } } } return false ; } 
public void fadeIn ( com.badlogic.gdx.math.Matrix4 cameraCombined , float delta ) { fadeOutLight . setActive ( false ) ; fadeInLight . setActive ( true ) ; if ( ( timePassedDuringFadeIn ) < ( timeToFadeIn ) ) { fadeInAlpha = 1 - ( ( timePassedDuringFadeIn ) / ( timeToFadeIn ) ) ; fadeInLight . setColor ( new com.badlogic.gdx.graphics.Color ( 0 , 0 , 0 , ( 1 - ( fadeInAlpha ) ) ) ) ; rayHandler . setCombinedMatrix ( cameraCombined ) ; timePassedDuringFadeIn += delta ; } else { isNewLevel = false ; } rayHandler . updateAndRender () ; } 
private void jButtonCrowdMouseClicked ( java.awt.event.MouseEvent evt ) { arenatojava.SQL sql = new arenatojava.SQL () ; currentCrowd = sql . getCrowdInfo () ; try { if ( ( currentImage ) != null ) currentImage = converter . Resize ( ( ( java.awt.image.BufferedImage ) ( currentImage ) ) , currentCrowd . getWidth () , currentCrowd . getHeight () ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( arenatojava.MainForm . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } UpdateImageView () ; } 
@ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { mCallBack = ( ( com.example.user.onceuponatime.fragment.SignInFragment.SignInFragmentCallBack ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.ClassCastException ( ( ( context . toString () ) + " must implements SignInCallaback" ) ) ; } } 
private boolean isFloat ( java.lang.String str ) { if ( str . contains ( "$" ) ) { return isRegisterFloat . get ( str ) ; } else { return ( ( str . contains ( "." ) ) || ( str . startsWith ( "_f" ) ) ) || ( str . endsWith ( "_float" ) ) ; } } 
public boolean clustersMatch ( double [] cluster1 , double [] cluster2 , Emat emat ) { if ( ( cluster1 == null ) || ( cluster2 == null ) ) return true ; for ( int i = 0 ; i < ( cluster1.length ) ; i ++ ) { if ( ( java.lang.Math . abs ( ( ( cluster1 [ i ] ) - ( cluster2 [ i ] ) ) ) ) > 2 ) return false ; } return true ; } 
public void handlePremiumAPI ( final jd.plugins.DownloadLink downloadLink , final jd.plugins.Account account ) throws java.lang.Exception , jd.plugins.PluginException { loginAPI ( account ) ; if ( ( account . getType () ) == ( jd.plugins.Account.AccountType.FREE ) ) { handleDownloadAPI ( downloadLink , true , 1 , false , "directlink_freeaccount" ) ; } else { handleDownloadAPI ( downloadLink , true , ( - 4 ) , true , "directlink_premiumaccount" ) ; } } 
private static java.util.Properties loadSettings ( data.Element p_element ) { java.util.Properties x_settings = new java.util.Properties () ; if ( p_element != null ) { java.util.List x_properties = p_element . getChildren () ; for ( java.lang.Object x_property : x_properties ) { data.Element x_propertyElem = ( ( data.Element ) ( x_property ) ) ; x_settings . setProperty ( x_propertyElem . getAttributeValue ( XmlConstants.s_PROPERTY_NAME ) , x_propertyElem . getAttributeValue ( XmlConstants.s_PROPERTY_VALUE ) ) ; } } return x_settings ; } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { int hold = 0 ; newEmployee = new workSQL.Employee ( hold , "" , "" , "" , "" ) ; workSQL.EmployeeDetailDialog addD = new workSQL.EmployeeDetailDialog ( thisFrame , thisFrame , "Add a new employee" , true , newEmployee ) ; addD.updateButton . setEnabled ( false ) ; addD.deleteButton . setEnabled ( false ) ; addD.employeeNumberField . setEnabled ( false ) ; addD . setVisible ( true ) ; } 
@ java.lang.Override public void getTooltip ( binnie.core.craftgui.Tooltip tooltip ) { if ( ( species ) == null ) { return; } switch ( discovered ) { case SHOW : case DISCOVERED : tooltip . add ( species . getName () ) ; break; case UNDISCOVERED : tooltip . add ( binnie.core.util.I18N . localise ( "binniecore.gui.database.discovered.undiscovered" ) ) ; break; } } 
public it.musichub.server.library.model.Folder getFolder ( it.musichub.server.library.model.Folder folder ) { if ( ( folders ) != null ) { for ( it.musichub.server.library.model.Folder f : folders ) { try { if ( java.nio.file.Files . isSameFile ( f . getFile () . toPath () , folder . getFile () . toPath () ) ) return f ; } catch ( java.io.IOException e ) {} } } return null ; } 
public com.ibm.watson.developer_cloud.discovery.v1.model.document.CreateDocumentRequest.Builder file ( java.io.File inputFile , java.lang.String mediaType ) { java.io.InputStream file ; try { file = new java.io.FileInputStream ( inputFile ) ; this . mediaType = mediaType ; this . fileName = inputFile . getName () ; } catch ( java.io.FileNotFoundException e ) { file = null ; } this . file = file ; return this ; } 
public ch.puzzle.itc.mobiliar.business.resourcegroup.control.CopyResourceResult doCopyResource ( java.lang.Integer targetResourceId , java.lang.Integer originResourceId , ch.puzzle.itc.mobiliar.business.foreignable.entity.ForeignableOwner actingOwner ) throws ch.puzzle.itc.mobiliar.business.foreignable.entity.ForeignableOwnerViolationException , ch.puzzle.itc.mobiliar.common.exception.AMWException { ch.puzzle.itc.mobiliar.business.resourcegroup.entity.ResourceEntity targetResource = commonDomainService . getResourceEntityById ( targetResourceId ) ; ch.puzzle.itc.mobiliar.business.resourcegroup.entity.ResourceEntity originResource = commonDomainService . getResourceEntityById ( originResourceId ) ; if ( ! ( permissionBoundary . canCopyFromSpecificResource ( originResource , targetResource . getResourceGroup () ) ) ) { throw new ch.puzzle.itc.mobiliar.common.exception.NotAuthorizedException ( "Permission Denied" ) ; } return copyResourceDomainService . copyFromOriginToTargetResource ( originResource , targetResource , actingOwner ) ; } 
@ java.lang.Override public void done ( com.parse.ParseUser user , com.parse.ParseException e ) { if ( e != null ) { android.util.Log . e ( com.codepath.timeline.network.TimelineClient.TAG , ( ( ( "Exception from getUser(" + userObjectId ) + "): " ) + ( e . getMessage () ) ) ) ; return; } if ( user != null ) { android.util.Log . d ( com.codepath.timeline.network.TimelineClient.TAG , "Success getUser" ) ; if ( listener != null ) { listener . onGetUser ( user ) ; } } } 
public java.lang.String textReturnResultOfSpecialFunctions ( int line , int pos ) { java.lang.StringBuilder s = new java.lang.StringBuilder () ; java.lang.String res = nextFreeRegister () ; s . append ( textMove ( "$v0" , res , line , pos ) ) ; return s . toString () ; } 
private java.lang.String getTrailerID ( org.verapdf.model.impl.pb.cos.COSArray ids ) { if ( ids != null ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( org.verapdf.model.impl.pb.cos.COSBase id : ids ) { builder . append ( ( ( org.verapdf.model.impl.pb.cos.COSString ) ( id ) ) . getASCII () ) . append ( ' ' ) ; } return builder . toString () . substring ( 0 , ( ( builder . length () ) - 2 ) ) ; } else { return null ; } } 
public static com.coast.model.ResultMSG doSell ( java.lang.String shopinFilePath , java.lang.String outPutFilePath ) { com.coast.model.ResultMSG resultMSG = new com.coast.model.ResultMSG () ; resultMSG . setErrorMessage ( "" ) ; com.coast.service.SellService sellService = new com.coast.service.impl.SellServiceImpl () ; java.util.List < com.coast.model.Product > products = sellService . getProductsFromShopinSellExcel ( shopinFilePath , resultMSG ) ; sellService . write ( products , outPutFilePath , resultMSG , shopinFilePath ) ; return resultMSG ; } 
public void respondAccepted_whenCreateARefund ( int amount , java.lang.String gatewayAccountId , java.lang.String chargeId , java.lang.String refundId , java.lang.String status , java.lang.String createdDate ) { whenCreateRefund ( amount , gatewayAccountId , chargeId ) . respond ( org.mockserver.model.HttpResponse . response () . withStatusCode ( uk.gov.pay.api.utils.ACCEPTED_202 ) . withHeader ( uk.gov.pay.api.utils.CONTENT_TYPE , javax.ws.rs.core.MediaType.APPLICATION_JSON ) . withBody ( buildGetRefundResponse ( refundId , amount , status , createdDate ) ) ) ; } 
public static org.gitlab4j.api.GitLabApi login ( org.gitlab4j.api.GitLabApi.ApiVersion apiVersion , java.lang.String url , java.lang.String username , java.lang.String password ) throws org.gitlab4j.api.GitLabApiException { org.gitlab4j.api.SessionApi sessionApi = new org.gitlab4j.api.SessionApi ( new org.gitlab4j.api.GitLabApi ( apiVersion , url , ( ( java.lang.String ) ( null ) ) ) ) ; org.gitlab4j.api.models.Session session = sessionApi . login ( username , null , password ) ; return new org.gitlab4j.api.GitLabApi ( apiVersion , url , session ) ; } 
private javax.swing.JTextField createText ( java.lang.String text , int width , int height , boolean editable ) { javax.swing.JTextField textfield = new javax.swing.JTextField ( text ) ; textfield . setEditable ( editable ) ; if ( ! editable ) { textfield . setBackground ( null ) ; } gui.GUI . setfinalSize ( textfield , new java.awt.Dimension ( width , height ) ) ; return textfield ; } 
private java.util.Set < java.security.Principal > collectPrincipals ( final javax.jcr.Credentials credentials ) { final java.util.Set < java.security.Principal > principals = new java.util.HashSet <> () ; for ( final org.fcrepo.auth.common.PrincipalProvider p : this . getPrincipalProviders () ) { final java.util.Set < java.security.Principal > ps = p . getPrincipals ( credentials ) ; if ( ps != null ) { principals . addAll ( p . getPrincipals ( credentials ) ) ; } } return principals ; } 
public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . get ( i ) . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . get ( 1 ) . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } 
private void startService ( final int target ) { new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { if ( checkAccess () ) { startActivity ( new android.content.Intent ( com.example.hjk.testing.MainActivity . this , com.example.hjk.testing.Info . class ) . putExtra ( "id" , id ) . putExtra ( "driver" , driv ) . putExtra ( "target" , target ) ) ; } else { android.os.Looper . prepare () ; accessError () ; android.os.Looper . loop () ; } } } ) . start () ; } 
private static void startWorker ( ru.bigspawn.parser.bot.Bot bot , java.lang.String url ) throws java.io.UnsupportedEncodingException { ru.bigspawn.parser.parser.AlterPortalParser parser = new ru.bigspawn.parser.parser.AlterPortalParser ( url ) ; java.lang.String loggerName = ru.bigspawn.parser.Utils . getLoggerNameFromUrl ( url ) ; ru.bigspawn.parser.Worker worker = new ru.bigspawn.parser.Worker ( parser , bot , loggerName ) ; ru.bigspawn.parser.Main.logger . debug ( ( "Create " + worker ) ) ; java.lang.Thread thread = new java.lang.Thread ( worker , ( "Thread: " + loggerName ) ) ; thread . start () ; ru.bigspawn.parser.Main.logger . debug ( ( "Start " + thread ) ) ; } 
@ java.lang.Override public boolean decode ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.util.TextRange rangeInsideHost , @ org.jetbrains.annotations.NotNull final java.lang.StringBuilder outChars ) { com.intellij.openapi.util.TextRange . assertProperRange ( rangeInsideHost ) ; java.lang.String subText = rangeInsideHost . substring ( myHost . getText () ) ; if ( ( myHost . getRawString () ) != null ) { outChars . append ( subText ) ; return true ; } return parseStringCharacters ( subText , outChars ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "getSchoolById" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView getSchoolById ( @ org.springframework.web.bind.annotation.RequestParam int schId ) { org.springframework.web.servlet.ModelAndView mv = new org.springframework.web.servlet.ModelAndView ( "school_update" ) ; java.util.List < bean.School > schoolList = schoolService . getSchoolbyId ( schId ) ; if ( ! ( schoolList . isEmpty () ) ) { bean.School school = schoolList . get ( 0 ) ; mv . addObject ( "school" , school ) ; } else { java.lang.System.out . println ( " no such school" ) ; } return mv ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } } 
private org.quicktionary.backend.TextNode generateNotFound ( java.lang.String string ) { org.quicktionary.backend.TextNode root ; org.quicktionary.backend.TextNode paragraph ; org.quicktionary.backend.TextNode header ; org.quicktionary.backend.TextNode text ; root = new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.ROOT_TYPE ) ; header = root . appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.HEADER_TYPE ) ) ; paragraph = root . appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PARAGRAPH_TYPE ) ) ; header . setContent ( "Sorry!" ) ; text = paragraph . appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PLAIN_TYPE ) ) ; text . setContent ( ( ( "We couldn't find the page for the word " + string ) + "." ) ) ; return root ; } 
@ javafx.fxml.FXML public void save ( javafx.event.ActionEvent event ) throws java.io.IOException { season . save ( "save1.json" ) ; javafx.scene.Parent root = javafx.fxml.FXMLLoader . load ( getClass () . getResource ( "/views/home.fxml" ) ) ; javafx.stage.Stage stage = ( ( javafx.stage.Stage ) ( budget . getScene () . getWindow () ) ) ; stage . getScene () . setRoot ( root ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int position = ( ( java.lang.Integer ) ( v . getTag () ) ) ; me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ; if ( ( v . getId () ) == ( R.id.ib_hp_minus_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH ; } else if ( ( v . getId () ) == ( R.id.ib_hp_add_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH ; } else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK ; } clickListener . onCombatClick ( position , eventType ) ; } 
public double getprice ( java.lang.String symbol ) throws java.io.IOException { yahoofinance.Stock stock = yahoofinance.YahooFinance . get ( symbol ) ; if ( stock == null ) return - 1 ; java.lang.String name = stock . getName () ; if ( ( name . compareTo ( "N/A" ) ) == 0 ) return - 1 ; java.math.BigDecimal price_dec = stock . getQuote () . getPrice () ; java.lang.Double price_dub = price_dec . doubleValue () ; return price_dub ; } 
@ java.lang.Override public void readFromNBT ( @ org.jetbrains.annotations.NotNull final net.minecraft.nbt.NBTTagCompound compound ) { super . readFromNBT ( compound ) ; final net.minecraft.nbt.NBTTagList furnaceTagList = compound . getTagList ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_FURNACES , Constants.NBT.TAG_COMPOUND ) ; for ( int i = 0 ; i < ( furnaceTagList . tagCount () ) ; ++ i ) { furnaces . add ( net.minecraft.nbt.NBTUtil . getPosFromTag ( furnaceTagList . getCompoundTagAt ( i ) . getCompoundTag ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_POS ) ) ) ; } isSomethingInOven = compound . getBoolean ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_COOKING ) ; } 
public org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } } 
public static boolean hasSpace ( proto.game.scene.Scene scene , proto.game.scene.PropType type , int x , int y , int facing ) { for ( proto.game.scene.Tile under : proto.game.scene.Prop . tilesUnder ( type , scene , x , y , facing , 0 ) ) { if ( under == null ) return false ; for ( proto.game.scene.Element e : under . inside () ) if ( e . wouldBlock ( type ) ) return false ; } return true ; } 
@ java.lang.Override protected void onPostExecute ( kz.mukhamedissa.exchangerates.data.response.ExchangeRateResponse response ) { super . onPostExecute ( response ) ; if ( ( response . isSuccess () ) && ( ( response.result ) != null ) ) { kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory . getArticleORM () . delete ( getBaseContext () ) ; kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory . getArticleORM () . insert ( getBaseContext () , response.result ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( movieIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( movieIdChosen ) ; rentalInfoController . returnMovie ( id , clientSelected . getId () ) ; movieController . returnMovie ( id , panel , scroll ) ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > adapterView , android.view.View view , int i , long l ) { com.example.sayli.nchs.getset.Logs point = listLogs . get ( i ) ; android.content.Intent startCallReport = new android.content.Intent ( this , com.example.sayli.nchs.ReportCallStatus . class ) ; startCallReport . putExtra ( "id" , id ) ; startCallReport . putExtra ( "crn" , point . getCrn () ) ; startCallReport . putExtra ( "mob" , point . getCustNo () ) ; startActivity ( startCallReport ) ; } 
public int pull_chunk ( double [] data_buffer , double [] timestamp_buffer , double timeout ) throws java.lang.Exception { int [] ec = new int [] { 0 } ; long res = edu.ucsd.sccn.LSL.inst . lsl_pull_chunk_d ( obj , data_buffer , timestamp_buffer , data_buffer.length , timestamp_buffer.length , timeout , ec ) ; edu.ucsd.sccn.LSL . check_error ( ec ) ; return ( ( int ) ( res ) ) ; } 
private boolean isPrime ( int p ) { if ( p == 2 ) return true ; if ( p < 3 ) return false ; if ( ( p % 2 ) == 0 ) return false ; for ( int i = 3 ; ( i * i ) <= p ; i += 2 ) if ( ( p % i ) == 0 ) return false ; return true ; } 
public com.ma.schiffeversenken.android.model.Field.ShipsDescriptor newShipsDescriptor ( com.ma.schiffeversenken.android.model.Ship [] placedShips ) { com.ma.schiffeversenken.android.model.Field.ShipsDescriptor desc = new com.ma.schiffeversenken.android.model.Field.ShipsDescriptor () ; desc.shipsPlaced = new java.util.ArrayList < com.ma.schiffeversenken.android.model.Field.ShipDescriptor > ( placedShips.length ) ; for ( com.ma.schiffeversenken.android.model.Ship ship : placedShips ) { com.ma.schiffeversenken.android.model.Field.ShipDescriptor shipDesc = new com.ma.schiffeversenken.android.model.Field.ShipDescriptor () . newShipDescriptor ( ship ) ; desc.shipsPlaced . add ( shipDesc ) ; } return desc ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "0" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_mail" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else { if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/createFolder" ) @ javax.ws.rs.Produces ( value = pt.webdetails.cpf.utils.MimeTypes.JSON ) public java.lang.String createFolder ( @ javax.ws.rs.QueryParam ( value = pt.webdetails.cfr.CfrApi.MethodParams.PATH ) java.lang.String path ) throws java.lang.Exception { path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( path ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; return new org.json.JSONObject () . put ( "result" , createResult ) . toString () ; } 
@ java.lang.Override public java.lang.Object call ( java.lang.Object target ) throws java.lang.Exception { java.lang.String [] bashArgs = ( ( bb.mbaas.api.elements.SDKBashButton ) ( runBtn ) ) . getBashArgs () ; bb.mbaas.api.GlobalProperties globalProperties = new bb.mbaas.api.GlobalProperties () ; java.lang.String testSuitePath = projPathTF . getText () ; bashArgs [ 2 ] = testSuitePath ; ( ( bb.mbaas.api.elements.SDKBashButton ) ( runBtn ) ) . refreshBashArgs ( bashArgs ) ; return null ; } 
@ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.content.Intent intent ; if ( hasUser () ) intent = new android.content.Intent ( this , rustelefonen.no.drikkevett_android.MainActivity . class ) ; else intent = new android.content.Intent ( this , rustelefonen.no.drikkevett_android.intro.WelcomeActivity . class ) ; startActivity ( intent ) ; finish () ; } 
@ java.lang.Override public void setHtmltopdf ( java.lang.String htmlString , java.lang.String collectionTitle ) { this . analyticService . setHTMLtoPDF ( htmlString , collectionTitle , false , new com.google.gwt.user.client.rpc.AsyncCallback < java.lang.String > () { @ java.lang.Override public void onSuccess ( java.lang.String result ) { getView () . getFrame () . setUrl ( result ) ; } @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) {} } ) ; } 
private static java.nio.ByteBuffer setUpBuffer ( java.nio.ByteBuffer sector , int value ) { sector . clear () ; java.lang.Byte byteValue = ( ( byte ) ( 0 ) ) ; while ( sector . hasRemaining () ) { sector . put ( byteValue ) ; } sector . flip () ; return sector ; } 
public static boolean isEmpty ( java.lang.Object payload ) { if ( payload instanceof java.lang.String ) { return org.springframework.util.StringUtils . isEmpty ( payload ) ; } else if ( payload instanceof org.w3c.dom.Node ) { return ! ( ( ( org.w3c.dom.Node ) ( payload ) ) . hasChildNodes () ) ; } else { throw new java.lang.RuntimeException ( no.difi.meldingsutveksling.noarkexchange.PayloadUtil.PAYLOAD_UNKNOWN_TYPE ) ; } } 
public void backupPortfolio ( android.content.Context context , java.lang.String fileName ) { persist () ; this . mAppStorage . putString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON , getStocksJson () . toString () ) . apply () ; java.lang.String rawJson = this . mAppStorage . getString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON , "" ) ; if ( nitezh.ministock.UserData . writeExternalStorage ( context , rawJson , ( fileName + ".txt" ) , "portfoliobackups/" ) ) nitezh.ministock.DialogTools . showSimpleDialog ( context , "PortfolioActivity backed up" , ( "Your portfolio settings have been backed up to ministocks/portfoliobackups/" + fileName ) ) ; } 
private static int findValue ( int needle , java.lang.Integer [] haystack ) { int start = 0 ; int end = haystack.length ; while ( start < end ) { int midpoint = ( start + end ) / 2 ; int test = haystack [ midpoint ] ; if ( test == needle ) { return midpoint ; } else if ( test < needle ) { start = midpoint + 1 ; } else { end = midpoint ; } } return - 1 ; } 
protected void initializeOrdinal ( final int defaultOrdinal ) { this . ordinal = defaultOrdinal ; java.lang.String ordinal = get ( PropertySource.TAMAYA_ORDINAL ) ; if ( ordinal != null ) { try { this . ordinal = java.lang.Integer . parseInt ( ordinal ) ; } catch ( java.lang.NumberFormatException e ) { org.apache.tamaya.core.propertysource.BasePropertySource.LOG . log ( java.util.logging.Level.WARNING , "Specified {0} is not a valid Integer value: {1} - using defaultOrdinal {2}" , new java.lang.Object [] { org.apache.tamaya.spi.PropertySource.TAMAYA_ORDINAL , ordinal , defaultOrdinal } ) ; } } } 
@ java.lang.Override public final void unregisterRpcNotificationListener ( com.smartdevicelink.protocol.enums.FunctionID functionID , com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener rpcNotificationListener ) { int id = functionID . getId () ; java.util.HashSet < com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener > listenerSet = mNotificationListeners . get ( id ) ; if ( listenerSet != null ) { listenerSet . remove ( rpcNotificationListener ) ; if ( ( listenerSet . isEmpty () ) && ( ( mSdlProxyALM ) != null ) ) { mSdlProxyALM . removeOnRPCNotificationListener ( functionID ) ; mNotificationListeners . put ( id , null ) ; } } } 
protected java.lang.Long doInBackground ( com.androidexpansion.filedownloader.DownloadExtraAssets [] remoteLocalResources ) { int count = remoteLocalResources.length ; long totalSize = 0 ; for ( int i = 0 ; i < count ; i ++ ) { totalSize += downloadExtraAssets . downloadFile ( remoteLocalResources [ i ] ) ; java.lang.Integer progress = ( ( int ) ( ( ( i + 1 ) / ( ( float ) ( count ) ) ) * 100 ) ) ; publishProgress ( progress ) ; if ( isCancelled () ) break; } return totalSize ; } 
public void loadPost ( edu.ycp.cs320.groupProject.model.Post p , java.sql.ResultSet resultSet , int index ) throws java.sql.SQLException { p . setText ( resultSet . getString ( ( index ++ ) ) ) ; p . setSenderName ( resultSet . getString ( ( index ++ ) ) ) ; p . setRoomID ( resultSet . getInt ( ( index ++ ) ) ) ; } 
private guiPacket.Card removeCardFromHand ( guiPacket.Card cardToRemove ) { for ( int i = 0 ; i < ( hand . size () ) ; i ++ ) { if ( ( cardToRemove . compareTo ( hand . get ( i ) ) ) == 0 ) { hand . remove ( i ) ; return cardToRemove ; } } java.lang.System.out . println ( "RemoveCardFromHand: Something went wrong" ) ; return null ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { myEvents . clear () ; sortData ( eventbriteEvents ) ; myEvents . addAll ( eventbriteEvents ) ; sortData ( eventfulEvents ) ; myEvents . addAll ( eventfulEvents ) ; mAdapter = new com.festivent.hardeep.festivent.ListAdapter ( this , myEvents , sEvents , true ) ; mRecyclerView . setAdapter ( mAdapter ) ; pBar . setVisibility ( View.GONE ) ; super . onPostExecute ( aVoid ) ; } 
public static void chunk ( java.awt.image.Raster target , psiborg.fractal.Viewport view , int times , java.lang.Runnable callback ) { for ( psiborg.fractal.Viewport fragment : new psiborg.fractal.Viewport ( 0 , 0 , target . getWidth () , target . getHeight () ) . tesselate ( times ) ) { psiborg.fractal.jobs.JobQueue . addJob ( new psiborg.fractal.jobs.RenderJob ( fragment , view , callback , null ) ) ; } } 
public boolean updateProduction ( double diff ) { _simStat.currentElectricity += diff ; if ( ( _connect._simStat ) != null ) { _connect._simStat.currentElectricity += diff ; } if ( ( ( _simStat.currentElectricity ) > ( _maxProduction ) ) || ( ( _simStat.currentElectricity ) < ( _minProduction ) ) ) { _simStat.isOk = false ; } else { _simStat.isOk = true ; } return _simStat.isOk ; } 
private void addPorts ( java.lang.StringBuilder b ) { if ( ( ports . size () ) > 0 ) { java.lang.String [] portsS = new java.lang.String [ ports . size () ] ; int i = 0 ; for ( java.lang.String port : ports ) { portsS [ ( i ++ ) ] = validatePortExposure ( port ) ; } DockerFileKeyword.EXPOSE . addTo ( b , portsS ) ; } } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent ev ) { super . onTouchEvent ( ev ) ; dragHelper . processTouchEvent ( ev ) ; final android.view.ViewGroup parent = ( ( android.view.ViewGroup ) ( findBottomView ( this , x , y ) . getParent () ) ) ; return parent == ( this ) ; } 
public boolean checkData ( int HDice , int HRoll , int DDice , int DRoll , int DDealt ) { if ( ( HRoll < HDice ) || ( HRoll > ( HDice * ( MAX_DIE_ROLL ) ) ) ) return false ; if ( ( DRoll < DDice ) || ( DRoll > ( DDice * ( MAX_DIE_ROLL ) ) ) ) return false ; return true ; } 
@ java.lang.Override protected org.eclipse.draw2d.geometry.Rectangle getFrameArea ( org.eclipse.draw2d.geometry.Rectangle origin ) { if ( ! ( model . isMinimizedView () ) ) { return new org.eclipse.draw2d.geometry.Rectangle ( ( ( origin.x ) + ( GRID_SIZE ) ) , origin.y , ( ( origin.width ) - ( 2 * ( GRID_SIZE ) ) ) , ( ( origin.height ) - ( GRID_SIZE ) ) ) ; } return super . getFrameArea ( origin ) ; } 
int convertSImeiToID ( java.lang.String text ) { if ( text == null ) text = java.util.Calendar . getInstance () . getTime () . toString () ; int sum = 0 ; char [] imei = text . toCharArray () ; for ( int i = 0 ; i < ( text . length () ) ; i ++ ) sum = sum + ( imei [ i ] ) ; return 16384 + sum ; } 
private void initHeaderViewToRefresh ( int deltaY ) { int topDistance = UpdateHeadViewMarginTop ( deltaY ) ; if ( ( topDistance < 0 ) && ( topDistance > ( - ( headViewHeight ) ) ) ) { mBaseHeaderAdapter . pullViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH ; } else if ( ( topDistance > 0 ) && ( ( mHeaderState ) != ( com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ) ) ) { mBaseHeaderAdapter . releaseViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ; } } 
void merge ( hivemall.fm.FMPredictUDAF.PartialResult other ) { this . ret += other.ret ; if ( ( this . sumVjXj ) == null ) { this . sumVjXj = other.sumVjXj ; this . sumV2X2 = other.sumV2X2 ; } else { hivemall.fm.FMPredictUDAF.PartialResult . add ( other.sumVjXj , sumVjXj ) ; assert ( sumV2X2 ) != null ; hivemall.fm.FMPredictUDAF.PartialResult . add ( other.sumV2X2 , sumV2X2 ) ; } } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { mOriginal . remove ( getItems () . get ( position ) ) ; getItems () . remove ( position ) ; getBaseAdapter () . notifyItemRemoved ( position ) ; android.widget.Toast . makeText ( getContext () , "Sent request!" , Toast.LENGTH_LONG ) . show () ; } else { android.widget.Toast . makeText ( getContext () , e . getMessage () , Toast.LENGTH_LONG ) . show () ; } } 
public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getArticleDetailById ( long id ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > article = aDao . getArticleDetailById ( id ) ; if ( ! ( article . isEmpty () ) ) article . get ( 0 ) . put ( "tags" , aDao . getArticleTagsById ( java.lang.Integer . parseInt ( article . get ( 0 ) . get ( "id" ) . toString () ) ) ) ; return article ; } 
private void fail ( final java.lang.Throwable t ) { synchronized ( this ) { if ( ! ( done ) ) { done = true ; if ( ( timeoutFuture ) != null ) { timeoutFuture . cancel ( true ) ; } setFailure ( t ) ; } } } 
private void freezeValues ( net.ssehub.easy.varModel.model.AbstractVariable var , net.ssehub.easy.varModel.confModel.IFreezeSelector selector ) { if ( ( var . isTopLevel () ) || ( ( var . getParent () ) instanceof net.ssehub.easy.varModel.model.AttributeAssignment ) ) { net.ssehub.easy.varModel.confModel.IDecisionVariable frozenVariable = getDecision ( var ) ; if ( null != frozenVariable ) { frozenVariable . freeze ( selector ) ; } } else { net.ssehub.easy.varModel.model.IModelElement parent = var . getParent () ; java.lang.System.out . println ( ( "Config freeze for nested variable not implemented: " + parent ) ) ; } } 
private void processMethod ( final java.lang.reflect.Method method ) { method . setAccessible ( true ) ; if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil . getValueHandlerAnnotation ( method ) ) != null ) { processMethodWithValueHandler ( method ) ; } else if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil . getCallHandlerAnnotation ( method ) ) != null ) { processMethodWithCallHandler ( method ) ; } } 
private void startVPN ( de.blinkt.openvpn.VpnProfile profile ) { mSelectedProfile = profile ; mSelectedProfile.mAllowLocalLAN = true ; profileManager . saveProfile ( this , profile ) ; prefs . setLastProfile ( profile . getName () ) ; prefs . setLastUuid ( profile . getUUIDString () ) ; prefs . setLan ( mSelectedProfile.mAllowLocalLAN ) ; launchVPN () ; } 
@ java.lang.Override public java.util.List < uk.co.olimor.BMBTApi_boot.model.TestResult > getResultHistory ( final java.lang.String userId ) throws uk.co.olimor.BMBTApi_boot.exception.ApiException { log . entry ( userId ) ; final java.util.List < uk.co.olimor.BMBTApi_boot.model.TestResult > results = query ( java.lang.String . format ( uk.co.olimor.BMBTApi_boot.dao.impl.ResultsHistoryQueryImpl.QUERY , userId ) ) ; if ( ( results . size () ) == 0 ) throw new uk.co.olimor.BMBTApi_boot.exception.ApiException ( "No results found for user id" , org.springframework.http.HttpStatus.NOT_FOUND ) ; return log . traceExit ( results ) ; } 
@ java.lang.Override public void propertyChange ( java.beans.PropertyChangeEvent event ) { if ( ( document ) != null ) { if ( ( document . getLineManager () ) != null ) { document . getLineManager () . removeLineListener ( this ) ; } } document = ( ( kkckkc.syntaxpane.model.SourceDocument ) ( event . getNewValue () ) ) ; document . getLineManager () . addLineListener ( this ) ; document . addFoldListener ( new kkckkc.syntaxpane.model.MutableFoldManager.FoldListener () { public void foldUpdated () { repaint () ; } } ) ; } 
public boolean elementIsDisplayed ( final net.serenitybdd.core.pages.By byElementCriteria ) { try { waitFor ( net.serenitybdd.core.pages.ExpectedConditions . visibilityOfAllElementsLocatedBy ( byElementCriteria ) ) ; return true ; } catch ( net.serenitybdd.core.pages.NoSuchElementException noSuchElement ) { return false ; } catch ( net.serenitybdd.core.pages.StaleElementReferenceException se ) { return false ; } catch ( net.serenitybdd.core.pages.TimeoutException iGuessItsNotThere ) { return false ; } } 
private pl.sdacaemy.data.structures.impl.ForwardList.Node getItemNode ( int index ) throws java.lang.IndexOutOfBoundsException { if ( index == 0 ) { if ( ( head ) == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return head ; } int currentIndex = 0 ; pl.sdacaemy.data.structures.impl.ForwardList.Node currentNode = head ; while ( ( ( currentNode.next ) != null ) && ( currentIndex < index ) ) { ++ currentIndex ; currentNode = currentNode.next ; } if ( currentNode == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return currentNode ; } 
protected org.openl.rules.lang.xls.binding.XlsModuleOpenClass createModuleOpenClass ( org.openl.rules.lang.xls.syntax.XlsModuleSyntaxNode moduleNode , org.openl.OpenL openl , org.openl.rules.data.IDataBase dbase , java.util.Set < org.openl.dependency.CompiledDependency > moduleDependencies , org.openl.binding.IBindingContext bindingContext ) { return new org.openl.rules.lang.xls.binding.XlsModuleOpenClass ( null , org.openl.rules.lang.xls.XlsHelper . getModuleName ( moduleNode ) , new org.openl.rules.lang.xls.binding.XlsMetaInfo ( moduleNode ) , openl , dbase , moduleDependencies , org.openl.engine.OpenLSystemProperties . isDTDispatchingMode ( bindingContext . getExternalParams () ) , org.openl.engine.OpenLSystemProperties . isDispatchingValidationEnabled ( bindingContext . getExternalParams () ) ) ; } 
public void sendLoggedIn ( org.bukkit.plugin.Plugin plugin , org.bukkit.entity.Player p ) { com.mengcraft.account.bungee.BungeeMessage message = new com.mengcraft.account.bungee.BungeeMessage () ; message . setType ( BungeeMain.DISTRIBUTE ) ; message . setName ( p . getName () ) ; message . setIp ( p . getAddress () . getAddress () . getHostAddress () ) ; p . sendPluginMessage ( plugin , com.mengcraft.account.bungee.BungeeMain.CHANNEL , message . toByteArray () ) ; } 
private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes == null ) return; com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } 
protected java.lang.String getDisplayNameForAccountID ( int accountID ) throws com.starbattle.accounts.manager.AccountException { com.starbattle.accounts.manager.impl.sql.SqlSelectStatement select = new com.starbattle.accounts.manager.impl.sql.SqlSelectStatement () ; try { select . select ( PlayerTable.NAME ) ; select . from ( com.starbattle.accounts.manager.impl.tables.PlayerTable . class ) ; select . where ( PlayerTable.ACCOUNT_ID ) ; select . values ( accountID ) ; java.sql.ResultSet rs = select . execute ( databaseControl ) ; rs . next () ; return rs . getNString ( 1 ) ; } catch ( java.sql.SQLException e ) { throw new com.starbattle.accounts.manager.AccountException ( "Failed to get Displayname for AccountId." ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( mSearchResult ) != null ) { android.content.ContentValues historyValues = new android.content.ContentValues () ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_ID , mSearchResult . getRestID () ) ; historyValues . put ( DataContract.HistoryEntry.COLUMN_RESTAURANT_NAME , mSearchResult . getRestName () ) ; android.net.Uri uri = getActivity () . getContentResolver () . insert ( DataContract.HistoryEntry.CONTENT_URI , historyValues ) ; android.util.Log . d ( "history check" , uri . toString () ) ; onLocationChaged ( curLatitude , curLongitude ) ; } } 
public static demo.kolorob.kolorobdemoversion.model.FInancial.FinancialServiceDetailsItem parseFinancialServiceDetailsItem ( org.json.JSONObject jo ) throws org.json.JSONException { int _finId = jo . getInt ( "id" ) ; java.lang.String _servicecost = jo . getString ( "financial_cost" ) ; java.lang.String _serviceremark = jo . getString ( "financial_remarks" ) ; java.lang.String _servicetype = jo . getJSONObject ( "financial_services" ) . getString ( "type" ) ; java.lang.String _servicesubtype = jo . getJSONObject ( "financial_services" ) . getString ( "sub_type" ) ; return new demo.kolorob.kolorobdemoversion.model.FInancial.FinancialServiceDetailsItem ( _finId , _servicecost , _serviceremark , _servicetype , _servicesubtype ) ; } 
public static java.lang.ClassLoader createClassLoader ( final java.net.URL [] urls , final java.lang.ClassLoader parentClassLoader ) { java.lang.System . setSecurityManager ( null ) ; return java.security.AccessController . doPrivileged ( ( ( java.security.PrivilegedAction < java.net.URLClassLoader > ) ( ( ) - > new java.net.URLClassLoader ( urls , parentClassLoader ) ) ) ) ; } 
public void setStallProtection ( double stallMinPower , double stallTimeout , double resetTimeout ) { final java.lang.String funcName = "setStallProtection" ; if ( trclib.TrcPidMotor.debugEnabled ) { dbgTrace . traceEnter ( funcName , TrcDbgTrace.TraceLevel.API , "stallMinPower=%f,stallTimeout=%f,resetTimeout=%f" , stallMinPower , stallTimeout , resetTimeout ) ; dbgTrace . traceExit ( funcName , TrcDbgTrace.TraceLevel.API ) ; } this . stallMinPower = java.lang.Math . abs ( stallMinPower ) ; this . stallTimeout = java.lang.Math . abs ( stallTimeout ) ; this . resetTimeout = java.lang.Math . abs ( resetTimeout ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Toast . makeText ( this , "Pedido cancelado" , Toast.LENGTH_SHORT ) . show () ; if ( readOnly ) { firebaseRealtimeDatabaseHelperOrders . delete ( order ) ; removeNotification ( com.cynerds.cyburger.activities.MainActivity.ORDERS_TAB , 1 ) ; } else { previousOrder = new com.cynerds.cyburger.models.orders.Order () ; } badge . setBadgeCount ( 0 ) ; order = new com.cynerds.cyburger.models.orders.Order () ; dialogManager . closeDialog () ; } 
@ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { mImageUrlInterface = ( ( com.example.randomlocks.gamesnote.DialogFragment.ImageUrlFragment.ImageUrlInterface ) ( getActivity () ) ) ; } catch ( java.lang.Exception e ) { com.example.randomlocks.gamesnote.HelperClass.Toaster . make ( getContext () , "interface cast exception" ) ; } } 
public org.opencb.opencga.catalog.managers.QueryResult < org.opencb.opencga.catalog.managers.File > createFolder ( long studyId , java.nio.file.Path folderPath , org.opencb.opencga.catalog.managers.File.FileStatus status , boolean parents , java.lang.String description , org.opencb.opencga.catalog.managers.QueryOptions options , java.lang.String sessionId ) throws org.opencb.opencga.catalog.exceptions.CatalogException { org.opencb.opencga.catalog.utils.ParamUtils . checkPath ( folderPath , "folderPath" ) ; return fileManager . createFolder ( studyId , folderPath . toString () , status , parents , description , options , sessionId ) ; } 
@ java.lang.Override protected com.rastating.droidbeard.entities.TVShow doInBackground ( java.lang.Long . . . longs ) { long tvdbid = longs [ 0 ] ; com.rastating.droidbeard.entities.TVShow show = getTVShow ( tvdbid ) ; if ( show != null ) { java.util.List < com.rastating.droidbeard.entities.Season > seasons = getSeasons ( tvdbid ) ; if ( seasons != null ) { java.util.Collections . sort ( seasons , new com.rastating.droidbeard.comparators.SeasonComparator () ) ; java.util.Collections . reverse ( seasons ) ; show . setSeasons ( seasons ) ; } } return show ; } 
private java.lang.String getValue ( int i , int j ) { if ( i == j ) { return "x" ; } else { return getValue ( countMap . get ( new context.healthinformatics.graphs.ConnectionSet ( codes . get ( i ) , codes . get ( j ) ) ) ) ; } } 
public static void showAlert ( android.app.Activity activity , java.lang.String title , java.lang.String msg ) { com.extenprise.mapp.util.Utility . showAlert ( activity , title , msg , false , null , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } ) ; } 
@ java.lang.Override protected int getZWithOffset ( int x , int z ) { net.minecraft.util.EnumFacing enumfacing = this . getCoordBaseMode () ; if ( enumfacing == null ) { return z ; } else { switch ( enumfacing ) { case SOUTH : return ( this . boundingBox . minZ ) + z ; case WEST : return ( this . boundingBox . minZ ) + x ; case NORTH : return ( this . boundingBox . maxZ ) - z ; case EAST : return ( this . boundingBox . maxZ ) - x ; default: return z ; } } } 
public void instamojoResponse ( java.lang.String status , java.lang.String orderId , java.lang.String transactionId , java.lang.String paymentId ) { loaderView . setVisibility ( View.GONE ) ; if ( status . equals ( "ok" ) ) { checkPaymentStatus ( this . paymentId ) ; } else if ( status . equals ( "error" ) ) { setScreen ( "retry" ) ; } } 
private static void aggregate ( java.util.Map < cc.blynk.server.storage.reporting.average.AggregationKey , cc.blynk.server.storage.reporting.average.AggregationValue > map , cc.blynk.server.storage.reporting.average.AggregationKey key , double value ) { cc.blynk.server.storage.reporting.average.AggregationValue aggregationValue = map . get ( key ) ; if ( aggregationValue == null ) { final cc.blynk.server.storage.reporting.average.AggregationValue aggregationValueTmp = new cc.blynk.server.storage.reporting.average.AggregationValue () ; aggregationValue = map . putIfAbsent ( key , aggregationValueTmp ) ; if ( aggregationValue == null ) { aggregationValue = aggregationValueTmp ; } } aggregationValue . update ( value ) ; } 
public java.lang.String convertCalendarToString ( java.util.GregorianCalendar toBeConverted ) { java.lang.String result = new java.lang.String () ; java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "MM dd yyyy HHmm" ) ; result = df . format ( toBeConverted . getTime () ) ; java.lang.System.out . println ( ( ( toBeConverted + " was converted to " ) + result ) ) ; return result ; } 
private beans.Utente transform ( org.telegram.telegrambots.api.objects.User utente , java.lang.Long chatId ) { beans.Utente utenteCustom = new beans.Utente () ; utenteCustom . setChatId ( chatId ) ; utenteCustom . setId ( utente . getId () ) ; utenteCustom . setCognome ( utente . getLastName () ) ; utenteCustom . setName ( utente . getFirstName () ) ; utenteCustom . setUsername ( utente . getUserName () ) ; return utenteCustom ; } 
protected static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } 
public OL getItem ( int position ) { if ( ( mList ) != null ) { if ( ( position >= 0 ) && ( position < ( mList . size () ) ) ) { return mList . get ( position ) ; } com.openarena.util.L . e ( com.openarena.model.AbstractRecyclerAdapter . class , ( ( "no item[" + position ) + "]" ) ) ; } com.openarena.util.L . e ( com.openarena.model.AbstractRecyclerAdapter . class , "error to get item" ) ; return null ; } 
@ java.lang.Override public void joinGame ( shared.definitions.CatanColor color ) { if ( state . joinGame ( color ) ) { stopTimer () ; if ( getSelectColorView () . isModalShowing () ) getSelectColorView () . closeModal () ; model.ModelFacade . getInstance () . updateGameModel () ; joinAction . execute () ; model.ModelFacade . getInstance () . getPoller () . start () ; } } 
private com.alamkanak.weekview.WeekViewEvent getEvent ( long start , long end , java.lang.String title ) { java.util.Calendar startTime = java.util.Calendar . getInstance () ; java.util.Calendar endTime = java.util.Calendar . getInstance () ; startTime . setTimeInMillis ( start ) ; endTime . setTimeInMillis ( end ) ; com.alamkanak.weekview.WeekViewEvent event = new com.alamkanak.weekview.WeekViewEvent ( counter , getEventTitle ( startTime , title ) , startTime , endTime ) ; event . setColor ( getResources () . getColor ( R.color.primary ) ) ; mWeekView . notifyDatasetChanged () ; return event ; } 
public java.lang.Iterable < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > cat ( final org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > ego , final java.util.Set < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > alters ) { final java.util.Collection < org.matsim.api.core.v01.Id < org.matsim.api.core.v01.population.Person > > ids = new java.util.HashSet ( alters ) ; ids . add ( ego ) ; return ids ; } 
private void jButton1ActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.String name = jTextField1 . getText () ; java.lang.System.out . println ( name ) ; Zipper.Zip a = new Zipper.Zip () ; a.modpack = name ; a . archiveDir ( null ) ; Modpacktxt.name = name ; try { Zipper.Modpacktxt . main ( null ) ; } catch ( java.io.IOException ex ) { java.util.logging.Logger . getLogger ( Zipper.frage . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } this . dispose () ; } 
public void onRequestPermissionResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) throws org.json.JSONException { for ( int r : grantResults ) { if ( r == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { this . callback . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR , de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_DENIED_ERROR ) ) ; return; } } executeInternal ( this . action , this . rawArgs , this . callback ) ; } 
public void addCover ( org.ernest.applications.dmc.report.builders.Document document , java.lang.String region ) throws java.io.IOException , org.ernest.applications.dmc.report.builders.DocumentException { buildImage ( document ) ; org.ernest.applications.dmc.report.builders.Paragraph paragraph = new org.ernest.applications.dmc.report.builders.Paragraph ( region , org.ernest.applications.dmc.report.builders.BuilderUtils . getTitleFont () ) ; paragraph . setSpacingBefore ( 100 ) ; paragraph . setAlignment ( Element.ALIGN_CENTER ) ; document . add ( paragraph ) ; document . newPage () ; } 
@ java.lang.Override public void processCommand ( net.minecraft.command.ICommandSender p_71515_1_ , java.lang.String [] p_71515_2_ ) { if ( ( p_71515_2_.length ) >= 1 ) { if ( p_71515_2_ [ 0 ] . equalsIgnoreCase ( "help" ) ) { mainserverjt.piratemod.command.commands.HelpCommand . processCommand ( p_71515_1_ , removeIndexUntil ( 1 , p_71515_2_ ) ) ; } } else { mainserverjt.piratemod.command.ChatColor . sendPrivateMessage ( p_71515_1_ , ( ( ( ChatColor.prefix ) + ( ChatColor.rood ) ) + "Use /pm help" ) ) ; } } 
private void extractAgentGroupAvailability ( com.genesys.workspace.models.targets.Target target ) { com.google.gson.internal.LinkedTreeMap availabilityData = ( ( com.google.gson.internal.LinkedTreeMap ) ( target . getAvailability () ) ) ; if ( availabilityData == null ) { return; } java.lang.Integer readyAgents = ( ( java.lang.Double ) ( availabilityData . get ( "readyAgents" ) ) ) . intValue () ; this . availability = new com.genesys.workspace.models.targets.AgentGroupAvailability ( readyAgents ) ; } 
private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { return ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; } 
public synchronized boolean canMove ( level.action.MoveAction action ) { level.Direction dir = action . getDirection () ; level.Location agLoc = action . getAgentLocation () ; if ( agLoc == null ) { return false ; } level.Location nAgLoc = level.Location . newLocation ( dir , agLoc ) ; if ( nAgLoc == null ) { return false ; } if ( ! ( isFree ( nAgLoc ) ) ) { return false ; } return true ; } 
public boolean isState ( java.lang.String input ) { boolean matchFound = false ; int i = 0 ; while ( ( matchFound == false ) && ( i < ( states.length ) ) ) { if ( states [ i ] . equalsIgnoreCase ( input ) ) { matchFound = true ; } i ++ ; } return matchFound ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent intent ) { if ( requestCode == ( com.jeffreychan.yutnori.TitleScreenActivity.RC_SIGN_IN ) ) { mSignInClicked = false ; mResolvingConnectionFailure = false ; if ( resultCode == ( RESULT_OK ) ) { client . connect () ; } else { android.widget.Toast savedToast = android.widget.Toast . makeText ( context , "Unable to sign in to Google" , Toast.LENGTH_SHORT ) ; savedToast . show () ; } } } 
@ java.lang.Override public void setParams ( long frequency , long bandwidthHz , @ android.support.annotation.NonNull info.martinmarinov.drivers.DeliverySystem deliverySystem ) throws info.martinmarinov.drivers.DvbException { enableMaster ( true ) ; enableSlave ( false ) ; if ( rtl2832Capabilities . getSupportedDeliverySystems () . contains ( deliverySystem ) ) { activeFrontend = rtl2832Frontend ; } else { enableMaster ( false ) ; enableSlave ( true ) ; activeFrontend = slave ; } activeFrontend . setParams ( frequency , bandwidthHz , deliverySystem ) ; } 
public static java.util.Map < java.nio.file.Path , com.google.common.hash.HashCode > createHashCodeMap ( java.nio.file.Path file ) { java.util.Map < java.nio.file.Path , com.google.common.hash.HashCode > lastModifiedMap = new java.util.concurrent.ConcurrentHashMap < java.nio.file.Path , com.google.common.hash.HashCode > () ; for ( java.nio.file.Path child : io.takari.watcher.PathUtils . recursiveListFiles ( file ) ) { com.google.common.hash.HashCode hash = io.takari.watcher.PathUtils . hash ( child ) ; if ( hash != null ) { lastModifiedMap . put ( child , hash ) ; } } return lastModifiedMap ; } 
private static org.opendaylight.genius.mdsalutil.packet.Ethernet createEthernetPacket ( byte [] sourceMAC , byte [] targetMAC , org.opendaylight.genius.mdsalutil.packet.ARP arp ) throws org.opendaylight.controller.liblldp.PacketException { org.opendaylight.genius.mdsalutil.packet.Ethernet ethernet = new org.opendaylight.genius.mdsalutil.packet.Ethernet () ; ethernet . setSourceMACAddress ( sourceMAC ) ; ethernet . setDestinationMACAddress ( targetMAC ) ; ethernet . setEtherType ( EtherTypes.ARP . shortValue () ) ; ethernet . setPayload ( arp ) ; return ethernet ; } 
@ com.rafikzebdi.epargnator.rest.GET @ com.rafikzebdi.epargnator.rest.Path ( value = "/{reference}" ) @ com.rafikzebdi.epargnator.rest.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getSpecificPersonne ( @ com.rafikzebdi.epargnator.rest.PathParam ( value = "reference" ) final int referenceToFind ) { javax.ws.rs.core.Response.ResponseBuilder builder = null ; try { final java.util.List < com.rafikzebdi.epargnator.domain.personne.Personne > personnesSpecificFound = personneService . getSpecificPersonne ( referenceToFind ) ; builder = javax.ws.rs.core.Response . ok ( personnesSpecificFound ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; builder = javax.ws.rs.core.Response . status ( Response.Status.BAD_REQUEST ) ; } return builder . build () ; } 
private int getProgressForAngle ( double angle ) { int touchProgress = ( ( int ) ( java.lang.Math . round ( ( ( valuePerDegree () ) * angle ) ) ) ) ; if ( mDragging ) { touchProgress = ( touchProgress < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; touchProgress = ( touchProgress > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; return touchProgress ; } else return - 1 ; } 
private void updatePacketInWindow ( int sequence , WebApplication.HTTPConnection.AcknowledgementCode code ) { for ( int i = Window_Position ; ( i < ( ( Window_Size ) + ( Window_Position ) ) ) && ( i < ( ( Packet_Buffer . size () ) - 1 ) ) ; ++ i ) { if ( sequence == ( ( Packet_Buffer . get ( i ) . getSequenceNumber () ) % ( Sequence_Modulus ) ) ) { Packet_Buffer . get ( i ) . updateAcknowledgementCode ( code ) ; break; } } } 
private int menorDentreAs ( double [] razoes ) { double menor = razoes [ 0 ] ; int indice = 0 ; for ( int i = 1 ; i < ( razoes.length ) ; i ++ ) { if ( ( razoes [ i ] ) > 0 ) { if ( ( java.lang.Double . compare ( razoes [ i ] , menor ) ) < 0 ) { menor = razoes [ i ] ; indice = i ; } } } return indice ; } 
public void onDragDropped ( javafx.scene.input.DragEvent e ) { javafx.scene.input.Dragboard db = e . getDragboard () ; catuml.shapes.Shapes shapes = ( ( catuml.shapes.Shapes ) ( db . getContent ( javafx.scene.input.DataFormat . lookupMimeType ( "catuml/shapetype" ) ) ) ) ; double x = e . getX () ; double y = e . getY () ; putShape ( shapes . newShape () , x , y ) ; e . consume () ; } 
public void secondOrderPositionUpdate ( double dt , Vector3D force ) { position = new Vector3D ( Vector3D . vectorAddition ( position , velocity . scalarMultiply ( dt ) ) ) ; position = new Vector3D ( Vector3D . vectorAddition ( position , force . scalarMultiply ( ( ( java.lang.Math . pow ( dt , 2 ) ) / ( 2 * ( mass ) ) ) ) ) ) ; } 
@ java.lang.Override public java.util.List < java.lang.Integer > emit ( java.lang.String streamId , java.util.List < java.lang.Object > tuple , java.lang.Object messageId ) { monitor . startExecute ( messageId , null , spoutService ) ; java.util.List < java.lang.Integer > emitResult = super . emit ( streamId , tuple , messageId ) ; return emitResult ; } 
public static java.io.File findExe ( java.io.File root , java.lang.String exe , boolean fail ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; if ( ! fail ) return null ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } 
public boolean isSafe ( int row , int col ) { if ( ( ( ( row <= ( ( rows ) - 3 ) ) && ( col <= ( ( cols ) - 3 ) ) ) && ( row >= 0 ) ) && ( col >= 0 ) ) { return true ; } return false ; } 
private java.lang.String loadShader ( java.lang.String name ) { cub3d.file.main.FileAPI api = new cub3d.file.main.FileAPI ( name ) ; java.lang.String s = "" ; try { cub3d.file.reader.BasicReader br = new cub3d.file.reader.BasicReader ( api . getReader () ) ; java.lang.String line ; while ( ( line = br . readLine () ) != null ) s += line + "\n" ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return s ; } 
@ java.lang.Override public void run ( io.katharsis.example.dropwizardSimple.DropwizardConfiguration dropwizardConfiguration , io.dropwizard.setup.Environment environment ) throws java.lang.Exception { environment . jersey () . property ( io.katharsis.rs.KatharsisProperties.RESOURCE_SEARCH_PACKAGE , dropwizardConfiguration.katharsis.searchPackage ) ; io.katharsis.rs.KatharsisFeature katharsisFeature = new io.katharsis.rs.KatharsisFeature ( environment . getObjectMapper () , new io.katharsis.queryParams.QueryParamsBuilder ( new io.katharsis.queryParams.DefaultQueryParamsParser () ) , new io.katharsis.locator.SampleJsonServiceLocator () ) ; environment . jersey () . register ( katharsisFeature ) ; } 
private int getManhattan ( int row , int col , int point ) { if ( point == 0 ) return 0 ; int rowP = point / ( dim ) ; int colP = ( point - ( rowP * ( dim ) ) ) - 1 ; return ( java.lang.Math . abs ( ( row - rowP ) ) ) + ( java.lang.Math . abs ( ( col - colP ) ) ) ; } 
public static double [] rexp ( int count , double lambda ) { double [] result = new double [ count ] ; double current = 0 ; for ( int i = 0 ; i < count ; i ++ ) { current = ( ( - 1 ) / lambda ) * ( java.lang.Math . log ( ( 1 - ( java.lang.Math . random () ) ) ) ) ; result [ i ] = current ; } return result ; } 
private void displayNumberOfProcessedLearningContents ( java.util.Map < de.saschafeldmann.adesso.master.thesis.elearningimport.model.LearningContent , java.util.List < de.saschafeldmann.adesso.master.thesis.detection.model.api.Concept > > learningContents ) { setFinishedLabel () ; finishedLabel . setCaption ( ( ( ( ( finishedLabel . getCaption () ) + " (" ) + ( learningContents . size () ) ) + ")" ) ) ; } 
private kalang.compiler.CompilationUnit createCompilationUnit ( java.lang.String className , java.lang.String src ) { kalang.compiler.CompilationUnit unit = new kalang.compiler.CompilationUnit ( className , src , this ) ; compilationUnits . put ( className , unit ) ; unit . setParsingErrorHandler ( sourceParsingErrorhandler ) ; unit . setSemanticErrorHandler ( astSemanticErrorHandler ) ; unit . compile ( compilingPhase ) ; return unit ; } 
@ java.lang.Override public co.cask.cdap.data2.queue.DequeueResult < byte [] > dequeue ( int maxBatchSize ) throws java.io.IOException { co.cask.cdap.data2.queue.DequeueResult < byte [] > result = performDequeue ( maxBatchSize ) ; byte [] floorKey = consumingEntries . floorKey ( scanStartRow ) ; updateStartRow ( ( floorKey == null ? scanStartRow : floorKey ) ) ; return result ; } 
public java.util.List < T > subList ( int startIndex , int numberOfItems ) { java.util.List < T > idList = this . toImmutableList () ; return idList . subList ( ( startIndex - ( offset ) ) , java.lang.Math . min ( ( ( startIndex - ( offset ) ) + numberOfItems ) , maxValidIndex ) ) ; } 
boolean hasTournamentBeenUpdated ( @ android.support.annotation.NonNull final net.erikkarlsson.smashapp.common.data.Lce < net.erikkarlsson.smashapp.common.data.entities.tournament.Tournament > tournamentLce ) { if ( ! ( tournamentLce . hasData () ) ) { return false ; } net.erikkarlsson.smashapp.common.data.entities.tournament.Tournament tournament = tournamentLce . data () ; return ! ( tournament () . updatedAt () . equals ( tournament . updatedAt () ) ) ; } 
private void processProject ( com.ctrip.platform.dal.daogen.entity.Project entity ) throws java.sql.SQLException { entity . setText ( entity . getName () ) ; entity . setChildren ( false ) ; entity . setIcon ( "glyphicon glyphicon-tasks" ) ; if ( ( entity . getUpdate_time () ) == null ) return; java.sql.Date date = new java.sql.Date ( entity . getUpdate_time () . getTime () ) ; entity . setStr_update_time ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) . format ( date ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mContext = this ; counterTextView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; relativeLayout = ( ( android.widget.RelativeLayout ) ( findViewById ( R.id.MainLayoutID ) ) ) ; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { android.util.Log . d ( "NotesFragment" , ( "Submitted query" + query ) ) ; java.lang.String searchQuery = ( ( ( ( ( "SELECT *  FROM " + ( HandbookContract.NotificationEntry.TABLE_NAME ) ) + " where " ) + ( HandbookContract.NotificationEntry.COLUMN_DETAIL ) ) + " like \'%" ) + query ) + "%\'" ; cursor = db . rawQuery ( searchQuery , null ) ; mRecyclerView . setAdapter ( mAdapter ) ; searchView . clearFocus () ; return true ; } 
public void onClick ( android.view.View view ) { if ( ( AnswerABoolean ) == true ) { AnswerAButton . setBackgroundColor ( getResources () . getColor ( R.color.goodAnswer ) ) ; incrementResultForGoodAnswer () ; } else { AnswerAButton . setBackgroundColor ( getResources () . getColor ( R.color.badAnswer ) ) ; findTHeRightAnswer () ; } } 
private java.lang.String correctDate ( java.lang.String uncDate ) { java.lang.String [] splitDate = uncDate . split ( "/" ) ; java.lang.String day = splitDate [ 0 ] ; java.lang.String month = splitDate [ 1 ] ; java.lang.String year = splitDate [ 2 ] ; return ( ( ( year + "-" ) + month ) + "-" ) + day ; } 
private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node ) ; if ( cmp < 0 ) return contains ( node.lb , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else return node.p . equals ( p ) ; } 
@ java.lang.Override public boolean isTrue ( burlap.oomdp.core.states.State s , java.lang.String [] params ) { commands.amdp.tools.parse.CleanupL2Parser parser = new commands.amdp.tools.parse.CleanupL2Parser ( this . domain ) ; burlap.oomdp.core.objects.ObjectInstance o = s . getObject ( params [ 0 ] ) ; burlap.oomdp.core.objects.ObjectInstance currRegion = s . getObject ( o . getStringValForAttribute ( CleanupL1AMDPDomain.ATT_IN_REGION ) ) ; burlap.oomdp.core.objects.ObjectInstance region = s . getObject ( params [ 1 ] ) ; if ( currRegion == null ) { return false ; } else { return currRegion . valueEquals ( region ) ; } } 
public java.util.HashMap < java.lang.String , double [] > fetchTrace ( int channelNumber ) { this . fetchChannel ( channelNumber ) ; java.util.HashMap < java.lang.String , double [] > retData = new java.util.HashMap <> () ; retData . put ( "x" , this . aChannels . get ( ( channelNumber - 1 ) ) . getXAxis () ) ; retData . put ( "y" , this . aChannels . get ( ( channelNumber - 1 ) ) . getYAxis () ) ; return retData ; } 
public boolean isEndNode ( RaceAI.AI.Node node ) { if ( ( ( this . endNode . x ) == ( node.x ) ) && ( ( this . endNode . y ) == ( node.y ) ) ) return true ; else return false ; } 
@ java.lang.Override public com.google.gson.JsonElement serialize ( final net.onrc.openvirtex.elements.port.OVXPort port , final java.lang.reflect.Type portType , final com.google.gson.JsonSerializationContext context ) { final com.google.gson.JsonObject result = new com.google.gson.JsonObject () ; result . addProperty ( "dpid" , port . getParentSwitch () . getSwitchName () ) ; result . addProperty ( "port" , port . getPortNumber () ) ; return result ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public com.datastax.driver.core.TypeCodec getSerializer ( java.lang.Class < ? extends com.datastax.driver.core.TypeCodec > serializerClass , java.lang.Class valueClass ) { if ( ( valueClass != null ) && ( valueClass . isEnum () ) ) { return new com.appmetr.hercules.serializers.EnumSerializer ( valueClass ) ; } if ( serializerClass != null ) { return tryToCreateObject ( serializerClass , valueClass ) ; } else { return getSerializer ( valueClass ) ; } } 
public java.lang.String executeCommand ( main.Constants.COMMAND_TYPE command , java.lang.String [] task ) { try { Handler.Command cmd = createCommand ( command , task ) ; return cmd . execute ( task , taskID ) ; } catch ( java.lang.IllegalArgumentException invalidCommandFormat ) { return Constants.MESSAGE_INVALID_FORMAT ; } catch ( java.lang.IllegalStateException unrecognizedCommand ) { return Constants.MESSAGE_UNRECOGN = ZED_COMMAND ; } } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { r . setDrawBoundingBox ( false ) ; if ( ( r . getConfig () . getShape () ) == ( cs132.instructions.Shape.PENCIL ) ) { prevMouseLocation = mouseLocation ; r . setDrawShape ( false ) ; } else { r . setDrawShape ( true ) ; } dragStart = true ; r . repaint () ; } 
private static long scan_isbn ( java.lang.String prompt ) { boolean got = false ; long isbn = 0 ; while ( ! got ) { try { java.lang.System.out . print ( prompt ) ; java.lang.String x = Main.scanner . nextLine () ; isbn = Main . normalizeISBN ( x ) ; got = true ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.out . println ( "ERROR: ISBN must contain some numbers(e.g. 143-2334-12)\n" ) ; got = false ; } } return isbn ; } 
@ java.lang.Override public void actOnBuildingChange ( buildings.Building building , boolean remove , boolean clickedOn ) { if ( ( ! remove ) && ( ! clickedOn ) ) { addToView ( building ) ; removePlaceTexture () ; } else if ( ! clickedOn ) removeFromView ( building . getSpriteAdapter () ) ; else if ( remove && clickedOn ) { removePlaceTexture () ; } } 
protected java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > deepCopy ( java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > assignment ) { java.util.Map < java.lang.String , java.util.List < org.apache.kafka.common.TopicPartition > > copy = new java.util.HashMap <> () ; deepCopy ( assignment , copy ) ; return copy ; } 
public org.apollo.game.model.Position add ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent ev ) { if ( isExpanded () ) { return false ; } android.util.Log . e ( com.example.tt.fragments.widget.CurveLayout.TAG , ( "BottomSheet onTouchEvent: " + ( currentX ) ) ) ; currentX = ev . getRawX () ; sheetDragHelper . processTouchEvent ( ev ) ; return ( ( sheetDragHelper . getCapturedView () ) != null ) || ( super . onTouchEvent ( ev ) ) ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object object ) { if ( ( this ) == object ) { return true ; } if ( ( object != null ) && ( ( getClass () ) == ( object . getClass () ) ) ) { @ java.lang.SuppressWarnings ( value = "rawtypes" ) final com.javacreed.api.domain.objects.DomainObject other = ( ( com.javacreed.api.domain.objects.DomainObject ) ( object ) ) ; return value . equals ( other.value ) ; } return false ; } 
@ java.lang.Override public org.elasticsearch.common.xcontent.XContentBuilder toXContent ( org.elasticsearch.common.xcontent.XContentBuilder builder , org.elasticsearch.monitor.os.Params params ) throws java.io.IOException { builder . startObject ( org.elasticsearch.monitor.os.OsStats.Fields.OS ) ; builder . field ( org.elasticsearch.monitor.os.OsStats.Fields.TIMESTAMP , getTimestamp () ) ; cpu . toXContent ( builder , params ) ; mem . toXContent ( builder , params ) ; swap . toXContent ( builder , params ) ; if ( ( cgroup ) != null ) { cgroup . toXContent ( builder , params ) ; } builder . endObject () ; return builder ; } 
public void xor ( int mask ) { int res = ( value ) ^ ( mask & 8388607 ) ; if ( ( ( ( mask & 8388608 ) != 0 ) && ( ( ( value ) & 8388608 ) == 0 ) ) || ( ( ( mask & 8388608 ) == 0 ) && ( ( ( value ) & 8388608 ) != 0 ) ) ) { res = - res ; } value = res ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode == ( MyGlobalVars.REQUEST_IMAGE_CAPTURE ) ) && ( resultCode == ( RESULT_OK ) ) ) { android.os.Bundle extras = data . getExtras () ; android.graphics.Bitmap imageBitmap = ( ( android.graphics.Bitmap ) ( extras . get ( "data" ) ) ) ; addImageToView ( imageBitmap ) ; } } 
public int colContains ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_ESCAPE ) ) { if ( ( promptMsg ) != null ) { promptMsg = null ; repaint () ; return; } hasFinished = canceled = true ; org.sikuli.basics.Debug . log ( 3 , "CapturePrompt: aborted using key ESC" ) ; setVisible ( false ) ; } } 
@ java.lang.Override public void processAction ( javax.portlet.PortletConfig portletConfig , javax.portlet.ActionRequest actionRequest , javax.portlet.ActionResponse actionResponse ) throws java.lang.Exception { java.lang.String status = com.liferay.portal.kernel.util.ParamUtil . getString ( actionRequest , "status" ) ; java.lang.String portletResource = com.liferay.portal.kernel.util.ParamUtil . getString ( actionRequest , "portletResource" ) ; javax.portlet.PortletPreferences preferences = com.liferay.portlet.PortletPreferencesFactoryUtil . getPortletSetup ( actionRequest , portletResource ) ; preferences . setValue ( "status" , status ) ; preferences . store () ; com.liferay.portal.kernel.servlet.SessionMessages . add ( actionRequest , "potlet-config-saved" ) ; } 
public boolean isUpToDate ( fr.mvanbesien.yws.core.WeatherData weatherData ) { if ( weatherData == null ) { return false ; } if ( ( ( weatherData . getPubDate () . getTime () ) + ( weatherData . getTtl () ) ) > ( java.lang.System . currentTimeMillis () ) ) { if ( ( ( weatherData . getLastBuildDate () . getTime () ) + ( ( 15 * 60 ) * 1000 ) ) > ( java.lang.System . currentTimeMillis () ) ) { return true ; } } return false ; } 
private double calculateHeight ( double alpha , double betta , double a ) { double h = roundNumber ( ( a * ( java.lang.Math . tan ( java.lang.Math . toRadians ( alpha ) ) ) ) , 2 ) ; double h1 = roundNumber ( ( a * ( java.lang.Math . tan ( java.lang.Math . toRadians ( betta ) ) ) ) , 2 ) ; return h + h1 ; } 
private static void noEL ( java.lang.String nm , java.lang.String val , org.zkoss.idom.Item item ) throws org.zkoss.zk.ui.UiException { if ( ( val != null ) && ( val . contains ( "${" ) ) ) throw new org.zkoss.zk.ui.UiException ( org.zkoss.zk.ui.metainfo.Parser . message ( ( nm + " does not support EL expressions" ) , item ) ) ; } 
@ java.lang.Override public java.lang.Object getAsObject ( javax.faces.context.FacesContext context , javax.faces.component.UIComponent component , java.lang.String submittedValue ) { javax.el.ELContext elContext = javax.faces.context.FacesContext . getCurrentInstance () . getELContext () ; br.com.fiap.tsis.bookstore.controller.AtualizarController atualizarController = ( ( br.com.fiap.tsis.bookstore.controller.AtualizarController ) ( javax.faces.context.FacesContext . getCurrentInstance () . getApplication () . getELResolver () . getValue ( elContext , null , "atualizarController" ) ) ) ; for ( br.com.fiap.tsis.bookstore.model.to.Categoria categoria : atualizarController . getCategorias () ) { if ( categoria . getId () . equals ( java.lang.Integer . parseInt ( submittedValue ) ) ) { return categoria ; } } return null ; } 
public static void addPlayerToQueue ( java.util.UUID uuid , java.lang.String server , int pos ) { synchronized ( vg.civcraft.mc.bettershards.bungee.QueueHandler.lockingObject ) { if ( ! ( vg.civcraft.mc.bettershards.bungee.QueueHandler.queue . containsKey ( server ) ) ) vg.civcraft.mc.bettershards.bungee.QueueHandler.queue . put ( server , new java.util.ArrayList < java.util.UUID > () ) ; vg.civcraft.mc.bettershards.bungee.QueueHandler.queue . get ( server ) . add ( pos , uuid ) ; vg.civcraft.mc.bettershards.bungee.QueueHandler.uuidToServerMap . put ( uuid , server ) ; } } 
@ java.lang.Override public java.lang.String toString ( final boolean csv ) { try { final java.lang.String ret = uri . toString () . replaceAll ( "&amp;" , "&" ) ; return ret . replaceAll ( "&" , "&amp;" ) ; } catch ( final java.lang.NullPointerException e ) {} return null ; } 
public void selectCategory ( com.sammyer.yahtzee.RollCategory category , com.sammyer.yahtzee.DiceRoll dice ) { totalScore += getPointsScored ( category , dice ) ; if ( ( category == ( RollTypes.yahtzee ) ) && ( category . matches ( dice ) ) ) hasYahtzee = true ; if ( isNumberRoll ( category ) ) numberRollScore += category . getPointsScored ( dice ) ; categoriesLeft . remove ( category ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; } 
private java.lang.Boolean validatePartB ( java.lang.Boolean error , java.lang.Double partB , java.lang.Integer totalPartCount , java.lang.Integer partBMax , org.ums.services.academic.CourseRegType regType ) { if ( ( totalPartCount == 2 ) && ( partB > partBMax ) ) { error = java.lang.Boolean.TRUE ; } if ( ( totalPartCount == 1 ) && ( ( partB != null ) && ( partB > 0 ) ) ) { error = java.lang.Boolean.TRUE ; } return error ; } 
private void gotLSAUpdateMsg ( socs.network.message.Packet packet ) { java.lang.System.out . println ( ( "received LSUPDATE from " + ( packet.simulatedSrcIP ) ) ) ; socs.network.node.LinkStateDatabase db = this . linkStateDatabase ; for ( socs.network.message.LSA lsa : packet.lsaArray ) { try { boolean newLSA = db . updateLSA ( lsa ) ; if ( ! newLSA ) { continue; } else { socs.network.node.Link linkOverWhichWeReceivedLSA = mapIpLink . get ( packet.simulatedSrcIP ) ; forwardToNeighbors ( linkOverWhichWeReceivedLSA , lsa ) ; } } catch ( java.lang.Exception e ) { java.lang.System.err . println ( "could not update LinkStateDatabase" ) ; } } } 
@ java.lang.Override public void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; g . fillRect ( 0 , 0 , 300 , 3 ) ; g . fillRect ( 0 , 45 , 300 , 3 ) ; g . fillRect ( 100 , 3 , 3 , 7 ) ; g . fillRect ( 100 , 38 , 3 , 7 ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_plan_journey ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; datePickerDialog = new android.app.DatePickerDialog ( this , this , calendar . get ( java.util.Calendar.YEAR ) , calendar . get ( java.util.Calendar.MONTH ) , calendar . get ( java.util.Calendar.DAY_OF_MONTH ) ) ; initDrawer () ; initSearchBar () ; initAddressFields () ; initRemoveButtons () ; initViewJourney () ; initFirebase () ; clearUI () ; } 
public void confirmSeat ( int confirmationTime , int departureTime ) throws asgn2Passengers.PassengerException { if ( ( ( ( ( this . isConfirmed () ) || ( this . isRefused () ) ) || ( this . isFlown () ) ) || ( confirmationTime < 0 ) ) || ( departureTime < confirmationTime ) ) { throw new asgn2Passengers.PassengerException ( "Can't confirm seat for passenger." ) ; } else { this . newState = false ; this . inQueue = false ; this . confirmed = true ; this . confirmationTime = confirmationTime ; this . departureTime = departureTime ; } } 
public synchronized void remove ( final java.lang.String pathname ) { it.grid.storm.filesystem.AclLockPoolElement e = __map . get ( pathname ) ; if ( null != e ) { int count = e . decrementUsageCountAndGetIt () ; if ( 0 >= count ) __map . remove ( pathname ) ; } } 
public void enqueue ( Item item ) { if ( isEmpty () ) first = last = new Node ( item ) ; else { queues.RandomizedQueue < Item > . Node oldLast = last ; last = new Node ( item ) ; oldLast.next = last ; } } 
@ java.lang.Override public void onServiceConnected ( android.content.ComponentName name , android.os.IBinder service ) { localBinder = ( ( org.stuartresearch.radio91x.RadioService.LocalBinder ) ( service ) ) ; bound = true ; localBinder . getService () . songStack . setOnInsertListener ( this ) ; cardAdapter . setSongInfoStack ( localBinder . getService () . songStack ) ; onInsert ( localBinder . getService () . getCurrentSong () ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_searchable ) ; actionbar = getSupportActionBar () ; if ( ( actionbar ) != null ) { actionbar . setTitle ( "搜尋" ) ; actionbar . setDisplayHomeAsUpEnabled ( true ) ; } if ( ( getIntent () ) != null ) { handleIntent ( getIntent () ) ; } } 
private float getDesiredZoomLevel ( int level ) { float zoom = 13.0F ; switch ( level ) { case 1 : zoom = 13.0F ; break; case 2 : zoom = 13.5F ; break; case 3 : zoom = 14.0F ; break; case 4 : zoom = 14.5F ; break; case 5 : zoom = 15.0F ; break; } return zoom ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( singleShot ) mShotStateStore . storeShot () ; mShowCaseView . dismiss () ; mShowCaseView = null ; info . run () ; if ( ( v . getId () ) == ( R.id.btn_end ) ) { showNext ( singleShot ) ; } else if ( ( v . getId () ) == ( R.id.btn_finalize ) ) { mShotStateStore . finished () ; mShowcaseInfos . clear () ; } } 
public static boolean isInteger ( java.lang.String str ) { if ( ( str . length () ) == 0 ) { return false ; } int i = - 1 ; while ( ( ++ i ) < ( str . length () ) ) { char c = str . charAt ( i ) ; if ( ( c < '0' ) || ( c > '9' ) ) { return false ; } } return true ; } 
public void task ( android.database.sqlite.SQLiteDatabase db ) { if ( edit == null ) { dbh.routes . insert ( r , db ) ; } else { dbh.routes . update ( r , ( ( ( transcend.rockeeper.data.RouteContract._ID ) + "=" ) + ( edit . get ( RouteContract._ID ) ) ) , null , db ) ; } } 
protected java.lang.String makeRequest ( java.lang.String endpoint , java.lang.String queryString ) throws java.lang.Exception { java.net.URI uri = org.apache.http.client.utils.URIUtils . createURI ( uk.ac.jorum.integration.RestApiBaseTest.apiProtocol , uk.ac.jorum.integration.RestApiBaseTest.apiHost , uk.ac.jorum.integration.RestApiBaseTest.apiPort , ( ( uk.ac.jorum.integration.RestApiBaseTest.apiMountPoint ) + endpoint ) , queryString , null ) ; org.apache.http.client.methods.HttpGet httpget = new org.apache.http.client.methods.HttpGet ( uri ) ; httpget . addHeader ( "Accept" , "application/json" ) ; org.apache.http.client.ResponseHandler < java.lang.String > responseHandler = new org.apache.http.impl.client.BasicResponseHandler () ; return client . execute ( httpget , responseHandler ) ; } 
@ java.lang.Override public twitter4j.IDs getFollowersIDs ( long arg0 , long arg1 ) throws twitter4j.TwitterException { if ( ( limits [ 2 ] ) == 14 ) { SocialNetworkAnalysis.TwitterWrapper.timelimited [ 0 ] = new java.util.Date () ; limit . reached () ; limits [ 2 ] = 0 ; } java.lang.System.out . print ( "limits in getFollowersIDs: " ) ; for ( int limit : limits ) { java.lang.System.out . print ( ( limit + " " ) ) ; } java.lang.System.out . println () ; ( limits [ 2 ] ) ++ ; return t . getFollowersIDs ( arg0 , arg1 ) ; } 
public void read ( com.jme3.math.JmeImporter e ) throws java.io.IOException { com.jme3.math.InputCapsule capsule = e . getCapsule ( this ) ; rot = ( ( com.jme3.math.Quaternion ) ( capsule . readSavable ( "rot" , new com.jme3.math.Quaternion () ) ) ) ; translation = ( ( com.jme3.math.Vector3f ) ( capsule . readSavable ( "translation" , null ) ) ) ; if ( ( translation ) == null ) { translation = new com.jme3.math.Vector3f () ; } scale = ( ( com.jme3.math.Vector3f ) ( capsule . readSavable ( "scale" , Vector3f.UNIT_XYZ ) ) ) ; } 
private com.emc.storageos.isilon.restapi.IsilonExport getIsilonExport ( com.emc.storageos.isilon.restapi.IsilonApi isilonApi , java.lang.Integer expId , java.lang.String zoneName ) { com.emc.storageos.isilon.restapi.IsilonExport exp = null ; try { _log . debug ( "call getIsilonExport for {} " , expId ) ; if ( expId != null ) { exp = isilonApi . getExport ( expId . toString () , zoneName ) ; _log . debug ( "call getIsilonExport {}" , exp . toString () ) ; } } catch ( java.lang.Exception e ) { _log . error ( "Exception while getting Export for {}" , expId ) ; } return exp ; } 
public void draw ( java.awt.Graphics2D g2 , boolean filled ) { java.awt.geom.Rectangle2D.Double rec = new java.awt.geom.Rectangle2D.Double ( getCenter () . getX () , getCenter () . getY () , getRadius () , getRadius () ) ; g2 . setColor ( getColor () ) ; if ( filled == true ) { g2 . draw ( rec ) ; g2 . fill ( rec ) ; } else { g2 . draw ( rec ) ; } } 
public void addToFavorites ( java.lang.String name , int id ) throws java.sql.SQLException { try ( java.sql.Connection con = dataSource . getConnection () ) { java.sql.PreparedStatement ps = con . prepareStatement ( "INSERT INTO favorites (name, plan_id) VALUES (?,?)" ) ; ps . setString ( 1 , name ) ; ps . setInt ( 2 , id ) ; ps . executeUpdate () ; } } 
public java.util.List find ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { java.util.List < java.lang.Object [] > result = new java.util.ArrayList < java.lang.Object [] > () ; if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_detail ) ; if ( savedInstanceState == null ) { android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( DetailFragment.DETAIL_URI , getIntent () . getData () ) ; com.odytrice.popularmovies.fragments.DetailFragment fragment = new com.odytrice.popularmovies.fragments.DetailFragment () ; fragment . setArguments ( args ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.movie_detail_container , fragment ) . commit () ; } } 
@ java.lang.Override protected com.rezoleo.zer0data.object.AllInformation doInBackground ( java.lang.String . . . params ) { java.lang.String mode = params [ 0 ] ; java.lang.String attribute = params [ 1 ] ; allInformation = new com.rezoleo.zer0data.object.AllInformation () ; apiException = null ; switch ( mode ) { case "login" : break; case "card" : try { allInformation . setCard ( httpClient . getOneCardByCode ( attribute ) ) ; } catch ( fr.applicationcore.object.APIException e ) { e . printStackTrace () ; apiException = e ; } break; default: break; } return allInformation ; } 
public static java.lang.String compress ( java.lang.String input , net.minidev.json.JSONStyle style ) { try { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; new net.minidev.json.parser.JSONParser ( net.minidev.json.parser.JSONParser.DEFAULT_PERMISSIVE_MODE ) . parse ( input , new net.minidev.json.writer.CompessorMapper ( net.minidev.json.JSONValue.defaultReader , sb , style ) ) ; return sb . toString () ; } catch ( java.lang.Exception e ) { return input ; } } 
public void run ( android.accounts.AccountManagerFuture < android.accounts.Account [] > future ) { try { _googleAccounts = future . getResult () ; } catch ( android.accounts.OperationCanceledException e ) { android.util.Log . e ( "Podax" , "Operation Canceled" , e ) ; } catch ( java.io.IOException e ) { android.util.Log . e ( "Podax" , "IOException" , e ) ; } catch ( android.accounts.AuthenticatorException e ) {} finally { this . setListAdapter ( new com.axelby.podax.ImportSubscriptionActivity.ImportSubscriptionAdapter () ) ; } } 
private static java.lang.String executeMarkAsComplete ( java.lang.String userCommand ) { int taskId = tasknote.parser.Parser . getUpdateTaskId ( userCommand , true ) ; tasknote.shared.TaskObject taskObject ; if ( tasknote.logic.TaskNoteControl.taskNote . isValidTaskId ( taskId ) ) { java.util.ArrayList < tasknote.shared.TaskObject > displayList = tasknote.logic.TaskNoteControl.taskNote . getDisplayList () ; taskObject = displayList . get ( taskId ) ; } else { taskObject = null ; } tasknote.logic.TaskNoteControl.command = new tasknote.logic.Commands.CompleteCommand ( tasknote.logic.TaskNoteControl.taskNote , taskObject ) ; tasknote.logic.TaskNoteControl.command . execute () ; tasknote.logic.TaskNoteControl.command . refreshDisplay () ; java.lang.String response = tasknote.logic.TaskNoteControl.command . getFeedBack () ; return response ; } 
public boolean monsterExist ( game.zork.Monster monster , java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel ) { game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound tag ) { super . readFromNBT ( tag ) ; this . isDouble = tag . getBoolean ( "isDouble" ) ; this . isTop = tag . getBoolean ( "isTop" ) ; if ( isDouble ) { capacity = 2 * ( originalCapacity ) ; } else capacity = originalCapacity ; this . tank . setCapacity ( capacity ) ; } 
public void onAdminJoin ( org.bukkit.entity.Player player , boolean fromEvent ) { staff . add ( player ) ; if ( fromEvent ) { final java.util.ArrayList < java.lang.String > lines = latestToLines () ; if ( lines != null ) for ( java.lang.String line : lines ) if ( line != null ) player . sendMessage ( ru.simsonic.rscMinecraftLibrary.Bukkit.GenericChatCodes . processStringStatic ( ( ( ru.simsonic.rscFirstJoinDemo.API.Settings.chatPrefix ) + line ) ) ) ; } } 
@ java.lang.Override public int compare ( ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg0 , ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg1 ) { int scoreFirst = arg0 . getScore () ; int scoreSecond = arg1 . getScore () ; if ( scoreFirst == scoreSecond ) return 0 ; else if ( scoreFirst > scoreSecond ) return - 1 ; return 1 ; } 
@ java.lang.Override public void handleStatement ( com.marklogic.semantics.rdf4j.Statement st ) throws org.eclipse.rdf4j.rio.RDFHandlerException { out . add ( st . getSubject () . stringValue () ) ; out . add ( st . getPredicate () . stringValue () ) ; out . add ( st . getObject () . stringValue () ) ; out . add ( st . getContext () . stringValue () ) ; } 
public void focusOut ( org.sbolstandard.core2.ComponentDefinition comp ) throws org.sbolstandard.core2.SBOLValidationException { if ( ( canvasCD ) == comp ) { return; } updateCanvasCD () ; org.sbolstandard.core2.ComponentDefinition parentComponent = parentCDs . pop () ; while ( ! ( parentComponent . equals ( comp ) ) ) { parentComponent = parentCDs . pop () ; } load ( parentComponent ) ; eventBus . publish ( new com.clarkparsia.sbol.editor.event.FocusOutEvent ( this , parentComponent ) ) ; } 
public static int differenceInDays ( java.util.Date firstDate , java.util.Date secondDate ) { long difference = ( firstDate . getTime () ) - ( secondDate . getTime () ) ; return ( ( int ) ( difference ) ) / ( ( ( 24 * 60 ) * 60 ) * 1000 ) ; } 
public int getUuidIndex ( java.lang.String uuid ) { if ( uuid . equals ( "0" ) ) return 0 ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { try { java.lang.String itemuuid = list . get ( i ) . getString ( "uuid" ) ; if ( uuid . equals ( itemuuid ) ) return i + 1 ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } } return 0 ; } 
private void showNotificationMessageWithBigImage ( android.content.Context context , java.lang.String title , java.lang.String message , java.lang.String timeStamp , android.content.Intent intent , java.lang.String imageUrl ) { notificationUtils = new android.stalwartgroup.residentguardo.Util.NotificationUtils ( context ) ; intent . setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; notificationUtils . showNotificationMessage ( title , message , timeStamp , intent , imageUrl ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) throws java.lang.NullPointerException { boolean isEqual = false ; if ( obj != null ) { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } return isEqual ; } 
@ java.lang.Override public void onItemSelected ( java.lang.String ean ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( BookDetail.EAN_KEY , ean ) ; it.jaschke.alexandria.BookDetail fragment = new it.jaschke.alexandria.BookDetail () ; fragment . setArguments ( args ) ; int id = R.id.container ; if ( ( findViewById ( R.id.right_container ) ) != null ) { id = R.id.right_container ; } getSupportFragmentManager () . beginTransaction () . replace ( id , fragment ) . addToBackStack ( null ) . commit () ; } 
@ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; append ( " " ) ; } else { append ( op ) ; } } 
private static double getScoreForDocumentId ( int documentId , org.terrier.querying.SearchRequest srq ) { org.terrier.matching.ResultSet rs = srq . getResultSet () ; if ( rs == null ) { return 0 ; } int [] docIds = rs . getDocids () ; double [] scores = rs . getScores () ; for ( int i = 0 ; i < ( docIds.length ) ; i ++ ) { if ( ( docIds [ i ] ) == documentId ) { return scores [ i ] ; } } return 0 ; } 
public static int fastRecursiveExponentiationModulo ( int base , int exponent , int mod ) { if ( exponent == 0 ) return 1 ; if ( exponent == 1 ) return base ; final int resultOnHalfExponent = com.jwetherell.algorithms.mathematics.Exponentiation . fastRecursiveExponentiationModulo ( base , ( exponent / 2 ) , mod ) ; if ( ( exponent % 2 ) == 0 ) return ( resultOnHalfExponent * resultOnHalfExponent ) % mod ; else return ( ( ( resultOnHalfExponent * resultOnHalfExponent ) % mod ) * base ) % mod ; } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { int markerPosition = markers . indexOf ( marker ) ; selectMarker ( markerPosition ) ; if ( ( listener ) != null ) { if ( isZoomed () ) { listener . onActivityMarkerPressedAtIndex ( markerPosition ) ; } else { listener . onLegMarkerPressedAtIndex ( markerPosition ) ; } } return true ; } 
public void visit ( compiler.phase.seman.FunCall funCall ) { for ( int a = 0 ; a < ( funCall . numArgs () ) ; a ++ ) funCall . arg ( a ) . accept ( this ) ; compiler.phase.seman.Decl decl = attrs.declAttr . get ( funCall ) ; compiler.phase.seman.Typ typ = attrs.typAttr . get ( decl ) ; attrs.typAttr . set ( funCall , ( ( compiler.phase.seman.FunTyp ) ( typ ) ) . resultTyp ) ; } 
private rx.Observable < java.util.List < java.lang.String > > movieGenres ( com.akobylianskiy.movies.data.entity.MovieEntity movieEntity ) { return db . createQuery ( MovieGenreDb.TABLE_NAME , MovieGenreDb.SELECT_MOVIE_GENRES , movieEntity . getId () ) . mapToList ( new rx.functions.Func1 < android.database.Cursor , java.lang.String > () { @ java.lang.Override public java.lang.String call ( android.database.Cursor cursor ) { return com.akobylianskiy.movies.data.cache.table.MovieGenreDb . map ( cursor ) . genreId () ; } } ) . first () ; } 
public void removeLink ( com.aleksey.castlegates.types.GearLink link ) { if ( link == null ) return; link . setRemoved () ; if ( ( link . getGear1 () ) != null ) { link . getGear1 () . setLink ( null ) ; } if ( ( link . getGear2 () ) != null ) { link . getGear2 () . setLink ( null ) ; } this . dataWorker . addChangedLink ( link ) ; } 
public java.lang.String getReps ( android.widget.LinearLayout layout ) { java.lang.String toReturn = "" ; for ( int i = 1 ; i < 6 ; i ++ ) { android.widget.EditText editText = ( ( android.widget.EditText ) ( layout . getChildAt ( i ) ) ) ; java.lang.String text = editText . getText () . toString () ; if ( ! ( text . trim () . equals ( "" ) ) ) { toReturn += text + " " ; } } return toReturn ; } 
public void updateDeploymentPolicyInInformationModel ( org.apache.stratos.autoscaler.pojo.policy.deployment.DeploymentPolicy deploymentPolicy ) throws org.apache.stratos.autoscaler.exception.policy.InvalidPolicyException { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap . containsKey ( deploymentPolicy . getDeploymentPolicyID () ) ) { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log . isDebugEnabled () ) { org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log . debug ( ( "Updating deployment policy: " + ( deploymentPolicy . getDeploymentPolicyID () ) ) ) ; } org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap . put ( deploymentPolicy . getDeploymentPolicyID () , deploymentPolicy ) ; } } 
private void display_responds ( java.lang.String s ) { switch ( s ) { case "text" : instruction . setText ( hints [ counter ] ) ; java.lang.System.out . println ( s ) ; break; case "audio" : break; case "flash" : break; case "show" : show ( counter ) ; break; case "next" : show ( counter ) ; counter += 1 ; instruction . setText ( instructions [ counter ] ) ; step_number . setText ( steps [ counter ] ) ; break; } } 
public void setListName ( java.lang.String listName ) { if ( ! ( listNameEditSupported ) ) { throw new java.lang.RuntimeException ( ( "Error: Attempted to edit Channel List name for " + "group that does not support it." ) ) ; } java.lang.String oldListName = this . listName ; this . listName = listName ; if ( ( propSupport ) != null ) { propSupport . firePropertyChange ( "listName" , oldListName , listName ) ; } } 
private synchronized void await ( org.opendaylight.vtn.manager.it.ofmock.impl.FlowTable.TableCond cond , long timeout ) throws java.lang.InterruptedException , java.util.concurrent.TimeoutException { if ( ! ( cond . check () ) ) { long msec = timeout ; long deadline = ( java.lang.System . currentTimeMillis () ) + timeout ; do { wait ( msec ) ; if ( cond . check () ) { return; } msec = deadline - ( java.lang.System . currentTimeMillis () ) ; } while ( msec > 0 ) ; throw new java.util.concurrent.TimeoutException ( cond . getTimeoutError () ) ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { int k = 0 ; for ( com.google.firebase.database.DataSnapshot d : dataSnapshot . child ( "Private User Data" ) . child ( mUserId ) . getChildren () ) { if ( k == 0 ) { com.example.saathi.Student c = d . getValue ( com.example.saathi.Student . class ) ; java.lang.String nameVal = c . getName () ; java.lang.String emailVal = mFirebaseAuth . getCurrentUser () . getEmail () ; userName . setText ( nameVal ) ; userEmail . setText ( emailVal ) ; k ++ ; } } } 
public void setup ( final java.util.Map < java.net.URI , java.net.URI > conflictTable ) { for ( final java.util.Map.Entry < java.net.URI , java.net.URI > e : changeTable . entrySet () ) { assert e . getKey () . isAbsolute () ; assert e . getValue () . isAbsolute () ; } this . conflictTable = conflictTable ; } 
public void saveJobInfo ( com.emc.sa.api.utils.OrderJobStatus status ) throws java.lang.Exception { org.apache.curator.framework.recipes.locks.InterProcessLock lock = coordinatorClient . getLock ( com.emc.sa.api.OrderService.ORDER_JOB_LOCK ) ; lock . acquire () ; coordinatorClient . persistRuntimeState ( status . getType () . name () , status ) ; lock . release () ; } 
public java.math.BigInteger getNum ( int k , cz.tomkren.fishtron.types.Type t_NF ) { if ( opts . isCachingUsed () ) { return cache . getNum ( k , t_NF ) ; } else { java.math.BigInteger sum = java.math.BigInteger.ZERO ; for ( cz.tomkren.fishtron.ugen.data.SubsRes subsRes : subs_compute ( k , t_NF , 0 ) ) { sum = sum . add ( subsRes . getNum () ) ; } return sum ; } } 
public java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String toAdd = commenting . getText () . toString () ; if ( ( toAdd != null ) && ( ! ( toAdd . equals ( "" ) ) ) ) { adapter . add ( toAdd ) ; } commenting . setText ( "" ) ; } 
private void saveToInternalStorage ( android.graphics.Bitmap bitmapImage , java.lang.String filename ) { android.content.ContextWrapper cw = new android.content.ContextWrapper ( getApplicationContext () ) ; java.io.File directory = cw . getFilesDir () ; java.io.File mypath = new java.io.File ( directory , filename ) ; java.io.FileOutputStream fos ; try { fos = new java.io.FileOutputStream ( mypath ) ; bitmapImage . compress ( Bitmap.CompressFormat.PNG , 100 , fos ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
private java.util.List < java.lang.Runnable > getTasks ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType type ) { if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.LOAD ) ) { return load ; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SAVE ) ) { return save ; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.PLAYER_SETUP ) ) { return playerSetup ; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SERVER ) ) { return server ; } return null ; } 
private boolean checkHorizontal ( int row , int col ) { if ( col <= ( ( board [ 0 ] . length ) - 3 ) ) { if ( ( ( board [ row ] [ col ] ) == ( board [ row ] [ ( col + 1 ) ] ) ) && ( ( board [ row ] [ col ] ) == ( board [ row ] [ ( col + 2 ) ] ) ) ) { java.lang.System.out . println ( "There is a win there" ) ; return true ; } } return false ; } 
@ java.lang.Override public gregtech.api.interfaces.ITexture [] getTexture ( gregtech.api.interfaces.tileentity.IGregTechTileEntity aBaseMetaTileEntity , byte aSide , byte aFacing , byte aColorIndex , boolean aActive , boolean aRedstone ) { return new gregtech.api.interfaces.ITexture [] { Textures.BlockIcons.MACHINE_CASINGS [ mTier ] [ ( aColorIndex + 1 ) ] , aSide != aFacing ? new gregtech.api.objects.GT_RenderedTexture ( Textures.BlockIcons.OVERLAY_TELEPORTER_ACTIVE ) : com.github.technus.tectech.thing.metaTileEntity.single.GT_MetaTileEntity_DebugStructureWriter.MARK } ; } 
public java.io.InputStream getInput ( java.lang.String pathname ) throws java.io.FileNotFoundException { org.infinispan.io.GridFile file = ( ( org.infinispan.io.GridFile ) ( getFile ( pathname ) ) ) ; if ( ! ( file . exists () ) ) throw new java.io.FileNotFoundException ( pathname ) ; if ( file . isDirectory () ) { throw new java.io.FileNotFoundException ( ( ( "Cannot read from directory (" + file ) + ")" ) ) ; } return new org.infinispan.io.GridInputStream ( file , data ) ; } 
protected static void isTotpConfigurationRequired ( org.keycloak.models.RealmModel realm , org.keycloak.models.UserModel user ) { for ( org.keycloak.models.RequiredCredentialModel c : realm . getRequiredCredentials () ) { if ( ( c . getType () . equals ( CredentialRepresentation.TOTP ) ) && ( ! ( user . isTotp () ) ) ) { org.keycloak.services.managers.AuthenticationManager.logger . debug ( "User is required to configure totp" ) ; } } } 
private java.util.List < java.net.URI > parseLocationsFromBody ( java.lang.String body ) throws cz.cesnet.cloud.occi.exception.ParsingException { cz.cesnet.cloud.occi.parser.TextParser.LOGGER . debug ( "Reading response body." ) ; body = body . trim () ; java.lang.String replaced = body . replaceAll ( "X-OCCI-Location:\\s*" , "" ) ; java.lang.String [] lines = replaced . split ( "[\\r\\n]+" ) ; return makeURIList ( lines ) ; } 
public java.io.File getBackupDir ( java.lang.String backupName , boolean isLocal ) { java.lang.String name = backupName ; if ( backupName . endsWith ( BackupConstants.COMPRESS_SUFFIX ) ) { name = org.apache.commons.io.FilenameUtils . removeExtension ( backupName ) ; } return isLocal ? new java.io.File ( getBackupDir () , name ) : new java.io.File ( BackupConstants.RESTORE_DIR , name ) ; } 
public static boolean can_paste ( int x , int y , mudmap2.backend.Layer layer ) { if ( ( ( mudmap2.Mudmap2.copy_places ) == null ) || ( mudmap2.Mudmap2.copy_places . isEmpty () ) ) return false ; if ( ( ( mudmap2.Mudmap2.copy_place_locations ) != null ) && ( layer != null ) ) { for ( mudmap2.Pair < java.lang.Integer , java.lang.Integer > coordinate : mudmap2.Mudmap2.copy_place_locations ) if ( layer . exist ( ( x + ( coordinate.first ) ) , ( y + ( coordinate.second ) ) ) ) return false ; } return true ; } 
private void init ( android.content.Context context ) { mScaleTouchSlop = android.view.ViewConfiguration . get ( context ) . getScaledTouchSlop () ; mMaxVelocity = android.view.ViewConfiguration . get ( context ) . getScaledMaximumFlingVelocity () ; mScreenW = getResources () . getDisplayMetrics () . widthPixels ; mLastPoint = new android.graphics.PointF () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { mAddDialog = new org.jasey.unforgetit.fragment.AddTaskDialogFragment () ; getSupportFragmentManager () . beginTransaction () . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) . replace ( R.id.unforget_it_activity , mAddDialog ) . addToBackStack ( null ) . commit () ; mPagerAdapter . notifyDataSetChanged () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_search ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; setupViews () ; actionBar = getSupportActionBar () ; getSupportActionBar () . setTitle ( "News Search" ) ; actionBar . setTitle ( "News Search" ) ; client2 = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( AppIndex.API ) . build () ; } 
@ java.lang.Override public int CreateFriendship ( int friendid1 , int friendid2 ) { org.ejdb.bson.BSONObject friendRecord = new org.ejdb.bson.BSONObject ( "userid1" , java.lang.String . valueOf ( friendid1 ) ) ; friendRecord . append ( "userid2" , java.lang.String . valueOf ( friendid2 ) ) . append ( "status" , EJDBClientProperties.FRIEND_CONFIRMED ) ; org.ejdb.bson.types.ObjectId recordID = src.EJDBClient.friends . save ( friendRecord ) ; return 0 ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.addressbook.thorrism.addressbook.Contact contact = createContact () ; if ( contact == null ) android.util.Log . e ( DroidBook.TAG , "Null" ) ; else { com.addressbook.thorrism.addressbook.DroidBook . hideKeyboard ( mCurrentEdit , getApplicationContext () ) ; mBook . addEntry ( contact ) ; new com.addressbook.thorrism.addressbook.CreateContactScreen.SaveTask () . execute () ; } } 
private org.terasology.math.Region3i createAABB ( org.terasology.math.geom.Vector3i mainLocation , java.util.Collection < org.terasology.math.geom.Vector3i > memberLocations ) { org.terasology.math.Region3i aabb = org.terasology.math.Region3i . createFromMinAndSize ( mainLocation , new org.terasology.math.geom.Vector3i ( 1 , 1 , 1 ) ) ; for ( org.terasology.math.geom.Vector3i memberLocation : memberLocations ) { aabb = aabb . expandToContain ( memberLocation ) ; } return aabb ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View view = inflater . inflate ( R.layout.fragment_movie_item_details , container , false ) ; com.example.inspired.inspiredvideo.utils.MovieViewHolder movieViewHolder = new com.example.inspired.inspiredvideo.utils.MovieViewHolder ( view ) ; movieViewHolder . getmImageView () . setImageResource ( mMovieItem . getImageRes () ) ; movieViewHolder . getmNameView () . setText ( mMovieItem . getName () ) ; movieViewHolder . getmTextDescription () . setText ( mMovieItem . getDescription () ) ; java.lang.System.out . println () ; return view ; } 
public void jsonEquals ( com.jayway.restassured.response.Response actual , org.json.JSONObject [] expected ) { try { com.mbi.EqualityAsserter asserter = new com.mbi.EqualityAsserter () ; asserter . assertEquals ( new org.json.JSONArray ( actual . asString () ) , asserter . objectsToArray ( expected ) , mode , ignore ) ; } finally { setDefault () ; } } 
public static void launch ( info.papdt.express.helper.ui.AbsActivity mActivity , android.view.View fab ) { android.content.Intent intent = new android.content.Intent ( mActivity , info.papdt.express.helper.ui.AddActivity . class ) ; intent . setFlags ( Intent.FLAG_ACTIVITY_MULTIPLE_TASK ) ; if ( ! ( mActivity.mSets . getBoolean ( Settings.KEY_DISABLE_ANIMATION , false ) ) ) { android.support.v4.app.ActivityOptionsCompat options = android.support.v4.app.ActivityOptionsCompat . makeSceneTransitionAnimation ( mActivity , fab , info.papdt.express.helper.ui.AddActivity.TRANSITION_NAME_FAB ) ; android.support.v4.app.ActivityCompat . startActivityForResult ( mActivity , intent , MainActivity.REQUEST_ADD , options . toBundle () ) ; } else { mActivity . startActivityForResult ( intent , MainActivity.REQUEST_ADD ) ; } } 
private void showHullAndCentroid ( java.util.ArrayList < ij.ImagePlus > channels , Roi roi ) { for ( ij.ImagePlus channel : channels ) { Overlay overlay = new Overlay () ; PointRoi pointRoi = new PointRoi ( xCentroid , yCentroid ) ; pointRoi . setPosition ( roiPosition ) ; overlay . add ( pointRoi ) ; roi . setPosition ( roiPosition ) ; overlay . add ( roi ) ; channel . setOverlay ( overlay ) ; channel . show () ; } } 
public static java.lang.String getProperty ( java.lang.String s ) { java.lang.String value ; switch ( s ) { case "java.class.path" : value = "." ; break; default: value = java.lang.System . getProperty ( s ) ; break; } java.lang.System.out . printf ( "GetSystemProp %s = %s\n" , s , value ) ; return value ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( isNetworkAvailable () ) { if ( ( mAudioService ) != null ) { mAudioService . executeAction ( Constants.Action.ACTION_PLAY ) ; mAudioService . doStartForeground () ; btnPlay . startAnimation ( playClickAnimation ) ; btnPlay . setImageResource ( ( showPlayButton ? android.R.drawable.ic_media_play : android.R.drawable.ic_media_pause ) ) ; } } else { android.widget.Toast . makeText ( this , getString ( R.string.no_network ) , Toast.LENGTH_SHORT ) . show () ; } } 
public void deleteSchedule ( java.sql.Date date ) { java.sql.Connection conn = null ; java.sql.PreparedStatement prepStmt = null ; java.sql.ResultSet rs = null ; try { java.lang.String statement = "DELETE FROM Schedule WHERE date = ?" ; conn = establishConnection () ; prepStmt = conn . prepareStatement ( statement ) ; prepStmt . setDate ( 1 , date ) ; prepStmt . execute () ; java.lang.System.out . println ( "Success removed" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( "error. Not delete." ) ; } } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent event ) { mX = ( ( int ) ( event . getX () ) ) ; mY = ( ( int ) ( event . getY () ) ) ; logTouchEvent () ; return super . onTouchEvent ( event ) ; } 
private void dispatchEventHandler ( EventHandler handler , MouseInfo mouse , boolean isFront ) { assert handler != null ; if ( handler instanceof BaseActor ) { handler . onMouseIn () ; handler . onMouseOut () ; } handler . onMouseDown () ; handler . onMouseUp () ; handler . onMouseClicked () ; handler . onMouseMoved () ; handler . onMouseDragged () ; handler . onMouseDragging () ; } 
public void draw ( com.badlogic.gdx.graphics.g2d.SpriteBatch batch ) { batch . draw ( cannonTextureRegion , ( ( xpos ) - ( ( width ) / 2.0F ) ) , ( ( ypos ) - ( ( height ) / 2.0F ) ) , ( ( width ) / 2.0F ) , ( ( height ) / 2.0F ) , width , height , 1 , 1 , angle , true ) ; } 
public calendar.EventProvider newEventProvider ( java.lang.String group_name , int group_id , db.Site site , db.DBConnection db ) { calendar.EventProvider event_provider = new calendar.EventProvider ( group_name ) . setAccessPolicy ( new mosaic.GroupAccessPolicy ( group_id , true , true , true , false ) ) . setEventsAreOwned ( true ) . setEventsCanRepeat ( true ) . setEventsHaveColor ( true ) . setEventsHaveEndTime ( true ) . setEventsHaveStartTime ( true ) . setEventsTable ( ( ( "group_" + group_id ) + "_events" ) ) . setSupportReminders ( site ) ; site . addModule ( event_provider , db ) ; return event_provider ; } 
@ java.lang.Override public void exitReturn_stmt ( MiniCParser.Return_stmtContext ctx ) { java.lang.String s1 ; if ( hasReturnExpr ( ctx ) ) { s1 = newTexts . get ( ctx . expr () ) ; newTexts . put ( ctx , ( ( ( s1 + "\n" ) + ( blank ) ) + "retv" ) ) ; } else { newTexts . put ( ctx , ( ( blank ) + "ret" ) ) ; } } 
private static void setTableFeatureProperty ( org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.Wildcards propType , org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.protocol.rev130731.table.features.properties.grouping.TableFeaturePropertiesBuilder propBuilder ) { java.util.List < org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch > setFieldMatch = null ; org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.wildcards.WildcardSetfield wildcardSetField = propType . getWildcardSetfield () ; if ( null != wildcardSetField ) { setFieldMatch = wildcardSetField . getSetFieldMatch () ; } org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.TableFeaturesConvertor . setSetFieldTableFeatureProperty ( propBuilder , TableFeaturesPropType.OFPTFPTWILDCARDS , ( setFieldMatch == null ? new java.util.ArrayList < org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch > () : setFieldMatch ) ) ; } 
public boolean touched ( testagent.Agent agent ) { if ( pick ) return false ; double distance = java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( ( agent.x ) - ( x ) ) , 2 ) ) + ( java.lang.Math . pow ( ( ( agent.y ) - ( y ) ) , 2 ) ) ) ) ; return distance <= ( ( size ) / ( agentIsSized ? 1 : 2 ) ) ; } 
void setActionNameBox ( int itemType ) { if ( ( _selectionMode ) != ( SelectionMode.USECOMBO ) ) { return; } _comboNameBox = createNameBox ( itemType ) ; if ( ( _comboNameBox ) == null ) { return; } _comboNameBox . setSelectedBeanByName ( _curAction . getDeviceName () ) ; _comboNameBox . addItemListener ( new jmri.jmrit.conditional.NameBoxListener ( _actionNameField ) ) ; _actionComboNamePanel . remove ( 1 ) ; _actionComboNamePanel . add ( _comboNameBox , null , 1 ) ; _namePanel . setVisible ( false ) ; _actionComboNamePanel . setVisible ( true ) ; } 
protected boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu_gastro_activity , menu ) ; android.view.MenuItem item = menu . findItem ( R.id.action_add_favorite ) ; boolean isFavorite = org.berlin_vegan.bvapp.GastroLocations . containsFavorite ( mGastroLocation . getId () ) ; if ( isFavorite ) { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_white_24dp ) ) ; } else { item . setIcon ( getResources () . getDrawable ( R.mipmap.ic_star_outline_white_24dp ) ) ; } return true ; } 
private void selectItem ( int position ) { if ( position == ( OPTION_MENU_ADD_PERSON ) ) { android.content.Intent intent = new android.content.Intent ( this , com.six.maitime.ui.flipper.ViewFlipperMainActivity . class ) ; startActivity ( intent ) ; return; } else { replaceFragment ( new com.six.maitime.ui.PersonListFragment () ) ; drawerList . setItemChecked ( position , true ) ; mDrawerLayout . closeDrawer ( drawerList ) ; } } 
public java.lang.Long getSupportId ( java.lang.String literal , java.lang.Long citationId ) throws org.ndexbio.model.exceptions.NdexException { org.ndexbio.common.models.object.network.RawSupport r = new org.ndexbio.common.models.object.network.RawSupport ( literal , ( citationId != null ? citationId . longValue () : - 1 ) ) ; java.lang.Long supportId = this . rawSupportMap . get ( r ) ; if ( supportId != null ) return supportId ; supportId = createSupport ( literal , citationId , null ) ; this . rawSupportMap . put ( r , supportId ) ; return supportId ; } 
@ java.lang.Override public void onMessageReceived ( java.lang.String endpointId , byte [] payload , boolean isReliable ) { android.util.Log . d ( com.team2.android.proctor.ui.AttendanceFragment.TAG , ( "onMessageReceived:" + ( new java.lang.String ( payload ) ) ) ) ; java.lang.String message = new java.lang.String ( payload ) ; attendance = new com.team2.android.proctor.model.input.Attendance () ; attendance . setUserId ( java.lang.Long . parseLong ( message . split ( ":" ) [ 0 ] ) ) ; attendance . setCourseId ( java.lang.Integer . parseInt ( message . split ( ":" ) [ 1 ] ) ) ; new com.team2.android.proctor.ui.AttendanceFragment.TakeAttendanceTask () . execute ( attendance ) ; } 
protected java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; } 
@ java.lang.Override public void onNext ( T t ) { if ( ( t . contentLength () ) == 0 ) { return; } if ( ( httpCallback ) != null ) { try { this . httpCallback . onResolve ( new com.google.gson.Gson () . fromJson ( t . string () , this . httpCallback . getType () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
@ java.lang.Override public boolean equals ( java.lang.Object object ) { if ( compareOnlyQuestionText ) { org.nlamah.QL.Model.Form.Abstract.FormQuestion value = ( ( org.nlamah.QL.Model.Form.Abstract.FormQuestion ) ( object ) ) ; if ( this . questionText . equals ( value.questionText ) ) { return true ; } return false ; } else { if ( ! ( super . equals ( object ) ) ) { return false ; } if ( ! ( object instanceof org.nlamah.QL.Model.Form.Abstract.FormQuestion ) ) { return false ; } return true ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.sort_by : java.lang.String [] items = getResources () . getStringArray ( R.array.sort_by ) ; com.psincraian.gameslibrary.SortByDialog dialog = new com.psincraian.gameslibrary.SortByDialog ( getActivity () , items , this ) ; dialog . onCreateDialog ( null ) . show () ; break; } return super . onOptionsItemSelected ( item ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( ( ( currPitInfoIndex ) >= 0 ) && ( ( currTeam ) != null ) ) { try { boolean tempValue = pit_auto_high_goal_Button . isChecked () ; if ( ( currTeam . getBoolean ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL ) ) != tempValue ) { currTeam . put ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL , tempValue ) ; if ( ! ( fillingPitInfo ) ) { dbHelper . updatePitInfo ( currTeam ) ; } } } catch ( org.json.JSONException e ) {} } } 
public void performApply ( org.eclipse.debug.core.ILaunchConfigurationWorkingCopy configuration ) { configuration . setAttribute ( IUML2JavaContants.ATTR_TARGET_FOLDER_PATH , targetText . getText () ) ; java.util.Set < java.lang.String > umlModelPaths = new java.util.LinkedHashSet < java.lang.String > () ; org.eclipse.swt.widgets.TableItem [] items = modelTable . getItems () ; for ( org.eclipse.swt.widgets.TableItem tableItem : items ) { umlModelPaths . add ( tableItem . getText () ) ; } configuration . setAttribute ( IUML2JavaContants.ATTR_MODEL_PATHS , umlModelPaths ) ; this . update () ; } 
protected void showLocation ( android.location.Location mCurrentLocation ) { if ( mCurrentLocation != null ) { getNeabyMarkers ( mCurrentLocation ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( new com.google.android.gms.maps.model.LatLng ( mCurrentLocation . getLatitude () , mCurrentLocation . getLongitude () ) , com.dev.cromer.jason.whatsappening.Activities.MapActivity.CAMERA_ZOOM ) ) ; } com.google.android.gms.maps.model.LatLng center = mMap . getCameraPosition () . target ; mLastMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( new com.google.android.gms.maps.model.LatLng ( center.latitude , center.longitude ) ) . draggable ( true ) ) ; } 
public boolean removeConnection ( com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection connection ) { boolean removed = false ; java.util.Iterator < com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection > iterator = connections . iterator () ; while ( iterator . hasNext () ) { com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection conn = iterator . next () ; if ( conn != null ) { connections . remove ( conn ) ; removed = true ; break; } } return removed ; } 
public static boolean canGetValue ( java.lang.String line ) { return ( ( ( com.blazingkin.interpreter.variables.Variable . isInteger ( line ) ) || ( com.blazingkin.interpreter.variables.Variable . isDouble ( line ) ) ) || ( com.blazingkin.interpreter.variables.Variable . isBool ( line ) ) ) || ( com.blazingkin.interpreter.variables.Variable . isString ( line ) ) ; } 
private void handleSignInWithFacebook ( io.flutter.plugin.common.MethodCall call , final io.flutter.plugin.common.MethodChannel.Result result ) { @ java.lang.SuppressWarnings ( value = "unchecked" ) java.util.Map < java.lang.String , java.lang.String > arguments = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( call.arguments ) ) ; java.lang.String accessToken = arguments . get ( "accessToken" ) ; com.google.firebase.auth.AuthCredential credential = io.flutter.firebaseauth.FacebookAuthProvider . getCredential ( accessToken ) ; firebaseAuth . signInWithCredential ( credential ) . addOnCompleteListener ( activity , new io.flutter.firebaseauth.FirebaseAuthPlugin.SignInCompleteListener ( result ) ) ; } 
public void putByteArray ( final byte [] data ) { int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
private java.lang.String choicePick ( graduationProject.Domain.Request request , int size , int serviceId , java.lang.String mode ) { java.util.List < java.lang.Integer > targetList = generateRanNumList ( size , choiceRate ) ; java.lang.String target = "pod1" ; if ( mode . equals ( "choice1" ) ) target = getBetterPod1 ( request , targetList , serviceId ) ; return target ; } 
public static void shareFileIntent ( android.app.Activity activity , java.lang.String data , java.lang.String title , java.io.File attached ) { ShareCompat.IntentBuilder . from ( activity ) . setType ( "text/plain" ) . addEmailTo ( "" ) . setSubject ( title ) . setStream ( android.support.v4.content.FileProvider . getUriForFile ( activity , ( ( org.eyeseetea.malariacare.BuildConfig.APPLICATION_ID ) + ".data.database.utils.ExportData" ) , attached ) ) . setText ( data ) . startChooser () ; } 
private org.spongepowered.asm.lib.Handle transformHandle ( org.spongepowered.asm.mixin.transformer.MethodNode method , java.util.Iterator < org.spongepowered.asm.mixin.transformer.AbstractInsnNode > iter , org.spongepowered.asm.lib.Handle handle ) { org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef memberRef = new org.spongepowered.asm.mixin.transformer.MemberRef.HandleRef ( handle ) ; if ( memberRef . isField () ) { this . transformFieldRef ( method , iter , memberRef ) ; } else { this . transformMethodRef ( method , iter , memberRef ) ; } return memberRef . getMethodHandle () ; } 
@ java.lang.Override public void processFinish ( java.lang.String output ) { if ( output . equals ( "Success " ) ) { working . setTextColor ( Color.GREEN ) ; working . setText ( "Clocked in Succesfully" ) ; sendNotification () ; } else if ( output . equals ( "Failure " ) ) { working . setTextColor ( Color.RED ) ; working . setText ( "You can't clock in again" ) ; } } 
public java.lang.String toString ( android.content.Context context ) { java.lang.String [] values = context . getResources () . getStringArray ( R.array.element_types_array ) ; if ( ( value ) == ( com.freak.carnetdentretien.domain.bean.MaintenanceElement.Type.OTHER.value ) ) { return values [ ( ( values.length ) - 1 ) ] ; } else { return values [ ( ( value ) - 1 ) ] ; } } 
private io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > getAllCatsObserver () { return new io.reactivex.Observer < manoilo.catsapiandroidclient.model.Cat > () { @ java.lang.Override public void onSubscribe ( io.reactivex.disposables.Disposable d ) {} @ java.lang.Override public void onNext ( manoilo.catsapiandroidclient.model.Cat cat ) { if ( cat != null ) { getCatImgUrl ( cat ) ; cats . add ( cat ) ; } } @ java.lang.Override public void onError ( java.lang.Throwable e ) {} @ java.lang.Override public void onComplete () { setCatRecyclerViewAdapter () ; } } ; } 
private int compareBNode ( final org.openrdf.model.BNode first , final java.lang.Object second ) { if ( second instanceof org.openrdf.model.BNode ) { return first . getID () . compareTo ( ( ( org.openrdf.model.BNode ) ( second ) ) . getID () ) ; } else if ( ( second instanceof org.openrdf.model.URI ) || ( second instanceof eu.fbk.knowledgestore.data.Record ) ) { return - 1 ; } return 1 ; } 
private void addTitle ( java.lang.String title ) { android.view.View view = android.view.LayoutInflater . from ( getActivity () ) . inflate ( R.layout.item_title , null ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( view . findViewById ( R.id.title_text ) ) ) ; textView . setText ( title ) ; if ( ( container ) != null ) container . addView ( view ) ; } 
@ java.lang.Override protected java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } 
@ java.lang.Override public int getUserAnswerIdByQuestionNumber ( int number ) { com.inquirer.models.Answer userAnswer = new com.inquirer.models.Answer () ; for ( com.inquirer.models.Answer tmpAnswer : userAnswers ) { if ( ( tmpAnswer . getQuestion () ) == number ) { userAnswer = tmpAnswer ; } } if ( userAnswer == null ) { return 0 ; } else { return userAnswer . getId () ; } } 
protected void processWindowEvent ( java.awt.event.WindowEvent e ) { if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_CLOSING ) ) { if ( net.sf.memoranda.util.Configuration . get ( "ON_CLOSE" ) . equals ( "exit" ) ) doExit () ; else doExit () ; } else if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) { super . processWindowEvent ( new java.awt.event.WindowEvent ( this , java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) ; doMinimize () ; } else super . processWindowEvent ( e ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { if ( ( item . getItemId () ) == ( android.R.id.home ) ) { android.content.Intent homeIntent = new android.content.Intent ( getApplicationContext () , com.anilicious.rigfinances.activities.MainActivity . class ) ; homeIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( homeIntent ) ; } return super . onOptionsItemSelected ( item ) ; } 
public com.eclipsesource.v8.V8Object executeObjectScript ( final java.lang.String script , final java.lang.String scriptName , final int lineNumber ) { checkThread () ; java.lang.Object result = this . executeScript ( script , scriptName , lineNumber ) ; if ( result instanceof com.eclipsesource.v8.V8Object ) { return ( ( com.eclipsesource.v8.V8Object ) ( result ) ) ; } throw new com.eclipsesource.v8.V8ResultUndefined () ; } 
private static double operation ( char op , double val1 , double val2 ) { switch ( op ) { case '+' : return val2 + val1 ; case '-' : return val2 - val1 ; case '*' : return val2 * val1 ; case '/' : if ( val1 == 0 ) throw new java.lang.UnsupportedOperationException ( "Cannot divide by zero" ) ; return val2 / val1 ; case '^' : return java.lang.Math . pow ( val2 , val1 ) ; } return 0 ; } 
public com.chenyirun.theircraft.model.Block getBlock ( com.chenyirun.theircraft.model.Point3Int pos ) { com.chenyirun.theircraft.model.Chunk chunk = new com.chenyirun.theircraft.model.Chunk ( pos ) ; java.util.List < com.chenyirun.theircraft.model.Block > blocksInChunk = new java.util.ArrayList <> () ; blocksInChunk . addAll ( getChunkBlocks ( chunk ) ) ; for ( com.chenyirun.theircraft.model.Block block : blocksInChunk ) { if ( block == null ) { continue; } com.chenyirun.theircraft.model.Point3Int blockLocation = block . getLocation () ; if ( pos . equals ( blockLocation ) ) { return block ; } } return null ; } 
private void sendResponse ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse res , java.util.List < orders.LineItem > items , java.math.BigDecimal totalPrice ) { try { javax.servlet.http.HttpSession session = req . getSession () ; session . setAttribute ( "items" , items ) ; session . setAttribute ( "total" , totalPrice ) ; res . sendRedirect ( "confirmOrder.jsp" ) ; } catch ( java.io.IOException e ) {} } 
private void removeEntryMNS ( java.lang.String mrn ) throws java.io.IOException , java.net.UnknownHostException { java.net.Socket MNSSocket = new java.net.Socket ( "localhost" , 1004 ) ; java.io.BufferedWriter outToMNS = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( MNSSocket . getOutputStream () , java.nio.charset.Charset . forName ( "UTF-8" ) ) ) ; if ( kr.ac.kaist.mms_server.MMSConfiguration.LOGGING ) java.lang.System.out . println ( ( "Remove-Entry:" + mrn ) ) ; outToMNS . write ( ( "Remove-Entry:" + mrn ) ) ; outToMNS . flush () ; outToMNS . close () ; MNSSocket . close () ; return; } 
public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatusLock . lock () ; try { connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } finally { connectorStatusLock . unlock () ; } } 
public boolean changeQuizName ( java.lang.String newQuizName ) { Category c = new Category ( category ) ; c . readFromFile ( ( ( c . getCategory () ) + ".txt" ) ) ; if ( c . change ( quizName , newQuizName ) ) { this . quizName = newQuizName ; return true ; } return false ; } 
@ java.lang.Override public cn.wisdom.lottery.service.remote.response.LotteryOpenData getCurrentPeriod ( cn.wisdom.lottery.dao.constant.LotteryType lotteryType ) { java.lang.String errMsg = java.text.MessageFormat . format ( "Failed to query {0} current period info." , lotteryType ) ; cn.wisdom.lottery.dao.vo.PrizeLottery prizeLottery = daoHelper . queryForObject ( cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.GET_SSQ_CURRENT_PERIOD , cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.ssqPrizeInfoMapper , errMsg ) ; if ( ( prizeLottery != null ) && ( ( prizeLottery . getOpenTime () ) != null ) ) { unifyOpenTime ( prizeLottery . getOpenTime () ) ; } return new cn.wisdom.lottery.service.remote.response.LotteryOpenData ( prizeLottery ) ; } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; android.support.v7.widget.LinearLayoutManager linearLayoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( mRecyclerView . getLayoutManager () ) ) ; int position = linearLayoutManager . findFirstVisibleItemPosition () ; outState . putInt ( ir.blog.microc.movie.activities.MainActivity.FIRST_VISIBLE_ITEM_KEY , position ) ; outState . putParcelableArrayList ( ir.blog.microc.movie.activities.MainActivity.MOVIE_DATA_PARCELABLE , ( ( java.util.ArrayList < ? extends android.os.Parcelable > ) ( movieList ) ) ) ; } 
public synchronized boolean removePlayer ( CardGame.User user ) { int removeID = - 1 ; int index = 0 ; for ( CardGame.GameEngine.Player player : players ) { if ( player . getUsername () . equals ( user . getUserName () ) ) { removeID = index ; } index ++ ; } if ( removeID != ( - 1 ) ) { players . remove ( removeID ) ; return true ; } else { return false ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/es/saveEsData/{index}/{type}/{id}" ) public org.datasays.wes.demo.model.ActionResult saveEsData ( @ org.springframework.web.bind.annotation.PathVariable ( value = "index" ) java.lang.String index , @ org.springframework.web.bind.annotation.PathVariable ( value = "type" ) java.lang.String type , @ org.springframework.web.bind.annotation.PathVariable ( value = "id" , required = false ) java.lang.String id , @ org.springframework.web.bind.annotation.RequestBody java.lang.Object doc ) { org.datasays.wes.demo.model.ActionResult result = new org.datasays.wes.demo.model.ActionResult () ; try { java.lang.Object newdoc = esService . index ( index , type , id , doc ) ; result . ok ( newdoc ) ; } catch ( java.lang.Exception e ) { org.datasays.wes.demo.es.actions.EsController.LOG . error ( e . getMessage () , e ) ; result . error ( e ) ; } return result ; } 
private static org.neo4j.kernel.impl.query.TransactionalContext createTransactionalContext ( java.lang.String query ) { org.neo4j.kernel.impl.coreapi.InternalTransaction transaction = org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.database . beginTransaction ( KernelTransaction.Type.implicit , SecurityContext.AUTH_DISABLED ) ; org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo boltConnection = new org.neo4j.kernel.impl.query.clientconnection.BoltConnectionInfo ( "username" , "neo4j-java-bolt-driver" , new java.net.InetSocketAddress ( "127.0.0.1" , 56789 ) , new java.net.InetSocketAddress ( "127.0.0.1" , 7687 ) ) ; return org.neo4j.cypher.javacompat.internal.DocsExecutionEngineTest.contextFactory . newContext ( boltConnection , transaction , query , java.util.Collections . emptyMap () ) ; } 
public static void cleanIndexDirectory ( java.lang.String solrHome , java.lang.String coreName ) throws java.io.IOException { java.io.File indexDir = java.nio.file.Paths . get ( solrHome , coreName , "data" ) . toFile () ; try { if ( indexDir . exists () ) { org.apache.commons.io.FileUtils . cleanDirectory ( indexDir ) ; } } catch ( java.io.IOException e ) { uk.ac.shef.dcs.jate.app.BaseEmbeddedSolrTest.LOG . error ( "Failed to clean index directory! Please do it manually!" ) ; throw e ; } } 
protected void closeFileObject ( com.shesse.h2ha.FilePathHa filePath , long lastModified ) throws java.io.IOException { synchronized ( openFiles ) { java.nio.channels.FileChannel fc = openFiles . remove ( filePath ) ; if ( fc != null ) { fc . close () ; } } if ( filePath . exists () ) { filePath . lastModified ( lastModified ) ; } } 
@ java.lang.Override public void updateQuality ( mvc.models.Item item ) { if ( ( item . getSellIn () ) > 0 ) item . setQuality ( ( ( item . getQuality () ) - ( mvc.models.OrganicBananas.QUALITY_STEP ) ) ) ; else item . setQuality ( ( ( item . getQuality () ) - ( ( mvc.models.OrganicBananas.QUALITY_STEP ) * 2 ) ) ) ; } 
private todo.javier.mera.todolist.model.Task createTask ( java.lang.String todoListId ) { return new todo.javier.mera.todolist.model.Task ( java.util.UUID . randomUUID () . toString () , todoListId , "My Task" , todo.javier.mera.todolist.model.TaskStatus.Created , new java.util.Date () . getTime () , new java.util.Date () . getTime () , todo.javier.mera.todolist.model.Priority.None , todo.javier.mera.todolist.model.Reminder.ON ) ; } 
private org.eclipse.smarthome.automation.core.internal.RuntimeRule getRuleByTemplate ( org.eclipse.smarthome.automation.core.internal.RuntimeRule rule ) { java.lang.String ruleTemplateUID = rule . getTemplateUID () ; org.eclipse.smarthome.automation.template.RuleTemplate template = ( ( org.eclipse.smarthome.automation.template.RuleTemplate ) ( tManager . get ( ruleTemplateUID ) ) ) ; if ( template == null ) { logger . debug ( ( ( "Rule template '" + ruleTemplateUID ) + "' does not exist." ) ) ; return null ; } else { org.eclipse.smarthome.automation.core.internal.RuntimeRule r1 = new org.eclipse.smarthome.automation.core.internal.RuntimeRule ( rule , template ) ; return r1 ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.support.v4.app.FragmentTransaction ft = mFragmentManager . beginTransaction () ; ft . setCustomAnimations ( android.R.anim.fade_in , android.R.anim.fade_out ) ; ft . replace ( R.id.frame_container , new babyfon.view.fragment.BabyMonitorFragment ( mContext ) , null ) . addToBackStack ( null ) . commit () ; } 
private boolean isPolicyCombinationValid ( java.lang.String . . . policyNames ) { boolean isValid = false ; java.lang.String firstPolicyName = policyNames [ 0 ] ; for ( java.lang.String policyName : policyNames ) { if ( ! ( policyName . equals ( firstPolicyName ) ) ) { isValid = true ; break; } } return isValid ; } 
public static java.lang.String encodePath ( java.lang.String path ) { if ( ( path == null ) || ( ( path . length () ) == 0 ) ) return path ; java.lang.StringBuilder buf = org.eclipse.jetty.util.URIUtil . encodePath ( null , path , 0 ) ; return buf == null ? path : buf . toString () ; } 
@ java.lang.Override public org.bds.lang.Type returnType ( org.bds.scope.Scope scope ) { if ( ( returnType ) != null ) return returnType ; expr . returnType ( scope ) ; if ( expr . canCastInt () ) returnType = Type.INT ; else if ( expr . canCastReal () ) returnType = Type.REAL ; else return null ; return returnType ; } 
pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) return null ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( vectorElement . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( vectorElement . getAttribute ( "y" ) ) ) ; } 
public void emit ( T record ) throws java.io.IOException , java.lang.InterruptedException { for ( int targetChannel : channelSelector . selectChannels ( record , numChannels ) ) { if ( ( random . nextInt ( 100 ) ) < ( targetPartition . getChannelNonDropProbability ( targetChannel ) ) ) { sendToTarget ( record , targetChannel ) ; } } } 
@ java.lang.Override public aljebra.data.sparse.SparseVector scale ( double factor ) { if ( factor == 0.0 ) { return new aljebra.data.sparse.SparseVector ( size ) ; } aljebra.data.sparse.SparseVector result = new aljebra.data.sparse.SparseVector ( size ) ; for ( int i : ids ) { result . set ( i , ( ( get ( i ) ) * factor ) ) ; } return result ; } 
public static double sumSigma ( int i , double [] p , double [] q , double [] b ) { double res = 0 ; for ( int l = 0 ; l < ( p.length ) ; l ++ ) { double power = ( ( p [ i ] ) * ( q [ l ] ) ) + ( b [ l ] ) ; res += java.lang.Math . exp ( power ) ; } return res ; } 
public static boolean allNumbersValid ( java.util.Vector < ? > textFields ) { for ( java.lang.Object text : textFields ) { java.lang.String string = ( ( java.awt.TextField ) ( text ) ) . getText () ; if ( ( string . length () ) == 0 ) return false ; try { java.lang.Double . parseDouble ( string ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } } return true ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Void . . . params ) { if ( language . equalsIgnoreCase ( "japanese" ) ) japExecute () ; else if ( language . equalsIgnoreCase ( "mandarin" ) ) { chineseExecute () ; } else if ( language . equalsIgnoreCase ( "korean" ) ) try { koreanExecute () ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error " + e ) ) ; } return null ; } 
private static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.app_bar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; initRecyclerView ( savedInstanceState ) ; } 
private static void closeConnectionBetween ( com.hazelcast.core.HazelcastInstance h1 , com.hazelcast.core.HazelcastInstance h2 ) { if ( ( h1 == null ) || ( h2 == null ) ) { return; } com.hazelcast.instance.Node n1 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample . getNode ( h1 ) ; com.hazelcast.instance.Node n2 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample . getNode ( h2 ) ; if ( ( n1 != null ) && ( n2 != null ) ) { n1.clusterService . removeAddress ( n2.address , null ) ; n2.clusterService . removeAddress ( n1.address , null ) ; } } 
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } 
public entities.obstacles.Entity createEntity ( java.lang.String eName , org.lwjgl.util.vector.Vector3f position , float rotX , float rotY , float rotZ , float scale ) { long before = java.lang.System . currentTimeMillis () ; entities.obstacles.Entity e = new entities.obstacles.Entity ( tModels . get ( eName ) , 0 , mData . get ( eName ) , position , rotX , rotY , rotZ , scale , eName ) ; world . add ( e ) ; return e ; } 
private synchronized boolean isLineAvaliable ( int line ) { org.zhgeaits.zgdanmaku.model.ZGDanmaku danmaku = mLinesAvaliable . get ( line ) ; if ( danmaku == null ) { return true ; } if ( ( danmaku . getCurrentOffsetX () ) > ( danmaku . getDanmakuWidth () ) ) { mLinesAvaliable . remove ( line ) ; return true ; } return false ; } 
protected void initTableColumns ( boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , keepColumnStatus ) ; } } } 
@ java.lang.Override void init ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { javax.servlet.RequestDispatcher dispatcher = null ; java.util.List < fr.eni.expeditor.entity.Article > lstArticle = gestionArticleBean . rechercherTous () ; request . setAttribute ( "lstArticle" , lstArticle ) ; dispatcher = request . getRequestDispatcher ( "/WEB-INF/views/manager/gestionArticle.jsp" ) ; dispatcher . forward ( request , response ) ; } 
private double getPriorForStructure ( int numParents ) { double e = getStructurePrior () ; int k = numParents ; int vm = ( data.length ) - 1 ; return ( k * ( java.lang.Math . log ( ( e / vm ) ) ) ) + ( ( vm - k ) * ( java.lang.Math . log ( ( 1.0 - ( e / vm ) ) ) ) ) ; } 
protected java.lang.String parseNextLink ( com.fasterxml.jackson.databind.JsonNode node ) { com.fasterxml.jackson.databind.JsonNode atIotLinkPath = node . path ( org.n52.shared.sensorthings.decoder.AT_IOT_NEXT_LINK ) ; if ( checkNode ( atIotLinkPath ) ) { return atIotLinkPath . asText () ; } else { com.fasterxml.jackson.databind.JsonNode linkPath = node . path ( org.n52.shared.sensorthings.decoder.NEXT_LINK ) ; if ( checkNode ( linkPath ) ) { return linkPath . asText () ; } } return null ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; trace.traceapp.StartDraw.appLocationManager = MainActivity.appLocationManager ; drawView = new trace.traceapp.DrawView ( this ) ; drawView . setBackgroundColor ( Color.WHITE ) ; setContentView ( drawView ) ; drawView . setWillNotDraw ( false ) ; arraySize = drawView . getLocArraySize () ; } 
@ javafx.fxml.FXML void rechercheSelonCriteres ( javafx.event.ActionEvent event ) { if ( motOuDefinietionRechercher . getText () . isEmpty () ) { javafx.scene.control.Alert alert = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.WARNING ) ; alert . setTitle ( "Avertissement" ) ; alert . setHeaderText ( "Erreur" ) ; alert . setContentText ( "Il n'y a aucun mot ou définition à recherche" ) ; alert . show () ; } else { recherche ( false ) ; } } 
private int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } 
public void gameClick ( android.view.View v ) { if ( ( ! ( canClick ) ) || ( ( ( android.os.SystemClock . elapsedRealtime () ) - ( lastClickTime ) ) < 200 ) ) return; canClick = false ; lastClickTime = android.os.SystemClock . elapsedRealtime () ; super . gameClick ( v ) ; this . playerHandle ( v ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( album ) != null ) { switch ( view . getId () ) { case R.id.tv_activity_album_info_artist_name : android.content.Intent intent = new android.content.Intent ( this , com.zolotuhinartem.lastfminfo.activities.searched_artists.SearchedArtistsActivity . class ) ; intent . putExtra ( SearchedArtistsActivity.ARTIST_NAME , this . album . getArtist () ) ; startActivity ( intent ) ; } } } 
public void openChat ( android.view.View view ) { to = chatButton . getText () . toString () ; android.content.Intent intent = new android.content.Intent ( this , pl.edu.uksw.prir.messenger.Chat . class ) ; intent . putExtra ( "from" , from ) ; intent . putExtra ( "id" , id ) ; intent . putExtra ( "to" , to ) ; startActivity ( intent ) ; } 
@ java.lang.Override public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > handle ( android.database.Cursor cs ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > rows = new java.util.ArrayList < java.util.Map < java.lang.String , java.lang.Object > > () ; while ( ! ( cs . isLast () ) ) { rows . add ( this . handleRow ( cs ) ) ; } return rows ; } 
private int setListBottom ( java.util.List listToSetBottomOf , int listTopPos ) { int listBottom = 0 ; if ( ( listToSetBottomOf . size () ) > 0 ) { if ( ( listToSetBottomOf . size () ) < 11 ) { listBottom = listToSetBottomOf . size () ; } else { listBottom = listTopPos + 10 ; } } return listBottom ; } 
private data_structures.Node findNode ( int index ) { if ( index == ( ( size ) - 1 ) ) { return tail ; } data_structures.Node node = head ; for ( int i = 0 ; i < index ; i ++ ) { node = node . getNext () ; } return node ; } 
public java.lang.String inviteUserToBooking ( java.lang.String username_to_invite , int booking_id ) throws java.sql.SQLException { java.sql.PreparedStatement s1 = connection . prepareStatement ( "SELECT systemUserId FROM SystemUser WHERE username=?" ) ; s1 . setString ( 1 , username_to_invite ) ; java.sql.ResultSet result = s1 . executeQuery () ; if ( result . next () ) return inviteUserToBooking ( result . getInt ( 1 ) , booking_id ) ; return ( "No such user found '" + username_to_invite ) + "'." ; } 
public int getIndexDoc ( final java.lang.String filePath ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( filePath ) ) return di ; } return - 1 ; } 
public void enter ( android.view.View in , com.iodesystems.android.libs.view.transitions.TransitionPair transitionPair ) { if ( ! ( views . isEmpty () ) ) { android.view.View out = views . peek () ; if ( ( onPageTransitionListener ) != null ) { onPageTransitionListener . onPageTransition ( in , out ) ; } transitionPair . enter ( out , in ) ; transitionPairs . push ( transitionPair ) ; } views . push ( in ) ; } 
public void addCookie ( org.eclipse.rdf4j.workbench.util.WorkbenchRequest req , javax.servlet.http.HttpServletResponse resp , java.lang.String name , java.lang.String value ) { final javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( name , value ) ; if ( req . getContextPath () . isEmpty () ) { cookie . setPath ( "/" ) ; } else { cookie . setPath ( req . getContextPath () ) ; } cookie . setMaxAge ( java.lang.Integer . parseInt ( config . getInitParameter ( org.eclipse.rdf4j.workbench.util.CookieHandler.COOKIE_AGE_PARAM ) ) ) ; this . addCookie ( req , resp , cookie ) ; } 
@ org.isoron.uhabits.utils.Nullable public static java.lang.String getRingtoneName ( org.isoron.uhabits.utils.Context context ) { try { org.isoron.uhabits.utils.Uri ringtoneUri = org.isoron.uhabits.utils.RingtoneUtils . getRingtoneUri ( context ) ; java.lang.String ringtoneName = context . getResources () . getString ( R.string.none ) ; if ( ringtoneUri != null ) { org.isoron.uhabits.utils.Ringtone ringtone = getRingtone ( context , ringtoneUri ) ; if ( ringtone != null ) { ringtoneName = ringtone . getTitle ( context ) ; ringtone . stop () ; } } return ringtoneName ; } catch ( java.lang.RuntimeException e ) { e . printStackTrace () ; return null ; } } 
@ java.lang.Override public org.bson.Document detect ( java.util.List < org.repositoryminer.parser.IParser > parsers , java.lang.String repositoryPath ) { try { org.bson.Document document = new org.bson.Document () ; document . append ( "name" , "duplicated_code" ) . append ( "occurences" , process ( parsers , repositoryPath ) ) ; return document ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return null ; } } 
private void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } } 
public static double normalizeValue ( final double input , final double avg , final double std ) { double res ; if ( std != 0 ) { res = ( input - avg ) / std ; } else { res = 0 ; } return res ; } 
private static java.util.List < ru.stqa.pft.addressbook.model.GroupData > generateGroups ( int count ) { java.util.List < ru.stqa.pft.addressbook.model.GroupData > groups = new java.util.ArrayList < ru.stqa.pft.addressbook.model.GroupData > () ; for ( int i = 0 ; i < count ; i ++ ) { groups . add ( new ru.stqa.pft.addressbook.model.GroupData () . withName ( java.lang.String . format ( "test %s" , i ) ) . withHeader ( java.lang.String . format ( "header %s" , i ) ) . withFooter ( java.lang.String . format ( "footer %s" , i ) ) ) ; } return groups ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/{code}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String updateSubCategory ( @ org.springframework.web.bind.annotation.ModelAttribute @ javax.validation.Valid org.egov.tl.entity.LicenseSubCategory licenseSubCategory , org.springframework.validation.BindingResult errors , org.springframework.web.servlet.mvc.support.RedirectAttributes additionalAttr , final org.springframework.ui.Model model ) { if ( errors . hasErrors () ) { return "subcategory-update" ; } licenseSubCategoryService . updateLicenseSubCategory ( licenseSubCategory ) ; additionalAttr . addFlashAttribute ( "message" , "msg.success.subcategory.update" ) ; return "redirect:/licensesubcategory/view/" + ( licenseSubCategory . getCode () ) ; } 
@ java.lang.Override public void handle ( javafx.event.Event evt ) { java.lang.String text = "" ; java.lang.String eventType = evt . getEventType () . toString () ; switch ( eventType ) { case "MOUSE_CLICKED" : text = "Mouse Clicked" ; break; case "MOUSE_ENTERED" : text = "Mouse entered" ; break; case "MOUSE_EXITED" : text = "Mouse exited" ; break; default: break; } java.lang.System.out . println ( text ) ; rootPane . getRootFooterArea () . getTextOutputLabel () . setText ( text ) ; } 
public static void zipDirectory ( java.io.File dir , java.io.File zipFile ) throws java.io.IOException { java.io.FileOutputStream fout = new java.io.FileOutputStream ( zipFile ) ; java.util.zip.ZipOutputStream zout = new java.util.zip.ZipOutputStream ( fout ) ; org.jboss.tools.tycho.sitegenerator.FetchSourcesFromManifests . zipSubDirectory ( "" , dir , zout ) ; zout . flush () ; zout . close () ; fout . flush () ; fout . close () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/login" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String login1 ( javax.servlet.http.HttpSession session , javax.servlet.http.HttpServletRequest request ) { if ( ( session . getAttribute ( "user" ) ) != null ) { session . removeAttribute ( "notification" ) ; session . setAttribute ( "notification" , "You are already logged in." ) ; return "index" ; } else { session . removeAttribute ( "notification" ) ; session . removeAttribute ( "notifsignup" ) ; request . setAttribute ( "url" , request . getParameter ( "url" ) ) ; return "login" ; } } 
protected synchronized java.lang.String sourceForModelledClass ( spoon.reflect.declaration.CtType < ? > modelledClass ) { prettyPrinter . reset () ; prettyPrinter . scan ( modelledClass ) ; java.lang.String sourceCode = ( ( ( "package " + ( modelledClass . getPackage () . toString () ) ) + ";" ) + ( java.lang.System . getProperty ( "line.separator" ) ) ) + ( prettyPrinter . toString () ) ; prettyPrinter . reset () ; return sourceCode ; } 
public int getTileMeta ( net.minecraft.world.IBlockAccess blockAccess , int x , int y , int z ) { return ( blockAccess . getTileEntity ( x , y , z ) ) != null ? getTileMeta ( blockAccess . getTileEntity ( x , y , z ) . getWorldObj () , x , y , z ) : 0 ; } 
public void handle ( javafx.scene.input.MouseEvent me ) { int x = ( ( int ) ( me . getSceneX () ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; int y = ( ( int ) ( ( me . getSceneY () ) - 55 ) ) / ( main.gui.BoardPane.SPRITE_SIZE ) ; if ( ! ( animating ) ) { clicked ( x , y , image ) ; } } 
public double subtractRange ( final int firstIndex , final int secondIndex ) { double result = systemCoefficients [ firstIndex ] [ secondIndex ] ; for ( int k = 0 ; k <= ( secondIndex - 1 ) ; k ++ ) { result -= ( systemCoefficients [ firstIndex ] [ k ] ) * ( systemCoefficients [ secondIndex ] [ k ] ) ; } return result ; } 
public void prepareLevel ( org.newdawn.slick.tiled.TiledMap currentMap , int spellingtonX , int spellingtonY ) throws org.newdawn.slick.SlickException { activeProjectiles = new java.util.ArrayList <> () ; activeAnimations = new java.util.ArrayList <> () ; spellington . setAnimState ( LivingEntity.AnimState.STANDING_R ) ; spellington . setX ( spellingtonX ) ; spellington . setY ( spellingtonY ) ; spellington . setSpeedVector ( new ca.qc.bdeb.info204.spellington.calculations.Vector2D ( 0 , 0 ) ) ; map = currentMap ; } 
public int getRelativeMajor ( int note ) { int relativeMajor = 0 ; for ( int j = 0 ; j < ( SIZE_OF_NOTES_ARRAY ) ; j ++ ) { if ( ( notes [ j ] ) == note ) { int index = ( j + 3 ) % ( SIZE_OF_NOTES_ARRAY ) ; relativeMajor = notes [ index ] ; break; } } return relativeMajor ; } 
public void onClick ( android.content.DialogInterface dialog , int which ) { try { mAPI . revokeContactFromChain ( mAPI . getBlocks ( owner ) . get ( position ) . getBlockOwner () ) ; } catch ( nl.tudelft.b_b_w.model.HashException e ) { e . printStackTrace () ; } catch ( nl.tudelft.b_b_w.model.BlockAlreadyExistsException e ) { e . printStackTrace () ; } notifyDataSetChanged () ; dialog . dismiss () ; } 
@ java.lang.Override public void onEvent ( eu.dlvm.domotics.base.Block source , eu.dlvm.domotics.events.EventType event ) { switch ( event ) { case ON : break; case OFF : reallyOff () ; break; case TOGGLE : toggle () ; break; case DELAY_ON : delayOn () ; break; case DELAY_OFF : delayOff () ; break; default: eu.dlvm.domotics.actuators.Fan.logger . warn ( ( ( ( "Ignored event " + event ) + " from " ) + ( source . getName () ) ) ) ; } } 
public void formatEditText ( android.widget.EditText editText ) { if ( editText . getText () . toString () . equals ( "" ) ) { editText . setText ( 0 ) ; } else if ( ( editText . length () ) == 1 ) { java.lang.String temp = 0 + ( editText . getText () . toString () ) ; editText . setText ( temp ) ; } } 
private java.lang.String inputStreamToString ( java.io.InputStream inputStream ) throws java.io.IOException { java.io.Reader reader = new java.io.InputStreamReader ( inputStream , "gb2312" ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( reader ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String buffer ; while ( ( buffer = bufferedReader . readLine () ) != null ) { sb . append ( buffer ) . append ( "\n" ) ; } inputStream . close () ; bufferedReader . close () ; reader . close () ; return sb . toString () ; } 
private boolean hideMessageByJSONSetting ( org.json.JSONArray array ) { try { org.json.JSONObject object = array . get ( 0 ) ; if ( ( object . getJSONObject ( "data" ) . getBoolean ( "notification" ) ) == false ) { return false ; } } catch ( java.lang.Exception e ) { return true ; } return true ; } 
public static ml.shifu.shifu.container.obj.ModelConfig loadModelConfig ( java.lang.String path , ml.shifu.shifu.container.obj.RawSourceData.SourceType sourceType ) throws java.io.IOException { ml.shifu.shifu.container.obj.ModelConfig modelConfig = ml.shifu.shifu.util.CommonUtils . loadJSON ( path , sourceType , ml.shifu.shifu.container.obj.ModelConfig . class ) ; if ( ( modelConfig . getTrain () . getGridConfigFile () ) != null ) { modelConfig . getTrain () . setGridConfigFileContent ( ml.shifu.shifu.util.CommonUtils . loadFileContent ( modelConfig . getTrain () . getGridConfigFile () , sourceType ) ) ; } return modelConfig ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { switch ( position ) { case 0 : com.midoreigh.midopicker.CameraKitFragment cameraKitFragment = new com.midoreigh.midopicker.CameraKitFragment () ; com.midoreigh.midopicker.CameraKitFragment . setConfig ( com.midoreigh.midopicker.ImagePickerActivity . getConfig () ) ; return cameraKitFragment ; case 1 : return new com.midoreigh.midopicker.GalleryFragment () ; default: return null ; } } 
public boolean onPreferenceChange ( android.preference.Preference preference , final java.lang.Object newValue ) { final java.lang.String newPath = ( ( java.lang.String ) ( newValue ) ) ; try { com.ichi2.anki.AnkiDroidApp . initializeAnkiDroidDirectory ( newPath ) ; return true ; } catch ( com.ichi2.anki.exception.StorageAccessException e ) { timber.log.Timber . e ( e , "Could not initialize directory: %s" , newPath ) ; android.widget.Toast . makeText ( getApplicationContext () , R.string.dialog_collection_path_not_dir , Toast.LENGTH_LONG ) . show () ; return false ; } } 
@ java.lang.Override public void onAttachedToRecyclerView ( android.support.v7.widget.RecyclerView recyclerView ) { if ( ( mRunnables . size () ) == 0 ) { int count = getItemCount () ; for ( int i = 0 ; i < count ; i ++ ) { mRunnables . add ( null ) ; } } registerAdapterDataObserver ( new com.tr4android.recyclerviewslideitem.SwipeAdapter.SwipeAdapterDataObserver () ) ; } 
public void mouseUpdate ( int mx , int my , boolean pressed ) { if ( pressed == false ) { this . destroy () ; } else if ( this . contains ( mx , my ) ) { if ( ! ( this . fixed ) ) { this . bind ( mx , my ) ; } else { this . bind ( mx , this . fixed_y ) ; } } } 
public static boolean checkLimit ( net.dv8tion.jda.core.entities.Guild guild ) { fredboat.audio.player.GuildPlayer guildPlayer = fredboat.audio.player.PlayerRegistry . getExisting ( guild ) ; if ( ( guildPlayer != null ) && ( ( guildPlayer . getSongCount () ) > 0 ) ) return true ; return ( ( fredboat.audio.player.PlayerLimitManager.limit ) < 0 ) || ( ( fredboat.audio.player.PlayerRegistry . getPlayingPlayers () . size () ) < ( fredboat.audio.player.PlayerLimitManager.limit ) ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { boolean connection = mBluetoothLeService . connect ( device . getAddress () ) ; if ( connection ) { rootview . setVisibility ( View.VISIBLE ) ; connect_button_view . setVisibility ( View.GONE ) ; } dialog . dismiss () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String x = retrieveMyPHP . deleteUserArtist ( MyApplication.userName , artist . getArtistId () ) ; dbHelper . deleteUserArtist ( dbHelper . getWritableDatabase () , artist . getArtistId () ) ; android.widget.Toast . makeText ( mActivity . getApplicationContext () , x , Toast.LENGTH_SHORT ) . show () ; mArtists . remove ( position ) ; notifyDataSetChanged () ; } 
public void onResponse ( de.elanev.studip.android.app.backend.datamodel.ContactGroups response ) { try { resolver . applyBatch ( AbstractContract.CONTENT_AUTHORITY , new de.elanev.studip.android.app.backend.net.sync.ContactGroupsHandler ( response ) . parse () ) ; } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } catch ( android.content.OperationApplicationException e ) { e . printStackTrace () ; } } 
public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; removeDanceSequence ( danceSequenceID , selectedBeatElem . getBeatPosition () , ( ( selectedBeatElem . getBeatPosition () ) + ( mDanceSequences . get ( danceSequenceID ) . getLength () ) ) ) ; } 
public boolean containsKey ( java.lang.String key ) { int index = ( key . hashCode () ) % ( this . valueTable . length ) ; java.lang.String currentKey ; while ( ( currentKey = this . keyTable [ index ] ) != null ) { if ( key . equals ( currentKey ) ) return true ; index = ( index + 1 ) % ( this . keyTable . length ) ; } return false ; } 
public com.mycompany.dao.Doctor addDoctor ( com.mycompany.dao.Doctor doctor ) { org.hibernate.SessionFactory sessionFactory = com.mycompany.hibernate.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . save ( doctor ) ; session . getTransaction () . commit () ; return doctor ; } 
@ java.lang.Override public boolean onNavigationItemSelected ( android.view.MenuItem menuItem ) { mDrawerLayout . closeDrawers () ; menuItem . setChecked ( true ) ; switch ( menuItem . getItemId () ) { case R.id.nav_home : setToolbarTitle ( "主页" ) ; navigationDrawerItemSelected ( 0 ) ; break; case R.id.nav_messages : setToolbarTitle ( "发现" ) ; navigationDrawerItemSelected ( 1 ) ; break; } return true ; } 
@ java.lang.Override public twitter4j.User showUser ( java.lang.String arg0 ) throws twitter4j.TwitterException { if ( ( limits [ 1 ] ) == 179 ) { SocialNetworkAnalysis.TwitterWrapper.timelimited [ 0 ] = new java.util.Date () ; limit . reached () ; limits [ 1 ] = 0 ; } ( limits [ 1 ] ) ++ ; java.lang.System.out . print ( "limits in showUser: " ) ; for ( int limit : limits ) { java.lang.System.out . print ( ( limit + " " ) ) ; } java.lang.System.out . println () ; return t . showUser ( arg0 ) ; } 
private boolean checkNumberAssignment ( java.lang.String [] input ) { if ( ( input [ 1 ] . matches ( ".*[^1-9].*" ) ) && ( ! ( input [ 1 ] . contains ( "0" ) ) ) ) { if ( input [ 1 ] . contains ( "." ) ) { return true ; } else { java.lang.System.out . println ( "ERROR: Number assignment contains a non-number character." ) ; return false ; } } else { return true ; } } 
@ java.lang.Override public org.craftercms.profile.api.VerificationToken getVerificationToken ( java.lang.String tokenId ) throws org.craftercms.profile.api.exceptions.ProfileException { java.lang.String url = getAbsoluteUrl ( ( ( BASE_URL_PROFILE ) + ( URL_PROFILE_GET_VERIFICATION_TOKEN ) ) ) ; url = addQueryParams ( url , createBaseParams () , false ) ; return doGetForObject ( url , org.craftercms.profile.api.VerificationToken . class , tokenId ) ; } 
public void removeFromErrorsWarnings ( insalmo.Parameter param ) { if ( this . errors . contains ( param ) ) { this . errors . remove ( param ) ; this . errorWarningUpdateListener . actionPerformed ( new java.awt.event.ActionEvent ( this , java.awt.event.ActionEvent.ACTION_PERFORMED , null ) ) ; } if ( this . warnings . contains ( param ) ) { this . warnings . remove ( param ) ; this . errorWarningUpdateListener . actionPerformed ( new java.awt.event.ActionEvent ( this , java.awt.event.ActionEvent.ACTION_PERFORMED , null ) ) ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { progressBar . setVisibility ( View.GONE ) ; startActivity ( new android.content.Intent ( this , com.example.xmppchatsampleproject.ChatOptionActivity . class ) ) ; android.os.Bundle extras = getIntent () . getExtras () ; if ( extras != null ) { java.lang.String messageContent = extras . getString ( "xmpp_status" ) ; if ( ( messageContent != null ) && ( messageContent . equals ( "success" ) ) ) {} else { android.widget.Toast . makeText ( this , "Somthing went wrong. try again" , Toast.LENGTH_SHORT ) . show () ; } } } 
public void setTime ( int minutes , int seconds ) { if ( seconds < 0 ) seconds = 0 ; if ( minutes < 0 ) minutes = 0 ; this . minutes = minutes + ( seconds / 60 ) ; this . seconds = seconds % 60 ; this . setText ( java.lang.String . format ( "%02d:%02d" , this . minutes , this . seconds ) ) ; } 
public static boolean isBF ( java.lang.String word ) throws java.io.IOException { if ( ( utils.GFBF.GFLexicon . isEmpty () ) || ( utils.GFBF.BFLexicon . isEmpty () ) ) utils.GFBF . intializeLexicon () ; if ( ( utils.GFBF.BFLexicon . contains ( word ) ) || ( ! ( utils.GFBF.GFLexicon . contains ( word ) ) ) ) return true ; return false ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/addVolunteer" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String addVolunteer ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "SpringWeb" ) us.wasatchsystems.ccs.models.Volunteer volunteer , org.springframework.ui.ModelMap model ) { model . addAttribute ( "firstName" , volunteer . getFirstName () ) ; model . addAttribute ( "lastName" , volunteer . getLastName () ) ; model . addAttribute ( "dob" , volunteer . getDob () ) ; us.wasatchsystems.ccs.datasource.VolunteerDataSource . addVolunteer ( volunteer ) ; return "result" ; } 
@ java.lang.Override public java.util.EnumSet < de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance > getInstancesGlobalNonOld ( final de.uni_freiburg.informatik.ultimate.modelcheckerutils.cfg.variables.IProgramNonOldVar pv ) { if ( isModifiableByCallee ( pv ) ) { if ( isWrittenOnReturn ( pv ) ) { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN ) ; } else { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_RETURN ) ; } } else { if ( isWrittenOnReturn ( pv ) ) { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN ) ; } else { return java.util.EnumSet . of ( de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_CALL , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.BEFORE_RETURN , de.uni_freiburg.informatik.ultimate.modelcheckerutils.smt.predicates.CallReturnPyramideInstanceProvider.Instance.AFTER_RETURN ) ; } } } 
@ java.lang.Override public final boolean titleChanged ( final xyz.algogo.core.Algorithm algorithm , final java.lang.String title , final java.lang.String newTitle ) { if ( ( newTitle != null ) && ( ! ( newTitle . isEmpty () ) ) ) { algorithmChanged ( false ) ; this . setTitle ( buildTitle ( newTitle , algorithm . getAuthor () ) ) ; return true ; } javax.swing.JOptionPane . showMessageDialog ( this , xyz.algogo.desktop.utils.LanguageManager . getString ( "joptionpane.invalidtitle" , newTitle ) , xyz.algogo.desktop.utils.LanguageManager . getString ( "joptionpane.error" ) , javax.swing.JOptionPane.ERROR_MESSAGE ) ; return false ; } 
@ java.lang.Override public java.lang.Boolean eventTreasureOpened ( java.lang.Integer token , java.lang.Integer treasureID , java.lang.Integer userID ) { java.util.concurrent.Future < java.lang.Boolean > future = core.CoreModel . getInstance () . addCommand ( new frontend.Requests.OpenTreasureCommand ( treasureID , userID ) ) ; try { return future . get () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } return false ; } 
@ java.lang.Override public java.lang.Object getMessageBlocking ( long timeDuration , java.util.concurrent.TimeUnit timeUnit ) throws java.lang.InterruptedException { FinalProject.communication.CommTuple receivedCommTuple = receivedObjectQueue . poll ( timeDuration , timeUnit ) ; if ( receivedCommTuple == null ) return null ; replyConnection = receivedCommTuple . getConnection () ; return receivedCommTuple . getObj () ; } 
private static void set ( greymerk.roguelike.worldgen.IWorldEditor editor , java.util.Random rand , greymerk.roguelike.worldgen.Coord origin ) { if ( ! ( editor . isAirBlock ( origin ) ) ) return; greymerk.roguelike.worldgen.MetaBlock vine = greymerk.roguelike.worldgen.blocks.BlockType . get ( BlockType.VINE ) ; for ( greymerk.roguelike.worldgen.Cardinal dir : greymerk.roguelike.worldgen.Cardinal.directions ) { if ( editor . canPlace ( vine , origin , dir ) ) { greymerk.roguelike.worldgen.blocks.Vine . setOrientation ( vine , dir ) ; vine . set ( editor , origin ) ; return; } } } 
public void addUpdate ( com.lagopusempire.basicupdater.Update < V , U > update ) { if ( update == null ) { throw new java.lang.IllegalArgumentException ( "Update cannot be null." ) ; } V from = update . getFrom () ; if ( updates . containsKey ( from ) ) { throw new com.lagopusempire.basicupdater.DuplicateUpdateException ( updates . remove ( from ) , update ) ; } updates . put ( from , update ) ; } 
@ java.lang.Override public void onResume ( android.os.Bundle savedInstanceState ) { super . onResume ( savedInstanceState ) ; number = 0 ; sent = false ; com.appbackr.android.tracker.demo.Tracker . postData ( this . getApplicationContext () , "" . getApplicationContext () . getPackageName () , "" , "" ) ; setContentView ( R.layout.main ) ; final android.widget.TextView textViewToChange = ( ( android.widget.TextView ) ( findViewById ( R.id.count ) ) ) ; textViewToChange . setText ( number . toString () ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int itemClicked = item . getItemId () ; if ( itemClicked == ( R.id.item_Setting ) ) { android.content.Context context = this ; android.content.Intent activity_setting = new android.content.Intent ( context , com.example.william.earthdayapplication.SettingActivity . class ) ; startActivity ( activity_setting ) ; } if ( itemClicked == ( R.id.item_Instruction ) ) {} if ( itemClicked == ( R.id.item_Help ) ) { android.content.Intent toy = new android.content.Intent ( getApplicationContext () , com.example.william.earthdayapplication.Main2Activity . class ) ; startActivity ( toy ) ; } return super . onOptionsItemSelected ( item ) ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "deprecation" ) public org.springframework.messaging.support.ErrorMessage buildErrorMessage ( java.lang.Throwable throwable , org.springframework.core.AttributeAccessor attributes ) { java.lang.Object inputMessage = attributes . getAttribute ( ErrorMessageUtils.INPUT_MESSAGE_CONTEXT_KEY ) ; return inputMessage instanceof org.springframework.messaging.Message ? new org.springframework.integration.support.EnhancedErrorMessage ( throwable , ( ( org.springframework.messaging.Message < ? > ) ( inputMessage ) ) ) : new org.springframework.messaging.support.ErrorMessage ( throwable ) ; } 
public static java.net.URL fromProjectID ( int projectID ) { try { final java.net.URL url = com.therandomlabs.utils.network.NetworkUtils . getRedirectedURL ( com.therandomlabs.curseapi.Curse.PROJECT_URL . replaceAll ( com.therandomlabs.curseapi.Curse.PROJECT_ID , java.lang.Integer . toString ( projectID ) ) , 2 ) ; if ( ! ( com.therandomlabs.curseapi.Curse . isCurseProjectNoRedirect ( com.therandomlabs.utils.network.NetworkUtils . getRedirectedURL ( url ) ) ) ) { throw new com.therandomlabs.curseapi.InvalidProjectIDException ( ( "Invalid project ID: " + projectID ) ) ; } return url ; } catch ( java.io.IOException ex ) { throw new com.therandomlabs.curseapi.CurseException ( ex ) ; } } 
public static java.lang.String getParam ( final org.jooq.lambda.tuple.Tuple2 < java.lang.String , java.lang.String > valueNameCouple ) { return ( ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_START ) + ( valueNameCouple . v1 () ) ) + ( valueNameCouple . v2 () . equals ( "" ) ? "" : ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_END ) + ( valueNameCouple . v2 () ) ) ; } 
public void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } if ( ( setupStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; } 
public int ev12 ( int p ) { position = p ; java.lang.System.out . println ( "The gods are in your favor as you seem to have found a hot spring with some lovely women to match..." ) ; java.lang.System.out . println ( "(1) Approach and see what happens" ) ; java.lang.System.out . println ( "(2) Resist the urge" ) ; choice = u . nextInt () ; switch ( choice ) { case 1 : java.lang.System.out . println ( "You're not quite sure what happened but you feel tired and a bit... sweaty? You definitely feel like slowing down for a bit." ) ; speed -= 1 ; position += speed ; break; case 2 : java.lang.System.out . println ( "You feel like much less of a man but somehow feel like you avoided a crisis. You are hasty in your, well, haste." ) ; speed += 2 ; position += speed ; break; default: java.lang.System.out . println ( "No pity is shown to those who cannot follow the rules of the game. Die, you fiend." ) ; position = - 1 ; break; } return position ; } 
protected void checkAnswer ( java.lang.String answer , boolean outOfTime ) { if ( answer . equals ( members [ memberNum ] ) ) { score += 1 ; refreshScoreText () ; } else { java.lang.String wrongText ; if ( ! outOfTime ) { wrongText = "You suck! The correct answer was " + ( members [ memberNum ] ) ; } else { wrongText = "You ran out of time! The correct answer was " + ( members [ memberNum ] ) ; } android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , wrongText , Toast.LENGTH_SHORT ) ; toast . show () ; } } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int parcelableFlags ) { dest . writeLong ( info.presentationTimeUs ) ; dest . writeInt ( info.flags ) ; dest . writeByteArray ( org.mozilla.gecko.media.Sample . byteArrayFromBuffer ( bytes , info.offset , info.size ) ) ; if ( ( crypto ) != null ) { dest . writeByteArray ( crypto.iv ) ; dest . writeByteArray ( crypto.key ) ; dest . writeInt ( crypto.mode ) ; dest . writeIntArray ( crypto.numBytesOfClearData ) ; dest . writeIntArray ( crypto.numBytesOfEncryptedData ) ; dest . writeInt ( crypto.numSubSamples ) ; } } 
public boolean hasPendingConnectRequest ( java.lang.String ipAddress ) { synchronized ( mReconnectRequestList ) { if ( ( mReconnectRequestList . size () ) > 0 ) { logConnectReqeustList () ; for ( com.assistant.connection.ConnectionManager.ConnectRequest request : mReconnectRequestList ) { if ( android.text.TextUtils . equals ( ipAddress , request.ipAddress ) ) { com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "hasPendingConnectRequest, true for ip:" + ipAddress ) ) ; return true ; } } } } com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "hasPendingConnectRequest, false for reconnecting:" + ipAddress ) ) ; return false ; } 
private static boolean equals ( java.util.Properties p , java.lang.String optionKey , java.lang.String optionValue , boolean caseSensitive ) { java.lang.String v = p . getProperty ( optionKey ) ; if ( v == null ) return false ; if ( ! caseSensitive ) v = v . toLowerCase () ; return v . equals ( optionValue ) ; } 
public void onEvent ( blueprint.com.sage.events.BackEvent event ) { if ( ( mViewPager . getCurrentItem () ) == 0 ) { getActivity () . finish () ; } else { mViewPager . setCurrentItem ( ( ( mViewPager . getCurrentItem () ) - 1 ) , true ) ; } } 
public org.apache.catalina.tribes.Member getMember ( org.apache.catalina.tribes.Member mbr ) { org.apache.catalina.tribes.Member [] members = this . members ; if ( ( members.length ) > 0 ) { org.apache.catalina.tribes.Member result = null ; for ( int i = 0 ; ( i < ( members.length ) ) && ( result == null ) ; i ++ ) { if ( members [ i ] . equals ( mbr ) ) { result = members [ i ] ; } } return result ; } else { return null ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent intent ; switch ( position ) { case 0 : intent = new android.content.Intent ( this , com.coolbitx.coolwallet.ui.ExchangeRateActivity . class ) ; startActivity ( intent ) ; break; case 1 : intent = new android.content.Intent ( this , com.coolbitx.coolwallet.ui.TransactionFeeActivity . class ) ; startActivity ( intent ) ; break; } } 
private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.Object > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.Object > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () . toString () ) ; } } return enableRedirect ( fullUrl ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private com.strobel.decompiler.ast.Expression updateCurrent ( com.strobel.decompiler.ast.Expression node ) { if ( ( node != null ) && ( node != ( Node.NULL ) ) ) { if ( node == scope ) { return null ; } node = parentLookup . get ( node ) ; return node ; } return null ; } 
public static java.lang.String decode ( java.lang.String secret ) { if ( ! ( com.joenee.web.rest.ea.EaDecrypt.isDecrypt ) ) { return secret ; } if ( org.apache.commons.lang.StringUtils . isEmpty ( secret ) ) { return null ; } java.lang.String source = null ; try { source = new java.lang.String ( org.springframework.util.Base64Utils . decode ( com.joenee.web.rest.ea.EaDecrypt . hexStringToBytes ( secret ) ) , "gb2312" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return source ; } 
private com.google.gcloud.testing.LocalDnsHelper.Response handleProjectGet ( com.sun.net.httpserver.HttpExchange exchange ) { java.lang.String path = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT . relativize ( exchange . getRequestURI () ) . getPath () ; java.lang.String [] tokens = path . split ( "/" ) ; java.lang.String projectId = tokens [ 0 ] ; java.lang.String query = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT . relativize ( exchange . getRequestURI () ) . getQuery () ; java.lang.String [] fields = com.google.gcloud.testing.OptionParsersAndExtractors . parseGetOptions ( query ) ; return getProject ( projectId , fields ) ; } 
@ java.lang.Override public double curve ( double t ) { if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( ( amount ) + 1 ) * t ) - ( amount ) ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( ( amount ) + 1 ) * t ) + ( amount ) ) ) + 2 ) ; } 
public static com.w9jds.marketbot.classes.models.MarketHistory map ( org.devfleet.crest.model.CrestMarketHistory history ) { return new com.w9jds.marketbot.classes.models.MarketHistory.Builder () . setAveragePrice ( history . getAveragePrice () ) . setHighPrice ( history . getHighPrice () ) . setLowPrice ( history . getLowPrice () ) . setRecordDate ( history . getDate () ) . setVolume ( history . getVolume () ) . build () ; } 
private static com.orientechnologies.orient.core.record.impl.ODocument getDocument ( final com.orientechnologies.orient.core.db.record.OIdentifiable id , final boolean forceReload ) { if ( id == null ) return null ; final com.orientechnologies.orient.core.record.impl.ODocument doc = id . getRecord () ; if ( ( doc != null ) && forceReload ) { try { doc . reload () ; } catch ( com.orientechnologies.orient.core.exception.ORecordNotFoundException e ) {} } return doc ; } 
private static float [] toEffectiveTableColumnWidth ( float [] tableColumnWidth ) { float [] result = new float [ tableColumnWidth.length ] ; for ( int i = 0 ; i < ( result.length ) ; ++ i ) { result [ i ] = ( tableColumnWidth [ i ] ) + ( com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils . getEps () ) ; } return result ; } 
@ java.lang.Override public java.lang.String onPlaceholderRequest ( org.bukkit.entity.Player pPlayer , java.lang.String pIdentifier ) { if ( pPlayer == null ) return "" ; switch ( pIdentifier ) { case "clantag" : return clanTagProvider . getClanTag ( pPlayer . getName () ) ; case "clantag_custom_design" : java.lang.String clanTag = clanTagProvider . getClanTag ( pPlayer . getName () ) ; if ( ! ( clanTag . isEmpty () ) ) return CLAN_MATCHER . replaceFirst ( clanTag ) ; return clanTag ; default: return null ; } } 
protected static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } 
public void removeIfDeadStone ( goGame.Index i ) { java.util.Set < goGame.Index > checkedStones = new java.util.HashSet <> () ; if ( isDead ( i , checkedStones ) ) { checkedStones . add ( i ) ; if ( ! ( checkedStones . isEmpty () ) ) { deadStone = true ; } for ( goGame.Index deadStones : checkedStones ) { stones . put ( deadStones , goGame.Board.Status.NONE ) ; GUI . removeStone ( deadStones . getY () , deadStones . getX () ) ; } } } 
@ java.lang.Override public models.Account getByEmailAndPassword ( models.Account account ) { models.Account acc = ( ( models.Account ) ( getBaseCriteria () . add ( org.hibernate.criterion.Restrictions . eq ( "email" , account . getEmail () ) ) . uniqueResult () ) ) ; if ( ( acc != null ) && ( repositories.BCrypt . checkpw ( account . getPassword () , acc . getPassword () ) ) ) { return account ; } return null ; } 
private static void getEmailRecursive ( java.io.File emailFile , java.util.List < java.io.File > emailFiles ) { if ( ! ( emailFile . isDirectory () ) ) { if ( ! ( emailFile . isHidden () ) ) { emailFiles . add ( emailFile ) ; } } else { for ( java.io.File subFile : emailFile . listFiles () ) { com.expee.ml.ExtractEmails . getEmailRecursive ( subFile , emailFiles ) ; } } } 
@ java.lang.Override protected void onPostExecute ( java.lang.String result ) { switch ( status ) { case userRecoverableError : activity . startActivityForResult ( userException . getIntent () , BaseActivity.REQUEST_PERMISSION ) ; return; case requestFailed : reactToError () ; break; case okay : break; default: throw new java.lang.UnsupportedOperationException ( "Not implemented this case" ) ; } } 
public static java.lang.String getAddPropertyDetailsData ( java.lang.String address , java.lang.String propertyAge , int PropertyResidentialOrCommercial , java.lang.String typeOfProperty , java.lang.String postCode ) { org.json.JSONObject object = new org.json.JSONObject () ; try { object . put ( "address" , address ) ; object . put ( "age" , propertyAge ) ; object . put ( "category_primary" , PropertyResidentialOrCommercial ) ; object . put ( "category_secondary" , typeOfProperty ) ; object . put ( "postcode" , postCode ) ; } catch ( org.json.JSONException var8 ) { var8 . printStackTrace () ; } return object . toString () ; } 
private se.plilja.imcollect.WeightBalancedTree < K > . Node < K > doubleLeft ( se.plilja.imcollect.WeightBalancedTree < K > . Node < K > node ) { se.plilja.imcollect.WeightBalancedTree < K > . Node < K > L = node.left ; se.plilja.imcollect.WeightBalancedTree < K > . Node < K > R = node.right ; se.plilja.imcollect.WeightBalancedTree < K > . Node < K > RL = R.left ; return node ( RL.key , node ( node.key , L , RL.left ) , node ( R.key , RL.right , R.right ) ) ; } 
private void setMapStyle ( int style ) { try { boolean success = mMap . setMapStyle ( com.google.android.gms.maps.model.MapStyleOptions . loadRawResourceStyle ( this , style ) ) ; if ( ! success ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Style parsing failed." ) ; } } catch ( android.content.res.Resources e ) { android.util.Log . e ( com.task.vasskob.googlemapsrealm.MapsActivity.TAG , "Can't find style. Error: " , e ) ; } } 
public void marcarAsistencia ( android.view.View v ) { progressBar . setVisibility ( View.VISIBLE ) ; arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.mCommandService = DeviceListActivity.mCommandService ; arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.mCommandService . write ( java.lang.String . valueOf ( usuario . getCi () ) ) ; accionMarcar = true ; android.content.Intent intent = new android.content.Intent ( this , arqrifa.org.arquitecturarifamobile.layout.SplashAsistenciaActivity . class ) ; startActivity ( intent ) ; new arqrifa.org.arquitecturarifamobile.layout.AsistenciaActivity.ReunionActualTask ( this ) . execute ( usuario . getGeneracion () ) ; } 
private void sendBtnActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.String user = userName . getText () ; java.lang.String pass1 = new java.lang.String ( password1 . getPassword () ) ; java.lang.String pass2 = new java.lang.String ( password2 . getPassword () ) ; boolean success = validateData ( user , pass1 , pass2 ) ; if ( ! success ) { success = validateData ( user , pass1 , pass2 ) ; } else { java.lang.String newAcctData = ( user + " " ) + pass1 ; connectNewUser ( newAcctData ) ; } } 
public java.lang.String authenticate ( java.lang.String input , java.util.List < pekl.gasqueue.com.gasqueue.model.Authenticator > authenticatorList ) { clientType = "empty" ; for ( pekl.gasqueue.com.gasqueue.model.Authenticator authPassword : authenticatorList ) { if ( input . equals ( authPassword . getBarPassword () ) ) { clientType = "bar" ; break; } else if ( input . equals ( authPassword . getCustomerPassword () ) ) { clientType = "customer" ; break; } } return clientType ; } 
@ java.lang.Override protected void onImageResult ( java.lang.String mediaType , android.net.Uri imageUri , java.lang.String imagePath ) { simpleDraweeView . setImageURI ( imageUri ) ; this . mediaType = mediaType ; this . imagePath = imagePath ; this . imageUri = imageUri ; org.gem.indo.dooit.helpers.crashlytics.CrashlyticsHelper . log ( this . getClass () . getSimpleName () , "onImageResult" , "a successful image result (onboarding)" ) ; } 
@ java.lang.Override public martell.com.vice.ArticleAdapter.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { context = parent . getContext () ; android.view.LayoutInflater inflater = android.view.LayoutInflater . from ( context ) ; config = new com.nostra13.universalimageloader.core.ImageLoaderConfiguration.Builder ( parent . getContext () ) . build () ; android.view.View articleView = inflater . inflate ( R.layout.recycler_item , parent , false ) ; martell.com.vice.ArticleAdapter.ViewHolder viewHolder = new martell.com.vice.ArticleAdapter.ViewHolder ( articleView ) ; android.util.Log . d ( martell.com.vice.ArticleAdapter.TAG , "onCreateViewHolder: " ) ; return viewHolder ; } 
@ java.lang.Override public void onSuccess ( int i , cz.msebera.android.httpclient.Header [] headers , byte [] reponseBody ) { userS . setAvatar ( android.graphics.BitmapFactory . decodeByteArray ( reponseBody , 0 , reponseBody.length ) ) ; if ( ( is_finish [ 0 ] ) == ( ( userSearch . size () ) / 3 ) ) { completeTextView . setAdapter ( new com.example.thanhvu.adsfacebook.model.UserSearchAdaper ( getContext () , R.id.list_view_status , userSearch ) ) ; completeTextView . showDropDown () ; } ( is_finish [ 0 ] ) ++ ; } 
public void loginGoogle ( android.view.View view ) { showActivityIndicator () ; if ( ! ( com.isawabird.Utils . isNetworkAvailable ( getApplicationContext () ) ) ) { android.widget.Toast . makeText ( getApplicationContext () , "Network not available" , Toast.LENGTH_SHORT ) . show () ; hideActivityIndicator () ; } } 
@ javax.annotation.Nullable @ java.lang.Override public io.grpc.NameResolver newNameResolver ( java.net.URI targetUri , io.grpc.Attributes params ) { final io.grpc.NameResolver resolver = delegate . newNameResolver ( targetUri , params ) ; if ( resolver == null ) { return null ; } return new io.grpc.NameResolver () { @ java.lang.Override public java.lang.String getServiceAuthority () { return authorityOverride ; } @ java.lang.Override public void start ( io.grpc.internal.Listener listener ) { resolver . start ( listener ) ; } @ java.lang.Override public void shutdown () { resolver . shutdown () ; } } ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( passcodeEntered . length () ) == 4 ) resetEntered () ; passcodeEntered += e . getActionCommand () ; setEntered ( passcodeEntered ) ; if ( ( temporal ) != null ) { temporal . repaint () ; } } 
@ java.lang.Override public com.iouseph.model.User userParse ( org.json.JSONObject json ) { com.iouseph.model.User user = null ; if ( json != null ) { user = new com.iouseph.model.User () ; user . setId ( json . getString ( "id" ) ) ; user . setPassword ( json . getString ( "password" ) ) ; user . setUsername ( json . getString ( "username" ) ) ; } return user ; } 
public ontario.accounts.Account removeAccount ( java.lang.String numAccTemp ) { if ( numAccTemp == null ) { return null ; } else { boolean temp ; ontario.accounts.Account temp2 ; for ( int i = 0 ; i < ( acc . size () ) ; i ++ ) { temp = acc . get ( i ) . getAccountNumber () . equals ( numAccTemp ) ; if ( temp ) { temp2 = acc . get ( i ) ; acc . remove ( i ) ; return temp2 ; } } } return null ; } 
public void createIngredient ( java.lang.String name ) throws java.sql.SQLException { connection = myDatabase . getDatabaseConn () ; java.sql.PreparedStatement statement = connection . prepareStatement ( "INSERT INTO ingredient (name) VALUES(?)" ) ; statement . setString ( 1 , name ) ; this . name = name ; statement . executeUpdate () ; connection . close () ; getIngredientByName ( name ) ; } 
private org.medipi.medication.Schedule getExistingSchedule ( java.time.LocalDate date , org.medipi.medication.Medication medication , java.lang.String patientUuid ) { java.util.List < org.medipi.medication.Schedule > existing_schedules = scheduleDAOimpl . findByMedicationAndPatient ( medication , patientUuid ) ; for ( org.medipi.medication.Schedule schedule : existing_schedules ) { if ( ( ( schedule . getAssignedEndDate () ) == null ) || ( schedule . getAssignedEndDate () . toLocalDate () . isAfter ( date ) ) ) { return schedule ; } } return null ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/filterExercise" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String filterExercise ( org.springframework.ui.Model model , java.lang.String title , java.lang.String label ) { if ( ( title . equals ( "0" ) ) || ( title . equals ( "1" ) ) ) { model . addAttribute ( "exercises" , em . filterExercise ( label , label , title , label , true ) ) ; } else { model . addAttribute ( "exercises" , em . filterExercise ( label , label , label , title , false ) ) ; } return "listExercises" ; } 
@ java.lang.Override public void elevate ( com.sshtools.forker.client.ForkerBuilder builder , java.lang.Process process , com.sshtools.forker.common.Command command ) { builder . command () . add ( 0 , "sudo" ) ; builder . command () . add ( 1 , "-A" ) ; builder . environment () . put ( "SUDO_ASKPASS" , tempScript . getAbsolutePath () ) ; } 
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; } 
@ java.lang.Override public boolean add ( com.ivstuart.tmud.person.carried.Money money ) { java.util.ListIterator < com.ivstuart.tmud.person.carried.SomeMoney > moneyItr = list . listIterator () ; while ( moneyItr . hasNext () ) { com.ivstuart.tmud.person.carried.Money aMoney = ( ( com.ivstuart.tmud.person.carried.Money ) ( moneyItr . next () ) ) ; if ( aMoney . isSameType ( money ) ) { aMoney . add ( money ) ; if ( aMoney . isEmpty () ) { moneyItr . remove () ; } return true ; } } list . add ( new com.ivstuart.tmud.person.carried.Money ( money ) ) ; return false ; } 
@ java.lang.Override public void render ( java.awt.Graphics g ) { g . drawImage ( com.townrpg.core.tile.Tiles . getSprites () . crop ( 1 , 1 , 1 , 1 ) , ( ( int ) ( x ) ) , ( ( int ) ( y ) ) , null ) ; } 
public static java.util.Set < java.lang.String > getArtifactNamesFromProject ( final java.util.List < com.amazonaws.codepipeline.jenkinsplugin.OutputArtifact > outputArtifacts ) { java.util.Set < java.lang.String > artifactNames = new java.util.HashSet <> () ; for ( final com.amazonaws.codepipeline.jenkinsplugin.OutputArtifact outputArtifact : outputArtifacts ) { if ( ( ( outputArtifact . getArtifactName () ) != null ) && ( ! ( outputArtifact . getArtifactName () . isEmpty () ) ) ) { artifactNames . add ( outputArtifact . getArtifactName () ) ; } } return artifactNames ; } 
public void put ( java.lang.String column , java.lang.Object value ) { if ( value == null ) { currentState . put ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , null , PUT_NULL ) ) ; } else { currentState . put ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , value , PUT ) ) ; } } 
private de.be4.classicalb.core.parser.rules.PSubstitution createConditionalFailAssignment ( de.be4.classicalb.core.parser.rules.TIdentifierLiteral ruleLiteral ) { final java.lang.String ctName = ( ruleLiteral . getText () ) + ( de.be4.classicalb.core.parser.rules.RulesTransformation.RULE_COUNTER_EXAMPLE_VARIABLE_SUFFIX ) ; de.be4.classicalb.core.parser.rules.PPredicate ifCondition = new de.be4.classicalb.core.parser.rules.ANotEqualPredicate ( createIdentifier ( ctName ) , new de.be4.classicalb.core.parser.rules.AEmptySetExpression () ) ; return new de.be4.classicalb.core.parser.rules.AIfSubstitution ( ifCondition , createRuleFailAssignment ( currentRule . getNameLiteral () ) , new java.util.ArrayList < de.be4.classicalb.core.parser.rules.PSubstitution > () , null ) ; } 
public static float variance ( final float [] array , final int offset , final int length ) { final float mean = com.tagtraum.jipes.math.Floats . arithmeticMean ( array , offset , length ) ; double sum = 0 ; for ( int i = offset ; i < ( offset + length ) ; i ++ ) { final float diff = ( array [ i ] ) - mean ; sum += ( diff * diff ) / length ; } return ( ( float ) ( sum ) ) ; } 
private java.util.Set < java.lang.String > getSystemPropertiesFromTask ( io.cloudslang.lang.compiler.modeller.model.Task task ) { java.util.Set < java.lang.String > result = new java.util.HashSet <> () ; java.util.List < io.cloudslang.lang.compiler.modeller.transformers.Transformer > relevantTransformers = new java.util.ArrayList <> () ; relevantTransformers . add ( publishTransformer ) ; relevantTransformers . add ( aggregateTransformer ) ; result . addAll ( getSystemPropertiesFromInOutParam ( task . getArguments () ) ) ; result . addAll ( getSystemPropertiesFromPostTaskActionData ( task . getPostTaskActionData () , relevantTransformers , task . getName () ) ) ; return result ; } 
public void logOut ( java.lang.String username , java.lang.String pwd ) { final com.carlocation.comm.messaging.AuthMessage authMsg = new com.carlocation.comm.messaging.AuthMessage ( username , pwd , AuthMessage.AuthMsgType.AUTH_LOGOUT_MSG ) ; mNativeService . sendMessage ( authMsg , new com.carlocation.comm.ResponseListener () { @ java.lang.Override public void onResponse ( com.carlocation.comm.messaging.Notification noti ) { authMsg . onResponseHandler ( noti ) ; } } ) ; } 
@ java.lang.Override protected java.lang.Void doInBackground ( java.lang.Integer . . . params ) { int time = ( params [ 0 ] ) + 1 ; while ( time > 0 ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) {} time -- ; } publishProgress () ; return null ; } 
public void update ( int x , int y , double r , java.util.ArrayList < zombienado_v1.server.serverUnits.ServerZombie > zombies , java.util.ArrayList < java.awt.Point > walls ) { if ( ( health ) <= 0 ) { isDead = true ; } int xOld = this . x ; int yOld = this . y ; this . x += x ; this . y += y ; this . r = r ; checkWallsCollisions ( xOld , yOld , walls ) ; checkDamageTaking ( zombies ) ; } 
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } return false ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { io.fabric.sdk.android.Fabric . with ( this , new com.crashlytics.android.Crashlytics () ) ; super . onCreate ( savedInstanceState ) ; handler = new android.os.Handler () ; runnable = new java.lang.Runnable () { public void run () { android.content.Intent intent = new android.content.Intent ( com.cmmakerclub.iot.cmmciotswitch.activity.SplashActivity . this , com.cmmakerclub.iot.cmmciotswitch.activity.MainActivity . class ) ; startActivity ( intent ) ; finish () ; } } ; } 
protected void addNearbyDevice ( android.bluetooth.BluetoothDevice device ) { if ( ! ( hasPeer ( device . getName () ) ) ) { android.util.Log . d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG , ( "added new device " + ( device . getName () ) ) ) ; nearbyDevices . add ( device ) ; registerRemoteDevice ( device ) ; } else { android.util.Log . d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG , ( ( "device " + ( device . getName () ) ) + " already present, won't add" ) ) ; } } 
@ java.lang.Override public void stateChanged ( javax.swing.event.ChangeEvent e ) { int alphaValue = sliderAlpha . getValue () ; java.lang.String hexColor = textFieldHexColor . getText () ; if ( ( hexColor . length () ) > 6 ) { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + ( hexColor . substring ( ( ( hexColor . length () ) - 6 ) ) ) ; } else { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + hexColor ; } invalidateUI ( alphaValue , hexColor , true ) ; } 
public void addNode ( controllers.Node node ) { int floor = node . getFloor () ; allNodes . get ( ( floor - 1 ) ) . put ( node . getKey () , node ) ; if ( ! ( allNodes . get ( ( floor - 1 ) ) . containsKey ( node . getKey () ) ) ) { java.lang.System.out . println ( "COLLECTIONOFNODES: addNode(): added node but then couldn't find in hashmap" ) ; } else {} } 
@ java.lang.Override protected void showInformationControl ( org.eclipse.swt.graphics.Rectangle subjectArea ) { super . showInformationControl ( subjectArea ) ; org.eclipse.jface.internal.text.InternalAccessor accessor = getInternalAccessor () ; org.eclipse.jface.text.IInformationControl iControl = accessor . getCurrentInformationControl () ; if ( ( iControl != null ) && ( ( fInformationControlCloser ) != null ) ) {} } 
private java.util.List < java.lang.Integer > getFPtypeCorrespondence ( cz.fidentis.comparison.procrustes.ProcrustesAnalysis pa ) { java.util.List < java.lang.Integer > correspondence = new java.util.ArrayList <> () ; for ( java.lang.Integer ft : config . keySet () ) { if ( ( ! ( config . get ( ft ) . isActive () ) ) || ( ! ( pa . isPointActive ( ft ) ) ) ) continue; correspondence . add ( ft ) ; } return correspondence ; } 
public static java.lang.String escape ( java.lang.String html , boolean encode ) { if ( ! encode ) { html = html . replaceAll ( "&(?!#?\\w+;)" , "&amp;" ) ; } else { html = html . replace ( "&" , "&amp;" ) ; } return html . replace ( "<" , "&lt;" ) . replace ( ">" , "&gt;" ) . replace ( "\"" , "&quot;" ) . replace ( "'" , "&#39;" ) ; } 
private void _undoRemoveInconsistentValues ( java.util.Map < solver.csp.Variable , java.util.List < java.lang.Integer > > map ) { if ( map == null ) return; for ( java.util.Map.Entry < solver.csp.Variable , java.util.List < java.lang.Integer > > neighbor : map . entrySet () ) { for ( java.lang.Integer value : neighbor . getValue () ) { neighbor . getKey () . addLegalValue ( value ) ; } } } 
public void disconnect ( boolean expected ) { lookingForInput = false ; listener . shutdown () ; clientAliveTimer . cancel () ; pixyel_backend.connection.socket.SocketServer . disconnect ( this , socket . hashCode () ) ; try { socket . shutdownInput () ; socket . shutdownOutput () ; socket . close () ; } catch ( java.lang.Exception e ) { pixyel_backend.Log . logError ( ( "Could not close the socket of the client " + ( getName () ) ) , pixyel_backend.connection.socket.SocketClient . class ) ; } } 
public void removeStatistic ( com.frdfsnlght.inquisitor.Statistic statistic ) { synchronized ( statistics ) { if ( ! ( statistics . containsKey ( statistic . getName () ) ) ) { return; } statistics . remove ( statistic . getName () ) ; } for ( com.frdfsnlght.inquisitor.Statistics s : stats . values () ) { s . removeStatistic ( statistic ) ; } } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { hu.gehorvath.lampsv.core.Preset selectedPres = jlUsedPresets . getSelectedValue () ; int currentIndex = usedListModel . indexOf ( selectedPres ) ; if ( currentIndex < ( ( usedListModel . size () ) - 1 ) ) { usedListModel . removeElement ( selectedPres ) ; usedListModel . add ( ( currentIndex + 1 ) , selectedPres ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( selection ) == 1 ) || ( ! ( description . equals ( "" ) ) ) ) { uploadImage () ; } else android.widget.Toast . makeText ( getApplicationContext () , "Please fill the form" , Toast.LENGTH_SHORT ) . show () ; } 
boolean conditionIsTrue ( utilties.models.Game game , int id ) { int data1 = getData ( this . data1 , game , id ) ; int data2 = getData ( this . data2 , game , id ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } 
public java.lang.String mapPath ( java.lang.String path ) { if ( ( mapList ) == null ) { return path ; } for ( int i = 0 ; i < ( mapList.length ) ; i ++ ) { if ( ( mapList [ i ] [ 0 ] . equals ( path ) ) || ( ( ( mapList [ i ] [ 0 ] ) + "/" ) . equals ( path ) ) ) { return mapList [ i ] [ 1 ] ; } } return path ; } 
public void writeData ( java.lang.String data ) { android.content.SharedPreferences sharedPref = getActivity () . getPreferences ( Context.MODE_PRIVATE ) ; java.lang.String contents = sharedPref . getString ( day , "" ) ; if ( ! ( contents . equals ( "" ) ) ) { contents += "\n" ; } android.content.SharedPreferences.Editor editor = sharedPref . edit () ; editor . putString ( day , ( contents + ( data . substring ( 0 , ( ( data . length () ) - 13 ) ) ) ) ) ; editor . commit () ; } 
@ java.lang.Override public java.util.List < com.pilotproject.entity.User > findUsers ( java.lang.String username , java.lang.String email , java.util.Date fromDate , java.util.Date toDate ) { if ( com.pilotproject.utils.PilotUtils . isEmpty ( fromDate ) ) { fromDate = null ; } if ( com.pilotproject.utils.PilotUtils . isEmpty ( toDate ) ) { toDate = null ; } java.lang.String userLogged = com.pilotproject.utils.PilotUtils . getUserNameLogeed () ; return this . userRepository . findUsersAndUsernameNot ( userLogged , username , email , fromDate , toDate ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , @ android.support.annotation.NonNull java.lang.String [] permissions , @ android.support.annotation.NonNull int [] grantResults ) { switch ( requestCode ) { case me.esca.fragments.CookFragment.REQUEST_EXTERNAL_STORAGE : { if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.content.Intent photoPickerIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK ) ; photoPickerIntent . setType ( "image/*" ) ; startActivityForResult ( photoPickerIntent , RESULT_LOAD_IMG ) ; } } } } 
@ java.lang.Override public void addSettingsStateListener ( @ org.jetbrains.annotations.NotNull com.intellij.platform.WebProjectGenerator.SettingsStateListener stateListener ) { final javax.swing.text.JTextComponent editorComponent = ( ( javax.swing.text.JTextComponent ) ( sdkPathComboWithBrowse . getComboBox () . getEditor () . getEditorComponent () ) ) ; editorComponent . getDocument () . addDocumentListener ( new com.intellij.ui.DocumentAdapter () { protected void textChanged ( javax.swing.event.DocumentEvent e ) { stateListener . stateChanged ( ( ( validate () ) == null ) ) ; } } ) ; if ( ( validate () ) != null ) { stateListener . stateChanged ( false ) ; } } 
@ com.google.common.eventbus.Subscribe public void attemptToMatchSubmissionWithStudent ( edu.pdx.cs410J.grader.poa.POASubmissionSelected selected ) { for ( int i = 0 ; i < ( students . size () ) ; i ++ ) { edu.pdx.cs410J.grader.Student student = students . get ( i ) ; if ( submitterMatchesStudent ( selected . getSubmission () , student ) ) { this . view . setSelectedStudentIndex ( ( i + 1 ) ) ; fireStudentSelectedEvent ( student ) ; return; } } this . view . setSelectedStudentIndex ( 0 ) ; fireStudentSelectedEvent ( null ) ; } 
@ java.lang.Override public void removeRange ( int fromPosition , int itemCount ) { for ( int i = 0 ; i < itemCount ; i ++ ) if ( fromPosition < ( contentList . size () ) ) contentList . remove ( fromPosition ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeRemoved ( fromPosition , itemCount ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeChanged ( 0 , getItemCount () ) ; } 
public void addPiece ( org.casestudy.target.chess.pieces.Piece piece ) { java.util.List < org.casestudy.target.chess.pieces.Piece > typePieces = this . pieces . get ( piece . getPieceType () ) ; if ( typePieces == null ) { typePieces = new java.util.ArrayList < org.casestudy.target.chess.pieces.Piece > () ; this . pieces . put ( piece . getPieceType () , typePieces ) ; } typePieces . add ( piece ) ; } 
public org.giiwa.core.bean.Helper.V copy ( java.util.Map < java.lang.String , java.lang.Object > jo , java.lang.String . . . names ) { if ( ( jo == null ) || ( names == null ) ) return this ; for ( java.lang.String s : names ) { if ( jo . containsKey ( s ) ) { java.lang.Object o = jo . get ( s ) ; if ( o != null ) { set ( s , o ) ; } } } return this ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } 
@ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { java.lang.System.out . println ( ( "key of order firebase ----> " + key ) ) ; java.lang.String key1 = dataSnapshot . getRef () . getKey () ; java.lang.System.out . println ( ( "key of order changed in database " + key1 ) ) ; if ( key . equals ( key1 ) ) { progressWheel . setVisibility ( View.INVISIBLE ) ; textView . setText ( "Your order is ready !!! " ) ; } } 
@ java.lang.Override void initNeo ( org.gbif.checklistbank.nub.source.NeoUsageWriter writer ) throws java.lang.Exception { try ( org.postgresql.core.BaseConnection c = clb . connect () ) { final org.postgresql.copy.CopyManager cm = new org.postgresql.copy.CopyManager ( c ) ; cm . copyOut ( ( ( ( ( "COPY (" + ( ( "SELECT usage.id, usage.parent_fk, usage.basionym_fk, usage.rank, usage.is_synonym, usage.status, usage.nom_status, node.scientific_name" + " FROM name_usage usage join name node ON name_fk=node.id" ) + " WHERE dataset_key = '" ) ) + ( source.key ) ) + "')" ) + " TO STDOUT WITH NULL ''" ) , writer ) ; org.gbif.checklistbank.nub.source.ClbUsageIteratorNeo.LOG . info ( "Loaded nub source data {} with {} usages into neo4j" , source.name , writer . getCounter () ) ; } } 
private void addChip ( java.lang.String communication ) { if ( ( mNachoTextView ) != null ) { mNachoTextView . append ( communication ) ; int start = ( mNachoTextView . getText () . length () ) - ( communication . length () ) ; int last = mNachoTextView . getText () . length () ; mNachoTextView . chipify ( start , last ) ; } else android.util.Log . e ( mx.com.quiin.contactpicker.ui.ContactPickerFragment.TAG , "mNachoTextView is null" ) ; } 
public void setUserName ( java.lang.String userName ) { if ( userName == null ) throw new java.lang.IllegalArgumentException ( "UserName must not be null." ) ; if ( ( userName . length () ) > 50 ) throw new java.lang.IllegalArgumentException ( "UserName is too long." ) ; if ( ( userName . length () ) < 3 ) throw new java.lang.IllegalArgumentException ( "UserName is too short." ) ; this . userName = userName ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getClass () ) != ( obj . getClass () ) ) return false ; org.sqlproc.sample.simple.model.BillingDetails other = ( ( org.sqlproc.sample.simple.model.BillingDetails ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) return false ; return true ; } 
@ java.lang.Override public void setSelectedIndex ( final int index ) { programmaticTextChange = true ; if ( index > ( - 1 ) ) { getUiReference () . select ( index ) ; } else { getUiReference () . deselect ( getUiReference () . getSelectionIndex () ) ; } programmaticTextChange = false ; if ( ! ( getUiReference () . isFocusControl () ) ) { fireInputChanged ( getUiReference () . getText () , index ) ; } } 
public void generateDispText ( java.lang.CharSequence c ) { if ( ( ( ( currValue ) == null ) || ( ( currValue ) == "0" ) ) && ( c != "C" ) ) { currValue = ( ( java.lang.CharSequence ) ( c ) ) ; } else if ( c == "C" ) { currValue = "0" ; } else { currValue = ( currValue . toString () ) + c ; } } 
public modelo.Jogada movimentaMonstro ( modelo.Monstro aMonstro , modelo.Posicao posicao ) { modelo.Posicao antiga = this . getPosicao ( aMonstro . getPosicao () . getLinha () , aMonstro . getPosicao () . getColuna () ) ; antiga . setOcupante ( null ) ; posicao . setOcupante ( aMonstro ) ; aMonstro . setPosicao ( posicao ) ; return new modelo.Jogada ( posicao . getLinha () , posicao . getColuna () , TipoJogada._moverMonstro , aMonstro , null , null ) ; } 
private void makePay ( int vendorID , java.lang.String vendorSecretKey , java.lang.String accountID , java.lang.String amount ) { uz.agr.agrsdk.AGRBilling agr = new uz.agr.agrsdk.AGRBilling () ; if ( amount . equals ( "" ) ) { agr . preparePayment ( this , vendorID , vendorSecretKey , accountID ) ; } else { agr . preparePayment ( this , vendorID , vendorSecretKey , accountID , java.lang.Integer . parseInt ( amount ) ) ; } } 
public void delLabel ( int label ) { for ( java.util.Map < java.util.List < org.projectfloodlight.openflow.protocol.instruction.OFInstruction > , java.lang.Integer > m : switchLabelMap . values () ) { synchronized ( m ) { for ( java.util.List < org.projectfloodlight.openflow.protocol.instruction.OFInstruction > list : m . keySet () ) { java.lang.Integer i = m . get ( list ) ; if ( ( i . intValue () ) == label ) { m . remove ( list ) ; break; } } } } net.floodlightcontroller.savi.forwarding.mpls.MPLSLabelManager.labelQueue . add ( label ) ; } 
public java.lang.String getFreemakerTemplate ( java.util.HashMap < java.lang.String , java.lang.Object > model ) { java.lang.StringBuffer buf = new java.lang.StringBuffer () ; try { buf . append ( org.springframework.ui.freemarker.FreeMarkerTemplateUtils . processTemplateIntoString ( freemarkerConfiguration . getTemplate ( "fm_template.txt" ) , model ) ) ; return buf . toString () ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( ( "Exception occured while processing fmtemplate: " + ( e . getMessage () ) ) ) ; } return "" ; } 
protected void move ( int x ) { moving = true ; moveLocation = x ; if ( ( moveLocation ) < ( this . getx () ) ) { facingRight = false ; left = true ; right = false ; } else if ( ( moveLocation ) > ( this . getx () ) ) { facingRight = true ; left = false ; right = true ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent resultIntent ) { super . onActivityResult ( requestCode , resultCode , resultIntent ) ; switch ( requestCode ) { case diy.uigeneric.sample.SampleListActivity.REQUEST_ADD : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { loadData () ; listView . getAdapter () . notifyDataSetChanged () ; } break; case diy.uigeneric.sample.SampleListActivity.REQUEST_VIEW : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { loadData () ; listView . getAdapter () . notifyDataSetChanged () ; } break; } } 
public boolean equals ( java.lang.Object o ) { if ( o instanceof FoodItem ) { FoodItem i = ( ( FoodItem ) ( o ) ) ; return ( this . itemName . equals ( i.itemName ) ) && ( this . tagCode . equals ( i.tagCode ) ) ; } else if ( o instanceof char [] ) { return this . tagCode . equals ( ( ( char [] ) ( o ) ) ) ; } return false ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent intent = new android.content.Intent ( this , com.example.leo.projet.Activities.MovieActivity . class ) ; intent . putExtra ( "movie" , ( ( java.io.Serializable ) ( aa . getItem ( position ) ) ) ) ; startActivity ( intent ) ; } 
public static int [] barcodeToIntArray ( java.lang.String barcode ) { if ( barcode == null ) { return new int [ 0 ] ; } java.lang.String [] barcodeArray = barcode . trim () . split ( "(?!^)" ) ; int [] barcodeToInt = new int [ barcodeArray.length ] ; for ( int i = 0 ; i < ( barcodeArray.length ) ; i ++ ) { barcodeToInt [ i ] = java.lang.Integer . parseInt ( barcodeArray [ i ] ) ; } return barcodeToInt ; } 
public void done ( ca.winnipegtrails.winnipegtrails.UserEggLinks object , com.parse.ParseException e ) { if ( e != null ) { if ( WinnipegTrailsApplication.APPDEBUG ) { android.util.Log . d ( WinnipegTrailsApplication.APPTAG , "An error occurred while querying for user eggs" , e ) ; } return; } android.content.Intent intent = new android.content.Intent ( this , ca.winnipegtrails.winnipegtrails.EggActivity . class ) ; intent . putExtra ( "id" , egg . getObjectId () ) ; startActivity ( intent ) ; } 
public boolean isCollidingRect ( pro.Sprite s ) { if ( isCollideable () ) { if ( ( ( ( ( getRight () ) > ( s . getLeft () ) ) && ( ( getLeft () ) < ( s . getRight () ) ) ) && ( ( getBottom () ) > ( s . getTop () ) ) ) && ( ( getTop () ) < ( s . getBottom () ) ) ) { java.lang.System.out . println ( true ) ; return true ; } } return false ; } 
public lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "sendMessage" , produces = "application/json" ) public java.lang.String sendMessage ( @ org.springframework.web.bind.annotation.RequestParam ( value = "to" ) java.lang.String to , @ org.springframework.web.bind.annotation.RequestParam ( value = "from" ) java.lang.String from , @ org.springframework.web.bind.annotation.RequestParam ( value = "message" ) java.lang.String msg ) { com.jkchat.models.ChatMessage cm = new com.jkchat.models.ChatMessage () ; cm . setFrom ( from . trim () . toLowerCase () ) ; cm . setMessage ( msg ) ; userService . putMessage ( to . toLowerCase () , cm ) ; return "success" ; } 
private void writeFile ( java.io.BufferedWriter fw , java.util.List < java.lang.String > corpus ) throws java.io.IOException { for ( java.lang.String str : corpus ) { fw . write ( ( str + "\n" ) ) ; } fw . write ( "\n" ) ; fw . flush () ; } 
@ java.lang.Override public void setThreadCount ( int numThreads ) { if ( ( this . hessian ) instanceof org.encog.util.concurrency.MultiThreadable ) { ( ( org.encog.util.concurrency.MultiThreadable ) ( this . hessian ) ) . setThreadCount ( numThreads ) ; } else if ( ( numThreads != 1 ) && ( numThreads != 0 ) ) { throw new org.encog.neural.networks.training.TrainingError ( ( ( "The Hessian object in use(" + ( this . hessian . getClass () . toString () ) ) + ") does not support multi-threaded mode." ) ) ; } } 
public static void run ( Game game , AvalonBot bot ) { for ( int i = 0 ; i < ( game.pendingMissionPlayers . size () ) ; i ++ ) { bot . sendMessage ( ( ( ( ( "Type /" + ( ( game.gameId ) - 1 ) ) + " success or /" ) + ( ( game.gameId ) - 1 ) ) + " fail" ) , game.pendingMissionPlayers . get ( i ) . id ) ; } ( game.state ) ++ ; game.pmMissionCount = 0 ; game.missionFailCount = 0 ; } 
public java.lang.String copy ( com.google.auto.value.processor.AutoValueProcessor.Property property ) { if ( ( copyOf ) == null ) { return property . toString () ; } java.lang.String copy = java.lang.String . format ( copyOf , property ) ; if ( property . isNullable () ) { copy = java.lang.String . format ( "(%s == null ? null : %s)" , property , copy ) ; } return copy ; } 
public void reorderToolbarContainer () { toolbarsContainer . removeAllViews () ; java.util.Collections . sort ( com.example.root.myalarmclock.MainActivity.mAlarmList , new java.util.Comparator < com.example.root.myalarmclock.Alarm > () { @ java.lang.Override public int compare ( com.example.root.myalarmclock.Alarm r1 , com.example.root.myalarmclock.Alarm r2 ) { return r1 . getAlarmDate () . compareTo ( r2 . getAlarmDate () ) ; } } ) ; for ( int x = 0 ; x < ( com.example.root.myalarmclock.MainActivity.mAlarmList . size () ) ; x ++ ) { toolbarsContainer . addView ( com.example.root.myalarmclock.MainActivity.mAlarmList . get ( x ) . getToolbar () ) ; } } 
void disconnected ( int number ) { clientHandlers [ number ] = null ; ( connections ) -- ; if ( ( users [ ( number + 1 ) ] ) != null ) send ( new Message ( Message.TYPE_DISCONNECT , number , ( ( users [ ( number + 1 ) ] ) + " disconnected" ) , users [ ( number + 1 ) ] ) ) ; users [ ( number + 1 ) ] = null ; waitForConnection ( number ) ; } 
public static void addTable ( br.com.mvbos.mymer.el.TableElement te , java.lang.StringBuilder sb ) { br.com.mvbos.mymer.sync.Differ.entityToScript . setMode ( IEntityToScript.Mode.PLAIN ) ; br.com.mvbos.mymer.sync.Differ.entityToScript . addTable ( te , sb ) ; int ct = 1 ; for ( br.com.mvbos.mymer.xml.field.Field f : te . getFields () ) { br.com.mvbos.mymer.sync.Differ.entityToScript . addField ( te , f , ( ct ++ ) , sb ) ; } } 
public net.anyflow.lannister.message.OutboundMessageStatus setOutboundMessageStatus ( int messageId , net.anyflow.lannister.message.OutboundMessageStatus.Status targetStatus ) { net.anyflow.lannister.message.OutboundMessageStatus status = outboundMessageStatuses . get ( messageId ) ; if ( status == null ) { return null ; } status . targetStatus ( targetStatus ) ; return outboundMessageStatuses . put ( status . messageId () , status ) ; } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot snapshot ) { com.firebase.client.GenericTypeIndicator < java.util.HashMap < java.lang.String , com.firebase.androidchat.bean.Channel > > t = new com.firebase.client.GenericTypeIndicator < java.util.HashMap < java.lang.String , com.firebase.androidchat.bean.Channel > > () {} ; java.util.HashMap < java.lang.String , com.firebase.androidchat.bean.Channel > map = snapshot . getValue ( t ) ; if ( map == null ) return; for ( com.firebase.androidchat.bean.Channel c : map . values () ) { channelList . add ( c . getName () ) ; } } 
@ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) public void addInformation ( net.minecraft.item.ItemStack par1ItemStack , net.minecraft.entity.player.EntityPlayer par2EntityPlayer , java.util.List par3List , boolean par4 ) { if ( ( par1ItemStack . getItemDamage () ) == 0 ) { if ( ( par1ItemStack.stackTagCompound ) == null ) { par1ItemStack.stackTagCompound = new net.minecraft.nbt.NBTTagCompound () ; par1ItemStack.stackTagCompound . setInteger ( "Uses" , 5 ) ; } par3List . add ( ( "Uses remaining: " + ( par1ItemStack.stackTagCompound . getInteger ( "Uses" ) ) ) ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/customer" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String postNewCustomer ( @ javax.websocket.server.PathParam ( value = "fullname" ) java.lang.String fullname , @ javax.websocket.server.PathParam ( value = "address" ) java.lang.String address , @ javax.websocket.server.PathParam ( value = "age" ) int age , org.springframework.ui.ModelMap modelMap ) { java.lang.System.out . println ( fullname ) ; java.lang.System.out . println ( address ) ; java.lang.System.out . println ( age ) ; customerModel . addNewCustomer ( fullname , address , age ) ; java.util.List < bankapp.entity.Customer > customersList = customerService . findAll () ; modelMap . addAttribute ( "customersList" , customersList ) ; return "customers" ; } 
public void CreateOnClick ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putString ( "ID" , java.lang.String . valueOf ( ID ) ) ; android.content.Intent create = new android.content.Intent ( this , com.example.csanders.getfit.Views.Create . class ) ; create . putExtras ( bundle ) ; startActivity ( create ) ; } 
private org.jruby.runtime.DynamicScope getBlockScope ( org.jruby.runtime.ThreadContext context , org.jruby.runtime.Block block , org.jruby.ir.interpreter.InterpreterContext interpreterContext ) { org.jruby.runtime.DynamicScope newScope = block . getBinding () . getDynamicScope () ; if ( interpreterContext . pushNewDynScope () ) { newScope = block . allocScope ( newScope ) ; context . pushScope ( newScope ) ; } else if ( interpreterContext . reuseParentDynScope () ) { context . pushScope ( newScope ) ; } return newScope ; } 
public void uiautomator_switcher ( java.lang.String action , edu.wm.translationengine.classes.StepTestCase s ) throws java.lang.Exception { if ( action . equals ( "CLICK" ) ) { tap ( s ) ; } if ( action . equals ( "LONG_CLICK" ) ) { longTap ( s ) ; } if ( action . equals ( "TYPE" ) ) { type ( s ) ; } } 
public com.hgames.rhogue.generation.map.DungeonGenerator setGrassObjectives ( int percent , int nbPools ) { if ( 100 < percent ) throw new java.lang.IllegalStateException ( ( "Percentage of grass must be negative or in [0, 100]. Received: " + percent ) ) ; if ( 0 <= percent ) this . grassPercentage = percent ; if ( 0 <= nbPools ) this . grassPatches = nbPools ; return this ; } 
private long getNextBuildNumber ( @ javax.annotation.Nonnull java.lang.Object entry ) { if ( entry instanceof hudson.model.Queue.Item ) { hudson.model.Queue.Task task = ( ( hudson.model.Queue.Item ) ( entry ) ) . task ; if ( task instanceof hudson.model.Job ) { return ( ( hudson.model.Job ) ( task ) ) . getNextBuildNumber () ; } } else if ( entry instanceof hudson.model.Run ) { return ( ( hudson.model.Run ) ( entry ) ) . getParent () . getNextBuildNumber () ; } return ( jenkins.widgets.HistoryPageEntry . getEntryId ( entry ) ) + 1 ; } 
public org.apache.commons.math3.linear.RealMatrix getCovariance ( java.util.List < ? extends macrobase.datamodel.HasMetrics > data ) { org.apache.commons.math3.linear.RealMatrix ret = new org.apache.commons.math3.linear.Array2DRowRealMatrix ( data . size () , p ) ; int idx = 0 ; for ( macrobase.datamodel.HasMetrics d : data ) { ret . setRow ( idx , d . getMetrics () . toArray () ) ; idx += 1 ; } return new org.apache.commons.math3.stat.correlation.Covariance ( ret , false ) . getCovarianceMatrix () ; } 
@ com.trainingSystem.controller.RequestMapping ( value = RestURIConstains.EXPORT_EXCEL , method = RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView getExcel ( @ com.trainingSystem.controller.RequestParam java.lang.String idExcel ) throws java.lang.Exception { java.util.List < com.trainingSystem.controller.ExcelModel > excelModels = ( ( java.util.List < com.trainingSystem.controller.ExcelModel > ) ( test . get ( idExcel ) ) ) ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "excelSender" , "excelModels" , excelModels ) ; return mav ; } 
public void voteThreshold ( int downVotedTrack ) { if ( downVotedTrack < ( mQueueElementList . size () ) ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } } 
private javax.swing.JButton createDeleteAlbumButton () { javax.swing.JButton deleteAlbumButton = new javax.swing.JButton ( "Remove Album" ) ; deleteAlbumButton . setToolTipText ( "Delete Selected Album" ) ; deleteAlbumButton . addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent e ) { controller . deleteAlbum () ; } } ) ; return deleteAlbumButton ; } 
protected static java.lang.String singleSearch ( java.lang.String keyword , java.lang.String text , boolean i ) { java.lang.String returnString = "" ; for ( java.lang.String s : poormansgrep.BonusProject.Search . search ( keyword , text , i ) ) { if ( s != null ) returnString += s ; } return returnString ; } 
private static float findMax ( java.util.ArrayList < java.lang.Float > list , int targetIndex ) { float max = - 1.0F ; for ( int a = 0 ; a <= targetIndex ; a ++ ) { if ( ( list . get ( a ) ) > max ) { max = list . get ( a ) ; } } return max ; } 
public static boolean cancel ( int index ) { if ( ( index == ( - 1 ) ) || ( ( co.theengine.loomdemo.LoomHTTP.clients [ index ] ) == null ) ) { return false ; } co.theengine.loomdemo.LoomHTTP.clients [ index ] . cancelRequests ( co.theengine.loomdemo.LoomHTTP._context , true ) ; return true ; } 
private void setMessage ( final org.apache.logging.log4j.message.Message msg ) { if ( msg instanceof org.apache.logging.log4j.message.ReusableMessage ) { org.apache.logging.log4j.message.ReusableMessage reusable = ( ( org.apache.logging.log4j.message.ReusableMessage ) ( msg ) ) ; reusable . formatTo ( getMessageTextForWriting () ) ; if ( ( parameters ) != null ) { parameters = reusable . swapParameters ( parameters ) ; parameterCount = reusable . getParameterCount () ; } } else { if ( ( ! ( org.apache.logging.log4j.core.util.Constants.FORMAT_MESSAGES_IN_BACKGROUND ) ) && ( msg != null ) ) { msg . getFormattedMessage () ; } this . message = msg ; } } 
private com.parse.ParseFile downloadImageFromUrl ( java.lang.String str , int i ) { try { java.net.URL url = new java.net.URL ( str ) ; java.io.File facebookImage = UrlToFile ( url ) ; return changeBitmapToByteAndSaveInParseFIle ( i , facebookImage . getPath () ) ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } return null ; } 
public void reduce ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.DoubleWritable > values , cloudCompu.PageRankMr.Context context ) throws java.io.IOException , java.lang.InterruptedException { double tmppr = 0.0 ; for ( org.apache.hadoop.io.DoubleWritable val : values ) { tmppr += val . get () ; } title . set ( "Sum" ) ; pr . set ( java.lang.String . valueOf ( tmppr ) ) ; context . write ( title , pr ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; injectDependencies ( savedInstanceState ) ; mBinding = android.databinding.DataBindingUtil . setContentView ( this , R.layout.activity_my_stocks ) ; mBinding . setViewModel ( mViewModel ) ; checkPlayServicesAvailable () ; setupRecyclerView () ; checkAddIntent ( getIntent () ) ; getSupportLoaderManager () . initLoader ( com.sam_chordas.android.stockhawk.presentation.mystocks.MyStocksActivity.CURSOR_LOADER_ID , null , this ) ; } 
public void update ( long timeElapsed , long nanosPerSecond , double xForces , double yForces ) { double secondsElapsed = timeElapsed / nanosPerSecond ; x += ( velX ) * secondsElapsed ; y += ( velY ) * secondsElapsed ; velX += ( acelX ) * secondsElapsed ; velY += ( acelY ) * secondsElapsed ; acelX = xForces / ( mass ) ; acelY = yForces / ( mass ) ; } 
public void putCharArray ( final char [] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfChar ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
public java.util.ArrayList < lexer.Token > tokenize ( java.lang.String input ) { java.util.ArrayList < lexer.Token > resultingTokens = new java.util.ArrayList < lexer.Token > () ; lexer.Token newToken ; if ( input == null ) { java.lang.System.out . println ( "Input not set!" ) ; return null ; } java.util.Collections . sort ( token ) ; while ( ( input . length () ) > 0 ) { newToken = testTokens ( input ) ; input = input . substring ( newToken . getCompleteLength () ) ; resultingTokens . add ( newToken ) ; } return resultingTokens ; } 
@ java.lang.Override public nez.parser.vm.MozInst exec ( nez.parser.vm.ParserMachineContext sc ) throws nez.parser.TerminationException { if ( ( sc . prefetch () ) == ( this . byteChar ) ) { if ( ( this . byteChar ) == 0 ) { return this . next ; } sc . move ( 1 ) ; } return this . next ; } 
public final void start ( final android.view.View v ) { ( ( com.github.mrm1st3r.cards.Cards ) ( getApplication () ) ) . setConnections ( playerList ) ; playerList . remove ( null ) ; for ( com.github.mrm1st3r.connection.bluetooth.SimpleBluetoothConnection conn : playerList . keySet () ) { conn . write ( "start" ) ; conn . pause () ; } serv . close () ; android.content.Intent intent = new android.content.Intent ( this , com.github.mrm1st3r.cards.ingame.Gamemaster . class ) ; startActivity ( intent ) ; } 
@ java.lang.Override public java.util.List < com.lftechnology.vyaguta.resource.entity.Contract > list ( java.lang.String [] dates ) { java.time.LocalDate pointOne = java.time.LocalDate . parse ( dates [ 0 ] , Constant.DATE_FORMAT_DB ) ; java.time.LocalDate pointTwo = java.time.LocalDate . parse ( dates [ 1 ] , Constant.DATE_FORMAT_DB ) ; return em . createQuery ( "SELECT c from Contract c WHERE c.endDate BETWEEN :pointOne AND :pointTwo order by c.endDate desc" , com.lftechnology.vyaguta.resource.entity.Contract . class ) . setParameter ( "pointOne" , pointOne ) . setParameter ( "pointTwo" , pointTwo ) . getResultList () ; } 
private void findJourneyPics ( com.xiangyou.product.Product.Day day , int index , java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.String > > journeyPicsMap ) { java.util.Map < java.lang.String , java.lang.String > pictures = journeyPicsMap . get ( ( ( com.xiangyou.product.ProductRepository.PREFIX_DAY ) + index ) ) ; if ( pictures != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : pictures . entrySet () ) { day . addPicture ( entry . getKey () , entry . getValue () ) ; } } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private static < T > java.lang.Class < T > [] getParameterTypes ( java.lang.Object . . . propertyValues ) { java.lang.Class < T > [] parameterTypes = ( ( java.lang.Class < T > [] ) ( java.lang.reflect.Array . newInstance ( java.lang.Class . class , propertyValues.length ) ) ) ; for ( int i = 0 ; i < ( propertyValues.length ) ; i ++ ) { parameterTypes [ i ] = ( ( java.lang.Class < T > ) ( propertyValues [ i ] . getClass () ) ) ; } return parameterTypes ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { progressDialog . show () ; java.lang.String imageUrl = fbUser . getPhotoUrl () . toString () ; updateImageInDatabase ( imageUrl ) ; com.bumptech.glide.Glide . with ( this ) . load ( imageUrl ) . bitmapTransform ( new com.example.mjokic.quizapp.utils.GlideCircleTransformation ( this ) ) . into ( ( ( android.widget.ImageView ) ( findViewById ( R.id.navDrawerAvatar ) ) ) ) ; progressDialog . hide () ; } 
boolean setMapSize ( int x , int y ) { if ( ( x < 2 ) || ( x > 8 ) ) { return false ; } else { if ( ( x > 4 ) && ( y < 8 ) ) { return false ; } else if ( ( y > 50 ) || ( y < 5 ) ) { return false ; } } size = y ; return true ; } 
public void replace ( int position , java.lang.Object content ) { if ( ( position <= 0 ) || ( ( nodes ) <= 0 ) ) return; if ( position > ( nodes ) ) return; Node replace = start ; for ( int i = 0 ; i < ( position - 1 ) ; i ++ ) { replace = replace . getNextNode () ; } replace . setContent ( content ) ; } 
public static geogebra.common.awt.Shape getGawtShape ( geogebra.common.awt.Shape shape ) { geogebra.common.awt.Shape shapeCommon = ( shape instanceof geogebra.common.euclidian.GeneralPathClipped ) ? ( ( geogebra.common.euclidian.GeneralPathClipped ) ( shape ) ) . getGeneralPath () : shape ; if ( ! ( shapeCommon instanceof geogebra.common.awt.geogebra.web.awt.Shape ) ) { return null ; } return ( ( geogebra.common.awt.geogebra.web.awt.Shape ) ( shapeCommon ) ) . getGawtShape () ; } 
private gov.anl.ipns.ViewTools.Components.ViewControls.CompositeContourControl generateContourControls ( float minValue , float maxValue , int numLevels , float [] levels , boolean showManualControls ) { contourControl = new gov.anl.ipns.ViewTools.Components.ViewControls.CompositeContourControl ( getContourPanel () , minValue , maxValue , numLevels , levels , showManualControls ) ; contourControl . addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( event . getActionCommand () . equals ( CompositeContourControl.CONTOURS_CHANGED ) ) displayChanged () ; } } ) ; return contourControl ; } 
@ java.lang.Override public org.talend.core.model.process.IProcess getProcessFromItem ( org.talend.core.model.properties.Item item , boolean loadScreenshots ) { if ( ( org.talend.core.model.properties.impl.ProcessItemImpl . class ) == ( item . getClass () ) ) { java.lang.Process process = null ; process = new java.lang.Process ( item . getProperty () ) ; process . loadXmlFile ( loadScreenshots ) ; return process ; } return null ; } 
public static org.jocean.http.Feature [] union ( final org.jocean.http.Feature [] features1 , final org.jocean.http.Feature . . . features2 ) { final java.util.List < org.jocean.http.Feature > unioned = new java.util.ArrayList <> ( ( null != features1 ? java.util.Arrays . asList ( features1 ) : java.util.Collections . < org.jocean.http.Feature > emptyList () ) ) ; if ( null != features2 ) { for ( org.jocean.http.Feature toadd : features2 ) { if ( ! ( unioned . contains ( toadd ) ) ) { unioned . add ( toadd ) ; } } } return unioned . toArray ( org.jocean.http.Feature.EMPTY_FEATURES ) ; } 
private java.lang.String getWordEndingAtPosition ( int startingPosition , int atPosition ) { java.lang.String startingText = text . substring ( startingPosition , atPosition ) ; int lastIndex = startingText . lastIndexOf ( " " ) ; if ( lastIndex == ( - 1 ) ) { return startingText ; } else { return startingText . substring ( lastIndex , ( ( startingText . length () ) - 1 ) ) . trim () ; } } 
public java.util.List < lt.ru.lexio.db.Word > build ( int wordCount , int page , java.util.Date toDate , lt.ru.lexio.ui.training.TrainingWordOrder wordOrder , lt.ru.lexio.ui.training.TrainingType trainingType ) { java.util.List < lt.ru.lexio.db.Word > words = new java.util.ArrayList <> ( wordCount ) ; build ( wordCount , page , toDate , trainingType , wordOrder , words ) ; return words ; } 
lab9.ULLMap < K , V > . Entry get ( K k ) { if ( ( k != null ) && ( k . equals ( key ) ) ) { return this ; } if ( ( next ) == null ) { return null ; } return next . get ( k ) ; } 
public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } 
public boolean setActiveInstIdx ( int instIdx ) { programming.Program prog = getActiveProg () ; if ( ( ( prog != null ) && ( instIdx >= 0 ) ) && ( instIdx <= ( prog . getInstructions () . size () ) ) ) { activeInstIdx = instIdx ; return true ; } else { activeInstIdx = - 1 ; return false ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { ar.com.tzulberti.archerytraining.model.tournament.TournamentSerie tournamentSerie = self.tournamentDAO . createNewSerie ( self.tournament ) ; if ( tournamentSerie == null ) { java.lang.System.err . println ( "TODO XXX PENDING: el usuario no deberia ver el boton en este caso" ) ; return; } ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment practiceTestingFragment = ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment . createInstance ( tournamentSerie ) ; android.support.v4.app.FragmentManager fragmentManager = activity . getSupportFragmentManager () ; fragmentManager . beginTransaction () . replace ( R.id.container , practiceTestingFragment ) . commit () ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { android.content.SharedPreferences prefs = mContext . getSharedPreferences ( "apprater" , Context.MODE_PRIVATE ) ; java.lang.Long date_firstLaunch = java.lang.System . currentTimeMillis () ; if ( editor != null ) { editor . putLong ( "launch_count" , 0 ) ; editor . putLong ( "date_firstlaunch" , date_firstLaunch ) ; editor . commit () ; } dialog . dismiss () ; } 
@ java.lang.Override public void processResults ( org.json.JSONObject result ) { int minutes = getTime ( result ) ; if ( minutes <= ( oter . getTime () ) ) { com.joebruzek.oter.utilities.SmsSender . sendText ( oter ) ; oterLayer . removeOter ( oter ) ; } else { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; } this . stopSelf () ; } 
private void setupListeners () { queryButton . addActionListener ( new java.awt.event.ActionListener () { public void actionPerformed ( java.awt.event.ActionEvent click ) { javax.swing.JFrame popFrame = new javax.swing.JFrame () ; popFrame . setSize ( 250 , 250 ) ; popFrame . setContentPane ( new data.view.DynamicDataPanel ( baseController , "books" ) ) ; popFrame . setVisible ( true ) ; } } ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { customView . setErase ( false ) ; brushDialog = new android.app.Dialog ( context ) ; brushDialog . setContentView ( R.layout.brush_size_picker ) ; brushDialog . getWindow () . setBackgroundDrawable ( new android.graphics.drawable.ColorDrawable ( android.graphics.Color.TRANSPARENT ) ) ; brushDialog . setCanceledOnTouchOutside ( true ) ; brushDialog . show () ; } 
public final hu.akarnokd.rxjava2.basetypes.Solo < T > doAfterTerminate ( hu.akarnokd.rxjava2.basetypes.Action onAfterTerminate ) { hu.akarnokd.rxjava2.basetypes.ObjectHelper . requireNonNull ( onAfterTerminate , "onAfterTerminate is null" ) ; return hu.akarnokd.rxjava2.basetypes.Solo . onAssembly ( new hu.akarnokd.rxjava2.basetypes.SoloDoOnLifecycle < T > ( this , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_ACTION , onAfterTerminate , hu.akarnokd.rxjava2.basetypes.Functions . emptyConsumer () , Functions.EMPTY_LONG_CONSUMER , Functions.EMPTY_ACTION ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/results/test/{testRunId}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.http.ResponseEntity < java.util.List < pl.cloudy.models.ActionResult > > getTestFromAGivenDay ( @ org.springframework.web.bind.annotation.PathVariable ( value = "testRunId" ) int testRunId ) { java.util.List < pl.cloudy.models.ActionResult > testRunResults = actionObjectService . findTestRunResults ( testRunId ) ; if ( testRunResults . isEmpty () ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.NO_CONTENT ) ; } return new org.springframework.http.ResponseEntity ( testRunResults , org.springframework.http.HttpStatus.OK ) ; } 
private boolean eventTargetsStandardPopup ( com.google.gwt.dom.client.NativeEvent event ) { com.google.gwt.dom.client.EventTarget target = event . getEventTarget () ; if ( com.google.gwt.dom.client.Element . is ( target ) ) { return ( standardsDropListValues . getElement () . isOrHasChild ( com.google.gwt.dom.client.Element . as ( target ) ) ) || ( standardsDropListValues . getElement () . isOrHasChild ( com.google.gwt.dom.client.Element . as ( target ) ) ) ; } return false ; } 
public void showNotificationPopUp ( java.lang.String from , java.lang.String msg ) { android.content.Intent dialogIntent = new android.content.Intent ( ctx , com.android.anurag.notesapp.AlertDialog . class ) ; dialogIntent . putExtra ( "sender_name" , from ) ; dialogIntent . putExtra ( "msg" , msg ) ; dialogIntent . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( dialogIntent ) ; } 
private boolean isDuplicateInCurrCategory ( java.util.HashSet < com.transformuk.bdt.domain.CrawledContent > currContentSet , com.transformuk.bdt.domain.CrawledContent newContent ) { boolean isDuplicate = false ; java.util.Iterator < com.transformuk.bdt.domain.CrawledContent > iterator = currContentSet . iterator () ; while ( iterator . hasNext () ) { com.transformuk.bdt.domain.CrawledContent existingContent = iterator . next () ; if ( ( ( newContent . getTitle () ) != null ) && ( existingContent . getTitle () . equals ( newContent . getTitle () ) ) ) { isDuplicate = true ; break; } } return isDuplicate ; } 
public static com.sl.algorithms.traversal.Node reverseList ( com.sl.algorithms.traversal.Node head ) { com.sl.algorithms.traversal.Node prev ; com.sl.algorithms.traversal.Node curr ; com.sl.algorithms.traversal.Node next ; prev = null ; curr = head ; while ( curr != null ) { next = curr.next ; curr.next = prev ; prev = curr ; curr = next ; } head = prev ; return head ; } 
private static void deleteValues ( java.lang.String tableName , java.lang.Integer ID ) { for ( java.lang.String s : JSQL.table . get ( tableName ) . get ( ID ) . keySet () ) { JSQL.table . get ( tableName ) . get ( ID ) . put ( s , null ) ; } } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view , java.lang.String url ) { android.util.Log . d ( com.gsma.mobileconnect.helpers.AuthorizationService.TAG , ( "shouldOverrideUrlLoading url=" + url ) ) ; boolean status = false ; if ( ( url != null ) && ( url . startsWith ( redirectUri ) ) ) { handleCompletion ( view , url ) ; } else { view . loadUrl ( url ) ; } return status ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case android.R.id.home : finish () ; return true ; case R.id.action_done : saveList () ; finish () ; return true ; default: return super . onOptionsItemSelected ( item ) ; } } 
public com.example.alex.androidclient.models.DailyStatistics getDailyStatisticsForSite ( int siteId , java.util.Date startDate , java.util.Date finishDate ) throws org.json.JSONException { java.util.List < com.example.alex.androidclient.models.DailyStatistics > dailyStats = new java.util.ArrayList <> () ; com.example.alex.androidclient.models.DailyStatistics dailyStatsForSite = null ; if ( jHelper . getDailyStats () . isEmpty () ) { com.example.alex.androidclient.helpers.JSONHelper jHelperDailyStats = new com.example.alex.androidclient.helpers.JSONHelper ( startDate , finishDate ) ; dailyStats = jHelperDailyStats . getDailyStats ( startDate , finishDate ) ; } return dailyStatsForSite ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.wewow.utils.ShareUtils su = new com.wewow.utils.ShareUtils ( this ) ; su . setContent ( subject . getTitle () ) ; su . setUrl ( subject . getShare_link () ) ; if ( ( shareBitmap ) != null ) {} su . share () ; } 
public double variance ( double [] dataset ) { double degreeOfFreedom = dataset.length ; double var = 0 ; double mean = mean ( dataset ) ; for ( int i = 0 ; i < ( dataset.length ) ; i ++ ) { var += java.lang.Math . pow ( ( ( dataset [ i ] ) - mean ) , 2 ) ; } var /= degreeOfFreedom ; return var ; } 
static int randNum ( int min , int max ) { java.util.Random rand = new java.util.Random () ; if ( min > max ) { min = 0 ; max = 0 ; } int top = ( max - min ) + 1 ; if ( top <= 0 ) { top = 1 ; } int randomInt = ( rand . nextInt ( top ) ) + min ; return randomInt ; } 
@ java.lang.Override public void onInitializationFailure ( com.google.android.youtube.player.YouTubePlayer.Provider provider , com.google.android.youtube.player.YouTubeInitializationResult youTubeInitializationResult ) { if ( youTubeInitializationResult . isUserRecoverableError () ) { youTubeInitializationResult . getErrorDialog ( getActivity () , app.vedicnerd.ytwua.fragment.YoutubePlayerFragment.RECOVERY_DIALOG_REQUEST ) . show () ; } else { if ( isAdded () ) { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , getString ( R.string.error_init_failure_msg ) , Toast.LENGTH_SHORT ) . show () ; } } } 
private boolean needToCheck ( android.content.Context context ) { java.lang.String date = owo.npc.taipeitechrefined.utility.Utility . getDateString ( "yyyy-MM-dd" , java.util.Calendar . getInstance () . getTime () , context ) ; android.content.SharedPreferences settings = context . getSharedPreferences ( MainApplication.SETTING_NAME , Context.MODE_PRIVATE ) ; java.lang.String date_flag = settings . getString ( owo.npc.taipeitechrefined.ActivityCheckReceiver.CHECK_FLAG , null ) ; settings . edit () . putString ( owo.npc.taipeitechrefined.ActivityCheckReceiver.CHECK_FLAG , date ) . apply () ; return ! ( date . equals ( date_flag ) ) ; } 
@ java.lang.Override public boolean contains ( final java.lang.Object o ) { if ( ! ( o instanceof java.util.Map.Entry ) ) return false ; final java.util.Map.Entry < ? , ? > e = ( ( java.util.Map.Entry < ? , ? > ) ( o ) ) ; TypeV v = get ( e . getKey () ) ; return ( v != null ) && ( v . equals ( e . getValue () ) ) ; } 
public boolean collidesWith ( cz.cvut.fel.syrovkar.rpgEngine.archetypes.CollisionBox other ) { return ( ( ( ( this . x ) <= ( ( other.x ) + ( other.sizeX ) ) ) && ( ( ( this . x ) + ( this . sizeX ) ) >= ( other.x ) ) ) && ( ( this . y ) <= ( ( other.y ) + ( other.sizeY ) ) ) ) && ( ( ( this . y ) + ( this . sizeY ) ) >= ( other.y ) ) ; } 
public com.radoslav.microclimate.service.entities.User getUserByEmailAndPassword ( java.lang.String email , java.lang.String password ) throws com.radoslav.microclimate.service.exceptions.MicroclimateException { try { com.radoslav.microclimate.service.helpers.ValidationUtil . validateEmail ( email ) ; com.radoslav.microclimate.service.helpers.ValidationUtil . validatePassword ( password ) ; return com.radoslav.microclimate.service.entities.User . findUserByEmailAndPassword ( entityManager , email , password ) ; } catch ( javax.persistence.NoResultException exception ) { throw new com.radoslav.microclimate.service.exceptions.UnauthorizedException ( "User does not exists." ) ; } catch ( javax.persistence.NonUniqueResultException exception ) { throw new com.radoslav.microclimate.service.exceptions.InternalServerErrorException ( "Illegal database content." ) ; } } 
@ org.springframework.transaction.annotation.Transactional @ java.lang.Override public void saveAbout ( java.lang.String projectId , java.lang.String title , java.lang.String description ) { edu.asu.spring.quadriga.dto.AboutTextDTO aboutTextDTO = aboutTextDAO . getDTOByProjectId ( projectId ) ; if ( aboutTextDTO == null ) aboutTextDTO = new edu.asu.spring.quadriga.dto.AboutTextDTO () ; aboutTextDTO . setProjectId ( projectId ) ; aboutTextDTO . setTitle ( title ) ; aboutTextDTO . setDescription ( description ) ; aboutTextDAO . saveNewDTO ( aboutTextDTO ) ; } 
private ch.bfh.bti7535.w2016.data.Document test ( ch.bfh.bti7535.w2016.data.Document document ) { double classifiedPositive = 0.0 ; double classifiedNegative = 0.0 ; for ( ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline ) { classifiedPositive += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_POSITIVE ) ; classifiedNegative += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_NEGATIVE ) ; } document . setTestResult ( ( classifiedPositive > classifiedNegative ? ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_POSITIVE : ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_NEGATIVE ) ) ; return document ; } 
public boolean startAnimation ( int radius ) { if ( ( mThumbCurrentRadius ) == radius ) return false ; mRadius = radius ; if ( ( getHandler () ) != null ) { resetAnimation () ; mRunning = true ; getHandler () . postAtTime ( this , ( ( android.os.SystemClock . uptimeMillis () ) + ( com.rey.material.util.ViewUtil.FRAME_DURATION ) ) ) ; invalidate () ; return true ; } else { mThumbCurrentRadius = mRadius ; invalidate () ; return false ; } } 
@ javax.annotation.Nonnull private byte [] loadFromServerFirst ( java.lang.String id ) { try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException . getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { throw serverException ; } byte [] cached = loadFromCache ( id ) ; if ( cached != null ) { return cached ; } throw new java.lang.IllegalStateException ( org.sonar.batch.bootstrap.WSLoader.FAIL_MSG , serverException ) ; } } 
public void valueChanged ( javax.swing.event.ListSelectionEvent event ) { if ( event . getValueIsAdjusting () ) { return; } int [] selectedRows = table . getSelectedRows () ; if ( ( selectedRows.length ) == 0 ) return; java.lang.String id = ( ( java.lang.String ) ( table . getValueAt ( selectedRows [ 0 ] , 0 ) ) ) ; java.lang.Double xPosition = eventDataIDPositionMap . get ( id . trim () ) ; mainFrame . getGraph () . showEventVerticalPosition ( xPosition ) ; } 
@ java.lang.Override public void service ( final javax.servlet.ServletRequest req , final javax.servlet.ServletResponse res ) throws java.io.IOException , javax.servlet.ServletException { if ( ! ( ( req instanceof javax.servlet.http.HttpServletRequest ) && ( res instanceof javax.servlet.http.HttpServletResponse ) ) ) { throw new javax.servlet.ServletException ( "non-HTTP request or response" ) ; } javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; javax.servlet.http.HttpServletResponse response = ( ( javax.servlet.http.HttpServletResponse ) ( res ) ) ; doGet ( request , response ) ; } 
@ java.lang.Override public void onRemoteVideoTrackReceive ( com.quickblox.videochat.webrtc.QBRTCSession session , com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack , java.lang.Integer userID ) { remoteVideoView = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.remoteVideoView ) ) ) ; android.util.Log . d ( "Track" , ( "remoteVideoView is " + ( remoteVideoView ) ) ) ; if ( ( remoteVideoView ) != null ) { org.webrtc.VideoRenderer remouteRenderer = new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( remoteVideoView , QBGLVideoView.Endpoint.REMOTE ) ) ; videoTrack . addRenderer ( remouteRenderer ) ; remoteVideoView . setVideoTrack ( videoTrack , QBGLVideoView.Endpoint.REMOTE ) ; android.util.Log . d ( "Track" , "onRemoteVideoTrackReceive() is raned" ) ; } } 
@ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long memberId , org.springframework.ui.Model model ) { if ( bookId != null ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId != null ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } 
public void onPostExecute ( java.lang.String result ) { if ( ( result != null ) && ( ! ( result . equals ( "" ) ) ) ) { java.lang.String campusChar = com.ihwapp.android.model.Curriculum . getCampusChar ( campus ) ; android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx . getSharedPreferences ( ( ( year ) + campusChar ) , Context.MODE_PRIVATE ) ; prefs . edit () . putString ( "scheduleJSON" , result ) . commit () ; parseScheduleJSON () ; } } 
public java.util.List < core.moves.Move > getLastNMoves ( int n ) { java.util.List < core.moves.Move > moves = new java.util.ArrayList ( this . moveHistory ) ; java.util.Collections . reverse ( moves ) ; if ( ( n > 0 ) && ( n < ( this . moveHistory . size () ) ) ) moves = moves . subList ( 0 , n ) ; return moves ; } 
private boolean isInTriggerZone ( int x , int y ) { return ( ( ( x > ( main.SessionController.HITBOX_X . getFirst () ) ) && ( x < ( main.SessionController.HITBOX_X . getSecond () ) ) ) && ( y > ( main.SessionController.HITBOX_Y . getFirst () ) ) ) && ( y < ( main.SessionController.HITBOX_Y . getSecond () ) ) ; } 
public Model.Grupa dohvatiGrupuPoIDu ( int idGrupa ) { org.hibernate.Query query ; otvoriSession () ; query = hibernateSession . createQuery ( ( ( "from Grupa as K where K.IDGrupa = '" + idGrupa ) + "'" ) ) ; Model.Grupa odabranaGrupa ; if ( ( query . list () . size () ) > 0 ) { odabranaGrupa = ( ( Model.Grupa ) ( query . list () . get ( 0 ) ) ) ; } else { odabranaGrupa = null ; } zatvoriSession () ; return odabranaGrupa ; } 
@ java.lang.Override public void resetPassword ( org.envirocar.server.core.entities.User user , java.lang.String verificationCode ) throws org.envirocar.server.core.exception.BadRequestException { org.envirocar.server.mongo.entity.MongoPasswordReset status = this . passwordResetDao . getPasswordResetStatus ( user , verificationCode ) ; if ( ( status != null ) && ( ! ( status . isExpired () ) ) ) { if ( status . getCode () . equals ( verificationCode ) ) { save ( user ) ; } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Wrong verification code." ) ; } } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Verification code already expired." ) ; } this . passwordResetDao . remove ( status ) ; } 
@ java.lang.Override public int compare ( com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData < ? > arg0 , com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData < ? > arg1 ) { if ( ( arg0.end ) > ( arg1.end ) ) return - 1 ; if ( ( arg1.end ) > ( arg0.end ) ) return 1 ; return 0 ; } 
@ java.lang.Override public net.minecraft.item.ItemStack removeStackFromSlot ( int i ) { if ( i >= ( inventoryContents.length ) ) return net.minecraft.item.ItemStack.EMPTY ; if ( ! ( inventoryContents [ i ] . isEmpty () ) ) { net.minecraft.item.ItemStack itemstack = inventoryContents [ i ] ; inventoryContents [ i ] = net.minecraft.item.ItemStack.EMPTY ; return itemstack ; } return net.minecraft.item.ItemStack.EMPTY ; } 
private void fillCart ( int elementPosition , int commandCount , java.lang.String type ) { fr.upmc.ihm.restmenu.ImageItem item = getData ( commandCount , type ) . get ( elementPosition ) ; data . add ( item ) ; gridAdapterMyCommand = new fr.upmc.ihm.restmenu.GridViewMyCommandAdapter ( this , R.layout.grid_mycommand_element , data ) ; if ( inCart ( elementPosition , commandCount , type ) ) { gridAdapterMyCommand . dataGetter () . remove ( POS ) ; } gridViewMyCommand . setAdapter ( gridAdapterMyCommand ) ; } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { android.util.Log . i ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG , ( ( ( ( ( "Upgrading database " + ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB ) ) + " from version " ) + oldVersion ) + " to " ) + newVersion ) ) ; if ( newVersion >= ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB_SCHEMA_VERSION_2 ) ) { db . execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_REQUIRE_CREATE ) ; db . execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_RESOURCE_CREATE ) ; } else { android.util.Log . e ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG , ( ( ( ( "Unexpected database upgrade from version" + oldVersion ) + " to " ) + newVersion ) + ". No known upgrade path" ) ) ; } } 
private boolean canGenerateRangeQuery ( boolean isUniqueIndex , java.util.List < net.royqh.easypersist.generator.SingleProperty > indexProperties ) { if ( isUniqueIndex ) { for ( net.royqh.easypersist.generator.SingleProperty singleProperty : indexProperties ) { if ( net.royqh.easypersist.utils.TypeUtils . isRangeTypeProperty ( singleProperty ) ) { return true ; } } return false ; } return true ; } 
public void caseframesChanged ( clojure.lang.APersistentSet addedcfs , java.lang.Boolean clear ) { if ( clear ) { edu.buffalo.cse.sneps3.gui.business.Caseframe . clearCaseframes () ; } java.util.ArrayList < edu.buffalo.cse.sneps3.gui.business.Caseframe > c = edu.buffalo.cse.sneps3.gui.business.Caseframe . createCaseframes ( addedcfs ) ; for ( edu.buffalo.cse.sneps3.gui.business.IView i : views ) { i . cfUpdate ( c , clear ) ; } } 
void execute ( final java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; } 
public static models.Account authenticate ( java.lang.String email , java.lang.String password ) { models.Account account = models.Account.find . where () . eq ( "email" , email ) . findUnique () ; if ( account == null ) { return null ; } if ( org.mindrot.jbcrypt.BCrypt . checkpw ( password , account.password ) ) { return account ; } return null ; } 
public void addAvailableLevel ( int i , int numStars , app.Game g ) { view.AvailableLevelView av = new view.AvailableLevelView ( i ) ; if ( numStars != ( - 1 ) ) { av . unlockLevel ( numStars ) ; addListenerToButton ( i , g ) ; } levels . add ( av ) ; scrollablePanel . add ( av ) ; } 
private void initBlocks ( android.content.Context context ) { for ( int x = 0 ; x <= ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ; x ++ ) { for ( int y = 0 ; y < ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ; y ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; block . setXPosition ( x ) ; block . setYPosition ( y ) ; blocks . add ( block ) ; } } } 
private static java.io.File writeHex ( de.neemann.assembler.asm.Program p , java.io.File name ) throws de.neemann.assembler.expression.ExpressionException , java.io.IOException { if ( name != null ) { java.io.File f = de.neemann.assembler.gui.Main . makeFilename ( name , ".asm" , ".hex" ) ; try ( java.io.PrintStream ps = new java.io.PrintStream ( f , "utf-8" ) ) { p . traverse ( new de.neemann.assembler.asm.formatter.HexFormatter ( ps ) ) ; } return f ; } return null ; } 
@ java.lang.Override public boolean onNavigationItemSelected ( @ android.support.annotation.NonNull android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.navigation_home : return true ; case R.id.navigation_dashboard : intent = new android.content.Intent ( this , com.example.sky.environment.TinTuc . class ) ; startActivity ( intent ) ; return true ; case R.id.menu : intent = new android.content.Intent ( this , com.example.sky.environment.Future . class ) ; startActivity ( intent ) ; return true ; } return false ; } 
public static java.lang.String getStringFromExcelCell ( org.apache.poi.ss.usermodel.Cell cell ) { java.lang.String ret = "" ; try { if ( ( org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC ) == ( cell . getCellType () ) ) { ret = "" + ( ( long ) ( cell . getNumericCellValue () ) ) ; } else { ret = cell . toString () ; } } catch ( java.lang.Exception e ) {} return ret ; } 
@ java.lang.Override public void onCommandDataMessageReceived ( com.tenkiv.tekdaqc.ATekdaqc tekdaqc , com.tenkiv.tekdaqc.communication.message.ABoardMessage message ) { if ( ( mMessengerList . size () ) > 0 ) { com.tenkiv.tekdaqc.android.application.service.Bundle dataBundle = new com.tenkiv.tekdaqc.android.application.service.Bundle () ; dataBundle . putString ( TekCast.DATA_MESSSAGE_TEKDAQC , tekdaqc . getSerialNumber () ) ; dataBundle . putSerializable ( TekCast.DATA_MESSSAGE , message ) ; com.tenkiv.tekdaqc.android.application.service.Message dataMessage = com.tenkiv.tekdaqc.android.application.service.Message . obtain () ; dataMessage.what = com.tenkiv.tekdaqc.android.application.util.TekCast.TEKDAQC_COMMAND_MESSAGE ; dataMessage . setData ( dataBundle ) ; sendMessageToRegisteredListeners ( dataMessage , tekdaqc . getSerialNumber () ) ; } } 
public int read ( java.io.InputStream in , int offset , int byteCount ) throws java.io.IOException { if ( ( offset + byteCount ) > ( _bytes.length ) ) { byte [] newBytes = new byte [ byteCount + offset ] ; java.lang.System . arraycopy ( _bytes , 0 , newBytes , 0 , _bytes.length ) ; _bytes = newBytes ; } _size = in . read ( _bytes , offset , byteCount ) ; return _size ; } 
private void addOptionWithArg ( org.apache.commons.cli.Options options , java.lang.String longOptionName , java.util.Optional < java.lang.String > shortOptionName , boolean required , java.lang.String description ) { if ( isChangable ( longOptionName ) ) { options . addOption ( org.apache.commons.cli.Option . builder ( shortOptionName . orElse ( null ) ) . longOpt ( longOptionName ) . hasArg () . required ( required ) . desc ( description ) . build () ) ; } } 
public java.lang.Object createSingleValue ( final java.lang.Object . . . param ) { try { return com.orientechnologies.orient.core.metadata.schema.OType . convert ( param [ 0 ] , keyType . getDefaultJavaType () ) ; } catch ( java.lang.Exception e ) { throw new com.orientechnologies.orient.core.index.OIndexException ( ( ( ( "Invalid key for index: " + ( param [ 0 ] ) ) + " cannot be converted to " ) + ( keyType ) ) , e ) ; } } 
public static java.lang.String protectAction ( java.lang.String originAction ) { if ( originAction == null ) { return null ; } if ( originAction . startsWith ( "_VA_" ) ) { return originAction ; } java.lang.String newAction = com.lody.virtual.client.env.SpecialComponentList.PROTECTED_ACTION_MAP . get ( originAction ) ; if ( newAction == null ) { newAction = ( com.lody.virtual.client.env.SpecialComponentList.PROTECT_ACTION_PREFIX ) + originAction ; } return newAction ; } 
public void dump ( java.io.DataOutputStream out ) throws java.io.IOException { super . dump ( out ) ; out . writeInt ( low ) ; out . writeInt ( ( ( high ) - ( low ) ) ) ; for ( int i = 0 ; i < ( switchAddresses.length ) ; i ++ ) { out . writeShort ( switchAddresses [ i ] ) ; out . writeShort ( switchBranchTargetIndexes [ i ] ) ; } } 
public void reduce ( org.apache.hadoop.io.Text inputKey , java.util.Iterator < org.apache.hadoop.io.Text > inputVals , org.apache.hadoop.mapred.OutputCollector < org.apache.hadoop.io.Text , slmt.courses.cp.hw3.step1.PageInfo > outputCollector , org.apache.hadoop.mapred.Reporter reporter ) throws java.io.IOException { slmt.courses.cp.hw3.step1.PageInfo info = new slmt.courses.cp.hw3.step1.PageInfo () ; info . setRank ( ( 1 / ( ( double ) ( nodeCount ) ) ) ) ; while ( inputVals . hasNext () ) info . addOutLink ( inputVals . next () . toString () ) ; outputCollector . collect ( inputKey , info ) ; } 
private void takeScreenshotFor ( java.lang.String logLine ) { com.android.ddmlib.RawImage rawImage ; try { rawImage = device . getScreenshot () ; } catch ( java.lang.Exception e ) { return; } if ( rawImage == null ) { return; } java.util.Map < java.lang.String , java.lang.String > keyValueMap = com.github.rtyley.android.screenshot.paparazzo.OnDemandScreenshotService . keyValueMapFor ( logLine ) ; java.awt.image.BufferedImage image = com.github.rtyley.android.screenshot.paparazzo.OnDemandScreenshotService . bufferedImageFrom ( rawImage ) ; for ( com.github.rtyley.android.screenshot.paparazzo.processors.ScreenshotProcessor screenshotProcessor : processors ) { screenshotProcessor . process ( image , keyValueMap ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit.html" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView edit ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "id" ) java.lang.Integer id ) { try { org.springframework.web.servlet.ModelAndView modelAndView = new org.springframework.web.servlet.ModelAndView ( "admin/drink/drink" ) ; modelAndView . addObject ( "drink" , drinkService . findById ( id ) ) ; modelAndView . addObject ( "action" , "Editer" ) ; return modelAndView ; } catch ( java.lang.Exception e ) { return list () ; } } 
@ java.lang.Override public java.lang.Object apply ( io.warp10.script.WarpScriptStack stack ) throws io.warp10.script.WarpScriptException { java.lang.String replacement = stack . pop () . toString () ; java.lang.String regexp = stack . pop () . toString () ; java.lang.String in = stack . pop () . toString () ; if ( this . all ) { stack . push ( in . replaceAll ( regexp , replacement ) ) ; } else { stack . push ( in . replaceFirst ( regexp , replacement ) ) ; } return stack ; } 
@ java.lang.Override public void removeCard ( org.magic.api.beans.MagicCard mc , org.magic.api.beans.MagicCollection collection ) throws java.sql.SQLException { org.magic.api.dao.impl.HsqlDAO.logger . info ( ( ( ( "remove " + mc ) + " from " ) + collection ) ) ; java.sql.PreparedStatement pst = con . prepareStatement ( "delete from cards where name=? and edition=? and collection=?" ) ; pst . setString ( 1 , mc . getName () ) ; pst . setString ( 2 , mc . getEditions () . get ( 0 ) . getId () ) ; pst . setString ( 3 , collection . getName () ) ; pst . executeUpdate () ; } 
public heronarts.p3lx.ui.component.UIDoubleBox setParameter ( final heronarts.lx.parameter.BoundedParameter parameter ) { if ( ( this . parameter ) != null ) { this . parameter . removeListener ( this . parameterListener ) ; } this . parameter = parameter ; if ( parameter != null ) { this . minValue = parameter.range.min ; this . maxValue = parameter.range.max ; this . parameter . addListener ( this . parameterListener ) ; setValue ( parameter ) ; } return this ; } 
@ org.springframework.web.bind.annotation.RequestMapping public org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > check ( @ org.springframework.web.bind.annotation.RequestParam ( value = "uname" ) java.lang.String uname ) throws java.lang.Exception { com.wmanual.jpa.domain.User user = userRepository . findByUsername ( uname ) ; if ( user != null ) { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( user , org.springframework.http.HttpStatus.OK ) ; } else { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } } 
public java.util.List < org.todss.model.IntakeMoment > test ( org.todss.algorithm.AlgorithmContext context ) { final long start = java.lang.System . currentTimeMillis () ; final java.util.List < org.todss.model.IntakeMoment > list = org.todss.algorithm.SmartAlgorithm . run ( context ) ; java.lang.System.out . println ( ( ( "Took " + ( ( java.lang.System . currentTimeMillis () ) - start ) ) + " ms." ) ) ; assert ( list != null ) && ( ( list . size () ) > 0 ) ; return list ; } 
@ java.lang.Override public void add ( de.hauke_stieler.rednimer.Common.Material.Reminder reminder ) { java.lang.String date = _dateFormatter . format ( reminder . getDueDate () . getTime () ) ; boolean keyAlreadyExists = _reminderMap . containsKey ( date ) ; if ( ! keyAlreadyExists ) { _reminderMap . put ( date , new java.util.ArrayList <> () ) ; } _reminderMap . get ( date ) . add ( reminder ) ; de.hauke_stieler.rednimer.DayOverview.Service.ReminderAdded . fireEvent ( new de.hauke_stieler.rednimer.Common.Material.Reminder [] { reminder } ) ; } 
private void abortHandler ( javax.servlet.http.HttpServletRequest request , java.lang.String origin , org.apache.wicket.request.component.IRequestablePage page ) { onAborted ( request , origin , page ) ; org.apache.wicket.protocol.http.CsrfPreventionRequestCycleListener.log . info ( "Possible CSRF attack, request URL: {}, Origin: {}, action: aborted with error {} {}" , new java.lang.Object [] { request . getRequestURL () , origin , errorCode , errorMessage } ) ; throw new org.apache.wicket.request.http.flow.AbortWithHttpErrorCodeException ( errorCode , errorMessage ) ; } 
@ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { java.util.List < android.bluetooth.BluetoothDevice > devices = getAvailaleBluetoohDevices () ; java.util.List < java.lang.String > deviceNames = new java.util.ArrayList < java.lang.String > () ; for ( android.bluetooth.BluetoothDevice device : devices ) { deviceNames . add ( device . getName () ) ; } return null ; } 
@ android.support.annotation.Nullable @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootview = inflater . inflate ( R.layout.fragment_contact_select , container , false ) ; butterknife.ButterKnife . bind ( this , rootview ) ; childContactAdapter = new com.hackahealth.kodakesalem.mvp.ui.adapter.ChildContactAdapter ( getActivity () , new java.util.ArrayList < com.hackahealth.kodakesalem.mvp.objects.ChildContact > () , new com.hackahealth.kodakesalem.mvp.ui.ContactSelectFragment.CallbackClass () { @ java.lang.Override public void onItemClick ( int position ) { presenter . onItemSelected ( position ) ; } } ) ; return rootview ; } 
private java.lang.Object getCamera ( com.eclipsesource.tabris.maps.MapHolderView mapHolderView ) { com.google.android.gms.maps.model.LatLng target = getGoogleMapSafely ( mapHolderView ) . getCameraPosition () . target ; java.util.Map < java.lang.String , java.lang.Object > camera = new java.util.HashMap <> () ; camera . put ( com.eclipsesource.tabris.maps.MapPropertyHandler.PROP_POSITION , java.util.Arrays . asList ( target.latitude , target.longitude ) ) ; return camera ; } 
@ java.lang.Override public boolean isFinished ( final org.springframework.http.client.ClientHttpResponse response ) throws java.io.IOException { final com.gooddata.dataset.TaskState taskState = extractData ( response , com.gooddata.dataset.TaskState . class ) ; if ( taskState . isSuccess () ) { return true ; } else if ( ! ( taskState . isFinished () ) ) { return false ; } throw new com.gooddata.GoodDataException ( ( ( errorMessage + ": " ) + ( taskState . getMessage () ) ) ) ; } 
private java.lang.String getAllByIdJsonString ( java.lang.String _id ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( "{\"selector\": {" ) ; sb . append ( "\"_id\": {\"$gt\": 0}," ) ; sb . append ( ( ( "\"$and\": [{\"topicId\":\"" + _id ) + "\"}]" ) ) ; sb . append ( "}}" ) ; return sb . toString () ; } 
public org.dama.datasynth.test.matching.EdgeTypePool < XType , YType > . Entry pickRandomEdgeX ( XType xvalue ) { java.util.ListIterator < org.dama.datasynth.test.matching.EdgeTypePool < XType , YType > . Entry > iterator = entries . listIterator () ; while ( iterator . hasNext () ) { org.dama.datasynth.test.matching.EdgeTypePool < XType , YType > . Entry entry = iterator . next () ; if ( ( entry.xvalue . compareTo ( xvalue ) ) == 0 ) { iterator . remove () ; return entry ; } } return null ; } 
protected int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } 
private void requestMoreAfterEmission ( int emitted ) { if ( emitted > 0 ) { rx.internal.operators.OperatorPublish.OriginSubscriber < T > origin = state . getOrigin () ; if ( origin != null ) { long r = origin.originOutstanding . addAndGet ( ( - emitted ) ) ; if ( r <= ( origin.THRESHOLD ) ) { origin . requestMore ( ( ( rx.internal.util.RxRingBuffer.SIZE ) - ( origin.THRESHOLD ) ) ) ; } } } } 
public boolean removeVehicle ( org.matsim.api.core.v01.network.Link link , org.matsim.contrib.carsharing.vehicles.CSVehicle vehicle , java.lang.String type ) { org.matsim.core.utils.collections.QuadTree < org.matsim.contrib.carsharing.vehicles.CSVehicle > vehicleLocations = currentRentals . get ( type ) ; if ( vehicleLocations != null ) { org.matsim.api.core.v01.Coord coord = link . getCoord () ; return vehicleLocations . remove ( coord . getX () , coord . getY () , vehicle ) ; } return false ; } 
@ java.lang.Override protected void onRestoreInstanceState ( android.os.Parcelable state ) { if ( state instanceof com.gh4a.widget.EditorBottomSheet.SavedState ) { final com.gh4a.widget.EditorBottomSheet.SavedState ss = ( ( com.gh4a.widget.EditorBottomSheet.SavedState ) ( state ) ) ; super . onRestoreInstanceState ( ss . getSuperState () ) ; setAdvancedMode ( ss.isInAdvancedMode ) ; mBasicEditor . setText ( ss.commentText ) ; if ( ( mAdvancedEditor ) != null ) { mAdvancedEditor . setText ( ss.commentText ) ; } } else { super . onRestoreInstanceState ( state ) ; } } 
public void update ( final com.jfixby.cmns.api.geometry.CanvasPosition position ) { this . position . set ( position ) ; this . white_bridge . setCenter ( this . position ) ; this . whiteL . setCenter ( this . position ) ; this . whiteR . setCenter ( this . position ) ; this . redAnus . setPosition ( this . position ) ; this . redCircle . setCenter ( this . position ) ; this . whiteSquare . setCenter ( this . position ) ; com.jfixby.cmns.api.collections.Collections . scanCollection ( this . touchAreas , this . touchAreasAligner ) ; } 
public void remove ( com.dd.dataTypes.bodyAreas.Item item ) throws com.dd.dataTypes.bodyAreas.InventoryException { if ( items . containsValue ( item ) ) { this . items . remove ( item . getName () ) ; } else { throw new com.dd.dataTypes.bodyAreas.InventoryException ( ( ( item . titleToString () ) + " is not in your inventory. " ) ) ; } } 
public void addToppingToList ( android.view.View view ) { android.widget.Spinner topping = ( ( android.widget.Spinner ) ( findViewById ( R.id.sprAllToppings ) ) ) ; java.lang.String selectedTopping = java.lang.String . valueOf ( topping . getSelectedItem () ) ; list . add ( selectedTopping ) ; android.widget.Spinner sprPizzaToppings = ( ( android.widget.Spinner ) ( findViewById ( R.id.sprSelectedPizzaToppins ) ) ) ; android.widget.ArrayAdapter < java.lang.String > arrayAdapter = new android.widget.ArrayAdapter ( this , android.R.layout.simple_list_item_1 , list ) ; arrayAdapter . setDropDownViewResource ( android.R.layout.simple_spinner_dropdown_item ) ; sprPizzaToppings . setAdapter ( arrayAdapter ) ; } 
@ java.lang.Override public void call ( java.lang.String s ) { if ( ! ( android.text.TextUtils . isEmpty ( s ) ) ) { if ( platform == ( me.shaohui.shareutil.share.SharePlatform.QZONE ) ) { shareToQZoneForMedia ( title , targetUrl , summary , s , activity , listener ) ; } else { shareToQQForMedia ( title , summary , targetUrl , s , activity , listener ) ; } } else { startFailed ( activity , listener , new java.lang.Exception ( "image fetch error" ) ) ; } } 
@ org.bukkit.event.EventHandler public void onStartDungeon ( yourselvs.dungeons.events.PlayerStartDungeonEvent event ) { yourselvs.dungeons.sessions.Session session = new yourselvs.dungeons.sessions.Session ( event . getPlayer () . getUniqueId () , event . getDungeon () , event . getTime () , event . getPlayer () . getLocation () ) ; plugin . getSessionManager () . addSession ( session ) ; } 
public void addToView ( java.lang.String resource , org.reactome.web.diagram.data.interactors.model.DiagramInteractor interactor ) { uk.ac.ebi.pwp.structures.quadtree.client.QuadTree < org.reactome.web.diagram.data.interactors.model.DiagramInteractor > tree = interactorsTreeCache . get ( resource ) ; if ( tree == null ) { tree = new uk.ac.ebi.pwp.structures.quadtree.client.QuadTree ( minX , minY , maxX , maxY , org.reactome.web.diagram.data.InteractorsContent.NUMBER_OF_ELEMENTS , org.reactome.web.diagram.data.InteractorsContent.MIN_AREA ) ; interactorsTreeCache . put ( resource , tree ) ; } tree . add ( interactor ) ; } 
private boolean noCourseTwicePerDay ( classscheduling.Course c , classscheduling.Day day , classscheduling.GradeDay gd ) { if ( ( gd . count ( c.code ) ) > 1 ) { errors . add ( ( ( ( ( ( ( gd.grade . name () ) + ": too many " ) + ( c.name ) ) + " classes" ) + " on " ) + ( day.name ) ) ) ; return false ; } return true ; } 
private void onAuthSuccess ( cz.kovar.petr.homevoice.zwave.ZWayProfile aProfile , retrofit2.Retrofit aAdaptor ) { android.util.Log . v ( cz.kovar.petr.homevoice.zwave.services.AuthService.LOG_TAG , "Auth success!" ) ; if ( mCancelEvent ) { return; } dataContext . clear () ; apiClient . init ( aProfile , aAdaptor , m_cloudCookie ) ; final java.util.List < cz.kovar.petr.homevoice.zwave.dataModel.Location > locations = loadLocation () ; dataContext . addLocations ( locations ) ; bus . post ( new cz.kovar.petr.homevoice.bus.events.AuthEvent.Success ( aProfile , aAdaptor ) ) ; } 
public static nben.mesh.registration.AnglePotential newWellAnglePotential ( double scale , int [] [] T , double [] [] X ) { return new nben.mesh.registration.AnglePotential ( new nben.mesh.registration.InfiniteWellFunction ( ( scale / ( 3 * ( T [ 0 ] . length ) ) ) , 0.0 , java.lang.Math.PI ) , nben.mesh.registration.Util . facesToAngles ( T ) , X ) ; } 
private void run ( java.lang.String fileName ) { printWelcomeMsg () ; java.lang.System.out . println ( tempRH . initialize ( fileName ) ) ; Tempo.Tempo.sc = new java.util.Scanner ( java.lang.System.in ) ; Tempo.Tempo.run = true ; while ( Tempo.Tempo.run ) { java.util.ArrayList < java.lang.String > output = listenForInput () ; for ( java.lang.String line : output ) { java.lang.System.out . println ( line ) ; } } } 
private void bindPreferenceSummaryToValue ( android.preference.Preference preference ) { preference . setOnPreferenceChangeListener ( this ) ; java.lang.String key = preference . getKey () ; onPreferenceChange ( preference , android.preference.PreferenceManager . getDefaultSharedPreferences ( preference . getContext () ) . getString ( key , getString ( R.string.pref_snooze_default ) ) ) ; } 
@ java.lang.Override public net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > onItemRightClick ( net.minecraft.world.World worldIn , net.minecraft.entity.player.EntityPlayer player , net.minecraft.util.EnumHand hand ) { net.minecraft.item.ItemStack heldItem = player . getHeldItem ( hand ) ; if ( heldItem != ( net.minecraft.item.ItemStack.EMPTY ) ) { if ( com.legacy.aether.common.player.PlayerAether . get ( player ) . accessories . setInventoryAccessory ( heldItem . copy () ) ) { heldItem . shrink ( 1 ) ; return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.SUCCESS , heldItem ) ; } } return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.FAIL , heldItem ) ; } 
public void addLast ( Item item ) { if ( item == null ) throw new java.lang.NullPointerException ( "input data is null" ) ; Deque < Item > . Node add = new Node ( item ) ; if ( isEmpty () ) { left = add ; right = add ; } else { add.prev = right ; right.next = add ; right = add ; } ( N ) ++ ; } 
private boolean matches ( java.lang.String oreDict ) { java.util.ArrayList < net.minecraft.item.ItemStack > listStacks = net.minecraftforge.oredict.OreDictionary . getOres ( oreDict ) ; for ( net.minecraft.item.ItemStack stack : listStacks ) { if ( ( net.minecraftforge.oredict.OreDictionary . itemMatches ( stack , input , false ) ) && ( ingredient . isItemEqual ( this . ingredient ) ) ) { return true ; } } return false ; } 
@ java.lang.SafeVarargs public static < T > java.util.List < T > async ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > . . . asyncs ) { java.util.List < T > results = new java.util.ArrayList <> () ; for ( com.threewks.thundr.gae.objectify.repository.AsyncResult < ? extends T > async : asyncs ) { results . add ( async . complete () ) ; } return results ; } 
public void process ( org.openstreetmap.osmosis.core.container.v0_6.WayContainer wayContainer ) { org.openstreetmap.osmosis.core.domain.v0_6.Way way ; long wayId ; flushNodes ( true ) ; way = wayContainer . getEntity () ; wayId = way . getId () ; if ( wayId >= ( maxWayId ) ) { maxWayId = wayId + 1 ; } if ( wayId < ( minWayId ) ) { minWayId = wayId ; } wayBuffer . add ( way ) ; flushWays ( false ) ; } 
public boolean spawn ( int x1 , int y1 ) { x = x1 ; y = y1 ; updateXSquares () ; updateYSquares () ; if ( canEnterAll ( x , y , true ) ) { enterAll ( x , y ) ; return true ; } return false ; } 
@ java.lang.SuppressWarnings ( value = "unused" ) private void storeDB ( java.sql.PreparedStatement ps , java.lang.String sample_id , int chr , int pos_index , byte [] pos_array , byte [] base_array ) throws java.sql.SQLException { ps . setQueryTimeout ( genome.ManageDB.SQLITE_TIMEOUT_SEC ) ; ps . setInt ( 1 , pos_index ) ; ps . setString ( 2 , sample_id ) ; ps . setBytes ( 3 , pos_array ) ; ps . setBytes ( 4 , base_array ) ; ps . executeUpdate () ; } 
private double productionDeut ( int lvl ) { double tempmod = 1.44 - ( 0.004 * ( Versorgung [ 11 ] ) ) ; return java.lang.Math . round ( ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( java.lang.Math . pow ( 1.1 , lvl ) ) ) * tempmod ) ) ; } 
public boolean subtractFromRegistry ( int registryIndex , byte value ) { boolean borrow = false ; int result = ( ( chip8 . getRegisters () [ registryIndex ] ) & 255 ) - ( value & 255 ) ; if ( result < 0 ) { borrow = true ; result = ( 255 - ( result * ( - 1 ) ) ) + 1 ; } chip8 . getRegisters () [ registryIndex ] = ( ( byte ) ( result ) ) ; return borrow ; } 
void processPaths ( final java.util.List < java.lang.String > pdfPaths ) { for ( java.lang.String pdfPath : pdfPaths ) { java.io.File file = new java.io.File ( pdfPath ) ; if ( file . isDirectory () ) { baseDirectory = file . getAbsolutePath () ; processDir ( file ) ; } else { processFile ( file ) ; } } } 
public boolean loginAsUser ( java.lang.String username , java.lang.String password ) { capstat.model.User user = this . userLedger . getUserByNickname ( username ) ; if ( user == null ) return false ; java.lang.String hashedPassword = capstat.model.Security . hashPassword ( password ) ; if ( hashedPassword . equals ( user . getHashedPassword () ) ) { this . capStat . setLoggedInUser ( user ) ; return true ; } return false ; } 
@ com.smartsync.controller.RequestMapping ( method = RequestMethod.DELETE , value = "/{id}" , produces = "application/json" ) public org.springframework.http.ResponseEntity deleteUser ( @ com.smartsync.controller.PathVariable ( value = "id" ) java.lang.Long id ) { com.smartsync.model.User user = this . userService . deleteUser ( id ) ; if ( user == null ) { java.lang.String message = "Could not delete user with id: " + id ; java.lang.String url = "/users/" + id ; logger . error ( ( ( "Could not find user with id: " + id ) + " to delete" ) ) ; throw new com.smartsync.controller.UserNotFoundException ( message , url ) ; } logger . info ( ( "Successfully deleted user: " + user ) ) ; return org.springframework.http.ResponseEntity . ok ( user ) ; } 
public static org.springframework.web.servlet.ModelAndView getJsonPResponse ( boolean success , java.lang.Object message , java.lang.String callback , java.lang.String qId , long requestId ) { net.media.adserver.common.ApiResponse response = new net.media.adserver.common.ApiResponse ( true , message ) ; com.google.gson.JsonObject jsonObject = net.media.adserver.controller.util.JsonPResponse.GSON . toJsonTree ( response ) . getAsJsonObject () ; jsonObject . addProperty ( "qId" , qId ) ; jsonObject . addProperty ( "requestId" , requestId ) ; org.springframework.web.servlet.ModelAndView mv = new org.springframework.web.servlet.ModelAndView ( "ad_serving" ) ; mv . addObject ( "callback" , callback ) ; mv . addObject ( "json" , net.media.adserver.controller.util.JsonPResponse.GSON . toJson ( jsonObject ) ) ; return mv ; } 
private boolean hasPassed ( int currTime2 , int time , int [] date ) { return ( ( ( ( currTime2 > time ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_DD ] ) == ( currDD ) ) ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_MM ] ) == ( currMM ) ) ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_YY ] ) == ( currYY ) ) ) && ( time != ( - 1 ) ) ; } 
public void selectMovie ( android.view.View view ) { if ( movieList . isEmpty () ) return; if ( ( movieAdapter.mSelectedItem ) < 0 ) { return; } com.whatever.holidayspecial.Movie currentMovie = movieList . get ( movieAdapter.mSelectedItem ) ; android.content.Intent intent = new android.content.Intent ( this , com.whatever.holidayspecial.Screens.MainScreen . class ) ; intent . putExtra ( "SELECTED_MOVIE" , currentMovie ) ; setResult ( com.whatever.holidayspecial.Screens.RESULT_OK , intent ) ; finish () ; } 
@ org.springframework.web.bind.annotation.PostMapping public final org.springframework.http.ResponseEntity insert ( @ org.springframework.validation.annotation.Validated @ org.springframework.web.bind.annotation.RequestBody final DtoT dto ) throws com.teammental.meconfig.exception.entity.EntityInsertException { java.io.Serializable id = doInsert ( dto ) ; java.lang.String location = ( ( getMappingUrlOfController () ) + "/" ) + ( id . toString () ) ; return org.springframework.http.ResponseEntity . status ( HttpStatus.CREATED ) . header ( "Location" , location ) . build () ; } 
@ java.lang.Override public void onResponse ( okhttp3.Call call , okhttp3.Response response ) throws java.io.IOException { if ( ! ( response . isSuccessful () ) ) throw new java.io.IOException ( ( "Unexpected code " + response ) ) ; loadedHtml = response . body () . string () ; parseHtmlTest ( loadedHtml ) ; } 
public static double getMaxPrice ( germes.utils.StockHistory history , germes.utils.StockBarPriceType priceType ) { switch ( priceType ) { case CLOSE : return germes.utils.TradeUtils . maxClosePrice ( history ) ; case LOW : return germes.utils.TradeUtils . maxMinPrice ( history ) ; case HIGH : return germes.utils.TradeUtils . maxMaxPrice ( history ) ; case OPEN : return germes.utils.TradeUtils . maxOpenPrice ( history ) ; default: throw new java.lang.UnsupportedOperationException ( "Unknown priceType type" ) ; } } 
@ javax.annotation.Nullable public java.lang.String getQueue ( co.cask.cdap.proto.Id.Namespace namespaceId ) { co.cask.cdap.proto.NamespaceMeta meta = store . getNamespace ( namespaceId ) ; if ( meta != null ) { co.cask.cdap.proto.NamespaceConfig config = meta . getConfig () ; return ( config . getSchedulerQueueName () ) != null ? config . getSchedulerQueueName () : getDefaultQueue () ; } else { return getDefaultQueue () ; } } 
@ java.lang.Override public void onPageSelected ( int position ) { final android.animation.Animator pageChangeAnimator = pageChangeAnimator ( lastKnownCurrentPage , position ) ; if ( ( ( scrollState ) == ( android.support.v4.view.ViewPager.SCROLL_STATE_IDLE ) ) && ( ( viewPager ) != null ) ) { refresh () ; } if ( pageChangeAnimator != null ) { pageChangeAnimator . start () ; } lastKnownCurrentPage = position ; } 
@ net.minecraftforge.fml.relauncher.SideOnly ( value = net.minecraftforge.fml.relauncher.Side.CLIENT ) private static int getTint ( final int alpha , final int tintIndex , final net.minecraft.block.state.IBlockState state , final net.minecraft.world.World worldObj , final net.minecraft.util.math.BlockPos blockPos ) { return alpha | ( net.minecraft.client.Minecraft . getMinecraft () . getBlockColors () . colorMultiplier ( state , worldObj , blockPos , tintIndex ) ) ; } 
private com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 getPaymentDateOfHouse ( com.my.hps.webapp.model.HpsHouse house ) { java.lang.String baseCode = house . getBaseCode () ; java.util.List < com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 > paymentDates = getPaymentDates () ; for ( com.my.hps.webapp.model.HpsHeatingMaintainPaymentDate2015 paymentDate : paymentDates ) { if ( paymentDate . getBase () . getCode () . equals ( baseCode ) ) { return paymentDate ; } } return null ; } 
public java.util.List < fr.iutvalence.info.dut.m2107.tiles.Tile > generateSurroundingTiles ( java.util.List < fr.iutvalence.info.dut.m2107.tiles.Tile > globalTiles , fr.iutvalence.info.dut.m2107.entities.Collider col ) { java.util.List < fr.iutvalence.info.dut.m2107.tiles.Tile > tiles = new java.util.ArrayList < fr.iutvalence.info.dut.m2107.tiles.Tile > () ; for ( fr.iutvalence.info.dut.m2107.tiles.Tile tile : globalTiles ) if ( ! ( isColliding ( col , tile ) ) ) tiles . add ( tile ) ; return tiles ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/accounts/login" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public gov.nist.hit.core.domain.ResponseMessage doNothing ( javax.servlet.http.HttpSession session ) { org.springframework.security.core.userdetails.User u = userService . getCurrentUser () ; if ( u != null ) { gov.nist.auth.hit.core.domain.Account a = accountService . findByTheAccountsUsername ( u . getUsername () ) ; if ( a != null ) { gov.nist.hit.core.api.SessionContext . setCurrentUserId ( session , a . getId () ) ; recordLastLoggedInDate ( a . getId () ) ; } } return new gov.nist.hit.core.domain.ResponseMessage ( ResponseMessage.Type.success , "loginSuccess" , "succes" ) ; } 
public com.potatoes.cultivation.logic.Tile getTile ( com.potatoes.cultivation.logic.GameMap gameMap ) { if ( ( ( ( ( i () ) >= 0 ) && ( ( i () ) < ( gameMap.map.length ) ) ) && ( ( j ) >= 0 ) ) && ( ( j ) < ( gameMap.map [ 0 ] . length ) ) ) return gameMap.map [ i () ] [ j ] ; return null ; } 
private java.util.List < com.amazonaws.services.cloudwatch.model.Datapoint > getResultMetricDatapoints ( java.lang.String strMeasureName , java.util.List < com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult > oResultList ) { for ( com.amazonaws.services.cloudwatch.model.GetMetricStatisticsResult oTmpResult : oResultList ) { if ( oTmpResult == null ) continue; if ( oTmpResult . getLabel () . equals ( strMeasureName ) ) return oTmpResult . getDatapoints () ; } return new java.util.ArrayList < com.amazonaws.services.cloudwatch.model.Datapoint > () ; } 
void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) || ( temp != ( current ) ) ) { temp = temp . getNext () ; } if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } 
@ java.lang.Override public void handleEvent ( org.eclipse.swt.widgets.Event event ) { final org.eclipse.swt.widgets.Button btn = ( ( org.eclipse.swt.widgets.Button ) ( event.widget ) ) ; if ( btn . getData () . equals ( java.lang.Boolean.TRUE ) ) { if ( btn . getSelection () ) { if ( ! ( btn . getGrayed () ) ) { btn . setGrayed ( true ) ; } } else { if ( btn . getGrayed () ) { btn . setGrayed ( false ) ; btn . setSelection ( true ) ; } } } } 
private com.getataxi.mobiletaxi.comm.models.OrderDetailsDM prepareDriverOrderDetails ( com.getataxi.mobiletaxi.comm.models.OrderDetailsDM sourceOrderDM ) { sourceOrderDM.orderId = - 1 ; sourceOrderDM.orderLatitude = taxiDriverLocation . getLatitude () ; sourceOrderDM.orderLongitude = taxiDriverLocation . getLongitude () ; sourceOrderDM.status = Constants.OrderStatus.InProgress . getValue () ; sourceOrderDM.taxiId = taxi.taxiId ; sourceOrderDM.taxiPlate = taxi.plate ; sourceOrderDM.driverPhone = phoneNumber ; return sourceOrderDM ; } 
private void insertOne ( java.lang.String name , Time time , int index ) { if ( index < ( ( times.length ) - 1 ) ) { insertOne ( names [ index ] , times [ index ] , ( index + 1 ) ) ; names [ index ] = name ; times [ index ] = new Time ( time ) ; } } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR , ignoreCancelled = true ) public void onTp ( org.bukkit.event.player.PlayerTeleportEvent e ) { org.bukkit.entity.Player p = e . getPlayer () ; if ( ! ( isHidden ( p ) ) ) return; if ( e . getFrom () . getWorld () . getName () . equals ( e . getTo () . getWorld () . getName () ) ) return; if ( cfg . getBoolean ( "Configuration.Players.AddNightVision" ) ) p . removePotionEffect ( PotionEffectType.NIGHT_VISION ) ; if ( cfg . getBoolean ( "Configuration.Players.EnableGhostPlayers" ) ) p . removePotionEffect ( PotionEffectType.INVISIBILITY ) ; } 
private java.lang.String getParameterValueWithContext ( org.talend.core.model.process.IElement elem , java.lang.String key , org.talend.core.model.process.IContext context , org.talend.core.model.process.IElementParameter basePropertyParameter ) { if ( ( elem == null ) || ( key == null ) ) { return "" ; } java.lang.String actualKey = this . getParaNameFromRepositoryName ( elem , key , basePropertyParameter ) ; if ( actualKey != null ) { return fetchElementParameterValue ( elem , context , actualKey ) ; } else { return fetchElementParameterValue ( elem , context , key ) ; } } 
public java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > getPartsByRelationshipType ( java.lang.String relationshipType ) { if ( relationshipType == null ) throw new java.lang.IllegalArgumentException ( "relationshipType" ) ; java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > retArr = new java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > () ; for ( org.apache.poi.openxml4j.opc.PackageRelationship rel : getRelationshipsByType ( relationshipType ) ) { org.apache.poi.openxml4j.opc.PackagePart part = getPart ( rel ) ; if ( part != null ) { retArr . add ( part ) ; } } java.util.Collections . sort ( retArr ) ; return retArr ; } 
@ java.lang.Override public void doFilter ( javax.servlet.ServletRequest request , javax.servlet.ServletResponse response , javax.servlet.FilterChain chain ) throws java.io.IOException , javax.servlet.ServletException { javax.servlet.http.HttpServletRequest req = ( ( javax.servlet.http.HttpServletRequest ) ( request ) ) ; javax.servlet.http.HttpServletResponse resp = ( ( javax.servlet.http.HttpServletResponse ) ( response ) ) ; req . setCharacterEncoding ( "UTF-8" ) ; resp . setCharacterEncoding ( "UTF-8" ) ; processor ( req , resp ) ; chain . doFilter ( request , response ) ; } 
private void loadRomFromZip ( java.lang.String zipName ) throws java.io.IOException { final java.lang.String romName = selectRomInZip ( listRomsInZip ( zipName ) ) ; if ( romName != null ) { final java.io.File extractedFile = extractRomFromZip ( zipName , romName ) ; if ( extractedFile != null ) { extractedFile . deleteOnExit () ; nes . loadROM ( extractedFile . getCanonicalPath () ) ; } } } 
@ java.lang.Override protected void onItemNotFound ( final org.bonitasoft.web.toolkit.client.data.APIID caseId ) { final org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound onCaseDetailsNotFound = new org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound () { @ java.lang.Override protected void redirectToArchivedCaseMoredetails ( final java.lang.String archivedCaseId ) { com.google.gwt.user.client.History . newItem ( ( ( ( ( ( "?_p=" + ( ArchivedCaseMoreDetailsAdminPage.TOKEN ) ) + "&id=" ) + archivedCaseId ) + "&_pf=" ) + ( org.bonitasoft.web.toolkit.client.ClientApplicationURL . getProfileId () ) ) ) ; } } ; onCaseDetailsNotFound . checkIfCaseIsArchived ( caseId . toString () ) ; } 
private boolean unifiesNamespace ( jason.asSyntax.Literal t1s , jason.asSyntax.Literal t2s ) { if ( ( t1s == ( jason.asSyntax.Literal.DefaultNS ) ) && ( t2s == ( jason.asSyntax.Literal.DefaultNS ) ) ) return true ; t1s = t1s . getNS () ; t2s = t2s . getNS () ; if ( t1s . equals ( t2s ) ) return true ; return unifiesNoUndo ( t1s , t2s ) ; } 
public void openMailSender ( no.runsafe.framework.api.player.IPlayer sender , no.runsafe.framework.api.player.IPlayer recipient ) { sender . sendColouredMessage ( ( ( "&3Sending mail will cost " + ( this . getMailCostText () ) ) + "." ) ) ; no.runsafe.framework.minecraft.inventory.RunsafeInventory inventory = server . createInventory ( null , 54 , ( "Mail to " + ( recipient . getName () ) ) ) ; this . openSendAgents . put ( sender , new no.runsafe.mailbox.MailSendAgent ( recipient , inventory ) ) ; sender . openInventory ( inventory ) ; } 
public boolean containsAddress ( java.lang.String address ) { if ( ( this . address . size () ) != 0 ) { for ( int i = 0 ; i < ( this . address . size () ) ; i ++ ) { if ( this . address . get ( i ) . equals ( address ) ) { return true ; } } } return false ; } 
public static void remove ( int index ) { TestListReferenceBased.Node ptr = TestListReferenceBased.head ; TestListReferenceBased.Node nxt = TestListReferenceBased.head . getNext () ; for ( int x = 1 ; x < index ; x ++ ) { ptr = ptr . getNext () ; nxt = nxt . getNext () ; } ptr . setNext ( ptr . getNext () . getNext () ) ; nxt . setNext ( null ) ; } 
public void fireProjectile ( float angle , float xPos , float yPos ) { projectileSprite . setRotation ( ( - angle ) ) ; new com.github.houkagoteatime.LD36.weapons.GateOfBabylon.SwordProjectile ( projectileSprite , owner . getDamage () , xPos , yPos , angle , range , friendly ) . spawn ( level ) ; } 
@ java.lang.Override public void updateItem ( model.Event event , boolean empty ) { super . updateItem ( event , empty ) ; if ( event != null ) { data = new gui.EventCell.EventData () ; data . setEvent ( event ) ; setGraphic ( data . getBox () ) ; } else { setGraphic ( null ) ; } } 
private static java.lang.String getName ( org.jetbrains.plugins.cucumber.java.run.Scenario scenario ) { if ( scenario . getKeyword () . equals ( "Scenario Outline" ) ) { return escape ( ( "Scenario: Line: " + ( scenario . getLine () ) ) ) ; } else { return escape ( ( "Scenario: " + ( scenario . getName () ) ) ) ; } } 
public void show ( android.app.Activity activity , chi_software.citybase.ui.dialog.SearchDialog.GetSpinnerListener getSpinnerListener , chi_software.citybase.data.menuSearch.MenuSearch menuSearch , java.util.List < java.lang.String > mTypeSelected , java.util.List < java.lang.String > mAreaSelected , java.util.List < java.lang.String > mPunktSelected ) { this . mTypeSelected = mTypeSelected ; this . mPunktSelected = mPunktSelected ; this . mAreaSelected = mAreaSelected ; getListener ( getSpinnerListener , menuSearch ) ; show ( activity . getFragmentManager () , "Поиск" ) ; } 
public void onFalse ( android.view.View view ) { if ( ! ( IS_PRIME ) ) { android.widget.Toast . makeText ( this , "Your answer is correct!" , Toast.LENGTH_SHORT ) . show () ; numberDisplay . setTextColor ( android.graphics.Color . parseColor ( "#FF99CC00" ) ) ; } else { android.widget.Toast . makeText ( this , "Your answer is incorrect!" , Toast.LENGTH_SHORT ) . show () ; numberDisplay . setTextColor ( android.graphics.Color . parseColor ( "#FFD50000" ) ) ; } } 
public void hierarchySetUp ( org.opennms.netmgt.model.topology.Bridge root ) { if ( root . isRootBridge () ) return; root . setRootBridge ( true ) ; root . setRootPort ( null ) ; if ( ( m_bridges . size () ) == 1 ) return; for ( org.opennms.netmgt.model.topology.SharedSegment segment : getSharedSegmentOnTopologyForBridge ( root . getId () ) ) { segment . setDesignatedBridge ( root . getId () ) ; tier ( segment , root . getId () , 0 ) ; } } 
public void insert ( int element ) { this . Heap [ ( ( this . size ) ++ ) ] = element ; int current = ( this . size ) - 1 ; while ( ( this . Heap [ current ] ) > ( this . Heap [ this . parent ( current ) ] ) ) { this . swap ( current , this . parent ( current ) ) ; current = this . parent ( current ) ; } } 
@ java.lang.Override public void onItemClick ( com.orhanobut.dialogplus.DialogPlus dialog , java.lang.Object item , android.view.View view , int position ) { helper . placeCardInBoxInBackground ( adapter . getList () . get ( boxListPosition ) . getUserId () , cards . get ( position ) . getImageRef () ) ; dialog . dismiss () ; } 
@ java.lang.Override public java.lang.Object instantiateItem ( android.view.ViewGroup container , int position ) { android.view.View itemView ; if ( ( mResources.length ) > 0 ) { itemView = mLayoutInflater . inflate ( R.layout.problem_images_view_pager_item , container , false ) ; android.widget.ImageView problemImageView = ( ( android.widget.ImageView ) ( itemView . findViewById ( R.id.problem_image_view ) ) ) ; loadImage ( mResources [ position ] , container . getContext () , problemImageView ) ; container . addView ( itemView ) ; return itemView ; } else { return null ; } } 
private void moveLeft ( int t ) { fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment [ t ] ; globalVar -= eLost . getVar () ; eLost . removeOneFrame ( frames [ t ] ) ; globalVar += eLost . getVar () ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eGain = alignment [ ( t + 1 ) ] ; globalVar -= eGain . getVar () ; eGain . updateOneFrame ( frames [ t ] ) ; globalVar += eGain . getVar () ; alignment [ t ] = alignment [ ( t + 1 ) ] ; } 
public void setGlobalPosition ( engine.math.Vector2i position ) { if ( ( parent ) == null ) { this . position = position ; return; } this . position = position . sub ( parent . getGlobalPosition () ) . rotateBy ( ( - ( parent . getRotation () ) ) ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { final org.datacleaner.configuration.DataCleanerConfigurationImpl configuration = new org.datacleaner.configuration.DataCleanerConfigurationImpl ( _configuration ) . withEnvironment ( new org.datacleaner.configuration.DataCleanerEnvironmentImpl ( _configuration . getEnvironment () ) . withTaskRunner ( new org.datacleaner.job.concurrent.SingleThreadedTaskRunner () ) ) ; final org.datacleaner.job.AnalysisJob jobCopy = _analysisJobBuilder . toAnalysisJob ( false ) ; final org.datacleaner.job.builder.AnalysisJobBuilder jobBuilderCopy = new org.datacleaner.job.builder.AnalysisJobBuilder ( configuration , jobCopy ) ; execute ( jobBuilderCopy ) . actionPerformed ( e ) ; } 
@ java.lang.Override public void onSuccessResponse ( redit.com.redditshow.network.reply.Listing response ) { if ( redit.com.redditshow.util.Constant.DEBUG ) android.util.Log . d ( redit.com.redditshow.view.MainActivity.TAG , response . toString () ) ; try { handleResponse ( response ) ; } catch ( java.lang.Exception e ) { android.widget.Toast . makeText ( this , "Failed" , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public void addGraphCode ( java.util.HashMap < java.lang.String , java.lang.String > items ) { for ( int i = 0 ; i < ( codeGetters . size () ) ; i ++ ) { sb . append ( codeGetters . get ( i ) . getCode ( items ) ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.view_pager ) ; be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter mSectionsPagerAdapter = new be.heroesofmightandmagic.www.monsterandcie.ViewPagerActivity.SectionsPagerAdapter ( getSupportFragmentManager () ) ; android.support.v4.view.ViewPager mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.pager ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; int currentIndex = getIntent () . getIntExtra ( "monsterNameIndex" , 0 ) ; mViewPager . setCurrentItem ( currentIndex ) ; } 
@ java.lang.Override public void handle ( org.eclipse.jetty.server.Request baseRequest , javax.servlet.ServletRequest request , javax.servlet.ServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { final boolean asyncSupported = baseRequest . isAsyncSupported () ; if ( ! ( isAsyncSupported () ) ) { baseRequest . setAsyncSupported ( false , null ) ; } try { servlet . service ( request , response ) ; } finally { baseRequest . setAsyncSupported ( asyncSupported , null ) ; } } 
@ java.lang.Override public int skip ( int size ) throws java.io.IOException { byte [] temp = new byte [ java.lang.Math . min ( org.verapdf.cos.filters.BF_BUFFER_SIZE , size ) ] ; int skipped = 0 ; while ( skipped != size ) { int read = this . read ( temp , java.lang.Math . min ( ( size - skipped ) , org.verapdf.cos.filters.BF_BUFFER_SIZE ) ) ; if ( read == ( - 1 ) ) { return skipped ; } else { skipped += read ; } } return skipped ; } 
public void setLatestItem ( Item item ) { if ( item != null ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } } this . incrementCounter () ; } 
public synchronized java.util.List < java.lang.String > getJobConsole ( final java.lang.String buildNumber , final java.lang.String jobName ) { java.lang.String url = prepareUrl ( jobName , buildNumber , "console" ) ; java.lang.String jjc = sendAndGetResponse ( url , HttpMethod.GET , getHttpEntityWithHeaders () ) . getBody () ; return java.util.Arrays . asList ( jjc . split ( "\\n" ) ) ; } 
@ java.lang.Override public android.graphics.Bitmap transform ( android.graphics.Bitmap source ) { int y = ( source . getHeight () ) / 5 ; int x = 0 ; android.graphics.Bitmap result = android.graphics.Bitmap . createBitmap ( source , x , y , source . getWidth () , ( ( ( source . getHeight () ) * 3 ) / 5 ) ) ; if ( result != source ) { source . recycle () ; } return result ; } 
public void onGetLocationStatus ( java.lang.Boolean status , java.lang.String message ) { if ( status ) { org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController . getInstance () . startIndoorOutdoorDetector ( this , this ) ; toggleIndoorOutdoorButtonStatus ( true ) ; } else { org.mygeotrust.indoor.utils.dialogue.Dialogs . getInstance () . showInfoDialog ( this , " Cannot start indoor/outdoor Detector." , ( ( ( " GPS use Status: " + status ) + "\n Error: " ) + message ) , R.drawable.ic_warning , R.color.colorRed ) ; toggleIndoorOutdoorButtonStatus ( false ) ; } } 
public static java.util.Date StrToStartDate ( java.lang.String str ) { java.text.SimpleDateFormat format = new java.text.SimpleDateFormat ( "yyyy-MM-dd" ) ; java.util.Date date = null ; try { date = format . parse ( str ) ; } catch ( java.lang.Exception e ) { com.abel.hwes.util.SwapDateAndStringUtil.log . error ( e . getMessage () ) ; date = com.abel.hwes.util.SwapDateAndStringUtil . StrToStartDate ( "2006-08-01" ) ; } return date ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.bShare : android.content.Intent shareIntent = new android.content.Intent ( this , com.example.elazaoui.projet.Share . class ) ; startActivity ( shareIntent ) ; break; case R.id.bSearch : android.content.Intent searchIntent = new android.content.Intent ( this , com.example.elazaoui.projet.Search . class ) ; startActivity ( searchIntent ) ; break; case R.id.bLogout : userLocalStore . clearUserData () ; userLocalStore . setUserLoggedIn ( false ) ; android.content.Intent logoutIntent = new android.content.Intent ( this , com.example.elazaoui.projet.Login . class ) ; startActivity ( logoutIntent ) ; break; } } 
private static void getRidOfPassedCheckpointsNear ( Player.Buster buster ) { java.util.List < Player.Agent > tbd = new java.util.ArrayList < Player.Agent > () ; for ( Player.Agent point : Player.checkpoints ) { if ( ( buster . distanceTo ( point ) ) < ( Player.RADAR_DISTANCE ) ) { tbd . add ( point ) ; } } Player.checkpoints . removeAll ( tbd ) ; } 
public void onResume () { if ( ! ( didShowLoadingState ) ) { maximFeed . showLoadingState () ; didShowLoadingState = true ; } maximManager . loadMaxims ( context , new com.tcolligan.maximmaker.data.MaximManager.MaximsLoadedListener () { @ java.lang.Override public void onMaximsLoaded ( java.util.List < com.tcolligan.maximmaker.data.Maxim > loadedMaximList ) { showMaxims ( loadedMaximList ) ; } } ) ; } 
public byte [] get ( java.lang.String key , boolean renew ) { net.vicp.lylab.core.model.CacheValue cv = getContainer () . get ( key ) ; if ( cv == null ) return null ; if ( ( cv . getValidateTime () ) < ( ( java.lang.System . currentTimeMillis () ) - ( cv . getStartTime () ) ) ) { remove ( key , cv ) ; return null ; } if ( renew ) cv . renewStartTime () ; return cv . getValue () ; } 
public void afterTextChanged ( android.text.Editable editable ) { switch ( view . getId () ) { case R.id.input_namer : validateName () ; break; case R.id.input_emailr : validateEmail () ; break; case R.id.input_phoner : validatePhone () ; validateEmail () ; break; case R.id.input_passwordr : validatePassword () ; break; } } 
public int findNodeNumber ( int key ) { edu.oakland.production.ClassProject.Database.Node focusNode = this . binaryTreeDatabase . getRootNode () ; int nodeCount = 0 ; while ( ( focusNode . getKey () ) != key ) { if ( key < ( focusNode . getKey () ) ) { focusNode = focusNode.leftChild ; } else { focusNode = focusNode.rightChild ; } if ( focusNode == null ) return nodeCount ++ ; nodeCount ++ ; } return nodeCount ++ ; } 
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , java.lang.Class < ? > targetClass , io.beanmapper.core.BeanFieldMatch beanFieldMatch ) { if ( ( ( source == null ) || ( source . getClass () . equals ( targetClass ) ) ) || ( ( beanFieldMatch != null ) && ( beanFieldMatch . getSourceClass () . equals ( targetClass ) ) ) ) { return source ; } java.lang.Object sourceAsString = beanMapper . convert ( source , java.lang.String . class , beanFieldMatch ) ; return beanMapper . convert ( sourceAsString , targetClass , beanFieldMatch ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_todo ) ; android.preference.PreferenceManager . setDefaultValues ( this , R.xml.preferences , false ) ; if ( savedInstanceState == null ) { fragment = com.codepath.todoapp.fragments.TodoFragment . newInstatnce () ; getFragmentManager () . beginTransaction () . replace ( R.id.fListContainer , fragment , "todo" ) . addToBackStack ( "todo" ) . commit () ; } } 
private int getAgentEncoding ( com.sun.org.apache.xalan.internal.xsltc.runtime.Node node , int timeStep , int binaryIndex ) { return ( ( ( ( vertexOffset ) + ( edgeOffset ) ) + ( ( ( makespan ) * ( node . getIndexInGraph () ) ) * ( numBinaryPropVars ) ) ) + ( timeStep * ( numBinaryPropVars ) ) ) + binaryIndex ; } 
private java.lang.String setEndOfLevel ( int numLives ) { pp . startGame ( level . getLevel () ) ; bg . setBackgroundImage ( bg . getBackGroundImageFileName () ) ; if ( ( this . count ) > 0 ) bg . getNextBackGroundImageFileName () ; msg . setGameStart ( level . getLevel () , level . getLives () ) ; level . newLevel ( numLives ) ; return "Level Finished" ; } 
private int addChildNodes ( tellh.com.recyclertreeview_lib.TreeNode pNode , int startIndex ) { java.util.List < tellh.com.recyclertreeview_lib.TreeNode > childList = pNode . getChildList () ; int addChildCount = 0 ; for ( tellh.com.recyclertreeview_lib.TreeNode treeNode : childList ) { displayNodes . add ( ( startIndex + ( addChildCount ++ ) ) , treeNode ) ; if ( treeNode . isExpand () ) { addChildCount += addChildNodes ( treeNode , ( startIndex + addChildCount ) ) ; } } if ( ! ( pNode . isExpand () ) ) pNode . toggle () ; return addChildCount ; } 
@ java.lang.Override public void execute ( backtype.storm.tuple.Tuple tuple ) { java.lang.String ChannelCode = tuple . getStringByField ( "channelCode" ) ; long timeStamp = tuple . getLongByField ( "timeStamp" ) ; float value = tuple . getFloatByField ( "value" ) ; if ( channelSet . contains ( ChannelCode ) ) { if ( isFirst ) { getQueryMap . setFirstTimestamp ( timeStamp ) ; isFirst = false ; } _collector . emit ( new backtype.storm.tuple.Values ( ChannelCode , timeStamp , value ) ) ; } } 
public javax.json.JsonStructure getEventDistrictPoints ( java.lang.String eventKey , int verboseLevel ) { javax.json.JsonStructure data = get ( ( ( "event/" + eventKey ) + "/district_points" ) , header ) ; if ( ( data != null ) && ( verboseLevel < 2 ) ) { data = ( ( javax.json.JsonStructure ) ( ( ( javax.json.JsonObject ) ( data ) ) . get ( "points" ) ) ) ; } return data ; } 
private void validateCommand ( org.spine3.examples.todolist.UpdateTaskDescription cmd ) { java.lang.String description = cmd . getUpdatedDescription () ; com.google.common.base.Preconditions . checkNotNull ( description , "Description cannot be null." ) ; if ( ( description . length () ) < 3 ) { throw new java.lang.IllegalArgumentException ( "Description should contains at least 3 alphanumeric symbols." ) ; } validateCommandOnDeletionAndCompletion () ; } 
public static java.util.List < fr.inria.spirals.jtravis.entities.Build > getBuildsFromRepositoryWithLimitDate ( fr.inria.spirals.jtravis.entities.Repository repository , java.util.Date limitDate ) { java.util.List < fr.inria.spirals.jtravis.entities.Build > result = new java.util.ArrayList < fr.inria.spirals.jtravis.entities.Build > () ; fr.inria.spirals.jtravis.helpers.BuildHelper . getBuildsFromSlugRecursively ( repository . getSlug () , result , limitDate , 0 , fr.inria.spirals.jtravis.helpers.BuildHelper . getEventTypes () , 0 , null , ( - 1 ) , false , null ) ; for ( fr.inria.spirals.jtravis.entities.Build b : result ) { b . setRepository ( repository ) ; } return result ; } 
public void addDeadDenLocation ( viperinos.MapLocation den ) { viperinos.MapLocation [] temp = new viperinos.MapLocation [ ( deadDens.length ) + 1 ] ; java.lang.System . arraycopy ( deadDens , 0 , temp , 0 , deadDens.length ) ; temp [ deadDens.length ] = den ; deadDens = temp ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map ) ; butterknife.ButterKnife . bind ( this ) ; mMapView . onCreate ( savedInstanceState ) ; setupMap () ; mMapHelper = new com.mredrock.cyxbs.util.MapHelper ( this , mHandler ) ; mMapHelper . readMapPictureFromCache () ; } 
private boolean isThreadTime1 ( java.lang.String strText ) { if ( ( strText . length () ) < 33 ) return false ; java.lang.String strLevel = ( ( java.lang.String ) ( strText . substring ( 31 , 33 ) ) ) ; return strLevel . equals ( "D " ) ? true : strLevel . equals ( "V " ) ? true : strLevel . equals ( "I " ) ? true : strLevel . equals ( "W " ) ? true : strLevel . equals ( "E " ) ? true : strLevel . equals ( "F " ) ? true : false ; } 
public static java.lang.String readRequestFile ( java.lang.String fileName ) throws java.lang.Exception { java.io.InputStream is = new java.io.FileInputStream ( fileName ) ; java.io.BufferedReader buf = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.String line = buf . readLine () ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; while ( line != null ) { sb . append ( line ) ; line = buf . readLine () ; } return sb . toString () ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( radioButtonChan6 . isSelected () ) == true ) { try { c . sendCommand ( "CONN 6" ) ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } } else { try { c . sendCommand ( "DISC 6" ) ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } } if ( ( c.connected [ 1 ] [ 2 ] ) == null ) { radioButtonChan7 . setSelected ( false ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { boolean checked = ( ( android.widget.RadioButton ) ( view ) ) . isChecked () ; switch ( view . getId () ) { case R.id.wsgh_yes_rb : if ( checked ) wsghSpinnerRl . setVisibility ( View.GONE ) ; break; case R.id.wsgh_someoneelse_rb : if ( checked ) wsghSpinnerRl . setVisibility ( View.VISIBLE ) ; break; } } 
public void bleCharacteristicRead ( java.lang.String address , java.lang.String uuid , int status , byte [] value ) { android.content.Intent intent = new android.content.Intent ( com.hypercryptic.bleware.BLEService.BLE_CHARACTERISTIC_READ ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_ADDR , address ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_UUID , uuid ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_STATUS , status ) ; intent . putExtra ( com.hypercryptic.bleware.BLEService.EXTRA_VALUE , value ) ; sendBroadcast ( intent ) ; requestProcessed ( address , RequestType.READ_CHARACTERISTIC , true ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.widget.TextView tvInfo = ( ( android.widget.TextView ) ( findViewById ( R.id.app_info ) ) ) ; tvInfo . setText ( getString ( R.string.app_info ) ) ; mHelper = new com.bjlanza.udacity.bj_habittracker.HabitDbHelper ( this ) ; db = mHelper . getWritableDatabase () ; insertData ( "Walking Dog" , "21" , "Pets" ) ; insertData ( "Programming one hour per day" , "15" , "Study" ) ; getData () ; deleteTable () ; } 
public void setCharacteristicNotification ( android.bluetooth.BluetoothGattCharacteristic characteristic , boolean enabled ) { com.eveningoutpost.dexdrip.Models.UserError.Log . i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG , "Characteristic setting notification" ) ; if ( ( mBluetoothGatt ) != null ) { mBluetoothGatt . setCharacteristicNotification ( characteristic , enabled ) ; android.bluetooth.BluetoothGattDescriptor descriptor = characteristic . getDescriptor ( java.util.UUID . fromString ( HM10Attributes.CLIENT_CHARACTERISTIC_CONFIG ) ) ; com.eveningoutpost.dexdrip.Models.UserError.Log . i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG , ( "Descriptor found: " + ( descriptor . getUuid () ) ) ) ; descriptor . setValue ( BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE ) ; mBluetoothGatt . writeDescriptor ( descriptor ) ; } } 
public boolean checkLastUpdate ( T e ) { try { java.sql.Timestamp databaseDate = this . getById ( e . getId () ) . getLastUpdate () ; if ( databaseDate . before ( e . getLastUpdate () ) ) { return true ; } return false ; } catch ( com.couchbase.client.core.BucketClosedException ex ) { connect () ; } return false ; } 
public static < K , V > java.lang.Iterable < java.util.Map.Entry < K , V > > makeIterable ( final java.util.Map < K , V > map ) { if ( ( map == null ) || ( map . isEmpty () ) ) { return ovation.odata.util.CollectionUtils . makeEmptyIterable () ; } return ovation.odata.util.CollectionUtils . makeIterable ( map . entrySet () ) ; } 
private static java.lang.String getRequiredSpaces ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } 
public void generateEnums ( final java.io.OutputStream outputStream ) throws java.io.IOException { if ( ! ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( spec . getTypes () ) ) ) return; for ( final com.spectralogic.ds3autogen.api.models.Ds3Type ds3TypeEntry : spec . getTypes () . values () ) { final java.lang.Enum enumEntry = com.spectralogic.ds3autogen.c.converters.EnumConverter . toEnum ( ds3TypeEntry ) ; if ( com.spectralogic.ds3autogen.utils.ConverterUtil . hasContent ( enumEntry . getValues () ) ) { processTemplate ( enumEntry , "TypedefEnum.ftl" , outputStream ) ; } } } 
public void setMaterial ( org.gearvrf.GVRMaterial material , int passIndex ) { if ( passIndex < ( mRenderPassList . size () ) ) { mRenderPassList . get ( passIndex ) . setMaterial ( material ) ; } else { android.util.Log . e ( org.gearvrf.GVRRenderData.TAG , ( ( "Trying to set material from invalid pass. Pass " + passIndex ) + " was not created." ) ) ; } } 
public static void updateClient ( com.robrit.moofluids.common.entity.EntityFluidCow fluidCow , long worldTime ) { net.minecraft.nbt.NBTTagCompound tag = fluidCow . getEntityData () ; if ( ( tag . hasKey ( "rfc:nextUpdate" ) ) && ( ( tag . getLong ( "rfc:nextUpdate" ) ) > worldTime ) ) { return; } com.jdlogic.ranchablefluidcows.ranchable.RanchableFC . sendPacket ( fluidCow ) ; tag . setLong ( "rfc:nextUpdate" , ( worldTime + ( 20 * 10 ) ) ) ; } 
@ java.lang.Override public void onMessage ( int instanceId , java.lang.String message ) { int size = java.lang.Integer . parseInt ( message ) ; byte [] buffer = new byte [ size ] ; for ( int i = 0 ; i < size ; ++ i ) buffer [ i ] = 'p' ; java.lang.String result = new java.lang.String ( buffer ) ; postMessage ( instanceId , result ) ; } 
private void initSheetWidthConfig ( org.apache.poi.ss.usermodel.Sheet sheet ) { xgt.util.excel.Config config = getConfig () ; sheet . setDefaultRowHeightInPoints ( config . getDefaultHeight () ) ; for ( int index : config . getKeysOfWidth () ) { sheet . setColumnWidth ( index , ( ( config . getColumnWidth ( index ) ) * 256 ) ) ; } } 
private com.nike.cerberus.service.StaticAssetManager.AssetResourceFile create ( java.lang.String filename , java.lang.String filePath , java.lang.String rootDirectoryPath ) { return new com.nike.cerberus.service.StaticAssetManager.AssetResourceFile ( filename , com.nike.cerberus.service.StaticAssetManager . getRelativePath ( filePath , rootDirectoryPath ) , com.nike.cerberus.service.StaticAssetManager . getMimeTypeForFileFromName ( filename ) , com.google.common.collect.ImmutableList . < java.lang.Byte > builder () . addAll ( com.nike.cerberus.service.StaticAssetManager . getFileContents ( filePath ) ) . build () ) ; } 
public boolean isGreet ( Sentence s ) { Greeting greet = new Greeting () ; for ( java.lang.String x : greet.greet1 ) { if ( Kumar . search ( x , s.sentence ) ) { return true ; } } for ( java.lang.String x : greet.greet2 ) { if ( Kumar . search ( x , s.sentence ) ) { return true ; } } return false ; } 
public void union ( int p , int q ) { int root_p = find ( p ) ; int root_q = find ( q ) ; if ( ( rank [ root_p ] ) > ( rank [ root_q ] ) ) { set [ root_q ] = root_p ; } else { set [ root_p ] = root_q ; if ( ( rank [ root_p ] ) == ( rank [ root_q ] ) ) { ( rank [ root_q ] ) ++ ; } } } 
public static void selectNextTableRow ( javax.swing.JTable table ) { int index = table . getSelectedRow () ; if ( index == ( - 1 ) ) { index = 0 ; } table . clearSelection () ; if ( ( ++ index ) > ( ( table . getRowCount () ) - 1 ) ) { index = 0 ; } table . addRowSelectionInterval ( index , index ) ; } 
public static com.github.bijoysingh.starter.item.TimestampItem getTimestampItem ( java.lang.String timestamp , org.joda.time.DateTimeZone dateTimeZone , java.lang.Integer hour , java.lang.Integer minutes ) { org.joda.time.DateTime dateTime = com.github.bijoysingh.starter.util.TimestampManager . getDateTimeObject ( timestamp ) ; if ( dateTime == null ) { return new com.github.bijoysingh.starter.item.TimestampItem ( timestamp , null , null , java.util.Calendar . getInstance () ) ; } dateTime = dateTime . toDateTime ( dateTimeZone ) ; dateTime = dateTime . plusHours ( hour ) . plusMinutes ( minutes ) ; return com.github.bijoysingh.starter.util.TimestampManager . createTimestampItem ( timestamp , dateTime ) ; } 
public com.hearthsim.card.CharacterIndex convertCharIndex ( com.hearthsim.card.CharacterIndex index ) { switch ( index ) { case HERO : return com.hearthsim.card.CharacterIndex.HERO ; case MINION_1 : return com.hearthsim.card.CharacterIndex.MINION_1 ; case MINION_2 : return com.hearthsim.card.CharacterIndex.MINION_2 ; case MINION_3 : return com.hearthsim.card.CharacterIndex.MINION_3 ; case MINION_4 : return com.hearthsim.card.CharacterIndex.MINION_4 ; case MINION_5 : return com.hearthsim.card.CharacterIndex.MINION_5 ; case MINION_6 : return com.hearthsim.card.CharacterIndex.MINION_6 ; case MINION_7 : return com.hearthsim.card.CharacterIndex.MINION_7 ; case MINION_8 : return com.hearthsim.card.CharacterIndex.MINION_8 ; case MINION_9 : return com.hearthsim.card.CharacterIndex.MINION_9 ; case UNKNOWN : return com.hearthsim.card.CharacterIndex.UNKNOWN ; } return com.hearthsim.card.CharacterIndex.UNKNOWN ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback ) != null ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } } } 
public void test_132_ACLCreateFields ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry ) { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "environment" , "work" , westyEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "ssn" , "000-00-0000" , westyEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "password" , "666flapJack" , westyEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "address" , "100 Hinkledinkle Drive" , westyEntry ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception while creating fields in ACLCreateFields: " + e ) ) ; } } 
private void writePropertyContainer ( org.codehaus.jackson.JsonGenerator out , org.neo4j.graphdb.PropertyContainer value ) throws java.io.IOException { out . writeStartObject () ; try { for ( java.lang.String key : value . getPropertyKeys () ) { out . writeObjectField ( key , value . getProperty ( key ) ) ; } } finally { out . writeEndObject () ; } } 
public java.util.ArrayList < csv.Person > readCsv ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedInputStream bis = new java.io.BufferedInputStream ( is ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( bis ) ) ; try { java.lang.String line ; while ( ( line = reader . readLine () ) != null ) { csv.Person a = null ; parsedPersons . add ( a . toPerson ( line ) ) ; } } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } return parsedPersons ; } 
private void putTagsInJSONObj ( org.json.simple.JSONObject object , java.lang.String [] tags ) { if ( tags != null ) { java.util.List < java.lang.String > tagList = new java.util.ArrayList < java.lang.String > () ; for ( java.lang.String string : tags ) { tagList . add ( string ) ; } object . put ( "tags" , tagList ) ; } else { object . put ( "tags" , null ) ; } } 
protected org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; } 
public void removeOne ( T item ) { nodes.TreeNode < T > current = root ; while ( current != null ) { nodes.TreeNode < T > next = current . checkNode ( item ) ; if ( current == next ) { current . deincrementItemCount () ; return; } else current = next ; } } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound nbt ) { super . readFromNBT ( nbt ) ; this . burnTimeLeft = nbt . getInteger ( "burnTime" ) ; this . cookTimeLeft = nbt . getInteger ( "cookTimeLeft" ) ; if ( ( nbt . getTag ( "cookingItem" ) ) != null ) this . cooking = new net.minecraft.item.ItemStack ( ( ( net.minecraft.nbt.NBTTagCompound ) ( nbt . getTag ( "cookingItem" ) ) ) ) ; } 
public boolean isItPossibleToShoot ( de.hsbremen.battleshipextreme.model.FieldState [] [] board , int startX , int startY ) { boolean result = false ; de.hsbremen.battleshipextreme.model.FieldState state = board [ startY ] [ startX ] ; if ( ( state == ( de.hsbremen.battleshipextreme.model.FieldState.HAS_SHIP ) ) || ( state == ( de.hsbremen.battleshipextreme.model.FieldState.IS_EMPTY ) ) ) { result = true ; } return result ; } 
@ java.lang.Override public void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } 
public static java.lang.String fixPath ( java.lang.String path ) { java.lang.String prefix ; java.lang.String suffix ; if ( ( path . lastIndexOf ( "/" ) ) > 0 ) { prefix = path . substring ( 0 , path . lastIndexOf ( "/" ) ) ; suffix = path . substring ( path . lastIndexOf ( "/" ) ) ; prefix = prefix . replaceAll ( "%20" , " " ) ; return prefix . concat ( suffix ) ; } return path ; } 
@ java.lang.Override public void request ( long n ) { if ( ( terminated ) == 1 ) { return; } if ( reactor.core.support.BackpressureUtils . checkRequest ( n , inputSubscriber ) ) { if ( ( ( reactor.core.support.BackpressureUtils . getAndAdd ( REQUESTED , this , n ) ) == 0 ) && ( n == ( java.lang.Long.MAX_VALUE ) ) ) { org.reactivestreams.Subscription subscription = this . subscription ; if ( subscription != null ) { subscription . request ( n ) ; } } else { drainBackpressureQueue () ; } } } 
protected int nearMinesCount ( int line , int place ) { int count = 0 ; for ( int [] near : net.patttern.minesweeper.proto.bases.BaseArea.nears ) { count += ( cellMined ( ( line + ( near [ 0 ] ) ) , ( place + ( near [ 1 ] ) ) ) ) ? 1 : 0 ; } return count ; } 
@ java.lang.Override public void update ( java.util.Observable o , java.lang.Object arg ) { shared.game.map.Index currentTurn = ModelFacade.facace_currentgame.currentgame . getModel () . getTurntracker () . getCurrentTurn () ; shared.game.player.Player player = ModelFacade.facace_currentgame . getMyplayers () . get ( currentTurn ) ; if ( player != null ) { if ( LoginController.REALPURENAME . equals ( player . getName () ) ) { updateGameState ( "End Turn" , true ) ; } } } 
public void write ( byte [] data ) { int index = 0 ; while ( index < ( clientCount ) ) { if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } } } 
@ java.lang.Override public void setBounds ( int left , int top , int right , int bottom ) { super . setBounds ( left , top , right , bottom ) ; mHeight = bottom - top ; mWidth = right - left ; mWarningTextHeight = - ( mWarningTextPaint . getFontMetrics () . ascent ) ; } 
public void setEnable ( boolean flag ) { mIsEnabled = flag ; if ( ( getNative () ) != 0 ) { org.gearvrf.NativeComponent . setEnable ( getNative () , flag ) ; } if ( flag ) { onEnable () ; } else { onDisable () ; } } 
public static java.util.List < java.lang.String > getListOfAuthorizedDomainsByConsumerKey ( java.lang.String consumerKey ) throws org.wso2.carbon.apimgt.api.APIManagementException { java.lang.String list = org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO . getAuthorizedDomainsByConsumerKey ( consumerKey ) ; if ( ( list != null ) && ( ! ( list . isEmpty () ) ) ) { return java.util.Arrays . asList ( list . split ( "," ) ) ; } return null ; } 
public java.lang.String spawnSouth ( int offX , int offY , int height ) { java.awt.Graphics2D s2d = backImage . createGraphics () ; s2d . drawImage ( this . getSouth () , ( offX - ( ( this . getSouth () . getWidth () ) / 2 ) ) , offY , this . getSouth () . getWidth () , height , null ) ; java.lang.String name = updateGeneratedImage () ; return name ; } 
@ java.lang.Override public void onError ( java.lang.Throwable e ) { super . onError ( e ) ; showLoading ( false ) ; java.lang.String errorMessage = com.nairbspace.octoandroid.exception.ErrorMessageFactory . create ( mScreen . context () , ( ( java.lang.Exception ) ( e ) ) ) ; if ( com.nairbspace.octoandroid.exception.ErrorMessageFactory . ifSslError ( mScreen . context () , ( ( java.lang.Exception ) ( e ) ) ) ) { mScreen . showAlertDialog () ; } else { mScreen . showSnackbar ( errorMessage ) ; } } 
public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { java.util.ArrayList < com.savelives.entityclasses.SearchQuery > temp = new java.util.ArrayList <> () ; temp . add ( sq ) ; for ( int i = 0 ; ( i < ( ( MAX_HISTORY ) - 1 ) ) && ( i < ( historySearch . size () ) ) ; i ++ ) { temp . add ( historySearch . get ( i ) ) ; } this . historySearch = temp ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/logout" , method = { org.springframework.web.bind.annotation.RequestMethod.GET } ) @ org.springframework.web.bind.annotation.ResponseBody public void logout ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { java.lang.System.out . println ( "logout controller" ) ; javax.servlet.http.HttpSession session = request . getSession ( false ) ; if ( session != null ) { session . invalidate () ; java.lang.System.out . println ( "lougout success" ) ; } resp . sendRedirect ( "index.html" ) ; } 
protected org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } 
@ java.lang.Override public void HandleTopNewsIds ( java.lang.String data ) { try { org.json.JSONArray jsonArray = new org.json.JSONArray ( data ) ; for ( int i = 0 ; i < ( jsonArray . length () ) ; i ++ ) { topNewsArray . add ( jsonArray . getString ( i ) ) ; } getArticleInfo ( 30 ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void remove ( int index ) { if ( ( index < 0 ) || ( index >= ( accommodated ) ) ) { throw new java.lang.IndexOutOfBoundsException () ; } for ( int i = index ; i < ( ( accommodated ) - 1 ) ; i ++ ) { array [ i ] = array [ ( i + 1 ) ] ; } ( accommodated ) -- ; } 
@ com.google.inject.Provides public gov.ca.cwds.rest.api.domain.cms.SystemCodeCache provideSystemCodeCache ( gov.ca.cwds.data.cms.SystemCodeDao systemCodeDao , gov.ca.cwds.data.cms.SystemMetaDao systemMetaDao ) { final long secondsToRefreshCache = ( ( 15 * 24 ) * 60 ) * ( ( long ) ( 60 ) ) ; gov.ca.cwds.rest.api.domain.cms.SystemCodeCache systemCodeCache = new gov.ca.cwds.rest.services.cms.CachingSystemCodeService ( systemCodeDao , systemMetaDao , secondsToRefreshCache , true ) ; systemCodeCache . register () ; return systemCodeCache ; } 
public void setDelegate ( @ android.support.annotation.Nullable com.nextfaze.poweradapters.PowerAdapter delegate ) { if ( delegate != ( mDelegate ) ) { int removeCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; mDelegate = delegate ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; updateObservers () ; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0 , removeCount ) ; } if ( insertCount > 0 ) { notifyItemRangeInserted ( 0 , insertCount ) ; } } } 
@ org.greenrobot.eventbus.Subscribe @ java.lang.Override public void onEvent ( id.co.veritrans.sdk.coreflow.eventbus.events.NetworkUnavailableEvent event ) { errorMessage = getString ( R.string.no_network_msg ) ; try { id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil . hideProgressDialog () ; id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil . showSnackbar ( this , errorMessage ) ; } catch ( java.lang.NullPointerException ex ) { id.co.veritrans.sdk.coreflow.core.Logger . e ( ( "transaction error is " + ( errorMessage ) ) ) ; } } 
private void translateIfGoto ( wyjc.CodeBlock.Index index , wyjc.Codes.If code , int freeSlot , java.util.ArrayList < wyjc.Bytecode > bytecodes ) { wyjc.JvmType jt = convertType ( code.type ) ; bytecodes . add ( new wyjc.Bytecode.Load ( code.leftOperand , jt ) ) ; bytecodes . add ( new wyjc.Bytecode.Load ( code.rightOperand , jt ) ) ; translateIfGoto ( index , code.type , code.op , code.target , freeSlot , bytecodes ) ; } 
@ java.lang.Override public void setCurrentToggleState ( java.lang.String key ) { for ( int i = 0 ; i < ( states . size () ) ; i ++ ) { if ( states . get ( i ) . getKey () . equals ( key ) ) { currentStateIndex = i ; init () ; return; } } throw new java.lang.IllegalArgumentException ( "No Toggle States match the key you have given" ) ; } 
private void setKi ( javax.swing.JCheckBox chkbx ) { optionsView . setKi ( chkbx ) ; playerIsKi = new boolean [ this . player ] ; for ( int i = 0 ; i < ( this . playerIsKi . length ) ; i ++ ) { this . playerIsKi [ i ] = this . optionsView . getKiBox () [ i ] . isSelected () ; } } 
public static void close ( java.sql.Connection connection , java.sql.PreparedStatement statement ) { try { if ( ( statement != null ) && ( ! ( statement . isClosed () ) ) ) { statement . close () ; } br.com.devmedia.jdbc.connection.JDBCConnection . close ( connection ) ; } catch ( java.sql.SQLException e ) { throw new java.lang.RuntimeException ( e . getMessage () , e ) ; } } 
private com.softserverinc.edu.entities.WorkLog getNewWorkLog ( java.lang.Long issueId ) { if ( getCurrentIssue ( issueId ) . getAssignee () . equals ( workLogSecurityService . getActiveUser () ) ) { com.softserverinc.edu.entities.WorkLog workLog = new com.softserverinc.edu.entities.WorkLog () ; workLog . setIssue ( getCurrentIssue ( issueId ) ) ; workLog . setUser ( workLogSecurityService . getActiveUser () ) ; return workLog ; } return null ; } 
@ java.lang.Override public eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry retrieveEuropeanaIdFromNew ( java.lang.String newId ) { java.util.List < eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry > retrList = datastore . find ( eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry . class ) . field ( eu.europeana.corelib.lookup.impl.EuropeanaIdRegistryMongoServerImpl.EID ) . equal ( newId ) . asList () ; if ( retrList . isEmpty () ) { return null ; } else { for ( eu.europeana.corelib.tools.lookuptable.EuropeanaIdRegistry entry : retrList ) { return entry ; } return null ; } } 
private static org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile createEmbeddedFile ( org.apache.pdfbox.pdmodel.PDDocument doc , java.io.InputStream zugferdFile ) throws java.io.IOException { java.util.Calendar now = java.util.Calendar . getInstance () ; io.konik.carriage.utils.ByteCountingInputStream countingIs = new io.konik.carriage.utils.ByteCountingInputStream ( zugferdFile ) ; org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile embeddedFile = new org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile ( doc , countingIs ) ; embeddedFile . addCompression () ; embeddedFile . setSubtype ( io.konik.carriage.pdfbox.PDFBoxInvoiceAppender.MIME_TYPE ) ; embeddedFile . setSize ( countingIs . getByteCount () ) ; embeddedFile . setCreationDate ( now ) ; embeddedFile . setModDate ( now ) ; return embeddedFile ; } 
@ java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > joinChannel ( java.lang.String channelName ) { com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > ( getNextMessageId () ) ; java.util.Map < java.lang.String , java.lang.String > arguments = new java.util.HashMap <> () ; arguments . put ( "token" , authToken ) ; arguments . put ( "name" , channelName ) ; postSlackCommand ( arguments , com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_JOIN_COMMAND , handle ) ; return handle ; } 
private void updateTables ( java.sql.Statement statement ) throws java.sql.SQLException { int version = getUserVersion ( statement ) ; if ( ( version > 0 ) && ( version < ( gui.Splash.DATABASE_VERSION ) ) ) { switch ( version ) { case 0 : statement . executeUpdate ( "alter table volumes add column favorite_volume tinyint(1) not null default '0';" ) ; statement . executeUpdate ( java.lang.String . format ( "alter table volumes add column date_add_volume text not null default '%s';" , utils.DateUtils . toString ( new java.util.Date () ) ) ) ; break; } } setUserVersion ( statement , Splash.DATABASE_VERSION ) ; } 
public static boolean deletePhSensor ( final java.lang.String name ) { java.lang.String realName = name . replace ( " " , "_" ) ; java.util.Iterator < com.sb.elsinore.inputs.PhSensor > iterator = com.sb.elsinore.LaunchControl.phSensorList . iterator () ; com.sb.elsinore.inputs.PhSensor tSensor ; while ( iterator . hasNext () ) { tSensor = iterator . next () ; if ( tSensor . getName () . equalsIgnoreCase ( realName ) ) { iterator . remove () ; return true ; } } return false ; } 
private edu.neu.ccs.pyramid.dataset.MultiLabel predictBySupport ( java.util.Vector vector ) { double [] probs = cbm . predictAssignmentProbs ( vector , support , piThreshold ) ; edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor generalF1Predictor = new edu.neu.ccs.pyramid.multilabel_classification.plugin_rule.GeneralF1Predictor () ; generalF1Predictor . setMaxSize ( maxSize ) ; return generalF1Predictor . predict ( cbm . getNumClasses () , support , probs ) ; } 
@ javax.annotation.Nonnull @ java.lang.Override public eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler [] getInstalledEventHandlers ( net.minecraft.item.ItemStack self ) { java.util.List < eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler > handlers = new java.util.ArrayList ( java.util.Arrays . asList ( getUpgrades ( self ) ) ) ; if ( ( self . hasTagCompound () ) && ( self . getTagCompound () . hasKey ( "plate" ) ) ) { handlers . add ( eiteam.esteemedinnovation.armor.exosuit.UtilPlates . getPlate ( self . getTagCompound () . getString ( "plate" ) ) ) ; } return handlers . toArray ( new eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler [ handlers . size () ] ) ; } 
public com.SIMRacingApps.Data setVolume ( double percentage ) { synchronized ( m_clips ) { for ( int i = 0 ; i < ( m_clips . size () ) ; i ++ ) { m_clips . get ( i ) . setVolume ( percentage ) ; } } synchronized ( m_volume ) { m_volume = percentage ; } return getVolume () ; } 
private boolean isSorted ( java.lang.Comparable [] c , int a , int b ) { for ( int i = b - 1 ; i >= a ; i -- ) { if ( org.magicminds.one.util.Sorter . less ( c [ ( i + 1 ) ] , c [ i ] ) ) { return false ; } } return true ; } 
public com.crossballbox.model.UserInfo saveUserInfo ( com.crossballbox.model.FamilyData familyData , com.crossballbox.model.UserHealthyState userHealthyState , com.crossballbox.model.UserAdditionalInfo userAdditionalInfo , java.lang.String imagePath , com.crossballbox.model.User user ) { int userId = user . getId () ; com.crossballbox.model.UserInfo userInfo = user . getUserInfo () ; if ( userInfo == null ) { userInfo = new com.crossballbox.model.UserInfo ( userId ) ; } userInfo . setFamilyData ( familyData ) ; userInfo . setUserHealthyState ( userHealthyState ) ; userInfo . setUserAdditionalInfo ( userAdditionalInfo ) ; userInfo . setUser ( user ) ; userInfoDAO . save ( userInfo ) ; return userInfo ; } 
public boolean ConnectDevices ( networkmodeling.core.modelgraph.NetworkGraphNode dev1 , networkmodeling.core.modelgraph.NetworkGraphNode dev2 ) { networkmodeling.core.modelgraph.NetworkGraphEdge newEdge = new networkmodeling.core.modelgraph.NetworkGraphEdge ( dev1 , dev2 ) ; if ( ! ( graphEdges . contains ( newEdge ) ) ) { graphEdges . add ( newEdge ) ; return true ; } return false ; } 
public static java.util.List paserLineEnd ( java.lang.String content ) { java.util.List < java.lang.Integer > lines = new java.util.ArrayList < java.lang.Integer > () ; int length = content . length () ; for ( int i = 0 ; i < length ; i ++ ) { if ( ( content . charAt ( i ) ) == '\n' ) { lines . add ( i ) ; } } return lines ; } 
@ java.lang.Override public synchronized void close ( org.apache.hadoop.mapreduce.TaskAttemptContext context ) throws java.io.IOException { try { this . officeWriter . close () ; } catch ( org.zuinnote.hadoop.office.format.mapreduce.OfficeWriterException e ) { org.zuinnote.hadoop.office.format.mapreduce.AbstractSpreadSheetDocumentRecordWriter.LOG . error ( e ) ; } finally { if ( ( this . currentReader ) != null ) { this . currentReader . close () ; } } } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { android.util.Log . i ( "FRIDGELOG" , "Broadcast has been received!" ) ; java.lang.String action = intent . getAction () ; if ( action . equals ( Intent.ACTION_BOOT_COMPLETED ) ) { android.util.Log . i ( "FRIDGELOG" , "Broadcast was caught by ACTION_BOOT" ) ; setUpAlarmManager ( context ) ; } else { android.util.Log . i ( "FRIDGELOG" , "Broadcast is creating notifications" ) ; showNotifications ( context ) ; } } 
@ java.lang.Override public java.util.List < dtu.cdio_final.shared.dto.MaterialDTO > getMaterials ( java.lang.String token ) throws dtu.cdio_final.shared.ServiceException , dtu.cdio_final.shared.TokenException { validateToken ( token ) ; java.util.List < dtu.cdio_final.shared.dto.MaterialDTO > result ; try { result = materialDao . getMaterialList () ; } catch ( dtu.cdio_final.server.dal.daointerfaces.DALException e ) { throw new dtu.cdio_final.shared.ServiceException ( e ) ; } return result ; } 
private void onKeysDownloadFailed ( final java.util.List < java.lang.String > userIds ) { if ( null != userIds ) { synchronized ( mUserKeyDownloadsInProgress ) { java.util.Map < java.lang.String , java.lang.Integer > deviceTrackingStatuses = mCryptoStore . getDeviceTrackingStatuses () ; for ( java.lang.String userId : userIds ) { mUserKeyDownloadsInProgress . remove ( userId ) ; deviceTrackingStatuses . put ( userId , org.matrix.androidsdk.crypto.MXDeviceList.TRACKING_STATUS_PENDING_DOWNLOAD ) ; } mCryptoStore . saveDeviceTrackingStatuses ( deviceTrackingStatuses ) ; } } mIsDownloadingKeys = false ; } 
@ java.lang.Override public void onError ( int response , java.lang.Exception e ) { if ( response == ( org.solovyev.android.checkout.ResponseCodes.ITEM_NOT_OWNED ) ) { inventory . load () . whenLoaded ( this ) ; } else { if ( ( listener () ) != null ) listener () . onConsumeFailed () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; if ( ( songs ) != null ) { outState . putParcelableArrayList ( "songs" , songs ) ; outState . putString ( "bandName" , bandName ) ; outState . putInt ( "position" , position ) ; } if ( ( mediaPlayer ) != null ) { outState . putDouble ( "songPosition" , timeElapsed ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { workoutId = savedInstanceState . getLong ( hfad.com.workout.WorkoutDetailFragment.WORKOUT_ID ) ; } else { android.support.v4.app.FragmentTransaction ft = getChildFragmentManager () . beginTransaction () ; hfad.com.workout.StopwatchFragment stopwatchFragment = new hfad.com.workout.StopwatchFragment () ; ft . replace ( R.id.stopwatch_container , stopwatchFragment ) ; ft . addToBackStack ( null ) ; ft . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_FADE ) ; ft . commit () ; } return inflater . inflate ( R.layout.fragment_workout_detail , container , false ) ; } 
public void multiply ( solver.Polynomial p ) { solver.Polynomial output = new solver.Polynomial () ; solver.Term current = p . getFirst () ; if ( ( first ) == null ) { first = p . getFirst () ; ( size ) ++ ; } else { while ( current != null ) { solver.Polynomial temp = new solver.Polynomial ( this . getFirst () ) ; temp . multiply ( current ) ; output . add ( temp ) ; current = current . getNext () ; } } } 
public void disableSessionChosing ( boolean value ) { sessionComboBox . setDisable ( value ) ; newSessionField . setDisable ( ( ( value || ( ( sessionComboBox . getValue () ) == null ) ) || ( ! ( sessionComboBox . getValue () . equals ( com.cbapps.reversi.client.LoginLayout.ITEM_NEW_SESSION ) ) ) ) ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.util.HashMap < java.lang.String , java.lang.Object > Data = ( ( java.util.HashMap < java.lang.String , java.lang.Object > ) ( dataSnapshot . getValue () ) ) ; v6.caique.ExploreFragment.Chats . get ( s ) . Title = ( ( java.lang.String ) ( Data . get ( "title" ) ) ) ; v6.caique.ExploreFragment.Chats . get ( s ) . Tags = ( ( java.util.ArrayList < java.lang.String > ) ( Data . get ( "tags" ) ) ) ; ReloadViews ( s ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { java.lang.String subreddit = viewHolder.nameInput . getText () . toString () ; if ( subreddit . equals ( "" ) ) { android.widget.Toast . makeText ( this , "Please enter a subreddit name" , Toast.LENGTH_SHORT ) . show () ; return; } performAdd ( subreddit ) ; viewHolder.nameInput . setText ( "" ) ; } 
@ java.lang.Override protected void doGet ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException , javax.servlet.ServletException { java.util.List < models.User > users = service . getUsersWithAuto () ; req . setAttribute ( "Title" , "Test java site page" ) ; if ( ( users . size () ) > 0 ) req . setAttribute ( "User" , users . get ( 0 ) . getName () ) ; req . setAttribute ( "userList" , users ) ; req . getRequestDispatcher ( "index.jsp" ) . forward ( req , resp ) ; } 
@ java.lang.Override public int colorMultiplier ( net.minecraft.block.state.IBlockState state , net.minecraft.world.IBlockAccess worldIn , net.minecraft.util.math.BlockPos pos , int tintIndex ) { int meta = state . getBlock () . getMetaFromState ( state ) ; if ( ( state . getBlock () ) instanceof zmaster587.libVulpes.block.BlockOre ) { zmaster587.libVulpes.api.material.Material mat = ( ( zmaster587.libVulpes.block.BlockOre ) ( state . getBlock () ) ) . ores [ meta ] ; if ( mat != null ) return mat . getColor () ; } return 16777215 ; } 
public javax.sound.sampled.Clip sound ( java.lang.String location ) { javax.sound.sampled.Clip clip = null ; java.net.URL url = getClass () . getResource ( location ) ; try { javax.sound.sampled.AudioInputStream ais = javax.sound.sampled.AudioSystem . getAudioInputStream ( url ) ; clip = javax.sound.sampled.AudioSystem . getClip () ; clip . open ( ais ) ; } catch ( javax.sound.sampled.LineUnavailableException e ) { e . printStackTrace () ; } catch ( javax.sound.sampled.UnsupportedAudioFileException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return clip ; } 
public boolean matches ( net.minecraft.world.World world , int x , int y , int z ) { net.minecraft.block.Block blockOf = world . getBlock ( x , y , z ) ; if ( ( blockOf . equals ( targetBlock ) ) && ( ( targetMetadata ) == ( - 1 ) ) ) return true ; if ( ( blockOf . equals ( targetBlock ) ) && ( ( targetMetadata ) == ( world . getBlockMetadata ( x , y , z ) ) ) ) return true ; return false ; } 
protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ( findViewById ( R.id.track_container ) ) != null ) { mTwoPane = true ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . replace ( R.id.track_container , new com.dkulon.spotifystreamer.Fragment.SearchTrackFragment () , "TrackFragment" ) . commit () ; } } } 
private void showLatLonPicker () { if ( fromGui ( mFilter ) ) { final android.app.FragmentManager manager = getFragmentManager () ; de.k3b.android.androFotoFinder.locationmap.LocationMapFragment dirDialog = new de.k3b.android.androFotoFinder.locationmap.LocationMapFragment () ; dirDialog . defineNavigation ( null , mFilter , ZoomUtil.NO_ZOOM , null ) ; dirDialog . show ( manager , de.k3b.android.androFotoFinder.GalleryFilterActivity.DLG_NAVIGATOR_TAG ) ; } } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { switch ( msg.what ) { case com.virtualightning.library.simple2develop.state.MainLoopCall.MSG_STATE_UPDATE : java.lang.Object [] objects = ( ( java.lang.Object [] ) ( msg.obj ) ) ; com.virtualightning.library.simple2develop.state.StateMediator mediator = ( ( com.virtualightning.library.simple2develop.state.StateMediator ) ( objects [ 0 ] ) ) ; msg.obj = null ; if ( ( msg.arg1 ) == ( mediator . getSequenceId () ) ) mediator . updateObserver ( ( ( java.lang.Object [] ) ( objects [ 1 ] ) ) ) ; break; } } 
private void initRecyclerView ( android.view.View view ) { android.util.Log . d ( com.example.andrew.prokhor.eyecare.ui.fragments.MainFragment.LOG_TAG , "initRecyclerView()" ) ; mAdapter = new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorRecyclerViewAdapter ( getActivity () , this ) ; android.support.v7.widget.RecyclerView.LayoutManager layoutManager = new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( view . findViewById ( R.id.logsRecyclerView ) ) ) ; mRecyclerView . setAdapter ( mAdapter ) ; mRecyclerView . setLayoutManager ( layoutManager ) ; android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorItemTouchHelperCallback ( mAdapter ) ; android.support.v7.widget.helper.ItemTouchHelper touchHelper = new android.support.v7.widget.helper.ItemTouchHelper ( callback ) ; touchHelper . attachToRecyclerView ( mRecyclerView ) ; } 
@ java.lang.Override public long getDateHeader ( java.lang.String name ) { java.lang.String v = getHeader ( name ) ; if ( v == null ) { return - 1 ; } for ( java.text.DateFormat df : dateFormats ) { try { java.util.Date date = df . parse ( v ) ; return date . getTime () ; } catch ( java.text.ParseException pe ) {} } throw new java.lang.IllegalArgumentException ( ( "Unhandled date format: " + v ) ) ; } 
void generatesDeclarations ( java.lang.String expected ) { java.lang.String [] parseResult = parse () ; com.google.common.truth.Truth . assertThat ( parseResult [ 1 ] ) . isEmpty () ; java.lang.String actual = parseResult [ 0 ] ; java.lang.String stripped = DeclarationGeneratorTests.GOLDEN_FILE_COMMENTS_REGEXP . matcher ( actual ) . replaceAll ( "" ) ; if ( ! ( stripped . equals ( expected ) ) ) { failureStrategy . failComparing ( "compilation result doesn't match" , expected , stripped ) ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { java.lang.String text = forecastViewAdapter . getItem ( position ) ; android.content.Intent detailActivityIntent = new android.content.Intent ( getActivity () , com.example.sarh2o.sunshine.DetailActivity . class ) . putExtra ( Intent.EXTRA_TEXT , text ) ; startActivity ( detailActivityIntent ) ; } 
@ java.lang.Override protected void initSettings ( com.almasb.fxgl.settings.GameSettings settings ) { settings . setWidth ( 800 ) ; settings . setHeight ( 600 ) ; settings . setTitle ( "ParticleTextureSample" ) ; settings . setVersion ( "0.1" ) ; settings . setFullScreen ( false ) ; settings . setIntroEnabled ( false ) ; settings . setMenuEnabled ( false ) ; settings . setCloseConfirmation ( false ) ; settings . setProfilingEnabled ( true ) ; settings . setApplicationMode ( ApplicationMode.DEVELOPER ) ; } 
private java.util.Map < us.kbase.workspace.database.ObjectIdentifier , us.kbase.workspace.database.ObjectIDResolvedWS > checkPerms ( final us.kbase.workspace.database.WorkspaceUser user , final java.util.List < us.kbase.workspace.database.ObjectIdentifier > loi , final us.kbase.workspace.database.Permission perm , final java.lang.String operation ) throws us.kbase.workspace.database.exceptions.CorruptWorkspaceDBException , us.kbase.workspace.database.exceptions.InaccessibleObjectException , us.kbase.workspace.database.exceptions.WorkspaceCommunicationException { return checkPerms ( user , loi , perm , operation , false , false ) ; } 
@ java.lang.Override public T get ( int index ) { if ( ( size () ) <= index ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( index > 0 ) { current = current . getNext () ; index -- ; } return current . getData () ; } 
public void controller ( org.openmrs.ui.framework.fragment.FragmentModel model , @ org.openmrs.ui.framework.annotation.SpringBean org.openmrs.module.outgoingmessageexceptions.api.OutgoingMessageExceptionsService outgoingMessageExceptionsService , @ org.openmrs.ui.framework.annotation.FragmentParam ( value = "messageId" , required = true ) java.lang.Integer messageId ) throws java.io.IOException { java.lang.String message = outgoingMessageExceptionsService . getMessageById ( messageId ) ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; mapper . setDateFormat ( new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss.SSSSSS" ) ) ; org.openmrs.module.outgoingmessageexceptions.OutgoingMessage outgoingMessage = mapper . readValue ( message , org.openmrs.module.outgoingmessageexceptions.OutgoingMessage . class ) ; model . addAttribute ( "outgoingMessage" , outgoingMessage ) ; } 
@ java.lang.Override public void populateItem ( org.apache.wicket.markup.repeater.Item item , java.lang.String componentId , org.apache.wicket.model.IModel rowModel ) { com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType auditEventRecordType = ( ( com.evolveum.midpoint.xml.ns._public.common.audit_3.AuditEventRecordType ) ( rowModel . getObject () ) ) ; java.lang.String channel = auditEventRecordType . getChannel () ; if ( channel != null ) { javax.xml.namespace.QName channelQName = com.evolveum.midpoint.util.QNameUtil . uriToQName ( channel ) ; java.lang.String return_ = channelQName . getLocalPart () ; item . add ( new org.apache.wicket.markup.html.basic.Label ( componentId , return_ ) ) ; } } 
private synchronized void sendToAll ( Model.Message message ) { for ( java.net.Socket c : connectedUsers . keySet () ) { try { java.io.DataOutputStream dos = new java.io.DataOutputStream ( c . getOutputStream () ) ; dos . writeUTF ( message . toString () ) ; } catch ( java.io.IOException e ) { connectedUsers . remove ( c ) ; java.lang.System.out . println ( "Remove a user from connectedUsers collection" ) ; } } } 
@ java.lang.Override public void done ( List < com.angcyo.bmob.PasswordBmob > list , cn.bmob.v3.exception.BmobException e ) { List < java.lang.String > strings = new com.angcyo.bmob.ArrayList <> () ; if ( e == null ) { java.util.Collections . reverse ( list ) ; for ( com.angcyo.bmob.PasswordBmob bmob : list ) { if ( strings . contains ( bmob . getPassword () ) ) {} else { strings . add ( bmob . getPassword () ) ; } } } listener . onFind ( strings ) ; } 
protected java.lang.String buildHealthCheckString ( java.lang.String path , java.lang.String host ) { if ( ( ( path == null ) || ( path . equals ( "" ) ) ) || ( host == null ) ) { return "" ; } if ( ( path . startsWith ( "GET" ) ) || ( path . startsWith ( "POST" ) ) ) { return path ; } return ( ( ( "GET " + path ) + " HTTP/1.0\\r\\nHost: " ) + host ) + "\\r\\n\\r\\n" ; } 
public void deleteRecursive ( java.io.File path ) { java.io.File [] c = path . listFiles () ; if ( c == null ) return; for ( java.io.File file : c ) { if ( file . isDirectory () ) { deleteRecursive ( file ) ; file . delete () ; } else { file . delete () ; } } path . delete () ; } 
@ java.lang.Override void tableRowClicked ( int row , int col ) { o_removeLabel . setEnabled ( ( row != ( - 1 ) ) ) ; o_dismissLabel . setEnabled ( ( ( row != ( - 1 ) ) && ( o_item . getReminder ( row ) . isActive () ) ) ) ; o_linkReminderLabel . setEnabled ( ( row != ( - 1 ) ) ) ; } 
public void onClick ( android.content.DialogInterface dialog , int id ) { android.widget.ListView lw = ( ( android.app.AlertDialog ) ( dialog ) ) . getListView () ; int selected = - 1 ; if ( ( lw . getTag () ) != null ) { selected = ( ( java.lang.Integer ) ( lw . getTag () ) ) ; } exportExpensesXLS ( selected ) ; } 
public final void setStartDate ( java.util.Date startDate ) { if ( ( ( this . startDate ) == null ) || ( ! ( this . startDate . equals ( startDate ) ) ) ) { if ( ( ( startDate != null ) && ( ( endDate ) != null ) ) && ( endDate . before ( startDate ) ) ) { throw new de.invation.code.toval.validate.ParameterException ( "The start date must be before the end date of the filter." ) ; } this . startDate = startDate ; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter . setChanged () ; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter . notifyObservers () ; } } 
@ android.support.annotation.RequiresApi ( value = android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 ) @ java.lang.Override public void sendBroadcastAsUser ( final android.content.Intent intent , final android.os.UserHandle user , final java.lang.String receiverPermission ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendBroadcastAsUser ( intent , user , receiverPermission ) ; } } ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( getArguments () ) != null ) { mParam1 = getArguments () . getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM1 ) ; mParam2 = getArguments () . getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM2 ) ; } } 
public void switchState ( org.usfirst.frc.team2984.robot.subsystems.DriveTrain.State state ) { if ( state == ( this . driveState ) ) { return; } if ( state == null ) { state = this . driveState ; } switch ( state ) { case VOLTAGE_CONTROL : this . configureTalonsVoltage () ; break; case SPEED_CONTROL : this . configureTalonsSpeed () ; break; case DISTANCE_CONTROL : this . configureTalonsDistance () ; } this . driveState = state ; } 
public static boolean oresExist ( java.lang.String . . . names ) { for ( java.lang.String name : names ) { if ( ! ( net.minecraftforge.oredict.OreDictionary . doesOreNameExist ( name ) ) ) { return false ; } if ( net.minecraftforge.oredict.OreDictionary . getOres ( name ) . isEmpty () ) { return false ; } } return true ; } 
private static net.sf.json.JSONObject exchangeDates ( net.sf.json.JSONObject ex , net.sf.json.JSONObject inter , java.text.DateFormat format ) { java.lang.String dob = "dob" ; java.lang.String dod = "dod" ; if ( ex . containsKey ( dob ) ) { inter . put ( "date_of_birth" , format . format ( org.phenotips.studies.family.internal.JsonAdapterImpl . pedigreeDateToDate ( ex . getJSONObject ( dob ) ) ) ) ; } if ( ex . containsKey ( dod ) ) { inter . put ( "date_of_death" , format . format ( org.phenotips.studies.family.internal.JsonAdapterImpl . pedigreeDateToDate ( ex . getJSONObject ( dod ) ) ) ) ; } return inter ; } 
private double calcMaxMana ( int level ) { if ( level < 10 ) { return 0 ; } double a = java.lang.Math . pow ( 1.01 , ( level / 10 ) ) ; double b = 0.01 * ( ( java.lang.Math . pow ( 1.15 , ( level - 10 ) ) ) - 1 ) ; return ( ( java.lang.Math . log ( ( a + b ) ) ) / ( java.lang.Math . log ( 1.0001 ) ) ) + 1 ; } 
@ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( ( hasUnicodeChar ( literal ) ) && ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } } 
public void putDoubleArray ( final double [] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "{id}/stavke" ) @ javax.ws.rs.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) public java.util.List < rs.ac.uns.ftn.xws.entities.payments.InvoiceItem > findAllItems ( @ javax.ws.rs.PathParam ( value = "PIB" ) java.lang.String PIB , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.String id ) throws java.lang.Exception { rs.ac.uns.ftn.xws.entities.payments.Invoice retVal = null ; retVal = invoiceDao . findById ( java.lang.Long . parseLong ( id ) ) ; if ( retVal . getSupplierTIN () . equals ( PIB ) ) return retVal . getInvoiceItems () . getInvoiceItem () ; return null ; } 
static void updateChannelsPositionsInMember ( com.hazelcast.core.Member member , java.util.Map < java.lang.Short , java.lang.Long > update ) { java.util.HashMap < java.lang.Short , java.lang.Long > positions = eu.modernmt.cluster.NodeInfo . fromString ( member . getStringAttribute ( eu.modernmt.cluster.NodeInfo.DATA_CHANNELS_ATTRIBUTE ) ) ; for ( java.util.Map.Entry < java.lang.Short , java.lang.Long > position : update . entrySet () ) { positions . put ( position . getKey () , position . getValue () ) ; } member . setStringAttribute ( eu.modernmt.cluster.NodeInfo.DATA_CHANNELS_ATTRIBUTE , eu.modernmt.cluster.NodeInfo . toString ( positions ) ) ; } 
public boolean equals ( java.lang.String metricName , java.lang.String queueName , int periodicity , int queueCapacity ) { return ( ( ( this . metricName . equals ( metricName ) ) && ( this . queueName . equals ( queueName ) ) ) && ( ( this . periodicity ) == periodicity ) ) && ( ( this . queueCapacity ) == queueCapacity ) ; } 
public static void init ( android.content.Context context ) { com.android.contacts.incall.InCallPluginHelper helper = com.android.contacts.incall.InCallPluginHelper . getInstance () ; helper.mContext = context ; helper.mClient = AmbientConnection.CLIENT . get ( context ) ; helper.mInCallApi = com.cyanogen.ambient.incall.InCallServices . getInstance () ; helper.mMainHandler = new android.os.Handler ( context . getMainLooper () ) ; com.android.contacts.incall.InCallPluginHelper . refresh () ; } 
@ java.lang.Override public void attachToBaseObject ( final org.sablo.IChangeListener changeMonitor , org.sablo.IWebObjectContext webObjectContext ) { this . changeMonitor = changeMonitor ; this . webObjectContext = webObjectContext ; java.util.List < WT > wrappedBaseList = getWrappedBaseList () ; int i = 0 ; for ( WT el : wrappedBaseList ) { attachToBaseObject ( i , el , false , true ) ; i ++ ; } if ( isChanged () ) changeMonitor . valueChanged () ; } 
public static com.example.hotel.dto.AllocationEntityDataDTO map2DTO ( com.example.hotel.models.AllocationEntity allocationEntity ) { com.example.hotel.dto.AllocationEntityDataDTO allocationEntityDataDTO = new com.example.hotel.dto.AllocationEntityDataDTO () ; allocationEntityDataDTO . setRoomID ( allocationEntity . getId () ) ; allocationEntityDataDTO . setNumber ( allocationEntity . getNumber () ) ; allocationEntityDataDTO . setType ( allocationEntity . getType () . name () ) ; allocationEntityDataDTO . setAvailability ( allocationEntity . getAvailability () ) ; allocationEntityDataDTO . setCapacity ( allocationEntity . getCapacity () ) ; allocationEntityDataDTO . setCost ( allocationEntity . getPrice () ) ; return allocationEntityDataDTO ; } 
@ java.lang.Override public za.org.grassroot.services.Group saveGroup ( za.org.grassroot.services.Group groupToSave , boolean createGroupLog , java.lang.String description , java.lang.Long changedByuserId ) { za.org.grassroot.services.Group group = groupRepository . save ( groupToSave ) ; if ( createGroupLog ) { za.org.grassroot.services.GroupLog groupLog = groupLogRepository . save ( new za.org.grassroot.services.GroupLog ( groupToSave . getId () , changedByuserId , za.org.grassroot.core.enums.GroupLogType.GROUP_UPDATED , 0L , description ) ) ; } return group ; } 
public static boolean logOut ( java.util.UUID sId ) { if ( ! ( org.bgu.domain.facades.UserFacade.sessions . containsKey ( sId ) ) ) return false ; org.bgu.domain.facades.Session session = org.bgu.domain.facades.UserFacade.sessions . get ( sId ) ; if ( ! ( session._forum . logOut ( session._member . getUserName () ) ) ) return false ; return true ; } 
static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.across ) + ( w.length ) ) >= ( boxes.length ) ; } return ( ( w.start.down ) + ( w.length ) ) >= ( boxes [ w.start.across ] . length ) ; } 
public java.util.List < com.example.agathe.tsgtest.dto.Contact > getPrivateContacts ( int numberOfContacts ) { java.util.List < com.example.agathe.tsgtest.dto.Contact > contacts = null ; com.olab.smplibrary.SMPLibrary . GetPrivateContacts ( context , numberOfContacts , new com.olab.smplibrary.DataResponseCallback () { @ java.lang.Override public void OnResponse ( int response_code , java.lang.String data_response ) { android.util.Log . i ( "MainActivity:Response" , ( "GetPrivateContacts response code " + response_code ) ) ; android.util.Log . i ( "MainActivity:Response" , ( "GetPrivateContacts - " + data_response ) ) ; } } ) ; return contacts ; } 
@ java.lang.Override public void migrate ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } } 
public void set ( double time , us.ihmc.robotics.geometry.FrameOrientation orientation , us.ihmc.robotics.geometry.FrameVector angularVelocity ) { checkReferenceFrameMatch ( orientation ) ; checkReferenceFrameMatch ( angularVelocity ) ; this . time . set ( time ) ; this . orientation . set ( orientation . getQuaternion () ) ; this . angularVelocity . set ( angularVelocity . getVector () ) ; } 
public static void post ( java.lang.String text , long language , long version ) { java.lang.System.out . println ( text ) ; models.Language lang = models.Language . findById ( language ) ; models.Version ver = models.Version . findById ( version ) ; models.Paste paste = new models.Paste ( text , lang , ver ) ; paste . save () ; controllers.PasteController . view ( paste.id ) ; } 
protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_fragment ) ; radioGroup = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.rg_tab ) ) ) ; fragmentManager = getFragmentManager () ; radioGroup . setOnCheckedChangeListener ( radioGroupListener ) ; gattServiceIntent = new android.content.Intent ( this , edu.nthu.nmsl.itri_app.BluetoothLeService . class ) ; bindService ( gattServiceIntent , mServiceConnection , android.content.Context.BIND_AUTO_CREATE ) ; } 
com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } 
@ java.lang.Override protected void loadFileSystem ( final com.linxonline.mallet.io.filesystem.FileSystem _fileSystem ) { com.linxonline.mallet.util.logger.Logger . println ( "Finalising filesystem." , Logger.Verbosity.MINOR ) ; com.linxonline.mallet.io.filesystem.GlobalFileSystem . setFileSystem ( _fileSystem ) ; com.linxonline.mallet.util.logger.Logger . println ( "Mapping Base directory." , Logger.Verbosity.MINOR ) ; if ( ( com.linxonline.mallet.io.filesystem.GlobalFileSystem . mapDirectory ( "base/" ) ) == false ) { com.linxonline.mallet.util.logger.Logger . println ( "Failed to map base directory." , Logger.Verbosity.MINOR ) ; } } 
public static void drawString ( java.awt.Graphics g , int x , int y , java.awt.Font font , java.awt.Color color , java.lang.String . . . strings ) { if ( font != null ) g . setFont ( font ) ; if ( color != null ) g . setColor ( color ) ; sokoban.game.utils.TextDrawer . drawString ( g , x , y , strings ) ; } 
public com.jagrosh.jdautilities.commandclient.Command build ( java.util.function.BiConsumer < com.jagrosh.jdautilities.commandclient.Command , com.jagrosh.jdautilities.commandclient.CommandEvent > execution ) { return new com.jagrosh.jdautilities.commandclient.CommandBuilder.BlankCommand ( name , help , category , arguments , guildOnly , requiredRole , ownerCommand , cooldown , userPermissions , botPermissions , aliases . toArray ( new java.lang.String [ aliases . size () ] ) , children . toArray ( new com.jagrosh.jdautilities.commandclient.Command [ children . size () ] ) , helpBiConsumer , usesTopicTags , cooldownScope ) { @ java.lang.Override protected void execute ( com.jagrosh.jdautilities.commandclient.CommandEvent event ) { execution . accept ( this , event ) ; } } ; } 
private void restoreCursor ( org.eclipse.swt.widgets.Control control ) { if ( control . isDisposed () ) { return; } org.eclipse.swt.graphics.Cursor oldCursor = ( ( org.eclipse.swt.graphics.Cursor ) ( control . getData ( "pdetools-old-cursor" ) ) ) ; if ( ( oldCursor != null ) && ( oldCursor . isDisposed () ) ) { oldCursor = null ; } control . setCursor ( oldCursor ) ; } 
@ java.lang.Override protected void onSelectionChanged ( int selStart , int selEnd ) { super . onSelectionChanged ( selStart , selEnd ) ; if ( ( state ) == null ) { return; } if ( selStart == selEnd ) { changeSpanStateBySelection ( selStart ) ; } else { changeSpanStateBySelection ( selStart , selEnd ) ; } } 
public net.minecraftforge.common.config.Property getProp ( net.minecraftforge.common.config.Configuration cfg , java.lang.String category , java.lang.reflect.Field field , java.lang.Object instance , java.lang.String comment ) { return cfg . get ( category , field . getName () , com.google.common.primitives.Ints . toArray ( java.util.Arrays . asList ( ( ( java.lang.Integer [] ) ( net.minecraftforge.common.config.TypeAdapters.TypeAdapter . getObject ( instance , field ) ) ) ) ) , comment ) ; } 
@ java.lang.Override public long check ( com.parallels.desktopcloud.ParallelsDesktopVMSlaveComputer c ) { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Check VM computer %s" , c . getName () ) ; if ( c . isIdle () ) { try { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Disconnecting computer..." ) ; c . disconnect ( null ) . get () ; c . getNode () . terminate () ; } catch ( java.lang.Exception e ) { com.parallels.desktopcloud.ParallelsDesktopCloudRetentionStrategy.LOGGER . log ( java.util.logging.Level.SEVERE , "Error: %s" , e ) ; } } return 1 ; } 
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } 
@ java.lang.Override public org.wso2.siddhi.core.event.stream.StreamEvent find ( org.wso2.siddhi.core.event.state.StateEvent matchingEvent , java.lang.Object candidateEvents , org.wso2.siddhi.core.event.stream.StreamEventCloner candidateEventCloner ) { this . initExpressionLogic () ; java.util.List < org.wso2.carbon.analytics.datasource.commons.Record > records = this . findRecords ( matchingEvent , candidateEvents , false ) ; return org.wso2.carbon.analytics.eventtable.AnalyticsEventTableUtils . recordsToStreamEvent ( this . myAttrs , records ) ; } 
private java.lang.String firstSet ( java.lang.String expression ) { int end = ( expression . indexOf ( Constants.CLOSE_SQUARE_BRACKET ) ) + 1 ; if ( ( expression . length () ) > end ) { java.lang.String quantifier = java.lang.String . valueOf ( expression . charAt ( end ) ) ; if ( isQuantifier ( quantifier ) ) { end ++ ; } } return expression . substring ( 0 , end ) ; } 
public se.plushogskolan.casemanagement.model.WorkItem save ( se.plushogskolan.restcaseservice.model.DTOWorkItem dtoWorkItem ) { se.plushogskolan.casemanagement.model.WorkItem workItem = se.plushogskolan.restcaseservice.model.DTOWorkItem . toEntity ( dtoWorkItem ) ; try { workItem = service . save ( workItem ) ; } catch ( se.plushogskolan.casemanagement.exception.AlreadyPersistedException e ) { throw new se.plushogskolan.restcaseservice.exception.ConflictException ( e . getMessage () ) ; } catch ( se.plushogskolan.casemanagement.exception.InternalErrorException e ) { throw new se.plushogskolan.restcaseservice.exception.WebInternalErrorException ( e . getMessage () ) ; } return workItem ; } 
public int getIndexFromValue ( java.lang.String [] list , java.lang.String v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( list [ i ] . equals ( v ) ) return i ; } return 0 ; } 
@ java.lang.Override public java.util.Map < java.lang.String , java.lang.String > getLocalCredentials ( org.fogbowcloud.manager.occi.request.Request request ) { if ( request == null ) { return org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , LocalCredentialsHelper.FOGBOW_DEFAULTS ) ; } java.util.Map < java.lang.String , java.lang.String > credentialsPerMember = org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , request . getRequestingMemberId () ) ; if ( ! ( credentialsPerMember . isEmpty () ) ) { return credentialsPerMember ; } return org.fogbowcloud.manager.core.plugins.localcredentails.LocalCredentialsHelper . getCredentialsPerRelatedLocalName ( this . properties , LocalCredentialsHelper.FOGBOW_DEFAULTS ) ; } 
@ java.lang.Override public com.example.android.uamp.ui.tv.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent ) { android.util.Log . d ( com.example.android.uamp.ui.tv.CardPresenter.TAG , "onCreateViewHolder" ) ; com.example.android.uamp.ui.tv.CardPresenter.mContext = parent . getContext () ; android.support.v17.leanback.widget.ImageCardView cardView = new android.support.v17.leanback.widget.ImageCardView ( com.example.android.uamp.ui.tv.CardPresenter.mContext ) ; cardView . setFocusable ( true ) ; cardView . setFocusableInTouchMode ( true ) ; return new com.example.android.uamp.ui.tv.CardPresenter.CardViewHolder ( cardView ) ; } 
private java.lang.String getScreenType ( usbong.android.builder.models.details.ImageScreenDetails imageScreenDetails ) { if ( ImagePosition.ABOVE_TEXT . getName () . equals ( imageScreenDetails . getImagePosition () ) ) { if ( imageScreenDetails . isHasCaption () ) { return UsbongScreenType.CLICKABLE_IMAGE_TEXT_DISPLAY . getName () ; } else { return UsbongScreenType.IMAGE_TEXT_DISPLAY . getName () ; } } else { if ( imageScreenDetails . isHasCaption () ) { return UsbongScreenType.TEXT_CLICKABLE_IMAGE_DISPLAY . getName () ; } else { return UsbongScreenType.TEXT_IMAGE_DISPLAY . getName () ; } } } 
private void processEvent ( round_robin.Event event ) { switch ( event . getType () ) { case Event.NEW_PROCESS : createProcess () ; break; case Event.SWITCH_PROCESS : switchProcess () ; break; case Event.END_PROCESS : endProcess () ; break; case Event.IO_REQUEST : processIoRequest () ; break; case Event.END_IO : endIoOperation () ; break; } } 
public void transposeUp ( android.view.View v ) { org.jsoup.nodes.Document doc = org.jsoup.Jsoup . parse ( currentSong.content , "UTF-8" ) ; org.jsoup.select.Elements chords = doc . select ( "span" ) ; for ( org.jsoup.nodes.Element e : chords ) { e . text ( transposeChord ( e . text () , sk.matus.ksp.guitarist_swiss_knife.SongViewActivity.UP ) ) ; } currentSong.content = doc . toString () ; displaySong ( currentSong ) ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Void aVoid ) { if ( flag [ 0 ] ) { finish () ; android.content.Intent intent = new android.content.Intent ( this , com.vladimircvetanov.smartfinance.MainActivity . class ) ; startActivity ( intent ) ; com.vladimircvetanov.smartfinance.message.Message . message ( this , "Successful logged in." ) ; } else { com.vladimircvetanov.smartfinance.message.Message . message ( this , "Wrong email or password." ) ; } } 
public void Connect ( android.bluetooth.BluetoothDevice device ) { android.bluetooth.BluetoothSocket tmp = null ; try { tmp = device . createRfcommSocketToServiceRecord ( java.util.UUID . fromString ( mUUID ) ) ; com.example.ibrahim.myapplication.BluetoothChat.ConnectThread CT = new com.example.ibrahim.myapplication.BluetoothChat.ConnectThread ( tmp ) ; CT . start () ; } catch ( java.io.IOException e ) {} } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( visibilityCheck . isChecked () ) { if ( mainActivity.schoolsToView . contains ( values [ position ] ) ) { mainActivity.schoolsToView . remove ( values [ position ] ) ; } else { mainActivity.schoolsToView . add ( values [ position ] ) ; } } else { if ( mainActivity.schoolsToView . contains ( values [ position ] ) ) { mainActivity.schoolsToView . remove ( values [ position ] ) ; } } mainActivity . viewCalendarList () ; } 
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; } 
public static void launchActivity ( android.content.Context context , java.lang.String full_name , java.lang.String name , java.lang.String repo_url , java.lang.String login ) { android.content.Intent intent = new android.content.Intent () ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.FULL_NAME , full_name ) ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.NAME , name ) ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.REPO_URL , repo_url ) ; intent . putExtra ( com.zpauly.githubapp.view.repositories.RepoContentActivity.LOGIN , login ) ; intent . setClass ( context , com.zpauly.githubapp.view.repositories.RepoContentActivity . class ) ; context . startActivity ( intent ) ; } 
public void signInEmail ( android.view.View v ) { setEmail ( true ) ; if ( ( ( mUsername ) != null ) && ( ( mPassword ) != null ) ) { setLoading ( true ) ; com.google.firebase.auth.FirebaseAuth . getInstance () . signInWithEmailAndPassword ( mUsername , mPassword ) . addOnFailureListener ( this ) . addOnCompleteListener ( this ) ; mDataListener . onLogin ( null ) ; } } 
@ java.lang.Override public void onBlur ( com.google.gwt.event.dom.client.BlurEvent event ) { if ( ( output . getText () . trim () . isEmpty () ) || ( ! ( output . getText () . trim () . matches ( FieldType.ALPHANUMERIC . getRegex () ) ) ) ) { groupOutput . setValidationState ( ValidationState.ERROR ) ; } else { groupOutput . setValidationState ( ValidationState.NONE ) ; } } 
public static void stopRingtone ( android.content.Context context ) { com.example.yink.amadeus.AlarmReceiver.settings = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; if ( com.example.yink.amadeus.AlarmReceiver.isPlaying ) { com.example.yink.amadeus.AlarmReceiver.editor = com.example.yink.amadeus.AlarmReceiver.settings . edit () ; com.example.yink.amadeus.AlarmReceiver.editor . putBoolean ( "alarm_toggle" , false ) ; com.example.yink.amadeus.AlarmReceiver.editor . apply () ; com.example.yink.amadeus.AlarmReceiver.m . release () ; com.example.yink.amadeus.AlarmReceiver.isPlaying = false ; } } 
public static org.apache.lens.cube.parse.ASTNode parseExpr ( java.lang.String expr ) throws org.apache.lens.server.api.error.LensException { org.apache.lens.cube.parse.ParseDriver driver = new org.apache.lens.cube.parse.ParseDriver () ; org.apache.lens.cube.parse.ASTNode tree ; try { tree = driver . parseExpression ( expr ) ; } catch ( org.apache.lens.cube.parse.ParseException e ) { throw new org.apache.lens.server.api.error.LensException ( org.apache.lens.cube.error.LensCubeErrorCode.COULD_NOT_PARSE_EXPRESSION . getLensErrorInfo () , e , expr ) ; } return org.apache.lens.cube.parse.ParseUtils . findRootNonNullToken ( tree ) ; } 
boolean isWrongSequence ( htsjdk.samtools.SAMRecord record ) { return ( ( procesingUnmapped ) && ( ! ( record . getReadUnmappedFlag () ) ) ) || ( ( ! ( procesingUnmapped ) ) && ( ( record . getReadUnmappedFlag () ) || ( ( ( ( shard.contig.referenceName ) != null ) && ( ! ( shard.contig.referenceName . isEmpty () ) ) ) && ( ! ( shard.contig.referenceName . equals ( record . getReferenceName () ) ) ) ) ) ) ; } 
@ java.lang.Override public void onDownloadStart ( java.lang.String url , java.lang.String userAgent , java.lang.String contentDisposition , java.lang.String mimetype , long contentLength ) { android.net.Uri uri = android.net.Uri . parse ( url ) ; android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , uri ) ; cordova . getActivity () . startActivity ( intent ) ; } 
@ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList < ? extends it.unibz.krdb.obda.model.OBDADataSource > list , it.unibz.krdb.obda.model.OBDADataSource value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { java.lang.String datasourceUri = value . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } 
public void updateSelection ( java.lang.String selection ) { java.util.Enumeration < javax.swing.AbstractButton > buttons = btns . getElements () ; while ( buttons . hasMoreElements () ) { javax.swing.JToggleButton b = ( ( javax.swing.JToggleButton ) ( buttons . nextElement () ) ) ; if ( b . getActionCommand () . equals ( selection ) ) { btns . clearSelection () ; b . setSelected ( true ) ; break; } } } 
public static java.lang.Class getGenericType ( java.lang.Class clazz ) { java.lang.reflect.Type [] genericInterfaces = clazz . getGenericInterfaces () ; for ( java.lang.reflect.Type genericInterface : genericInterfaces ) { if ( genericInterface instanceof java.lang.reflect.ParameterizedType ) { java.lang.reflect.Type [] genericTypes = ( ( java.lang.reflect.ParameterizedType ) ( genericInterface ) ) . getActualTypeArguments () ; if ( ( genericTypes.length ) > 0 ) { return ( ( java.lang.Class ) ( genericTypes [ 0 ] ) ) ; } } } return null ; } 
private void invokeExceptionRaisingHandler ( java.lang.Throwable expected ) throws java.lang.Exception { java.lang.reflect.Method method = org.springframework.web.method.support.InvocableHandlerMethodTests.ExceptionRaisingHandler . class . getDeclaredMethod ( "raiseException" ) ; java.lang.Object handler = new org.springframework.web.method.support.InvocableHandlerMethodTests.ExceptionRaisingHandler ( expected ) ; new org.springframework.web.method.support.InvocableHandlerMethod ( handler , method ) . invokeForRequest ( webRequest , null ) ; fail ( "Expected exception" ) ; } 
private java.lang.Object readArray ( com.cedarsoftware.util.io.JsonObject object ) throws java.io.IOException { final java.util.Collection array = new java.util.ArrayList () ; while ( true ) { skipWhitespace () ; final java.lang.Object o = readValue ( object ) ; if ( o != ( com.cedarsoftware.util.io.JsonParser.EMPTY_ARRAY ) ) { array . add ( o ) ; } final int c = skipWhitespaceRead () ; if ( c == ']' ) { break; } else if ( c != ',' ) { error ( "Expected ',' or ']' inside array" ) ; } } return array . toArray () ; } 
private static com.rgi.android.geopackage.GeoPackage createGeoPackage ( final java.lang.String tableName , final java.lang.String columnName , final java.io.File testFile ) throws com.rgi.android.geopackage.verification.ConformanceException , java.io.IOException , java.lang.ClassNotFoundException , java.sql.SQLException { com.rgi.android.geopackage.GeoPackage gpkg = new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.GeoPackage.OpenMode.Create ) ; gpkg . close () ; geopackage.GeoPackageSchemaAPITest . createTable ( tableName , columnName , testFile ) ; return new com.rgi.android.geopackage.GeoPackage ( testFile , com.rgi.android.geopackage.verification.VerificationLevel.None , com.rgi.android.geopackage.GeoPackage.OpenMode.Open ) ; } 
@ java.lang.Override public void onReceive ( com.home.pete.aquarium.Context context , com.home.pete.aquarium.Intent intent ) { boolean value = intent . getBooleanExtra ( "ACTION" , false ) ; com.home.pete.aquarium.Intent msg = new com.home.pete.aquarium.Intent ( "uv-state" ) ; msg . putExtra ( "ACTION" , value ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( context ) . sendBroadcast ( msg ) ; } 
@ java.lang.Override public void onAuthStateChanged ( @ android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { if ( ( firebaseAuth . getCurrentUser () ) == null ) { android.content.Intent loginIntent = new android.content.Intent ( this , com.mobapde.vince.mobapde.LoginActivity . class ) ; loginIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; finish () ; startActivity ( loginIntent ) ; } } 
@ org.apache.logging.log4j.core.config.plugins.PluginFactory public static io.cloudracer.LogMonitor createAppender ( @ org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "name" ) java.lang.String name , @ org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Layout" ) org.apache.logging.log4j.core.Layout < ? > layout , @ org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Filter" ) final org.apache.logging.log4j.core.Filter filter , @ org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "otherAttribute" ) java.lang.String otherAttribute ) { if ( name == null ) { io.cloudracer.LOGGER . error ( "No name provided for TestLog4j2Appender" ) ; return null ; } if ( layout == null ) { layout = org.apache.logging.log4j.core.layout.PatternLayout . createDefaultLayout () ; } return new io.cloudracer.LogMonitor ( name , filter , layout , true ) ; } 
@ com.banner.bannerApplication.controllers.RequestMapping ( method = RequestMethod.POST ) public org.springframework.web.servlet.ModelAndView AddSection ( @ com.banner.bannerApplication.controllers.RequestParam long courseID , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorFirstname , @ com.banner.bannerApplication.controllers.RequestParam java.lang.String ProfessorLastname , @ com.banner.bannerApplication.controllers.RequestParam int sectionnumber ) { com.banner.bannerApplication.entities.Course course = courseRepository . findOne ( courseID ) ; com.banner.bannerApplication.entities.Section n = new com.banner.bannerApplication.entities.Section () ; n . setFirstName ( ProfessorFirstname ) ; n . setLastName ( ProfessorLastname ) ; n . setSectionNumber ( sectionnumber ) ; sectionRepository . save ( n ) ; return new org.springframework.web.servlet.ModelAndView ( "redirect:/section" ) ; } 
protected void useAbility ( hackbotcore.Unit target ) { assert ( selected ) != null ; assert ( selectedAbility ) != null ; if ( selected . useAbility ( selectedAbility , target ) ) { for ( hackbotcore.Unit u : units ) if ( ( u.sectors . size () ) == 0 ) { units . remove ( u ) ; return; } } } 
@ java.lang.Override public boolean preHandle ( javax.servlet.http.HttpServletRequest req , javax.servlet.http.HttpServletResponse resp , java.lang.Object arg2 ) throws java.lang.Exception { javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; ar.edu.itba.it.paw.UserManager userManager = new ar.edu.itba.it.paw.SessionUserManager ( request ) ; if ( userManager . existsUser () ) { request . setAttribute ( "user" , userManager . getUser () ) ; } else { request . setAttribute ( "user" , null ) ; } return true ; } 
private java.util.Collection < org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode > reusableSequence ( final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode segment ) { final com.google.common.base.Optional < org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode < ? , ? > > maybeAsSequence = org.opendaylight.yangtools.yang.data.api.schema.NormalizedNodes . findNode ( segment , this . asPathChoice , this . asPathList , this . asPathSequence ) ; if ( maybeAsSequence . isPresent () ) { final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode asList = ( ( org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode ) ( maybeAsSequence . get () ) ) ; if ( ( asList . getSize () ) < 255 ) { return asList . getValue () ; } } return null ; } 
public void setIdCardInDB ( int idCardInDB ) { DataBase.DBData.connect = DB . getConnection () ; try { statement = DataBase.DBData.connect . createStatement () ; statement . executeUpdate ( ( "update listcollection.display_of_collection set lastCard= " + idCardInDB ) ) ; statement . close () ; closeResultSet () ; DB . closeDBConnection () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
boolean isAppActive ( org.luwrain.core.Application app ) { org.luwrain.core.NullCheck . notNull ( app , "app" ) ; if ( ( app == ( defaultApp ) ) && ( ( activeAppIndex ) < 0 ) ) return true ; if ( ( activeAppIndex ) < 0 ) return false ; if ( ( apps . get ( activeAppIndex ) . app ) == app ) return true ; return false ; } 
public int compare ( com.ct.girls.model.Girl arg0 , com.ct.girls.model.Girl arg1 ) { java.lang.Integer W0 = new java.lang.Integer ( arg0 . getBWH () . split ( " " ) [ 1 ] . substring ( 1 ) ) ; java.lang.Integer W1 = new java.lang.Integer ( arg1 . getBWH () . split ( " " ) [ 1 ] . substring ( 1 ) ) ; return W0 . compareTo ( W1 ) ; } 
@ java.lang.Override public void onSuccess ( java.lang.Object response ) { java.lang.String currentVolume = parseData ( ( ( java.lang.String ) ( response ) ) , "CurrentVolume" ) ; int iVolume = 0 ; try { iVolume = java.lang.Integer . parseInt ( currentVolume ) ; } catch ( java.lang.RuntimeException ex ) { ex . printStackTrace () ; } float fVolume = ( ( float ) ( iVolume / 100.0 ) ) ; com.connectsdk.core.Util . postSuccess ( listener , fVolume ) ; } 
@ java.lang.Override public boolean isAssignableBy ( com.github.javaparser.symbolsolver.model.typesystem.Type other ) { if ( other . isArray () ) { if ( ( baseType . isPrimitive () ) && ( other . asArrayType () . getComponentType () . isPrimitive () ) ) { return baseType . equals ( other . asArrayType () . getComponentType () ) ; } return baseType . isAssignableBy ( other . asArrayType () . getComponentType () ) ; } else if ( other . isNull () ) { return true ; } return false ; } 
@ java.lang.Override public void mouseMoved ( java.awt.event.MouseEvent me ) { if ( isSelected ( me . getX () , me . getY () ) ) { setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.HAND_CURSOR ) ) ; } else { setCursor ( java.awt.Cursor . getPredefinedCursor ( java.awt.Cursor.CROSSHAIR_CURSOR ) ) ; } } 
public void addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; } 
public boolean hasFullAccess ( org.spongepowered.api.entity.living.player.User user ) { me.ryanhamshire.griefprevention.PlayerData playerData = GriefPrevention.instance.dataStore . getPlayerData ( this . world , user . getUniqueId () ) ; if ( ( playerData != null ) && ( playerData.ignoreClaims ) ) { return true ; } if ( user . getUniqueId () . equals ( this . ownerID ) ) { if ( playerData.debugClaimPermissions ) { return false ; } return true ; } if ( ( this . parent ) != null ) { return this . parent . hasFullAccess ( user ) ; } return false ; } 
private void processMonitoringAfterEvent ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint , final java.lang.Object returnValue , final java.nio.ByteBuffer buffer ) { final java.lang.String className = getJoinPointClassName ( currentJoinPoint ) ; java.lang.String formattedReturnValue = extractJoinPointReturnValue ( className , returnValue ) ; if ( formattedReturnValue == null ) { formattedReturnValue = "" ; } buffer . putInt ( explorviz.live_trace_processing.main.MonitoringStringRegistry . getIdForString ( formattedReturnValue ) ) ; } 
< T extends java.lang.Comparable < T > > void doTest ( T [] input , T [] expected ) { java.util.List < T > list = java.util.Arrays . asList ( input ) ; org.apache.pdfbox.util.QuickSort . sort ( list ) ; boolean equal = java.util.Arrays . equals ( list . toArray ( new java.lang.Object [ input.length ] ) , expected ) ; assertTrue ( equal ) ; } 
public void add ( T n ) { heap . add ( null ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 0 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( n ) ) == 1 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; } heap . set ( index , n ) ; } 
public java.util.List < java.lang.String > getClusterAttributeList ( org.cytoscape.model.CyNetwork network ) { if ( network == null ) return new java.util.ArrayList < java.lang.String > () ; java.util.Collection < org.cytoscape.model.CyColumn > columns = network . getDefaultNodeTable () . getColumns () ; java.util.List < java.lang.String > intList = new java.util.ArrayList < java.lang.String > () ; for ( org.cytoscape.model.CyColumn column : columns ) { if ( column . getType () . equals ( java.lang.Integer . class ) ) { intList . add ( column . getName () ) ; } } return intList ; } 
@ java.lang.Override public void onBindViewHolder ( final org.cnx.android.adapters.LandingListRecyclerViewAdapter.ViewHolder holder , int position ) { org.cnx.android.beans.Content book = contentList . get ( position ) ; holder.bookTitle . setText ( book . getBookTitle () ) ; if ( ( ( holder.logo ) != null ) && ( ( book . getIcon () ) != null ) ) { holder.logo . setImageResource ( org.cnx.android.utils.CNXUtil . getCoverId ( book , context ) ) ; } } 
public void write ( org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage message ) throws java.io.IOException , org.eclipse.paho.client.mqttv3.MqttException { byte [] bytes = message . getHeader () ; byte [] pl = message . getPayload () ; out . write ( bytes , 0 , bytes.length ) ; out . write ( pl , 0 , pl.length ) ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < java.util.ArrayList < com.blocksolid.okrello.model.TrelloChecklist > > cardCall , retrofit2.Response < java.util.ArrayList < com.blocksolid.okrello.model.TrelloChecklist > > response ) { com.blocksolid.okrello.KeyResultsActivity.trelloCard . setChecklists ( response . body () ) ; com.blocksolid.okrello.KeyResultsActivity.keyResults = com.blocksolid.okrello.KeyResultsActivity.trelloCard . getKeyResultsCheckitems () ; java.util.Collections . sort ( com.blocksolid.okrello.KeyResultsActivity.keyResults ) ; keyResultAdapter . updateData ( com.blocksolid.okrello.KeyResultsActivity.keyResults ) ; com.blocksolid.okrello.KeyResultsActivity.keyresProgressBar . setVisibility ( View.INVISIBLE ) ; } 
@ java.lang.Override public void step ( neutrality.NeutralityModel model , int step , java.util.Optional < java.lang.Double > substep ) { if ( step == 0 ) { super . step ( model , step , substep ) ; } else { neutrality.MarketInfo mi = getModel () . getMarketInformation ( ( step - 1 ) ) ; double mktNetInvest = mi.nspNetworkInvestment ; makeNetworkInvestment ( step , mktNetInvest ) ; if ( getModel () . policyNSPContentAllowed ) { double mktVidInvest = mi.nspVideoInvestment ; makeContentInvestment ( step , mktVidInvest ) ; } else { makeContentInvestment ( step , 0 ) ; } } } 
public void setLocation ( float x , float y , float z ) { if ( ( index ) == ( - 1 ) ) { return; } org.lwjgl.openal.AL10 . alSource3f ( store . getSource ( index ) , AL10.AL_POSITION , x , y , z ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( isFavorite [ 0 ] ) { mDatabaseReferenceFavs . child ( trip . getId () ) . removeValue () ; unfavoriteTrip ( viewHolder.ivFavorite ) ; isFavorite [ 0 ] = false ; } else { mDatabaseReferenceFavs . child ( trip . getId () ) . setValue ( trip ) ; favoriteTrip ( viewHolder.ivFavorite ) ; isFavorite [ 0 ] = true ; } } 
public com.nanosai.gridops.ion.read.IonReader setSource ( com.nanosai.gridops.mem.MemoryBlock sourceMemoryBlock ) { this . source = sourceMemoryBlock.memoryAllocator.data ; this . index = sourceMemoryBlock.startIndex ; this . nextIndex = sourceMemoryBlock.startIndex ; this . sourceLength = sourceMemoryBlock . lengthWritten () ; this . intoIndexStackIndex = 0 ; this . scopeEndIndex = ( this . index ) + ( this . sourceLength ) ; return this ; } 
public void displayLendDetails ( org.bbt.kiakoa.model.Lend lend ) { if ( ( lendDetailsFragment ) != null ) { lendDetailsFragment . setLend ( lend ) ; } else { if ( lend != null ) { android.content.Intent intent = new android.content.Intent ( this , org.bbt.kiakoa.LendDetailsActivity . class ) ; intent . putExtra ( LendDetailsActivity.EXTRA_LEND , lend ) ; startActivity ( intent ) ; } } } 
private int calculateCC ( ast.graph.Graph graph ) { int offset ; offset = graph . getFinalNodes () . size () ; offset = ( offset == 1 ) ? offset - 1 : offset - 2 ; offset = 0 ; return ( ( graph . edgeCount () ) - ( ( graph . size () ) - offset ) ) + 2 ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int x = jDialog . getX () ; x = x + 10 ; if ( x > ( xStart ) ) { x = xStart ; if ( ( fadeOut ) != null ) { fadeOut . stop () ; } fadeOut = null ; jDialog . setVisible ( false ) ; } jDialog . setLocation ( x , y ) ; } 
public void insertText ( java.lang.String txt , com.ibm.util.merge.Bookmark bkm ) { if ( txt . matches ( "^\\s*$" ) ) { return; } int start = bkm . getStart () ; this . content . insert ( start , txt ) ; for ( com.ibm.util.merge.Bookmark theBookmark : this . bookmarks ) { if ( ( theBookmark . getStart () ) >= start ) { theBookmark . offest ( txt . length () ) ; } } return; } 
@ java.lang.Override public void onStart () { super . onStart () ; android.util.Log . i ( com.ford.emergencyconnect.ResponderCallToActionFragment.FRAGMENT_TAG , "onStart Enter" ) ; android.widget.Button yesResponse = ( ( android.widget.Button ) ( rootView . findViewById ( R.id.yesResponse ) ) ) ; yesResponse . setEnabled ( false ) ; yesResponse . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.util.Log . i ( com.ford.emergencyconnect.ResponderCallToActionFragment.FRAGMENT_TAG , "onClick() - Responder: YES" ) ; callback . onResponderCallToActionFragmentListener () ; } } ) ; } 
@ java.lang.Override public void setPrimaryItem ( android.view.ViewGroup container , int position , java.lang.Object object ) { super . setPrimaryItem ( container , position , object ) ; if ( ( ( ( getCurrentFragment () ) != object ) && ( object != null ) ) && ( object instanceof me.ccrama.redditslide.Fragments.CommentPage ) ) { mCurrentFragment = ( ( me.ccrama.redditslide.Fragments.CommentPage ) ( object ) ) ; if ( ! ( mCurrentFragment.loaded ) ) { if ( mCurrentFragment . isAdded () ) { mCurrentFragment . doAdapter ( true ) ; } } } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { if ( ( item . getItemId () ) == ( R.id.action_settings ) ) { android.content.Intent settingsIntent = new android.content.Intent ( this , com.stationmillenium.android.activities.SharedPreferencesActivity . class ) ; startActivity ( settingsIntent ) ; return true ; } else return super . onOptionsItemSelected ( item ) ; } 
private void printDatabase ( java.lang.String passphrase ) { java.util.ArrayList < java.lang.String > dbString = dbHandler . databaseToString ( passphrase ) ; java.lang.String [] arr = new java.lang.String [ dbString . size () ] ; for ( int i = 0 ; i < ( dbString . size () ) ; i ++ ) { arr [ i ] = dbString . get ( i ) ; } accountDisplay . setAdapter ( new android.widget.ArrayAdapter < java.lang.String > ( this , android.R.layout.simple_list_item_1 , arr ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( mFlashOn ) { runArtificialFlash () ; final android.os.Handler handler = new android.os.Handler () ; final java.lang.Runnable r = new java.lang.Runnable () { public void run () { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } ; handler . postDelayed ( r , 800 ) ; } else { mCamera . takePicture ( mShutterCallback , mRawCallback , null , mJPEGCallback ) ; } } 
private static com.oracle.truffle.r.runtime.nodes.RSyntaxNode getArgumentNode ( java.lang.Object arg ) { if ( arg instanceof com.oracle.truffle.r.runtime.data.RPromise ) { com.oracle.truffle.r.runtime.data.RPromise p = ( ( com.oracle.truffle.r.runtime.data.RPromise ) ( arg ) ) ; return p . getRep () . asRSyntaxNode () ; } else if ( ! ( arg instanceof com.oracle.truffle.r.runtime.data.RMissing ) ) { return com.oracle.truffle.r.nodes.access.ConstantNode . create ( arg ) ; } return null ; } 
public java.lang.String authenticatePersonalCloud ( java.lang.String cspCloudName , java.lang.String cloudName , java.lang.String password ) { biz.neustar.pc.ui.manager.impl.PersonalCloudManagerImpl.LOGGER . info ( "In authenticate cloud name {} and csp {}" , cloudName , cspCloudName ) ; com.sun.jersey.api.representation.Form form = new com.sun.jersey.api.representation.Form () ; form . add ( "password" , password ) ; biz.neustar.pcloud.ResponseData responseData = pcRestClient . post ( java.text.MessageFormat . format ( UIRestPathConstants.PERSONAL_CLOUD_AUTH_API , cspCloudName , cloudName ) , form ) ; return responseData . getBody () ; } 
public void getTextFromActivity () { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } 
private void importFile ( java.lang.String fileName ) throws java.io.IOException { if ( ! ( fileSelecMap . containsKey ( fileName ) ) ) { fileNameLists . add ( fileName ) ; fileList . setItems ( javafx.collections.FXCollections . observableArrayList ( fileNameLists ) ) ; } java.io.File f = new java.io.File ( ( ( ( application.Controller.currentProgramFolder ) + "/" ) + fileName ) ) ; fileSelecMap . put ( fileName , parseFile ( f ) ) ; } 
public void startNameActivity ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , io.exis.cards.cards.NameActivity . class ) ; intent . putExtra ( "screenName" , screenName ) ; startActivityForResult ( intent , 1 ) ; if ( ( android.os.Build.VERSION.SDK_INT ) >= 21 ) { overridePendingTransition ( R.anim.slide_in_right , R.anim.slide_out_left ) ; } } 
public void run ( int sleepTime ) { while ( ( ! ( _programComplete ) ) && ( ! ( com.laboon.SystemSettings . checkForStop () ) ) ) { if ( sleepTime > 0 ) { try { java.lang.Thread . sleep ( sleepTime ) ; } catch ( java.lang.InterruptedException iex ) {} } resetUpdates () ; _mp . highlightChar ( _pa , _x , _y ) ; executeOneStep () ; _mp . setStack ( _ps . toString () ) ; _mp . refresh ( _updateTa , _updateStack , _updateOutput ) ; } } 
protected java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } 
public void onDrawerItemClick ( android.view.View view ) { java.lang.String itemText = ( ( android.widget.TextView ) ( view ) ) . getText () . toString () ; if ( itemText . equals ( getString ( R.string.drawer_item_sign_out ) ) ) { progressDialog . show () ; accountHandler . signOut () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.afegeix : calcul_data () ; break; case R.id.dataInit : fromDatePickerDialog . show () ; break; case R.id.dataFi : toDatePickerDialog . show () ; break; } } 
public static boolean isPrefix ( java.lang.String name ) { return ( ( ( ( ( name == null ) || ( name . isEmpty () ) ) || ( ( name . charAt ( 0 ) ) == '_' ) ) || ( java.lang.Character . isLetter ( name . charAt ( 0 ) ) ) ) || ( ( name . charAt ( 0 ) ) == '?' ) ) || ( ( name . charAt ( 0 ) ) == '\\' ) ; } 
public static void changeCurrentPreference ( int pref_index , int value ) { if ( ( com.Veiled.Utils.PreferencesManipulation.userPrefs ) == null ) { com.Veiled.Utils.PreferencesManipulation.userPrefs = new int [] { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 } ; } com.Veiled.Utils.PreferencesManipulation.userPrefs [ pref_index ] = value ; } 
public void itemStateChanged ( java.awt.event.ItemEvent arg0 ) { if ( ( chkEnOHiHatA . isSelected () ) || ( chkEnOHiHatB . isSelected () ) ) { if ( ! ( cBoxPortOHiHat . isEnabled () ) ) cBoxPortOHiHat . setEnabled ( true ) ; } else { cBoxPortOHiHat . removeAll () ; cBoxPortOHiHat . addItem ( "" ) ; cBoxPortOHiHat . setEnabled ( false ) ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; java.lang.System.out . println ( "HomeFragment.onCreate" ) ; mPageChangeListener = new com.pratilipi.mobile.android.homescreen.home.HomeFragment.HomePageChangeListener () ; java.util.ArrayList < java.lang.String > stringArrayList = new java.util.ArrayList ( java.util.Arrays . asList ( mActivity . getResources () . getStringArray ( R.array.loading_quotes_array ) ) ) ; mProgressHandler = new com.pratilipi.mobile.android.widget.AnimatedProgressIndicator ( mActivity , stringArrayList ) ; } 
public boolean fits ( guitarchordmaker.Accord owning ) { return ( ( ( ( this . id ) == ( Accord.Coms.drawLines12 ) ) || ( ( this . id ) == ( Accord.Coms.drawLines6 ) ) ) || ( ( this . six ) && ( ( this . row ) < ( owning.seitenzahle ) ) ) ) || ( ( ! ( this . six ) ) && ( ( this . row ) <= ( owning.seitenzahle ) ) ) ; } 
public void onClickShowHideFilters ( android.view.View view ) { android.widget.LinearLayout button_filter = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.filters_container ) ) ) ; if ( ( button_filter . getVisibility () ) == ( android.view.View.GONE ) ) button_filter . setVisibility ( View.VISIBLE ) ; else { button_filter . setVisibility ( View.GONE ) ; android.widget.EditText editText_brand = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_client_code ) ) ) ; editText_brand . clearFocus () ; android.widget.EditText editText_client_code = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_client_code ) ) ) ; editText_client_code . clearFocus () ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( position != 0 ) { searchView . setText ( hotWords . get ( position ) , true ) ; removeCover ( true ) ; layoutSearch . performClick () ; } else { searchView . setText ( "" ) ; } } 
@ java.lang.Override public void onSetSwipeBackground ( com.h6ah4i.android.example.advrecyclerview.demo_ds_selection.MyDraggableSwipeableSelectableItemAdapter.MyViewHolder holder , int position , int type ) { int bgRes = 0 ; switch ( type ) { case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_NEUTRAL_BACKGROUND : bgRes = R.drawable.bg_swipe_item_neutral ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_LEFT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_left ; break; case com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager.DRAWABLE_SWIPE_RIGHT_BACKGROUND : bgRes = R.drawable.bg_swipe_item_right ; break; } holder.itemView . setBackgroundResource ( bgRes ) ; } 
public void openImageSelector ( android.view.View view ) { android.content.Intent intent ; if ( ( Build.VERSION.SDK_INT ) < 19 ) { intent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; } else { intent = new android.content.Intent ( android.content.Intent.ACTION_OPEN_DOCUMENT ) ; intent . addCategory ( Intent.CATEGORY_OPENABLE ) ; } intent . setType ( "image/*" ) ; startActivityForResult ( android.content.Intent . createChooser ( intent , "Select Picture" ) , pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.PICK_IMAGE_REQUEST ) ; } 
static void add ( java.lang.String list , java.lang.String back , java.lang.String url ) { java.lang.System.out . println ( clientside.JukePiCmd.server . addToList ( url , ( list . equals ( "wl" ) ? true : false ) , ( back . equals ( "b" ) ? false : true ) ) ) ; } 
@ java.lang.Override public java.lang.String getText ( mage.abilities.Mode mode ) { if ( ( ( staticText ) != null ) && ( ! ( staticText . isEmpty () ) ) ) { return staticText ; } if ( ( ( targetName ) != null ) && ( ( targetName . length () ) > 0 ) ) { return ( targetName ) + " doesn't untap during its controller's next untap step" ; } else { return ( "Target " + ( mode . getTargets () . get ( 0 ) . getTargetName () ) ) + " doesn't untap during its controller's next untap step" ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; mInputEdit = ( ( android.widget.EditText ) ( findViewById ( R.id.command_input_edit ) ) ) ; mResultBoard = ( ( android.widget.TextView ) ( findViewById ( R.id.result_board ) ) ) ; mResultBoard . setMovementMethod ( new android.text.method.ScrollingMovementMethod () ) ; findViewById ( R.id.run_command ) . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { runCommand () ; } } ) ; } 
private void updateGraph ( int phase , java.time.LocalDateTime phasetime ) { int min = phasetime . getMinute () ; int sec = phasetime . getSecond () ; double timer = min + ( sec / 60.0 ) ; this . phases [ ( phase - 1 ) ] . getData () . add ( new javafx.scene.chart.XYChart.Data <> ( ( ( double ) ( this . phaseCounter ) ) , timer ) ) ; ( this . phaseCounter ) ++ ; } 
public int flip ( java.lang.String imageId , boolean horizontal ) { com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe4b.edivator.backend.service.Image flippingImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeImageFromBlob ( key ) ; com.gruppe4b.edivator.backend.service.Transform transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; if ( horizontal == true ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; } else if ( horizontal == false ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeVerticalFlip () ; } com.gruppe4b.edivator.backend.service.Image flippedImage = imagesService . applyTransform ( transform , flippingImage ) ; int newId = 0 ; return newId ; } 
public static void generateDataForCourse ( java.lang.String courseName ) { long numOfInstr = ( teammates.client.scripts.DataGenerator.random . nextInt ( ( ( ( teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES ) - ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) + 1 ) ) ) + ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ; for ( int j = 0 ; j < numOfInstr ; j ++ ) { java.lang.String instrName = ( ( "Instr" + j ) + "_of_" ) + courseName ; teammates.client.scripts.DataGenerator.instructors . put ( instrName , courseName ) ; } teammates.client.scripts.DataGenerator . generateStudentsDataForCourse ( courseName ) ; } 
public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } } 
@ com.facebook.react.bridge.ReactMethod public void getFocalLength ( com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { android.hardware.Camera camera = com.lwansbrough.RCTCamera.RCTCamera . getInstance () . acquireCameraInstance ( options . getInt ( "type" ) ) ; if ( null == camera ) { promise . reject ( "No camera found." ) ; return; } promise . resolve ( com.lwansbrough.RCTCamera.RCTCamera . getInstance () . getFocalLength ( options . getInt ( "type" ) ) ) ; } 
private java.lang.Long matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ; } else { return null ; } } 
private static java.util.List < java.lang.Integer > generate ( int n ) { java.util.List < java.lang.Integer > factors = new java.util.ArrayList <> () ; if ( n == 1 ) { return factors ; } for ( int i = 2 ; i <= n ; i ++ ) { if ( ( n % i ) == 0 ) { factors . add ( i ) ; n /= i ; } } if ( factors . isEmpty () ) { factors . add ( n ) ; } return factors ; } 
private boolean isKeyWords ( char ch ) { if ( ( ( ch == '<' ) || ( ch == '>' ) ) || ( ch == '?' ) ) { return true ; } else if ( ch == '=' ) { return ( ( peekChar () ) == '"' ) || ( ( peekChar () ) == '\'' ) ; } else { return ( ch == '/' ) && ( ( peekChar () ) == '>' ) ; } } 
public boolean setInteractorHovered ( org.reactome.web.diagram.data.interactors.model.DiagramInteractor hovered ) { if ( ( mouseDown ) != null ) return false ; if ( ( hovered != null ) && ( hovered instanceof org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ) { hoveredInteractor = ( ( org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ( hovered ) ) ; } else { hoveredInteractor = null ; } return true ; } 
java.lang.Long performOperations ( Tree < java.lang.Integer > tree , OperationType operation ) { if ( operation == null ) { return performMixedOperations ( tree ) ; } else if ( operation . equals ( OperationType.INSERT ) ) { return performInserts ( tree ) ; } else if ( operation . equals ( OperationType.SEARCH ) ) { return performSearches ( tree ) ; } else if ( operation . equals ( OperationType.DELETE ) ) { return performDeletes ( tree ) ; } java.lang.System.out . println ( "An error occurred." ) ; return 0L ; } 
@ java.lang.Override public void onError ( java.lang.Throwable throwable ) { com.orhanobut.logger.Logger . e ( ( "There was a problem loading bus on line " + throwable ) ) ; throwable . printStackTrace () ; vista . showLoading ( false ) ; if ( throwable instanceof com.lowwor.realtimebus.domain.NetworkInteractor.NetworkUnavailableException ) { vista . showOffline ( true ) ; } else { vista . showOffline ( false ) ; } } 
public void setVariables ( java.util.Map < java.lang.Integer , java.lang.Object > data ) { if ( ( data != null ) && ( ( data . entrySet () . size () ) != 0 ) ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.Object > entry : data . entrySet () ) { binding . setVariable ( entry . getKey () , entry . getValue () ) ; } binding . executePendingBindings () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final VASL.build.module.OBA.Module mod = new VASL.build.module.OBA.Module ( this ) ; final VASL.build.module.OBA.CreateModule c = new VASL.build.module.OBA.CreateModule ( this , getModuleCount () , mod . getState () ) ; c . execute () ; VASSAL.build.GameModule . getGameModule () . sendAndLog ( c ) ; } 
public void remove ( T po ) { com.easy.player.database.SQLiteHelperOrm db = new com.easy.player.database.SQLiteHelperOrm () ; com.j256.ormlite.dao.Dao dao = null ; try { dao = db . getDao ( po . getClass () ) ; dao . delete ( po ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } finally { if ( dao != null ) { db . close () ; db = null ; } } } 
@ java.lang.Override public boolean onError ( io.vov.vitamio.MediaPlayer mp , int what , int extra ) { android.util.Log . e ( com.xugaoxiang.live_vtm.activity.MainActivity.TAG , ( ( ( ( "播放出错！" + "what:" ) + what ) + ",extra:" ) + extra ) ) ; android.widget.Toast . makeText ( this , ( ( ( "播放出错！what:" + what ) + ",extra:" ) + extra ) , Toast.LENGTH_LONG ) . show () ; return false ; } 
public static void startFirebasePhoneAuth ( android.content.Context context , xyz.belvi.baseauth_firebase.callbacks.FirebaseAuthListener authListener , @ android.support.annotation.StyleRes int styleRes ) { xyz.belvi.baseauth_firebase.auth.AuthHandler . init ( authListener ) ; context . startActivity ( new android.content.Intent ( context , xyz.belvi.baseauth_firebase.auth.FireAuthActivity . class ) . putExtra ( xyz.belvi.baseauth_firebase.auth.STYLE_KEY , styleRes ) . putExtra ( xyz.belvi.baseauth_firebase.auth.CODE_LENGTH , FirebaseAuthListener.AUTH_CODE_LENGTH ) . putExtra ( xyz.belvi.baseauth_firebase.auth.AUTH_MODE_KEY , AUTH_MODE.FIRE_BASE . name () ) ) ; } 
public void removeItem ( com.brothers.travelplanner.activities.priceplan.cart.CartDataModel item ) { for ( int index = 0 ; index < ( cartDataModelList . size () ) ; index ++ ) { if ( ( ( cartDataModelList . get ( index ) . index ) == ( item.index ) ) && ( ( cartDataModelList . get ( index ) . getId () ) == ( item . getId () ) ) ) { cartDataModelList . remove ( index ) ; } } notifyDataSetChanged () ; } 
public java.util.List < trackerApplication.entity.Vehicle > getVehiclesByUsername ( java.lang.String username ) { java.util.List < trackerApplication.entity.Vehicle > vehicles = new java.util.ArrayList <> () ; org.hibernate.Session session = trackerApplication.persistence.SessionFactoryProvider . getSessionFactory () . openSession () ; vehicles = ( ( java.util.List < trackerApplication.entity.Vehicle > ) ( session . get ( trackerApplication.entity.Vehicle . class , username ) ) ) ; logger . info ( ( "Username: " + username ) ) ; logger . info ( ( "Vehicles found: " + ( vehicles . size () ) ) ) ; return vehicles ; } 
private boolean updateVisibilityCheck ( boolean visible , com.android.internal.util.cm.LockscreenShortcutsHelper.Shortcuts shortcut ) { boolean customTarget = mShortcutHelper . isTargetCustom ( shortcut ) ; if ( customTarget ) { boolean isEmpty = mShortcutHelper . isTargetEmpty ( shortcut ) ; if ( isEmpty ) { visible = false ; } else { visible = true ; } } return visible ; } 
@ org.greenrobot.eventbus.Subscribe ( threadMode = org.greenrobot.eventbus.ThreadMode.MAIN ) public void onReceiveStateInMain ( com.tan.musicplayer.common.PlayerEvent.StateEvent event ) { mIsBusy = false ; android.util.Log . i ( com.tan.musicplayer.base.BasePlayerAcitvity.TAG , "onReceiveStateInMain: " ) ; if ( ( event.songs ) != null ) { mSongs = event.songs ; mCurrentTime = event.time ; mCurrentSongIndex = event.index ; mIsPlaying = event.isPlaying ; mDuration = mSongs . get ( mCurrentSongIndex ) . getFileDuration () ; onSetSongs () ; onReceiveServiceStateSuccess ( false ) ; mIsServiceEmpty = false ; } else { mIsServiceEmpty = true ; onReceiveServiceStateSuccess ( true ) ; } } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } 
private void handleForeignKeyInfo ( org.talend.mdm.commmon.metadata.MetadataRepository repository , org.talend.mdm.commmon.metadata.annotation.XmlSchemaAnnotationProcessorState state , org.w3c.dom.Element appInfo ) { java.lang.String path = appInfo . getTextContent () ; org.talend.mdm.commmon.metadata.FieldMetadata fieldMetadata = org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor . getFieldMetadata ( repository , ( ( org.talend.mdm.commmon.metadata.ComplexTypeMetadata ) ( state . getReferencedType () ) ) , appInfo , path , true ) ; state . setForeignKeyInfo ( fieldMetadata ) ; } 
public static java.lang.Boolean parseBoolean ( final java.lang.Object o ) { if ( o instanceof java.lang.String ) { if ( o . equals ( "true" ) ) { return java.lang.Boolean.TRUE ; } else if ( o . equals ( "false" ) ) { return java.lang.Boolean.FALSE ; } } else if ( o instanceof java.lang.Boolean ) { return ( ( java.lang.Boolean ) ( o ) ) ; } return null ; } 
public static com.flatworks.games.flatcraft.world.World simulateWorld ( com.flatworks.games.flatcraft.world.World world ) { com.flatworks.games.flatcraft.world.WorldGenerator . state ( "Simulating World..." ) ; for ( int i = 0 ; i < 200 ; i ++ ) { world . runTick ( true ) ; com.flatworks.games.flatcraft.world.WorldGenerator . progress ( ( 0.5F + ( ( ( float ) ( ( ( double ) ( i ) ) / ( ( double ) ( 200 ) ) ) ) * 0.5F ) ) ) ; } return world ; } 
public static boolean setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; return true ; } return false ; } 
@ java.lang.Override public boolean apply ( lu.zhe.mtgslackbot.card.Card card ) { if ( ( comparison ) == null ) { return false ; } java.lang.Integer intValue = lu.zhe.mtgslackbot.parsing.Parsing.PROPERTY_FUNCS . get ( property ) . apply ( card ) ; return ( intValue != null ) && ( intValue > ( comparison ) ) ; } 
@ java.lang.Override public void writeTo ( org.elasticsearch.common.io.stream.StreamOutput out ) throws java.io.IOException { super . writeTo ( out ) ; int numJobs = toKill . size () ; out . writeVInt ( numJobs ) ; for ( java.util.UUID job : toKill ) { out . writeLong ( job . getMostSignificantBits () ) ; out . writeLong ( job . getLeastSignificantBits () ) ; } } 
public void createContent ( org.eclipse.swt.widgets.Composite parent ) { createImages ( parent . getDisplay () ) ; parent . setLayout ( com.eclipsesource.example.ece2011.ui.admin.AdminUI . createMainLayout () ) ; org.eclipse.swt.widgets.Control upperPart = createUpperPart ( parent ) ; upperPart . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.TOP , true , false ) ) ; org.eclipse.swt.widgets.Control lowerPart = createLowerPart ( parent ) ; lowerPart . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.FILL , true , true ) ) ; changeTracker = new com.eclipsesource.example.ece2011.ui.admin.AdminUI.UiChangeTracker () ; changeTracker . start () ; } 
protected com.tcdi.zombodb.query_parser.rewriters.QueryBuilder build ( com.tcdi.zombodb.query_parser.rewriters.ASTExpansion node ) { com.tcdi.zombodb.query_parser.rewriters.QueryBuilder expansionBuilder = build ( node . getQuery () ) ; com.tcdi.zombodb.query_parser.rewriters.QueryParserNode filterQuery = node . getFilterQuery () ; if ( filterQuery != null ) { com.tcdi.zombodb.query_parser.rewriters.BoolQueryBuilder bqb = boolQuery () ; bqb . must ( expansionBuilder ) ; bqb . must ( build ( filterQuery ) ) ; expansionBuilder = applyVisibility ( bqb , node . getIndexLink () . getIndexName () ) ; } return expansionBuilder ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( path = "/initiative/{initiativeId}/model/section/{sectionId}" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.collectiveone.common.dto.GetResult < org.collectiveone.modules.model.dto.ModelSectionDto > getSection ( @ org.springframework.web.bind.annotation.PathVariable ( value = "initiativeId" ) java.lang.String initiativeIdStr , @ org.springframework.web.bind.annotation.PathVariable ( value = "sectionId" ) java.lang.String sectionIdStr , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "1" ) java.lang.Integer level ) { java.util.UUID initiativeId = java.util.UUID . fromString ( initiativeIdStr ) ; if ( ! ( initiativeService . canAccess ( initiativeId , getLoggedUserId () ) ) ) { return new org.collectiveone.common.dto.GetResult < org.collectiveone.modules.model.dto.ModelSectionDto > ( "error" , "access denied" , null ) ; } return modelService . getSection ( java.util.UUID . fromString ( sectionIdStr ) , getLoggedUserId () , level ) ; } 
private void lineLengthCalculator ( java.lang.String currentLine ) { ( totalLines ) ++ ; currentLine = currentLine . trim () ; java.lang.String [] str1 = currentLine . replaceAll ( "\\s+" , " " ) . replaceAll ( "\\W" , "" ) . split ( " " ) ; for ( java.lang.String s : str1 ) { lineLengthList . add ( s . length () ) ; totalCharacters += s . length () ; } } 
public static org.mifosplatform.infrastructure.scheduledemail.domain.EmailMessage pendingEmail ( final java.lang.Long externalId , final org.mifosplatform.portfolio.group.domain.Group group , final org.mifosplatform.portfolio.client.domain.Client client , final org.mifosplatform.organisation.staff.domain.Staff staff , final java.lang.String emailSubject , final java.lang.String message , final java.lang.String sourceAddress , final java.lang.String emailAddress , final java.lang.String campaignName ) { return new org.mifosplatform.infrastructure.scheduledemail.domain.EmailMessage ( externalId , group , client , staff , EmailMessageStatusType.PENDING , emailSubject , message , sourceAddress , emailAddress , campaignName ) ; } 
public ulm.university.news.controller.Ballot getBallot ( java.lang.String accessToken , int groupId , int ballotId , boolean withSubresources ) throws ulm.university.news.util.exceptions.ServerException { ulm.university.news.controller.Ballot ballot ; ulm.university.news.controller.User requestor = verifyUserAccess ( accessToken ) ; ulm.university.news.controller.GroupController.logger . debug ( ( "The requestor, i.e. the user with id {}, requests the ballot with the id {} from the group with" + " the id {}." ) , requestor . getId () , ballotId , groupId ) ; verifyGroupExistenceViaDB ( groupId ) ; verifyParticipationInGroupViaDB ( groupId , requestor . getId () ) ; ballot = getBallot ( groupId , ballotId , withSubresources ) ; return ballot ; } 
@ java.lang.Override public int compare ( main.java.addressBook.Person lhs , main.java.addressBook.Person rhs ) { if ( ( ( lhs . getFirstName () ) != null ) || ( ( rhs . getFirstName () ) != null ) ) { return lhs . getLastName () . concat ( lhs . getFirstName () ) . compareTo ( rhs . getLastName () . concat ( rhs . getFirstName () ) ) ; } else { return lhs . getLastName () . compareTo ( rhs . getLastName () ) ; } } 
public void run ( gov.sandia.n2a.backend.internal.Euler simulator ) { setFlag () ; for ( gov.sandia.n2a.language.type.Instance i : targets ) simulator . integrate ( i ) ; for ( gov.sandia.n2a.language.type.Instance i : targets ) i . update ( simulator ) ; for ( gov.sandia.n2a.language.type.Instance i : targets ) if ( ! ( i . finish ( simulator ) ) ) i . dequeue () ; } 
public java.lang.String toString ( final boolean reducedSize ) { if ( ( number ) == null ) { if ( reducedSize ) { return ( ( BaulastenPictureFinder.PATH_RS ) + ( BaulastenPictureFinder.SEP ) ) + ( file . toUpperCase () ) ; } else { return ( ( BaulastenPictureFinder.PATH ) + ( BaulastenPictureFinder.SEP ) ) + ( file . toUpperCase () ) ; } } else { return ( ( getFolder ( number , reducedSize ) ) + ( BaulastenPictureFinder.SEP ) ) + ( file . toUpperCase () ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "/" , "/" + ( co.porkopolis.utils.FileConstants.HOME_PAGE ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String home ( @ org.springframework.web.bind.annotation.ModelAttribute co.porkopolis.model.SummonerName summonerName , org.springframework.ui.Model model ) { if ( ( summonerName == null ) || ( ( summonerName . getName () ) == null ) ) { return co.porkopolis.utils.FileConstants.HOME_PAGE ; } co.porkopolis.model.BasicSummoner summoner = request . requestBasicSummoner ( summonerName . getName () ) ; if ( summoner != null ) { model . addAttribute ( AttributeConstants.BASIC_SUMMONER , summoner ) ; return co.porkopolis.utils.FileConstants.INDEX ; } else { model . addAttribute ( AttributeConstants.ERROR , ( ( "Summoner " + ( summonerName . getName () ) ) + " not found." ) ) ; return co.porkopolis.utils.FileConstants.HOME_PAGE ; } } 
@ be.kuleuven.cs.som.annotate.Raw private void setPosition ( hillbillies.model.Vector position ) { if ( ( this . world ) == null ) throw new java.lang.ClassCastException () ; if ( ! ( this . world . isPositionInWorld ( position ) ) ) throw new java.lang.IllegalArgumentException () ; this . position = position ; } 
@ java.lang.Override protected void onPageScrolled ( int position , float offset , int offsetPixels ) { if ( ( ( lastPagedReached ) && ( offset == 0 ) ) && ( ! ( swipeListenerCalled ) ) ) { if ( ( onSwipeListener ) != null ) { onSwipeListener . onAttemptedOnLastPage () ; swipeListenerCalled = true ; } } lastPagedReached = ( position + 1 ) == ( getAdapter () . getCount () ) ; super . onPageScrolled ( position , offset , offsetPixels ) ; } 
public static void main ( java.lang.String [] argv ) throws java.io.IOException { jrnnlm.core.RNNLMConfiguration conf = new jrnnlm.core.RNNLMConfiguration () ; conf.trainStreamFactory = new jrnnlm.io.FileInputStreamFactory ( new java.io.File ( "data/ptb.train.100.txt" ) ) ; conf.validFile = new java.io.File ( "data/ptb.valid.txt" ) ; conf.hiddenSize = 30 ; conf.maxIters = 50 ; conf.fastMath = true ; jrnnlm.core.RNNLM rnn = new jrnnlm.core.RNNLM ( conf ) ; jrnnlm.parallel.ParallelTrainer trainer = new jrnnlm.parallel.ParallelTrainer ( rnn , 4 ) ; trainer . train () ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public < T > org.apache.flink.streaming.partitioner.StreamPartitioner < T > getPartitioner ( java.lang.ClassLoader cl , java.lang.String output ) { org.apache.flink.streaming.partitioner.StreamPartitioner < T > partitioner = null ; try { partitioner = ( ( org.apache.flink.streaming.partitioner.StreamPartitioner < T > ) ( org.apache.flink.util.InstantiationUtil . readObjectFromConfig ( this . config , ( ( org.apache.flink.streaming.api.StreamConfig.PARTITIONER_OBJECT ) + output ) , cl ) ) ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( "Partitioner could not be instantiated." ) ; } return partitioner ; } 
public static AST.AST_CLASSDECL getClass ( java.lang.String className ) { java.util.List < AST.AST_CLASSDECL > classList = AST.SemanticChecker.program . getClassDeclList () . getListOfClassDecl () ; for ( AST.AST_CLASSDECL classDecl : classList ) { if ( classDecl.classId . equals ( className ) ) { return classDecl ; } } return null ; } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView , int newState ) { android.support.v7.widget.LinearLayoutManager layoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( recyclerView . getLayoutManager () ) ) ; int lastPosition = layoutManager . findLastCompletelyVisibleItemPosition () ; if ( lastPosition == ( ( mAdapter . getItemCount () ) - 1 ) ) { mListViewModel . loadNextPageZhihu ( lastPosition ) ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { switch ( requestCode ) { case com.cs246.bathroom.MapsActivity.MY_PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION : { if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { userLocation = true ; } else { userLocation = false ; } } } } 
@ java.lang.Override public org.jboss.invocation.Interceptor create ( final org.jboss.invocation.InterceptorFactoryContext context ) { final java.lang.reflect.Method method = SessionBeanHomeInterceptorFactory.INIT_METHOD . get () ; final java.lang.Object [] params = SessionBeanHomeInterceptorFactory.INIT_PARAMETERS . get () ; SessionBeanHomeInterceptorFactory.INIT_METHOD . remove () ; SessionBeanHomeInterceptorFactory.INIT_PARAMETERS . remove () ; return new org.jboss.as.ejb3.component.interceptors.AbstractEJBInterceptor () { @ java.lang.Override public java.lang.Object processInvocation ( final org.jboss.invocation.InterceptorContext context ) throws java.lang.Exception { if ( method != null ) { method . invoke ( context . getTarget () , params ) ; } return context . proceed () ; } } ; } 
private traer.physics.Particle createParticle ( int x , int y ) { synchronized ( m_particleSystem ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { if ( intent == null ) { return; } android.net.Uri uri = intent . getParcelableExtra ( "uri" ) ; com.lzh.nonview.router.extras.RouteBundleExtras extras = intent . getParcelableExtra ( "extras" ) ; com.lzh.nonview.router.Router . resume ( uri , extras ) . open ( context ) ; } 
public void resize ( int width , int height ) { camera.viewportWidth = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_HEIGHT ) / height ) * width ; camera . update () ; cameraGUI.viewportHeight = com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT ; cameraGUI.viewportWidth = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT ) / ( ( float ) ( height ) ) ) * ( ( float ) ( width ) ) ; cameraGUI.position . set ( ( ( cameraGUI.viewportWidth ) / 2 ) , ( ( cameraGUI.viewportHeight ) / 2 ) , 0 ) ; cameraGUI . update () ; } 
public void insertPerson ( org.rhok.linguist.code.entity.Person person ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = getDbValues ( person ) ; long personId = db . insert ( org.rhok.linguist.code.DatabaseHelper.PERSON_TABLE_NAME , null , values ) ; person.personid = ( ( int ) ( personId ) ) ; person.uploaded = false ; db . close () ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { try { makeMessageBox ( ( ( java.lang.String ) ( r [ p ] . invoke ( pet , new java.lang.Object [] {} ) ) ) ) ; } catch ( java.lang.IllegalAccessException e ) { e . printStackTrace () ; } catch ( java.lang.IllegalArgumentException e ) { e . printStackTrace () ; } catch ( java.lang.reflect.InvocationTargetException e ) { e . printStackTrace () ; } } 
private static java.lang.String inputStreamToString ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder responseStringBuilder = new java.lang.StringBuilder () ; java.lang.String line ; while ( ( line = reader . readLine () ) != null ) { responseStringBuilder . append ( line ) ; } return responseStringBuilder . toString () ; } 
@ java.lang.Override public java.lang.Object add ( java.lang.Object left , java.lang.Object right ) { if ( ( left instanceof java.lang.String ) && ( right instanceof java.lang.String ) ) { return ( ( java.lang.String ) ( left ) ) + right ; } else { return super . add ( left , right ) ; } } 
public com.jsing.common.string.StringTrimmer getBeforeNext ( java.lang.String stringToSearch ) { if ( ( this . string ) == null ) return this ; int index = getIndex ( stringToSearch ) ; if ( ( index > ( - 1 ) ) && ( index < ( this . end ) ) ) { this . end = java.lang.Math . max ( this . start , index ) ; } return this ; } 
private void openFolder ( java.lang.String folderName ) throws javax.mail.MessagingException { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new javax.mail.MessagingException ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } 
private java.lang.Integer compareBits ( java.lang.String a , java.lang.String b ) { java.lang.System.out . println ( b ) ; int count = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( a . length () , b . length () ) ) ; i ++ ) { if ( ! ( ( a . indexOf ( i ) ) == ( b . indexOf ( i ) ) ) ) return count ; count ++ ; } return count ; } 
public void addEdge ( diagraph.DirectedEdge edge ) { nodes . add ( edge . from () ) ; nodes . add ( edge . to () ) ; int from = edge . from () ; if ( ! ( edges . containsKey ( from ) ) ) { edges . put ( from , new java.util.HashSet <> () ) ; } java.util.Set < diagraph.DirectedEdge > outgoingEdges = edges . get ( from ) ; outgoingEdges . add ( edge ) ; } 
public void createDwarfData ( com.Jessy1237.DwarfCraft.DCPlayer dCPlayer ) { try { java.sql.PreparedStatement prep = mDBCon . prepareStatement ( "insert into players(uuid, race) values(?,?);" ) ; prep . setString ( 1 , dCPlayer . getPlayer () . getUniqueId () . toString () ) ; prep . setString ( 2 , plugin . getConfigManager () . getDefaultRace () . trim () ) ; prep . execute () ; prep . close () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public static org.apache.drill.exec.store.indexr.ScanWrokProvider.Stat getStat ( org.apache.drill.exec.store.indexr.IndexRStoragePlugin plugin , org.apache.drill.exec.store.indexr.IndexRScanSpec scanSpec , java.lang.String scanId , long limitScanRows , java.util.List < org.apache.drill.common.expression.SchemaPath > columns ) { org.apache.drill.exec.store.indexr.ScanWrokProvider.CacheKey key = new org.apache.drill.exec.store.indexr.ScanWrokProvider.CacheKey ( scanId , scanSpec , limitScanRows , columns ) ; try { return org.apache.drill.exec.store.indexr.ScanWrokProvider.statCache . get ( key , new java.util.concurrent.Callable < org.apache.drill.exec.store.indexr.ScanWrokProvider.Stat > () { @ java.lang.Override public org.apache.drill.exec.store.indexr.ScanWrokProvider.Stat call ( ) throws java.lang.Exception { return org.apache.drill.exec.store.indexr.ScanWrokProvider . calStat ( plugin , scanSpec , scanId , limitScanRows , columns ) ; } } ) ; } catch ( java.util.concurrent.ExecutionException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { java.lang.String action = intent . getAction () ; java.lang.String token = intent . getStringExtra ( Prefs.FIREBASE_ID ) ; android.util.Log . d ( com.hillelevo.cityelf.Constants.TAG , ( "MainActivity onReceive: " + action ) ) ; android.util.Log . d ( com.hillelevo.cityelf.Constants.TAG , ( "MainActivity onReceive: " + token ) ) ; if ( active ) {} } 
public void generate ( int before , int after ) { if ( ( statement1 ) == ( Statement.NULL ) ) { statement2 . generate ( before , after ) ; } else if ( ( statement2 ) == ( Statement.NULL ) ) { statement1 . generate ( before , after ) ; } else { int label = newLabel () ; statement1 . generate ( before , label ) ; emitLabel ( label ) ; statement2 . generate ( label , after ) ; } } 
public int compare ( Paxos.ProposalId rhs ) { if ( ( this . id ) == ( rhs.id ) ) { if ( ( rhs.playerId ) == ( this . playerId ) ) { return 0 ; } else if ( ( this . playerId ) < ( rhs.playerId ) ) { return - 1 ; } else { return 1 ; } } else if ( ( this . id ) < ( rhs.id ) ) { return - 1 ; } else { return 1 ; } } 
@ java.lang.Override public value.Value sub ( value.Value other ) { if ( ( ! ( isSet () ) ) || ( ! ( other . isSet () ) ) ) { return new value.IntegerValue () ; } return new value.IntegerValue ( ( ( value ) - ( ( ( value.IntegerValue ) ( other ) ) . getValue () ) ) ) ; } 
public static double std ( org.dynami.core.data.Series series ) { double avg = org.dynami.core.utils.StatUtils . avg ( series ) ; double sum = 0 ; for ( double d : series ) { sum += java.lang.Math . pow ( ( d - avg ) , 2 ) ; } return java.lang.Math . sqrt ( ( sum / ( ( series . size () ) - 1.0 ) ) ) ; } 
private java.lang.String toBinaryString ( int number ) { java.lang.StringBuilder temp = new java.lang.StringBuilder ( java.lang.Integer . toHexString ( number ) ) ; int length = temp . length () ; for ( int i = 0 ; i < ( 4 - length ) ; i ++ ) temp . append ( "0" ) . append ( temp ) ; return temp . toString () ; } 
@ java.lang.Override public int compareTo ( ch.redmonkeyass.zombieInvasion.worldmap.Node other ) { ch.redmonkeyass.zombieInvasion.worldmap.Node o = ( ( ch.redmonkeyass.zombieInvasion.worldmap.Node ) ( other ) ) ; float f = ( heuristic ) + ( cost ) ; float of = ( o.heuristic ) + ( o.cost ) ; if ( f < of ) { return - 1 ; } else if ( f > of ) { return 1 ; } else { return 0 ; } } 
public void setTime ( int t ) { if ( ( ( startTime ) <= t ) && ( t <= ( endTime ) ) ) { hideContextPopups () ; time . set ( t ) ; } else if ( t < ( startTime ) ) time . set ( startTime ) ; else if ( t > ( endTime ) ) time . set ( endTime ) ; } 
public static < T > void serialize ( T object , java.io.OutputStream resultStream , java.lang.String schemaLocation ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_SCHEMA_LOCATION , schemaLocation ) ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } 
private void addRow ( int row , int numInRow ) { int idxInRow = 0 ; int startVertex = ( row * numInRow ) + 1 ; int currVertex = startVertex ; while ( idxInRow < ( numInRow - 1 ) ) { addFace ( currVertex , ( currVertex + 1 ) , ( currVertex + numInRow ) ) ; addFace ( ( currVertex + 1 ) , ( ( currVertex + numInRow ) + 1 ) , ( currVertex + numInRow ) ) ; currVertex ++ ; idxInRow ++ ; } } 
@ java.lang.Override public boolean delete ( com.hazelcast.nio.serialization.Data key ) { checkIfLoaded () ; final long now = getNow () ; final com.hazelcast.map.impl.record.Record record = getRecordOrNull ( key , now , false ) ; if ( record == null ) { mapDataStore . remove ( key , now ) ; } else { return ( removeRecord ( key , record , now ) ) != null ; } return false ; } 
private void startTerminal ( int sequence , java.lang.String terminalHandle , java.lang.String caption , java.lang.String title , boolean hasChildProcs , int cols , int rows , int shellType ) { org.rstudio.studio.client.workbench.views.terminal.TerminalSession newSession = new org.rstudio.studio.client.workbench.views.terminal.TerminalSession ( sequence , terminalHandle , caption , title , hasChildProcs , cols , rows , uiPrefs_ . blinkingCursor () . getValue () , true , shellType ) ; newSession . connect () ; updateTerminalBusyStatus () ; } 
private void runChildren ( final org.junit.runner.notification.RunNotifier notifier , java.util.Collection < T > filteredChildren ) { final org.junit.runners.model.RunnerScheduler scheduler = fScheduler ; try { for ( final T each : filteredChildren ) { scheduler . schedule ( new java.lang.Runnable () { public void run () { org.junit.runners.ParentRunner . this . runChild ( each , notifier ) ; } } ) ; } } finally { scheduler . finished () ; } } 
public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . startDate = java.util.Optional . empty () ; } } 
public void addLast ( Item item ) { if ( this . checkNull ( item ) ) throw new java.lang.NullPointerException () ; if ( ( tail ) == null ) { tail = new Deque.Node () ; tail.item = item ; head = tail ; } else { tail.prev = new Deque.Node () ; tail.prev.next = tail ; tail = tail.prev ; tail.item = item ; } count += 1 ; } 
private void reDrawGestureView () { dist = 0 ; android.util.Log . i ( "Action" , "RESET GESTURE" ) ; setContentView ( R.layout.test_gesture ) ; resetButton . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { reDrawGestureView () ; } } ) ; android.gesture.GestureOverlayView gestures = ( ( android.gesture.GestureOverlayView ) ( findViewById ( R.id.test_gesture ) ) ) ; gestures . removeAllOnGestureListeners () ; gestures . addOnGestureListener ( mGestureListener ) ; resetEverything () ; } 
private void sendOnOpenMessage ( io.netty.channel.ChannelHandlerContext ctx , boolean isSecured , java.lang.String uri ) throws java.net.URISyntaxException { cMsg = new org.wso2.carbon.messaging.StatusCarbonMessage ( org.wso2.carbon.transport.http.netty.common.Constants.STATUS_OPEN , 0 , null ) ; setupCarbonMessage ( ctx ) ; cMsg . setProperty ( Constants.CONNECTION , Constants.UPGRADE ) ; cMsg . setProperty ( Constants.UPGRADE , Constants.WEBSOCKET_UPGRADE ) ; publishToMessageProcessor ( cMsg ) ; } 
private java.lang.String findHalfHourAfter ( int hours , int minutes ) { java.lang.String halfHourAfter = "" ; minutes += 30 ; if ( minutes >= 60 ) { hours ++ ; minutes -= 60 ; } halfHourAfter = formatTime ( halfHourAfter , hours , minutes ) ; return halfHourAfter += minutes ; } 
protected void updateFromNameChange ( java.lang.String newHeroName ) { if ( mName . equals ( newHeroName ) ) return; mName = newHeroName ; java.lang.String imageName = mParentPresenter . getHeroImageName ( newHeroName ) ; for ( int i = 0 ; i < ( mSimilarityList . size () ) ; i ++ ) { if ( mSimilarityList . get ( i ) . equals ( imageName ) ) { mView . setHeroInRecycler ( i ) ; break; } } mParentPresenter . hideKeyboard () ; mParentPresenter . sendUpdatedHeroList () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent intent1 = new android.content.Intent ( activity , ir.rasen.charsoo.view.activity.business.ActivityBusinessFollowers . class ) ; intent1 . putExtra ( Params.BUSINESS_ID_STRING , business.id ) ; intent1 . putExtra ( Params.USER_ID_INT , ir.rasen.charsoo.controller.helper.LoginInfo . getUserId ( activity ) ) ; intent1 . putExtra ( Params.BUSINESS_OWNER , true ) ; activity . startActivity ( intent1 ) ; } 
private static double getPassangerDiscount ( ooptraining.Passanger p ) { double discount = 1.0 ; if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.GOLD_LIMIT ) ) { discount = ooptraining.DiscountCalculator.GOLD_DISCOUNT ; } else if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.SILVER_LIMIT ) ) { discount = ooptraining.DiscountCalculator.SILVER_DISCOUNT ; } return discount ; } 
public learntest.core.gentest.GentestResult gentestAndCompile ( java.util.List < double [] > solutions , java.util.List < sav.strategies.dto.execute.value.ExecVar > vars , learntest.core.gentest.GentestParams params ) throws sav.common.core.SavException { learntest.core.LearningMediator.log . debug ( "gentest.." ) ; learntest.core.gentest.GentestResult result = getTestGenerator () . genTestAccordingToSolutions ( params , solutions , vars , new gentest.junit.JWriter () ) ; if ( ! ( result . isEmpty () ) ) { learntest.core.LearningMediator.log . debug ( "compile.." ) ; compileAndLogTestSequences ( result , params ) ; } return result ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { javafx.scene.control.CheckBox cb = ( ( javafx.scene.control.CheckBox ) ( event . getSource () ) ) ; if ( cb . isSelected () ) { for ( application.ResultTable resultTableRow : resultTable . getItems () ) { resultTableRow . setTrace ( true ) ; } } else { for ( application.ResultTable resultTableRow : resultTable . getItems () ) { resultTableRow . setTrace ( false ) ; } } } 
double heuristics ( dstarlite.State a , dstarlite.State b ) { double temp ; double min = java.lang.Math . abs ( ( ( a . getX () ) - ( b . getX () ) ) ) ; double max = java.lang.Math . abs ( ( ( a . getY () ) - ( b . getY () ) ) ) ; if ( min > max ) { temp = min ; min = max ; max = temp ; } return ( ( ( m_sqrt2 ) - 1.0 ) * min ) + max ; } 
private java.util.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( java.util.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; } 
private com.sonnytron.sortatech.pantryprep.Database.IngredientsCursorWrapper queryTopFiveIngredients ( java.lang.String whereClause , java.lang.String [] whereArgs ) { android.database.sqlite.SQLiteQueryBuilder qb = new android.database.sqlite.SQLiteQueryBuilder () ; java.lang.String [] subQueries = new java.lang.String [] { "SELECT * FROM (SELECT * FROM ingredientsItems where type = 'protein' order by date desc limit 1) as meat" , "SELECT * FROM (SELECT * FROM ingredientsItems where type in ('dairy', 'veggies') order by date desc limit 4) as others" } ; java.lang.String sql = qb . buildUnionQuery ( subQueries , null , null ) ; android.database.Cursor cursor = mDatabase . rawQuery ( sql , null ) ; return new com.sonnytron.sortatech.pantryprep.Database.IngredientsCursorWrapper ( cursor ) ; } 
public static com.ldf.calendar.model.CalendarDate fromDate ( java.util.Date date ) { java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . setTime ( date ) ; com.ldf.calendar.model.CalendarDate calendarDate = new com.ldf.calendar.model.CalendarDate () ; calendarDate.year = cal . get ( java.util.Calendar.YEAR ) ; calendarDate.month = ( cal . get ( java.util.Calendar.MONTH ) ) + 1 ; calendarDate.day = cal . get ( java.util.Calendar.DAY_OF_MONTH ) ; return calendarDate ; } 
protected javax.portlet.PortletPreferences updateImportPortletPreferences ( com.liferay.exportimport.kernel.lar.PortletDataContext portletDataContext , javax.portlet.PortletPreferences portletPreferences ) throws java.lang.Exception { com.liferay.portal.kernel.model.Company company = _companyLocalService . getCompanyById ( portletDataContext . getCompanyId () ) ; com.liferay.portal.kernel.model.Group companyGroup = company . getGroup () ; updateImportPortletPreferencesClassPKs ( portletDataContext , portletPreferences , "organizationId" , com.liferay.portal.kernel.model.Organization . class , companyGroup . getGroupId () ) ; return portletPreferences ; } 
public void addItem ( item.Item i , int count ) { item.Item item = i . clone () ; if ( count != ( - 1 ) ) { item.count = count ; } if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += item.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.String returnDiagnose ( @ javax.ws.rs.QueryParam ( value = "session" ) java.lang.String session , @ javax.ws.rs.QueryParam ( value = "patientId" ) java.lang.String patientId ) { java.lang.String medications = "false" ; try { connector = eu.neq.mais.connector.ConnectorFactory . getConnector ( eu.neq.mais.technicalservice.SessionStore . getBackendSid ( session ) ) ; medications = connector . returnMedicationsForPatient ( patientId ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; medications = "false" ; } eu.neq.mais.request.MedicationHandler.logger . info ( ( "return medication method returned json object: " + medications ) ) ; return medications ; } 
private void setValueContrained ( int x ) { x = x - ( this . getAbsoluteLeft () ) ; int width = sliderWidget . getOffsetWidth () ; if ( x < 0 ) { x = 0 ; } if ( x > ( width - 1 ) ) { x = width - 1 ; } int componentValue = ( x * ( max ) ) / width ; setValue ( componentValue , true , false ) ; sliderWidget . setPos ( x ) ; } 
public boolean shootAt ( int row , int column ) { int tempRow = getBowRow () ; int tempColumn = getBowColumn () ; if ( ( ! ( isSunk () ) ) || ( ! ( stworo01.EmptySea . class . isInstance ( this ) ) ) ) { if ( isHorizontal () ) { this . hit [ ( column - tempColumn ) ] = true ; return true ; } else { this . hit [ ( row - tempRow ) ] = true ; return true ; } } return false ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.content.Intent intent = getIntent () ; username = intent . getStringExtra ( "Username" ) ; username_TextV = ( ( android.widget.TextView ) ( findViewById ( R.id.username_act_main ) ) ) ; username_TextV . setText ( ( ( username_TextV . getText () . toString () ) + ( username ) ) ) ; initInstances () ; } 
private void setZeroValues ( java.lang.String values ) { zeroValues = new java.util.ArrayList < java.lang.Integer > () ; java.lang.String [] sr = values . split ( "," ) ; for ( int i = 0 ; i < ( sr.length ) ; i ++ ) { int num = java.lang.Integer.MIN_VALUE ; try { num = java.lang.Integer . parseInt ( sr [ i ] ) ; } catch ( java.lang.NumberFormatException nfe ) { break; } zeroValues . add ( num ) ; } } 
@ java.lang.Override public boolean onTouch ( android.view.View view , android.view.MotionEvent event ) { switch ( event . getActionMasked () ) { case android.view.MotionEvent.ACTION_DOWN : view . startDrag ( android.content.ClipData . newPlainText ( "" , "" ) , new android.view.View.DragShadowBuilder () , view , 0 ) ; return true ; default: return false ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = inflater . inflate ( R.layout.fragment_base_pager , container , false ) ; android.widget.TextView textView = ( ( android.widget.TextView ) ( rootView . findViewById ( R.id.section_label ) ) ) ; textView . setText ( getArguments () . getInt ( com.moana.carsharing.base.BasePagerActivity.PlaceholderFragment.ARG_SECTION_NUMBER ) ) ; return rootView ; } 
private void resetBall ( int scorer ) { if ( scorer == 1 ) { ( score2 ) ++ ; } else { ( score1 ) ++ ; } ballIsStopped = true ; ballOffsetX = 0 ; ballOffsetY = 0 ; ballVelX = 0 ; ballVelY = 0 ; bat1Offset = 0 ; bat2Offset = 0 ; lastScorer = scorer ; bounces = 0 ; } 
@ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.String id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( id ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } 
private void assertAddSuccess ( seedu.tasklist.testutil.TestTask personToAdd , seedu.tasklist.testutil.TestTask . . . currentList ) { commandBox . runCommand ( personToAdd . getAddCommand () ) ; guitests.guihandles.PersonCardHandle addedCard = taskListPanel . navigateToPerson ( personToAdd . getTaskDetails () . toString () ) ; assertMatching ( personToAdd , addedCard ) ; seedu.tasklist.testutil.TestTask [] expectedList = seedu.tasklist.testutil.TestUtil . addTasksToList ( currentList , personToAdd ) ; org.junit.Assert . assertTrue ( taskListPanel . isListMatching ( expectedList ) ) ; } 
private void initDateAndTime ( main.java.Task.Type type , java.util.ArrayList < java.time.LocalDateTime > parsedDates ) { switch ( type ) { case TIMED : date = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalDate () ; startTime = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalTime () ; endTime = parsedDates . get ( main.java.Task.POSITION_SECOND_DATE ) . toLocalTime () ; break; case DEADLINE : date = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalDate () ; startTime = parsedDates . get ( main.java.Task.POSITION_FIRST_DATE ) . toLocalTime () ; break; default: break; } } 
public void init ( java.lang.String serverAddress , int serverPort , int hostPort , java.util.concurrent.BlockingQueue < java.lang.String > msgQueue ) throws java.io.IOException { java.net.Socket s = new java.net.Socket () ; s . bind ( new java.net.InetSocketAddress ( hostPort ) ) ; s . connect ( new java.net.InetSocketAddress ( serverAddress , serverPort ) ) ; this . out = new java.io.OutputStreamWriter ( s . getOutputStream () ) ; this . fetcher = new com.nutscape.mc.nunuubot.Connection.MessageFetcher ( s . getInputStream () , msgQueue , bot ) ; new java.lang.Thread ( fetcher ) . start () ; } 
public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } 
@ java.lang.Override protected java.lang.String doInBackground ( java.lang.Void . . . params ) { com.myapp.handbook.HttpConnectionUtil util = new com.myapp.handbook.HttpConnectionUtil () ; java.lang.String url = ( HttpConnectionUtil.URL_ENPOINT ) + "/SendMessageToMultipleUser/" ; org.json.JSONObject messageJson = prepareMessage () ; com.myapp.handbook.HttpConnectionUtil . UploadImage ( photoFile ) ; while ( ! ( HttpConnectionUtil.imageUploaded ) ) {} try { if ( HttpConnectionUtil.imageUploadStatus ) { messageJson . put ( "ImageUrl" , HttpConnectionUtil.imageUrl ) ; } } catch ( org.json.JSONException e ) { e . printStackTrace () ; } return util . downloadUrl ( url , HttpConnectionUtil.RESTMethod.PUT , messageJson ) ; } 
public java.lang.String eth_getCode ( java.lang.String address , java.lang.String blockId ) throws java.lang.Exception { org.ethereum.jsonrpc.Block block = getByJsonBlockId ( blockId ) ; if ( block == null ) return null ; byte [] addressAsByteArray = org.ethereum.jsonrpc.TypeConverter.TypeConverter . StringHexToByteArray ( address ) ; byte [] code = this . repository . getSnapshotTo ( block . getStateRoot () ) . getCode ( addressAsByteArray ) ; return org.ethereum.jsonrpc.TypeConverter.TypeConverter . toJsonHex ( code ) ; } 
private java.util.List < T > down ( int row , int column , int length ) { java.util.List < T > nodes = new java.util.ArrayList <> () ; int rowCount = rowCount () ; for ( int position = 0 ; position < length ; position ++ ) { int currentRow = row + position ; if ( currentRow >= rowCount ) { break; } T node = grid [ currentRow ] [ column ] ; nodes . add ( node ) ; } return nodes ; } 
@ java.lang.Override public com.ankurdave.part.ChildPtr find_child ( byte c ) { for ( int i = 0 ; i < ( this . num_children ) ; i ++ ) { if ( ( keys [ i ] ) == c ) { return new com.ankurdave.part.ArrayChildPtr ( children , i ) ; } } return null ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRetainInstance ( true ) ; if ( ( com.nectar.thesun.library.MyConstants.homenews ) == null ) { com.nectar.thesun.library.MyConstants.homenews = new java.util.ArrayList <> () ; } if ( ! ( com.nectar.thesun.PageSlidingTabStripFragment . isAsyncTaskPendingOrRunning () ) ) { com.nectar.thesun.PageSlidingTabStripFragment.mcontext = getActivity () . getApplicationContext () ; loadNewsNow ( getActivity () ) ; } } 
public java.util.Collection < net.sf.memoranda.Task > getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; return task . getSubTasks () ; } } 
private int columnHeight ( int column ) { int r = 0 ; for ( ; ( r < ( this . height ) ) && ( ( this . grid [ column ] [ r ] . isEmpty () ) || ( this . grid [ column ] [ r ] . isShape () ) ) ; r ++ ) ; return ( this . height ) - r ; } 
private void insertToClassifiableTextsCharacteristicsTable ( java.sql.Connection con , int classifiableTextId , com.irvil.textclassifier.model.Characteristic characteristic , com.irvil.textclassifier.model.CharacteristicValue characteristicValue ) throws java.sql.SQLException { java.lang.String sqlInsert = "INSERT INTO ClassifiableTextsCharacteristics (ClassifiableTextId, CharacteristicsNameId, CharacteristicsValueId) VALUES (?, ?, ?)" ; java.sql.PreparedStatement statement = con . prepareStatement ( sqlInsert ) ; statement . setInt ( 1 , classifiableTextId ) ; statement . setInt ( 2 , characteristic . getId () ) ; statement . setInt ( 3 , characteristicValue . getId () ) ; statement . executeUpdate () ; } 
@ java.lang.Override public void surfaceCreated ( android.view.SurfaceHolder holder ) { this . grid = new com.example.jacek.streamthegame.Grid ( this . getContext () , this . nRows , this . nCols , ( ( getWidth () ) / ( this . nCols ) ) , ( ( getHeight () ) / ( this . nRows ) ) ) ; this . grid . tryAddObject ( Sprite.short_pipe , 2 , 1 ) ; this . thread . setRunning ( true ) ; this . thread . start () ; } 
@ java.lang.Override public void onFragmentInteraction ( int requestCode , int resultCode , java.lang.Object . . . objects ) { switch ( requestCode ) { case com.joss.jrow.TrainingEnvironment.TrainingActivity.SAVE_REQUEST_CODE : if ( resultCode == ( RESULT_OK ) ) { com.joss.jrow.Models.Training . getTraining () . save ( ( ( java.lang.String ) ( objects [ 0 ] ) ) ) ; } break; case com.joss.jrow.TrainingEnvironment.TrainingActivity.CALIBRATION_REQUEST_CODE : if ( resultCode == ( RESULT_OK ) ) { com.joss.jrow.Models.Measures . getMeasures () . setDefaultCalibration () ; startTraining () ; } break; } } 
private void check ( com.gargoylesoftware.htmlunit.WebClient wc , com.gargoylesoftware.htmlunit.HttpMethod m ) throws java.io.IOException { com.gargoylesoftware.htmlunit.TextPage p = wc . getPage ( new com.gargoylesoftware.htmlunit.WebRequestSettings ( new java.net.URL ( url , "verbMatch/" ) , m ) ) ; assertEquals ( ( "Got " + ( m . name () ) ) , p . getContent () ) ; } 
@ java.lang.Override public void onClick ( org.bukkit.event.inventory.InventoryClickEvent event ) { org.bukkit.entity.Player player = ( ( org.bukkit.entity.Player ) ( event . getWhoClicked () ) ) ; if ( player != null ) { player . closeInventory () ; player . performCommand ( ( "vote reward " + ( voteSite . getSiteName () ) ) ) ; } } 
public java.lang.String getSpeed ( long size ) { synchronized ( this ) { sum += size ; } long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } 
long nextUniqueTransaction ( long time ) { long id = time ; for ( ; ; ) { long old = transactionID . get () ; if ( old >= id ) id = old + 1 ; if ( transactionID . compareAndSet ( old , id ) ) break; } return id ; } 
@ java.lang.Override public void addRow ( ar.edu.ungs.business.dto.AutorizacionPracticaDTO item ) { getElementos () . add ( item ) ; java.lang.Object [] vector = new java.lang.Object [ 2 ] ; vector [ 0 ] = item . getPractica () . getCodigo () ; vector [ 1 ] = item . getPractica () . getNombre () ; super . addRow ( vector ) ; } 
@ java.lang.Override public void forward ( org.xbill.DNS.Message message , com.ahuazhu.soy.modal.ResponseContext response ) throws java.io.IOException { org.xbill.DNS.Message answer = cache . getValue ( new com.ahuazhu.soy.modal.QuestionKey ( message ) ) ; if ( answer != null ) { send ( answer , response ) ; return; } if ( forwarderStarted ) { callBack . put ( new com.ahuazhu.soy.modal.QueryKey ( message ) , response ) ; for ( java.net.InetSocketAddress upstreamServer : upstreamServers ) { datagramChannel . send ( java.nio.ByteBuffer . wrap ( message . toWire () ) , upstreamServer ) ; } } } 
private void downloadFile ( java.io.File posterFile , java.lang.String url ) { try { java.net.URL posterUrl = new java.net.URL ( url ) ; java.nio.channels.ReadableByteChannel rbc = java.nio.channels.Channels . newChannel ( posterUrl . openStream () ) ; java.io.FileOutputStream fos = new java.io.FileOutputStream ( posterFile ) ; fos . getChannel () . transferFrom ( rbc , 0 , java.lang.Long.MAX_VALUE ) ; fos . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public MapPosition getPosition ( DIR direction ) { switch ( direction ) { case NORTH : return new MapPosition ( x , ( ( y ) - 1 ) ) ; case SOUTH : return new MapPosition ( x , ( ( y ) + 1 ) ) ; case EAST : return new MapPosition ( ( ( x ) + 1 ) , y ) ; case WEST : return new MapPosition ( ( ( x ) - 1 ) , y ) ; default: return null ; } } 
@ java.lang.Override protected void onCreate ( final android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_tictactoe ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { mCurrentIndex = ( ( mCurrentIndex ) + 1 ) % ( mStations.length ) ; mStartStopButton . setImageDrawable ( playDrawable () ) ; updateDropdownHeader ( mCurrentIndex ) ; playPressed = false ; doneBuffering = false ; if ( ( player ) != null ) { if ( player . isPlaying () ) { player . stop () ; } player . release () ; } setupPlayer () ; updateViews () ; clickPlayButton () ; } 
public static models.Rate create ( int score , java.lang.Long userId , java.lang.Long criteriaId , java.lang.Long projectId ) { if ( ( models.Rate . findByUserIdAndProjectIdAndCriteriaId ( userId , projectId , criteriaId ) ) == null ) { models.Rate rate = new models.Rate () ; rate.score = score ; rate.userId = userId ; rate.criteriaId = criteriaId ; rate.projectId = projectId ; rate . save () ; return rate ; } models.Rate rate = models.Rate . findByUserIdAndProjectIdAndCriteriaId ( userId , projectId , criteriaId ) ; rate.score = score ; rate . update () ; return rate ; } 
@ java.lang.Override public void encodeData ( org.mobicents.protocols.asn.AsnOutputStream asnOs ) throws org.mobicents.protocols.ss7.cap.api.CAPException { if ( ( this . data ) == null ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field must not be null" ) ; if ( ( ( this . data . length ) < 3 ) || ( ( this . data . length ) > 11 ) ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field length must be from 3 to 11" ) ; asnOs . writeOctetStringData ( data ) ; } 
@ java.lang.Override public android.view.View getView ( int position , android.view.View view , android.view.ViewGroup parent ) { android.view.LayoutInflater inflater = context . getLayoutInflater () ; android.view.View rowView = inflater . inflate ( R.layout.list_single , null , true ) ; android.widget.TextView txtTitle = ( ( android.widget.TextView ) ( rowView . findViewById ( R.id.txt ) ) ) ; android.widget.ImageView imageView = ( ( android.widget.ImageView ) ( rowView . findViewById ( R.id.img ) ) ) ; imageView . setImageResource ( imageId [ position ] ) ; return rowView ; } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { try { hostServer = new CryptoServer () ; hostServer . start () ; setHostOptCompsTo ( false ) ; setStartCompsTo ( false ) ; setWinSizeTo ( hostScreenSize ) ; setHostCompsTo ( true ) ; } catch ( java.io.IOException e ) { GuiUtils.PopUpMessages . errorMsg ( ( ( "port " + ( CryptoServer.port ) ) + " is already used!\nplease try using another port number." ) ) ; hostPortFieldOpt . requestFocus () ; } } 
private static void validateSqlDatabaseNotFound ( java.lang.String newDatabase ) { try { sqlServerManager . sqlDatabases () . getBySqlServer ( com.microsoft.azure.management.sql.SqlServerOperationsTests.RG_NAME , com.microsoft.azure.management.sql.SqlServerOperationsTests.SQL_SERVER_NAME , newDatabase ) ; org.junit.Assert . assertTrue ( false ) ; } catch ( com.microsoft.azure.CloudException exception ) { org.junit.Assert . assertEquals ( exception . getResponse () . code () , 404 ) ; } } 
public fr.inria.soctrace.tools.ocelotl.core.queries.IteratorQueries.EventIterator getVariableIterator ( java.util.List < fr.inria.soctrace.lib.model.EventProducer > eventProducers , java.util.List < fr.inria.soctrace.lib.search.utils.IntervalDesc > time , org.eclipse.core.runtime.IProgressMonitor monitor ) throws fr.inria.soctrace.lib.model.utils.SoCTraceException , fr.inria.soctrace.tools.ocelotl.core.exceptions.OcelotlException { traceSearch = ( ( fr.inria.soctrace.tools.ocelotl.core.queries.OcelotlTraceSearch ) ( new fr.inria.soctrace.tools.ocelotl.core.queries.OcelotlTraceSearch ( ocelotlParameters ) . initialize () ) ) ; return traceSearch . getEventIterator ( ocelotlParameters . getTrace () , ocelotlParameters . getTraceTypeConfig () . getTypes () , time , eventProducers , monitor ) ; } 
@ java.lang.Override public void parseLine ( java.lang.String line ) { services.FavouriteQuoteImporter.LOGGER . debug ( "Parsing line: {}" , line ) ; if ( line . trim () . isEmpty () ) { return; } java.util.regex.Matcher matcher = services.FavouriteQuoteImporter.PATTERN . matcher ( line ) ; while ( matcher . find () ) { services.quotes.Quote quote = assembleQuote ( matcher ) ; quoteDao . insertQuote ( quote ) ; return; } } 
private void MouseButtonCallback ( long window , int button , int state , int arg3 ) { java.lang.System.out . println ( ( ( ( ( button + " " ) + state ) + " " ) + arg3 ) ) ; if ( ( button == ( org.lwjgl.glfw.GLFW.GLFW_MOUSE_BUTTON_1 ) ) && ( state == 0 ) ) { mouse_down = state == 1 ; toInteract = world . closestEntity ( current . getLocation () , 10.0F ) ; } } 
@ java.lang.Override public void done ( com.parse.ParseUser user , com.parse.ParseException err ) { if ( user == null ) { android.util.Log . d ( "MyApp" , "Uh oh. The user cancelled the Facebook login." ) ; getUserDetailFromFB () ; } else if ( user . isNew () ) { android.util.Log . d ( "MyApp" , "User signed up and logged in through Facebook!" ) ; getUserDetailFromFB () ; } else { startSaoLonguinho () ; android.util.Log . d ( "MyApp" , "User logged in through Facebook!" ) ; } } 
@ java.lang.Override public void onTouchMove ( com.google.gwt.event.dom.client.TouchMoveEvent event ) { if ( ( ( initialX ) == 0 ) && ( ( initialY ) == 0 ) ) { com.google.gwt.dom.client.Touch touch = event . getTouches () . get ( 0 ) ; initialX = touch . getPageX () ; initialY = touch . getPageY () ; } } 
private void remap ( wyautl.core.Automaton automaton , int from , int to ) { for ( int i = 0 ; i != ( automaton . nStates () ) ; ++ i ) { automaton . get ( i ) . remap ( from , to ) ; } } 
public void push ( org.arcueidarc.nekoarc.types.ArcObject obj ) { for ( ; ; ) { try { stack [ ( ( sp ) ++ ) ] = obj ; return; } catch ( java.lang.ArrayIndexOutOfBoundsException e ) { ( sp ) -- ; stackgc () ; if ( ( sp ) >= ( stack.length ) ) throw new org.arcueidarc.nekoarc.NekoArcException ( "stack overflow" ) ; } } } 
private void updateJobOutput ( java.lang.String uuid , com.kylinolap.job2.dao.JobOutputPO output ) { try { jobDao . addOrUpdateJobOutput ( uuid , output ) ; } catch ( com.kylinolap.job2.exception.PersistentException e ) { com.kylinolap.job2.service.DefaultJobService.logger . error ( ( "fail to update job output id:" + uuid ) , e ) ; throw new java.lang.RuntimeException ( e ) ; } } 
public static int minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { v = temp ; action = a ; } } return action ; } 
public void PressButton ( int i ) { if ( com.kuna.ibeatcon_android.Controller.vb_feedback ) { android.os.Vibrator v = ( ( android.os.Vibrator ) ( getSystemService ( Context.VIBRATOR_SERVICE ) ) ) ; v . vibrate ( 100 ) ; SendData ( pressKey [ i ] ) ; } else { SendData ( pressKey [ i ] ) ; } } 
public static java.lang.String getRedirectionPath ( final org.fenixedu.bennu.core.domain.User user , final javax.servlet.http.HttpServletRequest request ) { for ( final org.fenixedu.ulisboa.specifications.authentication.IULisboaRedirectionHandler iuLisboaRedirectionHandler : org.fenixedu.ulisboa.specifications.authentication.ULisboaAuthenticationRedirector.handlers ) { if ( iuLisboaRedirectionHandler . isToRedirect ( user , request ) ) { return iuLisboaRedirectionHandler . redirectionPath ( user , request ) ; } } return null ; } 
public org.opennms.netmgt.model.topology.BridgePort getBridgePort ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link ; } return null ; } 
@ java.lang.Override protected void onSizeChanged ( int w , int h , int oldw , int oldh ) { super . onSizeChanged ( w , h , oldw , oldh ) ; mProgressDrawerManager . onSizeChanged ( w , h ) ; mShapeDrawerManager . onSizeChanged ( w , h , getPaddingLeft () , getPaddingTop () , getPaddingRight () , getPaddingBottom () ) ; mBlurManager . onSizeChanged ( w , h ) ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "hasAuthority('ADMIN')" ) @ org.springframework.web.bind.annotation.RequestMapping ( value = "/admin/userTask/{userName}" , params = "userDelete" ) public java.lang.String handleUserDelete ( @ org.springframework.web.bind.annotation.PathVariable ( value = "userName" ) java.lang.String userName , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userDTO" ) com.fithub.domain.UserDTO userDTO , org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { com.fithub.controller.UserTasksController.LOG . debug ( "Attempting to delete user={}" , userDTO . getUserName () ) ; boolean isUserDelete = userService . deleteUserByUsername ( userDTO . getUserName () ) ; com.fithub.controller.UserTasksController.LOG . debug ( "User was delete successfuly ?={}" , isUserDelete ) ; redirectAttributes . addFlashAttribute ( "userDeleteSuccess" , true ) ; return "redirect:/admin/userTaskSuccess" ; } 
@ java.lang.Override public void display ( com.badlogic.gdx.graphics.g2d.Batch batch ) { if ( assetNeedUpdate ) assetManager () ; chapter1Display ( batch ) ; if ( ! ( viewingSettings ) ) { switch ( chapterSection ) { case 1 : drawBG ( batch ) ; break; } } if ( ansCorrect ) { fourPicsOneWordUtil . displayCorrect ( batch ) ; Gdx.input . setOnscreenKeyboardVisible ( false ) ; } drawQuizResult ( batch ) ; } 
private static org.apache.jmeter.control.ReplaceableController ensureReplaceableControllerIsLoaded ( org.apache.jmeter.testelement.TestElement item ) { org.apache.jmeter.control.ReplaceableController rc ; if ( "org.apache.jmeter.control.ModuleController" . equals ( item . getClass () . getName () ) ) { rc = ( ( org.apache.jmeter.control.ReplaceableController ) ( item ) ) ; } else { rc = ( ( org.apache.jmeter.control.ReplaceableController ) ( item . clone () ) ) ; } return rc ; } 
@ java.lang.Override public void onFailure ( retrofit2.Call < com.sdsmdg.bookshareapp.BSA.api.models.LocalBooks.BookList > call , java.lang.Throwable t ) { android.util.Log . d ( "GA_search" , ( "searchOnFail " + ( t . toString () ) ) ) ; refreshLayout . setRefreshing ( false ) ; progressBar . setVisibility ( View.GONE ) ; innerLayout . getForeground () . setAlpha ( 0 ) ; l1 . setVisibility ( View.GONE ) ; l2 . setVisibility ( View.GONE ) ; } 
public final void execute ( final rx.functions.Action1 < ? super Result > onNext , final rx.functions.Action1 < java.lang.Throwable > onError , Param param ) { viper.Interactor . checkNotNull ( onNext , "onNext" ) ; viper.Interactor . checkNotNull ( onError , "onError" ) ; execute ( new rx.Subscriber < Result > () { @ java.lang.Override public void onCompleted () {} @ java.lang.Override public void onError ( final java.lang.Throwable e ) { onError . call ( e ) ; } @ java.lang.Override public void onNext ( final Result result ) { onNext . call ( result ) ; } } , param ) ; } 
protected void draw ( android.graphics.Canvas canvas ) { if ( ( center ) == null ) { return; } switch ( style ) { case RECTANGLE : break; case CIRCLE : canvas . drawCircle ( center.x , center.y , radius , paint ) ; break; } } 
public org.joda.time.Duration getEstimatedTime ( @ android.support.annotation.NonNull org.cook_e.data.Step s ) { org.cook_e.data.Objects . requireNonNull ( s , "step must not be null" ) ; int index = searchStep ( s . hashCode () ) ; if ( index >= 0 ) { long time = ( ( long ) ( ( s . getTime () . getMillis () ) * ( org.cook_e.data.TimeLearner.weightList . get ( index ) . timeWeight ) ) ) ; return new org.joda.time.Duration ( time ) ; } return s . getTime () . toDuration () ; } 
@ java.lang.Override protected java.lang.Integer doInBackground ( java.lang.Void . . . voids ) { publishProgress ( R.string.file_migration_preparing ) ; com.owncloud.android.lib.common.utils.Log_OC . stopLogging () ; boolean [] syncStates = null ; try { publishProgress ( R.string.file_migration_saving_accounts_configuration ) ; syncStates = saveAccountsSyncStatus () ; publishProgress ( R.string.file_migration_waiting_for_unfinished_sync ) ; stopAccountsSyncing () ; waitForUnfinishedSynchronizations () ; } finally { publishProgress ( R.string.file_migration_restoring_accounts_configuration ) ; restoreAccountsSyncStatus ( syncStates ) ; } com.owncloud.android.lib.common.utils.Log_OC . startLogging ( mStorageTarget ) ; return 0 ; } 
public void resetTo ( dyvil.tools.parsing.token.IToken token ) { this . tokens . jump ( token ) ; if ( ( this . splitTokens ) == null ) { return; } for ( dyvil.tools.parsing.token.IToken splitToken : this . splitTokens ) { splitToken . prev () . setNext ( splitToken ) ; splitToken . next () . setPrev ( splitToken ) ; } this . splitTokens . clear () ; } 
@ java.lang.Override public void set ( java.lang.Boolean value ) { java.util.Collection < java.lang.Object > coll = container . get () ; if ( value ) { if ( coll != null ) { if ( ! ( coll . contains ( item ) ) ) { coll . add ( item ) ; } } else { coll = org.rapidoid.util.U . list ( item ) ; } } else { if ( coll != null ) { coll . remove ( item ) ; } } container . set ( coll ) ; } 
private static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } 
synchronized void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } 
private void addCanvasToRootPane ( javafx.scene.image.Image image ) { if ( image == null ) { return; } rootPane . setPrefWidth ( image . getWidth () ) ; rootPane . setPrefHeight ( image . getHeight () ) ; rootPane . getChildren () . add ( canvas ) ; javafx.scene.layout.StackPane . setAlignment ( canvas , javafx.geometry.Pos.TOP_CENTER ) ; } 
public static void teleportPlayer ( org.bukkit.entity.Player player , org.bukkit.Location location , org.bukkit.plugin.java.JavaPlugin plugin ) { int backupTask ; player . teleport ( location ) ; backupTask = plugin . getServer () . getScheduler () . scheduleAsyncDelayedTask ( plugin , new net.madmanmarkau.MultiHome.ChunkResendTask ( location ) , 1 ) ; if ( backupTask == ( - 1 ) ) { net.madmanmarkau.MultiHome.Messaging . logSevere ( "Failed to create chunk resend schedule!" , plugin ) ; } } 
@ java.lang.Override public void process ( org.apache.camel.Exchange exchange ) throws java.lang.Exception { java.lang.String json = exchange . getIn () . getBody ( java.lang.String . class ) ; com.workflow2015.common.helper.RouteRequest routeRequest = JsonHelper.gson . fromJson ( json , com.workflow2015.common.helper.RouteRequest . class ) ; java.lang.String data = this . getDataFromSource ( routeRequest ) ; this . pushDataToQueue ( data ) ; } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue < ? extends java.lang.String > observable , java.lang.String oldValue , java.lang.String newValue ) { if ( newValue . matches ( "\\d*" ) ) {} else { intensity . setText ( oldValue ) ; } processScheduler.logic.Strategy.TICKSFORMESSAGE = java.lang.Integer . parseInt ( intensity . getText () ) ; } 
public static java.lang.String getUniqueTitle ( net.minecraft.world.World world ) { java.util.List < net.torocraft.nemesissystem.registry.Nemesis > nemeses = net.torocraft.nemesissystem.registry.NemesisRegistryProvider . get ( world ) . list () ; java.lang.String title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; while ( ! ( net.torocraft.nemesissystem.util.NemesisBuilder . isUniqueTitle ( title , nemeses ) ) ) { title = net.torocraft.nemesissystem.util.NemesisBuilder . getRandomTitle () ; } return title ; } 
private java.lang.String parseHeadline ( com.ximpleware.VTDNav vn ) throws com.ximpleware.NavException { edu.jhu.agiga.AgigaSentenceReader . require ( vn . matchElement ( AgigaConstants.DOC ) ) ; if ( ( ! ( vn . toElement ( VTDNav.FIRST_CHILD , AgigaConstants.HEADLINE ) ) ) || ( ( vn . getText () ) == ( - 1 ) ) ) { edu.jhu.agiga.AgigaDocumentReader.log . finer ( "No headline found" ) ; return null ; } return vn . toString ( vn . getText () ) . trim () ; } 
protected void onRetrieveInstanceState ( android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { stats = savedInstanceState . getBundle ( "champData" ) ; isHeader = savedInstanceState . getBoolean ( "isHeader" , false ) ; } else { android.os.Bundle extras = getIntent () . getExtras () ; isHeader = extras . getBoolean ( "isHeader" ) ; stats = extras . getBundle ( "champData" ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_nearby ) ; if ( ( getSupportActionBar () ) != null ) { getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } registerLocationManager () ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; fr.free.nrw.commons.nearby.NearbyListFragment fragment = new fr.free.nrw.commons.nearby.NearbyListFragment () ; ft . add ( R.id.container , fragment ) ; ft . commit () ; } 
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; if ( station != null ) { listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } 
public static void removeEmployee ( int id ) { StaffManager.Company.employeeList . remove ( ( id - 1 ) ) ; for ( int i = id - 1 ; i < ( StaffManager.Company.employeeList . size () ) ; i ++ ) { StaffManager.Company.employeeList . get ( i ) . setId ( ( i + 1 ) ) ; } } 
public boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } 
public void onClick ( com.gwtext.client.widgets.Button button , com.gwtext.client.core.EventObject e ) { com.gwtext.client.widgets.tree.DefaultSelectionModel dsm = ( ( com.gwtext.client.widgets.tree.DefaultSelectionModel ) ( entityTreePanel . getSelectionModel () ) ) ; com.gwtext.client.widgets.tree.TreeNode selectedNode = dsm . getSelectedNode () ; if ( ( selectedNode . getAttributeAsObject ( "frame" ) ) != null ) { edWindow . loadFrameAndShow ( selectedNode ) ; } } 
public void setValue ( fd2editor.BaseSeg.VALUE whichValue , int sValue ) { if ( sValue > ( max ) ) { sValue = max ; } if ( sValue < ( min ) ) { sValue = min ; } switch ( whichValue ) { case DEFAULT : this . defaultValue = sValue ; break; case RECOMMEND : this . recommendValue = sValue ; break; case CURRENT : this . value = sValue ; updateSegBytes () ; break; default: break; } } 
public void addTransition ( java.lang.String name , java.lang.Object source , java.lang.Object target ) { graph . getModel () . beginUpdate () ; try { graph . insertEdge ( root , null , name , source , target ) ; } finally { graph . getModel () . endUpdate () ; } } 
public void renderCreate ( org.eclipse.rap.clientscripting.internal.ClientListenerBinding binding , org.eclipse.rwt.internal.protocol.IClientObject clientObject ) { clientObject . create ( org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer.TYPE ) ; clientObject . set ( "listener" , org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer . getId ( binding . getListener () ) ) ; clientObject . set ( "targetObject" , org.eclipse.rwt.lifecycle.WidgetUtil . getId ( binding . getWidget () ) ) ; clientObject . set ( "eventType" , org.eclipse.rap.clientscripting.internal.ClientListenerBindingSynchronizer . getEventType ( binding ) ) ; } 
@ java.lang.Override public boolean removeUserFromResourcePermission ( java.lang.String policyId , java.lang.String groupName , java.lang.String accountName ) { java.lang.String [] policyIds = policyId . split ( ":" ) ; boolean userRemovedFromYarnPolicy = this . yarnCommonService . removeUserFromQueuePermission ( policyIds [ 0 ] , groupName , accountName ) ; boolean userRemovedFromHDFSPolicy = this . hdfsAdminService . removeUserFromResourcePermission ( policyIds [ 1 ] , groupName , accountName ) ; return userRemovedFromYarnPolicy && userRemovedFromHDFSPolicy ; } 
@ java.lang.Override public java.util.List < com.hearthsim.util.HearthActionBoardPair > playTurn ( int turn , com.hearthsim.model.BoardModel board , com.hearthsim.util.factory.BoardStateFactoryBase factory ) throws com.hearthsim.exception.HSException { if ( ( ( baseNode ) == null ) || ( ( ! ( baseNode.turn.data_ . equals ( board ) ) ) && ( ( baseNode.turnNum ) != turn ) ) ) { baseNode = new com.hearthsim.util.tree.MCTSTreeNode ( new com.hearthsim.util.tree.HearthTreeNode ( board ) , turn ) ; } com.hearthsim.util.tree.MCTSTreeNode retNode = baseNode . selectAction () ; return retNode . getTurnResults () ; } 
public synchronized int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; int value = ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; return value ; } 
public void handleResetButtonAction ( javafx.event.ActionEvent event ) throws java.io.IOException { java.lang.System.out . println ( "reseting level" ) ; int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetPieces () ; resetButtons () ; resetBoard ( i ) ; resetFields ( i ) ; } 
private static soot.JastAddJ.PathPart createPathPart ( java.lang.String s ) { try { java.io.File f = new java.io.File ( s ) ; if ( f . isDirectory () ) return new soot.JastAddJ.FolderPart ( f ) ; else if ( f . isFile () ) return new soot.JastAddJ.ZipFilePart ( f ) ; } catch ( java.io.IOException e ) {} return null ; } 
@ java.lang.Override public java.lang.String preLogin ( javax.servlet.http.HttpServletRequest request ) { org.shaolin.vogerp.commonmodel.ICaptcherService service = IServerServiceManager.INSTANCE . getService ( org.shaolin.vogerp.commonmodel.ICaptcherService . class ) ; org.shaolin.vogerp.commonmodel.be.ICaptcha captcha = service . getItem ( service . generateOne () ) ; javax.servlet.http.HttpSession session = request . getSession () ; session . setAttribute ( WebflowConstants.USER_TOKEN , captcha . getAnswer () ) ; return captcha . getQuestion () ; } 
public boolean borrowBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; return true ; } else { return false ; } } 
private static java.lang.String prepareMessage ( java.lang.String messageCode ) { if ( ( messageCode == null ) || ( messageCode . isEmpty () ) ) { return "nowe orzeczenie" ; } java.lang.String message ; if ( ( java.lang.Integer . parseInt ( messageCode ) ) > 4 ) { message = "nowych orzeczeń" ; } else if ( ( java.lang.Integer . parseInt ( messageCode ) ) > 1 ) { message = "nowe orzeczenia" ; } else { message = "nowe orzeczenie" ; } return message ; } 
public static final void updatePlayer ( net.minecraft.entity.player.EntityPlayer player ) { if ( player instanceof net.minecraft.entity.player.EntityPlayerMP ) { net.minecraft.entity.player.EntityPlayerMP playerMP = ( ( net.minecraft.entity.player.EntityPlayerMP ) ( player ) ) ; net.ci010.attributesmod.properties.Attributes.agility . upgrade ( playerMP ) ; net.ci010.attributesmod.properties.Attributes.endurance . upgrade ( playerMP ) ; net.ci010.attributesmod.properties.Attributes.power . upgrade ( playerMP ) ; } } 
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume >= 1.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume + 0.01 ) ) ; if ( newVolume > 1.0 ) newVolume = ( ( float ) ( 1.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( getArguments () . containsKey ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.ARG_ITEM_ID ) ) { org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id = getArguments () . getString ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.ARG_ITEM_ID ) ; mEvent = Events.EVENT_MAP . get ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id ) ; org.shingo.shingoeventsapp.api.InitLoader loader = new org.shingo.shingoeventsapp.api.InitLoader ( org.shingo.shingoeventsapp.ui.events.EventDetailFragment.mEvent_id , getContext () ) ; loader . load () ; } } 
public void addFile ( java.lang.String fileName , org.sem8.ds.rest.resource.NodeResource node ) { java.util.List < org.sem8.ds.rest.resource.NodeResource > temp ; temp = this . fileMap . get ( fileName ) ; if ( temp != null ) { temp . add ( node ) ; } else { temp = new java.util.ArrayList < org.sem8.ds.rest.resource.NodeResource > () ; temp . add ( node ) ; this . fileMap . put ( fileName , temp ) ; } } 
public boolean checkImpl ( wjtoth.cyclicstablematching.Matching matching , wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { return false ; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } return false ; } 
private java.lang.String _revert ( java.lang.String str ) { java.lang.String s = "" ; int len = str . length () ; for ( int i = 0 ; i < len ; i ++ ) { s += str . charAt ( ( ( len - 1 ) - i ) ) ; } return s ; } 
@ java.lang.Override public void onCompletion ( org.apache.kafka.clients.producer.RecordMetadata metadata , java.lang.Exception exception ) { if ( exception == null ) { org.apache.kafka.common.TopicPartition tp = new org.apache.kafka.common.TopicPartition ( metadata . topic () , metadata . partition () ) ; offsets . put ( tp , metadata . offset () ) ; } else { org.apache.kafka.streams.processor.internals.RecordCollector.log . error ( ( "Error sending record: " + metadata ) , exception ) ; } } 
public java.lang.String runNode ( java.lang.String input ) throws SoFTlib.SoFTException { int index = de.unidue.stud.maha.Main . getInputIndex ( myChar () ) ; int zahl = java.lang.Integer . valueOf ( SoFTlib.Helper . words ( input , 1 , index , index ) ) ; java.lang.String maskierer = de.unidue.stud.maha.Main . getMaskierer () ; form ( 'e' , zahl ) . send ( maskierer ) ; return "0" ; } 
public void unaryOp ( int o ) { java.lang.String op ; switch ( o ) { default: case org.squiddev.cobalt.Lua.OP_UNM : op = "neg" ; break; case org.squiddev.cobalt.Lua.OP_LEN : op = "length" ; break; case org.squiddev.cobalt.Lua.OP_NOT : op = "not" ; break; } main . visitMethodInsn ( org.squiddev.cobalt.luajc.compilation.INVOKESTATIC , org.squiddev.cobalt.luajc.compilation.CLASS_OPERATION , op , ( ( ( ( "(" + ( TYPE_STATE ) ) + ( TYPE_LUAVALUE ) ) + ")" ) + ( TYPE_LUAVALUE ) ) , false ) ; } 
private void processPicture ( javax.servlet.http.Part picture , com.lavalloisir.beans.User user ) { java.lang.String pictureName = null ; try { pictureName = getFileName ( picture ) ; validPictureName ( pictureName ) ; writeFile ( picture , pictureName ) ; java.lang.String localPath = path . substring ( path . indexOf ( "/img" ) ) ; user . setPicture ( ( ( "/Lavalloisir" + localPath ) + pictureName ) ) ; } catch ( java.lang.Exception e ) { setError ( com.lavalloisir.forms.RegistrationForm.FIELD_PICTURE , e . getMessage () ) ; } } 
@ java.lang.Override public void replaceAllTextOnPage ( int pageNumber , java.lang.String textToAdd ) { if ( ( pageNumber <= 0 ) || ( pageNumber > ( this . pages . length ) ) ) { java.lang.System.out . println ( "Invalid page number." ) ; return; } if ( ( textToAdd == null ) || ( textToAdd . equals ( "" ) ) ) { java.lang.System.out . println ( "Invalid text for adding." ) ; return; } this . pages [ ( pageNumber - 1 ) ] . deleteText () ; this . pages [ ( pageNumber - 1 ) ] . addText ( textToAdd ) ; } 
private void setTokens ( com.mcnaughton.client.spotifyModels.AccessResponse response ) { com.mcnaughton.client.SpotifyClient.accessToken = response . getAccess_token () ; if ( ( response . getRefresh_token () ) != null ) { com.mcnaughton.client.SpotifyClient.refreshToken = response . getRefresh_token () ; } com.mcnaughton.client.SpotifyClient.tokenType = response . getToken_type () ; com.mcnaughton.client.SpotifyClient.expireDate = org.joda.time.DateTime . now () . plusSeconds ( response . getExpires_in () ) ; } 
protected static org.matheclipse.core.interfaces.IAST sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; } 
@ java.lang.Override public T invertedCumulativeProbability ( double cumulativeProbability ) { com.google.common.base.Preconditions . checkArgument ( ( ( 0 < cumulativeProbability ) && ( cumulativeProbability <= 1.0 ) ) ) ; long card = domain . cardinality () ; long min = domain . ordinal ( domain . min () ) ; long ordinal = ( ( ( long ) ( java.lang.Math . ceil ( ( cumulativeProbability * card ) ) ) ) + min ) - 1 ; return domain . value ( ordinal ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ! ( o instanceof org.snt.inmemantlr.tree.AstNode ) ) return false ; org.snt.inmemantlr.tree.AstNode n = ( ( org.snt.inmemantlr.tree.AstNode ) ( o ) ) ; return ( ( ( ( n . getId () ) == ( this . getId () ) ) && ( n.ntype . equals ( this . ntype ) ) ) && ( n.label . equals ( this . label ) ) ) && ( this . children . equals ( n.children ) ) ; } 
@ java.lang.Override public void onResponse ( okhttp3.Call call , okhttp3.Response response ) throws java.io.IOException { if ( response . isSuccessful () ) { java.lang.String responseStr = response . body () . string () ; android.util.Log . d ( "RESPONSE WHOAMI" , responseStr ) ; refreshToken () ; } else { android.util.Log . d ( "RESPONSE WHOAMI" , "ertyui2" ) ; refreshToken () ; } } 
private java.lang.String readDir ( org.jdom2.Document doc , java.lang.String [] files , java.lang.String dirName ) { if ( files != null ) { java.util.Arrays . sort ( files ) ; } org.jdom2.Element p = buildElement ( files , dirName ) ; doc . getRootElement () . addContent ( p ) ; return p . getName () ; } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { int count = ( ( listener ) instanceof com.heinrichreimersoftware.materialintro.view.FadeableViewPager.OnOverscrollPageChangeListener ) ? com.heinrichreimersoftware.materialintro.view.FadeableViewPager . super . getAdapter () . getCount () : getAdapter () . getCount () ; listener . onPageScrolled ( java.lang.Math . min ( position , ( count - 1 ) ) , ( position < count ? positionOffset : 0 ) , ( position < count ? positionOffsetPixels : 0 ) ) ; } 
public void removeTask ( net.sf.memoranda.Task task ) { if ( task == null ) { return; } java.lang.String parentTaskId = task . getParentID () ; if ( parentTaskId != null ) { net.sf.memoranda.Task parentNode = getTaskElement ( parentTaskId ) ; if ( parentNode != null ) parentNode . removeSubTask ( task ) ; } taskList . remove ( task . getID () ) ; rootTaskList . remove ( task ) ; } 
@ java.lang.Override protected void onAction ( java.lang.String sender , java.lang.String login , java.lang.String hostname , java.lang.String target , java.lang.String action ) { java.lang.String nickName = this . stripNickname ( sender ) ; de.skuzzle.polly.sdk.eventlistener.IrcUser user = new de.skuzzle.polly.sdk.eventlistener.IrcUser ( nickName , login , hostname ) ; de.skuzzle.polly.sdk.eventlistener.MessageEvent e = new de.skuzzle.polly.sdk.eventlistener.MessageEvent ( this , user , target , action ) ; this . fireActionMessageEvent ( e ) ; } 
private void selectConversation ( javafx.scene.input.MouseEvent e ) { int index = conversations . getSelectionModel () . getSelectedIndex () ; java.lang.String data = conversations . getSelectionModel () . getSelectedItem () ; codeu.chat.common.ConversationSummary selectedConvo = lookupByTitle ( data , index ) ; if ( selectedConvo != null ) { codeu.chat.client.simplegui.ChatGuiFX.clientContext.conversation . setCurrent ( selectedConvo ) ; updateCurrentConversation ( selectedConvo ) ; } } 
private static weka.core.Instances loadTestFile ( java.io.File file ) { weka.core.Instances data = null ; weka.core.converters.ArffLoader loader = new weka.core.converters.ArffLoader () ; try { loader . setFile ( file ) ; data = loader . getDataSet () ; data . setClassIndex ( ( ( data . numAttributes () ) - 1 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return data ; } 
private void init () { com.shinav.mathapp.injection.component.Injector . getViewComponent ( this . getContext () ) . inject ( this ) ; int layout = getLayout ( cutsceneLine ) ; android.view.View view = inflate ( layout , this , false ) ; holder = new com.shinav.mathapp.cutscene.CutsceneLineView.ViewHolder ( view ) ; loadCharacterImage ( cutsceneLine ) ; holder.line_value . setVisibility ( com.shinav.mathapp.cutscene.INVISIBLE ) ; addView ( view ) ; } 
@ java.lang.Override public void display ( java.awt.Graphics g ) { if ( isHighlighted () ) { g . setColor ( java.awt.Color.green ) ; g . drawRect ( x , ( ( y ) + ( ( ( totalCards ) * ( Card.height ) ) / 2 ) ) , Card.width , Card.height ) ; setHighlight ( false ) ; } else { g . setColor ( java.awt.Color.black ) ; } totalCards = 0 ; stackDisplay ( g , top () ) ; } 
protected boolean isInBounds ( int x , int y ) { if ( ( ( ( x >= 0 ) && ( x < ( this . width ) ) ) && ( y >= 0 ) ) && ( y < ( this . height ) ) ) { return true ; } return false ; } 
protected void show404 ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setStatus ( HttpServletResponse.SC_NOT_FOUND ) ; request . setAttribute ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.MESSAGE , "Page Not Found" ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( com.lftechnology.batch7crud.controller.HTTPStatusHandler.ERROR_PAGE ) ; view . forward ( request , response ) ; } 
private void updateStudent ( int id , java.lang.String matricol , java.lang.String name , java.lang.String surname ) { com.studios.lucian.students.model.Student student = new com.studios.lucian.students.model.Student ( mCurrentGroup . getNumber () , matricol , name , surname ) ; if ( mStudentsDbHandler . updateStudent ( student ) ) { mStudentsList . set ( id , student ) ; listAdapter . notifyDataSetChanged () ; } else { android.widget.Toast . makeText ( getActivity () , R.string.error_update_student , Toast.LENGTH_SHORT ) . show () ; } } 
public void addTravel ( travelAgencyModel.Travel travel ) { if ( ( client ) != null ) { java.util.HashMap < java.lang.String , java.lang.Object > parameters = new java.util.HashMap <> () ; parameters . put ( CommandConstants.PARAM_TRAVEL , travel ) ; client . sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_TRAVEL , parameters ) ) ; } else { travelsList . addTravel ( travel ) ; } } 
protected org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } } 
public void onHeadingChanged ( double p_heading , double p_magnetic_heading , double p_true_heading , double p_timestamp , float p_x , float p_y , float p_z , float p_accuracy ) { com.runrev.android.Engine . doHeadingChanged ( p_heading , p_magnetic_heading , p_true_heading , p_timestamp , p_x , p_y , p_z , p_accuracy ) ; if ( m_wake_on_event ) com.runrev.android.Engine . doProcess ( false ) ; } 
static void writeMap ( net.openhft.chronicle.queue.ExcerptAppender appender , java.util.Map < java.lang.String , ? > map ) { try ( net.openhft.chronicle.wire.DocumentContext context = appender . writingDocument () ) { net.openhft.chronicle.wire.Wire wire = context . wire () ; for ( java.util.Map.Entry < java.lang.String , ? > entry : map . entrySet () ) { wire . writeEventName ( entry . getKey () ) . object ( entry . getValue () ) ; } } } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; android.support.v7.widget.RecyclerView tasksList = getView () . findViewById ( R.id.finished_tasks_recycler_view ) ; tasksList . setHasFixedSize ( true ) ; tasksList . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getContext () ) ) ; mAdapter = new com.example.hasmik_n.todolist.handlers.TasksRecyclerViewAdapter ( tasks ) ; tasksList . setAdapter ( mAdapter ) ; } 
private java.lang.String extractTag ( java.lang.String noteContent ) { java.lang.String [] contentWords = noteContent . split ( " " ) ; java.lang.String label = null ; for ( java.lang.String word : contentWords ) { if ( ( word . startsWith ( "#" ) ) && ( ( word . length () ) > 1 ) ) { label = word . substring ( 1 ) ; break; } } return label ; } 
private void register ( java.nio.file.Path dir ) throws java.io.IOException { java.nio.file.WatchKey key = dir . register ( watcher , java.nio.file.StandardWatchEventKinds.ENTRY_CREATE , java.nio.file.StandardWatchEventKinds.ENTRY_DELETE , java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY ) ; if ( trace ) { java.nio.file.Path prev = keys . get ( key ) ; if ( prev == null ) {} else { if ( ! ( dir . equals ( prev ) ) ) {} } } keys . put ( key , dir ) ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { if ( intent != null ) { if ( lv.kasparsj.android.util.Objects . equals ( intent . getAction () , getString ( R.string.action_update ) ) ) { if ( screenStateReceiver . isScreenOff () ) { pendingUpdateReceiver . setIsPendingUpdate ( true ) ; } else { lv.kasparsj.android.dwob.model.DailyWords . getInstance () . update () ; } } } return super . onStartCommand ( intent , flags , startId ) ; } 
public org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent getEvent ( java.lang.String eventUrl ) { java.lang.String eventJson = getEventJson ( eventUrl ) ; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper () ; org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent result = null ; try { result = mapper . readValue ( eventJson , org.simplebooks.integration.appdirect.model.appdirect.SubscriptionEvent . class ) ; } catch ( java.io.IOException iox ) { iox . printStackTrace () ; result = null ; } return result ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; switch ( requestCode ) { case REQ_CODE_SPEECH_INPUT : { if ( ( resultCode == ( RESULT_OK ) ) && ( null != data ) ) { java.util.ArrayList < java.lang.String > result = data . getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; txtSpeechInput . setText ( result . get ( 0 ) ) ; callPuter ( result . get ( 0 ) . toLowerCase () ) ; } break; } } } 
public boolean isAllValid ( sss.domain.Product product ) { return ( isProductCodeValid ( product ) ) && ( ( ( ( isProductUnique ( product ) ) && ( isProductNameValid ( product ) ) ) && ( isCostPricePositive ( product ) ) ) && ( isPricePositive ( product ) ) ) ; } 
public boolean move ( int destX , int destY ) { if ( isFirst = true ) { if ( destX == ( ( this . y ) + 2 ) ) { isFirst = false ; return true ; } } if ( destX == ( ( this . y ) + 1 ) ) { isFirst = false ; return true ; } return false ; } 
public boolean isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; return false ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; return true ; } } return true ; } 
private void localServicePermissionHandler ( int [] grantResults ) { if ( ( grantResults.length ) == 0 ) { return; } for ( int i : grantResults ) { if ( i == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { return; } } checkPermissionToLocalService () ; } 
public static games.strategy.triplea.ai.proAI.data.ProBattleResult callBattleCalculator ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits ) { return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits , false ) ; } 
public static void toh ( int n , char src , char aux , char dest ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , aux , src , dest ) ; } } 
public void componentResized ( java.awt.event.ComponentEvent e ) { view.MapScrollPane p = ( ( view.MapScrollPane ) ( e . getComponent () ) ) ; p.map . repaint () ; p . getViewport () . setViewPosition ( p . getCenter () ) ; p.map . updateDisplay ( p . getWidth () , p . getHeight () ) ; } 
public void undoAddedEvent ( carelender.model.EventList eventList ) { for ( int i = 0 ; i < ( events . size () ) ; i ++ ) { for ( carelender.model.Event eventObj : eventList ) { if ( ( events . get ( i ) . getUid () ) == ( eventObj . getUid () ) ) { events . remove ( i ) ; } } } saveToFile ( filename , events ) ; } 
public int getPartyIDFromSenderInvite ( int playerID ) { java.util.List < session.Invite > myInvites = player . getInvites () ; int partyID = 0 ; for ( int i = 0 ; i < ( myInvites . size () ) ; i ++ ) { if ( playerID == ( myInvites . get ( i ) . getSenderID () ) ) { partyID = myInvites . get ( i ) . getPartyID () ; break; } } java.lang.System.out . println ( partyID ) ; return partyID ; } 
public static boolean listContainsArray ( java.util.List < double [] > list , double [] array ) { for ( double [] element : list ) { if ( java.util.Arrays . equals ( element , array ) ) { return true ; } } return false ; } 
@ java.lang.Override public void processCommand ( int address , int value , jace.apple2e.MOS65C02.MODE addressMode , jace.apple2e.MOS65C02 cpu ) { if ( ( value & ( 1 < < ( bit ) ) ) != 0 ) { cpu . setProgramCounter ( address ) ; cpu . addWaitCycles ( ( cpu.pageBoundaryPenalty ? 2 : 1 ) ) ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { for ( com.google.firebase.database.DataSnapshot postSnapshot : dataSnapshot . getChildren () ) { com.expixel.binki.Post post = postSnapshot . getValue ( com.expixel.binki.Post . class ) ; viewHolder.bookName . setText ( post.bookName ) ; viewHolder.likeCount . setText ( java.lang.String . valueOf ( post.starCount ) ) ; } } 
public void setNode ( model.ClassNode node ) { this . node = node ; titleField . setText ( this . node . getTitle () ) ; attributesArea . setText ( this . node . attributesProperty () . getValue () ) ; operationsArea . setText ( this . node . operationsProperty () . getValue () ) ; } 
@ java.lang.Override public void done ( com.parse.ParseUser parseUser , com.parse.ParseException e ) { if ( parseUser == null ) {} else if ( parseUser . isNew () ) { getFacebookInfo () ; } else { android.util.Log . d ( com.trytara.tara.LoginActivity.TAG , ( "CURRENT USER: " + ( parseUser . toString () ) ) ) ; } } 
public void changeDragonRight ( android.view.View view ) { if ( ( currDragon ) == ( ( dragons . size () ) - 1 ) ) { currDragon = 0 ; addAccessory ( dragons . get ( currDragon ) ) ; } else { currDragon += 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } } 
public void addCampaign ( java.lang.String name , java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( name , campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } 
private static java.lang.String getKindForAliasClass ( java.lang.String simpleName ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : org.ballerinalang.composer.service.workspace.tools.ModelGenerator.alias . entrySet () ) { if ( simpleName . equals ( entry . getValue () ) ) { return entry . getKey () ; } } throw new java.lang.AssertionError ( ( "Undefined entry :" + simpleName ) ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ! ( dataSnapshot . exists () ) ) { com.makalaster.adventurefriends.model.User newUser = new com.makalaster.adventurefriends.model.User ( currentUser . getUid () , currentUser . getDisplayName () , currentUser . getEmail () ) ; database . child ( currentUser . getUid () ) . setValue ( newUser ) ; } mUserHolder . LoadCurrentUser ( currentUser . getUid () ) ; } 
protected void headerPrivateCPrototypes ( org.thingml.xtext.thingML.Thing thing , java.lang.StringBuilder builder , org.thingml.compilers.cpp.CppCompilerContext ctx ) { java.lang.StringBuilder cppHeaderBuilder = ctx . getCppHeaderCode () ; for ( org.thingml.xtext.thingML.Function f : org.thingml.xtext.constraints.ThingMLHelpers . allFunctions ( thing ) ) { generatePrototypeforThingDirect ( f , cppHeaderBuilder , ctx , thing , true ) ; cppHeaderBuilder . append ( ";\n" ) ; } } 
public void addBus ( travelAgencyModel.Bus bus ) { if ( ( client ) != null ) { java.util.HashMap < java.lang.String , java.lang.Object > parameters = new java.util.HashMap <> () ; parameters . put ( CommandConstants.PARAM_BUS , bus ) ; client . sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_BUS , parameters ) ) ; busList . addBus ( bus ) ; } else { busList . addBus ( bus ) ; } } 
public boolean checkWin ( boolean xTurn , int column ) { boolean horizontal = ( checkWinHorizontal ( xTurn , column ) ) > 4 ; boolean vertical = ( checkWinVertical ( xTurn , column ) ) > 4 ; boolean diagonal = ( checkWinDiagonal ( xTurn , column ) ) > 4 ; return ( horizontal || vertical ) || diagonal ; } 
@ com.dataloom.datastore.data.controllers.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ com.dataloom.datastore.data.controllers.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ com.dataloom.datastore.data.controllers.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , @ com.dataloom.datastore.data.controllers.RequestParam ( value = TOKEN , required = false ) java.lang.String token , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , fileType , token ) ; } 
private void seekTo ( int position ) { android.util.Log . d ( com.example.sunsai.mymusicplayer.PlayerActivity.TAG , "seekTo" ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.sunsai.mymusicplayer.service.MusicService . class ) ; intent . setAction ( MusicService.CMD_MUSICSERVICE_SEEKTO ) ; intent . putExtra ( "SEEK_TO" , position ) ; startService ( intent ) ; } 
@ java.lang.Override public void onAdFailedToLoad ( int error ) { android.util.Log . d ( com.samcodes.admob.BannerListener.TAG , "onBannerFailedToLoad" ) ; android.util.Log . d ( com.samcodes.admob.BannerListener.TAG , ( "Hiding banner with id " + ( id ) ) ) ; com.samcodes.admob.AdView view = com.samcodes.admob.AdMobExtension . getBannerViewForUnitId ( id ) ; view . setVisibility ( View.INVISIBLE ) ; com.samcodes.admob.AdMobExtension . getLayout () . removeView ( view ) ; com.samcodes.admob.AdMobExtension . getLayout () . bringToFront () ; com.samcodes.admob.AdMobExtension . callHaxe ( "onBannerFailedToLoad" , new java.lang.Object [] { id } ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/addCommodity" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public java.lang.String addCommodity ( @ org.springframework.web.bind.annotation.RequestParam ( value = "purchaseCaseId" , required = true ) java.lang.String purchaseCaseId , @ org.springframework.web.bind.annotation.RequestParam ( value = "commodityIds" , required = true ) java.lang.String [] commodityIds ) { java.lang.Integer [] ids = new java.lang.Integer [ commodityIds.length ] ; for ( int i = 0 ; i < ( commodityIds.length ) ; i ++ ) { ids [ i ] = java.lang.Integer . valueOf ( commodityIds [ i ] ) ; } purchaseCaseService . addPurchaseCaseIdToCommoditys ( purchaseCaseId , ids ) ; return com.jersey.purchaseCase.controller.PurchaseCaseController.REDIRECT_ADD_COMMODITY . replace ( "{id}" , purchaseCaseId ) ; } 
private boolean isContains ( java.lang.String address , java.lang.String fromRule ) { java.lang.String [] fromRules = fromRule . split ( ";" ) ; for ( int i = 0 ; i < ( fromRules.length ) ; i ++ ) { if ( ( address != null ) && ( address . contains ( fromRules [ i ] ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public void success ( co.gov.inci.evaluon.backend.models.classes.authentication.Token token , retrofit.client.Response response ) { userToken = token ; co.gov.inci.evaluon.backend.models.classes.user.Evaluee.Info evaluee = new co.gov.inci.evaluon.backend.models.classes.user.Evaluee.Info ( co.gov.inci.evaluon.backend.models.classes.user.Evaluee . genderById ( gender . getCheckedRadioButtonId () ) , co.gov.inci.evaluon.backend.models.classes.user.Evaluee . disabilitiesById ( disability . getCheckedRadioButtonId () ) , co.gov.inci.evaluon.backend.models.classes.user.Evaluee . typesById ( type . getCheckedRadioButtonId () ) , co.gov.inci.evaluon.backend.models.classes.user.Evaluee . levelsById ( level . getCheckedRadioButtonId () ) ) ; api . createEvaluee ( token . toString () , evaluee , evalueeCallback ) ; } 
public void onSetAlarmTime ( android.view.View view ) { android.os.Bundle bundle = new android.os.Bundle () ; bundle . putInt ( "set_hour" , hour ) ; bundle . putInt ( "set_minute" , minute ) ; concentric.medalarm.AlarmTimePickerDialogFragment timePickerDialogFragment = new concentric.medalarm.AlarmTimePickerDialogFragment () ; timePickerDialogFragment . setHandler ( timePickerHandler ) ; timePickerDialogFragment . setArguments ( bundle ) ; concentric.medalarm.activity.FragmentManager fragmentManager = getSupportFragmentManager () ; concentric.medalarm.activity.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . add ( timePickerDialogFragment , "time_picker" ) ; fragmentTransaction . commit () ; } 
public java.math.BigDecimal getMainContractPrice ( com.ersoft.web.domain.business.contract.MainContract mainContract ) { java.math.BigDecimal price = java.math.BigDecimal.ZERO ; if ( mainContract != null ) { java.util.List < com.ersoft.web.domain.business.contract.SubContract > subs = subContractService . findActiveAll ( com.ersoft.web.service.business.SubContractPredicates . mainContractPredicate ( mainContract ) , new org.springframework.data.domain.Sort ( org.springframework.data.domain.Sort.Direction.DESC , "createdDate" ) ) ; for ( com.ersoft.web.domain.business.contract.SubContract sub : subs ) { price = price . add ( getSubContractPrice ( sub ) ) ; } } return price ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == null ) return false ; if ( ! ( obj instanceof cz.dd4j.simulation.data.dungeon.elements.places.Corridor ) ) return false ; cz.dd4j.simulation.data.dungeon.elements.places.Corridor other = ( ( cz.dd4j.simulation.data.dungeon.elements.places.Corridor ) ( obj ) ) ; return ( ( cz.dd4j.utils.Safe . equals ( room1 , other.room1 ) ) && ( cz.dd4j.utils.Safe . equals ( room2 , other.room2 ) ) ) || ( ( cz.dd4j.utils.Safe . equals ( room1 , other.room2 ) ) && ( cz.dd4j.utils.Safe . equals ( room2 , other.room1 ) ) ) ; } 
public java.lang.String getTodayPlusDay ( int days ) { java.util.Date heute = new java.util.Date () ; java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd" ) ; java.util.Calendar c = java.util.Calendar . getInstance () ; c . setTime ( heute ) ; c . add ( java.util.Calendar.DATE , days ) ; return sdf . format ( c . getTime () ) ; } 
private void clearInMemoryJobInfos ( int jobId ) { java.util.List < cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID > clearedTasks = com.google.common.collect.Lists . newArrayList () ; java.util.LinkedList < cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID > tasks = managedJobToTaskList . remove ( jobId ) ; if ( tasks != null ) { for ( cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID id : tasks ) { managedTaskIdToInfos . remove ( id ) ; clearedTasks . add ( id ) ; } } managedJobIdToInfos . remove ( jobId ) ; cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.LOG . info ( ( ( ( "In-memory state purged: jobId=" + jobId ) + ", tasks=" ) + clearedTasks ) ) ; } 
private java.lang.StringBuilder log ( java.lang.String level , java.lang.Object message ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.text.SimpleDateFormat format = new java.text.SimpleDateFormat ( com.kk.utils.log.ConsoleLogger.formatDefaultTimestamp ) ; java.lang.String time = format . format ( new java.util.Date () ) ; sb . append ( time ) ; sb . append ( " " ) ; sb . append ( level ) ; sb . append ( " " ) ; sb . append ( getFileNameAndLineNumber () ) ; sb . append ( " - " ) ; sb . append ( message ) ; return sb ; } 
@ java.lang.Override public void handleInput ( nl.weeaboo.vn.math.Matrix parentTransform , nl.weeaboo.vn.input.IInput input ) { nl.weeaboo.vn.math.Matrix inputTransform = parentTransform . translatedCopy ( ( - ( getX () ) ) , ( - ( getY () ) ) ) ; for ( nl.weeaboo.vn.scene.IVisualElement elem : nl.weeaboo.vn.scene.impl.SceneUtil . getChildren ( this , VisualOrdering.FRONT_TO_BACK ) ) { elem . handleInput ( inputTransform , input ) ; } } 
public java.util.ArrayList < graph.Vector > getVectorsPointingAway ( graph.Point p ) { java.util.ArrayList < graph.Vector > vs = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( getEdges () . size () ) ; i ++ ) { if ( getEdges () . get ( i ) . getP1 () . equals ( p ) ) { vs . add ( getEdges () . get ( i ) ) ; } } return vs ; } 
public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) ) ; } 
@ java.lang.Override public void doIt ( com.github.oxo42.stateless4j.transitions.Transition < com.couchbase.lite.replicator.ReplicationState , com.couchbase.lite.replicator.ReplicationTrigger > transition ) { com.couchbase.lite.util.Log . v ( Log.TAG_SYNC , ( ( ( "[onExit()] " + ( transition . getSource () ) ) + " => " ) + ( transition . getDestination () ) ) ) ; if ( ( transition . getSource () ) == ( transition . getDestination () ) ) { return; } notifyChangeListenersStateTransition ( transition ) ; } 
public static java.lang.String readStringFromFile ( java.io.File inputFile ) { if ( edu.iastate.symex.util.FileIO.TURN_CACHE_ON ) { if ( ! ( edu.iastate.symex.util.FileIO.fileMap . containsKey ( inputFile ) ) ) edu.iastate.symex.util.FileIO.fileMap . put ( inputFile , edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ) ; return edu.iastate.symex.util.FileIO.fileMap . get ( inputFile ) ; } else { return edu.iastate.symex.util.FileIO . readStringFromFileWithoutCache ( inputFile ) ; } } 
public int updateStudent ( com.carpool.model.Student student ) { return jdbcTemplate . update ( UPDATE , student . getFirstName () , student . getLastName () , student . getEmail () , ( student . isDriver () ? 1 : 0 ) , ( student . isRider () ? 1 : 0 ) , student . getIdStudent () ) ; } 
public void crossover ( ga.Genes genes ) { java.util.Random rand = new java.util.Random () ; for ( int i = 2 ; i < ( genes . getNum () ) ; i += 2 ) { int cuttingPoint = ( rand . nextInt ( ( ( genes . getDim () ) - 1 ) ) ) + 1 ; ga.Gene . shiftDNASection ( genes . getAt ( i ) , genes . getAt ( ( i + 1 ) ) , cuttingPoint , genes . getDim () ) ; } } 
public void targetSizeCheck ( shared.logic.support.action.Action a ) { if ( ( a.ability ) == ( shared.roles.Jailor.EXECUTE_ ) ) { if ( ( a . getTargets () . size () ) > ( jailedTargets . size () ) ) Exception ( "Cannot execute someone that isn't jailed" ) ; if ( ( getPerceivedCharges () ) != ( shared.logic.support.rules.Rules.UNLIMITED ) ) if ( ( a . getTargets () . size () ) > ( getPerceivedCharges () ) ) Exception ( "Not enough executions for that many targets" ) ; } } 
public void run ( int port , int timeOut ) { printInit ( port , timeOut ) ; try { serverSocket = new java.net.ServerSocket ( port ) ; serverSocket . setSoTimeout ( timeOut ) ; socket = serverSocket . accept () ; printWelcome () ; htw.lab04.app.MessageReceiver messageReceiver = new htw.lab04.app.MessageReceiver ( socket ) ; htw.lab04.app.MessageSender messageSender = new htw.lab04.app.MessageSender ( socket ) ; messageSender . start () ; messageReceiver . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( ! ( obj instanceof iguana.utils.input.Input ) ) return false ; iguana.utils.input.Input other = ( ( iguana.utils.input.Input ) ( obj ) ) ; return ( ( this . length () ) == ( other . length () ) ) && ( java.util.Arrays . equals ( characters , other.characters ) ) ; } 
private com.progressoft.jip.ui.action.Action < T > generateAction ( com.progressoft.jip.ui.xml.element.ActionXml actionXml ) { try { java.lang.Object newInstance = newActionInstance ( actionXml ) ; return ( ( com.progressoft.jip.ui.action.Action < T > ) ( newInstance ) ) ; } catch ( java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException | java.lang.SecurityException | java.lang.NoSuchMethodException | java.lang.IllegalArgumentException | java.lang.reflect.InvocationTargetException e ) { throw new com.progressoft.jip.ui.xml.UserInterfaceParsingException ( e ) ; } } 
private void createClient ( java.lang.String email , java.lang.String name , java.lang.String password , java.lang.String address , java.lang.String birthdate , double posX , double posY ) { Client newClient = new Client ( email , name , password , address , birthdate , posX , posY ) ; this . clients . add ( newClient ) ; } 
public static void addYearCredits ( final java.util.Map < org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod , java.math.BigDecimal > result , final org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod curricularPeriod , final java.math.BigDecimal credits ) { final java.math.BigDecimal creditsYear = result . get ( curricularPeriod ) ; result . put ( curricularPeriod , ( creditsYear != null ? creditsYear . add ( credits ) : credits ) ) ; } 
private void rebuild ( boolean bracketsPairsTouched , boolean singleBracketsTouched , boolean hintsTouched , boolean alwaysRedraw ) { boolean update = alwaysRedraw ; if ( bracketsPairsTouched ) { update |= updateSurroundingPairsToPaint ( _caretOffset ) ; update |= clearHoveredPairsToPaint () ; } if ( singleBracketsTouched ) update |= updateSingleBrackets () ; update |= updateHints () ; if ( update ) { _textWidget . getDisplay () . asyncExec ( new java.lang.Runnable () { @ java.lang.Override public void run () { _textWidget . redraw () ; } } ) ; } } 
@ java.lang.SuppressWarnings ( value = "DefaultLocale" ) private static boolean checkExtension ( java.lang.String path , java.lang.String [] extensions ) { if ( path == null ) { return false ; } for ( int i = 0 ; i < ( extensions.length ) ; i ++ ) { if ( path . toLowerCase () . endsWith ( extensions [ i ] ) ) { return true ; } } return false ; } 
private boolean isPrime ( int number ) { if ( number == 2 ) { return true ; } if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; } 
@ java.lang.Override public void onScrollStateChanged ( android.widget.AbsListView view , int scrollState ) { switch ( scrollState ) { case AbsListView.OnScrollListener.SCROLL_STATE_IDLE : if ( ( view . getLastVisiblePosition () ) == ( ( view . getCount () ) - 1 ) ) { ( page ) ++ ; totalUrl = ( baseUrl ) + ( getPageValue ( page ) ) ; getData () ; } break; } } 
public void setOptions ( java.util.ArrayList < gui.Button > options , entity.AbstractEntity entity ) { if ( options != null ) { for ( int i = 0 ; i < ( options . size () ) ; i ++ ) { options . get ( i ) . setSize ( 30 , 30 ) ; } } else if ( entity != ( calledby ) ) { return; } calledby = entity ; this . options = options ; } 
@ java.lang.Override public void draw ( java.awt.Graphics g ) { super . draw ( g ) ; java.awt.Graphics2D g2d = ( ( java.awt.Graphics2D ) ( g ) ) ; this . applyTransformations ( g2d ) ; for ( edu.virginia.engine.display.DisplayObject child : children ) { if ( child != null ) { child . draw ( g ) ; } } this . reverseTransformations ( g2d ) ; } 
@ java.lang.Override protected void onPostExecute ( com.wozainali.manho.myapplication.kml.Placemark placemark ) { if ( placemark != null ) { com.squareup.otto.Bus bus = com.wozainali.manho.myapplication.bus.ZaiNaliBus . getBus () ; bus . post ( new com.wozainali.manho.myapplication.bus.events.ZoomToPointEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.AddMarkerEvent ( placemark ) ) ; bus . post ( new com.wozainali.manho.myapplication.bus.events.DrawPolygonsEvent ( placemark . getPolygons () ) ) ; } } 
@ java.lang.Override public boolean isDirty ( com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean ) { if ( ( buddyInstructionEditText ) == null ) { return false ; } else if ( missionBean == null ) { return false ; } else { return ! ( buddyInstructionEditText . toString () . equals ( missionBean . getBuddyInstruction () ) ) ; } } 
public void applyStrength ( int strength ) { this . strength = strength ; if ( strength == 0 ) strengthButton0 . setSelected ( true ) ; else if ( strength == 1 ) strengthButton1 . setSelected ( true ) ; else if ( strength == 2 ) strengthButton2 . setSelected ( true ) ; else if ( strength == 3 ) strengthButton3 . setSelected ( true ) ; else if ( strength == 4 ) strengthButton4 . setSelected ( true ) ; else strengthRadioGroup . clearSelection () ; } 
public static java.lang.Boolean attachAssetToAccount ( java.lang.String assetUuid , java.lang.String accountUuid ) { java.util.HashMap < java.lang.String , java.lang.String > params = new java.util.HashMap < java.lang.String , java.lang.String > () ; params . put ( KeyConstants.Uuid , accountUuid ) ; params . put ( KeyConstants.AttachedAssetUuid , assetUuid ) ; return instances.sample_rating.WeightedRate.repository . accountAttach ( params ) ; } 
private void validateHeader ( final java.lang.String [] headers ) throws java.io.IOException { if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } 
protected void doConvert ( mondo.token.ITokenizer tokenizer ) { insertBracketAfterEventually ( tokenizer ) ; try { text = functionMap . get ( originalText ) . apply ( originalText ) ; } catch ( java.lang.NullPointerException e ) { try { text = tokenFunctionMap . get ( originalText ) . apply ( this ) ; } catch ( java.lang.NullPointerException ee ) {} } } 
@ java.lang.Override public void angreifen ( pkg.Charakter gegner ) { int schaden = random . getRandom ( 15 , 25 ) ; if ( ( this . getSpezialfaehigkeit () ) == true ) { if ( this . wahrscheinlichkeit () ) { java.lang.System.out . println ( "Erfolgreich!" ) ; this . schadenNehmen ( ( schaden * 2 ) ) ; } else schaden = schaden / 2 ; } super . angreifen ( gegner ) ; gegner . schadenNehmen ( schaden ) ; } 
private void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; } 
public static void forward ( java.lang.String url , javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) { javax.servlet.RequestDispatcher rd = request . getRequestDispatcher ( url ) ; try { rd . forward ( request , response ) ; } catch ( javax.servlet.ServletException | java.io.IOException e ) { Servlet.Commands.LOG . error ( e ) ; } } 
public java.lang.String getStringBetweenQuotationMarks ( java.lang.String line ) { line = line . replace ( "\t" , "" ) ; line = line . trim () ; java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "'(.*?)'" ) ; java.util.regex.Matcher matcher = pattern . matcher ( line ) ; if ( matcher . find () ) line = matcher . group ( 1 ) ; return line ; } 
@ java.lang.Override public org.jasig.cas.ticket.proxy.ProxyGrantingTicket grantProxyGrantingTicket ( final java.lang.String id , final org.jasig.cas.authentication.Authentication authentication , final org.jasig.cas.ticket.ExpirationPolicy expirationPolicy ) { synchronized ( this ) { if ( this . grantedTicketAlready ) { throw new java.lang.IllegalStateException ( "PGT already generated for this ST. Cannot grant more than one TGT for ST" ) ; } this . grantedTicketAlready = java.lang.Boolean.TRUE ; } return new org.jasig.cas.ticket.ProxyGrantingTicketImpl ( id , service , this . getGrantingTicket () , authentication , expirationPolicy ) ; } 
private void scaleWallsY ( float multiplier ) { com.badlogic.gdx.math.collision.BoundingBox bounds = new com.badlogic.gdx.math.collision.BoundingBox () ; backWall . calculateBoundingBox ( bounds ) . mul ( backWall.transform ) ; if ( ( multiplier > 0 ) || ( ( bounds . getHeight () ) > ( com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION ) ) ) { float scalePercentage = 1.0F + ( ( ( com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT ) / ( bounds . getHeight () ) ) * multiplier ) ; for ( com.ggwp.interiordesigner.object.Wall wall : getWalls () ) { wall.transform . scale ( 1.0F , scalePercentage , 1.0F ) ; } } } 
@ java.lang.Override public void map ( water.util.Chunk c ) { for ( int i = 0 ; i < ( c._len ) ; ++ i ) { if ( ! ( c . isNA ( i ) ) ) c . set ( i , fromTo [ ( ( int ) ( c . at8 ( i ) ) ) ] ) ; } } 
void createMetadatasInDefaultSchemaIfInexistent ( com.constellio.model.entities.Taxonomy taxonomy , java.lang.String schemaType ) { if ( ! ( getClassifiedObjects ( taxonomy ) . contains ( schemaType ) ) ) { java.lang.String groupLabel = com.constellio.app.ui.i18n.i18n . $ ( "classifiedInGroupLabel" ) ; valueListServices () . createAMultivalueClassificationMetadataInGroup ( taxonomy , schemaType , "classifiedInGroupLabel" , groupLabel ) ; } } 
public br.com.service.radar.entity.User alreadyUser ( java.lang.String login ) { try { br.com.service.radar.persistence.TypedQuery < br.com.service.radar.entity.User > messageTypedQuery = entityManager . createNamedQuery ( User.FIND_USER_BY_LOGIN , br.com.service.radar.entity.User . class ) ; messageTypedQuery . setParameter ( "cpf" , login ) ; return messageTypedQuery . getSingleResult () ; } catch ( br.com.service.radar.persistence.NoResultException noResultException ) { return null ; } catch ( br.com.service.radar.persistence.PersistenceException persistenceException ) { log . error ( "Erro ao buscar user, email [{}]" , login , persistenceException ) ; throw persistenceException ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { ca.ualberta.cs.zindi.zindi_sizebook.Person mPerson = newPeopleList . get ( position ) ; android.content.Intent mIntent = new android.content.Intent ( this , ca.ualberta.cs.zindi.zindi_sizebook.PersonActivity . class ) ; android.os.Bundle mBundle = new android.os.Bundle () ; mBundle . putParcelable ( ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.PAR_KEY , mPerson ) ; mIntent . putExtras ( mBundle ) ; startActivityForResult ( mIntent , ca.ualberta.cs.zindi.zindi_sizebook.MainActivity.EDIT_REQUEST ) ; } 
public java.lang.String mark ( int pos ) { if ( ( yourField . at ( pos ) ) == '~' ) { return "missed!\n" ; } java.lang.String hitstr = "" ; hitstr = yourField . addHit ( pos ) ; if ( hitstr . contains ( "sunk" ) ) ( this . shipsDestroyed ) ++ ; return hitstr ; } 
public java.lang.String getMimeType ( int pos ) { if ( ( ( com.fwgg8547.mycast.CardModel.mCursor ) == null ) || ( ! ( com.fwgg8547.mycast.CardModel.mCursor . moveToPosition ( pos ) ) ) ) { android.util.Log . w ( com.fwgg8547.mycast.CardModel.TAG , "fail movetopos" ) ; return null ; } int indx = com.fwgg8547.mycast.CardModel.mCursor . getColumnIndex ( MediaStore.Images.Media.MIME_TYPE ) ; java.lang.String mime = com.fwgg8547.mycast.CardModel.mCursor . getString ( indx ) ; return mime ; } 
@ java.lang.Override public android.app.Dialog onCreateDialog ( android.os.Bundle savedInstanceState ) { final java.util.Calendar c = java.util.Calendar . getInstance () ; int hour = c . get ( java.util.Calendar.HOUR_OF_DAY ) ; int minute = c . get ( java.util.Calendar.MINUTE ) ; return new android.app.TimePickerDialog ( getActivity () , this , hour , minute , android.text.format.DateFormat . is24HourFormat ( getActivity () ) ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ( ( dataSnapshot . getValue () ) != null ) && ( dataSnapshot . getValue () . equals ( emailHash ) ) ) { android.util.Log . d ( "" , java.lang.String . format ( "FirebaseBackend:connectBudgetAndUserByEmail: value: %s, address: %s" , dataSnapshot . getValue () , emailHash ) ) ; connectBudgetAndUser ( bid , uidAsString ) ; } else { android.util.Log . d ( "" , java.lang.String . format ( "FirebaseBackend:connectBudgetAndUserByEmail: uid is: %s, value: is null, address: %s" , uidAsString , emailHash ) ) ; } } 
public void update ( java.lang.String query , boolean silence ) { try { java.sql.PreparedStatement statement = connection . prepareStatement ( query ) ; statement . execute () ; } catch ( java.sql.SQLException e ) { if ( silence ) {} else { e . printStackTrace () ; } } } 
public void updateStudentGroup ( java.lang.Long pyramusId ) { fi.pyramus.rest.model.StudentGroup studentGroup = pyramusClient . get () . get ( java.lang.String . format ( "/students/studentGroups/%d" , pyramusId ) , fi.pyramus.rest.model.StudentGroup . class ) ; java.lang.String identifier = identifierMapper . getStudentGroupIdentifier ( pyramusId ) ; fi.muikku.model.users.UserGroupEntity userGroupEntity = userGroupEntityController . findUserGroupEntityByDataSourceAndIdentifier ( SchoolDataPyramusPluginDescriptor.SCHOOL_DATA_SOURCE , identifier , true ) ; if ( studentGroup == null ) { if ( userGroupEntity != null ) fireUserGroupRemoved ( identifier ) ; } else { if ( userGroupEntity == null ) { fireUserGroupDiscovered ( identifier ) ; } else { fireUserGroupUpdated ( identifier ) ; } } } 
private void setModelForAcceptors ( challenge.dbside.models.ChallengeDefinition challenge , org.springframework.ui.Model model ) { java.util.List acceptors = new java.util.ArrayList ( new java.util.HashSet ( challenge . getAllAcceptors () ) ) ; int acceptorsOnPage = 6 ; model . addAttribute ( "listOfAcceptors" , ( ( acceptors . size () ) > acceptorsOnPage ? acceptors . subList ( 0 , acceptorsOnPage ) : acceptors . subList ( 0 , acceptors . size () ) ) ) ; model . addAttribute ( "showAcceptorsExtendenceButton" , ( ( acceptors . size () ) > acceptorsOnPage ) ) ; } 
protected void readGraphicsFromLibrary ( int templateID , double xCoor , double yCoor ) { if ( ( ( this ) instanceof com.nkoiv.mists.game.gameobject.Structure ) && ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary . create ( templateID ) ; if ( dummy != null ) this . graphics = dummy.graphics ; } if ( ( this . graphics ) == null ) this . graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this . graphics . setPosition ( xCoor , yCoor ) ; } 
public void makeBestMoveAccordingToAILogic ( chess.domain.GameSituation game ) { ais [ ( ( game . getTurn () ) % 2 ) ] . findBestMoves ( game ) ; chess.domain.Move move = ais [ ( ( game . getTurn () ) % 2 ) ] . getBestMove () ; setChosen ( move . getPiece () ) ; moveToTargetLocation ( move . getTarget () . getColumn () , move . getTarget () . getRow () , game , true ) ; } 
public void delete ( int key ) { java.util.Iterator < QueueEntity > iter = info . iterator () ; while ( iter . hasNext () ) { QueueEntity it = iter . next () ; if ( ( it.ID ) == key ) { info . remove ( it ) ; break; } } } 
private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController , tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; } 
void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } 
public http.Header getHeader ( java.lang.String header ) throws http.exceptions.BadRequestException { if ( ( header . split ( ": " ) . length ) != 2 ) { throw new http.exceptions.BadRequestException () ; } for ( http.Header.Type type : http.Header.Type . values () ) { if ( header . toUpperCase () . startsWith ( type.type ) ) { return new http.Header ( header . split ( ":" ) [ 1 ] , type ) ; } } return new http.Header ( header . split ( ":" ) [ 1 ] , http.Header.Type.UnknownHeader ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; com.jaitlapps.bestadvice.domain.list.ListRecordGroup listRecordGroup = com.jaitlapps.bestadvice.database.FavoriteManager . getInstance ( getActivity () ) . getList () ; com.jaitlapps.bestadvice.adapter.ListAdapter adapter = new com.jaitlapps.bestadvice.adapter.ListAdapter ( getActivity () , listRecordGroup ) ; setListAdapter ( adapter ) ; } 
@ java.lang.Override protected com.cowlark.cowbel.parser.core.ParseResult parseImpl ( com.cowlark.cowbel.parser.core.Location location ) { com.cowlark.cowbel.parser.core.ParseResult pr = com.cowlark.cowbel.parser.parsers.OpenParenthesisParser . parse ( location ) ; if ( pr . failed () ) return pr ; com.cowlark.cowbel.parser.core.ParseResult argumentspr = com.cowlark.cowbel.parser.parsers.ExpressionListParser . parse ( pr . end () ) ; if ( argumentspr . failed () ) return argumentspr ; pr = com.cowlark.cowbel.parser.parsers.CloseParenthesisParser . parse ( argumentspr . end () ) ; if ( pr . failed () ) return pr ; argumentspr . setEnd ( pr . end () ) ; return argumentspr ; } 
public void refresh ( java.lang.String rateLimiterYaml ) { org.springframework.beans.factory.config.YamlPropertiesFactoryBean yaml = new org.springframework.beans.factory.config.YamlPropertiesFactoryBean () ; yaml . setResources ( new org.springframework.core.io.FileSystemResource ( rateLimiterYaml ) ) ; rateLimiterProperties = yaml . getObject () ; this . time_frame = ( ( int ) ( rateLimiterProperties . get ( "time-frame" ) ) ) * 1000 ; clear () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_register ) ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.objectsanddesign.shoppingwithfriends.RegisterActivity.PlaceholderFragment () ) . commit () ; } } 
@ java.lang.Override public org.jvoicexml.xml.srgs.GrammarType identify ( final org.jvoicexml.GrammarDocument grammar ) { final org.jvoicexml.xml.srgs.GrammarType requestedType = grammar . getMediaType () ; if ( requestedType . equals ( HalefGrammarType.HALEF ) ) { return HalefGrammarType.HALEF ; } if ( grammar . getTextContent () . startsWith ( "wfst\n" ) ) { return HalefGrammarType.HALEF ; } return null ; } 
private java.lang.String getText ( final org.objectweb.asm.tree.MethodNode mn ) { org.objectweb.asm.util.Textifier tv = new org.objectweb.asm.util.Textifier () ; org.objectweb.asm.util.TraceMethodVisitor tmv = new org.objectweb.asm.util.TraceMethodVisitor ( tv ) ; mn . accept ( tmv ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( tv.text . size () ) ; i ++ ) { sb . append ( tv.text . get ( i ) ) ; } return sb . toString () ; } 
@ java.lang.Override public void done ( byte [] data , com.parse.ParseException e ) { if ( e == null ) { if ( ( data != null ) && ( ( data.length ) != 0 ) ) { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel ( name , address , restId , data ) ; restaurantModel . setFlag ( 1 ) ; restaurantModels . add ( restaurantModel ) ; updateListView () ; } } } 
public void CharInvSearch ( java.lang.String type ) { ArkBotGUI . GUIText ( "[ACTION]: Searching character inventory" ) ; p = java.awt.MouseInfo . getPointerInfo () . getLocation () ; drag . move ( ArkBot.global.CHAR_INV_SEARCH_BAR ) ; leftClick () ; bot . delay ( Global.PAUSE ) ; leftClick () ; bot . delay ( Global.PAUSE ) ; leftClick () ; robtype . type ( type ) ; } 
private io.druid.indexing.jdbc.JDBCIndexTask createTask ( final java.lang.String taskId , final io.druid.indexing.jdbc.JDBCIOConfig ioConfig , final java.lang.Integer maxRowsPerSegment , final java.lang.Boolean resetOffsetAutomatically ) { io.druid.indexing.jdbc.JDBCIndexTaskTest.offsets . put ( 0 , 0 ) ; final io.druid.indexing.jdbc.JDBCTuningConfig tuningConfig = new io.druid.indexing.jdbc.JDBCTuningConfig ( 1000 , maxRowsPerSegment , new org.joda.time.Period ( "P1Y" ) , null , null , null , buildV9Directly , reportParseExceptions , handoffConditionTimeout , resetOffsetAutomatically ) ; final io.druid.indexing.jdbc.JDBCIndexTask task = new io.druid.indexing.jdbc.JDBCIndexTask ( taskId , null , io.druid.indexing.jdbc.JDBCIndexTaskTest.DATA_SCHEMA , tuningConfig , ioConfig , null , null ) ; task . setPollRetryMs ( io.druid.indexing.jdbc.JDBCIndexTaskTest.POLL_RETRY_MS ) ; return task ; } 
public org.apache.hadoop.smart.sql.CommandInfo getCommandInfo ( long cid ) throws java.io.IOException { if ( cmdsAll . containsKey ( cid ) ) return cmdsAll . get ( cid ) ; java.util.List < org.apache.hadoop.smart.sql.CommandInfo > ret = null ; try { ret = adapter . getCommandsTableItem ( java.lang.String . format ( "= %d" , cid ) , null , null ) ; } catch ( java.sql.SQLException e ) { org.apache.hadoop.smart.CommandExecutor.LOG . error ( e . getMessage () ) ; } if ( ret != null ) return ret . get ( 0 ) ; return null ; } 
private void arrTimeStringToDate ( java.lang.String dateStr ) { dateStr = dateStr . replaceAll ( "\\s" , "/" ) ; java.text.DateFormat df = new java.text.SimpleDateFormat ( "yyyy/MMM/dd/HH:mm" , java.util.Locale.US ) ; try { java.util.Date localDate = df . parse ( dateStr ) ; this . arr_local_time = localDate ; } catch ( java.text.ParseException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int button ) { if ( button == ( android.content.DialogInterface.BUTTON_POSITIVE ) ) { if ( ( experimentFilter ) != null ) { getContentResolver () . delete ( ExperimentsProvider.CONTENT_URI , experimentFilter , null ) ; } android.widget.Toast . makeText ( this , R.string.deleted , Toast.LENGTH_SHORT ) . show () ; android.content.Intent intent = new android.content.Intent ( this , com.scuddertechnologies.pheoc.MainMenu . class ) ; startActivity ( intent ) ; } } 
public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj == null ) { return false ; } if ( obj instanceof mc.compiler.ast.ReferenceNode ) { mc.compiler.ast.ReferenceNode node = ( ( mc.compiler.ast.ReferenceNode ) ( obj ) ) ; return reference . equals ( node . getReference () ) ; } return false ; } 
public boolean isEmptyContext ( java.lang.Object cursorPosition ) { if ( cursorPosition == null ) { return true ; } if ( cursorPosition instanceof java.lang.Boolean ) { return ! ( ( ( java.lang.Boolean ) ( cursorPosition ) ) . booleanValue () ) ; } if ( cursorPosition instanceof java.util.Collection ) { return ( ( ( java.util.Collection ) ( cursorPosition ) ) . size () ) == 0 ; } return false ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem mi ) { switch ( mi . getItemId () ) { case R.id.menu_prf : startActivity ( new android.content.Intent ( this , com.acmetensortoys.ctfwstimer.SettingsActivity . class ) ) ; return true ; case R.id.menu_about : startActivity ( new android.content.Intent ( this , com.acmetensortoys.ctfwstimer.AboutActivity . class ) ) ; return true ; default: return super . onOptionsItemSelected ( mi ) ; } } 
protected java.util.Optional < T > getAnnotation ( org.springframework.core.type.MethodMetadata metadata ) { try { return java.util.Optional . ofNullable ( java.lang.Class . forName ( metadata . getReturnTypeName () ) . getDeclaredAnnotation ( annotation ) ) ; } catch ( java.lang.ClassNotFoundException e ) { io.cereebro.spring.annotation.LOGGER . error ( ( "Could not load class : " + ( metadata . getReturnTypeName () ) ) , e ) ; } return java.util.Optional . empty () ; } 
@ java.lang.Override protected void updateItem ( application.DataSet t , boolean bln ) { super . updateItem ( t , bln ) ; if ( t != null ) { setText ( t . getFilePath () . substring ( application.services.GeneralService . getDataSetDirectory () . length () ) ) ; } else { setText ( "Choose..." ) ; } } 
private void pluginChanged ( jobdispatcher.plugin.Plugin curPlugin ) { if ( curPlugin . getName () . startsWith ( "zh_def_catalog" ) ) { mapTagTemplate1 . put ( "SceneMetaDataFile" , objectivePath ) ; mapTagTemplate2 . remove ( "SceneMetaDataFile" ) ; } else { mapTagTemplate1 . remove ( "SceneMetaDataFile" ) ; mapTagTemplate2 . put ( "SceneMetaDataFile" , ( ( frameFilePath ) + "_meta.xml" ) ) ; } } 
public void update ( S entry ) { this . setDescription ( entry . getDescription () ) ; lastModified = entry . getLastModified () ; this . setAuthor ( entry . getAuthor () ) ; if ( ! ( entry . getGitUrl () . isEmpty () ) ) { gitUrl = entry . getGitUrl () ; } } 
public boolean contain ( ai.eboard e , int i ) { if ( ( e.c ) == 'X' ) return x . containsKey ( i ) ; else if ( ( e.c ) == 'O' ) return o . containsKey ( i ) ; else return ! ( u . containsKey ( i ) ) ; } 
public boolean compileCode ( java.lang.String code , java.lang.String className ) { vk.core.api.CompilationUnit cu = new vk.core.api.CompilationUnit ( className , code , false ) ; vk.core.api.JavaStringCompiler jsc = vk.core.api.CompilerFactory . getCompiler ( cu ) ; jsc . compileAndRunTests () ; vk.core.api.CompilerResult cr = jsc . getCompilerResult () ; if ( cr . hasCompileErrors () ) { info = formatCompileErrors ( cr , cu ) ; return false ; } return true ; } 
@ java.lang.Override public void taskCompleted ( boolean success , java.lang.String message , org.json.JSONObject json ) { java.util.List < uk.ac.ncl.csc2022.t14.bankingapp.models.HeatPoint > allPoints = new java.util.ArrayList <> () ; if ( success && ( responseParser . parseLoadHeatPoints ( json , allPoints ) ) ) { delegate . loadHeatMapPassed ( allPoints ) ; } else { message = responseParser . parseErrorOrDefault ( message ) ; delegate . loadHeatMapFailed ( message ) ; } } 
public static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } 
public void addFirst ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException ( "Attempt to add null Item." ) ; } Deque < Item > . Node oldfirst = first ; Deque < Item > . Node newfirst = new Node () ; newfirst.item = item ; newfirst.next = oldfirst ; if ( oldfirst != null ) { oldfirst.previous = newfirst ; } first = newfirst ; ( size ) ++ ; if ( ( size ) == 1 ) { last = first ; } } 
@ java.lang.Override protected void map ( K unused , org.apache.hadoop.io.Text urlText , edu.cornell.library.lc_converter.mapreduce.Context context ) throws java.io.IOException , java.lang.InterruptedException { java.lang.String urlString = urlText . toString () ; java.io.InputStream is = getUrl ( urlString ) ; java.util.HashSet < java.lang.String > marcRecords = marcxmlCollectionParser ( is ) . iterator () ; for ( java.lang.String marcXml = marcRecords . next () ; marcRecords . hasNext () ; marcXml = marcRecords . next () ) { context . write ( new org.apache.hadoop.io.Text ( marcXml ) , null ) ; } } 
public org.alopex.hyperios.helix.Specimen crossover ( org.alopex.hyperios.helix.Specimen mateOne , org.alopex.hyperios.helix.Specimen mateTwo ) { org.alopex.hyperios.helix.Specimen output = new org.alopex.hyperios.helix.Specimen ( true ) ; for ( int i = 0 ; i < ( output . getGenes () . length ) ; i ++ ) { if ( ( java.lang.Math . random () ) <= ( GASettings.crossoverRate ) ) { output . setGene ( i , mateOne . getGenes () [ i ] ) ; } else { output . setGene ( i , mateOne . getGenes () [ i ] ) ; } } return output ; } 
@ java.lang.Override public void login ( java.lang.String email , java.lang.String password ) { java.lang.String result = util.Validate . email ( email ) ; if ( result . equals ( Validate.OK ) ) { model . login ( email , password ) ; } else { view . showErrorDialog ( result ) ; } } 
protected int newGame ( int _difficulty ) { difficulty = _difficulty ; timeElapsed = "00:00" ; if ( ( ( difficulty ) < 1 ) || ( ( difficulty ) > 3 ) ) { difficulty = ( randGen . nextInt ( 3 ) ) + 1 ; } buildCompleteBoard () ; digHoles ( getNumberOfGivens ( difficulty ) ) ; checkBounds ( getBound ( difficulty ) ) ; markOriginals () ; return difficulty ; } 
@ org.w2fc.geoportal.ws.aspect.AfterReturning ( pointcut = "execution(* org.w2fc.geoportal.ws.GeoObjectService.createAndSaveObject(org.w2fc.geoportal.ws.model.RequestGeoObject)))" , returning = "result" ) public void aroundCreateSoapSuccess ( org.aspectj.lang.JoinPoint joinPoint , java.lang.Object result ) { org.w2fc.geoportal.ws.model.RequestGeoObject requestGeoObject = ( ( org.w2fc.geoportal.ws.model.RequestGeoObject ) ( joinPoint . getArgs () [ 0 ] ) ) ; org.w2fc.geoportal.domain.OperationStatus actionStatus = new org.w2fc.geoportal.domain.OperationStatus ( requestGeoObject . getGuid () , getPid () , getCurrentUserId () , OperationStatus.Action.CREATE , OperationStatus.Status.SUCCESS , new java.util.Date () , requestGeoObject . getLayerId () ) ; repository . save ( actionStatus ) ; } 
public static boolean hasFallingPieces ( final java.util.List < com.gamesbykevin.yoshi.board.piece.Piece > pieces ) { for ( int i = 0 ; i < ( pieces . size () ) ; i ++ ) { final com.gamesbykevin.yoshi.board.piece.Piece piece = pieces . get ( i ) ; if ( ( ( piece . isPlaced () ) || ( piece . isDestroyed () ) ) || ( piece . isFrozen () ) ) continue; return true ; } return false ; } 
public void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } 
public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence str , int offset ) { if ( ( ( str . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return str . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; } 
boolean restartProcess ( net.algart.pyramid.http.JavaProcessControlWithHttpCheckingAliveStatus control , boolean skipIfAlive ) throws java.io.IOException { synchronized ( lock ) { if ( skipIfAlive && ( control . areAllHttpServicesAlive ( true ) ) ) { return false ; } stopProcess ( control , skipIfAlive ) ; startProcess ( control , false ) ; return true ; } } 
private long getTimeStamp ( int i ) { table.value.Value date = null ; if ( isFirstEvent ( i ) ) { date = inputData . get ( i ) . get ( datecol ) ; } else { date = inputData . get ( i ) . get ( datecol2 ) ; } if ( date . isDate () ) { return ( ( table.value.DateValue ) ( date ) ) . getValue () . getTime () . getTime () ; } throw new java.lang.Error ( "Not a date in the column" ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out . println ( ( "Paikka 1 2 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbc ) ; buttonbc . setEnabled ( false ) ; viimeisinSiirto [ 1 ] [ 2 ] = whichmark () ; ( buttoncount ) ++ ; } 
public void add ( int itemNumber ) { if ( ( itemNumber > ( ( inventory . size () ) - 1 ) ) || ( itemNumber < 0 ) ) { java.lang.System.out . println ( "INVALID INDEX...Try Again" ) ; } else { items . add ( inventory . get ( itemNumber ) ) ; java.lang.System.out . println ( ( ( inventory . get ( itemNumber ) . getName () ) + " was added to cart!" ) ) ; subTotal += items . get ( ( ( items . size () ) - 1 ) ) . getPrice () ; } } 
public void generateExtensionalDB ( java.lang.String path ) throws java.lang.Exception { int i = 1 ; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf . append ( factsFromFiles ( file , ( i ++ ) ) ) ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.File ( ( path + "edb.pl" ) ) ) ; prologWriter . println ( buf ) ; prologWriter . close () ; } 
private java.lang.Exception updateChangesOntologies ( java.lang.String datasetUri , java.lang.String ccName ) { boolean result ; org.diachron.detection.utils.MCDUtils mcd = null ; try { mcd = new org.diachron.detection.utils.MCDUtils ( propertiesManager . getProperties () , datasetUri , true ) ; mcd . deleteCCWithLessPriority ( ccName ) ; mcd . detectDatasets ( true ) ; } catch ( java.lang.Exception ex ) { return ex ; } finally { if ( mcd != null ) { mcd . terminate () ; } } return null ; } 
private void refresh ( org.eclipse.wst.sse.core.internal.provisional.IModelStateListener listener , org.eclipse.wst.xml.core.internal.provisional.document.IDOMModel model , org.jboss.tools.windup.windup.CustomRuleProvider ruleProvider ) { model . removeModelStateListener ( listener ) ; listenerMap . remove ( ruleProvider ) ; if ( ! ( treeViewer . getTree () . isDisposed () ) ) { treeViewer . refresh ( ruleProvider ) ; } } 
public void searchByPostTitle ( java.lang.String title , com.cmpe.bounswe2015group8.westory.back.Consumer < com.cmpe.bounswe2015group8.westory.model.Post [] > callback ) { if ( display ) progressDialog . show () ; new com.cmpe.bounswe2015group8.westory.back.ServerRequests.RestAsyncTask ( callback , org.springframework.http.HttpMethod.POST ) . execute ( new com.cmpe.bounswe2015group8.westory.model.Requestable < com.cmpe.bounswe2015group8.westory.model.Post [] > ( "/api/searchByPostTitle" , title , com.cmpe.bounswe2015group8.westory.model.Post [] . class ) ) ; } 
void method ( java.lang.Throwable t ) { logger . info ( "My message is {}" , t . getLocalizedMessage () , t ) ; logger . info ( "My {} is {}" , new java.lang.Object [] { "message" , t . getLocalizedMessage () , t } ) ; logger . info ( "My {} {} {}" , new java.lang.Object [] { "message" , "is" , t . getLocalizedMessage () , t } ) ; } 
@ de.craften.plugins.rpgplus.scripting.util.luaify.LuaFunction ( value = "setItem" ) public void setItem ( org.luaj.vm2.LuaValue inv , org.luaj.vm2.LuaValue slot , org.luaj.vm2.LuaTable item ) { inventory . setItem ( slot . checkint () , de.craften.plugins.rpgplus.scripting.util.ScriptUtil . createItemMatcher ( item ) . getItemStack () ) ; for ( org.bukkit.entity.HumanEntity viewer : new java.util.ArrayList ( inventory . getViewers () ) ) { viewer . openInventory ( inventory ) ; } } 
@ java.lang.Override protected void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; getSupportActionBar () . setTitle ( getResources () . getString ( R.string.title_quiz ) ) ; com.pvanshah.sjsuquizapplication.student.network.NetworkStateListener . registerNetworkState ( this ) ; com.pvanshah.sjsuquizapplication.firebaseutils.FirebaseConfiguration firebaseConfiguration = new com.pvanshah.sjsuquizapplication.firebaseutils.FirebaseConfiguration () ; firebaseConfiguration . configureFirebase () ; callQuizzesService () ; } 
private boolean match ( java.util.Map < java.lang.Integer , org.naturn.java8.pattern.PatternDemo.Node > nodes , java.util.List < java.lang.String [] > orgs ) { boolean result = false ; for ( java.lang.String [] org : orgs ) { result = match ( nodes , org ) ; if ( result ) { break; } } return result ; } 
@ java.lang.Override public void success ( final kaaes.spotify.webapi.android.models.Playlist playlist , retrofit.client.Response response ) { mPlaylist = playlist ; setupDetails ( playlist ) ; java.util.List < kaaes.spotify.webapi.android.models.TrackSimple > tracks = new java.util.ArrayList < kaaes.spotify.webapi.android.models.TrackSimple > () ; for ( kaaes.spotify.webapi.android.models.PlaylistTrack playlistTrack : playlist.tracks.items ) { tracks . add ( playlistTrack.track ) ; } setupTracksRows ( tracks ) ; if ( ( playlist.images . size () ) > 0 ) { java.lang.String imageUrl = playlist.images . get ( 0 ) . url ; loadDetailsRowImage ( imageUrl ) ; } } 
@ java.lang.Override protected void beforeHookedMethod ( de.robv.android.xposed.XC_MethodHook.MethodHookParam param ) throws java.lang.Throwable { android.content.BroadcastReceiver broad = ( ( android.content.BroadcastReceiver ) ( param.args [ 0 ] ) ) ; if ( broad != null ) handleBroad ( broad ) ; android.content.IntentFilter filter = ( ( android.content.IntentFilter ) ( param.args [ 1 ] ) ) ; if ( filter != null ) handleFilter ( filter ) ; } 
public static util.Coords fromSGFString ( java.lang.String coords ) { if ( ! ( coords . matches ( "[a-s][a-s]" ) ) ) throw new java.lang.IllegalArgumentException ( ( ( "String: '" + coords ) + "' is not recognizable as SGF coordinates." ) ) ; int x = ( ( coords . charAt ( 0 ) ) - 'a' ) + 1 ; int y = ( ( coords . charAt ( 1 ) ) - 'a' ) + 1 ; return util.Coords . getCoords ( x , y ) ; } 
public static it.crs4.features.DType convertPixelType ( int pixelType ) { switch ( pixelType ) { case loci.formats.FormatTools.INT8 : return DType.INT8 ; case loci.formats.FormatTools.UINT8 : return DType.UINT8 ; case loci.formats.FormatTools.INT16 : return DType.INT16 ; case loci.formats.FormatTools.UINT16 : return DType.UINT16 ; case loci.formats.FormatTools.INT32 : return DType.INT32 ; case loci.formats.FormatTools.UINT32 : return DType.UINT32 ; case loci.formats.FormatTools.FLOAT : return DType.FLOAT32 ; case loci.formats.FormatTools.DOUBLE : return DType.FLOAT64 ; default: throw new java.lang.IllegalArgumentException ( ( "Unknown pixel type: " + pixelType ) ) ; } } 
public void statePlayer ( java.lang.String address , com.jme3.math.Vector3f walk , com.jme3.math.Vector3f view , int life , boolean attack , int score ) { try { this . OUTPUT . writeBytes ( ( ( server.ClientManager.PLAYER ) + "\n" ) ) ; java.lang.String line = new java.lang.StringBuilder () . builderString ( walk , view , new com.jme3.math.Vector3f () , life , attack , address , "" , score ) ; this . OUTPUT . writeBytes ( ( line + "\n" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void exitIdentifier ( @ org.antlr.v4.runtime.misc.NotNull wich.parser.WichParser.IdentifierContext ctx ) { org.antlr.symtab.Symbol s = currentScope . resolve ( ctx . ID () . getText () ) ; if ( ( s != null ) && ( s instanceof wich.semantics.symbols.WVariableSymbol ) ) { ctx.exprType = ( ( org.antlr.symtab.TypedSymbol ) ( s ) ) . getType () ; } else {} } 
void returnConnection ( org.glassfish.grizzly.Connection result , ru.kwanza.jeda.nio.client.ConnectionConfig config , boolean close ) { if ( result != null ) { ru.kwanza.jeda.nio.client.ConnectionHolder holder = leasedConnections . remove ( result ) ; if ( config . isKeepAlive () ) { if ( ( ( holder != null ) && ( result . isOpen () ) ) && ( ! close ) ) { availableConnections . offer ( holder ) ; getStage () . getThreadManager () . adjustThreadCount ( getStage () , getThreadCount () ) ; } } } batchSize . incrementAndGet () ; } 
@ java.lang.Override protected java.lang.Object doInBackground ( java.lang.Object [] params ) { cache = com.kot32.ksimplelibrary.cache.ACache . get ( getActivity () ) ; int t = baseAction . initLocalData () ; switch ( t ) { case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_SHOW : baseAction . onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.LOAD_NETWORK_DATA_AND_DISMISS : android.os.Message message = new android.os.Message () ; message.what = 1 ; mHandler . sendMessage ( message ) ; baseAction . onLoadingNetworkData () ; break; case com.kot32.ksimplelibrary.activity.i.IBaseAction.DONT_LOAD_NETWORK_DATA : break; } return null ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map_page ) ; android.location.LocationManager locationManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 0 , 0 , this ) ; android.content.Intent intent = getIntent () ; } 
private double getReward ( ab.vision.GameStateExtractor.GameState state ) { java.lang.System.out . println ( state ) ; if ( state == ( ab.vision.GameStateExtractor.GameState.WON ) ) { ab.vision.GameStateExtractor gameStateExtractor = new ab.vision.GameStateExtractor () ; java.lang.System.out . println ( state ) ; java.awt.image.BufferedImage scoreScreenshot = clientActionRobotJava . doScreenShot () ; java.lang.System.out . println ( state ) ; double reward = gameStateExtractor . getScoreEndGame ( scoreScreenshot ) ; java.lang.System.out . println ( reward ) ; return reward ; } else { return 0 ; } } 
public static void checkFetchItemsExist ( final java.util.List < gov.loc.repository.bagit.domain.FetchItem > items , final java.nio.file.Path bagDir ) throws gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException { gov.loc.repository.bagit.verify.MandatoryVerifier.logger . info ( "Checking if all [{}] items in fetch.txt exist in the [{}]" , items . size () , bagDir ) ; for ( final gov.loc.repository.bagit.domain.FetchItem item : items ) { if ( ! ( java.nio.file.Files . exists ( item.path ) ) ) { throw new gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException ( ( ( "Fetch item " + item ) + " has not been fetched!" ) ) ; } } } 
public static java.lang.String getRequestIP ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ipAddr ; ipAddr = request . getHeader ( "X-Real-IP" ) ; if ( ( null == ipAddr ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = request . getHeader ( "x-forwarded-for" ) ; } if ( ( null == ipAddr ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = "127.0.0.1" ; } return ipAddr ; } 
public void export ( java.lang.String extension , java.io.File file ) { try { javax.imageio.ImageIO . write ( this . image . getImage () , extension , new java.io.File ( file . getPath () ) ) ; } catch ( java.io.IOException e ) { javax.swing.JOptionPane . showMessageDialog ( null , "There was a Problem Exporting the Image, Please report the bug to the Developers" ) ; } } 
public int hash ( String key ) { int hash = 0 ; switch ( hashFunction ) { case 0 : hash = additiveHash ( key ) ; break; case 1 : hash = rotationalHash ( key ) ; break; default: java.lang.System.out . println ( "Error when setting hash function - given hash function not found." ) ; java.lang.System . exit ( 0 ) ; } return hash ; } 
public void confirmAttack ( int nrD , risiko.players.ArtificialPlayer . . . aiCaller ) throws exceptions.PlayerLossException , exceptions.WrongCallerException { if ( ! ( canCallDefenseMethods ( aiCaller ) ) ) { throw new exceptions.WrongCallerException () ; } attackInProgress = false ; this . nrD = nrD ; fight () ; checkCountryConquest () ; } 
private void ancestorPathCheck ( java.util.List < java.lang.String > ancestorPath , java.util.List < edu.unc.lib.dl.fedora.PID > pids ) { for ( int i = 0 ; i < ( ancestorPath . size () ) ; i ++ ) { org.junit.Assert . assertTrue ( ancestorPath . get ( i ) . equals ( ( ( ( i + 1 ) + "," ) + ( pids . get ( i ) . getId () ) ) ) ) ; } } 
public long getTimeBucketAndAdjustBoundaries ( long value ) { if ( value < ( start ) ) { return - 1 ; } long diffFromStart = value - ( fixedStart ) ; long key = diffFromStart / ( bucketSpanMillis ) ; if ( value >= ( end ) ) { long diffInBuckets = ( value - ( end ) ) / ( bucketSpanMillis ) ; long move = ( diffInBuckets + 1 ) * ( bucketSpanMillis ) ; start += move ; end += move ; triggerPurge = true ; lowestPurgeableTimeBucket += diffInBuckets ; } return key ; } 
public void onMessage ( com.solacesystems.conn.Handle handle ) { com.solacesystems.conn.MessageSupport ms = ( ( com.solacesystems.conn.MessageSupport ) ( handle ) ) ; com.solacesystems.conn.MessageHandle msg = ms . getRxMessage () ; java.lang.String topic = msg . getDestination () . getName () ; java.nio.ByteBuffer container = handler . getBuffer () ; if ( container != null ) { container . clear () ; msg . getBinaryAttachment ( container ) ; container . flip () ; } handler . onMessage ( topic , container ) ; } 
@ android.support.annotation.VisibleForTesting void setVideoPath ( java.lang.String path ) { if ( ( mPlayer ) == null ) mPlayer = createPlayer ( mContext . get () ) ; try { mPlayer . setDataSource ( mContext . get () , android.net.Uri . parse ( path ) ) ; openVideo () ; } catch ( java.io.IOException e ) { com.hustunique.parsingplayer.util.LogUtil . wtf ( com.hustunique.parsingplayer.player.media.ParsingPlayerProxy.TAG , e ) ; e . printStackTrace () ; } } 
@ java.lang.Override public void setBooleanMetadata ( java.lang.String key , boolean value ) { if ( ( ( ( sender ) == null ) || ( ( sender . getBlock () ) == null ) ) || ( ( sender . getBlock () . getType () ) != ( org.bukkit.Material.COMMAND ) ) ) { return; } sender . getBlock () . setMetadata ( key , new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer . getInstance () , value ) ) ; } 
private static cs155.core.Color3D calculateDiffuse ( cs155.core.Point3D n , cs155.core.Color3D matColor , cs155.core.Color3D lightColor , cs155.core.Point3D lightVec ) { cs155.core.Color3D localDiffuse ; double diffuseIntensity = cs155.core.Light3D . diffuse ( lightVec , n ) ; localDiffuse = matColor . times ( lightColor ) . scale ( diffuseIntensity ) ; return localDiffuse ; } 
@ java.lang.Override public com.levserj.domain.Item updateItem ( com.levserj.domain.Item item ) { if ( ! ( repository . exists ( item . getId () ) ) ) { com.levserj.service.mysql.MySQLItemService.LOG . error ( "Item with id: {} doesn't exist" , item . getId () ) ; return null ; } return repository . save ( item ) ; } 
private void doNext ( int requestCode , int [] grantResults ) { int count = 0 ; if ( requestCode == ( ACCESS_PERMISSION ) ) { for ( int i = 0 ; i < ( grantResults.length ) ; i ++ ) { if ( ( grantResults [ i ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) count ++ ; } if ( count == ( grantResults.length ) ) listener . onGranted () ; else listener . onDenied () ; } } 
@ java.lang.Override public org.eclipse.jface.text.contentassist.ICompletionProposal [] computeCompletionProposals ( org.eclipse.jface.text.ITextViewer viewer , int offset ) { java.util.List < org.eclipse.jface.text.contentassist.ICompletionProposal > proposals = new java.util.ArrayList < org.eclipse.jface.text.contentassist.ICompletionProposal > () ; viewer . getDocument () ; return proposals . toArray ( new org.eclipse.jface.text.contentassist.ICompletionProposal [ proposals . size () ] ) ; } 
private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node parent ) { algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } } 
public static boolean getBoolean ( java.lang.String sql ) { java.lang.String s = ids.sardine.TransferUtil . getString ( sql ) ; return ( ( s != null ) && ( ( s . trim () . length () ) != 0 ) ) && ( ( java.lang.Boolean . parseBoolean ( s . trim () ) ) || ( ! ( "0" . equals ( s . trim () ) ) ) ) ; } 
static org.apache.lucene.store.Directory setUpIndex ( org.apache.lucene.analysis.Analyzer analyzer , org.apache.lucene.search.similarities.Similarity bm25 ) throws java.io.IOException { main.IndexWriterConfig config = new main.IndexWriterConfig ( analyzer ) ; if ( bm25 != null ) { config . setSimilarity ( bm25 ) ; } org.apache.lucene.store.FSDirectory index = org.apache.lucene.store.FSDirectory . open ( new java.io.File ( main.Main.indexPath ) . toPath () ) ; main.IndexWriter w = new main.IndexWriter ( index , config ) ; java.io.File docDir = new java.io.File ( main.Main.docsPath ) ; main.Main . indexDocs ( w , docDir ) ; w . close () ; return index ; } 
private double getStepMovement ( genetics.MusicPhenotype p ) { double steps = 0 ; double intervalCount = 0 ; for ( java.util.ArrayList < java.lang.Integer > measure : p.melodyIntervals ) { for ( int interval : measure ) { interval = java.lang.Math . abs ( interval ) ; intervalCount ++ ; if ( ( interval >= 1 ) && ( interval <= 2 ) ) { steps += 1 ; } } } if ( intervalCount == 0 ) { return 0 ; } return steps / intervalCount ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_dish_detail ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; android.content.Intent dishInent = getIntent () ; int dish_id = dishInent . getIntExtra ( "dish_id" , 1 ) ; context = this ; fetchDishFromServer ( dish_id ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
protected void putEnumParameter ( java.lang.String name , java.lang.String description , java.util.List < java.lang.String > options , java.lang.String value , java.lang.String instructions , boolean mandatory , int order ) throws com.sixsq.slipstream.exceptions.ValidationException { S parameter = createParameter ( name , description , mandatory ) ; parameter . setEnumValues ( options ) ; parameter . setValue ( value ) ; parameter . setOrder ( order ) ; parameter . setInstructions ( instructions ) ; addParameter ( parameter , ParameterType.Enum , mandatory ) ; } 
ru.spbau.mit.StringSetImpl.StringSetEntry removeEntry ( char letter , boolean notLastLetter ) { ( numberOfSuccessors ) -- ; int idx = getIndex ( letter ) ; ru.spbau.mit.StringSetImpl.StringSetEntry nextEntry = next . get ( idx ) ; if ( ( ( nextEntry.numberOfSuccessors ) == 1 ) && notLastLetter ) { next . set ( idx , null ) ; } return nextEntry ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu_photo_album , menu ) ; android.view.MenuItem item = menu . findItem ( R.id.action_ok ) ; if ( ( okButtonDrawable ) != null ) { item . setIcon ( okButtonDrawable ) ; } else if ( ( menuText ) != null ) { item . setIcon ( new com.sangcomz.fishbun.util.TextDrawable ( getResources () , menuText , colorMenuText ) ) ; } return true ; } 
@ java.lang.Override public boolean remove ( com.mnubo.platform.android.sdk.api.store.MnuboEntity entity ) { boolean success = false ; if ( entity instanceof com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) { com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity fileEntity = ( ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileEntity ) ( entity ) ) ; java.io.File file = new java.io.File ( fileEntity . getFile () ) ; success = file . delete () ; if ( ! success ) { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , java.lang.String . format ( "Deleting : %s has failed" , fileEntity . getFile () ) ) ; } } else { android.util.Log . e ( com.mnubo.platform.android.sdk.api.store.impl.MnuboFileStore.TAG , "MnuboFileStore can only remove MnuboFileEntity" ) ; } return success ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( this . getNavigationManager () . topFragment () ) instanceof com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } else { this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , 0 ) ) ; } } 
@ org.osgi.service.component.annotations.Reference ( name = "org.wso2.carbon.datasource.DataSourceService" , service = org.wso2.carbon.datasource.core.api.DataSourceService . class , cardinality = org.osgi.service.component.annotations.ReferenceCardinality.AT_LEAST_ONE , policy = org.osgi.service.component.annotations.ReferencePolicy.DYNAMIC , unbind = "unregisterDataSourceService" ) protected void onDataSourceServiceReady ( org.wso2.carbon.datasource.core.api.DataSourceService service ) { try { com.zaxxer.hikari.HikariDataSource dsObject = ( ( com.zaxxer.hikari.HikariDataSource ) ( service . getDataSource ( "WSO2_CARBON_DB" ) ) ) ; java.sql.Connection connection = dsObject . getConnection () ; } catch ( org.wso2.carbon.datasource.core.exception.DataSourceException e ) { org.wso2.carbon.datasource.sample.DataSourceServiceListenerComponent.logger . error ( "error occurred while fetching the data source." , e ) ; } catch ( java.sql.SQLException e ) { org.wso2.carbon.datasource.sample.DataSourceServiceListenerComponent.logger . error ( "error occurred while fetching the connection." , e ) ; } } 
@ java.lang.Override public java.util.List < TOutDto > getList ( java.lang.String inRequstMapping , TinDto inInDto ) { java.util.Map < java.lang.String , TOutDto > outDtoMap = new java.util.HashMap < java.lang.String , TOutDto > () ; try { getReadService () . execute ( inRequstMapping , inInDto , outDtoMap ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return new java.util.ArrayList < TOutDto > ( outDtoMap . values () ) ; } 
@ java.lang.Override public bcccp.tickets.adhoc.IAdhocTicket findTicketByBarcode ( java.lang.String findBarcode ) { for ( int i = 0 ; i < ( currentAdhocTickets . size () ) ; i ++ ) { if ( ( currentAdhocTickets . get ( i ) . getBarcode () ) == null ? findBarcode == null : currentAdhocTickets . get ( i ) . getBarcode () . equals ( findBarcode ) ) { return currentAdhocTickets . get ( i ) ; } } return null ; } 
private boolean isNotJsonString ( final java.lang.String value ) throws java.io.IOException { return ( ( ( ( value . startsWith ( "{" ) ) || ( value . startsWith ( "[" ) ) ) || ( "true" . equals ( value ) ) ) || ( "false" . equals ( value ) ) ) || ( springfox.documentation.swagger2.configuration.Swagger2JacksonModule.PropertyExampleSerializerMixin.PropertyExampleSerializer.JSON_NUMBER_PATTERN . matcher ( value ) . matches () ) ; } 
public itinerary.main.State deleteTask ( itinerary.main.Command command ) { boolean isValid = isValidDeleteOp ( command ) ; itinerary.main.Task originalTask = null ; if ( isValid ) { originalTask = listTask . remove ( ( ( command . getTask () . getLineNumber () ) - 1 ) ) ; updateLineNum () ; itinerary.main.JsonIOHandler . writeJSONList ( currFile , listTask ) ; } return new itinerary.main.State ( command , new itinerary.main.Command ( originalTask , CommandType.ADD , null ) , getAllTasks () , isValid ) ; } 
static void title_change ( java.lang.String title , int id ) { if ( org.embedded.browser.Chromium.chmap . containsKey ( id ) ) org.embedded.browser.Chromium.chmap . get ( id ) . loaded = true ; if ( title . equals ( "" ) ) return; if ( org.embedded.browser.Chromium.chmap . containsKey ( id ) ) org.embedded.browser.Chromium.chmap . get ( id ) . title_change ( title ) ; } 
@ com.squareup.otto.Subscribe public void searchForVenues ( com.android.test.otto.VenueSearchEvent event ) { com.android.test.qachee.QacheeData data = ( ( com.android.test.qachee.QacheeData ) ( com.qachee.QacheeManager . getInstance () . get ( event.place , true ) ) ) ; if ( data == null ) { asyncTask = new com.android.test.task.VenueBackgroundTask ( event.place , gpsTracker . getLocation () ) ; asyncTask . execute () ; } else { ottoBus . post ( new com.android.test.otto.VenueResultEvent ( data.venues , event.place , gpsTracker . getLocation () ) ) ; } } 
@ java.lang.Override public java.lang.String qnameFor ( java.lang.String uri ) { int split = org.apache.jena.rdf.model.impl.Util . splitNamespaceXML ( uri ) ; java.lang.String ns = uri . substring ( 0 , split ) ; java.lang.String local = uri . substring ( split ) ; if ( local . equals ( "" ) ) return null ; java.lang.String prefix = getNsURIPrefix ( ns ) ; return prefix == null ? null : ( prefix + ":" ) + local ; } 
protected boolean isIE7 ( java.lang.String userAgent ) { if ( ( userAgent != null ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { if ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getClass () ) != ( obj . getClass () ) ) return false ; org.opennms.netmgt.poller.client.rpc.PollerResponseDTO other = ( ( org.opennms.netmgt.poller.client.rpc.PollerResponseDTO ) ( obj ) ) ; return java.util.Objects . equals ( this . pollStatus , other.pollStatus ) ; } 
private java.util.List < org.smartdata.common.actions.ActionInfo > getActionInfoFromCommand ( long cid ) throws java.io.IOException { java.util.ArrayList < org.smartdata.common.actions.ActionInfo > actionInfos = new java.util.ArrayList <> () ; org.smartdata.server.command.Command cmd = commandPool . getCommand ( cid ) ; if ( cmd == null ) { return actionInfos ; } for ( org.smartdata.actions.SmartAction smartAction : cmd . getActions () ) { actionInfos . add ( createActionInfoFromAction ( smartAction , cid ) ) ; } return actionInfos ; } 
public void setObject ( java.sql.CallableStatement statement , com.ctrip.platform.dal.dao.StatementParameter parameter ) throws java.sql.SQLException { if ( ( ( parameter . getValue () ) != null ) && ( ( parameter . getSqlType () ) == ( com.ctrip.platform.dal.common.enums.DatabaseCategory.SQL_SERVER_TYPE_TVP ) ) ) { com.microsoft.sqlserver.jdbc.SQLServerCallableStatement sqlsvrStatement = ( ( com.microsoft.sqlserver.jdbc.SQLServerCallableStatement ) ( statement ) ) ; sqlsvrStatement . setStructured ( parameter . getIndex () , parameter . getName () , ( ( com.microsoft.sqlserver.jdbc.SQLServerDataTable ) ( parameter . getValue () ) ) ) ; } else { super . setObject ( statement , parameter ) ; } } 
@ java.lang.Override public value.Value add ( value.Value other ) { if ( ( ! ( isSet () ) ) || ( ! ( other . isSet () ) ) ) { return new value.IntegerValue () ; } return new value.IntegerValue ( ( ( value ) + ( ( ( value.IntegerValue ) ( other ) ) . getValue () ) ) ) ; } 
private javax.validation.ConstraintViolation < ? > [] validateNotSamePort ( final java.lang.String httpPortPath , final java.lang.Integer httpPort , final java.lang.String httpsPortPath , final java.lang.Integer httpsPort ) { if ( ( httpPort != null ) && ( httpPort . equals ( httpsPort ) ) ) { return new javax.validation.ConstraintViolation < ? > [] { constraintViolationFactory . createViolation ( httpPortPath , "HTTP and HTTPs ports must be different" ) , constraintViolationFactory . createViolation ( httpsPortPath , "HTTP and HTTPs ports must be different" ) } ; } return new javax.validation.ConstraintViolation < ? > [] {} ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_play_list ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; new com.arunsudhir.radiomalayalam.io.PlaylistReaderAsyncTask ( new com.arunsudhir.radiomalayalam.io.PlaylistProgressExecutor ( this ) ) . execute () ; } 
@ java.lang.Override public java.lang.Boolean delete ( int id ) throws com.nextbook.exceptions.AuthRequiredException , com.nextbook.exceptions.ForbiddenException , com.nextbook.exceptions.NoSuchEntityException { com.nextbook.domain.entity.comment.CommentEntity commentEntity = commentDao . getNotNull ( id ) ; commentEntity . setStatus ( CommentStatusesEnum.DELETED ) ; if ( ( sessionUtils . allowedForUserWithRole ( RolesEnum.admin ) ) || ( commentAvailabilityService . isCommentAuthorSession ( commentEntity ) ) ) { return ( commentDao . update ( commentEntity ) . getStatus () . compareTo ( CommentStatusesEnum.DELETED ) ) == 0 ; } return false ; } 
public Point nextPosition ( WorldModel world , Point dest_pt ) { Point start_pt = this . getPosition () ; java.util.List < Node > path = AStar ( world , world . getTileOccupant ( dest_pt ) . getClass () , start_pt , dest_pt ) ; if ( ! ( path . isEmpty () ) ) return path . get ( 1 ) . pt ; else return start_pt ; } 
@ java.lang.Override public boolean apply ( final org.pentaho.agilebi.modeler.ModelerWorkspace workspace , final java.lang.String field , final org.pentaho.metastore.api.IMetaStore metaStore ) throws org.pentaho.agilebi.modeler.ModelerException { org.pentaho.agilebi.modeler.nodes.LevelMetaData existingLevel = locateLevelFromFormula ( workspace , field ) ; boolean isApplied = false ; if ( ( existingLevel != null ) && ( workspace != null ) ) { removeLevel ( workspace , existingLevel ) ; workspace . getWorkspaceHelper () . populateDomain ( workspace ) ; isApplied = true ; } return isApplied ; } 
@ java.lang.Override public boolean isMogelijk ( io.gameoftrades.model.markt.actie.HandelsPositie positie ) { if ( ! ( handel . getStad () . equals ( positie . getStad () ) ) ) { return false ; } if ( ! ( positie . isActieBeschikbaar ( 1 ) ) ) { return false ; } java.lang.Integer value = positie . getVoorraad () . get ( handel . getHandelswaar () ) ; return ( value != null ) && ( value > 0 ) ; } 
protected javax.xml.bind.JAXBElement < org.oscm.saml2.api.model.protocol.LogoutRequestType > signLogoutRequest ( javax.xml.bind.JAXBElement < org.oscm.saml2.api.model.protocol.LogoutRequestType > logoutRequestJAXB ) { try { org.w3c.dom.Element marshaled = marshallJAXBElement ( logoutRequestJAXB ) ; org.w3c.dom.Element signed = samlBean . signLogoutRequest ( marshaled ) ; logoutRequestJAXB = unmarshallJAXBElement ( signed ) ; } catch ( java.lang.Exception e ) { throw new org.oscm.internal.types.exception.SaaSSystemException ( e ) ; } return logoutRequestJAXB ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View v = inflater . inflate ( R.layout.fragment_wanderers , container , false ) ; mContainer = v . findViewById ( R.id.list_container ) ; mProgress = v . findViewById ( R.id.list_progress ) ; com.codeground.wanderlustbulgaria.Fragments.WanderersFragment.user = com.parse.ParseUser . getCurrentUser () ; return v ; } 
protected java.lang.String getPackageName ( final com.intellij.psi.PsiClass psiClass ) { final com.intellij.psi.PsiFile javaFile = psiClass . getContainingFile () ; if ( javaFile instanceof com.intellij.psi.PsiJavaFile ) { final java.lang.String psiPackageName = ( ( com.intellij.psi.PsiJavaFile ) ( javaFile ) ) . getPackageName () ; boolean _isEmpty = psiPackageName . isEmpty () ; boolean _not = ! _isEmpty ; if ( _not ) { return psiPackageName ; } } return null ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = null ; if ( ( customLayout ) == 0 ) { rootView = generateCaptchaView ( inflater , container , savedInstanceState ) ; android.widget.TextView captchaPrompt = ( ( android.widget.TextView ) ( rootView . findViewById ( R.id.txt_captcha_prompt ) ) ) ; if ( ( ( customText ) != null ) && ( captchaPrompt != null ) ) captchaPrompt . setText ( customText ) ; } else { rootView = inflater . inflate ( customLayout , container , false ) ; } return rootView ; } 
@ java.lang.Override public void onTaskRemoved ( android.content.Intent rootIntent ) { log . debug ( "Task has been removed" ) ; if ( ( ( config ) != null ) && ( config . getStopOnTerminate () ) ) { log . info ( "Stopping self" ) ; stopSelf () ; } else { log . info ( "Continue running in background" ) ; } super . onTaskRemoved ( rootIntent ) ; } 
private void resetPianos ( float width , float height ) { pianoA . setSize ( width , height ) ; pianoB . setSize ( width , height ) ; pianoAB . setSize ( width , height ) ; float cenx = getCenx () ; float ceny = getCeny () ; pianoA . setCenter ( cenx , ( ceny - height ) ) ; pianoB . setCenter ( cenx , ( ceny + height ) ) ; pianoAB . setCenter ( cenx , ceny ) ; } 
private void setEndDate ( int newYear , int newMonth ) { calendar = java.util.Calendar . getInstance () ; calendar . set ( newYear , ( newMonth - 1 ) , calendar . getActualMaximum ( java.util.Calendar.DATE ) ) ; java.util.Date date = calendar . getTime () ; java.text.DateFormat DATE_FORMAT = new java.text.SimpleDateFormat ( "yyyy-MM-dd" , java.util.Locale.FRANCE ) ; endDate = DATE_FORMAT . format ( date ) ; } 
public int ev3 ( int p ) { position = p ; java.lang.System.out . println ( "There is a white rabbit in the road, it looks rather fluffy and cute" ) ; java.lang.System.out . println ( "(1) Reach out and pet it " ) ; java.lang.System.out . println ( "(2) Ignore it and move on " ) ; choice = u . nextInt () ; switch ( choice ) { case 1 : java.lang.System.out . println ( " IT IS THE RABBIT!!!" ) ; java.lang.System.out . println ( "You died horribly, it was gruesome" ) ; position = - 1 ; break; case 2 : java.lang.System.out . println ( "Probably a good idea, it's better to avoid cuteness" ) ; position += speed ; break; default: java.lang.System.out . println ( "No pity is shown to those who cannot follow the rules of the game. Die, you fiend." ) ; position = - 1 ; break; } return position ; } 
public static com.eveningoutpost.dexdrip.Models.TransmitterData create ( int raw_data , int sensor_battery_level , long timestamp ) { com.eveningoutpost.dexdrip.Models.TransmitterData . randomDelay ( 50 , 200 ) ; if ( ! ( com.eveningoutpost.dexdrip.Models.TransmitterData . is_new ( timestamp ) ) ) { return null ; } com.eveningoutpost.dexdrip.Models.TransmitterData transmitterData = new com.eveningoutpost.dexdrip.Models.TransmitterData () ; transmitterData.sensor_battery_level = sensor_battery_level ; transmitterData.raw_data = raw_data ; transmitterData.timestamp = timestamp ; transmitterData.uuid = java.util.UUID . randomUUID () . toString () ; transmitterData . save () ; return transmitterData ; } 
private void makeCollector ( eu.etaxonomy.cdm.io.salvador.SalvadorSpecimenImportState state , int collectorNo , eu.etaxonomy.cdm.model.agent.Team team , java.util.Map < java.lang.String , java.lang.String > record , int row ) { java.lang.String str = record . get ( ( "COLLECTOR_" + collectorNo ) ) ; if ( str == null ) { return; } else { parsePerson ( state , str , team , row ) ; } return; } 
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.util.List < fr.epf.models.Promotion > promotions = promoDAO . findAll () ; request . setAttribute ( "promotions" , promotions ) ; request . getRequestDispatcher ( "/WEB-INF/add_member.jsp" ) . forward ( request , response ) ; } 
void initVariables ( int mapNumber , java.lang.String ballColor , boolean gameStarted ) { inGame = gameStarted ; paused = false ; map = new Map ( mapNumber ) ; ball = new Ball ( ballColor ) ; timer = new javax.swing.Timer ( 10 , this ) ; timer . start () ; watch = new StopWatch () ; if ( inGame ) { watch . start () ; } } 
public final synchronized jogamp.opengl.GLBufferStorage mapBuffer ( final jogamp.opengl.GLBufferStateTracker bufferStateTracker , final jogamp.opengl.GL caller , final int target , final long offset , final long length , final int access , final jogamp.opengl.GLBufferObjectTracker.MapBufferRangeDispatch dispatch , final long glProcAddress ) throws jogamp.opengl.GLException { return this . mapBufferImpl ( bufferStateTracker , caller , target , true , offset , length , access , dispatch , glProcAddress ) ; } 
private static int getThisPieceSize ( PeerFile file , int pieceNum ) { if ( ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) > ( file . getSize () ) ) { return ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) - ( file . getSize () ) ; } return Peer.PIECE_SIZE ; } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { selectS . setLocation ( ( ( int ) ( event . getX () ) ) , ( ( int ) ( event . getY () ) ) ) ; java.lang.System.out . println ( ( "pr" + ( selectS ) ) ) ; if ( isFuncSelect ) { selecting = true ; java.lang.System.out . println ( "h" ) ; } } 
@ java.lang.Override public jonasandtim.energietagebuch.Data.DataInterfaces.KBRDataHasChangedMessage update ( jonasandtim.energietagebuch.Data.DataElements.XDataElement oldElement , jonasandtim.energietagebuch.Data.DataElements.XDataElement newElement ) { jonasandtim.energietagebuch.Data.DataInterfaces.KBRDataHasChangedMessage msg = null ; if ( validateEntry ( newElement ) ) { msg = mDataTree . updateElementGetMessage ( oldElement , newElement ) ; if ( msg != null ) msg . putProperty ( KBRDataHasChangedMessage.PROPERTIES_METERID , mMeter . getUId () ) ; } return msg ; } 
public void killChain ( int index , tsumegoai.Stone color ) { if ( ( index < 0 ) || ( ( searchSpace [ index ] ) == null ) ) return; if ( ( searchSpace [ index ] ) == color ) { searchSpace [ index ] = null ; updateZhash ( tsumegoai.Goban.searchSpacePositions [ index ] , color ) ; for ( int i = 0 ; i < 4 ; i ++ ) { killChain ( tsumegoai.Goban.searchSpaceAdjacentIndices [ ( ( 4 * index ) + i ) ] , color ) ; } } } 
public int compare ( com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p1 , com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p2 ) { if ( ( p1 . getScore () ) < ( p2 . getScore () ) ) { return 1 ; } if ( ( p1 . getScore () ) > ( p2 . getScore () ) ) { return - 1 ; } return p1 . getName () . compareToIgnoreCase ( p2 . getName () ) ; } 
@ java.lang.Override public void itemStateChanged ( java.awt.event.ItemEvent e ) { if ( ( e . getStateChange () ) == ( java.awt.event.ItemEvent.SELECTED ) ) { net.ntg.ftl.ui.TogglePanel.log . info ( ( ( ( "comboBox " + valueName ) + ": " ) + ( colorComboBox . getSelectedIndex () ) ) ) ; net.ntg.ftl.ui.TogglePanel.prefs . putInt ( ( valueName + ( net.ntg.ftl.ui.TogglePanel.COLOR ) ) , colorComboBox . getSelectedIndex () ) ; } } 
private boolean scanFieldsRelation ( java.lang.Class < ? > klass , final net.imadz.lifecycle.meta.type.RelationConstraintMetadata relation ) { for ( java.lang.Class < ? > c = klass ; ( null != c ) && ( ( java.lang.Object . class ) != c ) ; c = c . getSuperclass () ) { for ( java.lang.reflect.Field field : c . getDeclaredFields () ) { if ( hasRelationOnField ( relation , field ) ) return true ; } } return false ; } 
public void init ( org.shaolin.bmdp.workflow.internal.cache.FlowObject flowInfo ) throws org.shaolin.bmdp.workflow.exception.ConfigException { this . flowInfo = flowInfo ; this . flowInfo . parse () ; if ( ( this . flowInfo . getSessionService () ) != null ) { this . sessionService = ( ( org.shaolin.bmdp.workflow.spi.SessionService ) ( org.shaolin.bmdp.runtime.AppContext . get () . getService ( this . flowInfo . getSessionService () ) ) ) ; if ( ( this . sessionService ) == null ) { this . sessionService = new org.shaolin.bmdp.workflow.internal.DefaultFlowSessionService () ; } } } 
private void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } 
public boolean attackEntity ( org.bukkit.entity.LivingEntity target , org.bukkit.entity.Player attacker , double damage ) { org.bukkit.event.entity.EntityDamageByEntityEvent damageEvent = new org.bukkit.event.entity.EntityDamageByEntityEvent ( attacker , target , org.bukkit.event.entity.EntityDamageEvent.DamageCause.ENTITY_ATTACK , damage ) ; org.bukkit.Bukkit . getPluginManager () . callEvent ( damageEvent ) ; if ( damage == 0 ) { return ! ( damageEvent . isCancelled () ) ; } if ( ! ( damageEvent . isCancelled () ) ) { target . damage ( damage ) ; return true ; } return false ; } 
@ java.lang.Override public void onSuccess ( java.lang.String response ) { com.google.gson.Gson g = new com.google.gson.GsonBuilder () . registerTypeAdapter ( org.apereo.models.Config . class , new org.apereo.deserializers.ConfigDeserializer () ) . create () ; org.apereo.models.Config config = g . fromJson ( response , org.apereo.models.Config . class ) ; configManager . setConfig ( config ) ; if ( config . isUpgradeRequired () ) { showErrorDialog ( AppConstants.UPGRADE_REQUIRED ) ; } else if ( config . isUpgradeRecommended () ) { showErrorDialog ( AppConstants.UPGRADE_RECOMMENDED ) ; } else { getAccountFeed () ; } } 
public static void addKeyText ( final org.eclipse.swt.widgets.MenuItem mntm , final java.lang.String text , final org.nschmidt.ldparteditor.enums.TextTask t ) { mntm . setText ( ( ( text + "\t" ) + ( org.nschmidt.ldparteditor.state.KeyStateManager.textTaskKeyMap . get ( t ) ) ) ) ; mntm . addArmListener ( new org.eclipse.swt.events.ArmListener () { @ java.lang.Override public void widgetArmed ( org.eclipse.swt.events.ArmEvent e ) { mntm . setText ( ( ( text + "\t" ) + ( org.nschmidt.ldparteditor.state.KeyStateManager.textTaskKeyMap . get ( t ) ) ) ) ; } } ) ; } 
@ java.lang.Override public void execute ( models.assetOwnership.GameMap map , models.playerAsset.Assets.Player player ) throws models.ctrlCommand.CommandNotConfiguredException { if ( isConfigured ) { player . accept ( new models.visitor.ArmyCreationVisitor ( map , player , RPLocation , units ) ) ; } else { throw new models.ctrlCommand.CommandNotConfiguredException ( ( ( "[" + ( this ) ) + "] is not configured." ) ) ; } } 
public void callEvent ( org.centauri.cloud.cloud.event.Event event ) { java.util.Set < org.centauri.cloud.cloud.event.EventManager.EventHandler > eventSet = this . eventHandlers . get ( event . getClass () ) ; if ( eventSet == null ) return; for ( org.centauri.cloud.cloud.event.EventManager.EventHandler eventHandler : eventSet ) { try { eventHandler.method . invoke ( eventHandler.instance , event ) ; } catch ( java.lang.Exception ex ) { java.lang.System.err . println ( "Something went wrong on during event call: " ) ; org.centauri.cloud.cloud.Cloud . getLogger () . error ( ex . getMessage () , ex ) ; } } } 
private boolean matchExact ( java.util.Calendar matcher , org.json.JSONObject activity ) { int year = activity . getInt ( "year" ) ; int month = activity . getInt ( "month" ) ; return ( ( matcher . get ( java.util.Calendar.YEAR ) ) == year ) && ( ( matcher . get ( java.util.Calendar.MONTH ) ) == month ) ; } 
private void setToolbar ( android.support.v7.widget.Toolbar toolbar , java.lang.String title ) { if ( toolbar != null ) { setSupportActionBar ( toolbar ) ; if ( ( getSupportActionBar () ) != null ) { getSupportActionBar () . setHomeAsUpIndicator ( android.support.v4.content.ContextCompat . getDrawable ( getApplicationContext () , R.drawable.icon_arrow_back ) ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } } else { android.util.Log . d ( com.geekhub.choosehelper.screens.activities.ProfileActivity.TAG , "Can`t setup toolbar: Toolbar is null" ) ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( e . getActionCommand () . equals ( "errors" ) ) { chatty.gui.GuiUtil . showNonModalMessage ( getInvoker () , "Errors" , errorsInfo , javax.swing.JOptionPane.WARNING_MESSAGE , true ) ; } if ( e instanceof chatty.gui.components.menus.CommandActionEvent ) { chatty.util.commands.CustomCommand command = ( ( chatty.gui.components.menus.CommandActionEvent ) ( e ) ) . getCommand () ; chatty.gui.components.settings.CommandSettings . showCommandInfoPopup ( getInvoker () , command ) ; } } 
private void registerSuperTypes ( java.lang.Class type ) { java.lang.Class < ? > supertype = type . getSuperclass () ; while ( ( type != null ) && ( supertype != ( java.lang.Object . class ) ) ) { if ( types . containsKey ( supertype ) ) { throw new java.lang.RuntimeException ( ( "Ambigious Puppet for " + supertype ) ) ; } types . put ( supertype , type ) ; type = ( ( type . getSuperclass () ) == type ) ? null : type . getSuperclass () ; } } 
private java.util.Properties read ( java.io.File f ) throws java.io.IOException { if ( ! ( f . exists () ) ) return new java.util.Properties () ; java.util.Properties prop = new java.util.Properties () ; try ( java.io.FileInputStream stream = new java.io.FileInputStream ( f ) ) { prop . load ( stream ) ; } return prop ; } 
@ java.lang.Override public V put ( K key , V value ) { V val = buckets . get ( ( ( java.lang.Math . abs ( key . hashCode () ) ) % ( bucketCount ) ) ) . add ( key , value ) ; if ( toReorganize ) { reorganize () ; toReorganize = false ; } return val ; } 
private void setUserSessionInfo ( java.lang.String response ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; com.mediamath.terminalone.models.T1User resp ; java.lang.reflect.Type responseTypeInfo = new com.google.gson.reflect.TypeToken < com.mediamath.terminalone.models.T1User > () {} . getType () ; resp = gson . fromJson ( response , responseTypeInfo ) ; this . setUser ( resp ) ; } 
@ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/heartBeat" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public model.BaseStatus receiveHeartBeat ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ip = getRemoteHost ( request ) ; logger . info ( ( "heartbeat from " + ip ) ) ; if ( ! ( db.WorkerCache . contains ( ip ) ) ) { sync.FilterConfigSync . syncFilterConfigsToWorker ( ip ) ; } db.WorkerCache . putIp ( ip ) ; return model.BaseStatus . buildSuccessBaseStatus () ; } 
public static int getValidThreshold ( boolean isSelected , java.lang.String text ) { int threshold = - 1 ; if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; } 
public void changeTaskDate ( java.lang.Long taskID , java.util.Date dateOfTask ) { com.softserve.edu.entity.verification.calibration.CalibrationTask task = taskRepository . findOne ( taskID ) ; if ( ( task == null ) || ( dateOfTask == null ) ) { throw new java.lang.IllegalArgumentException () ; } task . setDateOfTask ( dateOfTask ) ; try { taskRepository . save ( task ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( e ) ; } } 
private void RenderListView ( java.util.List < com.amelendez.lgo.storage.dao.Languo > languos ) { if ( languos == null ) { languos = new java.util.ArrayList <> () ; } adapter = new com.amelendez.lgo.adapters.LanguoListAdapter ( this , languos ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.main_listView ) ) ) ; if ( listView != null ) { listView . setAdapter ( adapter ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_question_review_fragment ) ; org.iliat.gmat.activity.QuestionReviewActivity.PlaceholderFragment.context = this ; mSectionsPagerAdapter = new org.iliat.gmat.activity.QuestionReviewActivity.SectionsPagerAdapter ( getSupportFragmentManager () , mQuestionPack ) ; mViewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.container ) ) ) ; mViewPager . setAdapter ( mSectionsPagerAdapter ) ; } 
public static java.lang.String getPrimaryFreeGroupName ( java.lang.String groupName ) { if ( groupName == null ) { return null ; } int index = groupName . indexOf ( CarbonConstants.DOMAIN_SEPARATOR ) ; if ( index > 0 ) { java.lang.String domain = groupName . substring ( 0 , index ) ; if ( UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME . equals ( domain ) ) { return groupName . substring ( ( index + 1 ) ) ; } } return groupName ; } 
public void setEnabled ( java.lang.Boolean enabled ) { amxBootDelay = 0 ; monitoringDelay = ( amxBootDelay ) + 5 ; if ( ( ! ( this . enabled ) ) && enabled ) { this . enabled = enabled ; bootstrapMonitoringService () ; } else if ( ( this . enabled ) && ( ! enabled ) ) { this . enabled = enabled ; shutdownMonitoringService () ; } } 
private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } if ( ( presenter ) == null ) { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } 
private int computeBestTextureResolution ( int resolution ) { int largestImageDimension = ( ( int ) ( java.lang.Math . max ( model . xdim () , model . ydim () ) ) ) ; int bestImageResolution = java.lang.Math . min ( largestImageDimension , resolution ) ; return gov.nasa.jpl.hi.marsimages.models.M . floorPowerOfTwo ( bestImageResolution ) ; } 
@ java.lang.Override protected void onPostExecute ( final java.lang.Boolean success ) { mAuthTask = null ; showProgress ( false ) ; if ( success ) { fr.sims.coachingproject.service.gcmService.RegistrationGCMIntentService . startActionRegistrationGCM ( getActivity () ) ; fr.sims.coachingproject.ui.activity.MainActivity . startActivity ( getActivity () ) ; fr.sims.coachingproject.util.SharedPrefUtil . putIsFirstLaunch ( getActivity () , false ) ; if ( ( getActivity () ) != null ) { getActivity () . finish () ; } } else { mPasswordView . setError ( getString ( R.string.error_incorrect ) ) ; mPasswordView . requestFocus () ; } } 
private void setupMessageText ( android.view.View view ) { message = ( ( android.widget.TextView ) ( view . findViewById ( R.id.message ) ) ) ; if ( ( profile ) != null ) { java.lang.String text = "Currently logged in as " + ( profile . getName () ) ; message . setText ( text ) ; } else { message . setText ( io.github.getExposure.profile.LoginFragment.LOGGED_OUT_TEXT ) ; } } 
public void map ( java.lang.Object key , org.apache.hadoop.io.Text value , nl.utwente.bigdata.Context context ) throws java.io.IOException , java.lang.InterruptedException { java.lang.String [] split = value . toString () . split ( "\t" ) ; nl.utwente.bigdata.GoalPlayerCount.CountMapper.player . set ( split [ 1 ] ) ; context . write ( nl.utwente.bigdata.GoalPlayerCount.CountMapper.player , nl.utwente.bigdata.GoalPlayerCount.CountMapper.one ) ; } 
public java.lang.String register ( javax.json.JsonObject messageObject ) { int id = this . bus . registerSender ( messageObject . getString ( "sender_class" ) , messageObject . getString ( "sender_name" ) ) ; javax.json.JsonObject response = javax.json.Json . createObjectBuilder () . add ( "type" , "register" ) . add ( "sender_id" , id ) . add ( "ack" , ( id == ( - 1 ) ? ack_error ( 400 ) : ack_ok () ) ) . build () ; return response . toString () ; } 
private void leaveApplicationStatusChange ( final org.egov.eis.model.LeaveApplication leaveApplication ) { final java.lang.String workFlowAction = leaveApplication . getWorkflowDetails () . getAction () ; if ( "Approve" . equalsIgnoreCase ( workFlowAction ) ) leaveApplication . setStatus ( LeaveStatus.APPROVED ) ; else if ( "Reject" . equalsIgnoreCase ( workFlowAction ) ) leaveApplication . setStatus ( LeaveStatus.REJECTED ) ; else if ( "Cancel" . equalsIgnoreCase ( workFlowAction ) ) leaveApplication . setStatus ( LeaveStatus.CANCELLED ) ; else if ( "Submit" . equalsIgnoreCase ( workFlowAction ) ) leaveApplication . setStatus ( LeaveStatus.RESUBMITTED ) ; } 
public void addProver ( java.lang.String proverName , java.lang.String command , boolean override ) throws exceptions.NameAlreadyInUseException { if ( ( ! override ) && ( prover.local.LocalProver.availableProvers . contains ( proverName ) ) ) throw new exceptions.NameAlreadyInUseException ( ( ( ( "Name " + proverName ) + " is already in use with command " ) + ( gui.Config . getLocalProverCommand ( proverName ) ) ) ) ; gui.Config . setLocalProverCommand ( proverName , command ) ; if ( ! ( prover.local.LocalProver.availableProvers . contains ( proverName ) ) ) prover.local.LocalProver.availableProvers . add ( proverName ) ; gui.Config . setLocalProvers ( prover.local.LocalProver.availableProvers ) ; } 
public static backtype.storm.generated.StormTopology buildTopology ( org.apache.storm.flux.ExecutionContext context ) throws java.lang.ClassNotFoundException , java.lang.IllegalAccessException , java.lang.InstantiationException , java.lang.NoSuchMethodException , java.lang.reflect.InvocationTargetException { org.apache.storm.flux.TopologyBuilder builder = new org.apache.storm.flux.TopologyBuilder () ; org.apache.storm.flux.FluxBuilder . buildComponents ( context ) ; org.apache.storm.flux.FluxBuilder . buildSpouts ( context , builder ) ; org.apache.storm.flux.FluxBuilder . buildBolts ( context ) ; org.apache.storm.flux.FluxBuilder . buildStreamDefinitions ( context , builder ) ; return builder . createTopology () ; } 
private void post ( org.daisy.common.messaging.Message.MessageBuilder builder ) { if ( ( ( props ) != null ) && ( ( props . getProperty ( "JOB_ID" ) ) != null ) ) { builder . withJobId ( props . getProperty ( "JOB_ID" ) ) ; } builder . withSequence ( ( ( sequence ) ++ ) ) ; builder . withTimeStamp ( new java.util.Date () ) ; eventBus . get () . post ( builder . build () ) ; } 
public void setRegistrationNumber ( java.lang.String registrationNumber ) { if ( ( registrationNumber == null ) || ( ! ( fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility . validateRegistrationNumber ( registrationNumber ) ) ) ) { return; } countyEditText . setText ( registrationNumber . substring ( 0 , 2 ) ) ; vesselNumberEditText . setText ( registrationNumber . substring ( 2 , 6 ) ) ; municipalityEditText . setText ( registrationNumber . substring ( 6 , registrationNumber . length () ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_restaurants ) ; butterknife.ButterKnife . bind ( this ) ; android.util.Log . d ( com.epicodus.myrestaurants.ui.RestaurantsActivity.TAG , "In RestaurantsActivity" ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent . getStringExtra ( "location" ) ; mLocationTextView . setText ( ( "Here are all the restaurants near: " + location ) ) ; getRestaurants ( location ) ; } 
private void split ( IntervalMessage message ) { java.util.Queue < PositionRequestMessage > queue = this . returnAddresses . get ( message.requestUuid ) ; if ( queue == null ) { return; } int intervalStart = message.start ; for ( PositionRequestMessage prMessage : queue ) { prMessage.sender . send ( new IntervalMessage ( this , prMessage.sender , intervalStart , ( ( intervalStart + ( prMessage.i ) ) - 1 ) , prMessage.uuid ) ) ; intervalStart += prMessage.i ; } this . returnAddresses . remove ( message.requestUuid ) ; } 
protected static int getDialogIDfromOneUserToAnother ( java.lang.String fromWho , java.lang.String toWhom ) { int result = 0 ; try ( final java.sql.Connection connection = databaseTools.ConnectionPoolBasedApacheDBCP . getConnectionFromPool ( DAO.DialoguesDAO . class . getSimpleName () ) ; final java.sql.Statement statement = connection . createStatement () ; final java.sql.ResultSet resultSet = statement . executeQuery ( DAO.DialoguesDAO . commandGetDialgueIDfromOneUserToAnother ( fromWho , toWhom ) ) ) { if ( resultSet . next () ) result = resultSet . getInt ( 1 ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return result ; } 
private void stateChangedInternal ( java.lang.String state , java.util.List < eu.geekhome.asymptote.model.SyncUpdate > updates ) { eu.geekhome.asymptote.model.StateSyncUpdate stateUpdate = findStateUpdate ( updates ) ; if ( stateUpdate == null ) { updates . add ( new eu.geekhome.asymptote.model.StateSyncUpdate ( state ) ) ; } else { stateUpdate . setValue ( state ) ; } } 
public web.crawler.db.model.Index getIndexByTerm ( java.lang.String term ) { org.springframework.data.mongodb.core.query.Query findQuery = new org.springframework.data.mongodb.core.query.Query () ; findQuery . addCriteria ( org.springframework.data.mongodb.core.query.Criteria . where ( "term" ) . is ( term . toLowerCase () ) ) ; web.crawler.db.model.Index dbIndex = mongoOperation . findOne ( findQuery , web.crawler.db.model.Index . class , DBTable.INDEX ) ; return dbIndex ; } 
public static boolean isDateValid ( java.lang.String myDate ) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "dd/MM/yyyy" ) ; java.util.Date testDate ; sdf . setLenient ( false ) ; if ( Constants.DEFAULT_VALUE . equalsIgnoreCase ( myDate ) ) { return true ; } try { testDate = sdf . parse ( myDate ) ; return true ; } catch ( java.text.ParseException e ) { return false ; } } 
public boolean move ( int dx , int dy , int color ) { int newX = x ; int newY = y ; newX += ( dx * ( - 1 ) ) * color ; newY += dy * color ; if ( ( ( newX >= 0 ) && ( newX < 5 ) ) && ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; } return false ; } 
public void addDeath ( final java.lang.String player , final java.lang.Integer playtime ) { mysqlQuery ( ( ( ( ( ( ( "UPDATE `" + ( org.mcsg.survivalgames.points.PointSystem . getInstance () . playerStatTable ) ) + "` SET `playtime` = `playtime`+" ) + playtime ) + ", `deaths` = `deaths`+1 WHERE `name` = '" ) + player ) + "'" ) ) ; org.mcsg.survivalgames.points.PointQueries.cachedStats . get ( player . toLowerCase () ) . addDeath () ; } 
public void print ( char [] [] map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { for ( int j = 0 ; j < ( w ) ; j ++ ) { java.lang.System.out . print ( map [ i ] [ j ] ) ; } java.lang.System.out . println () ; } java.lang.System.out . println () ; } 
public void setTemperature ( java.lang.String h ) { if ( h != null ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } 
@ java.lang.Override public void onJoystickCrossMoved ( int direction , int id ) { switch ( direction ) { case 0 : t.s.o.r.f.frost.MainActivity.sendMe = "hai" ; break; case 1 : t.s.o.r.f.frost.MainActivity.sendMe = "x002?" ; break; case 2 : t.s.o.r.f.frost.MainActivity.sendMe = "y002?" ; break; case 3 : t.s.o.r.f.frost.MainActivity.sendMe = "x001?" ; break; case 4 : t.s.o.r.f.frost.MainActivity.sendMe = "y001?" ; break; } } 
@ java.lang.Override public java.lang.Boolean visitIntersection_Intersection ( org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType subtype , org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedIntersectionType supertype , org.checkerframework.framework.type.visitor.VisitHistory visited ) { javax.lang.model.util.Types types = checker . getTypeUtils () ; for ( org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType subtypeI : subtype . directSuperTypes () ) { for ( org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType supertypeI : subtype . directSuperTypes () ) { if ( org.checkerframework.javacutil.TypesUtils . isErasedSubtype ( types , subtypeI . getUnderlyingType () , supertypeI . getUnderlyingType () ) ) { if ( ! ( isSubtype ( subtypeI , supertypeI ) ) ) { return false ; } } } } return true ; } 
public static void reverseStatement ( java.lang.String userInput ) { java.lang.String inputReversed ; inputReversed = "" ; for ( int i = ( userInput . length () ) - 1 ; i >= 0 ; i -- ) { inputReversed = inputReversed + ( userInput . charAt ( i ) ) ; } java.lang.System.out . println ( inputReversed ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.home_activity ) ; mToken = io.github.kolacbb.kolaweibo.util.AccessTokenKeeper . readAccessToken ( getApplicationContext () ) ; if ( mToken . isSessionValid () ) { loadData ( savedInstanceState ) ; } else { com.sina.weibo.sdk.auth.AuthInfo mAuthInfo = new com.sina.weibo.sdk.auth.AuthInfo ( this , io.github.kolacbb.kolaweibo.api.Constants.APP_KEY , io.github.kolacbb.kolaweibo.api.Constants.REDIRECT_URL , io.github.kolacbb.kolaweibo.api.Constants.SCOPE ) ; com.sina.weibo.sdk.auth.sso.SsoHandler mSsoHandler = new com.sina.weibo.sdk.auth.sso.SsoHandler ( this , mAuthInfo ) ; mSsoHandler . authorize ( new io.github.kolacbb.kolaweibo.ui.activity.HomeActivity.AuthListener () ) ; } } 
public boolean contains ( java.lang.String word ) { for ( java.lang.Integer integer : seeds ) { boolean result = buckets [ java.lang.Math . abs ( ( ( org.apache.mahout.math.MurmurHash3 . murmurhash3x8632 ( word . toLowerCase () . getBytes () , 0 , word . length () , integer ) ) % ( buckets.length ) ) ) ] ; if ( ! result ) { return false ; } } return true ; } 
private boolean isEvictableHeapPercentage ( final com.hazelcast.map.impl.MapContainer mapContainer ) { final long usedHeapSize = getUsedHeapSize ( mapContainer ) ; if ( usedHeapSize == ( - 1L ) ) { return false ; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer . getMapConfig () . getMaxSizeConfig () ; final float maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker . getApproximateMaxSize ( maxSizeConfig . getSize () ) ; final long total = getTotalMemory () ; return maxSize < ( ( ( 1.0F * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * usedHeapSize ) / total ) ; } 
private boolean sendCommand ( byte command ) { try { dos . writeByte ( command ) ; dos . flush () ; return dis . readBoolean () ; } catch ( java.io.IOException ioe ) { java.lang.System.err . println ( "IO Exception" ) ; java.lang.System . exit ( 1 ) ; return false ; } } 
@ java.lang.Override public int compare ( com.adm.scheduler.message.Message o1 , com.adm.scheduler.message.Message o2 ) { if ( ( priority . get ( o1 . getGroup () ) ) != null ) return 1 ; if ( ( priority . get ( o2 . getGroup () ) ) != null ) return - 1 ; return 1 ; } 
public void run ( lu.innocence.opengl.core.RenderInterface renderInterface , int width , int height ) { lu.innocence.opengl.core.DisplayManager.LOGGER . info ( "LWJGL - {} " , org.lwjgl.Version . getVersion () ) ; this . renderInterface = renderInterface ; init ( width , height ) ; loop () ; org.lwjgl.glfw.Callbacks . glfwFreeCallbacks ( window ) ; glfwDestroyWindow ( window ) ; glfwTerminate () ; } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view , java.lang.String url ) { if ( ( ( url . startsWith ( "mailto:" ) ) || ( url . startsWith ( "geo:" ) ) ) || ( url . startsWith ( "tel:" ) ) ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( url ) ) ; startActivity ( intent ) ; } return true ; } 
@ cpw.mods.fml.common.Mod.EventHandler public void init ( cpw.mods.fml.common.event.FMLInitializationEvent event ) { MinecraftForge.EVENT_BUS . register ( new com.miningmark48.miscconfigs.event.EventCraftingTable () ) ; MinecraftForge.EVENT_BUS . register ( new com.miningmark48.miscconfigs.event.EventSaplingGrowthMultiplier () ) ; cpw.mods.fml.common.FMLCommonHandler . instance () . bus () . register ( new com.miningmark48.miscconfigs.event.EventJoinGame () ) ; com.miningmark48.miscconfigs.utility.LogHelper . info ( net.minecraft.util.StatCollector . translateToLocal ( "log.info.init" ) ) ; } 
@ java.lang.Override public void onReceive ( final android.content.Context context , android.content.Intent intent ) { cse110m260t9.qralarm.MainActivity . getAlarmRingText () . setText ( "Enough Rest. Do Work Now!" ) ; android.content.Intent scannerIntent = new android.content.Intent ( context , cse110m260t9.qralarm.QRScannerActivity . class ) ; scannerIntent . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; context . startActivity ( scannerIntent ) ; } 
public com.pactera.web.model.Department findById ( java.lang.Integer deptno ) throws com.pactera.web.exception.ServiceException { final java.lang.String METHOD_NAME = "findById" ; log . debug ( ( METHOD_NAME + " begin" ) ) ; log . debug ( ( ( METHOD_NAME + " deptno : " ) + deptno ) ) ; com.pactera.web.model.Department dept = departmentDAO . getOne ( deptno ) ; log . debug ( ( METHOD_NAME + " end" ) ) ; return dept ; } 
public void applyHpBonus ( org.bukkit.entity.LivingEntity entity ) { if ( ! ( entity . isValid () ) ) { return; } java.lang.Integer hpToAdd = getHpBonus ( entity ) ; entity . setMaxHealth ( ( ( entity . getMaxHealth () ) + hpToAdd ) ) ; entity . setHealth ( entity . getMaxHealth () ) ; } 
public main.State executeCommand ( java.lang.String commandText , java.lang.String directory ) throws java.io.IOException , json.JSONException { completeState . clearStatusMessage () ; command.Command userCommand ; userCommand = parser . parseCommand ( commandText ) ; if ( null == userCommand ) { completeState . setStatusMessage ( State.MESSAGE_PARSE_ERROR ) ; return completeState ; } userCommand . execute ( completeState ) ; assert isValidCommand ( userCommand ) ; storage . stateToStorage ( completeState , directory ) ; return completeState ; } 
public static java.lang.String apiMimeTypeToNetworkMimeType ( java.lang.String apiMimeType ) { if ( apiMimeType . startsWith ( MimeType.GEOLOC_MESSAGE ) ) { return com.gsma.rcs.core.ims.service.im.chat.geoloc.GeolocInfoDocument.MIME_TYPE ; } else if ( com.gsma.rcs.core.ims.service.im.chat.ChatUtils . isTextPlainType ( apiMimeType ) ) { return com.gsma.services.rcs.chat.ChatLog.Message.MimeType.TEXT_MESSAGE ; } else if ( apiMimeType . startsWith ( FileTransferHttpInfoDocument.MIME_TYPE ) ) { return com.gsma.rcs.core.ims.service.im.filetransfer.http.FileTransferHttpInfoDocument.MIME_TYPE ; } throw new java.lang.IllegalArgumentException ( ( "Unsupported input mimetype detected : " + apiMimeType ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage update ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String utoken , @ org.springframework.web.bind.annotation.RequestParam java.lang.String leader ) { if ( ( org.apache.commons.lang3.StringUtils . isBlank ( utoken ) ) || ( org.apache.commons.lang3.StringUtils . isBlank ( leader ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST ; com.alibaba.fastjson.JSONObject leaderJson = com.alibaba.fastjson.JSON . parseObject ( leader ) ; leaderJson . put ( "userId" , userServiceApi.USER . get ( utoken ) . getId () ) ; userServiceApi.LEADER . update ( com.alibaba.fastjson.JSON . toJavaObject ( leaderJson , cn.momia.api.user.leader.Leader . class ) ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS ; } 
boolean doubleTapAttack ( java.lang.String [] ad ) { Config.runFlaskSuppression = true ; long tapTime = 400 ; if ( ( ( java.lang.System . currentTimeMillis () ) - ( doubleTapTime ) ) < tapTime ) { multiHotkeyFix = true ; if ( soakAttack ( ad ) ) return false ; wdgmsg ( "act" , ( ( java.lang.Object [] ) ( ad ) ) ) ; if ( ( ui.fight ) != null ) { ui.fight . attackCurrent () ; } return true ; } doubleTapTime = java.lang.System . currentTimeMillis () ; return false ; } 
private void logOut () { com.parse.ParseUser . logOut () ; android.content.Intent takeToLogin = new android.content.Intent ( this , com.example.android.ShoppingWithFriends.LoginActivity . class ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; takeToLogin . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TASK ) ; startActivity ( takeToLogin ) ; finish () ; } 
public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_A ) ) { right = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_D ) ) { left = true ; } if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_W ) ) { up = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_S ) ) { down = true ; } } 
private int [] getDim ( int elements ) { int xDim = ( ( int ) ( java.lang.Math . ceil ( java.lang.Math . sqrt ( elements ) ) ) ) ; int yDim = xDim ; while ( ( xDim * ( yDim - 1 ) ) >= elements ) { yDim -- ; } return new int [] { xDim , yDim } ; } 
@ org.junit.After public void tearDown ( ) throws java.lang.Exception { final delight.async.Operation < delight.functional.Success > _function = new delight.async.Operation < delight.functional.Success > () { @ java.lang.Override public void apply ( final delight.async.callbacks.ValueCallback < delight.functional.Success > callback ) { delight.keyvalue.sql.tests.TestSqlStore . this . map . stop ( delight.async.AsyncCommon . < delight.functional.Success > asSimpleCallback ( callback ) ) ; } } ; delight.async.jre.Async . < delight.functional.Success > waitFor ( _function ) ; } 
private gr.uom.java.ast.MethodInvocationObject recurseDelegations ( gr.uom.java.ast.MethodInvocationObject methodInvocation , gr.uom.java.ast.SystemObject system ) { gr.uom.java.ast.MethodInvocationObject delegation ; if ( ( ( ( delegation = system . containsDelegate ( methodInvocation ) ) != null ) && ( ( system . getClassObject ( delegation . getOriginClassName () ) ) != null ) ) && ( ! ( delegation . equals ( methodInvocation ) ) ) ) return recurseDelegations ( delegation , system ) ; else return methodInvocation ; } 
private void drawMon ( java.awt.Graphics g ) { for ( com.kurtzbot.CachedMon mon : cache . getCurrent () ) { g . setColor ( new java.awt.Color ( 255 , 135 , 232 ) ) ; g . drawOval ( ( ( ( int ) ( mon.x ) ) - 12 ) , ( ( ( int ) ( mon.y ) ) - 12 ) , 24 , 24 ) ; } } 
@ java.lang.Override public int compareTo ( org.sosy_lab.cpachecker.pcc.strategy.partitioning.BestFirstWeightedBalancedGraphPartitioner.NodePriority compNode ) { if ( compNode == null ) { return - 1 ; } if ( ( this . getPriority () ) != ( compNode . getPriority () ) ) { return ( this . getPriority () ) - ( compNode . getPriority () ) ; } else { int n1 = this . getNode () . getNodeNumber () ; int n2 = compNode . getNode () . getNodeNumber () ; return n2 - n1 ; } } 
public static java.lang.String right ( java.lang.String s , int length ) { if ( length == 0 ) return "" ; if ( ( s . length () ) < length ) return s ; else if ( length > 0 ) return s . substring ( ( ( s . length () ) - length ) , s . length () ) ; else { return s . substring ( ( - length ) , s . length () ) ; } } 
@ java.lang.Override public int compare ( datastructure.DFSCode e1 , datastructure.DFSCode e2 ) { return ( e1.a ) < ( e2.a ) ? - 1 : ( e1.a ) == ( e2.a ) ? ( e1.y ) < ( e2.y ) ? - 1 : ( e1.y ) == ( e2.y ) ? 0 : 1 : 1 ; } 
@ java.lang.Override public void onPreReceive ( final org.eclipse.jgit.transport.ReceivePack rp , final java.util.Collection < org.eclipse.jgit.transport.ReceiveCommand > commands ) { fs . lock () ; if ( ( clusterService ) != null ) { clusterService . lock () ; } for ( final org.eclipse.jgit.transport.ReceiveCommand command : commands ) { final org.eclipse.jgit.revwalk.RevCommit lastCommit = org.uberfire.java.nio.fs.jgit.util.JGitUtil . getLastCommit ( fs . gitRepo () , command . getRefName () ) ; oldTreeRefs . put ( command . getRefName () , lastCommit ) ; } } 
public boolean setUnit ( int index , kingofthehill.domain.Unit unit ) { if ( ( getUnit ( index ) ) != null ) { return false ; } try { if ( unit != null ) { this . units [ index ] = unit ; unit . setBase ( this ) ; return true ; } else { return false ; } } catch ( java.lang.Exception ex ) { return false ; } } 
public void imageClick ( android.view.View view ) { android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder ( this ) ; builder . setTitle ( "" ) ; android.widget.ImageView imageView = new android.widget.ImageView ( getApplicationContext () ) ; imageView . setImageBitmap ( origImage ) ; builder . setView ( imageView ) ; builder . show () ; } 
protected void assertUtilsClass ( java.lang.Class < ? > c ) { java.lang.reflect.Constructor ctor = null ; try { ctor = c . getDeclaredConstructor () ; assertTrue ( java.lang.reflect.Modifier . isPrivate ( ctor . getModifiers () ) ) ; ctor . setAccessible ( true ) ; try { ctor . newInstance () ; } catch ( java.lang.ReflectiveOperationException e ) { fail ( "Unable to instantiate!" ) ; } } catch ( java.lang.NoSuchMethodException e ) { fail ( ( "No default constructor defined for class " + ( c . getCanonicalName () ) ) ) ; } } 
public static java.lang.String getLastHash ( alien4cloud.git.Git git ) { try { java.util.Iterator < org.eclipse.jgit.revwalk.RevCommit > revCommitIterator = git . log () . setMaxCount ( 1 ) . call () . iterator () ; if ( revCommitIterator . hasNext () ) { return revCommitIterator . next () . getName () ; } } catch ( org.eclipse.jgit.api.errors.GitAPIException e ) { throw new alien4cloud.exception.GitException ( "Failed to log git repository" , e ) ; } return null ; } 
@ android.support.annotation.MainThread public void setStatus ( @ org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus ) { if ( ( getEpisode () ) == null ) { return; } if ( getEpisode () . isPlaying () ) { if ( IsDisplayingPlayIcon () ) { animateChangeFrom ( PlayPauseDrawable.IS_PAUSED ) ; } } else { if ( ! ( IsDisplayingPlayIcon () ) ) { animateChangeFrom ( PlayPauseDrawable.IS_PLAYING ) ; } } mStatus = argPlayerStatus ; if ( ( mStatus ) == ( org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.STATE_PREPARING ) ) { mStartTime = java.lang.System . currentTimeMillis () ; } this . invalidate () ; } 
@ java.lang.Override public void export ( java.io.OutputStream os ) { java.io.Writer writer = null ; try { writer = new java.io.OutputStreamWriter ( os , "UTF8" ) ; export ( writer ) ; } catch ( java.lang.Exception e ) { log . error ( ( "Failed to write summary csv data: " + ( this ) ) , e ) ; } finally { if ( writer != null ) { try { writer . close () ; } catch ( java.lang.Throwable e ) {} } } } 
private static < T extends java.lang.Comparable < ? super T > > void bestSort ( T [] seq , T [] auxSeq , int lo , int hi ) { final int altSortThreshold = 7 ; int elementsToSort = ( hi - lo ) + 1 ; if ( elementsToSort > altSortThreshold ) edu.mit.ita.util.Arrays . mergeSort ( seq , auxSeq , lo , hi ) ; else edu.mit.ita.util.Arrays . insertionSort ( seq , lo , hi ) ; } 
public void removeController ( java.lang.Object controller ) { removeControllerBinds ( notifybinds , controller ) ; removeControllerBinds ( propertybinds , controller ) ; removeControllerBinds ( propertiesbinds , controller ) ; removeControllerBinds ( pathbinds , controller ) ; removeControllerBinds ( timelinenotifybinds , controller ) ; org.springfield.fs.FsNode node = new org.springfield.fs.FsNode ( "bind" , "1" ) ; node . setProperty ( "action" , "remove controller" ) ; node . setProperty ( "controller" , ( "" + ( controller . hashCode () ) ) ) ; notify ( "/shared/internal" , node ) ; } 
@ java.lang.Override public void onNavigationBlocked ( int position , int direction ) { android.view.View contentView = findViewById ( android.R.id.content ) ; if ( contentView != null ) { com.heinrichreimersoftware.materialintro.slide.Slide slide = getSlide ( position ) ; if ( slide == permissionsSlide ) { android.support.design.widget.Snackbar . make ( contentView , R.string.label_grant_permissions , Snackbar.LENGTH_LONG ) . show () ; } else if ( slide == loginSlide ) { android.support.design.widget.Snackbar . make ( contentView , R.string.label_fill_out_form , Snackbar.LENGTH_LONG ) . show () ; } } } 
@ java.lang.Override public io.subutai.common.environment.Environment loadEnvironment ( final java.lang.String environmentId ) throws io.subutai.common.environment.EnvironmentNotFoundException { com.google.common.base.Preconditions . checkNotNull ( environmentId , "Invalid environment id" ) ; io.subutai.core.environment.impl.entity.EnvironmentImpl environment = environmentAdapter . get ( environmentId ) ; if ( environment != null ) { return environment ; } environment = environmentService . find ( environmentId ) ; if ( environment != null ) { setTransientFields ( com.google.common.collect.Sets . < io.subutai.common.environment.Environment > newHashSet ( environment ) ) ; return environment ; } throw new io.subutai.common.environment.EnvironmentNotFoundException () ; } 
private void configureViewHolderSimpleStory ( com.codepath.timeline.adapters.StoriesAdapter.ViewHolderSimpleStory holder , int position ) { com.codepath.timeline.models.Story story = mStories . get ( position ) ; android.util.Log . d ( "DEBUG" , story . toString () ) ; if ( story != null ) { holder . getTvStoryTitle () . setText ( story . getStoryTitle () ) ; com.bumptech.glide.Glide . with ( context ) . load ( story . getBackgroundImageUrl () ) . fitCenter () . bitmapTransform ( new jp.wasabeef.glide.transformations.RoundedCornersTransformation ( context , 25 , 0 ) ) . into ( holder . getIvBackgroundImage () ) ; } } 
@ java.lang.Override public boolean generateIntegrityResults ( final java.lang.String endpointId ) throws java.lang.Exception { try { createContentletTemporaryTable ( endpointId ) ; processContentletIntegrityByStructureType ( endpointId , Structure.STRUCTURE_TYPE_FILEASSET ) ; com.dotmarketing.common.db.DotConnect dc = new com.dotmarketing.common.db.DotConnect () ; return ( ( java.lang.Long ) ( dc . getRecordCount ( getIntegrityType () . getResultsTableName () ) ) ) > 0 ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Error running the File Assets Integrity Check" , e ) ; } } 
@ java.lang.Override public boolean isDone ( core.game.Game game ) { boolean ended = super . isFinished ( game ) ; if ( ended ) return true ; if ( ( ( ( itype ) == ( - 1 ) ) && ( ( ( game . getNumSprites ( itype ) ) - ( game . getNumDisabledSprites ( itype ) ) ) <= ( limit ) ) ) && ( canEnd ) ) { countScore ( game ) ; return true ; } return false ; } 
private void highlight ( final org.kie.workbench.common.stunner.core.graph.Node node , final org.kie.workbench.common.stunner.core.graph.Edge < org.kie.workbench.common.stunner.core.graph.content.view.View < ? > , org.kie.workbench.common.stunner.core.graph.Node > connector , final boolean valid ) { canvasHighlight . unhighLight () ; if ( ( null != node ) && valid ) { canvasHighlight . highLight ( node ) ; } else if ( null != node ) { canvasHighlight . invalid ( node ) ; } } 
private void readXML ( java.lang.String filePath ) { javax.xml.parsers.SAXParserFactory saxParserFactory = javax.xml.parsers.SAXParserFactory . newInstance () ; try { javax.xml.parsers.SAXParser saxParser = saxParserFactory . newSAXParser () ; saxParser . parse ( filePath , filteringHandler ) ; } catch ( javax.xml.parsers.ParserConfigurationException e ) { e . printStackTrace () ; } catch ( org.xml.sax.SAXException e ) { e . printStackTrace () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public org.openlmis.distribution.dto.DistributionDTO getDistribution ( org.openlmis.distribution.domain.Distribution arg , java.lang.Long userId ) { org.openlmis.distribution.domain.Distribution distribution = getFullSyncedDistribution ( arg ) ; if ( distribution != null ) { if ( userId != null ) { insertEditInProgress ( userId , distribution . getId () ) ; } java.util.Map < java.lang.Long , org.openlmis.distribution.domain.FacilityDistribution > facilityDistributionMap = facilityDistributionService . getData ( distribution , true ) ; distribution . setFacilityDistributions ( facilityDistributionMap ) ; return distribution . transform () ; } return null ; } 
private double calculateSquaredNorm ( final T row ) { double norm = 0.0 ; for ( int i = 1 ; i <= ( m_nFets ) ; i ++ ) { double fet = row . getFeature ( i ) ; norm += fet * fet ; } return norm ; } 
public void causeDamage ( double amount , life.grass.grasscombat.datatype.DamageType type ) { double damage = 0.0 ; if ( type . equals ( DamageType.BASIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else if ( type . equals ( DamageType.MAGIC_DAMAGE ) ) { damage = life.grass.grasscombat.utils.DamageUtil . getDefencedDamage ( amount , getArmorData ( ArmorDataType.MAGIC_DEFENCE ) , getArmorData ( ArmorDataType.PROTECTION ) ) ; } else { damage = amount ; } causeRawDamage ( damage ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; com.facebook.FacebookSdk . sdkInitialize ( getApplicationContext () ) ; setContentView ( R.layout.activity_main ) ; com.parse.Parse . enableLocalDatastore ( this ) ; com.parse.Parse . initialize ( this , "rImfNv4tT49YDypqeW0EBVwwES7b8GBIeeilMjsi" , "HUbrGgOnHXM3DpWo2aHJ8AGZUyHOhFOPokyEoLNJ" ) ; loginBtn = ( ( com.facebook.login.widget.LoginButton ) ( findViewById ( R.id.login_button ) ) ) ; } 
private java.lang.String getExtension ( final java.lang.String filename ) { final int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } return null ; } 
public boolean hasUpgrade ( int rarity , Lib.summon.Awakening [] awakening ) { for ( Lib.summon.Awakening a : awakening ) { for ( int i = 0 ; i < ( a.units.length ) ; i ++ ) { if ( a.units [ i ] . name . equals ( name ) ) { return hasUpgrade ( rarity , a.rarityAwakened [ i ] ) ; } } } return false ; } 
private void addSyncObjectPerformed ( org.apache.wicket.ajax.AjaxRequestTarget target ) { com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType syncObject = new com.evolveum.midpoint.web.component.wizard.resource.ObjectSynchronizationType () ; syncObject . setEnabled ( true ) ; resourceModel . getObject () . asObjectable () . getSynchronization () . getObjectSynchronization () . add ( syncObject ) ; editSyncObjectPerformed ( target , syncObject ) ; parentPage . refreshIssues ( target ) ; } 
@ com.codeup.controller.GetMapping ( value = "/recipe/delete" ) public java.lang.String deleteRecipe ( @ com.codeup.controller.RequestParam ( value = "recipe_id" ) long recipe_id ) { com.codeup.controller.User user = ( ( com.codeup.controller.User ) ( org.springframework.security.core.context.SecurityContextHolder . getContext () . getAuthentication () . getPrincipal () ) ) ; com.codeup.controller.UserRecipe userRecipe = userRecipeRepository . findByUser_IdAndRecipe_Id ( user . getId () , recipe_id ) ; userRecipeRepository . delete ( userRecipe ) ; return "redirect:/" ; } 
public void insertLoadRecord ( java.lang.String fileName , java.lang.String graph ) throws com.linkedpipes.etl.executor.api.v1.LpException { try ( java.sql.Connection connection = getSqlConnection () ) { try ( java.sql.PreparedStatement statement = com.linkedpipes.plugin.exec.virtuoso.SqlExecutor . createLdStatement ( connection , directory , fileName , graph ) ) { statement . executeQuery () ; } } catch ( java.sql.SQLException ex ) { throw exceptionFactory . failure ( "Can't execute ld_dir query." , ex ) ; } } 
@ java.lang.Override public void onSuccess ( int statusCode , cz.msebera.android.httpclient.Header [] headers , org.json.JSONObject response ) { com.codepath.apps.mysimpletweet.models.Tweet tweet = new com.codepath.apps.mysimpletweet.models.Tweet ( response ) ; tweet . save () ; tweet . getUser () . save () ; if ( ( listener ) != null ) { listener . onCreateSuccess ( tweet . getId () ) ; listener = null ; } } 
public void add ( int poche , pokemon.modele.Objet obj , int qte ) { if ( inventaire . elementAt ( poche ) . contains ( obj ) ) { int indice = inventaire . elementAt ( poche ) . indiceOf ( obj ) ; inventaire . elementAt ( poche ) . contenu . elementAt ( indice ) . ajoutQte ( qte ) ; } else { inventaire . elementAt ( poche ) . add ( new pokemon.modele.UniteStockage < pokemon.modele.Objet > ( obj , qte ) ) ; } } 
private org.json.JSONArray getJSONFromURL ( java.lang.String URL ) { org.springframework.http.HttpHeaders headers = new org.springframework.http.HttpHeaders () ; headers . set ( "Authorization" , "Basic YjE0NTY4NzdAdHJidm4uY29tOkVudEFsbFN0YXJSZWRvbmVBbGxBcXVpcmVk" ) ; org.springframework.http.HttpEntity < java.lang.String > entity = new org.springframework.http.HttpEntity < java.lang.String > ( "parameters" , headers ) ; org.springframework.http.ResponseEntity < java.lang.String > results = restCall . exchange ( URL , HttpMethod.GET , entity , java.lang.String . class ) ; try { org.json.JSONArray jsonResults = new org.json.JSONArray ( results . getBody () ) ; return jsonResults ; } catch ( org.json.JSONException e ) { return null ; } } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String CREATE_WIFIS_TABLE = ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.TABLE_WIFIS ) ) + "(" ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_ID ) ) + " INTEGER PRIMARY KEY," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_NAME ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_BSSID_NO ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_SILENCE ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_AUTO_SMS ) ) + " TEXT" ) + ")" ; db . execSQL ( CREATE_WIFIS_TABLE ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String personId = java.lang.String . valueOf ( followersDTO . getId () ) ; monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment friendPrivateProfileFragment = new monsterquiz.app.com.monsterquiz.fragments.FriendPrivateProfileFragment () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putString ( "cat_id" , "0" ) ; bundle . putString ( "user_id" , personId ) ; friendPrivateProfileFragment . setArguments ( bundle ) ; ( ( monsterquiz.app.com.monsterquiz.HomeActivity ) ( context ) ) . replaceFragment ( friendPrivateProfileFragment ) ; } 
public static java.io.InputStream getFileInputSteam ( android.content.Context context , java.lang.String fileName , android.support.v4.provider.DocumentFile root , java.lang.String . . . subDirs ) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( root , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; if ( file == null ) return null ; return ml.puredark.hviewer.utils.DocumentUtil . getFileInputSteam ( context , file . getUri () ) ; } 
public static java.util.List < Dimension > getHorizontalDimensions ( Dimension dime ) { java.util.List < Dimension > boxDimes = new java.util.ArrayList < Dimension > () ; for ( int y = 0 ; y < 9 ; y ++ ) { if ( y != ( dime.y ) ) { Dimension dimeCurrent = new Dimension ( dime.x , y ) ; boxDimes . add ( dimeCurrent ) ; } } return boxDimes ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { java.lang.System.out . println ( "ClickHat" ) ; com.example.cookzyme.cookzyme.CanCookFragment canCook = new com.example.cookzyme.cookzyme.CanCookFragment () ; android.support.v4.app.FragmentTransaction transaction = getActivity () . getSupportFragmentManager () . beginTransaction () ; transaction . replace ( R.id.refrigerator , canCook ) ; transaction . addToBackStack ( null ) ; transaction . commit () ; } 
private int getUnitCount ( SCBot.UnitType type , SCBot.UnitType type2 ) { int count = 0 ; for ( SCBot.Unit u : this . self . getUnits () ) { if ( ( ( u . getType () ) == type ) && ( ( type2 == null ) || ( ( u . getBuildType () ) == type2 ) ) ) { count ++ ; } } return count ; } 
private void generateTraps ( int limit ) { int amountOfButtons = 10 ; int trapNumber = newRandomNumberBetween ( amountOfButtons ) ; java.lang.String logMessage = getResources () . getString ( R.string.log_trap_id ) ; int amountOfTraps = 3 ; for ( int i = 0 ; i < amountOfTraps ; i ++ ) { while ( traps . contains ( trapNumber ) ) { trapNumber = newRandomNumberBetween ( amountOfButtons ) ; } android.util.Log . i ( logMessage , java.lang.Integer . toString ( trapNumber ) ) ; traps . add ( trapNumber ) ; } } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue observable , java.lang.Object oldValue , java.lang.Object newValue ) { soundValue . textProperty () . setValue ( java.lang.String . valueOf ( ( ( int ) ( soundBar . getValue () ) ) ) ) ; MainLogic.instance . setVolume ( ( ( soundBar . getValue () ) / 100 ) ) ; MainLogic.instance . getMp () . setVolume ( ( ( soundBar . getValue () ) / 100 ) ) ; } 
public boolean addUser ( java.lang.String username , java.lang.String password ) throws java.sql.SQLException { java.sql.Statement stmt = conn . createStatement () ; boolean success = stmt . execute ( ( ( ( ( "insert into TTEDB.Users (UserName, UserPW) values ('" + username ) + "', '" ) + password ) + "')" ) ) ; stmt . close () ; conn . close () ; return success ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < dom.bom.com.tabatasdk.map_module.view.model.Track > call , retrofit2.Response < dom.bom.com.tabatasdk.map_module.view.model.Track > response ) { if ( ( view ) != null ) { if ( dom.bom.com.tabatasdk.rest.ResponseTaker . sendRequest ( response , context , view ) ) { view . setListOfParcel ( getParcelList ( response . body () . getReceiver () , response . body () . getSender () ) ) ; } else { view . onError ( R.string.server_problem ) ; } } } 
@ java.lang.Override public void initialize ( java.net.URL location , java.util.ResourceBundle resources ) { radioStartAppWithWin . setSelected ( SettingsConstants.START_APP_WITH_WINDOWS_7 ) ; radioStartAnalysisWithAppStart . setSelected ( SettingsConstants.START_ANALYSIS_WITH_APP_START_3 ) ; radioSaveReportsAuto . setSelected ( SettingsConstants.SAVE_REPORTS_AUTOMATICALLY_4 ) ; sliderSize . setValue ( SettingsConstants.SLIDER_SIZE_5 ) ; sliderNumber . setValue ( SettingsConstants.SLIDER_NUMBER_6 ) ; if ( myProject.model.SettingsConstants.START_APP_WITH_WINDOWS_7 ) { radioStartAppWithWin . setSelected ( true ) ; radioStartAppWithWin . setDisable ( true ) ; } updateSliderL () ; } 
public static org.terracotta.passthrough.PassthroughMessage createUnexpectedReleaseMessage ( final java.lang.String entityClassName , final java.lang.String entityName , final long clientInstanceID ) { boolean shouldReplicateToPassives = true ; return new org.terracotta.passthrough.PassthroughMessage ( org.terracotta.passthrough.PassthroughMessage.Type.UNEXPECTED_RELEASE , shouldReplicateToPassives ) { @ java.lang.Override protected void populateStream ( java.io.DataOutputStream output ) throws java.io.IOException { output . writeUTF ( entityClassName ) ; output . writeUTF ( entityName ) ; output . writeLong ( clientInstanceID ) ; } } ; } 
void enqueue ( org.sleuthkit.datamodel.FsContent fsContent , java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceFsContent > services ) { org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit < org.sleuthkit.datamodel.FsContent , org.sleuthkit.autopsy.ingest.IngestServiceFsContent > found = findFsContent ( fsContent ) ; if ( found != null ) { found . addAll ( services ) ; } else { found = new org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit < org.sleuthkit.datamodel.FsContent , org.sleuthkit.autopsy.ingest.IngestServiceFsContent > ( fsContent , services ) ; fsContentUnits . add ( found ) ; } } 
@ javax.ws.rs.GET public it.finsoft.entity.Evento create ( @ javax.ws.rs.QueryParam ( value = "entita" ) java.lang.String codiceEnt , @ javax.ws.rs.QueryParam ( value = "tipiEvento" ) java.lang.String codiceTipi , @ javax.ws.rs.QueryParam ( value = "tag" ) java.lang.String tag ) { it.finsoft.entity.Evento evento = new it.finsoft.entity.Evento () ; evento . setEntita ( entitam . findByCod ( codiceEnt ) ) ; evento . setTipoEvento ( tipoevm . findByCod ( codiceTipi ) ) ; evento . setTag ( tag ) ; return eventom . save ( evento ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { new com.xllllh.android.takeaway.OrderListRecyclerViewAdapter.ChangeOrderStateTask () . execute ( orderId , Order.STATE_PAYED_ACCEPT ) ; try { holder.mItem . remove ( "state" ) ; holder.mItem . put ( "state" , Order.STATE_PAYED_ACCEPT ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } holder.mStatus . setText ( "商家已接单" ) ; holder.mCancel . setVisibility ( View.GONE ) ; holder.mPay . setVisibility ( View.GONE ) ; holder.mConfirm . setVisibility ( View.VISIBLE ) ; } 
public void setMessage ( com.waz.api.Message message , com.waz.zclient.pages.main.conversation.views.row.separator.Separator separator ) { setUnreadDot ( separator ) ; setUserName ( message , separator ) ; setTimestamp ( separator ) ; setPadding ( message , separator ) ; showRecalledGlyph ( separator ) ; if ( message . isEdited () ) { messageEditedGlyph . setVisibility ( View.VISIBLE ) ; } else { messageEditedGlyph . setVisibility ( View.GONE ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/doedit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String editComplete ( org.springframework.ui.Model model , com.monstarlab.domain.form.EmployeeInfoInputForm employeeInfoForm , org.springframework.validation.BindingResult bindingResult , org.springframework.web.servlet.mvc.support.RedirectAttributes redirectAttributes ) { com.monstarlab.domain.model.Employee employee = employeeInfoForm . getEmployee () ; employee . setBirthdate ( convertToDate ( employeeInfoForm . getBirthdate () ) ) ; employeeService . update ( employeeInfoForm . getEmployee () ) ; return "redirect:/" ; } 
public static java.sql.Timestamp StringAndroidToTimestamp ( java.lang.String s ) { java.sql.Timestamp timestamp = null ; try { java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ; java.util.Date parsedDate = dateFormat . parse ( s ) ; timestamp = new java.sql.Timestamp ( parsedDate . getTime () ) ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Exception date = " , e . toString () ) ; } return timestamp ; } 
@ java.lang.Override public void changed ( com.couchbase.lite.LiveQuery.ChangeEvent event ) { if ( ( event . getError () ) != null ) { throw new java.lang.RuntimeException ( event . getError () ) ; } if ( ( event . getRows () . getCount () ) == 2 ) { countDownLatch . countDown () ; } } 
private com.graphhopper.routing.util.FlagEncoder getEncoder ( java.lang.String name , boolean throwExc ) { for ( com.graphhopper.routing.util.FlagEncoder encoder : edgeEncoders ) { if ( name . equalsIgnoreCase ( encoder . toString () ) ) return encoder ; } if ( throwExc ) throw new java.lang.IllegalArgumentException ( ( ( ( "Encoder for " + name ) + " not found. Existing: " ) + ( toDetailsString () ) ) ) ; return null ; } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.routes . dropTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.goals . dropTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.notes . dropTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.locations . dropTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.settings . dropTable () ) ; onCreate ( db ) ; } 
public boolean paste ( com.mauriciotogneri.fileexplorer.models.FileInfo target ) { boolean allPasted = true ; try { for ( com.mauriciotogneri.fileexplorer.models.FileInfo fileInfo : items ) { allPasted &= fileInfo . copy ( target , ( ( mode ) == ( com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.CUT ) ) ) ; } } catch ( java.lang.Exception e ) {} items . clear () ; mode = com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.NONE ; parent = null ; return allPasted ; } 
public void selectPatient ( java.lang.String Patient ) { org.openqa.selenium.WebElement lastElement = null ; for ( org.openqa.selenium.WebElement patient : patient_list ) { if ( ( patient . findElement ( org.openqa.selenium.By . cssSelector ( ".patient-id" ) ) . getText () . contains ( Patient ) ) || ( patient . findElement ( org.openqa.selenium.By . cssSelector ( ".patient-name" ) ) . getText () . contains ( Patient ) ) ) { lastElement = patient ; } } if ( lastElement != null ) lastElement . click () ; return; } 
public static java.lang.String setLetters ( java.lang.String fullName ) { java.lang.String [] names = fullName . split ( " " ) ; java.lang.String letters = "" ; for ( int i = 0 ; i < ( names.length ) ; i ++ ) { if ( i == 2 ) break; letters += names [ i ] . charAt ( 0 ) ; } return letters . toUpperCase () ; } 
public void addStudentWithId ( int id ) { for ( edu.virginia.bookmark.Team team : teams ) { if ( team . containsStudentWithId ( id ) ) { java.lang.System.out . println ( ( "Adding a Student From Team " + ( team . getName () ) ) ) ; if ( ( activeTurnTeamId ) < 0 ) { activeTurnTeamId = team.id ; } clearUpToDateStatus () ; return; } } } 
protected void onPostExecute ( java.lang.Integer result ) { android.widget.ProgressBar spinner = ( ( android.widget.ProgressBar ) ( findViewById ( R.id.progressBar ) ) ) ; spinner . setVisibility ( View.GONE ) ; android.widget.TextView button = ( ( android.widget.TextView ) ( findViewById ( R.id.labelBeaconFoundNotififaction ) ) ) ; button . setVisibility ( View.VISIBLE ) ; cart . clear () ; postNotification ( "Your meal will be prepared!" ) ; } 
private void handleSignInResult ( com.google.android.gms.auth.api.signin.GoogleSignInResult result ) { android.util.Log . d ( com.ishaan.todolist.Login.TAG , ( "handleSignInResult:" + ( result . isSuccess () ) ) ) ; if ( result . isSuccess () ) { com.google.android.gms.auth.api.signin.GoogleSignInAccount acct = result . getSignInAccount () ; android.util.Log . d ( com.ishaan.todolist.Login.TAG , acct . getEmail () ) ; updateUI ( true ) ; } else { updateUI ( false ) ; } } 
private boolean addToLocalActiveView ( java.net.InetAddress peer ) { if ( localDatacenterView . contains ( peer ) ) return false ; localDatacenterView . addLast ( peer ) ; if ( ( localDatacenterView . size () ) > ( endpointStateSubscriber . fanout ( datacenter , datacenter ) ) ) expungeNode ( localDatacenterView . removeFirst () , datacenter ) ; return true ; } 
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { int languageRepeatedInThisHour = 0 ; int languageRepeatedInTenMins ; if ( languageMap . containsKey ( languageName ) ) { languageRepeatedInThisHour = languageMap . get ( languageName ) ; } languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } 
private boolean containsLinkedResource ( java.util.List < org.eclipse.core.resources.IResource > resources ) { for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isLinked () ) { return true ; } } return false ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { kobeissidev.autobirthday.Settings . loadContacts ( getApplicationContext () , dbHandler ) ; android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , "Contacts are loaded!" , Toast.LENGTH_SHORT ) ; toast . show () ; setResult ( 0 ) ; finish () ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks . clear () ; if ( ( dataSnapshot . getValue () ) != null ) { for ( com.google.firebase.database.DataSnapshot taskSnapshot : dataSnapshot . getChildren () ) { edu.uw.dengz6.checkmate.TaskData task = taskSnapshot . getValue ( edu.uw.dengz6.checkmate.TaskData . class ) ; if ( ! ( task.isCompleted ) ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks . add ( task ) ; } } } adapter . notifyDataSetChanged () ; progressDialog . dismiss () ; } 
public boolean open ( int localport ) { try { socket = new java.net.Socket () ; socket . setSoLinger ( true , 0 ) ; socket . bind ( new java.net.InetSocketAddress ( localport ) ) ; } catch ( java.lang.Exception e ) { javaforce.voip.JFLog . log ( e ) ; return false ; } return true ; } 
public void onBellSound ( final java.lang.String playerId ) { cwa115.trongame.Map.Player remotePlayer = ( ( cwa115.trongame.Map.Player ) ( map . getItemById ( playerId ) ) ) ; remotePlayer . setCustomMarker ( R.mipmap.bell_marker ) ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { cwa115.trongame.Map.Player me = ( ( cwa115.trongame.Map.Player ) ( map . getItemById ( playerId ) ) ) ; me . resetMarker () ; } } , 3000 ) ; } 
public boolean editCommand ( java.lang.String modType , java.lang.String newValue , me.krickl.memebotj.User.UserHandler sender ) { if ( ( commandHandler ) == null ) {} boolean success = false ; success = commandHandler . editCommand ( modType , newValue , sender ) ; commandName = commandHandler . getCommandName () ; return success ; } 
@ java.lang.Override public boolean sendPaymentReminder ( int uid , int sid , boolean type , int cuid ) { com.udoo.dal.entities.Payment payment = paymentRepository . findTopByUidAndSidAndTypeAndStateOrderByPidDesc ( uid , sid , type , STATE_RESERVE ) ; return ( type ? ( offerRepository . findByOid ( sid ) . getUid () ) == cuid : ( requestRepository . findByRid ( sid ) . getUid () ) == cuid ) && ( this . savePayment ( payment , STATE_REMIND ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_results ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { db . execSQL ( com.example.mbodziony.datecounter.DatabaseManager.DB_DROP_DATECOUNTERS_TABLE ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , "Database updating..." ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , ( ( ( ( ( "Table " + ( com.example.mbodziony.datecounter.DatabaseManager.DB_DATECOUNTERS_TABLE ) ) + " updated from ver. " ) + oldVersion ) + " to ver. " ) + newVersion ) ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , "All data is lost!" ) ; onCreate ( db ) ; } 
@ java.lang.Override public void onAuthStateChanged ( @ android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { com.google.firebase.auth.FirebaseUser user = firebaseAuth . getCurrentUser () ; if ( user != null ) { if ( LOGGING ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration . setLogged ( true ) ; it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration . setUser ( user . getEmail () ) ; android.support.design.widget.Snackbar . make ( getView () , getResources () . getString ( R.string.logged_in ) , Snackbar.LENGTH_LONG ) . show () ; activity . checkLogged () ; LOGGING = false ; activity . onBackPressed () ; } else { activity . onBackPressed () ; } } } 
@ java.lang.Override public hudson.model.ParameterDefinition copyWithDefaultValue ( hudson.model.ParameterValue defaultValue ) { if ( defaultValue instanceof com.cloudbees.plugins.credentials.CredentialsParameterValue ) { com.cloudbees.plugins.credentials.CredentialsParameterValue value = ( ( com.cloudbees.plugins.credentials.CredentialsParameterValue ) ( defaultValue ) ) ; return new com.cloudbees.plugins.credentials.CredentialsParameterDefinition ( getName () , getDescription () , value . getValue () , getCredentialType () , isRequired () ) ; } return this ; } 
private void verifyVisibility ( @ javax.annotation.Nonnull final edu.umd.cs.findbugs.ba.XMethod invokedMethod ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { final edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; bugReporter . reportBug ( bug ) ; } } 
private void toggle ( boolean toggle ) { int color ; if ( toggle ) { color = mActiveColor ; } else { color = android.support.v4.content.res.ResourcesCompat . getColor ( getResources () , R.color.defaultNotActiveCircle , null ) ; } mDrawable . setStroke ( ( ( getMeasuredHeight () ) / 30 ) , color ) ; } 
@ java.lang.Override public void render ( float delta ) { batch . begin () ; gameOverSprite . draw ( batch ) ; batch . end () ; if ( Gdx.input . isKeyJustPressed ( Keys.SPACE ) ) { game . setScreen ( new com.running.game.screens.InstructionsScreen ( game ) ) ; } } 
@ java.lang.Override public jkind.lustre.Ast caseEnumTypeDef ( com.rockwellcollins.spear.translate.lustre.com.rockwellcollins.spear.EnumTypeDef etd ) { java.lang.String newName = mapping . get ( etd . getName () ) ; java.util.List < java.lang.String > values = new java.util.ArrayList <> () ; for ( com.rockwellcollins.spear.EnumValue ev : etd . getValues () ) { values . add ( mapping . get ( ev . getName () ) ) ; } return new jkind.lustre.TypeDef ( newName , new jkind.lustre.EnumType ( newName , values ) ) ; } 
public static final java.lang.String getLang ( omnikryptec.lang.Language language , java.lang.String key , java.lang.String defaultValue ) { if ( language == null ) { return defaultValue ; } if ( omnikryptec.lang.LanguageManager.isCollecting ) { omnikryptec.lang.LanguageManager.languageDefault . put ( key , defaultValue ) ; } return language . getProperty ( key , defaultValue ) ; } 
public void setSource ( @ android.support.annotation.NonNull java.io.InputStream inputStream ) { if ( ( is ) != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } is = inputStream ; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.bitstream = new javazoom.jl.decoder.Bitstream ( is ) ; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.decoder = new javazoom.jl.decoder.Decoder () ; init () ; } 
@ java.lang.Override public int compare ( org.openlmis.referencedata.dto.ProcessingPeriodDto o1 , org.openlmis.referencedata.dto.ProcessingPeriodDto o2 ) { if ( "startDate" . equals ( compareCondition ) ) { return o1 . getStartDate () . compareTo ( o2 . getStartDate () ) ; } else { throw new org.openlmis.referencedata.exception.ValidationMessageException ( new org.openlmis.referencedata.util.Message ( org.openlmis.referencedata.util.messagekeys.ProcessingPeriodMessageKeys.ERROR_INVALID_SORTING_COLUMN , compareCondition ) ) ; } } 
public int lngToCol ( double lon ) { if ( ( lon < ( westLng ) ) || ( lon > ( eastLng ) ) ) throw new java.lang.IllegalArgumentException ( "Longitude is out of map range" ) ; int colIndex = ( ( int ) ( ( lon - ( westLng ) ) / ( cellDegree ) ) ) ; if ( colIndex >= ( numberOfCols ) ) throw new java.lang.IndexOutOfBoundsException () ; return colIndex ; } 
public void setOverlay ( java.io.File overlay ) { if ( overlay != null ? ! ( overlay . equals ( this . overlay ) ) : ( this . overlay ) == null ) { java.io.File oldOverlay = this . overlay ; this . overlay = overlay ; dirty = true ; propertyChangeSupport . firePropertyChange ( "overlay" , oldOverlay , overlay ) ; } } 
@ java.lang.Override public void performancesChanged ( java.lang.String connId , int exchangesCompleted ) { long duration = ( java.lang.System . currentTimeMillis () ) - ( startTime ) ; final org.talend.core.model.process.IConnection conn = traceConnectionsManager . finConnectionByUniqueName ( connId ) ; final org.talend.core.model.runprocess.data.PerformanceData perfData = new org.talend.core.model.runprocess.data.PerformanceData ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) ) ; processPerformances ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) , perfData , conn ) ; startTime = java.lang.System . currentTimeMillis () ; } 
public boolean setMove ( final java.awt.Color color , final int number ) { for ( data.Karte k : spieler . get ( activePlayer ) . getKarten () ) { if ( ( k . getFarbe () . equals ( color ) ) && ( ( k . getNummer () ) == number ) ) { if ( move ( k , spielfeld ) ) { spieler . get ( activePlayer ) . remove ( k ) ; return true ; } } } return false ; } 
public void start ( int port ) { this . port = port ; if ( ! ( on ) ) { try { serverSocket = new java.net.DatagramSocket ( port ) ; byte [] receiveData = new byte [ 1024 ] ; java.lang.System.out . println ( ( "Starting on port " + port ) ) ; on = true ; run ( receiveData ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } } } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( readOnly = false ) public com.catalina.tokobat.entity.Transaction add ( com.catalina.tokobat.entity.Transaction transaction ) { try { em = org.springframework.orm.jpa.EntityManagerFactoryUtils . getTransactionalEntityManager ( getJpaTemplate () . getEntityManagerFactory () ) ; transaction = em . merge ( transaction ) ; em . flush () ; em . close () ; return transaction ; } catch ( java.lang.Exception e ) { return null ; } } 
@ java.lang.Override public me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder holder = PhotoPickUtils.holderGenerator . newGridViewHolder ( mContext ) ; if ( viewType == ( me.iwf.photopicker.adapter.PhotoGridAdapter.ITEM_TYPE_CAMERA ) ) { holder.vSelected . setVisibility ( View.GONE ) ; holder.ivPhoto . setScaleType ( ImageView.ScaleType.CENTER ) ; holder.ivPhoto . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( onCameraClickListener ) != null ) { onCameraClickListener . onClick ( view ) ; } } } ) ; } return holder ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setCaldroidListener ( new com.roomorama.caldroid.CaldroidListener () { @ java.lang.Override public void onSelectDate ( java.util.Date date , android.view.View view ) {} @ java.lang.Override public void onChangeMonth ( int month , int year ) { requireLoader ( org.totschnig.myexpenses.fragment.PlanMonthFragment.INSTANCES_CURSOR ) ; } @ java.lang.Override public void onGridCreated ( android.widget.GridView gridView ) { ( ( org.totschnig.myexpenses.fragment.TemplatesList ) ( getParentFragment () ) ) . registerForContextualActionBar ( gridView ) ; } } ) ; } 
public java.lang.Object handleLogIn ( java.lang.String username , java.lang.String password ) { loginfacade = new app.facades.LogInFacade () ; java.lang.Object answer ; try { answer = ( "Hi " + ( loginfacade . handleLogIn ( username , password ) . getUserID () ) ) + " !" ; } catch ( java.lang.Exception e ) { answer = e ; } return answer ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; java.util.TimerTask timerTask = new java.util.TimerTask () { @ java.lang.Override public void run () { finish () ; startActivity ( new android.content.Intent ( edu.orangecoastcollege.cs273.kfrederick5tmorrissey1ischenck.occstudentsuccesscenter.SplashActivity . this , edu.orangecoastcollege.cs273.kfrederick5tmorrissey1ischenck.occstudentsuccesscenter.MainActivity . class ) ) ; } } ; java.util.Timer timer = new java.util.Timer () ; timer . schedule ( timerTask , 1000 ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { comboText = ( ( java.lang.String ) ( Demo . getSelectedItem () ) ) ; DemoInt = Demo . getSelectedIndex () ; if ( ! ( Demo . getSelectedItem () . equals ( "No Selection" ) ) ) { filePath . setText ( ( ( java.lang.String ) ( Demo . getSelectedItem () ) ) ) ; addSelectedImg ( Demo . getSelectedIndex () ) ; } else filePath . setText ( "No Item Selected" ) ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; switch ( requestCode ) { case 10 : if ( ( resultCode == ( android.app.Activity.RESULT_OK ) ) && ( data != null ) ) { java.util.ArrayList < java.lang.String > result = data . getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; commandText . setText ( result . get ( 0 ) ) ; new mohz.m13.wicompanion.CommandFragment.SendText () . execute ( result . get ( 0 ) ) ; } break; } } 
public void updateStatus ( int trackToPlay , int status , int position ) { if ( ! ( trackBeans . isEmpty () ) ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } } 
@ java.lang.Override public void onBitmapFailed ( android.graphics.drawable.Drawable errorDrawable ) { if ( ( errorDrawable != null ) && ( com.layer.ui.util.Log . isLoggable ( com.layer.ui.util.Log.VERBOSE ) ) ) { com.layer.ui.util.Log . v ( ( "onBitMapFailed :" + errorDrawable ) ) ; } bitmapWrapper . setBitmap ( null ) ; callback . onFailure () ; mTargets . remove ( this ) ; } 
@ java.lang.Override public void produceText ( de.is2.ZZZZZnake.ZZZZZnake znake ) { if ( ( znake . getLoopCount () ) < 1 ) { startMessages ( znake ) ; } if ( ( znake . isVictory () ) == true ) { victory ( znake ) ; } if ( ( znake . isDead () ) == true ) { death ( znake ) ; } if ( ( ( znake . isRich () ) == true ) && ( ( znake . getLoopCountAfterGoldGet () ) <= 1 ) ) { goldGet ( znake ) ; } } 
public static java.math.BigDecimal tryBigDecimal ( java.lang.String preparedSql , java.lang.Object . . . supportedSQLArg ) { java.lang.Object object = ids.sardine.TransferUtil . getObject ( preparedSql , supportedSQLArg ) ; if ( object instanceof java.math.BigDecimal ) { return ( ( java.math.BigDecimal ) ( object ) ) ; } java.lang.String s = java.lang.String . valueOf ( object ) . trim () ; return _String_ . isNumeric ( s ) ? new java.math.BigDecimal ( s ) : null ; } 
@ java.lang.Override public void postQueue ( com.jme3.renderer.queue.RenderQueue renderQueue ) { DeferredRenderManager . renderOpaqueQueue ( gBuffer , renderManager , viewPort , renderQueue ) ; lightManager . render ( gBuffer , renderManager , viewPort ) ; postDeferredManager . render ( gBuffer , renderManager , viewPort , renderQueue ) ; postDeferredManager . renderSkyQueue ( renderManager , viewPort , renderQueue ) ; postDeferredManager . renderTranslucentQueue ( renderManager , viewPort , renderQueue ) ; postDeferredManager . renderDebug ( gBuffer , renderManager ) ; postDeferredManager . drawFrameOnScreen ( gBuffer , renderManager ) ; } 
private int computeNumElements ( int bufSize ) { if ( bufSize == 0 ) return 0 ; switch ( mode ) { case Triangles : return bufSize / 3 ; case TriangleFan : case TriangleStrip : return bufSize - 2 ; case Points : return bufSize ; case Lines : return bufSize / 2 ; case LineLoop : return bufSize ; case LineStrip : return bufSize - 1 ; case Patch : return bufSize / ( patchVertexCount ) ; default: throw new java.lang.UnsupportedOperationException () ; } } 
@ java.lang.SuppressWarnings ( value = { "unchecked" , "ConstantConditions" } ) public B setStart ( java.util.Date start ) { com.google.common.base.Preconditions . checkNotNull ( start , "start cannot be null" ) ; com.google.common.base.Preconditions . checkArgument ( ( ( startRelative ) == null ) , "Both relative and absolute start times cannot be set." ) ; this . startAbsolute = start . getTime () ; return ( ( B ) ( this ) ) ; } 
public java.util.List < org.sonar.api.measures.Measure > buildFuncionMeasuresList ( double complexMean , int complexityInFunctions , org.sonar.api.measures.RangeDistributionBuilder builder ) { java.util.List < org.sonar.api.measures.Measure > list = new java.util.ArrayList < org.sonar.api.measures.Measure > () ; list . add ( new org.sonar.api.measures.Measure ( org.sonar.api.measures.CoreMetrics.COMPLEXITY_IN_FUNCTIONS ) . setIntValue ( complexityInFunctions ) ) ; list . add ( builder . build () . setPersistenceMode ( PersistenceMode.MEMORY ) ) ; return list ; } 
public void clickRenameLibrary ( javafx.event.ActionEvent actionEvent ) { newLibraryTitle = textFieldForNewLibraryTitle . getText () ; if ( newLibraryTitle . equals ( oldLibraryTitle ) ) { com.devprosony.Main.stdOut . println ( "newLibraryTitle = oldLibraryTitle" ) ; } else { com.devprosony.Main.stdOut . println ( ( "newLibraryTitle: " + ( newLibraryTitle ) ) ) ; renameLibraryTitle ( oldLibraryTitle , newLibraryTitle ) ; dialogRenameLibraryStage . close () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.action_refresh_report_type : if ( org.cm.podd.report.util.RequestDataUtil . hasNetworkConnection ( this ) ) { progress . show () ; android.content.Intent intent = new android.content.Intent ( this , org.cm.podd.report.service.SyncReportTypeService . class ) ; startService ( intent ) ; return true ; } break; } return super . onOptionsItemSelected ( item ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( getArguments () . containsKey ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) { loadUser ( getArguments () . getString ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) ; android.app.Activity activity = this . getActivity () ; } else { loadUser ( getActivity () . getIntent () . getStringExtra ( com.yomiolatunji.andela.lagosjavadev.ui.UserDetailFragment.ARG_USERNAME ) ) ; } } 
public void executePhase ( at.borkowski.scovillej.simulation.SimulationContext context ) throws java.io.IOException { if ( ! ( initialized ) ) initialize ( context ) ; if ( ( serverSocket . available () ) > 0 ) owner . registerClientProcessor ( new at.borkowski.scovillej.prefetch.members.server.ClientProcessor ( owner , serverSocket . accept () ) ) ; } 
@ java.lang.Override public void onResponse ( java.lang.String jsonString ) { try { com.example.ssteeve.dpd_android.DPDUser . login ( endPoint , username , password , mappableObject , callBack ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; callBack . onFailure ( null , null , e ) ; } } 
protected final void provision ( android.support.v4.app.Fragment fragment , java.lang.String json ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; } 
public static org.opencv.core.Mat tresholdContrastBlackWhite ( org.opencv.core.Mat image2 , double d ) { final org.opencv.core.Mat imageHSV = new org.opencv.core.Mat () ; org.opencv.imgproc.Imgproc . cvtColor ( image2 , imageHSV , Imgproc.COLOR_BGR2HSV ) ; final org.opencv.core.Mat imageThresholded = new org.opencv.core.Mat () ; org.opencv.core.Core . inRange ( imageHSV , new org.opencv.core.Scalar ( 160 , 70 , 169 ) , new org.opencv.core.Scalar ( 179 , 90 , 179 ) , imageThresholded ) ; final org.opencv.core.Mat result = new org.opencv.core.Mat () ; imageThresholded . convertTo ( result , CvType.CV_8UC3 ) ; return result ; } 
public void enqueue ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException ( "the item to enqueue is null" ) ; } if ( ( N ) == ( q.length ) ) { resize ( ( 2 * ( q.length ) ) ) ; } q [ ( ( N ) ++ ) ] = item ; } 
public static javax.swing.JMenuItem createJMenuItem ( java.lang.String name , java.lang.String description , javax.swing.KeyStroke keyStroke ) { javax.swing.JMenuItem comp = new javax.swing.JMenuItem ( name ) ; if ( keyStroke != null ) comp . setAccelerator ( keyStroke ) ; if ( description != null ) comp . setToolTipText ( description ) ; comp . setFont ( new java.awt.Font ( java.awt.Font.SANS_SERIF , java.awt.Font.BOLD , 14 ) ) ; com.tri.pgs.client.surface.ui.UISystem . init ( comp , false , false ) ; return comp ; } 
@ java.lang.Override public void onBindViewHolder ( com.closestudios.bro.util.BroViewAdapter.ViewHolder holder , int position ) { holder.flBackdrop . setBackgroundColor ( holder.flBackdrop . getContext () . getResources () . getColor ( colors [ ( position + ( ( colorOffset ) % ( colors.length ) ) ) ] ) ) ; holder.tvHeader . setText ( mDataset [ position ] . getHeader () ) ; holder.tvDetails . setText ( mDataset [ position ] . getDetails ( holder.tvDetails . getContext () ) ) ; } 
public drgn.data.routes.mathematics.Line getParallelLine ( drgn.data.routes.model.Point point ) { return new drgn.data.routes.mathematics.Line ( _a , _b , ( - ( ( ( _a ) * ( point . getLongitude () ) ) + ( ( _b ) * ( point . getLatitude () ) ) ) ) , point ) ; } 
public void createLand ( java.lang.String owner , int [] start , int [] end , int size , java.lang.String world ) { sql . createLand ( owner , start [ 0 ] , start [ 1 ] , end [ 0 ] , end [ 1 ] , size , world ) ; } 
public void enterChatRoom ( java.lang.String roomName ) throws java.io.IOException { this . requestToServer . writeObject ( new Message ( MessageType.EnterTopic , null , null , roomName ) ) ; this . requestToServer . flush () ; if ( ( this . enteredRoom . contains ( roomName ) ) == false ) this . enteredRoom . add ( roomName ) ; } 
@ java.lang.Override public void onSetStreamVolume ( float volume ) { mLog . d ( ( ( "[onSetStreamVolume][volume: " + volume ) + "]" ) ) ; if ( volume == 0.0F ) { try { if ( ( mDtvManager ) != null ) { mDtvManager . setMute () ; } } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } } else { if ( ( mDtvManager ) != null ) { mDtvManager . setVolume ( ( volume * 100 ) ) ; } } } 
private boolean isRowEmpty ( int startingPosition ) { int i = startingPosition ; while ( i >= 0 ) { if ( ( i % ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) == 0 ) break; i -- ; } int start = i ; for ( ; i < ( start + ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) ; i ++ ) { if ( ( courses [ i ] ) != null ) { return false ; } } return true ; } 
public static void delAll ( java.util.Collection < ? extends com.caberodev.squarearmy.worldobjects.WorldObject > c ) { for ( com.caberodev.squarearmy.worldobjects.WorldObject o : c ) { for ( java.lang.String key : com.caberodev.squarearmy.util.ListLinker.links . get ( o ) ) { java.util.ArrayList < com.caberodev.squarearmy.worldobjects.WorldObject > list = com.caberodev.squarearmy.util.ListLinker.linker . get ( key ) ; list . remove ( o ) ; } } } 
protected com.fasterxml.jackson.databind.JsonSerializer < java.lang.Object > _findExplicitUntypedSerializer ( java.lang.Class < ? > runtimeType ) throws com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonSerializer < java.lang.Object > ser = _knownSerializers . untypedValueSerializer ( runtimeType ) ; if ( ser == null ) { ser = _serializerCache . untypedValueSerializer ( runtimeType ) ; if ( ser == null ) { ser = _createAndCacheUntypedSerializer ( runtimeType ) ; } } if ( isUnknownTypeSerializer ( ser ) ) { return null ; } return ser ; } 
public void shutdown () { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; sendSystem = null ; } if ( ( receiveThread ) != null ) { receiveThread . interrupt () ; receiveThread = null ; } if ( ( combinedAudioExecutor ) != null ) { combinedAudioExecutor . shutdownNow () ; combinedAudioExecutor = null ; } } 
public boolean checkAnyMarker ( antgameproject.Pos markerPos , antgameproject.Colour markerCol ) { for ( antgameproject.Colour col : antgameproject.Colour . values () ) { if ( markerCol == col ) { return ( board [ markerPos . getPosY () ] [ markerPos . getPosX () ] . getMarker ( col ) ) != null ; } } return false ; } 
public java.lang.Object intercept ( cn.dreampie.route.core.RouteInvocation ri ) { cn.dreampie.common.http.HttpRequest request = ri . getRouteMatch () . getRequest () ; cn.dreampie.common.http.HttpResponse response = ri . getRouteMatch () . getResponse () ; cn.dreampie.route.interceptor.security.Session oldSession = sessionBuilder . in ( request ) ; cn.dreampie.route.interceptor.security.Subject . check ( request . getHttpMethod () , request . getRestPath () ) ; java.lang.Object result = ri . invoke () ; sessionBuilder . out ( oldSession , response ) ; sessionBuilder . buildSessionMetadata ( request , oldSession ) ; return result ; } 
private static void createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; } 
private static org.bonitasoft.studio.model.process.Data resolveData ( final org.bonitasoft.studio.model.process.Data referencedData ) { return com.google.common.collect.Iterables . find ( org.bonitasoft.studio.common.emf.tools.ModelHelper . getAccessibleData ( org.bonitasoft.studio.common.emf.tools.ModelHelper . getParentProcess ( referencedData ) ) , new com.google.common.base.Predicate < org.bonitasoft.studio.model.process.Data > () { @ java.lang.Override public boolean apply ( final org.bonitasoft.studio.model.process.Data data ) { return data . getName () . equals ( referencedData . getName () ) ; } } , null ) ; } 
public void checkAllowsDeployment ( org.carlspring.strongbox.storage.repository.Repository repository ) throws org.carlspring.strongbox.storage.ArtifactStorageException { if ( ( ( ! ( repository . allowsDeployment () ) ) || ( RepositoryTypeEnum.GROUP . getType () . equals ( repository . getType () ) ) ) || ( RepositoryTypeEnum.PROXY . getType () . equals ( repository . getType () ) ) ) { throw new org.carlspring.strongbox.storage.ArtifactStorageException ( ( ( "Deployment of artifacts to " + ( repository . getType () ) ) + " repositories is not allowed!" ) ) ; } } 
private void refreshMonthView ( int position ) { com.othershe.calendarview.MonthView monthView = calendarPagerAdapter . getViews () . get ( position ) ; if ( ( itemChooseListener ) != null ) { if ( ( chooseDate . get ( position ) ) != null ) monthView . multiChooseRefresh ( chooseDate . get ( position ) ) ; } else { monthView . refresh ( lastClickedDay ) ; } } 
public java.util.List < com.ibm.prolaeoc.model.Badge > listReception ( java.lang.String handbag ) { handbag = handbag . toUpperCase () ; javax.persistence.EntityManager em = new com.ibm.prolaeoc.DAO.JPAUtil () . getEntityManager () ; javax.persistence.TypedQuery < com.ibm.prolaeoc.model.Badge > query = em . createQuery ( "from Badge where handbag=:phandbag and status=:pstatus " , com.ibm.prolaeoc.model.Badge . class ) ; query . setParameter ( "phandbag" , handbag ) ; query . setParameter ( "pstatus" , "SentToReception" ) ; return query . getResultList () ; } 
private int findComponentStart ( int findFrom , com.epam.java.rt.lab.parser.service.Type type ) { java.util.regex.Matcher matcher = ruler . getTypeRulePatternStart ( type ) . matcher ( this . source ) ; if ( ! ( matcher . find ( findFrom ) ) ) return - 1 ; return matcher . start () ; } 
public static synchronized org.apache.sqoop.submission.spark.YarnSqoopSparkClient getInstance ( java.util.Map < java.lang.String , java.lang.String > conf ) { if ( ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client ) == null ) { java.lang.System . setProperty ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.YARN_MODE , "true" ) ; org.apache.spark.SparkConf sparkConf = org.apache.sqoop.submission.spark.SqoopSparkClientFactory . generateSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.yarnConfig = org.apache.sqoop.submission.spark.YarnSqoopSparkClient . generateYarnSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client = new org.apache.sqoop.submission.spark.YarnSqoopSparkClient ( sparkConf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.clientArgs = new org.apache.spark.deploy.yarn.ClientArguments ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.args , sparkConf ) ; } return org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client ; } 
private void addPlayer ( int id , int x , int y ) { boolean flag = true ; for ( player.Player foo : players ) { if ( ( foo . getID () ) == id ) { flag = false ; foo . set ( x , y ) ; break; } } if ( flag ) { players . add ( new player.Player ( id ) ) ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; outState . putLong ( org.tasks.ui.GoogleTaskListFragment.EXTRA_TASK_ID , taskId ) ; if ( ( originalList ) != null ) { outState . putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_ORIGINAL_LIST , originalList . getStoreObject () ) ; } if ( ( selectedList ) != null ) { outState . putParcelable ( org.tasks.ui.GoogleTaskListFragment.EXTRA_SELECTED_LIST , selectedList . getStoreObject () ) ; } } 
@ java.lang.Override protected void map ( org.apache.hadoop.io.LongWritable key , org.mrgeo.geometry.Geometry value , org.mrgeo.data.geowave.vector.Context context ) throws java.io.IOException , java.lang.InterruptedException { context . write ( new org.apache.hadoop.io.Text ( ( "" + ( key . get () ) ) ) , new org.apache.hadoop.io.Text ( value . toString () ) ) ; } 
private void handleHit ( java.lang.Package p ) { int damage = ( ( java.lang.Integer ) ( p . getPayload () ) ) ; int id = java.lang.Integer . parseInt ( p . getExtra () ) ; java.lang.System.out . println ( ( ( id + "hit " ) + ( java.lang.Math . random () ) ) ) ; for ( Actors.Actor a : actorQueue ) { if ( ( a . getID () ) == id ) { a . hit ( damage ) ; } } } 
public long getRowCount ( org.apache.hadoop.mapreduce.JobContext job ) throws java.io.IOException , org.carbondata.core.carbon.datastore.exception.IndexBuilderException { long rowCount = 0 ; org.carbondata.core.carbon.AbsoluteTableIdentifier absoluteTableIdentifier = new org.carbondata.core.carbon.AbsoluteTableIdentifier ( getStorePathString ( job ) , org.carbondata.hadoop.CarbonInputFormat . getTableToAccess ( job ) ) ; for ( java.lang.String segmentNo : getValidSegments ( job ) ) { java.util.Map < java.lang.String , org.carbondata.core.carbon.datastore.block.AbstractIndex > segmentIndexMap = getSegmentAbstractIndexs ( job , absoluteTableIdentifier , segmentNo ) ; for ( org.carbondata.core.carbon.datastore.block.AbstractIndex abstractIndex : segmentIndexMap . values () ) { rowCount += abstractIndex . getTotalNumberOfRows () ; } } return rowCount ; } 
public void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; switch ( boydjohnson.SnakeGame . getGameStage () ) { case 1 : { displayInstructions ( g ) ; break; } case 2 : { displayGame ( g ) ; break; } case 3 : { displayGameOver ( g ) ; break; } default: { displayGameWon ( g ) ; break; } } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/mareanoPolar_en" ) public org.springframework.web.servlet.ModelAndView getMareanoPolarEn ( javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { if ( ( ( mavPolarEn ) == null ) || ( ( ( java.lang.System . currentTimeMillis () ) - ( mavLastUpdatedPolarEn ) ) > ( no.imr.geoexplorer.admindatabase.controller.MareanoController.ONEHOUR ) ) ) { mavPolarEn = commonGetMareano ( resp , no.imr.geoexplorer.admindatabase.controller.MareanoController.EN , "mareanoPolar_en" ) ; mavLastUpdatedPolarEn = new java.util.Date () . getTime () ; } polarConfig ( mavPolarEn ) ; return mavPolarEn ; } 
public void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } 
private void onClear () { if ( android.text.TextUtils . isEmpty ( mBuffer ) ) { for ( com.doomonafireball.repmaxcalculator.widget.RepMaxView repMaxView : mRepMaxViews ) { repMaxView . clearWeight () ; } return; } reveal ( mDeleteButton , R.color.blue_700 , new android.animation.AnimatorListenerAdapter () { @ java.lang.Override public void onAnimationEnd ( android.animation.Animator animation ) { mBuffer = "" ; for ( com.doomonafireball.repmaxcalculator.widget.RepMaxView repMaxView : mRepMaxViews ) { repMaxView . clearWeight () ; } } } ) ; } 
private java.util.ArrayList < java.lang.Boolean > multiplication ( java.util.ArrayList < java.lang.Boolean > multiplicand , java.util.ArrayList < java.lang.Boolean > multiplier ) { java.util.ArrayList < java.lang.Boolean > result = new java.util.ArrayList < java.lang.Boolean > () ; result . add ( false ) ; for ( int i = 0 ; i != ( multiplier . size () ) ; i ++ ) { if ( ( multiplier . get ( i ) ) == true ) { result = addition ( result , multiplicand , i ) ; } } return result ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () . initLoader ( 0 , null , this ) ; if ( savedInstanceState == null ) { refresh () ; } } 
@ java.lang.Override public void onResponse ( java.lang.String response ) { super . onResponse ( response ) ; if ( android.text.TextUtils . isEmpty ( response ) ) return; com.bai.chesscard.bean.BaseBean baseBean = new com.google.gson.Gson () . fromJson ( response , com.bai.chesscard.bean.BaseBean . class ) ; if ( ( baseBean.id ) == 1 ) { gamePresenterNew . resetUserInfo ( ConstentNew.USERPOS ) ; resetUserStatue () ; } else com.bai.chesscard.utils.Tools . toastMsgCenter ( context , baseBean.msg ) ; } 
public void syncWithModelRepository ( float deltaTime ) { executeCommands ( commands , deltaTime ) ; commands . clear () ; com.bigcustard.blurp.core.BlurpStore . syncSingletons () ; runtimeImageSprites . syncAll ( BlurpStore.modelRepository . getImageSprites () ) ; runtimeAnimationSprites . syncAll ( BlurpStore.modelRepository . getAnimationSprites () ) ; runtimeTextSprites . syncAll ( BlurpStore.modelRepository . getTextSprites () ) ; for ( com.bigcustard.blurp.core.Sprite modelSprite : BlurpStore.modelRepository . pullCreatedSprites () ) { BlurpStore.blurpScreen . addActor ( getSprite ( modelSprite ) ) ; } executeCommands ( deferredCommands , deltaTime ) ; deferredCommands . clear () ; } 
public void activityStart ( final com.remswork.classmanager.model.clazz.Clazz clazz , final int typeRequest ) { android.content.Intent intent = new android.content.Intent ( this , com.remswork.classmanager.ClazzActivity . class ) ; if ( clazz != null ) { intent . putExtra ( "subject" , clazz . getSubject () ) ; intent . putExtra ( "section" , clazz . getSection () ) ; intent . putParcelableArrayListExtra ( "scheduleList" , ( ( java.util.ArrayList < ? extends android.os.Parcelable > ) ( clazz . getListOfSchedule () ) ) ) ; } intent . putExtra ( "typeRequest" , typeRequest ) ; startActivity ( intent ) ; } 
@ java.lang.Override public void onSuccess ( com.andela.helpmebuy.models.User user ) { android.support.design.widget.Snackbar . make ( parentLayout , "Password changed successfully" , Snackbar.LENGTH_LONG ) . show () ; android.os.Bundle bundle = getIntent () . getBundleExtra ( Launcher.TRANSPORT ) ; if ( bundle != null ) { if ( bundle . getBoolean ( ConfirmPasswordFragment.CONFIRM_PASSWORD ) ) { com.andela.helpmebuy.utilities.Launcher . launchActivity ( context , com.andela.helpmebuy.activities.UserSettingsActivity . class ) ; } } else { com.andela.helpmebuy.utilities.Launcher . launchActivity ( context , com.andela.helpmebuy.activities.HomeActivity . class ) ; } finish () ; } 
public double getTravelTimeAfter ( final double time ) { final int bs = departures . binarySearch ( time ) ; final int index = ( bs < 0 ) ? ( - bs ) - 1 : bs ; final double tt = ( arrivals . get ( index ) ) - ( departures . get ( index ) ) ; assert tt >= 0 ; return tt ; } 
@ java.lang.Override public java.lang.String sendSMS ( java.lang.String CorpNum , java.lang.String sender , java.lang.String senderName , java.lang.String content , com.popbill.api.message.Message [] Messages , java.util.Date reserveDT , java.lang.Boolean adsYN , java.lang.String UserID ) throws com.popbill.api.PopbillException { return sendMessage ( MessageType.SMS , CorpNum , sender , senderName , null , content , Messages , reserveDT , adsYN , UserID ) ; } 
protected java.lang.String determineTargetUrl ( org.springframework.security.core.Authentication authentication ) { java.lang.String url = "" ; java.util.Collection < ? extends org.springframework.security.core.GrantedAuthority > authorities = authentication . getAuthorities () ; java.util.List < java.lang.String > roles = new java.util.ArrayList < java.lang.String > () ; for ( org.springframework.security.core.GrantedAuthority a : authorities ) { roles . add ( a . getAuthority () ) ; } if ( roles . contains ( "ROLE_ADMIN" ) ) { url = "/" ; } else { url = "/" ; } return url ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/myGroups" ) public java.util.Set < com.luxoft.wheretogo.models.json.GroupResponse > myGroups ( javax.servlet.http.HttpServletRequest request ) { com.luxoft.wheretogo.controller.User user = ( ( com.luxoft.wheretogo.controller.User ) ( request . getSession () . getAttribute ( "user" ) ) ) ; if ( user == null ) { return new java.util.HashSet <> () ; } user = usersService . initGroups ( user ) ; return groupsService . getUserRelevantGroupResponses ( user ) ; } 
@ java.lang.Override public void invalidateDrawable ( android.graphics.drawable.Drawable drawable ) { if ( mContainsImages ) { android.text.Spanned text = getText () ; com.facebook.react.views.text.TextInlineImageSpan [] spans = text . getSpans ( 0 , text . length () , com.facebook.react.views.text.TextInlineImageSpan . class ) ; for ( com.facebook.react.views.text.TextInlineImageSpan span : spans ) { if ( ( span . getDrawable () ) == drawable ) { invalidate () ; } } } super . invalidateDrawable ( drawable ) ; } 
private void addRightsIfNotSameConcern ( java.util.Collection < org.xwiki.contrib.nestedpagesmigrator.Right > rightsToAdd , java.util.Collection < org.xwiki.contrib.nestedpagesmigrator.Right > currentRights ) { java.util.Iterator < org.xwiki.contrib.nestedpagesmigrator.Right > it = rightsToAdd . iterator () ; while ( it . hasNext () ) { org.xwiki.contrib.nestedpagesmigrator.Right localRight = it . next () ; for ( org.xwiki.contrib.nestedpagesmigrator.Right currentRight : currentRights ) { if ( localRight . hasSameConcern ( currentRight ) ) { it . remove () ; break; } } } currentRights . addAll ( rightsToAdd ) ; } 
public void setModel ( org.jtrfp.trcl.gpu.Model m ) { final org.jtrfp.trcl.core.TRFuture < org.jtrfp.trcl.gpu.Model > thisModelFuture = this . model ; if ( m == null ) { if ( thisModelFuture != null ) releaseCurrentModel () ; return; } if ( thisModelFuture != null ) releaseCurrentModel () ; try { this . model = m . finalizeModel () ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { view = inflater . inflate ( R.layout.fragment_view_team_info , container , false ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamNumber = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_number ) ) ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamName = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_name ) ) ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamLocation = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_location ) ) ) ; com.team2944.luke.scouting.Fragments.ViewTeamInfoFragment.teamNotes = ( ( android.widget.TextView ) ( view . findViewById ( R.id.view_team_notes ) ) ) ; return view ; } 
public java.lang.Boolean subscribeDoorOpensNextTime ( de.fau.cs.mad.fablab.rest.core.PushToken token ) { org.hibernate.Query query = super . currentSession () . createQuery ( "FROM PushToken WHERE token = :token AND triggerPushType = :trigger" ) ; query . setParameter ( "token" , token . getToken () ) ; query . setParameter ( "trigger" , token . getTriggerPushType () ) ; if ( ( query . list () . size () ) == 0 ) { token . setTriggerPushType ( TriggerPushType.DOOR_OPENS_NEXT_TIME ) ; persist ( token ) ; } return true ; } 
private static com.google.gson.JsonElement getFile ( java.lang.String fileName ) { java.io.File file = new java.io.File ( factionmod.FactionMod . getConfigDir () , fileName ) ; if ( file . exists () ) { try { return new com.google.gson.JsonParser () . parse ( new java.io.FileReader ( file ) ) ; } catch ( java.lang.Exception e ) { factionmod.FactionMod . getLogger () . error ( ( "Error on loading file " + fileName ) ) ; e . printStackTrace () ; } } return null ; } 
private void fillLocalToolBar ( org.eclipse.jface.action.IToolBarManager manager ) { manager . add ( boldTextAction ) ; manager . add ( italicTextAction ) ; manager . add ( underlineTextAction ) ; manager . add ( clearTextAction ) ; manager . add ( new org.eclipse.jface.action.Separator () ) ; manager . add ( addNewNoteAction ) ; manager . add ( clearNoteAction ) ; } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional ( readOnly = true ) public com.hypersocket.vfs.VirtualFile getVirtualFileByResource ( java.lang.String virtualPath , com.hypersocket.realm.Realm realm , com.hypersocket.realm.Principal principal , com.hypersocket.fs.FileResource . . . resources ) { if ( ( resources.length ) == 0 ) { return null ; } return get ( com.hypersocket.vfs.VirtualFile . class , new com.hypersocket.vfs.VirtualPathCriteria ( virtualPath ) , new com.hypersocket.resource.RealmCriteria ( realm ) , new com.hypersocket.vfs.FileResourceCriteria ( resources ) , new com.hypersocket.vfs.PrincipalCriteria ( principal ) , new com.hypersocket.vfs.ConflictCriteria () ) ; } 
public void deleteCardList ( com.ske.minitrello.models.CardList cardList ) { dbHandler . deleteCardList ( cardList . getName () ) ; while ( ! ( cardList . getCards () . isEmpty () ) ) { deleteCard ( cardList . getCards () . get ( 0 ) ) ; } cardLists . remove ( cardList ) ; cardListMap . remove ( cardList ) ; } 
public void addColorTo ( metro.TrainManagement.Nodes.RailwayNode node , java.awt.Color color ) { if ( ! ( _mapOfColors . containsKey ( node ) ) ) _mapOfColors . put ( node , new java.util.ArrayList < java.awt.Color > () ) ; if ( ! ( _mapOfColors . get ( node ) . contains ( color ) ) ) _mapOfColors . get ( node ) . add ( color ) ; } 
public void onClick ( android.view.View v ) { time = new java.lang.String [ 0 ] ; temp = new java.lang.String [ 0 ] ; bSave . setVisibility ( View.INVISIBLE ) ; mode = MODE_RECEIVE_CONFIG ; Protocol.mode = Protocol.ESP8266_CONFIG ; com.example.mydhcp.settingsActivity._BC_ACTION = new byte [ 2 ] ; com.example.mydhcp.settingsActivity._BC_ACTION [ 0 ] = Protocol.READ_DAY_CONFIGS ; com.example.mydhcp.settingsActivity._BC_ACTION [ 1 ] = ( ( byte ) ( 1 ) ) ; pb . setVisibility ( View.VISIBLE ) ; sDayType = "Рабочий день" ; wifiRequestData ( MainDHCPActivity.curIPbytes ) ; } 
public int getInt ( int min , int max ) { java.lang.System.out . println ( "Enter a number: " ) ; int userInput = scanner . nextInt () ; scanner . nextLine () ; if ( ( userInput < min ) || ( userInput > max ) ) { java.lang.System.out . println ( "Invalid input" ) ; userInput = getInt ( min , max ) ; } return userInput ; } 
public void onBrowserEvent ( org.ovirt.engine.ui.common.widget.table.cell.Context context , com.google.gwt.dom.client.Element parent , C value , java.lang.String tooltipContent , com.google.gwt.dom.client.NativeEvent event , com.google.gwt.cell.client.ValueUpdater < C > valueUpdater ) { java.lang.String tooltip ; if ( tooltipContent == null ) { tooltip = getTooltip ( value ) ; } else { tooltip = tooltipContent ; } if ( BrowserEvents.MOUSEOVER . equals ( event . getType () ) ) { org.ovirt.engine.ui.common.widget.tooltip.ElementTooltipUtils . setTooltipOnElement ( tooltip , parent ) ; } else { super . onBrowserEvent ( context , parent , value , event , valueUpdater ) ; } } 
@ android.support.annotation.Nullable public static java.util.HashMap < java.lang.String , java.lang.String > getAttributes ( android.media.ExifInterface exif ) { try { java.lang.reflect.Field f = android.media.ExifInterface . class . getDeclaredField ( "mAttributes" ) ; f . setAccessible ( true ) ; java.util.HashMap < java.lang.String , java.lang.String > exifAttributes = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( f . get ( exif ) ) ) ; if ( ( exifAttributes != null ) && ( ( exifAttributes . size () ) > 0 ) ) return exifAttributes ; } catch ( java.lang.Exception ex ) {} return null ; } 
private java.util.List < edu.cmu.tetrad.search.IntSextad > sextadList ( edu.cmu.tetrad.search.IntSextad . . . t ) { java.util.List < edu.cmu.tetrad.search.IntSextad > list = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( t.length ) ; i ++ ) { list . add ( t [ i ] ) ; } return list ; } 
@ java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > inviteToChannel ( com.ullink.slack.simpleslackapi.SlackChannel channel , com.ullink.slack.simpleslackapi.SlackUser user ) { com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > ( getNextMessageId () ) ; java.util.Map < java.lang.String , java.lang.String > arguments = new java.util.HashMap <> () ; arguments . put ( "token" , authToken ) ; arguments . put ( "channel" , channel . getId () ) ; arguments . put ( "user" , user . getId () ) ; postSlackCommand ( arguments , com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_INVITE_COMMAND , handle ) ; return handle ; } 
@ java.lang.Override public void onCraftMatrixChanged ( com.alxnns1.mobhunter.container.IInventory inventoryIn ) { reloadRecipes () ; java.lang.String log = "Recipes:\n" ; for ( int i = 0 ; i < ( recipes . size () ) ; i ++ ) { if ( recipesValid . get ( i ) ) log += "Y - " ; else log += "N - " ; log += recipes . get ( i ) . toString () ; } detectAndSendChanges () ; } 
public java.lang.String toVCFAnnoString ( java.lang.String alt , boolean escape ) { de.charite.compbio.jannovar.annotation.VCFAnnotationData data = new de.charite.compbio.jannovar.annotation.VCFAnnotationData () ; data.effects = effects ; data.impact = getPutativeImpact () ; data . setTranscriptAndChange ( transcript , change ) ; data . setAnnoLoc ( annoLoc ) ; data.isCoding = ( ( transcript ) == null ) ? false : transcript . isCoding () ; data.cdsNTChange = cdsNTChange ; data.proteinChange = proteinChange ; data.messages = messages ; if ( escape ) return data . toString ( alt ) ; else return data . toUnescapedString ( alt ) ; } 
private void setStatusBarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } 
public won.protocol.model.MatchingBehaviorType getMatchingBehaviorTypeForMatchedNeed ( org.apache.solr.common.SolrDocument doc ) { won.protocol.model.MatchingBehaviorType matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL ; java.lang.Object matchingBehaviorFieldValue = doc . getFieldValue ( won.matcher.solr.hints.HintBuilder.MATCHING_BEHAVIOR_SOLR_FIELD ) ; if ( matchingBehaviorFieldValue != null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType . fromURI ( matchingBehaviorFieldValue . toString () ) ; if ( matchedNeedMatchingBehavior == null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL ; } } return matchedNeedMatchingBehavior ; } 
@ by.itechart.flowerty.web.controller.ResponseBody @ by.itechart.flowerty.web.controller.RequestMapping ( value = "user/list/{page}" ) public org.springframework.data.domain.Page < by.itechart.flowerty.model.User > getPage ( @ by.itechart.flowerty.web.controller.PathVariable ( value = "page" ) java.lang.Integer page ) throws java.lang.Exception { by.itechart.flowerty.web.controller.UserController.LOGGER . info ( "get page with number {}" , page ) ; page = ( ( page == null ) || ( page < 1 ) ) ? 0 : -- page ; org.springframework.data.domain.Page < by.itechart.flowerty.model.User > pageUsers = userService . getPage ( page , 1 ) ; by.itechart.flowerty.web.controller.UserController.LOGGER . info ( "fetch {} users" , pageUsers . getTotalElements () ) ; return pageUsers ; } 
public void write ( java.lang.String out ) throws java.io.IOException { java.lang.String [] tmp = out . split ( "\\." ) ; java.lang.String format = tmp [ ( ( tmp.length ) - 1 ) ] ; javax.imageio.ImageIO . write ( image , format , new java.io.File ( out ) ) ; } 
private void decodeFrames ( io.netty.buffer.ByteBuf in , java.util.List < java.lang.Object > out ) throws java.lang.Exception { if ( ( in . readableBytes () ) >= ( com.mpush.api.protocol.Packet.HEADER_LEN ) ) { in . markReaderIndex () ; com.mpush.api.protocol.Packet packet = decodeFrame ( in ) ; if ( packet != null ) { out . add ( packet ) ; } else { in . resetReaderIndex () ; } } } 
public void addCell ( org.apache.cassandra.config.ColumnDefinition column , java.nio.ByteBuffer value , org.apache.cassandra.db.rows.LivenessInfo info ) { int idx = columns . simpleIdx ( column ) ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + ( column.name ) ) + " in " ) + ( columns ) ) ) ; idx += base ; data . setCell ( idx , value , info ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String showCityResources ( @ org.springframework.web.bind.annotation.RequestParam java.util.Map < java.lang.String , java.lang.String > allRequestParams , org.springframework.ui.Model model ) { org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER . info ( ( "Requested params:" + allRequestParams ) ) ; commonCityService . buildQueuedBuildings ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; org.exschool.pocketworld.city.resources.dto.CityResourcesDto cityResourcesDto = cityResourcesService . cityResourcesInfo ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; model . addAttribute ( "dto" , cityResourcesDto ) ; org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER . info ( ( "Out:" + model ) ) ; return "city_resources" ; } 
public void setStatus ( double speed ) { if ( speed > 1.4 ) { this . status = 2 ; textStatus . setText ( "跑步" ) ; } else if ( speed < 1.0E-6 ) { this . status = 0 ; textStatus . setText ( "静止" ) ; } else { this . status = 1 ; textStatus . setText ( "步行" ) ; } } 
@ java.lang.Override public boolean onNavigationItemSelected ( @ android.support.annotation.NonNull android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.home : onBackPressed () ; return true ; case R.id.action_help : startInstruction () ; return true ; case R.id.action_replay : speakTextInstruction ( currentTest ) ; return true ; } return false ; } 
public void setSong ( info.dourok.android.lyrics.SongWrapper song ) { this . mSong = song ; if ( ( song . getLyrics () ) != null ) { this . mLyrics = mSong . getLyrics () ; this . mLyricsItems = mLyrics . getLyricsItems () ; updateLyrics () ; } } 
public static java.lang.String post ( java.lang.String url , java.lang.String parameters , java.util.Map < java.lang.String , java.lang.String > customeHeaders , java.lang.String charset ) throws java.io.IOException { try { okhttp3.Response response = so.asch.sdk.impl.RESTOkHttp . rawPost ( url , parameters , customeHeaders , charset ) ; return so.asch.sdk.impl.RESTOkHttp . getResponseContent ( response ) ; } catch ( java.io.IOException ex ) { java.lang.String errorInfo = java.lang.String . format ( "Exception when post,url:%s,data:%s" , url , parameters ) ; throw ex ; } } 
public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( java.util.List < T > datas ) { this . mDatas = datas ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } 
@ java.lang.Override public void render ( float delta ) { if ( Gdx.input . justTouched () ) { game . setScreen ( new com.mygdx.magicappgame.States.PlayScreen ( game ) ) ; dispose () ; } Gdx.gl . glClearColor ( 0 , 0 , 0 , 1 ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage . draw () ; } 
@ java.lang.Override public boolean onCreateActionMode ( com.actionbarsherlock.view.ActionMode mode , com.actionbarsherlock.view.Menu menu ) { mode . setTitle ( R.string.menu_restriction ) ; super . onCreateActionMode ( mode , menu ) ; logic . addSelectedRelationWay ( toWay ) ; de.blau.android.osm.Relation restriction = logic . createRestriction ( fromWay , viaElement , toWay , ( ( fromWay ) == ( toWay ) ? de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.NO_U_TURN_VALUE : null ) ) ; android.util.Log . i ( "EasyEdit" , "Created restriction" ) ; main . performTagEdit ( restriction , de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.RESTRICTION_TAG , false , false ) ; main . startActionMode ( new de.blau.android.easyedit.EasyEditManager.RelationSelectionActionModeCallback ( restriction ) ) ; return false ; } 
@ java.lang.Override public void onViewCreated ( android.view.View view , android.os.Bundle savedInstanceState ) { super . onViewCreated ( view , savedInstanceState ) ; adapter = new com.vezikon.popularmovies.views.adapters.MoviesAdapter ( getActivity () , moviesList ) ; mGridView . setAdapter ( adapter ) ; mGridView . setOnItemClickListener ( this ) ; if ( isEmpty ) { if ( com.vezikon.popularmovies.Utils . isNetworkAvailable ( getActivity () ) ) { showProgress ( true ) ; getMovies ( com.vezikon.popularmovies.fragments.MoviesFragment.TYPE_MOST_POPULAR ) ; } else { android.widget.Toast . makeText ( getActivity () , getString ( R.string.error_msg_no_connection ) , Toast.LENGTH_LONG ) . show () ; } } } 
@ java.lang.Override public void deleteCorsRules ( @ javax.annotation.Nonnull java.lang.String bucketUuid ) throws com.eucalyptus.objectstorage.exceptions.ObjectStorageException { try ( final com.eucalyptus.entities.TransactionResource tran = com.eucalyptus.entities.Entities . transactionFor ( com.eucalyptus.objectstorage.entities.CorsRule . class ) ) { com.eucalyptus.objectstorage.BucketCorsManagers . getInstance () . deleteCorsRules ( bucketUuid , tran ) ; tran . commit () ; } catch ( java.lang.Exception ex ) { com.eucalyptus.objectstorage.metadata.DbBucketCorsManagerImpl.LOG . error ( ( "Exception caught while deleting CORS rules for bucket " + bucketUuid ) , ex ) ; throw new com.eucalyptus.objectstorage.exceptions.ObjectStorageException ( "InternalServerError" , ( "Exception caught while deleting CORS rules for bucket " + bucketUuid ) , "Bucket" , bucketUuid , org.jboss.netty.handler.codec.http.HttpResponseStatus.INTERNAL_SERVER_ERROR ) ; } } 
public java.util.HashSet < dictionary.APIType > getTypesbyMethod ( java.lang.String name ) { java.util.HashSet < dictionary.APIType > types = new java.util.HashSet < dictionary.APIType > () ; java.util.HashSet < dictionary.APIMethod > methods = this . getMethodsByName ( name ) ; if ( methods != null ) { for ( dictionary.APIMethod method : methods ) types . add ( method . getType () ) ; return types ; } else { return null ; } } 
private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( final java.lang.Class < ? > concrete , final java.lang.Class < ? > iface , final java.lang.Class < ? > c , final java.lang.reflect.Type [] ts ) { for ( final java.lang.reflect.Type t : ts ) { final org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; } 
public boolean onBlockDestroyed ( net.minecraft.item.ItemStack stack , net.minecraft.world.World worldIn , net.minecraft.block.state.IBlockState blockIn , net.minecraft.util.math.BlockPos pos , net.minecraft.entity.EntityLivingBase entityLiving ) { if ( ( ( double ) ( blockIn . getBlockHardness ( worldIn , pos ) ) ) != 0 ) { stack . damageItem ( 1 , entityLiving ) ; } return true ; } 
public static java.lang.String getRating ( java.lang.String login , int fid ) throws java.lang.Exception { java.util.ArrayList < java.lang.String [] > ret = DatabaseInterface.SQLExecutor . executeQuery ( ( ( ( ( "SELECT rating FROM acmdb05.Rates WHERE login='" + login ) + "' AND fid=" ) + fid ) + ";" ) ) ; return ret . get ( 0 ) [ 0 ] ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String home ( java.util.Locale locale , org.springframework.ui.Model model ) { java.util.Date date = new java.util.Date () ; java.text.DateFormat dateFormat = java.text.DateFormat . getDateTimeInstance ( java.text.DateFormat.LONG , java.text.DateFormat.LONG , locale ) ; java.lang.String formattedDate = dateFormat . format ( date ) ; model . addAttribute ( "serverTime" , formattedDate ) ; return "index" ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/impcImages/laczimages/{acc}/{topLevelMa}" ) public java.lang.String laczImages ( @ org.springframework.web.bind.annotation.PathVariable java.lang.String acc , @ org.springframework.web.bind.annotation.PathVariable java.lang.String topLevelMa , org.springframework.ui.Model model ) throws java.io.IOException , java.net.URISyntaxException , org.apache.solr.client.solrj.SolrServerException { java.lang.System.out . println ( "calling laczImages web page" ) ; addGeneSymbolToPage ( acc , model ) ; boolean overview = false ; imageService . getLacDataForGene ( acc , topLevelMa , overview , false , model ) ; return "laczImages" ; } 
@ java.lang.Override public void mouseDragged ( java.awt.event.MouseEvent e ) { if ( ( ( e . getX () ) >= 0 ) && ( ( e . getX () ) <= ( this . getWidth () ) ) ) { if ( knob1Picked ) { moveKnob1 ( java.lang.Math . abs ( e . getX () ) ) ; return; } if ( knob2Picked ) { moveKnob2 ( e . getX () ) ; } } } 
private void processTransactionDetails ( com.example.danie.schoolcashless.Transaction transaction , org.json.JSONObject json ) throws org.json.JSONException { java.lang.Number completed = ( ( java.lang.Number ) ( json . get ( "completed" ) ) ) ; transaction . setUnixTime ( completed . intValue () ) ; org.json.JSONObject with = ( ( org.json.JSONObject ) ( json . get ( "with" ) ) ) ; java.lang.String name = with . getString ( "name" ) ; transaction . setWith ( name ) ; } 
public indexingTopology.util.BTreeNode insertKeyValue ( TKey key , TValue value ) throws indexingTopology.exception.UnsupportedGenericException { indexingTopology.util.BTreeNode node = null ; keys . add ( key ) ; values . add ( new java.util.ArrayList < TValue > ( java.util.Arrays . asList ( value ) ) ) ; ++ ( keyCount ) ; if ( indexingTopology.util.BTreeLeafNode . isOverflow () ) { node = indexingTopology.util.BTreeLeafNode . dealOverflow () ; } return node ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; getWindow () . addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON ) ; setContentView ( R.layout.activity_allmachine ) ; android.util.Log . e ( TAG , "RawMaterial_onCreate" ) ; initDisplay () ; initTitleLayout () ; initCellTitle () ; initRecycleView () ; initBottomView () ; com.android.tedcoder.material.AllMachineActivity.requestHandler = new com.android.tedcoder.material.AllMachineActivity.RequestHandler () ; com.android.tedcoder.material.AllMachineActivity.requestHandler . sendEmptyMessage ( com.android.tedcoder.material.AllMachineActivity.SENDFLAG ) ; } 
@ java.lang.Override public java.lang.String decorMatrix ( int [] [] matrix ) { java.lang.StringBuilder array = new java.lang.StringBuilder ( "" ) ; for ( int i = 0 ; i <= ( ( matrix.length ) - 1 ) ; i ++ ) { array . append ( this . arrayToString ( matrix [ i ] ) ) ; array . append ( java.lang.System . lineSeparator () ) ; } return java.lang.String . format ( primitivesMatrixTemplate , array ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String link = downloadFile . getText () . toString () ; intent = new android.content.Intent ( ctx , com.dirtyunicorns.duupdater2.services.DownloadService . class ) ; intent . putExtra ( "url" , link ) ; intent . putExtra ( "fileName" , fileName . getText () ) ; ctx . startService ( intent ) ; } 
@ java.lang.Override public void setParameter ( int i , double p ) { if ( ( this . stateWeights ) != null ) { if ( i < ( this . stateWeights . length ) ) { this . stateWeights [ i ] = p ; return; } } else if ( ( this . stateActionWeights ) != null ) { if ( i < ( this . stateActionWeights . length ) ) { this . stateActionWeights [ i ] = p ; return; } } throw new java.lang.RuntimeException ( "Parameter index out of bounds; parameter cannot be set." ) ; } 
public org.exoplatform.portal.gadget.core.GadgetToken removeToken ( org.apache.shindig.gadgets.oauth.BasicOAuthStoreTokenIndex tokenKey ) { java.util.Map < java.lang.String , org.exoplatform.portal.gadget.core.GadgetTokenEntry > tokens = getGadgetTokens () ; for ( org.exoplatform.portal.gadget.core.GadgetTokenEntry tokenEntry : tokens . values () ) { org.apache.shindig.gadgets.oauth.BasicOAuthStoreTokenIndex key = tokenEntry . getKey () ; if ( tokenKey . equals ( key ) ) { org.exoplatform.portal.gadget.core.GadgetToken token = tokenEntry . getToken () ; tokenEntry . remove () ; return token ; } } return null ; } 
protected static final void check ( final com.gamesbykevin.breakout.game.Game game ) { if ( ( game . getBricks () . getCount () ) <= 0 ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0 ; com.gamesbykevin.breakout.game.GameHelper.WIN = true ; game . getScreen () . setState ( ScreenManager.State.GameOver ) ; } else if ( ( game . getBalls () . getCount () ) < 1 ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0 ; com.gamesbykevin.breakout.game.GameHelper.LOSE = true ; ( com.gamesbykevin.breakout.game.GameHelper.LIVES ) -- ; } } 
public void setFrequencyDays ( java.lang.String daysBitString ) { frequencyDays = daysBitString ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; int today = ( calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; if ( frequencyDays . substring ( today , ( today + 1 ) ) . equals ( "1" ) ) { isToday = true ; } else { isToday = false ; } } 
public void setIsWifiEnable ( boolean isWifiEnable ) { isWifiP2pEnable = isWifiEnable ; if ( isRemainResult ) { remainWifiIsEnable = isWifiEnable ; } if ( ( mOnWiFiRecevieListener ) != null ) { mOnWiFiRecevieListener . onWifiStatusResult ( isWifiEnable ) ; } else { if ( ! isWifiEnable ) {} } } 
@ java.lang.Override protected boolean onCanProcessClick ( android.view.View _view ) { switch ( _view . getId () ) { case R.id.btnAddPeriod : { com.example.admin.fragmentapp2.DataPeriod newPeriod = new com.example.admin.fragmentapp2.DataPeriod () ; dlgFragment . setPeriod ( newPeriod ) ; showFragment ( dlgFragment ) ; return false ; } case R.id.btnCalendar : { showFragment ( calFragment ) ; return false ; } case R.id.btnPeriods : { periodsFragment . refrHasPeriods () ; showFragment ( periodsFragment ) ; return false ; } default: { return true ; } } } 
public void updateTo ( com.thoughtworks.go.util.command.ProcessOutputStreamConsumer outputStreamConsumer , com.thoughtworks.go.config.materials.git.Revision revision , java.io.File baseDir , final com.thoughtworks.go.config.materials.SubprocessExecutionContext execCtx ) { try { outputStreamConsumer . stdOutput ( java.lang.String . format ( "[%s] Start updating %s at revision %s from %s" , GoConstants.PRODUCT_NAME , updatingTarget () , revision . getRevision () , url ) ) ; com.thoughtworks.go.domain.materials.git.GitCommand git = git ( outputStreamConsumer , workingdir ( baseDir ) ) ; git . fetchAndReset ( outputStreamConsumer , revision ) ; outputStreamConsumer . stdOutput ( java.lang.String . format ( "[%s] Done.\n" , GoConstants.PRODUCT_NAME ) ) ; } catch ( java.lang.Exception e ) { bomb ( e ) ; } } 
public static void init ( javax.servlet.ServletContext servletContext ) { java.io.File repository = ( ( java.io.File ) ( servletContext . getAttribute ( "javax.servlet.context.tempdir" ) ) ) ; org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD , repository ) ) ; int uploadLimit = org.edagarli.framework.helper.ConfigHelper . getAppUploadLimit () ; if ( uploadLimit != 0 ) { org.edagarli.framework.helper.UploadHelper.servletFileUpload . setFileSizeMax ( ( ( uploadLimit * 1024 ) * 1024 ) ) ; } } 
public int logoutUser ( java.lang.String username ) { int state ; boolean userExist ; boolean active ; userExist = database . usernameExist ( username ) ; active = database . getActive ( username ) ; if ( userExist && active ) { database . userActive ( username , false ) ; state = 1 ; } else { state = 0 ; } return state ; } 
@ java.lang.Override public void onPrepared ( @ android.support.annotation.NonNull com.devbrackets.android.playlistcore.api.MediaPlayerApi mediaPlayerApi ) { retryCount = 0 ; setPlaybackState ( com.devbrackets.android.playlistcore.service.PlaylistServiceCore.PlaybackState.PLAYING ) ; startMediaPlayer () ; if ( immediatelyPause ) { immediatelyPause = false ; if ( mediaPlayerApi . isPlaying () ) { performPause () ; } } if ( ( seekToPosition ) > 0 ) { performSeek ( seekToPosition , false ) ; seekToPosition = - 1 ; } updateRemoteViews () ; updateNotification () ; } 
private void submitToErrorPort ( java.lang.String error ) { if ( validErrorPort ) { com.ibm.streams.operator.StreamingOutput < com.ibm.streams.operator.OutputTuple > streamingOutput = getOutput ( 0 ) ; com.ibm.streams.operator.OutputTuple otup = streamingOutput . newTuple () ; otup . setString ( 0 , error ) ; try { streamingOutput . submit ( otup ) ; } catch ( java.lang.Exception e1 ) { e1 . printStackTrace () ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map ) ; com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText = ( ( android.widget.EditText ) ( findViewById ( R.id.searchBarEditText ) ) ) ; com.dev.cromer.jason.whatsappening.activities.MapActivity.searchBarEditText . setOnClickListener ( this ) ; setUpGoogleApiClient () ; com.google.android.gms.maps.MapFragment mapFragment = ( ( com.google.android.gms.maps.MapFragment ) ( getFragmentManager () . findFragmentById ( R.id.map ) ) ) ; mapFragment . getMapAsync ( this ) ; } 
void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } 
private void readExternal ( com.tangosol.io.pof.PofReader pofReader ) throws java.io.IOException { if ( ( pofReader . getVersionId () ) >= 1 ) { this . media = ( ( serializers.coherence.media.Media ) ( pofReader . readObject ( 0 ) ) ) ; this . images = ( ( java.util.List < serializers.coherence.media.Image > ) ( pofReader . readCollection ( 1 , new java.util.ArrayList < serializers.coherence.media.Image > () ) ) ) ; } } 
public void setBootstrapType ( java.lang.String bootstrapType ) { com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes type ; type = ( roundedCorners ) ? com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMapRounded . get ( bootstrapType ) : com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMap . get ( bootstrapType ) ; type = ( type == null ) ? com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes.DEFAULT : type ; layout . setBackgroundResource ( type.backgroundDrawable ) ; lblLeft . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblMiddle . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblRight . setTextColor ( getResources () . getColor ( type.textColour ) ) ; } 
public void setSelection ( T selection ) { for ( int i = 0 , count = getItems () . size () ; i < count ; i ++ ) { T item = getItems () . get ( i ) ; if ( item instanceof java.lang.String ) { if ( item . equals ( selection ) ) { setSelection ( i ) ; return; } } else { if ( item == selection ) { setSelection ( i ) ; return; } } } } 
private ludum.dare.collision.CollisionGroup getCollisions ( java.util.Map < java.lang.String , ludum.dare.collision.CollisionSequence > data ) { ludum.dare.utils.NamedAnimation animation = animations . getCurrentAnimation () ; java.lang.String name = animation . getName () ; if ( data . containsKey ( name ) ) { ludum.dare.collision.CollisionSequence sequence = data . get ( name ) ; if ( ( animation . getLastCalledFrame () ) < ( sequence.frames.length ) ) { return sequence.frames [ animation . getLastCalledFrame () ] ; } } return null ; } 
public void setAltitude ( bwem.Altitude altitude ) { if ( ! ( ( isAltitudeMissing () ) && ( ( altitude . intValue () ) > 0 ) ) ) { throw new java.lang.IllegalStateException ( "Altitude is already set" ) ; } else if ( ! ( ( altitude . intValue () ) > 0 ) ) { throw new java.lang.IllegalArgumentException ( "invalid Altitude" ) ; } else { this . altitude = new bwem.Altitude ( altitude ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "add" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String add ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute org.launchcode.models.User user , @ org.springframework.web.bind.annotation.RequestParam java.lang.String verify ) { if ( verify . equals ( user . getPassword () ) ) { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "newUser" , user . getUsername () ) ; model . addAttribute ( user ) ; org.launchcode.models.UserData . add ( user ) ; return "users/index" ; } else { model . addAttribute ( "title" , "Add User" ) ; model . addAttribute ( "error" , "Passwords do not match" ) ; model . addAttribute ( user ) ; return "users/add" ; } } 
private boolean isNewHighScore ( java.lang.String lastScoreDeck ) { java.lang.String highScoreDeck = prefs . getString ( "highScoreDeck" , "" ) ; if ( ( highScoreDeck . isEmpty () ) || ( ( lastScoreDeck . compareTo ( highScoreDeck ) ) < 0 ) ) { return true ; } else { return false ; } } 
@ java.lang.Override public void onBindViewHolder ( com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewHolder holder , int position , java.util.List < java.lang.Object > payloads ) { super . onBindViewHolder ( holder , position , payloads ) ; if ( ( payloads != null ) && ( ! ( payloads . isEmpty () ) ) ) { holder . setEntry ( ( ( com.example.brandon.habitlogger.HabitDatabase.DataModels.SessionEntry ) ( payloads . get ( 0 ) ) ) ) ; } } 
public java.lang.String post ( java.lang.String endpoint , com.ringcentral.definitions.Base base ) throws com.ringcentral.RestException , java.io.IOException { com.ringcentral.RequestBody body = com.ringcentral.RequestBody . create ( com.ringcentral.RestClient.jsonMediaType , com.alibaba.fastjson.JSON . toJSONString ( base ) ) ; com.ringcentral.Request request = new com.ringcentral.Request.Builder () . url ( ( ( server ) + endpoint ) ) . addHeader ( "Authorization" , authorizationHeader () ) . post ( body ) . build () ; return request ( request ) ; } 
private java.util.List < it.unibz.krdb.obda.model.CQIE > createSigmaRules ( it.unibz.krdb.obda.ontology.Ontology ontology ) { java.util.List < it.unibz.krdb.obda.model.CQIE > rules = new java.util.ArrayList < it.unibz.krdb.obda.model.CQIE > () ; java.util.Set < it.unibz.krdb.obda.ontology.Axiom > assertions = ontology . getAssertions () ; for ( it.unibz.krdb.obda.ontology.Axiom assertion : assertions ) { try { it.unibz.krdb.obda.model.CQIE rule = it.unibz.krdb.obda.owlrefplatform.core.basicoperations.AxiomToRuleTranslator . translate ( assertion ) ; if ( rule != null ) { rules . add ( rule ) ; } } catch ( java.lang.UnsupportedOperationException e ) { log . warn ( e . getMessage () ) ; } } return rules ; } 
public void stringToAllOtherUsers ( User author , java.lang.String s ) { for ( User u : users ) { if ( ! ( u . getName () . equalsIgnoreCase ( author . getName () ) ) ) { u . writeString ( s ) ; } } } 
public < T > SigmaEC.util.Option < java.util.List < T > > getOptionalInstancesFromParameter ( final java.lang.String parameterName , final java.lang.Class expectedSuperClass ) { assert parameterName != null ; assert ! ( parameterName . isEmpty () ) ; assert expectedSuperClass != null ; if ( properties . containsKey ( parameterName ) ) return new SigmaEC.util.Option ( ( ( java.util.List < T > ) ( getInstancesFromParameter ( parameterName , expectedSuperClass ) ) ) ) ; else return Option.NONE ; } 
public void Initialize ( com.traintrax.navigation.service.mdu.MotionDetectionUnitInterface motionDetectionUnit , com.traintrax.navigation.service.TrackSwitchControllerInterface trackSwitchController , com.traintrax.navigation.service.TrainNavigationDatabaseInterface trainNavigationDatabase , com.traintrax.navigation.service.events.PublisherInterface < com.traintrax.navigation.service.TrainNavigationServiceEventSubscriber , com.traintrax.navigation.service.TrainNavigationServiceEvent > eventPublisher , com.traintrax.navigation.service.position.InertialMotionPositionAlgorithmInterface trainPositionAlgorithm , boolean useRfidTagsOnly ) { this . motionDetectionUnit = motionDetectionUnit ; this . trackSwitchController = trackSwitchController ; this . eventPublisher = eventPublisher ; this . trainNavigationDatabase = trainNavigationDatabase ; this . positionAlgorithm = trainPositionAlgorithm ; this . useRfidTagsOnly = useRfidTagsOnly ; this . timer = new java.util.Timer () ; this . motionDetectionUnit . setMduCallback ( this ) ; setupTimer () ; } 
public int solution ( int [] A ) { long expectedSum = ( ( ( A.length ) + 1 ) * ( ( A.length ) + 2 ) ) / 2 ; long realSum = 0 ; for ( int i : A ) { realSum = realSum + ( new java.lang.Long ( i ) ) ; } return new java.lang.Long ( ( expectedSum - realSum ) ) . intValue () ; } 
@ java.lang.Override public boolean add ( org.eclipse.jetty.webapp.ClasspathPattern.Entry entry ) { java.lang.String name = entry . getName () ; if ( entry . isClassName () ) name += "$" ; else if ( entry . isLocation () ) throw new java.lang.IllegalArgumentException ( entry . toString () ) ; else if ( "." . equals ( name ) ) name = "" ; if ( ( this . _entries . get ( name ) ) != null ) return false ; return this . _entries . put ( name , entry ) ; } 
private static boolean collides ( int x , int y , int width , int height , java.lang.Iterable < com.polarbirds.huldra.model.world.SectionBounds > boundsList ) { for ( com.polarbirds.huldra.model.world.SectionBounds boundsFromList : boundsList ) { if ( boundsFromList . collides ( x , y , width , height ) ) { return true ; } } return false ; } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { if ( ( dataSnapshot . getValue () ) != null ) { com.example.chowdi.qremind.infrastructure.QueueInfo queueInfo = dataSnapshot . getValue ( com.example.chowdi.qremind.infrastructure.QueueInfo . class ) ; if ( ( queueInfo . getCalling () ) != null ) { if ( ! ( com.example.chowdi.qremind.activities.BaseActivity.notificationPoppedOut ) ) popUpNotification ( queueNo ) ; if ( ! ( application.notificationSend ) ) application . showNotification ( this ) ; } } else { com.example.chowdi.qremind.activities.BaseActivity.fbRefQueueTurn . removeEventListener ( com.example.chowdi.qremind.activities.BaseActivity.queueTurnListener ) ; com.example.chowdi.qremind.utils.Commons . showToastMessage ( "You have been removed from queue!" , getApplicationContext () ) ; } } 
private void makeNewLayer ( java.lang.String layerName ) { if ( ! ( layerName . isEmpty () ) ) { javafx.scene.canvas.Canvas canvas = new javafx.scene.canvas.Canvas ( Main.WIDTH , Main.HEIGHT ) ; Main.layerStrings . add ( layerName ) ; Main.layers . put ( layerName , canvas ) ; Main.layerSelector . getItems () . add ( layerName ) ; Main.layerSelector . setValue ( layerName ) ; Main.pane . getChildren () . add ( 0 , canvas ) ; Main.cursorCanvas . toFront () ; } } 
public boolean isLookaheadIgnoreWhitespace ( char expectedChar ) { int tempPos = ( pos ) + 1 ; if ( tempPos >= ( input . length () ) ) return false ; char c = input . charAt ( tempPos ) ; while ( isWhitespace ( c ) ) { ++ tempPos ; if ( tempPos >= ( input . length () ) ) return false ; c = input . charAt ( tempPos ) ; } return c == expectedChar ; } 
private void mathButton_ActionPerformed ( java.awt.event.ActionEvent evt ) { int [] rows = new int [ mainTable_ . getRowCount () ] ; for ( int i = 0 ; i < ( rows.length ) ; i ++ ) { java.lang.Integer j = ( ( java.lang.Integer ) ( mainTable_ . getValueAt ( mainTable_ . convertRowIndexToModel ( i ) , 0 ) ) ) ; rows [ i ] = j ; } edu.valelab.gaussianfit.MathForm mf = new edu.valelab.gaussianfit.MathForm ( edu.valelab.gaussianfit.DataCollectionForm.studio_ . getUserProfile () , rows , rows ) ; mf . setVisible ( true ) ; } 
public void validate ( ca.nines.ise.dom.DOM dom ) { for ( ca.nines.ise.node.Node n : dom ) { if ( ( n . type () ) == ( ca.nines.ise.node.NodeType.END ) ) { switch ( n . getName () . toLowerCase () ) { case "ornament" : process_end ( ( ( ca.nines.ise.node.EndNode ) ( n ) ) ) ; break; } } } } 
private test.Type visitType ( test.TypeContext type ) { if ( type . getText () . equals ( "int" ) ) { return new test.IntegerType () ; } else if ( type . getText () . equals ( "boolean" ) ) { return new test.BooleanType () ; } return null ; } 
public android.graphics.Bitmap rotate ( android.graphics.Bitmap bmp ) { android.graphics.Matrix matrix = new android.graphics.Matrix () ; matrix . postRotate ( 90 ) ; android.graphics.Bitmap b1 = android.graphics.Bitmap . createBitmap ( bmp , 0 , 0 , bmp . getWidth () , bmp . getHeight () , matrix , true ) ; return b1 ; } 
public void update ( by.expertsoft.butko.phone.Phone phone ) { java.util.Map < java.lang.String , java.lang.Object > params = new java.util.HashMap <> () ; params . put ( "name" , phone . getName () ) ; params . put ( "cost" , phone . getPrice () ) ; params . put ( "p_id" , phone . getManufacturer () . getId () ) ; namedParameterJdbcTemplate . update ( by.expertsoft.butko.dao.phone.JdbcPhoneDao.SQL_UPDATE_MOBILEPHONES , params ) ; } 
public void initView () { butterknife.ButterKnife . bind ( this ) ; setSupportActionBar ( toolbar ) ; if ( ( getSupportActionBar () ) != null ) { getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; getSupportActionBar () . setDisplayShowTitleEnabled ( false ) ; } toolbar . setNavigationOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( v . getContext () , com.jerry.notes.Activities.Login . class ) ; startActivity ( intent ) ; } } ) ; } 
private android.support.v7.widget.CardView buildCommentItem ( final com.floatingmuseum.mocloud.data.entity.Comment comment ) { android.support.v7.widget.CardView comment_item = ( ( android.support.v7.widget.CardView ) ( android.view.LayoutInflater . from ( this ) . inflate ( R.layout.comment_item , commentContainer , false ) ) ) ; if ( enableColorful () ) { initCommentItem ( this , comment_item , comment , mainSwatch , itemSwatch , false ) ; } else { initCommentItem ( this , comment_item , comment , null , null , false ) ; } return comment_item ; } 
public void insertOrder ( Simulator.Order order ) { long price = order . getPrice () ; java.util.TreeMap < java.lang.Long , java.util.LinkedList < Simulator.Order > > sideBook = getSideBook ( order . getSide () ) ; if ( sideBook . containsKey ( price ) ) { java.util.LinkedList < Simulator.Order > entries = sideBook . get ( price ) ; entries . add ( order ) ; } else { java.util.LinkedList < Simulator.Order > entries = new java.util.LinkedList () ; entries . add ( order ) ; sideBook . put ( price , entries ) ; } } 
private void ifThereIsMatchAddItToTotalTokens ( char [] tokenBuffer ) { if ( ( ( tokenLength ) > 0 ) && ( ( termAtt . length () ) > 0 ) ) { final java.lang.String token = java.lang.String . copyValueOf ( tokenBuffer , 0 , termAtt . length () ) ; totalTokens . put ( token , new java.lang.Integer [] { tokenStart , tokenEnd , token . length () , 1 } ) ; } } 
public void swap ( int x1 , int y1 , int x2 , int y2 ) { board.Cell temp = board [ y1 ] [ x1 ] ; board [ y1 ] [ x1 ] = board [ y2 ] [ x2 ] ; board [ y2 ] [ x2 ] = temp ; } 
public static void filterAdminOnlyFlowParams ( azkaban.user.UserManager userManager , azkaban.executor.ExecutionOptions options , azkaban.user.User user ) throws azkaban.executor.ExecutorManagerException { if ( ( options == null ) || ( ( options . getFlowParameters () ) == null ) ) return; java.util.Map < java.lang.String , java.lang.String > params = options . getFlowParameters () ; if ( ! ( azkaban.server.HttpRequestUtils . hasPermission ( userManager , user , Type.ADMIN ) ) ) { params . remove ( ExecutionOptions.FLOW_PRIORITY ) ; } else { azkaban.server.HttpRequestUtils . validateIntegerParam ( params , ExecutionOptions.FLOW_PRIORITY ) ; } } 
private java.util.List < java.lang.String > getAllObjects ( java.lang.String path ) { java.util.List < java.lang.String > objects = new java.util.ArrayList < java.lang.String > () ; com.amazonaws.services.s3.model.ListObjectsV2Result listing = client . listObjectsV2 ( new com.amazonaws.services.s3.model.ListObjectsV2Request () . withBucketName ( bucketName ) . withPrefix ( ensureTrailingSlashPresent ( path ) ) ) ; for ( com.amazonaws.services.s3.model.S3ObjectSummary objectSummary : listing . getObjectSummaries () ) { if ( ! ( objectSummary . getKey () . equals ( ensureTrailingSlashPresent ( path ) ) ) ) { objects . add ( objectSummary . getKey () ) ; } } return objects ; } 
@ java.lang.Override public void onDepthFrameEvent ( short [] depthFrame , byte [] playerIndex , float [] xyz , float [] uv ) { if ( ( this . lock ) != null ) { synchronized ( this . lock ) { this . lock . notifyAll () ; this . lock = null ; } } de.gocodinggroup.multiplicationtable.input.kinect.EventManager . dispatchAndWait ( new de.gocodinggroup.multiplicationtable.input.kinect.KinectDepthFrameEvent ( depthFrame , xyz ) ) ; } 
public void setZoom ( double zoom ) { if ( ( getMagnification () ) > zoom ) { while ( ( getMagnification () ) > zoom ) zoomOut ( 0 , 0 ) ; } else { while ( ( getMagnification () ) < zoom ) zoomIn ( 0 , 0 ) ; } if ( ( getMagnification () ) <= 1.0 ) imp . repaintWindow () ; } 
@ java.lang.Override public void stopVideoTimeCountingThread ( java.lang.String roomId ) { java.util.Iterator < com.benlinus92.synchronize.model.FutureHolder > it = countThreadFutureList . iterator () ; int index = 0 ; while ( it . hasNext () ) { if ( it . next () . getRoomId () . equals ( roomId ) ) { cancelThreadTaskByFuture ( countThreadFutureList . get ( index ) . getFuture () ) ; countThreadFutureList . remove ( index ) ; } else index ++ ; } } 
public static void back ( de.hhu.propra16.coastal.tddt.ITDDTextArea taeditor , de.hhu.propra16.coastal.tddt.ITDDTextArea tatest , de.hhu.propra16.coastal.tddt.ITDDLabel lbstatus , javafx.scene.control.Button btback ) { btback . setDisable ( true ) ; taeditor . setText ( de.hhu.propra16.coastal.tddt.CompilerReport.previousCode ) ; lbstatus . setText ( "RED" ) ; lbstatus . setId ( "red" ) ; de.hhu.propra16.coastal.tddt.TDDController . toTestEditor ( taeditor , tatest ) ; de.hhu.propra16.coastal.tddt.CompilerReport.target = CompileTarget.TEST ; TDDTMenu.baby.editor . setText ( TDDTMenu.baby.oldEditorText ) ; } 
public recruitment.business.ApplicantDTO registerApplicant ( java.lang.String firstname , java.lang.String lastname , java.lang.String dateofbirth , java.lang.String email , java.lang.String username , java.lang.String password ) { if ( ( em . find ( recruitment.business.Applicant . class , username ) ) != null ) { throw new javax.persistence.EntityExistsException ( ( "Account already exists with username " + username ) ) ; } else { recruitment.business.Applicant newApplicant = new recruitment.business.Applicant ( firstname , lastname , dateofbirth , email , username , password ) ; em . persist ( newApplicant ) ; return newApplicant ; } } 
@ java.lang.Override public boolean onStartNestedScroll ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.AppBarLayout child , android.view.View directTargetChild , android.view.View target , int nestedScrollAxes , int type ) { if ( super . onStartNestedScroll ( parent , child , directTargetChild , target , nestedScrollAxes , type ) ) { bindChild ( child ) ; mOriginTop = child . getY () ; mAppBarLayout . stopScrollAnimation () ; return true ; } else { return false ; } } 
@ java.lang.Override public void onCompletion ( com.app.sircle.WebService.PostResponse postResponse , com.app.sircle.Utility.AppError error ) { if ( postResponse != null ) { android.widget.Toast . makeText ( getActivity () , postResponse . getMessage () , Toast.LENGTH_SHORT ) . show () ; if ( ( postResponse . getStatus () ) == 200 ) { android.content.Intent homeIntent = new android.content.Intent ( getActivity () , com.app.sircle.UI.Activity.BaseActivity . class ) ; startActivity ( homeIntent ) ; } } else { android.widget.Toast . makeText ( getActivity () , "some error occurred" , Toast.LENGTH_SHORT ) . show () ; } } 
private void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } 
void init ( org.json.JSONArray data , org.apache.cordova.CallbackContext callback ) throws org.json.JSONException { org.json.JSONObject params = data . getJSONObject ( 0 ) ; boolean isOpenMessageRoaming = params . getBoolean ( "isOpenMessageRoaming" ) ; cn.jpush.im.android.api.JMessageClient . init ( mCordovaActivity . getApplicationContext () , isOpenMessageRoaming ) ; cn.jpush.im.android.api.JMessageClient . registerEventReceiver ( this ) ; cn.jiguang.cordova.im.JMessagePlugin.mCallback = callback ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; com.firebase.client.Firebase . setAndroidContext ( this ) ; setContentView ( R.layout.activity_friend_list ) ; super . onCreateDrawer () ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.objectsanddesign.shoppingwithfriends.FriendList.PlaceholderFragment () ) . commit () ; } } 
public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } 
@ java.lang.Override public boolean onBlockActivated ( net.minecraft.entity.player.EntityPlayer entityPlayer , mods.eln.misc.Direction side , float vx , float vy , float vz ) { if ( onBlockActivatedRotate ( entityPlayer ) ) { return true ; } else { return inventory . take ( entityPlayer . getCurrentEquippedItem () , this , false , true ) ; } } 
public atv.model.TreeNode createNode ( java.lang.String locationlevel , java.lang.String locationname ) { atv.model.TreeNode node = new atv.model.TreeNode ( locationname , locationlevel ) . setViewHolder ( new atv.holder.SelectableItemHolder ( getActivity () , ( locationlevel + ": " ) ) ) ; node . setSelectable ( false ) ; return node ; } 
public static java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } 
static final int getPartitionForProcedure ( org.voltdb.catalog.Procedure procedure , org.voltdb.StoredProcedureInvocation task ) { final org.voltdb.CatalogContext.ProcedurePartitionInfo ppi = ( ( org.voltdb.CatalogContext.ProcedurePartitionInfo ) ( procedure . getAttachment () ) ) ; if ( procedure . getSinglepartition () ) { return org.voltdb.InvocationDispatcher . getPartitionForProcedure ( ppi.index , ppi.type , task ) ; } else { return org.voltdb.iv2.MpInitiator.MP_INIT_PID ; } } 
@ java.lang.Override public void init ( net.sickill.off.common.OffListModel model ) { this . model = model ; final java.util.List < java.lang.String > sourceGroups = java.util.Collections . singletonList ( net.sickill.off.FakeProject.PROJECT_ROOT ) ; java.lang.String projectRootDir = net.sickill.off.FakeProject.PROJECT_ROOT ; this . model . reinit ( sourceGroups ) ; for ( net.sickill.off.common.ProjectFile pf : col ) { this . model . addFile ( pf ) ; } } 
public static void exportResource ( java.lang.String resourceName , java.nio.file.Path destination ) throws java.io.IOException { try ( java.io.InputStream in = com.github.checkstyle.FilesystemUtils . class . getResourceAsStream ( resourceName ) ; java.io.OutputStream out = java.nio.file.Files . newOutputStream ( destination ) ) { int readBytes ; final byte [] buffer = new byte [ com.github.checkstyle.FilesystemUtils.BUFFER_SIZE ] ; while ( ( readBytes = in . read ( buffer ) ) > 0 ) { out . write ( buffer , 0 , readBytes ) ; } } } 
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/createPatient" ) public java.lang.String createPatient ( java.lang.String jsonData ) throws java.lang.ClassNotFoundException , java.sql.SQLException { try { com.kms.cura.entity.user.PatientUserEntity entity = com.kms.cura.entity.json.JsonToEntityConverter . convertJsonStringToEntity ( jsonData , com.kms.cura.entity.user.PatientUserEntity . getPatientUserType () ) ; com.kms.cura.entity.user.PatientUserEntity user = com.kms.cura.dal.user.PatientUserDAL . getInstance () . createUser ( entity ) ; return new com.kms.cura_server.response.UserAPIResponse () . successResponsewithType ( user ) ; } catch ( java.lang.ClassNotFoundException | java.sql.SQLException | com.kms.cura.dal.exception.DALException e ) { return com.kms.cura_server.response.APIResponse . unsuccessResponse ( e . getMessage () ) ; } } 
@ java.lang.SuppressWarnings ( value = "null" ) @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { java.util.LinkedList < java.lang.Long > expList = new java.util.LinkedList < java.lang.Long > () ; expList = de.mpa.client.ui.dialogs.SelectExperimentDialog . showDialog ( de.mpa.client.ui.ClientFrame . getInstance () , "Select experiments" ) ; if ( ! ( expList . isEmpty () ) ) { new de.mpa.client.ui.panels.ResultsPanel.FetchResultsTask ( expList ) . execute () ; } } 
private void setTaskTime ( defaultPart.Task task , java.lang.String timeString ) { defaultPart.Logic.logger . log ( java.util.logging.Level.FINER , "Setting task time using \"{0}\"" , timeString ) ; java.lang.String [] startAndEndTime = timeString . split ( "-" , 2 ) ; assert ( startAndEndTime.length ) > 0 ; task . setStartTime ( getTimeFromString ( startAndEndTime [ 0 ] ) ) ; if ( ( startAndEndTime.length ) == 2 ) { task . setEndTime ( getTimeFromString ( startAndEndTime [ 1 ] ) ) ; } } 
public void centerModel ( org.gearvrf.GVRSceneObject model ) { org.gearvrf.GVRSceneObject.BoundingVolume bv = model . getBoundingVolume () ; float sf = 1 ; model . getTransform () . setScale ( sf , sf , sf ) ; bv = model . getBoundingVolume () ; model . getTransform () . setPosition ( ( - ( bv.center.x ) ) , ( - ( bv.center.y ) ) , ( ( - ( bv.center.z ) ) - ( 1.5F * ( bv.radius ) ) ) ) ; } 
private void createPeriodTable ( android.database.sqlite.SQLiteDatabase sqLiteDatabase ) { sqLiteDatabase . execSQL ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( TABLE_PERIOD ) ) + "(" ) + ( PERIOD_COLUMN_ID ) ) + " INTEGER PRIMARY KEY NOT NULL, " ) + ( PERIOD_COLUMN_SCHOOL_HOUR_NO ) ) + "INTEGER NOT NULL, " ) + ( PERIOD_COLUMN_STARTTIME ) ) + " TIME NOT NULL, " ) + ( PERIOD_COLUMN_ENDTIME ) ) + " TIME NOT NULL )" ) ) ; } 
@ db_project.controllers.RequestMapping ( value = "/profile" , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) public final org.springframework.http.ResponseEntity < db_project.models.UserModel > viewProfile ( @ db_project.controllers.PathVariable ( value = "nickname" ) java.lang.String nickname ) { java.util.List < db_project.models.UserModel > users ; try { users = service . getUserFromDb ( new db_project.models.UserModel ( null , null , null , nickname ) ) ; if ( users . isEmpty () ) { throw new org.springframework.dao.EmptyResultDataAccessException ( 0 ) ; } } catch ( org.springframework.dao.DataAccessException ex ) { return new org.springframework.http.ResponseEntity ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } return new org.springframework.http.ResponseEntity ( users . get ( 0 ) , org.springframework.http.HttpStatus.OK ) ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { int hour = timeSetter . getCurrentHour () ; int minute = timeSetter . getCurrentMinute () ; java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . set ( java.util.Calendar.HOUR , hour ) ; cal . set ( java.util.Calendar.MINUTE , minute ) ; cal . set ( java.util.Calendar.SECOND , 0 ) ; timeToggle . setChecked ( true ) ; timerWindow . dismiss () ; alarm . setExact ( AlarmManager.RTC_WAKEUP , cal . getTimeInMillis () , pendingPandoraIntent ) ; } 
public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; if ( answer == ( currAnswer ) ) { hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } 
@ java.lang.Override public void doFilter ( com.cdi.crud.infra.filter.ServletRequest req , com.cdi.crud.infra.filter.ServletResponse resp , com.cdi.crud.infra.filter.FilterChain chain ) throws com.cdi.crud.infra.filter.ServletException , java.io.IOException { req . setCharacterEncoding ( "UTF-8" ) ; resp . setCharacterEncoding ( "UTF-8" ) ; javax.servlet.http.HttpServletResponse httpResp = ( ( javax.servlet.http.HttpServletResponse ) ( resp ) ) ; requestHolder . get () . setCurrentRequest ( ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ) ; httpResp . setHeader ( "X-UA-Compatible" , "IE=Edge" ) ; chain . doFilter ( req , resp ) ; } 
public boolean fireProjectile ( final java.lang.Class < ? extends MarsRoverKata.Projectile > type ) { MarsRoverKata.Projectile projectileToFire = com.google.common.collect.Iterables . get ( com.google.common.collect.Collections2 . filter ( projectiles , new com.google.common.base.Predicate < MarsRoverKata.Projectile > () { @ java.lang.Override public boolean apply ( MarsRoverKata.Projectile input ) { return input . getClass () . isAssignableFrom ( type ) ; } } ) , 0 , null ) ; if ( projectileToFire == null ) { return false ; } projectileToFire . launch ( getFacing () , getLocation () ) ; projectiles . remove ( projectileToFire ) ; return true ; } 
public void keyPressed ( java.awt.event.KeyEvent keyPressed ) { if ( ( keyPressed . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_ENTER ) ) { command = inArea . getText () ; tcpService . sendCommand ( command . trim () ) ; inArea . setText ( "" ) ; } } 
public java.util.Date getCommentDate ( int postId , int commentId ) { if ( ( posts . get ( postId ) ) == null ) { return new java.util.Date ( 0 ) ; } if ( ( posts . get ( postId ) . comments ) == null ) { return new java.util.Date ( 0 ) ; } for ( me.dibber.blablablapp.core.Post.Comment c : posts . get ( postId ) . comments ) { if ( ( c.id ) == commentId ) { return c.date ; } } return new java.util.Date ( 0 ) ; } 
private void btTestarMouseReleased ( java.awt.event.MouseEvent evt ) { if ( "" . equals ( tfSite . getText () ) ) { Pingador.Shell . atualizaOutput ( Pingador.ft1.taOutput , "Alvo invalido" ) ; return; } if ( ( java.lang.Integer . parseInt ( spQtPack . getValue () . toString () ) ) < 3 ) { Pingador.ft1.ESTADO . setc ( 3 ) ; } ftcn () ; } 
@ java.lang.Override public int compareTo ( de.uniks.template.TemplateFragment other ) { if ( ( other . getKey () ) == ( key ) ) { if ( other . getValue () . equals ( value ) ) { return 0 ; } return - 1 ; } if ( ( other . getKey () ) > ( key ) ) { return - 1 ; } return 1 ; } 
public static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c <= 'F' ) ) ) || ( ( c >= 'a' ) && ( c <= 'f' ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { v . setOnClickListener ( null ) ; java.lang.String num = ev . getText () . toString () . trim () ; if ( ( num == null ) || ( "" . equals ( num ) ) ) return; double n = parseDouble ( num ) ; if ( n == 0 ) setText ( "Error: Divide by zero." ) ; else setText ( inIntTermsOfAny ( ( n / ( currentValue ) ) ) , ev ) ; v . setVisibility ( View.GONE ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent . getStringExtra ( MainActivity.LOCATION_KEY ) ; android.util.Log . d ( "intent" , ( "Location: " + location ) ) ; android.widget.TextView textView = new android.widget.TextView ( this ) ; textView . setTextSize ( 40 ) ; textView . setText ( ( ( ( getString ( R.string.display_location_text ) ) + ": " ) + location ) ) ; setContentView ( textView ) ; } 
public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode == ( RESULT_OK ) ) { if ( requestCode == ( com.example.deepak.socialnetworkingapp.upload.SELECT_PICTURE ) ) { android.net.Uri selectedImageUri = data . getData () ; if ( null != selectedImageUri ) { imgView . setImageURI ( selectedImageUri ) ; } } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( mainActivity . isWorking () ) ) { android.widget.Toast . makeText ( mainActivity , "请先开启服务" , Toast.LENGTH_SHORT ) . show () ; return; } android.content.Intent intent = new android.content.Intent ( getContext () , com.crossbow.app.x_timer.app_list.AddAppActivity . class ) ; startActivity ( intent ) ; } 
private void startJanekBujButtonActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ! ( areGameButtonsStatesOk ( org.stepinterpreter.janek.GameChoiceJPanel.janekBuj ) ) ) { javax.swing.JOptionPane . showMessageDialog ( this , "Masz odpaloną już inną grę" ) ; return; } interpreter = new org.stepinterpreter.janek.JanekBujInterpreter () ; thread = new java.lang.Thread ( interpreter ) ; thread . start () ; java.lang.System.out . println ( "Akcja!" ) ; showDeactivationButton () ; } 
private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { if ( mReceivers . contains ( receiver ) ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } } 
public org.nusco.narjillos.shared.things.Thing findClosestTo ( org.nusco.narjillos.shared.things.Thing thing , java.lang.String labelRegExp ) { if ( isEmpty () ) return null ; java.util.Set < org.nusco.narjillos.shared.things.Thing > nearbyNeighbors = getNearbyNeighbors ( thing , labelRegExp ) ; if ( ! ( nearbyNeighbors . isEmpty () ) ) return findClosestTo_Amongst ( thing , nearbyNeighbors , labelRegExp ) ; synchronized ( allTheThings ) { return findClosestTo_Amongst ( thing , allTheThings , labelRegExp ) ; } } 
public static void switchWebViewContext ( android.content.Context pluginActivity ) { com.limpoxe.fairy.util.LogUtil . d ( "尝试切换WebView Context, 不同的WebView内核, 实现方式可能不同, 本方法基于Chrome的WebView实现" ) ; try { android.webkit.WebView wb = new android.webkit.WebView ( pluginActivity ) ; wb . loadUrl ( "" ) ; } catch ( java.lang.NullPointerException e ) { e . printStackTrace () ; com.limpoxe.fairy.util.LogUtil . e ( "插件Application对象尚未初始化会触发NPE，如果是异步初始化插件，应等待异步初始化完成再进入插件" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public void tryPossibleMovementUpPositions ( com.mygdx.game.gameplay.models.Position . . . positions ) { java.util.HashSet < com.mygdx.game.gameplay.models.Position > positionsToCheck = new java.util.HashSet < com.mygdx.game.gameplay.models.Position > () ; for ( com.mygdx.game.gameplay.models.Position position : positions ) { position = position . moveAlongY ( 1 ) ; addToCheck ( position , positionsToCheck ) ; addToCheck ( position . moveAlongX ( 1 ) , positionsToCheck ) ; addToCheck ( position . moveAlongX ( ( - 1 ) ) , positionsToCheck ) ; } for ( com.mygdx.game.gameplay.models.Position position : positionsToCheck ) { gravity . tryMoveFromPosition ( position , false ) ; } } 
public synchronized void handleRecv ( long latency ) { ( recvCountInterval ) ++ ; ( recvCountTotal ) ++ ; if ( latency > 0 ) { minLatency = java.lang.Math . min ( minLatency , latency ) ; maxLatency = java.lang.Math . max ( maxLatency , latency ) ; cumulativeLatencyInterval += latency ; cumulativeLatencyTotal += latency ; ( latencyCountInterval ) ++ ; ( latencyCountTotal ) ++ ; } report () ; } 
private int simpleComputeNextLineIndentLevel ( int indentLevel , java.util.List < groovyjarjarantlr.Token > tokens ) { int adjust = getOpenVersusCloseBalance ( tokens ) ; if ( adjust > 0 ) { indentLevel += getPrefs () . getIndentationSize () ; } else if ( adjust < 0 ) { indentLevel -= getPrefs () . getIndentationSize () ; } return indentLevel ; } 
public void onApplicationEvent ( org.springframework.context.event.ContextRefreshedEvent contextRefreshedEvent ) { if ( alreadySetup ) { return; } twitter.entity.Privilege viewPagesPrivilege = createPrivilegeIfNotFound ( RolesAndPrivileges.VIEW_PAGES_PRIVILEGE ) ; java.util.List < twitter.entity.Privilege > userPrivileges = java.util.Arrays . asList ( viewPagesPrivilege ) ; createRoleIfNotFound ( RolesAndPrivileges.ROLE_ADMIN , userPrivileges ) ; createRoleIfNotFound ( RolesAndPrivileges.ROLE_USER , userPrivileges ) ; createAdminIfNotExists () ; createDefaultImgIfDoesNotExist ( InitialPhotoSettings.DEFAULT_IMG_PATH ) ; alreadySetup = true ; } 
private com.openrubicon.social.database.models.Friend getRelation ( org.bukkit.OfflinePlayer p2 ) { com.openrubicon.social.database.models.Friend model = new com.openrubicon.social.database.models.Friend () ; model . setPlayer2_id ( p2 . getUniqueId () . toString () ) ; model . setPlayer1_id ( user . getUniqueId () . toString () ) ; model = model . selectRelation () ; return model ; } 
private void roamDirectory ( java.io.File directory ) { java.io.File [] fileList = directory . listFiles ( interestingFilesFilter ) ; if ( fileList != null ) { for ( java.io.File file : fileList ) { searchListener . onInterestingFileFound ( file ) ; addChecked ( file ) ; } } java.io.File [] dirs = directory . listFiles ( directoryFileFilter ) ; if ( dirs != null ) { for ( java.io.File dir : dirs ) { roamDirectory ( dir ) ; } } } 
public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { notesAdmin . updateNote ( tbNoteTitel . getText () , tbNoteSubTitel . getText () , taUpdateNoteText . getText () , timestampe , currentUser . getId () , "keine quelle" , currentNotebook . getId () , currentNote , new com.google.gwt.user.client.rpc.AsyncCallback < java.lang.Void > () { @ java.lang.Override public void onSuccess ( java.lang.Void result ) { de.hdm.itprojekt.noteit.client.EditNotes . this . hide () ; de.hdm.itprojekt.noteit.client.Homepage . updateNotesCellList ( currentNotebook . getId () ) ; } @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) {} } ) ; } 
private void ToggleCircleColor ( com.google.android.gms.maps.model.Circle circle ) { int strokeColor = ( circle . getStrokeColor () ) ^ 52224 ; circle . setStrokeColor ( strokeColor ) ; circle . setStrokeWidth ( ( ( circle . getStrokeWidth () ) == 3 ? 6 : 3 ) ) ; } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( this . email ) ; dest . writeString ( this . label ) ; dest . writeLong ( this . uid ) ; dest . writeLong ( this . receivedDateInMillisecond ) ; dest . writeLong ( this . sentDateInMillisecond ) ; dest . writeStringArray ( this . from ) ; dest . writeStringArray ( this . to ) ; dest . writeString ( this . subject ) ; dest . writeStringArray ( this . flags ) ; } 
public void update ( float dt ) { handleInput ( dt ) ; minerPos = miner.b2body . getPosition () ; world . step ( ( 1 / 60.0F ) , 6 , 2 ) ; updateCamera ( gameCam , getMapPixelWidth () , getMapPixelHeight () ) ; renderer . setView ( gameCam ) ; } 
public boolean borrowBook ( Library lib , java.lang.String title ) { if ( lib.bookList . containsKey ( title ) ) { borrowedBooks . add ( lib.bookList . get ( title ) . get ( 0 ) ) ; lib.bookList . get ( title ) . remove ( 0 ) ; return true ; } else { java.lang.System.out . println ( "Book not Found" ) ; return false ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage placeOrder ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String utoken , @ org.springframework.web.bind.annotation.RequestParam java.lang.String order ) { if ( ( org.apache.commons.lang3.StringUtils . isBlank ( utoken ) ) || ( org.apache.commons.lang3.StringUtils . isBlank ( order ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST ; com.alibaba.fastjson.JSONObject orderJson = com.alibaba.fastjson.JSON . parseObject ( order ) ; orderJson . put ( "customerId" , userServiceApi.USER . get ( utoken ) . getId () ) ; dealServiceApi.ORDER . add ( orderJson ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS ; } 
private void visitYieldExpression ( com.google.javascript.rhino.Node n ) { if ( n . getParent () . isExprResult () ) { return; } if ( ( decomposer . canExposeExpression ( n ) ) != ( ExpressionDecomposer.DecompositionType.UNDECOMPOSABLE ) ) { decomposer . exposeExpression ( n ) ; compiler . reportCodeChange () ; } else { compiler . report ( com.google.javascript.jscomp.JSError . make ( n , Es6ToEs3Converter.CANNOT_CONVERT , "Undecomposable expression" ) ) ; } } 
public static java.util.List < org.eyeseetea.malariacare.data.database.model.Tab > getTabsBySession ( java.lang.String module ) { return new com.raizlabs.android.dbflow.sql.language.Select () . from ( org.eyeseetea.malariacare.data.database.model.Tab . class ) . where ( Tab_Table.id_program . eq ( org.eyeseetea.malariacare.data.database.utils.Session . getSurveyByModule ( module ) . getProgram () . getId_program () ) ) . orderBy ( Tab_Table.order_pos , true ) . queryList () ; } 
public cs446.mezzo.music.playlists.Playlist getPlaylist ( java.lang.String playlistName ) { if ( playlistName . equals ( cs446.mezzo.music.playlists.PlaylistManager.FAVOURITES ) ) { return mFavourites ; } else if ( mUserPlaylists . containsKey ( playlistName ) ) { return mUserPlaylists . get ( playlistName ) ; } final cs446.mezzo.music.playlists.AutoPlaylist autoPlaylist = cs446.mezzo.music.playlists.AutoPlaylist . get ( playlistName ) ; if ( autoPlaylist == null ) { return null ; } return autoPlaylist . getPlaylist ( mLocalMusicFetcher , mStatCollector ) ; } 
@ java.lang.Override public java.lang.String generateUri ( java.io.File file , java.lang.String id ) { java.lang.String uri = file . toURI () . toString () ; uri = ( ( getOutputUriReplace () ) != null ) ? applyOutputUriReplace ( uri , getOutputUriReplace () ) : uri ; uri = ( ( getOutputUriPrefix () ) != null ) ? ( getOutputUriPrefix () ) + uri : uri ; uri = ( ( getOutputUriSuffix () ) != null ) ? uri + ( getOutputUriSuffix () ) : uri ; return uri ; } 
@ java.lang.Override public void onSuccess ( java.lang.Object object ) { if ( null != object ) { heroes = ( ( com.example.pratik.dota2profile.beans.Heroes ) ( object ) ) ; for ( com.example.pratik.dota2profile.beans.Hero i : heroes . getResult () . getHeroes () ) { heroesMap . put ( java.lang.Integer . parseInt ( i . getId () ) , i . getLocalizedName () ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View view ) { java.util.Calendar cal = java.util.Calendar . getInstance () ; new android.app.DatePickerDialog ( context , dateSetListener , cal . get ( java.util.Calendar.YEAR ) , ( ( cal . get ( java.util.Calendar.MONTH ) ) + 1 ) , cal . get ( java.util.Calendar.DAY_OF_MONTH ) ) . show () ; } 
public final void setMaximized ( boolean maximized ) { if ( ( ( isMaximizable () ) && ( ! ( isMaximized () ) ) ) && maximized ) { fireMaximizeEvent () ; maximizedProperty . set ( true ) ; } else if ( ( ! maximized ) && ( isMaximized () ) ) { fireRestoreEvent () ; maximizedProperty . set ( false ) ; } } 
@ java.lang.Override public cn.edu.nju.software.entity.User addOrUpdateUser ( cn.edu.nju.software.entity.User user ) { if ( ( ( user . getId () ) != null ) && ( ( user . getId () ) != 0 ) ) { boolean up = userDao . updateUser ( user ) ; return up ? user : null ; } boolean res = userDao . saveUser ( user ) ; if ( res ) { user . setId ( userDao . getNewestId () ) ; return user ; } return null ; } 
@ java.lang.Override protected void reset ( float pos1 , float pos2 ) { squadSelectButton = mainButton . addSelectButton ( this ) ; super . reset ( pos1 , pos2 ) ; inventory . reset () ; this . setSelected ( true ) ; selectKey = com.esbjon.entities.Squad.handler . findOrAssignKey ( this ) ; this . stop () ; } 
@ java.lang.Override public void call ( java.lang.reflect.Method method ) { java.lang.Class < ? > [] parameterTypes = method . getParameterTypes () ; com.androidyuan.rxbus.component.Subscribe subscribeAnnotation = method . getAnnotation ( com.androidyuan.rxbus.component.Subscribe . class ) ; if ( subscribeAnnotation != null ) { java.lang.Class < ? > eventType = parameterTypes [ 0 ] ; java.lang.String key = eventType . getName () ; putObject ( key , subscriber ) ; } } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; outState . putString ( "query" , query ) ; if ( ( mRecipeAdapter . getItemCount () ) != 0 ) { mRecipeList = mRecipeAdapter . getData () ; outState . putParcelableArrayList ( BUNDLE_RECIPE_ARRAY , mRecipeList ) ; } } 
private java.util.Date parsePubdateDate ( java.lang.String dateStr , boolean tryAllFormat ) { long mNow = new java.util.Date () . getTime () ; for ( java.text.DateFormat format : com.rssreader.utils.TimeUtils.PUBDATE_DATE_FORMATS ) { try { java.util.Date result = format . parse ( dateStr ) ; return ( result . getTime () ) > mNow ? new java.util.Date ( mNow ) : result ; } catch ( java.text.ParseException e ) { android.util.Log . e ( com.rssreader.utils.TimeUtils.TAG , "Wrong pubdate format" ) ; } } return tryAllFormat ? parseUpdateDate ( dateStr , false ) : null ; } 
public static boolean matchTypes ( com.jetbrains.ther.typing.types.TheRType type , com.jetbrains.ther.typing.types.TheRType replacementType ) { if ( type instanceof com.jetbrains.ther.typing.types.TheRUnionType ) { return ( ( com.jetbrains.ther.typing.types.TheRUnionType ) ( type ) ) . contains ( replacementType ) ; } return ( type . equals ( replacementType ) ) || ( com.jetbrains.ther.typing.TheRTypeProvider . isSubtype ( replacementType , type ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping public java.lang.String list ( org.springframework.data.domain.Pageable pageable , org.springframework.ui.Model uiModel ) { org.springframework.data.domain.Page < com.appspot.gardemallorie.domain.Location > page = locationService . findAllLocations ( pageable ) ; uiModel . addAttribute ( "locations" , page . getContent () ) ; uiModel . addAttribute ( "maxPages" , page . getTotalPages () ) ; return "locations/list" ; } 
public void onBreakBlock ( net.minecraft.world.World worldIn ) { if ( worldIn.isRemote ) return; net.minecraftforge.fml.common.FMLLog . info ( "onBreakBlock in TileEntity" ) ; for ( com.balrog.InfernalTech.energy.IEnergyChannel channel : this . channels ) { channel . removeChannelConnection ( worldIn , this ) ; } this . channels . clear () ; this . receivers = new cofh.api.energy.IEnergyReceiver [ 6 ] ; com.balrog.InfernalTech.energy.EnergyNetwork network = this . getNetwork () ; if ( network != null ) network . destroy () ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { userInput . setMax ( maxResults . getValue () ) ; userInput . setRadius ( radius . getValue () ) ; savedSettings . edit () . putInt ( "se.deltazulu.www.sl_closeby.maxResults" , userInput . getMax () ) . apply () ; savedSettings . edit () . putInt ( "se.deltazulu.www.sl_closeby.radius" , userInput . getRadius () ) . apply () ; getStationsList () ; } 
@ java.lang.Override public java.util.List < com.audit.bl.beans.Loan > getUserLoans ( com.audit.bl.beans.User user ) { java.util.List < com.audit.bl.beans.Loan > loanList = null ; java.lang.String sql = loanSqls . getProperty ( "user.select" ) ; org.hibernate.Query query = getSessionFactory () . getCurrentSession () . createQuery ( sql ) ; query . setLong ( "fromUser" , user . getUserId () ) ; query . setLong ( "toUser" , user . getUserId () ) ; loanList = ( ( java.util.List < com.audit.bl.beans.Loan > ) ( query . list () ) ) ; return loanList ; } 
public java.lang.Thread addPerson ( int sourceFloor , int destinationFloor ) { java.lang.Thread person = new java.lang.Thread ( new com.ru.usty.elevator.Person ( sourceFloor , destinationFloor , this ) ) ; person . start () ; personCount . set ( sourceFloor , ( ( personCount . get ( sourceFloor ) ) + 1 ) ) ; return null ; } 
@ java.lang.Override public void onAccountCreatorIsPhoneNumberUsed ( org.linphone.core.LinphoneAccountCreator accountCreator , org.linphone.core.LinphoneAccountCreator.Status status ) { if ( ( org.linphone.assistant.AssistantActivity . instance () ) == null ) { apply . setEnabled ( true ) ; return; } if ( ( status . equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAccount ) ) || ( status . equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAlias ) ) ) { accountCreator . recoverPhoneAccount () ; } else { apply . setEnabled ( true ) ; org.linphone.LinphoneUtils . displayErrorAlert ( org.linphone.LinphoneUtils . errorForStatus ( status ) , org.linphone.assistant.AssistantActivity . instance () ) ; } } 
@ org.androidannotations.annotations.Click ( value = R.id.fragment_bt_scan_qr ) protected void scannerQrCode () { com.google.zxing.integration.android.IntentIntegrator integrator = new com.google.zxing.integration.android.IntentIntegrator ( getActivity () ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.QR_CODE_TYPES ) ; integrator . setPrompt ( "Scan QR" ) ; integrator . setCameraId ( 0 ) ; integrator . setBeepEnabled ( false ) ; integrator . setBarcodeImageEnabled ( false ) ; integrator . initiateScan () ; } 
public boolean checkTouch ( float coordX , float coordY ) { return ( ( coordX >= ( offsetX ) ) && ( coordX < ( ( offsetX ) + ( getWidth () ) ) ) ) && ( ( coordY >= ( offsetY ) ) && ( coordY < ( ( offsetY ) + ( getHeight () ) ) ) ) ; } 
private Storage.Objects.Delete deleteRequest ( com.google.api.services.storage.model.StorageObject blob , java.util.Map < com.google.gcloud.spi.Option , ? > options ) throws java.io.IOException { return storage . objects () . delete ( blob . getBucket () , blob . getName () ) . setIfMetagenerationMatch ( Option.IF_METAGENERATION_MATCH . getLong ( options ) ) . setIfMetagenerationNotMatch ( Option.IF_METAGENERATION_NOT_MATCH . getLong ( options ) ) . setIfGenerationMatch ( Option.IF_GENERATION_MATCH . getLong ( options ) ) . setIfGenerationNotMatch ( Option.IF_GENERATION_NOT_MATCH . getLong ( options ) ) ; } 
@ java.lang.Override public void loadMoreFinish ( boolean emptyResult , boolean hasMore ) { mLoadError = false ; mListEmpty = emptyResult ; mIsLoading = false ; mHasMore = hasMore ; if ( ( mLoadMoreUIHandler ) != null ) { mLoadMoreUIHandler . onLoadFinish ( this , emptyResult , hasMore ) ; } if ( ( mFooterView ) != null ) { if ( hasMore ) { mFooterView . setVisibility ( com.being.base.ui.widget.ptr.loadmore.VISIBLE ) ; } else { mFooterView . setVisibility ( com.being.base.ui.widget.ptr.loadmore.GONE ) ; } } } 
public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } 
public void displayMaze ( algorithms.mazeGenerators.Maze3d m , java.lang.String name ) { maze = new view.Maze3dDisplay ( shell , org.eclipse.swt.SWT.BORDER , this ) ; maze . setLayoutData ( new org.eclipse.swt.layout.GridData ( org.eclipse.swt.SWT.FILL , org.eclipse.swt.SWT.FILL , true , true , 1 , 1 ) ) ; menu . displayGoalGuide () ; menu . setGoalFloorText ( m . getGoalPosition () . z ) ; maze . initMaze ( m , name , "images/fly.png" ) ; maze . moveAbove ( welcome ) ; welcome . dispose () ; shell . layout ( true ) ; } 
@ java.lang.Override public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setCurrentTileIndex ( 1 ) ; } if ( pSceneTouchEvent . isActionUp () ) { setCurrentTileIndex ( 0 ) ; setPause ( false ) ; } return true ; } 
@ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { responseHandler . onSuccess ( reqId , header , sequence , result , type , taxonRank ) ; } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } } 
@ java.lang.Override public com.firefly.client.http2.HTTPOutputStream sendRequestWithContinuation ( com.firefly.client.http2.MetaData.Request request , com.firefly.client.http2.ClientHTTPHandler handler ) { request . getFields () . put ( HttpHeader.EXPECT , HttpHeaderValue.CONTINUE ) ; com.firefly.client.http2.HTTPOutputStream outputStream = getHTTPOutputStream ( request , handler ) ; try { outputStream . commit () ; } catch ( java.io.IOException e ) { com.firefly.client.http2.HTTP1ClientConnection.log . error ( "client generates the HTTP message exception" , e ) ; } return outputStream ; } 
public it.blogspot.geoframe.SewerPipeDimensioning.Pipe run ( final it.blogspot.geoframe.SewerPipeDimensioning.Pipe pipe ) { setPipe ( pipe ) ; if ( ( pipeSlope ) >= ( minSlope ) ) { this . pipe . buildPipe ( elevationEndPoint , computeDiameter ( pipeSlope ) , it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient , computeVelocity () ) ; } else { this . pipe . buildPipe ( computeElevationEndPoint ( minSlope ) , diameter , it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient , computeVelocity () ) ; } return this . pipe ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.System.out . println ( "Onclick choose call" ) ; android.content.Intent i = new android.content.Intent () ; i . putExtra ( this . getString ( R.string.intent_extra_directory ) , m_directory . getCurrentDirectory () . getAbsolutePath () ) ; this . setResult ( Activity.RESULT_OK , i ) ; this . finish () ; } 
protected void fillValues ( java.util.List < java.lang.Object > valueList , java.lang.String sql , java.sql.PreparedStatement stmt ) { int index = 0 ; for ( java.lang.Object o : valueList ) { try { stmt . setObject ( ( ++ index ) , o ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( ( ( ( e . getMessage () ) + " - Index: " ) + index ) + ", Value: " ) + o ) + ", Query: " ) + sql ) , e ) ; } } } 
private void showMoreBooks ( int itemsPerPage ) { int start = lessBooks . size () ; int end = start + itemsPerPage ; for ( int i = start ; i < end ; i ++ ) { lessBooks . add ( books . get ( i ) ) ; } } 
@ java.lang.Override public void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { super . onRestoreInstanceState ( savedInstanceState ) ; long progressTime = savedInstanceState . getLong ( app.park.com.vr.VrVideoActivity.STATE_PROGRESS_TIME ) ; mVrVideoView . seekTo ( progressTime ) ; isPaused = savedInstanceState . getBoolean ( app.park.com.vr.VrVideoActivity.STATE_IS_PAUSED ) ; if ( isPaused ) { pauseVideo () ; } } 
@ java.lang.Override public java.lang.String export ( be.nikiroo.gofetch.data.Story story ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; append ( builder , story , false ) ; builder . append ( "i\r\n" ) ; if ( ( story . getComments () ) != null ) { for ( be.nikiroo.gofetch.data.Comment comment : story . getComments () ) { append ( builder , comment , "" ) ; } } builder . append ( "i\r\n" ) ; return builder . toString () ; } 
private static java.lang.String getPath ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile root , @ org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile file ) { java.lang.String path = com.intellij.openapi.util.text.StringUtil . notNullize ( mobi.hsz.idea.gitignore.util.Utils . getRelativePath ( root , file ) ) ; path = mobi.hsz.idea.gitignore.util.Utils . escapeChar ( path , '[' ) ; path = mobi.hsz.idea.gitignore.util.Utils . escapeChar ( path , ']' ) ; path = com.intellij.openapi.util.text.StringUtil . trimLeading ( path , VfsUtil.VFS_PATH_SEPARATOR ) ; return ( com.intellij.openapi.vfs.VfsUtil.VFS_PATH_SEPARATOR ) + path ; } 
private boolean isGetter ( java.lang.reflect.Method method , java.lang.String fieldName ) { return ( method . getName () . equals ( ( "get" + ( org.redisson.liveobject.core.AccessorInterceptor . getFieldNameSuffix ( fieldName ) ) ) ) ) || ( method . getName () . equals ( ( "is" + ( org.redisson.liveobject.core.AccessorInterceptor . getFieldNameSuffix ( fieldName ) ) ) ) ) ; } 
@ java.lang.Override public boolean onTouch ( android.view.View v , android.view.MotionEvent event ) { switch ( event . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : this . x = event . getX () ; this . y = event . getY () ; return true ; case android.view.MotionEvent.ACTION_UP : this . detectMovement ( event . getX () , event . getY () ) ; return true ; default: return false ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.support.v4.view.ViewPager viewPager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.vp_mainActivity ) ) ) ; com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter = new com.example.emcako.birthdayreminder.MainActivity.MainPageAdapter ( getSupportFragmentManager () ) ; viewPager . setAdapter ( com.example.emcako.birthdayreminder.MainActivity.mainPageAdapter ) ; } 
@ java.lang.Override protected void onNewIntent ( android.content.Intent intent ) { super . onNewIntent ( intent ) ; if ( intent . hasExtra ( info.schnatterer.nusic.android.activities.MainActivity.EXTRA_ACTIVE_TAB ) ) { info.schnatterer.nusic.android.activities.MainActivity.currentTab = ( ( info.schnatterer.nusic.android.activities.MainActivity.TabDefinition ) ( intent . getExtras () . get ( info.schnatterer.nusic.android.activities.MainActivity.EXTRA_ACTIVE_TAB ) ) ) ; android.support.v4.view.ViewPager pager = ( ( android.support.v4.view.ViewPager ) ( findViewById ( R.id.mainPager ) ) ) ; pager . setCurrentItem ( info.schnatterer.nusic.android.activities.MainActivity.currentTab.position ) ; } } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { android.util.Log . i ( "LocalService" , ( ( ( "Received start id " + startId ) + ": " ) + intent ) ) ; mIsPersistent = true ; if ( intent != null ) { android.content.Intent target = intent . getParcelableExtra ( "notificationTarget" ) ; if ( target != null ) showNotification ( target ) ; } return START_STICKY ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { view = inflater . inflate ( R.layout.memory_add_wrapper , container , false ) ; butterknife.ButterKnife . bind ( this , view ) ; _selectedItem = ( ( com.oneupapplications.bucketapp.API.DataModel.Memory ) ( getActivity () . getIntent () . getSerializableExtra ( MemoryDetailActivity.EXTRA_MEMORY_ID ) ) ) ; setupNavigation () ; fillItemView ( _selectedItem ) ; return view ; } 
private static double getDouble ( java.lang.String query ) { java.sql.ResultSet result ; try ( data.DatabaseConnection connection = new data.DatabaseConnection () ) { result = connection . query ( query ) ; result . next () ; return result . getDouble ( 1 ) ; } catch ( java.lang.Exception e ) { return - 999999999 ; } } 
private com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto readAmrProfileStatusCode ( final org.openmuc.jdlms.datatypes.DataObject amrProfileStatusData ) throws org.osgp.adapter.protocol.dlms.exceptions.ProtocolAdapterException { if ( ! ( amrProfileStatusData . isNumber () ) ) { throw new org.osgp.adapter.protocol.dlms.exceptions.ProtocolAdapterException ( "Could not read AMR profile register data. Invalid data type." ) ; } final java.util.Set < com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeFlagDto > flags = this . amrProfileStatusCodeHelperService . toAmrProfileStatusCodeFlags ( ( ( java.lang.Number ) ( amrProfileStatusData . value () ) ) ) ; return new com.alliander.osgp.dto.valueobjects.smartmetering.AmrProfileStatusCodeDto ( flags ) ; } 
@ java.lang.Override public int newNet ( java.lang.String shortName , int cloneId , int width ) { java.lang.System.out . println ( ( ( ( ( ( "newNet " + shortName ) + " " ) + cloneId ) + " " ) + width ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList . get ( ( ( fCurrentEvent ) ++ ) ) ; assertEquals ( event.fType , VCDLoaderTest.ExpectTraceBuilder.EXPECT_NET ) ; assertEquals ( event.fName , shortName ) ; assertEquals ( event.fId , cloneId ) ; assertEquals ( event.fWidth , width ) ; return ( fNextNetId ) ++ ; } 
public void endSection ( int section ) { lcm.spy.ObjectPanel.Section cs = sections . get ( section ) ; if ( ( collapse_depth ) == 0 ) { unindent () ; } if ( sections . get ( section ) . collapsed ) { ( collapse_depth ) -- ; } spacer () ; endColorBlock () ; spacer () ; } 
private static java.lang.Boolean ReadVerifyStoreDumpPage ( net.basov.nfc.NFCaDump dump , java.lang.String line ) { java.lang.Boolean rc = false ; if ( ( line . matches ( "-?[0-9a-fA-F]+" ) ) && ( ( line . length () ) == 8 ) ) { dump . addPage ( net.basov.util.FileIO . hexStringToByteArray ( line ) ) ; rc = true ; } else { dump . appendRemark ( ( ( "E: :" + line ) + ":\n" ) ) ; rc = false ; } return rc ; } 
public boolean creatObject ( java.lang.String name , java.lang.String modelPath , int coordinateSystemID , int x , int y ) { if ( end ) return false ; view . queueEvent ( new gameSystem.gameObjectSystem.ObjectCreator ( sdk , modelPath , coordinateSystemID , objects , OIR . getSoldierInfoByName ( name ) , x , y ) ) ; return false ; } 
public java.util.List < de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState > process ( final de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState oldState , final de.uni_freiburg.informatik.ultimate.model.boogie.ast.Statement statement ) { mReturnState = new java.util.ArrayList <> () ; assert oldState != null ; assert statement != null ; mOldState = oldState ; mLhsVariable = null ; processStatement ( statement ) ; assert ( ( oldState . getVariables () . size () ) == 0 ) || ( ( mReturnState . size () ) != 0 ) ; return mReturnState ; } 
public void setDockBatteryController ( com.android.systemui.statusbar.policy.DockBatteryController dockBatteryController ) { com.android.systemui.DockBatteryMeterView v = ( ( com.android.systemui.DockBatteryMeterView ) ( findViewById ( R.id.dock_battery ) ) ) ; if ( dockBatteryController != null ) { v . setBatteryStateRegistar ( dockBatteryController ) ; if ( ( mDockBatteryLevel ) != null ) { mDockBatteryLevel . setBatteryStateRegistar ( dockBatteryController ) ; } } else { if ( v != null ) { removeView ( v ) ; } if ( ( mDockBatteryLevel ) != null ) { removeView ( mDockBatteryLevel ) ; mDockBatteryLevel = null ; } } } 
public void playMusic ( android.view.View view ) { if ( DEBUG ) android.util.Log . d ( com.vibejukebox.jukebox.activities.JukeboxPlaylistActivity.TAG , "playMusic -- (View)" ) ; android.widget.ImageButton playButton = ( ( android.widget.ImageButton ) ( findViewById ( R.id.playButton ) ) ) ; if ( mCurrentPlayerState.playing ) { mChangeTrack = false ; mPlayer . pause () ; playButton . setImageDrawable ( getResources () . getDrawable ( R.drawable.play ) ) ; } else { mPlayer . resume () ; mChangeTrack = true ; playButton . setImageDrawable ( getResources () . getDrawable ( R.drawable.pause ) ) ; } } 
private void populateContextFromAuthId ( java.lang.String authId ) { try { java.lang.String sessionId = authIdHelper . reconstructAuthId ( authId ) . getClaimsSet () . getClaim ( org.forgerock.openam.core.rest.authn.SESSION_ID , java.lang.String . class ) ; if ( org.apache.commons.lang.StringUtils . isEmpty ( sessionId ) ) { return; } java.lang.String contextId = getContextIdFromSessionId ( sessionId ) ; if ( org.apache.commons.lang.StringUtils . isNotEmpty ( contextId ) ) {} } catch ( org.forgerock.openam.core.rest.authn.exceptions.RestAuthException e ) { org.forgerock.openam.core.rest.authn.AuthenticationAccessAuditFilter.debug . warning ( "No session ID found when trying to audit an authentication request." ) ; } } 
public boolean collidesWithFace ( entities.Ball b ) { org.lwjgl.util.vector.Vector3f closest = toolbox.Maths . closestPtPointTriangle ( b . getPosition () , point1 , point2 , point3 ) ; org.lwjgl.util.vector.Vector3f . sub ( b . getPosition () , closest , dist ) ; if ( ( dist . length () ) <= ( entities.Ball.RADIUS ) ) return true ; return false ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( makeupCount ) < ( saveBitmap . size () ) ) { ( makeupCount ) ++ ; temp = saveBitmap . get ( makeupCount ) . copy ( temp . getConfig () , true ) ; imageView . setImageBitmap ( temp ) ; android.util.Log . d ( ( ( fyp.hkust.facet.activity.ColorizeFaceActivity.TAG ) + " redo " ) , ( ( ( saveBitmap . size () ) + " " ) + ( makeupCount ) ) ) ; } } 
public void doPowerup ( java.lang.String which ) { if ( which . equals ( "left" ) ) { if ( GameLogic.leftPlayerPowerup . isEmpty () ) return; else startLeftPowerup ( GameLogic.leftPlayerPowerup . pop () ) ; } else if ( which . equals ( "right" ) ) { if ( GameLogic.rightPlayerPowerup . isEmpty () ) return; else startRightPowerup ( GameLogic.rightPlayerPowerup . pop () ) ; } } 
private void firstRun ( int currentVersion ) { android.content.Intent activity = new android.content.Intent ( this , es.ugr.swad.swadroid.sync.AccountAuthenticator . class ) ; es.ugr.swad.swadroid.preferences.Preferences . setSyncTime ( java.lang.String . valueOf ( Constants.DEFAULT_SYNC_TIME ) ) ; startActivity ( activity ) ; es.ugr.swad.swadroid.preferences.Preferences . setLastVersion ( currentVersion ) ; firstRun = true ; es.ugr.swad.swadroid.preferences.Preferences . initializeSelectedCourse () ; } 
public static void setGoodNight ( org.springframework.scheduling.TaskScheduler scheduler , resources.internal.Hue hue ) { if ( hue . getScene () . getGoodNight () . isEnabled () ) { scheduler . schedule ( com.sonie.web.util.RunnableUtil . setGoodNight ( com.sonie.web.util.CronJobUtil.LOG , hue ) , new org.springframework.scheduling.support.CronTrigger ( com.sonie.web.util.DateUtil . getCronDate ( hue . getScene () . getGoodNight () . getTime () ) ) ) ; } } 
@ java.lang.Override public void render ( float delta ) { Gdx.gl . glClearColor ( 0 , 0 , 0 , 1 ) ; Gdx.gl . glClear ( GL30.GL_COLOR_BUFFER_BIT ) ; camera . update () ; game.batch . setProjectionMatrix ( camera.combined ) ; game.shapeRenderer . setProjectionMatrix ( camera.combined ) ; map . draw ( game.batch ) ; entityManager . draw () ; debugRenderer . render ( world , camera.combined ) ; } 
public void addLast ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } Deque < Item > . Node old = last ; last = new Node () ; last.item = item ; last.backward = old ; last.forward = null ; ( size ) ++ ; if ( ( size ) == 1 ) { first = last ; } else { old.forward = last ; } } 
public lib.Number push ( char digit ) { if ( ( ! ( this . hasDecimal ) ) || ( digit != '.' ) ) { this . hasDecimal = ( this . hasDecimal ) || ( digit == '.' ) ; this . state += digit ; } return this ; } 
private boolean hasHeader ( int position ) { if ( ( position == 0 ) && ( ( mAdapter . getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) ) { return true ; } int previous = position - 1 ; return ( ( mAdapter . getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) && ( ( mAdapter . getHeaderId ( position ) ) != ( mAdapter . getHeaderId ( previous ) ) ) ; } 
public stamboom.domain.Gezin getGezin ( int gezinsNr ) { if ( ( ( ( gezinnen ) != null ) && ( 1 <= gezinsNr ) ) && ( 1 <= ( gezinnen . size () ) ) ) { return gezinnen . get ( ( gezinsNr - 1 ) ) ; } return null ; } 
public void test_150_ACLCreateDeeperField ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry ) { try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldUpdate ( westyEntry . getGuid () , "test.deeper.field" , "fieldValue" , westyEntry ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( "Problem updating field: " , e ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( "Exception when we were not expecting it ACLCreateDeeperField: " , e ) ; } } 
boolean equals ( int itemID , int meta , net.minecraft.nbt.NBTTagCompound nbt ) { return ( ( ( this . itemID ) == itemID ) && ( ( this . meta ) == meta ) ) && ( ( ( this . nbt ) == nbt ) || ( ( ( this . nbt ) != null ) && ( this . nbt . equals ( nbt ) ) ) ) ; } 
private static java.lang.Class < ? > forName ( final java.lang.String directory , final java.lang.String name ) { try { final java.lang.Class < ? > cls = org.obicere.cc.util.Reflection.LOADER . loadClass ( name ) ; if ( cls != null ) { return cls ; } } catch ( final java.lang.Throwable ignored ) {} return org.obicere.cc.util.Reflection.DEFINER . attemptDefine ( directory , name ) ; } 
@ java.lang.Override public boolean onItemUse ( net.minecraft.item.ItemStack stack , @ org.jetbrains.annotations.NotNull net.minecraft.entity.player.EntityPlayer playerIn , @ org.jetbrains.annotations.NotNull net.minecraft.world.World worldIn , @ org.jetbrains.annotations.NotNull net.minecraft.util.BlockPos pos , net.minecraft.util.EnumFacing side , float hitX , float hitY , float hitZ ) { playerIn . triggerAchievement ( ModAchievements.achievementWandOfbuilding ) ; if ( worldIn.isRemote ) { MineColonies.proxy . openBuildToolWindow ( pos . offset ( side ) ) ; return true ; } return false ; } 
private boolean isOwnProfile ( javax.faces.context.FacesContext fctx ) { if ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) == userID ) { return true ; } } return false ; } 
private void initView () { mobileNumber = getIntent () . getStringExtra ( "NUMBER" ) ; android.widget.TextView mobileNum = getView ( R.id.editText_mobileNumber ) ; profilePic = getView ( R.id.profile_thumb ) ; mobileNum . setText ( ( ( getResources () . getString ( R.string.string_plus ) ) + ( mobileNumber ) ) ) ; emailEditText = getView ( R.id.editText_email ) ; nameEditText = getView ( R.id.editText_name ) ; } 
@ juja.microservices.teams.controller.PutMapping ( value = "/users/{uuid}" , produces = "application/json" ) public org.springframework.http.ResponseEntity < ? > dismissTeam ( @ juja.microservices.teams.controller.PathVariable java.lang.String uuid ) { logger . debug ( "Received dismiss team request. User id in Team: {}" , uuid ) ; juja.microservices.teams.entity.Team team = teamService . dismissTeam ( uuid ) ; logger . info ( "Team dismissed. Team Id: {}" , team . getId () ) ; logger . debug ( "Request dismiss team returned {}" , team . toString () ) ; return org.springframework.http.ResponseEntity . ok ( team ) ; } 
@ java.lang.Override public fi.nls.oskari.domain.map.view.View getViewWithConf ( java.lang.String viewName ) { if ( ( viewName != null ) && ( ! ( viewName . isEmpty () ) ) ) { for ( fi.nls.oskari.domain.map.view.View item : list ) { if ( viewName . equals ( item . getName () ) ) { return item ; } } } return null ; } 
public com.buyhatke.core.Entry get ( java.lang.String key ) { com.buyhatke.core.Entry entry = getInMemoryEntry ( key ) ; if ( entry == null ) { entry = checkInFileSystem ( key ) ; if ( entry != null ) { if ( ! ( com.buyhatke.core.PersistenceManager . isExpired ( entry ) ) ) { this . put ( entry ) ; } else { return null ; } } } return entry ; } 
public boolean isViewUnder ( android.view.View view , int x , int y ) { if ( view == null ) { return false ; } return ( ( ( x >= ( view . getX () ) ) && ( x < ( ( view . getX () ) + ( view . getWidth () ) ) ) ) && ( y >= ( view . getY () ) ) ) && ( y < ( ( view . getY () ) + ( view . getHeight () ) ) ) ; } 
private com.questdb.ql.parser.RecordSource compile ( com.questdb.ql.parser.QueryModel model , com.questdb.factory.JournalReaderFactory factory ) throws com.questdb.ex.JournalException , com.questdb.ex.ParserException { return limit ( order ( selectColumns ( ( ( model . getJoinModels () . size () ) > 1 ? optimise ( model , factory ) . compileJoins ( model , factory ) : compileSingleOrSubQuery ( model , factory ) ) , model ) , model ) , model ) ; } 
public DataStructure.LinkedList2 < T > . Node search ( T value ) { DataStructure.LinkedList2 < T > . Node x = nil.next ; nil.key = value ; while ( ( x.key ) != value ) { x = x.next ; } nil.key = null ; if ( x == ( nil ) ) { return null ; } return x ; } 
private void changeValue ( boolean add ) { oldValue = value ; if ( add ) { value = java.lang.Math . min ( maxValue , ( ( value ) + ( step ) ) ) ; } else { value = java.lang.Math . max ( minValue , ( ( value ) - ( step ) ) ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener . onValueChanged ( this , value , oldValue , minValue , maxValue , false ) ; } } 
public be.willima.jrpgdatabase.model.JRPGTile getTile ( int x , int y ) throws java.lang.IndexOutOfBoundsException { be.willima.jrpgdatabase.model.JRPGTile tile = null ; if ( ( ( ( x < 0 ) || ( x >= ( this . width ) ) ) || ( y < 0 ) ) || ( y >= ( this . height ) ) ) { throw new java.lang.IndexOutOfBoundsException ( "Tile not within map region!" ) ; } else { tile = this . tiles [ x ] [ y ] ; } return tile ; } 
@ java.lang.Override public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) { if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent intent = new android.content.Intent ( getBaseContext () , a15s.android.datamatiker.mini_projekt1.TestWaresList . class ) ; intent . putExtra ( ShoppingListDetail.EXTRA_LISTNO , list_id ) ; intent . putExtra ( TestWaresList.EXTRA_STORE_ID , ( ( int ) ( id ) ) ) ; startActivity ( intent ) ; } 
private void fromPayload ( java.lang.String partContent ) { java.lang.String [] parts = partContent . split ( Constants.CRLFCRLF , 2 ) ; if ( 2 == ( parts.length ) ) { parseHeaders ( parts [ 0 ] ) ; mContent = parts [ 1 ] . substring ( 0 , parts [ 1 ] . lastIndexOf ( Constants.CRLF ) ) ; } } 
private void setCelebFields ( com.example.jeka.movieshelper.model.Celebrity celebrity , java.lang.String jsonValue , java.lang.String value ) { switch ( jsonValue ) { case com.example.jeka.movieshelper.network.CelebFetch.PERSON_NAME : celebrity . setName ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIRTHDAY : celebrity . setBirthday ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_PLACE_OF_BIRTH : celebrity . setPlaceOfBirth ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_BIOGRAPHY : celebrity . setBiography ( value ) ; break; case com.example.jeka.movieshelper.network.CelebFetch.PERSON_HOMEPAGE : celebrity . setHomepage ( value ) ; break; } } 
@ java.lang.Override public void onMeasure ( int widthSpec , int heightSpec ) { super . onMeasure ( widthSpec , heightSpec ) ; if ( ( pullView ) != null ) { pullView . measure ( widthSpec , 0 ) ; setMeasuredDimension ( getMeasuredWidth () , ( ( getMeasuredHeight () ) + ( pullView . getMeasuredHeight () ) ) ) ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference , java.lang.Object data ) { final int pinStringLength = data . toString () . length () ; if ( pinStringLength != ( info.dvkr.screenstream.SettingsActivity.PIN_DIGITS_COUNT ) ) { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , getResources () . getString ( R.string.pin_digits_count ) , Toast.LENGTH_LONG ) . show () ; return false ; } return true ; } 
@ java.lang.Override public boolean leaveGroup ( long userId , long courseId , long courseSkuId ) { cn.momia.api.im.dto.Group group = queryGroup ( courseId , courseSkuId ) ; if ( ! ( group . exists () ) ) return false ; if ( doLeaveGroup ( userId , group . getGroupId () ) ) { deleteGroupMembersLog ( group . getGroupId () , com.google.common.collect.Sets . newHashSet ( userId ) ) ; return true ; } return false ; } 
protected java.lang.String sendRequest ( java.net.URL resource ) throws java.lang.Exception { final java.lang.String json = com.google.common.io.Resources . toString ( resource , com.google.common.base.Charsets.UTF_8 ) ; com.google.api.client.http.HttpContent content = com.google.api.client.http.ByteArrayContent . fromString ( "application/json" , json ) ; com.google.api.client.http.HttpRequest request = requestFactory . buildPostRequest ( url , content ) ; com.google.api.client.http.HttpResponse response = request . execute () ; return com.google.common.io.CharStreams . toString ( new java.io.InputStreamReader ( response . getContent () ) ) ; } 
public void changeState ( java.lang.String recordingId , java.lang.String state ) { if ( state . equals ( Recording.STATE_PUBLISHED ) ) { changeState ( unpublishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_UNPUBLISHED ) ) { changeState ( publishedDir , recordingId , state ) ; } else if ( state . equals ( Recording.STATE_DELETED ) ) { changeState ( publishedDir , recordingId , state ) ; changeState ( unpublishedDir , recordingId , state ) ; changeState ( deletedDir , recordingId , state ) ; } } 
@ java.lang.Override public io.netty.util.concurrent.Future < java.lang.Boolean > removeAllAsync ( java.util.Collection < ? > c ) { if ( c . isEmpty () ) { return org.redisson.RedissonSet . newSucceededFuture ( false ) ; } java.util.List < java.lang.Object > args = new java.util.ArrayList < java.lang.Object > ( ( ( c . size () ) + 1 ) ) ; args . add ( getName () ) ; args . addAll ( c ) ; return commandExecutor . writeAsync ( getName () , codec , RedisCommands.SREM_SINGLE , args . toArray () ) ; } 
@ java.lang.Override public void setBrightness ( final int pRenderLayerIndex , final double pBrightness ) { mBrightness [ pRenderLayerIndex ] = ( ( float ) ( clearvolume.renderer.ClearVolumeRendererBase . clamp ( pBrightness , 0 , ( ( getBytesPerVoxel () ) == 1 ? 16 : 256 ) ) ) ) ; notifyUpdateOfVolumeRenderingParameters () ; } 
protected void onPostExecute ( java.lang.Boolean result ) { loadingDialog . cancel () ; if ( result ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; intent . setType ( "text/plain" ) ; intent . putExtra ( Intent.EXTRA_STREAM , android.net.Uri . fromFile ( targetFile ) ) ; startActivity ( intent ) ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode == ( com.ww23.l_band.ListenActivity.REQUEST_ENABLE_BT ) ) && ( resultCode == ( android.app.Activity.RESULT_CANCELED ) ) ) { toast ( getString ( R.string.deny_open_bluetooth ) ) ; finish () ; return; } super . onActivityResult ( requestCode , resultCode , data ) ; } 
public void add ( int data ) { ( this . size ) ++ ; if ( ( this . front ) == null ) { this . front = new QueueNode ( data ) ; } else { QueueNode current = this . front ; while ( ( current.next ) != null ) { current = current.next ; } current.next = new QueueNode ( data ) ; } } 
private static java.lang.String filterChars ( java.lang.String s ) { if ( s == null ) { return null ; } java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( char c : s . toCharArray () ) { if ( ( "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" . indexOf ( c ) ) >= 0 ) { sb . append ( c ) ; } } return sb . toString () ; } 
public void createDirIfNotExists ( java.lang.String dirPath ) throws org.seagrid.desktop.connectors.storage.SftpException { java.lang.String pwd = channelSftp . pwd () ; channelSftp . cd ( "/" ) ; java.lang.String [] folders = dirPath . split ( "/" ) ; for ( java.lang.String folder : folders ) { if ( ( folder . length () ) > 0 ) { try { channelSftp . cd ( folder ) ; } catch ( org.seagrid.desktop.connectors.storage.SftpException e ) { channelSftp . mkdir ( folder ) ; channelSftp . cd ( folder ) ; } } } channelSftp . cd ( pwd ) ; } 
public boolean checkTuple ( com.github.dakusui.jcunit.core.tuples.Tuple tuple ) throws com.github.dakusui.jcunit.exceptions.UndefinedSymbol { com.github.dakusui.jcunit.fsm.ScenarioSequence < SUT > seq = new com.github.dakusui.jcunit.fsm.ScenarioSequence.BuilderFromTuple < SUT > () . setTuple ( tuple ) . setFSMName ( this . fsmName ) . setHistoryLength ( this . historyLength ) . build () ; return checkFSM ( this . fsmName , seq ) ; } 
@ java.lang.Override public boolean onLongClick ( android.view.View v ) { if ( ! ( v . isInTouchMode () ) ) return false ; if ( ( mNextPage ) != ( INVALID_PAGE ) ) return false ; if ( ( ! ( mLauncher . isAllAppsVisible () ) ) || ( mLauncher . getWorkspace () . isSwitchingState () ) ) return false ; return beginDragging ( v ) ; } 
public java.lang.String arrayToString ( java.lang.Object [] array ) { java.lang.StringBuilder buffer = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { if ( i > 0 ) { buffer . append ( dk.lessismore.nojpa.reflection.attributeconverters.AttributeConverter.arraySeparator ) ; } buffer . append ( objectToString ( array [ i ] ) ) ; } return buffer . toString () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "sltMTechDetailListAjax" } , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.abilists.bean.para.profile.MTechDetailListAjax sltMTechDetailListAjax ( @ org.springframework.web.bind.annotation.RequestBody com.abilists.bean.para.admin.SltMTechDetailPara sltMTechDetailPara , javax.servlet.http.HttpSession session ) throws java.lang.Exception { this . handleSessionInfo ( session , sltMTechDetailPara ) ; sltMTechDetailPara . setMlCode ( sltMTechDetailPara . getLang () ) ; java.util.List < com.abilists.bean.model.MTechDetailModel > mTechDetailList = adminMasterService . sltMTechDetailList ( sltMTechDetailPara ) ; logger . info ( ( "mTechDetailList size = " + ( mTechDetailList . size () ) ) ) ; com.abilists.bean.para.profile.MTechDetailListAjax mTechDetailListAjax = new com.abilists.bean.para.profile.MTechDetailListAjax () ; mTechDetailListAjax . setmTechDetailList ( mTechDetailList ) ; return mTechDetailListAjax ; } 
public boolean appendToFile ( java.lang.String s ) { try { java.nio.file.Files . write ( this . f . toPath () , s . getBytes () , java.nio.file.StandardOpenOption.APPEND ) ; return true ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return false ; } 
@ java.lang.Override public void saveUser ( com.tribuo.backend.jpa.User user ) { user . setPassword ( bCryptPasswordEncoder . encode ( user . getPassword () ) ) ; user . setActive ( 1 ) ; com.tribuo.backend.jpa.Role userRole = roleRepo . findByRole ( "ADMIN" ) ; user . setRoles ( new java.util.HashSet < com.tribuo.backend.jpa.Role > ( java.util.Arrays . asList ( userRole ) ) ) ; usuRepo . save ( user ) ; } 
public static org.deidentifier.arx.metric.Metric < org.deidentifier.arx.metric.v2.AbstractILMultiDimensional > createPrecomputedEntropyMetric ( double threshold , boolean monotonic , org.deidentifier.arx.metric.Metric.AggregateFunction function ) { if ( monotonic ) { return new org.deidentifier.arx.metric.v2.MetricMDNUEntropyPotentiallyPrecomputed ( threshold , 0.5 , function ) ; } else { return new org.deidentifier.arx.metric.v2.MetricMDNUNMEntropyPotentiallyPrecomputed ( threshold , 0.5 , function ) ; } } 
@ java.lang.Override public boolean loadActiveUserInfo ( java.lang.Object context ) { android.content.SharedPreferences appPrefs = getAppSharedPreferences ( ( ( android.content.Context ) ( context ) ) ) ; currentUsername = appPrefs . getString ( com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTUSER , null ) ; currentAuth = appPrefs . getString ( com.ustadmobile.port.android.impl.UstadMobileSystemImplAndroid.KEY_CURRENTAUTH , null ) ; if ( ( currentUsername ) != null ) { xapiAgent = com.ustadmobile.nanolrs.core.endpoints.XapiAgentEndpoint . createOrUpdate ( context , null , currentUsername , com.ustadmobile.core.util.UMTinCanUtil . getXapiServer ( context ) ) ; } this . userPreferences = null ; return true ; } 
public crazy.vo.User update ( crazy.vo.User user ) { if ( ( ( user . getEmail () ) == null ) || ( ! ( user . getEmail () . equals ( email ) ) ) ) { user . setEmail ( email ) ; user . setEmailActivated ( false ) ; } user . setPhone ( phone ) ; user . setSociolname ( sociolname ) ; user . setStudentid ( studentid ) ; user . setProvinceid ( provinceid ) ; user . setCollegeid ( collegeid ) ; user . setInstituteid ( instituteid ) ; return user ; } 
public void editPatientProf ( android.view.View v ) { if ( ! ( mEditTextCustomerFName . isEnabled () ) ) { setFieldsEnability ( true ) ; if ( ( mAddrLayout . getVisibility () ) != ( android.view.View.VISIBLE ) ) { com.extenprise.mapp.medico.util.Utility . collapseExpand ( mAddrLayout ) ; com.extenprise.mapp.medico.util.Utility . collapseExpand ( mContLay ) ; } } else { setFieldsEnability ( false ) ; } } 
public void soundDb ( double ampl ) { if ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) > 0 ) values . add ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ; android.util.Log . d ( "Sound" , java.lang.String . valueOf ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ) ; } 
public boolean remove ( net.osmand.osm.edit.Relation.RelationMember key ) { if ( ( members ) != null ) { java.util.Iterator < net.osmand.osm.edit.Relation.RelationMember > it = members . iterator () ; while ( it . hasNext () ) { net.osmand.osm.edit.Relation.RelationMember rm = it . next () ; if ( rm == key ) { it . remove () ; return true ; } } } return false ; } 
@ java.lang.Override public java.util.Optional < java.lang.String > start ( de.chrthms.hmatic4j.event.client.HMEventExecution execution ) { this . execution = execution ; de.chrthms.hmatic4j.event.core.HMEventRegistry registry = de.chrthms.hmatic4j.event.core.impl.HMEventRegistryImpl . getInstance () ; registryId = registry . register ( this ) ; if ( onceOnly ) { return java.util.Optional . empty () ; } return java.util.Optional . of ( registryId ) ; } 
@ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { biospectra.classify.beans.ClassificationResult bresult = new biospectra.classify.beans.ClassificationResult ( header , sequence , result , type , taxonRank ) ; java.lang.String json ; try { json = serializer . toJson ( bresult ) ; summary . report ( bresult ) ; synchronized ( bw ) { bw . write ( ( json + "\n" ) ) ; } } catch ( java.io.IOException ex ) { biospectra.classify.ClassifierClient.LOG . error ( "Cannot write to a file" , ex ) ; } } 
private static void connectToPeer ( java.lang.String peerName , int peerPort ) { try { java.rmi.registry.Registry theirReg = java.rmi.registry.LocateRegistry . getRegistry ( "localhost" , peerPort ) ; Peer.boundPeerStub = ( ( PeerInterface ) ( theirReg . lookup ( peerName ) ) ) ; Peer.peerStubs . put ( peerName , Peer.boundPeerStub ) ; java.lang.System.out . println ( ( "Found peer " + peerName ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public boolean checkAvailability ( int position , java.lang.String posis ) { if ( map1 [ position ] . equals ( posis ) ) { return true ; } else { switch ( map1 [ position ] ) { case "d" : return false ; case "e" : return false ; case "f" : return false ; case "g" : return false ; case "h" : return false ; case "i" : return false ; case "3" : return false ; case "5" : return false ; default: return true ; } } } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( ( null != ( canvasHandler ) ) && ( null != target ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return false ; } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { omacka = 0 ; switch ( position ) { case 0 : setIngedience ( val ) ; break; case 1 : omacka += 1 ; setIngedience ( val ) ; break; case 2 : omacka += 2 ; setIngedience ( val ) ; break; } } 
@ java.lang.Override public void onLocationChange ( android.location.Location location , gps.fhv.at.gps_hawk.domain.events.NewLocationEventData data ) { data . setTrack ( mCurrentTrack ) ; gps.fhv.at.gps_hawk.domain.Waypoint waypoint = gps.fhv.at.gps_hawk.workers.WaypointFactory . getInstance () . createWaypoint ( location , data ) ; android.content.Intent intent = new android.content.Intent ( gps.fhv.at.gps_hawk.Constants.BROADCAST_NEW_WAYPOINT ) ; intent . putExtra ( Constants.EXTRA_WAYPOINT , waypoint ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( mContext ) . sendBroadcast ( intent ) ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { android.app.Notification noti = new android.app.Notification.Builder ( this ) . setContentTitle ( "^____^" ) . setContentText ( "I'm Your Pet!" ) . setSmallIcon ( R.mipmap.ic_launcher ) . setOngoing ( true ) . build () ; startForeground ( com.air.petphone.KillNotificationService.NOTIFICATION_ID , noti ) ; return START_STICKY ; } 
private void moveBy ( double move ) { nextx = ( x ) + ( ( dir [ 0 ] ) * move ) ; nexty = ( y ) + ( ( dir [ 1 ] ) * move ) ; intx = ( ( int ) ( nextx ) ) ; inty = ( ( int ) ( nexty ) ) ; if ( ( nextx ) < 0 ) ( intx ) -- ; if ( ( nexty ) < 0 ) ( inty ) -- ; } 
@ java.lang.Override public boolean containsIndex ( java.lang.String indexId ) { if ( threadSafe ) { lock . readLock () . lock () ; try { return indexes . containsKey ( indexId ) ; } finally { lock . readLock () . unlock () ; } } else { return indexes . containsKey ( indexId ) ; } } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { try { io.punchtime.punchtime.data.Pulse p = dataSnapshot . getChildren () . iterator () . next () . getValue ( io.punchtime.punchtime.data.Pulse . class ) ; updateCheckinUI ( p ) ; if ( ( p . getCheckout () ) == 0 ) setCheckedIn ( true ) ; } catch ( java.lang.Exception e ) { updateCheckinUI ( null ) ; setCheckedIn ( false ) ; } } 
private void startDownload ( java.lang.String idLesson , java.lang.String url , java.lang.String downloadType ) { intentDownloadAll = new android.content.Intent ( getActivity () , com.erpdevelopment.vbvm.service.DownloadAllService . class ) ; intentDownloadAll . putExtra ( "idLesson" , idLesson ) ; intentDownloadAll . putExtra ( "url" , url ) ; intentDownloadAll . putExtra ( "downloadType" , downloadType ) ; getActivity () . startService ( intentDownloadAll ) ; com.erpdevelopment.vbvm.service.DownloadAllService . incrementCount () ; } 
private com.google.gcloud.testing.LocalDnsHelper.Response handleZoneList ( com.sun.net.httpserver.HttpExchange exchange ) { java.lang.String path = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT . relativize ( exchange . getRequestURI () ) . getPath () ; java.lang.String [] tokens = path . split ( "/" ) ; java.lang.String projectId = tokens [ 0 ] ; java.lang.String query = com.google.gcloud.testing.LocalDnsHelper.BASE_CONTEXT . relativize ( exchange . getRequestURI () ) . getQuery () ; java.util.Map < java.lang.String , java.lang.Object > options = com.google.gcloud.testing.OptionParsersAndExtractors . parseListZonesOptions ( query ) ; return listZones ( projectId , options ) ; } 
@ java.lang.Override public int compare ( rdoshi.codepath.todoapp.TaskItem t1 , rdoshi.codepath.todoapp.TaskItem t2 ) { if ( ( t1 . getDueDate () ) == null ) { return ( t2 . getDueDate () ) == null ? 0 : - 1 ; } if ( ( t2 . getDueDate () ) == null ) { return 1 ; } return t2 . getDueDate () . compareTo ( t1 . getDueDate () ) ; } 
public void addFirstNode ( int data ) { if ( ( size ) == 0 ) { head = new a3.LinkedList.Node ( data ) ; head.next = tail ; tail = head ; } else { a3.LinkedList.Node newNode = new a3.LinkedList.Node ( data ) ; newNode.next = head ; head = newNode ; } ++ ( size ) ; } 
public static java.lang.String toPascalCase ( java.lang.String string ) { java.lang.StringBuilder nb = new java.lang.StringBuilder () ; for ( java.lang.String word : com.psddev.dari.util.StringUtils . splitString ( string ) ) { if ( ! ( word . isEmpty () ) ) { nb . append ( java.lang.Character . toUpperCase ( word . charAt ( 0 ) ) ) . append ( word . substring ( 1 ) ) ; } } return nb . toString () ; } 
@ java.lang.Override public io.reactivex.ObservableSource < prada.lab.android.pingo.model.Tag > apply ( prada.lab.android.pingo.model.Tag tag ) throws java.lang.Exception { prada.lab.android.pingo.model.PingoPlace place = findPlaceById ( placeId ) ; place . getTags () . add ( tag ) ; mPlaces . remove ( place ) ; mPlaces . add ( 0 , place ) ; mPlacesSubject . onNext ( mPlaces ) ; java.util.List < prada.lab.android.pingo.model.Tag > tags = mTagSub . getValue () ; tags . add ( tag ) ; mTagSub . onNext ( tags ) ; return io.reactivex.Observable . just ( tag ) ; } 
@ java.lang.Override public void setProperty ( java.lang.String s , java.lang.Object o ) { try { java.lang.String attr = replaceAspectAttrSep ( s ) ; int attrDataType = sysObject . getAttrDataType ( attr ) ; sysObject . setValue ( attr , toDfValue ( o , attrDataType ) ) ; } catch ( mc.dctm.el.identifier.context.DfException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
private static boolean dummyAccountAlreadyAdded ( android.accounts.Account [] accountsByType ) { for ( int i = 0 ; i < ( accountsByType.length ) ; i ++ ) { if ( accountsByType [ i ] . name . equals ( com.philosophicalhacker.philhackernews.PhilHackerNewsApplication.ACCOUNT_NAME ) ) { return true ; } } return false ; } 
public java.lang.String getNodeName ( java.lang.String id ) { for ( int i = 0 ; i < ( nodeList . size () ) ; i ++ ) { if ( nodeList . get ( i ) . getID () . equals ( id ) ) { return nodeList . get ( i ) . getName () ; } } return null ; } 
@ java.lang.Override public void write ( final me.noize.chemistry.io.Entry < T > entry ) throws me.noize.chemistry.io.ChemistryIOException { if ( ! ( this . streams . isEmpty () ) ) { if ( this . streams . peek () . hasEntries () ) { this . streams . peek () . write ( entry ) ; } else { me.noize.chemistry.io.EntryOutputStream < T > old = this . streams . poll () ; old . close () ; this . write ( entry ) ; } } else { throw new me.noize.chemistry.io.ChemistryIOException ( "Stream could not be advanced" ) ; } } 
public int adjustComputerBuilders ( int amount ) { int difference = amount ; if ( ( ( computerBuilders ) < ( java.lang.Math . abs ( difference ) ) ) && ( amount < 0 ) ) { difference = ( - ( computerBuilders ) ) + 1 ; computerBuilders = 1 ; } else { computerBuilders += amount ; } if ( difference != 0 ) gi . setComputerBuildersLabelChangeText ( difference ) ; return difference ; } 
public static games.strategy.triplea.ai.proAI.data.ProBattleResult calculateBattleResults ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { final games.strategy.triplea.ai.proAI.data.ProBattleResult result = games.strategy.triplea.ai.proAI.util.ProBattleUtils . checkIfNoAttackersOrDefenders ( t , attackingUnits , defendingUnits ) ; if ( result != null ) { return result ; } return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits ) ; } 
@ java.lang.Override public void done ( com.parse.ParseObject parseObject , com.parse.ParseException e ) { if ( e == null ) { java.lang.System.out . println ( "null score" ) ; com.parse.ParseObject userscore = new com.parse.ParseObject ( "Scores" ) ; userscore . put ( "score" , com.cards.flash.testez.TallyScore . getScore () ) ; userscore . put ( "user" , com.parse.ParseUser . getCurrentUser () ) ; saveScoreObject ( userscore ) ; com.cards.flash.testez.TallyScore . resetScore () ; } else {} } 
@ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{password}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , @ com.chronicle.controller.PathVariable java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; java.lang.System.out . println ( user . getPassword () ) ; java.lang.System.out . println ( password ) ; if ( user . getPassword () . equals ( password ) ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } 
@ java.lang.Override public void onConfigurationChanged ( android.content.res.Configuration newConfig ) { super . onConfigurationChanged ( newConfig ) ; if ( ( notFirstRun ) || ( ! ( com.brainicism.projectrito.MainActivity.summonerName . equals ( "" ) ) ) ) { com.brainicism.projectrito.MainActivity.checkValidSummoner check = new com.brainicism.projectrito.MainActivity.checkValidSummoner () ; check . execute () ; } } 
public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos < 0 ) || ( pos >= ( mAdapter . getItemCount () ) ) ) return; if ( selected ) { mSelectedItems . put ( pos , selected ) ; } else { mSelectedItems . delete ( pos ) ; } view . setSelected ( selected ) ; } 
public static void logShortError ( java.lang.Exception e , int lines ) { java.lang.String s = e . toString () ; int i = 0 ; for ( java.lang.StackTraceElement er : e . getStackTrace () ) { if ( i == lines ) { break; } s += "\n\tat " + ( er . toString () ) ; i ++ ; } e . printStackTrace () ; global.record.Log . log ( "ERROR" , s ) ; } 
@ java.lang.Override public synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public org.backmeup.model.BackMeUpUser findByName ( java.lang.String username ) { javax.persistence.Query q = em . createQuery ( "SELECT u FROM BackMeUpUser u WHERE username = :username" ) ; q . setParameter ( "username" , username ) ; java.util.List < org.backmeup.model.BackMeUpUser > users = q . getResultList () ; org.backmeup.model.BackMeUpUser u = ( ! ( users . isEmpty () ) ) ? users . get ( 0 ) : null ; return u ; } 
public static java.lang.String [] toMhz ( java.lang.String . . . values ) { java.lang.String [] frequency = new java.lang.String [ values.length ] ; for ( int i = 0 ; i < ( values.length ) ; i ++ ) { try { frequency [ i ] = ( ( java.lang.Integer . parseInt ( values [ i ] . trim () ) ) / ( 1000 * 1000 ) ) + " Mhz" ; } catch ( java.lang.NumberFormatException nfe ) { nfe . printStackTrace () ; } } return frequency ; } 
private java.lang.Double whichOperator ( java.lang.String inputOperator , java.lang.String num1 , java.lang.String num2 ) { if ( inputOperator . equals ( "+" ) ) return addFn ( num1 , num2 ) ; else if ( inputOperator . equals ( "-" ) ) return subtractFn ( num1 , num2 ) ; else if ( inputOperator . equals ( "*" ) ) return multiplyFn ( num1 , num2 ) ; else return divideFn ( num1 , num2 ) ; } 
private java.lang.String subtract ( java.lang.String x , java.lang.String y ) { java.math.BigDecimal i = new java.math.BigDecimal ( getValue ( x ) . toString () ) ; java.math.BigDecimal j = new java.math.BigDecimal ( getValue ( y ) . toString () ) ; java.math.BigDecimal k = j . subtract ( i ) ; k = k . stripTrailingZeros () ; return k . toPlainString () ; } 
public final void moveItem ( T item , int toPosition ) { int fromPosition = mItems . indexOf ( item ) ; mItems . remove ( fromPosition ) ; mItems . add ( toPosition , item ) ; com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter . notifyItemMoved ( fromPosition , toPosition ) ; if ( ( mCallback ) != null ) { mCallback . onDynamicCardPositionChanged ( this , fromPosition , toPosition ) ; } } 
public void send ( java.io.DataOutputStream os ) { byte [] stringBytes = playerid . getBytes () ; try { os . writeLong ( timestamp ) ; os . write ( stringBytes.length ) ; os . write ( stringBytes , 0 , stringBytes.length ) ; os . writeInt ( command ) ; os . writeInt ( xcord ) ; os . write ( ycord ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void parseRobotoReply ( java.lang.String resp ) { java.lang.String cmd = resp . substring ( 0 , 1 ) ; if ( cmd . equals ( MsRobotoLab4.ROBOTO_SIMPLE_REPLY ) ) { message = "Success - command done" ; } else if ( cmd . equals ( MsRobotoLab4.ROBOTO_RESULT_REPLY ) ) { message = "Success - " ; result = java.lang.Integer . parseInt ( resp . split ( " " ) [ 1 ] ) ; } else { message = "Error - " ; message += resp ; } } 
public com.brashmonkey.spriter.file.Reference findReferenceByFileNameAndFolder ( java.lang.String fileName , java.lang.String folderName , boolean withoutExtension ) { com.brashmonkey.spriter.file.Reference [] refs = this . findReferencesByFolderName ( folderName ) ; for ( com.brashmonkey.spriter.file.Reference ref : refs ) { java.lang.String file = ref.fileName . replaceAll ( ( folderName + "/" ) , "" ) ; if ( withoutExtension ) file = file . replaceAll ( ".png" , "" ) ; if ( file . toLowerCase () . equals ( fileName ) ) return ref ; } return null ; } 
public static java.lang.String PaymentAuth ( long cardAmount , int cash , int TotalPay ) { java.util.Scanner ms = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( "Payment Option: Cash or Card?" ) ; java.lang.String option = ms . next () ; if ( option == "Cash" ) { if ( cash == TotalPay ) { return "Success! Payment has been authorized" ; } else { return "Payment fail! Please check amount" ; } } else if ( option == "Card" ) { if ( cardAmount == TotalPay ) { return "Success! Payment has been authorized" ; } else { return "Payment fail! Please check card or amount" ; } } return null ; } 
void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { if ( l >= r ) { return; } int m = ( l + r ) / 2 ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , m , r ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.util.Log . i ( com.polito.mad17.madmax.activities.ProfileEdit.TAG , "save clicked" ) ; if ( updateAccount () ) { android.widget.Toast . makeText ( this , "Saved" , Toast.LENGTH_SHORT ) . show () ; android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.polito.mad17.madmax.activities.MainActivity . class ) ; startActivity ( i ) ; finish () ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( requestCode == ( felixwiemuth.lincal.ui.AddCalendarActivity.RESULT_CODE_SELECT_FILE ) ) { if ( data != null ) { int takeFlags = data . getFlags () ; takeFlags &= ( android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION ) | ( android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION ) ; getContentResolver () . takePersistableUriPermission ( data . getData () , takeFlags ) ; fileEditText . setText ( data . getDataString () ) ; } } } 
public static void delete ( java.io.File f ) throws java.io.IOException { if ( f == null ) return; if ( f . isDirectory () ) { for ( java.io.File c : f . listFiles () ) { org.ohmage.Utilities . delete ( c ) ; } } f . delete () ; } 
@ android.support.annotation.Nullable public android.os.Bundle onProvideTransientParamsImpl ( @ android.support.annotation.NonNull V v , @ android.support.annotation.NonNull android.view.View view , @ android.support.annotation.Nullable android.os.Bundle params ) { VP presenter = getPresenter ( v , false ) ; allowScreenViewCalls = true ; android.os.Bundle b = v . onProvideParams ( view , params ) ; if ( b != null ) params = b ; allowScreenViewCalls = false ; if ( presenter != null ) { b = presenter . onProvideTransientParams ( v , view , params ) ; if ( b != null ) params = b ; } return params ; } 
public boolean validate ( Model.Tile.BuildTile target , Model.Utility.ILocation loc ) { if ( ( slots . isEmpty () ) && ( buildMap . locationInBounds ( loc ) ) ) { return true ; } if ( ( ( buildMap . tileExistsAt ( loc ) ) || ( ! ( this . slotExistsAt ( loc ) ) ) ) || ( ! ( buildMap . locationInBounds ( loc ) ) ) ) { return false ; } Model.Map.Slot mySlot = slots . get ( loc ) ; return mySlot . checkMatch ( target . getEdges () ) ; } 
@ java.lang.Override public void dragTo ( final illarion.client.world.interactive.InteractiveInventorySlot targetSlot ) { if ( ! ( isValidItem () ) ) { return; } final illarion.client.net.client.DragInvInvCmd cmd = illarion.client.net.CommandFactory . getInstance () . getCommand ( CommandList.CMD_DRAG_INV_INV , illarion.client.net.client.DragInvInvCmd . class ) ; cmd . setDrag ( getSlotId () , targetSlot . getSlotId () ) ; cmd . send () ; } 
@ java.lang.Override @ org.springframework.web.bind.annotation.RequestMapping ( value = "/adduser" ) public api.ConfirmationMessage addUser ( @ org.springframework.web.bind.annotation.RequestParam ( value = "userTypeId" ) int userTypeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "calamityAssigneeId" ) int calamityAssigneeId , @ org.springframework.web.bind.annotation.RequestParam ( value = "buildingId" ) int buildingId , @ org.springframework.web.bind.annotation.RequestParam ( value = "username" ) java.lang.String username , @ org.springframework.web.bind.annotation.RequestParam ( value = "password" ) java.lang.String password , @ org.springframework.web.bind.annotation.RequestParam ( value = "email" ) java.lang.String email , @ org.springframework.web.bind.annotation.RequestParam ( value = "city" ) java.lang.String city , @ org.springframework.web.bind.annotation.RequestParam ( value = "token" ) java.lang.String token ) { return userLogic . addUser ( userTypeId , calamityAssigneeId , buildingId , username , password , email , city , token ) ; } 
private java.lang.String readCommandOutput ( java.lang.Process process ) { java.lang.String s ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try { java.io.BufferedReader stdInput = new java.io.BufferedReader ( new java.io.InputStreamReader ( process . getInputStream () ) ) ; while ( ( s = stdInput . readLine () ) != null ) { sb . append ( s ) . append ( "\n" ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } 
private boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; } 
public java.util.Optional < java.lang.String > submitComment ( java.lang.String text , net.dean.jraw.models.Submission submission ) { try { final java.lang.String commentId = accountManager . reply ( submission , text ) ; com.fallingdutchman.youtuberedditbot.authentication.reddit.jraw.RedditManager.log . info ( java.lang.String . format ( "posted comment to %s on /r/%s, with id %s" , submission . getId () , submission . getSubredditName () , commentId ) ) ; return java.util.Optional . of ( commentId ) ; } catch ( net.dean.jraw.ApiException e ) { com.fallingdutchman.youtuberedditbot.authentication.reddit.jraw.RedditManager.log . error ( "was unable to post comment" , e ) ; return java.util.Optional . empty () ; } } 
@ java.lang.Override public boolean contains ( java.lang.Object o ) { if ( o instanceof java.lang.Number ) { java.lang.Number n = ( ( java.lang.Number ) ( o ) ) ; int index = n . intValue () ; return ( ( index > 0 ) && ( index < ( selectedIndices . length () ) ) ) && ( selectedIndices . get ( index ) ) ; } return false ; } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { java.lang.String selectedItemText = ( ( java.lang.String ) ( parent . getItemAtPosition ( position ) ) ) ; if ( position > 0 ) { category = selectedItemText ; } } 
private void validateEditing ( com.webapplication.entity.AuctionItem auctionItem ) throws java.lang.Exception { if ( ( auctionItem . getBidsNo () ) != 0 ) throw new com.webapplication.exception.auctionitem.AuctionAlreadyInProgressException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_ALREADY_IN_PROGRESS ) ; if ( ( ( auctionItem . getEndDate () ) != null ) && ( new java.util.Date () . after ( auctionItem . getEndDate () ) ) ) throw new com.webapplication.exception.auctionitem.AuctionExpiredException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_EXPIRED ) ; } 
private au.com.mutopia.acs.models.c3ml.C3mlEntity buildEntity ( de.micromata.opengis.kml.v_2_2_0.Document document ) throws au.com.mutopia.acs.exceptions.ConversionException { au.com.mutopia.acs.models.c3ml.C3mlEntity entity = createEntity ( document ) ; java.util.List < de.micromata.opengis.kml.v_2_2_0.Feature > features = document . getFeature () ; for ( de.micromata.opengis.kml.v_2_2_0.Feature feature : features ) { au.com.mutopia.acs.models.c3ml.C3mlEntity child = buildEntity ( feature ) ; entity . addChild ( child ) ; } return entity ; } 
public void renderTime ( final long milliseconds ) { final long seconds = ( milliseconds / 1000 ) % 60 ; final long minute = ( milliseconds / 60000 ) % 60 ; final long hour = ( milliseconds / 3600000 ) % 24 ; final long day = milliseconds / 86400000 ; final java.lang.String text = java.lang.String . format ( mTimeFormat , day , hour , minute , seconds ) ; setText ( text ) ; } 
private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } 
public int execute ( java.lang.String goal , java.lang.String pathToPom ) { java.lang.System . setProperty ( "maven.multiModuleProjectDirectory" , pathToPom ) ; org.apache.maven.cli.MavenCli cli = new org.apache.maven.cli.MavenCli () ; int result = cli . doMain ( new java.lang.String [] { "clean" , goal } , pathToPom , java.lang.System.out , java.lang.System.err ) ; return result ; } 
@ java.lang.Override public void onPositiveActionClicked ( com.rey.material.app.DialogFragment fragment ) { com.rey.material.app.TimePickerDialog dialog = ( ( com.rey.material.app.TimePickerDialog ) ( fragment . getDialog () ) ) ; android.widget.Toast . makeText ( fragment . getDialog () . getContext () , ( "Time is " + ( dialog . getFormattedTime ( java.text.SimpleDateFormat . getTimeInstance () ) ) ) , Toast.LENGTH_SHORT ) . show () ; fragment . dismiss () ; } 
@ java.lang.Override public boolean isChunkEnd ( @ javax.annotation.Nonnull org.jenkinsci.plugins.workflow.graph.FlowNode current , @ javax.annotation.CheckForNull org.jenkinsci.plugins.workflow.graph.FlowNode previous ) { if ( previous == null ) { return false ; } if ( current instanceof org.jenkinsci.plugins.workflow.graph.BlockEndNode ) { org.jenkinsci.plugins.workflow.graph.BlockStartNode bsn = ( ( org.jenkinsci.plugins.workflow.graph.BlockEndNode ) ( previous ) ) . getStartNode () ; if ( isChunkStart ( bsn , null ) ) { return true ; } } return isChunkStart ( previous , null ) ; } 
private hudson.plugins.timestamper.annotator.ConsoleLogParser.Result parseFromFinish ( java.io.InputStream inputStream ) throws java.io.IOException { hudson.plugins.timestamper.annotator.ConsoleLogParser.Result result = new hudson.plugins.timestamper.annotator.ConsoleLogParser.Result () ; result.lineNumber = - 1 ; int value = inputStream . read () ; result.atNewLine = isNewLine ( value ) ; while ( ( value = inputStream . read () ) != ( - 1 ) ) { if ( isNewLine ( value ) ) { ( result.lineNumber ) -- ; } } return result ; } 
@ java.lang.Override public boolean usesAttributes ( java.lang.String tagName ) { tagName = tagName . toLowerCase () ; boolean usesAttributes = ! ( ( ( tagName . equals ( "cfset" ) ) || ( tagName . equals ( "cfif" ) ) ) || ( tagName . equals ( "cfelseif" ) ) ) ; return usesAttributes ; } 
public int attack ( edu.cis232.gwasos.resources.Combat enemy ) { java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = enemy . getHp () ; if ( ( rand . nextInt ( ( ( 5 + ( enemy . getAgility () ) ) - ( getAgility () ) ) ) ) <= 3 ) { setMissed ( false ) ; enemy . damage ( power ) ; setPreviousAttackDamage ( ( monsterCurrentHp - ( enemy . getHp () ) ) ) ; } else { setMissed ( true ) ; } return previousAttackDamage ; } 
private void moveClient ( org.zapto.mike.mrstreamserver.Channel channel , org.zapto.mike.mrstreamserver.ClientHandler client ) { boolean canJoin = true ; if ( canJoin && ( channel != ( client . getChannel () ) ) ) { client . setChannel ( channel ) ; channel . addClient ( client ) ; } else {} } 
@ org.bukkit.event.EventHandler ( priority = org.bukkit.event.EventPriority.MONITOR , ignoreCancelled = true ) public void onEntityTame ( org.bukkit.event.entity.EntityTameEvent event ) { if ( ! ( ( event . getOwner () ) instanceof org.bukkit.entity.Player ) ) return; org.bukkit.entity.Player player = ( ( org.bukkit.entity.Player ) ( event . getOwner () ) ) ; if ( ! ( com.frdfsnlght.inquisitor.PlayerStats . isStatsPlayer ( player ) ) ) return; PlayerStats.group . getStatistics ( player . getName () ) . incr ( "animalsTamed" , com.frdfsnlght.inquisitor.Utils . normalizeEntityTypeName ( event . getEntityType () ) ) ; } 
void setChecked ( android.widget.TextView t1 , android.widget.TextView t2 , android.widget.ImageView i1 , java.lang.String description_in ) { i1 . setImageResource ( R.drawable.ic_check_box_black_24dp ) ; t1 . setTextColor ( android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.PrimaryPink ) ) ; if ( ( t2 != null ) && ( ! ( description_in . isEmpty () ) ) ) { t2 . setText ( description_in ) ; } } 
@ java.lang.Override public void start ( java.net.InetAddress hostAddress ) throws java.io.IOException { if ( mRunningFlag ) { throw new java.lang.UnsupportedOperationException () ; } try { mClient . start () ; mClient . addListener ( new io.github.antijava.marjio.network.ClientReceiver ( mApplication ) ) ; mClient . connect ( io.github.antijava.marjio.network.NET_TIMEOUT , hostAddress , io.github.antijava.marjio.network.NET_TCP_PORT , io.github.antijava.marjio.network.NET_UDP_PORT ) ; mRunningFlag = true ; } catch ( java.io.IOException e ) { throw e ; } } 
@ java.lang.Override public byte [] getX2 ( byte [] Y1Bytes ) { org.bouncycastle.math.ec.ECPoint.Fp Y1 = null ; Y1 = ( ( org.bouncycastle.math.ec.ECPoint.Fp ) ( de.tsenger.animamea.tools.Converter . byteArrayToECPoint ( Y1Bytes , curve ) . normalize () ) ) ; return getX2 ( Y1 ) . getEncoded ( false ) ; } 
@ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( org.openide.filesystems.FileObject fileObject ) { if ( fileObject != null ) { fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; } 
public static void sendExtras ( android.os.Bundle extras ) { if ( extras != null ) { if ( ( ( com.plugin.gcm.PushPlugin.gECB ) != null ) && ( ( com.plugin.gcm.PushPlugin.gWebView ) != null ) ) { com.plugin.gcm.PushPlugin . sendJavascript ( com.plugin.gcm.PushPlugin . convertBundleToJson ( extras ) ) ; } else { com.plugin.gcm.PushPlugin.gCachedExtras = extras ; } } } 
private com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > getDeployed ( java.lang.String version , java.lang.String name ) { com.xebialabs.deployit.plugin.api.udm.Deployed < ? , ? > puppetModule = deployed ( ( ( com.xebialabs.deployit.plugin.api.udm.Deployable ) ( com.xebialabs.platform.test.TestUtils . newInstance ( "puppet.ModuleSpec" , name ) ) ) , container , "puppet.Module" ) ; puppetModule . setProperty ( "version" , version ) ; puppetModule . setProperty ( "force" , true ) ; puppetModule . setProperty ( "ignoreDependencies" , false ) ; return puppetModule ; } 
public void changeDragonLeft ( android.view.View view ) { if ( ( currDragon ) == 0 ) { currDragon = ( dragons . size () ) - 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } else { currDragon -= 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } } 
@ java.lang.Override public boolean configure ( org.kohsuke.stapler.StaplerRequest req , net.sf.json.JSONObject formData ) throws com.amazonaws.codedeploy.FormException { awsAccessKey = formData . getString ( "awsAccessKey" ) ; awsSecretKey = formData . getString ( "awsSecretKey" ) ; proxyHost = formData . getString ( "proxyHost" ) ; proxyPort = java.lang.Integer . parseInt ( formData . getString ( "proxyPort" ) ) ; req . bindJSON ( this , formData ) ; save () ; return super . configure ( req , formData ) ; } 
public void addExp ( int addedExp ) { m_exp += addedExp ; while ( ( m_exp ) >= ( 100 * ( this . getLevel () ) ) ) { levelUp ( ( ( m_exp ) - ( 100 * ( this . getLevel () ) ) ) ) ; } } 
protected void insert ( java.lang.String table , java.util.HashMap < java.lang.String , java.lang.String > values ) throws java.lang.Exception { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int r = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; } 
@ java.lang.Override protected void actionPerformed ( net.minecraft.client.gui.GuiButton button ) throws java.io.IOException { if ( ( button.id ) == 0 ) { mc . displayGuiScreen ( parent ) ; } else { if ( button.displayString . equals ( "Enable" ) ) { button.displayString = "Disable" ; } else { button.displayString = "Enable" ; } } } 
public java.util.List < com.kencook.sharpspring.Event > getEvents ( java.lang.String timestamp ) throws com.kencook.sharpspring.SharpspringException { com.kencook.sharpspring.SharpspringRequest request = com.kencook.sharpspring.SharpspringRequestBuilder . request ( 1 , SharpspringMethod.GET_EVENTS ) . where ( "createTimestamp" ) . is ( timestamp ) . build () ; com.kencook.sharpspring.responses.GetEventsResponse result = operations . query ( request , com.kencook.sharpspring.responses.GetEventsResponse . class ) ; if ( ( result . getError () ) != null ) throw new com.kencook.sharpspring.SharpspringException ( result . getError () ) ; return result . getResult () . getEvent () ; } 
@ java.lang.Override protected java.lang.String doInBackground ( byte [] . . . photoData ) { try { photoFile = this . createFile () ; io.github.data4all.logger.Log . d ( io.github.data4all.handler.CapturePictureHandler.TAG , ( "Picturepath:" + ( photoFile . getPath () ) ) ) ; final java.io.FileOutputStream fos = new java.io.FileOutputStream ( photoFile ) ; fos . write ( photoData [ 0 ] ) ; fos . flush () ; fos . close () ; } catch ( java.io.IOException ex ) { io.github.data4all.logger.Log . e ( io.github.data4all.handler.CapturePictureHandler.TAG , "Fail to save picture" , ex ) ; } return "successful" ; } 
public void addNotification ( @ com.flair.blurb.Constants.CategoryDef java.lang.String category , android.service.notification.StatusBarNotification notification , android.service.notification.NotificationListenerService service ) { java.lang.String key = com.flair.blurb.Util . getKey ( notification ) ; android.util.Log . d ( com.flair.blurb.data.Notifications.TAG , ( ( ( "addNotification: " + category ) + " key " ) + key ) ) ; java.util.concurrent.ConcurrentHashMap < java.lang.String , android.service.notification.StatusBarNotification > map = getMapByCategory ( category ) ; com.flair.blurb.Util . mergeNotifications ( map , notification , service ) ; map . put ( com.flair.blurb.Util . getKey ( notification ) , notification ) ; } 
private org.ethereum.jsonrpc.Block getByJsonBlockId ( java.lang.String id ) { if ( "earliest" . equalsIgnoreCase ( id ) ) { return blockchain . getBlockByNumber ( 0 ) ; } else if ( "latest" . equalsIgnoreCase ( id ) ) { return blockchain . getBestBlock () ; } else if ( "pending" . equalsIgnoreCase ( id ) ) { return null ; } else { long blockNumber = StringHexToBigInteger ( id ) . longValue () ; return blockchain . getBlockByNumber ( blockNumber ) ; } } 
public java.util.List < statistics.model.Transaction > getTransactions ( statistics.model.Account account , int limit , int offset , java.util.Date startDate , java.util.Date endDate , statistics.model.enums.TransactionType [] transactionTypes , statistics.model.enums.PlanFactType . . . planFactTypes ) { return transactionManager . getTransactions ( account , startDate , endDate , java.util.Arrays . asList ( transactionTypes ) , java.util.Arrays . asList ( planFactTypes ) , limit , offset ) ; } 
public void queuePlayList ( com.sedmelluq.discord.lavaplayer.track.AudioPlaylist playlist ) { java.util.List < com.sedmelluq.discord.lavaplayer.track.AudioTrack > list = playlist . getTracks () ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { if ( ! ( this . player . startTrack ( list . get ( i ) , true ) ) ) { this . queue . add ( list . get ( i ) ) ; this . playlist . add ( list . get ( i ) . getInfo () . title ) ; } } } 
@ java.lang.Override public byte [] openBytes ( int no , byte [] buf , int x , int y , int w , int h ) throws java.io.IOException , loci.formats.FormatException { loci.formats.FormatTools . checkPlaneParameters ( this , no , buf.length , x , y , w , h ) ; long planeSize = loci.formats.FormatTools . getPlaneSize ( this ) ; pixelFile . seek ( ( ( pixelOffset ) + ( no * planeSize ) ) ) ; readPlane ( pixelFile , x , y , w , h , buf ) ; return buf ; } 
private void copyStream ( com.sun.grizzly.tcp.http11.GrizzlyResponse grizzlyResponse , java.io.InputStream is ) throws java.io.IOException { java.io.OutputStream os = grizzlyResponse . getOutputStream () ; try { org.apache.commons.io.IOUtils . copyLarge ( is , os ) ; os . flush () ; } finally { is . close () ; } } 
@ java.lang.Override public net.minecraft.item.ItemStack insertItem ( int slot , net.minecraft.item.ItemStack stack , boolean simulate ) { int index = getIndexForSlot ( slot ) ; net.minecraftforge.items.IItemHandlerModifiable handler = getHandlerFromIndex ( index ) ; slot = getSlotFromIndex ( slot , index ) ; return handler . insertItem ( slot , stack , simulate ) ; } 
public void removePerson ( int id ) { mDBOpenHelper = new cbpos1989.com.sqlitedatabase.DBOpenHelper ( mContext ) ; mDatabase = mDBOpenHelper . getWritableDatabase () ; mDatabase . execSQL ( ( ( ( ( ( "DELETE FROM " + ( DBFeederContract.PersonTable.TABLE_NAME ) ) + " WHERE " ) + ( DBFeederContract.PersonTable._ID ) ) + " = " ) + id ) ) ; mDatabase . close () ; mDBOpenHelper . close () ; mDatabase = null ; mDBOpenHelper = null ; } 
private float getNoise ( float x , float y , mapChooser.PerlinNoiseGenerator noise , float scale ) { float n = 0 ; float weight = 1 ; float curFrequency = 1 ; for ( int i = 0 ; i < ( frequencies ) ; i ++ ) { n += weight * ( noise . noise2 ( ( curFrequency * x ) , ( curFrequency * y ) ) ) ; weight /= 2 ; curFrequency += 2 ; } return n ; } 
public void setDiscount ( double discount ) { if ( discount == 0 ) { offeredPrice = false ; finalPrice = price ; this . discount = discount ; return; } else if ( discount > 1 ) { return; } this . offeredPrice = true ; this . discount = discount ; this . finalPrice = ( ( int ) ( java.lang.Math . round ( ( ( price ) * ( 1 - discount ) ) ) ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mListener ) != null ) { java.lang.String toText = mToTextView . getText () . toString () ; if ( ! ( getResString ( R.string.to_hint ) . equals ( toText ) ) ) { mListener . onToClick ( toText ) ; } else { mListener . onToClick ( null ) ; } } } 
public static bolts.Task < com.dounets.vchat.net.api.ApiResponse > callInBackgroundDownloadVideo ( final com.dounets.vchat.net.api.ApiRequest request , final android.content.Context context , final java.lang.String url ) { return bolts.Task . callInBackground ( new java.util.concurrent.Callable < com.dounets.vchat.net.api.ApiResponse > () { @ java.lang.Override public com.dounets.vchat.net.api.ApiResponse call ( ) throws java.lang.Exception { return com.dounets.vchat.net.api.ApiClient . callDownloadVideo ( request , context , url ) ; } } ) ; } 
public org.lirazs.gbackbone.client.core.collection.Collection set ( org.lirazs.gbackbone.client.core.data.Options [] objects , org.lirazs.gbackbone.client.core.data.Options options ) { java.util.List < T > models = new java.util.ArrayList < T > () ; for ( org.lirazs.gbackbone.client.core.data.Options object : objects ) { T model = prepareModel ( object , options ) ; if ( model != null ) { models . add ( model ) ; } } return set ( models , options ) ; } 
public java.lang.String getCategoryDisplay ( java.lang.String catID ) { java.lang.String display = null ; android.database.sqlite.SQLiteDatabase db = this . getReadableDatabase () ; android.database.Cursor cursor = db . query ( com.quaap.launchtime.db.DB.TAB_ORDER_TABLE , new java.lang.String [] { com.quaap.launchtime.db.DB.LABEL } , ( ( com.quaap.launchtime.db.DB.CATID ) + "=?" ) , new java.lang.String [] { catID } , null , null , null , null ) ; try { if ( cursor . moveToNext () ) { display = cursor . getString ( 0 ) ; } } finally { cursor . close () ; } return display ; } 
@ java.lang.SuppressWarnings ( value = "unused" ) public void onEvent ( de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductClickedEvent event ) { de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment dialogFragment = new de.fau.cs.mad.fablab.android.view.fragments.productsearch.ProductDialogFragment () ; android.os.Bundle arguments = new android.os.Bundle () ; arguments . putSerializable ( ProductDialogFragmentViewModel.KEY_PRODUCT , event . getProduct () ) ; dialogFragment . setArguments ( arguments ) ; dialogFragment . show ( getFragmentManager () , "ProductDialogFragment" ) ; } 
public int decr ( java.lang.String address , int port ) { for ( org.openstack4j.model.compute.Image image : this . getImages () ) { if ( address . equals ( image . getAddress () ) ) { image . setNbRequest ( ( ( image . getNbRequest () ) - 1 ) ) ; break; } } return 1 ; } 
public int length ( int v , int w ) { if ( v == w ) { return 0 ; } int common = ancestor ( v , w ) ; if ( common == ( - 1 ) ) { return - 1 ; } edu.princeton.cs.algs4.BreadthFirstDirectedPaths vBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , v ) ; edu.princeton.cs.algs4.BreadthFirstDirectedPaths wBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , w ) ; return ( ( vBFS . distTo ( common ) ) + ( wBFS . distTo ( common ) ) ) - 1 ; } 
private static java.util.List < de.setsoftware.reviewtool.base.Pair < de.setsoftware.reviewtool.model.changestructure.PositionInText , de.setsoftware.reviewtool.model.changestructure.PositionInText > > determineDiff ( java.lang.String oldContent , java.lang.String newContent ) throws java.lang.Exception { return de.setsoftware.reviewtool.diffalgorithms.SimpleTextDiffAlgorithmTest . toPositionsInNewFile ( new de.setsoftware.reviewtool.diffalgorithms.MyersSourceDiffAlgorithm () . determineDiff ( de.setsoftware.reviewtool.model.changestructure.ChangestructureFactory . createFileInRevision ( "" , null , null ) , oldContent . getBytes ( "UTF-8" ) , de.setsoftware.reviewtool.model.changestructure.ChangestructureFactory . createFileInRevision ( "" , null , null ) , newContent . getBytes ( "UTF-8" ) , "UTF-8" ) ) ; } 
public static st.redline.ProtoObject p220 ( st.redline.ProtoObject receiver , st.redline.ThisContext thisContext , st.redline.ProtoObject arg1 , st.redline.ProtoObject arg2 , st.redline.ProtoObject arg3 , st.redline.ProtoObject arg4 , st.redline.ProtoObject arg5 , st.redline.ProtoObject arg6 , st.redline.ProtoObject arg7 ) { return ( receiver . methodAt ( ( ( java.lang.String ) ( arg1 . javaValue () ) ) ) ) != null ? ProtoObject.TRUE : ProtoObject.FALSE ; } 
@ java.lang.Override public boolean exists ( java.lang.String id ) throws org.n52.series.db.da.DataAccessException { org.hibernate.Session session = getSession () ; try { if ( org.n52.io.response.v1.ext.PlatformType . isStationaryId ( id ) ) { org.n52.series.db.da.dao.v1.FeatureDao featureDao = new org.n52.series.db.da.dao.v1.FeatureDao ( session ) ; return featureDao . hasInstance ( parseId ( org.n52.io.response.v1.ext.PlatformType . extractId ( id ) ) , org.n52.series.db.da.beans.FeatureEntity . class ) ; } else { org.n52.series.db.da.dao.v1.ext.PlatformDao dao = new org.n52.series.db.da.dao.v1.ext.PlatformDao ( session ) ; return dao . hasInstance ( parseId ( org.n52.io.response.v1.ext.PlatformType . extractId ( id ) ) , org.n52.series.db.da.beans.ext.PlatformEntity . class ) ; } } finally { returnSession ( session ) ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference , java.lang.Object o ) { if ( sp_autocheck . isChecked () ) { check_list . setEnabled ( true ) ; startTimer () ; } else { if ( ( cdt ) != null ) cdt . cancel () ; check_list . setEnabled ( false ) ; } return true ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; initializeFiles () ; initSwitchListener () ; try { de.myo.myoscriptcontrol.GestureScriptManager . getInstance () . setConfigFile ( ConfigFile ) ; mStatus = RecordActivityStatus.DISCONNECTED ; } catch ( java.io.IOException | org.json.JSONException e ) { e . printStackTrace () ; de.myo.myoscriptcontrol.ErrorActivity . handleError ( this , e . getMessage () ) ; } initializeMYOHub () ; initGridAdapter () ; OnUpdateStatus ( de.myo.myoscriptcontrol.GestureRecordDeviceListener . getInstance () . getStatus () ) ; } 
private org.miradi.migrations.forward.DateUnitEffortList getAdjustedDateUnitEffortListForAssignments ( org.miradi.migrations.forward.DateUnitEffortList dateUnitEffortListToAdjust , org.miradi.migrations.forward.RawObject rawObject ) throws java.lang.Exception { java.util.ArrayList < org.miradi.migrations.forward.RawObject > childTasks = getChildTasks ( rawObject ) ; for ( org.miradi.migrations.forward.RawObject task : childTasks ) { java.util.ArrayList < org.miradi.objecthelpers.ORef > childAssignmentRefs = getAssignments ( task ) ; for ( org.miradi.objecthelpers.ORef childAssignmentRef : childAssignmentRefs ) { org.miradi.migrations.forward.RawObject childAssignment = getRawProject () . findObject ( childAssignmentRef ) ; dateUnitEffortListToAdjust = getAdjustedDateUnitEffortListForAssignment ( dateUnitEffortListToAdjust , childAssignment ) ; } dateUnitEffortListToAdjust = getAdjustedDateUnitEffortListForAssignments ( dateUnitEffortListToAdjust , task ) ; } return dateUnitEffortListToAdjust ; } 
public void openFragment ( android.support.v4.app.Fragment fragment , boolean addToBackStack ) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction transaction = fragmentManager . beginTransaction () ; transaction . replace ( R.id.container , fragment ) ; transaction . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_OPEN ) ; if ( addToBackStack ) { transaction . addToBackStack ( null ) ; } transaction . commit () ; updateViewFromFragment ( fragment ) ; } 
protected int createNewEntry ( java.io.File f ) { int id = getNextFreeFileID () ; de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile file = new de.tremoneck.timemachine.storage.ReferenceStorage.ReferenceFile () ; file.ID = id ; file.path = f . getPath () ; file.timestamp = f . lastModified () ; file.references = 1 ; list . add ( file ) ; return id ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { if ( ( mVideoFilesVector . size () ) > 0 ) { mAdIndex = ( ( ( mAdIndex ) + ( mVideoFilesVector . size () ) ) - 1 ) % ( mVideoFilesVector . size () ) ; java.lang.String filePath = ( ( java.lang.String ) ( mVideoFilesVector . get ( mAdIndex ) ) ) ; mVideoView . setVideoURI ( android.net.Uri . parse ( filePath ) ) ; mVideoView . start () ; } } 
private void select ( int index ) { assert index < 3 ; if ( ( suggestions [ index ] ) == "" ) { processor . addWord ( new java.util.ArrayList < com.shiweinan.ckeyboard.Point > () ) ; return; } processor . addWord ( screenPoints ) ; screenPoints . clear () ; processor . showCorrectionHints ( screenPoints ) ; } 
private void assertDeepEqualsGuests ( java.util.List < cz.muni.fi.pv168.project.Guest > expectedList , java.util.List < cz.muni.fi.pv168.project.Guest > actualList ) { expectedList . sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; actualList . sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; assertEquals ( expectedList , actualList ) ; for ( int i = 0 ; i < ( expectedList . size () ) ; i ++ ) { cz.muni.fi.pv168.project.Guest expected = expectedList . get ( i ) ; cz.muni.fi.pv168.project.Guest actual = actualList . get ( i ) ; assertDeepEquals ( expected , actual ) ; } } 
public static void saveUserMetrics ( android.content.Context context ) { android.content.SharedPreferences sharedPref = context . getSharedPreferences ( "HearthTrackerSharedPreferences" , Context.MODE_PRIVATE ) ; android.content.SharedPreferences.Editor editor = sharedPref . edit () ; editor . putString ( "ActiveDeckName" , dumplingyzr.hearthtracker.Utils.sActiveDeckName ) ; editor . putString ( "UserName" , dumplingyzr.hearthtracker.Utils.sUserName ) ; editor . putStringSet ( "UserDeckNames" , dumplingyzr.hearthtracker.Utils.sUserDeckNames ) ; editor . apply () ; } 
private void googleAuthentification ( final io.nearby.android.data.source.local.UserLoginStatusCallback callback ) { com.google.android.gms.common.api.OptionalPendingResult < com.google.android.gms.auth.api.signin.GoogleSignInResult > resultOptionalPendingResult = Auth.GoogleSignInApi . silentSignIn ( mGoogleApiClient ) ; if ( resultOptionalPendingResult . isDone () ) { handleGoogleResult ( resultOptionalPendingResult . get () , callback ) ; } else { resultOptionalPendingResult . setResultCallback ( new com.google.android.gms.common.api.ResultCallback < com.google.android.gms.auth.api.signin.GoogleSignInResult > () { @ java.lang.Override public void onResult ( @ android.support.annotation.NonNull com.google.android.gms.auth.api.signin.GoogleSignInResult googleSignInResult ) { handleGoogleResult ( googleSignInResult , callback ) ; } } ) ; } } 
@ com.squareup.otto.Subscribe public void onLastLocation ( today.gacha.android.services.GachaLocationService.LastLocationEvent event ) { if ( event . isSuccess () ) { animateGoogleMapCamera ( event . getData () ) ; return; } android.util.Log . d ( today.gacha.android.ui.MapsActivity.TAG , ( "Get last location failed - " + ( event . getThrowableMessage () ) ) ) ; locationService . requestCurrentLocation () ; } 
public java.lang.Object visit ( dbms.IdExp exp , java.util.Hashtable < java.lang.String , java.lang.Integer > attrPosTable , dbms.Tuple tuple ) { java.lang.String attrName = exp . getId () ; dbms.Value value ; value = tuple . get ( attrPosTable . get ( attrName ) . intValue () ) ; return visit ( exp , value ) ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { switch ( position ) { case 0 : return ruhrpott.owasp.com.vuln_app_1.Hello_Page . newInstance () ; case 1 : return ruhrpott.owasp.com.vuln_app_1.Prepare . newInstance () ; case 2 : return ruhrpott.owasp.com.vuln_app_1.Basic_Http . newInstance () ; case 3 : return ruhrpott.owasp.com.vuln_app_1.Logcat_Output . newInstance () ; } } 
public int getTeamLinks ( org.bukkit.scoreboard.Team team ) { int result = 0 ; if ( ( ( getGameMgr () . getGame ( team ) ) != null ) && ( beaconLinks . containsKey ( getGameMgr () . getGame ( team ) ) ) ) { for ( com.wasteofplastic.beaconz.BeaconLink pair : beaconLinks . get ( getGameMgr () . getGame ( team ) ) ) { if ( pair . getOwner () . equals ( team ) ) { result ++ ; } } } return result ; } 
@ java.lang.Override public void receive ( long timeStamp , org.wso2.siddhi.core.event.Event [] inEvents , org.wso2.siddhi.core.event.Event [] removeEvents ) { org.wso2.siddhi.core.util.EventPrinter . print ( timeStamp , inEvents , removeEvents ) ; eventArrived = true ; if ( inEvents != null ) { ( value ) ++ ; } else if ( ( value ) == 1 ) { junit.framework.Assert . assertNull ( inEvents ) ; } } 
private org.carbondata.processing.store.writer.CarbonFactDataWriter < ? > getFactDataWriter ( java.lang.String storeLocation , int measureCount , int mdKeyLength , java.lang.String tableName , org.carbondata.processing.mdkeygen.file.IFileManagerComposite fileManager , int [] keyBlockSize ) { return new org.carbondata.processing.store.writer.CarbonFactDataWriterImplForIntIndexAndAggBlock ( storeLocation , measureCount , mdKeyLength , tableName , fileManager , keyBlockSize , aggKeyBlock , isComplexTypes () , noDictionaryCount , carbonDataFileAttributes , databaseName , wrapperColumnSchemaList , noDictionaryCount , dimensionType , carbonDataDirectoryPath , colCardinality , segmentProperties ) ; } 
private javax.mail.Message [] searchMailbox ( javax.mail.Folder inbox ) throws javax.mail.MessagingException { javax.mail.search.SearchTerm searchTerm = new javax.mail.search.SubjectTerm ( "Ingress Portal" ) ; javax.mail.search.ReceivedDateTerm minDateTerm = new javax.mail.search.ReceivedDateTerm ( javax.mail.search.ComparisonTerm.GT , activity . getMostRecentDate () ) ; searchTerm = new javax.mail.search.AndTerm ( searchTerm , minDateTerm ) ; return inbox . search ( searchTerm ) ; } 
public java.lang.String printForwards ( int numToPrint ) { LLNode < E > item = first ; java.lang.String finalString = "" ; if ( ( size () ) == 0 ) return finalString ; for ( int i = 0 ; i < numToPrint ; i ++ ) { finalString += ( item . toString () ) + "\n" ; item = item . getNext () ; } return finalString ; } 
public final void setFPS ( int fps ) { if ( fps <= 0 ) { throw new java.lang.RuntimeException ( "Attempted to run a CellGame at a non-positive FPS" ) ; } this . fps = fps ; msPerFrame = 1000 / ( ( double ) ( fps ) ) ; if ( ( game . getContainer () ) != null ) { game . getContainer () . setTargetFrameRate ( fps ) ; } } 
public boolean authenticate ( final java.lang.String iUserName , final java.lang.String iPassword , final java.lang.String iResourceToCheck ) { final com.orientechnologies.orient.server.config.OServerUserConfiguration user = getUser ( iUserName ) ; if ( ( user != null ) && ( user.password . equals ( iPassword ) ) ) { if ( user.resources . equals ( "*" ) ) return true ; java.lang.String [] resourceParts = user.resources . split ( "," ) ; for ( java.lang.String r : resourceParts ) if ( r . equals ( iResourceToCheck ) ) return true ; } return false ; } 
public void setTimerView ( long secUntilFinished ) { java.lang.String sec = java.lang.String . format ( "%02d" , ( ( secUntilFinished / 1000 ) % 60 ) ) ; java.lang.String min = java.lang.String . format ( "%02d" , ( ( secUntilFinished / 1000 ) / 60 ) ) ; textViewText = ( min + ":" ) + sec ; textView . setText ( textViewText ) ; progressBar . setProgress ( ( ( int ) ( ( secUntilFinished * 1000 ) / ( default_StudyTime ) ) ) ) ; } 
@ java.lang.Override public boolean canDrain ( net.minecraft.util.EnumFacing from , net.minecraftforge.fluids.Fluid fluid ) { if ( ( hasFrequency () ) && ( ( configComponent . getOutput ( TransmissionType.FLUID , from , facing ) . ioState ) == ( mekanism.common.SideData.IOState.OUTPUT ) ) ) { return ( fluid == null ) || ( fluid == ( frequency.storedFluid . getFluid () . getFluid () ) ) ; } return false ; } 
protected void setSelectedPanel ( processing.app.contrib.ContributionPanel contributionPanel ) { contributionTab.contributionManagerDialog . updateStatusPanel ( contributionPanel ) ; if ( ( selectedPanel ) == contributionPanel ) { selectedPanel . setSelected ( true ) ; } else { processing.app.contrib.ContributionPanel lastSelected = selectedPanel ; selectedPanel = contributionPanel ; if ( lastSelected != null ) { lastSelected . setSelected ( false ) ; } contributionPanel . setSelected ( true ) ; updateColors () ; requestFocusInWindow () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_filter ) ) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment () ; getFragmentManager () . beginTransaction () . replace ( R.id.fragment_frame_lay , filterFragment , "FilterFragment" ) . commit () ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
public static byte [] read ( java.lang.String filePath ) throws java.lang.Exception { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } } 
private void handleTakePictureResult ( int resultCode , android.content.Intent resultIntent ) { if ( resultCode == ( RESULT_OK ) ) { android.widget.ImageView imgView = ( ( android.widget.ImageView ) ( findViewById ( R.id.imgShowImage ) ) ) ; mPhotoPathName = mPhotoPathUri . getPath () ; com.example.a454203.aone_sample.PhotoHelper . addPhotoToMediaStoreAndDisplayThumbnail ( mPhotoPathName , this , imgView ) ; } else { mPhotoPathUri = null ; mPhotoPathName = null ; android.widget.Toast . makeText ( this , "User cancelled" , Toast.LENGTH_LONG ) . show () ; } } 
public void addConstraint ( mondrian.rolap.sql.SqlQuery sqlQuery , mondrian.rolap.sql.RolapCube baseCube , mondrian.rolap.aggmatcher.AggStar aggStar ) { for ( int i = 0 ; i < ( columnList . size () ) ; i ++ ) { mondrian.olap.MondrianDef.Expression expression = columnList . get ( i ) ; if ( expression != null ) { final java.lang.Comparable value = valueList . get ( i ) ; final mondrian.spi.Dialect.Datatype datatype = datatypeList . get ( i ) ; sqlQuery . addWhere ( mondrian.rolap.sql.SqlConstraintUtils . constrainLevel2 ( sqlQuery , expression , datatype , value ) ) ; } } } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( x ) != ( other.x ) ) { return false ; } if ( ( y ) != ( other.y ) ) { return false ; } return true ; } 
public boolean checkToken ( fundata.model.Token model ) { if ( model == null ) { return false ; } java.lang.String token = ( ( java.lang.String ) ( redisTemplate . boundValueOps ( model . getUserId () ) . get () ) ) ; if ( ( token == null ) || ( ! ( token . equals ( model . getToken () ) ) ) ) { return false ; } redisTemplate . boundValueOps ( model . getUserId () ) . expire ( Constants.TOKEN_EXPIRES_HOUR , java.util.concurrent.TimeUnit.HOURS ) ; return true ; } 
private edu.princeton.cs.algs4.Stack < edu.princeton.cs.algs4.Point2D > range ( edu.princeton.cs.algs4.RectHV rect , KdTree.Node node , edu.princeton.cs.algs4.Stack < edu.princeton.cs.algs4.Point2D > points ) { if ( node == null ) return points ; if ( rect . contains ( node.p ) ) points . push ( node.p ) ; if ( rect . intersects ( node.rect ) ) { points = range ( rect , node.lb , points ) ; points = range ( rect , node.rt , points ) ; } return points ; } 
public void removeXAttr ( java.lang.String src , org.apache.hadoop.fs.XAttr xAttr ) throws java.io.IOException { if ( ( src == null ) || ( xAttr == null ) ) { throw new java.lang.IllegalArgumentException ( "Argument is null" ) ; } checkIfFileExisted ( src ) ; java.util.List < org.apache.hadoop.fs.XAttr > targetXAttrList = com.google.common.collect.Lists . newArrayListWithCapacity ( 1 ) ; targetXAttrList . add ( xAttr ) ; try { getXAttrs ( src , targetXAttrList ) ; } catch ( java.io.IOException e ) { throw new java.io.IOException ( "No matching attributes found for remove operation" ) ; } this . nodeManager . removeXAttr ( src , xAttr ) ; } 
private android.widget.SimpleCursorAdapter getThemedAdapter ( android.database.Cursor cursor ) { java.lang.String [] dataColumns = new java.lang.String [] { NotePad.Notes.COLUMN_NAME_TITLE , NotePad.Notes.COLUMN_NAME_MODIFICATION_DATE } ; int [] viewIDs = new int [] { R.id.itemTitle , R.id.itemDate } ; int themed_item ; if ( FragmentLayout.lightTheme ) themed_item = R.layout.noteslist_item_light ; else themed_item = R.layout.noteslist_item_dark ; android.widget.SimpleCursorAdapter adapter = new android.widget.SimpleCursorAdapter ( activity , themed_item , cursor , dataColumns , viewIDs ) ; return adapter ; } 
private void updateBestTimes ( float recentTime ) { curTime . setText ( ( "current time: " + ( java.lang.String . valueOf ( recentTime ) ) ) ) ; if ( recentTime <= ( bestTimeTracker ) ) { bestTimeTracker = recentTime ; } if ( recentTime >= ( worstTimeTracker ) ) { worstTimeTracker = recentTime ; } bestTime . setText ( ( "best time: " + ( bestTimeTracker ) ) ) ; worstTime . setText ( ( "worst time: " + ( worstTimeTracker ) ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( assemblyId ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } 
public void setScore ( java.lang.String name , int point ) { for ( org.bukkit.scoreboard.Scoreboard sb : scoreboards . values () ) { org.bukkit.scoreboard.Objective obj = sb . getObjective ( org.bitbucket.ucchy.fnafim.game.ScoreboardDisplay.OBJECTIVE_NAME ) ; if ( point == 0 ) { getScoreItem ( obj , name ) . setScore ( 1 ) ; } getScoreItem ( obj , name ) . setScore ( point ) ; } } 
private void setImageSource ( java.lang.Object object ) { imageSources = new java.util.ArrayList < org.appcelerator.titanium.view.TiDrawableReference > () ; if ( object instanceof java.lang.Object [] ) { for ( java.lang.Object o : ( ( java.lang.Object [] ) ( object ) ) ) { imageSources . add ( org.appcelerator.titanium.view.TiDrawableReference . fromObject ( getProxy () , o ) ) ; } } else { imageSources . add ( org.appcelerator.titanium.view.TiDrawableReference . fromObject ( getProxy () , object ) ) ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > call , retrofit2.Response < java.util.List < com.namclu.android.deputyscheduler.models.Shift > > response ) { int statusCode = response . code () ; java.util.List < com.namclu.android.deputyscheduler.models.Shift > shifts = response . body () ; recyclerView . setAdapter ( new com.namclu.android.deputyscheduler.adapters.ShiftAdapter ( shifts ) ) ; } 
@ java.lang.Override public void parseAssociatedNames ( hudson.model.Job < ? , ? > job , java.util.Collection < com.cloudbees.jenkins.GitHubRepositoryName > result ) { if ( job instanceof jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) { jenkins.model.ParameterizedJobMixIn.ParameterizedJob p = ( ( jenkins.model.ParameterizedJobMixIn.ParameterizedJob ) ( job ) ) ; for ( com.cloudbees.jenkins.GitHubTrigger ght : hudson.Util . filter ( p . getTriggers () . values () , com.cloudbees.jenkins.GitHubTrigger . class ) ) { result . addAll ( ght . getGitHubRepositories () ) ; } } } 
public boolean accepts ( rocnikovyprojekt.Word w ) { rocnikovyprojekt.FSA m = determinize () ; java.lang.Object p = m.initialStates . iterator () . next () ; for ( int i = 0 ; i < ( w . length () ) ; i ++ ) { java.lang.Object a = w . symbolAt ( i ) ; p = m.delta . get ( p , a ) . iterator () . next () ; } return m.finalStates . contains ( p ) ; } 
public void setVoice ( int i ) { Main.buffer [ ( ( Main.useroffset ) + 577 ) ] = ( ( byte ) ( i + 1 ) ) ; Main.buffer [ ( ( Main.useroffset ) + 146248 ) ] = ( ( byte ) ( i + 1 ) ) ; } 
public rx.Observable < java.util.List < saulmm.avengers.entities.MarvelCharacter > > executeIncreasingOffset () { currentOffset += saulmm.avengers.GetCharactersUsecase.CHARACTERS_LIMIT ; return mRepository . getCharacters ( currentOffset ) . observeOn ( mResultsThread ) . subscribeOn ( mExecutorThread ) . doOnError ( new rx.functions.Action1 < java.lang.Throwable > () { @ java.lang.Override public void call ( java.lang.Throwable throwable ) { currentOffset -= saulmm.avengers.GetCharactersUsecase.CHARACTERS_LIMIT ; } } ) ; } 
public void assignForm ( int govid , sample.ApplicationData unAssignedForm ) throws java.sql.SQLException { int resultCount ; stmt = conn . createStatement () ; java.lang.String query = ( ( ( "UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid ) + " WHERE TTBID = '" ) + ( unAssignedForm . getTtbID () ) ) + "'" ; stmt . executeUpdate ( query ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.map_location : if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationManager . requestLocationUpdates ( LocationManager.NETWORK_PROVIDER , 0 , 0 , this ) ; } break; } } 
private java.net.URL escapeIllegalURLCharacters ( java.net.URL url ) { if ( ( url == null ) || ( "file" . equals ( url . getProtocol () ) ) ) { return url ; } try { return org.apache.jmeter.protocol.http.util.ConversionUtils . sanitizeUrl ( url ) . toURL () ; } catch ( java.lang.Exception e1 ) { org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.log . error ( ( ( ( "Error escaping URL:'" + url ) + "', message:" ) + ( e1 . getMessage () ) ) ) ; return url ; } } 
public void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes atts ) throws org.xml.sax.SAXException { if ( ( depth ) == 1 ) captureElements = jaxbReader.elementChecker . isParentInfoElement ( uri , localName ) ; if ( captureElements ) tmp . startElement ( uri , localName , qName , atts ) ; ( depth ) ++ ; } 
@ java.lang.Override public android.graphics.Bitmap getDrawingCache ( boolean autoScale ) { final android.graphics.Bitmap b = super . getDrawingCache ( autoScale ) ; if ( mReflectionCacheInvalid ) { if ( ( mReflectionCache ) == null ) { try { mReflectionCacheInvalid = false ; } catch ( java.lang.NullPointerException e ) { android.util.Log . e ( com.appl.library.VIEW_LOG_TAG , ( "Null pointer in createReflectionBitmap. Bitmap b=" + b ) , e ) ; } } } return b ; } 
protected org.rikai.dictionary.edict.EdictEntry buildEntry ( org.rikai.dictionary.db.ResultCursor cursor , org.rikai.deinflector.DeinflectedWord variant ) { java.lang.String reason = "" ; if ( ! ( variant . getReason () . equals ( "" ) ) ) { reason = ( ( "< " + ( variant . getReason () ) ) + " < " ) + ( variant . getOriginalWord () ) ; } return makeEntry ( variant , cursor . getValue ( "kanji" ) , cursor . getValue ( "kana" ) , cursor . getValue ( "entry" ) , reason ) ; } 
@ java.lang.Override public boolean onScale ( android.view.ScaleGestureDetector detector ) { scale *= detector . getScaleFactor () ; scale = java.lang.Math . max ( 0.2F , java.lang.Math . min ( scale , 3.0F ) ) ; android.util.Log . i ( ca.sapphire.schview.SchViewActivity.TAG , ( "Scale: " + ( scale ) ) ) ; return true ; } 
@ java.lang.Override public void connectionChanged ( final org.csstudio.dal2.service.IPvAccess < java.lang.String > source , final boolean isConnected ) { if ( isConnected ) { _alreadyConnected . incrementAndGet () ; } org.csstudio.alarm.service.internal.AlarmConnectionDAL2Impl.ListenerItem.LOG_INNER . trace ( "received connection change to {} for pv {} " , new java.lang.Object [] { source . getPVAddress () . getAddress () , isConnected } ) ; _alarmListener . onMessage ( org.csstudio.alarm.service.internal.AlarmMessageDAL2Impl . newAlarmMessage ( _pvAccess , new java.util.Date () ) ) ; } 
protected long _daysLate ( com.born2go.lazzybee.db.Card card ) { if ( ( card . getQueue () ) != ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) return 0 ; long due = card . getDue () ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } 
public void computeOutputs ( org.apache.beam.runners.spark.SparkRunner.Evaluator evaluator , boolean debugPipelineMode ) { if ( debugPipelineMode && ( evaluator instanceof org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ) { org.apache.beam.runners.spark.translation.EvaluationContext.LOG . info ( ( "Translated Native Spark pipeline:\n" + ( ( ( org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ( evaluator ) ) . getDebugString () ) ) ) ; } for ( org.apache.beam.runners.spark.translation.Dataset dataset : leaves ) { dataset . cache ( storageLevel () ) ; if ( ! debugPipelineMode ) { dataset . action () ; } else { dataset . printDebugString () ; } } } 
protected java.util.concurrent.CompletionStage < java.util.Optional < java.lang.String > > getCustomTypeId ( @ javax.annotation.Nonnull final io.sphere.sdk.types.CustomFieldsDraft customFieldsDraft ) { try { final java.lang.String customTypeKey = getKeyFromResourceIdentifier ( customFieldsDraft . getType () ) ; return typeService . fetchCachedTypeId ( customTypeKey ) ; } catch ( com.commercetools.sync.commons.exceptions.ReferenceResolutionException exception ) { return io.sphere.sdk.utils.CompletableFutureUtils . exceptionallyCompletedFuture ( exception ) ; } } 
private soaringcoach.Flight analyse ( soaringcoach.Flight f ) throws soaringcoach.analysis.AnalysisException { f = new soaringcoach.analysis.CirclingAnalysis () . analyse ( f ) ; f = new soaringcoach.analysis.ThermalAnalysis () . analyse ( f ) ; f = new soaringcoach.analysis.WindAnalysis () . analyse ( f ) ; f = new soaringcoach.analysis.CentringAnalysis () . analyse ( f ) ; f = new soaringcoach.analysis.ShortStraightPhasesAnalysis () . analyse ( f ) ; f = new soaringcoach.analysis.DistanceAnalysis () . analyse ( f ) ; f = new soaringcoach.analysis.FlightSummaryAnalysis () . analyse ( f ) ; return f ; } 
@ java.lang.Override public java.lang.Object visit ( IC.AST.LocalVariable localVariable ) { java.lang.String localVariableStr = "" ; if ( localVariable . hasInitValue () ) { target = freshRegister () ; localVariableStr = localVariableStr . concat ( ( ( java.lang.String ) ( localVariable . getInitValue () . accept ( this ) ) ) ) ; localVariableStr = localVariableStr . concat ( Emit ( localVariable . getName () , target ) ) ; localVariable . getEnclosingScope () . setVaraibleReg ( localVariable . getName () , c ) ; return localVariableStr ; } return localVariable . getName () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/tarefa/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) public org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > buscarTarefa ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { java.lang.System.out . println ( ( "Buscando tarefa de id: " + id ) ) ; br.edu.ifsp.dsw.model.Tarefa tarefa = tarefaService . buscarPorId ( id ) ; if ( tarefa == null ) { java.lang.System.out . println ( ( ( "Tarefa de id :" + id ) + " nao foi encontrada." ) ) ; return new org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } return new org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > ( tarefa , org.springframework.http.HttpStatus.OK ) ; } 
@ java.lang.Override public void onDrawerOpened ( android.view.View drawerView ) { super . onDrawerOpened ( drawerView ) ; if ( ! ( isAdded () ) ) { return; } if ( ! ( mUserLearnedDrawer ) ) { mUserLearnedDrawer = true ; android.content.SharedPreferences sp = android.preference.PreferenceManager . getDefaultSharedPreferences ( getActivity () ) ; sp . edit () . putBoolean ( com.martin.martinthorneprojects.NavigationDrawerFragment.PREF_USER_LEARNED_DRAWER , true ) . commit () ; } getActivity () . supportInvalidateOptionsMenu () ; } 
@ java.lang.Override public int requestEnergy ( int energy , boolean simulate ) { int given = this . storage . extractEnergy ( energy , simulate ) ; if ( ! simulate ) { this . markDirty () ; if ( ! ( worldObj.isRemote ) ) { this . lastOut += given ; } } return given ; } 
public void showDate ( int year , int month ) { if ( ( mAdapter ) != null ) { mAdapter . setDate ( year , month ) ; initDateText () ; if ( ( onCalendarChangeListener ) != null ) onCalendarChangeListener . onMonthChanged ( year , ( month + 1 ) ) ; } } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { android.content.Context mContext = getApplicationContext () ; ru.meefik.linuxdeploy.MainActivity . notification ( mContext , null ) ; java.lang.String command = intent . getStringExtra ( "command" ) ; new ru.meefik.linuxdeploy.ExecScript ( mContext , command ) . start () ; return super . onStartCommand ( intent , flags , startId ) ; } 
public static org.talend.designer.components.hashfile.common.MATCHING_MODE parse ( java.lang.String matchingMode ) { org.talend.designer.components.hashfile.common.MATCHING_MODE [] multipleMatchingModes = org.talend.designer.components.hashfile.common.MATCHING_MODE . values () ; for ( org.talend.designer.components.hashfile.common.MATCHING_MODE multipleMatchingMode : multipleMatchingModes ) { if ( multipleMatchingMode . toString () . equals ( matchingMode ) ) { return multipleMatchingMode ; } } return null ; } 
private void initGui () { setContentView ( R.layout.activity_main ) ; butterknife.ButterKnife . bind ( this ) ; navView . setNavigationItemSelectedListener ( this ) ; navView . getMenu () . getItem ( 0 ) . setChecked ( true ) ; android.widget.LinearLayout navHeader = ( ( android.widget.LinearLayout ) ( navView . getHeaderView ( 0 ) ) ) ; navHeader . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { showFragment ( R.id.action_settings ) ; drawerLayout . closeDrawer ( GravityCompat.START ) ; } } ) ; } 
@ gov.gwssi.csc.scms.controller.user.RequestMapping ( value = "/node/{nodeId}" , method = RequestMethod.DELETE , headers = "Accept=application/json; charset=utf-8" ) public java.util.Map < java.lang.String , java.lang.String > deleteNode ( @ gov.gwssi.csc.scms.controller.user.RequestHeader ( value = gov.gwssi.csc.scms.controller.user.UserController.HEADER_AUTHORIZATION ) java.lang.String header , @ gov.gwssi.csc.scms.controller.user.PathVariable java.lang.String nodeId ) { try { gov.gwssi.csc.scms.controller.user.User user = userService . getRootUser ( header ) ; java.util.Map < java.lang.String , java.lang.String > result = nodeService . deleteNodeByNodeId ( nodeId , user ) ; return result ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; throw new java.lang.RuntimeException ( e ) ; } } 
private java.lang.String calc ( java.lang.String input ) { if ( input == null ) { return "" ; } java.lang.String word = "" ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { word += ( input . charAt ( i ) ) + 1 ; } return word ; } 
@ java.lang.Override @ javax.annotation.Nullable protected java.lang.String [] get ( org.bukkit.event.Event e ) { java.lang.String kingdom = null ; try { kingdom = org.kingdoms.manager.game.GameManagement . getPlayerManager () . getOfflineKingdomPlayer ( p . getSingle ( e ) ) . getKingdomName () ; } catch ( java.lang.NullPointerException ex ) { return null ; } return new java.lang.String [] { kingdom } ; } 
private void writeData ( org.n52.io.response.dataset.DataCollection < org.n52.io.response.dataset.measurement.MeasurementData > data , java.io.OutputStream stream ) throws java.io.IOException { for ( org.n52.io.response.dataset.DatasetOutput metadata : seriesMetadatas ) { org.n52.io.response.dataset.measurement.MeasurementData series = data . getSeries ( metadata . getId () ) ; writeData ( metadata , ( ( org.n52.io.response.dataset.measurement.MeasurementData ) ( series ) ) , stream ) ; } } 
@ java.lang.Override protected void onDraw ( android.graphics.Canvas canvas ) { super . onDraw ( canvas ) ; gridHeight = getHeight () ; gridWidth = getWidth () ; if ( ( triangulation ) != null ) { plotOnCanvas ( canvas ) ; } else { generateAndInvalidate () ; } } 
@ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attributeValue . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.editor_layout ) ; progressBar = new android.app.ProgressDialog ( this ) ; progressBar . setProgressStyle ( ProgressDialog.STYLE_SPINNER ) ; progressBar . setTitle ( "Work in Progress" ) ; progressBar . setCancelable ( false ) ; progressBar . setButton ( DialogInterface.BUTTON_NEGATIVE , "Cancel" , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { handler . sendEmptyMessage ( Utility.STOP_PROGRESS_MSG ) ; } } ) ; initUI () ; } 
public void removeFieldListItem ( java.lang.String getter , java.lang.String childListName , java.lang.String selectionName ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.NoSuchMethodException , java.lang.SecurityException , java.lang.reflect.InvocationTargetException { java.lang.reflect.Method mthGetSelected = this . getClass () . getMethod ( ( "get" + ( com.mcmatica.entity.webui.common.Utility . capitalize ( selectionName ) ) ) ) ; java.lang.Object itemselected ; itemselected = mthGetSelected . invoke ( this ) ; this . removeFieldListItem ( getter , childListName , itemselected ) ; } 
private int getWordId ( @ javax.annotation.Nonnull final java.lang.String word ) { if ( word2index . containsKey ( word ) ) { return word2index . get ( word ) ; } else { int w = word2index . size () ; word2index . put ( word , w ) ; return w ; } } 
public static char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } 
public void setTimePeriod ( java.lang.Long startTimeParam , java.lang.Long endTimeParam ) { long startTime = ( startTimeParam == null ) ? 0L : startTimeParam ; long endTime = ( endTimeParam == null ) ? teammates.common.util.TimeHelper . now ( 0.0 ) . getTimeInMillis () : endTimeParam ; query . startTimeMillis ( startTime ) ; query . endTimeMillis ( endTime ) ; this . startTime = startTime ; this . endTime = endTime ; } 
public boolean move ( boolean [] [] game , int pos , boolean player ) { if ( pos == 0 ) return true ; if ( ( game [ ( ! player ? 1 : 0 ) ] [ ( pos - 1 ) ] ) && ( game [ ( player ? 1 : 0 ) ] [ ( pos - 1 ) ] ) ) return true ; return false ; } 
public java.util.List < java.lang.String > getPropConfiguration ( java.lang.String lblProps ) throws java.io.IOException { java.util.List < java.lang.String > items = null ; try { if ( ( this . props ) == null ) { loadPropFile () ; } java.util.List < java.lang.String > rtrn = java.util.Arrays . asList ( ( ( java.lang.String ) ( this . props . get ( lblProps ) ) ) . split ( "\\s*,\\s*" ) ) ; return rtrn ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; } 
public void flushTicketsInFile ( java.lang.String fileName ) { javax.swing.tree.DefaultTreeModel defaultModel = ( ( javax.swing.tree.DefaultTreeModel ) ( taskTree . getModel () ) ) ; if ( ( fileToNodes . get ( fileName ) ) != null ) { for ( javax.swing.tree.DefaultMutableTreeNode node : fileToNodes . get ( fileName ) ) { defaultModel . removeNodeFromParent ( node ) ; fileToNodes . get ( fileName ) . remove ( node ) ; } } } 
@ java.lang.Override public void onGenerated ( android.support.v7.graphics.Palette palette ) { mCollapsingToolbar . setContentScrimColor ( palette . getVibrantColor ( R.attr.colorPrimary ) ) ; mCollapsingToolbar . setStatusBarScrimColor ( palette . getDarkVibrantColor ( R.attr.colorPrimaryDark ) ) ; com.centerstage.limelight.MovieFragment fragment = ( ( com.centerstage.limelight.MovieFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.movie_fragment ) ) ) ; if ( fragment != null ) fragment . onPaletteGenerated ( palette ) ; } 
public ui.Resizer.Size resize ( int width , int height ) { double wRatio = ( 1.0 * ( this . width ) ) / width ; double hRatio = ( 1.0 * ( this . height ) ) / height ; return hRatio < wRatio ? new ui.Resizer.Size ( ( ( int ) ( width * hRatio ) ) , ( ( int ) ( height * hRatio ) ) ) : new ui.Resizer.Size ( ( ( int ) ( width * wRatio ) ) , ( ( int ) ( height * wRatio ) ) ) ; } 
protected java.lang.String [] doInBackground ( java.util.ArrayList < java.lang.String > . . . passing ) { boolean validServer = false ; java.lang.String [] result = null ; try { org.eyeseetea.malariacare.network.PushClient pushClient = new org.eyeseetea.malariacare.network.PushClient ( null , context ) ; validServer = pushClient . isValidServer () ; if ( validServer ) result = pushClient . pullOrgUnitsCodes () ; else result = new java.lang.String [ 1 ] ; result [ 0 ] = "" ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return result ; } 
private static kafka.consumer.ConsumerConfig createConsumerConfig ( java.lang.String zkConnect , java.lang.String groupId ) { java.util.Properties props = new java.util.Properties () ; props . put ( "zookeeper.connect" , zkConnect ) ; props . put ( "group.id" , groupId ) ; props . put ( "zookeeper.session.timeout.ms" , "400" ) ; props . put ( "zookeeper.sync.time.ms" , "200" ) ; props . put ( "auto.commit.interval.ms" , "1000" ) ; return new kafka.consumer.ConsumerConfig ( props ) ; } 
public static java.lang.String superDecrypt ( java.lang.String start ) { if ( ( start . length () ) < 1 ) return start ; for ( int i = 0 ; i < 3 ; i ++ ) { start = Encryption . keyDecrypt ( 7 , start ) ; start = Encryption . descramble ( start , 7 ) ; } return start ; } 
public jsettlers.common.position.ShortPoint2D getNearestCuttableObjectPointForPlayer ( jsettlers.common.position.ShortPoint2D point , jsettlers.common.mapobject.EMapObjectType cuttableObject , int searchDistance , byte playerId ) { jsettlers.ai.highlevel.AiPositions sortedResourcePoints = sortedCuttableObjectsInDefaultPartition . get ( cuttableObject ) ; if ( sortedResourcePoints == null ) { return null ; } return getNearestPointInDefaultPartitionOutOfSortedMap ( point , sortedResourcePoints , playerId , searchDistance , null ) ; } 
protected java.lang.Void doInBackground ( java.lang.Void . . . unused ) { java.util.Map < java.lang.String , java.lang.Object > body = new java.util.HashMap <> () ; body . put ( "range_start" , start ) ; body . put ( "insert_before" , end ) ; if ( end > ( - 1 ) ) { com.reissgrvs.spotifyplaylisttool.SpotifyAPI.SpotifyAPIManager . getService () . reorderPlaylistTracks ( userID , playlistID , body ) ; } return null ; } 
@ java.lang.Override public void setup ( edu.gsgp.experiment.data.Dataset dataset , edu.gsgp.nodes.Node tree ) { super . setup ( dataset , tree ) ; double value ; for ( edu.gsgp.experiment.data.Instance instance : dataset ) { value = eval ( instance ) ; min = java.lang.Math . min ( min , value ) ; max = java.lang.Math . max ( max , value ) ; } } 
public boolean removeGeofence ( long id ) { if ( ! ( mGoogleApiClient . isConnected () ) ) { android.util.Log . i ( hk.ust.cse.comp4521.reminder.ReminderDataController.TAG , "Cannot connect to Google Service" ) ; return false ; } android.content.Intent intent = new android.content.Intent ( context , hk.ust.cse.comp4521.reminder.GeofenceTransitionIntentService . class ) ; android.app.PendingIntent pendingIntent = android.app.PendingIntent . getService ( context , ( ( ( int ) ( id ) ) * 7 ) , intent , PendingIntent.FLAG_NO_CREATE ) ; if ( pendingIntent == null ) return true ; LocationServices.GeofencingApi . removeGeofences ( mGoogleApiClient , pendingIntent ) . setResultCallback ( this ) ; return true ; } 
public boolean isUserNewRecord ( java.lang.String username , int score ) { for ( int record = 0 ; record < ( this . highscores . size () ) ; record ++ ) { CK.FileIO.Highscore.Highscore scoreNow = this . highscores . get ( record ) ; if ( ( scoreNow . getUsername () . equals ( username ) ) && ( ( scoreNow . getScore () ) < score ) ) { return true ; } } return false ; } 
private static boolean pathIsValid ( java.lang.String strPath ) { for ( java.lang.String existFile : com.izforge.izpack.panels.jdkpath.JDKPathPanelHelper.testFiles ) { java.io.File path = new java.io.File ( strPath , existFile ) . getAbsoluteFile () ; if ( ! ( path . exists () ) ) { return false ; } } return true ; } 
@ java.lang.Override public boolean onEditorAction ( io.github.mthli.Ninja.Activity.TextView v , int actionId , io.github.mthli.Ninja.Activity.KeyEvent event ) { if ( ( currentAlbumController ) == null ) { return false ; } java.lang.String query = inputBox . getText () . toString () . trim () ; if ( query . isEmpty () ) { io.github.mthli.Ninja.Activity.NinjaToast . show ( this , R.string.toast_input_empty ) ; return true ; } updateAlbum ( query ) ; hideSoftInput ( inputBox ) ; return false ; } 
@ java.lang.Override public void onClick ( final android.view.View v ) { if ( mediaPlayer . isPlaying () ) { mediaPlayer . stop () ; mediaPlayer . reset () ; ( ( android.widget.ImageButton ) ( v ) ) . setImageResource ( R.drawable.ic_track_play ) ; } else { mediaPlayer . start () ; ( ( android.widget.ImageButton ) ( v ) ) . setImageResource ( R.drawable.ic_track_stop ) ; } } 
@ java.lang.Override public boolean doAction ( java.lang.String value ) { char choice = value . toUpperCase () . charAt ( 0 ) ; switch ( choice ) { case 'D' : this . startDropTNT () ; break; case 'U' : this . startUseTNT () ; break; case 'B' : return true ; default: this . console . println ( "\n*** Invalid selection*** Try again" ) ; break; } return false ; } 
private boolean removeLispMapping ( org.opendaylight.yang.gen.v1.urn.opendaylight.lfm.control.plane.rev150314.lispaddress.LispAddressContainer eid ) { com.google.common.base.Preconditions . checkNotNull ( eid , "Cannot REMOVE new Mapping to LISP configuration store, EID is null." ) ; try { org.opendaylight.sfc.sfc_lisp.provider.api.SfcLispFlowMappingApi.LOG . trace ( "REMOVE mapping for EID: {}" , eid ) ; java.util.concurrent.Future < org.opendaylight.yangtools.yang.common.RpcResult < java.lang.Void > > result = lfmService . removeMapping ( org.opendaylight.sfc.sfc_lisp.provider.LispUtil . buildRemoveMappingInput ( eid , 0 ) ) ; result . get () . getResult () ; return true ; } catch ( java.lang.Exception e ) { org.opendaylight.sfc.sfc_lisp.provider.api.SfcLispFlowMappingApi.LOG . warn ( "Failed to REMOVE mapping for EID {} : {}" , eid , e ) ; } return false ; } 
public java.lang.String put ( java.lang.String key , java.lang.String value ) { if ( ( size ) == ( ( capacity ) * ( averageListCapacity ) ) ) { resize () ; } ru.spbau.mit.java.fall2017.containers.LinkedList l = table [ indexByKey ( key ) ] ; java.lang.String oldValue = table [ indexByKey ( key ) ] . add ( key , value ) ; if ( oldValue != null ) { return oldValue ; } else { ++ ( size ) ; return null ; } } 
@ java.lang.Override public double f ( double [] coeffs ) { double [] gen = new double [ xp.length ] ; double [] gradient = new double [ coeffs.length ] ; double [] diffY = new double [ xp.length ] ; double sumDiff = calcGradient ( coeffs , gen , gradient , diffY ) ; return sumDiff ; } 
public static java.util.ArrayList < com.nakamagaming.dd5espells.Spell > filterByClass ( java.util.ArrayList < com.nakamagaming.dd5espells.Spell > list , java.util.ArrayList < com.nakamagaming.dd5espells.helpers.ClassType > classTypes ) { java.util.ArrayList < com.nakamagaming.dd5espells.Spell > result = new java.util.ArrayList <> () ; for ( com.nakamagaming.dd5espells.Spell spell : list ) { for ( com.nakamagaming.dd5espells.helpers.ClassType classType : spell . getClassTypes () ) { if ( classTypes . contains ( classType ) ) { result . add ( spell ) ; break; } } } return result ; } 
public void ShareData ( java.lang.String content , java.lang.String title ) { android.content.Intent i = new android.content.Intent () ; i . setAction ( Intent.ACTION_SEND ) ; i . putExtra ( Intent.EXTRA_TEXT , ( ( title + "\n" ) + content ) ) ; i . setType ( "text/plain" ) ; startActivity ( android.content.Intent . createChooser ( i , "Choose App to Share" ) ) ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { switch ( mPosition ) { case 0 : getMenuInflater () . inflate ( R.menu.main , menu ) ; break; case 1 : getMenuInflater () . inflate ( R.menu.zone , menu ) ; break; default: getMenuInflater () . inflate ( R.menu.zone , menu ) ; } return true ; } 
@ java.lang.Override public java.util.List < io.mapsquare.osmcontributor.model.utils.OpeningHours > fromValue ( java.lang.String value ) { if ( value . trim () . isEmpty () ) { return null ; } java.util.List < io.mapsquare.osmcontributor.model.utils.OpeningHours > openingHoursList = new java.util.ArrayList <> () ; java.lang.String [] openingHours = value . split ( io.mapsquare.osmcontributor.ui.adapters.parser.OpeningHoursValueParser.HOURS_SEP ) ; for ( java.lang.String o : openingHours ) { if ( ! ( o . trim () . isEmpty () ) ) { fromSingleValue ( o , openingHoursList ) ; } } return openingHoursList ; } 
static void create ( io.realm.Realm realm , java.lang.String noteText ) { com.odinuts.memo.model.Parent parent = realm . where ( com.odinuts.memo.model.Parent . class ) . findFirst () ; io.realm.RealmList < com.odinuts.memo.model.Note > notes = parent . getNoteList () ; realm . beginTransaction () ; com.odinuts.memo.model.Note note = realm . createObject ( com.odinuts.memo.model.Note . class , com.odinuts.memo.model.Note . increment () ) ; note . setNote ( noteText ) ; notes . add ( note ) ; realm . commitTransaction () ; } 
public int getTagNameId ( java.lang.CharSequence tagName ) { int id ; if ( ! ( tagNames . containsKey ( tagName ) ) ) { id = tagNames . size () ; tagNames . put ( tagName , id ) ; } else { id = tagNames . get ( tagName ) ; } return id ; } 
public void setNewMetric ( java.lang.String newPath , java.lang.String fileName , java.lang.String metricName ) { this . filePath = newPath ; this . fileName = fileName ; this . metricName = metricName ; topJsonObject = new org.json.JSONObject () ; topJsonArray = new org.json.JSONArray () ; try { topJsonObject . put ( "target" , metricName ) ; dataArray = new org.json.JSONArray () ; topJsonObject . put ( "datapoints" , dataArray ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } topJsonArray . put ( topJsonObject ) ; } 
public void advanceTime ( double timeElapsed ) throws java.lang.IllegalArgumentException , jumpingalien.model.IllegalPositionException , jumpingalien.model.IllegalTimeException { if ( java.lang.Double . isNaN ( timeElapsed ) ) throw new java.lang.IllegalArgumentException ( "The elapsed time must be a number." ) ; updateCollisionTimers ( getAlien () , timeElapsed ) ; getAlien () . advanceTime ( timeElapsed ) ; centerWindow ( timeElapsed ) ; alienObjectCollisionEffects () ; geoCollisionEffects ( getAlien () ) ; for ( jumpingalien.model.GameObject gameobject : this . gameobjects ) { updateCollisionTimers ( gameobject , timeElapsed ) ; gameobject . advanceTime ( timeElapsed ) ; geoCollisionEffects ( gameobject ) ; } } 
public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setTouchAreaBindingOnActionDownEnabled ( false ) ; setTouchAreaBindingOnActionMoveEnabled ( false ) ; gameHud . dispose () ; gameHud . setVisible ( false ) ; detachChild ( gameHud ) ; myGarbageCollection () ; com.matedevs.protectthetown.manager.SceneManager . getInstance () . loadGameScene ( engine , this ) ; } return true ; } 
@ java.lang.Override public void onRestoreInstanceState ( android.os.Bundle savedInstanceState ) { super . onRestoreInstanceState ( savedInstanceState ) ; if ( savedInstanceState . containsKey ( sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO ) ) { mCurrentPhotoLarge = savedInstanceState . getParcelable ( sk.momosi.fuelapp.activities.UpdateCarActivity.PHOTO ) ; android.widget.ImageView im = ( ( android.widget.ImageView ) ( findViewById ( R.id.img_addcar_car ) ) ) ; im . setImageBitmap ( mCurrentPhotoLarge ) ; } } 
public com.jme3.math.Vector3f warp ( com.jme3.math.Vector3f newPos ) { com.jme3.math.Vector3f newPos2d = new com.jme3.math.Vector3f ( newPos.x , position.y , newPos.z ) ; currentCell = navMesh . findClosestCell ( newPos2d ) ; currentPos3d . set ( navMesh . snapPointToCell ( currentCell , newPos2d ) ) ; currentPos3d . setY ( newPos . getY () ) ; currentPos . set ( currentPos3d . getX () , currentPos3d . getZ () ) ; return currentPos3d ; } 
@ java.lang.Override public java.lang.Boolean call ( com.appunite.rx.example.model.model.AddPost addPost ) { final boolean nameIsPresent = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . name () ) ) ; final boolean bodyIsPresent = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . body () ) ) ; return nameIsPresent && bodyIsPresent ; } 
@ se.sjtu.formfoss.controller.RequestMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } 
public entities.Tile remove () { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove () ; } return oldTile ; } 
public static void DepthFirstSearch_Visit ( graph.CapGraph theGraph , java.lang.Integer vertex , java.util.HashSet < java.lang.Integer > visited , java.util.Stack < java.lang.Integer > finished ) { visited . add ( vertex ) ; for ( java.lang.Integer neighbor : theGraph . getGraph () . get ( vertex ) ) { if ( ! ( visited . contains ( neighbor ) ) ) { graph.DepthFirstSearch . DepthFirstSearch_Visit ( theGraph , neighbor , visited , finished ) ; } } finished . push ( vertex ) ; } 
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } } 
@ java.lang.Override protected void execute ( org.eclipse.core.resources.IMarker selectedMarker ) { try { org.sonarlint.eclipse.ui.internal.views.IssueLocationsView view = ( ( org.sonarlint.eclipse.ui.internal.views.IssueLocationsView ) ( org.eclipse.ui.PlatformUI . getWorkbench () . getActiveWorkbenchWindow () . getActivePage () . showView ( IssueLocationsView.ID ) ) ) ; view . setInput ( selectedMarker , true ) ; } catch ( java.lang.Exception e ) { org.sonarlint.eclipse.core.SonarLintLogger . get () . error ( "Unable to open Issue Location View" , e ) ; } } 
private static void put ( java.lang.Class < ? extends net.tridentsdk.server.packet.Packet > cls , net.tridentsdk.server.net.NetClient.NetState state , net.tridentsdk.server.packet.Packet.Bound bound , int id ) { int identifier = net.tridentsdk.server.packet.PacketRegistry . shift ( state , bound , id ) ; net.tridentsdk.server.packet.PacketRegistry.PACKET_IDS . put ( cls , identifier ) ; if ( bound == ( net.tridentsdk.server.packet.Packet.Bound.SERVER ) ) { net.tridentsdk.server.packet.PacketRegistry.PACKETS . put ( identifier , cls ) ; net.tridentsdk.server.packet.PacketRegistry.CTORS . put ( cls , com.esotericsoftware.reflectasm.ConstructorAccess . get ( cls ) ) ; } } 
private double average ( double [] returns , java.util.function.Predicate < java.lang.Integer > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = 0 ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( ii ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } 
@ com.facebook.react.uimanager.annotations.ReactProp ( name = "polylines" ) public void setPolylines ( com.baidu.mapapi.map.MapView mapView , com.facebook.react.bridge.ReadableArray options ) { for ( int i = 0 ; i < ( options . size () ) ; i ++ ) { com.facebook.react.bridge.ReadableMap option = options . getMap ( i ) ; org.lovebing.reactnative.baidumap.MarkerUtil . addPolyline ( mapView , option . getString ( "color" ) , option . getInt ( "width" ) , option . getArray ( "points" ) ) ; } } 
@ java.lang.Override public void onConnected ( final android.bluetooth.BluetoothDevice device ) { mLogger . fine ( ( ( "HeartRateConnectEventListener#onConnected: [" + device ) + "]" ) ) ; org.deviceconnect.android.deviceplugin.heartrate.data.HeartRateDevice hr = findRegisteredHeartRateDeviceByAddress ( device . getAddress () ) ; if ( hr == null ) { hr = registerHeartRateDevice ( device ) ; } else { hr . setConnectFlag ( true ) ; } if ( ! ( mConnectedDevices . contains ( hr ) ) ) { mConnectedDevices . add ( hr ) ; } if ( ( mHRDiscoveryListener ) != null ) { mHRDiscoveryListener . onConnected ( device ) ; } } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public void onJoin ( net.minecraftforge.fml.common.network.FMLNetworkEvent.ClientConnectedToServerEvent event ) { boolean singleplayer = net.minecraft.client.Minecraft . getMinecraft () . isSingleplayer () ; if ( ! singleplayer ) { java.lang.String ip = net.minecraft.client.Minecraft . getMinecraft () . getCurrentServerData () . serverIP ; if ( ip . contains ( ".hypixel.net" ) ) { QuickPlay.onHypixel = true ; java.lang.System.out . println ( "Currently on Hypixel!" ) ; } else { QuickPlay.onHypixel = false ; } } } 
@ java.lang.Override public void save ( java.lang.Object editingObject ) throws java.lang.Exception { org.uengine.modeling.resource.resources.ProcessDefinition definition = ( ( org.uengine.modeling.resource.resources.ProcessDefinition ) ( editingObject ) ) ; definition . setName ( getDisplayName () ) ; separateGlobalDefinition ( definition ) ; super . save ( editingObject ) ; definitionFactory . removeFromCache ( getPath () ) ; } 
private void onConnectionChanged ( android.content.Intent intent ) { android.net.NetworkInfo networkInfo = intent . getParcelableExtra ( WifiP2pManager.EXTRA_NETWORK_INFO ) ; if ( ( networkInfo . isConnected () ) && ( ! ( isConnected () ) ) ) { android.util.Log . d ( TAG , "No socket open. Trying to connect" ) ; mIsTryingToConnect = true ; mManager . requestConnectionInfo ( mChannel , this ) ; } else { this . disconnected () ; } } 
public void addRoute ( java.lang.Class < ? > target , java.lang.reflect.Method execMethod , java.lang.String url , blade.route.HttpMethod method ) { blade.route.RouteMatcher entry = new blade.route.RouteMatcher () ; entry.target = target ; entry.execMethod = execMethod ; entry.httpMethod = method ; entry.path = url ; if ( blade.Blade . debug () ) { blade.route.DefaultRouteMatcher.LOGGER . debug ( ( "Add Route：" + entry ) ) ; } routes . add ( entry ) ; } 
public void setElements ( java.util.List < ? > texts , boolean [] selected ) { int size = ( texts == null ) ? 0 : texts . size () ; setElements ( texts . toArray ( new java.lang.String [ size ] ) , null , selected ) ; } 
private boolean checkConnection ( java.lang.String host , int port ) { try { java.net.Socket socket = new java.net.Socket ( host , port ) ; java.io.PrintWriter out = new java.io.PrintWriter ( socket . getOutputStream () , true ) ; java.io.BufferedReader in = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () ) ) ; int data = in . read () ; socket . close () ; return data != ( - 1 ) ; } catch ( java.io.IOException e ) {} return false ; } 
private int dateByWeekday ( java.lang.String date , java.lang.String weekday ) { boolean nextDate = false ; int min ; do { min = dateToMin ( date , "00:00" , nextDate ) ; nextDate = true ; while ( ! ( bots.CalendarBot.CalDateFormat . minToWeekday ( min , firstYear ) . equals ( weekday ) ) ) { min ++ ; } } while ( min < ( bots.CalendarBot.CurrentDate . getDateInMin ( firstYear ) ) ) ; return min + ( 8 * 60 ) ; } 
@ java.lang.Override protected T convertValue ( java.lang.String [] value ) throws org.apache.wicket.util.convert.ConversionException { this . convertValue = true ; if ( ( value != null ) && ( ( value.length ) > 0 ) ) { this . convertedInput = this . provider . toChoice ( value [ 0 ] ) ; return this . convertedInput ; } else { this . convertedInput = null ; return null ; } } 
public void connectSimModel ( final thesis.core.SimModel simModel , final thesis.gui.mainwindow.actions.Actions actions ) { renderWorld = new thesis.core.world.RenderSimState ( simModel ) ; this . addMouseListener ( mouseState ) ; this . addMouseMotionListener ( mouseState ) ; renderWorld . setBounds ( 0 , 0 , getWidth () , getHeight () ) ; for ( thesis.gui.mainwindow.actions.renderopts.RenderOptAction action : actions . getRenderOptions () ) { action . connectToModel ( renderWorld . getRenderOptions () ) ; } } 
protected java.util.List < java.lang.String > createPackageList ( java.util.List < java.lang.String > pkgs , java.lang.String code , java.lang.String delim ) { java.util.List < java.lang.String > pkg = new java.util.ArrayList < java.lang.String > ( pkgs ) ; if ( code != null ) { java.lang.String [] codes = code . split ( delim ) ; for ( java.lang.String c : codes ) { if ( ( c . length () ) > 0 ) { pkg . add ( c ) ; } } } return pkg ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( flipped ) ) { flipped = true ; com.yiyangzhu.yydictionary.Word word = com.yiyangzhu.yydictionary.YoudaoDictionary . get ( show . getText () . toString () ) ; if ( word != null ) { show . setText ( word . toString () ) ; show . setGravity ( Gravity.NO_GRAVITY ) ; } } } 
protected boolean updateVideoSize ( int width , int height ) { matrixManager . setIntrinsicVideoSize ( width , height ) ; updateMatrixOnLayout () ; videoSize.x = width ; videoSize.y = height ; return ( width != 0 ) && ( height != 0 ) ; } 
public java.lang.Boolean checkActive ( int x ) { java.lang.System.out . println ( this . getX () ) ; if ( ( ( this . getX () ) >= ( x - 60 ) ) && ( ( this . getX () ) <= ( x + 120 ) ) ) { setInActive () ; return true ; } return false ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ; if ( permission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , com.example.qmma.featuredetection.SplashActivity.PERMISSIONS_STORAGE , com.example.qmma.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE ) ; } else { com.example.qmma.featuredetection.SplashActivity.Loader loader = new com.example.qmma.featuredetection.SplashActivity.Loader () ; loader . execute ( this ) ; } } 
public websays.accounting.CommissionItem createCommissionItem ( websays.accounting.BilledItem bi ) { double fee = websays.core.utils.CurrencyUtils . toEuros ( bi . getFee () , bi . getCurrency () ) ; int monthsFromStartOfContract = ( websays.core.utils.JodaUtils . monthsDifference ( bi.period.contractStart , bi.period.periodEnd ) ) + 1 ; fee = computeCommission ( fee , monthsFromStartOfContract ) ; return new websays.accounting.CommissionItem ( commissionnee , fee , this , bi ) ; } 
public void addMachine ( de.prob2.ui.project.Machine machine ) { java.util.List < de.prob2.ui.project.Machine > machinesList = this . getMachines () ; machinesList . add ( machine ) ; this . update ( new de.prob2.ui.project.Project ( this . getName () , this . getDescription () , machinesList , this . getPreferences () , this . getRunconfigurations () , this . getLocation () ) ) ; } 
public com.tut.beans.Utilisateur connecterUtilisateur ( javax.servlet.http.HttpServletRequest request ) { java.lang.String email = getValeurChamp ( request , com.tut.forms.ConnexionForm.CHAMP_IDF ) ; java.lang.String motDePasse = getValeurChamp ( request , com.tut.forms.ConnexionForm.CHAMP_PASS ) ; com.tut.beans.Utilisateur utilisateur = new com.tut.beans.Utilisateur () ; utilisateur = traiterEmail ( email , utilisateur ) ; traiterMotDePasse ( motDePasse , utilisateur ) ; if ( erreurs . isEmpty () ) { resultat = "Succès de la connexion." ; } else { resultat = "Echec de la connexion" ; } return utilisateur ; } 
@ java.lang.Override public void uploadProgress ( com.lzy.okgo.model.Progress innerProgress ) { if ( rawCall . isCanceled () ) return; if ( ( progress.status ) != ( com.lzy.okgo.model.Progress.LOADING ) ) { rawCall . cancel () ; return; } progress . from ( innerProgress ) ; postLoading ( progress ) ; } 
public static boolean isUnique ( final java.lang.String string ) { java.util.Set < java.lang.Character > set = new java.util.HashSet <> () ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { set . add ( string . charAt ( i ) ) ; } return ( set . size () ) == ( string . length () ) ; } 
@ net.minecraftforge.fml.common.eventhandler.SubscribeEvent public static void playerSettings ( com.feed_the_beast.ftbl.api.events.player.ForgePlayerConfigEvent event ) { com.latmod.modularpipes.data.ModularPipesPlayerData data = com.latmod.modularpipes.data.ModularPipesPlayerData . get ( event . getPlayer () ) ; event . getConfig () . setGroupName ( ModularPipes.MOD_ID , new net.minecraft.util.text.TextComponentString ( ModularPipes.MOD_NAME ) ) ; event . getConfig () . add ( ModularPipes.MOD_ID , "dev_mode" , data.devMode ) . setNameLangKey ( "modularpipes.config.general.dev_mode" ) ; } 
@ java.lang.Override public org.apache.metron.common.configuration.extensions.ParserExtensionConfig findOneParserExtension ( java.lang.String name ) throws org.apache.metron.rest.RestException { org.apache.metron.common.configuration.extensions.ParserExtensionConfig parserExtensionConfig ; try { parserExtensionConfig = org.apache.metron.common.configuration.ConfigurationsUtils . readParserExtensionConfigFromZookeeper ( name , client ) ; } catch ( org.apache.zookeeper.KeeperException e ) { return null ; } catch ( java.lang.Exception e ) { org.apache.metron.rest.service.impl.ExtensionServiceImpl.LOG . error ( "Error reading ParserExtensionConfig from Zookeeper" , e ) ; throw new org.apache.metron.rest.RestException ( e ) ; } return parserExtensionConfig ; } 
@ java.lang.Override protected void onPostExecuteSuccess ( gcum.gcumfisher.connection.Server.GetListResult photos ) { if ( photos != null ) { final java.util.List < gcum.gcumfisher.connection.ServerPhoto > list = photos . getPhotos () ; showPhotos ( list ) ; latest = ( list . isEmpty () ) ? null : list . get ( ( ( list . size () ) - 1 ) ) . getId () ; ( ( android.widget.Button ) ( findViewById ( R.id.more ) ) ) . setText ( getResources () . getString ( R.string.more_nb_after , photos . getNbAfter () ) ) ; } } 
private void checkForSplitRead ( final org.broadinstitute.hellbender.utils.read.GATKRead read , final java.util.List < org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence > evidenceList ) { final java.util.List < htsjdk.samtools.CigarElement > cigarElements = read . getCigar () . getCigarElements () ; if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasInitialSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , true ) ) ; } if ( org.broadinstitute.hellbender.tools.spark.sv.ReadClassifier . hasFinalSoftClip ( cigarElements , read ) ) { evidenceList . add ( new org.broadinstitute.hellbender.tools.spark.sv.BreakpointEvidence.SplitRead ( read , readMetadata , false ) ) ; } checkBigIndel ( cigarElements , read , evidenceList ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup parent , android.os.Bundle savedInstanceState ) { super . onCreateView ( inflater , mMapView , savedInstanceState ) ; android.view.View v = inflater . inflate ( R.layout.fragment_discover , parent , false ) ; mMapView = ( ( com.google.android.gms.maps.MapView ) ( v . findViewById ( R.id.mapview ) ) ) ; mMapView . onCreate ( savedInstanceState ) ; mGoogleMap = mMapView . getMap () ; mGoogleMap . getUiSettings () . setMyLocationButtonEnabled ( false ) ; mGoogleMap . setMyLocationEnabled ( true ) ; return v ; } 
private void updateCVRUnderAudit ( final int the_index ) { int index = the_index ; my_cvr_under_audit = - 1 ; while ( index < ( my_submitted_audit_cvrs . size () ) ) { if ( ( my_submitted_audit_cvrs . get ( index ) ) == ( java.lang.Long.MIN_VALUE ) ) { my_cvr_under_audit = index ; break; } index = index + 1 ; } } 
public java.lang.Object remove ( int index ) { ensureIndex ( index ) ; java.lang.Object temp = elementData [ index ] ; java.lang.System . arraycopy ( elementData , ( index + 1 ) , elementData , index , ( ( ( size ) - index ) - 1 ) ) ; elementData [ ( ( size ) - 1 ) ] = null ; ( size ) -- ; return temp ; } 
public int getSbOperationRowNum ( java.lang.String operator , java.lang.String opration , int startRow , int endRow , java.util.List < java.util.List < java.lang.String > > data ) { int oprationRowNum = 0 ; for ( int x = startRow ; x <= endRow ; x ++ ) { if ( ( data . get ( x ) . get ( 4 ) . equalsIgnoreCase ( operator ) ) && ( data . get ( x ) . get ( 5 ) . equalsIgnoreCase ( opration ) ) ) { oprationRowNum = x ; break; } } return oprationRowNum ; } 
public void setDisplayName ( final org.bukkit.entity.Player player ) { final java.lang.String prefix = searchNodes ( player , "prefix" ) ; final java.lang.String suffix = ( searchNodes ( player , "suffix" ) ) + "§f" ; player . setDisplayName ( ( ( prefix + ( org.bukkit.ChatColor . stripColor ( player . getName () ) ) ) + suffix ) ) ; players . put ( player . getName () , player . getWorld () . getUID () ) ; } 
@ com.modeliosoft.modelio.javadesigner.annotations.objid ( value = "22963c8e-9140-49f2-beb7-3b2458a06c51" ) private java.util.List < java.lang.Integer > bootstrapAttr ( java.util.List < java.lang.Integer > attr ) { java.util.ArrayList < java.lang.Integer > rand = new java.util.ArrayList < java.lang.Integer > ( attrN ) ; for ( int i = 1 ; i < ( ( attrN ) + 1 ) ; i ++ ) { rand . add ( i ) ; } java.util.Collections . shuffle ( rand ) ; attr = rand . subList ( 0 , attrSampleN ) ; return attr ; } 
private void init ( com.chariotsolutions.nfc.plugin.CallbackContext callbackContext ) { android.util.Log . d ( com.chariotsolutions.nfc.plugin.NfcPlugin.TAG , ( "Enabling plugin " + ( getIntent () ) ) ) ; startNfc () ; if ( inReaderMode ) { if ( ( savedTag ) != null ) { handleTag () ; } } else if ( ! ( recycledIntent () ) ) { parseMessage () ; } callbackContext . success () ; } 
private static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; } 
public void updateFixedPrincipalAmount ( final java.math.MathContext mc , final int periodNumber , final org.apache.fineract.organisation.monetary.domain.Money outstandingAmount ) { final java.lang.Integer numberOfPrincipalPaymentPeriods = org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms . calculateNumberOfRemainingPrincipalPaymentPeriods ( this . actualNumberOfRepayments , this . getRecurringMoratoriumOnPrincipalPeriods () , this . getPrincipalGrace () , ( periodNumber - 1 ) ) ; org.apache.fineract.organisation.monetary.domain.Money principal = outstandingAmount . dividedBy ( ( ( numberOfPrincipalPaymentPeriods - periodNumber ) + 1 ) , mc . getRoundingMode () ) ; this . fixedPrincipalAmount = principal . getAmount () ; } 
public void addSelectButton ( javax.swing.JPanel panel ) { java.awt.GridBagConstraints c = ip . setGrids ( 2 , 0 ) ; selectButton = ip . createButton ( "SELECT" , context.healthinformatics.GUI.InputPageComponents.DIMESIONWIDTH , context.healthinformatics.GUI.InputPageComponents.DIMESIONHEIGHT ) ; selectButton . addActionListener ( this ) ; c.insets = new java.awt.Insets ( context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS , context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS , context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS , context.healthinformatics.GUI.InputPageComponents.BUTTONINSETS ) ; panel . add ( selectButton , c ) ; } 
public void setUnit ( unitCalc.Unit unit ) { this . value = this . value . multiply ( unit.baseRelation ) ; this . measure = unit.measure ; this . siBase = new int [ 7 ] ; java.lang.System . arraycopy ( unit.measure.siBase , 0 , this . siBase , 0 , 7 ) ; if ( this . isConstant ) { this . id = "var" ; this . name = null ; } } 
private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount , int index ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , ( index + i ) ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } 
public static void executeEventCommands ( com.github.nthportal.uhc.core.Context context , java.lang.String event , java.util.List < java.util.function.Function < java.lang.String , java.lang.String > > replaceFunctions ) { lombok.val commands = context . plugin () . getConfig () . getStringList ( event ) ; for ( java.lang.String command : commands ) { if ( command . startsWith ( "/" ) ) { command = command . substring ( 1 ) ; } for ( lombok.val function : replaceFunctions ) { command = function . apply ( command ) ; } com.github.nthportal.uhc.util.CommandUtil . executeCommand ( context , command ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) { return true ; } if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) { return false ; } io.druid.java.util.common.granularity.PeriodSegmentGranularity that = ( ( io.druid.java.util.common.granularity.PeriodSegmentGranularity ) ( o ) ) ; return periodGranularity . equals ( that.periodGranularity ) ; } 
public void toggleComplete ( int id ) { if ( id != 0 ) { com.anoopkini.dotodo.web.models.TaskObject newTask = taskObjectDao . getTaskById ( id ) ; if ( newTask != null ) { if ( newTask . isComplete () ) { newTask . setComplete ( false ) ; newTask . setCompletedTS ( null ) ; } else { newTask . setComplete ( true ) ; newTask . setCompletedTS ( new java.util.Date () ) ; } newTask . setModifiedTS ( new java.util.Date () ) ; taskObjectDao . update ( newTask ) ; } } } 
@ com.google.devtools.build.lib.concurrent.ThreadSafety.ThreadSafe public static com.google.devtools.build.skyframe.SkyKey key ( com.google.devtools.build.lib.analysis.config.BuildOptions buildOptions , java.lang.Class < ? extends com.google.devtools.build.lib.analysis.config.BuildConfiguration.Fragment > fragmentType , com.google.devtools.build.lib.packages.RuleClassProvider ruleClassProvider ) { com.google.devtools.build.lib.analysis.config.BuildOptions optionsKey = buildOptions . trim ( com.google.devtools.build.lib.analysis.config.BuildConfiguration . getOptionsClasses ( com.google.common.collect.ImmutableList . < java.lang.Class < ? extends com.google.devtools.build.lib.analysis.config.BuildConfiguration.Fragment > > of ( fragmentType ) , ruleClassProvider ) ) ; return new com.google.devtools.build.skyframe.SkyKey ( SkyFunctions.CONFIGURATION_FRAGMENT , new com.google.devtools.build.lib.skyframe.ConfigurationFragmentValue.ConfigurationFragmentKey ( optionsKey , fragmentType ) ) ; } 
@ java.lang.Override public boolean inferBound ( wyopcl.translator.bound.Bounds bnd ) { bnd.isChanged = false ; max_x = bnd . getUpper ( x ) ; min_x = bnd . getLower ( x ) ; max_y = bnd . getUpper ( y ) ; min_y = bnd . getLower ( y ) ; if ( ( min_x ) != ( min_y ) ) { bnd.isChanged |= bnd . setLowerBound ( x , min_y ) ; } if ( ( max_x ) != ( max_y ) ) { bnd.isChanged |= bnd . setUpperBound ( x , max_y ) ; } return bnd.isChanged ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ! ( mInteractivePlayerView . isPlaying () ) ) { mInteractivePlayerView . start () ; fab . setImageResource ( R.drawable.ic_action_pause ) ; } else { mInteractivePlayerView . stop () ; fab . setImageResource ( R.drawable.ic_action_play ) ; } } 
@ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( this . equals ( other ) ) return true ; if ( ( this . checkIn . isBefore ( other . getCheckOutDate () ) ) && ( this . checkOut . isBefore ( other . getCheckInDate () ) ) ) return true ; return false ; } 
private static hu.oe.nik.szfmv17t.environment.utils.Vector2d [] getCorners ( hu.oe.nik.szfmv17t.environment.utils.Position collidableObjectPosition ) { double rot = collidableObjectPosition . getAxisAngle () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d center = collidableObjectPosition . getCenter () ; hu.oe.nik.szfmv17t.environment.utils.Vector2d [] worldCoords = hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . generateWorldCoords ( collidableObjectPosition ) ; return hu.oe.nik.szfmv17t.environment.utils.CollisionDetector . rotateWorldCoords ( rot , center , worldCoords ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.util.Log . d ( "click listener" , "working!" ) ; int itemPosition = getLayoutPosition () ; android.content.Intent intent = new android.content.Intent ( mContext , com.epicodus.a4u2poo.DetailActivity . class ) ; intent . putExtra ( "position" , itemPosition ) ; intent . putExtra ( "restrooms" , org.parceler.Parcels . wrap ( mRestrooms ) ) ; mContext . startActivity ( intent ) ; } 
public java.sql.ResultSet getFromDataBase ( java.lang.String query ) { java.sql.Connection con = com.teamSuperior.core.connection.DBConnect . connect ( com.teamSuperior.core.connection.DBConnect.url , com.teamSuperior.core.connection.DBConnect.username , com.teamSuperior.core.connection.DBConnect.password ) ; java.sql.ResultSet rs = null ; try { java.sql.Statement statement = con . createStatement () ; rs = statement . executeQuery ( query ) ; con . close () ; } catch ( java.sql.SQLException ex ) { java.lang.System.out . println ( ex . getMessage () ) ; com.teamSuperior.guiApp.GUI.AlertBox . display ( "Connection Error" , ex . getMessage () ) ; } return rs ; } 
public final int readCharacter ( final char . . . allowed ) throws java.io.IOException { char c ; java.util.Arrays . sort ( allowed ) ; while ( ( java.util.Arrays . binarySearch ( allowed , ( c = ( ( char ) ( readCharacter () ) ) ) ) ) < 0 ) {} return c ; } 
protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { calculation () ; currentAction = v . getContentDescription () . toString () ; expressionField . setText ( ( ( decimalFormat . format ( valueOne ) ) + ( currentAction ) ) ) ; resultField . setText ( null ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { android.content.Intent myIntent = new android.content.Intent ( ctx , com.historicar.app.activity.ResultActivity . class ) ; myIntent . putExtra ( Constants.PLACA_KEY , carros . get ( position ) . getPlaca () . replaceAll ( " - " , "" ) ) ; startActivity ( myIntent ) ; } 
@ java.lang.Override public int getSpanSize ( int position ) { if ( ( ( isHeader ( position ) ) || ( isFooter ( position ) ) ) || ( isLoadMore ( position ) ) ) { return gridLayoutManager . getSpanCount () ; } if ( spanSizeLookup != null ) { return spanSizeLookup . getSpanSize ( position ) ; } return 1 ; } 
public static java.lang.Iterable < ? > getIterable ( pcgen.cdom.enumeration.CharID id , java.lang.String . . . keys ) { java.lang.String k1 = keys [ 0 ] ; java.lang.String k2 = ( ( keys.length ) > 1 ) ? keys [ 1 ] : "" ; pcgen.output.base.ModelFactory modelFactory = pcgen.output.publish.OutputDB.outModels . get ( k1 , k2 ) ; if ( modelFactory == null ) { return null ; } return modelFactory . generate ( id ) ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { com.stemmeter.stem_meter.SensorConfig config = new com.stemmeter.stem_meter.SensorConfig ( ( finalPosition + 1 ) ) ; config . setFreq ( sensorFragInterface . getSensorConfig ( ( finalPosition + 1 ) ) . getFreq () ) ; if ( sdCheck . isChecked () ) { sdCheck . setChecked ( false ) ; config . setSDLogging ( false ) ; } else { sdCheck . setChecked ( true ) ; config . setSDLogging ( true ) ; } sensorFragInterface . sensorConfigWrite ( config ) ; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.routes . createTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.goals . createTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.notes . createTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.locations . createTable () ) ; db . execSQL ( transcend.rockeeper.sqlite.DatabaseHelper.settings . createTable () ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { boolean retval = true ; switch ( item . getItemId () ) { case android.R.id.home : onBackPressed () ; break; case R.id.change_password : changeAccountPassword ( account ) ; break; case R.id.delete_account : openAccountRemovalConfirmationDialog ( account ) ; break; default: retval = super . onOptionsItemSelected ( item ) ; break; } return retval ; } 
@ java.lang.Override public boolean accept ( ccl.v2_1.cat.CclCodeBlock infos ) { if ( ( infos . getKeyword () ) == null ) return false ; if ( csy.block.FunctionBlockSystem.DEF_PATTERN . matcher ( infos . getKeyword () ) . matches () ) { ( csy.block.FunctionBlockSystem.count ) ++ ; this . name = extractName ( infos . getKeyword () ) ; return true ; } return false ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( mContext , io.geeteshk.hyper.activity.ProjectActivity . class ) ; intent . putExtra ( "project" , mObjects . get ( newPos ) ) ; intent . addFlags ( Intent.FLAG_ACTIVITY_MULTIPLE_TASK ) ; if ( ( Build.VERSION.SDK_INT ) >= 21 ) { intent . addFlags ( Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ; } ( ( android.support.v7.app.AppCompatActivity ) ( mContext ) ) . startActivityForResult ( intent , 0 ) ; } 
@ java.lang.Override @ javax.jws.WebMethod ( exclude = true ) public void setState ( java.net.URI nodeInstanceID , javax.xml.namespace.QName state ) throws org.opentosca.instancedata.service.ReferenceNotFoundException { java.util.List < org.opentosca.model.instancedata.NodeInstance > nodeInstances = this . niDAO . getNodeInstances ( null , null , null , nodeInstanceID ) ; if ( ( nodeInstances == null ) || ( ( nodeInstances . size () ) != 1 ) ) { java.lang.String msg = java.lang.String . format ( "Failed to set State of NodeInstance: '%s' - does it exist?" , nodeInstanceID ) ; org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.LOG . warn ( msg ) ; throw new org.opentosca.instancedata.service.ReferenceNotFoundException ( msg ) ; } this . niDAO . setState ( nodeInstances . get ( 0 ) , state ) ; } 
public static org.sbolstandard.core2.SBOLDocument read ( java.io.BufferedInputStream in ) throws java.io.IOException , org.sbolstandard.core2.SBOLValidationException { org.sbolstandard.core2.SBOLDocument doc = new org.sbolstandard.core2.SBOLDocument () ; doc . setCreateDefaults ( true ) ; if ( ( org.sbolstandard.core2.GenBank.URIPrefix ) != null ) { throw new org.sbolstandard.core2.SBOLValidationException ( "No URI prefix has been provided." ) ; } doc . setDefaultURIprefix ( org.sbolstandard.core2.GenBank.URIPrefix ) ; org.sbolstandard.core2.GenBank . read ( doc , in ) ; return doc ; } 
public void onConnectionStateChange ( android.bluetooth.BluetoothGatt gatt , int status , int newState ) { java.lang.String intentAction ; java.lang.System.out . println ( status ) ; if ( newState == ( android.bluetooth.BluetoothProfile.STATE_CONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_CONNECTED ; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_CONNECTED ; broadcastUpdate ( intentAction ) ; mBluetoothGatt . discoverServices () ; } else if ( newState == ( android.bluetooth.BluetoothProfile.STATE_DISCONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_DISCONNECTED ; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_DISCONNECTED ; broadcastUpdate ( intentAction ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_home ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; homePresenter = new com.srijan.motosports.features.home.HomePresenter ( this ) ; setSupportActionBar ( toolbar ) ; setUpNavigationDrawer () ; setFragment ( new com.srijan.motosports.features.home.fragment.HomeFragment () ) ; getSupportActionBar () . setTitle ( "Srijan Motosports" ) ; } 
public static com.github.vincent_fuchs.comprehensive_testing.model.Risk getEnum ( java.lang.String risk ) { com.github.vincent_fuchs.comprehensive_testing.model.Risk [] values = com.github.vincent_fuchs.comprehensive_testing.model.Risk . values () ; for ( com.github.vincent_fuchs.comprehensive_testing.model.Risk value : values ) { if ( risk . equals ( value . toString () ) ) { return value ; } } throw new java.lang.UnsupportedOperationException ( ( "Could not find Risk enum for " + risk ) ) ; } 
public int compare ( java.lang.Object element1 , java.lang.Object element2 ) { Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj1 = ( ( Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo ) ( element1 ) ) ; Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj2 = ( ( Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo ) ( element2 ) ) ; int result = ( ( int ) ( ( obj1.overlap_size ) - ( obj2.overlap_size ) ) ) ; if ( result == 0 ) { return 0 ; } else if ( result > 0 ) { return - 1 ; } else { return 1 ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { v . setActivated ( ( ! ( v . isActivated () ) ) ) ; android.content.Intent intent = new android.content.Intent ( getActivity () , org.akvo.akvoqr.CameraActivity . class ) ; intent . putExtra ( Constant.BRAND , brand ) ; startActivity ( intent ) ; } 
public int NumSubMbPart ( java.lang.String type ) { if ( type . equals ( "P_L0_8x8" ) ) { return 1 ; } else if ( type . equals ( "P_L0_8x4" ) ) { return 2 ; } else if ( type . equals ( "P_L0_4x8" ) ) { return 2 ; } else if ( type . equals ( "P_L0_4x4" ) ) { return 4 ; } return 0 ; } 
private boolean urlInHashSet ( java.net.URL url , java.util.HashSet < java.lang.String > set ) { boolean returnBoolean = false ; for ( java.lang.String setItem : set ) { if ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils . urlHostPathMatch ( com.wordpress.httpspandareaktor.scrapetest.NetworkUtils . makeURL ( setItem ) , url ) ) { returnBoolean = true ; } } return returnBoolean ; } 
protected static org.olap4j.mdx.IdentifierNode getIdentifier ( java.lang.String . . . identifiers ) { java.lang.String identifier = "" ; for ( int i = 0 ; i < ( identifiers.length ) ; i ++ ) { if ( i == 0 ) { identifier = "~" + ( identifiers [ 0 ] ) ; } else { identifier += "_" + ( identifiers [ i ] ) ; } } return org.olap4j.mdx.IdentifierNode . ofNames ( identifier ) ; } 
protected void readGraphicsFromLibrary ( int templateID , double xCoor , double yCoor ) { if ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary . create ( templateID ) ; if ( dummy == null ) return; this . graphics = dummy.graphics ; this . extraSprites = dummy.extraSprites ; } else this . graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this . setPosition ( xCoor , yCoor ) ; } 
private static int findLeftPivot ( int [] array , int k ) { if ( k == ( - 1 ) ) return - 1 ; else if ( ( array.length ) > 0 ) { if ( k == 0 ) return - 1 ; else { int i = project2.NonInitiator . randRange ( 0 , k ) ; return array [ i ] ; } } else return - 1 ; } 
private java.lang.String getSubCommandDescriptions ( net.minecraft.command.ICommandSender sender ) { final java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( final net.minecraft.command.ICommand command : this . getSubCommands () ) { builder . append ( ( "\n" + ( command . getUsage ( sender ) ) ) ) ; } return builder . toString () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( ( selectedDevelopment ) != null ) && ( ! ( selectedDevelopment . isEmpty () ) ) ) { mSharedPrefEditor . putString ( Constants.KEY_HOUSING_DEVELOPMENT , selectedDevelopment ) . apply () ; android.content.Intent intent = new android.content.Intent ( this , com.nychareport.backlog.activities.HomePageActivity . class ) ; startActivity ( intent ) ; finish () ; } } 
public void testIsGCEResultValid ( ) throws java.lang.InterruptedException { latch = new java.util.concurrent.CountDownLatch ( com.elorri.android.builditbigger.ApplicationTest.COUNT_LATCH ) ; com.elorri.android.builditbigger.GCEndpointsApiService task = new com.elorri.android.builditbigger.GCEndpointsApiService ( null ) ; task . execute ( getContext () ) ; task . setListener ( new com.elorri.android.builditbigger.GCEndpointsApiService.GCEndpointsApiServiceListener () { @ java.lang.Override public void onCompleted ( java.lang.String joke ) { result = joke ; latch . countDown () ; } } ) ; latch . await () ; assertNotNull ( result ) ; assertEquals ( "This is a joke from a Java Library" , result ) ; } 
public net.masterthought.dlanguage.highlighting.annotation.Problems checkFileSyntax ( @ org.jetbrains.annotations.NotNull com.intellij.psi.PsiFile file ) { final java.lang.String dubPath = ToolKey.DUB_KEY . getPath ( file . getProject () ) ; if ( dubPath == null ) return new net.masterthought.dlanguage.highlighting.annotation.Problems () ; java.lang.String result = processFile ( file , dubPath ) ; return findProblems ( result , file ) ; } 
@ java.lang.Override public java.util.List < org.opennms.web.enlinkd.LldpLinkNode > getLldpLinks ( int nodeId ) { java.util.List < org.opennms.web.enlinkd.LldpLinkNode > nodelinks = new java.util.ArrayList < org.opennms.web.enlinkd.LldpLinkNode > () ; for ( org.opennms.netmgt.model.LldpLink link : m_lldpLinkDao . findByNodeId ( java.lang.Integer . valueOf ( nodeId ) ) ) { nodelinks . add ( convertFromModel ( nodeId , link ) ) ; } return nodelinks ; } 
private java.lang.String editCmd ( java.lang.String s ) { if ( s . contains ( "CMD" ) ) { java.lang.String c = s . replaceAll ( ".*?CMD " , "" ) . replaceAll ( "\\[" , "" ) . replaceAll ( "\\]" , "" ) . replaceAll ( "\"" , "" ) ; return c ; } else return null ; } 
public void addUser ( final java.lang.String iName , java.lang.String iPassword , final java.lang.String iPermissions ) throws java.io.IOException { if ( iPassword == null ) iPassword = com.orientechnologies.orient.core.security.OSecurityManager . instance () . digest2String ( java.lang.String . valueOf ( random . nextLong () ) , false ) ; iPassword = com.orientechnologies.orient.core.security.OSecurityManager . instance () . digest2String ( iPassword , true ) ; serverCfg . setUser ( iName , iPassword , iPermissions ) ; serverCfg . saveConfiguration () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { final boolean star = ! ( bundle . getBoolean ( Constants.STAR ) ) ; final int starDrawable = ( star ) ? R.drawable.ic_star_selected : R.drawable.ic_star_unselected ; starView . setImageDrawable ( android.support.v4.content.ContextCompat . getDrawable ( getActivity () . getApplicationContext () , starDrawable ) ) ; bundle . putBoolean ( Constants.STAR , star ) ; android.util.Log . d ( "id" , java.lang.String . valueOf ( id ) ) ; onCreateView ( inflater , container , savedInstanceState ) ; } 
protected java.util.List < java.lang.String > validateNoIntersectingInterval ( com.jraska.vsb.or1.data.Output output ) { java.util.List < com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper > [] machineIntervals = getIntervalsForMachines ( output ) ; java.util.List < java.lang.String > validationErrors = new java.util.ArrayList < java.lang.String > () ; for ( int machineIndex = 0 ; machineIndex < ( output . getMachinesCount () ) ; machineIndex ++ ) { java.util.List < com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper > intervals = machineIntervals [ machineIndex ] ; validationErrors . addAll ( checkForIntersectionErrors ( intervals ) ) ; } return validationErrors ; } 
private boolean hasTechnologyChanged ( final com.qcadoo.model.api.Entity order , final com.qcadoo.model.api.Entity technology ) { com.qcadoo.model.api.Entity existingOrder = getExistingOrder ( order ) ; if ( existingOrder == null ) { return false ; } com.qcadoo.model.api.Entity existingOrderTechnology = existingOrder . getBelongsToField ( TechnologiesConstants.MODEL_TECHNOLOGY ) ; if ( existingOrderTechnology == null ) { return true ; } return ! ( existingOrderTechnology . equals ( technology ) ) ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { java.lang.String point = cmdAnimator.Prompts . promptUserForPoint () ; cmdAnimator.GUI . getInstance () . buttonExecuteCalled = true ; if ( ( point != null ) && ( point . equalsIgnoreCase ( "background" ) ) ) { cmdAnimator.GuiCommands . executeBackgroundImageAdditionCommand ( cmdAnimator.GUI . getInstance () , canvasImage . getImageFilename () ) ; } else cmdAnimator.GuiCommands . executeImageAdditionCommand ( cmdAnimator.GUI . getInstance () , canvasImage . getImageFilename () , point ) ; } 
@ java.lang.Override public void onError ( com.androidnetworking.error.ANError anError ) { try { android.util.Log . d ( in.reweyou.reweyou.UserChat.TAG , ( "onError: " + ( anError . getResponse () ) ) ) ; userChatAdapter . changestateofsendingmessage ( false ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
private void removeInteractorLink ( org.reactome.web.diagram.client.InteractorLink link ) { org.reactome.web.diagram.data.InteractorsContent interactors = context . getInteractors () ; if ( link instanceof org.reactome.web.diagram.client.DynamicLink ) { org.reactome.web.diagram.client.DynamicLink aux = ( ( org.reactome.web.diagram.client.DynamicLink ) ( link ) ) ; org.reactome.web.diagram.client.InteractorEntity entity = aux . getInteractorEntity () ; entity . removeLink ( aux ) ; if ( entity . getLinks () . isEmpty () ) interactors . removeFromView ( currentResource , entity ) ; } interactors . removeInteractorLink ( currentResource , link ) ; interactors . removeFromView ( currentResource , link ) ; } 
private java.lang.String power ( int slotNumber , int action ) throws java.lang.Exception { byte [] response = new byte [ 0 ] ; try { response = reader . power ( slotNumber , action ) ; } catch ( com.acs.smartcard.ReaderException e ) { throw new java.lang.Exception ( e . getMessage () ) ; } return toHexString ( response , response.length ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.util.Calendar date = java.util.Calendar . getInstance () ; date . setTime ( mDate ) ; android.app.DatePickerDialog dialog = new android.app.DatePickerDialog ( this , mDateListener , date . get ( java.util.Calendar.YEAR ) , date . get ( java.util.Calendar.MONTH ) , date . get ( java.util.Calendar.DAY_OF_MONTH ) ) ; dialog . show () ; } 
@ java.lang.Override @ javax.transaction.Transactional public edu.hs.bremen.model.dto.OrderDto deleteBasketEntry ( java.lang.String userUuid , edu.hs.bremen.model.dto.BasketEntryDto basketEntryDto ) { final edu.hs.bremen.model.UserEntity userEntity = userManager . getUser ( userUuid ) ; final edu.hs.bremen.model.BasketEntryEntity basketEntryEntity = basketManager . getUpdatedBasketEntry ( userEntity , basketEntryDto , java.lang.Boolean.TRUE ) ; if ( ( basketEntryEntity . getProductCount () ) <= 0 ) { basketManager . deleteBasketEntryFromOrder ( userEntity , basketEntryEntity ) ; } return edu.hs.bremen.model.dto.OrderDto . fromOrder ( orderManager . getOrder ( userEntity ) ) ; } 
public static boolean isSerializedType ( final java.lang.reflect.Field iField ) { final com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSchema = com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . getCurrentSerializedSchema () ; if ( serializedSchema == null ) return false ; if ( ! ( serializedSchema.classes . contains ( iField . getDeclaringClass () ) ) ) com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . registerCallbacks ( iField . getDeclaringClass () ) ; java.util.Map < java.lang.reflect.Field , java.lang.Class < ? > > serializerFields = serializedSchema.serializedFields . get ( iField . getDeclaringClass () ) ; return ( serializerFields != null ) && ( ( serializerFields . get ( iField ) ) != null ) ; } 
public static java.sql.Date convertNewsApiDateStringToDate ( java.lang.String date ) { if ( date == null ) return null ; java.lang.String year = date . substring ( 0 , 4 ) ; java.lang.String month = date . substring ( 5 , 7 ) ; java.lang.String day = date . substring ( 8 , 10 ) ; long timeInMilliSec = new java.util.GregorianCalendar ( java.lang.Integer . parseInt ( year ) , ( ( java.lang.Integer . parseInt ( month ) ) - 1 ) , java.lang.Integer . parseInt ( day ) ) . getTimeInMillis () ; return new java.sql.Date ( timeInMilliSec ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton compoundButton , boolean b ) { switch ( compoundButton . getId () ) { case R.id.cod_client_fragment : break; case R.id.qr_client_fragment : if ( b ) _qrAmountll . setVisibility ( View.VISIBLE ) ; else _qrAmountll . setVisibility ( View.GONE ) ; break; case R.id.bt_client_fragment : if ( b ) _btAmountll . setVisibility ( View.VISIBLE ) ; else _btAmountll . setVisibility ( View.GONE ) ; break; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.os.Bundle b = getArguments () ; java.lang.String fileName = b . getString ( com.koroshiya.fragments.ReadFragment.ARG_FILE , "" ) ; android.util.Log . i ( "FLA" , ( "Create: " + fileName ) ) ; int page = b . getInt ( com.koroshiya.fragments.ReadFragment.ARG_PAGE , ( - 1 ) ) ; reset ( fileName , page , false ) ; } 
public static java.util.UUID getSnomedDescriptionType ( int type ) { switch ( type ) { case 0 : return IsaacMetadataAuxiliaryBinding.DEFINITION_DESCRIPTION_TYPE . getPrimodialUuid () ; case 2 : return IsaacMetadataAuxiliaryBinding.SYNONYM . getPrimodialUuid () ; case 3 : return IsaacMetadataAuxiliaryBinding.FULLY_SPECIFIED_NAME . getPrimodialUuid () ; } throw new java.lang.RuntimeException ( ( "Unhandled description type " + type ) ) ; } 
public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { if ( pMatrixMode != ( this . mMatrixMode ) ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.main_menu ) ; findViewById ( R.id.new_game_button ) . setOnClickListener ( this ) ; findViewById ( R.id.records_button ) . setOnClickListener ( this ) ; findViewById ( R.id.about_the_game_button ) . setOnClickListener ( this ) ; findViewById ( R.id.quit_button ) . setOnClickListener ( this ) ; } 
public int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } 
private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.lang.Long durationInNs , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( ( ( counterValue != null ) && ( durationInNs != null ) ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } return result ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String movieId = ( ( java.lang.String ) ( v . getTag ( R.id.poster_image_view ) ) ) ; android.content.Intent detailsActivityIntent = new android.content.Intent ( getActivity () , br.com.dgimenes.popmovies.DetailsActivity . class ) ; detailsActivityIntent . putExtra ( DetailsActivity.MOVIE_ID_PARAM , movieId ) ; startActivity ( detailsActivityIntent ) ; } 
public void take ( double amount ) { double sum = ( curSum ) + ( ( decimals ) / 100.0 ) ; sum -= amount ; curSum = ( ( int ) ( sum ) ) ; decimals = ( ( int ) ( java.lang.Math . round ( ( ( sum * 100 ) - ( ( curSum ) * 100 ) ) ) ) ) ; } 
public java.lang.String leftShift ( java.lang.String input , int times ) { java.lang.String temp = input ; java.lang.StringBuilder strb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < times ; i ++ ) { strb . append ( temp . substring ( 1 ) ) ; strb . append ( temp . substring ( 0 , 1 ) ) ; temp = strb . toString () ; strb = new java.lang.StringBuilder () ; } return temp ; } 
private void setupLogo () { android.app.Fragment fragmentLogo = fm . findFragmentById ( R.id.fragmentContainer ) ; if ( fragmentLogo == null ) { fragmentLogo = new testproject.halfmoonstudios.com.ponder.LogoFragment () ; fm . beginTransaction () . add ( R.id.fragmentContainer , fragmentLogo ) . commit () ; cd = new android.os.CountDownTimer ( 2000 , 10000 ) { @ java.lang.Override public void onTick ( long millisUntilFinished ) {} @ java.lang.Override public void onFinish () { replaceMenuFragment () ; replaceOptionsFragment () ; } } ; cd . start () ; } } 
public void setHit ( boolean isHit ) { this . isHit = isHit ; if ( ! ( name . contains ( "water" ) ) ) { try { component . setActiveAnimationIndex ( ( isHit ? 1 : 0 ) ) ; } catch ( java.lang.IllegalArgumentException iae ) { de.hsb.ismi.jbs.engine.utility.debug.DebugLog . logError ( iae ) ; } } } 
public boolean cancelSeats ( int no ) { if ( ( no > ( this . booked ) ) && ( no > 0 ) ) { return false ; } else { this . booked = - no ; this . availability += no ; this . setChanged () ; this . notifyObservers ( this . availability ) ; this . clearChanged () ; return true ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View loadedFragment = inflater . inflate ( R.layout.fragment_manage_group_products , container , false ) ; initializeWidgets ( loadedFragment ) ; setupToolbar () ; setupAddProductButtonListener () ; setupRecyclerView () ; populateProductList () ; return loadedFragment ; } 
@ java.lang.Override public void validate ( java.lang.Object target , org.springframework.validation.Errors errors ) { com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ( ( com.pce.domain.dto.PukGroupForPukDto ) ( target ) ) ; if ( pukGroupDto != null ) { long pukGroupId = pukGroupDto . getPukGroupId () ; java.util.Optional < com.pce.domain.PukGroup > pukGroupById = pukGroupService . getPukGroupById ( pukGroupId ) ; if ( ! ( pukGroupById . isPresent () ) ) { errors . rejectValue ( "pukGroupId" , "pukGroup.not.exists" , ( ( "Puk Group " + pukGroupId ) + " is not exists in the system, please select different one" ) ) ; } } } 
@ java.lang.Override protected void onLayout ( boolean changed , int l , int t , int r , int b ) { if ( ! changed ) return; updateBottomViews () ; if ( ( mOnLayoutListeners ) != null ) for ( int i = 0 ; i < ( mOnLayoutListeners . size () ) ; i ++ ) { mOnLayoutListeners . get ( i ) . onLayout ( this ) ; } } 
public th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse doService ( th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112Operation insertPOSO0112OperationRequest ) { th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse response = new th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse () ; th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( " In  InsertPOSO112OperationService.doService ###" ) ; try { th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( ( " #####################################  :" + ( insertPOSO0112OperationWsTemplate ) ) ) ; response = ( ( th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse ) ( insertPOSO0112OperationWsTemplate . marshalSendAndReceive ( insertPOSO0112OperationRequest ) ) ) ; th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( ( " ##################################### After Call InsertPOSO0112OperationService response:  " + response ) ) ; } catch ( java.lang.Exception ex ) { th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . error ( ( " ############## Error Call InsertPOSO0112OperationService :" + ( ex . getMessage () ) ) ) ; } return response ; } 
private byte [] removeId ( byte [] payload ) { byte [] array = new byte [ ( payload.length ) - 1 ] ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { array [ i ] = payload [ ( i + 1 ) ] ; } return array ; } 
@ java.lang.Override public java.lang.String getValue ( mage.game.Game game ) { java.lang.StringBuilder sb = mage.cards.CardsImpl.threadLocalBuilder . get () ; java.util.List < java.lang.String > cards = new java.util.ArrayList <> () ; for ( java.util.UUID cardId : this ) { mage.cards.Card card = game . getCard ( cardId ) ; cards . add ( card . getName () ) ; } java.util.Collections . sort ( cards ) ; for ( java.lang.String name : cards ) { sb . append ( name ) . append ( ":" ) ; } return sb . toString () ; } 
public void update ( double timestep ) { xVel += timestep * ( ( xForce ) / ( mass ) ) ; yVel += timestep * ( ( yForce ) / ( mass ) ) ; x += timestep * ( xVel ) ; y += timestep * ( yVel ) ; } 
public static java.util.Collection < hslu.bda.medimemory.entity.Eat > getAllEatValues ( hslu.bda.medimemory.database.DbAdapter dbAdapter ) { java.util.Collection < hslu.bda.medimemory.entity.Eat > allEatValues = new java.util.ArrayList < hslu.bda.medimemory.entity.Eat > () ; try { java.util.Collection < android.content.ContentValues > allContentValues = dbAdapter . getAllByTable ( DbHelper.TABLE_MEDI_EAT ) ; for ( android.content.ContentValues contentValues : allContentValues ) { hslu.bda.medimemory.entity.Eat eat = hslu.bda.medimemory.entity.Eat . copyContentValuesToObject ( contentValues ) ; allEatValues . add ( eat ) ; } } catch ( java.lang.Exception e ) { java.lang.System . console () . printf ( e . getMessage () ) ; } return allEatValues ; } 
private void removeReplacementSpan ( java.lang.Class < ? > clazz , int start ) { java.lang.Object replacementSpan = getAssignSpan ( replaceMap . get ( clazz ) . clazz , start , start ) ; getEditableText () . removeSpan ( replacementSpan ) ; getEditableText () . delete ( ( start - 1 ) , start ) ; replaceMap . get ( clazz ) . position = - 1 ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public java.util.Map < java.lang.String , java.lang.Object > executeOperation ( @ org.springframework.web.bind.annotation.RequestHeader ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.REQUEST_HEADER_NAME_SESSION_ID ) java.lang.String sessionId , @ org.springframework.web.bind.annotation.RequestParam ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_QUERY_KEY ) java.lang.String query , @ org.springframework.web.bind.annotation.RequestParam ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_OPERATION_NAME , required = false ) java.lang.String operationName , @ org.springframework.web.bind.annotation.RequestParam ( value = org.ow2.proactive.scheduling.api.controllers.GraphQLController.DEFAULT_VARIABLES_KEY , required = false ) java.lang.String variables ) throws java.io.IOException { log . debug ( "sessionId={}" , sessionId ) ; java.lang.String username = authenticationService . authenticate ( sessionId ) ; log . trace ( "username={}" , username ) ; log . debug ( "query={}, operationName={}, variables={}" , query , operationName , variables ) ; return graphqlService . executeQuery ( query , operationName , new org.ow2.proactive.scheduling.api.graphql.common.GraphqlContext ( username , sessionId ) , decodeIntoMap ( variables ) ) ; } 
@ java.lang.Override protected byte [] getFromStore ( long uid ) throws java.io.IOException { int docid = mapDocId ( uid ) ; if ( docid < 0 ) return null ; org.apache.lucene.index.IndexReader reader = null ; if ( ( _currentReaderData ) != null ) { reader = _currentReaderData.reader ; } if ( ( docid >= 0 ) && ( reader != null ) ) { org.apache.lucene.document.Document doc = reader . document ( docid ) ; if ( doc != null ) { return doc . getBinaryValue ( _field ) ; } } return null ; } 
public void uninstallClientDecorations ( javax.swing.JRootPane root ) { uninstallBorder ( root ) ; uninstallWindowListeners ( root ) ; setTitlePane ( root , null ) ; uninstallLayout ( root ) ; int style = com.jtattoo.plaf.DecorationHelper . getWindowDecorationStyle ( root ) ; if ( style == ( com.jtattoo.plaf.BaseRootPaneUI.NONE ) ) { root . repaint () ; root . revalidate () ; } if ( ( ( window ) != null ) && ( ( savedCursor ) != null ) ) { window . setCursor ( savedCursor ) ; savedCursor = null ; } window = null ; } 
public void handleMessage ( android.os.Message msg ) { if ( ! ( com.fionera.cleaner.utils.DroidWallApi . hasRootAccess ( mContext , true ) ) ) { return; } if ( com.fionera.cleaner.utils.DroidWallApi . applyIpTablesRules ( mContext , true ) ) { com.fionera.cleaner.utils.ShowToast . show ( "规则已应用" ) ; } if ( ( progress ) != null ) { progress . dismiss () ; } } 
@ java.lang.Override public void onActivityCreated ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; setEmptyText ( "No entry found" ) ; mAdapter = new com.example.daniel.todule_android.adapter.HistoryAdapter ( getActivity () , null , 0 ) ; setListAdapter ( mAdapter ) ; getActivity () . getSupportLoaderManager () . initLoader ( com.example.daniel.todule_android.activities.ToduleHistoryFragment.LOADER_ID , null , this ) ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent intent ) { super . onActivityResult ( requestCode , resultCode , intent ) ; if ( requestCode == 1 ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { android.util.Log . i ( "addpost" , "back button clicked 2" ) ; currentUser = intent . getParcelableExtra ( "user" ) ; currentUserToken = intent . getParcelableExtra ( "accessToken" ) ; } } } 
@ java.lang.Override public void process ( org.apache.uima.jcas.JCas aJCas ) throws org.apache.uima.analysis_engine.AnalysisEngineProcessException { try ( java.io.OutputStream docOS = getOutputStream ( aJCas , ".json" ) ) { jcs . serialize ( aJCas . getCas () , docOS ) ; if ( ! ( typeSystemWritten ) ) { writeTypeSystem ( aJCas ) ; typeSystemWritten = true ; } } catch ( java.lang.Exception e ) { throw new org.apache.uima.analysis_engine.AnalysisEngineProcessException ( e ) ; } } 
protected void doPost ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.io.PrintWriter out = response . getWriter () ; response . setContentType ( com.foodstore.serg.controller.CONTENT_TYPE ) ; java.util.List < com.foodstore.serg.model.Meal > meals = com.foodstore.serg.service.MealService . getAll () ; if ( meals . isEmpty () ) { request . setAttribute ( "success_message" , com.foodstore.serg.controller.NO_PRODUCT ) ; } else { request . setAttribute ( "success_message" , com.foodstore.serg.controller.LIST_OF_MEALS ) ; request . setAttribute ( "food" , meals ) ; } getServletContext () . getRequestDispatcher ( "/dashboard.jsp" ) . forward ( request , response ) ; } 
private boolean putNewTask ( TASK newTask ) { java.lang.String url = newTask . getKey () ; boolean s = mExecuteQueue . offer ( newTask ) ; android.util.Log . w ( com.arialyy.aria.core.queue.pool.ExecutePool.TAG , ( "任务添加" + ( s ? "成功" : ( "失败，【" + url ) + "】" ) ) ) ; if ( s ) { mExecuteArray . put ( com.arialyy.aria.util.CommonUtil . keyToHashKey ( url ) , newTask ) ; } return s ; } 
public boolean sendToServer ( org.bukkit.entity.Player player , java.lang.String destination , boolean callEvent ) { if ( callEvent ) { com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent event = new com.yahoo.tracebachi.DeltaEssentials.Events.PlayerServerSwitchEvent ( player , destination ) ; org.bukkit.Bukkit . getPluginManager () . callEvent ( event ) ; if ( event . isCancelled () ) { return false ; } } com.google.common.io.ByteArrayDataOutput output = com.google.common.io.ByteStreams . newDataOutput () ; output . writeUTF ( "Connect" ) ; output . writeUTF ( destination ) ; player . sendPluginMessage ( this , "BungeeCord" , output . toByteArray () ) ; return true ; } 
public void execute ( java.lang.String command ) { for ( int i = 0 ; i < ( command . length () ) ; i ++ ) { switch ( command . charAt ( i ) ) { case Command.FORWARD : case Command.BACKWARD : if ( ! ( move ( command . charAt ( i ) ) ) ) { return; } break; case Command.RIGHT : case Command.LEFT : rotate ( command . charAt ( i ) ) ; break; } } } 
public static double S ( double t ) { double count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count >= 0 ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; double newCount = ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } } 
private static void close ( java.sql.Statement statement ) { try { if ( statement == null ) { return; } java.sql.Connection connection = statement . getConnection () ; statement . close () ; connection . close () ; } catch ( java.sql.SQLException e ) { com.mayhew3.drafttower.server.PlayerDataSourceImpl.logger . log ( java.util.logging.Level.SEVERE , "Unable to close SQL connection after use." , e ) ; } } 
@ java.lang.Override public float estimate ( us.thirdmillenium.desktoptrainer.ai.TileNode node , us.thirdmillenium.desktoptrainer.ai.TileNode endNode ) { com.badlogic.gdx.math.Vector2 start = new com.badlogic.gdx.math.Vector2 ( node . getCellX () , node . getCellY () ) ; com.badlogic.gdx.math.Vector2 end = new com.badlogic.gdx.math.Vector2 ( endNode . getCellX () , endNode . getCellY () ) ; return start . dst ( end ) ; } 
public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } 
@ java.lang.Override public void run ( org.zstack.network.service.eip.FlowTrigger trigger , java.util.Map data ) { org.zstack.network.service.eip.EipBackend bkd = getEipBackend ( providerType ) ; bkd . applyEip ( struct , new org.zstack.header.core.Completion ( trigger ) { @ java.lang.Override public void success () { trigger . next () ; } @ java.lang.Override public void fail ( org.zstack.header.errorcode.ErrorCode errorCode ) { trigger . fail ( errorCode ) ; } } ) ; } 
public static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String SQL_CREATE_SHOES_TABLE = ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.TABLE_NAME ) ) + " (" ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry._ID ) ) + " INTEGER PRIMARY KEY AUTOINCREMENT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_BRAND ) ) + " INTEGER NOT NULL, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_NAME ) ) + " TEXT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_QUANTITY ) ) + " INTEGER NOT NULL DEFAULT 0, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_PRICE ) ) + " INTEGER NOT NULL);" ; db . execSQL ( SQL_CREATE_SHOES_TABLE ) ; } 
@ java.lang.Override public void render ( float dt ) { update ( dt ) ; Gdx.gl . glClearColor ( 0.0F , 0.0F , 0.0F , 1.0F ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; game.batch . setProjectionMatrix ( cam.combined ) ; rayHandler . setCombinedMatrix ( cam ) ; if ( com.develorain.game.Screens.PlayScreen.DEBUG_MODE ) b2dr . render ( world , cam.combined ) ; rayHandler . render () ; game.batch . setProjectionMatrix ( hud.stage . getCamera () . combined ) ; hud.stage . draw () ; } 
public static void initializeCustomWorld ( java.util.Scanner input , boolean [] [] world ) { boolean done = false ; GameOfLife . clearWorld ( world ) ; java.lang.System.out . printf ( "Enter a pattern using %c for alive and %c as dead cells.\n" , Config.ALIVE , Config.DEAD ) ; java.lang.System.out . println ( "To end the pattern, type END on its own line." ) ; for ( int i = 0 ; ! done ; i ++ ) { done = GameOfLife . initializeCustomRow ( input , i , world ) ; } } 
private static java.lang.String getMessageString ( hu.bme.tmit.agile.logfilereader.model.TtcnEvent event ) { return ( ( ( ( ( ( "\"" + ( event . getSender () ) ) + "\" -> \"" ) + ( ( ( hu.bme.tmit.agile.logfilereader.model.Message ) ( event ) ) . getDestination () ) ) + "\" : " ) + ( event . getId () ) ) + ( ( ( hu.bme.tmit.agile.logfilereader.model.Message ) ( event ) ) . getName () ) ) + "\n" ; } 
@ java.lang.Override public java.lang.String visitSimple_stmt ( lessa.ExprParser.Simple_stmtContext ctx ) { java.lang.System.out . println ( "simple_stmt -> small_stmt (';' small_stmt)* ';' " ) ; java.lang.String ret = ( visit ( ctx . small_stmt ( 0 ) ) ) + "\n" ; int i = 1 ; while ( ( ctx . small_stmt ( i ) ) != null ) { ret += ( visit ( ctx . small_stmt ( i ) ) ) + "\n" ; i ++ ; } return ret ; } 
public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getRecentVideos ( java.lang.Integer pageNo , java.lang.Integer pageSize ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > result = null ; int offset = ( ( pageNo - 1 ) * pageSize ) + 1 ; java.lang.String selectQuery = "SELECT * FROM ( SELECT * FROM v_online_videos ) AS tbl WHERE tbl.sl_no BETWEEN ? AND ? " ; result = getJdbcTemplate () . query ( selectQuery , new java.lang.Object [] { offset , offset + pageSize } , new org.springframework.jdbc.core.ColumnMapRowMapper () ) ; return result ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { johnsmith.haruhi.co.refrigerator.Model.Unit.Item item = itemList . get ( position ) ; if ( itemList . contains ( item ) ) { listener . onDeleteClick ( item . getName () , item . getId () ) ; itemList . remove ( position ) ; notifyItemRemoved ( position ) ; notifyItemRangeChanged ( position , itemList . size () ) ; } } 
@ java.lang.Override public boolean execute ( com.intellij.openapi.compiler.CompileContext context ) { for ( com.intellij.openapi.module.Module module : com.intellij.openapi.module.ModuleManager . getInstance ( context . getProject () ) . getModules () ) { com.google.cloud.tools.intellij.jps.model.impl.StackdriverProperties configuration = com.intellij.facet.FacetManager . getInstance ( module ) . getFacetByType ( com.google.cloud.tools.intellij.stackdriver.facet.StackdriverFacetType.ID ) . getConfiguration () . getState () ; configuration . setCloudSdkPath ( com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService . getInstance () . getSdkHomePath () . toString () ) ; } return true ; } 
public static boolean isInteger ( java.lang.String str ) { java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "^[-\\+]?[\\d]*$" ) ; if ( ( str != null ) && ( ( pattern . matcher ( str ) ) != null ) ) return pattern . matcher ( str ) . matches () ; else return false ; } 
@ rest.controller.RequestMapping ( value = "/user/" , method = RequestMethod.POST ) public org.springframework.http.ResponseEntity < java.lang.Void > createUser ( @ rest.controller.RequestBody rest.model.User user , org.springframework.web.util.UriComponentsBuilder uriComponentsBuilder ) { if ( userService . isUserExist ( user ) ) { return new org.springframework.http.ResponseEntity < java.lang.Void > ( org.springframework.http.HttpStatus.CONFLICT ) ; } userService . saveUser ( user ) ; org.springframework.http.HttpHeaders httpHeaders = new org.springframework.http.HttpHeaders () ; httpHeaders . setLocation ( uriComponentsBuilder . path ( "/user/{id}" ) . buildAndExpand ( user . getId () ) . toUri () ) ; return new org.springframework.http.ResponseEntity < java.lang.Void > ( httpHeaders , org.springframework.http.HttpStatus.CREATED ) ; } 
public static void alimentarMatriz ( int [] [] matriz ) { for ( int linha = 0 ; linha < ( matriz.length ) ; linha ++ ) { for ( int coluna = 0 ; coluna < ( matriz [ 0 ] . length ) ; coluna ++ ) { java.util.Random random = new java.util.Random () ; matriz [ linha ] [ coluna ] = random . nextInt ( 11 ) ; } } } 
static java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; } 
protected static java.lang.String oldFileNameToViewName ( java.lang.String fileName ) throws com.couchbase.lite.CouchbaseLiteException { if ( ( ! ( fileName . endsWith ( com.couchbase.lite.store.ForestDBViewStore.kViewIndexPathExtension ) ) ) || ( fileName . startsWith ( "." ) ) ) throw new com.couchbase.lite.CouchbaseLiteException ( com.couchbase.lite.Status.BAD_PARAM ) ; java.lang.String viewName = fileName . substring ( 0 , fileName . indexOf ( "." ) ) ; return viewName . replaceAll ( ":" , "/" ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_course_selection ) ; se.kth.csc.iprog.dinnerplanner.model.DinnerModel model = ( ( se.kth.csc.iprog.dinnerplanner.android.DinnerPlannerApplication ) ( this . getApplication () ) ) . getModel () ; new se.kth.csc.iprog.dinnerplanner.android.view.course.CourseTopView ( findViewById ( R.id.this_is_course_top_view_id ) , model ) ; new se.kth.csc.iprog.dinnerplanner.android.view.course.TotalCostView ( findViewById ( R.id.this_is_total_cost_id ) , model ) ; new se.kth.csc.iprog.dinnerplanner.android.view.course.CourseDownView ( findViewById ( R.id.this_is_course_down_view_id ) , model ) ; } 
@ java.lang.Override public void onLoadFinished ( android.support.v4.content.Loader < android.database.Cursor > loader , android.database.Cursor data ) { forecastAdapter . swapCursor ( data ) ; if ( ( selectedPosition ) != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { recyclerView . smoothScrollToPosition ( selectedPosition ) ; android.support.v7.widget.RecyclerView.ViewHolder selectedViewHolder = recyclerView . findViewHolderForAdapterPosition ( selectedPosition ) ; } updateEmptyViewStatusText () ; } 
private final boolean is7BitClean ( org.forgerock.opendj.ldap.ByteSequence value ) { for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { byte b = value . byteAt ( i ) ; if ( ( b & ( org.opends.server.plugins.SevenBitCleanPlugin.MASK ) ) != b ) { return false ; } } return true ; } 
@ java.lang.Override public boolean canConfirmOrderOfCart ( io.muic.ooc.model.Cart cart ) { java.util.Set < io.muic.ooc.model.CartProduct > cartProductSet = cartProductService . findCartProductsByCart ( cart ) ; if ( ( cartProductSet == null ) || ( ( cartProductSet . size () ) == 0 ) ) { return false ; } return true ; } 
private java.util.Date parseDateValue ( java.lang.String value ) { try { if ( ! ( android.text.TextUtils . isEmpty ( value ) ) ) { java.util.Date time = new java.util.Date ( java.lang.Long . parseLong ( value ) ) ; return time ; } } catch ( java.lang.NumberFormatException e ) { timber.log.Timber . e ( "parseDateValue() - Value is not a number: %s" , value ) ; } return null ; } 
public model.modelClasses.mainData.BibleChapterModel getBibleChapter ( android.content.Context context , int chapterNumber ) { this . getBibleChildModels ( context ) ; java.util.Collections . sort ( this . bibleChapterModels ) ; if ( chapterNumber > ( this . bibleChapterModels . size () ) ) { return null ; } else { for ( model.modelClasses.mainData.BibleChapterModel chapter : bibleChapterModels ) { if ( ( java.lang.Integer . parseInt ( chapter.number . trim () ) ) == chapterNumber ) { return chapter ; } } } return null ; } 
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.String . . . params ) { com.mongodb.MongoClientURI mongoUri = new com.mongodb.MongoClientURI ( tasks.CallEvacuationTask.DBAdress ) ; com.mongodb.MongoClient mongoClient = new com.mongodb.MongoClient ( mongoUri ) ; com.mongodb.client.MongoDatabase db = mongoClient . getDatabase ( mongoUri . getDatabase () ) ; com.mongodb.client.MongoCollection < com.mongodb.BasicDBObject > dbCollection = db . getCollection ( tasks.CallEvacuationTask.collectionName , com.mongodb.BasicDBObject . class ) ; boolean result ; result = updateEvac ( dbCollection , params [ 1 ] , params [ 0 ] ) ; return result ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { javax.swing.JFileChooser jfc = new javax.swing.JFileChooser () ; int result = jfc . showOpenDialog ( view . getFrame () ) ; if ( result == ( javax.swing.JFileChooser.APPROVE_OPTION ) ) model . loadPathbaseFile ( jfc . getSelectedFile () . getAbsolutePath () ) ; center . aggiorna ( ( - 1 ) ) ; } 
protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b , java.lang.String fmt ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } } 
@ java.lang.Override public void onGetDataShareWithFinish ( com.owncloud.android.lib.common.operations.RemoteOperationResult result ) { ( ( com.owncloud.android.ui.activity.ShareActivity ) ( getActivity () ) ) . dismissLoadingDialog () ; if ( ( result != null ) && ( result . isSuccess () ) ) { com.owncloud.android.lib.common.utils.Log_OC . d ( com.owncloud.android.ui.fragment.ShareFileFragment.TAG , "Get Data Share With finishes sucessfully" ) ; } refreshUsersOrGroupsListFromDB () ; } 
public void click_deleteButton ( android.view.View v ) { for ( int position : win.successlvchao.android.moneypocket.MainActivity.checkedIndexList . keySet () ) { mCostBeanList . remove ( position ) ; mDatabaseHelper . deleteSpecificItem ( win.successlvchao.android.moneypocket.MainActivity.checkedIndexList . get ( position ) ) ; } win.successlvchao.android.moneypocket.MainActivity.checkedIndexList . clear () ; win.successlvchao.android.moneypocket.MainActivity.checkBoxList . clear () ; mAdapter . notifyDataSetChanged () ; findViewById ( R.id.deleteButton ) . setVisibility ( View.INVISIBLE ) ; findViewById ( R.id.cancelButton ) . setVisibility ( View.INVISIBLE ) ; } 
public static java.io.OutputStream getFileOutputSteam ( android.content.Context context , java.lang.String fileName , android.net.Uri rootUri , java.lang.String . . . subDirs ) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( context , rootUri , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutputSteam ( context , file . getUri () ) ; } 
protected net.schmizz.concurrent.Promise < net.schmizz.sshj.sftp.Response , net.schmizz.sshj.sftp.SFTPException > asyncWrite ( long fileOffset , byte [] data , int off , int len ) throws java.io.IOException { return requester . request ( newRequest ( PacketType.WRITE ) . putUInt64 ( fileOffset ) . putUInt32 ( len ) . putRawBytes ( data , off , len ) ) ; } 
@ java.lang.Override public void handleMessage ( android.os.Message inputMessage ) { org.mobicents.restcomm.android.client.sdk.SignalingMessage message = ( ( org.mobicents.restcomm.android.client.sdk.SignalingMessage ) ( inputMessage.obj ) ) ; if ( ( message.type ) == ( SignalingMessage.MessageType.OPEN_REPLY ) ) { listener . onOpenReply ( message.id , message.status , message.text ) ; } else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_REPLY ) ) {} else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_EVENT ) ) {} } 
@ java.lang.Override public nl.renarj.jasdb.api.properties.Property removeValue ( nl.renarj.jasdb.api.properties.Value v ) { for ( java.util.Iterator i = values . iterator () ; i . hasNext () ; ) { if ( i . next () . equals ( v ) ) { i . remove () ; } } return this ; } 
private java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; } 
@ java.lang.Override public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { if ( ( javax.swing.JOptionPane . showConfirmDialog ( null , "Wollen sie Speicher und Schließen?" , "Wirklich schließen?" , javax.swing.JOptionPane.YES_NO_OPTION , javax.swing.JOptionPane.QUESTION_MESSAGE ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { if ( save () ) { javax.swing.JOptionPane . showMessageDialog ( null , "Der Zustand wurde gespeichert." , "Speichern" , javax.swing.JOptionPane.INFORMATION_MESSAGE ) ; java.lang.System . exit ( 0 ) ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "Fehler beim Speichern" , "Speichern" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } else { java.lang.System . exit ( 0 ) ; } } 
private xl.playground.algo.tree.BinarySearchTree.Node < Item > addNode ( xl.playground.algo.tree.BinarySearchTree.Node < Item > root , Item value ) { if ( root == null ) { return new xl.playground.algo.tree.BinarySearchTree.Node <> ( value ) ; } if ( ( root.value . compareTo ( value ) ) >= 0 ) { root.left = addNode ( root.left , value ) ; } else { root.right = addNode ( root.right , value ) ; } root.count = 1 + ( countChildren ( root ) ) ; return root ; } 
@ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mCurrentPage ) < ( mNumberPages ) ) { mRightButton . setEnabled ( false ) ; mCurrentPage += 1 ; mImageAdapter . invalidateData () ; mPagerAdapter . notifyDataSetChanged () ; getAllPopularPhotos () ; } else { android.widget.Toast . makeText ( getBaseContext () , "Already at last page" , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public void onFocusChange ( android.view.View view , boolean hasFocus ) { if ( hasFocus ) { bottomNavigationBar . hide () ; android.util.Log . d ( "~focus" , ( ( bottomNavigationBar . isHidden () ) + "" ) ) ; } else { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; bottomNavigationBar . show () ; } } 
private edu.utsa.fileflow.client.fileflow.VariableAutomaton getValue ( edu.utsa.fileflow.client.fileflow.FileFlowAnalysisDomain domain , edu.utsa.fileflow.cfg.FlowPointContext context ) { edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ctx = ( ( edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ) ( context . getContext () ) ) ; edu.utsa.fileflow.antlr.FileFlowParser.ValueContext v = ctx . value ( 0 ) ; if ( ( v . Variable () ) != null ) return domain.table . get ( v . Variable () . getText () ) ; return new edu.utsa.fileflow.client.fileflow.VariableAutomaton ( v . String () . getText () ) ; } 
private se.fredsfursten.donationboardplugin.PlayerInfo getOrAddPlayerInfo ( org.bukkit.entity.Player player ) { se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = this . _knownPlayers . get ( player ) ; if ( playerInfo == null ) { playerInfo = new se.fredsfursten.donationboardplugin.PlayerInfo ( player ) ; this . _knownPlayers . put ( player , playerInfo ) ; int toLevel = this . _model . getDonationLevel ( 0 ) ; playerInfo . demoteOrPromote ( toLevel ) ; } return playerInfo ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder () . permitAll () . build () ; android.os.StrictMode . setThreadPolicy ( policy ) ; super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_scan ) ; integrator = new com.google.zxing.integration.android.IntentIntegrator ( this ) ; integrator . setDesiredBarcodeFormats ( IntentIntegrator.ONE_D_CODE_TYPES ) ; integrator . setPrompt ( "Scan a barcode" ) ; integrator . setBeepEnabled ( true ) ; integrator . initiateScan () ; } 
private java.util.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new java.util.Vector ( meanPoint ) ; } 
public static java.lang.Throwable getRootCause ( java.lang.Throwable t ) { if ( t == null ) { return null ; } java.lang.Throwable rootCause = t ; java.lang.Throwable cause = rootCause . getCause () ; while ( ( cause != null ) && ( cause != rootCause ) ) { rootCause = cause ; cause = cause . getCause () ; } return rootCause ; } 
public void testPlayer ( java.lang.String player , org.bukkit.command.CommandSender sender ) { if ( playerOnline ( player ) ) { sender . sendMessage ( ( ( ( ( ( ( ( ( ( ( ( ( ChatColor.GOLD ) + "" ) + ( ChatColor.MAGIC ) ) + "aaaaa" ) + ( ChatColor.RED ) ) + player ) + ( ChatColor.GOLD ) ) + "is online!" ) + ( ChatColor.MAGIC ) ) + "aaaaa" ) + ( ChatColor.GOLD ) ) + "\nRejoice!" ) ) ; } else { sender . sendMessage ( ( player + "is not online!" ) ) ; } } 
public void addNewLevelUpEvent ( long buildingID ) { com.greenfox.jasper.domain.Building temporaryBuilding = buildingServices . findOneBuilding ( ( ( int ) ( buildingID ) ) ) ; com.greenfox.jasper.services.MainEvent levelUpEvent = new com.greenfox.jasper.services.LevelUpEvent ( ( ( java.lang.System . currentTimeMillis () ) + ( calculateBuildingTime ( temporaryBuilding ) ) ) , buildingID ) ; mainEventRepo . save ( levelUpEvent ) ; } 
public android.view.View getView ( int position , android.view.View convertView , android.view.ViewGroup parent ) { android.widget.ImageView imageView = new android.widget.ImageView ( context ) ; android.graphics.Bitmap ThumbImage = android.media.ThumbnailUtils . extractThumbnail ( android.graphics.BitmapFactory . decodeFile ( imageIDs . get ( position ) ) , 200 , 200 ) ; imageView . setImageBitmap ( ThumbImage ) ; imageView . setLayoutParams ( new android.widget.Gallery.LayoutParams ( 200 , 200 ) ) ; return imageView ; } 
public void removeStatsProvider ( org.osgi.framework.ServiceReference < org.inaetics.demonstrator.api.stats.StatsProvider > serviceRef , org.inaetics.demonstrator.api.stats.StatsProvider provider ) { if ( "true" . equals ( serviceRef . getProperty ( "aggregator" ) ) ) { m_aggregator = null ; } java.lang.String type = "" + ( serviceRef . getProperty ( "type" ) ) ; if ( "processor" . equalsIgnoreCase ( type ) ) { m_processorCount . decrementAndGet () ; } else if ( "producer" . equalsIgnoreCase ( type ) ) { m_producerCount . decrementAndGet () ; } m_providerStats . remove ( serviceRef ) ; info ( ( "added statsprovider of type " + type ) ) ; } 
@ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } 
public static void printPlainMessage ( objects.PlainMessage message ) { java.lang.System.out . println () ; java.lang.System.out . println ( message . getMessageText () ) ; java.lang.System.out . println ( java.util.Arrays . toString ( message . getMessageDecimalArray () ) ) ; java.lang.System.out . println ( message . getMessageHex () ) ; java.lang.System.out . println ( message . getMessageBinary () ) ; } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker view , int year , int monthOfYear , int dayOfMonth ) { monthOfYear = monthOfYear + 1 ; dates = ( ( ( ( java.lang.Integer . toString ( dayOfMonth ) ) + "/" ) + ( java.lang.Integer . toString ( monthOfYear ) ) ) + "/" ) + ( java.lang.Integer . toString ( year ) ) ; } 
protected sentimentAnalysis.ScoreNode getNode ( edu.emory.clir.clearnlp.dependency.DEPNode node , java.util.Map < java.lang.String , java.lang.Double > map ) { double score = 0 ; double intensity = getIntensity ( node ) ; if ( map . containsKey ( node . getLemma () ) ) { score = map . get ( node . getLemma () ) ; } sentimentAnalysis.ScoreNode sNode = new sentimentAnalysis.ScoreNode ( node . getLemma () , score , intensity ) ; return sNode ; } 
protected org.apache.ignite.configuration.CacheConfiguration cacheConfiguration ( @ org.jetbrains.annotations.NotNull java.lang.String name ) { org.apache.ignite.configuration.CacheConfiguration < ? , ? > cache = defaultCacheConfiguration () ; cache . setName ( name ) ; cache . setCacheMode ( org.apache.ignite.cache.CacheMode.PARTITIONED ) ; cache . setBackups ( 1 ) ; cache . setWriteSynchronizationMode ( org.apache.ignite.cache.CacheWriteSynchronizationMode.FULL_SYNC ) ; cache . setAtomicityMode ( org.apache.ignite.cache.CacheAtomicityMode.TRANSACTIONAL ) ; return cache ; } 
static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" , false ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } 
protected static java.lang.String getBNpos_ro ( java.util.Map < java.lang.String , it.uniroma1.lcl.babelnet.data.BabelPOS > posMapping , java.lang.String pos ) { java.lang.String pos5chars = "" ; if ( ( pos . length () ) > 1 ) { pos5chars = pos . substring ( 0 , 5 ) ; } else { return null ; } it.uniroma1.lcl.babelnet.data.BabelPOS bnPos = posMapping . get ( pos5chars . toUpperCase () ) ; if ( bnPos == null ) { return null ; } else { return bnPos . toString () ; } } 
public void setNetworkProperties ( java.util.Collection < org.ndexbio.model.object.NdexPropertyValuePair > properties , java.util.Collection < org.ndexbio.model.object.SimplePropertyValuePair > presentationProperties ) { if ( properties != null ) { this . network . getProperties () . addAll ( properties ) ; this . networkDoc . field ( NdexClasses.ndexProperties , properties ) . save () ; } } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group , int checkedId ) { int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) . getCheckedRadioButtonId () ; if ( selected == ( R.id.createMatchRadioButtonJunior ) ) { radioGroupLevelSelection = 1 ; } else if ( selected == ( R.id.createMatchRadioButtonSenior ) ) { radioGroupLevelSelection = 2 ; } filterAndRefresh ( radioGroupLevelSelection ) ; } 
public boolean compare ( double avgT , double devT , double minT , double maxT ) { if ( ( ( ( ( avgTemp ) == avgT ) && ( ( devTemp ) == devT ) ) && ( ( minTemp ) == minT ) ) && ( ( maxTemp ) == maxT ) ) { return true ; } return false ; } 
private int getMove ( com.rijul.game.core.Board board ) { java.lang.String boardAsString = getBoardAsString ( board ) ; if ( boardAsString . equals ( com.rijul.game.app.player.impl.Bot.INITIAL_BOARD ) ) { int ind = random . nextInt ( com.rijul.game.app.player.impl.Bot.INITIAL_MOVES.length ) ; return com.rijul.game.app.player.impl.Bot.INITIAL_MOVES [ ind ] ; } getOptimalResultForBoardPosition ( board , 1 ) ; return optimalMoveFromBoardPosition . get ( boardAsString ) ; } 
@ java.lang.Override public void calculateRedpacksPrize ( cn.wisdom.lottery.dao.vo.Lottery lottery ) { if ( cn.wisdom.lottery.common.utils.CollectionUtils . isNotEmpty ( lottery . getRedpacks () ) ) { int totalBonus = lottery . getPeriods () . get ( 0 ) . getPrizeBonus () ; float bonus = 0 ; for ( cn.wisdom.lottery.dao.vo.LotteryRedpack lotteryRedpack : lottery . getRedpacks () ) { bonus = ( totalBonus * ( lotteryRedpack . getRate () ) ) / 100 ; lotteryRedpack . setPrizeBonus ( bonus ) ; } } } 
private void passMessagesToLeaves ( int i ) { node.Node from = getNodeFromId ( i ) ; if ( from . isLeaf () ) { from = from . getNeighborList () . get ( 0 ) ; } for ( node.Node to : from . getNeighborList () ) { from . passMessageTo ( to ) ; passMessagesToLeaves2 ( to , from ) ; } } 
public java.util.List < org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter > encountersSince ( org.joda.time.LocalDate dateOfBirth ) { java.util.ArrayList < org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter > encounters = new java.util.ArrayList < org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter > () ; org.joda.time.LocalDate currentDate = dateOfBirth ; org.joda.time.LocalDate today = new org.joda.time.LocalDate () ; while ( currentDate . isBefore ( today ) ) { encounters . add ( encounterGenerator . nextEncounter ( currentDate ) ) ; currentDate = currentDate . plusDays ( ( ( int ) ( ( ( java.lang.Math . random () ) * 365 ) * ( org.neo4j.data.generator.domains.medicalrecords.encounters.EncounterSequenceGenerator.MAX_YEARS_BETWEEN_ENCOUNTERS ) ) ) ) ; } return encounters ; } 
private void captureTerritory ( gottesman.risk.Player activePlayer , gottesman.risk.Territory selectedTerritory , gottesman.risk.map.TerritoryView territoryView , gottesman.risk.Territory territory ) { int battalionNum = java.lang.Integer . parseInt ( javax.swing.JOptionPane . showInputDialog ( null , "Enter the amount of battalions you would like to move." ) ) ; if ( battalionNum >= ( selectedTerritory . getBattalions () ) ) { javax.swing.JOptionPane . showMessageDialog ( selectedTerritoryView , "Cannot move this amount of battalions. Try again." ) ; return; } else { territory . occupy ( activePlayer ) ; selectedTerritory . moveBattalionsTo ( territory , battalionNum ) ; } selectedTerritoryView . repaint () ; territoryView . repaint () ; selectTerritory ( territoryView ) ; } 
@ java.lang.Override protected void reloadForSearch ( boolean finalTouch ) { if ( ( mAdapter ) == null ) { return; } try { final int sD = mData.length ; for ( int i = 0 ; i < sD ; ++ i ) { if ( ( mData [ i ] ) instanceof ds.framework.v4.data.AbsRecyclerViewData ) { invalidateData ( i ) ; } } loadDataAndDisplay () ; } catch ( java.lang.Throwable e ) { ds.framework.v4.common.Debug . logException ( e ) ; } } 
@ java.lang.Override protected java.lang.Exception doInBackground ( de.geeksfactory.opacclient.objects.Account . . . params ) { try { de.geeksfactory.opacclient.apis.OpacApi api = ( ( de.geeksfactory.opacclient.OpacClient ) ( getApplication () ) ) . getNewApi ( lib ) ; api . start () ; api . checkAccountData ( account ) ; } catch ( java.io.IOException e ) { return e ; } catch ( org.json.JSONException e ) { return e ; } catch ( de.geeksfactory.opacclient.apis.OpacApi.OpacErrorException e ) { return e ; } return null ; } 
private boolean isTaskRequired ( com.emc.storageos.db.client.model.Volume rpVolume , com.emc.storageos.volumecontroller.impl.utils.VirtualPoolCapabilityValuesWrapper capabilities , boolean vplex , com.emc.storageos.model.TaskList taskList ) { boolean rpNonVplexSourceVolume = ( Volume.PersonalityTypes.SOURCE . name () . equals ( rpVolume . getPersonality () ) ) && ( ! vplex ) ; boolean addJournalVolume = capabilities . getAddJournalCapacity () ; boolean notAlreadyInTaskList = ( com.emc.storageos.api.service.impl.placement.StorageScheduler . getPrecreatedVolume ( _dbClient , taskList , rpVolume . getLabel () ) ) == null ; boolean createTask = addJournalVolume || ( rpNonVplexSourceVolume && notAlreadyInTaskList ) ; return createTask ; } 
@ java.lang.Override public void tick ( kcl.teamIndexZero.traffic.simulator.data.SimulationTick tick ) { CurrentDate = ( new java.util.Date () . getTime () ) / 1000 ; if ( ( ( CurrentDate ) - ( lastChange ) ) > ( timer ) ) { if ( ( modelSet ) != null ) { modelSet . changeColour ( model , model.currentState ) ; lastChange = CurrentDate ; } } } 
@ java.lang.Override public boolean onKey ( android.view.View v , int keyCode , android.view.KeyEvent event ) { if ( ( event . getAction () ) == ( android.view.KeyEvent.ACTION_DOWN ) ) { switch ( keyCode ) { case android.view.KeyEvent.KEYCODE_ENTER : rightGuess () ; return true ; default: break; } } return false ; } 
private void handleIntent ( android.content.Intent intent ) { if ( Intent.ACTION_SEARCH . equals ( intent . getAction () ) ) { java.lang.String query = intent . getStringExtra ( SearchManager.QUERY ) ; cursor = com.example.adao1.project2.DatabaseHelper . getInstance ( this ) . getShop ( query ) ; searchCursorAdapter . swapCursor ( cursor ) ; searchCursorAdapter . notifyDataSetChanged () ; } } 
public com.emc.hpux.model.HpuxVersion getHpuxMinimumVersion ( boolean forceLookup ) { if ( forceLookup || ( ( hpuxVersion ) == null ) ) { java.lang.String versionProp = this . getSysProperty ( com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP ) ; if ( isValidVersionNumber ( versionProp ) ) { hpuxVersion = new com.emc.hpux.model.HpuxVersion ( versionProp ) ; } else { hpuxVersion = null ; throw new java.lang.IllegalStateException ( java.lang.String . format ( "System property for HPUX Version Number(%s) is invalid - value is '%s'" , com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP , versionProp ) ) ; } } return hpuxVersion ; } 
public void inverseClicked ( android.view.View v ) { android.widget.TextView textView2 = ( ( android.widget.TextView ) ( findViewById ( R.id.textView2 ) ) ) ; tempNum = java.lang.Double . parseDouble ( textView2 . getText () . toString () ) ; tempNum = ( tempNum ) * ( - 1 ) ; textView2 . setText ( java.lang.String . valueOf ( tempNum ) ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , @ android.support.annotation.NonNull java.lang.String [] permissions , @ android.support.annotation.NonNull int [] grantResults ) { com.iven.i7helper.util.LocationUtil lu = com.iven.i7helper.util.LocationUtil . getLocationUtil () ; switch ( requestCode ) { case 1 : if ( ( grantResults.length ) > 0 ) { for ( int i : grantResults ) { if ( i != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { com.iven.i7helper.util.ToolUtil . showMessage ( this , "不给权限会导致记录不准确" ) ; return; } } lu . requestLocation () ; } break; default: } } 
private java.util.List < java.lang.String > pick ( java.util.HashMap < java.lang.String , java.lang.Integer > map , int n ) { wedt.finder.ActualWikiFinder.ValueComparator bvc = new wedt.finder.ActualWikiFinder.ValueComparator ( map ) ; java.util.TreeMap < java.lang.String , java.lang.Integer > sorted = new java.util.TreeMap <> ( bvc ) ; sorted . putAll ( map ) ; java.util.ArrayList < java.lang.String > keys = new java.util.ArrayList <> () ; keys . addAll ( sorted . keySet () ) ; return ( keys . size () ) > n ? keys . subList ( 0 , n ) : keys ; } 
public java.lang.String addDev ( objects.Device dev ) { java.sql.PreparedStatement stmt = null ; java.sql.Connection conn = null ; java.lang.String sql = "INSERT INTO network " + "VALUES (?, '?', '?')" ; try { conn = getConnection () ; } catch ( java.lang.ClassNotFoundException e ) { return new java.lang.String ( e . getMessage () ) ; } catch ( java.sql.SQLException e ) { return new java.lang.String ( e . getMessage () ) ; } catch ( java.net.URISyntaxException e ) { return new java.lang.String ( e . getMessage () ) ; } return "MADE IT" ; } 
public static boolean inBounds ( int [] [] array , int r , int c ) { return ( ( r >= 0 ) && ( r < ( array.length ) ) ) && ( ( c >= 0 ) && ( c < ( array [ r ] . length ) ) ) ; } 
private static java.lang.String loadECoreFile ( final java.lang.String name ) throws java.lang.Exception { assertTrue ( new java.io.File ( name ) . exists () ) ; cruise.umple.compiler.EcoreImportHandler handler = new cruise.umple.compiler.EcoreImportHandler () ; cruise.umple.compiler.UmpleImportModel umple = handler . readDataFromXML ( name ) ; return umple . generateUmple () ; } 
public static java.util.List < com.teinproductions.tein.papyrosprogress.Milestone > getMilestones ( java.lang.String json ) throws java.text.ParseException , org.json.JSONException { org.json.JSONArray jArray = new org.json.JSONArray ( json ) ; java.util.List < com.teinproductions.tein.papyrosprogress.Milestone > result = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( jArray . length () ) ; i ++ ) { result . add ( com.teinproductions.tein.papyrosprogress.JSONUtils . getMilestone ( jArray . getJSONObject ( i ) ) ) ; } return result ; } 
public static void addPlayer ( java.lang.String name ) { reachForTheTop.IO . createOutputFile ( ( ( "Scores\\" + name ) + ".reach" ) ) ; reachForTheTop.IO . println ( "times played: 0" ) ; reachForTheTop.IO . println ( "total: 0" ) ; reachForTheTop.IO . closeOutputFile () ; reachForTheTop.IO . createOutputFile ( "Scores\\names.txt" , true ) ; reachForTheTop.IO . println ( name ) ; reachForTheTop.IO . closeOutputFile () ; } 
public boolean createNamedTerminal ( java.lang.String caption ) { if ( org.rstudio.core.client.StringUtil . isNullOrEmpty ( caption ) ) { createNewTerminal () ; return true ; } if ( ! ( isCaptionAvailable ( caption ) ) ) { return false ; } startTerminal ( nextTerminalSequence () , null , caption , null , true , ConsoleProcessInfo.DEFAULT_COLS , ConsoleProcessInfo.DEFAULT_ROWS , TerminalShellInfo.SHELL_DEFAULT , false , null ) ; return true ; } 
private static boolean isEnabled ( java.lang.String pkgName ) { java.lang.String mode = tw.fatminmin.xposed.minminguard.Main.pref . getString ( Common.KEY_MODE , Common.VALUE_MODE_BLACKLIST ) ; if ( mode . equals ( Common.VALUE_MODE_AUTO ) ) { return true ; } else if ( mode . equals ( Common.VALUE_MODE_BLACKLIST ) ) { return tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( pkgName , false ) ; } else { return ! ( tw.fatminmin.xposed.minminguard.Main.pref . getBoolean ( tw.fatminmin.xposed.minminguard.Common . getWhiteListKey ( pkgName ) , false ) ) ; } } 
@ java.lang.Override protected java.lang.Boolean doInBackground ( java.lang.Void . . . params ) { com.cs3235.door.doorlockandroid.login.IvleLoginManager ivleLoginManager = new com.cs3235.door.doorlockandroid.login.IvleLoginManager ( httpManager ) ; com.cs3235.door.doorlockandroid.login.IvleLoginManager.IvleLoginResult ivleResult = ivleLoginManager . loginToIvle ( mEmail , mPassword ) ; if ( ! ( ivleResult.successful ) ) { errorMessage = ivleResult.failureMessage ; return false ; } com.cs3235.door.doorlockandroid.login.SmartphoneCardLoginManager smartphoneCardManager = new com.cs3235.door.doorlockandroid.login.SmartphoneCardLoginManager ( httpManager , getPhoneUuid () ) ; com.cs3235.door.doorlockandroid.login.SmartphoneCardLoginManager.SmartphoneCardLoginResult smartphoneDoorResult = smartphoneCardManager . loginToSmartphoneCardSystem ( ivleResult.user ) ; if ( ! ( smartphoneDoorResult.successful ) ) { errorMessage = smartphoneDoorResult.failureMessage ; return false ; } loggedInUser = smartphoneDoorResult.user ; return true ; } 
public void checkAttributeValue ( cz.metacentrum.perun.core.api.PerunSession sess , cz.metacentrum.perun.core.api.Member member , cz.metacentrum.perun.core.api.Attribute attribute ) throws cz.metacentrum.perun.core.api.exceptions.InternalErrorException , cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException , cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException { cz.metacentrum.perun.core.implApi.modules.attributes.MemberAttributesModuleImplApi attributeModule = getMemberAttributeModule ( sess , attribute ) ; if ( attributeModule == null ) return; try { attributeModule . checkAttributeValue ( ( ( cz.metacentrum.perun.core.impl.PerunSessionImpl ) ( sess ) ) , member , attribute ) ; } catch ( cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException ex ) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException ( ex ) ; } } 
@ java.lang.Override public void onTick ( net.frozenbit.plugin5zig.cubecraft.gamemodes.DuelsGameMode gameMode ) { super . onTick ( gameMode ) ; if ( ( gameMode . getState () ) != ( eu.the5zig.mod.server.GameState.LOBBY ) ) { ( timer ) ++ ; if ( ( ( timer ) % ( net.frozenbit.plugin5zig.cubecraft.listeners.DuelsListener.OPPONENT_UPDATE_INTERVAL ) ) == 0 ) { updateOpponentInfo ( gameMode ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.tvCensusForms : android.content.Intent categoryIntent = new android.content.Intent ( this , com.example.knbs.censusapp.CategoryActivity . class ) ; startActivity ( categoryIntent ) ; break; case R.id.tvEnumID : android.content.Intent enumeratorID = new android.content.Intent ( this , com.example.knbs.censusapp.EnumeratorIDActivity . class ) ; startActivity ( enumeratorID ) ; break; case R.id.tvTaskList : android.content.Intent taskList = new android.content.Intent ( this , com.example.knbs.censusapp.TaskLIstActivity . class ) ; startActivity ( taskList ) ; break; default: android.util.Log . i ( "DEFAULT ONCLICK OPT" , "This is default switch mode" ) ; break; } } 
private void handleIntent ( android.content.Intent intent ) { final int configScreenId = intent . getIntExtra ( org.droidplanner.android.activities.ConfigurationActivity.EXTRA_CONFIG_SCREEN_ID , mConfigScreenId ) ; final android.support.v4.app.Fragment currentFragment = getCurrentFragment () ; if ( ( currentFragment == null ) || ( ( getIdForFragment ( currentFragment ) ) != configScreenId ) ) { mConfigScreenId = configScreenId ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.configuration_screen , getFragmentForId ( configScreenId ) ) . commit () ; } } 
private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } return; } 
@ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { mTextSeekBar . setText ( ( ( ( "Shutter Speed(in ns):" + ( ( mSeekbar . getProgress () ) + ShutterSpeed1 ) ) + "/" ) + ( java.lang.Math . round ( ( ( mSeekbar . getMax () ) + ShutterSpeed1 ) ) ) ) ) ; android.widget.Toast . makeText ( getApplicationContext () , "Setting Shutter Speed" , Toast.LENGTH_SHORT ) . show () ; ShutterSpeedValue = ( mSeekbar . getProgress () ) + ShutterSpeed1 ; if ( ( AutoNumber ) != 1 ) { AutoNumber = 1 ; } startPreview () ; } 
public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } 
private void postSecretMessage ( ndbc.Message secret , java.sql.Connection connection ) { try ( java.sql.Statement statement = connection . createStatement () ) { java.lang.String queryString = "INSERT INTO d1(id, user, message) VALUES('" ; queryString += secret.messageId ; queryString += "', '" ; queryString += secret.body ; queryString += "', '" ; queryString += secret.sender ; queryString += "');" ; statement . execute ( queryString ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
public org.tiogasolutions.couchace.core.api.request.PutDesignRequest design ( java.lang.String designName , java.net.URL designFile , java.lang.String documentRevision ) { org.tiogasolutions.couchace.core.internal.util.ArgUtil . assertNotNull ( designName , "designName" ) ; org.tiogasolutions.couchace.core.internal.util.ArgUtil . assertNotNull ( designFile , "designFile" ) ; org.tiogasolutions.couchace.core.internal.util.ArgUtil . assertNotNull ( documentRevision , "documentRevision" ) ; java.lang.String designBody = org.tiogasolutions.couchace.core.internal.util.IOUtil . readText ( designFile ) ; return new org.tiogasolutions.couchace.core.api.request.PutDesignRequest ( requestExecutor , designName , designBody , documentRevision ) ; } 
private boolean isValideEmail ( java.lang.String email ) { java.sql.Statement stmt ; boolean status = false ; java.sql.Connection con = null ; try { bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider . getCon () ; stmt = con . createStatement () ; java.lang.String query = ( "Select * from employee where BINARY email=\"" + email ) + "\"" ; java.sql.ResultSet rs = stmt . executeQuery ( query ) ; status = rs . next () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return status ; } 
public boolean tryReadLockWithCondition ( V expected ) { int [] stamp = new int [ 1 ] ; V value ; do { value = lock . get ( stamp ) ; if ( ( expected != value ) && ( ( value == null ) || ( ! ( expected . equals ( value ) ) ) ) ) { return false ; } } while ( lock . compareAndSet ( value , value , stamp [ 0 ] , ( ( stamp [ 0 ] ) + 2 ) ) ) ; return true ; } 
public void onAudioFocusChange ( int focusChange ) { if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT ) ) { mPlayTimer . stop () ; mMediaPlayer . pause () ; } else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_GAIN ) ) {} else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_LOSS ) ) { mAudioManager . abandonAudioFocus ( this ) ; mPlayTimer . stop () ; mMediaPlayer . pause () ; unregisterAudio () ; } mContext . updateSongView () ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View v = inflater . inflate ( R.layout.second_frag , container , false ) ; currentCarIndex = getArguments () . getInt ( "current_car" , 0 ) ; currentCar = com.twild.gastracker.ActivityListOfCars.carList . get ( currentCarIndex ) ; return v ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } 
public static java.lang.String getDomainName ( java.lang.String url ) throws java.net.URISyntaxException { java.net.URI uri = new java.net.URI ( url ) ; java.lang.String domain = uri . getHost () ; if ( domain == null ) { return url . replaceAll ( "www." , "" ) ; } return domain . replaceAll ( "www." , "" ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { mProfile = dataSnapshot . getValue ( mobi.devteam.demofalldetector.model.Profile . class ) ; if ( ( mProfile ) == null ) return; age = mProfile . getAge () ; bmi = ( mProfile . getWeight () ) / ( java.lang.Math . sqrt ( mProfile . getHeight () ) ) ; isMale = mProfile . isMale () ; threshold_1 = mProfile . getThresh1 () ; threshold_2 = mProfile . getThresh2 () ; threshold_3 = mProfile . getThresh3 () ; add_threshold_value () ; } 
@ java.lang.Override public net.openchrom.msd.converter.supplier.cms.model.IIonMeasurement getIonMeasurement ( int scanIndex ) { if ( ! ( isMinMaxSignalCalculated () ) ) { updateSignalLimits () ; } if ( ( scanIndex >= 0 ) && ( scanIndex < ( ionMeasurements . size () ) ) ) { return ionMeasurements . get ( scanIndex ) ; } else { return null ; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( ( remain . length () ) == 0 ) && ( ( e . getKeyCode () ) != ( java.awt.event.KeyEvent.VK_ENTER ) ) ) { e . consume () ; retype () ; } else { java.lang.String item = "%d %d 0" ; long curTime = java.lang.System . currentTimeMillis () ; records . add ( java.lang.String . format ( item , curTime , e . getKeyCode () ) ) ; } } 
private static java.util.Optional < java.nio.file.Path > expandFilename ( java.lang.String filename , java.nio.file.Path directory ) { java.util.Objects . requireNonNull ( filename ) ; java.util.Objects . requireNonNull ( directory ) ; java.nio.file.Path file = java.nio.file.Paths . get ( filename ) ; if ( filename . isEmpty () ) { return java.util.Optional . of ( directory ) ; } java.nio.file.Path resolvedFile = directory . resolve ( file ) ; if ( java.nio.file.Files . exists ( resolvedFile ) ) { return java.util.Optional . of ( resolvedFile ) ; } else { return java.util.Optional . empty () ; } } 
private int find_next_test_item ( int CurrentTestItem ) { int NextTestItemL = 0 ; boolean NeedTest = false ; NextTestItemL = CurrentTestItem + 1 ; do { not_end_test_all = NextTestItemL != ( end_test_item ) ; if ( not_end_test_all ) { NeedTest = fec_test_items_order [ NextTestItemL ] . test ; if ( NeedTest ) { break; } else { NextTestItemL ++ ; } } else { return - 1 ; } } while ( ! NeedTest ) ; return NextTestItemL ; } 
protected boolean setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return false ; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } return true ; } 
@ java.lang.Override public int getPartition ( org.apache.hadoop.io.LongWritable key , org.apache.hadoop.io.LongWritable value , int numberOfPartition ) { try { hbase.query1.HBaseRowKeyPartitioner . fillFirstAndLastID () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } long intervalLength = ( ( hbase.query1.HBaseRowKeyPartitioner.lastArticleId ) - ( hbase.query1.HBaseRowKeyPartitioner.firstArticleId ) ) / numberOfPartition ; return ( ( int ) ( ( ( key . get () ) - ( hbase.query1.HBaseRowKeyPartitioner.firstArticleId ) ) / intervalLength ) ) ; } 
private void removeTransform ( org.bukkit.entity.Player player ) { org.bukkit.Bukkit . getServer () . dispatchCommand ( org.bukkit.Bukkit . getConsoleSender () , ( "clearskin " + ( player . getName () ) ) ) ; sendMessage ( player , "You look like yourself again." ) ; sendMessage ( player , strWarnMessage ) ; } 
@ java.lang.Override protected java.lang.String processRequest ( cn.edu.fudan.request.AddTableRequest request , cn.edu.fudan.util.Session session ) throws java.lang.Exception { if ( ( request == null ) || ( ( request . table () ) == ( AddTableRequest.Table.DEFAULT ) ) ) return "error" ; java.lang.Integer result = new cn.edu.fudan.dao.AddTableDAO ( this , request ) . getResult () ; return ( result != null ) && ( result > 0 ) ? "success" : "fail" ; } 
@ android.support.annotation.Nullable static android.net.Uri safeUri ( @ android.support.annotation.NonNull java.lang.String url ) { if ( android.text.TextUtils . isEmpty ( url ) ) { return null ; } android.net.Uri uri = android.net.Uri . parse ( url ) ; if ( ( android.text.TextUtils . isEmpty ( uri . getScheme () ) ) || ( android.text.TextUtils . isEmpty ( uri . getHost () ) ) ) { return null ; } return uri ; } 
@ java.lang.Override public void setRawData ( java.util.List < float [] > data ) { this . centroids = null ; this . data = new edu.uc.rphash.tests.clusterers.KMeans2.PointND [ data . size () ] ; for ( int i = 0 ; i < ( data . size () ) ; i ++ ) { this . data [ i ] = new edu.uc.rphash.tests.clusterers.KMeans2.PointND ( data . get ( i ) , 1 , 0.0F ) ; } } 
protected void actOnResource ( org.fogbowcloud.blowout.pool.AbstractResource resource , java.util.List < org.fogbowcloud.blowout.core.model.Task > tasks ) { if ( resource . getState () . equals ( ResourceState.IDLE ) ) { org.fogbowcloud.blowout.core.model.Task task = chooseTaskForRunning ( resource , tasks ) ; if ( task != null ) { runTask ( task , resource ) ; } } if ( resource . getState () . equals ( ResourceState.TO_REMOVE ) ) { runningTasks . remove ( resource ) ; } } 
private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { com.badlogic.gdx.math.Vector2 offset = new com.badlogic.gdx.math.Vector2 () ; return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } 
public void sendConfig ( java.lang.String apiKey , java.lang.String config ) { try { org.springframework.amqp.core.MessageProperties properties = new org.springframework.amqp.core.MessageProperties () ; properties . setHeader ( RabbitMQConfig.MSG_HEADER_APIKEY , apiKey ) ; org.springframework.amqp.core.Message message = new org.springframework.amqp.core.Message ( config . getBytes ( "UTF-8" ) , properties ) ; rabbitTemplate . convertAndSend ( "mgmt.config.sub" , message ) ; } catch ( org.springframework.amqp.AmqpException | java.io.UnsupportedEncodingException ex ) { com.konkerlabs.platform.registry.integration.gateways.RabbitGateway.LOGGER . error ( "AmqpException while sending message to RabbitMQ..." , ex ) ; } } 
public static void editNoteFromTable ( java.lang.String title , java.lang.String text , java.lang.String deadline ) { com.leofesk.quicktodomanager.model.Database . updateCurrentNoteFromDatabase ( com.leofesk.quicktodomanager.controller.DataBaseWorker.currentNoteID , title , text , deadline , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getCreatedTime () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getEndTime () , com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getStatus () ) ; java.lang.System.out . println ( com.leofesk.quicktodomanager.controller.DataBaseWorker.note . getStatus () ) ; com.leofesk.quicktodomanager.controller.DataBaseWorker . updateTableData () ; } 
@ java.lang.Override public void seekToUs ( long positionUs ) { com.google.android.exoplayer.util.Assertions . checkState ( prepared ) ; com.google.android.exoplayer.util.Assertions . checkState ( ( ( enabledTrackCount ) > 0 ) ) ; long currentPositionUs = ( isPendingReset () ) ? pendingResetPositionUs : downstreamPositionUs ; downstreamPositionUs = positionUs ; lastSeekPositionUs = positionUs ; if ( currentPositionUs == positionUs ) { return; } seekToInternal ( positionUs ) ; } 
private android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } 
protected void processRequest ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { response . setContentType ( "text/html;charset=UTF-8" ) ; edu.wctc.da.bookwebapp.model.AuthorService authorService = new edu.wctc.da.bookwebapp.model.AuthorService () ; try { java.util.List < edu.wctc.da.bookwebapp.model.Author > authorList = authorService . getAuthors () ; request . setAttribute ( AUTHORLIST , authorList ) ; request . setAttribute ( "errorMessage" , ERRORMESSAGE ) ; javax.servlet.RequestDispatcher view = request . getRequestDispatcher ( DESTINATIONPAGE ) ; view . forward ( request , response ) ; } catch ( java.lang.Exception e ) {} } 
private void excludeCols ( final boolean [] checkedItems ) { int i = 1 ; assert null != checkedItems ; assert null != ( this . templateModel ) ; for ( final boolean checkedItem : checkedItems ) { if ( checkedItem ) this . templateModel . addExcludeCol ( i ) ; i ++ ; } } 
private final boolean _log ( simple.util.logging.LogLevel type , java.lang.Object msg , byte options ) { if ( ! ( simple.util.logging.Log . isSet ( options , type ) ) ) return _out . checkError () ; synchronized ( writeSync ) { _out . print ( _getPreMessage ( type ) ) ; _out . print ( _cName ) ; _out . print ( ": " ) ; _out . println ( msg ) ; } return _out . checkError () ; } 
public static void find ( java.lang.String arg , java.util.List < java.lang.String > list ) { if ( ( list . indexOf ( arg ) ) == ( - 1 ) ) { java.lang.System.out . printf ( "%s not in list\n" , arg ) ; } else { java.lang.System.out . printf ( "%s in list at index %d\n" , arg , list . indexOf ( arg ) ) ; } } 
@ java.lang.Override public java.util.List < java.lang.String > getProperties ( java.lang.String player ) { java.util.List < java.lang.String > propertyList = new java.util.ArrayList < java.lang.String > () ; for ( a4.domain.Property curr : properties ) { if ( ( curr . getOwner () ) != null ) if ( curr . getOwner () . toString () . equals ( player ) ) { propertyList . add ( curr . toString () ) ; } } return propertyList ; } 
@ java.lang.Override public boolean onTouch ( android.view.View view , android.view.MotionEvent motionEvent ) { switch ( motionEvent . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : password . setTransformationMethod ( null ) ; return true ; case android.view.MotionEvent.ACTION_UP : password . setTransformationMethod ( new android.text.method.PasswordTransformationMethod () ) ; return false ; default: return false ; } } 
public void setSize ( final java.lang.Long size ) { if ( ( ( getPrev () ) != null ) && ( ( getPrev () ) != 0 ) ) { final java.lang.Long prevSize = getObject () . getIntegerKey ( ASAtom.SIZE ) ; if ( prevSize > size ) { return; } } getObject () . setIntegerKey ( ASAtom.SIZE , size ) ; } 
private void init ( android.util.AttributeSet attrs , int defStyleAttr ) { android.content.res.TypedArray a = getContext () . obtainStyledAttributes ( attrs , R.styleable.SVGView , defStyleAttr , 0 ) ; svgId = a . getResourceId ( R.styleable.SVGView_carbon_src , 0 ) ; setColorFilter ( a . getColorStateList ( R.styleable.SVGView_carbon_filterColor ) ) ; a . recycle () ; } 
public boolean validateDayOfWeek ( java.time.LocalDateTime currentTime ) { application.main.Business business = new application.main.Business () ; for ( int i = 0 ; i < ( business . getOpeningDays () . size () ) ; i ++ ) { if ( business . getOpeningDays () . get ( i ) . equals ( currentTime . getDayOfWeek () ) ) { application.main.Utility.LOGGER . info ( "Valid business time" ) ; return true ; } } application.main.Utility.LOGGER . info ( "Invalid business time" ) ; return false ; } 
public void showWarningToUser ( android.os.Message msg ) { android.content.Intent intent = new android.content.Intent ( this , com.juliansparber.vpnMITM.UserAlertDialog . class ) ; intent . addFlags ( ( ( ( android.content.Intent.FLAG_ACTIVITY_REORDER_TO_FRONT ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) ) | ( android.content.Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ) ) ; intent . putExtra ( UserAlertDialog.PAYLOAD , ( ( java.lang.String [] ) ( msg.obj ) ) ) ; startActivity ( intent ) ; } 
public synchronized void log ( int style , java.lang.String message ) { try { javax.swing.text.StyledDocument doc = m_textPane . getStyledDocument () ; doc . insertString ( doc . getLength () , message , m_styles [ style ] ) ; } catch ( javax.swing.text.BadLocationException e ) { java.lang.System.err . println ( e ) ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.String res ) { super . onPostExecute ( res ) ; if ( ( showRouteHandler ) != null ) { android.os.Message msg = showRouteHandler . obtainMessage ( com.jstakun.gms.android.ui.AsyncTaskManager.SHOW_ROUTE_MESSAGE , filename ) ; showRouteHandler . handleMessage ( msg ) ; } if ( ! ( silent ) ) { intents . showInfoToast ( res ) ; } } 
public void handle ( org.dsa.iot.dslink.node.actions.ActionResult event ) { try { com.serotonin.bacnet4j.type.constructed.PriorityArray priorities = getPriorityArray () ; if ( priorities == null ) return; for ( int i = 1 ; i <= ( priorities . getCount () ) ; i ++ ) { relinquish ( i ) ; } refreshPriorities () ; } catch ( com.serotonin.bacnet4j.exception.BACnetException e ) { bacnet.BacnetPoint.LOGGER . error ( "error: " , e ) ; } } 
public int compareTo ( main.hibernate.dao.RankingDao o ) { if ( ( this . betScore ) > ( o . getBetScore () ) ) return - 1 ; if ( ( this . betScore ) < ( o . getBetScore () ) ) return 1 ; return 0 ; } 
@ java.lang.Override public boolean deleteLink ( java.lang.String dbid , long id1 , long link_type , long id2 , boolean noinverse , boolean expunge ) throws java.lang.Exception { int deletionCount ; try ( edu.berkeley.cs.Transaction tx = session . beginTransaction () ) { java.lang.String deleteLinkStmt = "MATCH (n1 {id: {id1}}) -[r:{link_type}]-> (n2: {id: {id2}}) DELETE r" ; edu.berkeley.cs.StatementResult result = tx . run ( deleteLinkStmt , edu.berkeley.cs.LinkStoreNeo4j . linkParams ( id1 , link_type , id2 ) ) ; deletionCount = result . consume () . counters () . relationshipsDeleted () ; tx . success () ; } return deletionCount > 0 ; } 
@ java.lang.Override public void onSuggestionClicked ( final com.arlib.floatingsearchview.suggestions.model.SearchSuggestion searchSuggestion ) { android.util.Log . d ( me.digi.examples.ca.MainActivity.TAG , "onSuggestionClicked()" ) ; mLastQuery = searchSuggestion . getBody () ; android.content.Intent i = new android.content.Intent ( this , me.digi.examples.ca.ProfileActivity . class ) ; i . putExtra ( "name" , mLastQuery ) ; startActivity ( i ) ; } 
@ java.lang.Override public void init ( edu.uci.ics.hyracks.storage.am.common.api.ITreeIndexMetaDataFrame metaFrame ) throws edu.uci.ics.hyracks.api.exceptions.HyracksDataException { if ( ( confiscatedMetaNode ) != null ) { return; } edu.uci.ics.hyracks.storage.common.buffercache.ICachedPage metaNode = bufferCache . confiscatePage ( BufferCache.INVALID_DPID ) ; try { metaFrame . setPage ( metaNode ) ; metaFrame . initBuffer ( edu.uci.ics.hyracks.storage.am.common.freepage.LinkedMetaDataPageManager.META_PAGE_LEVEL_INDICATOR ) ; metaFrame . setMaxPage ( 0 ) ; } finally { confiscatedMetaNode = metaNode ; appendOnly = true ; } } 
public void onBindViewHolder ( com.example.android.windsordesignstudio.movieviewr.MovieFavoritesAdapter.MovieFavoritesAdapterViewHolder holder , int position ) { if ( ! ( mCursor . moveToPosition ( position ) ) ) return; android.content.Context context = holder.mMoviePoster . getContext () ; java.lang.String moviePoster = mCursor . getString ( mCursor . getColumnIndex ( FavoritesContract.FavoriteEntry.COLUMN_POSTER_FULL_PATH ) ) ; android.widget.ImageView poster = holder.mMoviePoster ; com.squareup.picasso.Picasso . with ( context ) . load ( moviePoster ) . resize ( 600 , 900 ) . into ( poster ) ; } 
public void keyDown ( java.lang.Integer keyInfo ) { java.lang.Integer count = 0 ; if ( com.Hook.common.RecordKeyboard.keyboardCount . containsKey ( keyInfo ) ) { count = com.Hook.common.RecordKeyboard.keyboardCount . get ( keyInfo ) ; } com.Hook.common.RecordKeyboard.keyboardCount . put ( keyInfo , ( ++ count ) ) ; ++ ( com.Hook.common.RecordKeyboard.pressCount ) ; if ( ( ( com.Hook.common.RecordKeyboard.pressCount ) >= ( com.Hook.common.RecordKeyboard.flagTime ) ) && ( ( ( com.Hook.common.RecordKeyboard.pressCount ) % ( com.Hook.common.RecordKeyboard.flagTime ) ) == 0 ) ) { write () ; } } 
@ java.lang.Override public void subscribe ( final com.github.rxsockets.ObservableEmitter < io.socket.client.Socket > emitter ) throws java.lang.Exception { if ( ! ( connected . get () ) ) { if ( autoDisconnect ) { emitter . setDisposable ( new com.github.rxsockets.SocketConnectionDisposable ( socket , connected ) ) ; } socket . connect () ; connected . set ( true ) ; } emitter . onNext ( socket ) ; } 
public void close ( ch.ninecode.cim.connector.CIMConnection connection ) { if ( null != connection ) if ( connection._Valid ) { connection . invalidate () ; javax.resource.spi.ConnectionEvent event = new javax.resource.spi.ConnectionEvent ( this , javax.resource.spi.ConnectionEvent.CONNECTION_CLOSED ) ; event . setConnectionHandle ( connection ) ; for ( javax.resource.spi.ConnectionEventListener listener : _Listeners ) listener . connectionClosed ( event ) ; } } 
public com.epam.indigo.IndigoObject exactMatch ( com.epam.indigo.IndigoObject obj1 , com.epam.indigo.IndigoObject obj2 , java.lang.String flags ) { if ( flags == null ) flags = "" ; com.epam.indigo.IndigoObject [] parent = new com.epam.indigo.IndigoObject [] { obj1 , obj2 } ; setSessionID () ; int match = com.epam.indigo.Indigo . checkResult ( this , parent , com.epam.indigo.Indigo._lib . indigoExactMatch ( obj1.self , obj2.self , flags ) ) ; if ( match == 0 ) return null ; return new com.epam.indigo.IndigoObject ( this , match , parent ) ; } 
public void update ( int direction ) { switch ( direction ) { case fr.esiea.ga.tetris.client.Model.Piece.DIR_BOTTOM : savePrevPosPiece () ; ( xPos ) ++ ; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_RIGHT : savePrevPosPiece () ; ( yPos ) ++ ; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_LEFT : savePrevPosPiece () ; ( yPos ) -- ; break; case fr.esiea.ga.tetris.client.Model.Piece.DIR_TOP : savePrevPosPiece () ; rotatePieceLeft () ; break; default: break; } } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView , int newState ) { super . onScrollStateChanged ( recyclerView , newState ) ; int initialItemCount = mGridLayoutManager . findFirstCompletelyVisibleItemPosition () ; int totalItemCount = mGridLayoutManager . getItemCount () ; int lastVisisbleItemPosition = mGridLayoutManager . findLastCompletelyVisibleItemPosition () ; if ( ( ( totalItemCount - 1 ) == lastVisisbleItemPosition ) && ( initialItemCount > 0 ) ) { mInfiniteScrollListener . loadMoreData () ; } } 
@ java.lang.Override public void doWrite ( java.io.DataOutput out ) throws java.io.IOException { out . writeInt ( this . seedList . size () ) ; for ( ml.shifu.shifu.core.dvarsel.CandidateSeed seed : this . seedList ) { out . writeInt ( seed . getId () ) ; java.util.List < java.lang.Integer > columnIdList = seed . getColumnIdList () ; out . writeInt ( columnIdList . size () ) ; for ( java.lang.Integer columnId : columnIdList ) { out . writeInt ( columnId ) ; } } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( ( person . getFamily () ) != null ) && ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; } 
public static void callbackRegister ( mcp.mobius.waila.api.IWailaRegistrar registrar ) { blusunrize.immersiveengineering.common.util.compat.waila.IEWailaDataProvider dataProvider = new blusunrize.immersiveengineering.common.util.compat.waila.IEWailaDataProvider () ; registrar . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.common.blocks.plant.BlockIECrop . class ) ; registrar . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWoodenBarrel . class ) ; registrar . registerNBTProvider ( dataProvider , blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWoodenBarrel . class ) ; registrar . registerStackProvider ( dataProvider , blusunrize.immersiveengineering.common.blocks.TileEntityMultiblockPart . class ) ; registrar . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver . class ) ; registrar . registerNBTProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxReceiver . class ) ; registrar . registerBodyProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxProvider . class ) ; registrar . registerNBTProvider ( dataProvider , blusunrize.immersiveengineering.api.energy.immersiveflux.IFluxProvider . class ) ; } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { int x ; int y ; if ( ( drag ) && ( ! ( move ) ) ) { deselectAll () ; target . clear () ; x = e . getX () ; y = e . getY () ; for ( main.GObject go : gObjects ) { if ( go . covered ( eX , eY , x , y ) ) { target . add ( go ) ; go . selected () ; } } repaint () ; } } 
private Hex getWord ( Hex index ) { int i = index . toInt () ; if ( ( i > ( ( Simpletron.MEMORY_SIZE ) - 1 ) ) || ( i < 0 ) ) fatalError ( "*** index out of bounds ***" ) ; Hex word = new Hex ( memory [ i ] ) ; if ( ( ( word . compareTo ( Simpletron.MAX_WORD ) ) > 0 ) || ( ( word . compareTo ( Simpletron.MIN_WORD ) ) < 0 ) ) { fatalError ( "*** overflow occured ***" ) ; } return word ; } 
private static < T > void addGroupAtId ( java.util.List < T > seqResGroups , T group , int sequenceIndexId ) { while ( ( seqResGroups . size () ) <= sequenceIndexId ) { seqResGroups . add ( null ) ; } if ( sequenceIndexId >= 0 ) { seqResGroups . set ( sequenceIndexId , group ) ; } } 
public void deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ; } 
public V getOther ( E e , V oneEnd ) { if ( ! ( edges . containsKey ( e ) ) ) throw new graph.Graph.NotInGraphException ( "Can't find other endpoint of edge" , e ) ; graph.Graph < V , E > . Edge edge = edges . get ( e ) ; if ( edge._1.v . equals ( oneEnd ) ) return edge._3.v ; if ( edge._3.v . equals ( oneEnd ) ) return edge._1.v ; return null ; } 
public void releaseKms ( java.lang.String applicationId ) throws org.kurento.client.internal.NotEnoughResourcesException { try { de.fhg.fokus.nubomedia.kmc.KmsUrlProvider.logger . info ( ( "releasing KMS..." + applicationId ) ) ; if ( ( record ) == null ) return; vnfrService . unregisterApplication ( record . get ( applicationId ) . getInternalAppId () ) ; timerTask . cancel () ; } catch ( java.lang.Exception e ) { throw new org.kurento.client.internal.NotEnoughResourcesException ( ( "An error occured in releasing the KMS - " + ( e . getMessage () ) ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.previous_button : int index = ( questionPager . getCurrentItem () ) - 1 ; questionPager . setCurrentItem ( ( index >= 0 ? index : ( questionAdapter . getCount () ) - 1 ) ) ; break; case R.id.next_button : questionPager . setCurrentItem ( ( ( ( questionPager . getCurrentItem () ) + 1 ) % ( questionAdapter . getCount () ) ) ) ; break; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( position == 0 ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_PICK , android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; intent . setType ( "image/*" ) ; startActivityForResult ( android.content.Intent . createChooser ( intent , "Deep Life" ) , 1 ) ; } else { Show_DialogBox ( position ) ; } } 
private void setLanguage ( java.lang.String lang ) { java.util.Locale locale = null ; if ( lang == null ) { locale = java.util.Locale . getDefault () ; } else { locale = new java.util.Locale ( lang ) ; } map = be.nikiroo.jvcard.resources.Bundles . getBundle ( "resources" , locale ) ; } 
@ java.lang.Override public void visit ( final boa.compiler.visitors.FixPStatement n ) { final boa.compiler.visitors.Identifier id = ( ( boa.compiler.visitors.Identifier ) ( n . getParam1 () . getType () ) ) ; final java.lang.String token = id . getToken () ; befores . add ( token ) ; final boa.compiler.visitors.Identifier id1 = ( ( boa.compiler.visitors.Identifier ) ( n . getParam2 () . getType () ) ) ; final java.lang.String token1 = id1 . getToken () ; befores . add ( token1 ) ; } 
private static java.lang.StringBuffer generateData ( java.util.List < mx.cinvestav.gdl.iot.webpage.dto.MeasureDTO > measures , java.lang.String sensorName ) { java.lang.StringBuffer json = new java.lang.StringBuffer ( "" ) ; json . append ( "\"key\":\"" ) . append ( sensorName ) . append ( "\"," ) ; json . append ( "\"values\":[" ) . append ( mx.cinvestav.gdl.iot.webpage.client.GraphUtils . generateArray ( measures ) ) . append ( "]" ) ; return json ; } 
public java.io.InputStream getBinaryStream ( java.lang.String columnLabel ) throws java.sql.SQLException { try { java.sql.Blob blob = getBlob ( columnLabel ) ; return blob != null ? blob . getBinaryStream () : null ; } catch ( java.lang.Exception e ) { throw new java.sql.SQLException ( ( ( "An error occurred during the retrieval of the binary stream at column '" + columnLabel ) + "'" ) , e ) ; } } 
public void computeCheck ( core.agent.Message message ) { core.restaurant.agent.Waiter waiter = message . get ( 0 ) ; core.restaurant.agent.Customer customer = message . get ( 1 ) ; java.lang.String choice = message . get ( 2 ) ; m_checks . add ( new core.restaurant.Check ( waiter , customer , choice ) ) ; print ( ( ( ( ( "Computing " + ( customer . getName () ) ) + "'s check for his/her " ) + choice ) + "." ) ) ; stateChanged () ; } 
public double [] Project ( double [] Xrgb ) { assert ( Xrgb.length ) == 2 ; int index = pointmap [ ( ( int ) ( ( ( Xrgb [ 1 ] ) * ( Constants.WIDTH ) ) + ( Xrgb [ 0 ] ) ) ) ] ; double [] P = this . points . get ( index ) ; return P ; } 
protected void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ) && ( requestTime > 0 ) ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } 
public boolean contains ( long value ) { int hashCode = hash ( value ) ; int hashMarker = - 1 ; while ( ( ( this . table [ hashCode ] ) != null ) && ( hashCode != hashMarker ) ) { if ( ( this . table [ hashCode ] ) == value ) return true ; if ( hashMarker == ( - 1 ) ) hashMarker = hashCode ; hashCode = ( hashCode + 1 ) % ( this . table . length ) ; } return false ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( ReminderBottomSheetDialog.UPDATE_REMINDER_REQUEST_CODE ) ) { long timestamp = data . getLongExtra ( ReminderBottomSheetDialog.TIMESTAMP_BUNDLE_KEY , 0 ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTime ( new java.util.Date ( timestamp ) ) ; onReminderUpdated ( calendar ) ; } } 
@ java.lang.Override public jp.hazuki.yuzubrowser.webkit.CustomWebView makeWebView ( boolean cacheType ) { jp.hazuki.yuzubrowser.webkit.CustomWebView web = ( cacheType ) ? new jp.hazuki.yuzubrowser.webkit.CacheWebView ( this ) : new jp.hazuki.yuzubrowser.webkit.SwipeWebView ( this ) ; web . getWebView () . setDrawingCacheEnabled ( true ) ; web . getWebView () . buildDrawingCache () ; initWebSetting ( web ) ; web . setAcceptThirdPartyCookies ( android.webkit.CookieManager . getInstance () , ( ( ( ! ( AppData.private_mode . get () ) ) && ( AppData.accept_cookie . get () ) ) && ( AppData.accept_third_cookie . get () ) ) ) ; return web ; } 
public void setValue ( float v ) { if ( v < 0 ) v = 0 ; else if ( v > 1 ) v = 1 ; float newy = ( getY () ) + ( v * ( ( getHeight () ) - ( h . getHeight () ) ) ) ; h . setPosition ( h . getX () , newy ) ; } 
public static int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } 
@ java.lang.Override public void onUpdate ( net.minecraft.item.ItemStack stack , net.minecraft.world.World world , net.minecraft.entity.Entity player , int slot , boolean isCurrent ) { if ( ( stack != null ) && ( ( stack . getTagCompound () ) != null ) ) { net.minecraft.nbt.NBTTagCompound nbt = stack . getTagCompound () ; if ( ( nbt . hasKey ( "IsOpenDummy" ) ) == true ) { nbt . removeTag ( "IsOpenDummy" ) ; } } } 
@ java.lang.Override public void dataUpdated ( java.lang.Integer i ) { float maxVolume = java.lang.Math . min ( dataManager . getGlobalMaxVolumeValue () , 1000 ) ; transferFunction . setMaxOrdinates ( new java.awt.geom.Point2D.Float ( dataManager . getGlobalMaxVolumeValue () , 1.0F ) ) ; float lowestDataPoint = dataManager . getGlobalLowestVolumeValue () ; transferFunction . resetColors () ; transferFunction . setColor ( new java.awt.geom.Point2D.Float ( ( ( maxVolume / ( dataManager . getGlobalMaxVolumeValue () ) ) * lowestDataPoint ) , 0.001F ) , transferFunction . getColors () . firstEntry () . getValue () ) ; } 
public void setAllGames ( modeling.GameList allGames ) { if ( ( allGames . getGames () . size () ) != 0 ) { this . allGames = allGames . getGames () ; if ( ( currGame ) != null ) { setCurrGame ( allGames . findGame ( currGame . getGameID () ) ) ; } setChanged () ; notifyObservers ( allGames ) ; } } 
public static java.io.OutputStream getFileOutputSteam ( android.content.Context context , java.lang.String fileName , android.support.v4.provider.DocumentFile root , java.lang.String . . . subDirs ) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( root , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; if ( file == null ) return null ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutputSteam ( context , file . getUri () ) ; } 
private void saveIntegrityKey ( javax.crypto.SecretKey secretKey , java.lang.String integrityKeyFilename ) { try ( java.io.ObjectOutputStream integrityKeyOutputStream = new java.io.ObjectOutputStream ( new java.io.FileOutputStream ( integrityKeyFilename ) ) ) { integrityKeyOutputStream . writeObject ( secretKey ) ; integrityKeyOutputStream . close () ; consoleOutputController . logOnScreen ( java.lang.String . format ( keySavedMessage , integrityKeyFilename ) ) ; } catch ( java.io.IOException e ) { throw new ch.ge.ve.offlineadmin.exception.KeyGenerationRuntimeException ( "error while saving the integrity key" , e ) ; } } 
public boolean isSatisfiedByBefore ( java.util.Date date ) { java.util.Calendar testDateCal = java.util.Calendar . getInstance ( getTimeZone () ) ; testDateCal . setTime ( date ) ; testDateCal . set ( java.util.Calendar.MILLISECOND , 0 ) ; java.util.Date originalDate = testDateCal . getTime () ; testDateCal . add ( java.util.Calendar.SECOND , 1 ) ; java.util.Date timeBefore = getTimeBefore ( testDateCal . getTime () ) ; return ( timeBefore != null ) && ( timeBefore . equals ( originalDate ) ) ; } 
@ com.jobmatch.controllers.RequestMapping ( value = "/create" , method = RequestMethod.GET ) public java.lang.String createJob ( org.springframework.ui.Model model ) { com.jobmatch.models.JobPost newJobPost = new com.jobmatch.models.JobPost () ; model . addAttribute ( "title" , "Create job post" ) ; model . addAttribute ( "skills" , new com.jobmatch.viewmodels.RankMap ( newJobPost . getSkills () ) ) ; model . addAttribute ( "skillOptions" , skillRepository . getMap () ) ; model . addAttribute ( "jobPost" , newJobPost ) ; model . addAttribute ( "countries" , com.jobmatch.models.JobPost . getCountries () ) ; return "/jobs/edit" ; } 
public void setTopic ( java.lang.String topic ) throws java.io.IOException { this . topic = topic ; for ( com.rbruno.irc.templates.Client current : clients ) current . getConnection () . send ( Reply.RPL_TOPIC , current , ( ( ( this . getName () ) + " " ) + ( this . getTopic () ) ) ) ; } 
protected void afterExecute ( java.lang.Runnable r , java.lang.Throwable t ) { try { org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent agent = ( ( org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent ) ( r ) ) ; org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.dataPublisherPool . release ( agent ) ; } catch ( java.lang.Exception e ) { org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log . error ( ( "Error while returning Throttle data publishing agent back to pool" + ( e . getMessage () ) ) ) ; } } 
protected void loadInverseChildKeys ( org.grails.datastore.mapping.core.Session session , java.lang.Class childType , java.util.Collection keys ) { if ( ! ( keys . isEmpty () ) ) { if ( proxyEntities ) { for ( java.lang.Object key : keys ) { add ( session . proxy ( childType , ( ( java.io.Serializable ) ( key ) ) ) ) ; } } else { addAll ( session . retrieveAll ( childType , keys ) ) ; } } } 
public static void setFloat ( java.lang.String group , java.lang.String param , float value ) { if ( ! ( Config.data . hasKey ( group ) ) ) Config.data . setJSONObject ( group , new processing.data.JSONObject () ) ; processing.data.JSONObject grp = Config.data . getJSONObject ( group ) ; grp . setFloat ( param , value ) ; Config.data . setJSONObject ( group , grp ) ; Config.modified = true ; } 
private boolean pntInCircle ( double px , double py , double x1 , double y1 , double radius ) { double diffX = x1 - px ; double diffY = y1 - py ; double dist = ( diffX * diffX ) + ( diffY * diffY ) ; return dist < ( radius * radius ) ; } 
private void initializeParameters ( com.bow3n.controller.server.model.Task task ) { task . setFinished ( java.lang.Boolean.FALSE ) ; if ( ( ( task . getProject () ) != null ) && ( ( task . getProject () . getId () ) != null ) ) { task . setProject ( projectRepository . findOne ( task . getProject () . getId () ) ) ; } } 
public void saveNewInputToProfile ( android.view.View view ) { editMyProfileView . saveTextFieldsToProfile ( myProfile ) ; if ( ! ( canceledByError ) ) { android.content.Intent intent = new android.content.Intent () ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putSerializable ( "sendProfile" , myProfile ) ; intent . putExtras ( bundle ) ; setResult ( 2 , intent ) ; finish () ; } } 
public boolean allClientsAhead ( java.lang.Long workQueueHeadTime ) { synchronized ( lock ) { for ( net.grigoriadi.sc.domain.Client client : registeredClients ) { java.lang.Long time = lastItemTimesByClient . get ( client . getClientId () ) ; if ( ( time == null ) || ( workQueueHeadTime >= time ) ) { return false ; } } } return true ; } 
public int compare ( ScoredDocument doc1 , ScoredDocument doc2 ) { if ( ( doc1 . getScore () ) < ( doc2 . getScore () ) ) { return 1 ; } else if ( ( doc1 . getScore () ) > ( doc2 . getScore () ) ) { return - 1 ; } return 0 ; } 
@ java.lang.Override public com.itis.model.Post update ( com.itis.model.Post post , com.itis.form.PostCreationForm form ) { com.itis.model.Post post1 = transformer . apply ( form ) ; post . setTitle ( post1 . getTitle () ) ; post . setText ( post1 . getText () ) ; return postRepository . save ( post ) ; } 
public static boolean listContainsArray ( java.util.List < char [] > list , char [] array ) { for ( char [] element : list ) { if ( java.util.Arrays . equals ( element , array ) ) { return true ; } } return false ; } 
protected void doUpgrade ( at.pcgamingfreaks.Configuration oldConfiguration ) { logger . info ( "No custom config upgrade code implemented! Copying all data from old config to new one." ) ; for ( java.lang.String key : config . getKeys ( true ) ) { if ( oldConfiguration.config . isSet ( key ) ) { if ( key . equals ( "Version" ) ) continue; config . set ( key , oldConfiguration.config . getString ( key , null ) ) ; } } } 
public void initMargins ( android.graphics.Rect margins , android.view.View view ) { android.view.ViewGroup.LayoutParams layoutParams = ( view != null ) ? view . getLayoutParams () : null ; if ( ( layoutParams != null ) && ( layoutParams instanceof android.view.ViewGroup.MarginLayoutParams ) ) { initMarginRect ( margins , ( ( android.view.ViewGroup.MarginLayoutParams ) ( layoutParams ) ) ) ; } else { margins . set ( 0 , 0 , 0 , 0 ) ; } } 
@ java.lang.Override public void paint ( java.awt.Graphics g ) { java.awt.Graphics2D ga = ( ( java.awt.Graphics2D ) ( g ) ) ; ga . setRenderingHint ( java.awt.RenderingHints.KEY_ANTIALIASING , java.awt.RenderingHints.VALUE_ANTIALIAS_ON ) ; setText ( ALLQ [ choosedSub ] [ CurrentNum [ choosedSub ] ] ) ; drawaString ( g , ALLQ [ choosedSub ] [ CurrentNum [ choosedSub ] ] , 20 , 32 ) ; } 
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { if ( ( event != null ) && ( ( event . size () ) > 0 ) ) { long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; adapter = new android.widget.ArrayAdapter ( getActivity () , android.R.layout.simple_list_item_1 ) ; setEmptyText ( "No data, please add from menu." ) ; setListAdapter ( adapter ) ; setListShown ( false ) ; getLoaderManager () . initLoader ( ch.ronoli.tensing.fragments.CategoryFragment.LOADER_ID , null , this ) ; } 
public boolean validatePurchaseCategoryCode ( java.lang.String purchaseCategoryCode ) throws java.lang.Exception { boolean isvalid = false ; try { java.util.List < java.lang.String > validCategoris = apiDAO . getValidPurchaseCategories () ; if ( ( validCategoris . size () ) > 0 ) { for ( java.lang.String category : validCategoris ) { if ( category . equalsIgnoreCase ( purchaseCategoryCode ) ) { isvalid = true ; break; } } } } catch ( java.lang.Exception e ) { throw e ; } return isvalid ; } 
public org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk convertToMeasureColDataChunk ( int index ) { assert index < ( pagesCount ) ; if ( ( dataChunks ) == null ) { dataChunks = new org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk [ pagesCount ] ; } try { if ( ( dataChunks [ index ] ) == null ) { dataChunks [ index ] = chunkReader . convertToMeasureChunk ( fileReader , blockId , rawData , offSet , length , index ) ; } } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } return dataChunks [ index ] ; } 
@ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( t == null ) { if ( ( ( this . currentOwner ) == null ) || ( ! ( this . currentOwner . isAlive () ) ) ) return true ; else return false ; } else if ( t . isAlive () ) { if ( ( this . currentOwner ) == t ) return true ; else return false ; } else return false ; } 
@ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( ( meta == null ) && ( codec != ( org.jcodec.common.Codec.H264 ) ) ) { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } track . addVideoSampleEntry ( meta ) ; return track ; } 
public double [] mapSubstrateOutputsToStandardOutputs ( double [] outputs ) { double [] modifiedOutputs = new double [ numOutputs ] ; if ( ( numOutputs ) == ( edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.NUM_OUTPUTS_WITH_NO_ACTION ) ) { modifiedOutputs [ NOTHING_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_NOTHING_INDEX ] ; } modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.UP_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_UP_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.RIGHT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_RIGHT_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.DOWN_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_DOWN_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.LEFT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_LEFT_INDEX ] ; return modifiedOutputs ; } 
public synchronized void removeFromCursor ( com.gdo.stencils.StclContext stclContext , com.gdo.stencils.key.IKey key ) { com.gdo.stencils.plug.PStcl stcl = _stencils . get ( key ) ; _stencils . remove ( key ) ; _modified . remove ( key ) ; _locked . remove ( key ) ; if ( stcl != null ) {} } 
public static de.hsnr.inr.sir.query.QueryItem create ( java.lang.String name ) { try { return de.hsnr.inr.sir.query.QueryConjunction . create ( name ) ; } catch ( java.lang.IllegalArgumentException e ) {} try { return de.hsnr.inr.sir.query.ProximityQuery . create ( name ) ; } catch ( java.lang.IllegalArgumentException e ) {} try { return de.hsnr.inr.sir.query.PhraseQuery . create ( name ) ; } catch ( java.lang.IllegalArgumentException e ) {} return de.hsnr.inr.sir.query.ConcreteQueryTerm . create ( name ) ; } 
public po.GoodsModelPO set_signal_name ( vo.GoodsVO goods ) throws java.lang.Exception { java.util.HashMap < java.lang.String , po.GoodsModelPO > goodsModels = goodsListPO () . getGoodsModels () ; po.GoodsModelPO temp = goodsModels . get ( goods.id ) ; temp . setName ( goods.name ) ; if ( ( goods.amount ) < 0 ) { return null ; } temp . setSignal ( goods.amount ) ; return temp ; } 
private void fakeRegisteredServiceEventForExistingServices ( final org.osgi.framework.BundleContext bundleContext , org.osgi.framework.ServiceListener sl , java.lang.String filter ) throws org.osgi.framework.InvalidSyntaxException { org.osgi.framework.ServiceReference < ? > [] servicesPresent = bundleContext . getServiceReferences ( ( ( java.lang.String ) ( null ) ) , filter ) ; if ( servicesPresent != null ) { for ( org.osgi.framework.ServiceReference < ? > serviceReference : servicesPresent ) { sl . serviceChanged ( new org.osgi.framework.ServiceEvent ( org.osgi.framework.ServiceEvent.REGISTERED , serviceReference ) ) ; } } } 
@ org.bukkit.event.EventHandler @ java.lang.SuppressWarnings ( value = "unused" ) public void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent ev ) { final org.bukkit.entity.Player p = ev . getPlayer () ; if ( ( p . hasPermission ( "multispawn.noteleport" ) ) || ( ( plugin . getSpawns ( p ) ) == null ) ) { return; } plugin . sendPlayerToSpawn ( p ) ; } 
@ java.lang.Override public void it ( java.lang.String text , com.github.paulcwarren.ginkgo4j.ExecutableBlock block , boolean isFocused ) { if ( filter . equals ( text ) ) { filter = splitFilter ( filter , text ) ; try { chain . setSpec ( block ) ; chain . setIsFocused ( ( isFocused |= chain . isFocused () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
protected amidst.map.layers.EndCityLayer.ChunkProbability hasSuitableIslandFoundation ( amidst.map.Fragment_TheEnd frag , int chunkX , int chunkZ ) { amidst.map.layers.EndCityLayer.ChunkProbability result = amidst.map.layers.EndCityLayer.ChunkProbability.None ; float requiredInfluence = 60 ; java.util.List < amidst.map.EndIsland > islands = frag . getEndIslands () ; for ( amidst.map.EndIsland island : islands ) { float influence = island . influenceAtChunk ( chunkX , chunkZ ) ; if ( influence >= 0.0 ) { if ( influence >= requiredInfluence ) { result = amidst.map.layers.EndCityLayer.ChunkProbability.Likely ; break; } else { result = amidst.map.layers.EndCityLayer.ChunkProbability.Possible ; } } } return result ; } 
public static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } 
public static void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } 
private void handleIntent ( android.content.Intent intent ) { if ( ( ( intent . getAction () ) != null ) && ( intent . getAction () . equals ( Intent.ACTION_SEARCH ) ) ) { java.lang.String query = intent . getStringExtra ( SearchManager.QUERY ) ; android.widget.Toast . makeText ( mContext , query , Toast.LENGTH_SHORT ) . show () ; android.provider.SearchRecentSuggestions suggestions = new android.provider.SearchRecentSuggestions ( this , com.quartzodev.provider.SuggestionProvider.AUTHORITY , com.quartzodev.provider.SuggestionProvider.MODE ) ; suggestions . saveRecentQuery ( query , null ) ; } } 
private void updateNotifyMenu ( boolean flag ) { if ( ( menu ) == null ) return; menu . clear () ; if ( ( cn.edu.jxnu.awesome_campus.MainActivity.presenter . getCurrentSelectedID () ) == ( DrawerItem.HOME . getId () ) ) { if ( flag ) { getMenuInflater () . inflate ( R.menu.menu_notify_unread , menu ) ; } else { getMenuInflater () . inflate ( R.menu.menu_notify_none , menu ) ; } } } 
public void NewCookie ( javax.servlet.http.HttpServletResponse response ) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie ( "cartID" , Managers.ShoppingCartHolder . getRandomID () ) ; response . addCookie ( cookie ) ; Managers.ShoppingCart cart = new Managers.ShoppingCart () ; Managers.ShoppingCartHolder . getInstance () . AddCart ( cart , cookie . getValue () ) ; } 
private < T > void check ( net.serenitybdd.screenplay.Consequence < T > consequence , net.serenitybdd.screenplay.ErrorTally errorTally ) { try { eventBusInterface . startQuestion ( net.serenitybdd.screenplay.formatting.FormattedTitle . ofConsequence ( consequence ) ) ; if ( eventBusInterface . shouldIgnoreConsequences () ) { eventBusInterface . reportStepIgnored () ; } else { consequence . evaluateFor ( this ) ; eventBusInterface . reportStepFinished () ; } } catch ( net.serenitybdd.screenplay.exceptions.IgnoreStepException e ) { eventBusInterface . reportStepIgnored () ; } catch ( java.lang.Throwable e ) { errorTally . recordError ( consequence , e ) ; } } 
@ java.lang.Override public com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.Result visitDefCall ( com.jetbrains.jetpad.vclang.term.Abstract.DefCallExpression expr , com.jetbrains.jetpad.vclang.term.expr.type.Type expectedType ) { com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.PreResult result = myTypeCheckingDefCall . typeCheckDefCall ( expr ) ; if ( ( result == null ) || ( ! ( checkPath ( result , expr ) ) ) ) { return null ; } return checkResultImplicit ( expectedType , checkDefCall ( result , expr ) , expr ) ; } 
@ java.lang.Override public void update ( float delta ) { elapsed += delta ; runnable.pitch = ionium.util.MathHelper . lerp ( init , end , com.badlogic.gdx.math.MathUtils . clamp ( ( ( elapsed ) / ( ( time ) <= 0 ? 1 : 0 ) ) , 0.0F , 1.0F ) ) ; Gdx.app . postRunnable ( runnable ) ; } 
public void handleResetButtonAction ( javafx.event.ActionEvent event ) throws java.io.IOException { java.lang.System.out . println ( "reseting level" ) ; int i ; try { i = java.lang.Integer . parseInt ( levelNumber . getText () ) ; } catch ( java.lang.Exception e ) { return; } resetButtons () ; resetFields ( i ) ; resetBoard ( i ) ; resetPieces () ; } 
public static boolean setByteFile ( java.lang.String fileName , java.lang.String hex ) { if ( ( MockFTPServerJulia.fakeFtpServer . getFileSystem () ) == null ) { org.mockftpserver.fake.filesystem.FileSystem fileSystem = new org.mockftpserver.fake.filesystem.UnixFakeFileSystem () ; MockFTPServerJulia.fakeFtpServer . setFileSystem ( fileSystem ) ; } org.mockftpserver.fake.filesystem.FileEntry file = new org.mockftpserver.fake.filesystem.FileEntry ( fileName ) ; file . setContents ( MockFTPServerJulia . hexStringToByteArray ( hex ) ) ; MockFTPServerJulia.fakeFtpServer . getFileSystem () . add ( file ) ; return true ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/{productId}/invoice" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) @ org.springframework.web.bind.annotation.ResponseBody public org.springframework.data.domain.Page < com.cspinformatique.kubik.model.sales.InvoiceDetail > findProductInvoices ( @ org.springframework.web.bind.annotation.PathVariable ( value = "productId" ) int productId , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "0" ) java.lang.Integer page , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "10" ) java.lang.Integer resultPerPage , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "DESC" ) org.springframework.data.domain.Sort.Direction direction , @ org.springframework.web.bind.annotation.RequestParam ( defaultValue = "invoice.paidDate" ) java.lang.String sortBy ) { return this . invoiceDetailService . findByProductAndInvoiceStatus ( this . productService . findOne ( productId ) , new com.cspinformatique.kubik.model.sales.InvoiceStatus ( InvoiceStatus.Types.PAID . name () , null ) , new org.springframework.data.domain.PageRequest ( page , resultPerPage , direction , sortBy ) ) ; } 
private static java.util.List < Tile > createGameBoard ( final Board.Builder builder ) { final Tile [] tiles = new Tile [ BoardUtils.NUM_TILES ] ; for ( int i = 0 ; i < ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles [ i ] = Tile . createTile ( i , builder.boardConfig . get ( i ) ) ; } return java.util.Arrays . asList ( tiles ) ; } 
private synchronized double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } 
@ java.lang.Override public boolean escribirObjeto ( java.lang.Object objeto ) { try { if ( ( outStream ) == null ) { if ( ( inStream ) != null ) { inStream . close () ; inStream = null ; } outStream = getOutStream ( archivo . exists () ) ; } outStream . writeObject ( objeto ) ; outStream . flush () ; return true ; } catch ( java.io.IOException e ) { return false ; } } 
protected com.sproutigy.libs.luceneplus.core.indices.LuceneIndex instantiate ( java.lang.String name ) throws java.io.IOException { com.sproutigy.libs.luceneplus.core.indices.LuceneIndex index = instantiated . get ( name ) ; if ( index == null ) { synchronized ( lock ) { index = instantiated . get ( name ) ; if ( index == null ) { index = prepareIndex ( name , provideDirectorySupplier ( name ) ) ; if ( isAutoOpen () ) { index . open () ; } onInstantiate ( index , name ) ; instantiated . put ( name , index ) ; } } } return index ; } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( this . id ) ; dest . writeString ( this . title ) ; dest . writeString ( this . subtitle ) ; dest . writeLong ( this . chatTime ) ; dest . writeString ( this . image ) ; dest . writeByte ( ( this . isGroup ? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; } 
private void SendFileContent ( java.net.Socket conn , java.io.InputStream fileIs ) throws java.io.IOException { java.io.OutputStream os = conn . getOutputStream () ; byte [] b = new byte [ 1024 ] ; int x = fileIs . read ( b ) ; while ( x != ( - 1 ) ) { if ( x < 1024 ) { b = java.util.Arrays . copyOf ( b , x ) ; } os . write ( b ) ; x = fileIs . read ( b ) ; } } 
public org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result combine ( org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result other ) { int cAllows = ( allows ) | ( org.apache.jackrabbit.core.security.authorization.Permission . diff ( other.allows , denies ) ) ; int cDenies = ( denies ) | ( org.apache.jackrabbit.core.security.authorization.Permission . diff ( other.denies , allows ) ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cAPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits . getInstance ( allowPrivileges ) ; cAPrivs . addDifference ( other.allowPrivileges , denyPrivileges ) ; org.apache.jackrabbit.core.security.authorization.PrivilegeBits cdPrivs = org.apache.jackrabbit.core.security.authorization.PrivilegeBits . getInstance ( denyPrivileges ) ; cdPrivs . addDifference ( other.denyPrivileges , allowPrivileges ) ; return new org.apache.jackrabbit.core.security.authorization.AbstractCompiledPermissions.Result ( cAllows , cDenies , cAPrivs , cdPrivs ) ; } 
public void Is_Valid_Person_Name ( android.widget.EditText edt ) throws java.lang.NumberFormatException { if ( ( edt . getText () . toString () . length () ) <= 0 ) { valid_name = null ; } else if ( ! ( edt . getText () . toString () . matches ( "[a-zA-Z ]+" ) ) ) { valid_name = null ; } else { valid_name = edt . getText () . toString () ; } } 
public void add ( cque.INodePool pool , E e ) { assert e != null ; cque.Node < E > n = getNode ( pool , e ) ; if ( ( tail ) == null ) { assert ( head ) == null ; head = n ; tail = n ; return; } tail . setNext ( n ) ; tail = n ; } 
public final void backup ( java.lang.String extension ) throws java.io.IOException { javi.FileDescriptor.LocalFile file2 = FileDescriptor.LocalFile . make ( ( ( prop.fdes.shortName ) + extension ) ) ; if ( ( ! ( prop.fdes . canWrite () ) ) && ( "Microsoft Corp." . equals ( java.lang.System . getProperty ( "java.vendor" ) ) ) ) history.Tools . execute ( null , ( "d:\\cygwin\\bin\\chmod +w " + ( prop.fdes.canonName ) ) ) ; prop.fdes . renameTo ( file2 ) ; prop.fdes . writeAll ( getStringIter () , prop . getSeperator () ) ; setReadOnly ( false ) ; } 
private boolean assertContiguous ( gnu.trove.list.TIntList list ) { if ( ( list . size () ) < 2 ) { return true ; } int prev = list . get ( 0 ) ; for ( int i = 1 ; i < ( list . size () ) ; ++ i ) { int v = list . get ( i ) ; if ( v == ( prev + 1 ) ) { prev = v ; continue; } return false ; } return true ; } 
public T addExtra ( T . . . extras ) { if ( extras != null ) { for ( T extra : extras ) { if ( extra == null ) continue; if ( ( this . extra ) == null ) { this . extra = new java.util.LinkedList <> () ; } this . extra . add ( extra ) ; } } return ( ( T ) ( this ) ) ; } 
public static java.lang.Object getReflectedField ( java.lang.String fieldName , main.java.HashTable instance ) throws test.java.HashTableTests.HashTableUtilException { java.lang.Class hashTableClass = instance . getClass () ; try { java.lang.reflect.Field field = hashTableClass . getDeclaredField ( fieldName ) ; field . setAccessible ( true ) ; return field . get ( instance ) ; } catch ( java.lang.NoSuchFieldException | java.lang.IllegalAccessException e ) { throw new test.java.HashTableTests.HashTableUtilException ( ( "Failed to retrieve " + fieldName ) ) ; } } 
private boolean playerIsLastToClose ( int number ) { for ( spare.n52.yadarts.entity.Player p : this . cricketScores . keySet () ) { spare.n52.yadarts.games.cricket.CricketScore s = this . cricketScores . get ( p ) ; if ( ( p != ( this . currentPlayer ) ) && ( ! ( s . playerHasOpened ( number ) ) ) ) { return false ; } } return true ; } 
@ java.lang.Override public void run () { com.vessel.VesselAB . setABListener ( new com.vessel.interfaces.ABListener () { @ java.lang.Override public void testNotAvailable ( final com.vessel.enums.VesselEnums.TestVariation testVariation ) { callbackContext . success ( testVariation . toString () ) ; } @ java.lang.Override public void testLoading () {} @ java.lang.Override public void testLoaded ( java.lang.String testName , final com.vessel.enums.VesselEnums.TestVariation testVariation ) { callbackContext . success ( testVariation . toString () ) ; } } ) ; } 
private static void writeNBTFound ( net.minecraft.nbt.NBTTagCompound nbt , net.minecraft.util.math.BlockPos pos ) { nbt . setBoolean ( "found" , true ) ; nbt . removeTag ( "searchStarted" ) ; nbt . setInteger ( "posX" , pos . getX () ) ; nbt . setInteger ( "posZ" , pos . getZ () ) ; } 
@ org.springframework.transaction.annotation.Transactional public de.tum.in.www1.exerciseapp.domain.Result retreiveBuildDetailsFromBambooAndStoreThem ( de.tum.in.www1.exerciseapp.domain.Result result ) { de.tum.in.www1.exerciseapp.domain.Participation participation = result . getParticipation () ; java.util.Map buildDetails = continuousIntegrationService . get () . getLatestBuildResultDetails ( participation ) ; java.util.HashSet < de.tum.in.www1.exerciseapp.domain.Feedback > feedbacks = continuousIntegrationService . get () . createFeedbacksForResult ( buildDetails ) ; result . setFeedbacks ( feedbacks ) ; result = resultRepository . save ( result ) ; return result ; } 
public boolean onMenuItemClick ( android.view.MenuItem menuItem ) { ticketList . add ( new Data.Ticket ( "00:00" , menuItem . getTitle () . toString () ) ) ; userData . setTicketList ( ticketList ) ; applicationTimeTracker . setUserData ( userData ) ; adapter . notifyDataSetChanged () ; return true ; } 
public void updateDefStats ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; } 
static org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier getRootInstanceIdentifier ( final java.lang.Class type ) { try { return org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier . of ( org.opendaylight.yangtools.yang.common.QName . class . cast ( type . getField ( "QNAME" ) . get ( null ) ) ) ; } catch ( java.lang.IllegalAccessException e ) { throw new java.lang.IllegalStateException ( ( "Constant QNAME not accessible for type" + type ) , e ) ; } catch ( java.lang.NoSuchFieldException e ) { throw new java.lang.IllegalStateException ( ( ( "Class " + type ) + " does not have QName defined" ) , e ) ; } } 
@ java.lang.Override public void onDataChange ( com.totvs.pcsistemas.pocbeacons.pocbeacons.DataSnapshot snapshot ) { try { ShowOffer ( snapshot . child ( "OfferSponsor" ) . getValue () . toString () , snapshot . child ( "OfferPictureSponsor" ) . getValue () . toString () , snapshot . child ( "Offer" ) . getValue () . toString () , snapshot . child ( "OfferPicture" ) . getValue () . toString () ) ; } catch ( java.lang.Exception e ) {} } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { for ( com.firebase.client.DataSnapshot child : dataSnapshot . getChildren () ) { email = ( ( java.lang.String ) ( child . child ( "email" ) . getValue () ) ) ; java.lang.System.out . println ( ( "email:" + ( email ) ) ) ; if ( userId . equals ( myRef . getAuth () . getUid () ) ) { groupid . add ( email ) ; inGroup = true ; } members . add ( email ) ; } } 
public static int [] generateDescending ( int size ) { int [] tab = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { tab [ i ] = size - i ; } return tab ; } 
private java.lang.Boolean getBooleanSetting ( java.lang.String setting , java.lang.Boolean fallback ) { java.lang.String val = burp.BurpExtender . getInstance () . getCallbacks () . loadExtensionSetting ( setting ) ; if ( val == null ) return fallback ; try { return java.lang.Boolean . valueOf ( val ) ; } catch ( java.lang.NullPointerException nPException ) { return fallback ; } } 
public static java.lang.Iterable < java.lang.Object > asList ( java.lang.Object x ) { if ( x instanceof java.lang.Iterable ) { return ( ( java.lang.Iterable < java.lang.Object > ) ( x ) ) ; } else { java.util.List < java.lang.Object > list = new java.util.ArrayList < java.lang.Object > ( 1 ) ; list . add ( x ) ; return list ; } } 
public void setCardId ( java.lang.String name , java.lang.String ID , int ent_id ) { try { Card c = new Card () ; c = cardsByID . get ( ID ) ; c.name = name ; c.EntityID = ent_id ; cards . put ( name , c ) ; } catch ( java.lang.Exception e ) {} } 
public static void releaseBatches ( org.apache.drill.exec.record.RecordBatch incoming ) { if ( incoming instanceof org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) { incoming = ( ( org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) ( incoming ) ) . getIncoming () ; } if ( incoming instanceof org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) { org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch esb = ( ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) ( incoming ) ) ; if ( ( esb.resultsIterator ) != null ) { esb.resultsIterator . close () ; esb.resultsIterator = null ; } } } 
@ java.lang.Override public void onClick ( android.view.View view ) { enterClear ( enterPressed ) ; if ( textview . getText () . equals ( "" ) ) { textview . setText ( ( ( ans ) + "+" ) ) ; } else if ( ! ( isOperator ( textview . getText () . toString () ) ) ) { textview . append ( "+" ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == null ) return false ; if ( obj == ( this ) ) return true ; if ( ( obj . getClass () ) == ( this . getClass () ) ) { return ( this . id ) == ( ( ( Person ) ( obj ) ) . getId () ) ; } return false ; } 
@ java.lang.Override public java.lang.instrument.ClassFileTransformer getTransformer ( java.lang.ClassLoader classLoader , java.lang.String targetClassName ) { if ( transformerMap . isEmpty () ) { return null ; } final com.navercorp.pinpoint.profiler.DefaultDynamicTransformerRegistry.TransformerKey key = new com.navercorp.pinpoint.profiler.DefaultDynamicTransformerRegistry.TransformerKey ( classLoader , targetClassName ) ; final java.lang.instrument.ClassFileTransformer transformer = transformerMap . remove ( key ) ; if ( logger . isDebugEnabled () ) { logger . info ( "removed dynamic transformer classLoader: {}, className: {}, registry size: {}" , classLoader , targetClassName , transformerMap . size () ) ; } return transformer ; } 
public void sendPacket ( org.mcexchange.Packet p ) { try { byte id = org.mcexchange.Packet . getId ( p ) ; out . writeByte ( id ) ; p . write ( out ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( java.lang.NullPointerException e ) { java.lang.System.err . println ( ( ( "Tried to send an unregistered packet to Client " + ( this ) ) + "!" ) ) ; disconnect () ; } } 
private void updateLocation ( android.location.Location location ) { mCurrentLocation = location ; double latitude = mCurrentLocation . getLatitude () ; double longitude = mCurrentLocation . getLongitude () ; stationManager . updateLocation ( latitude , longitude ) ; route = stationManager . updateNexttation ( route ) ; setRouteTravel () ; binding.estimateTime . setText ( ( ( ( ( "ถึงสถานี" + ( desName ) ) + " ในอีก " ) + ( stationManager . updateTimeToArrive () ) ) + " นาที" ) ) ; } 
@ javax.annotation.Nullable @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.lang.Object getTransferLocation ( @ javax.annotation.Nonnull java.lang.Object object , @ javax.annotation.Nonnull java.lang.String key ) { com.google.common.collect.Multimap < java.lang.Class < ? > , org.squiddev.plethora.api.transfer.ITransferProvider < ? > > map = primary ; java.lang.String [] parts = key . split ( "\\." ) ; for ( java.lang.String part : parts ) { java.lang.Object next = getTransferPart ( object , part , map ) ; if ( next == null ) { return null ; } else { object = next ; map = secondary ; } } return object ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { switch ( requestCode ) { case net.lorenzobianconi.wwatcher.WWatcher.REQ_ENABLE_BT : btEnabled = resultCode == ( RESULT_OK ) ; configureButton ( btEnabled , false ) ; break; case net.lorenzobianconi.wwatcher.WWatcher.REQ_PICK_DEV : if ( data != null ) { java.lang.String addr = data . getExtras () . getString ( "device" ) ; android.bluetooth.BluetoothDevice device = inqMap . get ( addr ) ; new net.lorenzobianconi.wwatcher.WWatcher.BtConnect () . execute ( device ) ; } break; default: break; } } 
public static boolean checkCollision ( worldObjects.WorldObject w ) { for ( worldObjects.WorldObject obj : controller.WorldController . getWorld () . getObjects () ) { if ( ( ! ( obj . equals ( w ) ) ) && ( controller.CollisionChecker . overlap ( w , obj ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btn__download_map : mDownloadingCountry = mCurrentCountry ; com.mapswithme.maps.downloader.MapManager . nativeDownload ( mCurrentCountry.id ) ; break; case R.id.btn__select_map : getMwmActivity () . replaceFragment ( com.mapswithme.maps.downloader.DownloaderFragment . class , null , null ) ; break; case R.id.wpv__download_progress : com.mapswithme.maps.downloader.MapManager . nativeCancel ( mDownloadingCountry.id ) ; Statistics.INSTANCE . trackEvent ( Statistics.EventName.DOWNLOADER_CANCEL , com.mapswithme.util.statistics.Statistics . params () . add ( Statistics.EventParam.FROM , "search" ) ) ; break; } } 
private java.lang.String getSystemName ( java.lang.String systemID ) { java.lang.String systemName = null ; java.lang.String message = "Enter the name for " + systemID ; systemName = javax.swing.JOptionPane . showInputDialog ( null , message ) ; EFBOUserInterfaceManager.progressBar . setValue ( 10 ) ; java.lang.System.out . println ( ( "System ID: " + systemID ) ) ; java.lang.System.out . println ( ( "Name : " + systemName ) ) ; return systemName ; } 
protected void shiftRight ( int index ) { if ( isFull () ) throw new java.lang.IllegalStateException ( "Le tableau est plein" ) ; else if ( isEmpty () ) { return; } else if ( index > ( lastIndex ) ) { return; } else { for ( int i = lastIndex ; i >= index ; i -- ) { myList [ ( i + 1 ) ] = myList [ i ] ; } } } 
public static int next ( int digit , int size ) { int nextVal = 0 ; while ( odometer.Odometer . isValid ( digit , size ) ) { nextVal = digit ++ ; if ( ( ( digit % 10 ) ^ ( size + 1 ) ) == 1 ) { nextVal = 1 ; } } return nextVal ; } 
public void test_139_ACLNotReadOtherGuidFieldTest ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry , edu.umass.cs.gnsclient.client.util.GuidEntry samEntry ) { try { try { java.lang.String result = edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldRead ( westyEntry . getGuid () , "environment" , samEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( ( "Result of read of westy's environment by sam is " + result ) + " which is wrong because it should have been rejected." ) ) ; } catch ( edu.umass.cs.gnscommon.exceptions.client.ClientException e ) {} } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception while reading fields in ACLNotReadOtherGuidFieldTest: " + e ) ) ; } } 
@ java.lang.Override public void render ( java.awt.Graphics g ) { if ( ( ( this . width ) == 30 ) && ( ( this . height ) == 30 ) ) { g . setColor ( java.awt.Color.RED ) ; g . drawRect ( x , y , width , height ) ; } else { g . setColor ( java.awt.Color.RED ) ; g . drawRect ( x , y , width , height ) ; } } 
void encodeAndReply ( org.kaaproject.kaa.server.operations.service.akka.messages.io.response.SessionResponse message ) { try { sessionResponseMeter . mark () ; if ( ( message . getError () ) == null ) { processSessionResponse ( message ) ; } else { processErrors ( message . getChannelContext () , message . getErrorBuilder () , message . getError () ) ; } } catch ( java.lang.Exception e ) { processErrors ( message . getChannelContext () , message . getErrorBuilder () , e ) ; } } 
public void removeAndFail ( java.lang.Throwable cause ) { assert ctx . executor () . inEventLoop () ; if ( cause == null ) { throw new java.lang.NullPointerException ( "cause" ) ; } io.netty.channel.PendingWriteQueue.PendingWrite write = head ; if ( write == null ) { return; } io.netty.util.ReferenceCountUtil . safeRelease ( write.msg ) ; io.netty.channel.ChannelPromise promise = write.promise ; io.netty.channel.PendingWriteQueue . safeFail ( promise , cause ) ; recycle ( write , true ) ; } 
public int getFlag ( int flag ) { int flagVal = 0 ; int flagReg = ( registers [ Z80.REGISTER_F ] ) & flag ; switch ( flag ) { case Z80.FLAG_ZERO : flagVal = flagReg > > > 7 ; break; case Z80.FLAG_SUBTRACT : flagVal = flagReg > > > 6 ; break; case Z80.FLAG_HALFCARRY : flagVal = flagReg > > > 5 ; break; case Z80.FLAG_CARRY : flagVal = flagReg > > > 4 ; break; } return flagVal ; } 
@ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.GET @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Path ( value = "/all" ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response geAlltSuppress ( @ com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.QueryParam ( value = "appId" ) java.lang.String appId ) { com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > method = new com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.RestMethod < java.lang.String , java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > > () { @ java.lang.Override public java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressResponse > execute ( java.lang.String appId ) throws com.magnet.mmx.server.plugin.mmxmgmt.MMXException { java.util.Collection < com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress > s = com.magnet.mmx.server.plugin.mmxmgmt.push.config.MMXPushConfigService . getInstance () . getPushSuppressForAppAndUser ( appId , null ) ; return com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource . convertResponse ( s ) ; } } ; return method . doMethod ( appId ) ; } 
@ java.lang.Override public boolean closeWindow ( uniol.aptgui.mainwindow.WindowId id ) { if ( id . getType () . isEditorWindow () ) { uniol.aptgui.editor.document.Document < ? > doc = getDocument ( id ) ; if ( ( doc . hasUnsavedChanges () ) && ( askSaveDocument ( id , getDocument ( id ) ) ) ) { return false ; } } if ( ( activeWindow ) == id ) { activeWindow = null ; } mainWindow . removeWindow ( id ) ; documents . remove ( id ) ; return true ; } 
private void pickOut ( courier.Parcel pickOut ) { pickOut.arriveTime = map.schedule . getSteps () ; if ( carrying . remove ( pickOut ) ) { spaceRemaining += pickOut.weight ; } if ( ! ( pickOut instanceof courier.CarCaller ) ) { printParcelUnloadLog ( pickOut ) ; currStation.pArrived . add ( pickOut ) ; ( map.parcelTotal ) -- ; tryTerminate () ; } else { carCallerConvertParcel ( ( ( courier.CarCaller ) ( pickOut ) ) ) ; printCarCallerUnloadLog ( ( ( courier.CarCaller ) ( pickOut ) ) ) ; } } 
protected long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; } 
@ controllers.Transactional public static models.UserImpl fetchUser ( java.lang.String username ) { javax.persistence.EntityManager em = play.db.jpa.JPA . em () ; if ( ( em . find ( models.UserImpl . class , username ) ) == null ) { java.lang.System.out . println ( "ERROR NULL" ) ; return null ; } return em . find ( models.UserImpl . class , username ) ; } 
public static < T > boolean noneOf ( final java.lang.Iterable < T > source , final int begin , final int end , java.util.function.Predicate < T > pred ) { final java.util.Iterator < T > iter = getIteratorAtIndex ( source , begin ) ; for ( int i = begin ; i != end ; ++ i ) { assert iter . hasNext () ; if ( pred . test ( iter . next () ) ) { return false ; } } return true ; } 
private void setUserType ( org.trakhound.www.trakhound.device_list.ListAdapter.ViewHolder holder ) { if ( ( holder.SelectionArrow ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) > 0 ) ) holder.SelectionArrow . setVisibility ( View.VISIBLE ) ; else holder.SelectionArrow . setVisibility ( View.GONE ) ; } if ( ( holder.OeeLayout ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) > 0 ) ) holder.OeeLayout . setVisibility ( View.VISIBLE ) ; else holder.OeeLayout . setVisibility ( View.GONE ) ; } } 
public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { if ( r != null ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } else { return null ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.main_activity ) ; preferences = getSharedPreferences ( com.yubico.yubioath.MainActivity.NEO_STORE , Context.MODE_PRIVATE ) ; keyManager = new com.yubico.yubioath.model.KeyManager ( preferences ) ; openFragment ( new com.yubico.yubioath.fragments.SwipeListFragment () ) ; tagDispatcher = nordpol.android.TagDispatcher . get ( this , this , false , false , true , false , true ) ; } 
private void startElementNode ( final org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . debug ( "Found node" ) ; try { this . nodeStack . push ( this . newNode ( nodeStack . peek () , attributes ) ) ; } catch ( final javax.jcr.RepositoryException e ) { throw new org.xml.sax.SAXException ( "Could not create node" , e ) ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( e . getActionCommand () . contentEquals ( "OK" ) ) { setDifficulty ( ( ( org.jtrfp.trcl.game.TVF3Game.Difficulty ) ( cbDifficulty . getSelectedItem () ) ) ) ; setCallSign ( txtCallsign . getText () ) ; setBeginMission ( true ) ; setVisible ( false ) ; } } 
public void sendMessage ( java.lang.String desintationUser , java.lang.String body , java.lang.String message ) { Controller.Message newMessage = new Controller.Message ( this . currentUser . getUsername () , desintationUser , body , message ) ; java.lang.System.out . println ( this . currentUser . getUsername () ) ; messageManager . init () ; messageManager . addData ( newMessage ) ; messageManager . closeConnection () ; } 
@ java.lang.Override public void removeGroups ( org.bukkit.entity.Player player , java.lang.String world ) { if ( plugin.config . isDefaultrankallworlds () ) { world = null ; } if ( ( plugin.config . permissionpluginhasworldsupport () ) == false ) { world = null ; } java.lang.String [] list = net.slipcor.classranks.handlers.HandleVaultPerms.permission . getPlayerGroups ( world , player ) ; if ( list != null ) { for ( java.lang.String sRank : list ) { net.slipcor.classranks.handlers.HandleVaultPerms.permission . playerRemoveGroup ( world , player , sRank ) ; } } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { if ( ( event . getSource () ) instanceof javafx.scene.control.ComboBox ) { java.lang.Integer bassTrack = ( ( javafx.scene.control.ComboBox < java.lang.Integer > ) ( event . getSource () ) ) . getValue () ; ui.Slave . setBassTrack ( bassTrack ) ; } } 
public ch.entwine.weblounge.common.site.Site findSiteByBundle ( org.osgi.framework.Bundle bundle ) { for ( java.util.Map.Entry < ch.entwine.weblounge.common.site.Site , org.osgi.framework.Bundle > entry : siteBundles . entrySet () ) { if ( bundle . equals ( entry . getValue () ) ) return entry . getKey () ; } return null ; } 
public static com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest createInstance ( java.lang.String secretKey ) { if ( secretKey == null ) { return null ; } try { return new com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest ( si.mazi.rescu.utils.Base64 . decode ( secretKey ) ) ; } catch ( java.io.IOException e ) { throw new com.xeiam.xchange.exceptions.ExchangeException ( "Cannot decode secret key" ) ; } } 
public void finalizar ( java.lang.Integer idTarea ) { android.content.ContentValues valores = new android.content.ContentValues () ; valores . put ( ProyectoDBMetadata.TablaTareasMetadata.FINALIZADA , 1 ) ; android.database.sqlite.SQLiteDatabase mydb = dbHelper . getWritableDatabase () ; mydb . update ( ProyectoDBMetadata.TABLA_TAREAS , valores , "_id=?" , new java.lang.String [] { idTarea . toString () } ) ; } 
private int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; } 
private java.util.List < com.netcracker.entity.helper.TaxiOrderHistory > getHistory ( java.lang.Integer pageNumber , javax.servlet.http.HttpServletRequest req ) { com.netcracker.ejb.TaxiOrderBeanLocal taxiOrderBeanLocal = getTaxiOrderBean ( req ) ; java.util.List < com.netcracker.entity.helper.TaxiOrderHistory > list = taxiOrderBeanLocal . getTaxiOrderHistory ( pageNumber , com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize , findCurrentUser () ) ; if ( ( ( list . size () ) == 0 ) && ( pageNumber > 1 ) ) { pageNumber -- ; getServletContext () . setAttribute ( "pageNumber" , pageNumber ) ; list = taxiOrderBeanLocal . getTaxiOrderHistory ( pageNumber , com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize , findCurrentUser () ) ; } return list ; } 
public boolean isSet ( lk.filetributed.client.rpc.services.services.joinRequest_args._Fields field ) { if ( field == null ) { throw new java.lang.IllegalArgumentException () ; } switch ( field ) { case IP_ADDRESS : return isSetIpAddress () ; case PORT : return isSetPort () ; } throw new java.lang.IllegalStateException () ; } 
@ java.lang.Override public void handleResult ( com.google.zxing.Result rawResult ) { new android.app.AlertDialog.Builder ( getActivity () ) . setTitle ( "Scanned Message" ) . setMessage ( rawResult . getText () ) . setPositiveButton ( "OK" , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface , int i ) { resumeCamera () ; } } ) . create () . show () ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) resize () ; queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) rear = 0 ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.Object src = e . getSource () ; if ( src == ( begin ) ) l = new Brain.TemporalLobe.Locked ( "LOCKED" , c ) ; else if ( src == ( back ) ) c . changePanel ( "3" ) ; } 
@ java.lang.Override public boolean contains ( java.lang.String s ) { if ( ( _value ) != null ) { int compr = s . compareTo ( _value ) ; if ( compr == 0 ) return true ; else if ( ( compr < 0 ) && ( ( _left ) != null ) ) return _left . contains ( s ) ; else if ( ( compr > 0 ) && ( ( _right ) != null ) ) return _right . contains ( s ) ; } return false ; } 
protected int addView ( com.tonicartos.superslim.LayoutState.View child , int position , com.tonicartos.superslim.LayoutManager.Direction direction , com.tonicartos.superslim.LayoutState state ) { int addIndex ; if ( direction == ( LayoutManager.Direction.START ) ) { addIndex = 0 ; } else { addIndex = mLayoutManager . getChildCount () ; } state . decacheView ( position ) ; mLayoutManager . addView ( child.view , addIndex ) ; return addIndex ; } 
private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } 
@ java.lang.Override public void writeBuffer ( java.nio.ByteBuffer byteBuffer , int offset , int length ) { if ( byteBuffer . hasArray () ) { writeBytes ( byteBuffer . array () , offset , length ) ; } else { for ( int pos = offset ; pos < ( offset + length ) ; pos ++ ) { writeByte ( byteBuffer . get ( pos ) ) ; } } } 
@ java.lang.Override public cpw.mods.fml.common.network.simpleimpl.IMessage onMessage ( shedar.mods.ic2.nuclearcontrol.network.message.PacketServerUpdate message , cpw.mods.fml.common.network.simpleimpl.MessageContext ctx ) { net.minecraft.item.ItemStack stack = message.itemstack ; if ( ( stack != null ) && ( ( stack . getItem () ) instanceof shedar.mods.ic2.nuclearcontrol.items.ItemCardBase ) ) { shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl helper = new shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl ( stack , 0 ) ; shedar.mods.ic2.nuclearcontrol.api.CardState state = ( ( shedar.mods.ic2.nuclearcontrol.api.IPanelDataSource ) ( stack . getItem () ) ) . update ( ContainerRemoteMonitor.panel , helper , 100 ) ; return new shedar.mods.ic2.nuclearcontrol.network.message.PacketClientRemoteMonitor ( helper . getUpdateSet () ) ; } return null ; } 
public void toggleAlarm ( android.view.View view ) { com.example.alexfaber.sumanalarm.Alarm . getAlarm () . turnedOff () ; if ( alarmTone . isPlaying () ) toggleAlarmSound () ; android.widget.Button button = ( ( android.widget.Button ) ( findViewById ( R.id.toggleButton ) ) ) ; button . setEnabled ( false ) ; android.content.Intent mainActivityIntent = new android.content.Intent ( this , com.example.alexfaber.sumanalarm.Activities.MainActivity . class ) ; startActivity ( mainActivityIntent ) ; } 
public boolean addAtBegining ( E data ) { if ( isLinkedListEmpty () ) { root . setData ( data ) ; tail = root ; ( size ) ++ ; return true ; } else { datastructures.linkedlist.Node < E > newNode = new datastructures.linkedlist.Node < E > ( data ) ; newNode . setNext ( root ) ; root . setPrev ( newNode ) ; root = newNode ; ( size ) ++ ; return true ; } } 
private java.lang.String findWordInRow ( int rowNumber ) { javax.swing.JPanel panel = panels . get ( rowNumber ) ; javax.swing.JTextArea textArea = new javax.swing.JTextArea () ; try { textArea = ( ( javax.swing.JTextArea ) ( findElementInsideOrCreate ( panel , javax.swing.JTextArea . class ) ) ) ; } catch ( java.lang.ClassNotFoundException | java.lang.InstantiationException | java.lang.IllegalAccessException e ) { sendErrorToParent ( e ) ; } return textArea . getText () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.widget.Spinner fishList = ( ( android.widget.Spinner ) ( findViewById ( R.id.fishCaughtSpinner ) ) ) ; int index = fishList . getSelectedItemPosition () ; android.content.Intent intent = new android.content.Intent ( v . getContext () , com.app.fish.catchreport.LiveAddFishActivity . class ) ; intent . putExtra ( "TripInfo" , trip ) ; intent . putExtra ( "Fish" , index ) ; startActivity ( intent ) ; } 
public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , final int reqWidth , final int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) || ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } 
public void onClick ( android.view.View v ) { com.cards.flash.testez.BaseFunction . hideKeyboard ( getContext () , v ) ; if ( com.cards.flash.testez.EditCardFragment.hasTakenQuiz ) { com.cards.flash.testez.EditCardFragment.hasTakenQuiz = false ; updateScores () ; } android.content.Intent intent = new android.content.Intent ( getContext () , com.cards.flash.testez.ScoreBoard . class ) ; intent . putExtra ( "cat" , MainActivity.cateList . get ( com.cards.flash.testez.NavigationDrawerFragment . getCurrentSelectedPos () ) . getObjectId () ) ; startActivity ( intent ) ; } 
private void onUserReceived ( com.pdrogfer.onstage.model.User user ) { android.util.Log . i ( com.pdrogfer.onstage.ui.PresentationActivity.TAG , ( "onUserReceived: " + ( user . toString () ) ) ) ; com.pdrogfer.onstage.Utils . storeUserToSharedPrefs ( user . getUid () , user . getName () , user . getEmail () , user . getUserType () , this ) ; goToListActivity () ; } 
public void colsum ( int [] histogram ) { col_idx [ 0 ] = 0 ; int index = 0 ; for ( int i = 1 ; i <= ( numCols ) ; i ++ ) { col_idx [ i ] = index += histogram [ ( i - 1 ) ] ; } java.lang.System . arraycopy ( col_idx , 0 , histogram , 0 , numCols ) ; nz_length = index ; growMaxLength ( nz_length , false ) ; } 
public void setName ( eu.etaxonomy.cdm.model.name.TaxonName name ) { if ( ( ( this . name ) != null ) && ( ! ( this . name . equals ( name ) ) ) ) { this . name . getRegistrations () . remove ( this ) ; } if ( ( name != null ) && ( ! ( name . equals ( this . name ) ) ) ) { name . getRegistrations () . add ( this ) ; } this . name = name ; } 
public void addJet ( java.lang.String model , double speed , double range , int capacity ) { week2.Jets [] addJets = new week2.Jets [ ( jets.length ) + 1 ] ; for ( int i = 0 ; i < ( ( addJets.length ) - 1 ) ; i ++ ) { addJets [ i ] = jets [ i ] ; } addJets [ jets.length ] = new week2.Jets ( model , speed , range , capacity ) ; jets = addJets ; printJets () ; } 
public boolean smartShoot ( int x , int y ) { grid [ x ] [ y ] . setShot ( true ) ; ( shotCount ) ++ ; if ( grid [ x ] [ y ] . getBoat () ) { ( hitCount ) ++ ; if ( ! ( getBoatSunk () ) ) { hits . push ( new battleship.service.Coordinate ( x , y ) ) ; } return true ; } return false ; } 
private void assertBitSet ( int . . . bits ) { java.util.BitSet expected = new java.util.BitSet ( bits.length ) ; for ( int i = 0 ; i < ( bits.length ) ; i ++ ) { if ( ( bits [ i ] ) != 0 ) { expected . set ( i ) ; } } org.fest.assertions.api.Assertions . assertThat ( bitEncoding . bitSet () ) . isEqualTo ( expected ) ; } 
public static java.io.OutputStream getFileOutputSteam ( android.content.Context context , java.lang.String fileName , java.lang.String rootPath , java.lang.String . . . subDirs ) { android.support.v4.provider.DocumentFile parent = ml.puredark.hviewer.utils.DocumentUtil . getDirDocument ( context , rootPath , subDirs ) ; if ( parent == null ) return null ; android.support.v4.provider.DocumentFile file = parent . findFile ( fileName ) ; if ( file == null ) return null ; return ml.puredark.hviewer.utils.DocumentUtil . getFileOutputSteam ( context , file . getUri () ) ; } 
public void updateTimestepAccel ( Body other ) { double d = distance ( other ) ; double sum = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { double a = ( ( Constants.G ) * ( other.mass ) ) * ( ( other.position [ i ] ) - ( position [ i ] ) ) ; deltaAccel [ i ] += a / ( ( d * d ) * d ) ; sum += deltaAccel [ i ] ; } } 
private java.lang.CharSequence generateFieldNotPresentCondition ( final int sinceVersion , final uk.co.real_logic.sbe.ir.Encoding encoding , final java.lang.String indent ) { if ( 0 == sinceVersion ) { return "" ; } return java.lang.String . format ( ( ( ( indent + "        if self.actingVersion_ < %1$d:\n" ) + indent ) + "            return %2$s\n\n" ) , sinceVersion , generateLiteral ( encoding . primitiveType () , encoding . applicableNullValue () . toString () ) ) ; } 
public void setMotorSpeeds ( double left , double right , boolean usePID ) { double scale = java.lang.Math . max ( java.lang.Math . abs ( left ) , java.lang.Math . abs ( right ) ) ; if ( scale > 1 ) { left = left / scale ; right = right / scale ; } mLeftDrive . setSpeed ( left ) ; mLeftDrive . setUsePID ( usePID ) ; mRightDrive . setSpeed ( right ) ; mRightDrive . setUsePID ( usePID ) ; } 
@ java.lang.Override public void onComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < com.google.firebase.auth.AuthResult > task ) { if ( ! ( task . isSuccessful () ) ) { regErrLbl . setText ( "Error Signing Up" ) ; } else { com.lintech.yougo.User user = new com.lintech.yougo.User ( name , email , task . getResult () . getUser () . getUid () ) ; com.lintech.yougo.Trip trip = new com.lintech.yougo.Trip ( "" , "0" , "0" , "0" , "" ) ; newUser ( user , trip ) ; } } 
public void save ( java.lang.Object relationLink ) { javax.persistence.EntityManager em = daoManager . getEntityManagerFactory () . createEntityManager () ; try { daoManager . startTransaction ( em ) ; em . persist ( relationLink ) ; daoManager . commitTransaction ( em ) ; } catch ( java.lang.Exception ex ) { io.subutai.core.object.relation.impl.dao.RelationDataService.logger . error ( "Error persisting object" , ex ) ; daoManager . rollBackTransaction ( em ) ; } finally { daoManager . closeEntityManager ( em ) ; } } 
@ java.lang.Override public java.lang.String getString ( java.lang.String s , java.lang.String s1 ) { try { java.lang.String key = mEncryptionManager . getHashed ( s ) ; java.lang.String value = mPrefs . getString ( key , null ) ; if ( value != null ) return mEncryptionManager . decrypt ( value ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return s1 ; } 
@ java.lang.Override public org.ggp.base.util.statemachine.MachineState toGdl ( org.apache.lucene.util.OpenBitSet state ) { java.util.Set < org.ggp.base.util.gdl.grammar.GdlSentence > bases = new java.util.HashSet < org.ggp.base.util.gdl.grammar.GdlSentence > () ; int [] baseProps = propNet . getBasePropositions () ; for ( int i = state . nextSetBit ( 0 ) ; i != ( - 1 ) ; i = state . nextSetBit ( ( i + 1 ) ) ) { bases . add ( gdlSentenceMap . get ( ( ( baseOffset ) + i ) ) ) ; } return new org.ggp.base.util.statemachine.MachineState ( bases ) ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { ( ( com.project.locateme.mainViews.homeFragment.HomeFragment ) ( mainViewsAdapter . getFragment ( 0 ) ) ) . updateMarkers () ; ( ( com.project.locateme.mainViews.PlaceFragment ) ( mainViewsAdapter . getFragment ( 1 ) ) ) . updateEventListViewItems () ; ( ( com.project.locateme.mainViews.PlaceFragment ) ( mainViewsAdapter . getFragment ( 1 ) ) ) . updatePlaceListViewItems () ; android.util.Log . e ( this . getLocalClassName () , "update initiated" ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private boolean methodOverridden ( java.lang.Class beanClass , java.lang.reflect.Method methodOfCurrentClass ) { java.lang.String methodName = methodOfCurrentClass . getName () ; java.lang.Class < ? > [] methodParams = methodOfCurrentClass . getParameterTypes () ; java.lang.Class < ? > declaringClass = methodOfCurrentClass . getDeclaringClass () ; try { return ! ( beanClass . getMethod ( methodName , methodParams ) . getDeclaringClass () . equals ( declaringClass ) ) ; } catch ( java.lang.NoSuchMethodException ignored ) {} return false ; } 
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/weekdb/{year}/{month}/{day}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.Object weekdb ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "month" ) int month , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "day" ) int day ) throws java.io.IOException , javax.servlet.ServletException { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , month , day ) ; org.votingsystem.web.currency.jaxrs.Interval timePeriod = org.votingsystem.web.currency.jaxrs.DateUtils . getWeekPeriod ( calendar ) ; return new java.util.HashMap <> () ; } 
private void showCompleteBusRouteGoing ( int busLineId , java.lang.String busLineName ) { mBusLineId = busLineId ; mGoingSwitch . setChecked ( false ) ; mToolbar . setVisibility ( View.GONE ) ; mGoingAndReturnLayout . setVisibility ( View.VISIBLE ) ; if ( mMyBusMap . completeRouteExists ( busLineId ) ) { mMyBusMap . showCompleteRouteGoing ( busLineId ) ; mMyBusMap . zoomOutCompleteBusRouteGoing ( busLineId ) ; } else { showProgressDialog ( getString ( R.string.searching_complete_route ) ) ; com.mybus.service.ServiceFacade . getInstance () . getCompleteBusRoute ( busLineId , busLineName , this ) ; } } 
private void addPhotos ( java.lang.Integer id , java.util.List < org.springframework.web.multipart.MultipartFile > photos ) { java.lang.String contextPath = servletContext . getRealPath ( "/pages/" ) ; for ( org.springframework.web.multipart.MultipartFile file : photos ) { try { org.apache.commons.io.FileUtils . writeByteArrayToFile ( new java.io.File ( ( ( ( ( contextPath + "/images/albums/" ) + id ) + "/" ) + ( file . getOriginalFilename () ) ) ) , file . getBytes () ) ; } catch ( java.io.IOException e ) {} } } 
@ java.lang.Override public java.util.Collection < org.openhab.binding.zwave.internal.protocol.SerialMessage > getDynamicValues ( boolean refresh ) { java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > result = new java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > () ; if ( refresh == true ) { initialiseName = false ; initialiseLocation = false ; } if ( ( initialiseName ) == false ) { result . add ( getNameMessage () ) ; } if ( ( initialiseLocation ) == false ) { result . add ( getLocationMessage () ) ; } return result ; } 
public boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } 
public static java.lang.String toSUMO ( edu.stanford.nlp.util.IntPair ip , java.util.List < edu.stanford.nlp.ling.CoreLabel > tokens ) { java.lang.String NERclass = tokens . get ( ( ( ip . getSource () ) - 1 ) ) . ner () ; if ( NERclass . equals ( "PERSON" ) ) return "Human" ; else if ( NERclass . equals ( "LOCATION" ) ) return "GeographicArea" ; else if ( NERclass . equals ( "ORGANIZATION" ) ) return "Organization" ; return "" ; } 
public java.util.ArrayList < rifGenericLibrary.taxonomyServices.TaxonomyTerm > getImmediateChildTerms ( final java.lang.String parentTermIdentifier ) throws rifGenericLibrary.system.RIFServiceException { java.util.ArrayList < rifGenericLibrary.taxonomyServices.TaxonomyTerm > results = new java.util.ArrayList < rifGenericLibrary.taxonomyServices.TaxonomyTerm > () ; if ( parentTermIdentifier == null ) { return results ; } rifGenericLibrary.taxonomyServices.TaxonomyTerm parentTerm = getTerm ( parentTermIdentifier ) ; if ( parentTerm == null ) { rifGenericLibrary.system.RIFServiceExceptionFactory rifServiceExceptionFactory = new rifGenericLibrary.system.RIFServiceExceptionFactory () ; throw rifServiceExceptionFactory . createNonExistentTaxonomyTerm ( taxonomyServiceID , parentTermIdentifier ) ; } return parentTerm . getChildTerms () ; } 
private void handleChangeTurn ( es.ucm.fdi.tp.views.swing.Board board , es.ucm.fdi.tp.views.swing.Piece turn ) { this . turn = turn ; this . board = board ; boardComponent . setEnabled ( isPieceTurn ( turn ) ) ; if ( turn . equals ( WINDOW_OWNER ) ) { WINDOW . toFront () ; } requestAutomaticMove () ; redrawBoard () ; } 
boolean add ( E item ) { boolean newItem = ! ( this . linkedHashSet . remove ( item ) ) ; this . linkedHashSet . add ( item ) ; if ( ( this . linkedHashSet . size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator < E > it = this . linkedHashSet . iterator () ; it . next () ; it . remove () ; } return newItem ; } 
public void remove ( java.lang.String [] parm ) { java.lang.String nId = parm [ 0 ] ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EAlarmReceiver . cancelAlerm ( mContext , nId ) ; if ( ( ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map ) != null ) && ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . containsKey ( nId ) ) ) { int id = org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . get ( nId ) ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . remove ( nId ) ; if ( ( notificationManager ) != null ) { notificationManager . cancel ( id ) ; } } } 
public void parseCommandObject ( common.CommandObject commandObj , boolean isUndoAction , boolean isRedoAction ) { if ( ! ( isUndoAction || isRedoAction ) ) { commandObj . setLastSearchedIndex ( lastSearchedIndex ) ; } logic.CommandFacade commandFacade = new logic.CommandFacade ( taskList , undoList , redoList , lastOutputTaskList , commandObj , isUndoAction , isRedoAction ) ; commandFacade . run () ; updateLists ( commandFacade ) ; } 
public void freePearlFromMercury ( vg.civcraft.mc.prisonpearl.PrisonPearl pp , java.lang.String reason , java.lang.String server ) { storage . removePearl ( pp , reason ) ; if ( ( server != null ) && ( ( pp . getImprisonedPlayer () ) != null ) ) { respawnPlayerCorrectly ( pp . getImprisonedPlayer () , pp , null ) ; } } 
int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) { reply = defaultValue ; } } return reply ; } 
@ java.lang.Override protected java.util.Date fromString ( java.lang.String input ) { for ( java.text.SimpleDateFormat formatter : parsers ) { try { synchronized ( formatter ) { return formatter . parse ( input ) ; } } catch ( java.text.ParseException ex ) {} } com.univocity.parsers.conversions.DataProcessingException exception = new com.univocity.parsers.conversions.DataProcessingException ( ( "Cannot parse '{value}' as a valid date. Supported formats are: " + ( java.util.Arrays . toString ( formats ) ) ) ) ; exception . setValue ( input ) ; throw exception ; } 
public org.smartbirdpj.mdl.Point getPoint ( java.util.Map < java.lang.Integer , java.util.Map < java.lang.Integer , org.smartbirdpj.mdl.Point > > map , int han , int hu ) { org.smartbirdpj.mdl.Point rv = null ; if ( han >= ( org.smartbirdpj.engine.controller.PointHolder.HAN_MAX ) ) { han = org.smartbirdpj.engine.controller.PointHolder.HAN_MAX ; hu = org.smartbirdpj.engine.controller.PointHolder.HU_MAX ; } try { rv = map . get ( han ) . get ( hu ) ; rv . setHan ( han ) ; rv . setHu ( hu ) ; } catch ( java.lang.NullPointerException e ) { rv = null ; } return rv ; } 
public void loginButtonPressed ( android.view.View v ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException { hideKeyboard () ; loginInfo . setText ( "" ) ; accountName = inputUsername . getText () . toString () ; password = inputPassword . getText () . toString () ; if ( ( ! ( accountName . equals ( "" ) ) ) && ( ! ( password . equals ( "" ) ) ) ) { loginProgressBar . setVisibility ( View.VISIBLE ) ; thorleifz.wakeup.LogIn.LoginTask loginTask = new thorleifz.wakeup.LogIn.LoginTask () ; loginTask . execute () ; } } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group , @ android.support.annotation.IdRes int checkedId ) { rb = ( ( android.widget.RadioButton ) ( findViewById ( checkedId ) ) ) ; gender = rb . getText () . toString () ; if ( gender . equals ( "Male" ) ) { profileColor = "BLUE" ; } else { profileColor = "GREEN" ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.movielist.aishwarytandon.movielist.MovieResponse > call , retrofit2.Response < com.movielist.aishwarytandon.movielist.MovieResponse > response ) { java.util.List < com.movielist.aishwarytandon.movielist.Movie > movies = response . body () . getResults () ; if ( recyclerView != null ) { recyclerView . setAdapter ( new com.movielist.aishwarytandon.movielist.MovieAdapter ( movies , R.layout.list_item_movie , getApplicationContext () ) ) ; } android.util.Log . d ( com.movielist.aishwarytandon.movielist.MainActivity.TAG , ( "Number of movies received: " + ( movies . size () ) ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( video . isPlaying () ) { switchPlayOrPausButtonState ( video . isPlaying () ) ; video . pause () ; } else { switchPlayOrPausButtonState ( video . isPlaying () ) ; video . start () ; } } 
@ java.lang.Override public boolean resume ( java.lang.Object entity ) { synchronized ( responseLock ) { if ( done ) { return false ; } if ( cancelled ) { return false ; } org.vsg.cusp.engine.rapidoid.spi.AsyncContext asyncContext = getAsyncContext () ; try { return internalResume ( entity ) ; } finally { done = true ; asyncContext . complete () ; } } } 
public java.util.List < hr.fer.tki.evolution_algorithm.chromosome.IChromosome > getBestSolutions ( int num ) { java.util.List < hr.fer.tki.evolution_algorithm.chromosome.IChromosome > solutions = new java.util.ArrayList <> () ; for ( int i = 0 ; i < num ; i ++ ) { solutions . add ( this . population . get ( i ) ) ; } for ( hr.fer.tki.evolution_algorithm.chromosome.IChromosome chromosome : solutions ) { java.lang.System.out . println ( chromosome . getFitness () ) ; } return solutions ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( resultCode != ( RESULT_OK ) ) return; switch ( requestCode ) { case ya.haojun.roadtoadventure.activity.MainActivity.REQUEST_PROFILE : if ( ( data != null ) && ( data . getBooleanExtra ( "logout" , false ) ) ) { ya.haojun.roadtoadventure.helper.SPHelper . clearUser ( this ) ; openActivity ( ya.haojun.roadtoadventure.activity.PermissionActivity . class ) ; finish () ; } else { rv_drawer . getAdapter () . notifyItemChanged ( 0 ) ; } break; } } 
public org.osgl.util.S.Buffer prepend ( java.lang.StringBuffer sb ) { if ( sb == null ) return appendNull () ; int len = sb . length () ; ensureCapacityInternal ( ( ( count ) + len ) ) ; java.lang.System . arraycopy ( value , 0 , value , len , count ) ; sb . getChars ( 0 , len , value , 0 ) ; count += len ; return this ; } 
@ java.lang.Override public java.lang.Double call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; return avg ; } 
@ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { accessToken = loginResult . getAccessToken () ; userProfile = com.facebook.Profile . getCurrentProfile () ; if ( ( userProfile ) != null ) { com.andela.bark.models.User user = com.andela.bark.models.User . createFacebookUser ( userProfile ) ; com.andela.bark.GKprManger gKprManger = new com.andela.bark.GKprManger ( user , activity ) ; if ( gKprManger.isAuthenticated ) { android.content.Intent i = new android.content.Intent ( activity , com.andela.bark.FragmentHostActivity . class ) ; activity . startActivity ( i ) ; } } } 
public void toHTMLTable ( java.io.PrintWriter output ) { T tmp ; output . print ( "<table>" ) ; while ( this . results . hasNext () ) { tmp = this . results . next () ; output . print ( tmp . toHTMLTableRow () ) ; } output . print ( "</table>" ) ; output . flush () ; } 
private void interpolateDockerfile ( java.io.File dockerFile , io.fabric8.maven.docker.assembly.BuildDirs params , java.util.Properties properties , java.lang.String filter ) throws java.io.IOException { java.io.File targetDockerfile = new java.io.File ( params . getOutputDirectory () , dockerFile . getName () ) ; java.lang.String dockerFileInterpolated = io.fabric8.maven.docker.assembly.DockerFileUtil . interpolate ( dockerFile , properties , filter ) ; try ( java.io.Writer writer = new java.io.FileWriter ( targetDockerfile ) ) { org.apache.commons.io.IOUtils . write ( dockerFileInterpolated , writer ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( holder.joinButton . getText () . equals ( getString ( R.string.game_lobby_button_join_team ) ) ) { if ( dbTeam . addDBPlayer ( dbTeam . getName () ) ) { holder.joinButton . setText ( getString ( R.string.game_lobby_button_leave_team ) ) ; } else { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , "This team is full" , Toast.LENGTH_SHORT ) . show () ; } } else { dbTeam . removeDBPlayer ( getRef ( position ) ) ; holder.joinButton . setText ( getString ( R.string.game_lobby_button_join_team ) ) ; } } 
private java.lang.String stringRepresentation ( java.lang.Object value , org.lightadmin.core.web.support.PersistentEntity persistentEntity ) { org.lightadmin.core.config.domain.DomainTypeBasicConfiguration domainTypeBasicConfiguration = adminConfiguration . forDomainType ( persistentEntity . getType () ) ; org.lightadmin.api.config.utils.EntityNameExtractor nameExtractor = domainTypeBasicConfiguration . getEntityConfiguration () . getNameExtractor () ; return org.lightadmin.core.config.domain.configuration.support.ExceptionAwareTransformer . exceptionAwareNameExtractor ( nameExtractor , domainTypeBasicConfiguration ) . apply ( value ) . toString () ; } 
public void init ( org.magic.api.beans.MagicDeck deck ) { cards = new java.util.ArrayList < org.magic.api.beans.MagicCard > () ; if ( deck != null ) if ( ( deck . getMap () ) != null ) for ( java.util.Map.Entry < org.magic.api.beans.MagicCard , java.lang.Integer > cci : deck . getMap () . entrySet () ) { org.magic.api.beans.MagicCard mc = cci . getKey () ; for ( int i = 0 ; i < ( cci . getValue () ) ; i ++ ) cards . add ( mc ) ; } refresh () ; } 
private void handleByTerminatingIfWithinDialog ( android.javax.sip.ClientTransaction clientTransaction ) { logger . debug ( "{} request failed because call or transaction did not exist." , clientTransaction . getRequest () . getMethod () ) ; android.javax.sip.Dialog dialog = clientTransaction . getDialog () ; if ( ( dialog != null ) && ( ! ( ( ( dialog . getState () ) == ( android.javax.sip.DialogState.EARLY ) ) || ( ( dialog . getState () ) == ( android.javax.sip.DialogState.TERMINATED ) ) ) ) ) { sendByeRequest ( dialog ) ; } } 
public static void assertEquals ( java.lang.Object expected , java.lang.Object actual , java.lang.String message ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( condition , message ) ; } 
static com.github.rinde.rinsim.ui.SimulationViewer create ( org.eclipse.swt.widgets.Shell shell , final com.github.rinde.rinsim.core.Simulator sim , int pSpeedUp , boolean pAutoPlay , java.util.List < java.lang.Object > pRenderers , java.util.Map < com.github.rinde.rinsim.ui.MenuItems , java.lang.Integer > acc ) { return new com.github.rinde.rinsim.ui.SimulationViewer ( shell , sim , pSpeedUp , pAutoPlay , pRenderers , acc ) ; } 
public boolean canAdvance ( java.lang.Integer [] counters , java.lang.Integer [] boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters.length ) ) && ( cElem < ( boundaries.length ) ) ; ++ cElem ) { if ( ! ( counters [ cElem ] . equals ( boundaries [ cElem ] ) ) ) return true ; } return false ; } 
@ java.lang.Override public com.example.vincentzhang.Sprite.AbstractSprite detectCollide ( com.example.vincentzhang.Sprite.ImageSprite imgSprite ) { for ( com.example.vincentzhang.Sprite.AbstractCollidableSprite bomb : bombs ) { if ( bomb . detectCollide ( imgSprite ) ) return bomb ; } for ( com.example.vincentzhang.Sprite.AbstractCollidableSprite explosion : explosions ) { if ( explosion . detectCollide ( imgSprite ) ) return null ; } return null ; } 
@ java.lang.Override public org.junit.runners.model.Statement apply ( org.junit.runners.model.Statement base , org.junit.runner.Description description ) { org.junit.runners.model.Statement newStatement = base ; for ( org.junit.runners.model.TestClass extension : extensions ) { newStatement = prepareBeforeClasses ( extension , newStatement ) ; newStatement = prepareAfterClasses ( extension , newStatement ) ; newStatement = prepareRules ( extension , newStatement , description ) ; newStatement = prepareBefores ( extension , newStatement , null ) ; newStatement = prepareAfters ( extension , newStatement , null ) ; } return newStatement ; } 
public codeu.chat.common.User newUser ( codeu.chat.util.Uuid id , java.lang.String name , java.lang.String password , codeu.chat.common.Time creationTime ) { codeu.chat.common.User user = null ; if ( isIdFree ( id ) ) { user = new codeu.chat.common.User ( id , name , creationTime ) ; model . add ( user , password ) ; codeu.chat.server.Controller.LOG . info ( "newUser with password success (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } else { codeu.chat.server.Controller.LOG . info ( "newUser fail - id in use (user.id=%s user.name=%s user.time=%s)" , id , name , creationTime ) ; } return user ; } 
private void copyId ( java.lang.String id ) { android.content.ClipboardManager clipboard = ( ( android.content.ClipboardManager ) ( getSystemService ( Context.CLIPBOARD_SERVICE ) ) ) ; android.content.ClipData clip = android.content.ClipData . newPlainText ( "ID" , id ) ; clipboard . setPrimaryClip ( clip ) ; java.lang.CharSequence dialogText = "Object id copied to clipboard" ; int duration = android.widget.Toast.LENGTH_SHORT ; android.widget.Toast . makeText ( this , dialogText , duration ) . show () ; } 
public final boolean newProject ( java.lang.String projectName ) { final de.dfki.vsm.editor.project.ProjectEditor editor = new de.dfki.vsm.editor.project.ProjectEditor ( true ) ; editor . getSceneFlowEditor () . getSceneFlow () . setName ( editor . getEditorProject () . getEditorConfig () . sMAINSUPERNODENAME ) ; addProjectTab ( projectName , editor ) ; if ( ( mProjectEditors . getTabCount () ) == 1 ) { setContentPane ( mProjectEditors ) ; mEditorMenuBar . setVisible ( true ) ; } refresh () ; return true ; } 
public void newArray ( int size ) { com.himamis.retex.editor.share.meta.MetaArray meta = formula . getMetaModel () . getArray () ; com.himamis.retex.editor.share.model.MathArray array = new com.himamis.retex.editor.share.model.MathArray ( meta , size ) ; currentField . addArgument ( currentOffset , array ) ; com.himamis.retex.editor.share.model.MathSequence field = new com.himamis.retex.editor.share.model.MathSequence () ; array . setArgument ( 0 , field ) ; for ( int i = 1 ; i < size ; i ++ ) { array . setArgument ( i , new com.himamis.retex.editor.share.model.MathSequence () ) ; } currentField = field ; currentOffset = 0 ; } 
@ java.lang.Override public java.lang.Long createPost ( java.lang.Long userId , edu.iis.mto.blog.api.request.PostRequest postRequest ) { edu.iis.mto.blog.domain.model.User user = userRepository . findOne ( userId ) ; edu.iis.mto.blog.domain.model.BlogPost post = mapper . mapToEntity ( postRequest ) ; post . setUser ( user ) ; blogPostRepository . save ( post ) ; return post . getId () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.common_names_description ) ; android.os.Bundle extras = getIntent () . getExtras () ; common_name_rowid = extras . getLong ( CommonNamesAdapter.COMMON_NAME_ROWID ) ; common_name = extras . getString ( CommonNamesAdapter.COMMON_NAME ) ; common_name_count = extras . getString ( CommonNamesAdapter.COMMON_NAME_COUNT ) . toString () ; description = ( ( common_name_count ) + ( text ) ) + ( common_name ) ; balu.android.CommonNameDescription.tv = ( ( android.widget.TextView ) ( findViewById ( R.id.common_name_description_text ) ) ) ; balu.android.CommonNameDescription.tv . setText ( description ) ; } 
public long getNextChapterStart ( long position ) { long ret = com.monsterbutt.homeview.plex.media.PlexVideoItem.BAD_CHAPTER_START ; if ( hasChapters () ) { for ( com.monsterbutt.homeview.plex.media.Chapter chapter : mVideo . getChapters () ) { if ( ( chapter . getStartTimeOffset () ) >= position ) { ret = chapter . getStartTimeOffset () ; break; } } } return ret ; } 
protected java.lang.String getAsBroadcast ( io.minimum.minecraft.superbvote.votes.Vote vote ) { org.bukkit.entity.Player onlineVoted = org.bukkit.Bukkit . getPlayerExact ( vote . getName () ) ; java.lang.String replaced = message ; for ( io.minimum.minecraft.superbvote.configuration.message.placeholder.PlaceholderProvider provider : io.minimum.minecraft.superbvote.configuration.message.PlainStringMessage.PROVIDER_LIST ) { if ( provider . canUse () ) { replaced = provider . applyForBroadcast ( onlineVoted , replaced , vote ) ; } } return replaced ; } 
private void save ( T value ) { switch ( storageType ) { case LOCAL : net.wbz.moba.controlcenter.web.client.LocalStorage . getInstance () . set ( getConfigKey () , convertValueToString ( value ) ) ; setValue ( value ) ; break; case REMOTE : net.wbz.moba.controlcenter.web.client.ServiceUtils . getConfigService () . saveValue ( getConfigKey () , convertValueToString ( value ) , new net.wbz.moba.controlcenter.web.client.util.EmptyCallback < java.lang.Void > () ) ; break; } } 
private void deleteTask ( java.lang.String [] taskString ) { for ( int i = 0 ; i < ( tasks . size () ) ; i ++ ) { if ( taskString [ 0 ] . equals ( tasks . get ( i ) . getTitle () ) ) { if ( taskString [ 1 ] . equals ( tasks . get ( i ) . getDescription () ) ) { tasks . remove ( i ) ; } } } } 
public Move makeMove ( BoardAndRack bar ) { java.lang.System.out . println ( "Input word including tiles on board, ex. \"DOG\"" ) ; java.lang.String word = getNextLine () ; java.lang.System.out . println ( "Input starting position (leftmost or topmost) including tiles on board ex. \"(1,3)\"" ) ; Position p = new Position ( getNextLine () ) ; java.lang.System.out . println ( "Is horizontal move? Y/N ex. \"Y\"" ) ; boolean isHorizontal = s . nextLine () . equals ( "Y" ) ; Move m = bar.board . convertToMove ( new PossibleMove ( word , p.x , p.y , isHorizontal ) ) ; java.lang.System.out . println ( m . toString () ) ; return m ; } 
@ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } 
@ java.lang.Override public void resolveCollision ( asteroids.model.WorldObject other ) { if ( other instanceof asteroids.model.Ship ) this . resolveCollision ( ( ( asteroids.model.Ship ) ( other ) ) ) ; else if ( other instanceof asteroids.model.Bullet ) this . resolveCollision ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; else if ( other instanceof asteroids.model.MinorPlanet ) this . resolveCollision ( ( ( asteroids.model.MinorPlanet ) ( other ) ) ) ; } 
protected void generateStaticKeyFunctionForRole ( pt.ist.fenixframework.dml.Role role , java.io.PrintWriter out ) { if ( ( role . getMultiplicityUpper () ) != 1 ) { println ( out , generateMapKeyFunction ( role . getName () , role . getType () . getFullName () , "Comparable<?>" , "Oid" , false ) ) ; } } 
public se.rydberg.handla.model.TextNumber splitNumericAndStingIfFirstLetterIsDigit ( java.lang.String word ) { se.rydberg.handla.model.TextNumber textNumber = new se.rydberg.handla.model.TextNumber () ; if ( java.lang.Character . isDigit ( word . charAt ( 0 ) ) ) { return splitNumericAndString ( word ) ; } else { textNumber . setText ( word ) ; textNumber . setNumber ( "" ) ; return textNumber ; } } 
private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } 
public int base2int ( char base ) { int intVal = - 1 ; switch ( base ) { case 'A' : intVal = 0 ; break; case 'C' : intVal = 1 ; break; case 'G' : intVal = 2 ; break; case 'T' : intVal = 3 ; break; case 'N' : intVal = 4 ; break; default: throw new java.lang.IllegalArgumentException ( ( "Invalid character: " + base ) ) ; } return intVal ; } 
public static int findMaxArg ( int upperBound , int lowerBound , int page ) { int maxCandidate = 0 ; java.lang.Double maxCandidateValue = 0.0 ; for ( int i = lowerBound ; i < upperBound ; i ++ ) { if ( ( pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ) > maxCandidateValue ) { maxCandidateValue = pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ; maxCandidate = i ; } } return maxCandidate ; } 
@ java.lang.Override public boolean add ( final E elem ) { boolean res = false ; try { lock . lock () ; res = super . add ( elem ) ; if ( res ) added . signal () ; } finally { lock . unlock () ; } return res ; } 
public void setPageLength ( int pLength ) { if ( ( pageLength ) != pLength ) { pageLength = pLength ; page = ( startIndex ) / pLength ; checkPageCount () ; if ( ( grid ) != null ) { grid . setHeightByRows ( pLength ) ; grid . setHeightMode ( HeightMode.ROW ) ; } if ( ! ( setStartIndex () ) ) { fireItemSetChange () ; } } } 
@ java.lang.Override public void validate ( java.lang.Object obj , org.springframework.validation.Errors err ) { boolean isAllNull = true ; edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm workspaceForm = ( ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm ) ( obj ) ) ; java.util.List < edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace > workspaceList = workspaceForm . getWorkspaceList () ; if ( workspaceList != null ) { for ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace workspace : workspaceList ) { java.lang.String internalId = workspace . getId () ; if ( internalId != null ) { isAllNull = false ; break; } } } if ( isAllNull ) { err . reject ( "workspace_selection.required" ) ; } } 
public static void sendEvent ( final com.facebook.react.bridge.ReactContext context , final java.lang.String eventName , final com.facebook.react.bridge.WritableMap params ) { if ( context . hasActiveCatalystInstance () ) { context . getJSModule ( DeviceEventManagerModule.RCTDeviceEventEmitter . class ) . emit ( eventName , params ) ; } else { android.util.Log . d ( io.fullstack.firestack.FirestackUtils.TAG , "Waiting for CatalystInstance before sending event" ) ; } } 
@ java.lang.Override public void onError ( java.lang.String message , java.lang.String code , java.lang.Exception e ) { com.facebook.react.bridge.WritableMap params = com.facebook.react.bridge.Arguments . createMap () ; params . putString ( "eventName" , "connectionStateChange" ) ; params . putString ( "message" , message ) ; params . putString ( "code" , code ) ; sendEvent ( params ) ; } 
@ java.lang.Override public void onBindViewHolder ( com.example.sergio.spotify_angular.adapters.CategoriesAdapter.CategoriesViewHolder holder , int position ) { kaaes.spotify.webapi.android.models.Category category = data . get ( position ) ; holder . setName ( category.name ) ; bindToListener ( holder ) ; com.squareup.picasso.Picasso . with ( context ) . load ( category.icons . get ( 0 ) . url ) . placeholder ( R.drawable.ic_categories ) . into ( holder . getImage () ) ; } 
public static java.lang.String [] normalizeSummonerNames ( java.lang.String . . . summonerNames ) { java.util.Objects . requireNonNull ( summonerNames ) ; for ( int i = 0 ; i < ( summonerNames.length ) ; i ++ ) { summonerNames [ i ] = net.rithms.util.RiotApiUtil . normalizeSummonerName ( summonerNames [ i ] ) ; } return summonerNames ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( bundleExtra != null ) { if ( ( user . getDisplayName () ) != null ) { artRated = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( dataSnapshot . child ( "Users" ) . child ( user . getDisplayName () ) . child ( "rated" ) . getValue () ) ) ; updateRatingView () ; addClickListeners () ; } } } 
@ java.lang.Override public void onResult ( com.google.android.gms.plus.People.LoadPeopleResult peopleData ) { if ( ( peopleData . getStatus () . getStatusCode () ) == ( com.google.android.gms.common.api.CommonStatusCodes.SUCCESS ) ) { com.google.android.gms.plus.model.people.PersonBuffer personBuffer = peopleData . getPersonBuffer () ; try { int count = personBuffer . getCount () ; } finally { personBuffer . close () ; } } } 
private void setValues ( java.lang.Number n ) { java.util.Map < java.lang.String , java.lang.Number > m = new java.util.HashMap < java.lang.String , java.lang.Number > () ; for ( org.jacoco.core.analysis.ICoverageNode.CounterEntity ce : _default_headers ) { m . put ( ce . name () . toLowerCase () , n ) ; } setValues ( m ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { if ( isPlaying ) { audio . stop () ; isPlaying = false ; button . setText ( "Play" ) ; } else { audio . play () ; isPlaying = true ; button . setText ( "Pause" ) ; } } 
private void addMPButtonActionPerformed ( java.awt.event.ActionEvent evt ) { es.upc.fib.prop.usParlament.presentation.State st = ( ( es.upc.fib.prop.usParlament.presentation.State ) ( stateComboBox . getSelectedItem () ) ) ; if ( ( ( java.lang.String ) ( districtComboBox . getSelectedItem () ) ) == null ) return; java.lang.Integer dt = java.lang.Integer . parseInt ( ( ( java.lang.String ) ( districtComboBox . getSelectedItem () ) ) ) ; pc . addMPToCommunity ( cNumb , st , dt ) ; pops . updateMPsInCommunityTable () ; updateBoxes () ; } 
@ java.lang.Override public void tickPrice ( int orderId , int field , double price , int canAutoExecute ) { if ( ( ( TickType.BID ) == field ) || ( ( TickType.ASK ) == field ) ) java.lang.System.out . println ( ( ( ( ( ( "Ticker ID " + orderId ) + " FIELD " ) + field ) + " PRICE " ) + price ) ) ; } 
private static int getMinMatchingLabel ( LabeledNeighbor [] neighbors , byte currentColorValue ) { int minMatchingLabel = java.lang.Integer.MAX_VALUE ; for ( LabeledNeighbor neighbor : neighbors ) { int label = neighbor . getLabel () ; if ( ( ( label > 0 ) && ( label < minMatchingLabel ) ) && ( currentColorValue == ( neighbor . getColor () ) ) ) { minMatchingLabel = label ; } } if ( minMatchingLabel != ( java.lang.Integer.MAX_VALUE ) ) { return minMatchingLabel ; } else { return 0 ; } } 
@ java.lang.Override public void setName ( @ solutions.digamma.damas.inspection.NotNull java.lang.String value ) throws solutions.digamma.damas.DocumentException { try { java.lang.String destination = java.net.URI . create ( this . node . getPath () ) . resolve ( value ) . getPath () ; this . move ( destination ) ; } catch ( javax.jcr.RepositoryException e ) { throw solutions.digamma.damas.jcr.error.JcrExceptionMapper . map ( e ) ; } } 
public synchronized void releaseAllLocks ( simpledb.TransactionId tid , boolean commit ) throws java.io.IOException { java.util.HashSet < simpledb.PageId > pids = this . getAllPagesByTid ( tid ) ; if ( pids == null ) { return; } java.util.HashSet < simpledb.PageId > cloneSet = ( ( java.util.HashSet < simpledb.PageId > ) ( pids . clone () ) ) ; for ( simpledb.PageId pid : cloneSet ) { this . releaseLock ( tid , pid ) ; } } 
private static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } 
protected static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } 
private void removePlayer ( model.Address playerAddress ) { theMaze . removePlayer ( playerAddress . getKey () ) ; playersInGame . remove ( playerAddress ) ; try { tracker . deleteNode ( playerAddress ) ; } catch ( java.rmi.RemoteException e ) { e . printStackTrace () ; java.lang.System.out . println ( "Tracker has stopped working" ) ; java.lang.System . exit ( 0 ) ; } if ( backUpServer . sameAs ( playerAddress ) ) { backUpServer = playersInGame . get ( 1 ) ; } updateBackUpServer () ; gameWindow . updateGame ( theMaze ) ; } 
@ java.lang.Override public java.lang.String _stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { getContents ( scope ) ; final java.lang.StringBuilder sb = new java.lang.StringBuilder ( ( ( getBuffer () . length ( scope ) ) * 200 ) ) ; for ( final java.lang.Object s : getBuffer () . iterable ( scope ) ) { sb . append ( s ) . append ( "\n" ) ; } sb . setLength ( ( ( sb . length () ) - 1 ) ) ; return sb . toString () ; } 
@ com.inva.hipstertest.freemarker.controllers.RequestMapping ( value = "/freemarker/teacher/schedule/forms-wp" , method = RequestMethod.POST ) @ com.inva.hipstertest.freemarker.controllers.ResponseBody public java.util.List < com.inva.hipstertest.service.dto.FormDTO > getAvailableFormsBySearchCriteria ( @ com.inva.hipstertest.freemarker.controllers.RequestBody com.inva.hipstertest.freemarker.searchcriteria.SearchCriteria searchCriteria ) { org.apache.commons.lang3.Validate . notNull ( searchCriteria . getLessonPosition () , "Field 'lessonPosition' on formSearchCriteria can not be null." ) ; org.apache.commons.lang3.Validate . notNull ( searchCriteria . getDate () , "Field 'Date' on  formSearchCriteria can not be null." ) ; if ( ( searchCriteria . getId () ) != null ) { return formService . findAllAvailablePlusOneById ( searchCriteria ) ; } return formService . findAvailableFormsByCurrentSchoolAndSearchCriteria ( searchCriteria ) ; } 
@ java.lang.Override public r48.RubyIO targetToBound ( r48.RubyIO target ) { long t = target.fixnumVal ; long type = 0 ; if ( t >= 10000 ) { t -= 10000 ; type ++ ; } r48.RubyIO base = new r48.RubyIO () ; base.arrVal = new r48.RubyIO [ 2 ] ; base.type = '[' ; base.arrVal [ 0 ] = new r48.RubyIO () . setFX ( type ) ; base.arrVal [ 1 ] = new r48.RubyIO () . setFX ( t ) ; return base ; } 
private boolean createBridges ( org.onosproject.netvirt.configuration.Node node , org.onosproject.net.Network network ) throws java.lang.Exception { org.onosproject.ovsdb.providers.Status status ; java.lang.String brInt = org.onosproject.ovsdb.providers.constant.ConfigurationConstants.INTEGRATION_BRIDGE ; status = this . addBridge ( node , brInt , null , null ) ; if ( ! ( status . isSuccess () ) ) { org.onosproject.ovsdb.providers.impl.CfgAdapterProviderImpl.LOG . error ( "{} Bridge Creation Status: {}" , brInt , status ) ; return false ; } org.onosproject.ovsdb.providers.impl.CfgAdapterProviderImpl.LOG . info ( "createNetNetwork: node: {}, status: success" , node ) ; return true ; } 
@ java.lang.Override public void call ( java.lang.Object . . . objects ) { java.lang.System.out . println ( objects [ 0 ] ) ; org.cubecorp.hexicube.joustybet.scoreboard.StateAdapter sa = new org.cubecorp.hexicube.joustybet.scoreboard.StateAdapter ( ( ( java.lang.String ) ( objects [ 0 ] ) ) ) ; org.cubecorp.hexicube.joustybet.scoreboard.Game.betters = sa . getBetters () ; org.cubecorp.hexicube.joustybet.scoreboard.Game.roundActive = sa . isRoundActive () ; org.cubecorp.hexicube.joustybet.scoreboard.Game.lastWinner = sa . getLastWinner () ; } 
public static void dispalyTotal ( boolean special ) { try { java.io.FileReader fr = new java.io.FileReader ( "customerBill.txt" ) ; java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; java.lang.String line ; while ( ( line = br . readLine () ) != null ) { java.lang.System.out . println ( line ) ; } fr . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void onLoaded ( com.solid.ad.Ad ad ) { super . onLoaded ( ad ) ; com.solid.news.logic.NewsCacheMgr.firstAd = ad ; this . isLoadADing = false ; com.solid.news.sdk.NewsSdk . getInstance () . getReportListener () . sendEvent ( "news_lista_show_facebook_native_ad" , "status" , java.lang.Long . valueOf ( ( cached ? 1L : 2L ) ) ) ; } 
public void update ( float deltaTime ) { this . levelController . update ( deltaTime ) ; this . frogManager . update ( deltaTime ) ; if ( ( this . hud . getLifeCounter () . getLife () ) <= 0 ) { game . setScreen ( new com.mygdx.game.screens.GameOverScreen ( this . game ) ) ; com.mygdx.game.sprites.SpritesDrawer . getInstance () . removeAllSprites () ; Gdx.input . setInputProcessor ( null ) ; } } 
public void buildQuad ( int index , com.nucleus.shader.ShaderProgram program , com.nucleus.vecmath.Rectangle rectangle ) { int vertexStride = program . getVertexStride () ; float [] quadPositions = com.nucleus.geometry.MeshBuilder . createQuadPositionsIndexed ( rectangle , vertexStride , 0 ) ; com.nucleus.geometry.MeshBuilder . buildQuad ( this , program , index , quadPositions ) ; prepareUV ( mapper , 1 , index ) ; } 
public static synchronized com.android.dialer.calllog.DefaultVoicemailNotifier getInstance ( android.content.Context context ) { if ( ( com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance ) == null ) { android.app.NotificationManager notificationManager = ( ( android.app.NotificationManager ) ( context . getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; android.content.ContentResolver contentResolver = context . getContentResolver () ; com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance = new com.android.dialer.calllog.DefaultVoicemailNotifier ( context , notificationManager , com.android.dialer.calllog.DefaultVoicemailNotifier . createNewCallsQuery ( context , contentResolver ) , com.android.dialer.calllog.DefaultVoicemailNotifier . createNameLookupQuery ( context , contentResolver ) ) ; } return com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance ; } 
public void add ( int index , double element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } } 
public void setEndTime ( java.time.LocalTime end_time2 ) { if ( end_time2 == null ) { java.time.LocalTime localtime = java.time.LocalTime.MAX ; end_time_string = "" ; end_time = end_time2 ; value = getStartTime () ; } else { end_time_string = end_time2 . format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) . toString () ; end_time = end_time2 ; if ( ( end_time ) != null ) { value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; } else { value = getStartTime () ; } } } 
final synchronized void setResponse ( com.basho.riak.client.core.RiakMessage rawResponse ) { stateCheck ( com.basho.riak.client.core.FutureOperation.State.CREATED , com.basho.riak.client.core.FutureOperation.State.WRITTEN , com.basho.riak.client.core.FutureOperation.State.RETRY ) ; U decodedMessage = decode ( rawResponse ) ; this . rawResponse . add ( decodedMessage ) ; exception = null ; if ( done ( decodedMessage ) ) { ( remainingTries ) -- ; if ( ( retrier ) != null ) { retrier . operationComplete ( this , remainingTries ) ; } state = com.basho.riak.client.core.FutureOperation.State.COMPLETE ; latch . countDown () ; fireListeners () ; } } 
public void replaceValue ( T newValue , int index ) { if ( ! ( indexCheck ( index ) ) ) return; linkedList.Node < T > currentNode = this . start ; for ( int i = 0 ; i < index ; i ++ ) { currentNode = currentNode . getTail () ; } currentNode . setHead ( newValue ) ; } 
private void sendPartCommand ( org.ukiuni.irc4j.server.ClientConnection partConnection ) throws java.io.IOException { java.util.List < org.ukiuni.irc4j.server.ClientConnection > sendClients = new java.util.ArrayList < org.ukiuni.irc4j.server.ClientConnection > ( joinedConnectionList ) ; for ( org.ukiuni.irc4j.server.ClientConnection clientConnection : sendClients ) { try { clientConnection . sendPartCommand ( partConnection , this ) ; } catch ( java.lang.Exception e ) { ircServer . removeConnection ( clientConnection . getNickName () ) ; org.ukiuni.irc4j.Log . log ( e ) ; } } } 
private void setEventLatestState ( final java.lang.Long revision ) { redis.clients.jedis.Jedis jedi = pool . getResource () ; java.lang.String key = getEventLatestStateKey () ; java.util.HashMap < java.lang.String , java.lang.String > state = new java.util.HashMap <> () ; state . put ( "revision" , java.lang.Long . toString ( revision ) ) ; jedi . hmset ( key , state ) ; } 
private java.lang.annotation.Annotation [] merge ( java.lang.annotation.Annotation [] annotations , java.lang.annotation.Annotation [] annotations2 ) { java.util.List < java.lang.annotation.Annotation > mergedAnnotations = new java.util.ArrayList < java.lang.annotation.Annotation > () ; mergedAnnotations . addAll ( java.util.Arrays . asList ( annotations ) ) ; mergedAnnotations . addAll ( java.util.Arrays . asList ( annotations2 ) ) ; return mergedAnnotations . toArray ( new java.lang.annotation.Annotation [ 0 ] ) ; } 
private static java.lang.String parseFile ( java.lang.String data , ConfigFileFormat configFileFormat ) { java.lang.String convertedConfig = "" ; switch ( configFileFormat ) { case XML : convertedConfig = data ; break; case YML : convertedConfig = ConfigUtil2 . parseYML ( data ) ; break; case PROPERTIES : convertedConfig = ConfigUtil2 . parseProperties ( data ) ; break; default: break; } return convertedConfig ; } 
public void removeContact ( com.addressbook.thorrism.addressbook.Contact contact , int position ) { mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; } 
private void exitGame ( edu.chalmers.vaporwave.model.menu.MenuState destinationMenu ) { this . gameMusic . stopSound () ; this . arenaModel . getArenaMovables () . clear () ; this . arenaModel . clearTiles () ; this . enemies . clear () ; this . deadEnemies . clear () ; edu.chalmers.vaporwave.event.GameEventBus . getInstance () . post ( new edu.chalmers.vaporwave.event.ExitToMenuEvent ( destinationMenu , this . players , this . gameType ) ) ; } 
@ java.lang.Override protected void publishResults ( java.lang.CharSequence constraint , com.alex.develop.adapter.FilterResults results ) { stocks = ( ( java.util.List < com.alex.develop.adapter.Stock > ) ( results.values ) ) ; if ( 0 < ( results.count ) ) { notifyDataSetChanged () ; } else { notifyDataSetInvalidated () ; } mListener . find ( results.count ) ; } 
protected void addTurretAngle ( float deltaTurretAngle , int delta ) { float cleanDeltaTurret = kylevedder.com.github.utils.Utils . wrapAngleDelta ( deltaTurretAngle ) ; float turretRateCap = ( delta > 0 ) ? ( ( this . TURRET_TURN_RATE ) / 1000 ) * delta : 0 ; this . turretAngle = kylevedder.com.github.utils.Utils . wrapAngle ( this . turretAngle , kylevedder.com.github.utils.Utils . clampFloat ( cleanDeltaTurret , ( - turretRateCap ) , turretRateCap ) ) ; } 
@ java.lang.Override public java.lang.String save ( com.sia.main.domain.SatManMK satManMK ) { if ( ( satManMK . getIdSatManMK () ) != null ) { java.lang.System.out . println ( satManMK . getIdSatManMK () ) ; satManMKRepo . update ( satManMK ) ; return satManMK . getIdSatManMK () . toString () ; } else { return satManMKRepo . insert ( satManMK ) . toString () ; } } 
@ org.springframework.context.annotation.Bean public org.springframework.scheduling.quartz.SchedulerFactoryBean schedulerFactoryBean ( javax.sql.DataSource dataSource , org.quartz.spi.JobFactory jobFactory , @ org.springframework.beans.factory.annotation.Qualifier ( value = "sampleJobTrigger" ) org.quartz.Trigger sampleJobTrigger ) throws java.io.IOException { org.springframework.scheduling.quartz.SchedulerFactoryBean factory = new org.springframework.scheduling.quartz.SchedulerFactoryBean () ; factory . setOverwriteExistingJobs ( true ) ; factory . setDataSource ( dataSource ) ; factory . setJobFactory ( jobFactory ) ; factory . setQuartzProperties ( quartzProperties () ) ; return factory ; } 
private void matchLookAhead ( core.Token token ) throws parser.ParseException { if ( ( lookahead ) != token ) { throw new parser.ParseException ( java.lang.String . format ( "Parse error on line %s, col %s. Found %s, expected %s." , dispatcher . getLine () , dispatcher . getColumn () , lookahead , token ) ) ; } lookahead = dispatcher . nextToken () ; } 
@ java.lang.Override public void onNavigationEvent ( int navigationEvent , android.os.Bundle extras ) { super . onNavigationEvent ( navigationEvent , extras ) ; if ( ( navigationEvent == ( NAVIGATION_FINISHED ) ) && ( ( index ) <= ( urls.length ) ) ) { android.support.customtabs.CustomTabsIntent.Builder builder = new android.support.customtabs.CustomTabsIntent.Builder ( session ) ; builder . setToolbarColor ( android.support.v4.content.ContextCompat . getColor ( activity , R.color.accent ) ) ; android.support.customtabs.CustomTabsIntent customTabsIntent = builder . build () ; customTabsIntent . launchUrl ( activity , android.net.Uri . parse ( urls [ ( ( index ) ++ ) ] ) ) ; } } 
private short getCheckedValue ( long address ) { if ( address > ( handlerBlock . getAddressEnd () ) ) { return 13567 ; } else { return ( ( short ) ( ( data . get ( ( ( int ) ( address ) ) ) ) & 255 ) ) ; } } 
@ java.lang.Override public void handleMessage ( android.os.Message message ) { if ( ( message.arg2 ) == 1 ) { switch ( message.arg1 ) { case 1 : thread1JobDone = true ; break; case 2 : thread2JobDone = true ; break; case 3 : thread3JobDone = true ; break; } if ( ( ( thread1JobDone ) && ( thread2JobDone ) ) && ( thread3JobDone ) ) { themeAll . sortIndex () ; } adapterAll . notifyDataSetChanged () ; } } 
public void setReturnDate ( long returnDate , android.content.Context context ) { this . returnDate = returnDate ; if ( ( returnDate < ( loanDate ) ) && ( returnDate != ( - 1 ) ) ) { android.util.Log . i ( org.bbt.kiakoa.model.Loan.TAG , "return date should not be lower than loan date" ) ; setLoanDate ( returnDate , context ) ; } } 
public boolean determineSize ( long recordsReadInCurrentPass , java.lang.Integer lengthVarFieldsInCurrentRecord ) throws java.io.IOException { if ( readPage () ) { return true ; } if ( processPageData ( ( ( int ) ( recordsReadInCurrentPass ) ) ) ) { return true ; } lengthVarFieldsInCurrentRecord = - 1 ; return checkVectorCapacityReached () ; } 
public boolean updateIndentString ( com.hlz.webModel.IndentModel model , java.lang.String reserve , java.lang.String fulfill ) { com.hlz.entity.Indent indent = dao . updateIndent ( model , reserve , fulfill ) ; if ( indent != null ) { messaging . convertAndSend ( "/topic/update" , indent . getId () ) ; rabbitTemplate . convertAndSend ( "update-indent" , indent . getId () ) ; return true ; } else { return false ; } } 
static boolean cannotDisplay ( com.forgerock.opendj.cli.ConsoleApplication app , org.forgerock.opendj.config.PropertyDefinition < ? > pd , java.util.Set < java.lang.String > allowedPropertyNames ) { return ( ( pd . hasOption ( PropertyOption.HIDDEN ) ) || ( ( ! ( app . isAdvancedMode () ) ) && ( pd . hasOption ( PropertyOption.ADVANCED ) ) ) ) || ( ( ! ( allowedPropertyNames . isEmpty () ) ) && ( ! ( allowedPropertyNames . contains ( pd . getName () ) ) ) ) ; } 
@ java.lang.Override public N getNodeAt ( int index ) { if ( ( ( sourceNodes ) != null ) && ( index < ( sourceNodes . size () ) ) ) { return sourceNodes . get ( index ) ; } if ( ( sinkNodes ) != null ) { int sinkIndex = ( ( sourceNodes ) == null ) ? index : index - ( sourceNodes . size () ) ; return sinkNodes . get ( sinkIndex ) ; } throw new java.lang.IndexOutOfBoundsException () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( savedInstanceState == null ) { com.plorial.exoroplayer.views.FileExplorerFragment fileExplorerFragment = new com.plorial.exoroplayer.views.FileExplorerFragment () ; android.app.FragmentTransaction transaction = getFragmentManager () . beginTransaction () ; transaction . add ( R.id.fragment_container , fileExplorerFragment ) ; transaction . addToBackStack ( FileExplorerFragment.CLASS_NAME ) ; transaction . commit () ; } } 
private void jButton1ActionPerformed ( java.awt.event.ActionEvent evt ) { mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jTableHotels . getModel () ) ) ; if ( ( jTableHotels . getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane . showMessageDialog ( this , "please select the Hotel to delete" ) ; return; } java.lang.String HotelName ; int TempSelectRow = jTableHotels . getSelectedRow () ; HotelName = mdHotels . getValueAt ( TempSelectRow , 0 ) . toString () ; deleteHotel ( HotelName ) ; mdHotels . removeRow ( jTableHotels . getSelectedRow () ) ; } 
public boolean updateItem ( java.lang.String collectionName , com.mongodb.BasicDBObject query , com.mongodb.BasicDBObject newData ) { com.mongodb.DBCollection tCol = mongoDB . getCollection ( collectionName ) ; newData . put ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_CREATED , query . get ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_CREATED ) ) ; newData . put ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_UPDATED , new java.util.Date () ) ; newData . remove ( mx.edu.cide.justiciacotidiana.v1.mongo.MongoInterface.FIELD_ID ) ; try { tCol . update ( query , newData ) ; } catch ( com.mongodb.MongoException ex ) { return false ; } return true ; } 
@ android.support.annotation.Nullable public static java.lang.String loadJSONFromAsset ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull java.lang.String fileName ) { java.lang.String json ; try { java.io.InputStream is = context . getAssets () . open ( fileName ) ; int size = is . available () ; byte [] buffer = new byte [ size ] ; is . read ( buffer ) ; is . close () ; json = new java.lang.String ( buffer , "UTF-8" ) ; } catch ( java.io.IOException ex ) { ex . printStackTrace () ; return null ; } return json ; } 
public void analyze ( semanticAnalyzer.AssignStatementTail AST ) { output . accept ( ( ( AST . getLine () ) + ": analyze AssignStatementTail\n" ) ) ; if ( ( AST . getAddExpression () ) != null ) { analyze ( AST . getAddExpression () ) ; } analyze ( AST . getExp () ) ; } 
public static boolean isPowerOfTwo ( long number ) { if ( number < 0 ) { throw new java.lang.IllegalArgumentException ( ( ( "number: " + number ) + ". Number cannot be neagative." ) ) ; } if ( ( number & ( - number ) ) == number ) { return true ; } return false ; } 
public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( ( contains ( toAdd ) ) && ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( toAdd ) ; } 
@ java.lang.Override public void onTransaction ( final org.sigmah.offline.indexeddb.Transaction < org.sigmah.offline.indexeddb.Store > transaction ) { final java.util.List < org.sigmah.shared.dto.ProjectDTO > projects = new java.util.ArrayList < org.sigmah.shared.dto.ProjectDTO > () ; final org.sigmah.offline.dao.RequestManager < java.util.List < org.sigmah.shared.dto.ProjectDTO > > requestManager = new org.sigmah.offline.dao.RequestManager < java.util.List < org.sigmah.shared.dto.ProjectDTO > > ( projects , callback ) ; getProjectsByIndex ( Indexes.PROJECT_FUNDEDS , id , requestManager , transaction ) ; getProjectsByIndex ( Indexes.PROJECT_FUNDINGS , id , requestManager , transaction ) ; requestManager . ready () ; } 
@ java.lang.Override public void execute ( network.Session session , game.model.Game game ) { game.util.GameRenderer gameRenderer = game . getGameRenderer () ; if ( ( this . backgroundValue ) != null ) { gameRenderer . setBackgroundColor ( this . backgroundValue ) ; } if ( ( this . foregroundValue ) != null ) { gameRenderer . setForegroundColor ( this . foregroundValue ) ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy authProxy = new com.innovationplayground.sessionexecutiontestclient.communication.authapi.AuthProxy () ; com.innovationplayground.sessionexecutiontestclient.storage.Storage storage = com.innovationplayground.sessionexecutiontestclient.storage.Storage . getInstance ( getActivity () ) ; clientAuthenticator = new com.innovationplayground.sessionexecutiontestclient.business.ClientAuthenticator ( authProxy , storage ) ; if ( ! ( com.innovationplayground.sessionexecutiontestclient.PermissionUtil . hasWriteExternalStoragePermission ( getActivity () ) ) ) { com.innovationplayground.sessionexecutiontestclient.PermissionUtil . requestWriteExternalStoragePermission ( getActivity () ) ; return; } loadClients () ; } 
public static org.opengis.referencing.operation.MathTransform1D create ( final double base , final double offset ) { org.apache.sis.util.ArgumentChecks . ensureStrictlyPositive ( "base" , base ) ; if ( base == 10 ) { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.Base10 . create ( offset ) ; } else { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.NATURAL . concatenate ( ( 1 / ( java.lang.Math . log ( base ) ) ) , offset ) ; } } 
public void showBottomLoading ( boolean show ) { if ( ( mShowBottomLoading ) != show ) { if ( show ) { mShowBottomLoading = true ; com.livae.android.loading.RecyclerAdapter . notifyItemInserted ( getBottomLoadingPosition () ) ; } else { com.livae.android.loading.RecyclerAdapter . notifyItemRemoved ( getBottomLoadingPosition () ) ; mShowBottomLoading = false ; } } } 
public void stopContainer ( final java.lang.String containerId , final int timeout ) throws com.spotify.docker.client.DockerException { java.util.concurrent.Callable < java.lang.Void > callable = new java.util.concurrent.Callable < java.lang.Void > () { @ java.lang.Override public java.lang.Void call ( ) throws java.lang.Exception { dockerClient . stopContainer ( containerId , timeout ) ; return null ; } } ; try { callWithTimeout ( callable ) ; } catch ( java.lang.Exception e ) { throw new com.spotify.docker.client.DockerException ( e ) ; } } 
public boolean equals ( java.lang.Object other ) { if ( ! ( other instanceof oharaShapes3D.CubicShape ) ) throw new java.lang.IllegalArgumentException ( "Compared object must be a CubicShape" ) ; else { oharaShapes3D.CubicShape cs = ( ( oharaShapes3D.CubicShape ) ( other ) ) ; return ( ( ( this . getLength () ) == ( cs . getLength () ) ) && ( ( this . getWidth () ) == ( cs . getWidth () ) ) ) && ( ( this . getHeight () ) == ( cs . getHeight () ) ) ; } } 
@ javax.websocket.OnClose public void close ( javax.websocket.Session session , javax.websocket.CloseReason reason ) { if ( session . getRequestURI () . getPath () . startsWith ( com.chatalytics.web.resources.EventsResource.RT_EVENT_ENDPOINT ) ) { com.chatalytics.web.resources.EventsResource.LOG . info ( "Closing session {}. Reason {}" , session . getId () , reason ) ; try { sessions . remove ( session ) ; session . close () ; } catch ( java.io.IOException e ) { com.chatalytics.web.resources.EventsResource.LOG . warn ( "Couldn't close {}" , session . getId () ) ; } } else { connectedToCompute = false ; } } 
private int toInteger ( org.jackace.jawascriptexecutive.Executor.JawaObjectRef o ) throws org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException { if ( ( o.object ) instanceof java.lang.Double ) { int magnitude = ( ( int ) ( ( long ) ( java.lang.Math . floor ( java.lang.Math . abs ( ( ( java.lang.Double ) ( o.object ) ) ) ) ) ) ) ; int sign = ( ( ( java.lang.Double ) ( o.object ) ) >= 0 ) ? 1 : - 1 ; return magnitude * sign ; } throw new org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException ( "Not yet implemented conversion." ) ; } 
@ java.lang.Override public void handleEvent ( org.matsim.api.core.v01.events.PersonLeavesVehicleEvent event ) { if ( ! ( event . getVehicleId () . toString () . contains ( "_" ) ) ) { inVehicle . put ( event . getVehicleId () , false ) ; travelTimes . remove ( event . getPersonId () ) ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; switch ( id ) { case android.R.id.home : android.util.Log . d ( "hi" , android.support.v4.app.NavUtils . getParentActivityName ( this ) ) ; android.support.v4.app.NavUtils . navigateUpFromSameTask ( this ) ; return true ; case R.id.action_settings : return true ; } return super . onOptionsItemSelected ( item ) ; } 
private void quitarTagArbol ( com.PubliciBot.DM.ArbolTags arbolTags , com.PubliciBot.DM.Tag tag ) { java.util.ArrayList < com.PubliciBot.DM.Tag > hijos = buscarTagPorPadre ( arbolTags , tag ) ; for ( com.PubliciBot.DM.Tag tagtemp : hijos ) { quitarTagArbol ( arbolTags , tagtemp ) ; arbolTags . getTags () . remove ( tagtemp ) ; } arbolTags . getTags () . remove ( tag ) ; } 
@ java.lang.Override public boolean onNavigationItemSelected ( int position , long id ) { if ( com.antisocial.app.util.BlockUtils . isBlockServiceRunning ( this , com.antisocial.app.service.CoreService . class ) ) { getActionBar () . setSelectedNavigationItem ( currentSelectedItem ) ; if ( ( currentSelectedItem ) != position ) { alert = new android.app.AlertDialog.Builder ( this ) . setTitle ( "Alert" ) . setMessage ( "Block is running" ) . setPositiveButton ( "OK" , null ) . show () ; } } else { com.antisocial.app.util.BlockUtils . setCurrentMode ( profileList [ position ] ) ; currentSelectedItem = position ; } return true ; } 
@ java.lang.Override protected java.util.ArrayList < java.lang.String > doInBackground ( byte [] . . . bytes ) { java.util.List < com.hanuor.onyx.helper.RecognitionResult > results = clarifai . recognize ( new com.hanuor.onyx.helper.RecognitionRequest ( tags.videoArray ) ) ; if ( ( results . size () ) != 0 ) { for ( com.hanuor.onyx.helper.Tag tag : results . get ( 0 ) . getTags () ) { probableTags . add ( tag . getName () ) ; } return probableTags ; } else { return null ; } } 
@ com.facebook.react.bridge.ReactMethod public void get ( java.lang.String key , java.lang.String bucketName , com.facebook.react.bridge.Callback callback ) { android.content.SharedPreferences preferences = getBucket ( bucketName ) ; java.lang.Object value = preferences . getAll () . get ( key ) ; if ( value != null ) { callback . invoke ( value . toString () ) ; } else { callback . invoke () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseFacebookUtils . logInWithReadPermissionsInBackground ( this , java.util.Arrays . asList ( "user_location, email, user_birthday" ) , new com.parse.LogInCallback () { @ java.lang.Override public void done ( com.parse.ParseUser parseUser , com.parse.ParseException e ) { showProgress ( true ) ; if ( parseUser == null ) {} else if ( parseUser . isNew () ) { getFacebookInfo () ; } else { android.util.Log . d ( com.trytara.tara.LoginActivity.TAG , ( "CURRENT USER: " + ( parseUser . toString () ) ) ) ; } } } ) ; } 
boolean canBeMerged ( final com.orientechnologies.orient.core.sql.OIndexSearchResult searchResult ) { if ( ( lastField . isLong () ) || ( searchResult.lastField . isLong () ) ) { return false ; } if ( ( ! ( lastOperator . canBeMerged () ) ) || ( ! ( searchResult.lastOperator . canBeMerged () ) ) ) { return false ; } return ( com.orientechnologies.orient.core.sql.OIndexSearchResult . isIndexEqualityOperator ( lastOperator ) ) || ( com.orientechnologies.orient.core.sql.OIndexSearchResult . isIndexEqualityOperator ( searchResult.lastOperator ) ) ; } 
public java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > getTrashboxMails ( org.bitbucket.ucchy.undine.sender.MailSender sender ) { if ( ! ( isLoaded ) ) { return null ; } java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > box = new java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > () ; for ( org.bitbucket.ucchy.undine.MailData mail : mails ) { if ( ( mail . isRelatedWith ( sender ) ) && ( mail . isSetTrash ( sender ) ) ) { box . add ( mail ) ; } } org.bitbucket.ucchy.undine.MailManager . sortNewer ( box ) ; return box ; } 
public org.matsim.contrib.zone.Zone getZone ( org.matsim.contrib.zone.Coord coord ) { int r = ( ( int ) ( ( ( coord . getY () ) - ( minY ) ) / ( cellSize ) ) ) ; int c = ( ( int ) ( ( ( coord . getX () ) - ( minX ) ) / ( cellSize ) ) ) ; return zones [ ( ( r * ( cols ) ) + c ) ] ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getActivity () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getActivity () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getActivity () ) . setClipboardText ( address ) ; } 
private co.paralleluniverse.fibers.instrument.CheckInstrumentationVisitor checkFileAndClose ( java.io.InputStream is , java.lang.String name ) { try { try { org.objectweb.asm.ClassReader r = new org.objectweb.asm.ClassReader ( is ) ; co.paralleluniverse.fibers.instrument.CheckInstrumentationVisitor civ = new co.paralleluniverse.fibers.instrument.CheckInstrumentationVisitor ( this ) ; r . accept ( civ , ( ( org.objectweb.asm.ClassReader.SKIP_FRAMES ) | ( org.objectweb.asm.ClassReader.SKIP_CODE ) ) ) ; return civ ; } finally { is . close () ; } } catch ( co.paralleluniverse.fibers.instrument.UnableToInstrumentException ex ) { throw ex ; } catch ( java.lang.Exception ex ) { error ( name , ex ) ; } return null ; } 
public void speakAloud ( android.view.View v ) { if ( ( currVocab . getSpeech () ) != null ) { playSound ( currVocab . getSpeech () ) ; } else { com.example.sco.imuvo.HelperClasses.WebServiceHelper webServiceHelper = new com.example.sco.imuvo.HelperClasses.WebServiceHelper () ; webServiceHelper . setWebServiceHelperListener ( new com.example.sco.imuvo.HelperClasses.WebServiceHelperListener () { @ java.lang.Override public void onWebServiceReturnResult ( byte [] result ) { currVocab . setSpeech ( result ) ; com.example.sco.imuvo.HelperClasses.VocabDatabaseHelper . update ( currVocab ) ; playSound ( result ) ; } } ) ; webServiceHelper . getSpeechAsync ( currVocab ) ; } } 
@ java.lang.Override void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , long attributePointer , int attributeCount ) throws org.xml.sax.SAXException { if ( ( ( depth ) ++ ) > 0 ) { super . startElement ( uri , localName , qName , attributePointer , attributeCount ) ; } } 
private de.uni_freiburg.informatik.ultimate.logic.Term buildSymmetryAxiom ( de.uni_freiburg.informatik.ultimate.logic.Sort s ) { de.uni_freiburg.informatik.ultimate.logic.TermVariable qvar1 = variable ( "x" , s ) ; de.uni_freiburg.informatik.ultimate.logic.TermVariable qvar2 = variable ( "y" , s ) ; return quantifier ( de.uni_freiburg.informatik.ultimate.eprequalityaxiomsadder.FORALL , new de.uni_freiburg.informatik.ultimate.logic.TermVariable [] { qvar1 , qvar2 } , term ( "=>" , term ( mNewEqualsSymbol , qvar1 , qvar2 ) , term ( mNewEqualsSymbol , qvar2 , qvar1 ) ) ) ; } 
private int element_manhattan ( int i , int j , int index ) { int ori_i = ( index - 1 ) / ( dimension () ) ; int ori_j = ( index - ( ori_i * ( dimension () ) ) ) - 1 ; int idistance = java.lang.Math . abs ( ( i - ori_i ) ) ; int jdistance = java.lang.Math . abs ( ( j - ori_j ) ) ; return idistance + jdistance ; } 
public MiniJavaVar findVar ( java.lang.String varName ) { int n = contexts . size () ; for ( n -= 1 ; n >= 0 ; n -- ) { MiniJavaVar findRes = contexts . get ( n ) . vars . get ( varName ) ; if ( findRes != null ) { return findRes ; } } return null ; } 
@ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } accountLimitRepository . save ( accountLimit ) ; } 
@ java.lang.Override public boolean f ( com.google.gwt.user.client.Event e ) { com.google.gwt.query.client.GQuery el = $ ( e . getEventTarget () ) ; com.cgxlib.core.component.tab.ViewHandler < ? > viewHandler = com.cgxlib.core.component.tab.CGXHelper . getViewHandlerAsData ( el ) ; if ( ( viewHandler != null ) && ( viewHandler instanceof com.cgxlib.core.component.tab.TabView.ViewHandler ) ) { el . as ( CGXlib.CGX ) . as ( com.cgxlib.core.component.tab.Tab.CGX , viewHandler ) . show () ; } else { el . as ( com.cgxlib.core.component.tab.Tab.CGX ) . show () ; } return true ; } 
private void setTime ( java.util.Calendar calendar ) { setDate ( calendar . get ( java.util.Calendar.DAY_OF_MONTH ) , ( ( calendar . get ( java.util.Calendar.MONTH ) ) + 1 ) , calendar . get ( java.util.Calendar.YEAR ) ) ; setTime ( calendar . get ( java.util.Calendar.HOUR_OF_DAY ) , calendar . get ( java.util.Calendar.MINUTE ) ) ; timeChosen = calendar ; } 
@ java.lang.Override public void onSharedPreferenceChanged ( android.content.SharedPreferences sharedPreferences , java.lang.String key ) { switch ( key ) { case com.feresr.rxweather.UI.SettingsActivity.PREF_UNIT : if ( sharedPreferences . getString ( key , "celsius" ) . equals ( "celsius" ) ) { citiesView . showTemperatureInCelsius () ; } else { citiesView . showTemperatureInFahrenheit () ; } break; case com.feresr.rxweather.UI.SettingsActivity.GRIDVIEW : if ( sharedPreferences . getBoolean ( key , false ) ) { citiesView . setSetColumns ( 2 ) ; } else { citiesView . setSetColumns ( 1 ) ; } break; } } 
@ java.lang.Override public void processInput ( com.lumens.engine.TransformComponent src , java.lang.String targetName , java.util.List < com.lumens.model.Element > input ) { if ( log . isDebugEnabled () ) log . debug ( java.lang.String . format ( "Component '%s' input size '%d' target => '%s'" , src . getName () , ( input != null ? input . size () : 0 ) , targetName ) ) ; processElementList ( input ) ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( null == ( rootView ) ) || ( cacheContentData ) ) { rootView = onCreateFragmentView ( inflater , container , savedInstanceState ) ; } unbinder = butterknife.ButterKnife . bind ( this , rootView ) ; return rootView ; } 
public java.lang.Object pre ( int t ) { if ( t == 0 ) { return ref ; } t = t - 1 ; checkCapacity ( t ) ; if ( t >= ( size ) ) { return bonsai.runtime.core.Cast . toLattice ( name , ref ) . bottom () ; } else { return stream [ preIndex ( t ) ] ; } } 
public static void onPlayerTeleport ( org.bukkit.entity.Player player , org.bukkit.Location to ) { if ( ! ( com.frdfsnlght.inquisitor.PlayerStats.started ) ) { return; } if ( com.frdfsnlght.inquisitor.PlayerStats . isStatsPlayer ( player ) ) { com.frdfsnlght.inquisitor.PlayerStats.PlayerState state = com.frdfsnlght.inquisitor.PlayerStats.playerStates . get ( player . getName () ) ; if ( state != null ) { com.frdfsnlght.inquisitor.PlayerStats . onPlayerMove ( player , player . getLocation () ) ; state.lastLocation = to ; state.lastTime = java.lang.System . currentTimeMillis () ; } } } 
@ java.lang.Override public org.boxfox.dms.utilities.json.EasyJsonObject action ( org.boxfox.dms.utilities.actions.support.Sender sender , int command , org.boxfox.dms.utilities.json.EasyJsonObject requestObject ) throws java.sql.SQLException { java.lang.String title = requestObject . getString ( "title" ) ; java.lang.String content = requestObject . getString ( "question_content" ) ; java.lang.String writer = requestObject . getString ( "writer" ) ; boolean privacy = requestObject . getBoolean ( "privacy" ) ; int status = database . executeUpdate ( "INSERT INTO qna(title, question_content, question_date, writer, privacy) VALUES('" , title , "', '" , content , "', now(), '" , writer , "', " , privacy , ")" ) ; responseObject . put ( "status" , status ) ; return responseObject ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/friends" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String addFriend ( java.security.Principal principal , @ org.springframework.web.bind.annotation.RequestParam ( value = "id" ) java.lang.Long id ) { java.lang.String username = principal . getName () ; com.jennbowers.library.models.User fromUser = userRepo . findByUsername ( username ) ; com.jennbowers.library.models.User toUser = userRepo . findOne ( id ) ; com.jennbowers.library.models.FriendRequest friendRequest = new com.jennbowers.library.models.FriendRequest () ; friendRequest . setTouser ( toUser ) ; friendRequest . setFromuser ( fromUser ) ; friendRequest . setActive ( false ) ; friendRequest . setPending ( true ) ; friendRequestRepo . save ( friendRequest ) ; return "friendAll" ; } 
public com.dumbpug.crossbowknight.particles.Particle generate ( com.dumbpug.crossbowknight.particles.EmitterDetails emitterDetails ) { float randomVelx = ( ( random . nextFloat () ) * 2.0F ) - 1.0F ; float randomVely = ( ( random . nextFloat () ) * 2.0F ) - 1.0F ; return new com.dumbpug.crossbowknight.particles.ExplosionParticle ( emitterDetails.positionX , emitterDetails.positionY , randomVelx , randomVely , level ) ; } 
@ java.lang.Override public void characters ( char [] ch , int start , int length ) throws org.xml.sax.SAXException { if ( isWithinBodyElement ) { bodyText . append ( ch , start , length ) ; if ( anchorFlag ) { anchorText . append ( new java.lang.String ( ch , start , length ) ) ; } } } 
@ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) == null ) { return null ; } for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } return null ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/books" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String getBooks ( org.springframework.ui.Model model ) { java.lang.System.out . println ( "ALl the books" ) ; model . addAttribute ( "book" , new edu.mum.cs545.lms.domain.Book () ) ; model . addAttribute ( "bookTypes" , java.util.Arrays . asList ( edu.mum.cs545.lms.domain.BookType . values () ) ) ; model . addAttribute ( "bookCategories" , java.util.Arrays . asList ( edu.mum.cs545.lms.domain.BookCategory . values () ) ) ; return "books" ; } 
public java.lang.String translate ( java.lang.String str ) { java.lang.String url = buildQuery ( str ) ; java.lang.String content = null ; try { content = http.HttpGet . download ( url ) ; } catch ( java.net.MalformedURLException e ) { java.lang.System.out . printf ( "Could not encode %s\n" , str ) ; return null ; } catch ( java.io.IOException e ) { java.lang.System.out . printf ( "Error while downloading %s (%s)\n" , url , e . getMessage () ) ; return null ; } return content ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; int weekday = 5 ; int weekend = 9 ; int optimalHours = 7 * 8 ; int actualHours = weekday * 5 ; actualHours = actualHours + ( weekend * 2 ) ; int solution = optimalHours - actualHours ; display ( solution ) ; } 
private boolean isPromotion ( final de.htwsaar.chessbot.engine.model.Position start , final de.htwsaar.chessbot.engine.model.Position target ) { if ( isWhite () ) { if ( ( ( start . rank () ) == 7 ) && ( ( target . rank () ) == 8 ) ) return true ; } else { if ( ( ( start . rank () ) == 2 ) && ( ( target . rank () ) == 1 ) ) return true ; } return false ; } 
@ java.lang.Override public minetweaker.api.item.IItemStack transform ( minetweaker.api.item.IItemStack item , minetweaker.api.player.IPlayer byPlayer ) { if ( ( item . getAmount () ) > 1 ) { byPlayer . give ( withItem ) ; return item ; } else { return withItem . withAmount ( withItem . getAmount () ) ; } } 
@ java.lang.Override public void onBindViewHolder ( final com.thanhtuan.delivery.adapter.ListNghiemThuAdapter.NghiemThuViewHolder holder , int position ) { final com.thanhtuan.delivery.model.Photo photo = photos . get ( position ) ; holder.ibtnIMG . setImageBitmap ( photo . getImage () ) ; holder.txtvLydo . setText ( photo . getDescription () ) ; holder.data = photo ; } 
@ java.lang.Override public void storePublishForFuture ( org.eclipse.moquette.spi.impl.events.PublishEvent evt ) { java.util.List < org.eclipse.moquette.spi.impl.storage.StoredPublishEvent > storedEvents ; java.lang.String clientID = evt . getClientID () ; if ( ! ( m_persistentMessageStore . containsKey ( clientID ) ) ) { storedEvents = new java.util.ArrayList <> () ; } else { storedEvents = m_persistentMessageStore . get ( clientID ) ; } storedEvents . add ( convertToStored ( evt ) ) ; m_persistentMessageStore . put ( clientID , storedEvents ) ; org.eclipse.moquette.spi.persistence.MapDBPersistentStore.LOG . debug ( "Stored published message for client <{}> on topic <{}>" , clientID , evt . getTopic () ) ; } 
java.util.ArrayList getArrayAbschnitt ( java.util.ArrayList list , int i , int j ) { java.lang.System.out . println ( ( "list vor Abschnitt " + list ) ) ; java.util.ArrayList abschnitt = new java.util.ArrayList <> () ; for ( int k = i ; k < ( j + 1 ) ; k ++ ) { abschnitt . add ( list . get ( k ) ) ; } java.lang.System.out . println ( ( ( ( ( ( "list nach Abschnitt von" + i ) + "bis" ) + j ) + "ist" ) + abschnitt ) ) ; return abschnitt ; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent arg0 ) { parking.house.gui.AddVehicleDialog dialog = new parking.house.gui.AddVehicleDialog ( shell ) ; dialog . open () ; parking.house.model.Vehicle v = dialog . getVehicle () ; if ( v != null ) { java.lang.System.out . println ( ( "Choosed vehicle:" + v ) ) ; setValue ( v ) ; } } 
@ java.lang.Override public void onSwiped ( android.support.v7.widget.RecyclerView.ViewHolder viewHolder ) { mItemRemovedSnackbar = android.support.design.widget.Snackbar . make ( mSetsView , R.string.program_exercise_activity_set_deleted_message , Snackbar.LENGTH_INDEFINITE ) ; mItemRemovedSnackbar . setAction ( R.string.cancel_button_text , new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { mSetsAdapter . notifyItemInserted ( mModel . restoreLastRemoved () ) ; } } ) ; mItemRemovedSnackbar . show () ; } 
public void actionPerformed ( java.awt.event.ActionEvent arg0 ) { s . setBrTel ( txtBrTel . getText () ) ; s . setEmail ( txtEmail . getText () ) ; s . setUplaceno ( java.lang.Integer . parseInt ( txtUplaceno . getText () ) ) ; controller.GUIKontroler . osvezi ( s ) ; controller.GUIKontroler . pokreniDodajCasProzor ( s ) ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object o ) { if ( ! ( o instanceof groovyx.net.http.NonBlockingCookieStore.UriKey ) ) { return false ; } final groovyx.net.http.NonBlockingCookieStore.UriKey rhs = ( ( groovyx.net.http.NonBlockingCookieStore.UriKey ) ( o ) ) ; return ( host . equals ( rhs.host ) ) && ( name . equals ( rhs.name ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String EventName ; EventName = eventName . getText () . toString () ; if ( EventName . isEmpty () ) { android.widget.Toast . makeText ( context , "Please enter a Name for the event" , Toast.LENGTH_LONG ) . show () ; } else {} } 
@ java.lang.Override protected void onPostExecute ( K keys ) { super . onPostExecute ( keys ) ; if ( keys == null ) { return; } android.app.Activity context = base.ContextHolder . getContext () ; android.content.Intent openWeb = new android.content.Intent ( context , ly.loud.loudly.AuthActivity . class ) ; openWeb . putExtra ( "URL" , getAuthUrl () ) ; openWeb . putExtra ( "KEYS" , keys ) ; openWeb . putExtra ( "AUTHORIZER" , copy ) ; context . startActivity ( openWeb ) ; } 
public void displayRecyclerView ( boolean editable ) { mPlayerRecyclerView . setVisibility ( View.VISIBLE ) ; mLayoutManager = new android.support.v7.widget.LinearLayoutManager ( this ) ; mPlayerRecyclerView . setLayoutManager ( mLayoutManager ) ; mPlayerListAdapter = new io.github.sdsstudios.ScoreKeeper.Adapters.PlayerListAdapter ( editable , mRelativeLayout , this ) ; mPlayerRecyclerView . setAdapter ( mPlayerListAdapter ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object otherStylist ) { if ( ! ( otherStylist instanceof Stylist ) ) { return false ; } else { Stylist newStylist = ( ( Stylist ) ( otherStylist ) ) ; return this . getName () . equals ( newStylist . getName () ) ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public java.util.List < com.health.entity.Hospital > findBySuburb ( java.lang.String suburb ) { try { java.lang.String str = "SELECT h FROM Hospital h WHERE h.suburb = :suburb" ; javax.persistence.Query query = em . createQuery ( str ) ; query . setParameter ( "suburb" , suburb ) ; return query . getResultList () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; em . close () ; return null ; } finally { em . close () ; } } 
public void enterArrayAccess_lfno_primary ( ceylon.tool.converter.java2ceylon.ArrayAccess_lfno_primaryContext ctx ) { try { enterArrayAccess_lfno_primary = true ; if ( equalsequalsNull ) { bw . write ( "!" ) ; } bw . write ( ( ( ctx . expressionName () . getText () ) + ".get(" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void buttonClick ( com.vaadin.ui.Button.ClickEvent event ) { logger . log ( java.util.logging.Level.INFO , ( ( "logge " + ( getSession () . getAttribute ( "user" ) ) ) + " aus..." ) ) ; getSession () . setAttribute ( "user" , null ) ; com.example.testme.server.broadcast.Broadcaster . broadcast ( getUI () . getSession () . getSession () . getId () , username , false ) ; getUI () . getNavigator () . navigateTo ( com.example.testme.client.lobby.LobbyPresenter.NAME ) ; } 
@ com.emc.sa.api.GET @ com.emc.sa.api.Path ( value = "/job-status" ) @ com.emc.sa.api.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) @ com.emc.storageos.security.authorization.CheckPermission ( roles = { com.emc.storageos.security.authorization.Role.TENANT_ADMIN } ) public com.emc.sa.api.OrderJobInfo getJobStatus ( @ com.emc.sa.api.DefaultValue ( value = "DELETE_ORDER" ) @ com.emc.sa.api.QueryParam ( value = com.emc.vipr.client.catalog.impl.SearchConstants.JOB_TYPE ) java.lang.String typeStr ) { com.emc.sa.api.utils.OrderServiceJob.JobType type ; try { type = OrderServiceJob.JobType . valueOf ( typeStr ) ; } catch ( java.lang.Exception e ) { com.emc.sa.api.OrderService.log . error ( "Failed to get job type e=" , e ) ; throw APIException.badRequests . invalidParameterWithCause ( SearchConstants.JOB_TYPE , typeStr , e ) ; } com.emc.sa.api.utils.OrderJobStatus status = queryJobInfo ( type ) ; return status != null ? status . toOrderJobInfo () : new com.emc.sa.api.OrderJobInfo () ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { javafx.stage.DirectoryChooser directoryChooser = new javafx.stage.DirectoryChooser () ; java.io.File selectedDirectory = directoryChooser . showDialog ( stage ) ; if ( selectedDirectory == null ) { path = null ; } else { path . setText ( selectedDirectory . getAbsolutePath () ) ; } } 
public void onDateSet ( android.widget.DatePicker view , int year , int month , int day ) { month = month + 1 ; java.lang.String birthdate = ( ( ( day + "/" ) + month ) + "/" ) + year ; java.lang.String last_date = com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information . remove ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc ) ; if ( ( last_date == null ) || ( ! ( last_date . equals ( birthdate ) ) ) ) { com.example.mishaberkovich.roomsquad.EditProfileActivity.changes_saved = false ; } com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information . add ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc , birthdate ) ; com.example.mishaberkovich.roomsquad.EditProfileActivity . displayAge ( getActivity () ) ; } 
public ninja.Result gameGet ( @ ninja.params.PathParam ( value = "choice" ) int choose ) { models.amGame g = new models.amGame () ; models.spGame g2 = new models.spGame () ; if ( choose == 1 ) { g . buildDeck () ; g . shuffle () ; return ninja.Results . json () . render ( g ) ; } else { g2 . buildDeck () ; g2 . shuffle () ; return ninja.Results . json () . render ( g2 ) ; } } 
public static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } 
public static void generate ( java.lang.String bugVecFilePath , java.lang.String codeVecFilePath , java.lang.String simMatFilePath ) throws java.lang.Exception { int dicSize = config.Config . getInstance () . getDicSize () ; java.util.HashMap < java.lang.String , Jama.Matrix > bugVecList = utils.MatrixUtil . loadVectors ( bugVecFilePath , dicSize ) ; java.lang.System.out . println ( bugVecList . size () ) ; java.util.HashMap < java.lang.String , Jama.Matrix > codeVecList = utils.MatrixUtil . loadVectors ( codeVecFilePath , dicSize ) ; java.lang.System.out . println ( codeVecList . size () ) ; utils.MatrixUtil . exportSimilarityMatrix ( bugVecList , codeVecList , simMatFilePath , dicSize ) ; } 
public boolean deleteMapLayerMetadataObject ( edu.harvard.iq.dataverse.MapLayerMetadata mapLayerMetadata , edu.harvard.iq.dataverse.authorization.users.User user ) { edu.harvard.iq.dataverse.MapLayerMetadataServiceBean.logger . info ( "deleteMapLayerMetadataObject" ) ; if ( ( mapLayerMetadata == null ) || ( user == null ) ) { return false ; } if ( permissionService . userOn ( user , mapLayerMetadata . getDataFile () . getOwner () ) . has ( Permission.EditDataset ) ) { this . deleteOlderMapThumbnails ( mapLayerMetadata ) ; em . remove ( em . merge ( mapLayerMetadata ) ) ; return true ; } return false ; } 
public static double rootMeansSquaredError ( double [] real , double [] predicted ) { double ret = 0.0 ; for ( int i = 0 ; i < ( real.length ) ; i ++ ) { ret += java.lang.Math . pow ( ( ( real [ i ] ) - ( predicted [ i ] ) ) , 2 ) ; } return java.lang.Math . sqrt ( ( ret / ( real.length ) ) ) ; } 
public void IncrementCurrentScore ( int currentHole ) { if ( ! ( gameStarted ) ) { return; } if ( ( currentHole >= 1 ) && ( currentHole <= 18 ) ) { if ( ( score [ ( currentHole - 1 ) ] ) >= ( com.manleysoftware.michael.discgolfapp.Model.Player.maxScoreAllowable ) ) { return; } ( score [ ( currentHole - 1 ) ] ) ++ ; } } 
private boolean bracketsBalanced ( java.lang.String input ) { int i = 0 ; for ( char c : input . toCharArray () ) { if ( c == '{' ) i ++ ; if ( c == '}' ) i -- ; if ( i < 0 ) return false ; } return i == 0 ; } 
@ com.fasterxml.jackson.annotation.JsonCreator public static seedu.address.commons.core.Version fromString ( java.lang.String versionString ) throws java.lang.IllegalArgumentException { java.util.regex.Matcher versionMatcher = seedu.address.commons.core.Version.VERSION_PATTERN . matcher ( versionString ) ; if ( ! ( versionMatcher . find () ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . format ( seedu.address.commons.core.Version.EXCEPTION_STRING_NOT_VERSION , versionString ) ) ; } return new seedu.address.commons.core.Version ( java.lang.Integer . parseInt ( versionMatcher . group ( 1 ) ) , java.lang.Integer . parseInt ( versionMatcher . group ( 2 ) ) , java.lang.Integer . parseInt ( versionMatcher . group ( 3 ) ) , ( ( versionMatcher . group ( 4 ) ) != null ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View itemView ) { android.content.Intent i = new android.content.Intent ( itemView . getContext () , com.pratikm.PatientTracker.HealthDetailsActivity . class ) ; i . putExtra ( "clickedPatientEmail" , mTextViewPatientEmail . getText () . toString () ) ; itemView . getContext () . startActivity ( i ) ; } 
public static com.app.PlayingCardSystem.GreenPlayerCardEnum getEnumInstance ( java.lang.String enumName ) { com.app.PlayingCardSystem.GreenPlayerCardEnum temp = null ; for ( com.app.PlayingCardSystem.GreenPlayerCardEnum gc : BoardGame.player_cards ) { if ( enumName . trim () . equalsIgnoreCase ( gc . name () ) ) { temp = gc ; break; } } return temp ; } 
private boolean isViewNameValidForCurrentUI ( java.lang.String viewName ) { final java.util.Set < java.lang.String > beanNames = this . viewNameToBeanNamesMap . get ( viewName ) ; if ( beanNames != null ) { for ( java.lang.String beanName : beanNames ) { if ( isViewBeanNameValidForCurrentUI ( beanName ) ) { return ( ( getAccessDeniedView () ) != null ) || ( isAccessGrantedToBeanName ( beanName ) ) ; } } } return false ; } 
private com.tut.beans.Utilisateur traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } return utilisateur ; } 
private boolean compareValues ( java.lang.Object fieldValue , com.atlassian.crowd.embedded.api.User user , boolean allowUserInField ) { boolean result = ! allowUserInField ; if ( fieldValue instanceof java.lang.String ) { if ( fieldValue . equals ( user . getName () ) ) { result = allowUserInField ; } } else { if ( fieldValue . equals ( user ) ) { result = allowUserInField ; } } return result ; } 
@ java.lang.Override public void onPreviewFrame ( byte [] data , android.hardware.Camera camera ) { if ( camera == null ) return; step = camera . getParameters () . getExposureCompensationStep () ; EV = java.lang.Math . max ( step , ( ( step ) * ( camera . getParameters () . getExposureCompensation () ) ) ) ; } 
public void setRuntime ( long runtime ) { if ( ( this . pauseTime ) > 0 ) { this . startTime = ( this . pauseTime ) - runtime ; } else { if ( ( this . startTime ) <= ( - 1 ) ) { this . pauseTime = com.badlogic.gdx.utils.TimeUtils . millis () ; this . startTime = ( pauseTime ) - runtime ; } else { this . startTime = ( com.badlogic.gdx.utils.TimeUtils . millis () ) - runtime ; } } } 
public static boolean openFolder ( java.lang.String path ) { java.awt.Desktop desktop = java.awt.Desktop . getDesktop () ; java.io.File dirToOpen ; try { dirToOpen = new java.io.File ( path ) ; desktop . open ( dirToOpen ) ; } catch ( java.lang.Exception e ) { Control.InvokeProgram.logger . error ( org.apache.commons.lang3.exception.ExceptionUtils . getStackTrace ( e ) ) ; return false ; } return true ; } 
public void solve ( int nb , int source , int destination , int auxiliary ) throws hanoi.TowerIsEmptyException , hanoi.TowerIsFullException { if ( nb == 1 ) { this . moveOneDisc ( source , destination ) ; } else { this . solve ( ( nb - 1 ) , source , auxiliary , destination ) ; this . moveOneDisc ( source , destination ) ; this . solve ( ( nb - 1 ) , auxiliary , destination , source ) ; } } 
public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { if ( ( trainers . size () ) > 0 ) { int i = 0 ; while ( i < ( trainers . size () ) ) { if ( trainers . get ( i ) . getEmail () . equals ( emailEntered ) ) { return trainers . get ( i ) ; } i ++ ; } return null ; } return null ; } 
private int [] quicksort ( int [] list , int low , int high ) { if ( low >= high ) return list ; int pos = partition ( list , low , high ) ; quicksort ( list , low , ( pos - 1 ) ) ; quicksort ( list , ( pos + 1 ) , high ) ; return list ; } 
@ java.lang.Override public void onWindowFocusChanged ( boolean hasFocus ) { super . onWindowFocusChanged ( hasFocus ) ; if ( hasFocus ) { setTitle ( selectedClub ) ; if ( ! ( de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone ) ) { playRoundViews . putViewsIntoGridlayout () ; playRoundViews . writeContentToViews ( playRoundContent ) ; de.schneider_simon.minigolfscores.PlayRound.isPutViewsDone = true ; } } } 
public final void applyTransformation ( eu.modernmt.model.Word source ) { if ( ( this . transformation ) == null ) { if ( ( source == null ) || ( ! ( source.placeholder . equals ( this . placeholder ) ) ) ) this . text = this . placeholder ; else this . text = source.text ; } else { this . transformation . apply ( source , this ) ; if ( ( this . text ) == null ) this . text = this . placeholder ; } } 
@ java.lang.Override protected java.lang.Exception doInBackground ( java.lang.Void . . . params ) { cat.ie.challengeaccepted.WS.ChallengeAcceptedWsServiceSoapBinding service = new cat.ie.challengeaccepted.WS.ChallengeAcceptedWsServiceSoapBinding () ; cat.ie.challengeaccepted.WS.User user = new cat.ie.challengeaccepted.WS.User () ; user.email = mEmail ; user.password = mPassword ; java.lang.System.out . println ( user.email ) ; java.lang.System.out . println ( user.password ) ; try { showProgress ( true ) ; android.util.Log . i ( "LOGIN" , "LogIn" ) ; remoteUser = service . logIn ( user ) ; } catch ( java.lang.Exception e ) { return e ; } result = true ; return null ; } 
@ java.lang.Override protected java.util.List < mx.evin.udacity.popularmovies.entities.ReviewResult > doInBackground ( java.lang.Integer . . . params ) { java.lang.String movieId = ( ( params.length ) > 0 ) ? java.lang.String . valueOf ( params [ 0 ] ) : "293660" ; mx.evin.udacity.popularmovies.network.MoviesRetrofit moviesRetrofit = new mx.evin.udacity.popularmovies.network.MoviesRetrofit () ; mx.evin.udacity.popularmovies.entities.ReviewPage reviewPage = moviesRetrofit . getReviews ( movieId ) ; return reviewPage . getReviewResults () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/search" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public org.springframework.web.servlet.ModelAndView doGet ( javax.servlet.http.HttpServletRequest request ) { javax.servlet.http.HttpSession session = request . getSession () ; java.lang.String requestQuery = request . getParameter ( "search" ) ; java.util.List < kawahara.models.SearchModel > allSearchResults = searchService . getSearchResults ( requestQuery ) ; int pageIndex = getPageIndex ( session , requestQuery , allSearchResults , request ) ; if ( pageIndex > ( ( allSearchResults . size () ) - 1 ) ) { pageIndex = ( allSearchResults . size () ) - 1 ; } return setAttributes ( session , requestQuery , pageIndex , allSearchResults ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { if ( ( mCallback ) == null ) { android.util.Log . e ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.DEBUG_TAG , "There's no callback set!" ) ; return; } dialog . dismiss () ; switch ( which ) { case 0 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_NORMAL ) ; break; case 1 : mCallback . mapTypeSelected ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.MAP_STYLE_NIGHT ) ; break; case 2 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_HYBRID ) ; break; case 3 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_TERRAIN ) ; } } 
@ java.lang.Override public void handle ( se.kth.news.core.news.CheckNewsResponse newsMsg , se.sics.ktoolbox.util.network.KContentMsg < ? , ? , se.kth.news.core.news.CheckNewsResponse > container ) { java.util.ArrayList < se.kth.news.core.news.News > newsToAdd = container . getContent () . getNews () ; for ( se.kth.news.core.news.News n : newsToAdd ) { if ( ! ( news . contains ( n ) ) ) { logReceivedNews ( n ) ; } } } 
@ java.lang.Override public boolean handleChange ( java.lang.Object oldValue , java.lang.Object newValue , org.eclipse.draw2d.IFigure refreshableFigure ) { if ( ( traceDataProvider [ index ] ) != null ) { trace [ index ] . setTraceColor ( getModelColor ( ( ( org.csstudio.sds.component.xygraph.model.XyGraphModel.PROP_PRIMARY_AXIS_TRACE_COLOR_PREFIX ) + index ) ) ) ; } return true ; } 
public static int findMax ( int [] [] a ) { int max = java.lang.Integer.MIN_VALUE ; for ( int i = 0 ; i < ( a.length ) ; i ++ ) { for ( int j = 0 ; j < ( a [ i ] . length ) ; j ++ ) { if ( ( a [ i ] [ j ] ) > max ) { max = a [ i ] [ j ] ; } } } return max ; } 
public br.unicamp.ic.lis.tograph.graph.GraphNode createNode ( java.lang.String label , br.unicamp.ic.lis.tograph.graph.GraphElementProperties properties ) throws java.lang.Exception { java.util.HashMap < java.lang.String , java.lang.Object > nodeProperties = new java.util.HashMap < java.lang.String , java.lang.Object > () ; for ( br.unicamp.ic.lis.tograph.graph.GraphElementProperty property : properties ) { nodeProperties . put ( property . getKey () , property . getValue () ) ; } java.lang.Long created = inserter . createNode ( nodeProperties , org.neo4j.graphdb.DynamicLabel . label ( label ) ) ; return new br.unicamp.ic.lis.tograph.graph.GraphNode ( new java.net.URI ( java.lang.String . valueOf ( created ) ) , label , this ) ; } 
private void generateSmallToast ( java.lang.String info ) { final android.widget.Toast toast = android.widget.Toast . makeText ( getBaseContext () , info , Toast.LENGTH_SHORT ) ; toast . show () ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { toast . cancel () ; } } , 500 ) ; } 
private void checkSingleExpandMode ( int currExpandedParentPosition ) { if ( ( mExpandCollapseMode.mode ) != ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.ExpandCollapseMode.MODE_SINGLE_EXPAND ) ) return; final int lastExpandedPosition = mExpandCollapseMode.lastExpandedPosition ; if ( lastExpandedPosition == currExpandedParentPosition ) return; com.github.huajianjiang.expandablerecyclerview.util.Logger . e ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.TAG , ( ( "checkSingleExpandMode " + "---->lastExpandedPosition=*" ) + lastExpandedPosition ) ) ; collapseView ( lastExpandedPosition , true , false ) ; mExpandCollapseMode.lastExpandedPosition = currExpandedParentPosition ; } 
private javax.mail.Message [] searchMailbox ( javax.mail.Folder folder ) throws javax.mail.MessagingException { com.einzig.ipst2.util.PreferencesHelper helper = new com.einzig.ipst2.util.PreferencesHelper ( activity . getApplicationContext () ) ; org.joda.time.LocalDate lastParseDate = getLastParseDate ( helper . get ( helper . parseDateKey () ) ) ; return folder . search ( getSearchTerm ( lastParseDate , true ) ) ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { switch ( position ) { case 0 : return chatFragment ; case 1 : if ( ( contactsFragment ) != null ) { return contactsFragment ; } return contactsFragment = new com.superchat.ui.ContactsScreen () ; case 2 : return publicGroupFragment ; case 3 : return bulletinFragment ; default: return new com.superchat.ui.TempFragment () ; } } 
private com.intellij.psi.PsiFile mockPsiFile ( java.lang.String text ) { com.intellij.psi.PsiFile psiFile = mock ( com.intellij.psi.PsiFile . class ) ; when ( psiFile . getText () ) . thenReturn ( text ) ; when ( psiFile . getChildren () ) . thenReturn ( new com.intellij.psi.PsiElement [] { mock ( com.intellij.psi.PsiElement . class ) } ) ; return psiFile ; } 
private void spreadSkylightDownwards ( int x , int z ) { final int highestBlock = getHighestBlock ( x , z ) ; final int sectionY = highestBlock / ( Section.SECTION_HEIGHT ) ; byte light = World.DEFAULT_SKY_LIGHT ; for ( int y = sectionY ; y >= 0 ; -- y ) { final net.morbz.minecraft.world.Section section = sections [ sectionY ] ; if ( section != null ) { light = section . spreadSkylightDownwards ( x , z , light ) ; if ( light == 0 ) { break; } } } } 
java.lang.String add ( de.hk.wfh.rs.FilterContext filterContext , java.lang.String line ) { boolean containsFilter = containsPattern ( line , filterContext . getFilterList () ) ; boolean containsIgnore = containsPattern ( line , filterContext . getIgnoreList () ) ; if ( containsFilter && containsIgnore ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return line + "\n" ; } return "\n" ; } 
private com.alphatica.genotick.genotick.RobotData createDataUpToTimePoint ( int i ) { java.util.List < double [] > list = new java.util.ArrayList <> () ; for ( double [] original : values ) { double [] copy = copyReverseArray ( original , i ) ; list . add ( copy ) ; } java.lang.Double futureChange = calculateFutureChange ( timePoints [ i ] ) ; return com.alphatica.genotick.genotick.RobotData . createData ( list , name , futureChange ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.view.LayoutInflater inflater = ( ( android.view.LayoutInflater ) ( getSystemService ( de.prismatikremote.hartz.prismatikremote.activities.LAYOUT_INFLATER_SERVICE ) ) ) ; mDrawerLayout . addView ( inflater . inflate ( R.layout.activity_settings , null ) ) ; android.widget.Button applySettings = ( ( android.widget.Button ) ( findViewById ( R.id.apply_settings ) ) ) ; applySettings . setOnClickListener ( this ) ; updateUi () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/loginaction" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String loginAction ( com.acae.entity.UserProfile user , javax.servlet.http.HttpSession session ) { com.acae.entity.UserProfile userProfile = loginService . getUserProfile ( user . getUserId () , user . getPassword () ) ; if ( userProfile != null ) { session . setAttribute ( "userProfile" , userProfile ) ; return "/index" ; } else { session . setAttribute ( "errorMessage" , "Wrong User ID or Password" ) ; return "/menu/login" ; } } 
public static void post ( java.lang.String url , java.lang.String requestBodyString , com.chinamobile.iot.onenet.OneNetApiCallback callback ) { com.chinamobile.iot.onenet.OneNetApi . assertInitialized () ; com.chinamobile.iot.onenet.OneNetApi . assertUIThread () ; com.chinamobile.iot.onenet.OneNetApi . assertUrlConfigured () ; okhttp3.RequestBody requestBody = okhttp3.RequestBody . create ( okhttp3.MediaType . parse ( "application/json; charset=utf-8" ) , requestBodyString ) ; com.chinamobile.iot.onenet.OneNetApi.sHttpExecutor . post ( url , requestBody , new com.chinamobile.iot.onenet.OneNetApiCallbackAdapter ( callback ) ) ; } 
public void toggleEventInvite ( android.view.View view ) { android.widget.CheckBox chkFriend = ( ( android.widget.CheckBox ) ( view ) ) ; if ( chkFriend . isChecked () ) { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Added to invite list" ) ; } else { android.util.Log . d ( com.sarahrobinson.finalyearproject.activities.MainActivity.TAG , "Removed from invite list" ) ; } } 
private com.hutgroup.robocode.server.RoundResult toRoundResult ( int roundId , com.hutgroup.robocode.server.IRobotSnapshot robotSnapshot ) { double energyLeft = robotSnapshot . getEnergy () ; com.hutgroup.robocode.server.IScoreSnapshot snapshot = robotSnapshot . getScoreSnapshot () ; java.lang.String playerId = robotSnapshot . getName () ; double gunDamage = ( snapshot . getCurrentBulletDamageScore () ) + ( snapshot . getCurrentBulletKillBonus () ) ; double ramDamage = ( snapshot . getCurrentRammingDamageScore () ) + ( snapshot . getCurrentRammingKillBonus () ) ; return new com.hutgroup.robocode.server.RoundResult ( roundId , playerId , energyLeft , ramDamage , gunDamage ) ; } 
public void setUniformMatrix ( int loc , boolean transposed , org.joml.Matrix4f mat ) { if ( loc == ( - 1 ) ) return; if ( ( example.ShaderProgram.buf16Pool ) == null ) example.ShaderProgram.buf16Pool = org.lwjgl.BufferUtils . createFloatBuffer ( 16 ) ; example.ShaderProgram.buf16Pool . clear () ; mat . get ( example.ShaderProgram.buf16Pool ) ; glUniformMatrix4fv ( loc , transposed , example.ShaderProgram.buf16Pool ) ; } 
public boolean insertBudget ( final java.lang.String name , final int max ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.NAME , name ) ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.MAX , max ) ; final long newId = db . insert ( protect.budgetwatch.DBHelper.BudgetDbIds.TABLE , null , contentValues ) ; return newId != ( - 1 ) ; } 
public static < T > void serialize ( T object , java.io.OutputStream resultStream ) throws javax.xml.bind.JAXBException { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( object . getClass () ) ; javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext . createMarshaller () ; jaxbMarshaller . setProperty ( javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT , true ) ; jaxbMarshaller . marshal ( object , resultStream ) ; } 
@ java.lang.Override public void onComplete ( java.lang.String response ) { super . onComplete ( response ) ; if ( ! ( android.text.TextUtils . isEmpty ( response ) ) ) { if ( response . startsWith ( "{\"statuses\"" ) ) { mStatusList = com.sina.weibo.sdk.openapi.models.StatusList . parse ( response ) ; if ( null != ( mStatusList.statusList ) ) { setViewData ( mStatusList.statusList ) ; } else { android.util.Log . d ( com.bricechou.weiboclient.fragment.HomeFragment.TAG , "Refresh onComplete: No Result." ) ; refreshViewDone () ; } } } } 
private static void sendResultWithDns ( int result_code , java.lang.String dns1 , java.lang.String dns2 ) { android.content.Intent result_intent = new android.content.Intent ( ValueConstants.ACTION_SET_DNS ) ; result_intent . putExtra ( "result_code" , result_code ) ; result_intent . putExtra ( "dns1" , dns1 ) ; result_intent . putExtra ( "dns2" , dns2 ) ; } 
public spell.INode find ( java.lang.String word ) { spell.Node temp = root ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { int index = indexByLetter ( word . charAt ( i ) ) ; if ( temp . hasNode ( index ) ) { temp = temp . getNode ( index ) ; } else { return null ; } } if ( ( temp . getValue () ) > 0 ) { return temp ; } return null ; } 
public void print ( boolean printable ) { if ( printable ) { if ( ( - 1 ) == ( client . networkInterceptors () . indexOf ( org.fintx.http.HttpClientBase.networkInterceptor ) ) ) { client = client . newBuilder () . addNetworkInterceptor ( org.fintx.http.HttpClientBase.networkInterceptor ) . build () ; } } else {} } 
private void checkLineIndent ( int lineNum , com.puppycrawl.tools.checkstyle.checks.indentation.IndentLevel indentLevel ) { final java.lang.String line = indentCheck . getLine ( ( lineNum - 1 ) ) ; if ( ! ( line . isEmpty () ) ) { final int start = getLineStart ( line ) ; if ( indentLevel . isGreaterThan ( start ) ) { logChildError ( lineNum , start , indentLevel ) ; } } } 
public static void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } } 
private void addRow ( java.lang.String [] row ) { for ( int i = 0 ; i < ( nOfColumns ) ; ++ i ) { data . addEntity ( new org.online.etl.model.abstractions.Entity ( currentId , ( ( long ) ( i ) ) , "" , "String" , "" , null ) ) ; } } 
public static void add ( javax.servlet.http.HttpSession session , java.lang.String key , java.lang.Object value ) { java.util.Map < java.lang.String , java.lang.Object > map = com.liferay.portal.kernel.servlet.SessionErrors . _getMap ( session , null , true ) ; if ( map == null ) { return; } map . put ( key , value ) ; } 
public java.util.Map < java.lang.String , src.Node > updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } return map ; } 
public org.json.JSONObject toJson () { org.json.JSONObject toJson = new org.json.JSONObject () ; toJson . put ( BoraApplicationConstants.EVENT_ID_KEY_JSON , id ) . put ( BoraApplicationConstants.EVENT_NAME_KEY_JSON , name ) . put ( BoraApplicationConstants.EVENT_DATE_KEY_JSON , date ) . put ( BoraApplicationConstants.EVENT_ATTENDEES_KEY_JSON , attendees ) . put ( BoraApplicationConstants.EVENT_PHOTOS_KEY_JSON , photoNames ) ; return toJson ; } 
public static java.util.Set < me.newyith.util.Point > getPointsConnected ( me.newyith.util.Point origin , java.util.Set < me.newyith.util.Point > originLayer , java.util.Set < org.bukkit.Material > wallBlocks , java.util.Set < org.bukkit.Material > returnBlocks , int rangeLimit , java.util.Set < me.newyith.util.Point > ignorePoints , java.util.Set < me.newyith.util.Point > searchablePoints ) { java.util.List < java.util.List < me.newyith.util.Point > > layers = me.newyith.generator.Wall . getPointsConnectedAsLayers ( origin , originLayer , wallBlocks , returnBlocks , rangeLimit , ignorePoints , searchablePoints , me.newyith.generator.Wall.ConnectedThreshold.FACES ) ; return me.newyith.generator.Wall . flattenLayers ( layers ) ; } 
public dataAccessLayer.SonarOrganisation loadOrganisation ( java.lang.String filepath ) { businessLogicLayer.setUp.Organisation result = null ; try { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext . newInstance ( businessLogicLayer.setUp.Organisation . class ) ; javax.xml.bind.Unmarshaller jaxbUnmarshaller = jaxbContext . createUnmarshaller () ; result = ( ( businessLogicLayer.setUp.Organisation ) ( jaxbUnmarshaller . unmarshal ( new java.io.File ( filepath ) ) ) ) ; java.lang.System.out . println ( result ) ; } catch ( javax.xml.bind.JAXBException e ) { e . printStackTrace () ; } return organisationConverter ( result ) ; } 
private void addJSONObjectInterceptor ( com.navercorp.pinpoint.bootstrap.plugin.ProfilerPluginContext context ) { com.navercorp.pinpoint.bootstrap.plugin.transformer.ClassFileTransformerBuilder builder = context . getClassFileTransformerBuilder ( "net.sf.json.JSONObject" ) ; builder . editMethod ( "fromObject" , "java.lang.Object" ) . injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) . group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; builder . editMethod ( "toBean" , "net.sf.json.JSONObject" ) . injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) . group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; builder . editMethod ( "toString" ) . injectInterceptor ( "com.navercorp.pinpoint.plugin.json.lib.interceptor.JsonLibMethodInterceptor" ) . group ( com.navercorp.pinpoint.plugin.json.lib.JsonLibPlugin.GROUP ) ; java.lang.instrument.ClassFileTransformer transformer = builder . build () ; context . addClassFileTransformer ( transformer ) ; } 
private boolean solveH ( int col ) { int i = 0 ; for ( i = 0 ; i < ( board.length ) ; i ++ ) { if ( addQueen ( i , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } } return false ; } 
private void setSpotColor ( javax.swing.JButton buttonToChange , java.lang.String playerNameOnSpot ) { if ( ( playerNameOnSpot == null ) || ( "" . equals ( playerNameOnSpot ) ) ) { buttonToChange . setIcon ( null ) ; } else if ( myPlayerController . getPlayer1Name () . equals ( playerNameOnSpot ) ) { buttonToChange . setIcon ( black_icon ) ; } else if ( myPlayerController . getPlayer2Name () . equals ( playerNameOnSpot ) ) { buttonToChange . setIcon ( red_icon ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String hour = com.bitballoon.se4351_synapps.synapps.EditNotificationActivity . pad ( mHour ) ; java.lang.String min = com.bitballoon.se4351_synapps.synapps.EditNotificationActivity . pad ( mMinute ) ; print_notification ( noti_input . getText () . toString () , hour , min ) ; showNotification ( noti_input . getText () . toString () , hour , min , mAMPM , date_data ) ; } 
private void displayFragment ( android.support.v4.app.Fragment fragment , java.lang.String title ) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; android.support.v4.app.FragmentTransaction fragmentTransaction = fragmentManager . beginTransaction () ; fragmentTransaction . replace ( R.id.page_body , fragment ) ; fragmentTransaction . addToBackStack ( title ) ; fragmentTransaction . commit () ; } 
private static boolean rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; return true ; } } } } return false ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { existingProduct . setQuantityOrWeight ( java.lang.Double . valueOf ( holder.editTextQuantity . getText () . toString () ) ) ; existingProducts . set ( holder . getAdapterPosition () , existingProduct ) ; existingProductDAO . update ( existingProduct ) ; if ( ( mOnDataChangeListener ) != null ) { mOnDataChangeListener . onDataChanged ( existingProducts ) ; } notifyDataSetChanged () ; } 
private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , java.lang.Integer hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , ( hierarchyTimeout == null ? 0 : hierarchyTimeout ) ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e != null ) { resetShareFragment () ; android.util.Log . d ( com.gcw.sapienza.places.ShareFragment.TAG , e . getMessage () ) ; } else { resetShareFragment () ; ( ( com.gcw.sapienza.places.com.gcw.sapienza.places.MainActivity ) ( getActivity () ) ) . refresh () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { android.util.Log . i ( "SalesforceDroidGapActivity.onCreate" , "onCreate called" ) ; super . onCreate ( savedInstanceState ) ; init () ; bootconfig = com.salesforce.androidsdk.rest.BootConfig . getBootConfig ( this ) ; clientManager = buildClientManager () ; passcodeManager = com.salesforce.androidsdk.app.SalesforceSDKManager . getInstance () . getPasscodeManager () ; userSwitchReceiver = new com.salesforce.androidsdk.ui.sfhybrid.SalesforceDroidGapActivity.DroidGapUserSwitchReceiver () ; registerReceiver ( userSwitchReceiver , new android.content.IntentFilter ( com.salesforce.androidsdk.accounts.UserAccountManager.USER_SWITCH_INTENT_ACTION ) ) ; android.webkit.CookieSyncManager . createInstance ( this ) ; com.salesforce.androidsdk.util.EventsObservable . get () . notifyEvent ( EventType.MainActivityCreateComplete , this ) ; } 
@ java.lang.Override public void showLodgingList ( entity.ResultLodgingList resultLodgingList ) { loading = true ; java.util.List < entity.ResultLodging > jj = resultLodgingList . getResultLodging () ; if ( ! ( nextOffset . equals ( resultLodgingList . getStatistics () . getOffsetNext () . toString () ) ) ) { resultLodgings . addAll ( jj ) ; adapter . notifyDataSetChanged () ; nextOffset = resultLodgingList . getStatistics () . getOffsetNext () . toString () ; loading = false ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mPage = getArguments () . getInt ( com.example.vikramjeet.challengerapp.fragments.OpenChallengesFragment.ARG_PAGE ) ; challenges = new java.util.ArrayList <> () ; aOpenChallenges = new com.example.vikramjeet.challengerapp.adapters.ChallengeArrayAdapter ( getActivity () , challenges , this ) ; populateData () ; } 
@ java.lang.Override public void call ( caesar.interpreter.CaesarInterpreter interpreter ) { caesar.interpreter.buildin.StringClass.logger . log ( java.util.logging.Level.FINE , "addString from StringClass is called." ) ; java.lang.String opb = interpreter . getStack () . popString () ; java.lang.String opa = interpreter . getStack () . popString () ; java.lang.String result = opa + opb ; interpreter . getStack () . pushString ( result ) ; } 
@ java.lang.Override public int compare ( com.Ben12345rocks.VotingPlugin.Objects.User p1 , com.Ben12345rocks.VotingPlugin.Objects.User p2 ) { int p1Total = p1 . getTotalVotesSite ( voteSite ) ; int p2Total = p2 . getTotalVotesSite ( voteSite ) ; if ( p1Total < p2Total ) { return 1 ; } if ( p1Total > p2Total ) { return - 1 ; } return 0 ; } 
private java.lang.Integer [] compareAndSetStubStatusDelta ( java.lang.String rawStubStatus , com.ctrip.zeus.nginx.entity.TrafficStatus trafficStatus ) { java.lang.Integer [] stubStatus = com.ctrip.zeus.util.RollingTrafficStatus . parseStubStatusNumber ( rawStubStatus . split ( "\n" ) ) ; com.ctrip.zeus.util.RollingTrafficStatus . extractStubStatus ( com.ctrip.zeus.util.RollingTrafficStatus . getDelta ( stubStatus , lastStubStatus ) , trafficStatus , stubStatus ) ; return stubStatus ; } 
public io.ddf.DDF getDDFByUri ( java.lang.String uri ) throws io.ddf.exception.DDFException { java.util.UUID uuid = this . mUris . get ( uri ) ; if ( uuid == null ) { throw new io.ddf.exception.DDFException ( java.lang.String . format ( "Cannot find ddf with uri %s" , uri ) ) ; } return this . getDDF ( uuid ) ; } 
static boolean anyPlayers ( org.bukkit.Location loc , int range ) { try { java.util.List < org.bukkit.entity.Entity > out = me.badbones69.blockparticles.Api . getNearbyEntities ( loc , range , range , range ) ; if ( ! ( out . isEmpty () ) ) { for ( org.bukkit.entity.Entity e : out ) { if ( e instanceof org.bukkit.entity.LivingEntity ) { org.bukkit.entity.LivingEntity en = ( ( org.bukkit.entity.LivingEntity ) ( e ) ) ; if ( en instanceof org.bukkit.entity.Player ) { return true ; } } } } } catch ( java.lang.Exception e ) {} return false ; } 
public void login ( java.lang.String email , java.lang.String password ) { com.weddingcrashers.model.User user = _userService . getUserByEmail ( email ) ; com.weddingcrashers.servermodels.LoginContainer loginContainer = new com.weddingcrashers.servermodels.LoginContainer () ; if ( user != null ) { if ( user . getPassword () . equals ( password ) ) { loginContainer . setUser ( user ) ; } } com.weddingcrashers.server.ServerUtils . sendObject ( client , loginContainer ) ; } 
@ java.lang.Override public void changed ( drtn.game.screens.ChangeEvent event , com.badlogic.gdx.scenes.scene2d.Actor actor ) { if ( ! ( engine . selectedTile () . hasRoboticon () ) ) { engine . deployRoboticon () ; selectTile ( engine . selectedTile () , false ) ; } else { engine . refreshUpgradeOverlay () ; upgradeOverlayVisible = true ; } } 
public void approachBuilding ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg . getBuilding ( bldName ) ; if ( bldg != null ) { _currentBldg = bldg ; java.lang.String description = bldg . getExteriorDescription () ; java.lang.String imagePath = bldg . getExtImagePath () ; displayBuilding ( description , imagePath ) ; } else { _frame . displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } 
private void setupAuthenticatedModel ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } 
public ShiftInDay getShift ( Shift shift ) { switch ( shift . getName () ) { case "Early Morning Shift" : return earlyMorningShift ; case "Morning Shift" : return morningShift ; case "Late Morning Shift" : return lateMorningShift ; case "Surgery Shift" : return surgeryShift ; case "Overnight Shift" : return overnightShift ; case "Sunday Shift" : return sundayShift ; default: java.lang.System.out . println ( "Not a valid shift" ) ; break; } return null ; } 
private int getCardsCountBeforeCurrentPosition ( int position ) { int count = 0 ; if ( ( shouldShowAppodealAdBanner ) && ( ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) + ( shouldShowAsBanner ? 1 : 0 ) ) < position ) ) { count ++ ; } if ( ( shouldShowAsBanner ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.AS_BANNER_POSITION ) < position ) ) count ++ ; return count ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { view = inflater . inflate ( R.layout.fragment_future , container , false ) ; fab = view . findViewById ( R.id.futureFab ) ; eventRecycler = view . findViewById ( R.id.eventsRecycler ) ; eventRecycler . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () . getApplicationContext () ) ) ; tvNoData = view . findViewById ( R.id.tvNoFutureData ) ; onClickListeners () ; checkPermission () ; return view ; } 
public double getPoisson ( double lambda ) { double L = java.lang.Math . exp ( ( - lambda ) ) ; double p = 1.0 ; double k = 0.0 ; do { k = k + 0.5 ; p *= java.lang.Math . random () ; } while ( p > L ) ; double numero = 1 / ( k - 0.1 ) ; numero = redondear ( ( numero * 10 ) ) ; return numero ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( o == ( this ) ) { return true ; } if ( ! ( o instanceof org.yccheok.jstock.engine.Industry ) ) { return false ; } return this . industry . equals ( ( ( org.yccheok.jstock.engine.Industry ) ( o ) ) . industry ) ; } 
public < T > java.util.Iterator < T > iterator ( java.sql.Connection connection , java.lang.String sql , java.lang.Object [] parameters , lazycat.series.jdbc.mapper.RowMapper < T > rowMapper ) throws java.sql.SQLException { return iterator ( connection , sql , lazycat.series.jdbc.PreparedStatementSetters . newIgnoreJdbcTypeSetter ( parameters , typeHandlerRegistry , typeConverter ) , rowMapper ) ; } 
private void jComboBox6ActionPerformed ( java.awt.event.ActionEvent evt ) { cz.fidentis.controller.Comparison2Faces bc = cz.fidentis.gui.GUIController . getSelectedProjectTopComponent () . getProject () . getSelectedComparison2Faces () ; if ( ( bc . getHDP () ) == null ) return; bc . getHDP () . getInfo () . setColorScheme ( cz.fidentis.visualisation.ColorScheme . values () [ jComboBox6 . getSelectedIndex () ] ) ; } 
public void receive ( java.util.Map < java.lang.String , java.lang.String > result ) { int in = java.lang.Integer . parseInt ( result . get ( "rx-bits-per-second" ) ) ; int out = java.lang.Integer . parseInt ( result . get ( "tx-bits-per-second" ) ) ; traffic = in + out ; java.lang.System.out . println ( ( ( ( ( ( parentIdentity ) + ": Total traffic on " ) + ( label ) ) + ": " ) + ( traffic ) ) ) ; aggregator . update ( traffic ) ; } 
@ java.lang.Override public void addPopulators ( org.spongepowered.api.world.gen.WorldGenerator generator ) { generator . getGenerationPopulators () . add ( ( ( org.spongepowered.api.world.gen.GenerationPopulator ) ( this . netherCaveGenerator ) ) ) ; if ( this . field_177466_i ) { generator . getGenerationPopulators () . add ( ( ( org.spongepowered.api.world.gen.GenerationPopulator ) ( this . genNetherBridge ) ) ) ; generator . getPopulators () . add ( ( ( org.spongepowered.api.world.gen.Populator ) ( this . genNetherBridge ) ) ) ; } } 
public org.opendaylight.yangtools.yang.binding.InstanceIdentifier < org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntries > getIdEntriesInstanceIdentifier ( java.lang.String poolName , java.lang.String idKey ) { return org.opendaylight.yangtools.yang.binding.InstanceIdentifier . builder ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.IdPools . class ) . child ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.IdPool . class , new org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.IdPoolKey ( poolName ) ) . child ( org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntries . class , new org.opendaylight.yang.gen.v1.urn.opendaylight.genius.idmanager.rev160406.id.pools.id.pool.IdEntriesKey ( idKey ) ) . build () ; } 
public void setAborted ( java.lang.String playerId ) { validatePlayerId ( playerId ) ; if ( ! ( aborted ) ) { this . abortedBy = playerId ; this . aborted = true ; this . setChanged () ; } else { this . finished = true ; } } 
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { eventRowIndex = itemTable . getCellForEvent ( event ) . getRowIndex () ; itemDTO . setId ( java.lang.Integer . parseInt ( itemTable . getText ( eventRowIndex , 0 ) ) ) ; itemDTO . setName ( itemTable . getText ( eventRowIndex , 1 ) ) ; setItemId ( java.lang.Integer . parseInt ( itemTable . getText ( eventRowIndex , 0 ) ) ) ; controllerEditBtn . fireEvent ( new com.google.gwt.event.dom.client.ClickEvent () {} ) ; } 
public int getSyncMsec ( int ms ) { this . lock . lock () ; try { while ( ( ms == ( msec ) ) && ( ( this . syncCount ) == 0 ) ) { try { free . await () ; } catch ( java.lang.InterruptedException e ) { java.lang.Thread . currentThread () . interrupt () ; } } ( this . syncCount ) -- ; free . signalAll () ; } finally { lock . unlock () ; } return msec ; } 
protected void applyCenterCrop ( @ android.support.annotation.NonNull android.view.TextureView view ) { float xScale = ( ( float ) ( view . getWidth () ) ) / ( intrinsicVideoSize.x ) ; float yScale = ( ( float ) ( view . getHeight () ) ) / ( intrinsicVideoSize.y ) ; float scale = java.lang.Math . max ( xScale , yScale ) ; xScale = scale / xScale ; yScale = scale / yScale ; applyScale ( view , xScale , yScale ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.app_bar ) ) ) ; setSupportActionBar ( toolbar ) ; mIsTwoPaneLayout = ( findViewById ( R.id.top_tracks_container ) ) != null ; if ( ( mIsTwoPaneLayout ) && ( savedInstanceState == null ) ) { getSupportFragmentManager () . beginTransaction () . replace ( R.id.top_tracks_container , new com.spotify.sdliles.spotifystreamer.UI.TopTracksFragment () ) . commit () ; } } 
@ java.lang.Override public void onComplete ( com.google.firebase.database.DatabaseError databaseError , com.google.firebase.database.DatabaseReference databaseReference ) { if ( databaseError != null ) { callbackContext . sendPluginResult ( convertToPluginResult ( databaseError , false ) ) ; } else { callbackContext . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.OK , ( ( path + '/' ) + ( databaseReference . getKey () ) ) ) ) ; } } 
public void clone ( java.lang.String pathDest ) { checkIfExist ( pathDest ) ; rc = new com.aragost.javahg.RepositoryConfiguration () ; if ( java.lang.System . getProperty ( "os.name" ) . toLowerCase () . contains ( "windows" ) ) { configureMercurial () ; } br = com.aragost.javahg.BaseRepository . clone ( rc , new java.io.File ( pathDest ) , org.cloudml.connectors.util.MercurialConnector.endPoint ) ; } 
protected void initiateGeocode ( java.lang.String address , int tag ) { android.content.Intent intent = new android.content.Intent ( this , com.getataxi.client.utils.GeocodeIntentService . class ) ; intent . putExtra ( Constants.GEOCODE_RECEIVER , mResultReceiver ) ; intent . putExtra ( Constants.GEOCODE_TYPE , Constants.GEOCODE ) ; intent . putExtra ( Constants.ADDRESS_DATA_EXTRA , address ) ; intent . putExtra ( Constants.GEOCODE_TAG , tag ) ; startService ( intent ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj instanceof Sentence.PADependencyTuple ) { Sentence.PADependencyTuple PADepTuple = ( ( Sentence.PADependencyTuple ) ( obj ) ) ; if ( ( PADepTuple.predIndex ) != ( predIndex ) ) return false ; if ( ( PADepTuple.argIndex ) != ( argIndex ) ) return false ; if ( ! ( PADepTuple.srl . equals ( srl ) ) ) return false ; return true ; } return false ; } 
public boolean setColor ( java.awt.Color color ) { if ( ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) || ( ( ( this . color ) == null ) && ( color == null ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; } 
@ org.testng.annotations.Test ( dataProvider = "domainDataProvider" ) public void testGetZoneName ( final java.lang.String requestHostname , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , subdomainValue ) ; } 
public static void continuous ( java.util.List < java.lang.String > oldlist ) { oldlist = pers.zylo117.spotspotter.fileprocessor.FIndexReader . getFIndex ( false ) ; final java.util.List < java.lang.String > newlist = pers.zylo117.spotspotter.fileprocessor.FIndexReader . getFIndex ( true ) ; newlist . removeAll ( oldlist ) ; if ( ! ( newlist . isEmpty () ) ) oldlist = newlist ; pers.zylo117.spotspotter.fileprocessor.FIndexReader . indexProcess ( CentralControl.monitorPath , oldlist ) ; } 
public void setExternalNum ( java.lang.String externalNum ) { try { if ( ( externalNum . length () ) <= 50 ) this . externalNum = externalNum ; else { throw new java.lang.IllegalArgumentException ( ( ( "'" + externalNum ) + "' is longer than 50" ) ) ; } } catch ( java.lang.IllegalArgumentException e ) { errorList [ 5 ] = "ERROR: " + ( e . getMessage () ) ; setErrorCount ( ( ( getErrorCount () ) + 1 ) ) ; } } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { android.util.Log . d ( com.abrahamyans.gpsbusfeed.scheduler.LocationService.TAG , ( "Changed location " + location ) ) ; com.abrahamyans.gpsbusfeed.event.LocationChangedEvent event = new com.abrahamyans.gpsbusfeed.event.LocationChangedEvent ( getApplicationContext () , location , new java.util.Date () ) ; if ( tracker . isValidLocationEvent ( event ) ) { feed . onLocationChanged ( event ) ; } processingLocation = false ; disconnect () ; } 
private void handleOnDestroyOne ( android.content.pm.ServiceInfo targetInfo ) { android.app.Service service = mNameService . get ( targetInfo.name ) ; if ( service != null ) { service . onDestroy () ; mNameService . remove ( targetInfo.name ) ; java.lang.Object token = findTokenByService ( service ) ; mTokenServices . remove ( token ) ; mServiceTaskIds . remove ( token ) ; } me.ele.amigo.compat.QueuedWorkCompat . waitToFinish () ; } 
public void loadCatalogDetailsFromFileIfRequired ( boolean forceReload ) { if ( forceReload ) mCatalogueDetails = null ; try { if ( ( mCatalogueDetails ) != null ) return; java.io.File catalogDetailsFile = getLocalCatalogDetailsFile () ; if ( ! ( catalogDetailsFile . exists () ) ) return; org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser () ; mCatalogueDetails = ( ( org.json.simple.JSONObject ) ( parser . parse ( new java.io.FileReader ( catalogDetailsFile ) ) ) ) ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } } 
@ java.lang.Override public void serialize ( com.facebook.presto.spi.SerializableNativeValue value , com.fasterxml.jackson.core.JsonGenerator generator , com.fasterxml.jackson.databind.SerializerProvider provider ) throws java.io.IOException { generator . writeStartObject () ; generator . writeStringField ( "type" , value . getType () . getName () ) ; generator . writeFieldName ( "value" ) ; if ( ( value . getValue () ) == null ) { generator . writeNull () ; } else { com.facebook.presto.spi.SerializableNativeValue.Serializer . writeValue ( value , generator ) ; } generator . writeEndObject () ; } 
private Ds3ClientHelpers.Job innerStartReadJob ( final java.util.List < com.spectralogic.ds3client.helpers.Ds3Object > objects , final com.spectralogic.ds3client.helpers.GetBulkJobSpectraS3Request getBulkJobSpectraS3Request , final com.spectralogic.ds3client.helpers.strategy.transferstrategy.TransferStrategyBuilder transferStrategyBuilder ) throws java.io.IOException { final com.spectralogic.ds3client.helpers.GetBulkJobSpectraS3Response getBulkJobSpectraS3Response = this . client . getBulkJobSpectraS3 ( getBulkJobSpectraS3Request ) ; final com.google.common.collect.ImmutableMultimap < java.lang.String , com.spectralogic.ds3client.models.common.Range > partialRanges = com.spectralogic.ds3client.helpers.util.PartialObjectHelpers . getPartialObjectsRanges ( objects ) ; final com.spectralogic.ds3client.helpers.MasterObjectList masterObjectList = getBulkJobSpectraS3Response . getResult () ; transferStrategyBuilder . withMasterObjectList ( masterObjectList ) . withRangesForBlobs ( com.spectralogic.ds3client.helpers.util.PartialObjectHelpers . mapRangesToBlob ( masterObjectList . getObjects () , partialRanges ) ) ; return new com.spectralogic.ds3client.helpers.ReadJobImpl ( transferStrategyBuilder ) ; } 
public void setMessageForMultiList ( @ android.support.annotation.StringRes int headline , @ android.support.annotation.StringRes int message , @ android.support.annotation.DrawableRes int icon ) { if ( ( ( mMultiListContainer ) != null ) && ( ( mMultiListMessage ) != null ) ) { mMultiListHeadline . setText ( headline ) ; mMultiListMessage . setText ( message ) ; mMultiListIcon . setImageResource ( icon ) ; mMultiListMessage . setVisibility ( View.VISIBLE ) ; mMultiListIcon . setVisibility ( View.VISIBLE ) ; mMultiListProgress . setVisibility ( View.GONE ) ; } } 
public void draw ( android.graphics.Canvas canvas ) { canvas . drawColor ( Color.BLACK ) ; if ( ! ( mSelfJet . isDead () ) ) { mSelfJet . draw ( canvas ) ; } for ( hacking.to.the.gate.Jet jet : mEnemyJets ) { jet . draw ( canvas ) ; } for ( hacking.to.the.gate.PowerUp p : mPowerUps ) { if ( p . isVisible () ) { p . draw ( canvas ) ; } } } 
public int countNodes ( hou.forwz.Leetcode.structure.TreeNode root ) { if ( root == null ) return 0 ; int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; if ( leftDeep == rightDeep ) { return ( ( int ) ( ( java.lang.Math . pow ( 2 , leftDeep ) ) + ( countNodes ( root.right ) ) ) ) ; } else return ( ( int ) ( java.lang.Math . pow ( 2 , rightDeep ) ) ) + ( countNodes ( root.left ) ) ; } 
public synchronized void incomingCar ( data.analytics.smart.traffic.model.movement.CardinalDirection from , data.analytics.smart.traffic.model.Car car ) { if ( light . isGreen ( from ) ) { java.lang.System.out . println ( "Its already green" ) ; } else { java.util.List < data.analytics.smart.traffic.model.Car > carList = waitinglist . get ( from ) ; carList . add ( car ) ; waitinglist . put ( from , carList ) ; java.lang.System.out . println ( ( ( "Car from " + from ) + "has to wait in line" ) ) ; } } 
public void checkTypes ( bantam.util.ClassTreeNode classTreeNode ) { this . classTreeNode = classTreeNode ; bantam.visitor.Class_ classASTNode = this . classTreeNode . getASTNode () ; this . fieldScope = ( this . classTreeNode . getVarSymbolTable () . getCurrScopeLevel () ) - 1 ; this . methodScope = ( this . classTreeNode . getMethodSymbolTable () . getCurrScopeLevel () ) - 1 ; classASTNode . accept ( this ) ; } 
public void onClick ( android.content.DialogInterface dialog , int id ) { java.lang.String userString = task . getText () . toString () ; erica.todolist2.ToDo taskThing = new erica.todolist2.ToDo ( userString , 0 ) ; al . set ( i , taskThing ) ; service . updateToDo ( taskThing ) ; a . notifyDataSetChanged () ; } 
private void generateMappingColumns ( java.util.Map < model.data.DataColumn , java.lang.String > mappingNewNameToOldColumns ) { for ( java.util.Map.Entry < model.data.DataColumn , java.lang.String > entry : mappingNewNameToOldColumns . entrySet () ) { model.data.DataColumn newColumn = new model.data.DataColumn ( entry . getValue () , null , entry . getKey () . getType () ) ; this . addColumn ( newColumn ) ; mappingColumns . put ( entry . getKey () , newColumn ) ; } } 
@ java.lang.Override public void update ( long songTime ) { setY ( ( ( GameScreen.BAR_POSITION ) + ( ( ( ( ( beatTimeMillis ) - songTime ) + ( GameScreen.visualOffsetMillis ) ) * ( GameScreen.HIT_OBJECT_DISTANCE ) ) / ( millisFor4Beats ) ) ) ) ; if ( ( songTime - ( beatTimeMillis ) ) > ( holdDurationMillis ) ) { BeatMap.hitFlagString = BeatMap.HITFLAGSTRINGS [ 4 ] ; onRelease () ; } } 
public void initialize () { song1 = Gdx.audio . newMusic ( Gdx.files . internal ( "NARC.mp3" ) ) ; song2 = Gdx.audio . newMusic ( Gdx.files . internal ( "Rose the Wraith.mp3" ) ) ; song3 = Gdx.audio . newMusic ( Gdx.files . internal ( "ABIIISMO - Machine Uprising.mp3" ) ) ; song1 . setVolume ( 0.2F ) ; song1 . setOnCompletionListener ( new com.badlogic.gdx.audio.Music.OnCompletionListener () { @ java.lang.Override public void onCompletion ( com.badlogic.gdx.audio.Music music ) { song1 . play () ; song3 . play () ; } } ) ; } 
public static java.lang.String getCurrentTitle ( android.content.Context context , boolean preparing ) { return context == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? context . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( context . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } 
public org.opendaylight.yangtools.concepts.CompositeObjectRegistration.CompositeObjectRegistrationBuilder < T > remove ( final org.opendaylight.yangtools.concepts.ObjectRegistration < ? super T > registration ) { if ( ! ( registration . getInstance () . equals ( instance ) ) ) { throw new java.lang.IllegalArgumentException ( "Instance must be same." ) ; } registrations . remove ( registration ) ; return this ; } 
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { if ( ( mGroups . get ( groupPosition ) ) != null ) mListener . onDeleteBpmClick ( mGroups . get ( groupPosition ) . children . get ( childPosition ) . getId () , groupPosition , childPosition ) ; return false ; } 
protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } return ( "/" + dataStore ) + context ; } 
public void add ( byte [] data , java.lang.String name , java.lang.String fileName , java.lang.String contentType ) { dataList . add ( this . border ) ; dataList . add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; dataList . add ( buildHeaders ( name , fileName , contentType ) ) ; dataList . add ( data ) ; dataList . add ( HttpHeaders.LINE_SEPARATOR_BYTES ) ; } 
public int deleteRecord ( libraryDatabaseUtility.model.DataSource source , long bookId ) throws java.sql.SQLException { int result = 0 ; java.sql.Connection connection = source . getConnection () ; java.sql.PreparedStatement statement = null ; statement = connection . prepareStatement ( libraryDatabaseUtility.repository.BookDAOImpl.DELETE_RECORD_SQL ) ; statement . setLong ( 1 , bookId ) ; result = statement . executeUpdate () ; return result ; } 
public void createLocalServer ( java.lang.String port ) { int iport = - 1 ; try { iport = java.lang.Integer . parseInt ( port ) ; localServer = server.ServerFactory . createServer ( iport ) ; localServer . startUp () ; this . connect ( "localhost" , ( "" + port ) ) ; } catch ( java.lang.NumberFormatException nfe ) { showFail ( loginScreen , "Please insert a real number at the Port-Field." ) ; } catch ( java.net.BindException e ) { showFail ( loginScreen , "Port is already in use, please enter another Port." ) ; } } 
@ java.lang.Override public void onMapReady ( com.google.android.gms.maps.GoogleMap googleMap ) { mMap = googleMap ; com.google.android.gms.maps.model.LatLng loyola = new com.google.android.gms.maps.model.LatLng ( 41.998 , ( - 87.659 ) ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( loyola , ( ( float ) ( 15.5 ) ) ) ) ; if ( checkPermissions () ) { setMyLocationEnabled () ; } } 
public static void printMatlabArray2D ( java.lang.Iterable < ? extends java.lang.Iterable < java.lang.Double > > ll , int elementsPerLine , java.io.PrintStream out ) { boolean first = true ; out . println ( "[" ) ; for ( java.lang.Iterable < java.lang.Double > l : ll ) { if ( first ) first = false ; else out . println ( ", " ) ; MatlabUtil . printMatlabArray ( l , elementsPerLine , out ) ; } out . println () ; out . println ( "]" ) ; } 
public void showSprint ( softwaremanagementtool.agile.Sprint sprint ) { if ( sprint != null ) { infoViewController . showSprint ( sprint ) ; sprintBlViewController . setAgilePrj ( agilePrj , agilePrj . getSprintBacklogList ( sprint ) ) ; prodOpenBlViewController . setAgilePrj ( agilePrj , agilePrj . getOpenProdBacklogList () ) ; backlogViewController . showSprint ( sprint ) ; reviewViewController . showSprint ( sprint ) ; retrospectViewController . showSprint ( sprint ) ; } } 
public java.util.List < com.github.bwsoft.iris.sample.FuelFigures.FuelFigure > getFuelFigures ( com.github.bwsoft.iris.message.GroupObject msgObj ) { figures . clear () ; com.github.bwsoft.iris.message.GroupObjectArray fuelFiguresGroup = msgObj . getGroupArray ( fuelFigures ) ; for ( int i = 0 ; i < ( fuelFiguresGroup . getNumOfGroups () ) ; i ++ ) { com.github.bwsoft.iris.message.GroupObject aFigureObj = fuelFiguresGroup . getGroupObject ( i ) ; com.github.bwsoft.iris.sample.FuelFigures.FuelFigure aFigure = new com.github.bwsoft.iris.sample.FuelFigures.FuelFigure () ; aFigure.speed = aFigureObj . getFloat ( speed ) ; aFigure.mpg = aFigureObj . getFloat ( mpg ) ; figures . add ( aFigure ) ; } return figures ; } 
public void addLast ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } if ( ( N ) == ( array.length ) ) resize ( ( ( array.length ) * 2 ) ) ; array [ last ] = item ; ( N ) ++ ; last = N ; } 
public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( savedInstanceState == null ) { mListJenkinsBuildInfoFragment = org.addhen.birudo.ui.fragment.ListJenkinsBuildInfoFragment . newInstance () ; getFragmentManager () . beginTransaction () . replace ( R.id.list_container , mListJenkinsBuildInfoFragment ) . commit () ; } } 
protected void processPath ( Q root ) { org.appsugar.bean.entity.QGenericIdEntity r = org.appsugar.bean.entity.QGenericIdEntity.genericIdEntity ; if ( java.util.Objects . isNull ( createdAt ) ) { createdAt = findPath ( root , r.createdAt . getMetadata () . getName () ) ; } if ( java.util.Objects . isNull ( updatedAt ) ) { updatedAt = findPath ( root , r.updatedAt . getMetadata () . getName () ) ; } } 
public long getMemoryAddress ( com.zms.zpc.emulator.PC pc ) { assert ( addressReg ) == null ; addressUseReg = false ; long address = calAddress ( pc , this . address ) ; if ( addressUseReg ) { address += com.zms.zpc.execute.NumberUtils . asSigned ( this . disp , this . dispWidth ) ; } else { address += this . disp ; } return getMemoryAddress ( pc , address ) ; } 
public semantic.Table lookupFunction ( java.lang.String name ) { if ( ( parent ) != null ) { parent . lookupFunction ( name ) ; } else { for ( semantic.Table t : parent.children ) { if ( t . getSymbol ( 0 ) . getName () . equals ( name ) ) return t ; } } return null ; } 
private java.lang.String removeSpaces ( java.lang.String s ) { java.lang.String answer = "" ; for ( int i = 0 ; i < ( s . length () ) ; i ++ ) if ( ( s . charAt ( i ) ) != ' ' ) answer += s . charAt ( i ) ; return answer ; } 
public void setScreen ( View.YatzyScreen screen ) { this . setVisible ( false ) ; this . wrapper . removeAll () ; this . wrapper . add ( screen , java.awt.BorderLayout.CENTER ) ; this . fireActionPerformed ( new java.awt.event.ActionEvent ( this , java.awt.event.ActionEvent.ACTION_PERFORMED , "Change" ) ) ; } 
@ java.lang.Override public void done ( java.util.List < com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser > userList , java.lang.Exception e ) { if ( ( null == e ) && ( null != userList ) ) { for ( com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser user : userList ) { com.avoscloud.leanchatlib.utils.ThirdPartDataCache . getInstance () . cacheUser ( user.userId , user ) ; } } } 
@ org.jetbrains.annotations.Nullable public java.lang.String getCurrentElementType ( com.intellij.psi.PsiElement currentElement ) { while ( ( currentElement instanceof com.intellij.psi.PsiWhiteSpace ) || ( currentElement instanceof com.intellij.psi.PsiComment ) ) { currentElement = currentElement . getPrevSibling () ; } if ( currentElement != null ) { return com.perl5.lang.perl.psi.utils.PerlPsiUtil . getPerlExpressionType ( currentElement ) ; } return null ; } 
public void enterResult ( ceylon.tool.converter.java2ceylon.ResultContext ctx ) { try { enterresult = true ; if ( ( ( ( ceylon.tool.converter.java2ceylon.MethodHeaderContext ) ( ctx . getParent () ) ) . typeParameters () ) == null ) { if ( ctx . getChild ( 0 ) . toString () . equals ( "void" ) ) bw . write ( ( ( ctx . getChild ( 0 ) . toString () ) + " " ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public com.marcuslee.fypdemo.obj.Shot findShot ( int frame ) { for ( com.marcuslee.fypdemo.obj.Shot shot : com.marcuslee.fypdemo.ObjectHolder.Shots ) { if ( ( ( shot . getStartFrame () ) <= frame ) && ( ( shot . getEndFrame () ) > frame ) ) { return shot ; } } return null ; } 
@ cucumber.api.java.After public void teardown ( final cucumber.api.Scenario scenario ) { if ( ! ( featureState . getFailed () ) ) { au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS . takeScreenshot ( ( " " + ( scenario . getName () ) ) , featureState ) ; } featureState . setFailed ( scenario . isFailed () ) ; final boolean clearDriver = java.lang.Boolean . parseBoolean ( au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS . getProperty ( Constants.NEW_BROWSER_PER_SCENARIO ) ) ; if ( clearDriver ) { State.THREAD_DESIRED_CAPABILITY_MAP . clearWebDriverForThread ( true ) ; } } 
public static org.alien4cloud.tosca.model.definitions.PropertyDefinition buildPropDef ( java.lang.String type , org.alien4cloud.tosca.model.definitions.PropertyDefinition entrySchema , boolean required ) { org.alien4cloud.tosca.model.definitions.PropertyDefinition propertyDefinition = new org.alien4cloud.tosca.model.definitions.PropertyDefinition () ; propertyDefinition . setType ( type ) ; propertyDefinition . setRequired ( required ) ; propertyDefinition . setPassword ( false ) ; propertyDefinition . setEntrySchema ( entrySchema ) ; return propertyDefinition ; } 
public void set ( java.lang.String path , java.lang.Object value , java.lang.String comment ) { if ( ! ( this . config . contains ( path ) ) ) { this . config . set ( ( ( ( manager . getPluginName () ) + "_COMMENT_" ) + ( comments ) ) , comment ) ; ( comments ) ++ ; } this . config . set ( path , value ) ; } 
public com.intel.genomicsdb.GenomicsDBConf setHostFile ( java.lang.String path ) throws java.io.FileNotFoundException { set ( com.intel.genomicsdb.GenomicsDBConf.MPIHOSTFILE , path ) ; java.util.Scanner scanner = new java.util.Scanner ( new java.io.FileInputStream ( path ) ) ; while ( scanner . hasNextLine () ) { java.lang.String host = scanner . nextLine () ; hosts . add ( host ) ; } return this ; } 
protected void robaRandomSleep ( int minSleepSecond , int maxSleepSecond ) { java.util.Random r = new java.util.Random () ; int sleepTime = ( minSleepSecond + ( r . nextInt ( ( maxSleepSecond - minSleepSecond ) ) ) ) * 1000 ; solo . sleep ( sleepTime ) ; android.util.Log . d ( com.crazyroba.RobaActivityInstrumentationTestCase2.TAG , ( ( "Roba random sleep " + ( sleepTime / 1000 ) ) + " s" ) ) ; } 
private org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder createIpProtocolMatch ( org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder matchBuilder , short ipProtocol ) { org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder ipMmatch = new org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder () ; if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ; } else { ipMmatch . setIpProtocol ( ipProtocol ) ; } matchBuilder . setIpMatch ( ipMmatch . build () ) ; return matchBuilder ; } 
@ java.lang.Override public void onActivityCreated ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; activity = ( ( codemagnus.com.dealokav2.BaseTabActivity ) ( getActivity () ) ) ; if ( ( activity . getSwitchCompat () ) != null ) activity . getSwitchCompat () . setVisibility ( View.VISIBLE ) ; initPhoneDetails () ; getUserLastKnownLocation () ; activity . getToolBar () . setTitle ( "Tower List" ) ; } 
void add ( double confidence , boolean correct ) { for ( int i = 0 ; i < ( org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS.length ) ; i ++ ) { if ( confidence >= ( org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS [ i ] ) ) { falsePositive [ i ] += ( correct ) ? 0.0 : 1.0 ; truePositive [ i ] += ( correct ) ? 1.0 : 0.0 ; } } } 
public void initialize ( org.apache.cordova.CordovaInterface cordova , org.apache.cordova.CordovaWebView webView ) { super . initialize ( cordova , webView ) ; final android.content.Context context = this . cordova . getActivity () . getApplicationContext () ; com.gae.scaffolder.plugin.FCMPlugin.gWebView = webView ; android.util.Log . d ( com.gae.scaffolder.plugin.FCMPlugin.TAG , "==> FCMPlugin initialize" ) ; mFirebaseAnalytics = com.google.firebase.analytics.FirebaseAnalytics . getInstance ( context ) ; com.google.firebase.messaging.FirebaseMessaging . getInstance () . subscribeToTopic ( "android" ) ; com.google.firebase.messaging.FirebaseMessaging . getInstance () . subscribeToTopic ( "all" ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "" , required = false ) java.lang.String loggedIn ) { java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; if ( ( loggedIn . isEmpty () ) || ( loggedIn . equals ( null ) ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( ( userLogged . equals ( null ) ) || ( userLogged . isEmpty () ) ) { userLogged = loggedIn ; } return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } 
public synchronized void fail ( java.lang.Throwable error ) { if ( ( pixelWidth ) == 0 ) pixelWidth = 50 ; if ( ( pixelHeight ) == 0 ) pixelHeight = 50 ; setBitmap ( createErrorBitmap ( pixelWidth , pixelHeight ) ) ; ( ( react.RPromise < playn.core.Image > ) ( state ) ) . fail ( error ) ; } 
public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } } 
public boolean deposit ( java.lang.String userId , int value ) { if ( value < 0 ) return false ; RWLock . writeLock () . lock () ; try { int balance = getOrZero ( userId ) ; balances . put ( userId , ( balance + value ) ) ; return true ; } finally { writeLog ( "DEPOSIT" , userId , "" , value ) ; RWLock . writeLock () . unlock () ; } } 
@ softgroup.ua.rest.RequestMapping ( path = "/automats/byId/{automatId}" , method = RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_UTF8_VALUE ) public softgroup.ua.api.AutomatsListReply getAutomatById ( @ softgroup.ua.rest.PathVariable java.lang.Integer automatId ) { softgroup.ua.api.AutomatsListReply reply = new softgroup.ua.api.AutomatsListReply () ; try { softgroup.ua.api.Automat automat = automatMapper . fromInternal ( automatService . getAutomatById ( automatId ) ) ; gameEngine . fillSlots ( automat ) ; reply.automats . add ( automat ) ; } catch ( softgroup.ua.service.exception.ParsingException e ) { e . printStackTrace () ; softgroup.ua.rest.AutomatController.logger . error ( e . toString () , e ) ; } return reply ; } 
private void findOneHourTimerDelay ( java.lang.String [] timeParts ) { int secNum = java.lang.Integer . parseInt ( timeParts [ 2 ] ) ; int minNum = ( java.lang.Integer . parseInt ( timeParts [ 1 ] ) ) % 10 ; oneHourTimerDelay = ( ( 60 - secNum ) + ( 60 * ( 60 - minNum ) ) ) * 1000 ; } 
public boolean clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return true ; } } return false ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ! ( Editor . isScenerio () ) ) { java.lang.String file = browseFile () ; if ( file != null ) { Editor.currentFile = file ; javax.swing.JOptionPane . showMessageDialog ( null , ( ( "Scenerio file '" + ( Editor.currentFile ) ) + "' is selected" ) ) ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "No file selected" ) ; } } else { javax.swing.JOptionPane . showMessageDialog ( null , "Scenerio file already exists" ) ; } } 
public java.lang.String getNodeName ( final com.hazelcast.core.Member iMember ) { if ( iMember == null ) return "?" ; if ( nodeUuid . equals ( iMember . getUuid () ) ) return nodeName ; final java.lang.String name = activeNodesNamesByMemberId . get ( iMember . getUuid () ) ; if ( name != null ) return name ; final com.orientechnologies.orient.core.record.impl.ODocument cfg = getNodeConfigurationByUuid ( iMember . getUuid () , true ) ; if ( cfg != null ) return cfg . field ( "name" ) ; return "ext:" + ( iMember . getUuid () ) ; } 
private void handleLogout ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response , javax.servlet.http.Cookie myCookie ) throws java.io.IOException , javax.servlet.ServletException { if ( myCookie != null ) { myCookie . setMaxAge ( 0 ) ; com.servlet.EnterServlet.sessionTable . remove ( com.util.SessionUtil . getSessionId ( myCookie . getValue () ) ) ; response . addCookie ( myCookie ) ; } javax.servlet.RequestDispatcher dispatcher = request . getRequestDispatcher ( "home.jsp" ) ; dispatcher . forward ( request , response ) ; } 
@ javafx.fxml.FXML private void handleMouseHover ( javafx.scene.input.MouseEvent event ) { selector . setVisible ( true ) ; selector . setCenterX ( event . getSceneX () ) ; selector . setCenterY ( event . getSceneY () ) ; xInput . setText ( java.lang.Integer . toString ( ( ( int ) ( event . getSceneX () ) ) ) ) ; yInput . setText ( java.lang.Integer . toString ( ( ( int ) ( event . getSceneY () ) ) ) ) ; if ( grid . getCurrPlayer () . isDone () ) selector . setVisible ( false ) ; } 
@ java.lang.SafeVarargs public static < T , V > java.util.Comparator < T > propertyComparator ( java.lang.String propertyName , V . . . propertyValues ) { org.apache.commons.lang3.Validate . notBlank ( propertyName , "propertyName can't be blank!" ) ; org.apache.commons.lang3.Validate . notNull ( propertyValues , "propertyValues can't be null!" ) ; return com.feilong.core.util.comparator.BeanComparatorUtil . propertyComparator ( propertyName , com.feilong.core.bean.ConvertUtil . toList ( propertyValues ) ) ; } 
public static void shutLED ( int number ) { de.adorsys.quiz.helper.GpioHelper.pin17 . low () ; if ( number > 1 ) { de.adorsys.quiz.helper.GpioHelper.pin18 . low () ; } if ( number > 2 ) { de.adorsys.quiz.helper.GpioHelper.pin27 . low () ; } new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException ex ) {} finally { de.adorsys.quiz.helper.GpioHelper . restart () ; } } } ) . start () ; } 
public static boolean isCollection ( final org.eclipse.ocl.pivot.PropertyCallExp e ) { final java.lang.String s = fr.emn.atlanmod.uml.casestudy.rewrite.OCL . gen ( e . getType () ) ; if ( ( ( com.google.common.base.Objects . equal ( s , "Set" ) ) || ( com.google.common.base.Objects . equal ( s , "OrderedSet" ) ) ) || ( com.google.common.base.Objects . equal ( s , "Sequence" ) ) ) { return true ; } else { return false ; } } 
private static void runAnalysis ( java.lang.String wikiLink ) { java.lang.String articleName = comphuman.task2.distanceReading.RunnerHelper . extractArticleName ( wikiLink ) ; java.lang.String linkToDiscussion = comphuman.task2.distanceReading.RunnerHelper . extractDiscussionLink ( wikiLink ) ; java.lang.String linkToHisDiscussion = comphuman.task2.distanceReading.RunnerHelper . extractHisDiscussionLink ( linkToDiscussion ) ; comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer articleAna = new comphuman.task2.distanceReading.GermanWikiArticleDiscussionAnalyzer ( linkToDiscussion , articleName ) ; articleAna . runAnalyses () ; articleAna . visTheResults () ; comphuman.task2.distanceReading.GermanWikiArticleDiscussionHistoryAnalyzer hisAna = new comphuman.task2.distanceReading.GermanWikiArticleDiscussionHistoryAnalyzer ( linkToHisDiscussion , articleName ) ; } 
public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( ( null != column ) && ( ( column . getValue () ) != null ) ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else { value = column . toString () ; } } return value ; } 
public void markUsed ( java.lang.String tupleId ) { int n = reservedQueue . size () ; while ( n > 0 ) { com.dipaan.bgcolor.Tuple tuple = reservedQueue . peek () ; if ( tuple . getId () . equals ( tupleId ) ) { reservedQueue . remove ( tuple ) ; } else if ( tuple . isExpired () ) { reservedQueue . remove ( tuple ) ; availableQueue . offer ( tuple ) ; } n -- ; } } 
@ java.lang.Override public org.openntf.domino.NotesCalendar getCalendar ( final org.openntf.domino.Database db ) { try { return fromLotus ( getDelegate () . getCalendar ( toLotus ( db ) ) , NotesCalendar.SCHEMA , this ) ; } catch ( lotus.domino.NotesException e ) { org.openntf.domino.utils.DominoUtils . handleException ( e , this ) ; return null ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( final android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.variantIos : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.ios.IosEmojiProvider () ) ; recreate () ; return true ; case R.id.variantEmojiOne : com.vanniktech.emoji.EmojiManager . install ( new com.vanniktech.emoji.one.EmojiOneProvider () ) ; recreate () ; return true ; default: return super . onOptionsItemSelected ( item ) ; } } 
public boolean equals ( java.lang.Object o ) { if ( ! ( o instanceof simfinder.FieldValue ) ) { return false ; } if ( ! ( header . equals ( ( ( simfinder.FieldValue ) ( o ) ) . getHeader () ) ) ) { return false ; } if ( ! ( value . equals ( ( ( simfinder.FieldValue ) ( o ) ) . getValue () ) ) ) { return false ; } return true ; } 
public boolean addEvent ( octu.core.Event evt ) { for ( int i = 0 ; i < ( events . size () ) ; i ++ ) { if ( events . get ( i ) . getName () . equals ( evt . getName () ) ) { return false ; } } events . add ( evt ) ; return true ; } 
@ java.lang.Override public void sendOrderedBroadcast ( final android.content.Intent intent , final java.lang.String receiverPermission , final android.content.BroadcastReceiver resultReceiver , final android.os.Handler scheduler , final int initialCode , final java.lang.String initialData , final android.os.Bundle initialExtras ) { mCondom . proceedBroadcast ( intent , new com.oasisfeng.condom.CondomCore.WrappedProcedure () { @ java.lang.Override public void run () { com.oasisfeng.condom.CondomContext . super . sendOrderedBroadcast ( intent , receiverPermission , resultReceiver , scheduler , initialCode , initialData , initialExtras ) ; } } ) ; } 
public static java.lang.CharSequence _text ( java.lang.CharSequence icon , java.lang.CharSequence text ) { final java.lang.StringBuilder s = new java.lang.StringBuilder () ; if ( ( icon != null ) && ( ( icon . length () ) > 0 ) ) { s . append ( icon ) . append ( "  " ) ; } return s . append ( text ) ; } 
private edu.up.cs301.blokus.Blok copySelectedBoardBlok ( edu.up.cs301.blokus.Blok origSelectedBoardBlok ) { if ( origSelectedBoardBlok == null ) { return null ; } int row ; int col ; int color ; row = origSelectedBoardBlok . getRow () ; col = origSelectedBoardBlok . getColumn () ; color = origSelectedBoardBlok . getColor () ; edu.up.cs301.blokus.Blok newBlok = new edu.up.cs301.blokus.Blok ( row , col , color ) ; return newBlok ; } 
static java.util.Collection < java.lang.String > findIssueKeys ( java.lang.String input ) { java.util.Collection < java.lang.String > ids = new java.util.ArrayList <> () ; java.util.regex.Matcher m = io.jenkins.blueocean.blueocean_github_pipeline.GithubIssue.PATTERN . matcher ( input ) ; while ( m . find () ) { if ( ( m . groupCount () ) >= 1 ) { java.lang.String issue = m . group ( 1 ) ; ids . add ( issue . substring ( 1 , issue . length () ) ) ; } } return ids ; } 
public static int bytesToInt ( java.nio.ByteOrder order , byte . . . bytes ) { if ( ( bytes.length ) != 4 ) { throw new java.lang.IllegalArgumentException ( "Bytes count must be 4" ) ; } java.nio.ByteBuffer buffer = java.nio.ByteBuffer . wrap ( bytes , 0 , 4 ) ; buffer . order ( order ) ; return buffer . getInt () ; } 
private void pollGraphFromStack ( boolean updateDb ) { final java.util.Deque < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph > stack = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack . get () ; stack . remove ( this ) ; final com.tinkerpop.blueprints.impls.orient.OrientBaseGraph prevGraph = stack . peek () ; if ( prevGraph != null ) { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph . set ( prevGraph ) ; prevGraph . makeActive () ; } else { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph . set ( null ) ; if ( updateDb ) ODatabaseRecordThreadLocal.INSTANCE . set ( null ) ; } } 
public boolean isWallValid ( holdup.Player player , int xPos , int yPos , holdup.Orientation orientation ) { if ( ! ( isExistingWallPlaced ( xPos , yPos , orientation ) ) ) { if ( playerHasZeroWalls ( player ) ) { return false ; } else { return ! ( isWallBlockingPlayerPath ( player , xPos , yPos , orientation ) ) ; } } else { return false ; } } 
public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { root . removeNode ( v , null ) ; root = null ; } else { root . removeNode ( v , null ) ; } } if ( ( ( size ) - 1 ) < 0 ) { size = 0 ; } else { size -= 1 ; } } 
public boolean deleteFromUndecVertices ( core.MyVertex v ) { if ( ! ( this . UndecLabels . contains ( v ) ) ) { throw new java.lang.IllegalArgumentException ( "This vertex is not in the undec hashset" ) ; } else { NotLabelledVertices . add ( v ) ; v . setLabel ( "NONE" ) ; UndecLabels . remove ( v ) ; NotLabelledVertices . remove ( v ) ; } return true ; } 
public java.lang.Object getValueOfProperty ( java.lang.String propertyName , java.lang.Object object ) { java.lang.String name = ( this . caseSensitive ) ? propertyName : propertyName . toLowerCase () ; java.lang.reflect.Field field = this . fields . get ( name ) ; try { return field . get ( object ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.sql2o.Sql2oException ( ( ( ( "could not read value of field " + ( field . getName () ) ) + " on class " ) + ( object . getClass () . toString () ) ) , e ) ; } } 
private void LeaveGameMouseClicked ( java.awt.event.MouseEvent evt ) { comm . msgSender ( ( "E" + ( ( char ) ( ( Pexeso_client.CurrentGame . getID () ) + '0' ) ) ) ) ; Pexeso_client.CurrentGame = null ; comm . setExit ( true ) ; LobbyStatus . setText ( "You left your current game" ) ; LobbyStatus . setVisible ( true ) ; panel2 . setVisible ( true ) ; panel3 . setVisible ( false ) ; } 
public void selectedButtonStyleLower ( javafx.scene.control.Button button ) { carInsuranceButton . setId ( "sideToolbarButton" ) ; boatInsuranceButton . setId ( "sideToolbarButton" ) ; homeInsuranceButton . setId ( "sideToolbarButton" ) ; holidayHomeInsuranceButton . setId ( "sideToolbarButton" ) ; travelInsuranceButton . setId ( "sideToolbarButton" ) ; button . setId ( "sideToolbarButtonSelected" ) ; } 
public int modifyField ( java.lang.String field , java.lang.String [] value , java.lang.Long id ) { if ( ( field != null ) && ( value != null ) ) { try { it.ispw.efco.nottitranquille.controller.ManageLocation . modifyField ( field , value , id ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return 1 ; } return 0 ; } 
protected java.lang.Object visitContainer ( net.objectof.actof.porter.visitor.IPorterContext context , net.objectof.model.Id < ? > parentId ) { net.objectof.model.Resource < net.objectof.aggr.Aggregate < java.lang.Object , java.lang.Object > > toParent = getToParent ( parentId ) ; net.objectof.actof.porter.visitor.IPorterContext ported = transform ( context ) ; if ( ported . isDropped () ) { return null ; } if ( toParent != null ) { toParent . value () . set ( net.objectof.actof.porter.IPorterUtil . unqualify ( ported . getKey () , toParent ) , ported . getValue () ) ; } return context . getValue () ; } 
private org.openbaton.nfvo.core.api.VNFCInstance getVNFCI ( org.openbaton.nfvo.core.api.VirtualDeploymentUnit virtualDeploymentUnit , java.lang.String idVNFCI ) throws org.openbaton.nfvo.core.api.NotFoundException { for ( org.openbaton.nfvo.core.api.VNFCInstance vnfcInstance : virtualDeploymentUnit . getVnfc_instance () ) if ( ( idVNFCI == null ) || ( idVNFCI . equals ( vnfcInstance . getId () ) ) ) return vnfcInstance ; throw new org.openbaton.nfvo.core.api.NotFoundException ( ( ( "VNFCInstance with id " + idVNFCI ) + " was not found" ) ) ; } 
public ru.semiot.platform.apigateway.utils.Credentials addUser ( int id , java.lang.String login , java.lang.String password , java.lang.String role ) { try { ru.semiot.platform.apigateway.utils.Credentials c = new ru.semiot.platform.apigateway.utils.Credentials ( id , login , password , role ) ; em . merge ( c ) ; return c ; } catch ( java.lang.Exception ex ) { return null ; } } 
private cluedo.Hud.STATUS rollAndMove ( cluedo.Player player , cluedo.Hud.STATUS status , java.util.Scanner sc ) { java.lang.System.out . println ( "/n" ) ; status = cluedo.Hud.STATUS.MOVE_PIECE ; displayBoard ( player , status ) ; movesRemaining = rollDice () ; java.lang.System.out . println ( ( "\nYou rolled a " + ( movesRemaining ) ) ) ; while ( ( movesRemaining ) != 0 ) { movePiece ( player , status , sc ) ; ( movesRemaining ) -- ; displayBoard ( player , status ) ; } return status ; } 
public static int getColumnsNumberFromDimension ( java.lang.String dimension ) { if ( org.apache.commons.lang.StringUtils . isEmpty ( dimension ) ) { return 0 ; } java.lang.String [] parts = org.apache.commons.lang.StringUtils . split ( dimension , ':' ) ; if ( ( parts.length ) < 2 ) { return 0 ; } java.lang.String secondPart = parts [ 1 ] ; return ( org.talend.dataprep.schema.xls.XlsUtils . getColumnsNumberLastCell ( secondPart ) ) + 1 ; } 
@ java.lang.Override public void onBindViewHolder ( final com.cv4j.app.adapter.GridViewFilterAdapter.ViewHolder holder , int position ) { java.lang.String filterName = mList . get ( position ) ; if ( position == 0 ) { holder.image . setImageBitmap ( mBitmap ) ; } else { if ( com.safframwork.tony.common.utils.Preconditions . isNotBlank ( filterName ) ) { com.cv4j.core.filters.CommonFilter filter = ( ( com.cv4j.core.filters.CommonFilter ) ( getFilter ( filterName ) ) ) ; com.cv4j.rxjava.RxImageData . bitmap ( mBitmap ) . addFilter ( filter ) . into ( holder.image ) ; } } holder.text . setText ( filterName ) ; } 
private static com.whippy.tas.premier.beans.Stats setTacklingStat ( java.util.List < com.whippy.tas.premier.beans.Position > positions , java.util.Random rand , com.whippy.tas.premier.beans.Stats stats ) { if ( positions . contains ( Position.DEFENSE ) ) { stats . setTackling ( com.whippy.tas.premier.util.Utils . getGaussian ( 80 , 10 ) ) ; } else if ( positions . contains ( Position.MIDFIELD ) ) { stats . setTackling ( com.whippy.tas.premier.util.Utils . getGaussian ( 60 , 20 ) ) ; } else { stats . setTackling ( com.whippy.tas.premier.util.Utils . getGaussian ( 40 , 40 ) ) ; } return stats ; } 
public void purchaseMultiple ( int index , int quantity , ver0.PlayerActor character ) { ver0.Item [] itemSet = ver0.Item . getAllItems () ; if ( character . canBuyItems ( index , quantity ) ) { if ( character . buyItems ( index , quantity ) ) { java.lang.System.out . println ( ( ( ( "Purchase successful! You have bought" + quantity ) + " " ) + ( itemSet [ index ] . getName () ) ) ) ; this . m_inventory [ index ] -= quantity ; } } else { java.lang.System.out . println ( "Sorry, you don't have enough money!" ) ; } } 
@ javafx.fxml.FXML private void homeScreen ( javafx.event.ActionEvent event ) { javafx.scene.control.Alert confirm = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.CONFIRMATION , "Are you sure you want to disconnect ? You won't be able to rejoin the game." , javafx.scene.control.ButtonType.YES , javafx.scene.control.ButtonType.NO ) ; confirm . setHeaderText ( "Disconnect" ) ; java.util.Optional < javafx.scene.control.ButtonType > result = confirm . showAndWait () ; if ( ( result . isPresent () ) && ( result . get () . equals ( javafx.scene.control.ButtonType.YES ) ) ) { if ( client . isHostClient () ) { client . disconnect () ; tdb.TheDrawingBoard . disconnectMultiplayerServer () ; } else { client . disconnect () ; } } } 
public static void showDialog ( android.content.Context context , int title , int message , int positiveMsg , int negativeMsg , android.content.DialogInterface.OnClickListener okListener ) { com.shuruta.sergey.ftpclient.ui.DialogFactory . showDialog ( context , context . getString ( title ) , context . getString ( message ) , positiveMsg , negativeMsg , okListener , new android.content.DialogInterface.OnClickListener () { public void onClick ( android.content.DialogInterface dialog , int id ) { dialog . dismiss () ; } } ) ; } 
public static tw.kewang.cwb.pretty.FutureWeatherByTown getFutureWeatherByTown ( tw.kewang.cwb.Geocode geocode , float afterHours ) { java.util.Date date = new java.util.Date ( ( ( java.lang.System . currentTimeMillis () ) + ( ( long ) ( ( tw.kewang.cwb.utils.Constants.ONE_HOUR ) * afterHours ) ) ) ) ; tw.kewang.cwb.Cwb.LOG . debug ( "getFutureWeatherByTown: {}, {}" , geocode , date . toString () ) ; return tw.kewang.cwb.Cwb . getFutureWeatherByTown ( geocode , date ) ; } 
public static javax.swing.JPanel createLabeledTextBox ( java.lang.String label , int length ) { javax.swing.JPanel labeledTextBox = new javax.swing.JPanel () ; javax.swing.JLabel l = new javax.swing.JLabel ( label ) ; labeledTextBox . add ( l ) ; javax.swing.JTextField text = new javax.swing.JTextField ( length ) ; labeledTextBox . add ( text ) ; return labeledTextBox ; } 
@ java.lang.Override public java.lang.Boolean apply ( final com.intellij.openapi.roots.SourceFolder it ) { boolean _and = false ; boolean _isTestSource = it . isTestSource () ; if ( ! _isTestSource ) { _and = false ; } else { com.intellij.openapi.vfs.VirtualFile _file = it . getFile () ; boolean _exists = false ; if ( _file != null ) { _exists = _file . exists () ; } _and = _exists ; } return java.lang.Boolean . valueOf ( _and ) ; } 
@ java.lang.Override public boolean add ( final T t ) { if ( ( size ) == 0 ) { first = new LinkedList.Item <> ( t , null , null ) ; } else if ( ( size ) == 1 ) { first.next = new LinkedList.Item <> ( t , first , null ) ; last = first.next ; } else { last.next = new LinkedList.Item <> ( t , last , null ) ; last = last.next ; } ( size ) ++ ; return true ; } 
protected final java.net.Socket getRootSocket ( java.lang.Object target ) { if ( target instanceof com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } } return null ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.util.ArrayList < java.lang.String > oldReviews = new java.util.ArrayList <> () ; for ( com.google.firebase.database.DataSnapshot child : dataSnapshot . getChildren () ) { java.lang.String oldSearchTerm = child . getValue () . toString () ; oldReviews . add ( oldSearchTerm ) ; } this . reviewID = ( profile ) + ( oldReviews . size () ) ; } 
private boolean maskHasPortGroup ( com.emc.storageos.db.client.model.ExportMask mask , java.net.URI portGroup ) { boolean result = false ; if ( ( portGroup == null ) || ( ( portGroup != null ) && ( portGroup . equals ( mask . getPortGroup () ) ) ) ) { result = true ; } return result ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object o ) { if ( o == ( this ) ) return true ; if ( ! ( super . equals ( o ) ) ) return false ; final com.helger.photon.core.ajax.response.AjaxHtmlResponse rhs = ( ( com.helger.photon.core.ajax.response.AjaxHtmlResponse ) ( o ) ) ; return ( com.helger.commons.equals.EqualsHelper . equals ( m_sErrorMessage , rhs.m_sErrorMessage ) ) && ( m_aSuccessValue . equals ( rhs.m_aSuccessValue ) ) ; } 
private void parseArrayMetadata ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { com.fasterxml.jackson.core.JsonToken value = jp . nextToken () ; while ( value != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { if ( value == ( com.fasterxml.jackson.core.JsonToken.START_OBJECT ) ) { parseObjectMetadata ( jp ) ; } else if ( value == ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) { parseArrayMetadata ( jp ) ; } value = jp . nextToken () ; } } 
@ java.lang.Override public void onDismiss ( com.example.reativos.oscar.AddParam myDialogFragment ) { java.lang.String command_type = dataStore . getString ( "type" ) ; int command_param = dataStore . getInt ( "param" ) ; if ( ( command_type != null ) && ( ! ( command_type . isEmpty () ) ) ) { com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command ( command_type , command_param ) ; commandLists . get ( currentTabTag ) . add ( newCommand ) ; adapters . get ( currentTabTag ) . notifyDataSetChanged () ; } } 
public void startRecord ( android.view.View v ) { if ( ! ( mBound ) ) return; android.os.Bundle b = new android.os.Bundle () ; java.lang.String filePath = ( ( m_chosenDir ) + ( java.io.File.separator ) ) + ( hookString ) ; b . putString ( "str1" , filePath ) ; android.os.Message msg = android.os.Message . obtain ( null , 1 ) ; msg . setData ( b ) ; try { mService . send ( msg ) ; } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } } 
private void addSharedLink ( models.SharedLink link , boolean newActivity ) { if ( ! ( this . sharedLinks . contains ( link ) ) ) { link.member = this ; link.ordernum = this . sharedLinks . size () ; this . sharedLinks . add ( link ) ; if ( newActivity && ( ( this . id ) != null ) ) { link . save () ; new models.SharedLinkActivity ( link ) . save () ; } } } 
public static javax.el.ValueExpression createValueExpression ( final java.lang.String expression ) { final javax.faces.context.FacesContext facesContext = org.jbromo.webapp.jsf.cdi.CDIFacesUtil . getFacesContext () ; final javax.faces.application.Application app = facesContext . getApplication () ; final javax.el.ExpressionFactory elFactory = app . getExpressionFactory () ; final javax.el.ELContext elContext = facesContext . getELContext () ; return elFactory . createValueExpression ( elContext , expression , java.lang.Object . class ) ; } 
public void onItemSelected ( android.widget.AdapterView < ? > Spinner_D2_Adapter_View , android.view.View v , int position , long row ) { Spinner_D2_Choice = Spinner_D2_Adapter_View . getItemAtPosition ( position ) . toString () ; if ( ( ( ( ( Spinner_A1_Choice ) != null ) && ( ( Spinner_A2_Choice ) != null ) ) && ( ( Spinner_D1_Choice ) != null ) ) && ( ( Spinner_D2_Choice ) != null ) ) { setPaths ( Spinner_A1_Choice , Spinner_A2_Choice , Spinner_D1_Choice , Spinner_D2_Choice ) ; onDraw ( tempCanvas ) ; } findViewById ( R.id.map ) . invalidate () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String username = ( ( android.widget.EditText ) ( findViewById ( R.id.username ) ) ) . getText () . toString () ; android.content.Intent mIntent ; switch ( v . getId () ) { case R.id.loginButton : mIntent = new android.content.Intent ( this , com.myos.myos.Salon . class ) ; mIntent . putExtra ( "username" , username ) ; startActivity ( mIntent ) ; break; case R.id.signupButton : break; default: break; } } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { db . execSQL ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableName ) ) + " (" ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColValue ) ) + " VARCHAR(255), " ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColType ) ) + " VARCHAR(255) PRIMARY KEY UNIQUE)" ) ) ; db . execSQL ( ( "CREATE TABLE `blacklist` (" + ( ( ( ( ( ( ( ( "  `id` INTEGER PRIMARY KEY AUTOINCREMENT," + "  `scientificName` varchar(255) NOT NULL," ) + "  `navn` varchar(255) NOT NULL," ) + "  `risiko` varchar(255) NOT NULL," ) + "  `taxonID` int(11) NOT NULL," ) + "  `canEat` tinyint(1) NOT NULL DEFAULT '0'," ) + "  `family` varchar(255) NOT NULL," ) + "  `image` int(11) NOT NULL" ) + ")" ) ) ) ; } 
public static java.lang.reflect.Field getFiledNameByMethod ( java.lang.Class clazz , java.lang.reflect.Method method ) { java.lang.reflect.Field [] fields = indi.yume.tools.autosharedpref.util.ReflectUtil . getDeclaredFields ( clazz ) ; java.lang.reflect.Field field = null ; for ( java.lang.reflect.Field f : fields ) if ( ( f . getAnnotation ( indi.yume.tools.autosharedpref.Ignore . class ) ) == null ) if ( indi.yume.tools.autosharedpref.util.ReflectUtil . toSetter ( f . getName () ) . equals ( method . getName () ) ) field = f ; return field ; } 
@ java.lang.Override public void reduce ( org.apache.hadoop.io.Text key , java.lang.Iterable < org.apache.hadoop.io.BooleanWritable > values , com.capstone.maven.mostontimeairlines.Context context ) { summaryMap . putIfAbsent ( key . toString () , new com.capstone.maven.mostontimeairlines.OntimeSummaryWritable () ) ; com.capstone.maven.mostontimeairlines.OntimeSummaryWritable summary = summaryMap . get ( key . toString () ) ; for ( org.apache.hadoop.io.BooleanWritable val : values ) { if ( val . get () ) { summary . incrementOntime () ; } else { summary . incrementNotOntime () ; } } summaryMap . put ( key . toString () , summary ) ; } 
public static void main ( java.lang.String [] arguments ) throws java.lang.Exception { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } 
public int myAtoi ( java.lang.String str ) { if ( null == str ) { str = "" ; } long ret = atoi ( str . trim () ) ; if ( ret > ( java.lang.Integer.MAX_VALUE ) ) { ret = java.lang.Integer.MAX_VALUE ; } else if ( ret < ( java.lang.Integer.MIN_VALUE ) ) { ret = java.lang.Integer.MIN_VALUE ; } else { ret = ( ( int ) ( ret ) ) ; } return ( ( int ) ( ret ) ) ; } 
protected void goToMain () { zj.remote.baselibrary.util.PreferenceUtils . putString ( Config.KEY_USER , mLoginUserEdt . getText () . toString () , this ) ; zj.remote.baselibrary.util.PreferenceUtils . putBoolean ( Config.KEY_ISLOGIN , true , this ) ; zj.remote.baselibrary.util.PreferenceUtils . putString ( Config.KEY_PASS , mLoginPassEdt . getText () . toString () , this ) ; com.kerchin.yellownote.data.bean.PrimaryData . getInstance ( getHelper () , new com.kerchin.yellownote.data.bean.PrimaryData.DoAfterWithEx () { @ java.lang.Override public void justNowWithEx ( java.lang.Exception e ) { dismissDialog () ; } } ) ; handler . post ( runnableForData ) ; } 
public void exitApplication () { try { finishAllActivity () ; android.app.ActivityManager manager = ( ( android.app.ActivityManager ) ( context . getSystemService ( Context.ACTIVITY_SERVICE ) ) ) ; manager . killBackgroundProcesses ( context . getPackageName () ) ; java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { java.lang.System . exit ( 0 ) ; } } 
public static synchronized void search ( java.lang.String username , java.lang.String tu ) { if ( ! ( pset.three.Server.user_orders . containsKey ( username ) ) ) { pset.three.Server . respond ( tu , java.lang.String . format ( "No order found for %s" , username ) ) ; return; } java.lang.String response = "" ; for ( java.lang.String order : pset.three.Server.user_orders . get ( username ) ) { response += java.lang.String . format ( "%s\n" , order ) ; } pset.three.Server . respond ( tu , response ) ; } 
@ java.lang.Override public com.google.android.gms.maps.model.MarkerOptions map ( com.task.vasskob.googlemaps.screens.map.model.Marker data ) { com.google.android.gms.maps.model.LatLng markerLatLng = new com.google.android.gms.maps.model.LatLng ( data . getLatitude () , data . getLongitude () ) ; com.google.android.gms.maps.model.BitmapDescriptor markerIcon = com.google.android.gms.maps.model.BitmapDescriptorFactory . fromResource ( data . getMarkerIcon () . getResId () ) ; return new com.google.android.gms.maps.model.MarkerOptions () . position ( markerLatLng ) . title ( data . getTitle () ) . icon ( markerIcon ) ; } 
public void enqueue ( Item item ) { if ( ( size ) == ( arr.length ) ) { resize ( ( 2 * ( arr.length ) ) ) ; } arr [ ( ( last ) ++ ) ] = item ; ( size ) ++ ; if ( ( last ) == ( arr.length ) ) last = 0 ; } 
@ java.lang.Override public java.lang.Long save ( de.jordsand.birdcensus.core.BirdCount instance ) { de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter converter = new de.jordsand.birdcensus.database.repositories.SQLiteBirdCountRepository.BirdCountToSQLiteConverter () ; long id = db . insert ( BirdCountContract.BirdCount.TABLE_NAME , null , converter . extractBirdCountTableData ( instance ) ) ; for ( android.content.ContentValues values : converter . extractObservationTableData ( instance ) ) { db . insert ( BirdCountContract.ObservedSpecies.TABLE_NAME , null , values ) ; } return id ; } 
public static boolean add ( tds.Task task ) { boolean isAdded = true ; for ( java.util.TreeSet < tds.Task > tree : tds.TaskTree.taskTrees ) { if ( ! ( tree . add ( task ) ) ) { isAdded = false ; } } if ( isAdded ) { tds.TaskTree . increaseTaskListSize () ; tds.TaskTree . pushAddToStorage ( task ) ; } return isAdded ; } 
private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } } 
public rx.Observable < java.util.List < java.lang.String > > get ( java.lang.String query ) { if ( android.text.TextUtils . isEmpty ( query ) ) { return rx.Observable . just ( new java.util.ArrayList <> () ) ; } return rx.Observable . just ( rejasupotaro.mds.data.models.Pokemons . allPokemonNames ( query ) ) ; } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { switch ( msg.what ) { case com.kame.tafhd.MainActivity.TEST_MSG : new com.kame.tafhd.Publisher () . publish ( ( ( java.lang.String ) ( msg.obj ) ) ) ; break; case com.kame.tafhd.MainActivity.UNRELEVANT_MSG : new com.kame.tafhd.Publisher () . publish ( "I am in the unrelevent parts." ) ; break; case com.kame.tafhd.MainActivity.ANOTHER : new com.kame.tafhd.Publisher () . publish ( ( ( java.lang.String ) ( msg.obj ) ) ) ; break; default: break; } } 
public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( configurationElement != null ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } } return null ; } 
public android.content.SharedPreferences storeScores ( java.util.List scores ) { android.content.SharedPreferences prefs = android.preference.PreferenceManager . getDefaultSharedPreferences ( context ) ; android.content.SharedPreferences.Editor editor = prefs . edit () ; com.google.gson.Gson gson = new com.google.gson.Gson () ; java.lang.String scoreJson = gson . toJson ( scores ) ; editor . putString ( com.evader.rookies.evade.StoreScores.SCORES_STRING , scoreJson ) ; editor . apply () ; return prefs ; } 
@ java.lang.Override public boolean verify ( org.spongepowered.api.entity.living.Living living ) { if ( ! ( living instanceof org.spongepowered.api.entity.ArmorEquipable ) ) { return false ; } java.util.Optional < net.minecraft.item.ItemStack > optHeld = ( ( org.spongepowered.api.entity.ArmorEquipable ) ( living ) ) . getItemInHand () ; if ( ( optHeld . isPresent () ) && ( ( optHeld . get () . getItem () ) == ( com.skelril.skree.content.registry.item.CustomItemTypes.TWO_TAILED_SWORD ) ) ) { event . setBaseDamage ( 0 ) ; return true ; } return false ; } 
@ java.lang.Deprecated private static int buildMaxIndexPages ( int allPageNo , java.lang.Integer maxIndexPages ) { if ( ( com.feilong.core.util.Validator . isNullOrEmpty ( maxIndexPages ) ) || ( maxIndexPages <= 0 ) ) { if ( allPageNo > 1000 ) { return 6 ; } else if ( allPageNo > 100 ) { return 8 ; } else { return 10 ; } } return maxIndexPages ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/filter" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public final void getGrants ( @ org.springframework.web.bind.annotation.RequestBody final java.lang.String json , final javax.servlet.http.HttpServletResponse response ) throws java.io.IOException { java.util.Map < java.lang.String , java.lang.Object > parameters = new com.fasterxml.jackson.databind.ObjectMapper () . readValue ( json , new com.fasterxml.jackson.core.type.TypeReference < java.util.Map < java.lang.String , java.lang.Object > > () {} ) ; response . getWriter () . write ( new com.fasterxml.jackson.databind.ObjectMapper () . writeValueAsString ( grantsService . getGrants ( parameters ) ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/edit" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) private java.lang.String saveUser ( org.springframework.ui.Model model , @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userStub" ) @ javax.validation.Valid com.oreva.simpleweb.mvc.web.stubs.UserStub userStub , org.springframework.validation.Errors errors ) { java.lang.String currentPage = "users/edit" ; java.lang.String nextPage = "redirect:/messages/result" ; if ( errors . hasErrors () ) { return currentPage ; } com.oreva.simpleweb.mvc.entities.User user = userService . convertStubToEntity ( userStub ) ; userService . save ( user ) ; return nextPage ; } 
@ java.lang.Override public void messageArrived ( java.lang.String topic , org.eclipse.paho.client.mqttv3.MqttMessage message ) { if ( ( ( mTopicCallbacks ) == null ) || ( mTopicCallbacks . isEmpty () ) ) return; for ( io.relayr.websocket.WebSocketCallback socketCallback : mTopicCallbacks . get ( topic ) ) socketCallback . successCallback ( message ) ; } 
public static void fatal ( java.lang.String location , java.lang.String error , java.lang.Throwable cause ) { java.lang.System.err . println ( ( ( location + ": " ) + error ) ) ; if ( cause != null ) cause . printStackTrace () ; if ( ( sutilities.Debugger.logger_ ) != null ) sutilities.Debugger.logger_ . log ( "SEVERE" , location , error , cause , true ) ; } 
private void resolvePropertyAccessor ( @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.BodiesResolveContext c , @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.ObservableBindingTrace fieldAccessTrackingTrace , @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.PropertyDescriptor propertyDescriptor , @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.JetPropertyAccessor accessor , @ org.jetbrains.annotations.NotNull org.jetbrains.kotlin.resolve.PropertyAccessorDescriptor accessorDescriptor ) { org.jetbrains.kotlin.resolve.scopes.LexicalScope accessorScope = makeScopeForPropertyAccessor ( c , accessor , propertyDescriptor ) ; org.jetbrains.kotlin.resolve.lazy.ForceResolveUtil . forceResolveAllContents ( accessorDescriptor . getAnnotations () ) ; resolveFunctionBody ( c . getOuterDataFlowInfo () , fieldAccessTrackingTrace , accessor , accessorDescriptor , accessorScope ) ; } 
private void connectRight ( int i , int j ) { if ( j < ( n ) ) { int right = getPosition ( i , ( j + 1 ) ) ; if ( isOpen ( right ) ) { grid . union ( right , getPosition ( i , j ) ) ; } } } 
public float get ( com.s13g.winston.lib.temperature.Temperature.Unit unit ) { if ( ( mUnit ) == unit ) { return mValue ; } if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) ) { return ( ( mValue ) - 32 ) / 1.8F ; } else if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) ) { return ( ( mValue ) * 1.8F ) + 32 ; } throw new java.lang.RuntimeException ( "Unsupported temperature conversion" ) ; } 
void enterInputValue ( final org.openqa.selenium.WebElement inputElement , final java.lang.String value ) throws java.lang.Exception { waitForElementVisible ( inputElement ) ; final java.lang.String inputID = inputElement . getAttribute ( "id" ) ; summonTooltip ( inputID ) ; showInputField ( inputID ) ; for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { inputElement . sendKeys ( java.lang.Character . toString ( value . charAt ( i ) ) ) ; waitFor ( 150L ) ; } closeTooltip () ; } 
@ javax.annotation.Nonnull @ java.lang.Override public java.util.Set < net.minecraft.util.math.BlockPos > generateTrunk ( net.minecraft.world.World world , java.util.Random rand , forestry.arboriculture.worldgen.TreeBlockTypeLog wood , net.minecraft.util.math.BlockPos startPos ) { forestry.core.worldgen.WorldGenHelper . generateTreeTrunk ( world , rand , wood , startPos , height , girth , 0 , 0 , null , 0 ) ; return forestry.core.worldgen.WorldGenHelper . generateBranches ( world , rand , wood , startPos . add ( 0 , ( ( height ) - 1 ) , 0 ) , girth , 0.15F , 0.25F , ( ( height ) / 4 ) , 1 , 0.25F ) ; } 
@ java.lang.Override public int compare ( android.location.Location t1 , android.location.Location t2 ) { if ( ( t1 . getTime () ) > ( t2 . getTime () ) ) { return - 1 ; } if ( ( t2 . getTime () ) > ( t1 . getTime () ) ) { return 1 ; } return 0 ; } 
public static play.mvc.Result postPage ( java.lang.String postName ) { java.util.List < controllers.Post > posts = controllers.Post . getPostsWithPostName ( postName ) ; controllers.Application.currentPost = posts . get ( 0 ) ; java.util.List < controllers.Comment > comments = controllers.Comment . findComments ( postName ) ; return ok ( postPage . render ( controllers.Application.currentPost , comments , controllers.Application.currentTeam . getTeamName () , controllers.Application . getUnreadNum () ) ) ; } 
@ java.lang.Override public org.jowidgets.api.model.item.IMenuModel editMenu ( final org.jowidgets.cap.ui.api.widgets.IBeanTable < BEAN_TYPE > table , final int columnIndex , final org.jowidgets.api.model.item.IMenuModel menuModel ) { if ( ( model . getUpdaterService () ) == null ) { return null ; } else if ( hasDefaultEditAction ) { menuModel . addAction ( 0 , editAction ) ; return menuModel ; } else { return menuModel ; } } 
public int getPower ( double speed , int resistance ) { double power = 0.0 ; if ( speed > 0 ) { power = ( ( 3.05 + ( 4.577 * speed ) ) + ( ( 0.01798 * speed ) * speed ) ) + ( ( ( 2.038E-5 * speed ) * speed ) * speed ) ; } return ( ( int ) ( power ) ) ; } 
protected void setResultActivityError ( java.lang.String srvStr , java.lang.Exception e ) { resultActivityError = ( ( e . getClass () . getName () ) + " : Cannot connect to " ) + srvStr ; java.lang.String msg = e . getMessage () ; if ( msg != null ) resultActivityError = ( ( resultActivityError ) + " : " ) + ( e . getMessage () ) ; } 
@ java.lang.Override public char getGrid ( int x , int y ) throws java.io.IOException { outToServer . writeBytes ( ( ( ( ( "GRID " + x ) + " " ) + y ) + "\n" ) ) ; java.lang.String response = inFromServer . readLine () ; java.lang.System.out . print ( ( response + " " ) ) ; return response . charAt ( 0 ) ; } 
public edu.aku.hassannaqvi.mapps_form2.LHWsContract Sync ( org.json.JSONObject jsonObject ) throws org.json.JSONException { this . lhwId = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_LHWID ) ; this . lhwName = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_LHWNAME ) ; this . clusterName = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_CLUSTERNAME ) ; this . clusterCode = jsonObject . getString ( edu.aku.hassannaqvi.mapps_form2.LHWsContract.singleLhw.COLUMN_CLUSTERCODE ) ; return this ; } 
protected boolean checkBlock ( org.w3c.dom.Node node ) { mt.edu.um.cs.cps2000.runtime.BlockStackFrame blockStackFrame = new mt.edu.um.cs.cps2000.runtime.BlockStackFrame ( stackFrames . peek () ) ; stackFrames . push ( blockStackFrame ) ; boolean ok = checkStatements ( node . getChildNodes () ) ; stackFrames . pop () ; return ok ; } 
public synchronized void advance ( long duration , java.util.concurrent.TimeUnit unit ) { if ( duration <= 0 ) throw new java.lang.IllegalArgumentException ( ( "Duration must be positive; was " + duration ) ) ; this . nanos += unit . toNanos ( duration ) ; for ( ; ; ) { co.paralleluniverse.vtime.ManualClock.Scheduled s = waiters . peek () ; if ( ( s == null ) || ( ( s.deadline ) > ( nanos ) ) ) break; waiters . poll () . wakeup () ; } } 
public static java.lang.String _readString ( java.lang.String prompt ) { java.io.BufferedReader userInput = new java.io.BufferedReader ( new java.io.InputStreamReader ( java.lang.System.in ) ) ; java.lang.System.out . print ( prompt ) ; try { java.lang.String inputStr = userInput . readLine () ; if ( inputStr == null ) inputStr = "" ; return inputStr ; } catch ( java.io.IOException E ) { return "" ; } } 
@ java.lang.Override protected com.example.petr.myapplication.FilterResults performFiltering ( java.lang.CharSequence charSequence ) { com.example.petr.myapplication.FilterResults filterResults = new com.example.petr.myapplication.FilterResults () ; if ( charSequence != null ) { java.util.List < java.lang.String > results = findSuggestions ( charSequence . toString () ) ; filterResults.values = results ; filterResults.count = results . size () ; } return filterResults ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { try { model . deleteCropLocationTrayLocation ( blockID . getText () , bedID . getText () , cropName . getText () , varietyField . getText () ) ; errorLabel . setText ( "" ) ; } catch ( java.sql.SQLException e1 ) { errorLabel . setText ( "Invalid Field" ) ; } repaint () ; revalidate () ; } 
@ java.lang.Override public void deleteStudy ( java.lang.String username , java.lang.String studyUID ) throws java.lang.Exception { edu.stanford.epad.epadws.models.Study study = getStudy ( studyUID ) ; if ( study == null ) return; new edu.stanford.epad.epadws.models.ProjectToSubjectToStudy () . deleteObjects ( ( "study_id=" + ( study . getId () ) ) ) ; new edu.stanford.epad.epadws.models.EpadFile () . deleteObjects ( ( "study_id=" + ( study . getId () ) ) ) ; study . delete () ; } 
@ javafx.fxml.FXML private void loginButtonPressed ( javafx.event.ActionEvent __ ) { EmployeeContracts.IWorker worker = UtilsImplementations.InjectionFactory . getInstance ( EmployeeImplementations.Worker . class , new EmployeeDI.WorkerDiConfigurator () ) ; try { worker . login ( username , password ) ; } catch ( SMExceptions.SMException e ) { EmployeeGui.EmployeeGuiExeptionHandler . handle ( e ) ; return; } EmployeeCommon.TempWorkerPassingData.worker = worker ; GuiUtils.AbstractApplicationScreen . setScene ( "/WorkerMenuScreen/WorkerMenuScreen.fxml" ) ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( ( data != null ) && ( ! ( data . getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) . equals ( "-1" ) ) ) ) { ean . setText ( data . getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment f = new com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment () ; SignInActivity.fNum = getActivity () . getSupportFragmentManager () . getBackStackEntryCount () ; android.support.v4.app.FragmentTransaction ft = getActivity () . getSupportFragmentManager () . beginTransaction () ; ft . replace ( R.id.container , f ) ; ft . addToBackStack ( ( "" + ( SignInActivity.fNum ) ) ) ; ft . commit () ; } 
public void itemStateChanged ( java.awt.event.ItemEvent ie ) { switch ( ie . getStateChange () ) { case 1 : emailInputField . setEnabled ( true ) ; useEmail = true ; break; case 2 : emailInputField . setEnabled ( false ) ; useEmail = false ; break; default: break; } } 
public void checkJoin ( java.lang.String id , java.lang.String password , java.lang.String checkPassword ) { if ( password . equals ( checkPassword ) ) { com.project.snake.database.SnakeDTO data = new com.project.snake.database.SnakeDTO ( "join" , id , password , 0 , 0 , 0 , 0 ) ; data = network . sendData ( data ) ; java.lang.System.out . println ( data . getStatus () ) ; if ( data != null ) { view_ctr . joinView ( data . getStatus () ) ; return; } } view_ctr . joinView ( "joinno" ) ; } 
public void computeDemoRectangle ( float viewWidth , float viewHeight ) { if ( ( ( demoData ) != null ) && ( ( demoData . size () ) == 0 ) ) { float centerX = viewWidth / 2 ; float centerY = viewHeight / 2 ; float deltaX = viewWidth / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; float deltaY = viewHeight / ( ( float ) ( de.peterloos.beziersplines.utils.ControlPointsHolder.NumDemoEdges ) ) ; demoData = de.peterloos.beziersplines.utils.ControlPointsHolder . getDemoRectangle ( centerX , centerY , deltaX , deltaY ) ; } } 
@ java.lang.Override public java.nio.file.FileVisitResult visitFile ( java.nio.file.Path file , java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.lang.String path_temp = file . toString () ; final java.lang.String path_name = omnikryptec.util.AdvancedFile . getName ( path_temp ) ; if ( ( ( advancedFileFilter == null ) || ( advancedFileFilter . accept ( ME , path_name ) ) ) && ( recursiv || ( file . getParent () . equals ( myPathTest ) ) ) ) { files . add ( new omnikryptec.util.AdvancedFile ( true , ME , path_name ) ) ; } return java.nio.file.FileVisitResult.CONTINUE ; } 
@ java.lang.Override public void onDataFetchComplete ( java.lang.Throwable throwable , java.lang.String parser ) { if ( parser . equals ( AppState.MOD_NEWS ) ) { if ( ( ! ( this . isDetached () ) ) && ( this . isVisible () ) ) { this . loadPages () ; } com.untappedkegg.rally.data.DbUpdated . open () ; com.untappedkegg.rally.data.DbUpdated . updated_insert ( parser ) ; com.untappedkegg.rally.data.DbUpdated . close () ; } } 
private java.lang.String getFinalValue ( java.lang.String newVal , java.lang.String oldVal ) { if ( newVal == null ) return null ; if ( oldVal == null ) return newVal ; if ( newVal . equals ( oldVal ) ) { return null ; } else { return newVal ; } } 
@ java.lang.Override public void onMessageReceived ( @ android.support.annotation.NonNull com.criptext.comunication.MOKMessage message ) { com.criptext.monkeychatandroid.models.MessageItem newItem = processNewMessage ( message ) ; boolean isMyOwnMsg = ! ( newItem . isIncomingMessage () ) ; updateConversation ( newItem . getConversationId () , com.criptext.monkeychatandroid.models.DatabaseHandler . getSecondaryTextByMessageType ( newItem , false ) , ( isMyOwnMsg ? MonkeyConversation.ConversationStatus.deliveredMessage : MonkeyConversation.ConversationStatus.receivedMessage ) , ( isMyOwnMsg ? 0 : 1 ) , message . getDatetimeorder () , 0L ) ; } 
@ java.lang.Override public com.jomm.terroir.business.model.AbstractUser update ( com.jomm.terroir.business.model.AbstractUser user ) throws com.jomm.terroir.util.InvalidEntityException , java.lang.NullPointerException { if ( user == null ) { throw new java.lang.NullPointerException () ; } else if ( ( user . getId () ) == null ) { throw new com.jomm.terroir.util.InvalidEntityException () ; } return userDao . update ( user ) ; } 
public static java.util.List < cascading.tuple.TupleEntry > getAllTupleEntries ( cascading.tap.Tap < org.apache.hadoop.mapred.JobConf , ? , ? > t ) throws java.io.IOException { cascading.tuple.TupleEntryIterator iter = t . openForRead ( com.liveramp.cascading_ext.CascadingUtil . get () . getFlowProcess () ) ; java.util.List < cascading.tuple.TupleEntry > tuples = new java.util.ArrayList < cascading.tuple.TupleEntry > () ; while ( iter . hasNext () ) { tuples . add ( new cascading.tuple.TupleEntry ( iter . next () ) ) ; } return tuples ; } 
@ java.lang.Override protected synchronized void onProgressUpdate ( java.lang.Void . . . values ) { if ( ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () ) != null ) { if ( ( SoundActivity.seekBar ) != null ) { SoundActivity.seekBar . setMax ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getDuration () ) ; SoundActivity.seekBar . setProgress ( org.gtlp.yasb.SoundActivity.soundPlayerInstance . get () . getCurrentPosition () ) ; } if ( ( SoundActivity.timeText ) != null ) { SoundActivity.timeText . setText ( SoundActivity.soundPlayerInstance . get () . getFormattedProgressText () ) ; } } } 
private java.lang.String getTransitTitle ( org.opentripplanner.api.model.Leg leg ) { java.lang.String [] possibleTitles = new java.lang.String [] { leg.routeShortName , leg.route , leg.routeId } ; for ( int i = 0 ; i < ( possibleTitles.length ) ; i ++ ) { if ( ! ( android.text.TextUtils . isEmpty ( possibleTitles [ i ] ) ) ) { return possibleTitles [ i ] ; } } return null ; } 
@ java.lang.Override public void applyTo ( double [] xs , int offset , int length , mikera.vectorz.AVector ys ) { for ( int i = 0 ; i < length ; i ++ ) { xs [ ( offset + i ) ] = ( ( java.lang.Number ) ( fn . invoke ( xs [ ( offset + i ) ] , ys . unsafeGet ( i ) ) ) ) . doubleValue () ; } } 
public static double norm2 ( float [] x , int dim ) { double dot = 0 ; for ( int i = 0 ; i < dim ; ++ i ) { dot += ( x [ i ] ) * ( x [ i ] ) ; } return dot ; } 
private static int checkSum ( java.lang.String zip ) { int checkDigit = 0 ; for ( int i = 0 ; i < ( zip . length () ) ; i ++ ) { checkDigit += java.lang.Integer . parseInt ( ( "" + ( zip . charAt ( i ) ) ) ) ; } checkDigit = checkDigit % 10 ; return checkDigit ; } 
@ java.lang.Override public boolean add ( E e ) { java.lang.Object [] arr2 = new java.lang.Object [ ( arr.length ) + 1 ] ; for ( int x = 0 ; x < ( arr.length ) ; x ++ ) { arr2 [ x ] = arr [ x ] ; } arr2 [ arr.length ] = e ; arr = arr2 ; return true ; } 
@ java.lang.Override public void setForeground ( java.awt.Color color ) { if ( ( foreground ) == null ) { super . setForeground ( color ) ; if ( ( module ) != null ) for ( java.awt.Component c : getComponents () ) { c . setForeground ( color ) ; } } } 
private java.lang.Long fetchSearchKeyId ( java.lang.String suggestedField ) { javax.persistence.Query query = mgr . createQuery ( "select f from MetadataEntity f where f.value = :value" ) ; query . setParameter ( "value" , suggestedField ) ; java.util.List < org.esbtools.message.admin.common.orm.MetadataEntity > queryResult = ( ( java.util.List < org.esbtools.message.admin.common.orm.MetadataEntity > ) ( query . getResultList () ) ) ; if ( ( queryResult != null ) && ( ! ( queryResult . isEmpty () ) ) ) { return queryResult . get ( 0 ) . getId () ; } return null ; } 
private static java.lang.String _getParentMessageIdFromSubject ( javax.mail.Message message ) throws java.lang.Exception { if ( ( message . getSubject () ) == null ) { return null ; } java.lang.String parentMessageId = null ; java.lang.String subject = message . getSubject () ; int pos = subject . lastIndexOf ( CharPool.LESS_THAN ) ; if ( pos != ( - 1 ) ) { parentMessageId = subject . substring ( pos ) ; } return parentMessageId ; } 
@ java.lang.Override public java.util.LinkedList < com.compomics.util.experiment.identification.matches.SpectrumMatch > getAllSpectrumMatches ( com.compomics.util.waiting.WaitingHandler waitingHandler , com.compomics.util.experiment.identification.identification_parameters.SearchParameters searchParameters , com.compomics.util.preferences.SequenceMatchingPreferences sequenceMatchingPreferences , boolean expandAaCombinations ) throws java.io.IOException , java.lang.ClassNotFoundException , java.lang.IllegalArgumentException , java.lang.InterruptedException , java.sql.SQLException , javax.xml.bind.JAXBException , org.xmlpull.v1.XmlPullParserException { if ( ( spectrumMatches ) == null ) { parseFile ( waitingHandler , expandAaCombinations , true ) ; } return spectrumMatches ; } 
private void setPlaceGuess ( java.lang.String placeGuess ) { if ( placeGuess != null ) { placeGuess = placeGuess . trim () ; } if ( ( placeGuess != null ) && ( ( placeGuess . length () ) > 0 ) ) { mLocationGuess . setText ( placeGuess ) ; mObservation.place_guess = placeGuess ; } else { mLocationGuess . setText ( R.string.set_location ) ; mObservation.place_guess = null ; } } 
public boolean isHelpValid ( java.lang.String [] arguments ) { if ( ( arguments.length ) == 0 ) { return true ; } else if ( ( arguments.length ) == 1 ) { return commandList_ . getHelpArgumentList () . contains ( arguments [ 0 ] ) ; } else { return false ; } } 
public void addMeal ( ru.javawebinar.topjava.model.Meal m ) { if ( ru.javawebinar.topjava.DAO.MealDao.mealInMemory . containsKey ( m . getId () ) ) { ru.javawebinar.topjava.DAO.MealDao.mealInMemory . put ( m . getId () , m ) ; } else { m . setId ( getNewId () ) ; ru.javawebinar.topjava.DAO.MealDao.mealInMemory . put ( m . getId () , m ) ; } } 
private void postConvert ( short [] inPixels , byte [] outPixels , int begin , int end ) { int q = begin ; int p = begin ; while ( p < end ) { short f = inPixels [ ( p ++ ) ] ; outPixels [ ( q ++ ) ] = ( f <= ( - 16257 ) ) ? 0 : f >= 16256 ? - 1 : ( ( byte ) ( ( f + 16384 ) > > 7 ) ) ; } } 
private org.atlasapi.equiv.results.scores.Score score ( java.util.List < java.lang.Integer > subjSeriesSizes , org.atlasapi.media.entity.Container cand , org.atlasapi.equiv.results.description.ResultDescription desc ) { if ( ! ( cand instanceof org.atlasapi.media.entity.Brand ) ) { desc . appendText ( "%s: not Brand -> %.2f" , cand , mismatchScore . asDouble () ) ; return mismatchScore ; } return score ( subjSeriesSizes , ( ( org.atlasapi.media.entity.Brand ) ( cand ) ) , desc ) ; } 
public static bar.f0o.jlisp.lib.Net.IPPacket fromByteArray ( byte [] packet ) throws java.lang.RuntimeException { if ( ( packet.length ) <= 20 ) throw new java.lang.RuntimeException ( "Payload too short for IP" ) ; if ( ( ( packet [ 0 ] ) > > 4 ) == 4 ) return new bar.f0o.jlisp.lib.Net.IPv4Packet ( packet ) ; else if ( ( ( packet [ 0 ] ) > > 4 ) == 6 ) return new bar.f0o.jlisp.lib.Net.IPv6Packet ( packet ) ; else { throw new java.lang.RuntimeException ( ( "Illegal IP version number: " + ( packet [ 0 ] ) ) ) ; } } 
private org.eclipse.jface.viewers.StyledString getStyledString ( com.boothen.jsonedit.outline.NodeType type , java.lang.String key , java.lang.String value ) { java.lang.String fgColor = type . getForegroundColor () ; java.lang.String bkColor = type . getBackgroundColor () ; org.eclipse.jface.viewers.StyledString text = new org.eclipse.jface.viewers.StyledString () ; if ( key != null ) { text . append ( key ) ; text . append ( ": " ) ; } text . append ( value , org.eclipse.jface.viewers.StyledString . createColorRegistryStyler ( fgColor , bkColor ) ) ; return text ; } 
public static java.util.Calendar parseDateTime ( java.lang.String dateTimeString ) throws java.text.ParseException { helper.CalendarHelper.FORMAT_DATE_TIME . setLenient ( false ) ; dateTimeString = dateTimeString . trim () ; java.util.Calendar datetime = java.util.Calendar . getInstance () ; datetime . setTime ( helper.CalendarHelper.FORMAT_DATE_TIME . parse ( dateTimeString ) ) ; if ( ! ( helper.CalendarHelper . getDateTimeString ( datetime ) . toLowerCase () . equals ( dateTimeString . toLowerCase () ) ) ) { throw new java.text.ParseException ( dateTimeString , 0 ) ; } return datetime ; } 
private void handleFoundAllFiles ( final java.util.Set < java.io.File > allFiles ) throws java.io.IOException { if ( ( wildcardExpanderHandler ) != null ) { try { wildcardExpanderHandler . transform ( allFiles ) ; } catch ( final java.lang.Exception e ) { if ( e instanceof java.io.IOException ) { throw ( ( java.io.IOException ) ( e ) ) ; } throw new java.io.IOException ( ( "Exception during expanding wildcard: " + ( e . getMessage () ) ) ) ; } } } 
private net.es.oscars.helpers.RequestedVlanFlowE buildRequestedFlow ( java.util.Set < net.es.oscars.helpers.RequestedVlanJunctionE > junctions , java.util.Set < net.es.oscars.helpers.RequestedVlanPipeE > pipes , java.lang.Integer minPipes , java.lang.Integer maxPipes , java.lang.String connectionId ) { return net.es.oscars.helpers.RequestedVlanFlowE . builder () . junctions ( junctions ) . pipes ( pipes ) . minPipes ( minPipes ) . maxPipes ( maxPipes ) . containerConnectionId ( connectionId ) . build () ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { final android.view.View view = inflater . inflate ( R.layout.movie_detail_view , container , false ) ; mUnbinder = butterknife.ButterKnife . bind ( this , view ) ; if ( ( getArguments () ) != null ) { android.os.Bundle bundle = getArguments () ; mMovieId = bundle . getInt ( MovieViewHolderPortrait.MOVIEID_KEY , ( - 1 ) ) ; timber.log.Timber . d ( "movieId: %d" , mMovieId ) ; } return view ; } 
private wyal.lang.Formula extractDeclarationInvariant ( wyal.util.Declaration.Named decl , wyal.util.Tuple < wyal.util.Expr > arguments ) { if ( decl instanceof wyal.util.Declaration.Named.Type ) { wyal.util.Declaration.Named.Type td = ( ( wyal.util.Declaration.Named.Type ) ( decl ) ) ; return expandTypeInvariant ( td , arguments . getOperand ( 0 ) ) ; } else if ( decl instanceof wyal.util.Declaration.Named.Macro ) { wyal.util.Declaration.Named.Macro md = ( ( wyal.util.Declaration.Named.Macro ) ( decl ) ) ; return expandMacroBody ( md , arguments . getOperands () ) ; } else { return null ; } } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( digitsim.DigitSimController . isLocked () ) { return; } Gestures.NodeGestures.draggedAnchorPoint = true ; aP . setCoords ( toolbox.GenFunctions . getXYAdaptGrid ( new general.Vector2i ( ( ( int ) ( event . getX () ) ) , ( ( int ) ( event . getY () ) ) ) ) ) ; c . drawDirectPreLine () ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { return ( ( o instanceof West.Math.ComplexNumber ) && ( ( ( West.Math.ComplexNumber ) ( o ) ) . real . equals ( real ) ) ) && ( ( ( West.Math.ComplexNumber ) ( o ) ) . imag . equals ( imag ) ) ; } 
@ java.lang.Override public void render ( float delta ) { clearingScreen () ; viewportRender () ; stage . act ( Gdx.graphics . getDeltaTime () ) ; stage . draw () ; game.batch . begin () ; game.batch . draw ( sprite_title , 0 , 0 ) ; game.batch . end () ; } 
public static int maxInBounds ( int [] A , int lowerBound , int upperBound ) { int max = 0 ; int [] bounds = new int [] { lowerBound , upperBound } ; for ( int i = MyMath . min ( bounds ) ; i < ( ( MyMath . max ( bounds ) ) + 1 ) ; i ++ ) { max = java.lang.Math . max ( A [ i ] , max ) ; } return max ; } 
@ java.lang.Override public com.tsystems.javaschool.db.entities.Contract addNew ( com.tsystems.javaschool.db.entities.Contract contract , java.util.List < java.lang.Integer > optionsIds ) { javax.persistence.EntityTransaction transaction = contractDao . getTransaction () ; com.tsystems.javaschool.business.services.interfaces.OptionService optionService = new com.tsystems.javaschool.business.services.implementations.OptionServiceImpl () ; boolean insideOtherTransaction = transaction . isActive () ; contractDao . create ( contract ) ; return contract ; } 
@ java.lang.Override public org.eclipse.jface.text.contentassist.IContentAssistant getContentAssistant ( final org.eclipse.jface.text.source.ISourceViewer sourceViewer ) { final org.eclipse.jface.text.contentassist.ContentAssistant assistant = new org.eclipse.jface.text.contentassist.ContentAssistant () ; assistant . setContentAssistProcessor ( new eu.modelwriter.core.alloyinecore.ui.editor.completion.AIECompletionProcessor () , IDocument.DEFAULT_CONTENT_TYPE ) ; assistant . enableAutoActivation ( true ) ; assistant . enableAutoInsert ( true ) ; assistant . setProposalPopupOrientation ( IContentAssistant.PROPOSAL_OVERLAY ) ; assistant . setContextInformationPopupOrientation ( IContentAssistant.CONTEXT_INFO_ABOVE ) ; return assistant ; } 
private int getStartIndex () { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( v . getId () ) == ( R.id.upload_files_btn_cancel ) ) { setResult ( com.owncloud.android.ui.activity.RESULT_CANCELED ) ; finish () ; } else if ( ( v . getId () ) == ( R.id.upload_files_btn_upload ) ) { new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask () . execute ( ( ( mBehaviourSpinner . getSelectedItemPosition () ) == 0 ) ) ; } } 
private java.lang.Long matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { if ( contractItem != null ) { return matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ; } else { return null ; } } 
public void categorySelected ( org.unpidf.univmobile.data.entities.Category cat ) { super . onBackPressed () ; android.app.FragmentManager manager = getFragmentManager () ; org.unpidf.univmobile.ui.fragments.GeoCampusFragment f = ( ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment ) ( manager . findFragmentByTag ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment . class . getName () ) ) ) ; if ( f != null ) { f . categorySelected ( cat ) ; } } 
public boolean remove ( int index ) { if ( ( index < 1 ) || ( index > ( size () ) ) ) return false ; com.seb.research.algorithms.LinkedList.Node current = head ; for ( int i = 1 ; i < index ; i ++ ) { if ( ( current . getNext () ) == null ) { return false ; } current = current . getNext () ; } current . setNext ( current . getNext () . getNext () ) ; ( count ) -- ; return true ; } 
@ java.lang.Override protected mmt.uit.placehelper.models.Direction doInBackground ( java.lang.String . . . params ) { mmt.uit.placehelper.models.Direction direct = new mmt.uit.placehelper.models.Direction () ; direct = mmt.uit.placehelper.services.SearchPlace . getDirection ( curLoc . getLat () , curLoc . getLng () , plDetail . getGeometry () . getLocation () . getLat () , plDetail . getGeometry () . getLocation () . getLng () , params [ 0 ] ) ; try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } return direct ; } 
@ java.lang.Override public void onConnected ( android.os.Bundle bundle ) { route = new com.polsl.roadtracker.database.entity.RouteData () ; route . start () ; routeDataDao . insert ( route ) ; startLocationUpdate () ; sensorReader . startSensorReading ( route . getId () , this . getSharedPreferences ( "SensorReaderPreferences" , Context.MODE_PRIVATE ) ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == 0 ) { if ( ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( grantResults [ 1 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { btn_takePictureButton . setEnabled ( true ) ; } } } 
public java.util.Calendar calcDataCobranca ( java.util.Calendar dataCompra ) { java.util.Calendar dataCobranca = java.util.Calendar . getInstance () ; dataCobranca . setTime ( dataCompra . getTime () ) ; if ( ( diaVirada ) > ( diaVencimento ) ) { dataCobranca . add ( java.util.Calendar.MONTH , 1 ) ; } if ( ( dataCobranca . get ( java.util.Calendar.DAY_OF_MONTH ) ) >= ( diaVirada ) ) { dataCobranca . add ( java.util.Calendar.MONTH , 1 ) ; } dataCobranca . set ( java.util.Calendar.DAY_OF_MONTH , diaVencimento ) ; return dataCobranca ; } 
private void recurseImpliedPermissions ( com.hypersocket.permissions.PermissionType t , java.util.Set < com.hypersocket.permissions.PermissionType > derivedPermissions ) { if ( ( t != null ) && ( ! ( derivedPermissions . contains ( t ) ) ) ) { derivedPermissions . add ( t ) ; if ( ( t . impliesPermissions () ) != null ) { for ( com.hypersocket.permissions.PermissionType t2 : t . impliesPermissions () ) { recurseImpliedPermissions ( t2 , derivedPermissions ) ; } } } } 
public void renameResidence ( java.lang.String oldResidence , java.lang.String newResidence ) { if ( oldResidence == null ) return; if ( newResidence == null ) return; oldResidence = oldResidence . toLowerCase () ; com.bekvon.bukkit.residence.protection.ClaimedResidence res = ResidenceList . get ( oldResidence ) ; if ( res != null ) { removeResidence ( oldResidence ) ; ResidenceList . put ( newResidence . toLowerCase () , res ) ; } } 
@ com.sogilis.ReactNativeBluetooth.ReactMethod public void disconnect ( final com.sogilis.ReactNativeBluetooth.ReadableMap deviceMap ) { final java.lang.String deviceId = deviceMap . getString ( "id" ) ; com.sogilis.ReactNativeBluetooth.BluetoothAction disconnectAction = new com.sogilis.ReactNativeBluetooth.BluetoothAction ( DEVICE_DISCONNECTED , deviceId , eventEmitter ) { @ java.lang.Override public void run ( ) throws com.sogilis.ReactNativeBluetooth.domain.BluetoothException { com.sogilis.ReactNativeBluetooth.BluetoothGatt gatt = gattCollection . get ( deviceId ) ; gatt . disconnect () ; bluetoothActionsLoop . actionDone () ; } } ; bluetoothActionsLoop . addAction ( disconnectAction ) ; } 
public final void updateIncompatibleList ( final domain.ContractOption option , final java.util.List < domain.ContractOption > newIncOptions ) { java.util.Set < domain.ContractOption > currentIncOptions = option . getIncompatibleOptions () ; java.util.Set < domain.ContractOption > removingOptions = new java.util.HashSet ( currentIncOptions ) ; removingOptions . removeAll ( newIncOptions ) ; java.util.Set < domain.ContractOption > newOptions = new java.util.HashSet ( newIncOptions ) ; newOptions . removeAll ( currentIncOptions ) ; for ( domain.ContractOption removingOption : removingOptions ) { deleteIncompatibleOptions ( option , removingOption ) ; } for ( domain.ContractOption newOption : newOptions ) { addIncompatibleOptions ( option , newOption ) ; } } 
public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } 
public java.lang.String actionSignup () { boh.jee.ejb.model.Guest user = null ; user = new boh.jee.ejb.model.User () ; user . setGuestName ( userName ) ; user . setGuestPhone ( userPhone ) ; user . setGuestEmail ( userEmail ) ; if ( userSrv . userSignUp ( user ) ) { return "roomlist" ; } else { illegalAccess = true ; return "signup" ; } } 
public static final void setEnvironment ( final com.oracle.truffle.api.object.DynamicObject obj , final com.oracle.truffle.api.object.DynamicObject value ) { com.oracle.truffle.api.object.Shape oldShape = obj . getShape () ; com.oracle.truffle.api.object.Shape newShape = oldShape . createSeparateShape ( obj . getShape () . getSharedData () ) . replaceProperty ( oldShape . getProperty ( som.vmobjects.SReflectiveObject.ENVIRONMENT ) , com.oracle.truffle.api.object.Property . create ( som.vmobjects.SReflectiveObject.ENVIRONMENT , oldShape . allocator () . constantLocation ( value ) , 0 ) ) ; obj . setShapeAndGrow ( oldShape , newShape ) ; } 
public static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } 
public static void print ( int [] o ) { java.lang.String delim = "{" ; for ( int elem : o ) { myUtils.ConsolePrinting . print ( delim ) ; myUtils.ConsolePrinting . print ( elem ) ; delim = ", " ; } delim = ( delim . equals ( "{" ) ) ? "{}" : "}" ; myUtils.ConsolePrinting . print ( delim ) ; } 
private javax.jcr.Node newNode ( final javax.jcr.Node parent , final org.xml.sax.Attributes attributes ) throws javax.jcr.RepositoryException { javax.jcr.Node parentNode ; if ( parent == null ) { parentNode = this . session . getRootNode () ; } else { parentNode = parent ; } final java.lang.String name = attributes . getValue ( "name" ) ; final java.lang.String primaryType = attributes . getValue ( "primaryType" ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . info ( "Node {} adding child node {}(type={})" , parentNode . getPath () , name , primaryType ) ; return parentNode . addNode ( name , primaryType ) ; } 
@ java.lang.Override public void validate ( com.couchbase.lite.Document doc ) { java.util.Map < java.lang.String , java.lang.Object > result = new java.util.HashMap <> () ; int count = 0 ; com.couchbase.lite.Dictionary dictObj = doc . getDictionary ( "dict" ) ; for ( java.lang.String key : dictObj ) { result . put ( key , dict . getObject ( key ) ) ; count ++ ; } org.junit.Assert . assertEquals ( finalContent . size () , count ) ; org.junit.Assert . assertEquals ( finalContent , result ) ; } 
public void evolve ( double time , asteroids.part2.CollisionListener collistionListener ) { if ( time <= 0 ) { return; } double timeToFirstCollision = this . getTimeToFirstCollision () ; if ( time <= timeToFirstCollision ) { this . advance ( time ) ; return; } else { this . advance ( timeToFirstCollision ) ; this . resolveCollision ( collistionListener ) ; java.lang.System.out . println ( timeToFirstCollision ) ; this . evolve ( ( time - timeToFirstCollision ) , collistionListener ) ; } } 
public void removeAtIndex ( int index ) { if ( index <= 0 ) { removeFirstNode () ; } else if ( index >= ( ( size ) - 1 ) ) { removeLastNode () ; } else { a3.LinkedList.Node stepNode = head ; for ( int i = 1 ; i < index ; ++ i ) { stepNode = stepNode.next ; } stepNode.next = stepNode.next.next ; stepNode = stepNode.next ; stepNode = null ; -- ( size ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; camera = new com.example.svenscan.svenscan.utils.Camera ( this , this ) ; com.example.svenscan.svenscan.SvenScanApplication app = ( ( com.example.svenscan.svenscan.SvenScanApplication ) ( getApplication () ) ) ; wordManager = app . getWordRepository () ; } 
public Model.GameObject.Item.Weapon addWeapon ( Model.GameObject.Item.ItemEnum id , java.lang.String name , java.lang.String description , int x , int y , int requiredLevel , Model.GameObject.Item.Items.Takables.Quest requiredItem , Model.StatStruc modify ) { this . id = id ; location = new Model.Location ( x , y ) ; requirement = new Model.Requirement ( requiredLevel , requiredItem ) ; effect = new Model.Effects.Effect ( modify ) ; return new Model.GameObject.Item.Weapon ( id , name , description , location , requirement , effect ) ; } 
void enable ( org.bukkit.plugin.java.JavaPlugin plugin ) { this . _plugin = plugin ; se.fredsfursten.donationboardplugin.BoardController.numberOfDays = se.fredsfursten.donationboardplugin.DonationBoardPlugin . getPluginConfig () . getInt ( "Days" ) ; se.fredsfursten.donationboardplugin.BoardController.numberOfLevels = se.fredsfursten.donationboardplugin.DonationBoardPlugin . getPluginConfig () . getInt ( "Levels" ) ; this . _model = new se.fredsfursten.donationboardplugin.BoardModel ( se.fredsfursten.donationboardplugin.BoardController.numberOfDays , se.fredsfursten.donationboardplugin.BoardController.numberOfLevels ) ; load () ; } 
@ java.lang.Override public net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > onItemRightClick ( net.minecraft.world.World world , net.minecraft.entity.player.EntityPlayer player , net.minecraft.util.EnumHand hand ) { net.minecraft.item.ItemStack stack = player . getHeldItem ( hand ) ; if ( world.isRemote ) { return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.FAIL , stack ) ; } net.minecraft.util.math.Vec3d releasePoint = this . getAirPositionInFrontOfPlayer ( world , player , 0.8 ) ; return this . releaseBug ( stack , world , player , hand , releasePoint ) ? new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.SUCCESS , stack ) : new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.FAIL , stack ) ; } 
public User findUser ( java.lang.String strUsername , java.lang.String strPassword ) { User objUser = null ; UserDAO objUserDAO = null ; try { objUserDAO = new UserDAO () ; objUser = objUserDAO . getUserByEmailAndPassword ( strUsername , strPassword ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return objUser ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( getSharedPreferences ( CONST.PREFS , com.brainmurphy.roomhack.MODE_PRIVATE ) . getBoolean ( CONST.IS_LOGGED_IN , false ) ) { startActivity ( new android.content.Intent ( this , com.brainmurphy.roomhack.Dashboard . class ) ) ; } bLogin = ( ( android.widget.Button ) ( findViewById ( R.id.bLogIn ) ) ) ; bLogin . setOnClickListener ( this ) ; bRegister = ( ( android.widget.Button ) ( findViewById ( R.id.bRegister ) ) ) ; bRegister . setOnClickListener ( this ) ; } 
@ java.lang.Override protected void layoutSingularComponent ( com.vaadin.ui.Component component ) { switch ( getPacking () ) { case EXPAND : layoutComponent ( component , "100%" , 1 , Alignment.MIDDLE_RIGHT ) ; break; case SPACE_AFTER : layoutComponent ( component , null , 0 , Alignment.TOP_RIGHT ) ; break; case SPACE_BEFORE : layoutComponent ( component , null , 0 , Alignment.BOTTOM_RIGHT ) ; break; case SPACE_AROUND : layoutComponent ( component , null , 0 , Alignment.MIDDLE_RIGHT ) ; break; } } 
@ java.lang.Override public final int calculateValue ( final nl.tue.s2id90.draughts.DraughtsState draughtsState , final boolean isWhitePlayer , final int depth ) { int value = 0 ; for ( nl.tue.s2id90.group05.HeuristicComponent component : components ) { value += component . calculateComponentValue ( draughtsState , isWhitePlayer , depth , value ) ; } return value ; } 
@ java.lang.Override public boolean parseMsg ( java.lang.String subject , java.lang.String body , net.anei.cadpage.parsers.MsgInfo.Data data ) { net.anei.cadpage.parsers.VA.Parser p = new net.anei.cadpage.parsers.VA.Parser ( subject ) ; data.strUnit = p . getLast ( ' ' ) ; java.lang.String source = p . get () ; if ( ! ( super . parseMsg ( body , data ) ) ) return false ; data.strBox = data.strSource ; data.strSource = source ; return true ; } 
@ java.lang.Override public void onNext ( T i ) { if ( ( ! ( isUnsubscribed () ) ) && ( ( ( count ) ++ ) < ( limit ) ) ) { boolean stop = ( count ) == ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } 
private void checkProduct ( java.lang.String developerId , java.lang.String productId ) { com.umasuo.device.center.application.dto.ProductView product = restClient . getProduct ( developerId , productId ) ; if ( ! ( developerId . equals ( product . getDeveloperId () ) ) ) { com.umasuo.device.center.application.service.UnionApplication.LOGGER . debug ( "Developer: {} don't own this product: {}." , developerId , productId ) ; throw new com.umasuo.exception.AuthFailedException ( "Developer do not own this product" ) ; } if ( ! ( ProductStatus.PUBLISHED . equals ( product . getStatus () ) ) ) { com.umasuo.device.center.application.service.UnionApplication.LOGGER . debug ( "Product: {} is not published." , productId ) ; throw new com.umasuo.exception.CreateResourceFailed ( "Product is not published" ) ; } } 
public void ReInit ( java.io.Reader stream ) { jj_input_stream . ReInit ( stream , 1 , 1 ) ; token_source . ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) jj_la1 [ i ] = - 1 ; for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } 
public boolean isOppositeOf ( org.eclipse.emf.diffmerge.api.diff.IReferenceValuePresence peer_p ) { return ( ( ( ( getPresenceRole () ) == ( peer_p . getPresenceRole () ) ) && ( ( getFeature () . getEOpposite () ) == ( peer_p . getFeature () ) ) ) && ( ( getElementMatch () ) == ( peer_p . getValueMatch () ) ) ) && ( ( getValueMatch () ) == ( peer_p . getElementMatch () ) ) ; } 
public static void printFloatingBackground ( int i , java.lang.String msg ) { i = i + 1 ; java.lang.System.out . println ( ( ( ( ( ( ( ( UI.ui.BACKGROUND_BLUE ) + ( UI.ui.HIGH_INTENSITY ) ) + ( UI.ui.YELLOW ) ) + i ) + ".\t" ) + msg ) + ( ansi () . reset () ) ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; checkCameraHardware () ; if ( isRecording ) { mMediaRecorder . stop () ; releaseMediaRecorder () ; mCamera . lock () ; isRecording = false ; } else { if ( prepareVideoRecorder () ) { mMediaRecorder . start () ; mMediaRecorder . setMaxDuration ( 30000 ) ; isRecording = true ; } else { releaseMediaRecorder () ; } } } 
public void setActionValue ( java.lang.Object actionValue ) { if ( actionValue == null ) return; currentValue = actionValue ; if ( ! ( action . getValue () . equals ( actionValue ) ) ) this . action . setValue ( actionValue ) ; initChildList () ; } 
private boolean isListOperation ( int command ) { return ( ( ( ( command == ( INDEX_ADD ) ) || ( command == ( INDEX_EDIT ) ) ) || ( command == ( INDEX_DELETE ) ) ) || ( command == ( INDEX_COMPLETE ) ) ) || ( command == ( INDEX_INCOMPLETE ) ) ; } 
public java.lang.String GetToken ( java.lang.String sessionID ) { for ( burp.AntiCSRFToken antiCSRFToken : tokens ) { if ( ( ( antiCSRFToken.sessionID ) != null ) && ( antiCSRFToken.sessionID . equals ( sessionID ) ) ) { try { antiCSRFToken . LockToken () ; } catch ( java.lang.InterruptedException e ) { antiCSRFToken . ReleaseToken () ; e . printStackTrace () ; } return antiCSRFToken.tokenValue ; } } return null ; } 
@ java.lang.Override public net.minecraft.nbt.NBTTagCompound writeToNBT ( net.minecraft.nbt.NBTTagCompound tag ) { if ( ( location ) != null ) location . writeToNBT ( tag ) ; if ( ( type ) != null ) type . writeToNBT ( tag ) ; else { mcmultipart.multipart.MultipartHelper . getPartContainer ( getWorld () , getPos () ) . removePart ( this ) ; } return tag ; } 
private static void showToast ( final android.app.Activity activity , @ android.support.annotation.Nullable final java.lang.String msg , final int length ) { java.lang.Runnable toastRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { android.widget.Toast . makeText ( activity , msg , length ) . show () ; } } ; io.particle.android.sdk.utils.EZ . runOnMainThread ( toastRunnable ) ; } 
private static boolean isSubset ( final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique subset , final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique of ) { return ( of . getEgo () . getId () . equals ( subset . getEgo () . getId () ) ) && ( of.alters . containsAll ( subset.alters ) ) ; } 
@ java.lang.Override public void onResponse ( final retrofit2.Call < com.charlesmadere.hummingbird.models.Feed > call , final retrofit2.Response < com.charlesmadere.hummingbird.models.Feed > response ) { final com.charlesmadere.hummingbird.models.Feed body = ( response . isSuccessful () ) ? response . body () : null ; if ( body == null ) { listener . failure ( com.charlesmadere.hummingbird.networking.Api . retrieveErrorInfo ( response ) ) ; } else { com.charlesmadere.hummingbird.networking.Api . hydrateFeed ( body , null , listener ) ; } } 
@ java.lang.Override public boolean doPreAddUser ( java.lang.String userName , java.lang.Object credential , java.lang.String [] roleList , java.util.Map < java.lang.String , java.lang.String > claims , java.lang.String profile , org.wso2.carbon.user.core.UserStoreManager userStoreManager ) throws org.wso2.carbon.user.core.UserStoreException { try { if ( ( ! ( isEnable () ) ) || ( ! ( userStoreManager . isSCIMEnabled () ) ) ) { return true ; } } catch ( org.wso2.carbon.identity.scim.common.listener.org.wso2.carbon.user e ) { throw new org.wso2.carbon.user.core.UserStoreException ( "Error while reading isScimEnabled from userstore manager" , e ) ; } this . getSCIMAttributes ( userName , claims ) ; return true ; } 
@ java.lang.Override public emcshop.scraper.EmcSession login ( java.lang.String username , java.lang.String password ) throws java.io.IOException { com.github.mangstadt.emc.net.EmcWebsiteConnection connection = null ; try { connection = new com.github.mangstadt.emc.net.EmcWebsiteConnectionImpl ( username , password ) ; return new emcshop.scraper.EmcSession ( username , password , connection . getCookieStore () ) ; } catch ( com.github.mangstadt.emc.net.InvalidCredentialsException e ) { return null ; } finally { org.apache.commons.io.IOUtils . closeQuietly ( connection ) ; } } 
public void start ( java.lang.String s ) { org.alicebot.server.core.Globals . load ( s ) ; shell = new org.alicebot.server.core.util.Shell ( inStream , displayStream , promptStream ) ; server = new org.alicebot.server.net.AliceServer ( s , shell ) ; org.alicebot.server.core.util.Trace . setOut ( displayStream ) ; server . startup ( true ) ; shutdown () ; } 
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( station != null ) { if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } 
@ java.lang.Override protected android.graphics.Bitmap doInBackground ( java.lang.String . . . params ) { moviePoster = null ; try { java.io.InputStream in = new java.net.URL ( params [ 0 ] ) . openStream () ; moviePoster = android.graphics.BitmapFactory . decodeStream ( in ) ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Error" , params [ 0 ] ) ; e . printStackTrace () ; } return moviePoster ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/start" ) public org.springframework.web.servlet.ModelAndView start ( com.infofilter.model.SearchConfig sc ) throws java.lang.InterruptedException { crawl . setSearchConfig ( sc ) ; crawl . run () ; java.util.List < com.infofilter.model.UrlInfo > urlList = com.infofilter.crawl.Crawl.urlInfoList ; org.springframework.web.servlet.ModelAndView mav = new org.springframework.web.servlet.ModelAndView ( "result" ) ; mav . addObject ( "urlList" , urlList ) ; return mav ; } 
public void initScene ( final int scale , final com.jme3.math.Vector3f translation ) { java.lang.System.out . println ( "SCENE_PATH file found!" ) ; java.lang.System.out . println ( ( ( "=> loading " + ( com.funkydonkies.gamestates.SceneState.SCENE_PATH . toString () ) ) + " Spatial ..." ) ) ; loadScene ( scale , translation ) ; java.lang.System.out . println ( "... DONE loading .scene Spatial <=" ) ; } 
static boolean isAxiom ( Expression d ) { for ( int i = 0 ; i < ( LogicHW1.axioms . size () ) ; i ++ ) { if ( LogicHW1.axioms . get ( i ) . equalStruct ( d , new java.util.HashMap <> () , true ) ) { LogicHW1.out . println ( ( "Сх. акс. " + ( i + 1 ) ) ) ; return true ; } } return false ; } 
private void deleteAppointmentByDateInt ( java.lang.Integer date ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; java.lang.String Query = ( ( ( ( ( ( ( ( "DELETE FROM " + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TABLE_CALENDAR ) ) + " WHERE " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_START ) ) + " <= " ) + date ) + " AND " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_END ) ) + " >= " ) + date ; db . execSQL ( Query ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( getArguments () . containsKey ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) { mItem = Content.COMMUTE_MAP . get ( getArguments () . getString ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) ; android.app.Activity activity = this . getActivity () ; android.support.design.widget.CollapsingToolbarLayout appBarLayout = ( ( android.support.design.widget.CollapsingToolbarLayout ) ( activity . findViewById ( R.id.toolbar_layout ) ) ) ; if ( ( appBarLayout != null ) && ( ( mItem ) != null ) ) { appBarLayout . setTitle ( mItem.id ) ; } } } 
public void actionPerformed ( final java.awt.event.ActionEvent event ) { if ( ( pvLoggerID ) != 0 ) { if ( USE_PVLOGGER . isSelected () ) USE_LOGGEDBEND . setEnabled ( true ) ; else USE_LOGGEDBEND . setEnabled ( false ) ; setHasChanges ( true ) ; } else { javax.swing.JOptionPane . showMessageDialog ( mainWindow , "You need to select pvLoggerData first" , "Warning!" , javax.swing.JOptionPane.PLAIN_MESSAGE ) ; USE_PVLOGGER . setSelected ( false ) ; } } 
public float activated ( float [] inputs ) { int temp = 0 ; for ( int i = 0 ; i < ( inputs.length ) ; i ++ ) { temp += ( inputs [ i ] ) * ( weights [ i ] ) ; } if ( temp >= ( weights [ ( ( weights.length ) - 1 ) ] ) ) return 1 ; return 0 ; } 
public double slopeTo ( Point that ) { if ( ( this . compareTo ( that ) ) == 0 ) { return java.lang.Double.NEGATIVE_INFINITY ; } if ( ( this . x ) == ( that.x ) ) { return java.lang.Double.POSITIVE_INFINITY ; } if ( ( this . y ) == ( that.y ) ) { return 0 ; } return ( ( double ) ( ( that.y ) - ( this . y ) ) ) / ( ( that.x ) - ( this . x ) ) ; } 
private void execute ( final io.toast.tk.dao.domain.impl.test.block.ITestPlan testPlan , final io.toast.tk.runtime.TestRunner runner ) { initEnvironment () ; for ( final io.toast.tk.dao.domain.impl.test.block.ICampaign campaign : testPlan . getCampaigns () ) { for ( io.toast.tk.dao.domain.impl.test.block.ITestPage testPage : campaign . getTestCases () ) { try { beginTest () ; runner . run ( testPage ) ; endTest () ; } catch ( final java.lang.Exception e ) { io.toast.tk.runtime.AbstractTestPlanRunner.LOG . error ( e . getMessage () , e ) ; } } } createAndOpenReport ( testPlan ) ; tearDownEnvironment () ; } 
private io.minio.HttpResponse executeGet ( java.lang.String bucketName , java.lang.String objectName , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return execute ( Method.GET , Regions.INSTANCE . region ( bucketName ) , bucketName , objectName , headerMap , queryParamMap , null , 0 ) ; } 
@ java.lang.Override public V put ( K key , V value ) { com.google.common.base.Preconditions . checkNotNull ( key ) ; com.google.common.base.Preconditions . checkNotNull ( value ) ; com.google.common.cache.LocalCache.Timestamped < V > oldValue = cachingHashMap . put ( key , new com.google.common.cache.LocalCache.Timestamped < V > ( value , ticker ) ) ; if ( oldValue == null ) { return null ; } alertListenerIfPresent ( key , oldValue . getValue () , com.google.common.cache.RemovalCause.REPLACED ) ; return oldValue . getValue () ; } 
private void readTokens ( com.fsck.k9.mail.store.ImapResponseParser.ImapResponse response ) throws java.io.IOException { response . clear () ; java.lang.String firstToken = ( ( java.lang.String ) ( readToken ( response ) ) ) ; response . add ( firstToken ) ; if ( isStatusResponse ( firstToken ) ) { parseResponseText ( response ) ; } else { java.lang.Object token ; while ( ( token = readToken ( response ) ) != null ) { if ( ! ( token instanceof com.fsck.k9.mail.store.ImapResponseParser.ImapList ) ) { response . add ( token ) ; } } } } 
public static boolean logoutUser ( int sessionID ) { java.lang.String sql = "DELETE FROM Session WHERE SessionID = ?" ; try ( java.sql.PreparedStatement stmt = bankserver.DBConnector.connection . prepareStatement ( sql ) ) { stmt . setInt ( 1 , sessionID ) ; stmt . executeQuery () ; return true ; } catch ( java.sql.SQLException e ) { java.util.logging.Logger . getLogger ( bankserver.DBConnector . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , e ) ; } return false ; } 
public org.apache.commons.lang3.tuple.Pair < java.lang.String , org.semanticweb.owlapi.model.OWLNamedIndividual > createIndividual ( java.lang.String modelId , java.lang.String cid , java.util.Set < org.semanticweb.owlapi.model.OWLAnnotation > annotations , METADATA metadata ) throws org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException { org.geneontology.minerva.ModelContainer model = checkModelId ( modelId ) ; org.semanticweb.owlapi.model.OWLClass cls = getClass ( cid , model ) ; if ( cls == null ) { throw new org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException ( ( "Could not find a class for id: " + cid ) ) ; } org.semanticweb.owlapi.model.OWLNamedIndividual individual = createIndividual ( model , cls , annotations , true , metadata ) ; return org.apache.commons.lang3.tuple.Pair . of ( org.geneontology.minerva.util.IdStringManager . getId ( individual ) , individual ) ; } 
private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { java.util.ArrayList < java.awt.Point > roiData = util.DataManager . readRoiFile ( chosenPath ) ; if ( roiData != null ) { if ( ( roiData . size () ) > 0 ) { setFields () ; notifyRoiListeners ( roiData ) ; if ( defaultCheckBox . isSelected () ) { notifyRoiListeners ( chosenPath ) ; } this . setVisible ( false ) ; } else { errorText . setText ( "Error loading: File not found!" ) ; } } } 
static java.lang.Object [] boxAndPadWithZeros ( int length , long [] values ) { long [] padded ; if ( ( values.length ) == length ) { padded = values ; } else { padded = new long [ length ] ; java.lang.System . arraycopy ( values , 0 , padded , 0 , padded.length ) ; } return java.util.Arrays . stream ( padded ) . boxed () . toArray () ; } 
@ java.lang.Override public void start ( T project , boolean newInstance ) { org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener listener = org.jenkinsci.plugins.rabbitmqconsumer.extensions.MessageQueueListener . all () . get ( org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener . class ) ; if ( listener != null ) { listener . addTrigger ( this ) ; removeDuplicatedTrigger ( listener . getTriggers () ) ; } super . start ( project , newInstance ) ; } 
@ java.lang.Override public void setTimescale ( int order ) { java.lang.System.out . println ( ( "setTimescale " + order ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList . get ( ( ( fCurrentEvent ) ++ ) ) ; assertEquals ( event.fType , VCDLoaderTest.ExpectTraceBuilder.EXPECT_TIMESCALE ) ; assertEquals ( event.fTimestamp , ( ( long ) ( order ) ) ) ; } 
public static float [] getFloatArrayFromBuffer ( java.nio.FloatBuffer buffer ) { float [] array = new float [ 0 ] ; if ( buffer != null ) { if ( buffer . hasArray () ) { array = buffer . array () ; } else { buffer . rewind () ; array = new float [ buffer . capacity () ] ; buffer . get ( array ) ; } } return array ; } 
private void validate ( java.lang.Object source , java.lang.Object observer ) { com.google.common.base.Preconditions . checkNotNull ( source , "source" ) ; com.google.common.base.Preconditions . checkNotNull ( observer , "observer" ) ; com.google.common.base.Preconditions . checkArgument ( verifySource ( source ) , "Source is not the right type!" ) ; com.google.common.base.Preconditions . checkArgument ( verifySource ( observer ) , "Observer is not the right type!" ) ; } 
public void setProperties ( java.util.Map < java.lang.String , java.lang.Object > properties ) { for ( java.lang.Object o : properties . values () ) { if ( ( ( ! ( o instanceof java.lang.String ) ) && ( ! ( o instanceof java.lang.Integer ) ) ) && ( ! ( o instanceof java.lang.Double ) ) ) { throw new java.lang.IllegalArgumentException ( "Values must be Strings or Doubles." ) ; } } this . properties = properties ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_settings ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } 
public void execute ( org.shipkit.internal.gradle.ReleaseNeededPlugin p ) { project . getTasks () . withType ( org.shipkit.gradle.ReleaseNeededTask . class , new org.gradle.api.Action < org.shipkit.gradle.ReleaseNeededTask > () { public void execute ( org.shipkit.gradle.ReleaseNeededTask t ) { t . setCommitMessage ( java.lang.System . getenv ( "TRAVIS_COMMIT_MESSAGE" ) ) ; t . setPullRequest ( isPullRequest ) ; } } ) ; } 
protected com.stormpath.sdk.api.ApiKey getTokenApiKey ( javax.servlet.http.HttpServletRequest request , java.lang.String apiKeyId ) throws com.stormpath.sdk.servlet.filter.oauth.OAuthException { try { return getEnabledApiKey ( request , apiKeyId ) ; } catch ( com.stormpath.sdk.resource.ResourceException e ) { com.stormpath.sdk.servlet.filter.oauth.OAuthErrorCode err = com.stormpath.sdk.servlet.filter.oauth.OAuthErrorCode.INVALID_CLIENT ; java.lang.String msg = e . getStormpathError () . getDeveloperMessage () ; throw new com.stormpath.sdk.servlet.filter.oauth.OAuthException ( err , msg , e ) ; } } 
public void setUrl ( java.lang.String url ) { org.openmrs.mobile.utilities.URLValidator.ValidationResult result = org.openmrs.mobile.utilities.URLValidator . validate ( url ) ; org.openmrs.mobile.activities.LoginActivity.mLastURL = result . getUrl () ; if ( result . isURLValid () ) { mSpinner . setVisibility ( View.VISIBLE ) ; mLoginFormView . setVisibility ( View.GONE ) ; new org.openmrs.mobile.net.LocationManager () . getAvailableLocation ( org.openmrs.mobile.net.helpers.LocationHelper . createAvailableLocationListener ( result . getUrl () , this ) ) ; } else { showInvalidURLDialog () ; } } 
public java.lang.String toByteCode ( java.lang.String i_assembly ) { java.util.List < backend.Compiler.asm_line > asm_array = new java.util.ArrayList < backend.Compiler.asm_line > () ; java.lang.String byteCodeReturn = "" ; java.lang.String [] raw_lines = i_assembly . split ( "\\r?\\n" ) ; for ( int line_i = 0 ; line_i < ( raw_lines.length ) ; line_i ++ ) { asm_array . add ( new backend.Compiler.asm_line ( raw_lines [ line_i ] ) ) ; byteCodeReturn += asm_array . get ( line_i ) . getByteCode () ; } return byteCodeReturn ; } 
@ java.lang.Override public com.edu.nju.asi.service.serviceImpl.Case uploadOnline ( org.springframework.web.multipart.MultipartFile uploadedFile ) throws java.io.IOException { if ( uploadedFile . isEmpty () ) { return null ; } java.lang.String thisPath = uploadedFile . getName () ; java.io.File thisFile = new java.io.File ( thisPath ) ; uploadedFile . transferTo ( thisFile ) ; com.edu.nju.asi.service.serviceImpl.Case wanted = parseXML ( thisPath ) ; boolean deleteResult = thisFile . delete () ; return wanted ; } 
@ java.lang.Override public boolean availableForBooking ( java.util.Set < com.real.apps.shuttle.domain.model.BookedRange > potentialBookedRanges , com.real.apps.shuttle.domain.model.BookedRange bookedRange ) { if ( ( potentialBookedRanges == null ) || ( potentialBookedRanges . isEmpty () ) ) { return true ; } java.util.Iterator < com.real.apps.shuttle.domain.model.BookedRange > iterator = potentialBookedRanges . iterator () ; while ( iterator . hasNext () ) { com.real.apps.shuttle.domain.model.BookedRange subject = iterator . next () ; if ( ( subject != null ) && ( subject . coincide ( bookedRange ) ) ) { return false ; } } return true ; } 
protected org.nd4j.linalg.api.ndarray.INDArray createScalarForIndex ( int i , boolean applyOffset ) { return create ( data () , new int [] { 1 , 1 } , new int [] { 1 , 1 } , ( applyOffset ? ( offset ) + i : i ) ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) private java.util.List < java.lang.Class > getClass ( java.lang.Class clazz , java.util.List < java.lang.Class > classList ) { if ( ( clazz . getSuperclass () ) != null ) { if ( com.ai.dubbo.ext.vo.BaseInfo . class . getName () . equals ( clazz . getSuperclass () . getName () ) ) { return classList ; } else { classList . add ( clazz . getSuperclass () ) ; return getClass ( clazz . getSuperclass () , classList ) ; } } return classList ; } 
public boolean ask ( java.lang.String username , java.lang.String item , int qty , double price ) { if ( server.Server . isStockExists ( item ) ) { models.user.User user = new models.user.User ( null , username ) ; server.Server . addAsk ( user , models.trade.Stock . valueOf ( item ) , qty , price , null ) ; return true ; } return false ; } 
private static boolean isCyclic ( int numberOfCourse , java.util.Map < java.lang.Integer , java.util.Set < java.lang.Integer > > prerequisitePerCourse ) { for ( int course = 0 ; course < numberOfCourse ; course ++ ) { java.util.Set < java.lang.Integer > targetCourses = new java.util.HashSet <> () ; targetCourses . add ( course ) ; if ( com.sevendragons.practice.leetcode.medium.coursesschedule.Solution . isCourseContainedInPrerequisites ( prerequisitePerCourse , targetCourses , course ) ) { return true ; } } return false ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET , value = "/categories/{categoryId}" ) public java.lang.String searchPostsAction ( org.springframework.ui.ModelMap model , @ org.springframework.web.bind.annotation.PathVariable ( name = "categoryId" ) final java.lang.String categoryId ) { java.util.List < be.nille.blog.domain.category.Category > categories = categoryService . findAll () ; java.util.List < be.nille.blog.domain.post.Post > posts = postService . findPostsByCategory ( categoryId ) ; model . put ( "page" , new be.nille.blog.web.controller.post.PostsPage ( posts , categories , null ) ) ; return "blog/index" ; } 
public rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { if ( term == null ) { return null ; } rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; } 
public void broadcast ( cn.nukkit.Player player ) { java.lang.String translation = cn.nukkit.Server . getInstance () . getLanguage () . translateString ( "chat.type.achievement" , player . getDisplayName () , ( ( cn.nukkit.utils.TextFormat.GREEN ) + ( this . getMessage () ) ) , null ) ; if ( cn.nukkit.Server . getInstance () . getPropertyBoolean ( "announce-player-achievements" , true ) ) { cn.nukkit.Server . getInstance () . broadcastMessage ( translation ) ; } else { player . sendMessage ( translation ) ; } } 
@ java.lang.Override protected void onHandleIntent ( android.content.Intent intent ) { if ( com.google.android.gms.location.ActivityRecognitionResult . hasResult ( intent ) ) { com.google.android.gms.location.ActivityRecognitionResult result = com.google.android.gms.location.ActivityRecognitionResult . extractResult ( intent ) ; com.google.android.gms.location.DetectedActivity CurrentActivity = result . getMostProbableActivity () ; if ( ( CurrentActivity . getConfidence () ) >= 75 ) { ActivityRecognitionPlugin.Activity.ActivityType = CurrentActivity . toString () ; ActivityRecognitionPlugin.Activity.Propability = CurrentActivity . getConfidence () ; } else ActivityRecognitionPlugin.Activity.ActivityType = "NotConfidentEnough" ; } } 
@ java.lang.Override public boolean removeBusiness ( java.lang.String id ) throws java.lang.Exception { com.foodie.app.Helper.DebugHelper . Log ( ( "removeBusiness: id = " + id ) ) ; BusinessRef . child ( id ) . removeValue () ; localDB . removeBusiness ( id ) ; java.util.List < com.foodie.app.entities.Activity > businessActivities = com.foodie.app.database.Converters . cursorToActivityList ( localDB . getActivity ( new java.lang.String [] { id } , new java.lang.String [] { com.foodie.app.entities.Activity.ACTIVITY_BUSINESS_ID } ) ) ; for ( com.foodie.app.entities.Activity ac : businessActivities ) { removeActivity ( ac . get_ID () ) ; } return true ; } 
private void highlightArrow ( uk.ac.cam.teamdelta.Direction d ) { javafx.scene.image.ImageView iv = navMap . get ( d ) ; if ( iv == null ) { uk.ac.cam.teamdelta.Logger . error ( ( ( "NULL IV - direction" + ( d . getDegrees () ) ) + " was not in direction set" ) ) ; } else { iv . setImage ( hArrow ) ; } } 
public org.json.JSONObject startVM ( org.json.JSONObject vmdata ) { try { java.lang.String tid = vmdata . getString ( "tid" ) ; if ( tid . isEmpty () ) { return _create_tvd ( vmdata ) ; } else { return _start_tvd ( vmdata ) ; } } catch ( java.lang.Exception e ) { return new org.json.JSONObject () ; } } 
public void onDataPacket ( net.minecraft.network.NetworkManager net , net.minecraft.network.play.server.SPacketUpdateTileEntity packet ) { super . onDataPacket ( net , packet ) ; readFromNBT ( packet . getNbtCompound () ) ; net.minecraft.block.state.IBlockState state = this . world . getBlockState ( this . pos ) ; this . world . notifyBlockUpdate ( this . pos , state , state , 3 ) ; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { for ( org.nschmidt.ldparteditor.opengl.OpenGLRenderer renderer : org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.renders ) { org.nschmidt.ldparteditor.composites.Composite3D c3d = renderer . getC3D () ; if ( c3d . getLockableDatFileReference () . equals ( org.nschmidt.ldparteditor.project.Project . getFileToEdit () ) ) { org.nschmidt.ldparteditor.data.VertexManager vm = c3d . getLockableDatFileReference () . getVertexManager () ; vm . addSnapshot () ; loadSelectorSettings () ; vm . selectAllWithSameColours ( sels , true ) ; vm . syncWithTextEditors ( true ) ; return; } } } 
public void getBytes ( java.io.OutputStream outputStream ) throws java.io.IOException { java.io.BufferedOutputStream bufferedOutputStream = new java.io.BufferedOutputStream ( outputStream ) ; java.nio.ByteBuffer byteBuffer = java.nio.ByteBuffer . allocate ( ( ( java.lang.Long.BYTES ) * 2 ) ) ; byteBuffer . putLong ( id . getMostSignificantBits () ) ; byteBuffer . putLong ( id . getLeastSignificantBits () ) ; bufferedOutputStream . write ( byteBuffer . array () ) ; getBytesFromPedestrianInfo ( personA , bufferedOutputStream ) ; getBytesFromPedestrianInfo ( personB , bufferedOutputStream ) ; bufferedOutputStream . flush () ; } 
public java.lang.Integer getLatOffset ( double lat , double lon , double offset , boolean checkOutside ) { java.awt.Point p = tileSource . latLonToXY ( lat , lon , zoom ) ; int y = ( ( p.y ) - ( center.y ) ) - ( ( getHeight () ) / 2 ) ; if ( checkOutside && ( ( y < 0 ) || ( y > ( getHeight () ) ) ) ) { return null ; } return y ; } 
void ojld ( int num1 , int num2 ) { this . maxcommom = 1 ; num1 = java.lang.Math . abs ( num1 ) ; num2 = java.lang.Math . abs ( num2 ) ; if ( num2 > num1 ) { int temp = num2 ; num2 = num1 ; num1 = temp ; } if ( num2 == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { this . maxcommom = num2 ; return; } int temp = num1 % num2 ; ojld ( num2 , temp ) ; } 
public boolean deleteExtrasFromReminder ( int reminderId ) throws ve.com.abicelis.remindy.exception.CouldNotDeleteDataException { android.database.sqlite.SQLiteDatabase db = mDatabaseHelper . getWritableDatabase () ; return ( db . delete ( RemindyContract.ExtraTable.TABLE_NAME , ( ( RemindyContract.ExtraTable.COLUMN_NAME_REMINDER_FK . getName () ) + " =?" ) , new java.lang.String [] { java.lang.String . valueOf ( reminderId ) } ) ) > 0 ; } 
public boolean checkIfDone ( double x , double y ) { if ( ( ( ( ( ( destX ) + ( error ) ) >= x ) && ( ( ( destX ) - ( error ) ) <= x ) ) && ( ( ( destY ) + ( error ) ) >= y ) ) && ( ( ( destY ) - ( error ) ) <= y ) ) { return true ; } else return false ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.example.Dao.ListDao > call , retrofit2.Response < com.example.Dao.ListDao > response ) { filterBeen . addAll ( response . body () . getDATA () . getFilter () ) ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData . clear () ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.mData . addAll ( response . body () . getDATA () . getProducts () ) ; com.example.root.gitsecommerce.Main.ViewModel.MainActivityVM.bAdapter . notifyDataSetChanged () ; } 
@ java.lang.Override public void onPageSelected ( int position ) { switch ( position ) { case 0 : findViewById ( R.id.gameRelativeLayout ) . setVisibility ( View.VISIBLE ) ; mSetGridView . setVisibility ( View.INVISIBLE ) ; break; case 1 : findViewById ( R.id.gameRelativeLayout ) . setVisibility ( View.INVISIBLE ) ; mSetGridView . setVisibility ( View.VISIBLE ) ; populateSetGridView () ; break; } } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeString ( this . path ) ; dest . writeLong ( this . dateModified ) ; dest . writeString ( this . mime ) ; dest . writeLong ( this . id ) ; dest . writeLong ( this . size ) ; dest . writeByte ( ( this . selected ? ( ( byte ) ( 1 ) ) : ( ( byte ) ( 0 ) ) ) ) ; } 
public void connect ( java.lang.String host ) throws java.io.IOException , java.net.SocketTimeoutException , java.net.UnknownHostException { decc.Peer pair = new decc.Peer ( this , host , this . port ) ; pairs . put ( pair . getHostName () , pair ) ; if ( ( ( pairs . size () ) == 1 ) && ( ( ip ) != null ) ) pair . sendBrcast ( ip ) ; } 
public static org.vitrivr.cineast.core.config.Config loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; return null ; } else { return config ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.splash ) ; java.lang.Thread timerThread = new java.lang.Thread () { public void run () { try { java.lang.Thread . sleep ( 3000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } finally { android.content.Intent intent = new android.content.Intent ( com.example.eliasvensson.busify.SplashScreen . this , com.example.eliasvensson.busify.MainActivity . class ) ; startActivity ( intent ) ; overridePendingTransition ( R.anim.fade_in , R.anim.fade_out ) ; } } } ; timerThread . start () ; } 
public static com.puppycrawl.tools.checkstyle.api.JavadocTagInfo fromText ( final java.lang.String text ) { if ( text == null ) { throw new java.lang.IllegalArgumentException ( "the text is null" ) ; } final com.puppycrawl.tools.checkstyle.api.JavadocTagInfo tag = com.puppycrawl.tools.checkstyle.api.JavadocTagInfo.TEXT_TO_TAG . get ( text ) ; if ( tag == null ) { throw new java.lang.IllegalArgumentException ( ( ( "the text [" + text ) + "] is not a valid Javadoc tag text" ) ) ; } return tag ; } 
@ java.lang.Override public void onServiceConnected ( android.content.ComponentName componentName , android.os.IBinder service ) { mBluetoothLeService = ( ( com.cooper.wheellog.BluetoothLeService.LocalBinder ) ( service ) ) . getService () ; if ( ! ( mBluetoothLeService . initialize () ) ) { android.util.Log . e ( TAG , "Unable to initialize Bluetooth" ) ; finish () ; } if ( mBluetoothLeService . isConnected () ) { mConnectionState = BluetoothLeService.STATE_CONNECTED ; buttonConnect . setText ( "DISCONNECT" ) ; buttonConnect . setEnabled ( true ) ; } } 
@ java.lang.Override public void remove ( java.lang.Object object ) { if ( ( internalList ) == null ) return; for ( int ic = 0 ; ic < ( internalList . size () ) ; ic ++ ) { if ( internalList . get ( ic ) . getReturnValue () . equals ( object ) ) { internalList . remove ( ic ) ; this . remove ( object ) ; break; } } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { checkConnection () ; theView . setVisible ( false ) ; theCAView = new gomoku.CreateAccountView () ; theCAView . setVisible ( true ) ; caController = new gomoku.CreateAccountController ( theCAView , theConnection , theView ) ; theConnection . setCreateAccountController ( caController ) ; } 
@ java.lang.Deprecated public void addTimeIconToAlarm ( long id ) { com.fasterxml.jackson.databind.node.ObjectNode jsonNotification = play.libs.Json . newObject () ; com.fasterxml.jackson.databind.node.ObjectNode action = play.libs.Json . newObject () ; jsonNotification . put ( "action" , action ) ; action . put ( "action" , "addTimeNotification" ) ; jsonNotification . put ( "alarmId" , id ) ; notifyAll ( jsonNotification ) ; } 
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String dbname = "doglovers" ; try { org.ektorp.CouchDbConnector dbc = _db . createConnector ( dbname , true ) ; java.util.List < java.lang.String > list = dbc . getAllDocIds () ; for ( java.lang.String lists : list ) { response . getWriter () . print ( ( "Get all Ids!" + lists ) ) ; } } catch ( java.lang.Exception e ) { response . getWriter () . println ( e . getMessage () ) ; } } 
public void onClick ( android.content.DialogInterface dialog , int id ) { java.lang.String name = userInput . getText () . toString () ; if ( ! ( com.nineworldsdeep.gauntlet.Utils . stringIsNullOrWhitespace ( name ) ) ) { com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile f = new com.nineworldsdeep.gauntlet.tapestry.v1.ConfigFile () ; f . setDeviceName ( name ) ; f . save () ; com.nineworldsdeep.gauntlet.Utils . toast ( this , "device name stored" ) ; } else { com.nineworldsdeep.gauntlet.Utils . toast ( this , "invalid device name" ) ; } } 
@ java.lang.Override public mil.nga.giat.mage.sdk.datastore.user.Team create ( mil.nga.giat.mage.sdk.datastore.user.Team pTeam ) throws mil.nga.giat.mage.sdk.exceptions.TeamException { mil.nga.giat.mage.sdk.datastore.user.Team createdTeam ; try { createdTeam = teamDao . createIfNotExists ( pTeam ) ; } catch ( java.sql.SQLException sqle ) { android.util.Log . e ( mil.nga.giat.mage.sdk.datastore.user.TeamHelper.LOG_NAME , ( "There was a problem creating team: " + pTeam ) , sqle ) ; throw new mil.nga.giat.mage.sdk.exceptions.TeamException ( ( "There was a problem creating team: " + pTeam ) , sqle ) ; } return createdTeam ; } 
private com.individual.thinking.traitorstown.game.Effect createEffect ( com.individual.thinking.traitorstown.game.EffectType type , com.individual.thinking.traitorstown.game.Effect effect ) { java.util.Optional < com.individual.thinking.traitorstown.game.Effect > existingEffect = effectRepository . findByEffectType ( type ) ; if ( existingEffect . isPresent () ) { com.individual.thinking.traitorstown.game.CardService.Effects . put ( type , existingEffect . get () ) ; return existingEffect . get () ; } else { effectRepository . save ( effect ) ; com.individual.thinking.traitorstown.game.CardService.Effects . put ( type , effect ) ; return effect ; } } 
@ org.osgi.service.component.annotations.Activate protected void start ( org.osgi.framework.BundleContext bundleContext ) throws java.lang.Exception { org.wso2.carbon.internal.DataHolder . getInstance () . setBundleContext ( bundleContext ) ; org.wso2.carbon.kernel.config.CarbonConfigProvider configProvider = new org.wso2.carbon.internal.kernel.config.XMLBasedConfigProvider () ; org.wso2.carbon.kernel.CarbonRuntime carbonRuntime = org.wso2.carbon.internal.kernel.context.CarbonRuntimeFactory . createCarbonRuntime ( configProvider ) ; bundleContext . registerService ( org.wso2.carbon.kernel.CarbonRuntime . class . getName () , carbonRuntime , null ) ; } 
@ java.lang.Override public void characters ( final char [] chr , final int start , final int length ) throws org.xml.sax.SAXException { final java.lang.String text = new java.lang.String ( chr ) . substring ( start , ( start + length ) ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . trace ( "characters; '{}'" , text ) ; final java.lang.String trimmedText = text . trim () ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . info ( "text: '{}'" , trimmedText ) ; this . textStack . push ( trimmedText ) ; } 
public void move ( int from , int to ) { int lastPos = getPosition () ; super . add ( to , super . remove ( from ) ) ; mObservable . notifyChanged () ; if ( from == lastPos ) moveToPosition ( to ) ; else if ( ( from < lastPos ) && ( to >= lastPos ) ) moveToPosition ( ( lastPos - 1 ) ) ; else if ( ( from > lastPos ) && ( to <= lastPos ) ) moveToPosition ( ( lastPos + 1 ) ) ; } 
@ java.lang.Override public void parseValue ( java.lang.String valueString ) { if ( valueString == null ) { setValue ( null ) ; } else { io.pelle.mango.client.FileVO file = ( ( io.pelle.mango.client.FileVO ) ( getValue () ) ) ; if ( file == null ) { file = new io.pelle.mango.client.FileVO () ; setValue ( file ) ; } file . setFileUUID ( valueString ) ; setValue ( file ) ; } } 
@ java.lang.Override public void writeToPacket ( io.netty.buffer.ByteBuf buf ) { net.minecraftforge.fluids.FluidStack fluidStack = ( ( this . tank [ 0 ] ) != null ) ? this . tank [ 0 ] . getFluid () : null ; int fluidAmount = - 1 ; int fluidID = - 1 ; if ( fluidStack != null ) { fluidAmount = fluidStack.amount ; fluidID = fluidStack . getFluidID () ; } buf . writeInt ( fluidAmount ) ; buf . writeInt ( fluidID ) ; buf . writeBoolean ( isActive ) ; } 
@ java.lang.Override public boolean canAct ( org.roda.wui.client.common.actions.Actionable.Action < org.roda.core.data.v2.ip.IndexedAIP > action , org.roda.core.data.v2.ip.IndexedAIP aip ) { boolean canAct ; if ( aip . equals ( org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT ) ) { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP . contains ( action ) ; } else if ( AIPState.UNDER_APPRAISAL . equals ( aip . getState () ) ) { canAct = ( org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ) || ( org.roda.wui.client.common.actions.AipActions.APPRAISAL_ACTIONS . contains ( action ) ) ; } else { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ; } return canAct ; } 
public java.util.concurrent.Future < ? > enqueue ( com.hortonworks.streamline.streams.notification.Notifier notifier , com.hortonworks.streamline.streams.notification.Notification notification ) { com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask task = new com.hortonworks.streamline.streams.notification.service.NotificationQueueHandler.NotificationQueueTask ( notifier , notification ) ; java.util.concurrent.Future < ? > future = executorService . submit ( task ) ; taskMap . put ( notification . getId () , org.apache.commons.lang3.tuple.Pair . of ( task , future ) ) ; return future ; } 
private void insTypeFocusLost ( java.awt.event.FocusEvent evt ) { if ( ( insType . getSelectedIndex () ) == 0 ) { return; } if ( ( insType . getSelectedItem () . toString () . length () ) <= 0 ) return; type = utils.E_Types . valueOf ( ( ( java.lang.String ) ( insType . getSelectedItem () ) ) ) ; } 
private static org.elasticsearch.hadoop.serialization.dto.mapping.Field skipHeaders ( org.elasticsearch.hadoop.serialization.dto.mapping.Field field ) { org.elasticsearch.hadoop.serialization.dto.mapping.Field [] props = field . properties () ; if ( ( ( ( ( props.length ) > 0 ) && ( ( props [ 0 ] ) != null ) ) && ( "mappings" . equals ( props [ 0 ] . name () ) ) ) && ( FieldType.OBJECT . equals ( props [ 0 ] . type () ) ) ) { return props [ 0 ] . properties () [ 0 ] ; } return field ; } 
private boolean searchFor ( java.lang.String path , java.lang.String user ) throws com.dropbox.core.DbxException { java.util.List < com.dropbox.core.DbxEntry > result ; result = ConnectionInit.client . searchFileAndFolderNames ( path , user ) ; for ( com.dropbox.core.DbxEntry f : result ) { if ( f.name . equals ( user ) ) { return true ; } } return false ; } 
public void done ( byte [] data , com.parse.ParseException e ) { if ( e == null ) { android.util.Log . d ( "test" , "We've got data in data." ) ; M . setImage ( data ) ; messages . add ( M ) ; pb . setProgress ( 60 ) ; customAdapter = new com.ferran.yep.views.InboxAdapter ( getActivity () , R.layout.custom_inbox_row , messages ) ; setListAdapter ( customAdapter ) ; } } 
private void createFileDirectory ( java.io.File files ) { try { if ( ! ( files . exists () ) ) { if ( files . mkdirs () ) { com.psk.pms.service.FileServiceImpl.LOGGER . info ( "Multiple directories are created!" ) ; } else { com.psk.pms.service.FileServiceImpl.LOGGER . info ( "Failed to create multiple directories!" ) ; } } } catch ( java.lang.Exception e ) { com.psk.pms.service.FileServiceImpl.LOGGER . info ( "Something went wrong!!" , e ) ; } } 
public boolean updateIndent ( com.hlz.webModel.IndentModel model ) { com.hlz.entity.Indent indent = dao . updateIndent ( model ) ; if ( indent != null ) { messaging . convertAndSend ( "/topic/update" , indent . getId () ) ; rabbitTemplate . convertAndSend ( "update-indent" , indent . getId () ) ; return true ; } else { return false ; } } 
private java.util.Collection < com.google.protobuf.Descriptors.FieldDescriptor > findSourceFields ( com.google.protobuf.Descriptors.FieldDescriptor enrichmentField ) { final java.lang.String byOptionArgument = enrichmentField . getOptions () . getExtension ( EventAnnotationsProto.by ) ; com.google.common.base.Preconditions . checkNotNull ( byOptionArgument ) ; final int pipeSeparatorIndex = byOptionArgument . indexOf ( org.spine3.server.event.enrich.ReferenceValidator.PIPE_SEPARATOR ) ; if ( pipeSeparatorIndex < 0 ) { return java.util.Collections . singleton ( findSourceFieldByName ( byOptionArgument , enrichmentField , true ) ) ; } else { final java.lang.String [] targetFieldNames = org.spine3.server.event.enrich.ReferenceValidator.PATTERN_PIPE_SEPARATOR . split ( byOptionArgument ) ; return findSourceFieldsByNames ( targetFieldNames , enrichmentField ) ; } } 
@ java.lang.Override public void connect ( net.minecraft.world.World world , refinedstorage.api.network.INetworkMaster network ) { if ( network . canRun () ) { this . network = network ; this . connected = true ; this . network . addSlave ( this ) ; world . notifyNeighborsOfStateChange ( pos , getBlockType () ) ; if ( canSendConnectivityUpdate () ) { refinedstorage.RefinedStorageUtils . updateBlock ( world , pos ) ; } } } 
public void addOrderRecord ( int orderId , double total ) { android.content.ContentValues values = new android.content.ContentValues () ; values . put ( com.samdevlin.restbite.database.ClientDatabase.COLUMN_ORDER_ID , orderId ) ; android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . insert ( com.samdevlin.restbite.database.ClientDatabase.TABLE_ORDERRECORD , null , values ) ; db . close () ; } 
private common.UndirectedGraphNode cloneGraph ( common.UndirectedGraphNode node , java.util.HashMap < common.UndirectedGraphNode , common.UndirectedGraphNode > nodes ) { common.UndirectedGraphNode newNode = new common.UndirectedGraphNode ( node.label ) ; nodes . put ( node , newNode ) ; for ( common.UndirectedGraphNode neighbor : node.neighbors ) { common.UndirectedGraphNode newNeighbor = nodes . get ( neighbor ) ; if ( newNeighbor == null ) { newNeighbor = cloneGraph ( neighbor , nodes ) ; } newNode.neighbors . add ( newNeighbor ) ; } return newNode ; } 
public int run ( java.io.File source , java.io.File destination ) { status = org.dataaccessioner.Migrator.STATUS_INITIALIZING ; try { status = org.dataaccessioner.Migrator.STATUS_RUNNING ; status = copyDirectory ( source , destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatusMessage ( ex . getLocalizedMessage () ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } catch ( java.lang.Exception ex ) { setStatusMessage ( ( "Unexpected Failure: " + ( ex . getLocalizedMessage () ) ) ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } return status ; } 
public java.lang.String getRunTitle ( android.content.Context context ) { if ( android.text.TextUtils . isEmpty ( mRun . getTitle () ) ) { if ( ( mRun . getRunIndex () ) != ( - 1 ) ) { return context . getString ( R.string.run_label , java.lang.Integer . toString ( ( ( mRun . getRunIndex () ) + 1 ) ) ) ; } else { return context . getString ( R.string.run_label , "" ) ; } } else { return mRun . getTitle () ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View v = inflater . inflate ( R.layout.fragment_wishlist_item_list , container , false ) ; mListView = ( ( android.widget.ListView ) ( v . findViewById ( android.R.id.list ) ) ) ; return v ; } 
private double [] primConverter ( java.lang.Double [] valArr ) { double [] primArr = new double [ valArr.length ] ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { primArr [ i ] = valArr [ i ] ; } return primArr ; } 
@ java.lang.Override public int compare ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { int res = firstClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = secondClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = thirdClassOrdering ( lRef , rRef ) ; } } return res ; } 
public void run ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator progressIndicator ) { if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( "parsing started" ) ; } long start = java.lang.System . currentTimeMillis () ; com.intellij.perlplugin.PerlInternalParser . parseAllSources ( progressIndicator ) ; long end = java.lang.System . currentTimeMillis () ; if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( ( ( "update completed in " + ( ( end - start ) / 1000 ) ) + "sec" ) ) ; } } 
@ android.support.annotation.Nullable public com.taobao.weex.WXSDKInstance takeCachedInstance ( @ android.support.annotation.Nullable java.lang.String targetUrl ) { if ( ! ( mRemoteConfig . isSwitchOn () ) ) { com.taobao.weex.utils.WXLogUtils . d ( com.taobao.weex.appfram.prerender.PreRenderManager.TAG , "takeCachedInstance failed. switch is off" ) ; return null ; } if ( android.text.TextUtils . isEmpty ( targetUrl ) ) { return null ; } com.taobao.weex.appfram.prerender.IPreRenderCache.Entry entry = mInternalCache . get ( targetUrl ) ; if ( ( ( entry != null ) && ( ( entry.data ) != null ) ) && ( entry . isFresh () ) ) { return entry.data ; } else { return null ; } } 
private void CalculatejButtonActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( ! ( SidesjTextField . getText () . isEmpty () ) ) && ( ! ( LengthjTextField . getText () . isEmpty () ) ) ) { validateInput ( SidesjTextField , LengthjTextField ) ; } } 
public void onCreate ( android.os.Bundle bundle ) { super . onCreate ( bundle ) ; setContentView ( R.layout.after_the_game ) ; intentFromGameActivity = getIntent () ; level = ( ( com.teamzenith.game.zpuzzle.model.Level ) ( intentFromGameActivity . getSerializableExtra ( "Level" ) ) ) ; createComponents () ; actions () ; } 
public void createAccessToken ( java.lang.String result ) { com.alibaba.fastjson.JSONObject tmp = com.alibaba.fastjson.JSON . parseObject ( result ) ; if ( result . contains ( "access_token" ) ) { setAccessToken ( tmp . getString ( "access_token" ) ) ; } else { setAccessToken ( tmp . getString ( "component_access_token" ) ) ; } setExpiresIn ( ( ( ( tmp . getLong ( "expires_in" ) ) - 60 ) * 1000 ) ) ; } 
void drainUntil ( long upToNanos ) { long now = timeNanos ; java.util.concurrent.PriorityBlockingQueue < hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask > q = queue ; for ( ; ; ) { hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask tt = q . peek () ; if ( ( tt == null ) || ( ( tt.dueNanos ) > upToNanos ) ) { break; } q . remove ( tt ) ; timeNanos = tt.dueNanos ; tt . run () ; } timeNanos = upToNanos ; } 
public void update ( codeu.chat.common.ConversationSummary owningConversation ) { final codeu.chat.common.User u = ( owningConversation == null ) ? null : clientContext.user . lookup ( owningConversation.owner ) ; messageOwnerLabel . setText ( ( "Owner: " + ( u == null ? owningConversation == null ? "" : owningConversation.owner : u.name ) ) ) ; messageConversationLabel . setText ( ( "Conversation: " + ( owningConversation == null ? "" : owningConversation.title ) ) ) ; getAllMessages ( owningConversation , true ) ; } 
private java.lang.String getJoinPointClassName ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint ) { java.lang.String className = null ; try { className = currentJoinPoint . getSignature () . toString () ; } catch ( final java.lang.Exception e ) { e . getStackTrace () ; java.lang.System.out . println ( e . getMessage () ) ; className = e . toString () ; } return className ; } 
public void changeToBattle ( engine.Formation formation ) { if ( ( ( currentScene ) != null ) && ( ( currentMap ) == null ) ) currentScene . stop () ; try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException e ) {} currentScene = battle ; battle . start ( formation ) ; } 
private boolean containsRPurchase ( uwi.dcit.agriexpensesvr.ResourcePurchase rpurchase ) { com.google.appengine.api.NamespaceManager . set ( rpurchase . getAccount () ) ; javax.persistence.EntityManager mgr = uwi.dcit.agriexpensesvr.ResourcePurchaseEndpoint . getEntityManager () ; boolean contains = true ; try { uwi.dcit.agriexpensesvr.ResourcePurchase item = mgr . find ( uwi.dcit.agriexpensesvr.ResourcePurchase . class , rpurchase . getKey () ) ; if ( item == null ) { contains = false ; } } finally {} return contains ; } 
public static edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder initModelBuilderWithBaselineInit ( edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders.MultiAnnModelBuilder builder , edu.byu.nlp.crowdsourcing.PriorSpecification priors , edu.byu.nlp.data.types.Dataset data , org.apache.commons.math3.random.RandomGenerator rnd ) { edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer initializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd ) ; edu.byu.nlp.crowdsourcing.ModelInitialization.AssignmentInitializer mInitializer = new edu.byu.nlp.crowdsourcing.ModelInitialization.BaselineInitializer ( rnd , true ) ; return edu.byu.nlp.crowdsourcing.MultiAnnModelBuilders . initModelBuilder ( builder , priors , data , initializer , mInitializer , rnd ) ; } 
@ java.lang.Override public void onBindViewHolder ( group.g203.countables.path.detail.view.DateViewHolder holder , int position ) { setPresenter ( holder ) ; holder.ivRemove . setTag ( mDates . get ( position ) ) ; mPresenter . setDateFormat ( holder.tvDate , mDates . get ( position ) ) ; mPresenter . handleDateColor ( holder.tvDate ) ; mPresenter . setRemoveClick ( holder.ivRemove ) ; } 
private void setStyleBarLongVisibility ( boolean value ) { if ( ( app . allowStylebar () ) && ( ( titleBarPanel ) != null ) ) { dockPanel . setWidgetSize ( titleBarPanel , ( value ? 44 : 0 ) ) ; titleBarPanel . setStyleName ( "TitleBarPanel-open" , value ) ; setLongStyleBar ( value ) ; deferredOnResize () ; } } 
public void replaceFragment ( android.support.v4.app.Fragment fragment , java.lang.String tag ) { android.support.v4.app.FragmentManager manager = getSupportFragmentManager () ; manager . beginTransaction () . setCustomAnimations ( R.anim.category_fragment_right_in , R.anim.category_fragment_left_out , R.anim.category_fragment_left_in , R.anim.category_fragment_right_out ) . hide ( getSupportFragmentManager () . findFragmentByTag ( com.bookstore.main.MainBookListFragment . class . getSimpleName () ) ) . addToBackStack ( null ) . add ( R.id.container_view , fragment , tag ) . commit () ; } 
@ java.lang.Override public void joinServer ( java.net.InetSocketAddress server ) { java.lang.String host = server . getHostString () ; int port = server . getPort () ; net.minecraft.client.multiplayer.ServerData serverData = new net.minecraft.client.multiplayer.ServerData ( "Sponge API Call" , ( ( host + ":" ) + port ) , false ) ; net.minecraftforge.fml.client.FMLClientHandler . instance () . connectToServer ( this . currentScreen , serverData ) ; } 
@ java.lang.Override public org.apache.drill.common.expression.PathSegment.ArraySegment cloneWithNewChild ( org.apache.drill.common.expression.PathSegment newChild ) { org.apache.drill.common.expression.PathSegment.ArraySegment seg = ( ( index ) < 0 ) ? new org.apache.drill.common.expression.PathSegment.ArraySegment ( null ) : new org.apache.drill.common.expression.PathSegment.ArraySegment ( index ) ; if ( ( child ) != null ) { seg . setChild ( child . cloneWithNewChild ( newChild ) ) ; } else { seg . setChild ( newChild ) ; } return seg ; } 
public org.openforis.collect.model.NodeChangeSet addAttribute ( org.openforis.idm.model.Entity parentEntity , java.lang.String attributeName , org.openforis.idm.model.Value value , org.openforis.collect.model.FieldSymbol symbol , java.lang.String remarks ) { org.openforis.idm.model.Attribute < ? , ? > attribute = performAttributeAdd ( parentEntity , attributeName , value , symbol , remarks ) ; setMissingValueApproved ( parentEntity , attributeName , false ) ; if ( value == null ) { applyInitialValue ( attribute , true ) ; } org.openforis.collect.model.NodeChangeMap changeMap = new org.openforis.collect.model.NodeChangeMap () ; changeMap . addAttributeAddChange ( attribute ) ; return afterAttributeInsertOrUpdate ( changeMap , attribute ) ; } 
@ java.lang.Override public void render ( com.badlogic.gdx.graphics.g2d.SpriteBatch batch ) { for ( int currentX = 0 ; currentX < ( innerTiles.length ) ; currentX ++ ) { for ( int currentY = 0 ; currentY < ( innerTiles [ 0 ] . length ) ; currentY ++ ) { innerTiles [ currentX ] [ currentY ] . render ( batch ) ; } } } 
public int hit ( int armor ) { int damage ; if ( ( armor > 0 ) && ( armor < 20 ) ) { damage = this . DAMAGE ; } else { damage = ( this . DAMAGE ) - armor ; } return damage < 0 ? 0 : damage ; } 
public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } return builder . toString () ; } 
public static final void unbind ( java.lang.Object source ) { try { themeable.StyleBinder styleBinder = themeable.Themeable . findStyleBinderForClass ( source . getClass () ) ; styleBinder . unbind ( source ) ; themeable.Themeable.bound = false ; } catch ( java.lang.Exception e ) { android.util.Log . e ( themeable.Themeable.TAG , "Failed to find binding class" , e ) ; } } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { switch ( type ) { case "proj" : io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; break; case "ds" : info = datasetInfo ( id ) ; break; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } 
public double calculateIDF ( java.util.List < java.lang.String [] > documents , java.lang.String wordToCheck ) { double count = 0 ; for ( java.lang.String [] ss : documents ) { for ( java.lang.String s : ss ) { if ( s . equalsIgnoreCase ( wordToCheck ) ) { count ++ ; break; } } } return java.lang.Math . log ( ( ( ( documents . size () ) / 1 ) + count ) ) ; } 
public static java.lang.String hmacSHA256 ( byte [] secret , java.lang.String message ) { java.lang.String hash = null ; try { javax.crypto.Mac sha256_HMAC = javax.crypto.Mac . getInstance ( "HmacSHA256" ) ; javax.crypto.spec.SecretKeySpec secret_key = new javax.crypto.spec.SecretKeySpec ( secret , "HmacSHA256" ) ; sha256_HMAC . init ( secret_key ) ; hash = new java.lang.String ( android.util.Base64 . encode ( sha256_HMAC . doFinal ( message . getBytes () ) , Base64.DEFAULT ) ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( ke.co.interintel.nikobizzapi.encryption.ApiSecurity.TAG , "Error" , e ) ; } return hash ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.btGallerySingleImage : pickImageSingle () ; break; case R.id.btGalleryMultipleImages : pickImageMultiple () ; break; case R.id.btCameraImage : takePicture () ; break; case R.id.btCameraImageCrop : takePictureAndCrop () ; break; case R.id.btGallerySingleImageCrop : pickImageSingleAndCrop () ; break; } } 
public void register ( com.qualcomm.robotcore.eventloop.opmode.OpModeManager manager ) { manager . register ( "NullOp" , com.qualcomm.ftcrobotcontroller.opmodes.NullOp . class ) ; manager . register ( "MatrixK9TeleOp" , com.qualcomm.ftcrobotcontroller.opmodes.MatrixK9TeleOp . class ) ; manager . register ( "K9TeleOp" , com.qualcomm.ftcrobotcontroller.opmodes.Gyro_One . class ) ; manager . register ( "PushBotAuto" , com.qualcomm.ftcrobotcontroller.opmodes.PushBotAuto . class ) ; manager . register ( "Tankie" , com.qualcomm.ftcrobotcontroller.opmodes.TankDrive . class ) ; manager . register ( "Auto " , com.qualcomm.ftcrobotcontroller.opmodes.Autonomous . class ) ; manager . register ( "All Test" , com.qualcomm.ftcrobotcontroller.opmodes.AllTest . class ) ; } 
public E get ( int index ) { LinkedSet < E > . Item < E > item = main ; if ( ( index < 0 ) || ( index >= ( size ) ) ) { throw new java.lang.IndexOutOfBoundsException ( ( ( ( ( "Index " + index ) + " isn't in range (0 - " ) + ( ( size ) - 1 ) ) + ")" ) ) ; } for ( int i = 0 ; i <= index ; i ++ ) { item = item.next ; } return item.value ; } 
public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setTouchAreaBindingOnActionDownEnabled ( false ) ; setTouchAreaBindingOnActionMoveEnabled ( false ) ; android.content.Intent shareIntent = new android.content.Intent () ; shareIntent . setAction ( Intent.ACTION_SEND ) ; shareIntent . setType ( "text/plain" ) ; shareIntent . setPackage ( "com.twitter.android" ) ; shareIntent . putExtra ( Intent.EXTRA_TEXT , ( ( "My score in #ProtectTheTown is " + ( score ) ) + " points. And yours?" ) ) ; activity . tweetScore ( shareIntent ) ; } return true ; } 
private void deletePage ( int pageIndex ) { for ( roottemplate.calculator.data.KeyboardKits.KitVersion kv : mCurrentKitV.mParent.mKitVersions ) { roottemplate.calculator.data.KeyboardKits [] pages = kv.mPages ; kv.mPages = roottemplate.calculator.util.Util . removeFromObjectArray ( pages , pageIndex , new roottemplate.calculator.data.KeyboardKits.Page [ ( pages.length ) - 1 ] ) ; if ( ( kv.mMainPageIndex ) > pageIndex ) ( kv.mMainPageIndex ) -- ; else if ( ( kv.mMainPageIndex ) >= ( kv.mPages.length ) ) kv.mMainPageIndex = ( kv.mPages.length ) - 1 ; } mKitPreviewAdapter . notifyDataSetChanged () ; } 
@ java.lang.Override protected void onMeasure ( int widthMeasureSpec , int heightMeasureSpec ) { if ( heightMeasureSpec != 0 ) { int sizeWidth = de.dmxcontrol.widget.MeasureSpec . getSize ( widthMeasureSpec ) ; int sizeHeight = de.dmxcontrol.widget.MeasureSpec . getSize ( heightMeasureSpec ) ; if ( ( sizeHeight < sizeWidth ) && false ) { heightMeasureSpec = de.dmxcontrol.widget.MeasureSpec . makeMeasureSpec ( sizeHeight , de.dmxcontrol.widget.MeasureSpec . getMode ( heightMeasureSpec ) ) ; } } super . onMeasure ( widthMeasureSpec , heightMeasureSpec ) ; } 
public static void showMessage ( android.content.Context context , java.lang.String title , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; } 
public org.osgi.framework.ServiceReference getServiceReference ( java.lang.String clazz ) { org.osgi.framework.ServiceReference [] references ; try { references = getServiceReferences ( clazz , null ) ; if ( ( references == null ) || ( ( references.length ) == 0 ) ) { return null ; } java.util.Arrays . sort ( references ) ; return references [ ( ( references.length ) - 1 ) ] ; } catch ( org.osgi.framework.InvalidSyntaxException e ) { throw new java.lang.Error ( "Invalid filter syntax thrown for null filter." , e ) ; } } 
@ java.lang.Override protected boolean matchesSafely ( T item ) { T startOfWindow = ( ( T ) ( other . minus ( window , units ) ) ) ; T endOfWindow = ( ( T ) ( other . plus ( window , units ) ) ) ; return ( ( startOfWindow . compareTo ( item ) ) <= 0 ) && ( ( endOfWindow . compareTo ( item ) ) >= 0 ) ; } 
private void CheckInfiniteLoop ( nez.lang.Expression e , java.lang.String var ) { if ( ! ( consumption . isConsumed ( e ) ) ) { If ( var , _Eq () , _Field ( _state () , "pos" ) ) ; { Break () ; } EndIf () ; } } 
@ javax.annotation.Nullable @ java.lang.Override public org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig get ( final org.metaborg.core.project.ILanguageSpec languageSpec ) throws java.io.IOException { @ javax.annotation.Nullable org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig config = this . configurationBasedLanguageSpecConfigService . get ( languageSpec ) ; if ( ( config == null ) && ( languageSpec instanceof org.metaborg.core.project.IProject ) ) { @ javax.annotation.Nullable final org.metaborg.spoofax.core.project.settings.LegacySpoofaxProjectSettings settings ; try { settings = this . settingsService . get ( ( ( org.metaborg.core.project.IProject ) ( languageSpec ) ) ) ; } catch ( org.metaborg.core.project.ProjectException e ) { throw new java.io.IOException ( e ) ; } if ( settings != null ) { config = new org.metaborg.spoofax.core.project.configuration.LegacySpoofaxLanguageSpecConfig ( settings ) ; } } return config ; } 
@ java.lang.Override public void onSensorChanged ( android.hardware.SensorEvent event ) { if ( ( spaceShip ) == null ) return; if ( ( event.sensor . getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float rawX = event.values [ 0 ] ; float normalizedX = rawX * ( - 2.0F ) ; spaceShip . setXVelocity ( ( ( int ) ( normalizedX ) ) ) ; } } 
public static void spannableEmoticonFilterFromFile ( final android.widget.TextView tv_content , java.lang.String filePath , java.lang.String content ) { android.text.SpannableStringBuilder spannableStringBuilder = new android.text.SpannableStringBuilder ( content ) ; android.text.Spannable spannable = com.sj.androidemoji.EmojiDisplayFromFIle . spannableFilter ( tv_content . getContext () , filePath , spannableStringBuilder , content , com.sj.androidemoji.MainActivity . getFontHeight ( tv_content ) , null ) ; tv_content . setText ( spannable ) ; } 
private void saveEntry ( org.owasp.dependencycheck.dependency.Vulnerability vuln ) throws java.io.IOException , org.apache.lucene.index.CorruptIndexException , org.owasp.dependencycheck.data.nvdcve.DatabaseException { final java.lang.String cveName = vuln . getName () ; if ( ( ( prevVersionVulnMap ) != null ) && ( prevVersionVulnMap . containsKey ( cveName ) ) ) { final java.util.List < org.owasp.dependencycheck.dependency.VulnerableSoftware > vulnSoftware = prevVersionVulnMap . get ( cveName ) ; for ( org.owasp.dependencycheck.dependency.VulnerableSoftware vs : vulnSoftware ) { vuln . updateVulnerableSoftware ( vs ) ; } } if ( ( cveDB ) != null ) { cveDB . updateVulnerability ( vuln ) ; } } 
private void displayResult ( java.lang.String inputTemperature , float convertedTemperature , boolean isInput_Fahrenheit ) { mTextView_Result . setText ( ( ( ( inputTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + convertedTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; if ( isInput_Fahrenheit ) { mTextView_Result . setText ( ( ( ( convertedTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + inputTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; location = ( ( android.widget.TextView ) ( findViewById ( R.id.locationText ) ) ) ; auth.hci.adscanner.controller.GPSTracker gps = new auth.hci.adscanner.controller.GPSTracker ( this ) ; if ( gps . canGetLocation () ) { location . setText ( ( ( ( "Langtitude: " + ( gps . getLatitude () ) ) + "\nLongtitude: " ) + ( gps . getLongitude () ) ) ) ; } else { gps . showSettingsAlert () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent scheduleDetailIntent = new android.content.Intent ( jContext , com.android.activelife.tampa.ui.ScheduleContainerActivity . class ) ; scheduleDetailIntent . putExtra ( "schedule_id" , mMessagesDataResponseList . get ( position ) . getId () ) ; scheduleDetailIntent . putExtra ( "schedule_name" , mMessagesDataResponseList . get ( position ) . getSchedule () . getName () ) ; jContext . startActivity ( scheduleDetailIntent ) ; } 
private void CreateSpecies ( java.lang.String type , int number ) { for ( int i = 0 ; i < number ; i ++ ) { GetPositionsAndTypes () ; ( ( java.util.List < Species.ISpecie > ) ( species ) ) . add ( Species.SpecieFactory . GetSpecies ( type , RandomPosition () ) ) ; } GetPositionsAndTypes () ; } 
public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) { com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; com.minecraftmarket.util.Log . log ( " " ) ; } } 
public static int includedNumbers ( java.util.List < java.lang.Integer [] > ranges ) { java.util.List < java.lang.Integer > numbers = new java.util.ArrayList < java.lang.Integer > () ; java.util.List < es.madhava.integerfun.Range > rangesList = new java.util.ArrayList < es.madhava.integerfun.Range > () ; for ( java.lang.Integer [] range : ranges ) { es.madhava.integerfun.RangeMerge . addRange ( rangesList , range ) ; } for ( es.madhava.integerfun.Range range : rangesList ) { numbers . addAll ( range . getNumbers () ) ; } return numbers . size () ; } 
private void setTeamColor ( net.minecraft.scoreboard.ScorePlayerTeam team , java.lang.String newTeamColor ) { java.lang.String prefix = team . getColorPrefix () ; java.lang.String prefixSplit ; try { prefixSplit = prefix . substring ( 4 ) ; } catch ( java.lang.NullPointerException e ) { prefix = "\u00a7r\u00a7r" ; prefixSplit = "" ; } catch ( java.lang.StringIndexOutOfBoundsException e ) { prefixSplit = "" ; } team . setNamePrefix ( ( newTeamColor + prefixSplit ) ) ; } 
public static void applyToText ( java.lang.CharSequence charSequence , android.graphics.Typeface typeface , int start , int end ) { if ( charSequence instanceof android.text.Spannable ) { android.text.Spannable spannable = ( ( android.text.Spannable ) ( charSequence ) ) ; spannable . setSpan ( cat.ppicas.customtypeface.CustomTypefaceSpan . getInstance ( typeface ) , start , end , Spanned.SPAN_INCLUSIVE_INCLUSIVE ) ; } } 
@ java.lang.Override public boolean visit ( org.eclipse.php.internal.core.compiler.ast.visitor.PHPCallExpression node ) throws java.lang.Exception { if ( ( node . getReceiver () ) != null ) { node . getReceiver () . traverse ( this ) ; } if ( ( node . getArgs () ) != null ) { node . getArgs () . traverse ( this ) ; } visitGeneral ( node ) ; return false ; } 
public void mouseReleased ( java.awt.event.MouseEvent e ) { if ( ( e . getButton () ) == ( java.awt.event.MouseEvent.BUTTON1 ) ) { dragging = false ; java.lang.System.out . println ( "released" ) ; command = new controller.TravelCommand ( currentPersModel , initPosX , initPosy , e . getX () , e . getY () ) ; cmdMan . storeAndExecute ( command , currentPersModel . getID () ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( o == null ) return false ; if ( o instanceof net.osmand.plus.quickaction.QuickAction ) { net.osmand.plus.quickaction.QuickAction action = ( ( net.osmand.plus.quickaction.QuickAction ) ( o ) ) ; if ( ( type ) != ( action.type ) ) return false ; if ( ( id ) != ( action.id ) ) return false ; return true ; } else return false ; } 
public me.noize.chemistry.io.TimeRange extendTo ( final long time ) { if ( time < ( this . getStart () ) ) { return new me.noize.chemistry.io.TimeRange ( time , this . getEnd () ) ; } else if ( ( this . getEnd () ) < time ) { return new me.noize.chemistry.io.TimeRange ( this . getStart () , time ) ; } else { return this ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { int prog = seekBar . getProgress () ; this . warmth = prog + 1 ; this . recapWarmth . setText ( android.text.Html . fromHtml ( ( ( ( "<b>" + ( res . getString ( R.string.recapHot ) ) ) + "</b>" ) + ( hotWordArray [ prog ] ) ) ) ) ; } 
@ java.lang.Override public com.windowsazure.messaging.NotificationPlatform convertTo ( com.bosch.cn.dad.notificationhub.model.DeviceType srcDeviceType , com.windowsazure.messaging.NotificationPlatform destPlatform ) { if ( srcDeviceType == null ) { return null ; } switch ( srcDeviceType ) { case WindowsNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Wns ; break; case WindowsPhoneNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Mpns ; break; case AppleNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Apns ; break; case BaiduNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm ; break; case GoogleCloudMessaging : destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm ; break; case AmazonDeviceMessaging : destPlatform = com.windowsazure.messaging.NotificationPlatform.Adm ; break; } return destPlatform ; } 
public java.lang.String inflectNoun ( java.lang.String nounLemma , java.lang.String inflection ) { java.lang.String toRet = null ; ballpark.WordElement word = lexicon . getWord ( nounLemma , LexicalCategory.NOUN ) ; if ( inflection . contains ( "def" ) ) { if ( inflection . contains ( "plu" ) ) { ballpark.InflectedWordElement pluralWord = new ballpark.InflectedWordElement ( word ) ; pluralWord . setPlural ( true ) ; toRet = realiser . realise ( pluralWord ) . toString () ; } if ( toRet != null ) return "the " + toRet ; else return "the " + nounLemma ; } return nounLemma ; } 
private static double compare ( final java.lang.String v1 , final java.lang.String v2 , final double high , final double low , final java.util.Comparator comparator ) { if ( comparator == null ) { return org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ; } double sim = comparator . compare ( v1 , v2 ) ; if ( sim < low ) { return low ; } else { return ( ( high - ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ) * ( sim * sim ) ) + ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ; } } 
private void firePrefixOrSuffix ( java.lang.String key ) { for ( java.lang.String k : new java.util.LinkedList ( callbacksByMatch . keySet () ) ) { if ( key . startsWith ( k ) ) { fireMatch ( key , Match.PREFIX ) ; } if ( key . endsWith ( k ) ) { fireMatch ( key , Match.SUFFIX ) ; } } } 
private Board swapRight ( int blankX , int blankY ) { Board swap = new Board ( this . board ) ; if ( blankY >= ( ( this . dimensions () ) - 1 ) ) { throw new java.lang.IndexOutOfBoundsException ( "Can not swap right most column right" ) ; } exchange ( swap.board , blankX , blankY , blankX , ( blankY + 1 ) ) ; return swap ; } 
public void editClass ( android.view.View view ) { java.util.List < android.widget.CheckBox > selectedClasses = projectManager . getCheckedCheckBoxes () ; switch ( selectedClasses . size () ) { case 0 : break; case 1 : { editSingleClass ( selectedClasses ) ; break; } default: {} } } 
private void outputToFile ( java.lang.String text ) { java.lang.String id = xaurora.io.IDGenerator . instanceOf () . GenerateID ( xaurora.communication.ChromeServer . getURL ( text ) , xaurora.communication.ChromeServer.TYPE_FULL_TEXT ) ; xaurora.io.DataFileIO . instanceOf () . createDataFile ( id , java.lang.String . valueOf ( text ) . getBytes () ) ; java.lang.System.out . println ( java.lang.String . valueOf ( text ) ) ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.activity_main_toolbar , menu ) ; mPathItem = menu . findItem ( R.id.main_toolbar_path ) ; mTrafficItem = menu . findItem ( R.id.main_toolbar_traffic ) ; if ( getSharedBoolean ( SharedPrefs.KEY_SHOW_PATH ) ) mPathItem . setIcon ( R.drawable.road_variant_on ) ; if ( getSharedBoolean ( SharedPrefs.KEY_SHOW_TRAFFIC ) ) mTrafficItem . setIcon ( R.drawable.ic_traffic_24dp_on ) ; return true ; } 
public void append ( java.lang.String key , java.lang.String content ) { java.lang.String value = get ( key ) ; if ( value != null ) { value += content ; } put ( key , value ) ; logger . info ( ( ( ( ( ( "Node[" + ( node . getHashcode () ) ) + "] APPEND Key:" ) + key ) + "Value:" ) + value ) ) ; } 
public static com.gmail.trentech.pjc.core.SQLManager get ( org.spongepowered.api.plugin.PluginContainer plugin ) { if ( ! ( com.gmail.trentech.pjc.core.SQLManager.sqlManagers . containsKey ( plugin . getId () ) ) ) { com.gmail.trentech.pjc.core.SQLManager sqlManager = new com.gmail.trentech.pjc.core.SQLManager ( plugin ) ; com.gmail.trentech.pjc.core.SQLManager.sqlManagers . put ( plugin . getId () , sqlManager ) ; } return com.gmail.trentech.pjc.core.SQLManager.sqlManagers . get ( plugin . getId () ) ; } 
public static void init ( final int measurements , final java.lang.String [] events , int . . . options ) { if ( ( cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet ) != ( - 1 ) ) { cz.cuni.mff.d3s.perf.Measurement . destroyEventSet ( cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet ) ; cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet = - 1 ; } cz.cuni.mff.d3s.perf.Benchmark.defaultEventSet = cz.cuni.mff.d3s.perf.Measurement . createEventSet ( measurements , events , options ) ; } 
@ java.lang.Override public com.sun.jersey.api.client.ClientResponse get ( java.net.URI uri ) throws com.emc.storageos.svcs.errorhandling.resources.InternalException { java.net.URI requestURI = _base . resolve ( uri ) ; com.sun.jersey.api.client.ClientResponse response = setResourceHeaders ( _client . resource ( requestURI ) ) . type ( MediaType.APPLICATION_JSON ) . get ( com.sun.jersey.api.client.ClientResponse . class ) ; if ( authenticationFailed ( response ) ) { authenticate () ; response = setResourceHeaders ( _client . resource ( requestURI ) ) . type ( MediaType.APPLICATION_JSON ) . get ( com.sun.jersey.api.client.ClientResponse . class ) ; } checkResponse ( uri , response ) ; return response ; } 
@ java.lang.Override public java.lang.Object getSystemService ( java.lang.String name ) { if ( ( ( Context.LAYOUT_INFLATER_SERVICE . equals ( name ) ) == true ) && ( ( com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity . getWindow () ) != null ) ) { return droid4mizer . getSystemService ( name , com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity . getWindow () . getLayoutInflater () ) ; } else { return droid4mizer . getSystemService ( name , super . getSystemService ( name ) ) ; } } 
public boolean addRoomToBooking ( long bookingId ) { if ( ( bookingId < 1 ) || ( bookingId > ( currentBookingId ) ) ) { return false ; } else if ( ( currentReservationNumber ) >= ( MAX_ROOMS ) ) { return false ; } else { ++ ( currentReservationNumber ) ; reservationToBookingId . put ( currentReservationId , bookingId ) ; ++ ( currentReservationId ) ; return true ; } } 
public void removeConnectedFlagCascade ( int trackIdx ) { mTracks . get ( trackIdx ) . setConnectedPrev ( false ) ; for ( int i = trackIdx + 1 ; i < ( mTracks . size () ) ; i ++ ) { if ( mTracks . get ( i ) . isConnectedPrev () ) mTracks . get ( i ) . setConnectedPrev ( false ) ; else break; } } 
@ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( getData () . getSender () ) ) + "; receivers: " ) + ( getData () . getReceivers () ) ) + "; performative: " ) + ( getData () . getPerformativeName () ) ) + "; content: " ) + ( getData () . getContent () ) ) + "; content" ) + "]" ; } 
@ java.lang.Override public final void setForbidden ( java.lang.String spec1 , java.lang.String spec2 ) { addVariable ( spec1 ) ; addVariable ( spec2 ) ; spec1 = checkSpec ( spec1 ) ; spec2 = checkSpec ( spec2 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f1 = getExtent ( spec1 ) ; java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > f2 = getExtent ( spec2 ) ; edu.cmu.tetrad.data.OrderedPair < java.util.Set < edu.cmu.tetrad.data.Knowledge2.MyNode > > o = new edu.cmu.tetrad.data.OrderedPair ( f1 , f2 ) ; if ( ! ( forbiddenRulesSpecs . contains ( o ) ) ) { forbiddenRulesSpecs . add ( o ) ; } } 
public boolean InspectInventory ( java.lang.String object ) { for ( int col = 0 ; col < ( playerInventory.length ) ; col ++ ) { if ( playerInventory [ col ] [ 1 ] . toString () . equals ( object ) ) { return true ; } } return false ; } 
public void addScenario ( java.lang.String scenarioName , elevatorsimulation.Model.BuildingScenario buildingScenario ) { if ( ! ( scenarioExists ( scenarioName ) ) ) { buildingScenarios . put ( scenarioName , buildingScenario ) ; scenarioEntries . add ( buildingScenario . getScenarioEntryText () . toString () ) ; return; } try { throw new elevatorsimulation.Exceptions.ScenarioAlreadyExistsException () ; } catch ( elevatorsimulation.Exceptions.ScenarioAlreadyExistsException e ) { java.lang.System.out . println ( "Scenario Already Exists" ) ; } } 
@ java.lang.Override public void grant ( co.cask.cdap.proto.id.EntityId entity , co.cask.cdap.proto.security.Principal principal , java.util.Set < co.cask.cdap.proto.security.Action > actions ) throws co.cask.cdap.common.FeatureDisabledException , co.cask.cdap.common.NotFoundException , co.cask.cdap.common.UnauthenticatedException , co.cask.cdap.security.spi.authorization.UnauthorizedException , java.io.IOException { co.cask.cdap.proto.security.GrantRequest grantRequest = new co.cask.cdap.proto.security.GrantRequest ( entity , principal , actions ) ; java.net.URL url = config . resolveURLV3 ( ( ( co.cask.cdap.client.AuthorizationClient.AUTHORIZATION_BASE ) + "/privileges/grant" ) ) ; co.cask.common.http.HttpRequest request = co.cask.common.http.HttpRequest . post ( url ) . withBody ( co.cask.cdap.client.AuthorizationClient.GSON . toJson ( grantRequest ) ) . build () ; executePrivilegeRequest ( entity , principal , request ) ; } 
public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.api.auth.Identity identity ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( identity . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } 
@ java.lang.Override public void onViewCreated ( android.view.View view , @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onViewCreated ( view , savedInstanceState ) ; mAdapter = new com.rukiasoft.androidapps.cocinaconroll.ui.EditRecipeRecyclerViewAdapter ( getActivity () , recipeItem . getIngredients () , this ) ; recyclerView . setAdapter ( mAdapter ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( getActivity () ) ) ; android.support.v7.widget.helper.ItemTouchHelper.Callback callback = new com.rukiasoft.androidapps.cocinaconroll.dragandswipehelper.SimpleItemTouchHelperCallback ( mAdapter ) ; mItemTouchHelper = new android.support.v7.widget.helper.ItemTouchHelper ( callback ) ; mItemTouchHelper . attachToRecyclerView ( recyclerView ) ; } 
@ java.lang.Override public double deposit ( double amount ) { if ( ( getBalance () ) == 0 ) return 0 ; double deposited = super . deposit ( amount ) ; double finalDeposit = against . deposit ( deposited ) ; double difference = deposited - finalDeposit ; if ( difference != 0 ) { super . withdraw ( difference ) ; } return finalDeposit ; } 
private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start , end ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } 
protected static java.lang.String [] createNames ( int nameCount , java.lang.String preamble ) { if ( preamble == null ) preamble = "V" ; int i = 0 ; java.lang.String [] n = new java.lang.String [ nameCount ] ; while ( i < nameCount ) { n [ i ] = preamble + ( ++ i ) ; } return n ; } 
public static int getFutureLinesVanished ( de.slothsoft.tetris.Board board , de.slothsoft.tetris.Stone stone , int blockY ) { int lines = 0 ; for ( int y = 0 ; y < ( stone . getHeightInBlocks () ) ; y ++ ) { int stoneBlocks = stone . calculateBlockCountOfLine ( y ) ; int boardBlocksCount = board . calculateBlockCountOfLine ( ( y + blockY ) ) ; if ( ( stoneBlocks + boardBlocksCount ) >= ( Board.WIDTH_IN_BLOCKS ) ) { lines ++ ; } } return lines ; } 
@ java.lang.Override public void onDataChange ( com.learn.shruti.ratemyday.DataSnapshot dataSnapshot ) { for ( com.learn.shruti.ratemyday.DataSnapshot postSnapshot : dataSnapshot . getChildren () ) { com.learn.shruti.ratemyday.Model.Review r = postSnapshot . getValue ( com.learn.shruti.ratemyday.Model.Review . class ) ; if ( r.employeeEmail . equals ( userEmail ) ) reviewList . add ( r ) ; android.widget.Toast . makeText ( this , ( ( ( "com: " + ( r.comments ) ) + ", rate " ) + ( r.rating ) ) , Toast.LENGTH_SHORT ) . show () ; } } 
public java.lang.String getReferenceTable ( ru.osslabs.model.datasource.MetaObject metaObject , java.lang.String fieldName ) { java.lang.String result = "" ; if ( metaObject != null ) { if ( metaObject . getChildren () . containsKey ( fieldName ) ) { result = metaObject . getChildren () . get ( fieldName ) . getType () . getSecondary () ; } } return result ; } 
private void readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; } } 
public void setLanecover ( float lanecover ) { lanecover = ( lanecover < 0 ) ? 0 : lanecover > 1 ? 1 : lanecover ; this . lanecover = lanecover ; if ( ( this . fixhispeed ) != ( bms.player.beatoraja.Config.FIX_HISPEED_OFF ) ) { hispeed = ( ( float ) ( ( ( ( 2400.0F / ( ( basebpm ) / 100 ) ) / ( gvalue ) ) * 0.6 ) * ( 1 - ( enableLanecover ? lanecover : 0 ) ) ) ) ; } } 
public int incrementNumberOfScheduledDeliveries ( long messageID ) { org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData ( messageID ) ; int numOfSchedules = 0 ; if ( trackingData != null ) { trackingData . addMessageStatus ( MessageStatus.SCHEDULED_TO_SEND ) ; numOfSchedules = trackingData.numberOfScheduledDeliveries . incrementAndGet () ; if ( org.wso2.andes.kernel.OnflightMessageTracker.log . isDebugEnabled () ) { org.wso2.andes.kernel.OnflightMessageTracker.log . debug ( ( ( ( "message id= " + messageID ) + " scheduled. Pending to execute= " ) + numOfSchedules ) ) ; } } return numOfSchedules ; } 
public boolean applyTop ( int id ) { boolean bool = false ; int applyTotal = newsDao . applyTotalTop () ; if ( applyTotal < 5 ) { int count = newsDao . applyTop ( id ) ; if ( count > 0 ) { bool = true ; } } return bool ; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { if ( ! ( ( query . isEmpty () ) || ( query . equals ( lastQuery ) ) ) ) { lastQuery = query ; mArtistAdapter . clear () ; new com.bmriv.android.streamify.QueryArtistTask ( mArtistAdapter , this ) . execute ( query ) ; } return true ; } 
public static java.lang.String formatRange ( java.lang.String source , com.intellij.openapi.util.TextRange range , org.jetbrains.kotlin.psi.KtPsiFactory psiFactory , java.lang.String fileName ) { org.jetbrains.kotlin.psi.KtFile ktFile = org.jetbrains.kotlin.formatting.KotlinFormatterUtils . createKtFile ( source , psiFactory , fileName ) ; com.intellij.formatting.Block rootBlock = new org.jetbrains.kotlin.formatting.KotlinBlock ( ktFile . getNode () , org.jetbrains.kotlin.formatting.NodeAlignmentStrategy . getNullStrategy () , com.intellij.formatting.Indent . getNoneIndent () , null , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , org.jetbrains.kotlin.idea.formatter.KotlinSpacingRulesKt . createSpacingBuilder ( org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , KotlinSpacingBuilderUtilImpl.INSTANCE ) ) ; return org.jetbrains.kotlin.formatting.KotlinFormatterUtils . formatRange ( ktFile , rootBlock , org.jetbrains.kotlin.formatting.KotlinFormatterUtils.settings , source , range ) ; } 
@ android.support.annotation.MainThread protected void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () . initLoader ( 0 , null , this ) ; if ( savedInstanceState == null ) { refresh () ; } } 
@ java.lang.Override public java.util.List < java.lang.Long > getSolutionProjects ( long id ) { java.util.List < java.lang.Long > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Long . parseLong ( team . get ( "id" ) . toString () ) ) ; } return projects ; } 
private org.springframework.http.ResponseEntity < ? > createTenantWorker ( net.smartcosmos.usermanagement.tenant.dto.CreateTenantRequest createTenantRequest , net.smartcosmos.security.user.SmartCosmosUser user ) { java.util.Optional < net.smartcosmos.usermanagement.tenant.dto.CreateTenantResponse > createTenantResponse = tenantDao . createTenant ( createTenantRequest ) ; if ( createTenantResponse . isPresent () ) { return buildCreatedResponseEntity ( createTenantResponse . get () ) ; } else { return org.springframework.http.ResponseEntity . status ( HttpStatus.CONFLICT ) . build () ; } } 
private Player.Solution buildRandomSolution ( Player.GameState gs , Player.AI opAI , Player.ScoreEvaluation eval ) { Player.Solution solution = new Player.Solution ( Player.MagicNumbers.SIMULATION_DEPTH ) ; Player.GameState newGs = gs . copy () ; for ( int i = 0 ; i < ( Player.MagicNumbers.SIMULATION_DEPTH ) ; i ++ ) { solution.actions [ i ] = getRandomAction ( gs ) ; Player.GameEngine . applyActionWithoutCopy ( newGs , solution.actions [ i ] , opAI . compute ( gs ) ) ; solution.score += eval . getGameStateScore ( newGs , i ) ; } return solution ; } 
public void set ( org.md2k.ema_scheduler.configuration.EMAType emaType , org.md2k.ema_scheduler.delivery.Callback callback ) { org.md2k.utilities.Report.Log . d ( org.md2k.ema_scheduler.notifier.NotifierManager.TAG , "set()..." ) ; this . emaType = emaType ; this . notifications = emaType . getNotifications () ; this . callbackDelivery = callback ; lastAckTime = 0 ; lastInsertTime = 0 ; notifyNo = 0 ; delayEnable = true ; org.md2k.utilities.Report.Log . d ( org.md2k.ema_scheduler.notifier.NotifierManager.TAG , "before runnableSubscribe.." ) ; handlerSubscribe . post ( runnableSubscribe ) ; } 
@ org.springframework.transaction.annotation.Transactional public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) throws org.egov.infra.exception.ApplicationRuntimeException { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } 
private source.Node < T > find ( T key , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = key . compareTo ( node.key ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( key , node.rightChild ) ; } else { return find ( key , node.leftChild ) ; } } 
public boolean connectWith ( final com.kcht.parking.charge.timeline.Period another ) { return ( ( ( ( this . endHour ) == ( another.startHour ) ) && ( ( this . endMinute ) == ( another.startMinute ) ) ) && ( ( this . startHour ) == ( another.endHour ) ) ) && ( ( this . startMinute ) == ( another.endMinute ) ) ; } 
@ java.lang.Override public void resolveCollision ( asteroids.model.WorldObject other ) { if ( other instanceof asteroids.model.Ship ) { this . resolveCollision ( ( ( asteroids.model.Ship ) ( other ) ) ) ; } else if ( other instanceof asteroids.model.Bullet ) { this . resolveCollision ( ( ( asteroids.model.Bullet ) ( other ) ) ) ; } else { other . resolveCollision ( this ) ; } } 
public void setCreepFactor ( boolean creepFactor ) { if ( ( ( minAge ) <= ( baeAge ) ) && ( ( maxAge ) >= ( baeAge ) ) ) { creepFactor = false ; } else { creepFactor = true ; } this . creepFactor = creepFactor ; } 
@ java.lang.Override protected void keyDown ( int eventKey , char ch , boolean shift , boolean ctrl , boolean alt , boolean special ) throws java.lang.Exception { switch ( ch ) { case 'm' : org.lwjgl.input.Mouse . setGrabbed ( ( ! ( org.lwjgl.input.Mouse . isGrabbed () ) ) ) ; break; default: break; } } 
@ java.lang.Override public java.util.List < org.shunya.server.services.TaskRun > findTaskHistoryByTeam ( long teamId ) { org.hibernate.Criteria criteria = DBDao . getSessionFactory () . getCurrentSession () . createCriteria ( org.shunya.server.services.TaskRun . class ) ; criteria . setFetchSize ( 30 ) ; criteria . add ( org.hibernate.criterion.Restrictions . eq ( "team.id" , teamId ) ) ; criteria . addOrder ( org.hibernate.criterion.Order . desc ( "id" ) ) ; criteria . setResultTransformer ( Criteria.DISTINCT_ROOT_ENTITY ) ; criteria . setMaxResults ( 30 ) ; criteria . setCacheable ( true ) ; return criteria . list () ; } 
@ java.lang.Override public com.litrum.webproject.model.ServiceOffered findServiceOfferedByName ( java.lang.String name ) { org.hibernate.Criteria criteria = getSession () . createCriteria ( getPersistentClass () ) ; criteria . add ( org.hibernate.criterion.Restrictions . eq ( "name" , name ) ) ; return ( ( com.litrum.webproject.model.ServiceOffered ) ( criteria . uniqueResult () ) ) ; } 
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } return result ; } 
public void updateState ( java.lang.String key , java.lang.Object value ) { if ( ( ( key . equals ( "LoginError" ) ) == true ) && ( ! ( value . equals ( "" ) ) ) ) { displayErrorMessage ( ( ( java.lang.String ) ( value ) ) ) ; } } 
private void process ( backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( getApplication () , com.lgq.fruitgrower.view.act.PublicActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putBoolean ( "farmer" , false ) ; intent . putExtras ( bundle ) ; startActivityForResult ( intent , 1 ) ; if ( ( rela_layout . getVisibility () ) == ( android.view.View.VISIBLE ) ) { rela_layout . setVisibility ( View.GONE ) ; } } 
private edu.ksu.operatingsystems.javaos.util.Pair < java.lang.Integer , java.lang.String > readFromRight ( java.lang.String readFrom , int numberOfCharacters ) { java.lang.Integer value = java.lang.Integer . parseInt ( readFrom . substring ( 0 , numberOfCharacters ) , 2 ) ; java.lang.String result = readFrom . substring ( numberOfCharacters ) ; return new edu.ksu.operatingsystems.javaos.util.Pair < java.lang.Integer , java.lang.String > ( value , result ) ; } 
@ java.lang.Override public boolean onTouch ( android.view.View v , android.view.MotionEvent event ) { switch ( event . getAction () ) { case android.view.MotionEvent.ACTION_DOWN : break; case android.view.MotionEvent.ACTION_UP : android.widget.ImageView imageView = ( ( android.widget.ImageView ) ( v ) ) ; addAccessory ( ( ( java.lang.String ) ( imageView . getTag () ) ) ) ; dragBool = false ; break; } return true ; } 
@ java.lang.Override public void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { switch ( qName ) { case "roboUnit" : currentId = attributes . getValue ( "id" ) ; break; case com.robo4j.core.configuration.XmlConfigurationFactory.ELEMENT_CONFIG : if ( ! ( configState ) ) { currentConfiguration = "" ; configState = true ; break; } } lastElement = qName ; if ( configState ) { currentConfiguration += java.lang.String . format ( "<%s %s>" , qName , toString ( attributes ) ) ; } } 
@ java.lang.Override public void taskCompleted ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus status , java.lang.String message , org.json.JSONObject json ) { removeLoadingSpinner () ; if ( ( status == ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus.PASSED ) ) && ( responseParser . parseLogin ( json ) ) ) { delegate . loginPassed ( uk.ac.ncl.csc2022.t14.bankingapp.Utilities.DataStore . sharedInstance () . getCurrentUser () ) ; } else { message = responseParser . parseErrorOrDefault ( message ) ; delegate . loginFailed ( message ) ; } } 
public static org.eclipse.core.resources.IFile getFile ( org.eclipse.jdt.core.IJavaElement element ) { org.eclipse.core.resources.IResource res = null ; try { while ( ( res = element . getCorrespondingResource () ) == null ) element = element . getParent () ; if ( res instanceof org.eclipse.core.resources.IFile ) return ( ( org.eclipse.core.resources.IFile ) ( res ) ) ; } catch ( org.eclipse.jdt.core.JavaModelException e ) { org.eclipse.etools.Activator . logError ( "Failed finding corresponding resource" , e ) ; } return null ; } 
@ java.lang.Override public void displayPanelResized ( edu.njit.cs.saboc.blu.core.gui.gep.AbNDisplayPanel displayPanel ) { this . setBounds ( 10 , ( ( ( displayPanel . getBounds () . height ) - ( panelSize.height ) ) - 10 ) , panelSize.width , panelSize.height ) ; this . validate () ; } 
private synchronized void tickNarjillos ( org.nusco.narjillos.genomics.GenePool genePool , org.nusco.narjillos.shared.utilities.RanGen ranGen ) { java.util.Map < org.nusco.narjillos.creature.Narjillo , java.util.Set < org.nusco.narjillos.shared.things.Thing > > narjillosToCollidedFood ; synchronized ( narjillos ) { narjillosToCollidedFood = calculateCollisions ( narjillos ) ; } for ( java.util.Map.Entry < org.nusco.narjillos.creature.Narjillo , java.util.Set < org.nusco.narjillos.shared.things.Thing > > entry : narjillosToCollidedFood . entrySet () ) { org.nusco.narjillos.creature.Narjillo narjillo = entry . getKey () ; java.util.Set < org.nusco.narjillos.shared.things.Thing > collidedFood = entry . getValue () ; consume ( narjillo , collidedFood , genePool , ranGen ) ; } } 
@ java.lang.Override public void delete ( com.flxn.dao.model.Atribute object , int userid ) { if ( ( exist ( object . getId () ) ) && ( existOwner ( object . getId () , userid ) ) ) { jdbcTemplate . update ( com.flxn.dao.impl.DELETE_ATRIBUTE_BY_ID , new java.lang.Object [] { object . getId () } ) ; } else { throw new java.lang.UnsupportedOperationException () ; } } 
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { java.lang.String fileName = this . fileUpload . getFilename () ; if ( ( fileName == null ) || ( fileName . isEmpty () ) ) { setStatusIcon ( CommonImages.INSTANCE . error () , true , true ) ; errorPanel . setErrorMessage ( "No file Selected" , "Please select a file and then press GO" ) ; return; } if ( this . projection . getValue () ) { form . setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS_PROJECTION ) ; } else { form . setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS ) ; } this . form . submit () ; } 
@ java.lang.Override public value.Value mul ( value.Value other ) { if ( ( ! ( isSet () ) ) || ( ! ( other . isSet () ) ) ) { return new value.IntegerValue () ; } return new value.IntegerValue ( ( ( value ) * ( ( ( value.IntegerValue ) ( other ) ) . getValue () ) ) ) ; } 
public static android.graphics.Bitmap resizeImage ( android.graphics.Bitmap unscaledBitmap , int desiredWidth , int desiredHeight ) throws java.io.IOException { try { if ( ! ( ( ( unscaledBitmap . getWidth () ) <= desiredWidth ) && ( ( unscaledBitmap . getHeight () ) <= desiredHeight ) ) ) { android.graphics.Bitmap scaledBitmap = com.scanlibrary.ScalingUtilities . createScaledBitmap ( unscaledBitmap , desiredWidth , desiredHeight , ScalingLogic.FIT ) ; return scaledBitmap ; } else { return unscaledBitmap ; } } catch ( java.lang.Throwable e ) { throw new java.io.IOException ( e ) ; } } 
public static com.orca.projectx.Account getAccount ( com.firebase.client.Firebase ref ) { com.firebase.client.Firebase mRef = ref . child ( "account" ) ; com.orca.projectx.Data.mAccount = new com.orca.projectx.Account () ; mRef . addValueEventListener ( new com.firebase.client.ValueEventListener () { @ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { com.orca.projectx.Account account = dataSnapshot . getValue ( com.orca.projectx.Account . class ) ; com.orca.projectx.Data . setAccount ( account ) ; } @ java.lang.Override public void onCancelled ( com.firebase.client.FirebaseError firebaseError ) {} } ) ; return com.orca.projectx.Data.mAccount ; } 
public int find ( int x , int [] data , int start , int end ) { if ( end > start ) for ( int i = start ; i <= end ; i ++ ) if ( ( data [ i ] ) == x ) return i ; return - 1 ; } 
public static org.eclipse.ecf.mgmt.identity.NamespaceMTO createNamespaceMTO ( org.eclipse.ecf.core.identity.Namespace ns ) { return ns == null ? null : new org.eclipse.ecf.mgmt.identity.NamespaceMTO ( ns . getName () , ns . getDescription () , ns . getScheme () , ns . getSupportedSchemes () , org.eclipse.ecf.mgmt.identity.host.IdentityFactoryManager . convertClassArrayToNameArray ( ns . getSupportedParameterTypes () ) ) ; } 
public static java.lang.String mimeFor ( @ lombok.NonNull java.lang.String name ) { if ( name . isEmpty () ) { return "" ; } lombok.val ext = pw.phylame.ycl.io.PathUtils . extensionName ( name ) ; if ( ext . isEmpty () ) { return pw.phylame.ycl.io.PathUtils.UNKNOWN_MIME ; } return pw.phylame.ycl.io.PathUtils.mimeMap . get () . getProperty ( ext , pw.phylame.ycl.io.PathUtils.UNKNOWN_MIME ) ; } 
public void print ( int copies ) { java.lang.String onStatus = "" ; if ( isOn ) onStatus = " is on!" ; else onStatus = " is off!" ; java.lang.String textToPrint = ( modelNumber ) + onStatus ; while ( ( copies > 0 ) && ( ! ( paperTray . isEmpty () ) ) ) { java.lang.System.out . println ( textToPrint ) ; copies -- ; } if ( paperTray . isEmpty () ) java.lang.System.out . println ( "Load more paper" ) ; } 
@ java.lang.Override public team379.pathfinding.PathFindResult move ( battlecode.common.RobotController rc ) throws java.lang.Exception { if ( ( ( compassDirection ) == null ) || ( ( getTarget () ) == null ) ) { calculateNextTarget ( true ) ; } else { int distanceSquared = getTarget () . distanceSquaredTo ( rc . getLocation () ) ; double distance = java.lang.Math . sqrt ( distanceSquared ) ; if ( distance < ( team379.pathfinding.Orbiter.DISTANCE_THRESHOLD ) ) { calculateNextTarget ( true ) ; } } return super . move ( rc ) ; } 
public void onClick ( android.content.DialogInterface dialog , int which ) { android.app.NotificationManager nm = ( ( android.app.NotificationManager ) ( getSystemService ( getApplicationContext () . NOTIFICATION_SERVICE ) ) ) ; nm . cancel ( apier.com.lifttrak.RunWorkout.uniqueID ) ; apier.com.lifttrak.DBHandler dbHandler = new apier.com.lifttrak.DBHandler ( getApplicationContext () , null , null , 1 ) ; dbHandler . addCompleteWorkout ( workoutSelected , exercises ) ; android.content.Intent finishWorkout = new android.content.Intent ( getApplicationContext () , apier.com.lifttrak.FinishWorkout . class ) ; startActivity ( finishWorkout ) ; finish () ; } 
@ java.lang.Override public void onConnected ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . setInterval ( 1000 ) ; mLocationRequest . setFastestInterval ( 1000 ) ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; } } 
@ org.bukkit.event.EventHandler public void onSign ( org.bukkit.event.block.SignChangeEvent e ) { if ( e . getLine ( 0 ) . equalsIgnoreCase ( "[atm]" ) ) { e . setLine ( 0 , ( ( org.bukkit.ChatColor.DARK_GRAY ) + "== ATM ==" ) ) ; e . setLine ( 1 , ( ( ( ( org.bukkit.ChatColor.GREEN ) + "> " ) + ( org.bukkit.ChatColor.DARK_GRAY ) ) + "Withdraw" ) ) ; e . setLine ( 2 , ( ( org.bukkit.ChatColor.BLACK ) + "Deposit" ) ) ; e . setLine ( 3 , ( ( org.bukkit.ChatColor.DARK_GRAY ) + "Click for Balance" ) ) ; } } 
@ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent e ) { if ( ( descriptionText . getText () . length () ) == 0 ) { commentStatus = createStatus ( IStatus.WARNING , org.talend.metadata.managment.ui.i18n.Messages . getString ( "PropertiesWizardPage.EmptyDescWarning" ) ) ; } else { commentStatus = createOkStatus () ; } property . setDescription ( org.apache.commons.lang.StringUtils . trimToNull ( descriptionText . getText () ) ) ; property . setModificationDate ( new java.util.Date () ) ; updatePageStatus () ; } 
private java.util.List < java.lang.String > listReferenceProfiles ( org.hl7.fhir.dstu3.model.ElementDefinition ed ) { java.util.List < java.lang.String > res = new java.util.ArrayList < java.lang.String > () ; for ( org.hl7.fhir.dstu3.model.ElementDefinition.TypeRefComponent tr : ed . getType () ) { if ( "Reference" . equals ( tr . getCode () ) ) res . add ( tr . getProfile () ) ; } return res ; } 
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/save" ) @ javax.ws.rs.Produces ( value = "application/json" ) public javax.ws.rs.core.Response saveReport ( @ javax.ws.rs.FormParam ( value = "report" ) java.lang.String report , @ javax.ws.rs.FormParam ( value = "groupid" ) int groupid ) { java.lang.String report_name = com.caxpy.bi.utility.BiUtility . saveReport ( report , groupid ) ; java.util.Map < java.lang.String , java.lang.String > resData = new java.util.HashMap < java.lang.String , java.lang.String > () ; resData . put ( "status" , "success" ) ; resData . put ( "report" , report_name ) ; return javax.ws.rs.core.Response . status ( 200 ) . entity ( resData ) . build () ; } 
public void writeTo ( final java.io.OutputStream outStream ) throws java.io.IOException { if ( ( ( progressHandler ) != null ) || ( ( cancellationHandler ) != null ) ) { writeWithNotify ( outStream ) ; } else { outStream . write ( this . b , this . offset , this . len ) ; } outStream . flush () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } 
private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( java.util.Calendar.YEAR , year ) ; c . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; c . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = c . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( c . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } 
public void actionPerformed ( java.awt.event.ActionEvent aEvt ) { java.lang.String tag = org.broad.igv.ui.util.MessageUtils . showInputDialog ( "Enter tag" , renderOptions . getGroupByTag () ) ; if ( ( tag != null ) && ( ( tag . trim () . length () ) > 0 ) ) { renderOptions . setGroupByTag ( tag ) ; org.broad.igv.ui.IGV . getInstance () . groupAlignmentTracks ( org.broad.igv.sam.AlignmentTrack.GroupOption.TAG , tag , null ) ; org.broad.igv.sam.AlignmentTrack . refresh () ; } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int pos , long id ) { android.util.Log . d ( ru.chernysh.plasmatorchsetup.MainActivity.LOG_TAG , ( "Selection in model spinner with pos = " + pos ) ) ; ru.chernysh.plasmatorchsetup.CustomAdapter adapter = ( ( ru.chernysh.plasmatorchsetup.CustomAdapter ) ( parent . getAdapter () ) ) ; if ( adapter != null ) { adapter . setSelected ( true ) ; int selectedKey = adapter . getKey ( pos ) ; } } 
private void parseCoordinateMetadata ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { jp . nextToken () ; jp . nextToken () ; jp . nextToken () ; if ( ( jp . getCurrentToken () ) != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { jp . nextToken () ; } jp . nextToken () ; } 
private int getInternalIndexOfObjectAt ( int index ) throws java.lang.IndexOutOfBoundsException { int nbObjectsSoFar = 0 ; int pos = 0 ; while ( nbObjectsSoFar < index ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar ++ ; pos ++ ; } return pos - 1 ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_drawer ) ; butterknife.ButterKnife . bind ( this ) ; setSupportActionBar ( mToolbar ) ; setRecyclerView () ; setDrawerToggle () ; setTvLogoutRipple () ; hasStoragePermission () ; initLetsCookReceiver () ; initProgressDialog () ; mToolbar . setNavigationIcon ( android.R.drawable.star_big_on ) ; mDrawerFragments = getDrawerFragments () ; mFragmentTags = getResources () . getStringArray ( R.array.nav_drawer_fragment_tags ) ; } 
@ java.lang.Override public void onChange ( boolean selfChange , android.net.Uri uri ) { if ( uri . equals ( Settings.System . getUriFor ( Settings.System.STATUS_BAR_EXPANDED_HEADER_TEXT_COLOR ) ) ) { updateTextColor () ; } else if ( uri . equals ( Settings.System . getUriFor ( Settings.System.STATUS_BAR_EXPANDED_HEADER_ICON_COLOR ) ) ) { updateIconColor () ; } } 
public void setEndTime ( java.time.LocalTime end_time2 ) { if ( end_time2 == null ) { java.time.LocalTime localtime = java.time.LocalTime.MAX ; end_time_string = "" ; } else { end_time_string = end_time2 . format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) . toString () ; end_time = end_time2 ; if ( ( end_time ) != null ) { value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; } else { value = getStartTime () ; } } } 
public static boolean checkWinX ( char dot ) { for ( int i = 0 ; i <= 1 ; i ++ ) { for ( int j = 0 ; j <= 1 ; j ++ ) { if ( ( j == 0 ) && ( i == 0 ) ) continue; if ( TicTacToe . checkLine ( TicTacToe.lastX , TicTacToe.lastY , i , j , TicTacToe.ROW_FOR_WIN , dot ) ) return true ; } } return false ; } 
protected static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , fromParameterType , m , name ) ; } 
public static int code ( java.lang.String format ) { try { int index = ygoprocardmaker.enumerate.CardFormat.FORMATS . indexOf ( format ) ; if ( index == ( - 1 ) ) { throw new java.lang.IllegalArgumentException () ; } return index + 1 ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException () ; } } 
public static logic.Facilities getFacility ( java.lang.String facilityName ) { logic.Facilities [] name = logic.Facilities . values () ; for ( logic.Facilities facility : name ) { if ( facilityName . contains ( facility . getValue () ) ) { return facility ; } } return logic.Facilities.SELECT ; } 
private void doVibrate ( int minutes , final int _vibrationStrength ) { if ( minutes > 0 ) { java.lang.Runnable vibrationRunnable = new java.lang.Runnable () { @ java.lang.Override public void run () { setVibrationStart ( _vibrationStrength , 1000 ) ; } } ; alarmHandler . postDelayed ( vibrationRunnable , java.util.concurrent.TimeUnit.MINUTES . toMillis ( minutes ) ) ; } else setVibrationStart ( _vibrationStrength , 1000 ) ; } 
public void onSectionAttached ( int number ) { switch ( number ) { case 1 : android.content.Intent profile = new android.content.Intent ( this , com.example.navigationdrawer.Accueil . class ) ; startActivity ( profile ) ; break; case 2 : mTitle = getString ( R.string.title_activity_google ) ; break; case 3 : android.content.Intent home = new android.content.Intent ( this , com.example.navigationdrawer.Rapports . class ) ; startActivity ( home ) ; break; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String nickName ; Nick . setHint ( "" ) ; if ( ! ( ( nickName = Nick . getText () . toString () ) . equals ( "" ) ) ) { android.content.Intent GoToChat = new android.content.Intent ( this , com.example.omri.ochat.ChatActivity . class ) ; GoToChat . putExtra ( "nickname" , nickName ) ; startActivity ( GoToChat ) ; } else { android.util.Log . v ( "Debug" , "Nickname missing" ) ; Nick . setHint ( "This field is mandatory" ) ; Nick . setHintTextColor ( Color.RED ) ; } } 
@ java.lang.Override public void onDelete () { if ( com.google.gwt.user.client.Window . confirm ( ( ( "Are you sure you want to delete " + ( candidate . getName () ) ) + " ?" ) ) ) { dispatch . execute ( adminService . removeCandidate ( candidate . getId () ) , new com.arcbees.bourseje.client.AdminRestCallback < java.lang.Void > () { @ java.lang.Override public void onSuccess ( java.lang.Void result ) { removeFromParentSlot () ; } } ) ; } } 
public static java.lang.String getJobCoordinationZkPath ( org.apache.samza.config.Config config ) { org.apache.samza.config.JobConfig jobConfig = new org.apache.samza.config.JobConfig ( config ) ; java.lang.String appId = new org.apache.samza.config.ApplicationConfig ( config ) . getGlobalAppId () ; java.lang.String jobName = ( jobConfig . getName () . isDefined () ) ? jobConfig . getName () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_NAME ; java.lang.String jobId = ( jobConfig . getJobId () . isDefined () ) ? jobConfig . getJobId () . get () : org.apache.samza.zk.ZkJobCoordinatorFactory.DEFAULT_JOB_ID ; return java.lang.String . format ( org.apache.samza.zk.ZkJobCoordinatorFactory.JOB_COORDINATOR_ZK_PATH_FORMAT , appId , jobName , jobId ) ; } 
public java.util.List < taxiservice.payments.models.PaymentsHistory > getPaymentsForClients ( long clientId ) throws taxiservice.payments.exceptions.NonExistingClientException { openSession () ; taxiservice.payments.models.Wallet clientWallet = getClientWallet ( clientId ) ; java.lang.String hql = "FROM PaymentsHistory WHERE wallet =" + ( clientWallet . getId () ) ; org.hibernate.Query query = session . createQuery ( hql ) ; java.util.List < taxiservice.payments.models.PaymentsHistory > result = query . list () ; closeSession () ; return result ; } 
private void extract ( com.griaule.grfingerjava.FingerprintImage fingerprintImage ) { try { template = matchingContext . extract ( fingerprintImage ) ; if ( ( fingerprintingComponent ) != null ) { fingerprintingComponent . showImage ( fingerprintImage ) ; fingerprintingComponent . showQuality ( template . getQuality () ) ; } } catch ( com.griaule.grfingerjava.GrFingerJavaException e ) { showMessage ( e . getMessage () ) ; } } 
@ java.lang.Override public void onResult ( com.google.android.gms.common.api.Status status ) { if ( status . isSuccess () ) { com.facebook.login.LoginManager . getInstance () . logOut () ; mSharedPreferencesHelper . setLastSignInMethod ( SharedPreferencesHelper.LAST_SIGN_IN_METHOD_NONE ) ; mSharedPreferencesHelper . setFacebookToken ( null ) ; mSharedPreferencesHelper . setGoogleToken ( null ) ; callback . onSuccess () ; } else { callback . onError () ; } } 
public void increaseImage ( double increasment ) { if ( ( ( this . getAirline () . getImage () ) + ( increasment * ( this . getEfficiency () ) ) ) <= 100 ) { this . getAirline () . setImage ( ( ( this . getAirline () . getImage () ) + ( increasment * ( this . getEfficiency () ) ) ) ) ; } else { this . getAirline () . setImage ( 100.0 ) ; } } 
@ java.lang.Override public java.lang.Object retrieve ( sif3.common.model.SIFZone zone , sif3.common.model.SIFContext context , sif3.common.model.PagingInfo pagingInfo , sif3.common.model.RequestMetadata metadata ) throws sif3.common.exception.PersistenceException , sif3.common.exception.UnsupportedQueryException { logger . debug ( ( ( ( "Retrieve Students for " + ( getZoneAndContext ( zone , context ) ) ) + " and RequestMetadata = " ) + metadata ) ) ; java.util.ArrayList < sif.dd.au30.model.StudentPersonalType > studentList = fetchStudents ( systemic.sif3.demo.rest.provider.StudentPersonalProvider.students , pagingInfo ) ; sif.dd.au30.model.StudentCollectionType studentCollection = dmObjectFactory . createStudentCollectionType () ; if ( studentList != null ) { studentCollection . getStudentPersonal () . addAll ( studentList ) ; return studentCollection ; } else { return null ; } } 
public lampkicking.model.Game play ( lampkicking.model.InputData inputData ) { lampkicking.service.Hoover hoover = new lampkicking.service.Hoover ( inputData ) ; lampkicking.model.OutputData outputData = hoover . start () ; lampkicking.model.Game game = new lampkicking.model.Game () ; game . setInput ( gson . toJson ( inputData ) ) ; game . setOutput ( gson . toJson ( outputData ) ) ; gameRepository . save ( game ) ; return game ; } 
public static me.enerccio.sp.types.PythonObject getGlobal ( java.lang.String variable ) { if ( ( ( PythonInterpreter.interpreter . get () ) == null ) || ( ( PythonInterpreter.interpreter . get () . currentFrame . size () ) == 0 ) ) return PythonRuntime.runtime . getGlobals () . doGet ( variable ) ; return PythonInterpreter.interpreter . get () . environment () . get ( variable , true , false ) ; } 
public void onClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } 
com.pixelmed.anatproc.CodedConcept str2cc ( java.lang.String s ) { if ( s == null ) return null ; s = s . replace ( "(" , "" ) . replace ( ")" , "" ) ; java.lang.String [] str = s . split ( ";" ) ; return new com.pixelmed.anatproc.CodedConcept ( null , null , str [ 1 ] , null , null , str [ 0 ] , str [ 2 ] , null , null ) ; } 
public static java.lang.String timestampToDate ( java.lang.String timestamp ) { java.lang.Long unixtimestamp = java.lang.Long . parseLong ( timestamp ) ; if ( "4294967295" . equals ( unixtimestamp ) ) { return "" ; } java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd-HH:mm" ) ; java.util.Date date = new java.util.Date ( ( unixtimestamp * 1000 ) ) ; return new java.text.SimpleDateFormat ( "dd/MM/yyyy - HH:mm" ) . format ( date ) ; } 
public view.ISprite [] [] digDown ( int colonne , int ligne , view.ISprite sprite ) { this . sprites [ ligne ] [ colonne ] = new view.Sprite ( image , ( colonne * ( SET_SIZE ) ) , ( ligne * ( SET_SIZE ) ) ) ; sprite . setY ( ( ( sprite . getY () ) + 16 ) ) ; this . sprites [ ( ligne + 1 ) ] [ colonne ] = sprite ; return this . sprites ; } 
public void updateObjIdOnStack ( int objId , int traceBack ) { int idx = ( ( this . stackSimulator . size () ) - 1 ) - traceBack ; edu.columbia.psl.cc.pojo.InstNode latestInst = this . stackSimulator . get ( idx ) ; latestInst . setRelatedObjId ( objId ) ; } 
@ org.jetbrains.annotations.Nullable public io.github.eterverda.playless.common.Dist bestMyReplacement ( io.github.eterverda.playless.common.Dist . . . candidates ) { int bestVersionCode = versionCode ; io.github.eterverda.playless.common.Dist bestDist = null ; for ( io.github.eterverda.playless.common.Dist candidate : candidates ) { if ( ! ( candidate.applicationId . equals ( applicationId ) ) ) { continue; } if ( ! ( matcher . isCompatible ( candidate.filter ) ) ) { continue; } if ( ( candidate.version.versionCode ) <= bestVersionCode ) { continue; } bestDist = candidate ; } return bestDist ; } 
@ java.lang.Override public void onPointerCancel ( playn.core.Pointer.Event event ) { if ( ( ( start ) == 0 ) || ( ! ( untransing ) ) ) return; _udir . update ( _cur.screen , _prev.screen , 0 ) ; _prev.screen.layer . setVisible ( false ) ; _udir . finish ( _cur.screen , _prev.screen ) ; clear () ; } 
public void test_153_ACLReadDeeperFieldSelf ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry ) { try { try { org.junit.Assert . assertEquals ( "fieldValue" , edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldRead ( westyEntry . getGuid () , "test.deeper.field" , westyEntry ) ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Problem adding read field: " + e ) ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception when we were not expecting it ACLCreateDeeperField: " + e ) ) ; } } 
@ java.lang.Override public void onFinish ( java.lang.Boolean success ) { if ( ( parentFragment . isAdded () ) && ( ( getTitle () ) != null ) ) { parentFragment . setPageSaved ( success ) ; org.wikipedia.util.FeedbackUtil . showMessage ( getActivity () , getActivity () . getString ( ( success ? R.string.snackbar_saved_page_format : R.string.snackbar_saved_page_missing_images ) , getTitle () ) ) ; } } 
public void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; if ( ( dt ) != null ) { currentPos = new int [ ( kb . getAttributeList () . size () ) - 1 ] ; for ( int i = 0 ; i < ( currentPos.length ) ; i ++ ) currentPos [ i ] = 0 ; drawTree ( g , dt ) ; } } 
public java.lang.String getUserIdBySpecificIdAndDomainId ( org.silverpeas.core.admin.domain.DomainDriverManager ddManager , java.lang.String sSpecificId , java.lang.String sDomainId ) throws org.silverpeas.core.admin.service.AdminException { try { ddManager . getOrganizationSchema () ; org.silverpeas.core.admin.persistence.UserRow ur = ddManager . getOrganization () . user . getUserBySpecificId ( idAsInt ( sDomainId ) , sSpecificId ) ; return ur != null ? idAsString ( ur.id ) : null ; } catch ( java.lang.Exception e ) { throw new org.silverpeas.core.admin.service.AdminException ( failureOnGetting ( ( "user with specific id " + sSpecificId ) , ( "in domain " + sDomainId ) ) , e ) ; } finally { ddManager . releaseOrganizationSchema () ; } } 
private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings == null ) { return; } for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } 
@ java.lang.Override public java.lang.String decode ( java.lang.String plain ) { java.lang.String decrypted = "" ; for ( char letter : plain . toUpperCase () . toCharArray () ) { int index = com.soesec.util.Alphabet . IndexOf ( letter ) ; if ( index < 0 ) { decrypted += letter ; continue; } int i = index - ( info . getRightShift () ) ; if ( i < 0 ) { i = 26 + i ; } i = i % 26 ; decrypted += com.soesec.util.Alphabet . At ( i ) ; } return decrypted ; } 
private io.minio.HttpResponse executePut ( java.lang.String bucketName , java.lang.String objectName , java.util.Map < java.lang.String , java.lang.String > headerMap , java.util.Map < java.lang.String , java.lang.String > queryParamMap , byte [] data , int length ) throws io.minio.ErrorResponseException , io.minio.InternalException , io.minio.InvalidBucketNameException , io.minio.NoResponseException , java.io.IOException , org.xmlpull.v1.XmlPullParserException { updateRegionMap ( bucketName ) ; return executePut ( bucketName , objectName , headerMap , queryParamMap , Regions.INSTANCE . region ( bucketName ) , data , length ) ; } 
public void setDevPanStatusPowerConnection ( boolean powerOn ) { if ( powerOn == ( devPanStatusPowerOn ) ) { return; } devPanStatusPowerOn = powerOn ; sensorConnectionStatus . setText ( ( devPanStatusPowerOn ? R.string.sensor_connection_on : R.string.sensor_connection_off ) ) ; if ( ( currentFragment ) == ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.MULTIPLE . ordinal () ) ) { setPage ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.DEVICE_STATUS ) ; } } 
public int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getRow ( position ) ) * ( cellSize ) ; } } 
public domain.Coordenada getEsquerra ( int color ) throws java.lang.Exception { int x = ( this . x ) + 1 ; int y ; if ( color == 0 ) y = ( this . y ) + 1 ; else y = ( this . y ) - 1 ; return new domain.Coordenada ( x , y ) ; } 
@ java.lang.Override public void loadNBTData ( net.minecraft.nbt.NBTTagCompound compound ) { net.minecraft.nbt.NBTTagCompound properties = ( ( net.minecraft.nbt.NBTTagCompound ) ( compound . getTag ( com.lothrazar.samscontent.common.PlayerPowerups.EXT_PROP_NAME ) ) ) ; if ( properties == null ) { properties = new net.minecraft.nbt.NBTTagCompound () ; } this . player . getDataWatcher () . updateObject ( com.lothrazar.samscontent.common.PlayerPowerups.WAYPOINT_WATCHER , properties . getString ( com.lothrazar.samscontent.common.PlayerPowerups.NBT_WAYPOINT ) ) ; this . player . getDataWatcher () . updateObject ( com.lothrazar.samscontent.common.PlayerPowerups.TODO_WATCHER , properties . getString ( com.lothrazar.samscontent.common.PlayerPowerups.NBT_TODO ) ) ; } 
private void drawBins ( java.awt.Graphics g ) { g . setColor ( java.awt.Color.GRAY ) ; int x = LEFT_MARGIN ; int y = ( getHeight () ) - ( BOTTOM_MARGIN ) ; for ( int b : bins ) { int height = ( ( int ) ( scaleY ( b ) ) ) ; y -= height ; g . fill3DRect ( x , y , binWidth , height , true ) ; x += binWidth ; y = ( getHeight () ) - ( BOTTOM_MARGIN ) ; } } 
public java.util.List < java.lang.Double > prodOfLists ( java.util.List < java.lang.Double > xList , java.util.List < java.lang.Double > yList ) { java.util.List < java.lang.Double > resList = new java.util.ArrayList < java.lang.Double > () ; int size = xList . size () ; for ( int i = 0 ; i < size ; i ++ ) { resList . add ( i , ( ( xList . get ( i ) ) * ( yList . get ( i ) ) ) ) ; } return resList ; } 
@ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) { mNotificationBar . showTemporaryInverse ( message ) ; } } 
public static java.util.List < java.lang.Integer > shuffle ( java.util.List < ? > list , int count ) { java.util.List < java.lang.Integer > listClone = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( list . size () ) ; ++ i ) { listClone . add ( i ) ; } if ( ( list . size () ) == count ) { return listClone ; } java.util.Collections . shuffle ( listClone ) ; return listClone . subList ( 0 , count ) ; } 
@ java.lang.Override public java.io.InputStream newInputStream ( nl.esciencecenter.xenon.files.Path path ) throws nl.esciencecenter.xenon.XenonException { java.lang.String filePath = toFilePath ( path . toString () ) ; assertRegularFileExists ( path ) ; org.apache.commons.httpclient.HttpClient client = getFileSystemByPath ( path ) ; org.apache.commons.httpclient.methods.GetMethod method = new org.apache.commons.httpclient.methods.GetMethod ( filePath ) ; try { client . executeMethod ( method ) ; return method . getResponseBodyAsStream () ; } catch ( java.io.IOException e ) { throw new nl.esciencecenter.xenon.XenonException ( adaptor . getName () , ( "Could not open inputstream to " + filePath ) , e ) ; } } 
@ java.lang.Override public void onComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < com.google.firebase.auth.AuthResult > task ) { android.util.Log . d ( com.glocoders.hangout.database.FirebaseHelper.TAG , ( "signInWithEmail:onComplete:" + ( task . isSuccessful () ) ) ) ; if ( ( task . isSuccessful () ) == false ) { android.util.Log . w ( com.glocoders.hangout.database.FirebaseHelper.TAG , "signInWithEmail:failed" , task . getException () ) ; code = - 1 ; } else { code = 1 ; } } 
public static java.lang.String cleanIniValue ( java.lang.String value ) { if ( value == null ) { return null ; } value = value . trim () ; if ( value . startsWith ( "\"" ) ) { value = value . substring ( 1 ) ; } if ( value . endsWith ( "\"" ) ) { value = value . substring ( 0 , ( ( value . length () ) - 1 ) ) ; } return value ; } 
private void writeNoteAttachmentEmailBody2 ( org.socialbiz.cog.AuthRequest ar , org.socialbiz.cog.OptOutAddr ooa , org.workcast.json.JSONObject data ) throws java.lang.Exception { data . put ( "optout" , ooa . getUnsubscribeJSON ( ar ) ) ; java.io.File myTemplate = ar . getCogInstance () . getConfig () . getFileFromRoot ( "email/DiscussionTopicManual.chtml" ) ; org.socialbiz.cog.mail.ChunkTemplate . streamIt ( ar.w , myTemplate , data , ooa . getCalendar () ) ; } 
@ java.lang.Override public D getDef ( org.auraframework.def.DefDescriptor < D > descriptor ) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.system.Source < D > source = sourceFactory . getSource ( descriptor ) ; if ( ( source != null ) && ( source . exists () ) ) { org.auraframework.system.Parser < D > parser = org.auraframework.impl.parser.ParserFactory . getParser ( source . getFormat () , descriptor ) ; D def = parser . parse ( descriptor , source ) ; return def ; } return null ; } 
public void myTick ( long mils ) { if ( ( mils % 1000 ) == 0 ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; } timeInMilis = mils ; } 
@ java.lang.Override public boolean doesSideBlockRendering ( net.minecraft.block.state.IBlockState state , net.minecraft.world.IBlockAccess world , net.minecraft.util.math.BlockPos pos , net.minecraft.util.EnumFacing face ) { com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers tile = getTileEntity ( world , pos ) ; if ( ( tile != null ) && ( tile . getEffectiveMaterialSide () . isEmpty () ) ) return false ; return super . doesSideBlockRendering ( state , world , pos , face ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.card_overview : if ( toggleSceneButtons ) goToSceneOverView ( v , true ) ; break; case R.id.card_ingredients : if ( toggleSceneButtons ) goToSceneIngredients ( v ) ; break; case R.id.card_directions : if ( toggleSceneButtons ) goToSceneDirections ( v ) ; break; case R.id.card_images : if ( toggleSceneButtons ) { goToSceneComments ( v ) ; } break; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { simController . startRunning () ; if ( ( guiRunTimer ) == null ) { guiRunTimer = new javax.swing.Timer ( 15 , new java.awt.event.ActionListener () { @ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( simController . isRunning () ) simController . tick () ; } } ) ; guiRunTimer . setRepeats ( true ) ; guiRunTimer . start () ; } } 
private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent , java.lang.String name ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent , name ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } 
public void test_145_ACLUpdateACL ( edu.umass.cs.gnsclient.client.util.GuidEntry barneyEntry ) { try { try { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . aclAdd ( AclAccessType.READ_WHITELIST , barneyEntry , "cell" , GNSProtocol.ALL_GUIDS . toString () ) ; } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception creating ALL_GUIDS access for Barney's cell: " + e ) ) ; } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception when we were not expecting it in ACLPartTwo: " + e ) ) ; } } 
public boolean onPreferenceChange ( android.preference.Preference preference , java.lang.Object newValue ) { if ( checkPlayServices () ) { org.universAAL.android.utils.RAPIManager . registerInThread ( getApplicationContext () , ( ( java.lang.String ) ( newValue ) ) ) ; return true ; } else { android.widget.Toast . makeText ( getApplicationContext () , R.string.warning_gplay , Toast.LENGTH_LONG ) . show () ; return false ; } } 
@ java.lang.Override public edu.cmu.tetrad.graph.Graph createGraph ( edu.cmu.tetrad.util.Parameters parameters ) { return edu.cmu.tetrad.graph.GraphUtils . randomGraphRandomForwardEdges ( ( ( parameters . getInt ( "numMeasures" ) ) + ( parameters . getInt ( "numLatents" ) ) ) , parameters . getInt ( "numLatents" ) , ( ( ( parameters . getInt ( "avgDegree" ) ) * ( parameters . getInt ( "numMeasures" ) ) ) / 2 ) , parameters . getInt ( "maxDegree" ) , parameters . getInt ( "maxIndegree" ) , parameters . getInt ( "maxOutdegree" ) , parameters . getBoolean ( "connected" ) ) ; } 
public static int eval ( Board board ) { int sum = 50 ; int score = board . isConnectN () ; if ( score == 1 ) { sum = 1000 ; } else if ( score == 2 ) { sum = - 1000 ; } else if ( score == ( - 1 ) ) {} return sum ; } 
public void deleteFloor ( int x , int y ) { for ( int scan = 0 ; scan < ( floors . size () ) ; scan ++ ) { if ( ( ( floors . get ( scan ) . xPosition ) == x ) && ( ( floors . get ( scan ) . yPosition ) == y ) ) { floors . remove ( scan ) ; } } } 
private org.apache.camel.component.bean.MethodInfo findMostSpecificOverride ( org.apache.camel.component.bean.MethodInfo proposedMethodInfo ) { for ( org.apache.camel.component.bean.MethodInfo alreadyRegisteredMethodInfo : methodMap . values () ) { java.lang.reflect.Method alreadyRegisteredMethod = alreadyRegisteredMethodInfo . getMethod () ; java.lang.reflect.Method proposedMethod = proposedMethodInfo . getMethod () ; if ( org.apache.camel.util.ObjectHelper . isOverridingMethod ( getType () , proposedMethod , alreadyRegisteredMethod , false ) ) { return alreadyRegisteredMethodInfo ; } else if ( org.apache.camel.util.ObjectHelper . isOverridingMethod ( getType () , alreadyRegisteredMethod , proposedMethod , false ) ) { return proposedMethodInfo ; } } return null ; } 
private void addClassPathToModule ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { if ( ( this . moduleToClassPathLocations ) != null ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; } } 
public java.lang.Boolean addTournament ( com.myapps.ekutarnia.trackmytourney.Tournament tourney ) { java.lang.Boolean success = true ; android.content.ContentValues val = new android.content.ContentValues () ; val . put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_SDATE , tourney . getStartDate () . getTime () ) ; val . put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_EDATE , tourney . getEndDate () . getTime () ) ; val . put ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.COLUMN_T_WINNER , tourney . getWinner () ) ; android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; db . insert ( com.myapps.ekutarnia.trackmytourney.MyDBHandler.TABLE_TOURNAMENT , null , val ) ; db . close () ; return success ; } 
@ java.lang.Override public void visitFile ( final uk.co.itmoore.intellisubsteps.psi.PsiFile file ) { if ( file instanceof uk.co.itmoore.intellisubsteps.psi.PsiJavaFile ) { buildSuggestionsFromJavaSource ( ( ( uk.co.itmoore.intellisubsteps.psi.PsiJavaFile ) ( file ) ) , stepImplsInScope ) ; } else if ( file instanceof uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile ) { buildSuggestionsFromSubstepsSource ( ( ( uk.co.itmoore.intellisubsteps.psi.stepdefinition.psi.SubstepsDefinitionFile ) ( file ) ) , resultSet ) ; } } 
public model.player.Player getPlayer ( model.adventurers.AdventurerType advT ) { java.util.Iterator < model.player.Player > it = getPlayers () . iterator () ; model.player.Player p = null ; while ( ( it . hasNext () ) && ( ! ( ( p = it . next () ) . getCurrentAdventurer () . getADVENTURER_TYPE () . equals ( advT ) ) ) ) {} return p ; } 
@ java.lang.Override public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { tts . setLanguage ( java.util.Locale.US ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } 
public boolean containsKey ( java.lang.Object key ) { int pos = getHash ( key ) ; if ( ( table [ pos ] ) == null ) { return false ; } else { hashtable.HashTable.Node curr = table [ pos ] ; while ( curr != null ) { if ( curr.key . equals ( key ) ) { return true ; } curr = curr.next ; } return false ; } } 
private java.util.ArrayList < java.net.URL > mapToAbsolute ( org.jsoup.select.Elements anchors ) { java.util.ArrayList < java.net.URL > res = new java.util.ArrayList <> () ; for ( org.jsoup.nodes.Element a : anchors ) { java.net.URL u = com.codeforsanjose.blic.Crawler . parseUrl ( a . attr ( "abs:href" ) ) ; if ( u != null ) { res . add ( u ) ; } } return res ; } 
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mediaPlayer ) { timer = new android.os.CountDownTimer ( 2000 , 1000 ) { @ java.lang.Override public void onTick ( long l ) {} @ java.lang.Override public void onFinish () { trialNum = 1 ; startTrial () ; } } ; timer . start () ; } 
public void updateLocation ( java.lang.String whiteMove , java.lang.String blackMove ) { player1 . nextMove ( whiteMove ) ; if ( whiteMove . contains ( "x" ) ) { player2 . setCapture ( whiteMove ) ; } player2 . nextMove ( blackMove ) ; if ( blackMove . contains ( "x" ) ) { player1 . setCapture ( blackMove ) ; } } 
@ java.lang.Override public java.net.URL getResource ( java.lang.String name ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Trying to find resource '{}' in plugin classpath" , name ) ; java.net.URL url = findResource ( name ) ; if ( url != null ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Found resource '{}' in plugin classpath" , name ) ; return url ; } ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Couldn't find resource '{}' in plugin classpath. Delegating to parent" ) ; return super . getResource ( name ) ; } 
@ java.lang.Override @ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) protected net.minecraft.util.IIcon getUnderlayIcon ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { int meta = world . getBlockMetadata ( x , y , z ) ; org.pfaa.chemica.model.IndustrialMaterial host = this . getGeoMaterial ( meta ) . getHost () ; if ( host != null ) { net.minecraft.util.IIcon icon = getHostIcon ( world , x , y , z ) ; if ( icon != null ) { return icon ; } } return this . getUnderlayIcon ( side , meta ) ; } 
void getChain ( java.io.DataInputStream din , java.io.DataOutputStream dout ) throws java.lang.Exception { java.lang.String username = peergos.shared.corenode.CoreNodeUtils . deserializeString ( din ) ; java.util.List < peergos.shared.corenode.UserPublicKeyLink > chain = coreNode . getChain ( username ) . get () ; dout . writeInt ( chain . size () ) ; for ( peergos.shared.corenode.UserPublicKeyLink link : chain ) { peergos.shared.util.Serialize . serialize ( link . serialize () , dout ) ; } } 
@ org.testng.annotations.Test ( dataProvider = "noHeadersNorDomainDataProvider" ) public void testGetZoneNoHeaderOrBase ( final java.lang.String requestHostname , final java.lang.String requestHeader , final java.util.List < java.lang.String > serviceBaseDomains , final java.util.List < java.lang.String > serviceConfigHeaders , final java.lang.String headerValue , final java.lang.String subdomainValue ) { org.springframework.mock.web.MockHttpServletRequest req = new org.springframework.mock.web.MockHttpServletRequest () ; req . setServerName ( requestHostname ) ; req . addHeader ( requestHeader , headerValue ) ; java.lang.String subdomain = com.ge.predix.uaa.token.lib.HttpServletRequestUtil . getZoneName ( req , serviceBaseDomains , serviceConfigHeaders ) ; org.testng.Assert . assertEquals ( subdomain , null ) ; } 
@ java.lang.Override public int linearIndex ( int i ) { setLinearStride () ; int idx = i ; for ( int j = 0 ; j < ( ( org.nd4j.linalg.api.shape.Shape . rank ( shapeInformation ) ) - 1 ) ; j ++ ) { if ( ( size ( i ) ) == 1 ) continue; idx += i * ( stride ( j ) ) ; } return ( org.nd4j.linalg.api.shape.Shape . offset ( shapeInfo () ) ) + idx ; } 
private void callAttempt ( java.lang.String sitePhoneNumber , java.lang.String callingSiteToastText ) { android.content.Intent callIntent = new android.content.Intent ( android.content.Intent.ACTION_CALL ) ; try { callIntent . setData ( android.net.Uri . parse ( sitePhoneNumber ) ) ; startActivity ( callIntent ) ; android.widget.Toast . makeText ( getApplicationContext () , callingSiteToastText , Toast.LENGTH_SHORT ) . show () ; } catch ( java.lang.SecurityException ex ) { java.lang.String noPermToastText = getResources () . getString ( R.string.toast_call_perm ) ; android.widget.Toast . makeText ( getApplicationContext () , noPermToastText , Toast.LENGTH_SHORT ) . show () ; } callDialog . dismiss () ; } 
public java.util.List < com.xz.data.prepare.RawData > fetchData ( com.xz.data.syntax.TqlEntity tqlEntity , com.xz.data.syntax.TqlInterval tqlInterval ) { java.util.List < com.xz.data.prepare.RawData > result = com.google.common.collect.Lists . newArrayList () ; for ( int i = 1 ; i < 4 ; ++ i ) { result . add ( new com.xz.data.prepare.RawData ( i , null ) ) ; } return result ; } 
private javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } 
public static int addAssetPath ( android.content.res.AssetManager assets , java.lang.String path ) { if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator . getMethod ( android.content.res.AssetManager . class , "addAssetPath" , new java.lang.Class [] { java.lang.String . class } ) ; } if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) return 0 ; java.lang.Integer ret = net.wequick.small.util.ReflectAccelerator . invoke ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath , assets , path ) ; if ( ret == null ) return 0 ; return ret ; } 
protected boolean isNotBeforeModuleDeclaration ( com.intellij.psi.PsiElement topmostElement ) { com.intellij.psi.PsiElement [] moduleKeywords = org.intellij.xquery.psi.impl.XQueryPsiImplUtil . findChildrenOfType ( topmostElement , XQueryTypes.K_MODULE ) ; com.intellij.psi.PsiElement nextModuleDeclaration = com.intellij.psi.util.PsiTreeUtil . getNextSiblingOfType ( topmostElement , org.intellij.xquery.psi.XQueryModuleDecl . class ) ; return ( ( moduleKeywords.length ) == 0 ) && ( nextModuleDeclaration == null ) ; } 
public void setLine ( int line , java.lang.String text ) { if ( ( text == null ) || ( text . isEmpty () ) ) { removeLine ( line ) ; return; } text = org.bukkit.ChatColor . translateAlternateColorCodes ( '&' , text ) ; if ( line >= ( armorStands . size () ) ) { addLine ( line , text ) ; return; } armorStands . get ( line ) . setCustomName ( text ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.widget.AbsListView view , int scrollState ) { if ( ( totalItemCount ) <= 1 ) { return; } if ( ( ( lastVisibleItem ) == ( totalItemCount ) ) && ( scrollState == ( SCROLL_STATE_IDLE ) ) ) { if ( ! ( isLoading ) ) { isLoading = true ; footerView . setVisibility ( View.VISIBLE ) ; onLoadListener . onLoad () ; } } } 
public android.view.View getView ( int pos , android.view.View v , android.view.ViewGroup p ) { android.widget.TextView view = new android.widget.TextView ( this ) ; view . setTextSize ( 25 ) ; if ( ( items ) != null ) { view . setText ( items . get ( pos ) . getText () ) ; } else { view . setText ( pos ) ; } return view ; } 
public void setOutcomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( incomingPortletCandidate ) == pc ) { incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { outcomingPortletCandidate = pc ; } } 
public void setTemperature ( java.lang.String h ) { strTemperature = h ; if ( h != null ) { int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } 
public boolean findItem ( java.lang.String item ) { boolean q = false ; java.lang.String name = item ; for ( int num = 0 ; num < 101 ; num ++ ) { if ( items [ num ] [ 0 ] . toLowerCase () . equals ( name . toLowerCase () ) ) { q = true ; } } return q ; } 
public static void register ( net.minecraft.block.Block block ) { if ( Config.debug ) java.lang.System.out . println ( ( "Registered " + ( block . getRegistryName () ) ) ) ; net.minecraftforge.fml.common.registry.GameRegistry . register ( block ) ; if ( ( ! ( shadows.plants.util.Util . isException ( block ) ) ) && ( ! ( block instanceof shadows.plants.block.internal.cosmetic.BlockDoubleHarvestable ) ) ) net.minecraftforge.fml.common.registry.GameRegistry . register ( new net.minecraft.item.ItemBlock ( block ) , block . getRegistryName () ) ; } 
@ java.lang.Override public void onTransactionChainFailed ( final org.opendaylight.controller.md.sal.common.api.data.TransactionChain < ? , ? > chain , final org.opendaylight.controller.md.sal.common.api.data.AsyncTransaction < ? , ? > transaction , final java.lang.Throwable cause ) { synchronized ( txLock ) { if ( ( org.opendaylight.openflowplugin.impl.device.TransactionChainManager.TransactionChainManagerStatus.WORKING ) == ( transactionChainManagerStatus ) ) { org.opendaylight.openflowplugin.impl.device.TransactionChainManager.LOG . warn ( "Transaction chain failed, recreating chain due to " , cause ) ; createTxChain ( chain ) ; wTx = null ; } } } 
@ java.lang.Override protected void initResource ( android.os.Bundle savedInstanceState ) { setSupportActionBar ( R.id.zxingscanview_toolbar ) ; scanView = ( ( am.widget.zxingscanview.ZxingScanView ) ( findViewById ( R.id.zxingscanview_zsv_scan ) ) ) ; foregroundView = ( ( am.widget.zxingscanview.ZxingForegroundView ) ( findViewById ( R.id.zxingscanview_zfv_foreground ) ) ) ; scanView . addOnScanListener ( this ) ; foregroundView . setOpenDrawable ( new android.support.v4.widget.MaterialLoadingProgressDrawable ( foregroundView ) ) ; } 
public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int w , int h ) { if ( ( this . holder . getSurface () ) == null ) { return; } try { camera . stopPreview () ; camera . setPreviewDisplay ( holder ) ; camera . startPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Surface Changed" , ( "Error starting camera preview: " + ( e . getMessage () ) ) ) ; } } 
public static java.lang.String urlEncode ( java.lang.Object value ) { if ( value == null ) return null ; try { java.lang.String result = java.net.URLEncoder . encode ( value . toString () , "UTF-8" ) ; return result ; } catch ( java.io.UnsupportedEncodingException e ) { return null ; } } 
@ java.lang.Override public int compare ( java.lang.String o1 , java.lang.String o2 ) { if ( count . get ( o1 ) . equals ( count . get ( o2 ) ) ) { return word . get ( o1 ) . compareTo ( word . get ( o2 ) ) ; } else { return count . get ( o2 ) . compareTo ( count . get ( o1 ) ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/films/addOrUpdate" ) public java.lang.String admin_films_addOrUpdate ( @ org.springframework.web.bind.annotation.RequestParam ( value = "id" , required = false , defaultValue = "null" ) java.lang.String id , org.springframework.ui.Model model ) { dao.FilmDb filmDb = new dao.FilmDb () ; if ( ! ( id . equals ( "null" ) ) ) { org.hibernate.Session session = hibernate.HibernateUtil . getSessionFactory () . openSession () ; filmDb = ( ( dao.FilmDb ) ( session . createQuery ( ( "from FilmDb f where f.id=" + id ) ) . list () . get ( 0 ) ) ) ; } model . addAttribute ( "film" , filmDb ) ; return "admin/films/addOrUpdate" ; } 
public static void editStock ( model.Stocks stock ) { try { org.hibernate.SessionFactory sessionFactory = model.HibernateUtil . getSessionFactory () ; org.hibernate.Session session = sessionFactory . openSession () ; session . beginTransaction () ; session . update ( stock ) ; session . getTransaction () . commit () ; session . close () ; } catch ( org.hibernate.HibernateException e ) { e . printStackTrace () ; } } 
public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View v , int position , long id ) { buddyname = ( ( android.widget.TextView ) ( v . findViewById ( R.id.BuddyName ) ) ) . getText () . toString () ; macAddr = ( ( android.widget.TextView ) ( v . findViewById ( R.id.MacAddress ) ) ) . getText () . toString () ; registerForContextMenu ( buddylistView ) ; buddylistView . showContextMenuForChild ( v ) ; unregisterForContextMenu ( buddylistView ) ; } 
@ java.lang.Override public void pop ( com.reactnativenavigation.params.ScreenParams params ) { getCurrentScreenStack () . pop ( params.animateScreenTransitions , new com.reactnativenavigation.screens.ScreenStack.OnScreenPop () { @ java.lang.Override public void onScreenPopAnimationEnd () { setBottomTabsStyleFromCurrentScreen () ; EventBus.instance . post ( new com.reactnativenavigation.events.ScreenChangedEvent ( getCurrentScreenStack () . peek () . getScreenParams () ) ) ; } } ) ; } 
private static boolean isKeyPressed ( net.minecraft.client.settings.KeyBinding instance ) { try { java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding . class . getDeclaredField ( "pressTime" ) ; field . setAccessible ( true ) ; java.lang.Object obj = field . get ( instance ) ; int c = ( ( java.lang.Integer ) ( obj ) ) ; if ( c > 0 ) { return true ; } } catch ( java.lang.Exception e ) {} return false ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_renshuu ) ; kanaKey = ( ( android.widget.TextView ) ( findViewById ( R.id.kanaKey ) ) ) ; chisaiIndicator = ( ( android.widget.TextView ) ( findViewById ( R.id.chisaiIndicator ) ) ) ; chisaiIndicator . setVisibility ( TextView.INVISIBLE ) ; userInput = ( ( android.widget.EditText ) ( findViewById ( R.id.userInput ) ) ) ; userInput . setVisibility ( EditText.INVISIBLE ) ; com.nihonkaeritai.flickrenshuu.repositories.KanaRepository . initialize ( this ) ; waitForTapToStart () ; } 
public void submitAnswers ( android.view.View view ) { score += questionNo1 () ; score += questionNo2 () ; score += questionNo3 () ; score += questionNo4 () ; score += questionNo5 () ; score += questionNo6 () ; score += questionNo7 () ; score += questionNo8 () ; score += questionNo9 () ; score += questionNo10 () ; android.content.Intent mainToResultsIntent = new android.content.Intent ( this , com.example.android.quizapp.ResultsActivity . class ) ; mainToResultsIntent . putExtra ( "correct" , score ) ; startActivity ( mainToResultsIntent ) ; score = 0 ; } 
protected void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } 
public boolean isCompatible ( thobe.logfileviewer.plugin.api.IPluginApiVersion versionOfPlugin ) { if ( ( versionOfPlugin . getMajorVersion () ) != ( getMajorVersion () ) ) { return false ; } if ( ( versionOfPlugin . getMinorVersion () ) < ( this . getMinorVersion () ) ) { return false ; } return true ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.action_home : android.content.Intent homeIntentVE = new android.content.Intent ( this , com.easysplit.mainview.MainActivity . class ) ; startActivity ( homeIntentVE ) ; return true ; case R.id.action_logout : android.content.Intent logoutIntentVEx = new android.content.Intent ( this , com.easysplit.mainview.UserLogin . class ) ; startActivity ( logoutIntentVEx ) ; return true ; default: return super . onOptionsItemSelected ( item ) ; } } 
public com.studiohartman.jamepad.ControllerState getState ( int index ) throws java.lang.IllegalStateException { verifyInitialized () ; if ( ( index < ( controllers.length ) ) && ( index > 0 ) ) { update () ; return com.studiohartman.jamepad.ControllerState . getInstanceFromController ( controllers [ index ] ) ; } else { return com.studiohartman.jamepad.ControllerState . getDisconnectedControllerInstance () ; } } 
private void setProfileLowQuality ( com.example.vasskob.mycamera.utils.PictureSize videoSize , boolean isAudioOn ) { android.media.CamcorderProfile profile = android.media.CamcorderProfile . get ( CamcorderProfile.QUALITY_480P ) ; if ( isAudioOn ) { setAudioParams ( profile ) ; } setVideoRateParams ( profile , 1 ) ; mMediaRecorder . setVideoSize ( videoSize . width () , videoSize . height () ) ; } 
@ java.lang.Override public void reduce ( org.apache.hadoop.io.Text word , java.lang.Iterable < org.apache.hadoop.io.IntWritable > counts , com.moz.commoncrawl.Context context ) throws java.io.IOException , java.lang.InterruptedException { int sum = 0 ; for ( org.apache.hadoop.io.IntWritable count : counts ) { sum += count . get () ; } if ( ( ( threshold ) == ( - 1 ) ) || ( sum > ( threshold ) ) ) context . write ( word , new org.apache.hadoop.io.IntWritable ( sum ) ) ; } 
public void updateWithGridEntry ( com.graphhopper.routing.util.probabilistic.GridEntry gridEntry ) { synchronized ( entries ) { if ( ! ( entries . add ( gridEntry ) ) ) { for ( com.graphhopper.routing.util.probabilistic.GridEntry entry : entries ) { if ( entry . equals ( gridEntry ) ) { entry . updateValues ( gridEntry . getValues () ) ; } } } else { for ( int edge : gridEntry . getEdges () ) { edgeCache . put ( edge , gridEntry ) ; } } } } 
@ java.lang.Override public io.dropwizard.auth.AuthFactory < java.lang.Object , T > clone ( boolean required ) { io.dropwizard.auth.ChainedAuthFactory < T > clone = new io.dropwizard.auth.ChainedAuthFactory <> () ; for ( io.dropwizard.auth.AuthFactory < ? , T > factory : factories ) { clone . addChainedProvider ( factory . clone ( required ) ) ; } return clone ; } 
public void signUp ( java.lang.String uname , java.lang.String email , java.lang.String pass ) { try { java.sql.PreparedStatement pst = connection . prepareStatement ( "INSERT INTO users (uname, email, pass) VALUES (?, ?, ?)" ) ; pst . setString ( 1 , uname ) ; pst . setString ( 2 , email ) ; pst . setString ( 3 , pass ) ; pst . execute () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
private java.lang.String getChromosomalChange ( org.apache.commons.csv.CSVRecord record ) { return ( ( ( ( ( record . get ( options . getChr () ) ) + ":" ) + ( record . get ( options . getPos () ) ) ) + ( record . get ( options . getRef () ) ) ) + ">" ) + ( record . get ( options . getAlt () ) ) ; } 
@ java.lang.Override public void onSpinnerItemSelected ( android.widget.Spinner spinner , int position ) { if ( ( spinner . getId () ) == ( org.droidplanner.android.R.id.cameraFileSpinner ) ) { if ( cameraAdapter . isEmpty () ) return; com.o3dr.services.android.lib.drone.mission.item.complex.CameraDetail cameraInfo = cameraAdapter . getItem ( position ) ; for ( T survey : getMissionItems () ) { survey . getSurveyDetail () . setCameraDetail ( cameraInfo ) ; } onScrollingEnded ( mAnglePicker , 0 , 0 ) ; } } 
protected java.lang.Integer doInBackground ( java.lang.String . . . params ) { try { javax.ws.rs.core.MultivaluedMap map = new com.sun.jersey.core.util.MultivaluedMapImpl () ; map . add ( "username" , params [ 0 ] ) ; map . add ( "latitude" , params [ 1 ] ) ; map . add ( "longitude" , params [ 2 ] ) ; crm.geoalertapp.crm.geoalertapp.utilities.RestClient tc = new crm.geoalertapp.crm.geoalertapp.utilities.RestClient ( map ) ; tc . postForResponseCode ( "location/update" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return 0 ; } 
public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; } 
public void addPizza ( com.preproduction.delivery.domain.Pizza pizza ) { if ( ( orderSize ) < ( com.preproduction.delivery.domain.Order.MAX_ORDER_SIZE ) ) { ( orderSize ) ++ ; for ( com.preproduction.delivery.domain.OrderDetails od : pizzas ) { if ( od . getPizza () . equals ( pizza ) ) { od . setQuantity ( ( ( od . getQuantity () ) + 1 ) ) ; return; } } pizzas . add ( new com.preproduction.delivery.domain.OrderDetails ( pizza , 1 , this ) ) ; } } 
public static at.ezylot.IncrementalBallGame.MovableCircle createMovableCircle ( double x , double y , double radius ) { java.lang.String [] colors = new java.lang.String [] { "green" , "blue" , "orange" , "grey" , "brown" } ; java.lang.String color = colors [ new java.util.Random () . nextInt ( colors.length ) ] ; return new at.ezylot.IncrementalBallGame.MovableCircle ( x , y , radius , javafx.scene.paint.Paint . valueOf ( color ) , new java.util.Random () . nextInt ( 359 ) , Main.RootStage ) ; } 
public void idle ( com.esotericsoftware.kryonet.Connection conn ) { final T connection = classTag . cast ( conn ) ; final java.util.List < com.esotericsoftware.kryonet.adapters.Listener < ? super T > > listeners = this . listeners ; for ( com.esotericsoftware.kryonet.adapters.Listener < ? super T > listener : listeners ) { listener . idle ( connection ) ; if ( ! ( connection . isIdle () ) ) break; } } 
public final synchronized jogamp.opengl.GLBufferStorage mapBuffer ( final int bufferName , final long offset , final long length , final int access , final jogamp.opengl.GLBufferObjectTracker.MapBufferRangeDispatch dispatch , final long glProcAddress ) throws jogamp.opengl.GLException { return this . mapBufferImpl ( 0 , bufferName , true , true , offset , length , access , dispatch , glProcAddress ) ; } 
private java.lang.String encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; ++ i ) { int ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.String . valueOf ( java.lang.Long . parseLong ( rtn ) ) ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Object result ) { bIsRunning = false ; if ( ( listener ) != null ) { listener . onDone ( name ) ; } if ( ( ( asyncCallback ) != null ) && ( hasSentResult ) ) { hasSentResult = false ; asyncCallback . onResult ( err , rs ) ; } } 
private boolean confirmDeleteProjects ( java.util.List < org.eclipse.core.resources.IResource > resources ) { org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog dialog = new org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog ( shellProvider . getShell () , resources ) ; dialog . setTestingMode ( fTestingMode ) ; int code = dialog . open () ; deleteContent = dialog . getDeleteContent () ; return code == 0 ; } 
public void accelerate ( double timedelta ) { traffic_sim.Vehicle in_front = current_lane . getVehicleInFront ( this ) ; if ( ( in_front == null ) || ( ( in_front != null ) && ( ( getFrontVehicleDistance ( in_front ) ) >= ( 2 * ( Lane.min_car_distance ) ) ) ) ) { current_velocity += timedelta * ( ACCEL ) ; current_velocity = ( ( current_velocity ) > ( MAX_VELOCITY ) ) ? MAX_VELOCITY : current_velocity ; } } 
private boolean isAlreadyMerged ( com.google.gerrit.server.git.CodeReviewCommit commit ) throws java.io.IOException { try ( com.google.gerrit.server.git.CodeReviewCommit.CodeReviewRevWalk mirw = com.google.gerrit.server.git.CodeReviewCommit . newRevWalk ( rw . getObjectReader () ) ) { mirw . reset () ; mirw . markStart ( commit ) ; for ( org.eclipse.jgit.revwalk.RevCommit accepted : alreadyAccepted ) { if ( mirw . isMergedInto ( mirw . parseCommit ( commit ) , mirw . parseCommit ( accepted ) ) ) { return true ; } } } return false ; } 
long getZobristKey ( java.util.HashSet < java.lang.String > wPawns , java.util.HashSet < java.lang.String > bPawns ) { long zobristKey = 0 ; for ( java.lang.String wPos : wPawns ) zobristKey ^= wZobrist . get ( wPos ) ; for ( java.lang.String bPos : bPawns ) zobristKey ^= bZobrist . get ( bPos ) ; return zobristKey ; } 
public synchronized void newChar ( char c ) { ngram . putChar ( c ) ; java.lang.String s = ngram . getString () ; if ( s != null ) { java.lang.Long currentNumber = numberOfNgrams . get ( s ) ; if ( currentNumber == null ) { currentNumber = 1L ; } else { currentNumber ++ ; } numberOfNgrams . put ( s , currentNumber ) ; } } 
public static void appendFile ( java.lang.String content , java.lang.String fileName ) { java.io.File file = cn.j1angvei.castk2.util.FileUtil . createFileIfNotExist ( fileName ) ; try { org.apache.commons.io.FileUtils . write ( file , content , java.nio.charset.Charset . defaultCharset () , true ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } 
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . toLowerCase () . contains ( "sdf" ) ) || ( currentInput . toLowerCase () . contains ( "dfg" ) ) ) || ( currentInput . toLowerCase () . contains ( "cvb" ) ) ) || ( currentInput . toLowerCase () . contains ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } 
@ java.lang.Override public void writeToParcel ( android.os.Parcel dest , int flags ) { dest . writeLong ( this . id ) ; dest . writeString ( this . title ) ; dest . writeString ( this . releaseDate ) ; dest . writeDouble ( this . userRating ) ; dest . writeString ( this . plot ) ; dest . writeString ( this . posterPath ) ; dest . writeString ( this . genre ) ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; switch ( requestCode ) { case 1 : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int switchNum = data . getIntExtra ( com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH , 0 ) ; if ( switchNum != 0 ) { long newNum = data . getLongExtra ( com.example.scanitgrocerystorehelper.MainActivity.KEY_LIST_ID , 0 ) ; if ( newNum != 0 ) deleteList ( mSqlAdapter . getList ( newNum ) ) ; } } } } 
public void viewBlocks ( GameInfo.Environment.Blocks.BlockBase [] [] blocks ) { for ( int x = 0 ; x < ( blocks.length ) ; x ++ ) { for ( int y = 0 ; y < ( blocks [ x ] . length ) ; y ++ ) { if ( ( blocks [ y ] [ x ] ) == null ) { java.lang.System.out . print ( "NULL|" ) ; } else { java.lang.System.out . print ( "GOOD|" ) ; } } java.lang.System.out . println () ; } } 
public eu.eexcess.dataformats.result.ResultList generateFederatedRecommendation ( eu.eexcess.dataformats.userprofile.SecureUserProfile secureUserProfile ) throws java.io.FileNotFoundException { eu.eexcess.dataformats.result.ResultList resultList = null ; if ( ( federatedRecConfiguration.sourceSelectors ) != null ) { java.util.ArrayList < java.lang.String > sourceSelectors = new java.util.ArrayList < java.lang.String > () ; java.util.Collections . addAll ( sourceSelectors , federatedRecConfiguration.sourceSelectors ) ; secureUserProfile = sourceSelection ( secureUserProfile , sourceSelectors ) ; } try { resultList = getAndAggregateResults ( secureUserProfile , this . federatedRecConfiguration . defaultPickerName ) ; } catch ( eu.eexcess.federatedrecommender.utils.FederatedRecommenderException e ) { eu.eexcess.federatedrecommender.FederatedRecommenderCore.logger . log ( java.util.logging.Level.SEVERE , "Some error retrieving or aggregation results occured." , e ) ; } return resultList ; } 
public void addNew ( uk.ac.ucl.excites.sapelli.collector.transmission.SendSchedule schedule ) { if ( schedule != null ) { schedule . setEnabled ( true ) ; save ( schedule , true ) ; listScheduleAdapter . add ( schedule ) ; } else toggleConfigGroup ( true , ( ! ( listScheduleAdapter . isEmpty () ) ) ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ javax.annotation.Nullable @ java.lang.Override public < T > T getCapability ( @ javax.annotation.Nullable net.minecraftforge.common.capabilities.Capability < T > capability , @ javax.annotation.Nullable net.minecraft.util.EnumFacing facing ) { return ( ( facing == ( net.minecraft.util.EnumFacing.DOWN ) ) || ( facing == null ) ) && ( capability == ( net.minecraftforge.energy.CapabilityEnergy.ENERGY ) ) ? ( ( T ) ( energyStorage ) ) : super . getCapability ( capability , facing ) ; } 
public int getStats ( java.lang.String route , int stat ) { int output = 0 ; switch ( route ) { case "conquest" : { output = conquest [ stat ] ; break; } case "birthright" : { output = birthright [ stat ] ; break; } case "revelations" : { output = revelations [ stat ] ; break; } } return output ; } 
public com.sk89q.worldedit.CuboidClipboard getSchematic ( java.lang.String schematicName ) { java.io.File dir = new java.io.File ( schematicName ) ; com.sk89q.worldedit.schematic.SchematicFormat schematic = com.sk89q.worldedit.schematic.SchematicFormat . getFormat ( dir ) ; try { clipboard = schematic . load ( dir ) ; } catch ( com.sk89q.worldedit.data.DataException | java.io.IOException e ) { e . printStackTrace () ; } dir = null ; schematic = null ; return clipboard ; } 
void updateSymbols ( java.lang.String prefix ) { if ( ( mItems . size () ) > 0 ) mItems . get ( 0 ) . setEnabled ( true ) ; for ( com.topodroid.DistoX.EnableSymbol symbol : mItems ) { if ( symbol . MustSave () ) { symbol.mSymbol . setEnabled ( symbol.mEnabled ) ; TopoDroidApp.mData . setSymbolEnabled ( ( prefix + ( symbol.mSymbol . getThName () ) ) , symbol.mSymbol . isEnabled () ) ; } } } 
private synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } 
boolean insertUserChild ( java.lang.String userId , long childId , int isOwner ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } 
private int getRealParametersCount ( java.lang.reflect.Method m ) { int c = 0 ; for ( java.lang.Class < ? > t : m . getParameterTypes () ) { if ( ( ( ( t != ( fr.lteconsulting.pomexplorer.Client . class ) ) && ( t != ( fr.lteconsulting.pomexplorer.WorkingSession . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.CommandOptions . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.ILogger . class ) ) ) c ++ ; } return c ; } 
@ java.lang.Override public long nextRoundingValue ( long time ) { long currentWithoutPostZone = postTz . convertLocalToUTC ( time , false ) ; long local = preTz . convertUTCToLocal ( currentWithoutPostZone ) ; long nextLocal = durationField . add ( local , 1 ) ; return postTz . convertUTCToLocal ( preTz . convertLocalToUTC ( nextLocal , false ) ) ; } 
@ java.lang.Override public void readFields ( java.io.DataInput dis ) throws java.io.IOException { int length = dis . readInt () ; byte [] bytes = new byte [ length ] ; dis . readFully ( bytes ) ; this . key = bytes ; this . deletedAt = dis . readLong () ; boolean hasAtom = dis . readBoolean () ; if ( hasAtom ) { this . atom = serializer . deserializeFromSSTable ( dis , ColumnSerializer.Flag.PRESERVE_SIZE , java.lang.Integer.MIN_VALUE , version ) ; } else { this . atom = null ; } } 
public void accept ( android.view.View view ) { android.content.SharedPreferences.Editor editor = sharedPreferences . edit () ; editor . putString ( MainActivity.KEY_VK , urlReader . getText () . toString () ) ; editor . commit () ; android.content.Intent intent = new android.content.Intent ( this , com.example.ivan.scoolguesohack.MainActivity . class ) ; startActivity ( intent ) ; } 
public static java.util.Map < java.lang.String , java.lang.Object > sendRequest ( java.lang.String subUrl , java.lang.String gid ) throws java.io.IOException { java.lang.StringBuilder url = new java.lang.StringBuilder ( com.paypal.musictag.dao.usingwebservice.api.CoverArtArchiveAPI.URL ) . append ( subUrl ) . append ( gid ) ; java.net.URL requestUrl = new java.net.URL ( url . toString () ) ; java.lang.String json = com.paypal.musictag.util.MusicTagUtil . getJsonFromURL ( requestUrl ) ; return com.paypal.musictag.util.MusicTagUtil . jsontoMap ( json ) ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { final java.util.List < com.example.finalproject.Model.Dessert > dessertList = new java.util.LinkedList < com.example.finalproject.Model.Dessert > () ; for ( com.google.firebase.database.DataSnapshot dstSnapshot : dataSnapshot . getChildren () ) { com.example.finalproject.Model.Dessert dessert = dstSnapshot . getValue ( com.example.finalproject.Model.Dessert . class ) ; if ( ( maxKey [ 0 ] ) < ( dessert . getId () ) ) { maxKey [ 0 ] = dessert . getId () ; } dessertList . add ( dessert ) ; } listener . onComplete ( dessertList , maxKey [ 0 ] ) ; } 
private static int [] quickSortH ( int [] data , int start , int end ) { if ( start < end ) { int index = Quick . part ( data , start , end ) ; Quick . quickSortH ( data , start , index ) ; Quick . quickSortH ( data , ( index + 1 ) , end ) ; } return data ; } 
public java.util.Set < decc.dht.Key > get ( decc.dht.Key k ) { java.util.Map < decc.dht.Key , java.lang.Long > rts = routes . get ( k ) ; java.util.Set < decc.dht.Key > ks = null ; if ( rts != null ) ks = rts . keySet () ; return ks ; } 
@ java.lang.Override public void add ( T t ) { if ( ( root ) == null ) { root = new xlp.util.genric.list.Element () ; root . setValue ( t ) ; root . setPosition ( UtilConstant.START_INDEX ) ; } else { xlp.util.genric.list.Element < T > newElement = new xlp.util.genric.list.Element () ; newElement . setNode ( root ) ; newElement . setValue ( t ) ; newElement . setPosition ( root . getNextPosition () ) ; root = newElement ; } } 
public void addLast ( Item item ) { if ( item == null ) throw new java.lang.NullPointerException () ; final Deque < Item > . Node oldlast = last ; last = new Node ( item ) ; if ( ( size ) == 0 ) { last.next = null ; last.prev = null ; first = last ; } else { oldlast.next = last ; last.prev = oldlast ; last.next = null ; } ( size ) ++ ; } 
@ java.lang.Override public com.fsck.k9.mail.Folder getFolder ( java.lang.String serverId ) { if ( getStoreSyncKey () . equals ( com.fsck.k9.mail.store.eas.EasStore.INITIAL_SYNC_KEY ) ) { try { getInitialFolderList () ; } catch ( com.fsck.k9.mail.MessagingException e ) { timber.log.Timber . e ( e , "Exception encountered while fetching the initial folder list" ) ; } } synchronized ( mFolderList ) { if ( mFolderList . isEmpty () ) { syncFoldersFromLocalStore () ; } return mFolderList . get ( serverId ) ; } } 
@ java.lang.Override public void addPlayer ( java.lang.String playerName , int balance , int playerID ) { java.awt.Color [] colors = new java.awt.Color [] { java.awt.Color.BLUE , java.awt.Color.WHITE , java.awt.Color.MAGENTA , java.awt.Color.YELLOW , java.awt.Color.BLACK , java.awt.Color.GREEN } ; desktop_codebehind.Car car = new desktop_codebehind.Car.Builder () . primaryColor ( colors [ ( playerID - 1 ) ] ) . secondaryColor ( colors [ ( 5 - ( playerID - 1 ) ) ] ) . build () ; desktop_resources.GUI . addPlayer ( playerName , balance , car ) ; desktop_resources.GUI . setCar ( 1 , playerName ) ; } 
public void clientDisconnected ( client.Client client ) { java.util.List < client.Client > lostRouteClients ; synchronized ( syncRoot ) { if ( ! ( cache . contains ( client ) ) ) { return; } lostRouteClients = removeClient ( client ) ; } callbacks . onClientDisconnected ( client ) ; for ( client.Client c : lostRouteClients ) { callbacks . onClientLostRoute ( c ) ; } } 
private void setPostParameters ( java.lang.String namespace , java.lang.String command , org.cytoscape.command.AvailableCommands available , io.swagger.models.Operation operation ) { io.swagger.models.parameters.BodyParameter parameter = new io.swagger.models.parameters.BodyParameter () ; parameter . setName ( "body" ) ; org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel model = new org.cytoscape.rest.internal.resource.CyRESTCommandSwagger.CommandModel ( namespace , command , available ) ; parameter . setSchema ( model ) ; operation . addParameter ( parameter ) ; } 
@ java.lang.Override public void handle ( final com.sun.net.httpserver.HttpExchange exchange ) throws java.io.IOException { mmKNIME.core . logMessage ( "µmKNIME: Handling overview request." ) ; final java.util.Scanner scanner = new java.util.Scanner ( this . getFileStream () ) . useDelimiter ( "\\A" ) ; final java.lang.String response = ( scanner . hasNext () ) ? scanner . next () : "" ; exchange . sendResponseHeaders ( 200 , response . length () ) ; final java.io.OutputStream os = exchange . getResponseBody () ; os . write ( response . getBytes () ) ; os . close () ; } 
@ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; } 
private edu.uci.eecs.wukong.framework.model.InitValue extractInitValue ( int start ) { short componentId = edu.uci.eecs.wukong.framework.util.WKPFUtil . getLittleEndianShort ( buffer , start ) ; byte propertyNumber = buffer [ ( start + 2 ) ] ; byte size = buffer [ ( start + 3 ) ] ; byte [] val = new byte [ size ] ; java.lang.System . arraycopy ( buffer , ( start + 4 ) , val , 0 , size ) ; edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue ( componentId , ( propertyNumber ++ ) , val ) ; return value ; } 
@ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1L ) ) ; } } 
public static java.lang.String emailsMinusYou ( java.util.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList <> () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } 
@ java.lang.SuppressWarnings ( value = "Duplicates" ) private static void upload ( int port ) throws java.lang.Exception { byte [] sendData = new byte [ 1024 ] ; java.util.Scanner input = new java.util.Scanner ( java.lang.System.in ) ; while ( input . hasNextLine () ) { sendData = input . nextLine () . getBytes () ; csci4311.nc.NetcatUDPClient.clientSocket . send ( new java.net.DatagramPacket ( sendData , sendData.length , csci4311.nc.NetcatUDPClient.ipAddress , port ) ) ; } } 
private void checkAnswer ( java.lang.String userEnterAnswer ) { java.lang.String answer = myHiraganaSet [ myCurrentIndex ] . getMyAnswer () ; int messageResId = 0 ; if ( answer . equals ( userEnterAnswer ) ) messageResId = R.string.correct_toast ; else messageResId = R.string.incorrect_toast ; android.widget.Toast . makeText ( this , messageResId , Toast.LENGTH_SHORT ) . show () ; } 
public static boolean isOpened ( java.lang.String p_SPS_BC_Request_UUID ) { if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request ) == null ) return false ; if ( p_SPS_BC_Request_UUID == null ) return false ; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () ) == null ) return false ; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () ) == null ) return false ; return ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () . equals ( p_SPS_BC_Request_UUID ) ) && ( org.spinsuite.bchat.view.FV_Thread.m_IsActive ) ; } 
@ java.lang.Override public void onTextChanged ( java.lang.CharSequence charSequence , int i , int i1 , int i2 ) { if ( ! ( dch07m . getText () . toString () . isEmpty () ) ) { dch07 . clearCheck () ; dch0796x . setText ( null ) ; dch0796x . setVisibility ( View.GONE ) ; } } 
@ java.lang.Override < K , V > org.ehcache.Ehcache < K , V > createNewEhcache ( final java.lang.String alias , final org.ehcache.config.CacheConfiguration < K , V > config , final java.lang.Class < K > keyType , final java.lang.Class < V > valueType ) { final org.ehcache.Ehcache < K , V > ehcache = super . createNewEhcache ( alias , config , keyType , valueType ) ; return org.mockito.Mockito . spy ( ehcache ) ; } 
@ javafx.fxml.FXML private void buttonBackspace ( javafx.event.ActionEvent event ) { if ( ( inputText . length () ) > 0 ) { inputText = inputText . substring ( 0 , ( ( inputText . length () ) - 1 ) ) ; if ( inputText . isEmpty () ) { textFieldResults . setText ( "0" ) ; } else { textFieldResults . setText ( inputText ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.example.android.groceries2.MainActivity.dbHelper . deleteListTable ( listVersion ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.android.groceries2.MainActivity . class ) ; intent . putExtra ( "tab" , 2 ) ; startActivity ( intent ) ; android.widget.Toast . makeText ( this , ( listName + " deleted" ) , Toast.LENGTH_SHORT ) . show () ; } 
public java.lang.Object dispatchMethod ( java.lang.Object host , com.panda.kylin.Kylin kylin , java.lang.String methodName , java.lang.Object [] params ) throws java.lang.IllegalAccessException , java.lang.reflect.InvocationTargetException { for ( java.lang.reflect.Method method : getClass () . getDeclaredMethods () ) { com.panda.kylin.PatchMethodName patchMethodName = method . getAnnotation ( com.panda.kylin.PatchMethodName . class ) ; if ( ( methodName . hashCode () ) == ( patchMethodName . value () . hashCode () ) ) { return method . invoke ( kylin , host ) ; } } return null ; } 
public int takeNumberFromUser ( int width , int height ) { java.lang.String userInput = java.lang.Integer . toString ( takeNumberFromUser ( 3 ) ) ; try { if ( ( ( java.lang.Integer . parseInt ( userInput ) ) > width ) || ( ( java.lang.Integer . parseInt ( userInput ) ) > height ) ) throw new java.lang.IllegalArgumentException () ; return java.lang.Integer . parseInt ( userInput ) ; } catch ( java.lang.IllegalArgumentException iae ) { out . writeOut ( "printWrongSequenceHeightWidth" ) ; java.lang.System.out . println ( ( ( width + "x" ) + height ) ) ; return takeNumberFromUser ( width , height ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = inflater . inflate ( R.layout.fragment_friends_tab_requests , container , false ) ; tabFriendRequestContext = getActivity () ; layoutFriendRequestList = ( ( android.widget.LinearLayout ) ( rootView . findViewById ( R.id.layoutFriendRequestsList ) ) ) ; listFriendRequests . clear () ; retrieveFriendRequests () ; return rootView ; } 
private double entropy ( double p ) { if ( ( p == 0 ) || ( p == 1 ) ) { return 1 ; } else { return ( ( - p ) * ( ( java.lang.Math . log ( p ) ) / ( java.lang.Math . log ( 2 ) ) ) ) - ( ( 1 - p ) * ( ( java.lang.Math . log ( ( 1 - p ) ) ) / ( java.lang.Math . log ( 2 ) ) ) ) ; } } 
private static void sendMessage ( javafx.event.ActionEvent e ) { java.lang.String sender = AsxGame.activePlayer.email ; java.lang.String recipient = com.amazonaws.samples.UI_Mailbox.toField . getText () . toLowerCase () ; java.lang.String subject = com.amazonaws.samples.UI_Mailbox.subjectField . getText () ; java.lang.String body = com.amazonaws.samples.UI_Mailbox.bodyField . getText () ; if ( com.amazonaws.samples.Game . sendMessage ( sender , recipient , subject , body ) ) { com.amazonaws.samples.UI_Mailbox.toField . setText ( "" ) ; com.amazonaws.samples.UI_Mailbox.subjectField . setText ( "" ) ; com.amazonaws.samples.UI_Mailbox.bodyField . setText ( "" ) ; } else { com.amazonaws.samples.UI_Mailbox.toField . setText ( "Message not sent, sorry!" ) ; } } 
public void move ( int x , int y , final java.lang.Integer activityClass ) { for ( com.zst.xposed.halo.floatingwindow3.tasks.WindowHolder mWindowHolder : activitiesStack . get ( activityClass ) ) { if ( mWindowHolder != null ) { mWindowHolder . position ( x , y ) ; mWindowHolder . pushToWindow () ; } } } 
private static synchronized void removePropertyFromSharedPrefs ( java.lang.String key ) { if ( ( com.indicative.client.java.android.Indicative . getInstance () . context ) == null ) { android.util.Log . v ( "Indicative" , "Indicative instance has not been initialized; not adding common prop" ) ; return; } android.content.SharedPreferences prefs = com.indicative.client.java.android.Indicative . getInstance () . context . getSharedPreferences ( com.indicative.client.java.android.Indicative.PROPS_PREFS , Context.MODE_PRIVATE ) ; prefs . edit () . remove ( key ) . commit () ; } 
public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } 
private boolean match ( org.cloudish.borg.model.Task task ) { if ( jidAllocated . contains ( task . getJid () ) ) { return false ; } for ( org.cloudish.borg.model.TaskConstraint constraint : task . getConstraints () ) { org.cloudish.borg.model.HostAttribute hostAtt = attributes . get ( constraint . getAttName () ) ; if ( ( hostAtt == null ) || ( ! ( hostAtt . match ( constraint ) ) ) ) { return false ; } } return true ; } 
@ java.lang.Override public void showFinishOperation ( com.liferay.mobile.screens.assetlist.AssetEntry assetEntry ) { com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory factory = new com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory () ; com.liferay.mobile.screens.base.BaseScreenlet screenlet = factory . getScreenlet ( getContext () , assetEntry ) ; if ( screenlet != null ) { addView ( screenlet , LayoutParams.MATCH_PARENT , LayoutParams.MATCH_PARENT ) ; } else { com.liferay.mobile.screens.util.LiferayLogger . e ( "Error loading screenlet" ) ; } } 
@ ita.o2o.controller.restful.ResponseBody @ ita.o2o.controller.restful.RequestMapping ( value = "/reject" ) public java.lang.String reject ( java.lang.Integer orderId ) { java.lang.System.out . println ( ( "/reject orderId:" + orderId ) ) ; ita.o2o.controller.restful.Order order = orderService . getOrderById ( orderId ) ; ita.o2o.entity.extra.Status status = statusService . getById ( O2OConstants.STATUS_REJECTED ) ; ita.o2o.util.bean.ResponseMessage responseMessage = new ita.o2o.util.bean.ResponseMessage () ; order . setStatus ( status ) ; if ( orderService . updateOrder ( order ) ) { responseMessage . setStatus ( O2OConstants.SUCCESS ) ; } else { responseMessage . setStatus ( O2OConstants.FAILURE ) ; } return jsonMapper . writeObjectAsString ( responseMessage ) ; } 
private com.intellij.xdebugger.impl.evaluate.EvaluationInputComponent createInputComponent ( com.intellij.xdebugger.evaluation.EvaluationMode mode , com.intellij.xdebugger.impl.evaluate.XExpression text ) { final com.intellij.openapi.project.Project project = mySession . getProject () ; text = com.intellij.xdebugger.impl.breakpoints.XExpressionImpl . changeMode ( text , mode ) ; if ( mode == ( com.intellij.xdebugger.evaluation.EvaluationMode.EXPRESSION ) ) { return new com.intellij.xdebugger.impl.evaluate.ExpressionInputComponent ( project , myEditorsProvider , mySourcePosition , text , myDisposable ) ; } else { return new com.intellij.xdebugger.impl.evaluate.CodeFragmentInputComponent ( project , myEditorsProvider , mySourcePosition , text , myDisposable ) ; } } 
@ java.lang.Override public void onItemClick ( int viewId , int position ) { switch ( viewId ) { case R.id.task_card_text_open : if ( position >= 0 ) { mTaskRecyclerAdapter . getItems () . remove ( position ) ; mTaskRecyclerAdapter . notifyItemRemoved ( position ) ; } break; case R.id.task_card_text : mTaskRecyclerAdapter . getItems () . set ( position , new com.org.runaway.sharetodo.data.TaskState.AssignedTaskState () ) ; mTaskRecyclerAdapter . notifyItemChanged ( position ) ; break; default: break; } } 
protected java.lang.String generateCode ( java.lang.String message ) { message = message . toUpperCase () ; java.lang.StringBuilder codedMessage = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( message . length () ) ; i ++ ) { java.lang.String val = morseCode . get ( message . charAt ( i ) ) ; if ( val != null ) { codedMessage . append ( val ) ; codedMessage . append ( " " ) ; } else return null ; } return codedMessage . toString () ; } 
public void sendMessage ( android.view.View v ) { android.content.Intent searchIntent = new android.content.Intent ( this , com.bminor.officebarkaroake.PerformSearchActivity . class ) ; android.widget.EditText parm = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_searchText ) ) ) ; java.lang.String queryString = parm . getText () . toString () ; java.lang.String typeString = determineCheckedButton () ; queryString . trim () ; if ( ( determineCheckedButton () ) == "all" ) queryString = "true" ; searchIntent . putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_TYPE , typeString ) ; searchIntent . putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_STRING , queryString ) ; startActivity ( searchIntent ) ; } 
protected final int getLineStart ( java.lang.String line ) { int index = 0 ; while ( ( index < ( line . length () ) ) && ( java.lang.Character . isWhitespace ( line . charAt ( index ) ) ) ) { index ++ ; } return com.puppycrawl.tools.checkstyle.utils.CommonUtils . lengthExpandedTabs ( line , index , indentCheck . getIndentationTabWidth () ) ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } switch ( requestCode ) { case com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION : com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; break; default: updateUI () ; break; } } 
@ java.lang.Override public boolean onMouseDown ( com.totemdefender.input.MouseEvent event ) { if ( pointIsInBounds ( event.mousePosition ) ) { for ( com.totemdefender.menu.Component cmp : components ) { if ( cmp . pointIsInBounds ( worldToLocal ( event.mousePosition ) ) ) { setFocus ( cmp ) ; return cmp . onMouseDown ( event ) ; } } } else { java.lang.System.out . println ( "OUT BOUNDS" ) ; } return false ; } 
@ java.lang.Override public void onBindViewHolder ( org.creativecommons.thelist.adapters.FeedAdapter.FeedViewholder holder , int position ) { org.creativecommons.thelist.adapters.MainListItem l = listItems . get ( position ) ; holder.itemView . setVisibility ( View.VISIBLE ) ; holder.nameLabel . setText ( l . getItemName () ) ; holder.makerLabel . setText ( ( "requested by " + ( l . getMakerName () ) ) ) ; switch ( getItemViewType ( position ) ) { case org.creativecommons.thelist.adapters.FeedAdapter.ERROR_VIEW : holder.iconImageView . setImageResource ( R.drawable.ic_error_red_24dp ) ; break; case org.creativecommons.thelist.adapters.FeedAdapter.DEFAULT_VIEW : holder.iconImageView . setImageResource ( R.drawable.ic_camera_alt_grey600_24dp ) ; break; } holder.itemView . setTag ( l ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { localizationMonitoring . reset () ; localizationView . setParticles ( localizationMonitoring . getParticles () ) ; localizationView . reset () ; localizationView . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { localizationView . invalidate () ; } } ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) public void checkMapResolve ( java.util.Map object , java.lang.Object fieldName ) { if ( ( resolveStatus ) == ( com.alibaba.fastjson.parser.DefaultJSONParser.NeedToResolve ) ) { com.alibaba.fastjson.parser.ResolveFieldDeserializer fieldResolver = new com.alibaba.fastjson.parser.ResolveFieldDeserializer ( object , fieldName ) ; com.alibaba.fastjson.parser.DefaultJSONParser.ResolveTask task = getLastResolveTask () ; task.fieldDeserializer = fieldResolver ; task.ownerContext = context ; resolveStatus = com.alibaba.fastjson.parser.DefaultJSONParser.NONE ; } } 
public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; } if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } 
private static void interpretAsName ( java.util.ArrayList < com.equinox.KeyParamPair > keyParamPairs , com.equinox.KeyParamPair currentPair ) { java.lang.String newName ; int currentIndex = keyParamPairs . indexOf ( currentPair ) ; newName = com.equinox.Parser . appendParameters ( keyParamPairs , 0 , currentIndex ) ; keyParamPairs . get ( 0 ) . setParam ( newName ) ; } 
public org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor getDescriptor ( java.lang.String id ) { org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor configuration = m_descriptors . get ( id ) ; if ( configuration == null ) { if ( id != null ) { org.unidal.dal.jdbc.datasource.model.entity.DataSourceDef ds = m_dataSources . findDataSource ( id ) ; if ( ds != null ) { configuration = getDescriptor ( ds ) ; m_descriptors . put ( id , configuration ) ; } } } return configuration ; } 
@ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) private void insertIDandTypeforItemsBlock ( java.util.Map itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; } 
@ java.lang.Override public void onUpdate ( android.content.Context context , android.appwidget.AppWidgetManager appWidgetManager , int [] appWidgetIds ) { super . onUpdate ( context , appWidgetManager , appWidgetIds ) ; android.util.Log . d ( Config.LOG_TAG , "Widget Update, Starting Service" ) ; context . startService ( new android.content.Intent ( context , com.mathi_amorim.emmanuel.metrictime.UpdateTimeService . class ) ) ; android.util.Log . d ( Config.LOG_TAG , "Service Started" ) ; } 
private gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype getDataType ( java.lang.String name , java.lang.String hl7Version ) { org.springframework.data.mongodb.core.query.Criteria where = org.springframework.data.mongodb.core.query.Criteria . where ( "scope" ) . is ( Constant.SCOPE.HL7STANDARD ) . and ( "hl7Version" ) . is ( hl7Version ) . and ( "name" ) . is ( name ) ; org.springframework.data.mongodb.core.query.Query qry = org.springframework.data.mongodb.core.query.Query . query ( where ) ; gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype dt = mongoOps . findOne ( qry , gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype . class ) ; return dt ; } 
private android.graphics.Bitmap loadImageFromFile ( java.lang.String imageFileName ) { android.graphics.Bitmap bitmap = null ; try { java.io.File dir = android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_PICTURES ) ; java.io.File imageFile = new java.io.File ( dir , imageFileName ) ; java.io.InputStream inputStream = new java.io.FileInputStream ( imageFile ) ; bitmap = android.graphics.BitmapFactory . decodeStream ( inputStream ) ; android.util.Log . d ( "tag" , ( "got image from cache: " + imageFileName ) ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } return bitmap ; } 
@ org.support.project.aop.Aspect ( advice = org.support.project.ormapping.transaction.Transaction . class ) public void removeHook ( java.lang.Integer mailHookId ) { java.util.List < org.support.project.knowledge.entity.MailHookConditionsEntity > conditions = org.support.project.knowledge.dao.MailHookConditionsDao . get () . selectOnHookId ( mailHookId ) ; for ( org.support.project.knowledge.entity.MailHookConditionsEntity mailHookConditionsEntity : conditions ) { org.support.project.knowledge.dao.MailHookConditionsDao . get () . physicalDelete ( mailHookConditionsEntity ) ; } org.support.project.knowledge.dao.MailHooksDao . get () . physicalDelete ( mailHookId ) ; } 
private void updateVersion ( java.lang.Long slbId ) throws java.lang.Exception { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; throw e ; } } 
@ java.lang.Override public void removeConfigurations ( java.lang.String context ) { java.util.Set < java.lang.String > itemNames = contextMap . get ( context ) ; if ( itemNames != null ) { for ( java.lang.String itemName : itemNames ) { java.util.Set < org.eclipse.smarthome.core.thing.link.ItemChannelLink > links = itemChannelLinkMap . remove ( itemName ) ; if ( links != null ) { for ( org.eclipse.smarthome.core.thing.link.ItemChannelLink removedItemChannelLink : links ) { notifyListenersAboutRemovedElement ( removedItemChannelLink ) ; } } } contextMap . remove ( context ) ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.divyanshu.pixabayserverapi.callback.PixabayDataObject > call , retrofit2.Response < com.divyanshu.pixabayserverapi.callback.PixabayDataObject > response ) { if ( ( ( response . body () ) == null ) || ( ( response . body () . hits . size () ) < 1 ) ) { mainActivityView . showErrorMessage ( R.string.no_image_error ) ; return; } mainActivityView . onImageListResponse ( response . body () . hits ) ; } 
private java.lang.String resolveGroupKeyFromRuleMethod ( java.lang.Object executable ) throws java.lang.Exception { java.lang.reflect.Method methodWithGroupAnnotation = com.opnitech.rules.core.utils.AnnotationUtil . resolveMethodWithAnnotation ( executable , com.opnitech.rules.core.annotations.group.GroupKey . class ) ; if ( methodWithGroupAnnotation == null ) { return null ; } java.lang.String groupKey = ( ( java.lang.String ) ( methodWithGroupAnnotation . invoke ( executable ) ) ) ; if ( ( groupKey != null ) && ( org.apache.commons.lang3.StringUtils . isBlank ( groupKey ) ) ) { com.opnitech.rules.core.utils.ExceptionUtil . throwIllegalArgumentException ( "Invalid Group Key method in the rule. A group method cannot return a blank String. Rule: ''{0}'', Group Key Method: ''{1}''" , executable , methodWithGroupAnnotation . getName () ) ; } return groupKey ; } 
private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId ) { java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } 
model.Position winningMove ( common.boardclass.BoardClass < common.pattern.Threat > boardClass , common.StoneType attacker , int depth ) { for ( int i = 0 ; i <= depth ; i ++ ) { model.Position position = offend ( boardClass , attacker , new java.util.HashMap <> () , i ) ; if ( position != null ) { return position ; } } return null ; } 
public void union ( int v , int w ) { int rv = root ( v ) ; int rw = root ( w ) ; if ( rv == rw ) { return; } int sv = size [ rv ] ; int sw = size [ rw ] ; if ( sv > sw ) { id [ rw ] = rv ; size [ rv ] = sv + sw ; } else { id [ rv ] = rw ; size [ rw ] = sv + sw ; } } 
@ java.lang.Override public void enforce ( final org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution , final int numMaxSuppressedOutliers ) { if ( this . isFulfilled ( distribution ) ) { return; } distribution . suppressWhileNotFulfilledBinary ( new org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution.PrivacyCondition () { public org.deidentifier.arx.criteria.State isFulfilled ( org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution ) { boolean fulfilled = org.deidentifier.arx.criteria.RiskBasedPrivacyCriterion . this . isFulfilled ( distribution ) ; if ( ( ! fulfilled ) && ( ( distribution . getNumOfSuppressedTuples () ) > numMaxSuppressedOutliers ) ) { return State.ABORT ; } else { return fulfilled ? State.FULFILLED : State.NOT_FULFILLED ; } } } ) ; } 
private java.lang.String saveBookmarkImageBitmap ( android.graphics.Bitmap bitmap , java.lang.String postId , java.lang.String filename ) { try { java.io.File file = createBookmarkImageFile ( postId , filename ) ; java.io.FileOutputStream fileOutputStream = new java.io.FileOutputStream ( file ) ; bitmap . compress ( Bitmap.CompressFormat.JPEG , 90 , fileOutputStream ) ; fileOutputStream . flush () ; fileOutputStream . close () ; return file . getAbsolutePath () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return null ; } 
public void write ( com.xenoage.utils.xml.XmlWriter writer ) { writer . writeElementStart ( com.xenoage.zong.musicxml.types.MxlMidiInstrument.elemName ) ; writer . writeAttribute ( "id" , id ) ; writer . writeElementText ( "midi-channel" , midiChannel ) ; writer . writeElementText ( "midi-program" , midiProgram ) ; writer . writeElementText ( "pan" , pan ) ; writer . writeElementEnd () ; } 
public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.GET , value = "/processingPages" ) public java.lang.String processingPage ( org.springframework.ui.Model model , int pageNumber ) { ecommerce.rmall.domain.Page < ecommerce.rmall.domain.Order > page = this . service . queryProcessingWithPage ( pageNumber ) ; java.util.List < ecommerce.rmall.domain.Station > stations = this . stationService . listAll () ; model . addAttribute ( "CURRENT" , "PROCESSING" ) ; model . addAttribute ( "page" , page ) ; model . addAttribute ( "stations" , stations ) ; return "Order/processingPagination" ; } 
protected void onPostExecute ( android.graphics.Bitmap result ) { if ( ( activity ) != null ) { activity . upDateList () ; } else if ( ( viewHolder ) != null ) { viewHolder.imageView . setImageBitmap ( result ) ; } if ( ( imgData ) != null ) { imgData . setBitmap ( result ) ; activity . upDateList () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( showBusStop . isSelected () ) { showBusStop . setSelected ( false ) ; setAllNormalPinsVisibility ( popBusStationPins , false ) ; } else { showBusStop . setSelected ( true ) ; setAllNormalPinsVisibility ( popBusStationPins , true ) ; } } 
public static assignment3_DS.graph.Graph loadGraph ( java.io.File nodeFile , java.io.File arcFile ) { java.lang.System.out . println ( ( ( ( "loading nodes/ars from " + nodeFile ) + " / " ) + arcFile ) ) ; java.util.Map < java.lang.Integer , assignment3_DS.graph.Node > nodes = assignment3_DS.graph.CSVLoader . getNodes ( nodeFile ) ; java.util.List < assignment3_DS.graph.Arc > arcs = assignment3_DS.graph.CSVLoader . getArcs ( arcFile , nodes ) ; if ( arcs == null ) return null ; else return new assignment3_DS.graph.Graph ( nodes , arcs ) ; } 
public static void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } 
public int [] getPlayerLocation ( int id ) { int [] pos = new int [ 2 ] ; int counter = 0 ; while ( ! ( gl . processCommand ( "MOVE W" , id ) . equals ( "FAIL" ) ) ) { counter ++ ; } pos [ 0 ] = 1 + counter ; counter = 0 ; while ( ! ( gl . processCommand ( "MOVE N" , id ) . equals ( "FAIL" ) ) ) { counter ++ ; } pos [ 1 ] = 1 + counter ; return pos ; } 
@ org.mifos.beyonicIntegration.service.BeyonicService.RequestMapping ( value = "/collections" , method = RequestMethod.POST , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE , consumes = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) public org.springframework.http.ResponseEntity < java.lang.String > receiveCollection ( @ org.mifos.beyonicIntegration.service.BeyonicService.RequestBody org.mifos.beyonicIntegration.service.BeyonicService.domain.CollectionNotification notif ) { java.lang.System.out . println ( notif . getData () . toString () ) ; try { receptionStatus = sendCollectionToGateway ( notif , mfiProperties ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return new org.springframework.http.ResponseEntity ( "Collection received" , org.springframework.http.HttpStatus.OK ) ; } 
@ java.lang.Override public boolean accept ( java.io.File dir , java.lang.String name ) { return ( ( ! ( name . endsWith ( ".json" ) ) ) && ( ! ( name . endsWith ( endsWith ) ) ) ) && ( ! ( name . equals ( "instant-run" ) ) ) ; } 
public org.libsmith.anvil.time.TimePeriod addRandom ( org.libsmith.anvil.time.TimePeriod origin , org.libsmith.anvil.time.TimePeriod bound ) { java.util.concurrent.TimeUnit min = org.libsmith.anvil.time.TimePeriod . min ( origin . getTimeUnit () , bound . getTimeUnit () ) ; return addRandom ( origin . getDuration ( min ) , bound . getDuration ( min ) , min ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent imageReturnedIntent ) { super . onActivityResult ( requestCode , resultCode , imageReturnedIntent ) ; switch ( requestCode ) { case SELECT_PHOTO : if ( resultCode == ( RESULT_OK ) ) { final android.net.Uri imageUri = imageReturnedIntent . getData () ; mImageFilePath = com.amansoni.tripbook.util.ImageWrapper . getRealPathFromURI ( this , imageUri ) ; com.amansoni.tripbook.util.ImageWrapper . loadImageFromFile ( this , mMainImage , mImageFilePath , 400 ) ; if ( ( mTripbookItem ) != null ) { mTripbookItem . setThumbnail ( mImageFilePath ) ; } } } } 
public java.util.List < wyvern.tools.parsing.coreparser.Token > checkLex ( java.lang.String input , int [] kinds ) throws edu.umn.cs.melt.copper.runtime.logging.CopperParserException , java.io.IOException { java.util.List < wyvern.tools.parsing.coreparser.Token > tokens = new wyvern.tools.lexing.WyvernLexer () . parse ( new java.io.StringReader ( input ) , "test input" ) ; checkKinds ( kinds , tokens ) ; org.junit.Assert . assertEquals ( input , concat ( tokens ) ) ; return tokens ; } 
public boolean putChild ( int groupPosition , int childPosition , long childId , boolean isChecked ) { long packedPosition = android.widget.ExpandableListView . getPackedPositionForChild ( groupPosition , childPosition ) ; if ( hasStableIds () ) { java.lang.Long result = ( isChecked ) ? childIds . put ( childId , packedPosition ) : childIds . remove ( childId ) ; return result != null ; } else { return isChecked ? ! ( childPositions . add ( packedPosition ) ) : childPositions . remove ( packedPosition ) ; } } 
@ java.lang.Override public void releaseDevices ( final java.util.Map < org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType , java.util.Set < org.opendaylight.yangtools.yang.binding.InstanceIdentifier < ? > > > deviceMap ) { for ( org.opendaylight.distributed.tx.api.DTXLogicalTXProviderType logicalTXProviderType : deviceMap . keySet () ) { txProviderMap . get ( logicalTXProviderType ) . releaseTransactionDevices ( deviceMap . get ( logicalTXProviderType ) ) ; } } 
@ java.lang.Override public void dragStop ( com.badlogic.gdx.scenes.scene2d.InputEvent event , float x , float y , int pointer , com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload payload , com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target target ) { this . getActor () . setVisible ( true ) ; for ( com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target oldTarget : validTargets ) { oldTarget . getActor () . remove () ; dragDrop . removeTarget ( oldTarget ) ; } } 
public static int [] parseIntArray ( org.json.JSONArray arr ) { if ( arr == null ) return null ; int [] res = new int [ arr . length () ] ; for ( int i = 0 ; i < ( arr . length () ) ; i ++ ) { res [ i ] = arr . optInt ( i ) ; } return res ; } 
@ java.lang.Override public java.lang.String getIsoDate ( org.hisp.dhis.calendar.DateTimeUnit dateTimeUnit , org.hisp.dhis.calendar.Calendar calendar ) { int month = dateTimeUnit . getMonth () ; switch ( month ) { case 11 : return ( dateTimeUnit . getYear () ) + "NovS1" ; case 5 : return ( dateTimeUnit . getYear () ) + "NovS2" ; default: throw new java.lang.IllegalArgumentException ( ( "Month not valid [11,5] " + month ) ) ; } } 
private void insertToElastic ( java.util.Set < java.lang.String > tagList , java.lang.String newFileCheckSum , java.util.ArrayList < java.lang.String > parsedFile , java.lang.String [] locationCoordinates ) { parsedFile . add ( newFileCheckSum ) ; org.elasticsearch.common.xcontent.XContentBuilder json = elasticServer.elasticSearch . putJsonDocument ( parsedFile , tagList , locationCoordinates ) ; elasticServer.elasticSearch . insert ( elasticServer.client , json , "documents" , "file" ) ; } 
private java.lang.String getElementID ( final java.lang.String relativePath ) { final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { if ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { return fragment . substring ( ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { return fragment ; } } return null ; } 
@ java.lang.Override public void onResult ( int requestCode , int resultCode , @ android.support.annotation.Nullable android.content.Intent data ) { if ( ( ( requestCode == ( id ) ) && ( resultCode != ( android.app.Activity.RESULT_OK ) ) ) || ( data == null ) ) { return; } result = ru.spbau.mit.placenotifier.PlacePicker . getSelectedPoint ( data ) ; updateCamera () ; } 
@ java.lang.Override public int getZoneIdx ( playground.michalm.zone.util.Node node ) { org.matsim.api.core.v01.Coord coord = node . getCoord () ; int r = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getY () ) - ( y0 ) ) / ( cellSize ) ) ) ) ) ; int c = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getX () ) - ( x0 ) ) / ( cellSize ) ) ) ) ) ; return ( r * ( cols ) ) + c ; } 
@ java.lang.Override public java.lang.String parse ( java.lang.String [] parts ) { java.lang.String opcode = instructionCodes . get ( parts [ 0 ] ) ; java.lang.String fd = getFloatRegister ( parts [ 1 ] ) ; java.lang.String fs = getFloatRegister ( parts [ 2 ] ) ; java.lang.String ft = getFloatRegister ( parts [ 3 ] ) ; java.lang.String format = "10000" ; java.lang.String funct = "000000" ; return ( ( ( ( opcode + format ) + ft ) + fs ) + fd ) + funct ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; product = getIntent () . getParcelableExtra ( Constants.PRODUCT_KEY ) ; getSupportActionBar () . setTitle ( product.name ) ; } 
@ java.lang.Override public void exitAssignStat ( grammar.CracklParser.AssignStatContext ctx ) { analysis.Scope curScope = scopes . get ( ( ( scopes . size () ) - 1 ) ) ; analysis.Type lhsType = getType ( ctx . target () ) ; checkType ( ctx . expr () , lhsType ) ; curScope . addInitVar ( ctx . getText () ) ; } 
private boolean asyncSendAcknowledge ( com.sun.messaging.jmq.jmsclient.ReadWritePacket pkt ) { boolean synchronousReply = protocolHandler . isDirectModeTwoThreadWithSyncReplies () ; if ( synchronousReply ) { return true ; } long ackId = pkt . getConsumerID () ; com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ( ( com.sun.messaging.jmq.jmsclient.AsyncSendCallback ) ( requestMetaData . get ( java.lang.Long . valueOf ( ackId ) ) ) ) ; requestMetaData . remove ( ackId ) ; if ( cb == null ) { return false ; } cb . processCompletion ( pkt , true ) ; return true ; } 
public static int getBlockOrFacadeMetadata ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { net.minecraft.block.Block blk = world . getBlock ( x , y , z ) ; if ( blk instanceof info.jbcs.minecraft.chisel.api.IFacade ) { return ( ( info.jbcs.minecraft.chisel.api.IFacade ) ( blk ) ) . getFacadeMetadata ( world , x , y , z , side ) ; } return world . getBlockMetadata ( x , y , z ) ; } 
private void CheckConcate ( java.lang.String value1 , java.lang.String value2 ) { if ( ( ! ( value2 . equals ( "null" ) ) ) && ( ! ( value2 . equals ( "" ) ) ) ) { java.lang.String value = ( ( "      " + value1 ) + ":  " ) + value2 ; result_concate = ( ( result_concate ) + value ) + "\n" ; } } 
public void setHandLinearControlOnly ( us.ihmc.robotics.robotSide.RobotSide robotSide ) { double [] controlledPositionAxes = new double [] { 1.0 , 1.0 , 1.0 } ; double [] controlledOrientationAxes = new double [] { 0.0 , 0.0 , 0.0 } ; setHandControlledAxes ( robotSide , controlledPositionAxes , controlledOrientationAxes ) ; } 
public void onUpdate ( android.content.Context context , android.appwidget.AppWidgetManager appWidgetManager , int [] appWidgetIds ) { android.util.Log . v ( com.apps.home.notewidget.widget.WidgetProvider.TAG , "onUpdate" ) ; for ( int appWidgetId : appWidgetIds ) { if ( isConfigured ( context , appWidgetId ) ) { appWidgetManager . updateAppWidget ( appWidgetId , updateWidgetListView ( context , appWidgetId ) ) ; updateNote ( context , appWidgetId ) ; } } super . onUpdate ( context , appWidgetManager , appWidgetIds ) ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent data ) { if ( ( callback ) == null ) { return; } java.lang.String action = data . getAction () ; if ( action . equals ( com.auth0.android.lock.Lock.AUTHENTICATION_ACTION ) ) { processEvent ( data ) ; } else if ( action . equals ( com.auth0.android.lock.Lock.CANCELED_ACTION ) ) { callback . onCanceled () ; } } 
public static android.app.AlertDialog showAlertDialog ( android.content.Context context , int messageId , android.content.DialogInterface.OnClickListener positiveAction ) { android.app.AlertDialog.Builder adb = new android.app.AlertDialog.Builder ( context ) ; adb . setTitle ( messageId ) ; adb . setNegativeButton ( context . getString ( R.string.cancel ) , null ) ; adb . setPositiveButton ( context . getString ( R.string.ok ) , positiveAction ) ; return adb . show () ; } 
public static void deleteTimer ( final java.lang.String name ) { java.util.Iterator < java.util.Timer > iterator = com.sb.elsinore.LaunchControl.timerList . iterator () ; java.util.Timer tTimer ; while ( iterator . hasNext () ) { tTimer = iterator . next () ; if ( tTimer . getName () . equalsIgnoreCase ( name ) ) { com.sb.elsinore.LaunchControl.timerList . remove ( tTimer ) ; } } } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent e ) { for ( org.nschmidt.ldparteditor.opengl.OpenGLRenderer renderer : org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.renders ) { org.nschmidt.ldparteditor.composites.Composite3D c3d = renderer . getC3D () ; if ( c3d . getLockableDatFileReference () . equals ( org.nschmidt.ldparteditor.project.Project . getFileToEdit () ) ) { org.nschmidt.ldparteditor.data.VertexManager vm = c3d . getLockableDatFileReference () . getVertexManager () ; vm . addSnapshot () ; loadSelectorSettings () ; vm . selectAll ( sels , true ) ; vm . syncWithTextEditors ( true ) ; regainFocus () ; return; } } regainFocus () ; } 
public void DrawBoard ( java.awt.Graphics g ) { for ( int r = 0 ; r < ( board.length ) ; r ++ ) { for ( int c = 0 ; c < ( board [ r ] . length ) ; c ++ ) { if ( ( board [ r ] [ c ] ) != null ) board [ r ] [ c ] . draw ( g ) ; } } } 
public int extractY ( int y ) { int py = ( y + ( UserInterface.Accordpanel.YP ) ) + 60 ; if ( curAcc . isSixakk () ) { py -= 110 ; py /= 50 ; } else { py -= 15 + 50 ; py /= 50 ; } return py ; } 
public static int findBytes ( java.util.LinkedList < java.lang.Byte > arr , byte value ) { int i = 0 ; while ( ( i < ( arr . size () ) ) && ( ( arr . get ( i ) ) != value ) ) i ++ ; if ( i < ( arr . size () ) ) return i ; return - 1 ; } 
public boolean initCamera ( java.lang.String cam ) { if ( ( camera ) != null ) return true ; try { camera = new java.net.URL ( cam ) ; new java.lang.Thread ( this ) . start () ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } return ( camera ) != null ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj instanceof data.Emotion ) { data.Emotion em = ( ( data.Emotion ) ( obj ) ) ; return ( ( ( ( em.name ) == null ) && ( ( this . name ) == null ) ) || ( em.name . equals ( this . name ) ) ) && ( ( java.lang.Double . compare ( em.intensity , this . intensity ) ) == 0 ) ; } return false ; } 
public boolean isValidMove ( java.lang.String direction ) { switch ( direction . toLowerCase () ) { case "n" : return ( this . emptySpaceLocation . getX () ) > 0 ; case "e" : return ( this . emptySpaceLocation . getY () ) < 2 ; case "s" : return ( this . emptySpaceLocation . getX () ) < 2 ; case "w" : return ( this . emptySpaceLocation . getY () ) > 0 ; default: return false ; } } 
public static org.eclipse.jdt.core.dom.MethodDeclaration checkInvocationParentRelation ( microbat.model.trace.TraceNode prevNode , microbat.model.trace.TraceNode postNode ) { java.util.List < org.eclipse.jdt.core.dom.IMethodBinding > methodInvocationBindings = microbat.util.JavaUtil . findMethodInvocations ( prevNode ) ; if ( ! ( methodInvocationBindings . isEmpty () ) ) { org.eclipse.jdt.core.dom.MethodDeclaration md = microbat.util.JavaUtil . findMethodDeclaration ( postNode ) ; if ( md == null ) { return null ; } org.eclipse.jdt.core.dom.IMethodBinding methodDeclarationBinding = md . resolveBinding () ; if ( microbat.util.JavaUtil . canFindCompatibleSig ( methodInvocationBindings , methodDeclarationBinding ) ) { return md ; } } return null ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/autenticar-usuario" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String autenticarUsuario ( avaliador.model.Usuario usuarioRecebido , javax.servlet.http.HttpSession session ) { avaliador.model.Usuario usuarioRetornado = usuarioDao . validarUsuario ( usuarioRecebido . getLogin () , usuarioRecebido . getSenha () ) ; if ( usuarioRetornado != null ) { session . setAttribute ( "usuarioLogado" , usuarioRetornado ) ; if ( ( usuarioRetornado . getTipoUsuario () ) == ( avaliador.model.NivelUsuario.ADMINISTRADOR ) ) { session . setAttribute ( "ehAdministrador" , usuarioRetornado ) ; } return "redirect:/index" ; } return "login" ; } 
private boolean hayCamposVacios ( entities.Contrato t ) { return ( ( ( ( ( t . getIdentificador () ) == null ) || ( ( t . getPropiedad () . getCalle () ) == null ) ) || ( ( t . getCliente () . getPersona () ) == null ) ) || ( ( t . getCreador () . getPersona () ) == null ) ) || ( t . getGarantia () . equals ( "" ) ) ; } 
public bibliothek.gui.dock.common.intern.CommonSingleDockableLayout read ( bibliothek.util.xml.XElement element , bibliothek.gui.dock.station.support.PlaceholderStrategy placeholders ) { bibliothek.gui.dock.common.intern.CommonSingleDockableLayout layout = new bibliothek.gui.dock.common.intern.CommonSingleDockableLayout () ; layout . setId ( element . getElement ( "id" ) . getString () ) ; bibliothek.util.xml.XElement xarea = element . getElement ( "area" ) ; if ( xarea != null ) { java.lang.String area = xarea . getString () ; if ( "" . equals ( area ) ) { layout . setArea ( null ) ; } else { layout . setArea ( area ) ; } } return layout ; } 
@ java.lang.Override public net.minecraft.item.ItemStack onItemRightClick ( net.minecraft.item.ItemStack stack , net.minecraft.world.World world , net.minecraft.entity.player.EntityPlayer player ) { cn.academy.terminal.TerminalData tData = cn.academy.terminal.TerminalData . get ( player ) ; if ( tData . isTerminalInstalled () ) { if ( ! ( world.isRemote ) ) player . addChatMessage ( new net.minecraft.util.ChatComponentTranslation ( "ac.terminal.alrdy_installed" ) ) ; } else { if ( ! ( world.isRemote ) ) { if ( ! ( player.capabilities.isCreativeMode ) ) ( stack.stackSize ) -- ; tData . install () ; cn.academy.terminal.item.ItemTerminalInstaller . startInstalling ( player ) ; } } return stack ; } 
@ java.lang.Override public boolean onQueryTextChange ( java.lang.String newText ) { if ( ( newText . length () ) > 0 ) { mUsersList . setVisibility ( View.VISIBLE ) ; mUsersAdapter . getFilter () . filter ( newText ) ; } else { mUsersList . setVisibility ( View.GONE ) ; } return false ; } 
public void wallsAndGatesV0 ( int [] [] rooms ) { if ( checkCornerCase ( rooms ) ) { return; } for ( int i = 0 ; i < ( rooms.length ) ; i ++ ) { for ( int j = 0 ; j < ( rooms [ 0 ] . length ) ; j ++ ) { if ( ( rooms [ i ] [ j ] ) >= 0 ) { bfsHelper ( rooms , i , j ) ; } } } } 
@ java.lang.Override public void forEachEntry ( java.util.function.ObjIntConsumer < ? super E > action ) { com.google.common.base.Preconditions . checkNotNull ( action ) ; for ( int i = 0 ; i < ( length ) ; i ++ ) { action . accept ( elementSet . asList () . get ( i ) , getCount ( i ) ) ; } } 
public org.netpreserve.commons.uri.UriBuilder query ( final java.lang.String value ) { if ( value == null ) { query = null ; } else { query = config . getParser () . validateQuery ( this , value , 0 , ( - 1 ) ) ; } parsedQuery = null ; return this ; } 
@ java.lang.Override public org.apache.jena.graph.Node get1 ( org.apache.jena.sparql.core.Var var ) { try { org.rdfhdt.hdtjena.bindings.HDTId id = idBinding . get ( var ) ; if ( id == null ) return null ; return id . getNode () ; } catch ( java.lang.Exception ex ) { org.apache.jena.atlas.logging.Log . fatal ( this , java.lang.String . format ( "get1(%s)" , var ) , ex ) ; return null ; } } 
@ java.lang.Override public boolean parseMsg ( java.lang.String subject , java.lang.String body , net.anei.cadpage.parsers.MsgInfo.Data data ) { if ( ! ( subject . startsWith ( "CAD Page" ) ) ) return false ; java.lang.String [] fields = body . split ( "\n" ) ; return parseFields ( fields , data ) ; } 
private int eventHandler ( java.lang.String event ) { if ( event . split ( " " ) [ 0 ] . equals ( "+OK" ) ) return okHandler ( event ) ; else if ( event . split ( " " ) [ 0 ] . equals ( "-ERR" ) ) return errHandler ( event ) ; else { return - 1 ; } } 
@ java.lang.Override public void onTextChanged ( final java.lang.CharSequence s , int start , int before , int count ) { if ( inputString . getText () . toString () . equals ( random ) ) { handler . removeCallbacks ( runnable ) ; service = false ; stopService ( closeDialog ) ; player . release () ; vibrator . cancel () ; resetAlarm () ; finish () ; } else { player . pause () ; vibrator . cancel () ; handler . removeCallbacks ( runnable ) ; } } 
@ java.lang.Override public void create ( final com.jforex.programming.order.OrderSpecification orderSpecification ) { lock . lock () ; com.jforex.programming.position.PositionFSM positionFSM = getPositionFSM ( orderSpecification . getInstrument () ) ; positionFSM = positionFSM . fireCreate ( this , orderSpecification ) ; positionFSMs . put ( orderSpecification . getInstrument () , positionFSM ) ; lock . unlock () ; } 
public static pedca.context.Context createAndSaveBottleneckContext ( java.lang.String path , float sizeX , float sizeY , float bottleneckWidth , float bottleneckHeight , float bottleneckPosY ) { pedca.context.Context context = scenarios.ContextGenerator . getBottleneckContext ( sizeX , sizeY , bottleneckWidth , bottleneckHeight , bottleneckPosY ) ; try { context . saveConfiguration ( path ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return context ; } 
public void write_page ( global.PageId pageno , global.Page mempage ) { if ( ( ( pageno.pid ) < 0 ) || ( ( pageno.pid ) >= ( num_db_pages ) ) ) { throw new java.lang.IllegalArgumentException ( ( "Invalid page number; write aborted" + ( pageno.pid ) ) ) ; } try { fp . seek ( ( ( long ) ( ( pageno.pid ) * ( PAGE_SIZE ) ) ) ) ; fp . write ( mempage . getData () ) ; ( write_cnt ) ++ ; } catch ( java.io.IOException exc ) { global.Minibase . haltSystem ( exc ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; if ( stationPlaylist != ( getPlaybackManager () . getPlaylist () ) ) { getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } 
@ java.lang.Override public void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { if ( ( "message" . equals ( qName ) ) || ( "geomessage" . equals ( qName ) ) ) { message = new com.esri.core.symbol.advanced.Message () ; messages . add ( message ) ; version = attributes . getValue ( "v" ) ; } else if ( MessageHelper.MESSAGE_ID_PROPERTY_NAME . equals ( qName ) ) { readingId = true ; } elementName = qName ; } 
protected com.codeborne.selenide.impl.WebDriver markForAutoClose ( com.codeborne.selenide.impl.WebDriver webDriver ) { ALL_WEB_DRIVERS_THREADS . add ( java.lang.Thread . currentThread () ) ; if ( ! ( cleanupThreadStarted . get () ) ) { synchronized ( this ) { if ( ! ( cleanupThreadStarted . get () ) ) { new com.codeborne.selenide.impl.WebDriverThreadLocalContainer.UnusedWebdriversCleanupThread () . start () ; cleanupThreadStarted . set ( true ) ; } } } java.lang.Runtime . getRuntime () . addShutdownHook ( new com.codeborne.selenide.impl.WebDriverThreadLocalContainer.WebdriversFinalCleanupThread ( java.lang.Thread . currentThread () ) ) ; return webDriver ; } 
@ java.lang.Override public void onSelect ( com.sencha.gxt.widget.core.client.event.SelectEvent event ) { log . setText ( ( ( "running cmd: " + cmdString ) + "  ..." ) ) ; processingAnim ( cmdString ) ; gpfsService . runCmd ( nodeop , nodes , new com.google.gwt.user.client.rpc.AsyncCallback < java.lang.String > () { @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { log . setText ( caught . getMessage () ) ; processingWait = false ; } @ java.lang.Override public void onSuccess ( java.lang.String result ) { log . setText ( result ) ; processingWait = false ; reloadState () ; } } ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { for ( com.example.liwaihing.multiuseronlinemaps.UserPosition u : userPositionList ) { if ( ( u . getUserPosition ( name ) ) != null ) { marker . remove () ; break; } } dbHelper . removeSharingUser ( dbHelper . getGoogleID () , name ) ; dbHelper . removeSharingUser ( name , dbHelper . getGoogleID () ) ; layout_pos . setVisibility ( View.GONE ) ; if ( ( polyline ) != null ) { polyline . remove () ; } } 
public boolean getAnswerByQuestion ( java.lang.String questionID ) { int answerindex = 0 ; for ( java.util.Map.Entry < java.lang.String , expert_system.Question > elements : ruleMap . entrySet () ) { if ( elements . getKey () . contains ( questionID ) ) { return ( ( boolean ) ( answerCollection . toArray () [ answerindex ] ) ) ; } answerindex ++ ; } return false ; } 
private int GeneralHeading ( com.fuzzy.simulator.CAnimat animat ) { java.awt.Point target = new java.awt.Point ( 0 , 0 ) ; int numAnimats = 0 ; for ( com.fuzzy.simulator.CAnimat otherAnimat : _animats ) { java.awt.Point otherLocation = ClosetLocation ( animat . GetLocation () , otherAnimat . GetLocation () ) ; int animatDistance = animat . GetDistance ( otherAnimat ) ; } return numAnimats ; } 
public void draw ( org.newdawn.slick.Graphics graphics ) throws com.sem.btrouble.view.SlickException { drawBackground ( graphics ) ; drawCountDown ( graphics ) ; drawPlayers ( graphics ) ; drawPowers ( graphics ) ; drawBubbles ( graphics ) ; drawTimer ( graphics ) ; drawBorders ( graphics ) ; drawLives () ; drawScore ( graphics ) ; } 
@ java.lang.Override public boolean onScroll ( android.view.MotionEvent event1 , android.view.MotionEvent event2 , float distanceX , float distanceY ) { if ( ( ( mPreviousView ) == null ) && ( ( mNextView ) == null ) ) { isScrolling = false ; return true ; } isScrolling = true ; onScrollX ( event1 , event2 , distanceX ) ; return true ; } 
@ java.lang.Override public double curve ( double t ) { if ( t <= 0.5 ) { return ( 1 - ( super . curve ( ( 1 - ( t * 2 ) ) ) ) ) * 0.5 ; } return ( ( super . curve ( ( ( t * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } 
private void setListView () { listView = findView ( R.id.lv_main_providers_list ) ; mAdapter = new com.pictureit.noambaroz.beautyapp.helper.MainProviderListAdapter ( this , android.R.layout.simple_list_item_1 , new java.util.ArrayList < com.pictureit.noambaroz.beautyapp.data.Beautician > () ) ; listView . setAdapter ( mAdapter ) ; listView . setOnItemClickListener ( new android.widget.AdapterView.OnItemClickListener () { @ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { com.pictureit.noambaroz.beautyapp.BeauticianUtil . openBeauticianInNewActivity ( com.pictureit.noambaroz.beautyapp.MainActivity . this , mAdapter . getItem ( position ) ) ; } } ) ; } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle saveState ) { super . onSaveInstanceState ( saveState ) ; if ( ( movieArrayList ) != null ) saveState . putParcelableArrayList ( SAVED_MOVIE_LIST , movieArrayList ) ; saveState . putString ( SAVED_SORT_PREF , sortBy ) ; saveState . putInt ( SAVED_PAGE_NO , page ) ; } 
private com.amazonaws.services.kinesis.scaling.ScalingOperationReport scaleStream ( java.lang.String streamName , int originalShardCount , int targetShards , int operationsMade , int shardsCompleted , long startTime , java.lang.Integer minShards , java.lang.Integer maxShards ) throws java.lang.Exception { com.amazonaws.services.kinesis.scaling.StreamScaler.LOG . info ( java.lang.String . format ( "Scaling Stream %s from %s Shards to %s" , streamName , originalShardCount , targetShards ) ) ; return scaleStream ( streamName , originalShardCount , targetShards , operationsMade , shardsCompleted , startTime , getOpenShardStack ( streamName ) , minShards , maxShards ) ; } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.ICE_CREAM_SANDWICH ) public static io.branch.referral.Branch getAutoInstance ( @ android.support.annotation.NonNull android.content.Context context , boolean isReferrable ) { io.branch.referral.Branch.isAutoSessionMode_ = true ; io.branch.referral.Branch.customReferrableSettings_ = ( isReferrable ) ? io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.REFERRABLE : io.branch.referral.Branch.CUSTOM_REFERRABLE_SETTINGS.NON_REFERRABLE ; boolean isDebug = io.branch.referral.BranchUtil . isTestModeEnabled ( context ) ; io.branch.referral.Branch . getBranchInstance ( context , ( ! isDebug ) ) ; return io.branch.referral.Branch.branchReferral_ ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ! ( android.text.TextUtils . isEmpty ( prevKey ) ) ) { android.content.Intent intent = new android.content.Intent ( getActivity () , kyi.senti.activity.CommentActivity . class ) ; intent . putExtra ( "cardKey" , prevKey ) ; intent . putExtra ( "userId" , userId ) ; intent . putExtra ( "flag" , true ) ; startActivity ( intent ) ; } } 
@ java.lang.Override public java.lang.Object getHandle ( java.lang.String name ) { if ( ds . getNames () . contains ( name ) ) { return new schn27.zorlog.data.DataSourceMath.Handle ( false , ds . getHandle ( name ) ) ; } else if ( mathValues . keySet () . contains ( name ) ) { return new schn27.zorlog.data.DataSourceMath.Handle ( true , mathValues . get ( name ) ) ; } else { return null ; } } 
public static void updateForNotes ( @ android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel [] marbles , @ android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel updatedMarble ) { for ( com.wildsmith.jarble.provider.jar.JarTableMarbleModel marble : marbles ) { if ( ( marble == null ) || ( ( marble . getId () ) != ( updatedMarble . getId () ) ) ) { continue; } marble.purposeNotes = updatedMarble.purposeNotes ; marble.performanceNotes = updatedMarble.performanceNotes ; break; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.add_serie ) ; db = nl.asymmetrics.droidshows.utils.SQLiteStore . getInstance ( this ) ; series = db . getSeries ( 2 , false , null ) ; java.util.List < nl.asymmetrics.droidshows.thetvdb.model.Serie > search_series = new java.util.ArrayList < nl.asymmetrics.droidshows.thetvdb.model.Serie > () ; this . seriessearch_adapter = new nl.asymmetrics.droidshows.ui.AddSerie.SeriesSearchAdapter ( this , R.layout.row_search_series , search_series ) ; setListAdapter ( seriessearch_adapter ) ; android.content.Intent intent = getIntent () ; getSearchResults ( intent ) ; } 
public void verifyDriveArcingRight ( double minimumDifference ) { org.junit.Assert . assertTrue ( ( ( ( getLeftSetpoint () ) - ( getRightSetpoint () ) ) > minimumDifference ) ) ; org.junit.Assert . assertTrue ( ( ( ( ( xbot.common.controls.actuators.MockCANTalon ) ( drive.rightDrive ) ) . getSetpoint () ) >= 0 ) ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; com.mounacheikhna.practice.algorithms.SmartWordToy.Node node = ( ( com.mounacheikhna.practice.algorithms.SmartWordToy.Node ) ( o ) ) ; return ( ( steps ) == ( node.steps ) ) && ( java.util.Arrays . equals ( word , node.word ) ) ; } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue < ? extends java.lang.String > ov , java.lang.String t , java.lang.String t1 ) { java.lang.System.out . println ( "Plate No. Changed" ) ; if ( ( t1 != null ) && ( ! ( "" . equals ( t1 . trim () ) ) ) ) { rentButton . setDisable ( false ) ; } else { rentButton . setDisable ( true ) ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean b ) { super . onPostExecute ( b ) ; if ( b ) { if ( ( mListener ) != null ) { mListener . onEditionSuccess () ; } } else { android.widget.Toast . makeText ( context , R.string.tags_edition_failed , Toast.LENGTH_SHORT ) . show () ; } } 
public void writeByteBufferImpl ( java.nio.ByteBuffer buf ) throws java.io.IOException { int currLen = buf . remaining () ; assert null != ( sChannel ) : "tcp socket not set yet, null value found." ; sChannel . write ( buf ) ; bufferPool . returnBuffer ( buf ) ; block . setNumBytes ( ( ( block . getNumBytes () ) + currLen ) ) ; bufferPool . returnBuffer ( buf ) ; } 
@ java.lang.Override public entity.Customer findCustomer ( long id ) { javax.persistence.EntityManager em = emf . createEntityManager () ; try { em . getTransaction () . begin () ; entity.Customer c = em . find ( entity.Customer . class , id ) ; em . getTransaction () . commit () ; return c ; } finally { em . close () ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( o == null ) return false ; if ( ! ( o instanceof java.lang.Number ) ) return false ; java.lang.Number that = ( ( java.lang.Number ) ( o ) ) ; return ( ( compareTo ( that ) ) == 0 ) || ( value . equals ( that . doubleValue () ) ) ; } 
public java.util.List < eu.h2020.symbiote.cloud.model.data.observation.Observation > readResourceHistory ( java.lang.String resourceId ) { java.util.List < eu.h2020.symbiote.cloud.model.data.observation.Observation > value = new java.util.ArrayList () ; eu.h2020.symbiote.cloud.model.data.observation.Observation obs1 = eu.h2020.symbiote.plugin.PlatformSpecificPlugin . observationExampleValue () ; eu.h2020.symbiote.cloud.model.data.observation.Observation obs2 = eu.h2020.symbiote.plugin.PlatformSpecificPlugin . observationExampleValue () ; value . add ( obs1 ) ; value . add ( obs2 ) ; return value ; } 
public final void setTransferable ( eu.mihosoft.vrl.visual.Transferable dragginObj ) { this . draggingObj = dragginObj ; draggingObj . setSourceObject ( this ) ; this . add ( draggingObj ) ; draggingObj . setSize ( ( ( ( int ) ( this . getSize () . getWidth () ) ) - 1 ) , ( ( ( int ) ( this . getSize () . getHeight () ) ) - 1 ) ) ; } 
public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( hmiVal != null ) { if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } else { setUserSelectedStatus ( false ) ; } } 
public model.Book get ( long key ) { int firstHash = hashFunctionOne ( key ) ; int secondHash = hashFunctionTwo ( key ) ; if ( ( ( table [ firstHash ] ) != null ) && ( ( table [ firstHash ] . getKey () ) == key ) ) { return table [ firstHash ] . getValue () ; } else { return table [ secondHash ] . getValue () ; } } 
public java.lang.String loadSettingsFile ( nfl.season.input.NFLTeamSettingsFileReaderFactory fileReaderFactory ) throws java.io.IOException { java.io.BufferedReader fileReader = fileReaderFactory . createNFLTeamSettingsReader () ; java.lang.StringBuilder nflTeamSettingsBuilder = new java.lang.StringBuilder () ; java.lang.String line ; try { line = fileReader . readLine () ; while ( line != null ) { nflTeamSettingsBuilder . append ( line ) ; nflTeamSettingsBuilder . append ( "\n" ) ; line = fileReader . readLine () ; } } finally { fileReader . close () ; } return nflTeamSettingsBuilder . toString () ; } 
public com.mycompany.model.UserOTP saveUserQRCode ( java.lang.String username , java.lang.String qrcode ) { java.lang.System.out . println ( "=========+API============" ) ; com.mycompany.model.UserOTP userOTP = userOTPDao . getUserOTP ( username ) ; java.util.Date date = new java.util.Date () ; if ( userOTP != null ) { userOTP . setValidUser ( true ) ; userOTP . setQrcode ( qrcode ) ; userOTP . setModifiedTime ( date ) ; return userOTPDao . saveUserOTP ( userOTP ) ; } return userOTP ; } 
protected java.lang.reflect.Method getMethod ( int amountOfParams ) throws java.lang.ClassNotFoundException { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { synchronized ( this ) { if ( ! ( methods . containsKey ( amountOfParams ) ) ) { java.lang.String fullName = ( ( java.lang.String ) ( be.nabu.libs.evaluator.impl.MethodOperation . getParts () . get ( 0 ) . getContent () ) ) ; methods . put ( amountOfParams , findMethod ( fullName , amountOfParams ) ) ; } } } return methods . get ( amountOfParams ) ; } 
private void updateLocation ( android.location.Location location ) { if ( location != null ) { currentLocation . setText ( com.example.xialong.funplacesforkids.util.Util . getCity ( this , location . getLatitude () , location . getLongitude () ) ) ; weather . execute ( location . getLatitude () , location . getLongitude () ) ; } else { currentLocation . setText ( WeatherUtil.DEFAULT_LOCATION ) ; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View viewClicked , int position , long id ) { com.aolalabs.partywolf.Event clickedEvent ; if ( dateView ) { clickedEvent = events . get ( position ) ; } else { clickedEvent = sortedEvents . get ( position ) ; } android.content.Intent i = new android.content.Intent ( this , com.aolalabs.partywolf.EventDetailA . class ) ; i . putExtra ( "event" , clickedEvent ) ; startActivity ( i ) ; } 
public static java.util.List < pi.pathfinder.Area > createGraphFromMap ( pi.controller.Map map , int robotWidth , int robotHeight ) { java.util.List < pi.pathfinder.ObstacleEdge > obstacleEdges = pi.pathfinder.GraphConverter . createObstacleEdges ( map . getObstacles () ) ; pi.pathfinder.GraphConverter . sortObstacleEdges ( obstacleEdges ) ; java.util.List < pi.pathfinder.Area > graph = pi.pathfinder.GraphConverter . createGraphFromObstacleEdges ( map , obstacleEdges ) ; pi.pathfinder.GraphConverter . removeTooSmallAreas ( graph , robotWidth , robotHeight ) ; pi.pathfinder.GraphConverter.logger . info ( map . getObstacles () ) ; pi.pathfinder.GraphConverter.logger . info ( graph ) ; return graph ; } 
public java.lang.Object getObject ( java.lang.String key ) { java.lang.Object result = null ; try { result = this . keyValue . get ( key ) ; } catch ( java.util.ConcurrentModificationException e ) { if ( this . logger . error ( this , "getObject" , NetworkParserLog.ERROR_TYP_CONCURRENTMODIFICATION , key ) ) { throw e ; } } return result ; } 
private void orderedInsert ( gradesystem.Grades insertedGrade ) { int index = 0 ; gradesystem.Grades element ; while ( index < ( aList . size () ) ) { element = aList . get ( index ) ; if ( ( insertedGrade . getTotalGrade () ) > ( element . getTotalGrade () ) ) { aList . add ( index , insertedGrade ) ; break; } index ++ ; } if ( index == ( aList . size () ) ) aList . add ( index , insertedGrade ) ; } 
public static void setResultFilterMethod ( com.ghostflying.portalwaitinglist.util.SettingUtil.ResultFilterMethod resultFilterMethod ) { if ( resultFilterMethod != ( com.ghostflying.portalwaitinglist.util.SettingUtil . getResultFilterMethod () ) ) { com.ghostflying.portalwaitinglist.util.SettingUtil.options . edit () . putInt ( com.ghostflying.portalwaitinglist.util.SettingUtil.RESULT_FILTER_METHOD_NAME , resultFilterMethod . ordinal () ) . apply () ; com.ghostflying.portalwaitinglist.util.SettingUtil . notifyChange ( resultFilterMethod ) ; } } 
public void toggleWarHUD ( org.bukkit.entity.Player p ) { if ( ! ( warUsers . contains ( p ) ) ) { toggleAllOff ( p ) ; warUsers . add ( p ) ; com.palmergames.bukkit.towny.huds.WarHUD . toggleOn ( p , plugin . getTownyUniverse () . getWarEvent () ) ; } else toggleAllOff ( p ) ; } 
private static java.util.List < java.lang.String > getGlobalTemp ( SymbolTable table ) { java.util.List < java.lang.String > globalTemp = new java.util.ArrayList <> () ; if ( table . getScope () . equals ( "GLOBAL" ) ) { java.lang.System.out . println () ; for ( SymbolEntry se : table . getDecls () ) { java.lang.String variable = se . getVariable () ; if ( variable . startsWith ( "$L" ) ) { globalTemp . add ( variable ) ; } } } return globalTemp ; } 
private int findId ( java.lang.String findTitle ) { for ( int i = 0 ; i < ( ( myArrayList . size () ) - 1 ) ; i ++ ) { java.lang.System.out . println ( myArrayList . size () ) ; if ( myArrayList . get ( i ) . getTitle () . contains ( findTitle ) ) { return i ; } } return - 1 ; } 
public void actionPerformed ( java.awt.event.ActionEvent ex ) { bottomInner . remove ( startButton ) ; bottomInner . revalidate () ; bottomInner . repaint () ; new java.lang.Thread ( new java.lang.Runnable () { public void run () { startGame () ; } } ) . start () ; java.lang.System.out . println ( "Thread test" ) ; } 
synchronized void releaseNodeState ( final org.opendaylight.bgpcep.pcep.topology.provider.TopologyNodeState nodeState , final org.opendaylight.protocol.pcep.PCEPSession session , final boolean persistNode ) { this . nodes . remove ( org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager . createNodeId ( session . getRemoteAddress () ) ) ; if ( nodeState != null ) { org.opendaylight.bgpcep.pcep.topology.provider.ServerSessionManager.LOG . debug ( "Node {} unbound" , nodeState . getNodeId () ) ; nodeState . released ( persistNode ) ; } } 
protected void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } 
public org.knowm.xchart.BubbleSeries addSeries ( java.lang.String seriesName , java.util.List < ? extends java.lang.Number > xData , java.util.List < ? extends java.lang.Number > yData , java.util.List < ? extends java.lang.Number > bubbleData ) { return addSeries ( seriesName , org.knowm.xchart.internal.Utils . getDoubleArrayFromNumberList ( xData ) , org.knowm.xchart.internal.Utils . getDoubleArrayFromNumberList ( yData ) , org.knowm.xchart.internal.Utils . getDoubleArrayFromNumberList ( bubbleData ) ) ; } 
private com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked ( int userId , long currentTimeMillis ) { com.android.server.usage.UserUsageStatsService service = mUserState . get ( userId ) ; if ( service == null ) { service = new com.android.server.usage.UserUsageStatsService ( getContext () , userId , new java.io.File ( mUsageStatsDir , java.lang.Integer . toString ( userId ) ) , this ) ; service . init ( currentTimeMillis , getScreenOnTimeLocked ( currentTimeMillis ) ) ; mUserState . put ( userId , service ) ; } return service ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_autocomplete ) ; getApplicationComponent () . inject ( this ) ; android.support.v7.widget.Toolbar toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; setSupportActionBar ( toolbar ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; mPresenter . attachView ( this ) ; } 
public java.util.List < org.inaturalist.android.GuideTaxonXML > getTaxa ( org.inaturalist.android.GuideTaxonFilter filter ) { java.lang.String xPathExpression = buildFilterXpath ( filter ) ; java.util.ArrayList < org.w3c.dom.Node > nodes = getNodesByXPath ( xPathExpression ) ; java.util.ArrayList < org.inaturalist.android.GuideTaxonXML > taxa = new java.util.ArrayList < org.inaturalist.android.GuideTaxonXML > () ; if ( nodes == null ) { return taxa ; } for ( org.w3c.dom.Node node : nodes ) { taxa . add ( new org.inaturalist.android.GuideTaxonXML ( this , node ) ) ; } return taxa ; } 
public static void shuffle ( java.lang.Object [] a ) { for ( int i = 1 ; i < ( a.length ) ; i ++ ) { int r = edu.princeton.cs.algs4.StdRandom . uniform ( 0 , ( i + 1 ) ) ; java.lang.Object x = a [ i ] ; a [ i ] = a [ r ] ; a [ r ] = x ; } } 
public int HitOrStand ( int i ) { int x = i ; java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { x += drawCard () ; java.lang.System.out . println ( x ) ; if ( x > 21 ) { return x ; } else { HitOrStand ( x ) ; } } else { return x ; } return x ; } 
public int selectRow ( java.awt.event.MouseEvent e ) { int selected_row = - 1 ; java.awt.Point p = e . getPoint () ; java.awt.FontMetrics fm = right_page . getFontMetrics ( right_page . getFont () ) ; selected_row = ( ( p.y ) / ( fm . getHeight () ) ) + 1 ; return selected_row ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ( obj == null ) || ( ! ( obj instanceof com.iota.iri.Neighbor ) ) ) { return false ; } return address . equals ( ( ( com.iota.iri.Neighbor ) ( obj ) ) . address ) ; } 
public java.lang.String fetchOrgFileString ( java.lang.String orgPath ) throws com.matburt.mobileorg.Error.ReportableError { java.io.BufferedReader reader = this . fetchOrgFile ( orgPath ) ; if ( reader == null ) { return "" ; } java.lang.String fileContents = "" ; java.lang.String thisLine = "" ; try { while ( ( thisLine = reader . readLine () ) != null ) { fileContents += thisLine + "\n" ; } } catch ( java.io.IOException e ) { throw new com.matburt.mobileorg.Error.ReportableError ( r . getString ( R.string.error_file_read , orgPath ) , e ) ; } return fileContents ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( status . equals ( rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.RUNNING ) ) { addConsumedUnits ( getUnitId () ) ; if ( ! ( isFirstUnitAdded () ) ) { setFirstUnitAdded () ; } } if ( status . equals ( rustelefonen.no.drikkevett_android.tabs.planParty.BacPlanPartyFragment.Status.NOT_RUNNING ) ) { addPlannedUnits ( getUnitId () ) ; } stateHandler ( status ) ; } 
public static org.json.JSONObject getObject ( java.lang.String path ) { java.nio.file.Path p = new java.io.File ( path ) . toPath () ; if ( ! ( p . toFile () . exists () ) ) { java.lang.System.out . println ( "Configuration file does not exist!" ) ; return new org.json.JSONObject () ; } try { return new org.json.JSONObject ( new java.lang.String ( java.nio.file.Files . readAllBytes ( p ) , java.nio.charset.StandardCharsets.UTF_8 ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return new org.json.JSONObject () ; } 
@ java.lang.Override public E remove ( int location ) { location = location - 1 ; if ( ( ( location < ( currentSize ) ) && ( location >= 0 ) ) && ( ! ( isEmpty () ) ) ) { E obj = array [ location ] ; ( currentSize ) -- ; dynamicResize ( false ) ; shiftElements ( location , false ) ; return obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } 
@ java.lang.Override public void preInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent e ) { super . preInit ( e ) ; OBJLoader.INSTANCE . addDomain ( com.cjm721.overloaded.Overloaded.MODID ) ; MinecraftForge.EVENT_BUS . register ( new com.cjm721.overloaded.client.render.block.compressed.CompressedBlockAssets () ) ; com.cjm721.overloaded.common.block.ModBlocks . registerModels () ; com.cjm721.overloaded.common.item.ModItems . registerModels () ; CompressedResourcePack.INSTANCE . addDomain ( "overloaded" ) ; CompressedResourcePack.INSTANCE . inject () ; } 
@ java.lang.Override public java.lang.String getLabel ( java.lang.String section , java.lang.String name , java.lang.Object . . . params ) { java.util.Map < java.lang.String , java.lang.String > label = org.auraframework.impl.context.LocalizationAdapterImpl.labels . get ( name ) ; if ( label == null ) { if ( org.auraframework.impl.context.LocalizationAdapterImpl.testLabels . containsKey ( getLabelKey ( section , name ) ) ) { return org.auraframework.impl.context.LocalizationAdapterImpl.testLabels . get ( getLabelKey ( section , name ) ) ; } return null ; } return label . get ( this . getAuraLocale () . getLanguageLocale () . toString () ) ; } 
@ java.lang.Override public void createTable ( org.apache.hadoop.hive.metastore.api.Table tbl ) throws org.apache.hadoop.hive.metastore.api.InvalidObjectException , org.apache.hadoop.hive.metastore.api.MetaException { java.lang.String tbls = com.alibaba.fastjson.JSON . toJSONString ( tbl ) ; jedis . hset ( "table" , ( ( ( "" + ( tbl . getDbName () ) ) + "." ) + ( tbl . getTableName () ) ) , tbls ) ; org.apache.hadoop.hive.metastore.NewObjectStore.LOG . info ( ( ( "-----tianlong-----create table " + ( tbl . getTableName () ) ) + " success!" ) ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out . println ( ( "Paikka 1 1 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbb ) ; buttonbb . setEnabled ( false ) ; viimeisinSiirto [ 1 ] [ 1 ] = whichmark () ; ( buttoncount ) ++ ; } 
private static void distributeFiles ( java.lang.String tmpPath , org.apache.flink.api.java.ExecutionEnvironment env ) throws java.io.IOException , java.net.URISyntaxException { org.apache.flink.python.api.PythonPlanBinder . clearPath ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH ) ; org.apache.flink.runtime.filecache.FileCache . copy ( new org.apache.flink.core.fs.Path ( tmpPath ) , new org.apache.flink.core.fs.Path ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH ) , true ) ; env . registerCachedFile ( org.apache.flink.python.api.PythonPlanBinder.FLINK_HDFS_PATH , org.apache.flink.python.api.PythonPlanBinder.FLINK_PYTHON_DC_ID ) ; } 
public static void printConfigurationProblems ( java.io.PrintStream out , java.util.List < yarnandtail.andhow.ConstructionProblem > probs , yarnandtail.andhow.appconfig.AppConfigDefinition appDef ) { if ( probs . isEmpty () ) {} else { out . println ( "CONSTRUCTION PROBLEMS  ~Foundational problems with the App Configuration." ) ; out . println ( "~The AppConfig may have been built in an inconsistent way, such as default values that violate validation rules." ) ; out . println ( "~When there are construction problems, no attempt is made to load configuration values." ) ; out . println () ; out . println ( "Defailed list of Construction Problems:" ) ; for ( yarnandtail.andhow.ConstructionProblem p : probs ) { out . println ( p . getMessage () ) ; } } } 
@ java.lang.Override public void run ( io.github.carlorodriguez.alarmon.NotificationServiceInterface service ) { int count ; try { count = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } if ( count > 0 ) { android.content.Intent notifyActivity = new android.content.Intent ( getApplicationContext () , io.github.carlorodriguez.alarmon.ActivityAlarmNotification . class ) ; notifyActivity . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( notifyActivity ) ; } } 
private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } 
private void generateFieldIdMethod ( final java.lang.StringBuilder sb , final uk.co.real_logic.sbe.ir.Token token , final java.lang.String indent ) { sb . append ( java.lang.String . format ( ( ( "\n" + indent ) + "    public const int %sId = %d;\n" ) , uk.co.real_logic.sbe.generation.csharp.CSharpUtil.CSharpUtil . formatPropertyName ( token . name () ) , token . id () ) ) ; } 
public boolean lowerRoom ( int roomID ) { int prev_level = rooms_list . get ( roomID ) . getLevel () ; rooms_list . get ( roomID ) . lower () ; return prev_level > ( rooms_list . get ( roomID ) . getLevel () ) ; } 
private void unregisterHandler ( org.osgi.framework.ServiceRegistration < org.eclipse.smarthome.core.thing.binding.ThingHandler > serviceRegistration ) { org.eclipse.smarthome.core.thing.binding.ThingHandler thingHandler = ( ( org.eclipse.smarthome.core.thing.binding.ThingHandler ) ( bundleContext . getService ( serviceRegistration . getReference () ) ) ) ; removeHandler ( thingHandler ) ; thingHandler . dispose () ; serviceRegistration . unregister () ; if ( thingHandler instanceof org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) { ( ( org.eclipse.smarthome.core.thing.binding.BaseThingHandler ) ( thingHandler ) ) . unsetBundleContext ( bundleContext ) ; } } 
@ java.lang.Override public byte [] getBinaryContentById ( int id , int publication ) throws org.dd4t.core.exceptions.ItemNotFoundException { final com.tridion.data.BinaryData binaryData = org.dd4t.providers.impl.BrokerBinaryProvider.BINARY_CONTENT_RETRIEVER . getBinary ( publication , id ) ; if ( ( binaryData == null ) || ( ( binaryData . getDataSize () ) == 0 ) ) { throw new org.dd4t.core.exceptions.ItemNotFoundException ( ( ( ( "Unable to find binary content by id: tcm:" + publication ) + "-" ) + id ) ) ; } try { return binaryData . getBytes () . clone () ; } catch ( java.io.IOException e ) { throw new org.dd4t.core.exceptions.ItemNotFoundException ( e ) ; } } 
private static void setVertGroup ( javax.swing.GroupLayout layout , javax.swing.JScrollPane jScrollPane1 , javax.swing.JScrollPane jScrollPane2 , javax.swing.JLabel jLabel1 , javax.swing.JLabel status , javax.swing.JTextField cmdEntry ) { javax.swing.GroupLayout.ParallelGroup vGroup = layout . createParallelGroup ( javax.swing.GroupLayout.Alignment.LEADING ) ; javax.swing.GroupLayout.SequentialGroup v1 = UserInterface.UserInterface . vertGroup1 ( layout , jScrollPane2 , jScrollPane1 , status , jLabel1 , cmdEntry ) ; vGroup . addGroup ( v1 ) ; layout . setVerticalGroup ( vGroup ) ; } 
public void setupEventListeners () { setOnSearchClickedListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { android.widget.Toast . makeText ( getActivity () , "Implement your own in-app search" , Toast.LENGTH_LONG ) . show () ; } } ) ; setOnItemViewClickedListener ( new com.karmacons.a123movie.MainFragment.ItemViewClickedListener () ) ; setOnItemViewSelectedListener ( new com.karmacons.a123movie.MainFragment.ItemViewSelectedListener () ) ; } 
@ java.lang.Override public boolean isApplicable ( model.AtomData data ) { if ( ( ( toDeltaColumn ) == null ) && ( ( toDeltaID ) != null ) ) { for ( model.DataColumnInfo d : data . getDataColumnInfos () ) { if ( d . getId () . equals ( toDeltaID ) ) { this . toDeltaColumn = d ; } } } return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } 
@ java.lang.SuppressWarnings ( value = "null" ) public void insertAt ( int item , int pos ) { int i = 1 ; Node newNode = new Node () ; newNode.data = item ; newNode.next = null ; Node temp ; temp = head ; while ( i < ( pos - 1 ) ) { i ++ ; temp = temp.next ; } newNode.next = temp.next ; temp.next = newNode ; } 
@ java.lang.Override public int compare ( com.vejkamera.RoadCamera lhsRoadCamera , com.vejkamera.RoadCamera rhsRoadCamera ) { if ( lhsRoadCamera == null ) { return - 1 ; } if ( rhsRoadCamera == null ) { return 1 ; } for ( java.lang.String currentSyncId : originalSorting ) { if ( lhsRoadCamera . getSyncId () . equals ( currentSyncId ) ) { return - 1 ; } if ( rhsRoadCamera . getSyncId () . equals ( currentSyncId ) ) { return 1 ; } } return 0 ; } 
private java.lang.String getFormattedMessage ( java.lang.String key , java.lang.Object . . . data ) { java.lang.String message ; try { message = messageBundle . getString ( key ) ; } catch ( java.util.MissingResourceException ex ) { return ( key + " " ) + ( java.util.Arrays . toString ( data ) ) ; } return java.text.MessageFormat . format ( message , data ) ; } 
public void launchFeedbackActivity ( android.content.Context context , java.lang.String subject ) { android.content.Intent emailIntent = new android.content.Intent ( android.content.Intent.ACTION_SENDTO , android.net.Uri . fromParts ( "mailto" , Constants.DEV_EMAIL , null ) ) ; emailIntent . putExtra ( Intent.EXTRA_SUBJECT , subject ) ; emailIntent . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; context . startActivity ( android.content.Intent . createChooser ( emailIntent , context . getString ( R.string.select_app ) ) . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ) ; } 
public static boolean checkItemStatus ( org.eclipse.swt.widgets.MenuItem item , boolean readonly ) { if ( item == null ) { return false ; } if ( item . isEnabled () ) { if ( readonly ) { return false ; } else { return true ; } } else { if ( readonly ) { return true ; } else { return false ; } } } 
@ org.hamcrest.Factory public static org.hamcrest.Matcher < facebook4j.internal.http.HttpParameter [] > hasPostJsonParameter ( final java.lang.String name , final java.lang.String expectedJsonObjectSource ) { facebook4j.internal.org.json.JSONObject expectedJsonObject ; try { expectedJsonObject = new facebook4j.internal.org.json.JSONObject ( expectedJsonObjectSource ) ; } catch ( facebook4j.internal.org.json.JSONException ex ) { throw new java.lang.AssertionError ( ( "failed to parse object source: " + expectedJsonObjectSource ) ) ; } return facebook4j.junit.F4JHttpParameterMatchers . hasPostJsonParameter ( name , expectedJsonObject ) ; } 
@ java.lang.Override public int compare ( java.lang.String object1 , java.lang.String object2 ) { java.lang.Long l1 = mp . get ( object1 ) ; java.lang.Long l2 = mp . get ( object2 ) ; if ( l2 == null ) { l2 = 0L ; } if ( l1 == null ) { l1 = 0L ; } return l2 . compareTo ( l1 ) ; } 
@ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "/{id}/reminder" ) @ io.swagger.annotations.ApiOperation ( value = "sends an email reminder for a specified assessment" ) @ io.swagger.annotations.ApiResponses ( value = { @ io.swagger.annotations.ApiResponse ( code = 200 , message = "Reminder sent" ) } ) public javax.ws.rs.core.Response remindRespondant ( @ io.swagger.annotations.ApiParam ( value = "Respondant Id" ) @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Long respondantId ) { com.employmeo.data.model.Respondant respondant = respondantService . getRespondantById ( respondantId ) ; if ( ( respondant . getRespondantStatus () ) <= ( com.employmeo.data.model.Respondant.STATUS_STARTED ) ) { respondant . setRespondantStatus ( Respondant.STATUS_REMINDED ) ; respondantService . save ( respondant ) ; } emailService . sendEmailReminder ( respondant ) ; return javax.ws.rs.core.Response . status ( Status.OK ) . build () ; } 
public java.util.List < java.lang.Integer > classify ( java.util.List < Utils.DataVector > data , boolean calAccuracy ) { for ( Utils.DataVector vector : data ) { java.util.List < java.lang.Integer > treePredictions = new java.util.ArrayList ( data . size () ) ; for ( RandomForestHOG.DecisionTree.DecisionTree tree : dTree ) { int curPrediction = tree . classify ( vector ) ; treePredictions . add ( curPrediction ) ; } int forestPrediction = Utils.Helper . getModeInt ( treePredictions ) ; finalPredictions . add ( forestPrediction ) ; } return finalPredictions ; } 
private void clearUserEdits ( int [] backup ) { int userEdited = 0 ; for ( int i = 0 ; i < ( backup.length ) ; i ++ ) { if ( ( ( backup [ i ] ) != ( Cell.NONE ) ) && ( ! ( mCells [ i ] . isLocked () ) ) ) { backup [ i ] = Cell.NONE ; userEdited ++ ; } } } 
private boolean isNorthEastMovementBlocked ( game.Piece piece , int newX , int newY ) { int moveCounter = 1 ; for ( int i = ( piece . getY () ) + 1 ; i < newY ; i ++ ) { if ( tileHasPiece ( ( ( piece . getX () ) + moveCounter ) , i ) ) return true ; moveCounter ++ ; } return false ; } 
public void hurt ( final int aValue , final boolean aHeavy ) { mValue += aValue ; if ( ( mValue ) >= ( mSteps.length ) ) { mValue = ( mSteps.length ) - 1 ; } if ( aHeavy ) { mHeavyWounds += aValue ; if ( ( mHeavyWounds ) > ( mValue ) ) { mHeavyWounds = mValue ; } mChangeListener . sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( true , mHeavyWounds ) ) ; } mChangeListener . sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( false , mValue ) ) ; updateValue () ; } 
public void bindRestaurant ( com.example.bubbles.myrestaurants.models.Restaurant restaurant ) { com.squareup.picasso.Picasso . with ( mContext ) . load ( restaurant . getImageUrl () ) . into ( mRestaurantImageView ) ; mNameTextView . setText ( restaurant . getName () ) ; mCategoryTextView . setText ( restaurant . getCategories () . get ( 0 ) ) ; mRatingTextView . setText ( ( ( "Rating: " + ( restaurant . getRating () ) ) + "/5" ) ) ; } 
public void onClick ( android.content.DialogInterface dialog , int id ) { dbHelper . unsubscribeFromLecture ( lectureIdsToUnsubscribe ) ; for ( java.lang.String lectureId : lectureIdsToUnsubscribe ) { com.pushbots.push.Pushbots . sharedInstance () . untag ( lectureId ) ; } checkboxList = new java.util.ArrayList <> () ; myLecturesListView . setAdapter ( new util.CustomListAdapter ( this , R.layout.listitemrow , checkboxList ) ) ; fillLecturesList () ; android.widget.Toast . makeText ( this , "Subscribed" , Toast.LENGTH_SHORT ) ; } 
public void stopStreaming () { mStreamManager . stopStreaming () . addOnCompleteListener ( new com.google.android.gms.tasks.OnCompleteListener < java.lang.Void > () { @ java.lang.Override public void onComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < java.lang.Void > task ) { if ( task . isSuccessful () ) { android.util.Log . d ( io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG , "Stop succeeds" ) ; mControlOverlayLayout . updateStreamingStatusOnUiThread ( false ) ; endLiveEvent () ; } else { android.util.Log . e ( io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG , ( "Stop fails: " + ( task . getException () ) ) ) ; } } } ) ; } 
private java.lang.String percentEncodeRfc3986 ( java.lang.String s ) { java.lang.String out ; try { out = java.net.URLEncoder . encode ( s , utils.SignedRequestsHelper.UTF8_CHARSET ) . replace ( "+" , "%20" ) . replace ( "*" , "%2A" ) . replace ( "%7E" , "~" ) ; } catch ( java.io.UnsupportedEncodingException e ) { out = s ; } return out ; } 
@ java.lang.Override public boolean setNextRow ( io.crate.core.collections.Row row ) { if ( projector.downstreamAborted . get () ) { return false ; } if ( ! ( lowestCommon . isEmittable ( row , this ) ) ) { pause () ; } return downstreamContext . setNextRow ( row ) ; } 
private void processNormalTasksAndEvents ( java.util.ArrayList < katnote.task.Task > normalTasks , java.util.ArrayList < katnote.task.Task > events ) { if ( ( normalTasks . isEmpty () ) && ( events . isEmpty () ) ) { return; } java.util.Queue < katnote.task.Task > normalTasksQueue = copyTasksIntoLinkedList ( normalTasks ) ; java.util.ArrayList < katnote.task.Task > eventCopy = new java.util.ArrayList < katnote.task.Task > ( events ) ; if ( _isGUIFormat ) { processForToday ( normalTasksQueue , eventCopy ) ; processForTomorrow ( normalTasksQueue , eventCopy ) ; processForTheWeek ( normalTasksQueue , eventCopy ) ; processRemainingTasks ( normalTasksQueue , eventCopy ) ; } } 
private int writeSprite ( byte [] spriteData ) { int size = spriteData.length ; int bankBytesLeft = ( SpritesToROM.BANK_SIZE ) - ( ( dataAddr ) % ( SpritesToROM.BANK_SIZE ) ) ; if ( bankBytesLeft < size ) { dataAddr += bankBytesLeft + ( SpritesToROM.HEADER_SIZE ) ; } int tmp = dataAddr ; writeIndex ( dataAddr ) ; dataAddr += writeBytes ( rom , dataAddr , spriteData ) ; return tmp ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/sign_in" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String loginRedirect ( @ org.springframework.web.bind.annotation.ModelAttribute @ javax.validation.Valid fr.univ.annuaire.beans.Login l , org.springframework.validation.BindingResult result ) throws fr.univ.annuaire.dao.DaoException { if ( result . hasErrors () ) { logger . info ( "Returning log view, auth failled: incorrect syntax" ) ; return "login" ; } java.lang.System.out . println ( manager . checkLogin ( l ) ) ; if ( ! ( manager . checkLogin ( l ) ) ) { logger . info ( "Returning accueil view, auth success" ) ; return "redirect:/actions/accueil" ; } logger . info ( "Returning log view, auth failled: wrong identifiants" ) ; return "login" ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( level ) < ( lvlMax ) ) { ( level ) ++ ; } else { level = lvlMin ; } android.util.Log . d ( "lv" , java.lang.String . valueOf ( level ) ) ; page = firstPage ; new com.example.shintaku.test.Setting2Activity.Loader () . execute () ; } 
@ java.lang.Override public void onComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < com.google.firebase.auth.AuthResult > task ) { if ( task . isSuccessful () ) { android.util.Log . d ( com.example.jason.fooder1.LoginPage.TAG , "signInWithCredential:success" ) ; com.google.firebase.auth.FirebaseUser user = mAuth . getCurrentUser () ; } else { android.util.Log . w ( com.example.jason.fooder1.LoginPage.TAG , "signInWithCredential:failure" , task . getException () ) ; android.widget.Toast . makeText ( this , "Authentication failed." , Toast.LENGTH_SHORT ) . show () ; } } 
private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; } 
private java.util.List < uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location > filterToLocationsWithMatchingGeoNameId ( java.util.List < uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location > locations , java.lang.Integer geoNameId ) { java.util.List < uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location > locationsWithCorrectGeoNameId = new java.util.ArrayList <> () ; for ( uk.ac.ox.zoo.seeg.abraid.mp.common.domain.Location location : locations ) { if ( geoNameId . equals ( location . getGeoNameId () ) ) { locationsWithCorrectGeoNameId . add ( location ) ; } } return locationsWithCorrectGeoNameId ; } 
private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } 
public void setIncomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( outcomingPortletCandidate ) == pc ) { outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { incomingPortletCandidate = pc ; } } 
@ java.lang.Override public RecyclerView.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { if ( viewType == ( Category.TYPE_SUB_TITLE ) ) { return new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryTitleViewHolder ( mLayoutInflater . inflate ( R.layout.item_category_list_subtitle , null , false ) ) ; } else if ( viewType == ( Category.TYPE_SUB_ITEM ) ) { return new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryItemViewHolder ( mLayoutInflater . inflate ( R.layout.item_category_list_subitem , null , false ) ) ; } else { throw new java.lang.RuntimeException ( ( "Invalid viewType: " + viewType ) ) ; } } 
private java.lang.String convertToTableName ( android.net.Uri uri ) { int i = com.ywca.pentref.common.PentrefProvider.mUriMatcher . match ( uri ) ; switch ( com.ywca.pentref.common.PentrefProvider.mUriMatcher . match ( uri ) ) { case com.ywca.pentref.common.PentrefProvider.POI_TABLE : case com.ywca.pentref.common.PentrefProvider.POI_ROW : case com.ywca.pentref.common.PentrefProvider.SEARCH_SUGGESTIONS : return com.ywca.pentref.models.Poi.TABLE_NAME ; case com.ywca.pentref.common.PentrefProvider.CATEGORY_TABLE : case com.ywca.pentref.common.PentrefProvider.CATEGORY_ROW : return Contract.Category.TABLE_NAME ; case com.ywca.pentref.common.PentrefProvider.BOOKMARK_TABLE : case com.ywca.pentref.common.PentrefProvider.BOOKMARK_ROW : return Contract.Bookmark.TABLE_NAME ; default: throw new java.lang.IllegalArgumentException ( ( "Illegal uri: " + uri ) ) ; } } 
public static double getFireIndex ( java.lang.String sent1 ) { RapAnalyzer fire = new RapAnalyzer () ; double t = ( RapAnalyzer . sentenceanalyzer ( sent1 ) ) * 10 ; double w = ( RapAnalyzer . wordlength ( sent1 ) ) * 0.5 ; double y = ( RapAnalyzer . wordvariety ( sent1 ) ) * 0.5 ; RapAnalyzer.fireindex = ( ( t + w ) + y ) / 3 ; return RapAnalyzer.fireindex ; } 
private static void setToPositionInRow ( de.hotware.blockbreaker.model.Block [] [] pMatrix , int pRow , int pPosition , de.hotware.blockbreaker.model.Block.BlockColor pColor , int pSize ) { pSize += pPosition ; for ( int i = pPosition ; i < pSize ; ++ i ) { pMatrix [ pRow ] [ i ] = new de.hotware.blockbreaker.model.Block ( pColor , pRow , i ) ; } } 
@ java.lang.Override public ru.itis.inform.department.dao.models.User mapRow ( java.sql.ResultSet resultSet , int i ) throws java.sql.SQLException { try { return new ru.itis.inform.department.dao.models.User ( resultSet . getInt ( "id" ) , resultSet . getString ( "username" ) , resultSet . getString ( "email" ) , resultSet . getString ( "city" ) , resultSet . getString ( "age" ) , resultSet . getString ( "gender" ) , resultSet . getString ( "passportData" ) , resultSet . getString ( "snils" ) ) ; } catch ( java.sql.SQLException e ) { throw new java.lang.IllegalArgumentException ( e ) ; } } 
private boolean contains ( java.lang.Object field , java.lang.Object value ) { if ( field == null ) { return ( value == null ) || ( value . equals ( "" ) ) ; } return field . toString () . contains ( value . toString () ) ; } 
public void onUserRemoved ( int userId ) { if ( userId < 1 ) return; synchronized ( mAppWidgetServices ) { com.android.server.AppWidgetServiceImpl impl = mAppWidgetServices . get ( userId ) ; mAppWidgetServices . remove ( userId ) ; if ( impl == null ) { com.android.server.AppWidgetServiceImpl . getSettingsFile ( userId ) . delete () ; } else { impl . onUserRemoved () ; } } } 
private org.eclipse.sirius.diagram.description.Layer getOrCreateAnimationLayer ( org.eclipse.sirius.diagram.description.DiagramDescription description , java.lang.String layerName , org.eclipse.core.runtime.IProgressMonitor monitor ) { final org.eclipse.sirius.diagram.description.Layer res ; org.eclipse.sirius.diagram.description.Layer existingLayer = null ; for ( org.eclipse.sirius.diagram.description.Layer layer : description . getAdditionalLayers () ) { if ( layerName . equals ( layer . getName () ) ) { existingLayer = layer ; break; } } if ( existingLayer != null ) { res = existingLayer ; } else { res = createLayer ( description , layerName , monitor ) ; } return res ; } 
public void remove ( small.data.structures.Vec2 gridPos ) { int idx = ( ( gridPos.y ) * ( gridRows ) ) + ( gridPos.x ) ; if ( ! ( map . containsKey ( idx ) ) ) { log . info ( "Could not remove. Key is not in buffer." ) ; return; } map . remove ( idx ) ; if ( gridPos . equals ( relativeOrigin ) ) { log . info ( "Removing current relative origin requires the relative origin to be updated." ) ; log . info ( "Updating relative origin..." ) ; this . updateRelativeOrigin () ; } } 
public void updateTask ( int index , seedu.taskboss.model.task.ReadOnlyTask editedTask ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert editedTask != null ; seedu.taskboss.model.task.Task taskToUpdate = internalList . get ( index ) ; if ( ( ( ! ( taskToUpdate . equals ( editedTask ) ) ) && ( internalList . contains ( editedTask ) ) ) && ( ! ( editedTask . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } taskToUpdate . resetData ( editedTask ) ; internalList . set ( index , taskToUpdate ) ; } 
private void compareLocation ( cz.fi.muni.pa165.mushroomhunter.entity.Location oldLocation , cz.fi.muni.pa165.mushroomhunter.entity.Location newLocation ) { assertEquals ( oldLocation . getName () , newLocation . getName () ) ; assertEquals ( oldLocation . getDescription () , newLocation . getDescription () ) ; assertEquals ( oldLocation . getNearCity () , newLocation . getNearCity () ) ; } 
@ java.lang.Override public void acquireLock ( io.hops.transaction.lock.TransactionLocks locks ) throws java.io.IOException { io.hops.transaction.lock.LockFactory lf = io.hops.transaction.lock.LockFactory . getInstance () ; locks . add ( lf . getINodeLock ( ( ! ( dir . isQuotaEnabled () ) ) , nameNode , lockType , INodeResolveType.PATH , src ) ) . add ( lf . getBlockLock () ) . add ( lf . getBlockRelated ( BLK.RE , BLK.ER , BLK.CR , BLK.UC ) ) ; } 
static void processCourseClasses ( org.jdom2.Element response , org.jdom2.Element courseClass ) throws java.lang.Exception { response . addContent ( edu.stanford.CourseTrans . createNewCourse ( courseClass ) ) ; java.util.List < org.jdom2.Element > classes = courseClass . getChildren ( "class" ) ; for ( org.jdom2.Element _class : classes ) { edu.stanford.CourseTrans.newCourse . addContent ( edu.stanford.CourseTrans . createNewClass ( _class ) ) ; java.util.List < org.jdom2.Element > sections = _class . getChildren ( "section" ) ; for ( org.jdom2.Element section : sections ) { edu.stanford.CourseTrans.newClass . addContent ( edu.stanford.CourseTrans . createNewSection ( section ) ) ; } } } 
public void dibujar ( android.graphics.Bitmap foto ) { if ( foto == null ) return; android.widget.LinearLayout group = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.emblematicos_text ) ) ) ; android.graphics.Bitmap scaled ; scaled = android.graphics.Bitmap . createScaledBitmap ( foto , 500 , 300 , false ) ; android.widget.ImageView imageView = new android.widget.ImageView ( this ) ; imageView . setImageBitmap ( scaled ) ; group . addView ( imageView ) ; } 
@ java.lang.Override protected void onPostExecute ( ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter result ) { mMeetingPagerAdapter = result ; mBinding.activityLoading . setVisibility ( View.GONE ) ; mBinding.pager . setAdapter ( mMeetingPagerAdapter ) ; if ( ( mMeetingId ) >= 0 ) { int position = mMeetingPagerAdapter . getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log . v ( TAG , ( ( ( "meeting " + ( mMeetingId ) ) + " is on page " ) + position ) ) ; mBinding.pager . setCurrentItem ( position ) ; } } 
@ java.lang.Override public org.silverpeas.components.projectmanager.model.TaskDetail getMostDistantTask ( java.lang.String instanceId , int taskId ) { java.sql.Connection con = getConnection () ; try { return org.silverpeas.components.projectmanager.model.ProjectManagerDAO . getMostDistantTask ( con , taskId ) ; } catch ( java.lang.Exception re ) { throw new org.silverpeas.components.projectmanager.model.ProjectManagerRuntimeException ( "DefaultProjectManagerService.getMostDistantTask()" , org.silverpeas.core.exception.SilverpeasRuntimeException.ERROR , "projectManager.GETTING_TASK_FAILED" , ( "taskId = " + taskId ) , re ) ; } finally { org.silverpeas.core.persistence.jdbc.DBUtil . close ( con ) ; } } 
private java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } 
private static double translatePreference ( int p ) { int maxValue = 9 ; int minValue = - 9 ; if ( p > maxValue ) p = maxValue ; if ( p < minValue ) p = minValue ; if ( p == 0 ) { return 1 ; } else if ( p > 0 ) { return p ; } else { return 1.0 / ( java.lang.Math . abs ( p ) ) ; } } 
private void treatFormatId ( java.lang.String formatId , forms.Test test ) { forms.TestFormat format = new forms.TestFormat () ; try { validateFormatId ( formatId ) ; format . setId ( java.lang.Long . parseLong ( formatId ) ) ; } catch ( java.lang.Exception e ) { setError ( forms.TestForm.FORMAT_FIELD , e . getMessage () ) ; } test . setFormat ( format ) ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.String str = tfTxt . getText () ; tfTxt . setText ( "" ) ; try { dos . writeUTF ( str ) ; dos . flush () ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } } 
public org.elasticsearch.action.bulk.BulkResponse bulkIndex ( java.lang.String indexName , java.lang.String indexType , java.util.Map < java.lang.String , java.lang.String > idJsonDocMap , boolean refresh ) { org.elasticsearch.action.bulk.BulkRequestBuilder bulkRequestBuilder = client . prepareBulk () . setRefresh ( refresh ) ; for ( java.lang.String docId : idJsonDocMap . keySet () ) { bulkRequestBuilder . add ( client . prepareIndex ( indexName , indexType , docId ) . setSource ( idJsonDocMap . get ( docId ) ) ) ; } org.elasticsearch.action.bulk.BulkResponse bulkResponse = bulkRequestBuilder . get () ; return bulkResponse ; } 
public static net.miginfocom.swing.MigLayout getMigLayout ( java.lang.String layoutConstraints , java.lang.String columnConstraints , java.lang.String rowConstraints ) { java.lang.String finalLayouConstraints = layoutConstraints ; if ( layoutConstraints != null ) { if ( org.jskat.gui.swing.LayoutFactory . isMacOS () ) { finalLayouConstraints = org.jskat.gui.swing.LayoutFactory . injectMacOSLayoutConstraints ( layoutConstraints ) ; } else if ( layoutConstraints != null ) { finalLayouConstraints = layoutConstraints ; } } return new net.miginfocom.swing.MigLayout ( finalLayouConstraints , columnConstraints , rowConstraints ) ; } 
private void handleForeignKey ( org.talend.mdm.commmon.metadata.MetadataRepository repository , org.talend.mdm.commmon.metadata.ComplexTypeMetadata type , org.talend.mdm.commmon.metadata.annotation.XmlSchemaAnnotationProcessorState state , org.w3c.dom.Element appInfo ) { state . markAsReference () ; java.lang.String path = appInfo . getTextContent () ; org.talend.mdm.commmon.metadata.FieldMetadata fieldMetadata = org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor . getFieldMetadata ( repository , type , appInfo , path , false ) ; state . setReferencedField ( fieldMetadata ) ; state . setReferencedType ( new org.talend.mdm.commmon.metadata.SoftTypeRef ( repository , repository . getUserNamespace () , org.talend.mdm.commmon.metadata.annotation.ForeignKeyProcessor . getTypeName ( type , path ) , true ) ) ; } 
private boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } 
@ java.lang.Override public boolean apply ( @ javax.annotation.Nullable com.gmi.nordborglab.browser.shared.proxy.TraitProxy input ) { if ( input == null ) return true ; boolean isNotFound = true ; for ( com.gmi.nordborglab.browser.shared.proxy.AlleleAssayProxy alleleAssay : input . getObsUnit () . getStock () . getPassport () . getAlleleAssays () ) { if ( alleleAssay . getId () . equals ( selectedAlleleAssay . getId () ) ) { isNotFound = false ; break; } } return isNotFound ; } 
@ java.lang.Override public server.main.GameInfo monopoly ( server.main.Monopoly monopoly ) throws server.main.ServerException { server.main.MonopolyCommand monopolyCommand = new server.main.MonopolyCommand ( monopoly ) ; server.main.GameInfo gi = null ; if ( agent . sendCommand ( monopolyCommand ) ) { gi = server.receiver.AllOfOurInformation . getSingleton () . getGames () . get ( monopoly . getGameId () ) . getGame () ; } return gi ; } 
static src.CircularList < src.Candidate > initList ( int nbCandidates ) { src.CircularList < src.Candidate > list = new src.CircularList () ; for ( int i = 1 ; i <= nbCandidates ; i ++ ) { list . add ( new src.Candidate ( ( "" + i ) , "" ) ) ; } return list ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/add" , method = org.springframework.web.bind.annotation.RequestMethod.POST , headers = "Accept=application/json" ) @ org.springframework.web.bind.annotation.ResponseBody public com.wangzhixuan.code.Result add ( com.wangzhixuan.vo.PeopleVo peoplevo , @ org.springframework.web.bind.annotation.RequestParam ( value = "fileName" , required = false ) org.springframework.web.multipart.commons.CommonsMultipartFile file ) { com.wangzhixuan.code.Result result = new com.wangzhixuan.code.Result () ; try { peopleService . addPeople ( peoplevo , file ) ; result . setSuccess ( true ) ; result . setMsg ( "添加成功" ) ; return result ; } catch ( java.lang.Exception e ) { com.wangzhixuan.controller.PeopleController.LOGGER . error ( "添加用户失败：{}" , e ) ; result . setMsg ( e . getMessage () ) ; return result ; } } 
public E take ( final long waitMillis ) { try { lock . lockInterruptibly () ; if ( waitMillis < 0 ) added . await () ; else added . await ( waitMillis , java.util.concurrent.TimeUnit.MILLISECONDS ) ; return take () ; } catch ( final java.lang.InterruptedException e ) { net.xy.codebase.collection.ParkingArrayQueue.LOG . error ( e . getMessage () , e ) ; } finally { lock . unlock () ; } return null ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < io.caly.calyandroid.model.response.BasicResponse > call , retrofit2.Response < io.caly.calyandroid.model.response.BasicResponse > response ) { io.caly.calyandroid.util.Logger . d ( io.caly.calyandroid.activity.TAG , ( "onResponse code : " + ( response . code () ) ) ) ; io.caly.calyandroid.util.Logger . d ( io.caly.calyandroid.activity.TAG , ( "param" + ( io.caly.calyandroid.util.Util . requestBodyToString ( call . request () . body () ) ) ) ) ; switch ( response . code () ) { case 200 : break; default: com.crashlytics.android.Crashlytics . logException ( new io.caly.calyandroid.exception.UnExpectedHttpStatusException ( call , response ) ) ; break; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( ( org.naturenet.NatureNetApplication ) ( getActivity () . getApplication () ) ) . isConnected () ) { main . goToJoinActivity () ; } else { android.widget.Toast . makeText ( main , R.string.no_connection , Toast.LENGTH_SHORT ) . show () ; } } 
private static int getIntAttr ( org.w3c.dom.Element element , java.lang.String attrName ) { if ( element == null ) return 0 ; try { return java.lang.Integer . parseInt ( element . getAttribute ( attrName ) ) ; } catch ( java.lang.NumberFormatException e ) { craftedcart.smbworkshopexporter.util.LogHelper . error ( craftedcart.smbworkshopexporter.XMLConfigParser . class , java.lang.String . format ( "Invalid integer at %s" , element . toString () ) ) ; } return 0 ; } 
@ java.lang.Override public void start ( javafx.stage.Stage primaryStage ) { setupComponents () ; mainController . start ( primaryStage ) ; address.events.EventManager . getInstance () . post ( new address.events.LoadDataRequestEvent ( address.prefs.PrefsManager . getInstance () . getSaveLocation () ) ) ; syncManager . startSyncingData ( config.updateInterval , config.simulateUnreliableNetwork ) ; } 
public void enqueue ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } queue [ tail ] = item ; ++ ( size ) ; swap ( tail , randomIndex () ) ; tail = ( ++ ( tail ) ) % ( queue.length ) ; if ( ( size ) > ( ( queue.length ) / 2 ) ) { changeQueueSize ( ( ( queue.length ) * 2 ) ) ; } } 
@ java.lang.Override public cs444.codegen.tiles.InstructionsAndTiming < cs444.codegen.arm.instructions.bases.ArmInstruction > generate ( final cs444.parser.symbols.ast.expressions.ArrayAccessExprSymbol arrayAccess , final cs444.codegen.Platform < cs444.codegen.arm.instructions.bases.ArmInstruction , cs444.codegen.arm.Size > platform ) { final cs444.codegen.tiles.InstructionsAndTiming < cs444.codegen.arm.instructions.bases.ArmInstruction > instructions = super . generate ( arrayAccess , platform ) ; final cs444.codegen.SizeHelper < cs444.codegen.arm.instructions.bases.ArmInstruction , cs444.codegen.arm.Size > sizeHelper = platform . getSizeHelper () ; instructions . add ( new cs444.codegen.arm.instructions.Add ( cs444.codegen.arm.Register.R0 , cs444.codegen.arm.Register.R0 , cs444.codegen.arm.Register.R8 , sizeHelper ) ) ; instructions . add ( new cs444.codegen.arm.instructions.Pop ( cs444.codegen.arm.Register.R8 ) ) ; return instructions ; } 
java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; } 
private finalproject.queryprocessor.clustering.Cluster findClosestCluster ( finalproject.WeightedDocument d ) { finalproject.queryprocessor.clustering.Cluster closest = null ; java.lang.Double closestDistance = java.lang.Double.MAX_VALUE ; for ( finalproject.queryprocessor.clustering.Cluster cluster : clusterList ) { java.lang.Double distance = cluster . getCentroid ( false ) . getDistanceFromVector ( d . getVector () ) ; if ( distance < closestDistance ) { closestDistance = distance ; closest = cluster ; } } return closest ; } 
private boolean isReachable ( int eventFrom , int eventTo ) { java.util.Set < java.lang.Integer > outgoingEvents = messages . get ( eventFrom ) ; if ( outgoingEvents == null ) { return false ; } for ( java.lang.Integer intermediateEvent : outgoingEvents ) { if ( intermediateEvent . equals ( eventTo ) ) { return true ; } if ( isReachable ( intermediateEvent , eventTo ) ) { return true ; } } return false ; } 
@ java.lang.Override public void enterInstruction ( net.rapidasm.antlr.RapidASMParser.InstructionContext ctx ) { net.rapidasm.structure.RapidStatementBlock block = this . getCurrentBlock () ; this . currentInstructionStatement = new net.rapidasm.structure.RapidInstructionStatement ( block , ctx . ALPHANUM () . getText () ) ; block . addStatement ( this . currentInstructionStatement ) ; this . resetOperands () ; } 
@ com.oracle.truffle.api.dsl.Specialization public java.lang.Object getIndex ( org.jruby.truffle.runtime.core.RubyMatchData matchData , int index ) { notDesignedForCompilation () ; if ( ( index >= ( matchData . getValues () . length ) ) || ( index < 0 ) ) { return getContext () . getCoreLibrary () . getNilObject () ; } else { return matchData . getValues () [ index ] ; } } 
@ java.lang.Override protected void showRationale () { new android.support.v7.app.AlertDialog.Builder ( getActivity () ) . setTitle ( "Permission Needed" ) . setMessage ( "Permission rationale here" ) . setNegativeButton ( "Cancel" , null ) . setPositiveButton ( "Request Permission" , new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { performPermissionRequest () ; } } ) . show () ; } 
public void deleteBrackets ( long event_id , boolean deleteUserAdded ) { android.util.Log . v ( "DeleteBracket" , ( "Deleting Bracket: " + event_id ) ) ; if ( deleteUserAdded ) { deleteBrackets ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ?" ) , new java.lang.String [] { "" + event_id } ) ; } else { deleteBrackets ( ( ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ? AND " ) + ( BracketTable.Cols.USER_ADDED ) ) + " = ?" ) , new java.lang.String [] { "" + event_id , "0" } ) ; } } 
static org.eclipse.january.dataset.Dataset santiseDataset ( org.eclipse.january.dataset.IDataset data ) { org.eclipse.january.dataset.Dataset tmp = org.eclipse.january.dataset.DatasetUtils . convertToDataset ( data ) ; if ( ( tmp . getStrides () ) != null ) { tmp = tmp . getSlice () ; tmp . setName ( data . getName () ) ; } return tmp ; } 
private entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } 
public static boolean contains ( java.lang.String target , java.lang.String [] strings , boolean totalMatch ) { for ( java.lang.String s : strings ) { s = s . toLowerCase () ; if ( totalMatch ? target . equals ( s ) : target . contains ( s ) ) { return true ; } } return false ; } 
public static void addImage ( com.skilltradiez.skilltraderz.Image image ) { if ( image == null ) return; java.util.Set < com.skilltradiez.skilltraderz.Image > images = com.skilltradiez.skilltraderz.MasterController . getUserDB () . getImagez () ; images . add ( image ) ; com.skilltradiez.skilltraderz.MasterController . getUserDB () . getChangeList () . add ( image ) ; image . notifyDB () ; com.skilltradiez.skilltraderz.DatabaseController . save () ; } 
private java.util.Set < edu.cmu.tetradapp.model.Node > mb ( edu.cmu.tetradapp.model.Graph graph , edu.cmu.tetradapp.model.Node z ) { java.util.Set < edu.cmu.tetradapp.model.Node > mb = new java.util.HashSet ( graph . getAdjacentNodes ( z ) ) ; for ( edu.cmu.tetradapp.model.Node c : graph . getChildren ( z ) ) { for ( edu.cmu.tetradapp.model.Node p : graph . getParents ( c ) ) { if ( p != c ) { mb . add ( p ) ; } } } return mb ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( view ) == null ) { view = inflater . inflate ( R.layout.fragment_password_recover_step1 , null ) ; frag_Email = ( ( com.example.fragments.inputcells.SimpleTextInputCellFragment ) ( getFragmentManager () . findFragmentById ( R.id.input_email ) ) ) ; view . findViewById ( R.id.btn_goNext ) . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { goNext () ; } } ) ; } return view ; } 
@ java.lang.Override public void updateAI ( float tpf ) { this . timePerFrame = tpf ; calculateNewVelocity ( tpf ) ; velocity . multLocal ( this . brakingFactor ) ; switch ( agent . getApplyType () ) { case Spatial : agent . setWorldTranslation ( agent . getPredictedPosition ( tpf ) ) ; rotateAgent ( tpf ) ; break; case BetterCharacterControl : case RigidBody : throw new java.lang.RuntimeException ( ( ( "The ApplyType " + ( agent . getApplyType () ) ) + " isn't supported yet, sorry." ) ) ; case DontApply : break; } } 
public java.util.ArrayList < com.badlogic.gdx.maps.MapObject > checkObjectFor ( com.badlogic.gdx.maps.MapLayer layer , java.lang.String property ) { java.util.ArrayList < com.badlogic.gdx.maps.MapObject > o = new java.util.ArrayList < com.badlogic.gdx.maps.MapObject > () ; com.badlogic.gdx.maps.MapObjects objects = layer . getObjects () ; for ( com.badlogic.gdx.maps.MapObject object : objects ) { if ( object . getProperties () . containsKey ( property ) ) { o . add ( object ) ; } } return o ; } 
public void moveUpPackageableElements ( org.eclipse.uml2.uml.PackageableElement packageableElement , java.util.Collection < org.eclipse.uml2.uml.PackageableElement > packageableElementsToMove ) { final org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch moveUpElementsSwitch = new org.obeonetwork.dsl.uml2.design.internal.services.MoveUpElementSwitch () ; final java.util.List < org.eclipse.uml2.uml.PackageableElement > packageableElementsInRightOrder = retrieveTheRightOrderForPackageableElement ( packageableElementsToMove ) ; final java.util.Iterator < org.eclipse.uml2.uml.PackageableElement > iterator = packageableElementsInRightOrder . iterator () ; while ( iterator . hasNext () ) { final org.eclipse.uml2.uml.Element element = iterator . next () ; moveUpElementsSwitch . moveUpElement ( element ) ; } } 
@ java.lang.Override public void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { buffer = new java.lang.StringBuilder () ; sinlin.Tag tag = new sinlin.Tag ( qName , attributes ) ; if ( ! ( arrayDeque . isEmpty () ) ) { arrayDeque . peek () . addNodeTag ( tag ) ; } arrayDeque . push ( tag ) ; } 
public void onReceive ( android.content.Context context , android.content.Intent intent ) { android.app.Notification.Builder notificationBuilder = new android.app.Notification.Builder ( context ) . setSmallIcon ( android.R.drawable.stat_sys_warning ) . setContentTitle ( "Novas notícias estão disponíveis!" ) . setContentText ( "Clique aqui para acessar sua lista de notícias e manter-se informado" ) . setVibrate ( mVibratePattern ) ; android.app.NotificationManager mNotificationManager = ( ( android.app.NotificationManager ) ( context . getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; mNotificationManager . notify ( 1 , notificationBuilder . build () ) ; } 
private java.lang.String createReadPageTitle ( com.pratilipi.data.client.PratilipiData pratilipiData , int pageNo , int pageCount ) { java.lang.String title = createPratilipiPageTitle ( pratilipiData ) ; if ( title == null ) title = "" ; java.lang.String pratilipiText = ( ( com.pratilipi.i18n.I18n . getString ( "pratilipi" , com.pratilipi.filter.UxModeFilter . getDisplayLanguage () ) ) + " / " ) + "Pratilipi" ; return ( title + " « " ) + pratilipiText ; } 
public int lineClearCalc ( int linesCleared ) { int score = 0 ; if ( linesCleared > 0 ) { score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; } return score * ( pointsPerLine ) ; } 
public void compute ( com.hp.hpl.jena.sparql.core.Quad quad ) { eu.diachron.qualitymetrics.accessibility.availability.RDFAccessibility.logger . debug ( "Assessing {}" , quad . asTriple () . toString () ) ; if ( quad . getPredicate () . getURI () . equals ( VOID.dataDump . getURI () ) ) { ( totalDataDumps ) ++ ; } } 
private void collapseViews ( android.view.View fab , final boolean collapsing ) { android.animation.Animator fabAnimator = ( collapsing ) ? com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildHideAnimator ( fab , false ) : com.application.material.bookmarkswallet.app.animator.AnimatorBuilder . getInstance ( com.application.material.bookmarkswallet.app.manager.SearchManager.context ) . buildShowAnimator ( fab , false ) ; fabAnimator . start () ; } 
@ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; if ( ( appCount ) == 1 ) { com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "#store != null && #store.user != null && #store.user.id == authentication.user.id" ) @ org.springframework.web.bind.annotation.PostMapping ( value = "/byName/{userId}" ) @ org.springframework.web.bind.annotation.ResponseStatus ( value = org.springframework.http.HttpStatus.OK ) public com.softserve.if072.common.model.Store getStoreByNameAndUser ( @ org.springframework.web.bind.annotation.PathVariable java.lang.Integer userId , @ org.springframework.web.bind.annotation.RequestBody com.softserve.if072.common.model.Store store ) { com.softserve.if072.common.model.Store oldStore = storeService . getStoreByNameAndUser ( store . getName () , store . getAddress () , userId ) ; com.softserve.if072.restservice.controller.StoreController.LOGGER . info ( java.lang.String . format ( "Store with name %s was retrieved" , store . getName () ) ) ; return oldStore ; } 
public static java.lang.String getShortDomain ( orca.manage.beans.ReservationMng mng ) { java.util.Properties resProps = orca.manage.OrcaConverter . fill ( mng . getResourceProperties () ) ; java.lang.String domain = resProps . getProperty ( orca.controllers.xmlrpc.XmlrpcHandlerHelper.RESOURCE_DOMAIN_VALUE ) ; if ( domain == null ) return null ; java.util.regex.Matcher matcher = orca.controllers.xmlrpc.XmlrpcHandlerHelper.pattern . matcher ( domain ) ; if ( matcher . find () ) return matcher . group ( 1 ) ; else return null ; } 
@ java.lang.Override public app2dapi.geometry.G2D.Vector2D transform ( app2dapi.geometry.G2D.Vector2D v ) { java.awt.geom.Point2D.Double jp = new java.awt.geom.Point2D.Double ( v . x () , v . y () ) ; trans . deltaTransform ( jp , jp ) ; return new app2dpcimpl.geometry.PVD2DImpl ( jp.x , jp.y ) ; } 
public io.rocketchat.livechat.LiveChatAPI.ChatRoom createRoom ( java.lang.String userID , java.lang.String authToken ) { java.lang.String userName = null ; if ( ( userInfo ) != null ) { userName = userInfo . optString ( "username" ) ; } java.lang.String visitorToken = LiveChatBasicRPC.visitorToken ; java.lang.String roomID = io.rocketchat.common.utils.Utils . shortUUID () ; return new io.rocketchat.livechat.LiveChatAPI.ChatRoom ( userName , roomID , userID , visitorToken , authToken ) ; } 
protected remixlab.proscene.JSONObject toJSONObject ( remixlab.proscene.Frame frame ) { remixlab.proscene.JSONObject jsonFrame = new remixlab.proscene.JSONObject () ; jsonFrame . setFloat ( "magnitude" , frame . magnitude () ) ; jsonFrame . setJSONArray ( "position" , toJSONArray ( frame . position () ) ) ; jsonFrame . setJSONArray ( "orientation" , toJSONArray ( frame . orientation () ) ) ; return jsonFrame ; } 
public boolean checkStep ( int x , int y ) { if ( ( x < ( this . width ) ) || ( x >= ( this . height ) ) ) { return false ; } else if ( ( y < ( this . height ) ) || ( y >= ( this . height ) ) ) { return false ; } else if ( ( matrix.data [ x ] [ y ] ) > 0 ) { return false ; } else return true ; } 
private void addShowLink ( java.lang.String url , java.util.List < net.myonlinestuff.torrentdl.domain.ShowLink > showLinks , org.jsoup.select.Elements el ) { if ( ( el != null ) && ( ! ( el . isEmpty () ) ) ) { net.myonlinestuff.torrentdl.service.Parser.LOGGER . info ( "element found: {}" , el . size () ) ; for ( final org.jsoup.nodes.Element element : el ) { showLinks . add ( new net.myonlinestuff.torrentdl.domain.ShowLink ( element . text () , element . attr ( "href" ) , url ) ) ; } } } 
public void deleteOldMarker ( com.google.android.gms.maps.model.Marker marker ) { if ( ( markers . get ( viewHolder ) ) == null ) markers . put ( viewHolder , marker ) ; else { markers . get ( viewHolder ) . remove () ; markers . put ( viewHolder , marker ) ; } } 
private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int offset ) { java.lang.String s = set [ offset ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > offset ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } 
@ java.lang.Override public void onNavigationDrawerItemSelected ( int position ) { if ( ! ( auth ) ) return; android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; if ( position == 0 ) { fragmentManager . beginTransaction () . replace ( R.id.container , tw.edu.ncu.cc.course.ScheduleFragment . newInstance ( this ) ) . commit () ; } else { fragmentManager . beginTransaction () . replace ( R.id.container , tw.edu.ncu.cc.course.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ) . commit () ; } } 
private java.lang.String getPortMapping ( int port ) { return ( portOffset ) == null ? ( ( ipAddress ) + "::" ) + port : ( ( ( ( ipAddress ) + ":" ) + ( ( portOffset ) + port ) ) + ":" ) + port ; } 
public int handle ( java.io.InputStream ips , java.io.OutputStream ops ) throws java.io.IOException { com.googlecode.jsonrpc4j.ReadContext ctx = com.googlecode.jsonrpc4j.ReadContext . getReadContext ( ips , mapper ) ; com.fasterxml.jackson.databind.JsonNode jsonNode = null ; try { ctx . assertReadable () ; jsonNode = ctx . nextValue () ; } catch ( com.fasterxml.jackson.core.JsonParseException e ) { writeAndFlushValue ( ops , createErrorResponse ( "jsonrpc" , "null" , ( - 32700 ) , "Parse error" , null ) ) ; return - 32700 ; } return handleNode ( jsonNode , ops ) ; } 
private java.lang.String setupDstByDirectory ( java.lang.String directory ) { int fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "/" ) ; if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "\\" ) ; } if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = 0 ; } java.lang.String output = directory + ( VCF_FILE_PATH . substring ( fileNameIndex ) ) ; return ( output . substring ( 0 , ( ( output . length () ) - 3 ) ) ) + "csv" ; } 
public void save ( ru.cdek.example.model.Entity entity ) throws org.springframework.dao.DataAccessException { org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource paramSource = new org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource ( entity ) ; java.lang.Number id = this . insertEntity . executeAndReturnKey ( paramSource ) ; ru.cdek.example.repository.jdbc.JdbcEntityRepositoryImpl.logger . info ( java.lang.String . format ( "Added entity with id - %d (name: %s)" , id . intValue () , entity . getName () ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; myCouchBase = new com.github.dev.williamg.simplecouchbaseapp.MyCouchBase ( this ) ; editText = ( ( android.widget.EditText ) ( findViewById ( R.id.main_text ) ) ) ; recyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.main_recycler_view ) ) ) ; recyclerView . setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( this ) ) ; recyclerView . setAdapter ( new com.github.dev.williamg.simplecouchbaseapp.DocumentAdapter ( myCouchBase . getAllDocumentsId () , this ) ) ; } 
@ java.lang.Override public void onViewCreated ( android.view.View view , android.os.Bundle savedInstanceState ) { mViewPager = ( ( android.support.v4.view.ViewPager ) ( view . findViewById ( R.id.viewpager ) ) ) ; mPageAdapter = new com.av.dev.pyurluxuryandroid.Fragment.LifestyleManager.RequestLifestyleFragment.SectionsPagerAdapter () ; mViewPager . setAdapter ( mPageAdapter ) ; mViewPager . setCurrentItem ( 0 ) ; mSlidingTabLayout = ( ( com.av.dev.pyurluxuryandroid.View.SlidingTabLayout ) ( view . findViewById ( R.id.sliding_tabs ) ) ) ; mSlidingTabLayout . setRowCount ( 2 ) ; mSlidingTabLayout . setViewPager ( mViewPager ) ; mSlidingTabLayout . setOnPageChangeListener ( pageListener ) ; } 
public boolean apply ( java.lang.String [] t ) { if ( ( this . nextCommand ) == null ) return this . hasBeenAnswered = false ; if ( this . hasBeenAnswered = this . nextCommand . apply ( t ) ) this . setChanged () ; this . notifyObservers ( new java.lang.Object [] { this . nextCommand . getClass () , t } ) ; return hasBeenAnswered ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_first ) ; mBookRide = ( ( android.widget.Button ) ( findViewById ( R.id.book_ride ) ) ) ; mRegister = ( ( android.widget.Button ) ( findViewById ( R.id.register_now ) ) ) ; mBookRide . setOnClickListener ( this ) ; mRegister . setOnClickListener ( this ) ; } 
public code.dao.hibernatedao.Race findRaceUseInnerJOINWithTrainAndTrainTypes ( int raceID ) { org.hibernate.Query query = getCurrentSession () . createQuery ( code.dao.hibernatedao.RaceHibernateDao.GET_RACE_WITH_TRAIN_AND_TRAIN_TYPE_USING_ID_HQL ) ; query . setInteger ( "id" , raceID ) ; code.dao.hibernatedao.Race race = ( ( code.dao.hibernatedao.Race ) ( query . uniqueResult () ) ) ; org.hibernate.Hibernate . initialize ( race . getTickets () ) ; org.hibernate.Hibernate . initialize ( race ) ; return race ; } 
public void link ( internetz.Artifact newart ) { java.util.ArrayList mostsimilar = getMostSimilar ( bookmarks , newart ) ; int index = 0 ; while ( index < ( mostsimilar . size () ) ) { newart . buildLink ( ( ( internetz.Artifact ) ( mostsimilar . get ( index ) ) ) ) ; index ++ ; } } 
public static void create ( hospital.models.Patient entity ) { hospital.repositories.concrete.Repository < hospital.models.Address > addressRepository = new hospital.repositories.concrete.Repository < hospital.models.Address > ( hospital.models.Address . class ) ; addressRepository . add ( entity . getAddress () ) ; addressRepository . close () ; hospital.repositories.concrete.Repository < hospital.models.Patient > patientRepository = new hospital.repositories.concrete.Repository < hospital.models.Patient > ( hospital.models.Patient . class ) ; patientRepository . add ( entity ) ; patientRepository . close () ; } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent e ) { if ( ! ( isGameover ) ) { int row = GUI . getLoc ( ( ( int ) ( e . getY () ) ) ) ; int col = GUI . getLoc ( ( ( int ) ( e . getX () ) ) ) ; board . addPiece ( row , col ) ; update () ; if ( board . checkWin () ) { isGameover = true ; endGame () ; } } } 
private void addFragment ( android.support.v4.app.Fragment fragment ) { android.transition.Transition changeTransform = android.transition.TransitionInflater . from ( this ) . inflateTransition ( R.transition.change_image_transform ) ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; ft . replace ( R.id.activity_container , fragment , fragment . getClass () . getSimpleName () ) ; ft . addToBackStack ( fragment . getTag () ) ; ft . commit () ; android.util.Log . d ( com.vladscaesteanu.licenta.MainActivity.TAG , ( "Fragment no is" + ( fragmentManager . getBackStackEntryCount () ) ) ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( ( requestCode == ( rray.me.androidresume.BasicInfoEditActivity.REQ_CODE_PICK_IMAGE ) ) && ( resultCode == ( android.app.Activity.RESULT_OK ) ) ) { android.net.Uri imageUri = data . getData () ; if ( imageUri != null ) { showImage ( imageUri ) ; } } } 
@ java.lang.Override protected int intSpeed ( float fSpeed ) { int speed = super . intSpeed ( fSpeed ) ; if ( speed <= 1 ) { return speed ; } switch ( this . getSpeedStepMode () ) { case jmri.DccThrottle.SpeedStepMode28 : case jmri.DccThrottle.SpeedStepMode28Mot : return ( ( int ) ( ( fSpeed * 28 ) * 4 ) ) + 12 ; case jmri.DccThrottle.SpeedStepMode14 : return ( ( int ) ( ( fSpeed * 14 ) * 8 ) ) + 8 ; } return speed ; } 
protected android.graphics.Rect growRight ( final int w , final int h ) { final com.funzio.pure2D.utils.RectBinPacker.Node down = mRoot ; final com.funzio.pure2D.utils.RectBinPacker.Node right = new com.funzio.pure2D.utils.RectBinPacker.Node ( ( ( mRoot.x ) + ( mRoot.width ) ) , mRoot.y , w , mRoot.height ) ; mRoot = new com.funzio.pure2D.utils.RectBinPacker.Node ( mRoot.x , mRoot.y , ( ( mRoot.width ) + w ) , mRoot.height ) ; mRoot . split ( down , right ) ; return right . occupy ( w , h ) ; } 
@ java.lang.Override public int getElementCount ( final java.lang.String elementType ) { if ( elementType == null ) { throw new java.lang.NullPointerException ( "elementType must not be null." ) ; } if ( ! ( wrappedMap . containsKey ( elementType ) ) ) { return reader . getElementCount ( elementType ) ; } org.smurn.jply.ElementType unwrapped = wrappedMap . get ( elementType ) . getUnwrappedType () ; return reader . getElementCount ( unwrapped . getName () ) ; } 
@ java.lang.Override public boolean setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } return true ; } 
public static final sune.util.ssdf2.SSDCollection read ( java.lang.String content ) { if ( content == null ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char [] chars = sune.util.ssdf2.SSDF . format ( content . toCharArray () ) ; return sune.util.ssdf2.SSDF . readObjects ( chars , 0 , chars.length ) ; } 
private void checkUsername ( com.musicforall.model.User user ) { java.lang.String searchUsername ; final java.lang.String username = user . getUsername () ; searchUsername = username ; int i = 0 ; while ( ( userService . getIdByUsername ( searchUsername ) ) != null ) { i ++ ; searchUsername = username + i ; } if ( i > 0 ) { user . setUsername ( searchUsername ) ; } } 
@ java.lang.Override public void update ( com.flurnamenpuzzle.generator.Observable observable ) { com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ( ( com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel ) ( observable ) ) ; int percentage = model . getPercentageGenerated () ; java.lang.String statusMessage = model . getStatusMessage () ; if ( statusMessage != null ) { this . progressLabel . setText ( statusMessage ) ; } java.lang.System.out . println ( statusMessage ) ; this . progressBar . setValue ( percentage ) ; this . progressBar . setString ( ( ( progressBar . getValue () ) + "%" ) ) ; } 
@ java.lang.Override public bee.creative.function.Array section ( final int offset , final int length ) throws java.lang.IllegalArgumentException { final int offset2 = offset - ( this . length () ) ; final int length2 = offset2 + length ; if ( offset2 >= 0 ) return array . section ( offset2 , length ) ; if ( length2 <= 0 ) return super . section ( offset , length ) ; return super . section ( offset , ( - offset2 ) ) . concat ( array . section ( 0 , length2 ) ) ; } 
@ com.squareup.otto.Subscribe public void onInternalLinkClicked ( com.ayuget.redface.ui.event.InternalLinkClickedEvent event ) { com.ayuget.redface.ui.fragment.TopicFragment topicFragment = ( ( com.ayuget.redface.ui.fragment.TopicFragment ) ( getSupportFragmentManager () . findFragmentByTag ( com.ayuget.redface.ui.activity.TopicsActivity.TOPIC_FRAGMENT_TAG ) ) ) ; if ( ( ( topicFragment != null ) && ( ( event . getTopic () . id () ) == ( topicFragment . getTopic () . id () ) ) ) && ( ( event . getPage () ) == ( topicFragment . getCurrentPage () ) ) ) { topicFragment . setCurrentPagePosition ( event . getPagePosition () ) ; } } 
public static void reg ( net.minecraft.block.Block block , int meta , java.lang.String file ) { net.minecraft.item.Item item = net.minecraft.item.Item . getItemFromBlock ( block ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( item , meta , new net.minecraft.client.resources.model.ModelResourceLocation ( ( ( ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) + ":" ) + file ) , "inventory" ) ) ; java.lang.System.out . println ( ( ( ( ( "Ran " + ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) ) + ":" ) + ( net.minecraft.item.Item . getItemFromBlock ( block ) . getUnlocalizedName () ) ) + " through the render reg." ) ) ; } 
public static void signOut ( android.content.Context context ) { new com.example.tberroa.girodicerapp.data.OperatorInfo () . clear ( context ) ; new com.example.tberroa.girodicerapp.data.CurrentInspectionInfo () . clearAll ( context ) ; new com.example.tberroa.girodicerapp.database.LocalDB () . clear () ; new com.example.tberroa.girodicerapp.data.UserInfo () . setUserStatus ( context , false ) ; context . startActivity ( new android.content.Intent ( context , com.example.tberroa.girodicerapp.activities.SignInActivity . class ) ) ; if ( context instanceof android.app.Activity ) { ( ( android.app.Activity ) ( context ) ) . finish () ; } } 
private void handleCancelRequest ( android.javax.sip.message.Request request , android.javax.sip.ServerTransaction serverTransaction ) { android.javax.sip.header.CallIdHeader callIdHeader = ( ( android.javax.sip.header.CallIdHeader ) ( request . getHeader ( CallIdHeader.NAME ) ) ) ; java.lang.String callId = callIdHeader . getCallId () ; if ( ( doSendResponse ( Response.OK , RequestMethod.CANCEL , request , serverTransaction ) ) != null ) { bus . post ( new org.github.sipuada.events.CallInvitationCanceled ( ( "Call invitation canceled by the caller " + "or callee took longer than roughly 30 seconds to answer." ) , callId , true ) ) ; return; } throw new org.github.sipuada.exceptions.RequestCouldNotBeAddressed () ; } 
@ java.lang.Override public boolean addUniversalDistillationRecipe ( net.minecraftforge.fluids.FluidStack aInput , net.minecraftforge.fluids.FluidStack [] aOutputs , net.minecraft.item.ItemStack aOutput2 , int aDuration , int aEUt ) { for ( int i = 0 ; i < ( java.lang.Math . min ( aOutputs.length , 11 ) ) ; i ++ ) { addDistilleryRecipe ( ( i + 1 ) , aInput , aOutputs [ i ] , ( aDuration * 2 ) , ( aEUt / 4 ) , false ) ; } return addDistillationTowerRecipe ( aInput , aOutputs , aOutput2 , aDuration , aEUt ) ; } 
public org.opendaylight.sxp.util.time.ManagedTimer setTimer ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType timerType , int period ) throws org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextDiscrepancyException , org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextNotFoundException , org.opendaylight.sxp.util.exception.unknown.UnknownTimerTypeException { io.netty.channel.ChannelHandlerContext ctx = null ; if ( isModeBoth () ) { if ( timerType == ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType.KeepAliveTimer ) ) { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.SpeakerContext ) ; } else { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.ListenerContext ) ; } } else { ctx = getChannelHandlerContext () ; } org.opendaylight.sxp.util.time.ManagedTimer timer = org.opendaylight.sxp.util.time.connection.TimerFactory . createTimer ( timerType , period , owner , this , ctx ) ; return this . setTimer ( timerType , timer ) ; } 
int appExists ( java.lang.String name ) { for ( int i = 0 ; ( statArray [ i ] ) != null ; ++ i ) { if ( statArray [ i ] . packageName . equals ( name ) ) { android.util.Log . d ( "Crash site" , java.lang.String . valueOf ( i ) ) ; return i ; } } return - 1 ; } 
@ java.lang.Override @ net.openhft.chronicle.core.annotation.ForceInline public void write ( long offsetInRDO , @ org.jetbrains.annotations.NotNull java.nio.ByteBuffer bytes , int offset , int length ) { if ( bytes . isDirect () ) { memory . copyMemory ( ( ( ( ( sun.nio.ch.DirectBuffer ) ( bytes ) ) . address () ) + offset ) , ( ( address ) + ( translate ( offsetInRDO ) ) ) , length ) ; } else { memory . copyMemory ( bytes . array () , offset , ( ( address ) + ( translate ( offsetInRDO ) ) ) , length ) ; } } 
@ java.lang.Override public boolean onItemLongClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { try {} catch ( java.lang.Exception e ) { android.util.Log . e ( "error" , e . getMessage () ) ; e . printStackTrace () ; } return false ; } 
@ java.lang.Override public org.bukkit.entity.Item dropItem ( org.bukkit.Location location , org.bukkit.inventory.ItemStack item ) { com.google.common.base.Optional < org.bukkit.entity.Entity > created = getHandle () . createEntity ( EntityTypes.DROPPED_ITEM , blue.lapis.pore.converter.vector.VectorConverter . create3d ( location ) ) ; if ( ! ( created . isPresent () ) ) { return null ; } assert created instanceof org.bukkit.entity.Item ; org.bukkit.entity.Item drop = ( ( org.bukkit.entity.Item ) ( created ) ) ; throw new org.apache.commons.lang.NotImplementedException () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( MainActivity.schedule . add ( ( ( dayWeek ) + 1 ) , from_hours . getValue () , from_minutes . getValue () , to_hours . getValue () , to_minutes . getValue () ) ) { closeDialog () ; } else { android.widget.Toast temp = android.widget.Toast . makeText ( c . getBaseContext () , "This interval is incorrect!" , Toast.LENGTH_SHORT ) ; temp . show () ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference , java.lang.Object newValue ) { if ( preference . getKey () . equals ( getResources () . getString ( R.string.key_mov_speed ) ) ) { speedMultiTouch = calculateSpeedMultiTouch ( ( ( int ) ( newValue ) ) ) ; } return true ; } 
private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { try ( java.sql.Statement stmt = jdbcFixture . getConnection () . createStatement () ; java.sql.ResultSet rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ) { if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } return false ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out . println ( ( "Paikka 1 0 " + ( whichmark () ) ) ) ; ChangeButton ( buttonba ) ; buttonba . setEnabled ( false ) ; viimeisinSiirto [ 1 ] [ 0 ] = whichmark () ; ( buttoncount ) ++ ; } 
private boolean checkMove ( float x , float y , float oldX , float oldy ) { return ( ( java.lang.Math . pow ( java.lang.Math . abs ( ( x - oldX ) ) , 2 ) ) + ( java.lang.Math . pow ( java.lang.Math . abs ( ( y - oldy ) ) , 2 ) ) ) > ( java.lang.Math . pow ( mSlopeDistance , 2 ) ) ; } 
@ java.lang.Override public void stateChanged ( javax.swing.event.ChangeEvent e ) { if ( alwaysCheckBox . isSelected () ) { startDateTxtField . setText ( "ALWAYS" ) ; periodTxtField . setText ( "ALWAYS" ) ; periodTxtField . setEnabled ( false ) ; startDateTxtField . setEnabled ( false ) ; } else { periodTxtField . setEnabled ( true ) ; startDateTxtField . setEnabled ( true ) ; } } 
private static long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } 
@ java.lang.Override public void onScrolled ( android.support.v7.widget.RecyclerView recyclerView , int dx , int dy ) { visibleItemCount = manager . getChildCount () ; totalItemCount = manager . getItemCount () ; pastVisiblesItems = manager . findFirstVisibleItemPosition () ; if ( ! ( loading ) ) { if ( ( ( visibleItemCount ) + ( pastVisiblesItems ) ) >= ( totalItemCount ) ) { ( pageIndex ) ++ ; if ( ( type ) == 0 ) { getBooks ( pageIndex ) ; } } } } 
public java.util.List < com.mymusic.mymusicapp.model.SongDetails > listSongDetails ( java.lang.String text ) { java.util.List < com.mymusic.mymusicapp.model.SongDetails > values = new java.util.ArrayList < com.mymusic.mymusicapp.model.SongDetails > () ; if ( text . equals ( "" ) ) { values = com.mymusic.mymusicapp.model.SongDetails . listAll ( com.mymusic.mymusicapp.model.SongDetails . class ) ; } else { values = com.mymusic.mymusicapp.model.SongDetails . find ( com.mymusic.mymusicapp.model.SongDetails . class , "title = ? or artist = ?" , text , text ) ; } return values ; } 
public static int getUnScheuledHours ( Office offices ) { int hoursNotScheduled = 0 ; for ( int i = 1 ; i < 37 ; i ++ ) { for ( int j = 0 ; j < 7 ; j ++ ) { if ( ( offices.officeReq . get ( i ) . get ( j ) ) >= 0 ) { hoursNotScheduled += offices.officeReq . get ( i ) . get ( j ) ; } } } return hoursNotScheduled / 2 ; } 
@ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( ( savedInstanceState != null ) && ( ! ( defaults ) ) ) && ( ( bottomBar ) != null ) ) { if ( savedInstanceState . getBoolean ( rs.ftn.pma.tourismobile.fragments.BOTTOM_BAR_SHOWING ) ) { bottomBar . show () ; } else { bottomBar . hide () ; } firstTimeLoading = savedInstanceState . getBoolean ( rs.ftn.pma.tourismobile.fragments.FIRST_TIME_LOADING ) ; } } 
private void handleDeletePlaylistEvent ( android.net.Uri pUri ) { com.dreamdigitizers.megamelodies.views.interfaces.IViewPlaylists view = this . getView () ; if ( view != null ) { java.lang.String id = pUri . getQueryParameter ( "playlistId" ) ; java.util.HashMap transactions = this . mTransactionActions . get ( ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST ) ; android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ( ( android.support.v4.media.MediaBrowserCompat.MediaItem ) ( transactions . get ( id ) ) ) ; transactions . remove ( id ) ; view . removeMediaItem ( mediaItem ) ; } } 
public java.lang.String removeInitialFinalWhites ( java.lang.String text ) { java.lang.String textWOWhites = text ; while ( ( textWOWhites . startsWith ( " " ) ) || ( textWOWhites . startsWith ( "\t" ) ) ) textWOWhites = textWOWhites . substring ( 1 ) ; while ( ( textWOWhites . endsWith ( " " ) ) || ( textWOWhites . endsWith ( "\t" ) ) ) textWOWhites = textWOWhites . substring ( 0 , ( ( textWOWhites . length () ) - 1 ) ) ; return textWOWhites ; } 
@ javax.ws.rs.Path ( value = "/{idAnnotatedCollaborativeContentAnalysis:.*}" ) @ javax.ws.rs.GET public java.util.Collection < eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis > getCollaborativeContentVerifications ( @ javax.ws.rs.PathParam ( value = "idAnnotatedCollaborativeContentAnalysis" ) java.lang.String contentID ) throws eu.learnpad.exception.LpRestException { if ( eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map . containsKey ( java.lang.Integer . valueOf ( contentID ) ) ) { eu.learnpad.ca.rest.data.collaborative.CollaborativeContentAnalysis caa = eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.map . get ( java.lang.Integer . valueOf ( contentID ) ) ; eu.learnpad.ca.correctness.CorrectnessAnalysis corrana = new eu.learnpad.ca.correctness.CorrectnessAnalysis ( new org.languagetool.language.BritishEnglish () ) ; eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis acca = corrana . check ( caa ) ; java.util.ArrayList < eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis > ar = new java.util.ArrayList < eu.learnpad.ca.rest.data.collaborative.AnnotatedCollaborativeContentAnalysis > () ; ar . add ( acca ) ; return ar ; } else return null ; } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.MoviesEntry.TABLE_NAME ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.VideoEntry.TABLE_NAME ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.ReviewEntry.TABLE_NAME ) ) ) ; } 
public static boolean loginUser ( java.lang.String userName , java.lang.String password , javafx.scene.text.Text attemptsLeft ) { sample.Models.LoginUser . checkTries ( attemptsLeft , userName ) ; try { return ( ( ( sample.Models.LoginUser . checkFile () ) && ( sample.Models.LoginUser . checkUserName ( userName ) ) ) && ( sample.Models.LoginUser . checkPassWord ( password , userName ) ) ) && ( sample.Models.LoginUser.check ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Error while logging in user" ) ; return false ; } } 
public Util.complex pow ( int n ) { double rn = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . cos ( ( n * ( getAngle () ) ) ) ) ; double in = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . sin ( ( n * ( getAngle () ) ) ) ) ; setR ( rn ) ; setI ( in ) ; return this ; } 
public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return result == 1 ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ! ( o instanceof me.newyith.fortress.util.BaseUUID ) ) ) return false ; me.newyith.fortress.util.BaseUUID that = ( ( me.newyith.fortress.util.BaseUUID ) ( o ) ) ; return ! ( ( model.uuid ) != null ? ! ( model.uuid . equals ( that . getUuid () ) ) : ( that . getUuid () ) != null ) ; } 
public static void cancelNotification ( android.content.Context context , int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( context . getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } } 
public static void phaseThree ( UndirectedGraph < java.lang.Integer , java.lang.Integer > graph , java.util.List < Graph.Vertex < java.lang.Integer > > lowDegreeVertices ) { for ( Graph.Vertex < java.lang.Integer > v : lowDegreeVertices ) { graph . removeVertex ( graph . getVertexWithElement ( v . getElement () ) ) ; } } 
private void deleteGoogleEvent ( java.lang.String googleId ) throws java.io.IOException { w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Deleting Google Event: " + googleId ) ) ; w094j.ctrl8.database.GoogleStorage.dataStoreEvent . delete ( googleId ) ; try { this . clientCalendar . events () . delete ( this . googleCalendar . getId () , googleId ) . execute () ; } catch ( java.io.IOException e ) { w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Fail to delete Google Event: " + googleId ) ) ; } } 
public io.lambdacloud.util.ObjectArray set ( int ms , int me , int [] aryn , io.lambdacloud.util.ObjectArray ary ) { int row = ( me - ms ) + 1 ; int col = aryn.length ; for ( int i = 0 ; i < row ; i ++ ) for ( int j = 0 ; j < col ; j ++ ) { data [ ( ms + i ) ] [ aryn [ j ] ] = ary.data [ i ] [ j ] ; } return this ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.String status ) { java.lang.String imagePath = ( ( localstoragehandler.fileCacheFolder ) + "/" ) + ( filename ) ; if ( status . equals ( "OK" ) ) { if ( type . equals ( MessageInfo.MessageType.IMAGE ) ) { at.vcity.androidim.tools.BitmapLoaderTask task = new at.vcity.androidim.tools.BitmapLoaderTask ( imageView ) ; task . execute ( imagePath ) ; imageView . setLayoutParams ( params ) ; } } else {} } 
private mil.nga.giat.mage.sdk.datastore.user.Permissions parsePermissions ( com.fasterxml.jackson.core.JsonParser parser ) throws java.io.IOException { if ( ( parser . getCurrentToken () ) != ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) return null ; java.util.Collection < mil.nga.giat.mage.sdk.datastore.user.Permission > permissions = new java.util.ArrayList <> () ; while ( ( parser . nextToken () ) != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { java.lang.String permission = parser . getText () . toUpperCase ( java.util.Locale.US ) ; permissions . add ( mil.nga.giat.mage.sdk.datastore.user.Permission . valueOf ( permission ) ) ; } return new mil.nga.giat.mage.sdk.datastore.user.Permissions ( permissions ) ; } 
public com.digitalpebble.storm.crawler.Metadata getMetaForOutlink ( java.lang.String sourceURL , com.digitalpebble.storm.crawler.Metadata parentMD ) { com.digitalpebble.storm.crawler.Metadata md = filter ( parentMD ) ; if ( trackPath ) { md . addValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.urlPathKeyName , sourceURL ) ; } if ( trackDepth ) { java.lang.String existingDepth = md . getFirstValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName ) ; int depth = 0 ; try { depth = java.lang.Integer . parseInt ( existingDepth ) ; } catch ( java.lang.Exception e ) { depth = 0 ; } md . setValue ( com.digitalpebble.storm.crawler.util.MetadataTransfer.depthKeyName , java.lang.Integer . toString ( ( ++ depth ) ) ) ; } return md ; } 
private static void testServerChannelFactory ( org.osgi.framework.BundleContext bundleContext ) { org.osgi.framework.ServiceReference < com.wincom.dcim.agentd.NetworkService > serviceRef = bundleContext . getServiceReference ( com.wincom.dcim.agentd.NetworkService . class ) ; com.wincom.dcim.agentd.NetworkService service = bundleContext . getService ( serviceRef ) ; java.lang.System.out . println ( serviceRef ) ; java.lang.System.out . println ( service ) ; com.wincom.dcim.agentd.internal.AgentdServiceActivator . createAcceptor ( service ) ; for ( int i = 0 ; i < 1 ; ++ i ) { com.wincom.dcim.agentd.internal.AgentdServiceActivator . createConnection ( service ) ; } } 
public biomorphHandling.Biomorph evolveClo ( biomorphHandling.Biomorph father , biomorphHandling.Biomorph mother ) { biomorphHandling.Evolver ec = new biomorphHandling.Evolver ( father , mother , perfectValues ) ; biomorphHandling.Biomorph biomorph = ec . evolve () ; statisticMachine . saveGeneValues ( ec . getChildGenes () ) ; statisticMachine . printRunningStats () ; return biomorph ; } 
@ java.lang.Override public void channelInactive ( org.eclipse.moquette.server.netty.ChannelHandlerContext ctx ) throws java.lang.Exception { super . channelInactive ( ctx ) ; org.eclipse.moquette.server.netty.NettyChannel channel = m_channelMapper . get ( getKey ( ctx . channel () ) ) ; if ( null == channel ) { ctx . close () ; return; } remove ( ctx . channel () ) ; release ( channel ) ; ctx . close () ; } 
@ java.lang.Override public void onUpdate ( com.wylder.shuttlewidget.ScheduleConstraint [] newConstraints ) { constraints = newConstraints ; if ( ( newConstraints.length ) == 0 ) { flagEmptyList = true ; constraints = new com.wylder.shuttlewidget.ScheduleConstraint [] { null } ; } else { flagEmptyList = false ; } com.wylder.shuttlewidget.ConstraintListAdapter adapter = new com.wylder.shuttlewidget.ConstraintListAdapter ( getActivity () , constraints ) ; setListAdapter ( adapter ) ; } 
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mp ) { int temp = ( ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , ( - 1 ) ) ) + 1 ) % ( videoList . size () ) ; vvVideo . setVideoURI ( videoList . get ( temp ) ) ; com.example.saksham.overlayscreenshort.PlaylistAdapter . changeActiveItemBackground ( temp ) ; editor . putInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , temp ) ; editor . commit () ; vvVideo . start () ; } 
@ java.lang.Override public com.navercorp.pinpoint.web.vo.AgentInfo getAgentInfo ( final java.lang.String agentId , final long timestamp ) { if ( agentId == null ) { throw new java.lang.NullPointerException ( "agentId must not be null" ) ; } com.navercorp.pinpoint.web.dao.hbase.Scan scan = createScan ( agentId , timestamp ) ; return this . hbaseOperations2 . find ( HBaseTables.AGENTINFO , scan , new com.navercorp.pinpoint.web.dao.hbase.HbaseAgentInfoDao.AgentInfoResultsExtractor () ) ; } 
public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; } 
public void removeMachine ( de.prob2.ui.project.Machine machine ) { java.util.List < de.prob2.ui.project.Machine > machinesList = this . getMachines () ; machinesList . remove ( machine ) ; this . update ( new de.prob2.ui.project.Project ( this . getName () , this . getDescription () , machinesList , this . getPreferences () , this . getRunconfigurations () , this . getLocation () ) ) ; } 
@ java.lang.Override public void onLocalVideoTrackReceive ( com.quickblox.videochat.webrtc.QBRTCSession session , com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack ) { localVideoVidew = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.localVideoVidew ) ) ) ; android.util.Log . d ( "Track" , ( "localVideoVidew is " + ( localVideoVidew ) ) ) ; if ( ( localVideoVidew ) != null ) { videoTrack . addRenderer ( new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( localVideoVidew , QBGLVideoView.Endpoint.LOCAL ) ) ) ; localVideoVidew . setVideoTrack ( videoTrack , QBGLVideoView.Endpoint.LOCAL ) ; android.util.Log . d ( "Track" , "onLocalVideoTrackReceive() is raned" ) ; } } 
public void addEntry ( com.example.lenni.blackjack_ptm.LeaderboardEntry entry ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues values = new android.content.ContentValues () ; values . put ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.COLUMN_PLAYER , entry . getPlayerName () ) ; values . put ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.COLUMN_SCORE , entry . getScore () ) ; db . replace ( com.example.lenni.blackjack_ptm.LeaderBoardDbHelper.TABLE_LEADERBOARD , null , values ) ; db . close () ; } 
void addAmountTodo ( int amt , todolist.TodoList list ) { todolist.Todo head = new todolist.Todo ( "Task 1" ) ; list . addTodo ( head ) ; int numAdded = 1 ; while ( numAdded != amt ) { numAdded ++ ; todolist.Todo newTodo = new todolist.Todo ( ( "Task " + ( java.lang.Integer . toString ( numAdded ) ) ) ) ; list . addTodo ( newTodo ) ; } } 
@ com.oracle.truffle.api.CompilerDirectives.TruffleBoundary @ com.oracle.truffle.api.dsl.Specialization public org.jruby.truffle.nodes.core.RubyString encode ( org.jruby.truffle.nodes.core.RubyString string , org.jruby.truffle.nodes.core.RubyString encoding , @ java.lang.SuppressWarnings ( value = "unused" ) org.jruby.truffle.runtime.UndefinedPlaceholder options ) { final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyString = getContext () . toJRuby ( string ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyEncodingString = getContext () . toJRuby ( encoding ) ; final org.jruby.truffle.nodes.core.org.jruby.RubyString jrubyTranscoded = ( ( org.jruby.truffle.nodes.core.org.jruby.RubyString ) ( jrubyString . encode ( getContext () . getRuntime () . getCurrentContext () , jrubyEncodingString ) ) ) ; return getContext () . toTruffle ( jrubyTranscoded ) ; } 
@ com.google.gwt.uibinder.client.UiHandler ( value = "versionSelect" ) protected void onVersionChange ( com.google.gwt.event.dom.client.ChangeEvent e ) { java.lang.String version = versionSelect . getSelectedValue () ; for ( com.siemens.plm.hackathon.haystatck.shared.VersionDTO v : this . versions ) { if ( v . getName () . equals ( version ) ) { populateBaselines ( v . getBaselines () ) ; break; } } getRepositories ( this . getCurrentProduct () , version ) ; } 
private static int getResIdByStatus ( com.ogp.hotspotincar.WatchdogService.ActuatorState actuatorState ) { if ( ( com.ogp.hotspotincar.WatchdogService.ActuatorState.UNCHANGED ) == actuatorState ) { actuatorState = com.ogp.hotspotincar.HotspotWidget.storedState ; } else { com.ogp.hotspotincar.HotspotWidget.storedState = actuatorState ; } switch ( actuatorState ) { case ACTUATED : return R.drawable.connected ; case NOT_ACTUATED : return R.drawable.disconnected ; default: return R.drawable.disabled ; } } 
public static java.util.Calendar toCalendar ( int day , int month , int year ) { java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . set ( java.util.Calendar.YEAR , year ) ; cal . set ( java.util.Calendar.MONTH , month ) ; cal . set ( java.util.Calendar.DAY_OF_MONTH , day ) ; cal . getTime () ; return cal ; } 
public void start ( java.lang.String myBaseId , java.lang.String enemyBaseId , java.util.Set < java.lang.String > enemyIds ) { this . myBaseId = myBaseId ; this . enemyBaseId = enemyBaseId ; this . enemyIds = enemyIds ; android.util.Log . i ( "Start game" , ( ( ( ( myBaseId + ":" ) + enemyBaseId ) + ":" ) + enemyIds ) ) ; } 
@ java.lang.Override public ua.com.jobsukraine.entity.Candidate findByLogin ( java.lang.String login ) { ua.com.jobsukraine.entity.Candidate c = null ; try { c = candidateRepository . findByInfo ( loginInfoRepository . findByLogin ( login ) ) ; if ( ( candidateRepository . getFeedbacks ( c . getId () ) . size () ) > 0 ) c . setRating ( candidateRepository . getGlobalRating ( c . getId () ) ) ; } catch ( org.springframework.dao.EmptyResultDataAccessException e ) {} return c ; } 
public java.lang.String getVoteSiteName ( java.lang.String url ) { java.util.ArrayList < java.lang.String > sites = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites . getInstance () . getVoteSitesNames () ; if ( sites != null ) { for ( java.lang.String siteName : sites ) { java.lang.String URL = com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites . getInstance () . getServiceSite ( siteName ) ; if ( URL . equals ( url ) ) { return siteName ; } } } return url ; } 
public void enable ( java.lang.String name , java.lang.String artifact ) throws java.io.IOException { org.apache.zeppelin.helium.HeliumPackageSearchResult pkgInfo = getPackageInfo ( name , artifact ) ; if ( pkgInfo == null ) { return; } if ( org.apache.zeppelin.helium.HeliumPackage . isBundleType ( pkgInfo . getPkg () . getType () ) ) { bundleFactory . buildPackage ( pkgInfo . getPkg () , true , true ) ; } heliumConf . enablePackage ( name , artifact ) ; save () ; } 
public void runAlgorithm ( double minSup , double minConf , org.knime.sequence.ruleGrowth.spmf.SequenceDatabase database ) throws java.io.IOException { this . database = database ; this . minConfidence = minConf ; this . minsuppRelative = ( ( int ) ( java.lang.Math . ceil ( ( minSup * ( database . size () ) ) ) ) ) ; runAlgorithm ( "NO NEED" , null , minsuppRelative , minConfidence ) ; } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker datePicker , int year , int month , int day ) { dateList . add ( ( ( ( ( ( ( ( "" + ( day < 10 ? '0' : "" ) ) + day ) + "/" ) + ( month < 10 ? '0' : "" ) ) + month ) + "/" ) + year ) ) ; showDialog ( 888 ) ; } 
public java.lang.Boolean draw ( dk.eax.Field field ) { if ( ( field . getToken () ) == null ) { java.lang.System.out . println ( field . getToken () ) ; int y = field . getCoordinate_y () ; int x = field . getCoordinate_x () ; dk.eax.graphics.Ellipse ellipsis = new dk.eax.graphics.Ellipse ( x , y , 200 , 200 ) ; ellipsis . draw () ; field . setToken ( this ) ; return true ; } return false ; } 
@ java.lang.Override public boolean onNavigationItemSelected ( @ android.support.annotation.NonNull android.view.MenuItem item ) { switch ( item . getItemId () ) { case R.id.nav_search : mDrawerLayout . closeDrawers () ; return true ; case R.id.nav_saved_search_results : mDrawerLayout . closeDrawers () ; android.content.Intent savedResultsIntent = new android.content.Intent ( this , com.example.android.vigi.SavedSearchResultsActivity . class ) ; startActivity ( savedResultsIntent ) ; return true ; default: return false ; } } 
public void paint ( java.awt.Graphics g ) { g . setColor ( java.awt.Color.BLACK ) ; g . fillOval ( x , y , radius , radius ) ; g . drawOval ( ( ( ( x ) + ( ( radius ) / 2 ) ) - ( ( range ) / 2 ) ) , ( ( ( y ) + ( ( radius ) / 2 ) ) - ( ( range ) / 2 ) ) , range , range ) ; } 
@ org.springframework.security.access.prepost.PreAuthorize ( value = "@workLogSecurityService.hasPermissionToEditWorkLog(#workLogId)" ) @ com.softserverinc.edu.controllers.GetMapping ( value = "issue/{issueId}/worklog/{workLogId}/edit" ) public java.lang.String issueByIdEditWorklog ( @ com.softserverinc.edu.controllers.PathVariable java.lang.Long issueId , @ com.softserverinc.edu.controllers.PathVariable java.lang.Long workLogId , org.springframework.ui.ModelMap model , @ org.springframework.beans.factory.annotation.Qualifier ( value = "worklog" ) @ org.springframework.data.web.PageableDefault ( value = com.softserverinc.edu.constants.PageConstant.AMOUNT_PROJECT_ELEMENTS ) org.springframework.data.domain.Pageable workLogPageable ) { model . addAttribute ( "issue" , issueService . findById ( issueId ) ) ; model . addAttribute ( "issueCommentsList" , issueCommentService . findByIssueId ( issueId ) ) ; model . addAttribute ( "newIssueComment" , getNewIssueComment ( issueId ) ) ; workLogService . forEditWorkLogModel ( model , workLogId , issueId , workLogPageable ) ; return "issue_view" ; } 
public com.xrtb.common.Campaign getCampaign ( java.lang.String name , java.lang.String id ) { com.xrtb.db.User u = map . get ( name ) ; if ( u == null ) return null ; for ( com.xrtb.common.Campaign c : u.campaigns ) { if ( c.adId . equals ( id ) ) return c ; } return null ; } 
private void onClientHandle ( com.impetus.kundera.persistence.handler.impl.EntitySaveGraph objectGraph , java.lang.Object childEntity ) throws java.lang.Exception { if ( childEntity instanceof java.util.Collection < ? > ) { java.util.Collection < ? > childCol = ( ( java.util.Collection < ? > ) ( childEntity ) ) ; for ( java.lang.Object ch : childCol ) { if ( ch != null ) { onClientDelete ( ch , objectGraph ) ; } } } else { if ( childEntity != null ) { onClientDelete ( childEntity , objectGraph ) ; } } } 
@ java.lang.Override public void writePortable ( com.hazelcast.nio.serialization.PortableWriter writer ) throws java.io.IOException { java.util.List < java.lang.String > nullChecker = com.google.common.collect.Lists . newArrayList () ; if ( ( topicFilter ) != null ) { writer . writeUTF ( "topicFilter" , topicFilter ) ; nullChecker . add ( "topicFilter" ) ; } if ( ( qos ) != null ) { writer . writeInt ( "qos" , qos . value () ) ; nullChecker . add ( "qos" ) ; } writer . writeUTFArray ( "nullChecker" , nullChecker . toArray ( new java.lang.String [ 0 ] ) ) ; } 
@ java.lang.Override public boolean onTouchEvent ( com.androlua.MotionEvent event ) { if ( ( mOnTouchEvent ) != null ) { try { java.lang.Object ret = mOnTouchEvent . call ( event ) ; if ( ( ret != null ) && ( ( ret . getClass () ) == ( boolean . class ) ) ) return true ; } catch ( com.androlua.LuaException e ) { sendMsg ( ( "onTouchEvent " + ( e . getMessage () ) ) ) ; } } return super . onTouchEvent ( event ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "" , "/" , "/index" } ) public java.lang.String getIndexPage ( org.springframework.ui.Model model ) { java.util.Optional < guru.springframework.domain.Category > categoryOptional = categoryRepository . findByDescription ( "American" ) ; java.util.Optional < guru.springframework.domain.UnitOfMeasure > unitOfMeasureOptional = unitOfMeasureRepository . findByDescription ( "Teaspoon" ) ; java.lang.System.out . println ( ( "Cat Id is: " + ( categoryOptional . get () . getId () ) ) ) ; java.lang.System.out . println ( ( "UOM ID is: " + ( unitOfMeasureOptional . get () . getId () ) ) ) ; java.util.Set recipeList = recipeService . getRecipes () ; model . addAttribute ( "recipes" , recipeList ) ; return "index" ; } 
@ java.lang.Override public de.ppi.samples.fuwesta.model.User read ( java.lang.Long userId ) { final de.ppi.samples.fuwesta.model.User user = userDao . findOne ( userId ) ; if ( ( user != null ) && ( ! ( org.springframework.util.CollectionUtils . isEmpty ( user . getPostings () ) ) ) ) { user . getPostings () . size () ; } return user ; } 
@ java.lang.Override public boolean shouldTraverse ( com.google.javascript.jscomp.NodeTraversal t , com.google.javascript.rhino.Node n , com.google.javascript.rhino.Node parent ) { switch ( n . getType () ) { case com.google.javascript.rhino.Token.YIELD : visitYieldExpression ( n ) ; break; case com.google.javascript.rhino.Token.DO : case com.google.javascript.rhino.Token.FOR : case com.google.javascript.rhino.Token.WHILE : visitLoop ( n ) ; break; case com.google.javascript.rhino.Token.CASE : if ( controlCanExit ( n . getFirstChild () ) ) { compiler . report ( com.google.javascript.jscomp.JSError . make ( n , Es6ToEs3Converter.CANNOT_CONVERT_YET , "Case statements that contain yields" ) ) ; return false ; } break; } return true ; } 
@ java.lang.Override public void buttonPressed ( java.lang.String buttonName , double result ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } 
private void addEntry ( int answer ) { entries . add ( new Entry ( allTrials . get ( ( ( counter ) - 1 ) ) , answer , ( ( ( inCircleSteps ) * 1.0 ) / ( totalTimeSteps ) ) , startTime , counter , currentGazeDataSet , new Tuple ( this . getGCanvas () . getLocationOnScreen () ) , ( ( inPracticeMode ) && ( ( counter ) < 5 ) ) ) ) ; } 
public void fillListView ( java.lang.String title ) { db = new yeongdejong.com.assamhouse.DB_Recipes ( this ) ; java.util.ArrayList < yeongdejong.com.assamhouse.Recipes > cuisines = db . getSelectedCategory ( title ) ; java.lang.String size = java.lang.String . valueOf ( cuisines . size () ) ; yeongdejong.com.assamhouse.Toast . makeText ( this , size , Toast.LENGTH_SHORT ) . show () ; } 
private org.esa.snap.core.datamodel.Band getComplexSrcBand ( final org.esa.snap.core.datamodel.Band iBand ) { java.lang.String name = iBand . getName () ; if ( name . startsWith ( "i_" ) ) { name = name . replace ( "i_" , "q_" ) ; } else if ( name . startsWith ( "q_" ) ) { name = name . replace ( "q_" , "i_" ) ; } return srcProduct . getBand ( name ) ; } 
public void map ( org.apache.hadoop.io.Text key , org.apache.hadoop.io.Text value , cloudCompu.PageRankMr.Context context ) throws java.io.IOException , java.lang.InterruptedException { java.lang.String [] detial = value . toString () . split ( "&gt;" ) ; java.lang.String [] par = detial [ 0 ] . split ( " " ) ; if ( ( java.lang.Integer . parseInt ( par [ 2 ] ) ) == 0 ) { title . set ( "Sum" ) ; pr . set ( java.lang.Double . parseDouble ( par [ 0 ] ) ) ; context . write ( key , pr ) ; } } 
@ java.lang.Override public void onCreateContextMenu ( android.view.ContextMenu menu , android.view.View v , android.view.ContextMenu.ContextMenuInfo menuInfo ) { super . onCreateContextMenu ( menu , v , menuInfo ) ; menu . add ( 0 , com.phicdy.mycuration.ui.FilterListFragment.EDIT_FILTER_MENU_ID , 0 , R.string.edit_filter ) ; menu . add ( 0 , com.phicdy.mycuration.ui.FilterListFragment.DELETE_FILTER_MENU_ID , 1 , R.string.delete_filter ) ; } 
public static int hash ( final java.lang.String str ) { int hash = - 2128831035 ; final byte [] bytes = str . getBytes ( java.nio.charset.StandardCharsets.ISO_8859_1 ) ; for ( final byte b : bytes ) { { hash = hash ^ b ; hash = hash * 16777619 ; } } return hash ; } 
@ java.lang.Override public void connectionLost ( java.lang.Throwable thrwbl ) { java.lang.System.out . println ( "Connection Lost..." ) ; java.lang.System.out . println ( thrwbl . getCause () ) ; java.lang.System.out . println ( thrwbl . getMessage () ) ; java.lang.String m = ( ( bfh.ch.labdem.main.Subscriber . class . getName () ) + "\n" ) + ( thrwbl . getMessage () ) ; LabDemLogger.LOGGER . log ( java.util.logging.Level.SEVERE , m ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( ( com.cyapass.cyapass.MainActivity.currentSiteKey ) == null ) { return; } if ( isChecked ) { com.cyapass.cyapass.MainActivity.currentSiteKey . setMaxLength ( java.lang.Integer . parseInt ( com.cyapass.cyapass.MainActivity.PlaceholderFragment.maxLengthTabEditText . getText () . toString () ) ) ; } else { com.cyapass.cyapass.MainActivity.currentSiteKey . setMaxLength ( 0 ) ; } if ( gv . isLineSegmentComplete () ) { android.util.Log . d ( "MainActivity" , "addChars -- Re-generating password..." ) ; gv . GeneratePassword () ; } } 
@ java.lang.Override public boolean canHandle ( org.opentosca.planbuilder.model.tosca.AbstractImplementationArtifact ia , org.opentosca.planbuilder.model.tosca.AbstractNodeType infrastructureNodeType ) { javax.xml.namespace.QName type = ia . getArtifactType () ; org.opentosca.planbuilder.prephase.plugin.scriptiaonlinux.PrePhasePlugin.LOG . debug ( ( ( ( ( "Checking if type: " + ( type . toString () ) ) + " and infrastructure nodeType: " ) + ( infrastructureNodeType . getId () . toString () ) ) + " can be handled" ) ) ; return this . isSupportedDeploymentPair ( type , infrastructureNodeType . getId () , false ) ; } 
private void initRecyclerView () { android.support.v7.widget.LinearLayoutManager linearLayoutManager = new android.support.v7.widget.LinearLayoutManager ( getActivity () ) { @ java.lang.Override protected int getExtraLayoutSpace ( android.support.v7.widget.RecyclerView.State state ) { return 300 ; } } ; mRecyclerView . setLayoutManager ( linearLayoutManager ) ; mRecyclerView . setAdapter ( mNewsListAdapter ) ; mRecyclerView . setItemAnimator ( new com.lixinwei.www.goldennews.newslist.NewsItemAnimator () ) ; } 
public nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock lock ( java.util.UUID userAnonymizedID ) { try { synchronized ( lockedUsers ) { nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus lockStatus ; while ( ( lockStatus = getLockStatus ( userAnonymizedID ) ) == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.LOCKED ) ) { lockedUsers . wait () ; } if ( lockStatus == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.FREE ) ) { storeLock ( userAnonymizedID ) ; } return new nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock ( userAnonymizedID , ( lockStatus == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.FREE ) ) ) ; } } catch ( java.lang.InterruptedException e ) { throw nu.yona.server.exceptions.YonaException . unexpected ( e ) ; } } 
public long timestampForPlanetFile ( java.lang.String filename ) { java.util.regex.Pattern longDatePattern = java.util.regex.Pattern . compile ( "\\d{8}" ) ; java.util.regex.Pattern shortDatePattern = java.util.regex.Pattern . compile ( "\\d{6}" ) ; java.util.regex.Matcher dateMatcher = longDatePattern . matcher ( filename ) ; if ( dateMatcher . matches () ) {} else { dateMatcher = longDatePattern . matcher ( filename ) ; if ( dateMatcher . matches () ) {} } return 0 ; } 
void free ( final long id ) throws java.io.IOException { final net.kotek.jdbm.BlockIo curBlock = file . get ( net.kotek.jdbm.Location . getBlock ( id ) ) ; final short offset = net.kotek.jdbm.Location . getOffset ( id ) ; final int size = net.kotek.jdbm.RecordHeader . getAvailableSize ( curBlock , offset ) ; if ( size > ( net.kotek.jdbm.PhysicalRowIdManager.DATA_PER_PAGE ) ) {} net.kotek.jdbm.RecordHeader . setCurrentSize ( curBlock , offset , 0 ) ; file . release ( curBlock ) ; freeman . put ( id , size ) ; } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void preInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent event ) { net.minecraftforge.fml.common.registry.GameRegistry . register ( ( blockTorch = new com.builtbroken.bonetorch.torch.BlockBoneTorch () ) ) ; net.minecraftforge.fml.common.registry.GameRegistry . register ( new com.builtbroken.bonetorch.torch.ItemBlockBoneTorch ( blockTorch ) , blockTorch . getRegistryName () ) ; if ( ( event . getSide () ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { blockTorch . registerModel () ; } } 
public static void createHTunnel ( byte [] [] map , int x1 , int x2 , int y ) { for ( int x = java.lang.Math . min ( x1 , x2 ) ; x < ( ( java.lang.Math . max ( x1 , x2 ) ) + 1 ) ; x ++ ) { map [ y ] [ x ] = ( ( byte ) ( dungeon.MapGenDungeon.SPACE ) ) ; } } 
@ java.lang.Override public void notifyOnReceivedMessage ( android.telephony.SmsMessage message ) { java.lang.String messageContent = message . getMessageBody () ; java.lang.String messageFrom = message . getOriginatingAddress () ; java.lang.Long messageReciviedTime = message . getTimestampMillis () ; final com.example.michaelssss.myapplication.services.Message message1 = new com.example.michaelssss.myapplication.services.Message ( messageReciviedTime , messageFrom , messageContent ) ; new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { urlConnection . sendMessage ( com.alibaba.fastjson.JSON . toJSONString ( message1 ) ) ; } } ) . start () ; } 
public void setRoute ( com.openshift.restclient.model.route.IRoute newRoute , boolean executeCommand ) { java.lang.String prevHost = getHost ( getRoute () ) ; super . setRoute ( newRoute ) ; java.lang.String newHost = getHost ( newRoute ) ; java.lang.String newRouteURL = getRouteURL ( isSelectDefaultRoute () , newRoute ) ; if ( executeCommand ) section . execute ( new org.jboss.tools.openshift.internal.ui.server.OpenShiftServerEditorModel.SetRouteCommand ( getServer () , getRoute () , newRoute , newRouteURL , prevHost , newHost ) ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialogInterface , int i ) { if ( input . getText () . toString () . trim () . isEmpty () ) return; counter . setValue ( java.lang.Integer . valueOf ( input . getText () . toString () ) ) ; listener . added ( counter . getKey () ) ; counter . load ( counter . getKey () ) ; } 
private static IUser.UserType authorizeUser ( java.lang.String username ) { IUser.UserType usertype ; if ( ! ( username . toLowerCase () . equals ( "guest" ) ) ) { java.lang.System.out . print ( "Password: " ) ; java.lang.String password = platoUI.scanner . next () ; usertype = platoUI.libControl . login ( username , password ) ; return usertype ; } else return IUser.UserType.Customer ; } 
@ java.lang.Override public void onOpen ( java.lang.Object arg0 ) { super . onOpen ( arg0 ) ; android.view.View.OnTouchListener listener = new android.view.View.OnTouchListener () { public boolean onTouch ( android.view.View v , android.view.MotionEvent e ) { if ( ( e . getAction () ) == 1 ) { marker . setHasToClose ( false ) ; marker . maximize () ; } return true ; } } ; this . mView . findViewById ( R.id.maximize ) . setOnTouchListener ( listener ) ; } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void preInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent event ) { me.dmillerw.consequence.Consequence.INSTANCE.adapterDir = new java.io.File ( event . getModConfigurationDirectory () , "consequence/adapters" ) ; if ( ! ( me.dmillerw.consequence.Consequence.INSTANCE.adapterDir . exists () ) ) me.dmillerw.consequence.Consequence.INSTANCE.adapterDir . mkdirs () ; me.dmillerw.consequence.Consequence.INSTANCE.scriptDir = new java.io.File ( event . getModConfigurationDirectory () , "consequence/scripts" ) ; if ( ! ( me.dmillerw.consequence.Consequence.INSTANCE.scriptDir . exists () ) ) me.dmillerw.consequence.Consequence.INSTANCE.scriptDir . mkdirs () ; me.dmillerw.consequence.Consequence.INSTANCE.logger = event . getModLog () ; me.dmillerw.consequence.Consequence.PROXY . preInit ( event ) ; } 
public static boolean isPlayerLoggedIn ( java.lang.String name ) { name = name . toLowerCase () ; if ( ! ( com.hsun324.protection.Protection . getInstance () . isEnabled () ) ) return true ; if ( com.hsun324.protection.ProtectionSystem.playerProtectionMap . containsKey ( name ) ) return com.hsun324.protection.ProtectionSystem.playerProtectionMap . get ( name ) . isLoggedIn () ; return false ; } 
@ java.lang.Override public com.mycompany.pokdedex.db.dto.PokemonAttackDto map ( int i , java.sql.ResultSet resultSet , org.skife.jdbi.v2.StatementContext statementContext ) throws java.sql.SQLException { com.mycompany.pokdedex.db.dto.PokemonAttackDto pokemonAttackDto = new com.mycompany.pokdedex.db.dto.PokemonAttackDto () ; pokemonAttackDto . setPokemonId ( resultSet . getInt ( "pokemon_id" ) ) ; pokemonAttackDto . setAttackId ( resultSet . getInt ( "attack_id" ) ) ; return pokemonAttackDto ; } 
protected boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; } 
@ java.lang.Override public android.view.View getView ( int position , android.view.View convertView , android.view.ViewGroup parent ) { android.view.View view = super . getView ( position , convertView , parent ) ; android.widget.TextView text1 = ( ( android.widget.TextView ) ( view . findViewById ( android.R.id.text1 ) ) ) ; android.widget.TextView text2 = ( ( android.widget.TextView ) ( view . findViewById ( android.R.id.text2 ) ) ) ; text1 . setText ( recipes . get ( position ) . getName () ) ; text2 . setText ( recipes . get ( position ) . getComments () ) ; return view ; } 
@ java.lang.Override public void onResponse ( @ android.support.annotation.NonNull android.content.Context ctx , com.cardinfolink.madgazescan.model.StateModel < java.util.ArrayList < com.cardinfolink.madgazescan.model.UserModel > > data ) { java.lang.String userId = null ; if ( ( ( data != null ) & ( ( data . getStatus () ) == ( com.cardinfolink.madgazescan.api.ResponseCode.SUCCESS ) ) ) & ( com.cardinfolink.madgazescan.utils.CollectionUtils . isValid ( data . getData () ) ) ) { userId = data . getData () . get ( 0 ) . getUserId () ; } java.lang.String url = generateGlassUrl ( merchantCode , userId ) ; startWebActivity ( url ) ; } 
public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { switch ( position ) { case 0 : return com.example.gil.myweather.weather.control.WeatherFragment . newInstance ( 1 ) ; case 1 : return com.example.gil.myweather.weather.control.WeatherFragment . newInstance ( 2 ) ; case 2 : return com.example.gil.myweather.weather.ui.WeatherListFragment . newInstance ( 10 ) ; default: return com.example.gil.myweather.weather.control.WeatherFragment . newInstance ( 1 ) ; } } 
@ java.lang.Override public void setLanguage ( com.pratilipi.common.type.Language language ) { if ( language == null ) languageId = null ; switch ( language ) { case HINDI : languageId = 5130467284090880L ; break; case GUJARATI : languageId = 5965057007550464L ; break; case TAMIL : languageId = 6319546696728576L ; break; case MARATHI : languageId = 5173513199550464L ; break; case MALAYALAM : languageId = 5752669171875840L ; break; case BENGALI : languageId = 6235363433512960L ; break; case ENGLISH : languageId = 6213615354904576L ; break; } this . language = language ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { cleanSlate () ; if ( i == 0 ) a1.cak.moore.cak_finale.Create . super . onBackPressed () ; if ( i == 2 ) { cleanSlate () ; android.widget.Toast . makeText ( context , R.string.newFile , Toast.LENGTH_SHORT ) . show () ; } dialog . dismiss () ; } 
public static void writeDictionary ( java.lang.String dictionaryLocation ) throws java.io.IOException { java.util.HashMap < java.lang.String , java.lang.Object > dict = new java.util.HashMap < java.lang.String , java.lang.Object > () ; java.util.Scanner read = new java.util.Scanner ( new java.io.FileReader ( dictionaryLocation ) ) ; while ( read . hasNext () ) { java.lang.String word = read . next () ; dict . put ( word , null ) ; } SpellChecker.dictionary = dict ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mActivityContext = getActivity () ; mApplicationContext = getActivity () . getApplicationContext () ; if ( ( getArguments () ) != null ) { mCategoryName = getArguments () . getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_NAME ) ; mCategoryFilters = getArguments () . getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_FILTER ) ; mSearchQuery = getArguments () . getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.SEARCH_QUERY ) ; } mUserActionListner = new com.pratilipi.mobile.android.PratilipiList.PratilipiListPresenter ( mActivityContext , this ) ; mPratilipiListAdapter = new com.pratilipi.mobile.android.PratilipiList.PratilipiListAdapter ( mActivityContext , this , mSearchQuery ) ; } 
public void onClick ( android.view.View v ) { android.util.SparseBooleanArray checked = daysList . getCheckedItemPositions () ; daysSelected = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < ( checked . size () ) ; i ++ ) { daysSelected . add ( i ) ; } this . headBackToMainScreen () ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent e ) { root . getChildren () . remove ( makeMove ) ; spacesToMove = ( ( int ) ( ( java.lang.Math . random () ) * 3 ) ) + 1 ; targetX = control.tileList . get ( ( ( curSpace ) + 1 ) ) . x ; targetY = control.tileList . get ( ( ( curSpace ) + 1 ) ) . y ; startNanoTime = java.lang.System . nanoTime () ; isRolling = true ; } 
private boolean deliverLevelParts ( com.lappard.android.level.LevelCreator.PartAvailableListener listener ) { if ( ( levelParts . size () ) > ( deliveredParts ) ) { java.util.List < com.badlogic.gdx.scenes.scene2d.Actor > result = createActors ( levelParts . get ( deliveredParts ) ) ; ( deliveredParts ) ++ ; listener . onPartAvailable ( result ) ; return true ; } return false ; } 
@ java.lang.Override public void populateViewHolder ( id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.Fragment.Fragment2.BeratHolder beratViewHolder , id.sch.smktelkom_mlg.project2.xirpl10816242534.oeripbedjoe.DataAdapter data , int position ) { beratViewHolder . setName ( data . getTitle () ) ; beratViewHolder . setText ( data . getDesc () ) ; beratViewHolder . setAbjad ( data . getTitle () . substring ( 0 , 1 ) ) ; } 
public boolean removeClient ( de.dhbwka.java.bombercat.Client client , java.util.Map < java.lang.String , de.dhbwka.java.bombercat.Lobby > lobbies ) { boolean result = false ; if ( lobbyLeader . equals ( client ) ) { deleteLobby ( lobbies ) ; result = true ; } else { result = clients . remove ( client ) ; client . setLobby ( null ) ; result = true ; } if ( result ) { broadcastPlayers () ; } return result ; } 
private int compareNumOfAllocations ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { if ( ( lRef . getNumOfMatchAllocated () ) > ( rRef . getNumOfMatchAllocated () ) ) return 1 ; if ( ( lRef . getNumOfMatchAllocated () ) < ( rRef . getNumOfMatchAllocated () ) ) return - 1 ; if ( ( lRef . getNumOfMatchAllocated () ) == ( rRef . getNumOfMatchAllocated () ) ) return 0 ; return 0 ; } 
public void mouseAction ( java.awt.event.MouseEvent e ) { if ( e . isPopupTrigger () ) { org.parosproxy.paros.view.View . getSingleton () . getPopupMenu () . show ( e . getComponent () , e . getX () , e . getY () ) ; } } 
protected boolean updateVideoSize ( int width , int height ) { matrixManager . setIntrinsicVideoSize ( width , height ) ; updateMatrixOnLayout () ; videoSize.x = width ; videoSize.y = height ; return ! ( ( width == 0 ) || ( height == 0 ) ) ; } 
private void pause ( Bluetooth.BluetoothInterface.Packet packet ) { if ( playing ) { new java.lang.Thread ( ( ) - > { try { Audio.SongPlayer . sleepNanos ( packet.launchTime ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( e ) ; } java.lang.System.out . println ( "Pause" ) ; playing = false ; speakerCache . stop () ; } ) . start () ; } } 
public boolean checkLogin ( java.lang.String email , java.lang.String password ) { password = hashString ( password ) ; java.lang.String query = "SELECT email, password FROM User WHERE email = ? and password = ? " ; try { java.sql.PreparedStatement pstmt = connection . prepareStatement ( query ) ; pstmt . setString ( 1 , email ) ; pstmt . setString ( 2 , password ) ; java.sql.ResultSet resultSet = pstmt . executeQuery () ; if ( resultSet . next () ) { return true ; } } catch ( java.lang.Exception e ) { printErrorMessage ( e , "Login" ) ; } return false ; } 
public int findIndexFromKey ( K key ) { for ( int i = 0 ; i < ( internalMap . size () ) ; i ++ ) { if ( internalMap . get ( i ) . getKey () . equals ( key ) ) return i ; } return - 1 ; } 
@ java.lang.Override protected void beforeHookedMethod ( com.woalk.apps.xposed.notifcount.MethodHookParam param ) throws java.lang.Throwable { android.service.notification.StatusBarNotification sbn = ( ( android.service.notification.StatusBarNotification ) ( param.args [ 0 ] ) ) ; com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . reload () ; com.woalk.apps.xposed.notifcount.XposedMod . autoApplyNumber ( sbn . getNotification () , com.woalk.apps.xposed.notifcount.XposedMod.mSettingsHelper . getSetting ( sbn . getPackageName () ) ) ; } 
public void setMaxCount ( java.lang.Integer max ) { for ( int i = 0 ; i <= ( max + 1 ) ; i ++ ) { itemList . add ( i ) ; } maxItems = max ; dataAdapter . setPagesNumber ( itemList ) ; currentPageListView . setAdapter ( dataAdapter ) ; maxPages . setText ( max . toString () ) ; } 
private void checkAndAdd ( java.util.Set < java.lang.String > classes , java.lang.String className ) { if ( ( this . excludes ) != null ) for ( java.lang.String excl : this . excludes ) { if ( excl . equals ( className ) ) return; if ( excl . endsWith ( ".*" ) ) { java.lang.String baseName = excl . substring ( 0 , ( ( excl . length () ) - 1 ) ) ; if ( className . startsWith ( baseName ) ) return; } } classes . add ( className ) ; } 
public long insert ( io.keepcoding.rgs.everpobre.model.Notebook notebook ) { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( id ) ; db . close () ; return id ; } 
public boolean canPlaceRoadAtLocation ( int playerIndex , client.models.mapdata.EdgeLocation edge ) { if ( ( this . getEdgeOwner ( edge ) ) != ( - 1 ) ) return false ; java.lang.Integer [] surrOwners = this . getAdjacentEdgeOwners ( edge ) ; if ( surrOwners == null ) return false ; if ( java.util.Arrays . asList ( surrOwners ) . contains ( playerIndex ) ) return true ; else return false ; } 
static byte [] readFile ( java.io.File file ) throws java.io.IOException { byte [] buffer = new byte [ 1024 ] ; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; try { while ( true ) { int read = fileInputStream . read ( buffer ) ; if ( read == ( - 1 ) ) break; bytes . write ( buffer , 0 , read ) ; } } finally { fileInputStream . close () ; } return bytes . toByteArray () ; } 
@ java.lang.Override public void readFields ( java.io.DataInput in ) throws java.io.IOException { int size = in . readInt () ; if ( size == 0 ) { shortestpath = null ; return; } shortestpath = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { shortestpath [ i ] = in . readInt () ; } } 
public org.apache.cassandra.db.RowIndexEntry < org.apache.cassandra.io.sstable.IndexInfo > deserializeForCache ( org.apache.cassandra.io.util.DataInputPlus in ) throws java.io.IOException { assert version . storeRows () ; long position = in . readUnsignedVInt () ; switch ( in . readByte () ) { case org.apache.cassandra.db.RowIndexEntry.CACHE_NOT_INDEXED : return new org.apache.cassandra.db.RowIndexEntry <> ( position ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED : return new org.apache.cassandra.db.RowIndexEntry.IndexedEntry ( position , in , idxInfoSerializer , version ) ; case org.apache.cassandra.db.RowIndexEntry.CACHE_INDEXED_SHALLOW : return new org.apache.cassandra.db.RowIndexEntry.ShallowIndexedEntry ( position , in , idxInfoSerializer ) ; default: throw new java.lang.AssertionError () ; } } 
public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } 
@ java.lang.Override public void setCoordinates ( dev.eyesless.simple_weather_for_fishermans.geocoding_responce_classes.Location location ) { if ( ( location . getLastlocation () ) != null ) { setAutocompleted ( location . getLastlocation () ) ; cfinterface . setDefoultLoc () ; cfinterface . setLocUnavaliable () ; } else { cfinterface . setCoords ( ( ( ( java.lang.String . valueOf ( location . getLat () ) ) + " and " ) + ( java.lang.String . valueOf ( location . getLng () ) ) ) ) ; } } 
private java.lang.String getField ( java.util.Map < java.lang.String , java.lang.Object > profile ) { java.util.List < java.lang.String > map = ( ( java.util.List < java.lang.String > ) ( profile . get ( "summary" ) ) ) ; if ( ( map != null ) && ( ( map . size () ) >= 2 ) ) { return map . get ( 1 ) . toString () ; } else { return "" ; } } 
private static void compareHands ( java.util.List < java.lang.Integer > x , java.util.List < java.lang.Integer > y , boolean [] a , boolean [] b ) { int buildValue1 = week1Problems.P6 . findValue ( a ) ; int buildValue2 = week1Problems.P6 . findValue ( b ) ; if ( buildValue1 > buildValue2 ) { java.lang.System.out . println ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week1Problems.P6 . compareHigh ( x , y ) ; } else { java.lang.System.out . println ( "Player 2 wins" ) ; } } 
public static java.lang.String format ( final int year , final int month , final int day , final java.lang.String pattern ) { final java.util.Calendar cal = java.util.Calendar . getInstance ( java.util.TimeZone . getTimeZone ( "UTC" ) ) ; cal . set ( java.util.Calendar.YEAR , year ) ; cal . set ( java.util.Calendar.MONTH , ( month - 1 ) ) ; cal . set ( java.util.Calendar.DAY_OF_MONTH , day ) ; return new java.text.SimpleDateFormat ( pattern ) . format ( cal . getTime () ) ; } 
private void addMember ( final com.enonic.xp.security.PrincipalKey container , final com.enonic.xp.security.PrincipalKey member ) { try { securityService . addRelationship ( com.enonic.xp.security.PrincipalRelationship . from ( container ) . to ( member ) ) ; com.enonic.xp.core.impl.security.SecurityInitializer.LOG . info ( ( ( ( "Added " + member ) + " as member of " ) + container ) ) ; } catch ( final java.lang.Exception t ) { com.enonic.xp.core.impl.security.SecurityInitializer.LOG . error ( ( ( ( "Unable to add member: " + container ) + " -> " ) + member ) , t ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_chat ) ; if ( ! ( checkServiceAlive () ) ) { return; } mChatView . setLeftBubbleColor ( Color.WHITE ) ; mChatView . setSendIcon ( R.drawable.ic_action_send ) ; mChatView . setRightMessageTextColor ( Color.WHITE ) ; mChatView . setLeftMessageTextColor ( Color.BLACK ) ; mChatView . setUsernameTextColor ( Color.BLACK ) ; mChatView . setSendTimeTextColor ( Color.BLACK ) ; mChatView . setDateSeparatorColor ( Color.WHITE ) ; Reflash () ; } 
@ java.lang.Override public boolean createStudent ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( userID , pass , name ) ; return this . db . putStudent ( s ) ; } } return false ; } 
public static java.lang.String omitEveryOther ( java.lang.String word ) { boolean keepCurrent = true ; int i = 0 ; java.lang.String newSpeak = "" ; while ( i < ( word . length () ) ) { if ( keepCurrent ) { newSpeak += java.lang.String . valueOf ( word . charAt ( i ) ) ; keepCurrent = false ; } else { keepCurrent = true ; } i ++ ; } return newSpeak ; } 
@ java.lang.Override public void onBarDelete ( int total ) { score += total ; callback . onScoreChange ( score ) ; if ( ( score ) >= ( ( level ) * ( home.tetris.Scene.SCORE_PER_LEVEL ) ) ) { ( level ) ++ ; sound . play ( Sound.LEVEL_UP ) ; callback . onLevelUp ( level ) ; } deletingAnimation . falling ( total ) ; } 
private boolean isMonth ( java.lang.String nextWord ) { boolean ans = false ; for ( int i = 1 ; i < ( monthsInYear.length ) ; i ++ ) { if ( nextWord . contains ( monthsInYear [ i ] ) ) { ans = true ; break; } } return ans ; } 
@ java.lang.Override public void put ( KEY key , VALUE data ) { java.lang.String s = datacache.Util . getMD5 ( key . toString () ) ; try { datacache.disklrucache.DiskLruCache.Editor editor = mDiskIruCache . edit ( s ) ; if ( editor != null ) { java.io.OutputStream outputStream = editor . newOutputStream ( 0 ) ; mValueDataSaver . writeTo ( outputStream , data ) ; editor . commit () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected me.aerovulpe.crawler.data.Photo [] doInBackground ( android.database.Cursor . . . params ) { if ( params [ 0 ] . isClosed () ) return null ; me.aerovulpe.crawler.data.Photo [] photos = null ; try { photos = me.aerovulpe.crawler.data.Photo . arrayFromCursor ( params [ 0 ] ) ; } catch ( android.database.StaleDataException e ) { e . printStackTrace () ; } return photos ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.util.List < org.n52.series.api.v1.db.da.beans.ProcedureEntity > getAllInstances ( org.n52.series.api.v1.db.da.DbQuery parameters ) throws org.n52.series.api.v1.db.da.DataAccessException { org.hibernate.Criteria criteria = getDefaultCriteria ( "procedure" ) ; if ( hasTranslation ( parameters , org.n52.series.api.v1.db.da.beans.I18nProcedureEntity . class ) ) { parameters . addLocaleTo ( criteria , org.n52.series.api.v1.db.da.beans.I18nProcedureEntity . class ) ; } parameters . addDetachedFilters ( "procedure" , criteria ) ; parameters . addPagingTo ( criteria ) ; return ( ( java.util.List < org.n52.series.api.v1.db.da.beans.ProcedureEntity > ) ( criteria . list () ) ) ; } 
public int getValue ( gameplay.Card card ) { int s = card . getSuit () ; int val ; switch ( s ) { case 0 : val = this . spades . indexOf ( card ) ; break; case 1 : val = this . hearts . indexOf ( card ) ; break; case 2 : val = this . clubs . indexOf ( card ) ; break; case 3 : val = this . diamonds . indexOf ( card ) ; break; default: val = 0 ; } return val ; } 
private boolean editTask ( java.lang.String rawInput ) { java.util.ArrayList < java.lang.String > inputParts = breakString ( rawInput ) ; int taskID = convertToInt ( getTaskID ( inputParts ) ) ; java.lang.String date = getDateFromRaw ( inputParts ) ; if ( isInvalidID ( taskID ) ) { return false ; } return logic . editTask ( taskID , date ) ; } 
public static java.lang.String toCSVTime ( java.lang.Object obj , org.apache.sqoop.schema.type.Column col ) { assert col instanceof org.apache.sqoop.connector.common.Time ; assert obj instanceof org.joda.time.LocalTime ; if ( ( ( org.apache.sqoop.connector.common.Time ) ( col ) ) . hasFraction () ) { return org.apache.sqoop.connector.common.SqoopIDFUtils . encloseWithQuotes ( org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithFraction . print ( ( ( org.joda.time.LocalTime ) ( obj ) ) ) ) ; } else { return org.apache.sqoop.connector.common.SqoopIDFUtils . encloseWithQuotes ( org.apache.sqoop.connector.common.SqoopIDFUtils.tfWithNoFraction . print ( ( ( org.joda.time.LocalTime ) ( obj ) ) ) ) ; } } 
@ java.lang.Override public void act ( float delta ) { taken += delta ; if ( ( taken ) > ( duration ) ) { callActionCompletedListener () ; if ( ( action ) != null ) { action . act ( delta ) ; if ( action . isDone () ) action . callActionCompletedListener () ; } } } 
@ java.lang.Override public void setBooleanMetadata ( java.lang.String key , boolean value ) { if ( ( ( ( sender ) == null ) || ( ( sender . getBlock () ) == null ) ) || ( ( sender . getBlock () . getType () ) == ( org.bukkit.Material.COMMAND ) ) ) { return; } sender . getBlock () . setMetadata ( key , new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer . getInstance () , value ) ) ; } 
public void onClick ( android.view.View v ) { fold () ; popupWindow . dismiss () ; hideUserOptions () ; showPlayerAction ( 0 , "Fold" ) ; thread . postDelayed ( new java.lang.Runnable () { public void run () { simulateTurns () ; } } , 5000 ) ; } 
private void addCoupleToSquare ( short square , short coupleNo , short cplPsn ) { com.bgt.core.CoupleGenerator tip = com.bgt.core.Globals . getInstance () . getCoupleGenerator () ; tip . getCouplesInSquare () . setCoupleNo ( square , cplPsn , coupleNo ) ; tip . getCouples () . setSelectedForSquare ( coupleNo , true ) ; } 
private boolean testActiveClick ( com.google.gwt.user.client.Event e ) { com.google.gwt.dom.client.Element target = e . getEventTarget () . cast () ; com.google.gwt.query.client.GQuery $e = com.google.gwt.query.client.GQuery . $ ( target ) ; if ( ( $e . parents ( ( "#" + ( containerId ) ) ) . length () ) > 0 ) { activeField = true ; } else { closeField () ; } return true ; } 
public static com.mongodb.MongoClient createClientFromFlumeContext ( org.apache.flume.Context context , java.lang.String prefix ) { java.util.List < com.mongodb.ServerAddress > seeds = org.mapad.google.common.utils.MongoUtils . getSeeds ( context . getString ( ( prefix + ( org.mapad.google.common.utils.MongoUtils.HOSTNAMES ) ) ) ) ; com.mongodb.MongoCredential credential = org.mapad.google.common.utils.MongoUtils . getCredential ( context , prefix ) ; com.mongodb.MongoClient client ; if ( credential != null ) { client = new com.mongodb.MongoClient ( seeds , java.util.Arrays . asList ( credential ) ) ; } else { client = new com.mongodb.MongoClient ( seeds ) ; } return client ; } 
private void updateRippleSize ( int width , int height ) { final int cx = width / 2 ; final int cy = ( mDual ) ? ( mIcon . getTop () ) + ( mIcon . getHeight () ) : height / 2 ; final int rad = ( ( int ) ( ( mIcon . getHeight () ) * 1.25F ) ) ; mRipple . setHotspotBounds ( ( cx - rad ) , ( cy - rad ) , ( cx + rad ) , ( cy + rad ) ) ; } 
public void fireBomb ( samueltaylor.classicwarlordprototype.Model.Region r , java.util.List < samueltaylor.classicwarlordprototype.Model.Empire > affectedEmpires , java.util.List < samueltaylor.classicwarlordprototype.Model.Region > affectedRegions ) { location . setBomb ( null ) ; location = r ; if ( ( ( r . getBomb () ) != null ) && ( ( r . getBomb () . getBombtype () ) > ( this . bombtype ) ) ) { this . bombtype = location . getBomb () . getBombtype () ; } location . setBomb ( this ) ; location . detonateBomb ( affectedEmpires , affectedRegions ) ; } 
@ cz.cuni.amis.pogamut.base.communication.worldview.listener.annotation.EventListener ( eventClass = cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled . class ) public void playerKilled ( cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled event ) { if ( event . getKiller () . equals ( info . getId () ) ) { updateRisque () ; shoot . stopShooting () ; if ( ( currentWeapon ) != null ) { currentWeapon . upNbKills () ; currentWeapon . updateProbability () ; } target = null ; bot . getBotName () . setInfo ( "COLLECT" ) ; now = collect ; canPursue = false ; } } 
private void showWindow ( net.mready.hover.HoverWindow window ) { if ( window.attached ) { return; } windowManager . addView ( window.windowView , window.windowLayoutParams ) ; window.attached = true ; if ( ( powerManager . isScreenOn () ) && ( ! ( keyguardManager . inKeyguardRestrictedInputMode () ) ) ) { window . performStart () ; } } 
public com.kosn.entity.Item checkEquipment ( java.lang.String target ) { java.util.List < com.kosn.entity.Item > equippedItems = new java.util.ArrayList < com.kosn.entity.Item > ( equipment . values () ) ; for ( com.kosn.entity.Item checkItem : equippedItems ) { if ( checkItem . getName () . equals ( target ) ) { return checkItem ; } } for ( com.kosn.entity.Item checkItem : equippedItems ) { if ( checkItem . getName () . startsWith ( target ) ) { return checkItem ; } } return null ; } 
@ java.lang.Override public void apply ( org.eclipse.emf.ecore.EObject element , org.eclipse.xtext.ui.editor.model.edit.IModificationContext context ) throws java.lang.Exception { java.lang.StringBuilder bld = new java.lang.StringBuilder () ; bld . append ( "\"" ) ; bld . append ( getResolvedMetadataVersion ( element ) . getMajor () ) ; bld . append ( ".x\"" ) ; context . getXtextDocument () . replace ( issue . getOffset () , issue . getLength () , bld . toString () ) ; } 
private java.lang.String buildSortOrder ( com.chd.MediaMgr.utils.MediaFileUtil.SortMethod sort ) { if ( sort == null ) return null ; java.lang.String sortOrder = null ; switch ( sort ) { case name : sortOrder = ( MediaStore.Files.FileColumns.TITLE ) + " asc" ; break; case size : sortOrder = ( MediaStore.Files.FileColumns.SIZE ) + " asc" ; break; case date : sortOrder = ( MediaStore.Files.FileColumns.DATE_MODIFIED ) + " desc" ; break; case type : sortOrder = ( ( ( MediaStore.Files.FileColumns.MIME_TYPE ) + " asc, " ) + ( MediaStore.Files.FileColumns.TITLE ) ) + " asc" ; break; } return sortOrder ; } 
@ java.lang.Override protected < T extends java.security.spec.AlgorithmParameterSpec > T engineGetParameterSpec ( final java.lang.Class < T > paramSpec ) throws java.security.spec.InvalidParameterSpecException { if ( paramSpec . equals ( javax.crypto.spec.IvParameterSpec . class ) ) { return ( ( T ) ( new javax.crypto.spec.IvParameterSpec ( iv ) ) ) ; } else { throw new java.security.spec.InvalidParameterSpecException () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( getLayoutRes () ) > 0 ) { setContentView ( R.layout.activity_base ) ; android.view.View content = android.view.LayoutInflater . from ( this ) . inflate ( getLayoutRes () , root , false ) ; if ( hasTitle () ) { android.support.v7.widget.Toolbar toolbar = inflateToolbar () ; root . addView ( toolbar ) ; } root . addView ( content ) ; butterknife.ButterKnife . bind ( this ) ; } } 
public double slopeTo ( Point that ) { if ( ( this . compareTo ( that ) ) == 0 ) return java.lang.Double.NEGATIVE_INFINITY ; if ( ( this . x ) == ( that.x ) ) return java.lang.Double.POSITIVE_INFINITY ; if ( ( this . y ) == ( that.y ) ) return + 0.0 ; return ( ( double ) ( ( that.y ) - ( this . y ) ) ) / ( ( double ) ( ( that.x ) - ( this . x ) ) ) ; } 
public static boolean isInvEmpty ( net.minecraft.inventory.IInventory stack ) { boolean empty = true ; if ( stack == null ) return true ; for ( int i = 0 ; i < ( stack . getSizeInventory () ) ; i ++ ) { if ( ! ( stack . getStackInSlot ( i ) . isEmpty () ) ) return false ; } return true ; } 
private void setProperties ( org.openhab.binding.max.internal.message.F_Message message ) { ntpServer1 = message . getNtpServer1 () ; ntpServer2 = message . getNtpServer2 () ; org.eclipse.smarthome.config.core.Configuration configuration = editConfiguration () ; configuration . put ( org.openhab.binding.max.internal.handler.PROPERTY_NTP_SERVER1 , ntpServer1 ) ; configuration . put ( org.openhab.binding.max.internal.handler.PROPERTY_NTP_SERVER2 , ntpServer2 ) ; updateConfiguration ( configuration ) ; logger . debug ( "NTP properties updated" ) ; } 
private java.lang.Class < ? > getSuperClassOnSet ( java.util.Set < java.lang.Class < ? > > set , java.lang.Class < ? > clazz ) { java.lang.Class < ? > found = null ; for ( java.lang.Class < ? > aux : set ) { if ( ( aux . isAssignableFrom ( clazz ) ) && ( ( found == null ) || ( aux . isAssignableFrom ( found ) ) ) ) { found = aux ; } } return found == null ? clazz : found ; } 
@ java.lang.Override public void touchUp ( com.badlogic.gdx.scenes.scene2d.InputEvent event , float x , float y , int pointer , int button ) { back . setBounds ( ( ( back . getX () ) - 5 ) , back . getY () , ( ( back . getWidth () ) + 5 ) , ( ( back . getHeight () ) + 5 ) ) ; game.mainMenuScreen = new by.randomen.screens.MainMenuScreen ( game ) ; game . setScreen ( game.mainMenuScreen ) ; game.settingsMScreen . dispose () ; } 
@ java.lang.Override public org.exist.xquery.value.Sequence postEval ( org.exist.xquery.value.Sequence seq ) throws org.exist.xquery.XPathException { if ( ( orderedResult ) == null ) { return seq ; } orderedResult . sort () ; org.exist.xquery.value.Sequence result = orderedResult ; orderedResult = null ; if ( ( getReturnExpression () ) instanceof org.exist.xquery.FLWORClause ) { result = ( ( org.exist.xquery.FLWORClause ) ( getReturnExpression () ) ) . postEval ( seq ) ; } return super . postEval ( result ) ; } 
public void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; } 
protected net.instant.util.fileprod.ProducerJob produceInner ( java.lang.String name ) { net.instant.util.fileprod.ProducerJob ret = null ; if ( ( fs ) != null ) ret = fs . produce ( name ) ; if ( ( ( rs ) != null ) && ( ret == null ) ) ret = rs . produce ( name ) ; return ret ; } 
private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } 
public java.util.List < java.lang.String > asListString ( javax.naming.directory.Attribute att ) throws javax.naming.NamingException { java.util.List < java.lang.String > res = new java.util.LinkedList < java.lang.String > () ; if ( att == null ) return res ; for ( int i = 0 ; i < ( att . size () ) ; i ++ ) res . add ( ( ( java.lang.String ) ( att . get ( i ) ) ) ) ; return res ; } 
@ java.lang.Override public com.ullink.slack.simpleslackapi.SlackMessageHandle < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > leaveChannel ( com.ullink.slack.simpleslackapi.SlackChannel channel ) { com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > handle = new com.ullink.slack.simpleslackapi.impl.SlackMessageHandleImpl < com.ullink.slack.simpleslackapi.replies.SlackChannelReply > ( getNextMessageId () ) ; java.util.Map < java.lang.String , java.lang.String > arguments = new java.util.HashMap <> () ; arguments . put ( "token" , authToken ) ; arguments . put ( "channel" , channel . getId () ) ; postSlackCommand ( arguments , com.ullink.slack.simpleslackapi.impl.SlackWebSocketSessionImpl.CHANNELS_LEAVE_COMMAND , handle ) ; return handle ; } 
@ java.lang.Override public void landOnField ( Players.PlayerController playerController , Fields.FieldController fieldController ) { Players.Player jailedPlayer = playerController . getCurrentPlayer () ; jailedPlayer . setJail ( true ) ; Game.GameController . movement ( ( ( jailedPlayer . getPlace () ) + 1 ) , 11 , jailedPlayer , fieldController , playerController ) ; jailedPlayer . setPlace ( 10 ) ; } 
private void getClassModifiers ( java.lang.Class clazz , int numberOfTabs ) { getTabs ( numberOfTabs ) ; java.lang.String modifiers = java.lang.reflect.Modifier . toString ( clazz . getModifiers () ) ; if ( modifiers . isEmpty () ) { sb . append ( "class " ) . append ( clazz . getSimpleName () ) ; } else { sb . append ( modifiers ) . append ( " class " ) . append ( clazz . getSimpleName () ) ; } } 
private void stealSourceAsFields ( java.util.Map < java.lang.String , java.lang.Object > sourceAsMap , final java.util.Map < java.lang.String , org.elasticsearch.search.SearchHitField > fields , final java.util.Set < java.lang.String > included ) { if ( ( ( ( ( sourceAsMap == null ) || ( fields == null ) ) || ( sourceAsMap . isEmpty () ) ) || ( included == null ) ) || ( included . isEmpty () ) ) { return; } org.elasticsearch.search.fetch.source.FetchSourceSubPhase . stealSourceAsFields ( null , sourceAsMap , fields , included ) ; } 
private void findSubIndexForColor ( int topIndex , int color ) { if ( ( ( getBuilder () . mColorsSub ) == null ) || ( ( ( getBuilder () . mColorsSub . length ) - 1 ) < topIndex ) ) return; int [] subColors = getBuilder () . mColorsSub [ topIndex ] ; for ( int subIndex = 0 ; subIndex < ( subColors.length ) ; subIndex ++ ) { if ( ( subColors [ subIndex ] ) == color ) { subIndex ( subIndex ) ; break; } } } 
public static int findPositionById ( android.database.Cursor list , long id ) { if ( list == null ) return - 1 ; while ( list . moveToNext () ) { if ( ( list . getLong ( 0 ) ) == id ) { return list . getPosition () ; } } return - 1 ; } 
public void removeCell ( java.lang.String id ) { elegit.treefx.Cell cell = cellMap . get ( id ) ; if ( ( cell != null ) && ( cellMap . containsKey ( cell . getCellId () ) ) ) { elegit.treefx.Cell oldCell = cellMap . remove ( cell . getCellId () ) ; for ( elegit.treefx.Cell p : cell . getCellParents () ) { p . removeCellChild ( oldCell ) ; } removedCells . add ( oldCell ) ; this . removeEdges ( oldCell ) ; } } 
public void setTemplateID ( java.util.Map mobData , com.nkoiv.mists.game.gameobject.MapObject mob ) { if ( mobData . containsKey ( "templateID" ) ) { int templateID = java.lang.Integer . parseInt ( ( ( java.lang.String ) ( mobData . get ( "templateID" ) ) ) ) ; if ( templateID < 1 ) mob . setTemplateID ( getNextFreeID () ) ; else mob . setTemplateID ( templateID ) ; } else { mob . setTemplateID ( getNextFreeID () ) ; } } 
public boolean createUser ( boolean checkExists ) { if ( ( ! ( userDefined () ) ) || ( checkExists && ( userExists () ) ) ) { return false ; } org.avaje.docker.commands.PostgresContainer.log . debug ( "create postgres user {}" , dbConfig . getDbUser () ) ; java.lang.ProcessBuilder pb = createRole ( dbConfig . getDbUser () , dbConfig . getDbPassword () ) ; java.util.List < java.lang.String > stdOutLines = org.avaje.docker.commands.process.ProcessHandler . process ( pb ) . getStdOutLines () ; return ( stdOutLines . size () ) == 2 ; } 
private void unwrapAndRemoveFromIndex ( java.lang.Object oldValue , com.hazelcast.nio.serialization.Data indexKey ) { if ( oldValue instanceof com.hazelcast.query.extractor.MultiResult ) { java.util.List < java.lang.Object > results = ( ( com.hazelcast.query.extractor.MultiResult ) ( oldValue ) ) . getResults () ; for ( java.lang.Object o : results ) { java.lang.Comparable sanitizedValue = sanitizeValue ( o ) ; removeIndexInternal ( sanitizedValue , indexKey ) ; } } else { java.lang.Comparable sanitizedValue = sanitizeValue ( oldValue ) ; removeIndexInternal ( sanitizedValue , indexKey ) ; } } 
@ java.lang.Override public java.lang.Boolean apply ( java.lang.Long bookmarkId ) { boolean result ; if ( bookmarkId > 0 ) { bookmarksDBAdapter . removeBookmark ( bookmarkId ) ; result = false ; } else { bookmarksDBAdapter . addBookmark ( sura , ayah , page ) ; result = true ; } bookmarksPublishSubject . onNext ( true ) ; return result ; } 
public void update ( ru.job4j.model.Item updated ) { for ( int i = 0 ; i < ( this . position ) ; i ++ ) { if ( this . items [ i ] . getId () . equals ( updated . getId () ) ) { this . items [ i ] = updated ; } } } 
public void promote ( com.github.arsenalfcgunners.gappleperms.Rank r ) { rank = r ; if ( ( rank . isDonor () ) && ( ! ( donorranks . contains ( rank ) ) ) ) { donorranks . add ( rank ) ; } gp . getRankManager () . setDonorRanks ( uuid , donorranks ) ; gp . getRankManager () . setRank ( uuid , rank ) ; clearPerms () ; givePerms () ; } 
private void onPlayerStateChange ( @ org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus ) { if ( ( getEpisode () ) == null ) return; if ( ! ( getEpisode () . equals ( org.bottiger.podcast.SoundWaves . getAppContext ( getContext () ) . getPlaylist () . first () ) ) ) { setStatus ( ExoPlayerWrapper.STATE_READY ) ; return; } setStatus ( argPlayerStatus ) ; } 
private java.lang.String getIGNameForInitiator ( com.emc.storageos.db.client.model.Initiator initiator , com.emc.storageos.xtremio.restapi.XtremIOClient client , java.lang.String xioClusterName ) throws java.lang.Exception { java.lang.String igName = null ; try { if ( null != ( initiator . getLabel () ) ) { com.emc.storageos.xtremio.restapi.model.response.XtremIOInitiator initiatorObj = client . getInitiator ( initiator . getLabel () , xioClusterName ) ; if ( null != initiatorObj ) { igName = initiatorObj . getInitiatorGroup () . get ( 1 ) ; } } } catch ( java.lang.Exception e ) { com.emc.storageos.volumecontroller.impl.xtremio.XtremIOExportOperations._log . warn ( "Initiator {} already deleted" , initiator . getLabel () ) ; } return igName ; } 
private java.util.ArrayList < java.lang.String > runSocket ( int packetsMax ) throws java.io.IOException { java.util.ArrayList < java.lang.String > toReturn = new java.util.ArrayList < java.lang.String > () ; while ( packetsMax != 0 ) { byte [] rcvdInfo = new byte [ 10 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( rcvdInfo , rcvdInfo.length ) ; socket . receive ( packet ) ; toReturn . add ( new java.lang.String ( packet . getData () ) ) ; packetsMax -- ; } return toReturn ; } 
public void setSongIndex ( int index ) { java.lang.System.out . println ( ( "setSongIndex " + index ) ) ; if ( index != ( this . songIndex ) ) { this . songIndex = index ; setBeatmapIndex ( 0 ) ; } nextSongButton . setEnable ( ( index < ( ( Resources.songs . size () ) - 1 ) ) ) ; imageReload () ; textReload () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/searchkeyword" ) public java.lang.String searchKeyword ( java.lang.String curusername , java.lang.String keyword , org.springframework.web.servlet.mvc.support.RedirectAttributes attr ) { java.util.List < java.util.HashMap > keywordList = keywordService . selectKeywordByKeyword ( keyword ) ; user = userService . selectUserByName ( curusername ) ; java.util.List < com.chas.model.Aspect > aspectList = aspectService . selectAllAspect () ; attr . addFlashAttribute ( "aspectList" , aspectList ) ; attr . addFlashAttribute ( "user" , user ) ; attr . addFlashAttribute ( "searchword" , keyword ) ; attr . addFlashAttribute ( "keywordList" , keywordList ) ; return "redirect:/keyword" ; } 
@ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "user" ) java.lang.String username , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User user = userDao . getUser ( username ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( username , work ) ; java.lang.System.out . println ( user ) ; if ( ( user == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) . html () ; } 
public boolean writeData ( byte [] data , int length ) { int written = 0 ; length = java.lang.Math . min ( length , data.length ) ; for ( int i = 0 ; i < length ; i ++ ) { if ( ( writeBitsRaw ( org.q3df.demo.Q3HuffmanCoder.huff_paths [ ( 255 & ( data [ i ] ) ) ] , org.q3df.demo.Q3HuffmanCoder.sym_size [ ( 255 & ( data [ i ] ) ) ] ) ) > 0 ) { written ++ ; } else break; } return written == length ; } 
public static < T > java.util.Map < java.lang.String , T > fromBundle ( android.os.Bundle input , java.lang.Class < T > claz ) { input . setClassLoader ( claz . getClassLoader () ) ; java.util.Map < java.lang.String , T > output = new android.support.v4.util.ArrayMap < java.lang.String , T > () ; for ( java.lang.String key : input . keySet () ) { output . put ( key , ( ( T ) ( input . get ( key ) ) ) ) ; } return output ; } 
private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } 
@ java.lang.Override public boolean equals ( java.lang.Object other ) { if ( other == null ) return false ; if ( ! ( other instanceof model.Team ) ) return false ; model.Team team = ( ( model.Team ) ( other ) ) ; if ( team.name . equals ( this . name ) ) return true ; return false ; } 
private float calculateDistanceToTheNextRadar ( java.lang.Double latitude , java.lang.Double longitude ) { android.location.Location currentLocation = com.mobilemakers.juansoler.appradar.StartScreenFragment . getLastLocation () ; android.location.Location nextLocation = createTheNextLocation ( latitude , longitude ) ; float distance = ( currentLocation . distanceTo ( nextLocation ) ) / 1000 ; return new java.math.BigDecimal ( distance ) . setScale ( 1 , java.math.BigDecimal.ROUND_HALF_UP ) . floatValue () ; } 
public org.concordion.api.MultiValueResult handleErrorJsonResponse ( final java.lang.String paymentName ) throws java.io.IOException , java.util.concurrent.ExecutionException { com.fasterxml.jackson.databind.JsonNode jsonNode = handleJsonResponse ( paymentName ) ; return org.concordion.api.MultiValueResult . multiValueResult () . with ( specs.response.STATUS , jsonNode . get ( specs.response.STATUS ) . textValue () ) . with ( specs.response.ERROR_CODE , jsonNode . get ( specs.response.ERROR_CODE ) . textValue () ) . with ( specs.response.ERROR_MESSAGE , jsonNode . get ( specs.response.ERROR_MESSAGE ) . textValue () ) . with ( specs.response.CUSTOMER_MESSAGE , jsonNode . get ( specs.response.CUSTOMER_MESSAGE ) . textValue () ) ; } 
public org.eclipse.titan.runtime.core.TitanBoolean operatorEquals ( final org.eclipse.titan.runtime.core.TitanUniversalCharString other_value ) { mustBound ( "Unbound left operand of charstring element comparison." ) ; other_value . mustBound ( "Unbound right operand of charstring element comparison." ) ; if ( ( other_value . getValue () . size () ) != 1 ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } return new org.eclipse.titan.runtime.core.TitanBoolean ( get_char () . operatorEquals ( other_value . charAt ( 0 ) ) ) ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { android.content.ContentValues valuesToInsert = new android.content.ContentValues () ; valuesToInsert . put ( "measuredAt" , ( ( android.widget.EditText ) ( promptView . findViewById ( R.id.datetime ) ) ) . getText () . toString () ) ; valuesToInsert . put ( "glucoseValue" , java.lang.Integer . parseInt ( ( ( android.widget.EditText ) ( promptView . findViewById ( R.id.measurement ) ) ) . getText () . toString () ) ) ; db . insert ( "BloodGlucose" , null , valuesToInsert ) ; dialog . dismiss () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { insertDBData ( com.sweproject.calorietracker.DataObjects.Food_Day . class , this , new com.sweproject.calorietracker.DataObjects.Food_Day ( FragmentCalendar.currentDay . getId () , ( ( mServingSpin . getSelectedItemPosition () ) + 1 ) , mServingSizes . get ( mSelectedIndex ) . getId () ) , false ) ; } 
public void printMonsters ( net.slashie.libjcsi.wswing.WSwingConsoleInterface j , characters.active.ActiveCharacter user ) { for ( map.Room room : getRooms () ) { if ( user . getRoom () . equals ( room ) ) { for ( characters.active.ActiveCharacter enemy : room . getMonsters () ) { if ( util.RandUtil . containsTuple ( enemy . getPosition () , user . getVisiblePositions () ) ) { room . printMonsters ( j , user . getVisiblePositions () ) ; } } } } } 
@ java.lang.Override public void processOutput ( com.lumens.engine.TransformComponent src , java.lang.String targetName , java.util.List < com.lumens.model.Element > output ) { if ( log . isDebugEnabled () ) log . debug ( java.lang.String . format ( "Component '%s' output size '%d' target => '%s'" , src . getName () , ( output != null ? output . size () : 0 ) , targetName ) ) ; processElementList ( output ) ; } 
@ java.lang.Override public void setDefinition ( java.lang.String filename , java.lang.Long start , java.lang.Long end ) { org.eclipse.core.resources.IFile file = getFile ( filename ) ; if ( ( file != null ) && ( file . exists () ) ) { tern.eclipse.ide.ui.utils.EditorUtils . openInEditor ( file , ( start != null ? start . intValue () : - 1 ) , ( ( start != null ) && ( end != null ) ? ( end . intValue () ) - ( start . intValue () ) : - 1 ) , true ) ; } } 
@ java.lang.Override public void onBindViewHolder ( final mem.edu.meaningful.CoordinatorFragment.SimpleStringRecyclerViewAdapter.ViewHolder holder , final int position ) { holder.mTextView . setText ( mValues . get ( position ) ) ; holder.mView . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { android.support.design.widget.Snackbar . make ( v , getValueAt ( position ) , Snackbar.LENGTH_SHORT ) . show () ; } } ) ; } 
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { com.tsystems.javaschool.timber.logiweb.service.TruckService truckService = new com.tsystems.javaschool.timber.logiweb.service.TruckService ( new com.tsystems.javaschool.timber.logiweb.dao.TruckDao () ) ; java.util.List < com.tsystems.javaschool.timber.logiweb.entity.Truck > trucks = truckService . findAll () ; request . setAttribute ( "trucks" , trucks ) ; javax.servlet.RequestDispatcher rd = getServletContext () . getRequestDispatcher ( "/trucks.jsp" ) ; rd . forward ( request , response ) ; } 
public io.kks.states.State removeState ( int index ) { if ( ( ( stateStack . size () ) < 1 ) || ( outOfBounds ( index ) ) ) { return null ; } io.kks.states.State removeState = stateStack . remove ( index ) ; removeState . onDestroy () ; return removeState ; } 
private void updateExpressionPartWithSubExpression ( java.util.Stack subexpressionStack ) { while ( ! ( subexpressionStack . empty () ) ) { subexpression += subexpressionStack . pop () ; } if ( ( subexpression ) != "" ) { expressionParts . add ( new app.com.example.grace.currencycalculator.models.Operand ( new java.lang.StringBuilder ( subexpression ) . reverse () . toString () ) ) ; subexpression = "" ; } } 
private com.github.javalbert.sqlbuilder.Predicate buildExistsPredicate ( com.github.javalbert.sqlbuilder.dsl.ExistsPredicate dslPredicate ) { com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate predicate = new com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate () ; if ( ( dslPredicate . getOperator () ) == ( PredicateOperator.EXISTS ) ) { predicate . exists () ; } else if ( ( dslPredicate . getOperator () ) == ( PredicateOperator.NOT_EXISTS ) ) { predicate . notExists () ; } return predicate . subquery ( buildSelect ( dslPredicate . getSubquery () ) ) ; } 
public int reflectDirection ( int laser_direction ) { laser_direction = jkhet.Piece . mod ( ( laser_direction + 2 ) , 4 ) ; int relative_side = jkhet.Piece . mod ( ( laser_direction - ( rot ) ) , 4 ) ; if ( relative_side == 0 ) { return jkhet.Piece . mod ( ( 1 + ( rot ) ) , 4 ) ; } else if ( relative_side == 1 ) { return jkhet.Piece . mod ( rot , 4 ) ; } else { return - 1 ; } } 
com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = new com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView ( context , interval ) ; int pos = ( intervalsView . getChildCount () ) - 2 ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; return intervalView ; } 
public void start ( org.osgi.framework.BundleContext context ) throws java.lang.Exception { super . start ( context ) ; net.bioclipse.balloon.business.Activator.plugin = this ; javaScriptFinderTracker = new org.osgi.util.tracker.ServiceTracker ( context , net.bioclipse.balloon.business.IJavaScriptBalloonManager . class . getName () , null ) ; javaScriptFinderTracker . open () ; javaFinderTracker = new org.osgi.util.tracker.ServiceTracker ( context , net.bioclipse.balloon.business.IJavaBalloonManager . class . getName () , null ) ; javaFinderTracker . open () ; } 
@ java.lang.Override public void execute ( backtype.storm.tuple.Tuple tuple ) { java.lang.String text = tuple . getValue ( 0 ) . toString () ; java.lang.String language = "UNKNOWN" ; com.joelholder.bolt.LanguageIdentifier li = new com.joelholder.bolt.LanguageIdentifier ( text ) ; language = li . getLanguage () ; _collector . emit ( new backtype.storm.tuple.Values ( text , language ) ) ; _collector . ack ( tuple ) ; } 
public void write ( int data ) { int index = 0 ; while ( index < ( clientCount ) ) { if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } } } 
public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { globalPlay . setFgMadeFlag ( goodCB . isChecked () ) ; globalPlay . setFgDistance ( java.lang.Integer . parseInt ( fgDistanceEditText . getText () . toString () ) ) ; if ( ! ( kickerEditText . getText () . toString () . equals ( "" ) ) ) { globalPlay . setPlayerNumber ( java.lang.Integer . parseInt ( kickerEditText . getText () . toString () ) ) ; } flow = false ; newPlayDialog () ; dialog . dismiss () ; } 
@ java.lang.Override public void onEntityAdded ( net.minecraft.entity.Entity entity ) { if ( ( ! ( entity instanceof net.minecraft.entity.player.EntityPlayer ) ) && ( this . dimension . hasSetting ( SettingType.ENTITYSPAWN ) ) ) { de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting setting = ( ( de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting ) ( this . dimension . get ( SettingType.ENTITYSPAWN ) ) ) ; setting . increase ( entity ) ; } super . onEntityAdded ( entity ) ; } 
private java.util.Collection < tools.gsf.navigation.AssetNode > _getDescendents ( tools.gsf.navigation.AssetNode n ) { java.util.Set < tools.gsf.navigation.AssetNode > descendents = new java.util.HashSet <> () ; for ( tools.gsf.navigation.AssetNode kid : n . getChildren () ) { descendents . add ( kid ) ; descendents . addAll ( _getDescendents ( kid ) ) ; } return descendents ; } 
@ android.support.annotation.NonNull public static java.util.List < com.fastaccess.data.dao.FragmentPagerAdapterModel > buildForRepoIssue ( @ android.support.annotation.NonNull android.content.Context context , @ android.support.annotation.NonNull java.lang.String login , @ android.support.annotation.NonNull java.lang.String repoId ) { return com.annimon.stream.Stream . of ( new com.fastaccess.data.dao.FragmentPagerAdapterModel ( context . getString ( R.string.opened ) , com.fastaccess.ui.modules.repos.issues.issue.RepoOpenedIssuesView . newInstance ( repoId , login ) ) , new com.fastaccess.data.dao.FragmentPagerAdapterModel ( context . getString ( R.string.closed ) , com.fastaccess.ui.modules.repos.issues.issue.RepoClosedIssuesView . newInstance ( repoId , login ) ) ) . collect ( com.annimon.stream.Collectors . toList () ) ; } 
public void addTo ( java.lang.String email ) { try { for ( java.lang.String mail : email . split ( ";" ) ) this . to . add ( new javax.mail.internet.InternetAddress ( mail ) ) ; } catch ( javax.mail.internet.AddressException e ) { throw new java.lang.RuntimeException ( e ) ; } } 
@ java.lang.Override public boolean accept ( org.apache.hadoop.fs.Path path ) { java.lang.String ext = libra.common.helpers.PathHelper . getExtensionWithoutCompressed ( path . getName () ) ; if ( ext != null ) { ext = ext . toLowerCase () ; } for ( java.lang.String fext : libra.common.sequence.FastaPathFilter.FASTA_EXT ) { if ( fext . equals ( ext ) ) { return true ; } } return false ; } 
@ java.lang.Override public void update ( float delta ) { for ( org.terasology.entitySystem.entity.EntityRef entity : entityManager . getEntitiesWith ( org.terasology.miniion.components.NPCMovementInputComponent . class ) ) { org.terasology.miniion.components.NPCMovementInputComponent characterMovementComponent = entity . getComponent ( org.terasology.miniion.components.NPCMovementInputComponent . class ) ; org.terasology.logic.characters.CharacterComponent characterComp = entity . getComponent ( org.terasology.logic.characters.CharacterComponent . class ) ; entity . send ( new org.terasology.logic.characters.CharacterMoveInputEvent ( ( ( inputSequenceNumber ) ++ ) , 0 , 0 , characterMovementComponent.directionToMove , characterMovementComponent.runningRequested , characterMovementComponent.jumpingRequested , ( ( long ) ( delta ) ) ) ) ; if ( characterMovementComponent.jumpingRequested ) characterMovementComponent.jumpingRequested = false ; } } 
public static communication.pdu.SessionPDU createSessionPDU ( byte [] data ) { if ( ( data == null ) || ( ( data.length ) < 2 ) ) { return null ; } int flags = communication.utils.NumberParser . intToByte ( data [ 0 ] ) ; int sessionId = communication.utils.NumberParser . intToByte ( data [ 1 ] ) ; byte [] newData = java.util.Arrays . copyOfRange ( data , 2 , data.length ) ; return new communication.pdu.SessionPDU ( flags , sessionId , new communication.pdu.PDU ( newData ) ) ; } 
static ddejonge.ggp.sat.logic.CNF disjunctCNFwithLiteral ( ddejonge.ggp.sat.logic.CNF cnf , boolean positive , ddejonge.ggp.sat.logic.Proposition p ) { ddejonge.ggp.sat.logic.CNF newCnf = new ddejonge.ggp.sat.logic.CNF () ; for ( ddejonge.ggp.sat.logic.Clause clause : cnf ) { ddejonge.ggp.sat.logic.Clause newClause = new ddejonge.ggp.sat.logic.Clause ( clause . getPositiveAtoms () , clause . getNegativeAtoms () ) ; newClause . addLiteral ( p , positive ) ; newCnf . add ( newClause ) ; } return newCnf ; } 
public com.nostra13.universalimageloader.core.DisplayImageOptions getDisplayImageOption ( @ android.support.annotation.DrawableRes int icon ) { return new com.nostra13.universalimageloader.core.DisplayImageOptions.Builder () . showImageOnLoading ( icon ) . showImageForEmptyUri ( icon ) . showImageOnFail ( icon ) . cacheInMemory ( false ) . cacheOnDisk ( true ) . imageScaleType ( ImageScaleType.EXACTLY ) . considerExifParams ( true ) . bitmapConfig ( Bitmap.Config.RGB_565 ) . displayer ( new com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer ( 1000 ) ) . build () ; } 
private void init ( android.content.Context context ) { android.view.View rootView = inflate ( context , R.layout.easytabs , this ) ; tabs = ( ( android.support.design.widget.TabLayout ) ( rootView . findViewById ( R.id.tabs ) ) ) ; pager = ( ( android.support.v4.view.ViewPager ) ( rootView . findViewById ( R.id.pager ) ) ) ; } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { if ( ( ( enhancedStr ) < 2 ) && ( addPoints ) ) { ( availablePoints ) -- ; ( enhancedStr ) ++ ; } else if ( ( ( enhancedStr ) > 0 ) && ( ! ( addPoints ) ) ) { ( availablePoints ) ++ ; ( enhancedStr ) -- ; } } 
@ java.lang.Override public void onHeaderClick ( final com.nervousfish.nervousfish.activities.Header header , final int position ) { super . onHeaderClick ( header , position ) ; if ( ( header.id ) == ( R.id.key_management_header ) ) { final android.content.Intent intent = new android.content.Intent ( this , com.nervousfish.nervousfish.activities.KeyManagementActivity . class ) ; this . startActivity ( intent ) ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { switch ( item . getItemId () ) { case org.stendardo.bsak.qiblih.CompassActivity.EDIT_ID : startActivity ( new android.content.Intent ( this , org.stendardo.bsak.qiblih.QiblihPreferences . class ) ) ; return true ; case org.stendardo.bsak.qiblih.CompassActivity.README_ID : startActivity ( new android.content.Intent ( this , org.stendardo.bsak.qiblih.ReadmeActivity . class ) ) ; return true ; case org.stendardo.bsak.qiblih.CompassActivity.LICENSE_ID : startActivity ( new android.content.Intent ( this , org.stendardo.bsak.qiblih.LicenseActivity . class ) ) ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
private static org.yamj.core.database.model.type.JobType retrieveJobType ( java.lang.String department ) { switch ( department . toLowerCase () ) { case "writing" : return org.yamj.core.database.model.type.JobType.WRITER ; case "directing" : return org.yamj.core.database.model.type.JobType.DIRECTOR ; case "production" : return org.yamj.core.database.model.type.JobType.PRODUCER ; case "sound" : return org.yamj.core.database.model.type.JobType.SOUND ; case "camera" : return org.yamj.core.database.model.type.JobType.CAMERA ; case "art" : return org.yamj.core.database.model.type.JobType.ART ; case "editing" : return org.yamj.core.database.model.type.JobType.EDITING ; case "costume & make-up" : return org.yamj.core.database.model.type.JobType.COSTUME_MAKEUP ; case "crew" : return org.yamj.core.database.model.type.JobType.CREW ; case "visual effects" : return org.yamj.core.database.model.type.JobType.EFFECTS ; case "lighting" : return org.yamj.core.database.model.type.JobType.LIGHTING ; default: org.yamj.core.service.metadata.online.TheMovieDbScanner.LOG . debug ( "Unknown department '{}'" , department ) ; return org.yamj.core.database.model.type.JobType.UNKNOWN ; } } 
public java.lang.String formatXLSDate ( org.apache.poi.ss.usermodel.Cell curCell , int c ) { java.util.Date date = null ; try { date = new java.text.SimpleDateFormat ( columns . get ( c ) . getDateType () ) . parse ( curCell . toString () ) ; } catch ( java.text.ParseException e ) { return curCell . toString () ; } return new java.text.SimpleDateFormat ( columns . get ( c ) . getDateType () ) . format ( date ) ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; createHandler () ; android.support.v4.app.FragmentManager fm = getFragmentManager () ; mWorkFragment = ( ( com.betterchat.www.utility.RetainedFragment ) ( fm . findFragmentByTag ( "work" ) ) ) ; if ( ( mWorkFragment ) == null ) { mWorkFragment = new com.betterchat.www.utility.RetainedFragment () ; mWorkFragment . setTargetFragment ( this , 0 ) ; fm . beginTransaction () . add ( mWorkFragment , "work" ) . commit () ; } } 
@ java.lang.Override public net.minecraftforge.fml.common.network.simpleimpl.IMessage onMessage ( com.lothrazar.cyclicmagic.net.PacketSyncPlayerData message , net.minecraftforge.fml.common.network.simpleimpl.MessageContext ctx ) { if ( ( ctx.side ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { if ( ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer ) == null ) { return null ; } com.lothrazar.cyclicmagic.ModMain.IPlayerExtendedProperties props = com.lothrazar.cyclicmagic.ModMain . getPlayerProperties ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer ) ; if ( props == null ) { return null ; } else { props . setDataFromNBT ( message.tags ) ; } } return null ; } 
public static Bag getTestBag ( int i ) { Bag bag = new Bag ( i ) ; for ( int j = 0 ; j < 10 ; j ++ ) { Token t = CloneTestHelper . getTestToken () ; TokenFrequency tFrequency = new TokenFrequency () ; tFrequency . setToken ( t ) ; tFrequency . setFrequency ( utility.Util . getRandomNumber ( 1 , 1 ) ) ; bag . add ( tFrequency ) ; } return bag ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { interactionListener . onConfirm ( notifyMe . isChecked () ) ; buttonConfirm . setEnabled ( false ) ; final android.view.View buttonReset = findViewById ( R.id.button_new_appointment ) ; buttonReset . setVisibility ( com.zyumbik.makeanappointment.custom_views.VISIBLE ) ; buttonReset . setOnClickListener ( new com.zyumbik.makeanappointment.custom_views.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { interactionListener . onReset () ; } } ) ; } 
public static void startGame ( int playercount , int boardsize ) { game.GameMaster . reset () ; for ( int i = 1 ; i <= playercount ; i ++ ) { game.GameMaster.playerAL . add ( new game.Player ( 0.0 , i , 0.0 , 0 , game.GameMaster.names [ ( i - 1 ) ] , 0 ) ) ; } game.GameMaster.EndCheck = boardsize ; game.GameMaster.PlayerInTurn = game.GameMaster.playerAL . get ( 0 ) ; } 
public java.lang.String convertFromArabicToRomanNumeral ( java.lang.Integer inputNumber ) { java.lang.StringBuilder romanNumeral = new java.lang.StringBuilder () ; while ( inputNumber != 0 ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.String > numeralMapEntry : RomanNumeralConverter.numeralMap . entrySet () ) { java.lang.Integer numeralSegmentArabicValue = numeralMapEntry . getKey () ; java.lang.String numeralSegment = numeralMapEntry . getValue () ; if ( inputNumber >= numeralSegmentArabicValue ) { inputNumber -= numeralSegmentArabicValue ; romanNumeral . append ( numeralSegment ) ; break; } } } return romanNumeral . toString () ; } 
private void loadTile ( com.badlogic.gdx.utils.XmlReader.Element tile , int firstGid ) { int id = tile . getIntAttribute ( "id" ) ; com.mygdx.game.shared.model.CollideablePolygon tilePolygon = com.mygdx.game.shared.model.TilePolygonLoader . loadTilePolygon ( tile ) ; int tileGid = firstGid + id ; tiles . put ( tileGid , new com.mygdx.game.server.model.MapLoader.Tile ( tilePolygon ) ) ; } 
public boolean deleteByKey ( java.lang.String key ) { if ( keyExists ( key ) ) { synchronized ( this ) { for ( org.tevya.model.LinkDefinition ld : currentLinkDefinitions.definitions ) { if ( ld . getKey () . equals ( key ) ) { currentLinkDefinitions.definitions . remove ( ld ) ; break; } } try { update () ; initialize () ; } catch ( java.lang.Exception e ) { org.tevya.repo.LinkDefinitionFlatFileRepository.logger . warning ( java.lang.String . format ( "Reinitialization failed: %s" , e ) ) ; } } return true ; } return false ; } 
public static int count ( java.lang.String content , char charForSearch ) { int count = 0 ; if ( null == content ) { return 0 ; } int contentLength = content . length () ; for ( int i = 0 ; i < contentLength ; i ++ ) { if ( charForSearch == ( content . charAt ( i ) ) ) { count ++ ; } } return count ; } 
public double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } 
public void enterBuilding ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg . getBuilding ( bldName ) ; if ( bldg != null ) { _currentBldg = bldg ; java.lang.String description = bldg . getInteriorDescription () ; java.lang.String imagePath = bldg . getIntImagePath () ; displayBuilding ( description , imagePath ) ; _frame . setOnTown ( false ) ; } else { _frame . displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } 
private void refreshModel ( org.eclipse.viatra.cep.core.metamodels.events.Event event ) { model . setLatestEvent ( null ) ; for ( org.eclipse.viatra.cep.core.metamodels.automaton.EventToken eventToken : model . getEventTokensInModel () ) { eventToken . setLastProcessed ( null ) ; } model . getEnabledForTheLatestEvent () . clear () ; strategy . handleInitTokenCreation ( model , AutomatonFactory.eINSTANCE ) ; model . setLatestEvent ( event ) ; strategy . handleAutomatonResets ( model , AutomatonFactory.eINSTANCE ) ; cepUpdateCompleteProvider . latestEventHandled () ; } 
public boolean makeTurn ( int posOnBoard , int turn ) throws something.Reversi.IllegalMoveException { if ( ( this . board [ posOnBoard ] ) == ( Tile.EMPTY ) ) { something.Reversi.Tile tile ; if ( ( turn % 2 ) == 0 ) { tile = Tile.BLACK ; } else { tile = Tile.WHITE ; } if ( checkValidityMove ( posOnBoard , tile ) ) { board [ posOnBoard ] = tile ; turnTiles ( posOnBoard , tile ) ; return true ; } } return false ; } 
private java.util.Collection < org.litepal.crud.model.AssociationsInfo > analyzeAssociations ( org.litepal.crud.DataSupport baseObj ) { try { java.util.Collection < org.litepal.crud.model.AssociationsInfo > associationInfos = getAssociationInfo ( baseObj . getClassName () ) ; analyzeAssociatedModels ( baseObj , associationInfos ) ; return associationInfos ; } catch ( java.lang.Exception e ) { throw new org.litepal.exceptions.DataSupportException ( e . getMessage () ) ; } } 
@ java.lang.Override protected void update ( float elapsedTimeMS ) { graphicslib3D.Point3D cameraLocation = camera1 . getLocation () ; graphicslib3D.Matrix3D cameraTranslation = new graphicslib3D.Matrix3D () ; cameraTranslation . translate ( cameraLocation . getX () , cameraLocation . getY () , cameraLocation . getZ () ) ; skyBox . setLocalTranslation ( cameraTranslation ) ; camera1Controller . update ( elapsedTimeMS ) ; super . update ( elapsedTimeMS ) ; if ( ( thisClient ) != null ) { thisClient . processPackets () ; } } 
@ java.lang.Override public byte [] transform ( java.lang.ClassLoader loader , java.lang.String className , java.lang.Class < ? > classBeingRedefined , java.security.ProtectionDomain protectionDomain , byte [] classfileBuffer ) throws java.lang.instrument.IllegalClassFormatException { try { return ( className != null ) && ( className . equals ( net.x11.patch.XKeysymTransformer.XNET_PROTOCOL ) ) ? doClass ( className , classBeingRedefined , classfileBuffer ) : classfileBuffer ; } catch ( java.lang.Throwable err ) { err . printStackTrace () ; return classfileBuffer ; } } 
protected void applyCenterInside ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { if ( ( ( intrinsicVideoSize.x ) <= ( view . getWidth () ) ) && ( ( intrinsicVideoSize.y ) <= ( view . getHeight () ) ) ) { applyCenter ( view , transformMatrix ) ; } else { applyFitCenter ( view , transformMatrix ) ; } } 
private static void loadFile ( java.lang.String packageName , sbahjsic.runtime.ExecutionEnvironment env ) throws java.lang.Exception { sbahjsic.io.StandardLibrary.LOADED . add ( packageName ) ; try ( sbahjsic.io.FileSource fs = new sbahjsic.io.FileSource ( new java.io.File ( ( ( ( ( sbahjsic.io.StandardLibrary.STD ) + "/" ) + packageName ) + ".sb" ) ) ) ) { env . execute ( fs ) ; } } 
protected javax.ws.rs.core.Response handleGenericError ( java.lang.Throwable exception ) { net.sf.mmm.util.exception.api.NlsRuntimeException userError = net.sf.mmm.util.exception.api.TechnicalErrorUserException . getOrCreateUserException ( exception ) ; if ( userError . isTechnical () ) { io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG . error ( "Service failed on server" , userError ) ; } else { io.oasp.module.rest.service.impl.RestServiceExceptionFacade.LOG . warn ( "Service failed due to business error: {}" , exception . getMessage () ) ; } return createResponse ( userError ) ; } 
@ java.lang.Override public void onTurnSuccess ( int computerMove ) { if ( ( isGameOver ) || ( computerMove == ( - 1 ) ) ) { return; } setXBackground ( levelPlayer1 , computerMove ) ; fillGameGrid ( computerMove , Constants.PLAYER2 ) ; areButtonsClicked [ computerMove ] = true ; asyncService . checkForWinner ( gameGrid , Constants.PLAYER2 , this ) ; } 
public static double roundedToSize ( double value , int sigFigs ) { java.math.BigDecimal valueBD = new java.math.BigDecimal ( value ) ; int newScale = sigFigs - ( ( valueBD . precision () ) - ( valueBD . scale () ) ) ; java.math.BigDecimal valueBDtoSize = valueBD . setScale ( newScale , java.math.RoundingMode.HALF_UP ) ; return valueBDtoSize . doubleValue () ; } 
@ java.lang.Override public void onLoadFinished ( android.content.Loader < android.database.Cursor > loader , android.database.Cursor data ) { switch ( loader . getId () ) { case com.android.contacts.list.JoinContactListFragment.DISPLAY_NAME_LOADER : { if ( ( data != null ) && ( data . moveToFirst () ) ) { showTargetContactName ( data . getString ( 0 ) ) ; } break; } case JoinContactListAdapter.PARTITION_ALL_CONTACTS : { if ( data != null ) { final android.database.Cursor suggestionsCursor = ( ( com.android.contacts.list.JoinContactLoader.JoinContactLoaderResult ) ( data ) ) . suggestionCursor ; onContactListLoaded ( suggestionsCursor , data ) ; } break; } } } 
private org.wso2.carbon.messaging.CarbonMessage createCarbonMsg ( org.ballerinalang.bre.Context context ) { org.ballerinalang.model.values.BConnector bConnector = ( ( org.ballerinalang.model.values.BConnector ) ( getRefArgument ( context , 0 ) ) ) ; java.lang.String path = getStringArgument ( context , 0 ) ; org.ballerinalang.model.values.BMessage bMessage = ( ( org.ballerinalang.model.values.BMessage ) ( getRefArgument ( context , 1 ) ) ) ; org.wso2.carbon.messaging.CarbonMessage cMsg = bMessage . value () ; prepareRequest ( bConnector , path , cMsg ) ; cMsg . setProperty ( Constants.HTTP_METHOD , Constants.HTTP_METHOD_POST ) ; return cMsg ; } 
public void onNumDecksChanged ( javafx.beans.value.ObservableValue observable , java.lang.Object oldNum , java.lang.Object newNum ) { if ( ( ( java.lang.String ) ( newNum ) ) . matches ( "[0-9]*" ) ) { cardSettings . setNumDecks ( java.lang.Integer . parseInt ( ( ( java.lang.String ) ( newNum ) ) ) ) ; updateSuitTextFields ( view . getCardComboBox () . getValue () ) ; } } 
private void setDirectionButton ( android.widget.ImageView imageView , int id , int rotation ) { android.widget.TableRow.LayoutParams pieceLayout = new android.widget.TableRow.LayoutParams ( ( ( height ) / 6 ) , ( ( height ) / 6 ) ) ; imageView . setLayoutParams ( pieceLayout ) ; imageView . setImageResource ( id ) ; imageView . setPivotX ( ( ( height ) / 12 ) ) ; imageView . setPivotY ( ( ( height ) / 12 ) ) ; imageView . setRotation ( rotation ) ; } 
public void draw ( org.newdawn.slick.Graphics graphics ) throws org.newdawn.slick.SlickException { drawBackground ( graphics ) ; drawCountDown ( graphics ) ; drawPlayers ( graphics ) ; drawPowers ( graphics ) ; drawTimer ( graphics ) ; drawBorders ( graphics ) ; drawLives ( graphics ) ; drawScore ( graphics ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == null ) { return false ; } if ( ( getClass () ) != ( obj . getClass () ) ) { return false ; } final poker.Card other = ( ( poker.Card ) ( obj ) ) ; if ( ( this . rank ) != ( other.rank ) ) { return false ; } if ( ! ( this . suit . equals ( other.suit ) ) ) { return false ; } return true ; } 
@ java.lang.Override protected java.lang.Object newInstanceForClass ( java.lang.String className ) throws java.lang.ClassNotFoundException , java.lang.IllegalAccessException , java.lang.InstantiationException { java.lang.Class < ? > clss = java.lang.Class . forName ( className ) ; try { java.lang.reflect.Constructor < ? > cons = clss . getConstructor ( android.content.Context . class ) ; return cons . newInstance ( androidContext ) ; } catch ( java.lang.NoSuchMethodException nsme ) {} catch ( java.lang.reflect.InvocationTargetException ite ) {} return clss . newInstance () ; } 
@ android.support.annotation.Nullable @ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , @ android.support.annotation.Nullable android.view.ViewGroup container , @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { view = inflater . inflate ( R.layout.fragment_sidebar , container , false ) ; campoOs = view . findViewById ( R.id.sidebar_op_text ) ; campoMatricula = view . findViewById ( R.id.sidebar_user_text ) ; campoSenha = view . findViewById ( R.id.sidebar_user_password ) ; campoOs . setText ( os ) ; campoMatricula . setText ( matricula ) ; campoSenha . setText ( senha ) ; return view ; } 
public static boolean listContainsArray ( java.util.List < short [] > list , short [] array ) { for ( short [] element : list ) { if ( java.util.Arrays . equals ( element , array ) ) { return true ; } } return false ; } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { mCurrentLocation = new com.google.android.gms.maps.model.LatLng ( location . getLatitude () , location . getLongitude () ) ; mLastUpdateTime = java.text.DateFormat . getTimeInstance () . format ( new java.util.Date () ) ; com.frodo.travigator.utils.CommonUtils . logStatus ( TAG , ( ( ( "Location updated ->" + ( location . getLatitude () ) ) + ":" ) + ( location . getLongitude () ) ) ) ; org.greenrobot.eventbus.EventBus . getDefault () . post ( new com.frodo.travigator.events.LocationChangedEvent ( mCurrentLocation ) ) ; } 
public static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } 
@ java.lang.Override public model.project.Project calculateProject ( model.project.Project project ) { this . project = project ; if ( ( project . getPhases () . size () ) != 0 ) { calculateLenght ( project ) ; calculateProjectDays ( project ) ; calculateResultSkill ( project ) ; calculateQuarterResults ( project ) ; } else {} return project ; } 
