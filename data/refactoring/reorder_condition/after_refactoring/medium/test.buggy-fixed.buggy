public synchronized void remove ( final java.lang.String pathname ) { it.grid.storm.filesystem.AclLockPoolElement e = ( ( it.grid.storm.filesystem.AclLockPoolElement ) ( __map.get ( pathname ) ) ) ; if ( e != null ) { int count = e.decrementUsageCountAndGetIt () ; if ( 0 >= count ) __map.remove ( pathname ) ; } } 
private static java.util.Collection<java.lang.String> getToolString () { java.util.Collection<java.lang.String> toolStr = Main.pref.getCollection ( "toolbar", java.util.Arrays.asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( ( toolStr.size () ) == 0 ) || ( toolStr == null ) ) { toolStr = java.util.Arrays.asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_searchable ) ; actionbar = getSupportActionBar () ; actionbar.setTitle ( "搜尋" ) ; actionbar.setDisplayHomeAsUpEnabled ( true ) ; if ( null != ( getIntent () ) ) { handleIntent ( getIntent () ) ; } } 
private void validate () { java.lang.String valueAsString = dateBox.getTextBox () .getValue () ; if ( ! ( com.google.common.base.Strings.isNullOrEmpty ( valueAsString ) ) ) { valueUpdater.update ( null ) ; } else { java.util.Date dateValue = this.dateBox.getFormat () .parse ( dateBox, valueAsString, false ) ; if ( null == dateValue ) { valueUpdater.onInvalid ( I18N.MESSAGES.dateFieldInvalidValue ( org.activityinfo.ui.client.component.form.field.DateFieldWidget.FORMAT ) ) ; } else { valueUpdater.update ( new org.activityinfo.model.type.time.LocalDate ( dateValue ) ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { mShowCaseView.dismiss () ; mShowCaseView = null; info.run () ; if ( ( R.id.btn_end ) == ( v.getId () ) ) { showNext ( singleShot ) ; } else if ( ( v.getId () ) == ( R.id.btn_finalize ) ) { mShotStateStore.finished () ; mShowcaseInfos.clear () ; } if ( singleShot ) mShotStateStore.storeShot () ; } 
@ java.lang.Override protected void onResume () { if ( onCreate ) { onCreate = false; } else { if ( null != ( mPlayer ) ) mPlayer.getMediaControl () .start () ; mPlayer.resumePlayer () ; com.kaltura.playersdk.utils.LogUtils.LOGD ( com.kaltura.adplayerdemo.MainActivity.TAG, "on Resume called for player" ) ; if ( ( mAdPlayer ) != null ) { mAdPlayer.moveSurfaceToForeground () ; mAdPlayer.play () ; } } super.onResume () ; com.kaltura.adplayerdemo.NetworkChangeReceiver.getObservable () .addObserver ( this ) ; } 
private void createPages () { if ( null == ( moviesView ) ) { moviesView = new husaynhakeem.io.popularmovies.features.movies.MoviesView () ; husaynhakeem.io.popularmovies.features.movies.MoviesPresenter moviesPresenter = new husaynhakeem.io.popularmovies.features.movies.MoviesPresenter () ; moviesView.setPresenter ( moviesPresenter ) ; moviesPresenter.setView ( moviesView ) ; } if ( ( favoritesView ) == null ) { favoritesView = new husaynhakeem.io.popularmovies.features.favorites.FavoritesView () ; husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter favoritesPresenter = new husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter () ; favoritesView.setPresenter ( favoritesPresenter ) ; favoritesPresenter.setView ( favoritesView ) ; } } 
public static boolean isInteger ( java.lang.String str ) { int i = -1; while ( ( str.length () ) > ( ++i ) ) { char c = str.charAt ( i ) ; if ( ( c < '0' ) || ( c > '9' ) ) { return false; } } return true; } 
public void task ( android.database.sqlite.SQLiteDatabase db ) { if ( null != edit ) dbh.routes.insert ( r, db ) ; else dbh.routes.update ( r, ( ( ( transcend.rockeeper.data.RouteContract._ID ) + "=" ) + ( edit.get ( RouteContract._ID ) ) ) , null, db ) ; } 
protected java.lang.String makeRequest ( java.lang.String endpoint, java.lang.String queryString ) throws java.lang.Exception { java.net.URI uri = org.apache.http.client.utils.URIUtils.createURI ( uk.ac.jorum.integration.RestApiBaseTest.apiProtocol, uk.ac.jorum.integration.RestApiBaseTest.apiHost, uk.ac.jorum.integration.RestApiBaseTest.apiPort, ( endpoint + ( uk.ac.jorum.integration.RestApiBaseTest.apiMountPoint ) ) , queryString, "" ) ; org.apache.http.client.methods.HttpGet httpget = new org.apache.http.client.methods.HttpGet ( uri ) ; httpget.addHeader ( "Accept", "application/json" ) ; org.apache.http.client.ResponseHandler<java.lang.String> responseHandler = new org.apache.http.impl.client.BasicResponseHandler () ; return client.execute ( httpget, responseHandler ) ; } 
@ java.lang.Override public twitter4j.IDs getFollowersIDs ( long arg0, long arg1 ) throws twitter4j.TwitterException { if ( 14 == ( limits[2] ) ) { SocialNetworkAnalysis.TwitterWrapper.timelimited[0] = new java.util.Date () ; limit.reached () ; limits[2] = 0; } java.lang.System.out.println ( "limits in getFollowersIDs: " ) ; for ( int limit : limits ) { java.lang.System.out.print ( ( limit + " " ) ) ; } java.lang.System.out.println () ; ( limits[2] ) ++; return t.getFollowersIDs ( arg0, arg1 ) ; } 
private com.emc.storageos.isilon.restapi.IsilonExport getIsilonExport ( com.emc.storageos.isilon.restapi.IsilonApi isilonApi, java.lang.Integer expId, java.lang.String zoneName ) { com.emc.storageos.isilon.restapi.IsilonExport exp = null; try { _log.debug ( "call getIsilonExport for {} ", expId ) ; if ( null != expId ) { exp = isilonApi.getExport ( expId.toString () ) ; _log.debug ( "call getIsilonExport {}", exp.toString () ) ; } } catch ( java.lang.Exception e ) { _log.error ( "Exception while getting Export for {}", expId ) ; } return exp; } 
public void draw ( java.awt.Graphics2D g2, boolean filled ) { java.awt.geom.Rectangle2D.Double rec = new java.awt.geom.Rectangle2D.Double ( ( 2 * ( getRadius () ) ) , ( 2 * ( getRadius () ) ) , getCenter () .getX () , getCenter () .getY () ) ; g2.setColor ( java.awt.Color.BLACK ) ; if ( filled == true ) { g2.draw ( rec ) ; g2.fill ( rec ) ; } else { g2.draw ( rec ) ; } } 
public java.util.List<java.lang.Object[]> find ( java.lang.String nativeQuery, java.util.List<java.lang.String> relations, java.lang.Class clazz ) { if ( null == ( s ) ) { s = sf.openStatelessSession () ; s.beginTransaction () ; } org.hibernate.SQLQuery q = s.createSQLQuery ( nativeQuery ) .addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q.addScalar ( r ) ; } return q.list () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_detail ) ; if ( null == savedInstanceState ) { android.os.Bundle args = new android.os.Bundle () ; args.putParcelable ( DetailFragment.DETAIL_URI, getIntent () .getData () ) ; com.odytrice.popularmovies.fragments.DetailFragment fragment = new com.odytrice.popularmovies.fragments.DetailFragment () ; fragment.setArguments ( args ) ; getSupportFragmentManager () .beginTransaction () .replace ( R.id.movie_detail_container, new com.odytrice.popularmovies.fragments.DetailFragment () ) .commit () ; } } 
private void updateTimeTaken () { this.experienceTime = ( this.BASE_TIME ) / ( 1 + ( ( this.level ) / 10 ) ) ; this.repairTime = ( this.experienceTime ) * 2; if ( ( this.experienceTime ) < 0.5 ) { this.experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this.repairTime ) < 1.0 ) { this.repairTime = ( ( float ) ( 1.0 ) ) ; } } 
private void loginToFacebookIfNeeded ( java.util.List<amai.org.conventions.model.Update> updates ) { initializeFacebookLoginButton () ; com.facebook.AccessToken accessToken = com.facebook.AccessToken.getCurrentAccessToken () ; if ( ( ! ( accessToken.isExpired () ) ) && ( accessToken != null ) ) { loginLayout.setVisibility ( View.GONE ) ; retrieveUpdatesListFromFacebookApi ( accessToken ) ; } else { loginLayout.setVisibility ( View.GONE ) ; com.facebook.login.LoginManager.getInstance () .logInWithReadPermissions ( this, java.util.Collections.singletonList ( "public_profile" ) ) ; } } 
public static de.zib.vold.common.Key buildkey ( java.util.List<java.lang.String> key ) throws java.lang.IllegalArgumentException { if ( 3 > ( key.size () ) ) { throw new java.lang.IllegalArgumentException ( ( ( "Tried to build a key out of " + ( key.size () ) ) + " arguments. At leest three ( scope, type, keyname ) of them are necessary." ) ) ; } return new de.zib.vold.common.Key ( key.get ( 0 ) , key.get ( 2 ) , key.get ( 1 ) ) ; } 
public boolean monsterExist ( game.zork.Monster monster ) { java.util.Map<game.zork.GameMap.Coordination, java.util.ArrayList<java.lang.Object>> mapLevel = getLevelMap () ; game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel.get ( currentPosition ) ) { if ( ( ( ( ( game.zork.Monster ) ( i ) ) .getName () ) == ( monster.getName () ) ) && ( i instanceof game.zork.Monster ) ) { return true; } } return false; } 
public com.intplus.shoppingspace.model.Shop getShopById ( int sid ) { com.intplus.shoppingspace.model.Shop currentShop = null; try { com.intplus.shoppingspace.controller.AppController.shopDatabase = new com.intplus.shoppingspace.model.ShopDatabase ( this.activity ) ; com.intplus.shoppingspace.controller.AppController.shopDatabase.open () ; currentShop = com.intplus.shoppingspace.controller.AppController.shopDatabase.shopsDao.fetchShopBySid ( sid ) ; android.util.Log.d ( "APPsds", currentShop.getShopName () ) ; } catch ( java.lang.Exception e ) { android.util.Log.e ( com.intplus.shoppingspace.controller.AppController.APPLOG, ( "is not found" + ( "Shop with given id:" + sid ) ) ) ; } finally { com.intplus.shoppingspace.controller.AppController.shopDatabase.close () ; android.util.Log.e ( com.intplus.shoppingspace.controller.AppController.APPLOG, "Db is closed" ) ; } return currentShop; } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound tag ) { super.readFromNBT ( tag ) ; this.isDouble = tag.getBoolean ( "isDouble" ) ; this.isTop = tag.getBoolean ( "isTop" ) ; if ( isDouble ) { capacity = ( originalCapacity ) * 2; } this.tank.setCapacity ( capacity ) ; } 
public void onAdminJoin ( org.bukkit.entity.Player player, boolean fromEvent ) { staff.add ( player ) ; if ( fromEvent ) { final java.util.ArrayList<java.lang.String> lines = latestToLines () ; if ( null != lines ) for ( java.lang.String line : lines ) player.sendMessage ( ru.simsonic.rscMinecraftLibrary.Bukkit.GenericChatCodes.processStringStatic ( ( ( ru.simsonic.rscFirstJoinDemo.API.Settings.chatPrefix ) + line ) ) ) ; } } 
@ java.lang.Override public int compare ( ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg0, ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg1 ) { int scoreFirst = arg0.getScore () ; int scoreSecond = arg1.getScore () ; if ( scoreSecond == scoreFirst ) return 0; else if ( scoreFirst > scoreSecond ) return 1; return -1; } 
private void clearTheCurrentGame () { for ( int i = 0; 3 > i; i++ ) { for ( int j = 0; j < 3; j++ ) { application.TicTacToeApp.board[i][j].clear () ; java.lang.System.out.println ( "clear" ) ; } } application.TicTacToeApp.neadNewGame = false; application.TicTacToeApp.playable = true; } 
public void focusOut ( org.sbolstandard.core2.ComponentDefinition comp ) throws org.sbolstandard.core2.SBOLValidationException { if ( comp == ( canvasCD ) ) { return; } updateCanvasCD () ; org.sbolstandard.core2.ComponentDefinition parentComponent = parentCDs.pop () ; while ( parentComponent != comp ) { parentComponent = parentCDs.pop () ; } load ( parentComponent ) ; eventBus.publish ( new com.clarkparsia.sbol.editor.event.FocusOutEvent ( this, parentComponent ) ) ; } 
public static int differenceInDays ( java.util.Date firstDate, java.util.Date secondDate ) { long difference = ( firstDate.getTime () ) - ( secondDate.getTime () ) ; int diffDays = ( ( int ) ( difference ) ) / ( 1000 * ( ( 24 * 60 ) * 60 ) ) ; return diffDays; } 
public int getUuidIndex ( java.lang.String uuid ) { if ( uuid.equals ( "0" ) ) return 0; for ( int i = 0; ( list.size () ) > i; i++ ) { try { java.lang.String itemuuid = list.get ( i ) .getString ( "uuid" ) ; if ( uuid.equals ( itemuuid ) ) return i; } catch ( org.json.JSONException e ) { e.printStackTrace () ; } } return 0; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { boolean isEqual = false; try { isEqual = ( java.util.Arrays.equals ( this.terms, ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) .getTerms () ) ) && ( ( obj.getClass () ) != ( dss.lingvo.hflts.TTHFLTS.class ) ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } return isEqual; } 
@ java.lang.Override public void onItemSelected ( java.lang.String ean ) { android.os.Bundle args = new android.os.Bundle () ; args.putString ( BookDetail.EAN_KEY, ean ) ; it.jaschke.alexandria.BookDetail fragment = new it.jaschke.alexandria.BookDetail () ; fragment.setArguments ( args ) ; int id = R.id.container; if ( null != ( findViewById ( R.id.right_container ) ) ) { id = R.id.right_container; } getSupportFragmentManager () .beginTransaction () .replace ( id, fragment ) .addToBackStack ( "Book Detail" ) .commit () ; } 
@ java.lang.Override void appendOp ( java.lang.String op, boolean binOp ) { if ( ( ( op.charAt ( 0 ) ) != ',' ) && ( ( getLastChar () ) != ' ' ) ) { append ( " " ) ; } append ( op ) ; if ( binOp ) { append ( " " ) ; } } 
private static double getScoreForDocumentId ( int documentId, org.terrier.querying.SearchRequest srq ) { org.terrier.matching.ResultSet rs = srq.getResultSet () ; int[] docIds = rs.getDocids () ; double[] scores = rs.getScores () ; for ( int i = 0; ( docIds.length ) > i; i++ ) { if ( ( docIds[i] ) == documentId ) { return scores[i]; } } return 0; } 
private void updateUI () { if ( null == ( mAdapter ) ) { android.util.Log.d ( TAG, "A" ) ; mAdapter = new com.payforward.androidapp.post.CategoryActivity.CustomAdapter ( this, com.payforward.androidapp.R.layout.category, categoryList ) ; mCategoryList.setAdapter ( mAdapter ) ; } else { android.util.Log.d ( TAG, "B" ) ; mAdapter.clear () ; mAdapter.addAll ( categoryList ) ; mAdapter.notifyDataSetChanged () ; } } 
public static int fastRecursiveExponentiationModulo ( int base, int exponent, int mod ) { if ( 0 == exponent ) return 1; if ( exponent == 1 ) return base; final int resultOnHalfExponent = com.jwetherell.algorithms.mathematics.Exponentiation.fastRecursiveExponentiation ( base, ( exponent / 2 ) ) ; if ( ( exponent % 2 ) == 0 ) return ( resultOnHalfExponent * resultOnHalfExponent ) % mod; else return ( ( ( resultOnHalfExponent * resultOnHalfExponent ) % mod ) * base ) % mod; } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { int markerPosition = markers.indexOf ( marker ) ; if ( ( selectedPosition ) == markerPosition ) return true; selectMarker ( markerPosition ) ; if ( ( listener ) != null ) { if ( isZoomed () ) { listener.onActivityMarkerPressedAtIndex ( markerPosition ) ; } else { listener.onLegMarkerPressedAtIndex ( markerPosition ) ; } } return true; } 
public void visit ( compiler.phase.seman.FunCall funCall ) { for ( int a = 0; ( funCall.numArgs () ) > a; a++ ) funCall.arg ( a ) .accept ( this ) ; compiler.phase.seman.Decl decl = attrs.declAttr.get ( funCall ) ; compiler.phase.seman.Typ typ = attrs.typAttr.get ( decl ) ; if ( typ != null ) attrs.typAttr.set ( funCall, ( ( compiler.phase.seman.FunTyp ) ( typ ) ) .resultTyp ) ; } 
public void act () { if ( 4 != ( Play.dif ) ) { checkDif () ; if ( ( ( lose ) == false ) && ( ( getX () ) != 533 ) ) { i = ( i ) + 1; setImage ( ( ( "st" + ( ( i ) % 4 ) ) + ".png" ) ) ; } ( cd ) ++; losing () ; } } 
public void removeLink ( com.aleksey.castlegates.types.GearLink link ) { if ( null == link ) return; link.setRemoved () ; link.getGear1 () .setLink ( null ) ; link.getGear2 () .setLink ( null ) ; this.dataWorker.addChangedLink ( link ) ; } 
public java.lang.String getReps ( android.widget.LinearLayout layout ) { java.lang.String toReturn = ""; for ( int i = 1; 6 > i; i++ ) { android.widget.EditText editText = ( ( android.widget.EditText ) ( layout.getChildAt ( i ) ) ) ; java.lang.String text = editText.getText () .toString () ; if ( text.trim () .equals ( "" ) ) { toReturn += text + " "; } } return toReturn; } 
public void updateDeploymentPolicyInInformationModel ( org.apache.stratos.autoscaler.pojo.policy.deployment.DeploymentPolicy deploymentPolicy ) throws org.apache.stratos.autoscaler.exception.policy.InvalidPolicyException { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.autoscalePolicyListMap.containsKey ( deploymentPolicy.getDeploymentPolicyID () ) ) { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log.isDebugEnabled () ) { org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log.debug ( ( ( deploymentPolicy.getDeploymentPolicyID () ) + "Updating deployment policy: " ) ) ; } org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap.put ( deploymentPolicy.getDeploymentPolicyID () , deploymentPolicy ) ; } } 
public void setListName ( java.lang.String listName ) { if ( ! ( listNameEditSupported ) ) { throw new java.lang.RuntimeException ( ( "group that does not support it." + "Error: Attempted to edit Channel List name for " ) ) ; } java.lang.String oldListName = this.listName; this.listName = listName; propSupport.firePropertyChange ( "listName", oldListName, listName ) ; } 
private synchronized void await ( org.opendaylight.vtn.manager.it.ofmock.impl.FlowTable.TableCond cond, long timeout ) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException { if ( ! ( cond.check () ) ) { long msec = timeout; long deadline = timeout + ( java.lang.System.currentTimeMillis () ) ; do { wait ( msec ) ; if ( cond.check () ) { return; } msec = deadline - ( java.lang.System.currentTimeMillis () ) ; } while ( timeout > 0 ) ; throw new java.util.concurrent.TimeoutException ( cond.getTimeoutError () ) ; } } 
private java.lang.String getAccountsUrl ( java.lang.String deploymentUrl, java.lang.String username ) { if ( deploymentUrl.endsWith ( "/" ) ) { deploymentUrl = deploymentUrl.substring ( 0, ( ( deploymentUrl.length () ) - 1 ) ) ; } java.lang.String accountsUrl = "/Supervisor.json" + ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) ; return accountsUrl; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String toAdd = commenting.getText () .toString () ; if ( ( toAdd != "" ) && ( toAdd != null ) ) { adapter.add ( toAdd ) ; } commenting.setText ( "" ) ; } 
private java.util.List<java.lang.Runnable> getTasks ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType type ) { if ( ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.LOAD ) == type ) { return load; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SAVE ) ) { return save; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.PLAYER_SETUP ) ) { return playerSetup; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SERVER ) ) { return server; } return new java.util.ArrayList<java.lang.Runnable> () ; } 
private boolean checkHorizontal ( int row, int col ) { if ( ( ( board.length ) - 3 ) >= col ) { if ( ( ( board[row][col] ) == ( board[row][ ( col + 1 ) ] ) ) && ( ( board[row][col] ) == ( board[row][ ( col + 2 ) ] ) ) ) { java.lang.System.out.println ( "There is a win there" ) ; return true; } } return false; } 
public java.lang.String newAccountNumber () { java.lang.String newAccountNum = java.lang.Integer.toString ( java.util.concurrent.ThreadLocalRandom.current () .nextInt ( 100000, 999999 ) ) ; java.io.File f = new java.io.File ( ( ".csv" + newAccountNum ) ) ; if ( f.exists () ) { newAccountNumber () ; } return newAccountNum; } 
private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion one, org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.ModuleExclusion two ) { if ( ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null; } 
@ java.lang.Override public gregtech.api.interfaces.ITexture[] getTexture ( gregtech.api.interfaces.tileentity.IGregTechTileEntity aBaseMetaTileEntity, byte aSide, byte aFacing, byte aColorIndex, boolean aActive, boolean aRedstone ) { return new gregtech.api.interfaces.ITexture[] { Textures.BlockIcons.MACHINE_CASINGS[mTier][ ( 1 + aColorIndex ) ], aSide != ( this.getBaseMetaTileEntity () .getFrontFacing () ) ? new gregtech.api.objects.GT_RenderedTexture ( Textures.BlockIcons.OVERLAY_TELEPORTER_ACTIVE ) : new gregtech.api.objects.GT_RenderedTexture ( com.github.technus.tectech.thing.metaTileEntity.single.GT_MetaTileEntity_DebugStructureWriter.MARK ) }; } 
private java.lang.Iterable<gameoflife.Cell> allCells () { java.util.List<gameoflife.Cell> allCells = new java.util.ArrayList<> () ; for ( int y = 0; ( matrix.getWidth () ) > y; y++ ) { for ( int x = 0; x < ( matrix.getHeight () ) ; x++ ) { allCells.add ( new gameoflife.Cell ( y, x, ( -1 ) ) ) ; } } return allCells; } 
public java.io.InputStream getInput ( java.lang.String pathname ) throws java.io.FileNotFoundException { org.infinispan.io.GridFile file = ( ( org.infinispan.io.GridFile ) ( getFile ( pathname ) ) ) ; if ( ! ( file.exists () ) ) throw new java.io.FileNotFoundException ( pathname ) ; if ( file.isDirectory () ) { throw new java.io.FileNotFoundException ( ( " ) " + ( "Cannot read from directory ( " + file ) ) ) ; } return new org.infinispan.io.GridInputStream ( file, data, default_chunk_size ) ; } 
protected static void isTotpConfigurationRequired ( org.keycloak.models.RealmModel realm, org.keycloak.models.UserModel user ) { for ( org.keycloak.models.RequiredCredentialModel c : realm.getRequiredCredentials () ) { if ( ( ! ( user.isTotp () ) ) && ( c.getType () .equals ( CredentialRepresentation.TOTP ) ) ) { user.addRequiredAction ( UserModel.RequiredAction.CONFIGURE_TOTP ) ; org.keycloak.services.managers.AuthenticationManager.logger.debug ( "User is required to configure totp" ) ; } } } 
public static boolean can_paste ( int x, int y, mudmap2.backend.Layer layer ) { if ( ( layer != null ) && ( ( ( mudmap2.Mudmap2.copy_places ) != null ) && ( ( mudmap2.Mudmap2.copy_place_locations ) != null ) ) ) { for ( mudmap2.Pair<java.lang.Integer, java.lang.Integer> coordinate : mudmap2.Mudmap2.copy_place_locations ) if ( layer.exist ( ( x + ( coordinate.first ) ) , ( y + ( coordinate.second ) ) ) ) return false; } return true; } 
public synchronized void stop () { if ( null != ( acceptThread ) ) { acceptThread.cancel () ; acceptThread = null; } if ( ( connectThread ) != null ) { connectThread.cancel () ; connectThread = null; } if ( ( connectedThread ) != null ) { connectedThread.cancel () ; connectedThread = null; } setServiceState ( koshianpan.github.com.pontroller.BluetoothService.STATE_NONE ) ; } 
protected void autoLoad () { if ( ( com.liferay.mobile.screens.context.SessionContext.isLoggedIn () ) && ( ( ( _articleId ) != null ) || ( ( _classPK ) != null ) ) ) { try { load () ; } catch ( java.lang.Exception e ) { onWebContentFailure ( this, e ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.addressbook.thorrism.addressbook.Contact contact = createContact () ; if ( null == contact ) android.util.Log.e ( DroidBook.TAG, "Null" ) ; else { com.addressbook.thorrism.addressbook.DroidBook.getInstance () .hideKeyboard ( mCurrentEdit, getApplicationContext () ) ; mBook.addEntry ( contact ) ; new com.addressbook.thorrism.addressbook.CreateContactScreen.SaveTask () .execute () ; } } 
private java.lang.String getMultiVector () { if ( this.multicast ) { java.lang.String ans = ""; for ( int i = 0; ( groupSize ) > i; i++ ) ans += ( multicastVector[i] ) + " "; return ans; } else return "no multi"; } 
public long getTripStartDateOnSharedPreferences () { mSharedPreferences = this.getPreferences ( Context.MODE_PRIVATE ) ; long value_long = mSharedPreferences.getLong ( getString ( R.string.trip_start_date_tag ) , 0 ) ; if ( 0 < value_long ) { mSPEditor = mSharedPreferences.edit () ; mSPEditor.remove ( this.gameStatus.trip_start_date_tag ) ; mSPEditor.commit () ; } return value_long; } 
@ java.lang.Override public void onClick ( android.view.View view ) { mAudioService.executeAction ( Constants.Action.ACTION_PLAY ) ; if ( isNetworkAvailable () ) { if ( null != ( mAudioService ) ) { mAudioService.doStartForeground () ; btnPlay.startAnimation ( playClickAnimation ) ; btnPlay.setImageResource ( ( showPlayButton ? android.R.drawable.ic_media_play : android.R.drawable.ic_media_pause ) ) ; showPlayButton = ! ( showPlayButton ) ; } } else { android.widget.Toast.makeText ( this, getString ( R.string.no_network ) , Toast.LENGTH_SHORT ) .show () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; if ( ( ! ( savedInstanceState.containsKey ( "movieList" ) ) ) || ( savedInstanceState == null ) ) { updateMovies () ; } else { movieList = savedInstanceState.getParcelableArrayList ( "movieList" ) ; } if ( ( getArguments () ) != null ) { } } 
private void dispatchEventHandler ( EventHandler handler, MouseInfo mouse, boolean isFront ) { assert null != handler; assert mouse != null; if ( handler instanceof BaseActor ) { handler.onMouseIn () ; handler.onMouseOut () ; } handler.onMouseDown () ; handler.onMouseUp () ; handler.onMouseClicked () ; handler.onMouseMoved () ; handler.onMouseDragged () ; handler.onMouseDragging () ; } 
public void removeProgress () { if ( null == ( getItem ( ( ( getItemCount () ) - 1 ) ) ) ) { this.listMovies.remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } 
public calendar.EventProvider newEventProvider ( java.lang.String group_name, java.lang.String group_id, db.Site site, db.DBConnection db ) { calendar.EventProvider event_provider = new calendar.EventProvider ( group_name ) .setAccessPolicy ( new mosaic.GroupAccessPolicy ( group_id, true, true, true, false ) ) .setEventsAreOwned ( true ) .setEventsCanRepeat ( true ) .setEventsHaveColor ( true ) .setEventsHaveEndTime ( true ) .setEventsHaveStartTime ( true ) .setEventsTable ( ( "_events" + ( "group_" + group_id ) ) ) .setSupportReminders ( site ) ; site.addModule ( event_provider, db ) ; return event_provider; } 
@ java.lang.Override public void exitReturn_stmt ( MiniCParser.Return_stmtContext ctx ) { java.lang.String s1; if ( hasReturnExpr ( ctx ) ) { s1 = newTexts.get ( ctx.expr () ) ; newTexts.put ( ctx, ( "retv" + ( ( ( ( blank ) + s1 ) + "\n" ) + ( blank ) ) ) ) ; } else { newTexts.put ( ctx, ( ( blank ) + "ret" ) ) ; } } 
private static void setTableFeatureProperty ( org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.Wildcards propType, org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.protocol.rev130731.table.features.properties.grouping.TableFeaturePropertiesBuilder propBuilder ) { java.util.List<org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch> setFieldMatch = null; org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.wildcards.WildcardSetfield wildcardSetField = ( ( org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.Wildcards ) ( propType ) ) .getWildcardSetfield () ; if ( wildcardSetField != null ) { setFieldMatch = wildcardSetField.getSetFieldMatch () ; } org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.TableFeaturesConvertor.setSetFieldTableFeatureProperty ( propBuilder, TableFeaturesPropType.OFPTFPTWILDCARDS, ( setFieldMatch == null ? new java.util.ArrayList<org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch> () : setFieldMatch ) ) ; } 
private boolean teamHasSpace ( int userId, int teamId ) { try { se.plushogskolan.casemanagement.model.User user = userRepository.getUserById ( userId ) ; if ( teamId == ( user.getTeamId () ) ) { return true; } else { return numberOfUsersInTeamLessThanTen ( teamId ) ; } } catch ( se.plushogskolan.casemanagement.exception.RepositoryException e ) { return numberOfUsersInTeamLessThanTen ( teamId ) ; } } 
public boolean touched ( testagent.Agent agent ) { if ( pick ) return false; double distance = java.lang.Math.sqrt ( ( ( java.lang.Math.pow ( ( ( agent.y ) - ( y ) ) , 2 ) ) + ( java.lang.Math.pow ( ( ( agent.x ) - ( x ) ) , 2 ) ) ) ) ; return distance <= ( ( size ) / ( agentIsSized ? 2 : 1 ) ) ; } 
void setActionNameBox ( int itemType ) { if ( ( SelectionMode.USECOMBO ) != ( _selectionMode ) ) { return; } _comboNameBox = createNameBox ( itemType ) ; if ( ( _comboNameBox ) == null ) { return; } java.lang.String newName = _curAction.getDeviceName () ; _comboNameBox.setSelectedBeanByName ( newName ) ; _comboNameBox.addItemListener ( new jmri.jmrit.conditional.NameBoxListener ( _actionNameField ) ) ; _namePanel.setVisible ( false ) ; _actionComboNamePanel.setVisible ( true ) ; } 
private boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem.optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( ( keepEditor.trim () .length () ) > 0 ) && ( keepEditor != null ) ) { return java.lang.Boolean.parseBoolean ( keepEditor ) ; } return false; } 
private java.util.List<edu.clemson.resolve.AnnotatedModule> parseAndReturnRootModules () { java.util.List<edu.clemson.resolve.AnnotatedModule> modules = new java.util.ArrayList<> () ; for ( java.lang.String e : targetFiles ) { edu.clemson.resolve.AnnotatedModule m = parseModule ( e ) ; if ( null != m ) { modules.add ( parseModule ( e ) ) ; } } return modules; } 
private void selectItem ( int position ) { if ( ( OPTION_MENU_ADD_PERSON ) == position ) { android.content.Intent intent = new android.content.Intent ( this, com.six.maitime.ui.flipper.ViewFlipperMainActivity.class ) ; startActivity ( intent ) ; return; } else { replaceFragment ( new com.six.maitime.ui.PersonListFragment () ) ; drawerList.setItemChecked ( position, true ) ; setTitle ( optionsMenuTitles[position] ) ; mDrawerLayout.closeDrawer ( drawerList ) ; } } 
public java.lang.Long getSupportId ( java.lang.String literal, java.lang.Long citationId ) throws org.ndexbio.model.exceptions.NdexException { org.ndexbio.common.models.object.network.RawSupport r = new org.ndexbio.common.models.object.network.RawSupport ( literal, ( null != citationId ? citationId.longValue () : -1 ) ) ; java.lang.Long supportId = this.rawSupportMap.get ( r ) ; if ( supportId != null ) return supportId; supportId = createSupport ( literal, citationId ) ; this.rawSupportMap.put ( r, supportId ) ; return supportId; } 
@ java.lang.Override public void onMessageReceived ( java.lang.String endpointId, byte[] payload, boolean isReliable ) { android.util.Log.d ( com.team2.android.proctor.ui.AttendanceFragment.TAG, ( ( new java.lang.String ( payload ) ) + "onMessageReceived:" ) ) ; java.lang.String message = new java.lang.String ( payload ) ; com.team2.android.proctor.model.input.Attendance attendance = new com.team2.android.proctor.model.input.Attendance () ; attendance.setUserId ( java.lang.Long.parseLong ( message.split ( ":" ) [0] ) ) ; attendance.setCourseId ( java.lang.Integer.parseInt ( message.split ( ":" ) [1] ) ) ; new com.team2.android.proctor.ui.AttendanceFragment.TakeAttendanceTask () .execute ( attendance ) ; } 
public java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr, java.lang.String inputPattern, java.time.chrono.Chronology inputChronology ) { if ( ( ! ( inputDateStr.isEmpty () ) ) && ( inputDateStr != null ) ) { java.util.Locale locale = java.util.Locale.getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () .parseLenient () .appendPattern ( inputPattern ) .toFormatter () .withChronology ( inputChronology ) .withDecimalStyle ( java.time.format.DecimalStyle.of ( locale ) ) ; return parseStringToDate ( inputDateStr, inputDateTimeFormatter, inputChronology ) ; } return null; } 
@ java.lang.Override public void onNext ( T t ) { if ( 0 == ( t.contentLength () ) ) { return; } if ( ( ( httpCallback ) != null ) && ( ( httpCallback.getType () ) != null ) ) { try { httpCallback.onResolve ( new com.google.gson.Gson () .fromJson ( t.charStream () , httpCallback.getType () ) ) ; } catch ( java.lang.Exception e ) { httpCallback.onFailure ( "", "data resolve error,please check the json response" ) ; e.printStackTrace () ; } } } 
@ java.lang.Override public java.lang.String toString () { return '}' + ( ( ( ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ", lastname='" ) + ( lastname ) ) + '\'' ) + ", firstname='" ) + ( firstname ) ) + '\'' ) + ", homePhone='" ) + ( homePhone ) ) + '\'' ) + ", mobilePhone='" ) + ( mobilePhone ) ) + '\'' ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView, boolean isChecked ) { if ( 0 <= ( currPitInfoIndex ) ) { try { boolean tempValue = pit_auto_high_goal_Button.isChecked () ; if ( ( currTeam.getBoolean ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL ) ) != tempValue ) { currTeam.put ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL, tempValue ) ; if ( ! ( fillingPitInfo ) ) { dbHelper.updatePitInfo ( currTeam ) ; } } } catch ( org.json.JSONException e ) { } } } 
protected void showLocation ( android.location.Location mCurrentLocation ) { if ( null != mCurrentLocation ) { mMap.clear () ; getNeabyMarkers ( mCurrentLocation ) ; mMap.moveCamera ( com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom ( new com.google.android.gms.maps.model.LatLng ( mCurrentLocation.getLatitude () , mCurrentLocation.getLongitude () ) , com.dev.cromer.jason.whatsappening.Activities.MapActivity.CAMERA_ZOOM ) ) ; } com.google.android.gms.maps.model.LatLng center = mMap.getCameraPosition () .target; mLastMarker = mMap.addMarker ( new com.google.android.gms.maps.model.MarkerOptions () .position ( new com.google.android.gms.maps.model.LatLng ( center.latitude, center.longitude ) ) .draggable ( true ) ) ; } 
public boolean removeConnection ( com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection connection ) { boolean removed = false; java.util.Iterator<com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection> iterator = connections.iterator () ; while ( iterator.hasNext () ) { com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection conn = iterator.next () ; if ( null != conn ) { iterator.remove () ; removed = true; break; } } return removed; } 
public void putByteArray ( final byte[] data ) { int l = data.length; putInt ( l ) ; ensure ( ( l + ( position ) ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory ( com.heerbann.unsafe.UnsafeBuffer.toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l; } 
public void placeFoodBlobs () { int counter = 11; while ( 0 != counter ) { java.awt.Point[] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map.getCell ( p ) .setHasFood ( 5 ) ; } counter--; } } } 
public static void shareFileIntent ( android.app.Activity activity, java.lang.String data, java.lang.String title, java.io.File attached ) { ShareCompat.IntentBuilder.from ( activity ) .setType ( "text/plain" ) .addEmailTo ( "" ) .setSubject ( title ) .setStream ( android.support.v4.content.FileProvider.getUriForFile ( activity, ( ".data.database.utils.ExportData" + ( org.eyeseetea.malariacare.BuildConfig.APPLICATION_ID ) ) , attached ) ) .setText ( data ) .setChooserTitle ( "test" ) .startChooser () ; } 
public boolean upload ( java.lang.String nyIpName, java.lang.String fileName, FileContents contents ) { invalidateClients ( fileName ) ; java.lang.System.out.println ( ( fileName + "Received file! Name: " ) ) ; ServerCachedFile serverFile = getFile ( fileName ) ; if ( ( serverFile.state ) == ( FileState.Not_Shared ) ) { java.lang.System.out.println ( "File not shared!" ) ; return false; } serverFile.fileContents = contents; writeFile ( serverFile ) ; serverFile.currentWriter = null; return true; } 
public boolean undo () { if ( self.canUndo () ) { self.getDrawingData () .undo () ; self.nativeClear () ; self.nativeDrawData () ; if ( null != ( self.getDelegate () ) ) { self.getDelegate () .didChangeDrawing ( self, self.canUndo () , self.canRedo () ) ; } return true; } return false; } 
public java.lang.String toString ( android.content.Context context ) { java.lang.String[] values = context.getResources () .getStringArray ( R.array.element_types_array ) ; if ( ( com.freak.carnetdentretien.domain.bean.MaintenanceElement.Type.OTHER.value ) == ( value ) ) { return values[ ( ( values.length ) - 1 ) ]; } else { return values[value]; } } 
public void close () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent.putExtra ( "enabled", false ) ; sendBroadcast ( intent ) ; if ( null != ( service ) ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( -1 ) ) { workWithDataBase.onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this, com.example.hjk.testing.MainActivity.class ) ) ; } 
private int compareBNode ( final org.openrdf.model.BNode first, final java.lang.Object second ) { if ( second instanceof org.openrdf.model.BNode ) { return first.getID () .compareTo ( ( ( org.openrdf.model.BNode ) ( second ) ) .getID () ) ; } else if ( ( second instanceof eu.fbk.knowledgestore.data.Record ) || ( second instanceof org.openrdf.model.URI ) ) { return -1; } return java.lang.Integer.MAX_VALUE; } 
private void advancePlayer () { if ( ( game.player ) == ( game.currentplayer ) ) { game.currentplayer = game.opponent; handleAttack ( game.opponent.choseRandomMove ( game ) ) ; } else { game.currentplayer = game.player; menu.setVisible ( true ) ; infoText.setVisible ( false ) ; } } 
private java.util.List<input.ExternalEvent> readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList<input.ExternalEvent> ( 0 ) ; } java.util.List<input.ExternalEvent> events = reader.readEvents ( nrof ) ; if ( ( ( events.size () ) == 0 ) && ( nrof > 0 ) ) { reader.close () ; allEventsRead = true; } return events; } 
@ java.lang.Override public int getUserAnswerIdByQuestionNumber ( int number ) { com.inquirer.models.Answer userAnswer = null; for ( com.inquirer.models.Answer tmpAnswer : userAnswers ) { if ( number == ( tmpAnswer.getQuestion () ) ) { userAnswer = tmpAnswer; } } if ( userAnswer == null ) { return 0; } else { return userAnswer.getId () ; } } 
protected void processWindowEvent ( java.awt.event.WindowEvent e ) { if ( ( java.awt.event.WindowEvent.WINDOW_CLOSING ) == ( e.getID () ) ) { if ( net.sf.memoranda.util.Configuration.get ( "ON_CLOSE" ) .equals ( "exit" ) ) doExit () ; else doMinimize () ; } else if ( ( e.getID () ) == ( java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) { super.processWindowEvent ( new java.awt.event.WindowEvent ( this, java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) ; doMinimize () ; } else super.processWindowEvent ( e ) ; } 
private void shiftCurrentPlayer () { currentPlayerPosition = ( 1 + ( currentPlayerPosition ) ) % ( activePlayers.size () ) ; currentPlayer = activePlayers.get ( currentPlayerPosition ) ; notifyCurrentPlayerUpdated ( currentPlayer ) ; java.lang.System.out.println ( ( "[TEST] Current Player: " + ( currentPlayer.toString () ) ) ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { if ( ( android.R.id.home ) == ( item.getItemId () ) ) { android.content.Intent homeIntent = new android.content.Intent ( getApplicationContext () , com.anilicious.rigfinances.activities.MainActivity.class ) ; homeIntent.addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( homeIntent ) ; } else { android.content.Intent intent = new android.content.Intent ( getApplicationContext () , com.anilicious.rigfinances.activities.SettingsActivity.class ) ; startActivity ( intent ) ; } return super.onOptionsItemSelected ( item ) ; } 
private static double operation ( char op, double val1, double val2 ) { switch ( op ) { case '+': return val1 + val2; case '-': return val2 - val1; case '*': return val2 * val1; case '/': if ( val2 == 0 ) throw new java.lang.UnsupportedOperationException ( "Cannot divide by zero" ) ; return val2 / val1; case '^': return java.lang.Math.pow ( val2, val1 ) ; } return 0; } 
private void removeEntryMNS ( java.lang.String mrn ) throws java.io.IOException, java.net.UnknownHostException { java.net.Socket MNSSocket = new java.net.Socket ( "localhost", 1004 ) ; java.io.BufferedWriter outToMNS = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( MNSSocket.getOutputStream () , java.nio.charset.Charset.forName ( "UTF-8" ) ) ) ; if ( kr.ac.kaist.mms_server.MMSConfiguration.LOGGING ) java.lang.System.out.println ( ( mrn + "Remove-Entry:" ) ) ; outToMNS.write ( ( ( "Remove-Entry:" + "," ) + mrn ) ) ; outToMNS.flush () ; outToMNS.close () ; MNSSocket.close () ; return; } 
public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connectorStatusLock.lock () ; try { connector = io.joynr.proxy.ConnectorFactory.create ( dispatcher, messageSender, proxyParticipantId, result, qosSettings ) ; connectorStatus = ConnectorStatus.ConnectorSuccesful; connectorSuccessfullyFinished.signal () ; if ( null != ( connector ) ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } catch ( io.joynr.exceptions.JoynrIllegalStateException e ) { e.printStackTrace () ; } finally { connectorStatusLock.unlock () ; } } 
public boolean changeQuizName ( java.lang.String newQuizName ) { Category c = new Category ( category ) ; c.readFromFile ( ( ".txt" + ( c.getCategory () ) ) ) ; if ( c.change ( quizName, newQuizName ) ) { this.quizName = newQuizName; writeToFile ( ( ( quizName ) + ".txt" ) , toString () , false ) ; return true; } return false; } 
public static void loadAllWeight () { java.lang.String openid = session.get ( "openid" ) ; openid = "ob1R-uD5CgT-x-FEdtMIgAWYr4Vs"; java.lang.String sql = "' order by w.wDate desc" + ( "select new beans.PregwBean ( w.wDate,w.wValue ) from GestationalWeight w where w.userId = '" + openid ) ; java.util.List<beans.PregwBean> bean = play.db.jpa.JPA.em () .createQuery ( sql ) .getResultList () ; wsOk ( bean ) ; } 
@ java.lang.Override public cn.wisdom.lottery.service.remote.response.LotteryOpenData getCurrentPeriod ( cn.wisdom.lottery.dao.constant.LotteryType lotteryType ) { java.lang.String errMsg = java.text.MessageFormat.format ( "Failed to query {0} current period info.", lotteryType ) ; cn.wisdom.lottery.dao.vo.PrizeLottery prizeLottery = daoHelper.queryForObject ( cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.GET_SSQ_CURRENT_PERIOD, cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.ssqPrizeInfoMapper, errMsg ) ; if ( ( ( prizeLottery.getOpenTime () ) != null ) && ( prizeLottery != null ) ) { java.sql.Timestamp openTime = prizeLottery.getOpenTime () ; unifyOpenTime ( openTime ) ; prizeLottery.setOpenTime ( openTime ) ; } return new cn.wisdom.lottery.service.remote.response.LotteryOpenData ( prizeLottery ) ; } 
protected void closeFileObject ( com.shesse.h2ha.FilePathHa filePath, long lastModified ) throws java.io.IOException { java.nio.channels.FileChannel fc = openFiles.remove ( filePath ) ; if ( null != fc ) { fc.close () ; } if ( filePath.exists () ) { filePath.lastModified ( lastModified ) ; } } 
@ java.lang.Override public void updateQuality ( mvc.models.Item item ) { if ( 0 > ( item.getSellIn () ) ) item.setQuality ( ( ( item.getQuality () ) - ( mvc.models.OrganicBananas.QUALITY_STEP ) ) ) ; else item.setQuality ( ( ( item.getQuality () ) - ( ( mvc.models.OrganicBananas.QUALITY_STEP ) * 2 ) ) ) ; } 
private org.eclipse.smarthome.automation.core.internal.RuntimeRule getRuleByTemplate ( org.eclipse.smarthome.automation.core.internal.RuntimeRule rule ) { java.lang.String ruleTemplateUID = rule.getTemplateUID () ; org.eclipse.smarthome.automation.template.RuleTemplate template = ( ( org.eclipse.smarthome.automation.template.RuleTemplate ) ( tManager.get ( ruleTemplateUID ) ) ) ; if ( null == template ) { logger.debug ( ( ( "Rule template '" + ruleTemplateUID ) + "' does not exist." ) ) ; return null; } else { org.eclipse.smarthome.automation.core.internal.RuntimeRule r1 = new org.eclipse.smarthome.automation.core.internal.RuntimeRule ( rule.getUID () , template, rule.getConfiguration () ) ; return r1; } } 
public static java.lang.String encodePath ( java.lang.String path ) { if ( ( ( path.length () ) == 0 ) || ( path == null ) ) return path; java.lang.StringBuilder buf = org.eclipse.jetty.util.URIUtil.encodePath ( null, path ) ; return buf == null ? path : buf.toString () ; } 
@ java.lang.Override public org.bds.lang.Type returnType ( org.bds.scope.Scope scope ) { if ( null != ( returnType ) ) return returnType; expr.returnType ( scope ) ; if ( expr.canCastInt () ) returnType = Type.INT; else if ( expr.canCastReal () ) returnType = Type.REAL; else throw new java.lang.RuntimeException ( "Cannot cast to 'int' or 'real'. This should never happen!" ) ; return returnType; } 
pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( null == vectorElement ) throw new pl.karol202.evolution.utils.SimulationParseException ( ( "Vector element not found: " + key ) ) ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float.parseFloat ( element.getAttribute ( "x" ) ) , java.lang.Float.parseFloat ( element.getAttribute ( "y" ) ) ) ; } 
public void emit ( T record ) throws java.io.IOException, java.lang.InterruptedException { for ( int targetChannel : channelSelector.selectChannels ( record, numChannels ) ) { if ( ( targetPartition.getChannelNonDropProbability ( targetChannel ) ) < ( random.nextInt ( 100 ) ) ) { sendToTarget ( record, targetChannel ) ; } } } 
private void drawWifi ( com.anwesome.games.dataindicationbutton.Canvas canvas, com.anwesome.games.dataindicationbutton.Paint paint ) { float r = ( radius ) / 60; canvas.drawCircle ( 0, 0, r, paint ) ; for ( int i = 1; 3 >= i; i++ ) { float newR = r * ( i * 10 ) ; canvas.drawArc ( new com.anwesome.games.dataindicationbutton.RectF ( ( -r ) , ( -r ) , r, r ) , 240, 60, false, paint ) ; } } 
public void assertEqual ( java.lang.Object o1, java.lang.Object o2, java.lang.String expression ) { if ( java.util.Objects.equals ( o1, o2 ) ) { expect ( true, ( o2 + ( expression + " == " ) ) ) ; } else { expect ( true, ( ( expression + " != " ) + o2 ) ) ; } } 
@ java.lang.Override public aljebra.data.sparse.SparseVector scale ( double factor ) { if ( 0.0 == factor ) { return new aljebra.data.sparse.SparseVector ( size ) ; } aljebra.data.sparse.SparseVector result = new aljebra.data.sparse.SparseVector ( size ) ; for ( int i : ids ) { result.set ( i, ( ( data[i] ) * factor ) ) ; } return result; } 
public static double sumSigma ( int i, double[] p, double[] q, double[] b ) { double res = 0; for ( int l = 0; ( p.length ) > l; l++ ) { double power = ( p[i] ) * ( q[l] ) ; res += java.lang.Math.exp ( power ) ; } return res; } 
private org.programmatori.domotica.own.plugin.system.Value getModel () { java.lang.String model = null; try { model = org.programmatori.domotica.own.sdk.config.Config.getInstance () .getNode ( "system.model" ) ; } catch ( java.lang.Exception e ) { } if ( null == model ) { model = "99"; } org.programmatori.domotica.own.plugin.system.Value v = new org.programmatori.domotica.own.plugin.system.Value ( model ) ; return v; } 
public static boolean allNumbersValid ( java.util.Vector<?> textFields ) { for ( java.lang.Object text : textFields ) { java.lang.String string = ( ( java.awt.TextField ) ( text ) ) .getText () ; if ( 0 == ( string.length () ) ) return false; if ( ( string.equals ( "∞" ) ) || ( string.equals ( "-∞" ) ) ) continue; try { java.lang.Double.parseDouble ( string ) ; } catch ( java.lang.NumberFormatException e ) { return false; } } return true; } 
protected void check () { if ( host.getAutoDeploy () ) { org.apache.catalina.startup.HostConfig.DeployedApplication[] apps = deployed.values () .toArray ( new org.apache.catalina.startup.HostConfig.DeployedApplication[0] ) ; for ( int i = 0; ( apps.length ) > i; i++ ) { if ( ! ( isServiced ( apps[i].name ) ) ) checkResources ( apps[i] ) ; } if ( host.getUndeployOldVersions () ) { checkUndeploy () ; } deployApps () ; } } 
public static void clearInitStack () { final java.lang.ThreadLocal<java.util.Deque<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph>> is = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack; if ( null != is ) is.get () .clear () ; final java.lang.ThreadLocal<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph> ag = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph; if ( ag != null ) ag.set ( null ) ; final com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal dbtl = com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.INSTANCE; if ( dbtl != null ) dbtl.set ( null ) ; } 
public static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null; try { while ( null != ( line = reader.readLine () ) ) { sb.append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e.printStackTrace () ; } return sb.toString () ; } 
private static void closeConnectionBetween ( com.hazelcast.core.HazelcastInstance h1, com.hazelcast.core.HazelcastInstance h2 ) { if ( ( h2 == null ) || ( h1 == null ) ) { return; } com.hazelcast.instance.Node n1 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample.getNode ( h1 ) ; com.hazelcast.instance.Node n2 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample.getNode ( h2 ) ; if ( ( n1 != null ) && ( n2 != null ) ) { n1.clusterService.removeAddress ( n2.address ) ; n2.clusterService.removeAddress ( n1.address ) ; } } 
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message.get ( 0 ) ; float amountPaid = message.get ( 1 ) ; float cost = 0; synchronized ( m_checks ) { for ( core.restaurant.Check c : m_checks ) { if ( customer == ( c.getCustomer () ) ) { c.setStatus ( CheckStatusEnum.Received ) ; c.setChange ( ( amountPaid - cost ) ) ; } } } print ( ( ( customer.getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } 
private synchronized boolean isLineAvaliable ( int line ) { org.zhgeaits.zgdanmaku.model.ZGDanmaku danmaku = mLinesAvaliable.get ( line ) ; if ( null == danmaku ) { return true; } if ( ( danmaku.getCurrentOffsetX () ) > ( danmaku.getDanmakuWidth () ) ) { return true; } return false; } 
protected void initTableColumns ( org.eclipse.jface.layout.TreeColumnLayout treeLayout, boolean keepColumnStatus ) { if ( null != ( treeViewer ) ) { org.eclipse.swt.widgets.Tree tree = treeViewer.getTree () ; if ( ( tree != null ) && ( ! ( tree.isDisposed () ) ) ) { initTableColumns ( tree, treeLayout, keepColumnStatus ) ; } } } 
private void askQuestions () { int idx = ( firstaid_questions.size () ) - ( quesLen ) ; if ( ( firstaid_questions.size () ) > idx ) { app.speakOut ( firstaid_questions.get ( idx ) .getQues () ) ; expect_binary = true; current_grammar = app.BINARY_RESPONSE; } else { app.speakOut ( "Sorry. This is beyond my scope." ) ; conclude = true; } } 
public java.util.List<java.lang.Integer> getDaysFromThisMonth ( int month, int year ) { java.util.Calendar cal = new java.util.GregorianCalendar () ; int max = cal.getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.util.List<java.lang.Integer> daysFromThisMonth = new java.util.ArrayList<java.lang.Integer> () ; for ( int i = 0; max > i; i++ ) { daysFromThisMonth.add ( ( i + 1 ) ) ; } return daysFromThisMonth; } 
void CurrentPosUpdate () { if ( ! ( currentNode.nodeText.getText () .equals ( "\n" ) ) ) { CurrentPosX = ( java.lang.Math.round ( currentNode.nodeText.getLayoutBounds () .getWidth () ) ) + ( currentNode.nodeText.getX () ) ; CurrentPosY = currentNode.nodeText.getY () ; } else { CurrentPosX = sg.util.FastLinkedList.MARGIN; double deltaH = java.lang.Math.round ( currentNode.pre.nodeText.getLayoutBounds () .getHeight () ) ; CurrentPosY += deltaH; } } 
private double getPriorForStructure ( int numParents ) { double e = getStructurePrior () ; int k = numParents; int vm = ( data.length ) - 1; return ( ( vm - k ) * ( java.lang.Math.log ( ( 1.0 - ( e / vm ) ) ) ) ) + ( java.lang.Math.log ( ( e / vm ) ) ) ; } 
private void revertInformationOfRequest ( final com.dmm.leavemanagementsystem.models.LeaveRequest request, final int position ) { setupTextViewStatus ( request ) ; setupLinearLayoutApproveOrUnapprove ( request, position ) ; setupSpinnerSubject ( request, position ) ; setupTextViewPhone ( request ) ; setupEditTextMessage ( request ) ; setupTextViewFromDate ( request ) ; setupTextViewFromHour ( ( 0 == ( request.getSt_approve () ) ) ) ; setupSpinnerDuration ( request.getDuration () ) ; setupTextViewUnitDuration () ; setupLinearLayoutDeleteAndRevert ( request, position ) ; } 
private static int getValidLineNumber ( int line, com.intellij.openapi.editor.Document document ) { int lineCount = net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck.getDocumentLineCount ( document ) ; line = line - 1; if ( 0 >= line ) { line = 1; } else if ( line >= lineCount ) { line = lineCount - 1; } return line; } 
public void gameClick ( android.view.View v ) { if ( ( ( ( android.os.SystemClock.elapsedRealtime () ) - ( lastClickTime ) ) < 200 ) && ( ! ( canClick ) ) ) return; canClick = false; lastClickTime = android.os.SystemClock.elapsedRealtime () ; super.gameClick ( v ) ; this.playerHandle ( v ) ; } 
public void increaseValue () { java.lang.String oldValue = textBox.getValue () ; if ( ( isValidForType ( oldValue ) ) && ( isChangeable () ) ) { try { java.lang.String newValue = getIncreasedValue ( oldValue ) ; if ( isSmallerThanMax ( newValue ) ) { textBox.setValue ( newValue ) ; valueUpdateTimer.schedule ( updateDelay ) ; valueUpdateTimer.setValue ( newValue ) ; } } catch ( java.lang.Exception e ) { valueUpdateTimer.cancel () ; com.google.gwt.core.client.GWT.log ( "Exception when increasing value", e ) ; } } } 
private int setListBottom ( java.util.List listToSetBottomOf, int listTopPos ) { int listBottom = 0; if ( 0 < ( listToSetBottomOf.size () ) ) { if ( ( listToSetBottomOf.size () ) < 10 ) { listBottom = listToSetBottomOf.size () ; } else { listBottom = listTopPos + 11; } } return listBottom; } 
private data_structures.Node findNode ( int index ) { if ( ( isEmpty () ) || ( ! ( checkIndex ( index ) ) ) ) { return null; } if ( index == ( ( size ) - 1 ) ) { return tail; } data_structures.Node node = head; for ( int i = 0; i < index; i++ ) { node = node.getNext () ; } return node; } 
@ java.lang.Override public synchronized void close () throws com.actemium.basicTvx_sdk.restclient.RestException { com.actemium.basicTvx_sdk.GlobalObjectManager.LOGGER.info ( "fermeture du GOM" ) ; com.actemium.basicTvx_sdk.GlobalObjectManager.isInit = false; if ( null != ( com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager ) ) ( ( com.actemium.basicTvx_sdk.PersistanceManagerRest ) ( com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager ) ) .closeHttpClient () ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.idHelper = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.factory = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.gestionCache = null; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.isCachePurgeAutomatiquementSiException = false; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.nonRecuperableViaWebService.clear () ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.lockFindOrCreate = null; } 
public void moveTailToBackOfHead () { if ( 0 < ( length ) ) { com.mygdx.game.Cell tail = body.get ( ( ( length ) - ( length ) ) ) ; tail.setX ( breadCrumbsList.get ( ( ( length ) - 1 ) ) .getX () ) ; tail.setY ( breadCrumbsList.get ( ( ( length ) - 1 ) ) .getY () ) ; body.add ( ( ( length ) - 1 ) , tail ) ; } } 
public java.lang.String inviteUserToBooking ( java.lang.String username_to_invite, int booking_id ) throws java.sql.SQLException { java.sql.PreparedStatement s1 = connection.prepareStatement ( "SELECT systemUserId FROM SystemUser WHERE username=?" ) ; s1.setString ( 1, username_to_invite ) ; java.sql.ResultSet result = s1.executeQuery () ; if ( result.next () ) inviteUserToBooking ( result.getInt ( 1 ) , booking_id ) ; if ( result.next () ) return inviteUserToBooking ( result.getInt ( 1 ) , booking_id ) ; return "'." + ( "No such user found '" + username_to_invite ) ; } 
@ java.lang.Override public void chooseOnePokemon () { int choice = 0; int chosenPokemon; do { chosenPokemon = 0; printStarterPokemon () ; chosenPokemon = getChosen () ; java.lang.System.out.println ( "Do you choose him?" ) ; java.lang.System.out.println ( "[1]Yes [2]No" ) ; choice = main.ConsoleRenderer.input.nextInt () ; if ( 2 == choice ) { chooseOnePokemon () ; } else if ( choice != 1 ) { java.lang.System.out.println ( "Choose Yes or No!" ) ; } } while ( choice != 1 ) ; main.Player.choosePokemon ( chosenPokemon ) ; java.lang.System.out.println ( "Successufully added a pokemon" ) ; } 
public int getIndexDoc ( final java.lang.String fileName ) { for ( int di = 0; ( ndocs ) > di; di++ ) { if ( docs[di].getDocLoc () .getPath () .contains ( fileName ) ) return di; } return -1; } 
public void enter ( android.view.View in, com.iodesystems.android.libs.view.transitions.TransitionPair transitionPair ) { if ( ! ( views.isEmpty () ) ) { android.view.View out = views.peek () ; if ( null != ( onPageTransitionListener ) ) { onPageTransitionListener.onPageTransition ( in, out ) ; } transitionPair.enter ( out, in ) ; } views.push ( in ) ; transitionPairs.push ( transitionPair ) ; } 
@ org.isoron.uhabits.utils.Nullable public static java.lang.String getRingtoneName ( org.isoron.uhabits.utils.Context context ) { try { org.isoron.uhabits.utils.Uri ringtoneUri = org.isoron.uhabits.utils.RingtoneUtils.getRingtoneUri ( context ) ; java.lang.String ringtoneName = context.getResources () .getString ( R.string.none ) ; if ( null != ringtoneUri ) { org.isoron.uhabits.utils.Ringtone ringtone = org.isoron.uhabits.utils.RingtoneManager.getRingtone ( context, ringtoneUri ) ; if ( ringtone != null ) { ringtoneName = ringtone.getTitle ( context ) ; ringtone.stop () ; } } return ringtoneName; } catch ( java.lang.RuntimeException e ) { e.printStackTrace () ; return null; } } 
@ java.lang.Override public void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { if ( ( Section.SAVED.ordinal () ) == ( currentSection ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a.equals ( article ) ) { articles.remove ( a ) ; break; } } if ( articles.isEmpty () ) { articlesFragment.showNoSavedArticlesContainer ( true ) ; } articlesFragment.notifyArticlesChanged ( true, true ) ; } } 
public static double normalizeValue ( final double input, final double avg, final double std ) { double res = 0; if ( 0 != std ) { res = ( input - avg ) / std; } else { res = 0; } return res; } 
private static java.util.List<ru.stqa.pft.addressbook.model.GroupData> generateGroups ( int count ) { java.util.List<ru.stqa.pft.addressbook.model.GroupData> groups = new java.util.ArrayList<ru.stqa.pft.addressbook.model.GroupData> () ; for ( int i = 0; count > i; i++ ) { groups.add ( new ru.stqa.pft.addressbook.model.GroupData () .withName ( java.lang.String.format ( "test %s", i ) ) .withHeader ( java.lang.String.format ( "header %s", i ) ) .withFooter ( java.lang.String.format ( "footer %s", i ) ) ) ; } return null; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/{code}", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String updateSubCategory ( @org.springframework.web.bind.annotation.ModelAttribute @javax.validation.Valid org.egov.tl.entity.LicenseSubCategory licenseSubCategory, org.springframework.validation.BindingResult errors, org.springframework.web.servlet.mvc.support.RedirectAttributes additionalAttr, final org.springframework.ui.Model model ) { if ( errors.hasErrors () ) { populateDropdownData ( model ) ; return "subcategory-update"; } licenseSubCategoryService.updateLicenseSubCategory ( licenseSubCategory ) ; additionalAttr.addFlashAttribute ( "message", "msg.success.subcategory.update" ) ; return ( licenseSubCategory.getCode () ) + "redirect:/licensesubcategory/view/"; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/login", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String login1 ( javax.servlet.http.HttpSession session, javax.servlet.http.HttpServletRequest request ) { if ( null != ( session.getAttribute ( "user" ) ) ) { request.removeAttribute ( "notification" ) ; session.setAttribute ( "notification", "You are already logged in." ) ; return "index"; } else { session.removeAttribute ( "notification" ) ; session.removeAttribute ( "notifsignup" ) ; request.setAttribute ( "url", request.getParameter ( "url" ) ) ; return "login"; } } 
public java.util.ArrayList<java.lang.Boolean> asList () { java.util.ArrayList<java.lang.Boolean> l = new java.util.ArrayList<java.lang.Boolean> ( length ) ; for ( int i = 0; ( length ) > i; i++ ) { l.set ( i, get ( i ) ) ; } return l; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) { switch ( requestCode ) { case io.card.payment.CardIOActivity.PERMISSION_REQUEST_ID: { waitingForPermission = false; if ( ( ( grantResults[0] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( grantResults.length ) > 0 ) ) { showCameraScannerOverlay () ; } else { manualEntryFallbackOrForced = true; } onResume () ; } } } 
protected synchronized java.lang.String sourceForModelledClass ( spoon.reflect.declaration.CtType<?> modelledClass ) { prettyPrinter.scan ( modelledClass ) ; java.lang.String sourceCode = ( prettyPrinter.toString () ) + ( ( ( "package " + ( modelledClass.getPackage () .toString () ) ) + ";" ) + ( java.lang.System.getProperty ( "line.separator" ) ) ) ; prettyPrinter.reset () ; return sourceCode; } 
public int getTileMeta ( net.minecraft.world.IBlockAccess blockAccess, int x, int y, int z ) { return null != ( blockAccess.getTileEntity ( x, y, z ) ) ? getTileMeta ( blockAccess.getTileEntity ( x, y, z ) .getWorldObj () , x, y, z ) : null; } 
@ java.lang.Override public java.lang.String toString () { return "]" + ( ( ( ( ( ( ( ( ( ( ( "EntitySet [entityTypeId=" + ( entityTypeId ) ) + ", name=" ) + ( name ) ) + ", type=" ) + ( type ) ) + ", id=" ) + ( id ) ) + ", title=" ) + ( title ) ) + ", description=" ) + ( description ) ) ; } 
@ org.jetbrains.annotations.NotNull public static com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManager getManager () { if ( null == ( com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager ) ) { com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl () ; com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerADAuthDecorator ( com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager ) ; } if ( ( com.microsoftopentechnologies.intellij.helpers.azure.rest.AzureRestAPIManagerImpl.getManager () .getAuthenticationMode () ) == ( com.microsoftopentechnologies.intellij.helpers.azure.AzureAuthenticationMode.ActiveDirectory ) ) { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth; } else { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager; } } 
public double subtractRange ( final int firstIndex, final int secondIndex ) { double result = systemCoefficients[firstIndex][secondIndex]; for ( int k = 0; ( secondIndex - 1 ) >= k; k++ ) { result -= ( lMatrix[firstIndex][k] ) * ( lMatrix[secondIndex][k] ) ; } return result; } 
public int getRelativeMajor ( int note ) { int relativeMajor = 0; for ( int j = 0; 12 > j; j++ ) { if ( ( notes[j] ) == note ) { int index = ( j + 3 ) % ( SIZE_OF_NOTES_ARRAY ) ; relativeMajor = notes[index]; break; } } return relativeMajor; } 
@ java.lang.Override public void close () { if ( null != ( mNewtCanvasAWT ) ) { mNewtCanvasAWT = null; return; } try { if ( ( mClearGLWindow ) != null ) { mClearGLWindow.close () ; mClearGLWindow = null; } } catch ( final java.lang.NullPointerException e ) { } catch ( final java.lang.Throwable e ) { java.lang.System.err.println ( e.getLocalizedMessage () ) ; } super.close () ; } 
@ java.lang.Override public void connect () throws de.mickare.xserver.exceptions.NotInitializedException, java.io.IOException, java.lang.InterruptedException { try ( de.mickare.xserver.util.concurrent.CloseableLock c = conLock.writeLock () .open () ) { if ( ( ! ( valid () ) ) || ( ! ( this.manager.isRunning () ) ) ) { return; } manager.debugInfo ( ( ( "Connecting to " + ( this.name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager.getSocketFactory () , host, port, this, manager ) ; } } 
@ java.lang.Override public void onEvent ( eu.dlvm.domotics.base.Block source, eu.dlvm.domotics.events.EventType event ) { switch ( event ) { case ON: on () ; break; case OFF: reallyOff () ; break; case TOGGLE: toggle () ; break; case DELAY_ON: delayOn () ; break; case DELAY_OFF: delayOff () ; break; default: eu.dlvm.domotics.actuators.Fan.logger.warn ( ( ( source.getName () ) + ( ( "Ignored event " + event ) + " from " ) ) ) ; } } 
public void formatEditText ( android.widget.EditText editText ) { if ( editText.getText () .toString () .equals ( "" ) ) { editText.setText ( "00" ) ; } else if ( 1 == ( editText.length () ) ) { java.lang.String temp = 0 + ( editText.getText () .toString () ) ; editText.setText ( temp ) ; } } 
private void syncNewLinePositions () { for ( int i = lastNewLinePositionIndex; 0 == i; i-- ) { if ( ( position ) >= ( newLinePositions[lastNewLinePositionIndex] ) ) { break; } else { newLinePositions[ ( ( lastNewLinePositionIndex ) -- ) ] = -1; } } } 
private java.lang.String inputStreamToString ( java.io.InputStream inputStream ) throws java.io.IOException { java.io.Reader reader = new java.io.InputStreamReader ( inputStream, "gb2312" ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( reader ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String buffer; while ( null != ( buffer = bufferedReader.readLine () ) ) { sb.append ( buffer ) .append ( "\n" ) ; } bufferedReader.close () ; reader.close () ; return sb.toString () ; } 
private void shuffleDeck () { int random = 0; for ( int i = 0; ( numberOfCards ) > i; i++ ) { random = srk.syracuse.gameofcards.Model.Deck.getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards[i]; cards[i] = cards[random]; cards[random] = temp; } } 
private boolean hideMessageByJSONSetting ( org.json.JSONArray array ) { org.json.JSONObject object = array[0]; try { if ( false == ( object.getJSONObject ( "data" ) .getBoolean ( "notification" ) ) ) { return false; } } catch ( java.lang.Exception e ) { return true; } return true; } 
public static void main ( java.lang.String[] args ) throws java.io.IOException { if ( ( args.length ) != 3 ) { upem.jarret.worker.ClientJarRet.usage () ; return; } upem.jarret.worker.ClientJarRet client = new upem.jarret.worker.ClientJarRet ( args[0], args[1], java.lang.Integer.parseInt ( args[2] ) ) ; try { client.launch () ; } catch ( java.lang.ClassNotFoundException | java.lang.IllegalAccessException | java.lang.InstantiationException e ) { e.printStackTrace () ; } } 
public static ml.shifu.shifu.container.obj.ModelConfig loadModelConfig ( java.lang.String path, ml.shifu.shifu.container.obj.RawSourceData.SourceType sourceType ) throws java.io.IOException { ml.shifu.shifu.container.obj.ModelConfig modelConfig = ml.shifu.shifu.util.CommonUtils.loadJSON ( path, sourceType, ml.shifu.shifu.container.obj.ModelConfig.class ) ; if ( null != ( modelConfig.getTrain () .getGridConfigFile () ) ) { modelConfig.getTrain () .setGridConfigFileContent ( ml.shifu.shifu.util.CommonUtils.loadFileContent ( path, sourceType ) ) ; } return modelConfig; } 
public void update () { android.content.ContentResolver resolver = mContext.getContentResolver () ; mOneFingerQuickSettingsIntercept = 1 == ( Settings.System.getInt ( resolver, Settings.System.STATUS_BAR_QUICK_QS_PULLDOWN, 1 ) ) ; mDoubleTapToSleepEnabled = ( Settings.System.getInt ( resolver, Settings.System.DOUBLE_TAP_SLEEP_GESTURE, 1 ) ) == 1; mStatusBarLockedOnSecureKeyguard = ( Settings.Secure.getIntForUser ( resolver, Settings.Secure.STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD, 1, UserHandle.USER_CURRENT ) ) == 1; } 
@ java.lang.Override public void run () { if ( download.needToDownload () ) { fireTask ( ( ( download.getFilename () ) + ( ( Language.INSTANCE.localize ( "common.downloading" ) ) + " " ) ) ) ; download.download ( true ) ; } else { download.copyFile () ; } } 
@ java.lang.Override public void onShutdownInput () { assert eventloop.inEventloopThread () ; if ( null != ( callback ) ) { if ( ( ( reading ) == ( BODY ) ) && ( ( contentLength ) == ( UNKNOWN_LENGTH ) ) ) { onHttpMessage ( bodyQueue.takeRemaining () ) ; } else { closeWithError ( io.datakernel.http.HttpClientConnection.CLOSED_CONNECTION ) ; } } close () ; } 
@ java.lang.Override public void onAttachedToRecyclerView ( android.support.v7.widget.RecyclerView recyclerView ) { if ( null == ( mRunnables ) ) { mRunnables = new java.util.ArrayList<> () ; int count = getItemCount () ; for ( int i = 0; i < count; i++ ) { mRunnables.add ( null ) ; } } registerAdapterDataObserver ( new com.tr4android.recyclerviewslideitem.SwipeAdapter.SwipeAdapterDataObserver () ) ; } 
private void updateConnections () { for ( Models.Location l1 : validLocations ) for ( Models.Location l2 : validLocations ) for ( Models.Location mid : validLocations ) if ( ( connection.get ( new Models.LocationPair ( l2, mid ) ) ) && ( connection.get ( new Models.LocationPair ( l1, mid ) ) ) ) connection.put ( new Models.LocationPair ( l1, l2 ) , true ) ; } 
public Person retrieve () { int iterator = ( array.length ) - 1; while ( null == ( array[iterator] ) ) { iterator--; } Person retrieved = array[iterator]; array[iterator] = null; return retrieved; } 
public static boolean checkPlayersTiles ( java.lang.String board, int player, int value, int numOfValues ) { java.lang.String tiles = game.manger.SaveTheIslandGame.Board.getPlayersTiles ( player, board ) ; int count = 0; for ( int i = 0; 5 > i; i++ ) { if ( ( java.lang.Integer.parseInt ( tiles.substring ( i, ( i + 1 ) ) ) ) == value ) { count++; } } return count == value; } 
@ org.springframework.scheduling.annotation.Async @org.springframework.scheduling.annotation.Scheduled ( cron = "0 0 0 * * *" ) private void execute () { java.lang.Integer history = null; try { history = config.getInteger ( ConfigProperty.EXECUTION_LOG_HISTORY ) ; } finally { } if ( ( history <= ( -1 ) ) || ( history == null ) ) { return; } java.util.Calendar pruneLine = java.util.Calendar.getInstance () ; pruneLine.setTime ( new java.util.Date () ) ; pruneLine.add ( java.util.Calendar.DAY_OF_YEAR, ( -history ) ) ; dbLog.prune ( pruneLine.getTime () ) ; } 
public void mouseUpdate ( int mx, int my, boolean pressed ) { if ( false == pressed ) { this.destroy () ; } else if ( this.contains ( mx, my ) ) { if ( ( this.fixed ) == true ) { this.bind ( mx, this.fixed_y ) ; } else { this.bind ( mx, my ) ; } } } 
public static boolean checkLimit ( net.dv8tion.jda.core.entities.Guild guild ) { fredboat.audio.player.GuildPlayer guildPlayer = fredboat.audio.player.PlayerRegistry.getExisting ( guild ) ; if ( ( ( guildPlayer.getSongCount () ) > 0 ) && ( guildPlayer != null ) ) return true; return ( ( fredboat.audio.player.PlayerLimitManager.limit ) > 0 ) || ( ( fredboat.audio.player.PlayerRegistry.getPlayingPlayers () .size () ) < ( fredboat.audio.player.PlayerLimitManager.limit ) ) ; } 
public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem.getDanceSequenceId () ; ch.ethz.asl.dancebots.danceboteditor.model.DanceSequence<T> selectedDanceSequence = mDanceSequences.get ( danceSequenceID ) ; int danceSequenceLength = selectedDanceSequence.getLength () ; int startIdx = selectedDanceSequence.getStartElement () .getBeatPosition () ; int endIdx = danceSequenceLength + startIdx; resetElements ( startIdx, endIdx ) ; mDanceSequences.remove ( danceSequenceID ) ; } 
public boolean containsKey ( java.lang.String key ) { int index = ( java.lang.Math.abs ( key.hashCode () ) ) % ( this.valueTable.length ) ; java.lang.String currentKey; while ( null != ( currentKey = this.keyTable[index] ) ) { if ( key.equals ( currentKey ) ) return true; index = ( index + 1 ) % ( this.keyTable.length ) ; } return false; } 
@ java.lang.Override public twitter4j.User showUser ( java.lang.String arg0 ) throws twitter4j.TwitterException { if ( 179 == ( limits[1] ) ) { SocialNetworkAnalysis.TwitterWrapper.timelimited[0] = new java.util.Date () ; limit.reached () ; limits[1] = 0; } ( limits[1] ) ++; java.lang.System.out.println ( "limits in showUser: " ) ; for ( int limit : limits ) { java.lang.System.out.print ( ( limit + " " ) ) ; } java.lang.System.out.println () ; return t.showUser ( arg0 ) ; } 
private com.gamesbykevin.breakout.ball.Balls.Key getRandomKey () { if ( this.keys.isEmpty () ) { for ( com.gamesbykevin.breakout.ball.Balls.Key key : com.gamesbykevin.breakout.ball.Balls.Key.values () ) { if ( ( com.gamesbykevin.breakout.ball.Balls.Key.Red ) == key ) continue; this.keys.add ( key ) ; } } final int index = GamePanel.RANDOM.nextInt ( com.gamesbykevin.breakout.ball.Balls.Key.values () .length ) ; final com.gamesbykevin.breakout.ball.Balls.Key tmp = com.gamesbykevin.breakout.ball.Balls.Key.values () [index]; this.keys.remove ( index ) ; return tmp; } 
@ java.lang.Override public org.craftercms.profile.api.VerificationToken getVerificationToken ( java.lang.String tokenId ) throws org.craftercms.profile.api.exceptions.ProfileException { java.lang.String url = getAbsoluteUrl ( ( ( URL_PROFILE_GET_VERIFICATION_TOKEN ) + ( BASE_URL_PROFILE ) ) ) ; url = org.craftercms.commons.rest.RestClientUtils.addQueryParams ( url, createBaseParams () , false ) ; return doGetForObject ( url, org.craftercms.profile.api.VerificationToken.class, tokenId ) ; } 
@ java.lang.Override public void onStart () { super.onStart () ; if ( null == ( resultDrawer ) ) { accountList = getAccounts () ; if ( ! ( accountList.isEmpty () ) ) { selectedAccount = accountList.get ( 0 ) ; createDrawer () ; selectAccount ( selectedAccount ) ; onUserEventsSelected () ; } } } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { progressBar.setVisibility ( View.GONE ) ; android.os.Bundle extras = getIntent () .getExtras () ; if ( null != extras ) { java.lang.String messageContent = extras.getString ( "xmpp_status" ) ; if ( ( messageContent != null ) && ( messageContent.equals ( "success" ) ) ) { startActivity ( new android.content.Intent ( this, com.example.xmppchatsampleproject.ChatOptionActivity.class ) ) ; } else { android.widget.Toast.makeText ( this, "Somthing went wrong. try again", Toast.LENGTH_SHORT ) .show () ; } } } 
public double getNumSteps ( android.graphics.Point p1, android.graphics.Point p2, int stepSize ) { int x = ( p2.x ) - ( p1.x ) ; int y = ( p2.y ) - ( p1.y ) ; double distance = ( player.getScale () ) * ( java.lang.Math.abs ( java.lang.Math.sqrt ( ( ( x * x ) + ( y * y ) ) ) ) ) ; android.util.Log.i ( "Distance between p1/p2", ( "" + distance ) ) ; return distance / stepSize; } 
public void setTime ( int minutes, int seconds ) { this.minutes = ( seconds / 60 ) + minutes; this.seconds = seconds % 60; this.setText ( java.lang.String.format ( "%02d:%02d", this.minutes, this.seconds ) ) ; } 
public static boolean isBF ( java.lang.String word ) throws java.io.IOException { if ( ( utils.GFBF.BFLexicon.isEmpty () ) || ( utils.GFBF.GFLexicon.isEmpty () ) ) utils.GFBF.intializeLexicon () ; if ( utils.GFBF.BFLexicon.contains ( word ) ) return true; return false; } 
@ java.lang.Override public final boolean titleChanged ( final xyz.algogo.core.Algorithm algorithm, final java.lang.String title, final java.lang.String newTitle ) { if ( ( ! ( newTitle.isEmpty () ) ) && ( newTitle != null ) ) { algoChanged = true; this.setTitle ( buildTitle ( newTitle, algorithm.getAuthor () ) ) ; algorithmChanged ( false ) ; return true; } javax.swing.JOptionPane.showMessageDialog ( this, xyz.algogo.desktop.utils.LanguageManager.getString ( "joptionpane.invalidtitle", newTitle ) , xyz.algogo.desktop.utils.LanguageManager.getString ( "joptionpane.error" ) , javax.swing.JOptionPane.ERROR_MESSAGE ) ; return false; } 
public double rand () { double stdv = 1.0 / ( java.lang.Math.sqrt ( ( ( weights.dims[3] ) * ( ( grads.dims[1] ) * ( weights.dims[2] ) ) ) ) ) ; double stdv2 = stdv * 2; return ( ( java.lang.Math.random () ) * stdv2 ) - stdv; } 
private void setMapPosition () { java.lang.System.out.println ( "setMapPosition () " ) ; if ( null != ( googleMap ) ) { java.lang.System.out.println ( "googleMap != null" ) ; if ( com.syzible.loinnir.utils.LocalStorage.getBooleanPref ( LocalStorage.Pref.should_share_location, getActivity () ) ) { getWebServerLocation () ; } else { googleMap.clear () ; googleMap.animateCamera ( com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom ( LocationService.ATHLONE, LocationService.INITIAL_LOCATION_ZOOM ) ) ; } } } 
private java.lang.String makeWord () { java.lang.String word = makeSyllable () ; double cutoff; switch ( monosylProb ) { default: case ALWAYS: return word; case MOSTLY: cutoff = 0.6; break; case FREQUENT: cutoff = 0.45; break; case LESS: cutoff = 0.3; break; case RARE: cutoff = 0.15; break; case CUSTOM: cutoff = monosylProbCustom; } double jump = rand.nextDouble () ; if ( cutoff < jump ) { word += newWord () ; } return word; } 
@ java.lang.Override public java.lang.Object getMessageBlocking ( long timeDuration, java.util.concurrent.TimeUnit timeUnit ) throws java.lang.InterruptedException { FinalProject.communication.CommTuple receivedCommTuple = receivedObjectQueue.poll ( timeDuration, timeUnit ) ; if ( null == ( replyConnection ) ) return null; replyConnection = receivedCommTuple.getConnection () ; return receivedCommTuple.getObj () ; } 
public void addUpdate ( com.lagopusempire.basicupdater.Update<V, U> update ) { if ( null == update ) { throw new java.lang.IllegalArgumentException ( "Update cannot be null." ) ; } V from = update.getFrom () ; if ( updates.containsKey ( from ) ) { updates.remove ( from ) ; throw new com.lagopusempire.basicupdater.DuplicateUpdateException ( updates.get ( from ) , update ) ; } updates.put ( from, update ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int itemClicked = item.getItemId () ; if ( ( R.id.item_Setting ) == itemClicked ) { android.content.Context context = this; android.content.Intent activity_setting = new android.content.Intent ( context, com.example.william.earthdayapplication.SettingActivity.class ) ; startActivity ( activity_setting ) ; } if ( itemClicked == ( R.id.item_Instruction ) ) { } if ( ( click ) == ( R.id.item_Help ) ) { android.content.Intent toy = new android.content.Intent ( getApplicationContext () , com.example.william.earthdayapplication.Main2Activity.class ) ; startActivity ( toy ) ; } return super.onOptionsItemSelected ( item ) ; } 
@ java.lang.Override public boolean onDependentViewChanged ( android.support.design.widget.CoordinatorLayout parent, android.support.design.widget.FloatingActionButton fab, android.view.View dependency ) { if ( dependency instanceof android.support.design.widget.AppBarLayout ) { if ( 0 < ( dependency.getY () ) ) { fab.show () ; } else { fab.hide () ; } } return true; } 
public static java.net.URL fromProjectID ( int projectID ) { try { final java.net.URL url = com.therandomlabs.utils.network.NetworkUtils.getRedirectedURL ( com.therandomlabs.curseapi.Curse.PROJECT_URL.replaceAll ( com.therandomlabs.curseapi.Curse.PROJECT_ID, java.lang.Integer.toString ( projectID ) ) , 2 ) ; if ( ! ( com.therandomlabs.curseapi.Curse.isCurseProjectNoRedirect ( url ) ) ) { throw new com.therandomlabs.curseapi.InvalidProjectIDException ( ( projectID + "Invalid project ID: " ) ) ; } return url; } catch ( java.io.IOException ex ) { throw new com.therandomlabs.curseapi.CurseException ( ex ) ; } } 
public static java.lang.String getParam ( final org.jooq.lambda.tuple.Tuple2<java.lang.String, java.lang.String> valueNameCouple ) { return ( valueNameCouple.v2 () ) + ( valueNameCouple.v2 () .equals ( "" ) ? "" : ( ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_START ) + ( valueNameCouple.v1 () ) ) + ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_END ) ) ; } 
private void setup ( org.bukkit.entity.Player p, java.lang.String id, java.lang.String name, java.lang.String option, int step, org.bukkit.block.Block b ) { setupOp = p; setup = id; setupName = name; setupOption = option; setupStep = step; if ( null != b ) { blockChoices.add ( b ) ; setupStep += 1; } if ( ( setupStep ) <= 2 ) p.sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; } 
protected void checkAnswer ( java.lang.String answer, boolean outOfTime ) { if ( ( members[memberNum] ) == answer ) { score += 1; refreshScoreText () ; } else { java.lang.String wrongText; if ( !outOfTime ) { wrongText = "You suck! The correct answer was " + ( members[memberNum] ) ; } else { wrongText = "You ran out of time! The correct answer was " + ( members[memberNum] ) ; } android.widget.Toast toast = android.widget.Toast.makeText ( getApplicationContext () , wrongText, Toast.LENGTH_SHORT ) ; toast.show () ; } } 
public boolean hasPendingConnectRequest ( java.lang.String ipAddress ) { logConnectReqeustList () ; synchronized ( mReconnectRequestList ) { if ( 0 < ( mReconnectRequestList.size () ) ) { for ( com.assistant.connection.ConnectionManager.ConnectRequest request : mReconnectRequestList ) { if ( android.text.TextUtils.equals ( ipAddress, request.ipAddress ) ) { com.assistant.utils.Log.d ( com.assistant.connection.ConnectionManager.TAG, ( "hasPendingConnectRequest, true for ip:" + ipAddress ) ) ; return true; } } } } com.assistant.utils.Log.d ( com.assistant.connection.ConnectionManager.TAG, ( "hasPendingConnectRequest, false for reconnecting:" + ipAddress ) ) ; return false; } 
private static boolean equals ( java.util.Properties p, java.lang.String optionKey, java.lang.String optionValue, boolean caseSensitive ) { java.lang.String v = p.getProperty ( optionKey ) ; if ( null == v ) return false; if ( caseSensitive ) v = v.toLowerCase () ; return v.equals ( optionValue ) ; } 
public void onEvent ( blueprint.com.sage.events.BackEvent event ) { if ( 0 == ( mViewPager.getCurrentItem () ) ) { blueprint.com.sage.signUp.SignUpActivity activity = ( ( blueprint.com.sage.signUp.SignUpActivity ) ( getActivity () ) ) ; activity.finish () ; } else { mViewPager.setCurrentItem ( ( ( mViewPager.getCurrentItem () ) - 1 ) , true ) ; } } 
private void grow () { byte[] old = _buffer; _buffer = new byte[2 * ( _buffer.length ) ]; int pos = _position; java.lang.System.arraycopy ( old, 0, _buffer, 0, pos ) ; _encoder.init ( _buffer, pos, ( 2 * ( _buffer.length ) ) ) ; } 
public org.apache.catalina.tribes.Member getMember ( org.apache.catalina.tribes.Member mbr ) { if ( hasMembers () ) { org.apache.catalina.tribes.Member result = null; for ( int i = 0; ( result == null ) && ( i < ( this.members.length ) ) ; i++ ) { if ( members[i].equals ( mbr ) ) { result = members[i]; } } return result; } else { return null; } } 
private java.lang.String createFullUrl ( final java.lang.String url, final java.util.Map<java.lang.String, java.lang.String> params ) { java.lang.String fullUrl = url; if ( null != params ) { for ( java.util.Map.Entry<java.lang.String, java.lang.String> paramEntry : params.entrySet () ) { fullUrl = addParameter ( fullUrl, paramEntry.getKey () , paramEntry.getValue () ) ; } } return enableRedirect ( fullUrl ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private com.strobel.decompiler.ast.Expression updateCurrent ( com.strobel.decompiler.ast.Expression node ) { while ( ( node != ( Node.NULL ) ) && ( node != null ) ) { if ( node == scope ) { return null; } node = parentLookup.get ( node ) ; return node; } return null; } 
@ java.lang.Override public double curve ( double t ) { double amount = 1.525 * ( this.amount ) ; if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( amount + 1 ) * t ) - amount ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( amount + 1 ) * t ) + amount ) ) + 2 ) ; } 
private static com.orientechnologies.orient.core.record.impl.ODocument getDocument ( final com.orientechnologies.orient.core.db.record.OIdentifiable id, final boolean forceReload ) { final com.orientechnologies.orient.core.record.impl.ODocument doc = id.getRecord () ; if ( forceReload && ( doc != null ) ) { try { doc.reload () ; } catch ( com.orientechnologies.orient.core.exception.ORecordNotFoundException e ) { } } return doc; } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound nbtTagCompound ) { super.readFromNBT ( nbtTagCompound ) ; if ( nbtTagCompound.hasKey ( Names.NBT.SOURCES ) ) { net.minecraft.nbt.NBTTagList list = nbtTagCompound.getTagList ( Names.NBT.SOURCES, Constants.NBT.TAG_INT_ARRAY ) ; for ( int i = 0; ( list.tagCount () ) > i; i++ ) { sources.add ( de.keridos.floodlights.util.GeneralUtil.getPosFromIntArray ( list.getIntArrayAt ( i ) ) ) ; } } } 
@ java.lang.Override public void onResume () { super.onResume () ; com.arnastofnun.idordabanki.Globals g = ( ( com.arnastofnun.idordabanki.Globals ) ( this.getActivity () .getApplication () ) ) ; if ( null == g ) { android.util.Log.v ( "Globals", "null" ) ; } else if ( ( g.getGlossaryState () ) == null ) { android.util.Log.v ( "GlossaryState", "null" ) ; } else { resumeGlossaryState ( g ) ; } } 
private static float[] toEffectiveTableColumnWidth ( float[] tableColumnWidth ) { float[] result = tableColumnWidth.clone () ; for ( int i = 0; ( result.length ) > i; ++i ) { result[i] += com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils.getEps () ; } return result; } 
@ java.lang.Override public java.lang.String onPlaceholderRequest ( org.bukkit.entity.Player pPlayer, java.lang.String pIdentifier ) { if ( null == pPlayer ) return ""; switch ( pIdentifier ) { case "clantag": return clanTagProvider.getClanTag ( pPlayer.getUniqueId () ) ; case "clantag_custom_design": java.lang.String clanTag = clanTagProvider.getClanTag ( pPlayer.getUniqueId () ) ; if ( ! ( clanTag.isEmpty () ) ) return CLAN_MATCHER.replaceFirst ( clanTag ) ; return clanTag; default: return null; } } 
private static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter[] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter[] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter[numberOfParameters]; for ( int i = 0; numberOfParameters > i; i++ ) { params[i] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params; } 
@ java.lang.Override public models.Account getByEmailAndPassword ( models.Account account ) { models.Account acc = ( ( models.Account ) ( getBaseCriteria () .add ( org.hibernate.criterion.Restrictions.eq ( "email", account.getEmail () ) ) .uniqueResult () ) ) ; if ( ( repositories.BCrypt.checkpw ( "password", account.getPassword () ) ) && ( acc != null ) ) { return account; } return null; } 
public int next () { if ( ( ( realEstate.SortedList.list.length ) - 1 ) == ( currentPosition ) ) { currentPosition = 0; return realEstate.SortedList.list[currentPosition]; } return realEstate.SortedList.list[ ( ( currentPosition ) ++ ) ]; } 
public void timedActions () { if ( 1 < ( timer.getTick () ) ) { timer.tick () ; currentTick = timer.getTick () ; java.lang.System.out.println ( currentTick ) ; } if ( ( currentTick ) == 5 ) { java.lang.System.out.println ( "Resetting..." ) ; relay.set ( Value.kOff ) ; barrelMotor.set ( 0.25 ) ; } if ( ( currentTick ) == 53 ) { barrelMotor.set ( 0 ) ; timer.reset () ; } } 
private void sendBtnActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.String user = userName.getText () ; java.lang.String pass1 = new java.lang.String ( password1.getPassword () ) ; java.lang.String pass2 = new java.lang.String ( password2.getPassword () ) ; boolean success = validateData ( user, pass1, pass2 ) ; if ( !success ) { success = validateData ( user, pass1, pass2 ) ; } java.lang.String newAcctData = pass1 + ( user + " " ) ; connectNewUser ( newAcctData ) ; } 
private <TGeo extends de.k3b.geo.api.GeoPointDto> TGeo getYandexUri ( java.lang.String uri, TGeo parseResult ) { java.lang.String search = "map="; int dataStart = contentIndexBehind ( uri, "ll=" ) ; java.lang.String[] parts = getParts ( uri, dataStart, "[,?&]", 2 ) ; if ( null != parts ) { de.k3b.geo.io.GeoUri.setLatLonZoom ( parseResult, parts[1], parts[0], null ) ; } return uriParamParse ( uri, parseResult ) ; } 
@ java.lang.Override public void onSuccess ( int i, cz.msebera.android.httpclient.Header[] headers, byte[] reponseBody ) { userS.setAvatar ( android.graphics.BitmapFactory.decodeByteArray ( reponseBody, 0, reponseBody.length ) ) ; ( is_finish[0] ) ++; if ( ( ( userSearch.size () ) / 3 ) == ( is_finish[0] ) ) { completeTextView.setAdapter ( new com.example.thanhvu.adsfacebook.model.UserSearchAdaper ( getContext () , R.id.list_view_status, userSearch ) ) ; completeTextView.showDropDown () ; } } 
private int getUsersRights () { com.google.firebase.auth.FirebaseUser user = com.google.firebase.auth.FirebaseAuth.getInstance () .getCurrentUser () ; if ( null == user ) { return 0; } java.lang.String email = user.getEmail () ; com.sunshinator.sharedchecklist.objects.UserRights rights = mCheckList.getAuthorizedUsers () .get ( email ) ; if ( rights == null ) { return 0; } return rights.getRights () ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( 4 == ( passcodeEntered.length () ) ) resetEntered () ; passcodeEntered += e.getActionCommand () ; setEntered ( passcodeEntered ) ; if ( ( temporal ) != null ) { temporal.repaint () ; } java.lang.System.out.println ( passcodeEntered ) ; } 
@ java.lang.Override public com.iouseph.model.User userParse ( org.json.JSONObject json ) { com.iouseph.model.User user = null; if ( null != json ) { user = new com.iouseph.model.User () ; user.setId ( json.getString ( "id" ) ) ; user.setPassword ( json.getString ( "password" ) ) ; user.setUsername ( json.getString ( "username" ) ) ; user.setPlaylists ( this.playlistsParse ( json.getJSONArray ( "playlists" ) ) ) ; } return user; } 
private void endTable () throws java.io.IOException { be.quodlibet.boxable.Table.LOGGER.info ( "Ending Table" ) ; if ( drawLines ) { drawLine ( "Row Bottom Border ", this.margin, this.yStart, ( ( be.quodlibet.boxable.Table.xSpacing ) + ( ( this.margin ) + ( width ) ) ) , this.yStart ) ; } this.tableContentStream.close () ; } 
public ontario.accounts.Account removeAccount ( java.lang.String numAccTemp ) { if ( null == numAccTemp ) { return null; } else { boolean temp; ontario.accounts.Account temp2; for ( int i = 0; i < ( acc.size () ) ; i++ ) { temp = acc.get ( i ) .getAccountNumber () .equals ( numAccTemp ) ; if ( temp == true ) { temp2 = acc.get ( i ) ; acc.remove ( i ) ; return temp2; } } } return null; } 
public static boolean putRegistryResource ( java.lang.String path, org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils.getConfigurationRegistry () ; if ( null == registry ) { return false; } else { registry.beginTransaction () ; registry.put ( path, resource ) ; registry.commitTransaction () ; return true; } } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e.getMessage () ) ) , e ) ; } } 
private org.medipi.medication.Schedule getExistingSchedule ( java.time.LocalDate date, org.medipi.medication.Medication medication, java.lang.String patientUuid ) { java.util.List<org.medipi.medication.Schedule> existing_schedules = scheduleDAOimpl.findByMedicationAndPatient ( medication, patientUuid ) ; for ( org.medipi.medication.Schedule schedule : existing_schedules ) { if ( ( schedule.getAssignedEndDate () .toLocalDate () .isAfter ( date.plusDays ( 1 ) ) ) || ( ( schedule.getAssignedEndDate () ) == null ) ) { return schedule; } } return null; } 
@ java.lang.Override public void close () throws java.sql.SQLException { if ( null != ( connection ) ) { if ( com.intrack.transaction.jdbc.JdbcTransaction.log.isDebugEnabled () ) { com.intrack.transaction.jdbc.JdbcTransaction.log.debug ( ( ( "Closing JDBC Connection [" + ( connection ) ) + "]" ) ) ; } connectionPool.release ( connection ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/filterExercise", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String filterExercise ( org.springframework.ui.Model model, java.lang.String title, java.lang.String label ) { if ( ( title.equals ( "1" ) ) || ( title.equals ( "0" ) ) ) { model.addAttribute ( "exercises", em.filterExercise ( label, label, title, label ) ) ; } else { model.addAttribute ( "exercises", em.filterExercise ( label, label, label, title ) ) ; } return "listExercises"; } 
static boolean cypher ( com.intellij.lang.PsiBuilder b, int l ) { if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase.recursion_guard_ ( b, l, "cypher" ) ) ) return false; int c = com.intellij.lang.parser.GeneratedParserUtilBase.current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser.StatementItem ( b, ( 1 + l ) ) ) ) break; if ( ! ( com.intellij.lang.parser.GeneratedParserUtilBase.empty_element_parsed_guard_ ( b, "cypher", c ) ) ) break; c = com.intellij.lang.parser.GeneratedParserUtilBase.current_position_ ( b ) ; } return true; } 
public void put ( java.lang.String column, java.lang.Object value ) { if ( null == value ) { currentState.put ( column, new org.hibernate.ogm.datastore.spi.TupleOperation ( column, null, PUT_NULL ) ) ; } currentState.put ( column, new org.hibernate.ogm.datastore.spi.TupleOperation ( column, value, PUT ) ) ; } 
private de.be4.classicalb.core.parser.rules.PSubstitution createConditionalFailAssignment ( de.be4.classicalb.core.parser.rules.TIdentifierLiteral ruleLiteral ) { final java.lang.String ctName = ( de.be4.classicalb.core.parser.rules.RulesTransformation.RULE_COUNTER_EXAMPLE_VARIABLE_SUFFIX ) + ( ruleLiteral.getText () ) ; de.be4.classicalb.core.parser.rules.PPredicate ifCondition = new de.be4.classicalb.core.parser.rules.ANotEqualPredicate ( de.be4.classicalb.core.parser.rules.RulesTransformation.createIdentifier ( ctName ) , new de.be4.classicalb.core.parser.rules.AEmptySetExpression () ) ; return new de.be4.classicalb.core.parser.rules.AIfSubstitution ( ifCondition, createRuleFailAssignment ( currentRule.getNameLiteral () ) , new java.util.ArrayList<de.be4.classicalb.core.parser.rules.PSubstitution> () , null ) ; } 
public static float variance ( final float[] array, final int offset, final int length ) { final float mean = com.tagtraum.jipes.math.Floats.arithmeticMean ( array, offset, length ) ; double sum = 0; for ( int i = offset; ( offset + length ) > i; i++ ) { final float diff = ( array[i] ) - mean; sum += ( diff * diff ) / ( array.length ) ; } return ( ( float ) ( sum ) ) ; } 
public com.sedmelluq.discord.lavaplayer.track.AudioTrack getNext () { if ( null == ( _playingSong ) ) { _playingSong = _activePlaylist.get ( 0 ) ; return _playingSong; } replacePlayingSong () ; _playingSong = _activePlaylist.get ( ( ( _activePlaylist.indexOf ( _playingSong ) ) + 1 ) ) ; return _playingSong; } 
private void showSavedProfilePicture () { byte[] array = dbHandler.retrieveByteArrayFromDb () ; android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( array ) ; if ( null == bitmap ) { profilePic.setImageResource ( defaultPic ) ; } else { profilePic.setImageBitmap ( bitmap ) ; bitmap.recycle () ; } } 
public void update ( int x, int y, double r, java.util.ArrayList<zombienado_v1.server.serverUnits.ServerZombie> zombies, java.util.ArrayList<java.awt.Point> walls ) { if ( 0 >= ( health ) ) { isDead = true; } int xOld = this.x; int yOld = this.y; this.x += x; this.y += y; this.r += r; checkWallsCollisions ( xOld, yOld, walls ) ; checkDamageTaking ( zombies ) ; } 
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids.allPointsOf ( this ) ) { if ( ( ( asAbs ( loc ) .row ) >= boardRows ) && ( ( piece.cellAt ( loc ) ) != ( EMPTY ) ) ) { return true; } } } 
protected void addNearbyDevice ( android.bluetooth.BluetoothDevice device ) { if ( ! ( hasPeer ( device.getName () ) ) ) { nearbyDevices.add ( device ) ; registerRemoteDevice ( device ) ; android.util.Log.d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG, ( ( device.getName () ) + "added new device " ) ) ; } else { android.util.Log.d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG, ( ( "device " + ( device.getName () ) ) + " already present, won't add" ) ) ; } } 
@ java.lang.Override public void stateChanged ( javax.swing.event.ChangeEvent e ) { int alphaValue = sliderAlpha.getValue () ; java.lang.String hexColor = textFieldHexColor.getText () ; if ( 6 < ( hexColor.length () ) ) { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + ( hexColor.substring ( ( ( hexColor.length () ) - 6 ) ) ) ; } else { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + hexColor; } invalidateUI ( alphaValue, hexColor ) ; } 
@ java.lang.Override protected void showInformationControl ( org.eclipse.swt.graphics.Rectangle subjectArea ) { super.showInformationControl ( subjectArea ) ; org.eclipse.jface.internal.text.InternalAccessor accessor = getInternalAccessor () ; org.eclipse.jface.text.IInformationControl iControl = accessor.getCurrentInformationControl () ; if ( ( ( fInformationControlCloser ) != null ) && ( iControl != null ) ) { ControlInformationSupport.DISPLAY_EVENT_HANDLER.stop ( previousManager ) ; ControlInformationSupport.DISPLAY_EVENT_HANDLER.start ( this ) ; } } 
protected android.os.Bundle createTransportOptionsBundle ( android.util.Pair[] sharedViews ) { if ( ( Build.VERSION_CODES.LOLLIPOP ) <= ( Build.VERSION.SDK_INT ) ) { if ( sharedViews != null ) { final android.view.View decorView = getWindow () .getDecorView () ; java.util.ArrayList<android.util.Pair> sharedViewList = extendsSharedViewsForTransport ( new java.util.ArrayList ( java.util.Arrays.asList ( sharedViews ) ) ) ; sharedViews = new android.util.Pair[sharedViewList.size () ]; sharedViewList.toArray ( sharedViews ) ; return android.app.ActivityOptions.makeSceneTransitionAnimation ( this, sharedViews ) .toBundle () ; } } return null; } 
public static void main ( java.lang.String[] args ) { java.lang.String s; if ( 0 < ( args.length ) ) { s = args[0]; } else { s = "etc/server.properties"; } org.alicebot.server.net.AliceServer aliceserver = new org.alicebot.server.net.AliceServer ( s ) ; java.lang.Runtime.getRuntime () .addShutdownHook ( new java.lang.Thread ( "Shutdown Thread" ) { public void run () { org.alicebot.server.net.AliceServer.shutdown () ; } } ) ; aliceserver.startup () ; } 
public void disconnect ( boolean expected ) { sendToClient ( pixyel_backend.xml.XML.createNewXML ( "disconnected" ) .toString () ) ; lookingForInput = false; listener.shutdown () ; clientAliveTimer.cancel () ; pixyel_backend.connection.socket.SocketServer.disconnect ( this, socket.hashCode () ) ; try { socket.shutdownInput () ; socket.shutdownOutput () ; socket.close () ; } catch ( java.lang.Exception e ) { pixyel_backend.Log.logError ( ( ( getName () ) + "Could not close the socket of the client " ) , pixyel_backend.connection.socket.SocketClient.class ) ; } } 
@ org.junit.Test public void testGenerateName_withThreeToTwentyLength () { for ( int i = 3; 20 > i; i++ ) { final java.lang.String result = grammarNameGenerator.generateName ( 0 ) ; org.junit.Assert.assertTrue ( ( ( result.length () ) >= 1 ) ) ; } } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { hu.gehorvath.lampsv.core.Preset selectedPres = jlUsedPresets.getSelectedValue () ; int currentIndex = usedListModel.indexOf ( selectedPres ) ; if ( ( usedListModel.size () ) > currentIndex ) { usedListModel.removeElement ( selectedPres ) ; usedListModel.add ( ( currentIndex + 1 ) , selectedPres ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( selection ) == 1 ) && ( ! ( description.equals ( "" ) ) ) ) { uploadImage () ; } else android.widget.Toast.makeText ( getApplicationContext () , "Please fill the form", Toast.LENGTH_SHORT ) .show () ; } 
boolean conditionIsTrue ( utilties.models.Game game ) { int data1 = getData ( this.data1, game ) ; int data2 = getData ( this.data2, game ) ; switch ( this.operator ) { case LESS_THAN: return data2 > data1; case GREATER_THAN: return data1 > data2; case LESS_THAN_OR_EQUAL_TO: return data1 <= data2; case GREATER_THAN_OR_EQUAL_TO: return data1 >= data2; case EQUALS: return data1 == data2; default: return false; } } 
public java.lang.String mapPath ( java.lang.String path ) { if ( null == ( mapList ) ) { return path; } for ( int i = 0; i < ( mapList.length ) ; i++ ) { if ( ( mapList[i][0].equals ( path ) ) || ( new java.lang.String ( ( ( mapList[i][0] ) + "/" ) ) .equals ( path ) ) ) { return mapList[i][1]; } } return path; } 
@ java.lang.Override public boolean isInGroup ( java.lang.String world, java.lang.String permName, org.bukkit.entity.Player player ) { if ( plugin.config.isDefaultrankallworlds () ) { java.lang.System.out.println ( "CR rankAddGlobal" ) ; world = null; } if ( false == ( plugin.config.permissionpluginhasworldsupport () ) ) { world = null; } return net.slipcor.classranks.handlers.HandleVaultPerms.permission.playerInGroup ( world, player.getName () , permName ) ; } 
@ org.junit.Test public void testAsUTCTimeInTimeZone () { slash.common.type.CompactCalendar calendar = slash.common.type.CompactCalendar.fromMillis ( 1000000 ) ; slash.common.type.CompactCalendar inTimeZone = calendar.asUTCTimeInTimeZone ( java.util.TimeZone.getTimeZone ( "GMT+2" ) ) ; assertEquals ( calendar.getCalendar () .getTimeInMillis () , 1000000 ) ; assertEquals ( inTimeZone.getCalendar () .getTimeInMillis () , ( ( ( ( 2 * 60 ) * 60 ) * 1000 ) + 1000000 ) ) ; assertEquals ( "UTC", inTimeZone.getTimeZoneId () ) ; } 
public Item[] toArray () { @java.lang.SuppressWarnings ( value = "unchecked" ) Item[] items = ( ( Item[] ) ( new java.lang.Object[size] ) ) ; Deque<Item>.Node n = first; for ( int i = 0; ( items.length ) > i; i++ ) { items[i] = n.item; n = n.next; } return items; } 
public void writeData ( java.lang.String data ) { android.content.SharedPreferences sharedPref = getActivity () .getPreferences ( Context.MODE_PRIVATE ) ; java.lang.String contents = sharedPref.getString ( day, "" ) ; android.content.SharedPreferences.Editor editor = sharedPref.edit () ; editor.putString ( day, ( ( data.substring ( 0, ( ( data.length () ) - 13 ) ) ) + ( contents + "\n" ) ) ) ; editor.commit () ; } 
public void setTable ( javafx.scene.control.TableView<com.eiko.back.table.CellValue> content ) { this.table = content; this.setContent ( content ) ; int l = 40 * ( ( table.getItems () .size () ) + 1 ) ; this.setMinHeight ( l ) ; this.setMaxHeight ( l ) ; this.setPrefHeight ( l ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, @android.support.annotation.NonNull java.lang.String[] permissions, @android.support.annotation.NonNull int[] grantResults ) { super.onRequestPermissionsResult ( requestCode, permissions, grantResults ) ; if ( ( me.esca.fragments.CookFragment.REQUEST_EXTERNAL_STORAGE ) == requestCode ) { if ( ( grantResults[0] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.content.Intent photoPickerIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK ) ; photoPickerIntent.setType ( "image/*" ) ; startActivityForResult ( photoPickerIntent, RESULT_LOAD_IMG ) ; } else { android.widget.Toast.makeText ( getActivity () , "PERMISSION_DENIED", Toast.LENGTH_SHORT ) .show () ; } } } 
public void reset () { android.util.Log.d ( app.park.com.vr.VrVideoActivity.TAG, "[TEST] ========== RESET ==============" ) ; mVrVideoView.seekTo ( 0 ) ; app.park.com.vr.VrVideoActivity.currTime = 0; android.util.Log.d ( app.park.com.vr.VrVideoActivity.TAG, ( ( mVrVideoView.getCurrentPosition () ) + "[TEST] current position = " ) ) ; resetScore () ; app.park.com.vr.VrVideoActivity.isGameOver = false; } 
@ java.lang.Override public void addSettingsStateListener ( @org.jetbrains.annotations.NotNull com.intellij.platform.WebProjectGenerator.SettingsStateListener stateListener ) { final javax.swing.text.JTextComponent editorComponent = ( ( javax.swing.text.JTextComponent ) ( sdkPathComboWithBrowse.getComboBox () .getEditor () .getEditorComponent () ) ) ; editorComponent.getDocument () .addDocumentListener ( new com.intellij.ui.DocumentAdapter () { protected void textChanged ( javax.swing.event.DocumentEvent e ) { stateListener.stateChanged ( ( null == ( validate () ) ) ) ; } } ) ; } 
@ com.google.common.eventbus.Subscribe public void attemptToMatchSubmissionWithStudent ( edu.pdx.cs410J.grader.poa.POASubmissionSelected selected ) { for ( int i = 0; ( students.size () ) > i; i++ ) { edu.pdx.cs410J.grader.Student student = students.get ( i ) ; if ( submitterMatchesStudent ( selected.getSubmission () , student ) ) { this.view.setSelectedStudentIndex ( i ) ; fireStudentSelectedEvent ( student ) ; return; } } } 
@ java.lang.Override public void removeRange ( int fromPosition, int itemCount ) { indi.yume.tools.adapter_renderer.recycler.RendererAdapter.notifyItemRangeRemoved ( fromPosition, itemCount ) ; for ( int i = 0; itemCount > i; i++ ) if ( fromPosition < ( contentList.size () ) ) contentList.remove ( fromPosition ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter.notifyItemRangeChanged ( 0, getItemCount () ) ; } 
private void invokeFCMService () { android.util.Log.d ( com.lognsys.kalrav.LoginActivity.TAG, "Rest invokeFCMService " ) ; android.util.Log.d ( com.lognsys.kalrav.LoginActivity.TAG, ( ( com.lognsys.kalrav.util.KalravApplication.getInstance () .getPrefs () .getDevice_token () ) + "Rest invokeFCMService KalravApplication.getInstance () .getPrefs () .getDevice_token () " ) ) ; if ( ( com.lognsys.kalrav.util.KalravApplication.getInstance () .getPrefs () .getDevice_token () ) == null ) { android.content.Intent i = new android.content.Intent ( this, com.lognsys.kalrav.FCM.FCMInstanceIdService.class ) ; startService ( i ) ; } } 
public void addPiece ( org.casestudy.target.chess.pieces.Piece piece ) { java.util.List<org.casestudy.target.chess.pieces.Piece> typePieces = this.pieces.get ( piece.getPieceType () ) ; if ( null == typePieces ) { typePieces = new java.util.ArrayList<org.casestudy.target.chess.pieces.Piece> () ; } typePieces.add ( piece ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( long startTS, backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels.getNextReadyObj ( ( ( thisTask ) + "" ) , channelID ) ; while ( nextReady != null ) { process ( startTS, new backtype.storm.tuple.TupleImpl ( context, ( ( java.util.List<java.lang.Object> ) ( nextReady.getO () ) ) , input.getSourceTask () , input.getSourceStreamId () ) ) ; nextReady = sharedChannels.getNextReadyObj ( ( ( thisTask ) + "" ) , channelID ) ; } } 
@ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot, java.lang.String s ) { java.lang.System.out.println ( ( key + "key of order firebase ----> " ) ) ; java.lang.String key1 = dataSnapshot.getRef () .getKey () ; java.lang.String valid = dataSnapshot.getRef () .child ( "validation" ) .toString () ; java.lang.System.out.println ( ( "key of order changed in database " + valid ) ) ; if ( key.equals ( key1 ) ) { progressWheel.setVisibility ( View.INVISIBLE ) ; textView.setText ( "Your order is ready !!! " ) ; } } 
private java.lang.String askForFirstPassword () { java.lang.String ret = null; java.lang.String s1 = askForPassword ( "Insert a password for secure archive. You MUST remember it unlock the archive!" ) ; if ( null != s1 ) { java.lang.String s2 = askForPassword ( "Please re-type the previous password" ) ; if ( s2 != null ) { if ( s1.equals ( s2 ) ) { ret = s1; } else { javax.swing.JOptionPane.showMessageDialog ( this, "Two password doesn't match!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE ) ; askForFirstPassword () ; } } } return ret; } 
@ java.lang.Override void initNeo ( org.gbif.checklistbank.nub.source.NeoUsageWriter writer ) throws java.lang.Exception { try ( java.sql.Connection c = clb.connect () ) { final org.postgresql.copy.CopyManager cm = new org.postgresql.copy.CopyManager ( ( ( org.postgresql.core.BaseConnection ) ( c ) ) ) ; cm.copyOut ( ( " TO STDOUT WITH NULL ''" + ( ( ( "COPY ( " + ( ( "SELECT usage.id, usage.parent_fk, usage.basionym_fk, usage.rank, usage.is_synonym, usage.status, usage.nom_status, node.scientific_name" + " FROM name_usage usage join name node ON name_fk=node.id" ) + " WHERE dataset_key = '" ) ) + ( source.key ) ) + "' ) " ) ) , writer ) ; org.gbif.checklistbank.nub.source.ClbUsageIteratorNeo.LOG.info ( "Loaded nub source data {} with {} usages into neo4j", source.name, writer.getCounter () ) ; } } 
private void addChip ( java.lang.String communication ) { if ( null != ( mNachoTextView ) ) { mNachoTextView.append ( communication ) ; int start = mNachoTextView.getText () .toString () .indexOf ( communication ) ; int last = mNachoTextView.getText () .length () ; mNachoTextView.chipify ( start, last ) ; } else android.util.Log.e ( mx.com.quiin.contactpicker.ui.ContactPickerFragment.TAG, "mNachoTextView is null" ) ; } 
public void setUserName ( java.lang.String userName ) { if ( null == userName ) throw new java.lang.IllegalArgumentException ( "UserName must not be null." ) ; if ( ( userName.length () ) > 50 ) throw new java.lang.IllegalArgumentException ( "UserName is too long." ) ; if ( ( userName.length () ) < 3 ) throw new java.lang.IllegalArgumentException ( "UserName is too short." ) ; if ( userExist () ) { throw new java.lang.IllegalArgumentException ( "UserName already exists" ) ; } this.userName = userName; } 
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( obj == ( this ) ) return true; if ( obj == null ) return false; if ( ( getClass () ) != ( obj.getClass () ) ) return false; org.sqlproc.sample.simple.model.BillingDetails other = ( ( org.sqlproc.sample.simple.model.BillingDetails ) ( obj ) ) ; if ( ( ( id ) == null ) || ( ! ( id.equals ( other.id ) ) ) ) return false; return true; } 
@ java.lang.Override public void setSelectedIndex ( final int index ) { programmaticTextChange = true; if ( ( -1 ) < index ) { getUiReference () .select ( index ) ; } else { getUiReference () .deselect ( getUiReference () .getSelectionIndex () ) ; } programmaticTextChange = false; if ( ! ( getUiReference () .isFocusControl () ) ) { fireInputChanged ( getUiReference () .getText () ) ; } } 
public void generateDispText ( java.lang.CharSequence c ) { if ( ( ( currValue ) == "0" ) || ( ( currValue ) == null ) ) { currValue = ( ( java.lang.CharSequence ) ( c ) ) ; } else if ( c == "C" ) { currValue = "0"; } else { currValue = ( currValue.toString () ) + c; } } 
@ java.lang.Override public void run () { int counter = 0; while ( ( this.num ) > counter ) { java.lang.System.out.println ( ( ( ( "Get: " + ( java.lang.Thread.currentThread () .getName () ) ) + " From " ) + ( bucket ) ) , getToken () ) ; counter++; } } 
public void delLabel ( int label ) { for ( java.util.Map<java.util.List<org.projectfloodlight.openflow.protocol.instruction.OFInstruction>, java.lang.Integer> m : switchLabelMap.values () ) { for ( java.util.List<org.projectfloodlight.openflow.protocol.instruction.OFInstruction> list : m.keySet () ) { java.lang.Integer i = m.get ( list ) ; if ( null == i ) { java.lang.System.out.println ( "111111" ) ; } if ( ( i.intValue () ) == label ) { m.remove ( list ) ; break; } } } net.floodlightcontroller.savi.forwarding.mpls.MPLSLabelManager.labelQueue.add ( label ) ; } 
public java.lang.String getFreemakerTemplate ( java.util.HashMap<java.lang.String, java.lang.Object> model ) { java.lang.StringBuffer buf = new java.lang.StringBuffer () ; try { buf.append ( org.springframework.ui.freemarker.FreeMarkerTemplateUtils.processTemplateIntoString ( freemarkerConfiguration.getTemplate ( "fm_template.txt" ) , buf ) ) ; return buf.toString () ; } catch ( java.lang.Exception e ) { java.lang.System.err.println ( ( ( e.getMessage () ) + "Exception occured while processing fmtemplate: " ) ) ; } return ""; } 
protected void move ( int x ) { moving = true; moveLocation = x; if ( ( this.getx () ) > x ) { facingRight = false; left = true; right = false; } else if ( x > ( this.getx () ) ) { facingRight = true; left = false; right = true; } } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent resultIntent ) { super.onActivityResult ( requestCode, resultCode, resultIntent ) ; switch ( requestCode ) { case diy.uigeneric.sample.SampleListActivity.REQUEST_ADD: case diy.uigeneric.sample.SampleListActivity.REQUEST_VIEW: if ( ( android.app.Activity.RESULT_OK ) == resultCode ) { loadData () ; listView.getAdapter () .notifyDataSetChanged () ; } break; } } 
public boolean equals ( java.lang.Object o ) { if ( o instanceof FoodItem ) { FoodItem i = ( ( FoodItem ) ( o ) ) ; return ( this.tagCode.equals ( i.tagCode ) ) && ( this.itemName.equals ( i.itemName ) ) ; } else if ( o instanceof java.lang.String ) { return this.tagCode.equals ( ( ( java.lang.String ) ( o ) ) ) ; } return false; } 
public void ignoreBlank () { if ( ! ( Settings.ignoreBlanks ) ) return; javafx.scene.control.Label current = ( ( javafx.scene.control.Label ) ( application.VirtualCursor.getCurrentElement ( application.VirtualCursor.gridPane ) ) ) ; while ( ( ( current.getText () .charAt ( 0 ) ) == ' ' ) && ( current != null ) ) { moveCursor () ; } } 
private void initRotateView () { if ( null != ( mRotateView ) ) { return; } mRotateView = new android.widget.ImageView ( getContext () ) ; mRotateView.setImageResource ( R.drawable.ic_rotate ) ; mRotateView.setBackgroundResource ( R.drawable.stretch_shape_background ) ; mRotateView.setOnTouchListener ( createRotateListener () ) ; final int rotateViewGravity = ( ( android.view.Gravity.CENTER_VERTICAL ) | ( android.view.Gravity.RIGHT ) ) | ( android.view.Gravity.TOP ) ; final net.yazeed44.resizableviewlibrary.LayoutParams rotateViewLayoutParams = new net.yazeed44.resizableviewlibrary.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT, rotateViewGravity ) ; addView ( mRotateView, rotateViewLayoutParams ) ; } 
public static int[] barcodeToIntArray ( java.lang.String barcode ) { java.lang.String[] barcodeArray = barcode.trim () .split ( " ( ?!^ ) " ) ; int[] barcodeToInt = new int[barcodeArray.length]; for ( int i = 0; ( barcodeArray.length ) > i; i++ ) { barcodeToInt[i] = java.lang.Integer.parseInt ( barcodeArray[i] ) ; } return barcodeToInt; } 
private void initPuzzleOrGetFromExtras () { android.os.Bundle bundle = getIntent () .getExtras () ; if ( null != ( bundle.get ( "Puzzle" ) ) ) { puzzle = new com.sudoku.puzzlesolver.Puzzle ( ( ( java.lang.Integer[][] ) ( bundle.get ( "Puzzle" ) ) ) ) ; } else { puzzle = new com.sudoku.puzzlesolver.Puzzle () ; } } 
public engine.network.packet.Packet getContentPacket () { engine.network.packet.Packet out = engine.network.packet.Packet.getNewContentPacket ( Packet.MAX_PACKET_SIZE ) ; out.iterator.putNextShortUnsigned ( buff.getID () ) ; out.iterator.putNextInt ( getDurationLeft () ) ; int mapSize = gndData.getMapSize () ; engine.network.packet.Packet gndContent = gndData.getContentPacket () ; out.iterator.putNextShortUnsigned ( ( 0 == mapSize ? 0 : gndContent.getSize () ) ) ; if ( mapSize > 0 ) out.iterator.putNextContentPacket ( gndData.getContentPacket () ) ; out.iterator.trimPacket () ; return out; } 
public void done ( ca.winnipegtrails.winnipegtrails.UserEggLinks object, com.parse.ParseException e ) { if ( null != e ) { if ( WinnipegTrailsApplication.APPDEBUG ) { android.util.Log.d ( WinnipegTrailsApplication.APPTAG, "An error occurred while querying for user eggs", e ) ; } } android.content.Intent intent = new android.content.Intent ( this, ca.winnipegtrails.winnipegtrails.EggActivity.class ) ; intent.putExtra ( "id", egg.getObjectId () ) ; startActivity ( intent ) ; } 
private void addItemsToQueue () { for ( int i = 0; ( _numIterations ) > i; i++ ) { java.lang.String message = ( ( "Producer # " + ( _id ) ) + " message # " ) + i; _queue.AddToQueue ( message ) ; nachos.threads.KThread.yield () ; } _listener.ProducerComplete () ; } 
public boolean isCollidingRect ( pro.Sprite s ) { if ( isCollideable () ) { if ( ( ( getTop () ) < ( s.getBottom () ) ) && ( ( ( ( getRight () ) > ( s.getLeft () ) ) && ( ( getLeft () ) < ( s.getRight () ) ) ) && ( ( getBottom () ) > ( s.getTop () ) ) ) ) { return true; } } return false; } 
public static lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils.getTag ( aNode ) ; if ( tag.matches ( "n.*|xn.*|p.*|.*\\[ ( pre|post|rel ) .*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils.getLemma ( aNode ) ; if ( ( lemma.equals ( "%" ) ) || ( tag.matches ( "r.*" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD; if ( tag.matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE; lv.ailab.lvtb.universalizer.transformator.syntax.DepRelLogic.warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP; } 
public int advance ( int target ) throws java.io.IOException { int doc = scorer.advance ( target ) ; if ( ( NO_MORE_DOCS ) == doc ) { return doc; } currentScore = innerScore () ; if ( ( currentScore ) < ( minScore ) ) { return scorer.nextDoc () ; } return doc; } 
private void writeFile ( java.io.BufferedWriter fw, java.util.List<java.lang.String> corpus ) throws java.io.IOException { for ( java.lang.String str : corpus ) { fw.write ( ( "\n\n" + str ) ) ; } fw.write ( "\n" ) ; fw.flush () ; } 
@ java.lang.Override public void setThreadCount ( int numThreads ) { if ( ( this.hessian ) instanceof org.encog.util.concurrency.MultiThreadable ) { ( ( org.encog.util.concurrency.MultiThreadable ) ( this.hessian ) ) .setThreadCount ( numThreads ) ; } else { throw new org.encog.neural.networks.training.TrainingError ( ( " ) does not support multi-threaded mode." + ( "The Hessian object in use ( " + ( this.hessian.getClass () .toString () ) ) ) ) ; } } 
public static void run ( Game game, AvalonBot bot ) { for ( int i = 0; ( game.pendingMissionPlayers.size () ) > i; i++ ) { bot.sendMessage ( ( ( ( ( "Type /" + ( game.gameId ) ) + " success or /" ) + ( game.gameId ) ) + " fail" ) , game.pendingMissionPlayers.get ( i ) .id ) ; } ( game.state ) ++; game.pmMissionCount = 0; game.missionFailCount = 0; } 
public java.lang.String copy ( com.google.auto.value.processor.AutoValueProcessor.Property property ) { if ( null == ( copyOf ) ) { return property.toString () ; } java.lang.String copy = java.lang.String.format ( copyOf, property ) ; if ( ( property.isNullable () ) || ( ( nullableAnnotation ) != null ) ) { copy = java.lang.String.format ( " ( %s == null ? null : %s ) ", property, copy ) ; } return copy; } 
public void reorderToolbarContainer () { java.util.Collections.sort ( com.example.root.myalarmclock.MainActivity.mAlarmList, new java.util.Comparator<com.example.root.myalarmclock.Alarm> () { @java.lang.Override public int compare ( com.example.root.myalarmclock.Alarm r1, com.example.root.myalarmclock.Alarm r2 ) { return r1.getAlarmDate () .compareTo ( r2.getAlarmDate () ) ; } } ) ; toolbarsContainer.removeAllViews () ; for ( int x = 0; ( com.example.root.myalarmclock.MainActivity.mAlarmList.size () ) > x; x++ ) { toolbarsContainer.addView ( com.example.root.myalarmclock.MainActivity.mAlarmList.get ( x ) .getToolbar () ) ; } } 
void disconnected ( int number ) { clientHandlers[number] = null; ( connections ) --; send ( new Message ( Message.TYPE_DISCONNECT, number, ( " disconnected" + ( users[ ( number + 1 ) ] ) ) , users[ ( number + 1 ) ] ) ) ; waitForConnection ( number ) ; } 
private void createElanForwardingTablesList ( java.lang.String elanName, org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry macEntry, org.opendaylight.controller.md.sal.binding.api.WriteTransaction tx ) { org.opendaylight.yangtools.yang.binding.InstanceIdentifier<org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry> macEntryId = org.opendaylight.netvirt.elan.utils.ElanUtils.getMacEntryOperationalDataPath ( elanName, macEntry.getMacAddress () ) ; com.google.common.base.Optional<org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry> existingMacEntry = elanUtils.read ( broker, LogicalDatastoreType.OPERATIONAL, macEntryId ) ; if ( ( ( elanUtils.getElanMacTable ( elanName ) ) != null ) && ( ! ( existingMacEntry.isPresent () ) ) ) { tx.put ( LogicalDatastoreType.OPERATIONAL, macEntryId, macEntry ) ; } } 
public net.anyflow.lannister.message.OutboundMessageStatus setOutboundMessageStatus ( int messageId, net.anyflow.lannister.message.OutboundMessageStatus.Status targetStatus ) { net.anyflow.lannister.message.OutboundMessageStatus status = outboundMessageStatuses.get ( net.anyflow.lannister.message.MessageStatus.key ( clientId, messageId ) ) ; if ( null == status ) { return null; } status.targetStatus ( targetStatus ) ; return outboundMessageStatuses.put ( status.messageId () , status ) ; } 
@ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) public void addInformation ( net.minecraft.item.ItemStack par1ItemStack, net.minecraft.entity.player.EntityPlayer par2EntityPlayer, java.util.List par3List, boolean par4 ) { if ( 3 == ( par1ItemStack.getItemDamage () ) ) { if ( ( par1ItemStack.stackTagCompound ) == null ) { par1ItemStack.stackTagCompound = new net.minecraft.nbt.NBTTagCompound () ; par1ItemStack.stackTagCompound.setInteger ( "Uses", 5 ) ; } par3List.add ( ( "Uses remaining: " + ( par1ItemStack.stackTagCompound.getInteger ( "Uses" ) ) ) ) ; } } 
public int aggiungi_puntata_reale () { fiches = ( fiches ) - ( ( puntata ) * 2 ) ; if ( ( fiches ) < 0 ) { int buf = fiches; fiches = 0; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2; } 
public com.hgames.rhogue.generation.map.DungeonGenerator setGrassObjectives ( int percent, int nbPools ) { if ( percent > 100 ) throw new java.lang.IllegalStateException ( ( "Percentage of grass must be negative or in [0, 100]. Received: " + percent ) ) ; if ( 0 <= percent ) this.grassPercentage = percent; if ( 0 <= ( grassPatches ) ) this.grassPatches = nbPools; return this; } 
private long getNextBuildNumber ( @javax.annotation.Nonnull T entry ) { if ( entry instanceof hudson.model.Queue.Item ) { hudson.model.Queue.Task task = ( ( hudson.model.Queue.Item ) ( entry ) ) .task; if ( task instanceof hudson.model.Job ) { return ( ( hudson.model.Job ) ( task ) ) .getNextBuildNumber () ; } } else if ( entry instanceof hudson.model.Run ) { return ( ( hudson.model.Run ) ( entry ) ) .getParent () .getNextBuildNumber () ; } return 1 + ( jenkins.widgets.HistoryPageEntry.getEntryId ( entry ) ) ; } 
public void voteThreshold ( int downVotedTrack ) { if ( ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork.size () ) + 1 ) == 1 ) || ( ( ( ( threshold ) + ( mQueueElementList.get ( downVotedTrack ) .upvoteList.size () ) ) - ( mQueueElementList.get ( downVotedTrack ) .downvoteList.size () ) ) <= 0 ) ) { deleteTrack ( downVotedTrack ) ; } } 
protected static java.lang.String singleSearch ( java.lang.String keyword, java.lang.String text, boolean i ) { java.lang.String returnString = ""; for ( java.lang.String s : poormansgrep.BonusProject.Search.search ( keyword, text, i ) ) { if ( null != s ) returnString += s + "\n"; } return returnString; } 
private static float findMax ( java.util.ArrayList<java.lang.Float> list, int targetIndex ) { float max = -1.0F; for ( int a = targetIndex; ( list.size () ) > a; a++ ) { if ( ( list.get ( a ) ) > max ) { max = list.get ( a ) ; } } return max; } 
public static boolean cancel ( int index ) { if ( ( ( co.theengine.loomdemo.LoomHTTP.clients[index] ) == null ) || ( index == ( -1 ) ) ) { return false; } co.theengine.loomdemo.LoomHTTP.clients[index].cancelRequests ( co.theengine.loomdemo.LoomHTTP._context, true ) ; co.theengine.loomdemo.LoomHTTP.removeClient ( index ) ; return true; } 
private void setMessage ( final org.apache.logging.log4j.message.Message msg ) { if ( msg instanceof org.apache.logging.log4j.message.ReusableMessage ) { org.apache.logging.log4j.message.ReusableMessage reusable = ( ( org.apache.logging.log4j.message.ReusableMessage ) ( msg ) ) ; reusable.formatTo ( getMessageTextForWriting () ) ; parameters = reusable.swapParameters ( parameters ) ; parameterCount = reusable.getParameterCount () ; } else { if ( ( msg != null ) && ( ! ( org.apache.logging.log4j.core.util.Constants.FORMAT_MESSAGES_IN_BACKGROUND ) ) ) { msg.getFormattedMessage () ; } this.message = msg; } } 
public android.database.Cursor getAllNotes ( java.lang.String sortOrder ) { android.database.Cursor cursor = null; if ( "date" == sortOrder ) { cursor = mDb.query ( NotesContract.TABLE_NAME, null, null, null, null, null, ( ( NotesContract.COLUMN_DATE ) + " DESC" ) ) ; } else if ( sortOrder == "fav" ) { cursor = mDb.query ( NotesContract.TABLE_NAME, null, null, null, null, null, NotesContract.COLUMN_FAV ) ; } return cursor; } 
private void init () { for ( int i = 1; ( levelCount ) >= i; i++ ) { levels.add ( new world.Level ( i ) ) ; } backgroundX = java.lang.Integer.parseInt ( currentLevel.getWallData ( 0 ) ) ; backgroundY = java.lang.Integer.parseInt ( currentLevel.getWallData ( 1 ) ) ; background = new renderer.Background ( 0, 0, this, world.Level.getImageData ( 0 ) ) ; inventory = new renderer.Texture ( "Assets/Pictures/Textures/Inventory_l1.png" ) ; c = new vault1.CharacterFolder.Controller ( this ) ; } 
public void update ( long timeElapsed, long nanosPerSecond, double xForces, double yForces ) { double secondsElapsed = timeElapsed / nanosPerSecond; x += secondsElapsed * ( velX ) ; y += ( velY ) * secondsElapsed; velX += ( acelX ) * secondsElapsed; velY += ( acelY ) * secondsElapsed; acelX = xForces / ( mass ) ; acelY = xForces / ( mass ) ; } 
public void putCharArray ( final char[] data ) { int l = ( com.heerbann.unsafe.UnsafeBuffer.sizeOfChar ) * ( data.length ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory ( com.heerbann.unsafe.UnsafeBuffer.toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l; } 
public java.util.ArrayList<lexer.Token> tokenize ( java.lang.String input ) { java.util.ArrayList<lexer.Token> resultingTokens = new java.util.ArrayList<lexer.Token> () ; lexer.Token newToken; if ( null == input ) { java.lang.System.out.println ( "Input not set!" ) ; return null; } java.util.Collections.sort ( token ) ; while ( ( input.length () ) > 0 ) { newToken = testTokens ( input ) ; input = input.substring ( newToken.getCompleteLength () ) ; token.add ( newToken ) ; } return resultingTokens; } 
@ java.lang.Override public nez.parser.vm.MozInst exec ( nez.parser.vm.ParserMachineContext sc ) throws nez.parser.TerminationException { if ( ( this.byteChar ) == ( sc.prefetch () ) ) { if ( ( ( nez.parser.vm.Moz86.BinaryMachine ) && ( ( this.byteChar ) == 0 ) ) && ( sc.eof () ) ) { return this.next; } sc.move ( 1 ) ; } return this.next; } 
private void showWarning () { if ( ( ( getContext () ) != null ) && ( ( toastWidget ) == null ) ) { toastWidget = new bei.m3c.widgets.ToastWidget ( getContext () , getContext () .getString ( R.string.tv_warning ) , getActivity () .findViewById ( android.R.id.content ) ) ; } toastWidget.flash () ; } 
public void closeUDP () { if ( null != ( mMulticastSocket ) ) { java.net.MulticastSocket s = mMulticastSocket; mMulticastSocket = null; try { s.leaveGroup ( mMulticastAddress ) ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } s.close () ; } } 
private void findJourneyPics ( com.xiangyou.product.Product.Day day, int index, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> journeyPicsMap ) { java.util.Map<java.lang.String, java.lang.String> pictures = journeyPicsMap.get ( ( index + ( com.xiangyou.product.ProductRepository.PREFIX_DAY ) ) ) ; day.addAllPictures ( pictures ) ; for ( java.util.Map.Entry<java.lang.String, java.lang.String> entry : pictures.entrySet () ) { day.addPicture ( entry.getKey () , entry.getValue () ) ; } } 
boolean setMapSize ( int x, int y ) { if ( ( x > 8 ) || ( x < 2 ) ) { return false; } else { if ( ( x > 4 ) && ( y < 8 ) ) { return false; } else if ( ( y > 50 ) || ( y < 5 ) ) { return false; } } size = x; return true; } 
public void replace ( int position, java.lang.Object content ) { if ( ( nodes ) < position ) return; Node replace = start; for ( int i = 0; i < ( position - 1 ) ; i++ ) { replace = replace.getNextNode () ; } replace.setContent ( content ) ; } 
private java.lang.String getChargeRangeAsString () { java.lang.String charges = ""; for ( int i = minCharge; ( maxCharge ) > i; i++ ) { if ( ! ( charges.isEmpty () ) ) { charges += ","; } charges += i + "+"; } return charges; } 
private void turnOffFlash () { if ( isFlashOn ) { if ( ( ( params ) == null ) || ( ( camera ) == null ) ) { return; } params = camera.getParameters () ; params.setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera.setParameters ( params ) ; camera.stopPreview () ; isFlashOn = false; imgButtonOnOff.setImageResource ( R.drawable.ic_flash_off ) ; } } 
@ java.lang.Override public org.talend.core.model.process.IProcess getProcessFromItem ( org.talend.core.model.properties.Item item, boolean loadScreenshots ) { if ( ( ( org.talend.core.model.properties.impl.ProcessItemImpl.class ) == ( item.getClass () .getSuperclass () ) ) || ( ( org.talend.core.model.properties.impl.ProcessItemImpl.class ) == ( item.getClass () ) ) ) { java.lang.Process process = null; process = new java.lang.Process ( item.getProperty () ) ; process.loadXmlFile ( loadScreenshots ) ; return process; } return null; } 
private boolean validateTimeRequirement () { util.Util.clearError ( lblTimeRequirementError ) ; if ( txtTimeRequirement.isMessageDefault () ) { return true; } try { int timeRequirement = java.lang.Integer.parseInt ( txtTimeRequirement.getText () ) ; if ( 0 >= timeRequirement ) { util.Util.setError ( lblTimeRequirementError, "Invalid value, must be positive whole numbers only" ) ; return false; } } catch ( java.lang.NumberFormatException e ) { util.Util.setError ( lblTimeRequirementError, "Invalid value, whole numbers only" ) ; return false; } return true; } 
private java.lang.String getWordEndingAtPosition ( int startingPosition, int atPosition ) { java.lang.String startingText = text.substring ( startingPosition, atPosition ) ; int lastIndex = startingText.lastIndexOf ( " " ) ; if ( ( -1 ) == lastIndex ) { return ""; } else { return startingText.substring ( lastIndex, ( ( startingText.length () ) - 1 ) ) .trim () ; } } 
lab9.ULLMap<K, V>.Entry get ( K k ) { if ( ( k.equals ( key ) ) && ( k != null ) ) { return this; } if ( ( next ) == null ) { return null; } return next.get ( key ) ; } 
@ java.lang.Override public void onRouteFound ( java.util.List<com.mybus.model.BusRouteResult> results ) { cancelProgressDialog () ; mMyBusMap.removeChargingPointMarkers () ; if ( ( results.isEmpty () ) || ( results == null ) ) { showBottomSheetResults ( false ) ; mViewPagerAdapter = null; android.widget.Toast.makeText ( this, R.string.toast_no_result_found, Toast.LENGTH_LONG ) .show () ; return; } else { startResultsActivity ( ( ( java.util.ArrayList<com.mybus.model.BusRouteResult> ) ( results ) ) ) ; } } 
public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest, com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest, boolean skipWorkInProgressMergeRequest, boolean triggerOnPipelineEvent ) { if ( ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) || triggerOnMergeRequest ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory.retrieveAllowedStates ( triggerOnMergeRequest, triggerOpenMergeRequest, triggerOnPipelineEvent ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } 
public boolean setActiveInstIdx ( int instIdx ) { programming.Program prog = getActiveProg () ; if ( ( instIdx <= ( prog.getInstructions () .size () ) ) && ( ( prog != null ) && ( instIdx >= 0 ) ) ) { activeInstIdx = instIdx; return true; } return false; } 
@ java.lang.Override public void onClick ( android.view.View view ) { ar.com.tzulberti.archerytraining.model.tournament.TournamentSerie tournamentSerie = self.tournamentDAO.createNewSerie ( self.tournament ) ; if ( null == tournamentSerie ) { java.lang.System.err.println ( "TODO XXX PENDING: el usuario no deberia ver el boton en este caso" ) ; return; } ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment practiceTestingFragment = ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment.createInstance ( tournamentSerie, true ) ; android.support.v4.app.FragmentManager fragmentManager = activity.getSupportFragmentManager () ; fragmentManager.beginTransaction () .replace ( R.id.container, practiceTestingFragment ) .commit () ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { android.content.SharedPreferences prefs = mContext.getSharedPreferences ( "apprater", Context.MODE_PRIVATE ) ; java.lang.Long date_firstLaunch = prefs.getLong ( "date_firstlaunch", 0 ) ; if ( 0 == date_firstLaunch ) { date_firstLaunch = java.lang.System.currentTimeMillis () ; } if ( editor != null ) { editor.putLong ( "launch_count", 0 ) ; editor.putLong ( "date_firstlaunch", date_firstLaunch ) ; editor.commit () ; } dialog.dismiss () ; } 
@ java.lang.Override public void processResults ( org.json.JSONObject result ) { int minutes = getTime ( result ) ; if ( ( oter.getTime () ) >= minutes ) { com.joebruzek.oter.utilities.SmsSender.sendText ( oter ) ; oterLayer.removeOter ( oter ) ; } else { com.joebruzek.oter.utilities.AlarmScheduler.scheduleWakeUp ( this, oter, ( minutes - ( oter.getTime () ) ) ) ; android.util.Log.e ( "Wakeup", ( ( minutes - ( oter.getTime () ) ) + "" ) ) ; } this.stopSelf () ; } 
private void requestAd ( org.json.JSONArray args, org.apache.cordova.CallbackContext callbackContext ) throws org.json.JSONException { android.util.Log.e ( "tapsell", "requestAd called" ) ; final java.lang.String zoneId = args.getString ( 0 ) ; android.util.Log.e ( "tapsell", ( zoneId + "requestAd zoneId=" ) ) ; if ( zoneId != null ) { zoneCallbacks.put ( zoneId, callbackContext ) ; } else { defaultZoneCallback = callbackContext; } ir.tapsell.sdk.TapsellExtraPlatforms.requestAd ( cordova.getActivity () , zoneId ) ; } 
private boolean isDuplicateInCurrCategory ( java.util.TreeSet<com.transformuk.bdt.domain.CrawledContent> currContentSet, com.transformuk.bdt.domain.CrawledContent newContent ) { boolean isDuplicate = false; java.util.Iterator<com.transformuk.bdt.domain.CrawledContent> iterator = currContentSet.iterator () ; while ( iterator.hasNext () ) { com.transformuk.bdt.domain.CrawledContent existingContent = iterator.next () ; if ( ( existingContent.getTitle () .equals ( newContent.getTitle () ) ) && ( ( newContent.getTitle () ) != null ) ) { isDuplicate = true; break; } } return isDuplicate; } 
public static com.sl.algorithms.traversal.Node reverseList ( com.sl.algorithms.traversal.Node head ) { com.sl.algorithms.traversal.Node prev; com.sl.algorithms.traversal.Node curr; com.sl.algorithms.traversal.Node next; prev = null; curr = head; next = null; while ( null != curr ) { next = curr.next; curr.next = prev; prev = curr; curr = next; } head = prev; return head; } 
private void mapLetters ( BoggleBoard board, int rows, int cols ) { letters = new edu.princeton.cs.algs4.SeparateChainingHashST<java.lang.Integer, java.lang.Character> () ; for ( int i = 0; rows > i; i++ ) for ( int j = 0; j < cols; j++ ) { int x = ( i * rows ) + j; letters.put ( x, board.getLetter ( i, j ) ) ; } } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view, java.lang.String url ) { android.util.Log.d ( com.gsma.mobileconnect.helpers.AuthorizationService.TAG, ( url + "shouldOverrideUrlLoading url=" ) ) ; boolean status = false; if ( ( url != null ) && ( url.startsWith ( redirectUri ) ) ) { status = true; handleCompletion ( view, url ) ; } else { view.loadUrl ( url ) ; } return status; } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.wewow.utils.ShareUtils su = new com.wewow.utils.ShareUtils ( this ) ; su.setContent ( subject.getTitle () ) ; su.setUrl ( subject.getShare_link () ) ; if ( null != ( shareBitmap ) ) { su.setPicture ( ( ( android.graphics.drawable.BitmapDrawable ) ( shareBitmap ) ) .getBitmap () ) ; } su.share () ; } 
@ java.lang.Override @java.lang.SuppressWarnings ( value = "unchecked" ) public V get () throws java.io.IOException { synchronized ( monkey ) { long ai = MapStore.INSTANCE.get ( filer, monkey, keyBytes ) ; if ( ( -1 ) < ai ) { return ( ( V ) ( values[ ( ( int ) ( ai ) ) ] ) ) ; } return null; } } 
public long[] getMembersList () { java.lang.String[] list = this.members.split ( "," ) ; long[] memberLists = new long[list.length]; for ( int i = 0; ( memberLists.length ) > i; i++ ) memberLists[i] = java.lang.Long.parseLong ( list[i] ) ; return memberLists; } 
public double variance ( double[] dataset ) { double degreeOfFreedom = ( dataset.length ) - 1; double var = 0; double mean = mean ( dataset ) ; for ( int i = 0; ( dataset.length ) > i; i++ ) { var += java.lang.Math.pow ( ( ( dataset[i] ) - mean ) , 2 ) ; } var /= degreeOfFreedom; return var; } 
static int randNum ( int min, int max ) { java.util.Random rand = new java.util.Random () ; int top = 1 + ( max - min ) ; if ( top <= 0 ) { top = 1; } int randomInt = ( rand.nextInt ( top ) ) + min; return randomInt; } 
public void rotate ( double winkel ) { double radius = java.lang.Math.sqrt ( ( ( ( y ) * ( y ) ) + ( ( x ) * ( x ) ) ) ) ; this.x = radius * ( java.lang.Math.sin ( winkel ) ) ; this.y = radius * ( java.lang.Math.cos ( winkel ) ) ; } 
@ org.junit.Test public void testGenerateOption () { for ( int i = 0; 10000 > i; i++ ) { testQuestion1.generateQuestion ( 4 ) ; tests.Fraction answer = testQuestion1.generateAnswer ( 4 ) ; assertFalse ( testQuestion1.generateOption ( 4, answer ) .checkEquals ( testQuestion1.getCorrectAnswer () ) ) ; } } 
@ java.lang.Override public void onSuccess ( java.util.ArrayList<com.givekesh.baboon.Utils.Feeds> result ) { if ( null != result ) { if ( ( result.size () ) < 10 ) { recyclerView.disableLoadMore () ; isLoadingMore = false; } else recyclerView.enableLoadMore () ; if ( isSwipeRefresh ) { mFeedsArrayList.clear () ; mWaveSwipeRefreshLayout.setRefreshing ( false ) ; } if ( isFirstLoad ) { mFeedsArrayList = result; isFirstLoad = false; } else mFeedsArrayList.addAll ( result ) ; refreshRecycler () ; } } 
public boolean collidesWith ( cz.cvut.fel.syrovkar.rpgEngine.archetypes.CollisionBox other ) { return ( ( ( this.y ) + ( this.sizeY ) ) > ( other.y ) ) && ( ( ( ( this.x ) < ( ( other.x ) + ( other.sizeX ) ) ) && ( ( ( this.x ) + ( this.sizeX ) ) > ( other.x ) ) ) && ( ( this.y ) < ( ( other.y ) + ( other.sizeY ) ) ) ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> adapterView, android.view.View view, int position, long l ) { android.database.Cursor cursor = ( ( android.database.Cursor ) ( adapterView.getItemAtPosition ( position ) ) ) ; if ( null != cursor ) { ( ( it.jaschke.alexandria.api.Callback ) ( getActivity () ) ) .onItemSelected ( cursor.getString ( cursor.getColumnIndex ( AlexandriaContract.BookEntry._ID ) ) ) ; } } 
private ch.bfh.bti7535.w2016.data.Document test ( ch.bfh.bti7535.w2016.data.Document document ) { int classifiedPositive = 0; int classifiedNegative = 0; for ( ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline ) { classifiedPositive += calcProbabilityTimesOccurrence ( feature, Classification.SENTIMENT_POSITIVE ) ; classifiedNegative += calcProbabilityTimesOccurrence ( feature, Classification.SENTIMENT_NEGATIVE ) ; } document.setTestResult ( ( classifiedNegative < classifiedPositive ? ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_POSITIVE : ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_NEGATIVE ) ) ; return document; } 
public boolean startAnimation ( int radius ) { if ( radius == ( mThumbCurrentRadius ) ) return false; mRadius = radius; if ( ( getHandler () ) != null ) { resetAnimation () ; mRunning = true; getHandler () .postAtTime ( this, ( ( android.os.SystemClock.uptimeMillis () ) + ( com.rey.material.util.ViewUtil.FRAME_DURATION ) ) ) ; } else mThumbCurrentRadius = mRadius; invalidate () ; return true; } 
@ javax.annotation.Nonnull private byte[] loadFromServerFirst ( java.lang.String id ) { try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException.getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { throw serverException; } byte[] cached = loadFromCache ( id ) ; if ( null != cached ) { return cached; } } throw new java.lang.IllegalStateException ( org.sonar.batch.bootstrap.WSLoader.FAIL_MSG ) ; } 
@ java.lang.Override public javax.el.ExpressionFactory getExpressionFactory () { init () ; if ( null == ( expressionFactory ) ) { synchronized ( this ) { if ( null == ( expressionFactory ) ) { javax.enterprise.inject.spi.BeanManager bm = beanManager () ; if ( bm == null ) { expressionFactory = application.getExpressionFactory () ; } else { expressionFactory = bm.wrapExpressionFactory ( application.getExpressionFactory () ) ; } } } } return expressionFactory; } 
@ java.lang.Override public void service ( final javax.servlet.ServletRequest req, final javax.servlet.ServletResponse res ) throws java.io.IOException, javax.servlet.ServletException { javax.servlet.http.HttpServletRequest request; javax.servlet.http.HttpServletResponse response; if ( ! ( ( res instanceof javax.servlet.http.HttpServletResponse ) && ( req instanceof javax.servlet.http.HttpServletRequest ) ) ) { throw new javax.servlet.ServletException ( "non-HTTP request or response" ) ; } request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; response = ( ( javax.servlet.http.HttpServletResponse ) ( res ) ) ; doGet ( request, response ) ; } 
@ java.lang.Override public void toggleFullScreen () { try { if ( mClearGLWindow.isFullscreen () ) { if ( ( ( mLastWindowHeight ) > 0 ) && ( ( mLastWindowWidth ) > 0 ) ) mClearGLWindow.setSize ( mLastWindowWidth, mLastWindowHeight ) ; mClearGLWindow.setFullscreen ( false ) ; } else { mLastWindowWidth = getWindowWidth () ; mLastWindowHeight = getWindowHeight () ; mClearGLWindow.setFullscreen ( true ) ; } requestDisplay () ; } catch ( final java.lang.Exception e ) { e.printStackTrace () ; } } 
@ dataClasses.Test public void testCalculateFare () { double pricePerFifthMile = 0.5; double totalFare = 0.0; double overTwoPassengerCharge = 2.0; double dropOffCharge = 2.5; double distance = 10.5; int numberOfPassengers = 5; if ( 2 < numberOfPassengers ) { totalFare = overTwoPassengerCharge * ( numberOfPassengers - 2 ) ; } totalFare += dropOffCharge + ( distance * pricePerFifthMile ) ; assertEquals ( 13.75, totalFare, 0.1 ) ; } 
@ java.lang.Override public void onRemoteVideoTrackReceive ( com.quickblox.videochat.webrtc.QBRTCSession session, com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack, java.lang.Integer userID ) { remoteVideoView = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.remoteVideoView ) ) ) ; android.util.Log.d ( "Track", ( ( remoteVideoView ) + "remoteVideoView is " ) ) ; org.webrtc.VideoRenderer remouteRenderer = new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( remoteVideoView, QBGLVideoView.Endpoint.REMOTE ) ) ; videoTrack.addRenderer ( remouteRenderer ) ; remoteVideoView.setVideoTrack ( videoTrack, QBGLVideoView.Endpoint.REMOTE ) ; android.util.Log.d ( "Track", "onRemoteVideoTrackReceive () is raned" ) ; } 
@ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new", method = RequestMethod.GET ) public java.lang.String newLoan ( @cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long bookId, @cz.muni.fi.pa165.controller.RequestParam ( defaultValue = "0" ) long memberId, org.springframework.ui.Model model ) { if ( 0 < bookId ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade.findById ( bookId ) ; model.addAttribute ( "book", book ) ; } if ( memberId > 0 ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade.findById ( memberId ) ; model.addAttribute ( "member", member ) ; } model.addAttribute ( "createLoan", new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new"; } 
public void onPostExecute ( java.lang.String result ) { if ( ( ! ( result.equals ( "" ) ) ) && ( result != null ) ) { java.lang.String campusChar = com.ihwapp.android.model.Curriculum.getCampusChar ( campus ) ; android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx.getSharedPreferences ( ( ( year ) + campusChar ) , Context.MODE_PRIVATE ) ; prefs.edit () .putString ( "scheduleJSON", result ) .commit () ; boolean success = parseScheduleJSON () ; } } 
public java.util.List<core.moves.Move> getLastNMoves ( int n ) { java.util.List<core.moves.Move> moves = new java.util.ArrayList ( this.moveHistory ) ; java.util.Collections.reverse ( moves ) ; if ( ( n < ( this.moveHistory.size () ) ) && ( n > 0 ) ) moves.subList ( 0, n ) ; return moves; } 
private boolean isInTriggerZone ( int x, int y ) { java.lang.System.out.println ( "here" ) ; return ( y > ( main.SessionController.HITBOX_Y.getSecond () ) ) && ( ( ( x > ( main.SessionController.HITBOX_X.getFirst () ) ) && ( x < ( main.SessionController.HITBOX_X.getSecond () ) ) ) && ( y < ( main.SessionController.HITBOX_Y.getFirst () ) ) ) ; } 
public Model.Grupa dohvatiGrupuPoIDu ( int idGrupa ) { org.hibernate.Query query; otvoriSession () ; query = hibernateSession.createQuery ( ( "'" + ( "from Grupa as K where K.IDGrupa = '" + idGrupa ) ) ) ; Model.Grupa odabranaGrupa = ( ( Model.Grupa ) ( query.list () .get ( 0 ) ) ) ; zatvoriSession () ; return odabranaGrupa; } 
@ java.lang.Override public void resetPassword ( org.envirocar.server.core.entities.User user, java.lang.String verificationCode ) throws org.envirocar.server.core.exception.BadRequestException { org.envirocar.server.mongo.entity.MongoPasswordReset status = this.passwordResetDao.getPasswordResetStatus ( user ) ; if ( ( ! ( status.isExpired () ) ) && ( status != null ) ) { if ( status.getCode () .equals ( verificationCode ) ) { save ( user ) ; } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Wrong verification code." ) ; } } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Verification code already expired." ) ; } this.passwordResetDao.remove ( status ) ; } 
@ java.lang.Override public int compare ( com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData<?> arg0, com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData<?> arg1 ) { if ( ( arg1.end ) > ( arg0.end ) ) return -1; if ( ( arg1.end ) < ( arg0.end ) ) return 1; return 0; } 
@ java.lang.Override public net.minecraft.item.ItemStack removeStackFromSlot ( int i ) { if ( ( inventoryContents.length ) <= i ) return net.minecraft.item.ItemStack.EMPTY; if ( ( inventoryContents[i] ) != ( net.minecraft.item.ItemStack.EMPTY ) ) { net.minecraft.item.ItemStack itemstack = inventoryContents[i]; inventoryContents[i] = net.minecraft.item.ItemStack.EMPTY; return itemstack; } return net.minecraft.item.ItemStack.EMPTY; } 
public static void main ( java.lang.String[] args ) { MainInterface.init () ; int choice = MainInterface.prompt () ; while ( true ) { MainInterface.performChoice ( choice ) ; if ( 0 == choice ) break; choice = MainInterface.prompt () ; } MainInterface.sc.close () ; } 
public double getExploit () { if ( 0 == ( context.getActivePlayerId () ) ) { return ( player1Value ) / ( ( numVisits ) + ( epsilon ) ) ; } else { return ( 1 - ( player1Value ) ) / ( ( numVisits ) + ( epsilon ) ) ; } } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion ) { android.util.Log.i ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG, ( newVersion + ( ( ( ( "Upgrading database " + ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB ) ) + " from version " ) + oldVersion ) + " to " ) ) ) ; switch ( newVersion ) { case at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB_SCHEMA_VERSION_2: db.execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_REQUIRE_CREATE ) ; db.execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_RESOURCE_CREATE ) ; break; default: android.util.Log.e ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG, ( ( ( ( "Unexpected database upgrade from version" + oldVersion ) + " to " ) + newVersion ) + ". No known upgrade path" ) ) ; break; } } 
@ java.lang.Override public void onBindViewHolder ( com.spiewak.workoutlogger.adapters.SetAdapter.SetHolder holder, int position ) { com.spiewak.workoutlogger.models.WorkoutSet workoutSet = workoutSets.get ( position ) ; java.lang.String setAndReps = ( java.lang.Double.toString ( workoutSet.getLoad () ) ) + ( ( java.lang.Integer.toString ( workoutSet.getReps () ) ) + "x" ) ; holder.workoutSet.setText ( setAndReps ) ; android.util.Log.d ( "WORKOUT", setAndReps ) ; } 
public boolean isFriendOrNot ( int userID1, int userID2 ) { if ( ( userID1 == userID2 ) || ( ( ( ( this.userID1 ) == userID1 ) && ( ( this.userID2 ) == userID2 ) ) || ( ( ( this.userID1 ) == userID2 ) && ( ( this.userID2 ) == userID1 ) ) ) ) { return true; } else return false; } 
void execute ( final java.util.Collection<org.sleuthkit.autopsy.ingest.IngestServiceAbstract> services, final org.sleuthkit.datamodel.Image image ) { java.util.Collection<org.sleuthkit.datamodel.Image> images = new java.util.ArrayList<org.sleuthkit.datamodel.Image> () ; images.add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger.log ( java.util.logging.Level.INFO, ( ( image.getName () ) + "Will enqueue image: " ) ) ; execute ( services, images ) ; } 
public void addAvailableLevel ( int i, int numStars, app.Game g ) { view.AvailableLevelView av = new view.AvailableLevelView ( i ) ; if ( ( -1 ) != numStars ) { java.lang.System.out.println ( numStars ) ; av.unlockLevel ( numStars ) ; addListenerToButton ( i, g ) ; } levels.add ( av ) ; scrollablePanel.add ( av ) ; } 
private void initBlocks ( android.content.Context context ) { for ( int i = 0; ( ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) * ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ) > i; i++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; int yPos = 0; if ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) == 0 ) { block.setYPosition ( ( yPos++ ) ) ; } block.setXPosition ( ( i % ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ) ) ; blocks.add ( block ) ; } } 
private static java.io.File writeHex ( de.neemann.assembler.asm.Program p, java.io.File name ) throws de.neemann.assembler.expression.ExpressionException, java.io.IOException { if ( null != name ) { java.io.File f = de.neemann.assembler.gui.Main.makeFilename ( name, ".asm", ".hex" ) ; try ( java.io.PrintStream ps = new java.io.PrintStream ( f, "utf-8" ) ) { p.traverse ( new de.neemann.assembler.asm.formatter.HexFormatter ( ps ) ) ; } return f; } return name; } 
public static java.lang.String getStringFromExcelCell ( org.apache.poi.ss.usermodel.Cell cell ) { java.lang.String ret = ""; try { if ( ( cell.getCellType () ) == ( org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC ) ) { ret = "" + ( ( long ) ( cell.getNumericCellValue () ) ) ; } else { ret = cell.toString () ; } } catch ( java.lang.Exception e ) { e.printStackTrace () ; } return ret; } 
@ java.lang.Override public void onCommandDataMessageReceived ( com.tenkiv.tekdaqc.ATekdaqc tekdaqc, com.tenkiv.tekdaqc.communication.message.ABoardMessage message ) { if ( 0 < ( mMessengerList.size () ) ) { com.tenkiv.tekdaqc.android.application.service.Bundle dataBundle = new com.tenkiv.tekdaqc.android.application.service.Bundle () ; dataBundle.putString ( TekCast.DATA_MESSSAGE_TEKDAQC, tekdaqc.getSerialNumber () ) ; dataBundle.putSerializable ( TekCast.DATA_MESSSAGE, message ) ; com.tenkiv.tekdaqc.android.application.service.Message dataMessage = com.tenkiv.tekdaqc.android.application.service.Message.obtain () ; dataMessage.what = com.tenkiv.tekdaqc.android.application.util.TekCast.TEKDAQC_COMMAND_MESSAGE; dataMessage.setData ( dataBundle ) ; sendMessageToRegisteredListeners ( dataMessage ) ; } } 
public int read ( java.io.InputStream in, int offset, int byteCount ) throws java.io.IOException { if ( byteCount > ( ( _bytes.length ) + offset ) ) { byte[] newBytes = new byte[byteCount + offset]; java.lang.System.arraycopy ( _bytes, 0, newBytes, 0, _bytes.length ) ; _bytes = newBytes; } _size = in.read ( _bytes, offset, byteCount ) ; return _size; } 
public static java.lang.String protectAction ( java.lang.String originAction ) { if ( originAction.startsWith ( "_VA_" ) ) { return originAction; } java.lang.String newAction = com.lody.virtual.client.env.SpecialComponentList.PROTECTED_ACTION_MAP.get ( originAction ) ; if ( null == newAction ) { newAction = ( com.lody.virtual.client.env.SpecialComponentList.PROTECT_ACTION_PREFIX ) + originAction; } return newAction; } 
@ java.lang.Override public zildo.fwk.script.context.LocaleVarContext clone () { try { if ( 0 < ( locales.size () ) ) { zildo.fwk.script.context.LocaleVarContext cloned = ( ( zildo.fwk.script.context.LocaleVarContext ) ( super.clone () ) ) ; cloned.involvedVariables.clear () ; cloned.cloneLocales ( this ) ; return cloned; } else { return this; } } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.RuntimeException ( "Unable to clone this context !" ) ; } } 
public void dump ( java.io.DataOutputStream out ) throws java.io.IOException { super.dump ( out ) ; out.writeInt ( high ) ; out.writeInt ( low ) ; for ( int i = 0; ( switchAddresses.length ) > i; i++ ) { out.writeShort ( switchAddresses[i] ) ; out.writeShort ( switchBranchTargetIndexes[i] ) ; } } 
private void takeScreenshotFor ( java.lang.String logLine ) { com.android.ddmlib.RawImage rawImage; try { rawImage = device.getScreenshot () ; } catch ( java.lang.Exception e ) { return; } if ( null == rawImage ) { return; } java.util.Map<java.lang.String, java.lang.String> keyValueMap = keyValueMapFor ( logLine ) ; java.awt.image.BufferedImage image = com.github.rtyley.android.screenshot.paparazzo.OnDemandScreenshotService.bufferedImageFrom ( rawImage ) ; for ( com.github.rtyley.android.screenshot.paparazzo.processors.ScreenshotProcessor screenshotProcessor : processors ) { screenshotProcessor.process ( image, keyValueMap ) ; } } 
@ org.junit.Test public void deleteBucket () throws java.lang.Exception { final java.lang.String bucket = "bucket-to-delete"; createBucketRestCall ( bucket ) ; alluxio.AlluxioURI uri = new alluxio.AlluxioURI ( ( bucket + ( alluxio.AlluxioURI.SEPARATOR ) ) ) ; org.junit.Assert.assertTrue ( mFileSystemMaster.listStatus ( uri, alluxio.master.file.options.ListStatusOptions.defaults () ) .isEmpty () ) ; deleteBucketRestCall ( bucket ) ; try { mFileSystemMaster.getFileInfo ( uri, alluxio.proxy.s3.S3ClientRestApiTest.GET_STATUS_OPTIONS ) ; org.junit.Assert.fail ( "bucket should have been removed" ) ; } catch ( alluxio.exception.FileDoesNotExistException e ) { } } 
public static void printResult ( double[][] reuslt ) { int histWidth = reuslt.length; int histHeight = reuslt[0].length; for ( int i = 0; histWidth > i; i++ ) { java.lang.System.out.println ( "" ) ; for ( int j = 0; j < histHeight; j++ ) { java.lang.System.out.print ( ( ( reuslt[i][j] ) + " " ) ) ; } } } 
@ java.lang.Override public void removeCard ( org.magic.api.beans.MagicCard mc, org.magic.api.beans.MagicCollection collection ) throws java.sql.SQLException { org.magic.api.dao.impl.HsqlDAO.logger.debug ( ( collection + ( ( "remove " + mc ) + " from " ) ) ) ; java.sql.PreparedStatement pst = con.prepareStatement ( "delete from cards where name=? and edition=? and collection=?" ) ; pst.setString ( 1, mc.getName () ) ; pst.setString ( 2, mc.getEditions () .get ( 0 ) .getId () ) ; pst.setString ( 3, collection.getName () ) ; pst.executeUpdate () ; } 
public heronarts.p3lx.ui.component.UIDoubleBox setParameter ( final heronarts.lx.parameter.BoundedParameter parameter ) { if ( null != ( this.parameter ) ) { this.parameter.removeListener ( this.parameterListener ) ; } this.parameter = parameter; if ( parameter != null ) { this.minValue = parameter.range.min; this.maxValue = parameter.range.max; this.parameter.addListener ( this.parameterListener ) ; setValue ( parameter.getValue () ) ; } return this; } 
@ org.springframework.web.bind.annotation.RequestMapping public org.springframework.http.ResponseEntity<com.wmanual.jpa.domain.User> check ( @org.springframework.web.bind.annotation.RequestParam ( value = "uname" ) java.lang.String uname ) throws java.lang.Exception { com.wmanual.jpa.domain.User user = userRepository.findByUsername ( uname ) ; if ( null != user ) { return new org.springframework.http.ResponseEntity<com.wmanual.jpa.domain.User> ( user, org.springframework.http.HttpStatus.NOT_FOUND ) ; } else { return new org.springframework.http.ResponseEntity<com.wmanual.jpa.domain.User> ( user, org.springframework.http.HttpStatus.OK ) ; } } 
@ java.lang.Override public void run () { run = true; for ( ; ( run ) && ( ( a ) < ( steps ) ) ; ( a ) ++ ) { tick () ; notifyViews () ; } a = 0; run = false; } 
@ java.lang.Override public void run () { if ( ( -1 ) != ( Main.currentLevel ) ) { javafx.application.Platform.runLater ( new java.lang.Runnable () { @java.lang.Override public void run () { application.EnvironmentGUIPane pane = new application.EnvironmentGUIPane () ; pane.startLevel ( Main.currentLevel ) ; Main.scene.setRoot ( pane ) ; } } ) ; java.lang.System.out.println ( "pane.startLevel" ) ; application.MainMenu.mainMenuTimer.cancel () ; } } 
public java.util.List<org.todss.model.IntakeMoment> test ( org.todss.algorithm.AlgorithmContext context ) { final long start = java.lang.System.currentTimeMillis () ; final java.util.List<org.todss.model.IntakeMoment> list = org.todss.algorithm.SmartAlgorithm.run ( context ) ; java.lang.System.out.println ( ( " ms." + ( "Took " + ( ( java.lang.System.currentTimeMillis () ) - start ) ) ) ) ; return list; } 
public boolean guess ( int guessNumber ) { if ( ( secretNumber ) == guessNumber ) { this.hint = "Correct. The secret number is " + ( secretNumber ) ; return true; } else if ( guessNumber > ( secretNumber ) ) { this.hint = "Sorry, your guess is too big"; return false; } else { this.hint = "Sorry, your guess is too small"; return false; } } 
public static void main ( java.lang.String[] args ) { com.javastud.springmvcweb.designpatterns.singleton.Company comp1 = com.javastud.springmvcweb.designpatterns.singleton.Company.getInstance () ; java.lang.System.out.println ( comp1 ) ; com.javastud.springmvcweb.designpatterns.singleton.Company comp2 = com.javastud.springmvcweb.designpatterns.singleton.Company.getInstance () ; java.lang.System.out.println ( comp2 ) ; java.lang.System.out.println ( ( comp2 == comp1 ) ) ; try { java.lang.Runtime r = java.lang.Runtime.getRuntime () ; r.exec ( "calc" ) ; } catch ( com.javastud.springmvcweb.designpatterns.singleton.IOException e ) { e.printStackTrace () ; } } 
@ java.lang.Override public boolean isFinished ( final org.springframework.http.client.ClientHttpResponse response ) throws java.io.IOException { if ( ! ( super.isFinished ( response ) ) ) { return false; } final com.gooddata.dataset.TaskState taskState = extractData ( response, com.gooddata.dataset.TaskState.class ) ; if ( taskState.isSuccess () ) { return true; } throw new com.gooddata.GoodDataException ( ( ( taskState.getMessage () ) + ( errorMessage + ": " ) ) ) ; } 
public void run () { while ( true ) { try { socket = servidor.accept () ; AgregarSocket ( socket ) ; java.lang.System.out.println ( ( ( java.lang.String.valueOf ( socket ) ) + "Nuevo cliente conectado: " ) ) ; readData ( socket ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } } 
private java.lang.String getAllByIdJsonString ( java.lang.String _id ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb.append ( "{\"selector\": {" ) ; sb.append ( "\"_id\": {\"$gt\": 0}," ) ; sb.append ( ( "\"}]" + ( "\"$and\": [{\"topicId\":\"" + _id ) ) ) ; sb.append ( "}}" ) ; java.lang.System.out.println ( ( "query string : " + ( sb.toString () ) ) ) ; return sb.toString () ; } 
public void moveNextPosition ( boolean smooth ) { if ( null == ( getRealAdapter () ) ) throw new java.lang.IllegalStateException ( "You did not set a slider adapter" ) ; if ( mIsShuffle ) { setPagerTransformer ( true, getShuffleTransformer () ) ; } mViewPager.setCurrentItem ( ( ( mViewPager.getCurrentItem () ) + 1 ) , smooth ) ; } 
public int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( null == list ) throw new java.lang.NullPointerException () ; final int result = this.lists.size () ; this.lists.add ( result, list ) ; return result; } 
private void requestMoreAfterEmission ( int emitted ) { rx.internal.operators.OperatorPublish.OriginSubscriber<T> origin = state.getOrigin () ; if ( ( origin != null ) && ( emitted > 0 ) ) { long r = origin.originOutstanding.addAndGet ( ( -emitted ) ) ; if ( r <= ( origin.THRESHOLD ) ) { origin.requestMore ( ( ( rx.internal.util.RxRingBuffer.SIZE ) - ( origin.THRESHOLD ) ) ) ; } } } 
public double getRawAnalogStickARX () { try { if ( ( ( gp1.getRawAxis ( 2 ) ) < ( -0.1 ) ) || ( ( gp1.getRawAxis ( 2 ) ) > 0.1 ) ) return gp1.getRawAxis ( 2 ) ; } catch ( java.lang.Exception e ) { } try { xbox.getRawAxis ( 2 ) ; } catch ( java.lang.Exception e ) { } return 0.0; } 
public static void ReadMovie () { java.io.BufferedReader br = null; java.lang.String strLine = ""; try { br = new java.io.BufferedReader ( new java.io.FileReader ( "\\files\\Movie1.txt" ) ) ; while ( null != ( strLine = br.readLine () ) ) { java.lang.System.out.println ( strLine ) ; eu.ooti.forumlite.String_show.string_show ( strLine ) ; java.lang.Thread.sleep ( 2000 ) ; } } catch ( java.lang.Exception e ) { } } 
@ java.lang.Override public void run () { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment.getView () .findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1.setText ( ( " G" + ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) ) ) ; } 
public void remove ( com.dd.dataTypes.bodyAreas.Item item ) throws com.dd.dataTypes.bodyAreas.InventoryException { if ( items.containsValue ( item ) ) { this.items.remove ( item ) ; } else { throw new com.dd.dataTypes.bodyAreas.InventoryException ( ( " is not in your inventory. " + ( item.titleToString () ) ) ) ; } } 
void addToBoundIntent ( android.content.Intent intent, android.app.IServiceConnection connection ) { com.lody.virtual.server.am.ServiceRecord.IntentBindRecord record = peekBinding ( intent ) ; if ( null == record ) { record = new com.lody.virtual.server.am.ServiceRecord.IntentBindRecord () ; record.intent = intent; synchronized ( bindings ) { android.content.Intent.FilterComparison filter = new android.content.Intent.FilterComparison ( intent ) ; bindings.put ( filter, record ) ; } } record.addConnection ( connection ) ; } 
@ java.lang.Override public void call ( java.lang.String s ) { if ( ! ( android.text.TextUtils.isEmpty ( s ) ) ) { if ( ( me.shaohui.shareutil.share.SharePlatform.QZONE ) == platform ) { shareToQZoneForMedia ( title, targetUrl, summary, s, activity, listener ) ; } else { shareToQQForMedia ( title, targetUrl, summary, s, activity, listener ) ; } } else { startFailed ( activity, listener, new java.lang.Exception ( "image fetch error" ) ) ; } } 
public void addToView ( java.lang.String resource, org.reactome.web.diagram.data.interactors.model.DiagramInteractor interactor ) { uk.ac.ebi.pwp.structures.quadtree.client.QuadTree<org.reactome.web.diagram.data.interactors.model.DiagramInteractor> tree = interactorsTreeCache.get ( resource.toLowerCase () ) ; if ( null == tree ) { tree = new uk.ac.ebi.pwp.structures.quadtree.client.QuadTree ( minX, minY, maxX, maxY, org.reactome.web.diagram.data.InteractorsContent.NUMBER_OF_ELEMENTS, org.reactome.web.diagram.data.InteractorsContent.MIN_AREA ) ; interactorsTreeCache.put ( resource.toLowerCase () , tree ) ; } tree.add ( interactor ) ; } 
private boolean noCourseTwicePerDay ( classscheduling.Course c, classscheduling.Day day, classscheduling.GradeDay gd ) { if ( 1 < ( gd.count ( c.code ) ) ) { schedule.errors.add ( ( ( ( ( ( ( gd.grade.name () ) + ": too many " ) + ( c.name ) ) + " classes" ) + " on " ) + ( day.name ) ) ) ; return false; } return true; } 
public static nben.mesh.registration.AnglePotential newWellAnglePotential ( double scale, int[][] T, double[][] X ) { return new nben.mesh.registration.AnglePotential ( new nben.mesh.registration.InfiniteWellFunction ( ( scale / ( ( T[0].length ) * 3 ) ) , 0.0, ( 0.5 * ( java.lang.Math.PI ) ) ) , nben.mesh.registration.Util.facesToAngles ( T ) , X ) ; } 
public void onSwipeBottom () { if ( contains ( LevelArrays.MOVE_UP, currentLevel[y][x] ) ) { if ( true == ( allowInput ) ) { ( y ) --; move () ; startAnimation ( 0, 0, 0, ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator.vibrate ( VIBRATE_SHORT ) ; } } else { vibrator.vibrate ( VIBRATE_MEDIUM ) ; } } 
private static java.util.List<com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler> retrieveHandlers ( boolean triggerOnPush, com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush, boolean skipWorkInProgressMergeRequest, boolean triggerOnPipelineEvent ) { java.util.List<com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler> result = new java.util.ArrayList<> () ; if ( triggerOnPush ) { result.add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) == triggerOpenMergeRequestOnPush ) { result.add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result; } 
@ java.lang.Override public net.minecraft.util.ActionResult<net.minecraft.item.ItemStack> onItemRightClick ( net.minecraft.world.World worldIn, net.minecraft.entity.player.EntityPlayer player, net.minecraft.util.EnumHand hand ) { net.minecraft.item.ItemStack heldItem = player.getHeldItem ( hand ) ; if ( ( net.minecraft.item.ItemStack.EMPTY ) != heldItem ) { com.legacy.aether.common.player.PlayerAether.get ( player ) .accessories.setInventoryAccessory ( heldItem.copy () ) ; heldItem.shrink ( 1 ) ; return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack> ( net.minecraft.util.EnumActionResult.SUCCESS, heldItem ) ; } return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack> ( net.minecraft.util.EnumActionResult.FAIL, heldItem ) ; } 
public void addLast ( Item item ) { if ( null == item ) throw new java.lang.NullPointerException ( "input data is null" ) ; Deque<Item>.Node add = new Node ( item ) ; if ( isEmpty () ) { left = right = add; } else { add.prev = right; right.next = add; right = add; } ( N ) ++; } 
private boolean matches ( java.lang.String oreDict ) { java.util.ArrayList<net.minecraft.item.ItemStack> listStacks = net.minecraftforge.oredict.OreDictionary.getOres ( oreDict ) ; for ( net.minecraft.item.ItemStack stack : listStacks ) { if ( ( ingredient.isItemEqual ( this.ingredient ) ) && ( net.minecraftforge.oredict.OreDictionary.itemMatches ( stack, input, true ) ) ) { return true; } } return false; } 
public void jump () { int x = getSprite () .getX () ; int y = getSprite () .getY () ; gravity () ; if ( ( checkCollision ( x, ( y + 2 ) , Main.level.getConstructs () ) ) && ( ( ySpeed ) == 0 ) ) { ySpeed = - ( environment.Constants.JUMP_HEIGHT ) ; } } 
public void process ( org.openstreetmap.osmosis.core.container.v0_6.WayContainer wayContainer ) { org.openstreetmap.osmosis.core.domain.v0_6.Way way; long wayId; flushNodes ( true ) ; way = wayContainer.getEntity () ; wayId = way.getId () ; if ( ( maxWayId ) <= wayId ) { maxWayId = wayId + 1; } if ( wayId < ( minWayId ) ) { minWayId = wayId + 1; } wayBuffer.add ( way ) ; flushWays ( false ) ; } 
@ java.lang.Override public org.aopalliance.aop.Advice getAdvice () { if ( null == ( interceptor ) ) { synchronized ( this ) { if ( null == ( interceptor ) ) { interceptor = new org.ironrhino.core.cache.CacheInterceptor () ; org.ironrhino.core.cache.CacheManager cacheManager = ctx.getBean ( org.ironrhino.core.cache.CacheManager.class ) ; interceptor.setCacheManager ( cacheManager ) ; interceptor.setMutex ( mutex ) ; interceptor.setMutexWait ( mutexWait ) ; } } } return interceptor; } 
private com.jensen.boardgames.othello.model.player.OthelloPlayer randomPlayer () { if ( com.jensen.boardgames.othello.model.Othello.isGameOver ( this ) ) { return null; } currentPlayerIndex = new java.util.Random () .nextInt ( players.length ) ; setCurrentPlayer ( players[currentPlayerIndex] ) ; if ( 0 < ( com.jensen.boardgames.othello.model.Othello.getValidMoves ( this ) .length ) ) { nextPlayer () ; } return getCurrentPlayer () ; } 
public nl.tudelft.jpacman.Level nextLevel () { nl.tudelft.jpacman.Level level = makeLevel ( ( ++ ( currentLevel ) ) ) ; level.setIndex ( currentLevel ) ; if ( null == level ) { level = makeLevel ( ( -- ( currentLevel ) ) ) ; } return level; } 
private double productionDeut ( int lvl ) { double tempmod = 1.44 - ( ( Versorgung[11] ) * 0.004 ) ; return java.lang.Math.ceil ( ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( java.lang.Math.pow ( 1.1, lvl ) ) ) * tempmod ) ) ; } 
public boolean subtractFromRegistry ( int registryIndex, byte value ) { boolean borrow = false; int result = ( ( chip8.getRegisters () [registryIndex] ) & 255 ) - ( value & 255 ) ; if ( 0 > result ) { borrow = true; result = ( 255 - ( result * ( -1 ) ) ) - 1; } chip8.getRegisters () [registryIndex] = ( ( byte ) ( result ) ) ; return borrow; } 
@ com.smartsync.controller.RequestMapping ( method = RequestMethod.DELETE, value = "/{id}", produces = "application/json" ) public org.springframework.http.ResponseEntity deleteUser ( @com.smartsync.controller.PathVariable ( value = "id" ) java.lang.String id ) { com.smartsync.model.User user = this.userService.deleteUser ( id ) ; if ( null == user ) { java.lang.String message = "Could not delete user with id: " + id; java.lang.String url = "/users/" + id; logger.error ( ( ( "Could not find user with id: " + id ) + " to delete" ) ) ; throw new com.smartsync.controller.UserNotFoundException ( message, url ) ; } logger.info ( ( "Successfully deleted user: " + user ) ) ; return org.springframework.http.ResponseEntity.ok ( user ) ; } 
public java.sql.ResultSet queryExecution ( java.lang.String query ) throws java.lang.Exception { java.sql.PreparedStatement preparedquery = db.prepareStatement ( ( ";" + query ) ) ; preparedquery.clearParameters () ; java.sql.ResultSet result = null; try { result = preparedquery.executeQuery () ; } catch ( java.lang.Exception ex ) { java.lang.System.err.println ( ex ) ; } return result; } 
private boolean hasPassed ( int currTime2, int time, int[] date ) { return ( ( date[dooyit.parser.DateTimeParser.DATE_INDEX_YY] ) == ( currYY ) ) && ( ( ( currTime2 > time ) && ( ( date[dooyit.parser.DateTimeParser.DATE_INDEX_DD] ) == ( currDD ) ) ) && ( ( date[dooyit.parser.DateTimeParser.DATE_INDEX_MM] ) == ( currMM ) ) ) ; } 
public static void main ( java.lang.String[] args ) { dataSystem dataBank = new dataSystem () ; if ( 2 == ( args.length ) ) { java.lang.String firstValue = args[0]; java.lang.String secondValue = args[1]; } else if ( ( args.length ) == 0 ) { Leaderboard.getInformationDirectlyFromUser () ; } } 
private boolean canCreateDeferredVertices () { return ( ( this.orders ) == ( org.mastik.query.Query.noOrders () ) ) && ( ( ( this.predicates ) == null ) && ( ( this.limit ) == ( org.mastik.query.Query.noLimit () ) ) ) ; } 
@ org.springframework.web.bind.annotation.PostMapping public final org.springframework.http.ResponseEntity insert ( @org.springframework.validation.annotation.Validated @org.springframework.web.bind.annotation.RequestBody final DtoT dto ) throws com.teammental.meconfig.exception.entity.EntityInsertException { java.io.Serializable id = doInsert ( dto ) ; java.lang.String location = org.springframework.web.servlet.support.ServletUriComponentsBuilder.fromCurrentContextPath () .path ( ( ( id.toString () ) + ( ( getMappingUrlOfController () ) + "/" ) ) ) .build () .toUriString () ; return org.springframework.http.ResponseEntity.status ( HttpStatus.CREATED ) .header ( "Location", location ) .build () ; } 
@ java.lang.Override public void onResponse ( okhttp3.Call call, okhttp3.Response response ) throws java.io.IOException { if ( ! ( response.isSuccessful () ) ) throw new java.io.IOException ( ( response + "Unexpected code " ) ) ; final java.util.regex.Matcher matcher = pattern2.matcher ( response.body () .string () ) ; if ( matcher.find () ) { loadedHtml = matcher.group ( 1 ) ; if ( ( loadedHtml ) == null ) { loadedHtml = matcher.group ( 2 ) ; } } parseHtmlTest ( loadedHtml ) ; } 
private net.minecraft.item.ItemStack getFirstStackHasBlock () { for ( int i = 0; ( inItems.getSlots () ) > i; ++i ) { if ( ( ! ( inItems.getStackInSlot ( i ) .isEmpty () ) ) && ( ! ( net.minecraft.block.Block.getBlockFromItem ( inItems.getStackInSlot ( i ) .getItem () ) .equals ( Blocks.AIR ) ) ) ) return inItems.getStackInSlot ( i ) ; } return net.minecraft.item.ItemStack.EMPTY; } 
@ javax.annotation.Nullable public java.lang.String getQueue ( co.cask.cdap.proto.Id.Namespace namespaceId ) { co.cask.cdap.proto.NamespaceMeta meta = store.getNamespace ( namespaceId ) ; com.google.common.base.Preconditions.checkNotNull ( meta, "Namespace meta cannot be null" ) ; co.cask.cdap.proto.NamespaceConfig config = meta.getConfig () ; return null != ( config.getSchedulerQueueName () ) ? config.getSchedulerQueueName () : getDefaultQueue () ; } 
@ java.lang.Override public void onPageSelected ( int position ) { final android.animation.Animator pageChangeAnimator = pageChangeAnimator ( lastKnownCurrentPage, position ) ; if ( ( ( viewPager ) != null ) && ( ( scrollState ) == ( android.support.v4.view.ViewPager.SCROLL_STATE_IDLE ) ) ) { refresh () ; } if ( pageChangeAnimator != null ) { pageChangeAnimator.start () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/accounts/login", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public gov.nist.hit.core.domain.ResponseMessage doNothing ( javax.servlet.http.HttpSession session ) { org.springframework.security.core.userdetails.User u = userService.getCurrentUser () ; gov.nist.auth.hit.core.domain.Account a = accountService.findByTheAccountsUsername ( u.getUsername () ) ; java.lang.Long guestId = gov.nist.hit.core.api.SessionContext.getCurrentUserId ( session ) ; if ( null != guestId ) { accountService.reconcileAccounts ( guestId, a.getId () ) ; } gov.nist.hit.core.api.SessionContext.setCurrentUserId ( session, a.getId () ) ; recordLastLoggedInDate ( a.getId () ) ; return new gov.nist.hit.core.domain.ResponseMessage ( ResponseMessage.Type.success, "loginSuccess", "succes" ) ; } 
public com.potatoes.cultivation.logic.Tile getTile ( com.potatoes.cultivation.logic.GameMap gameMap ) { if ( ( ( j ) < ( gameMap.map[0].length ) ) && ( ( ( ( i ) >= 0 ) && ( ( i ) < ( gameMap.map.length ) ) ) && ( ( j ) >= 0 ) ) ) return gameMap.map[i][j]; return null; } 
public void beginTransaction () throws java.sql.SQLException { if ( ( isSupportTransaction ) == null ) { isSupportTransaction = conn.getMetaData () .supportsTransactions () ; } else if ( false == ( isSupportTransaction ) ) { throw new java.sql.SQLException ( "Transaction not supported for current database!" ) ; } conn.setAutoCommit ( false ) ; } 
private void showPrevCommandUp () { if ( 0 == ( commandHistoryIndex ) ) { commandHistoryIndex = commandHistory.size () ; } if ( ( commandHistoryIndex ) > 0 ) { ( commandHistoryIndex ) --; } java.lang.String text = commandHistory.get ( commandHistoryIndex ) ; inputBox.setText ( text ) ; inputBox.positionCaret ( text.length () ) ; } 
protected boolean find ( java.lang.String findWhat, boolean matchCase, boolean wholeWord ) { if ( ( findWhat.isEmpty () ) || ( findWhat == null ) ) return false; if ( updateMatcher ) { matcher = createMatcher ( findWhat, matchCase, wholeWord ) ; updateMatcher = false; } boolean found = matcher.find () ; if ( found ) { textPane.setSelectionStart ( matcher.start () ) ; textPane.setSelectionEnd ( matcher.end () ) ; } return found; } 
void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head; while ( ( temp != ( current ) ) && ( ( temp.getValue () ) != pattern ) ) { temp = temp.getNext () ; if ( ( temp.getValue () ) == pattern ) { current = temp; } else { java.lang.System.out.println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } } 
@ org.junit.Test public void testShowList () { java.lang.System.out.println ( "showList" ) ; java.lang.String sql = "select * from Servers"; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null; try { result = instance.showList ( sql ) ; } catch ( java.sql.SQLException ex ) { org.junit.Assert.fail ( "testShowList faild." ) ; ex.printStackTrace () ; } org.junit.Assert.assertFalse ( org.jplus.util.ObjectHelper.isEmpty ( result ) ) ; org.junit.Assert.assertTrue ( ( 5 == ( result.size () ) ) ) ; } 
private void insertOne ( java.lang.String name, Time time, int index ) { if ( ( ( times.length ) - 1 ) > index ) { insertOne ( names[ ( index + 1 ) ], times[ ( index + 1 ) ], ( index + 1 ) ) ; names[index] = name; times[index] = new Time ( time ) ; } } 
private java.lang.String getParameterValueWithContext ( org.talend.core.model.process.IElement elem, java.lang.String key, org.talend.core.model.process.IContext context, org.talend.core.model.process.IElementParameter basePropertyParameter ) { if ( ( key == null ) || ( elem == null ) ) { return ""; } java.lang.String actualKey = this.getParaNameFromRepositoryName ( key, basePropertyParameter ) ; if ( actualKey != null ) { return fetchElementParameterValue ( elem, context, actualKey ) ; } else { return fetchElementParameterValue ( elem, context, key ) ; } } 
public java.util.ArrayList<org.apache.poi.openxml4j.opc.PackagePart> getPartsByRelationshipType ( java.lang.String relationshipType ) { if ( null == relationshipType ) throw new java.lang.IllegalArgumentException ( "relationshipType" ) ; java.util.ArrayList<org.apache.poi.openxml4j.opc.PackagePart> retArr = new java.util.ArrayList<org.apache.poi.openxml4j.opc.PackagePart> () ; for ( org.apache.poi.openxml4j.opc.PackageRelationship rel : getRelationshipsByType ( relationshipType ) ) { org.apache.poi.openxml4j.opc.PackagePart part = getPart ( rel ) ; if ( part != null ) { retArr.add ( part ) ; } } return retArr; } 
private void loadRomFromZip ( java.lang.String zipName ) throws java.io.IOException { final java.lang.String romName = selectRomInZip ( listRomsInZip ( zipName ) ) ; if ( null != romName ) { final java.io.File extractedFile = extractRomFromZip ( zipName, romName ) ; if ( extractedFile != null ) { extractedFile.deleteOnExit () ; } nes.loadROM ( extractedFile.getCanonicalPath () ) ; } } 
@ java.lang.Override protected void onItemNotFound ( final org.bonitasoft.web.toolkit.client.data.APIID caseId ) { final org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound onCaseDetailsNotFound = new org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound () { @java.lang.Override protected void redirectToArchivedCaseMoredetails ( final java.lang.String archivedCaseId ) { com.google.gwt.user.client.History.newItem ( ( ( org.bonitasoft.web.toolkit.client.ClientApplicationURL.getProfileId () ) + ( ( ( ( "?_p=" + ( ArchivedCaseMoreDetailsAdminPage.TOKEN ) ) + "&id=" ) + archivedCaseId ) + "&_pf=" ) ) ) ; } }; onCaseDetailsNotFound.checkIfCaseIsArchived ( caseId.toString () , 2 ) ; } 
private boolean unifiesNamespace ( jason.asSyntax.Literal t1s, jason.asSyntax.Literal t2s ) { if ( ( t2s == ( jason.asSyntax.Literal.DefaultNS ) ) && ( t1s == ( jason.asSyntax.Literal.DefaultNS ) ) ) { return true; } jason.asSyntax.Atom nst1 = ( t1s == ( jason.asSyntax.Literal.DefaultNS ) ) ? jason.asSyntax.Literal.DefaultNS : t1s.getNS () ; jason.asSyntax.Atom nst2 = ( t2s == ( jason.asSyntax.Literal.DefaultNS ) ) ? jason.asSyntax.Literal.DefaultNS : t2s.getNS () ; return unifiesNoUndo ( nst1, nst2 ) ; } 
private void display () throws java.io.IOException { java.io.File htmlFile = new java.io.File ( ( "index.html" + ( ( ( ( br.com.hammeredsoft.mailoff.util.MailOffConf.getWorkDir () ) + ( java.io.File.separator ) ) + ( br.com.hammeredsoft.mailoff.util.MailOffConf.getConfig ( MailOffConf.WEBROOT ) ) ) + ( java.io.File.separator ) ) ) ) ; java.lang.System.out.println ( htmlFile.toURI () ) ; java.awt.Desktop.getDesktop () .browse ( htmlFile.toURI () ) ; } 
public void openMailSender ( no.runsafe.framework.api.player.IPlayer sender, no.runsafe.framework.api.player.IPlayer recipient ) { sender.sendColouredMessage ( ( "." + ( "&3Sending mail will cost " + ( this.getMailCostText () ) ) ) ) ; no.runsafe.framework.minecraft.inventory.RunsafeInventory inventory = server.createInventory ( null, 54, ( "Mail to " + ( recipient.getName () ) ) ) ; this.openSendAgents.put ( sender.getName () , new no.runsafe.mailbox.MailSendAgent ( recipient, inventory ) ) ; sender.openInventory ( inventory ) ; } 
public boolean containsAddress ( java.lang.String address ) { if ( 0 != ( this.address.size () ) ) { for ( int i = 0; i < ( this.address.size () ) ; i++ ) { if ( this.address.get ( i ) .equals ( address ) ) { return true; } else { return false; } } } return false; } 
public static void remove ( int index ) { TestListReferenceBased.Node ptr = TestListReferenceBased.head; TestListReferenceBased.Node nxt = TestListReferenceBased.head.getNext () .getNext () ; for ( int x = 0; index > x; x++ ) { ptr = ptr.getNext () ; nxt = nxt.getNext () ; } ptr.setNext ( nxt ) ; } 
private void onGameOver ( android.graphics.Canvas canvas ) { canvas.drawText ( this.getContext () .getString ( R.string.game_over_text ) , ( ( ( cellSize_ ) * 2.5F ) + ( startP_ ) ) , ( ( startP_ ) + ( ( cellSize_ ) * 4.7F ) ) , noticePaint_ ) ; } 
@ java.lang.Override public void updateItem ( model.Event event, boolean empty ) { super.updateItem ( event, empty ) ; if ( null != event ) { data = new gui.EventCell.EventData () ; data.setEvent ( event ) ; setGraphic ( data.getBox () ) ; } } 
private static java.lang.String getName ( org.jetbrains.plugins.cucumber.java.run.Scenario scenario ) { if ( scenario.getKeyword () .equals ( "Scenario Outline" ) ) { return org.jetbrains.plugins.cucumber.java.run.CucumberJvmSMFormatter.escape ( ( ( scenario.getLine () ) + "Scenario: Line: " ) ) ; } else { return org.jetbrains.plugins.cucumber.java.run.CucumberJvmSMFormatter.escape ( ( "Scenario: " + ( scenario.getName () ) ) ) ; } } 
@ java.lang.Override public javafx.scene.control.ListCell<repertuar.model.Film> call ( javafx.scene.control.ListView<repertuar.model.Film> param ) { javafx.scene.control.ListCell<repertuar.model.Film> cell = new javafx.scene.control.ListCell<repertuar.model.Film> () { @java.lang.Override protected void updateItem ( repertuar.model.Film item, boolean b ) { super.updateItem ( item, b ) ; if ( null != item ) { textProperty () .bind ( item.titleProperty () ) ; } else { textProperty () .unbind () ; textProperty () .set ( "" ) ; } } }; return cell; } 
public void hierarchySetUp ( org.opennms.netmgt.model.topology.Bridge root ) { if ( root.isRootBridge () ) return; root.setRootBridge ( true ) ; root.setRootPort ( null ) ; if ( 1 == ( m_bridges.size () ) ) return; for ( org.opennms.netmgt.model.topology.SharedSegment segment : getSharedSegmentOnTopologyForBridge ( root.getId () ) ) { segment.setDesignatedBridge ( root.getId () ) ; tier ( segment, root.getId () ) ; } } 
public static edu.ucsd.sccn.LSL.StreamInfo[] resolve_streams ( double wait_time ) { com.sun.jna.Pointer[] buf = new com.sun.jna.Pointer[1024]; int num = edu.ucsd.sccn.LSL.inst.lsl_resolve_all ( buf, ( ( long ) ( buf.length ) ) , wait_time ) ; edu.ucsd.sccn.LSL.StreamInfo[] res = new edu.ucsd.sccn.LSL.StreamInfo[num]; for ( int k = 0; num > k; k++ ) res[k] = new edu.ucsd.sccn.LSL.StreamInfo ( buf[k] ) ; return res; } 
public void insert ( int element ) { this.Heap[ ( ++ ( this.size ) ) ] = element; int current = this.size; while ( ( this.Heap[this.parent ( current ) ] ) < ( this.Heap[current] ) ) { this.swap ( current, this.parent ( current ) ) ; current = this.parent ( current ) ; } } 
private void moveLeft ( int t ) { alignment[t] = alignment[ ( 1 + t ) ]; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment[t]; eLost.removeOneFrame ( frames[t] ) ; float vLost = eLost.getVar () ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eGain = alignment[ ( 1 + t ) ]; eGain.updateOneFrame ( frames[t] ) ; float vGain = eGain.getVar () ; globalVar += vGain - vLost; } 
public void setGlobalPosition ( engine.math.Vector2i position ) { if ( null == ( parent ) ) { this.position = position; } this.position = position.sub ( parent.getGlobalPosition () ) .rotateBy ( ( - ( parent.getRotation () ) ) ) ; } 
private void bindData () { android.support.design.widget.NavigationView navigationView = ( ( android.support.design.widget.NavigationView ) ( findViewById ( R.id.activity_main_drawer_navigation ) ) ) ; if ( null == ( navigationView.getHeaderView ( 0 ) ) ) { android.view.View headerView = getLayoutInflater () .inflate ( R.layout.navigation_header, navigationView, false ) ; navigationView.addHeaderView ( headerView ) ; } if ( ( navigationView.getHeaderView ( 0 ) ) != null ) { android.view.View headerView = navigationView.getHeaderView ( 0 ) ; if ( com.appcliente.wegest.WebViewAppConfig.NAVIGATION_DRAWER_HEADER_IMAGE ) { headerView.setBackgroundResource ( R.drawable.navigation_header_bg ) ; } } } 
public java.util.ArrayList<java.lang.String> getCategories ( java.util.ArrayList<com.fromdev.android.entity.Question> questionList ) { java.util.ArrayList<java.lang.String> mCNameList = new java.util.ArrayList<> () ; for ( int i = 0; ( questionList.size () ) > i; i++ ) { if ( ! ( mCNameList.contains ( questionList.get ( i ) .getCategory () ) ) ) mCNameList.add ( questionList.get ( i ) .getCategory () ) ; } return mCNameList; } 
@ java.lang.Override public void addGraphCode ( java.util.HashMap<java.lang.String, java.lang.String> items ) { for ( int i = 0; ( codeGetters.size () ) > i; i++ ) { sb.append ( codeGetters.get ( i ) .getCode ( items ) ) ; } java.lang.System.out.println ( sb.toString () ) ; } 
@ java.lang.Override public int skip ( int size ) throws java.io.IOException { byte[] temp = new byte[java.lang.Math.min ( org.verapdf.cos.filters.BF_BUFFER_SIZE, size ) ]; int skipped = 0; while ( size != skipped ) { int read = this.read ( temp, ( size - skipped ) ) ; if ( read == ( -1 ) ) { return skipped; } else { skipped += read; } } return skipped; } 
public void setLatestItem ( Item item ) { if ( null == ( this.item ) ) { this.item = item; } else { if ( ( this.item.getVersion () ) < ( item.getVersion () ) ) { this.item = item; } } this.incrementCounter () ; } 
@ java.lang.Override public android.graphics.Bitmap transform ( android.graphics.Bitmap source ) { int y = 35; int x = 0; android.graphics.Bitmap result = android.graphics.Bitmap.createBitmap ( source, x, y, source.getWidth () , ( ( 3 * ( source.getHeight () ) ) / 5 ) ) ; if ( result != source ) { source.recycle () ; } return result; } 
public void onGetLocationStatus ( java.lang.Boolean status, java.lang.String message ) { if ( status ) { org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController.getInstance () .startIndoorOutdoorDetector ( this, this ) ; toggleIndoorOutdoorButtonStatus ( true ) ; } else { org.mygeotrust.indoor.utils.dialogue.Dialogs.getInstance () .showInfoDialog ( this, " Cannot start indoor/outdoor Detector.", ( message + ( ( " GPS use Status: " + status ) + "\n Error: " ) ) , R.drawable.ic_warning, R.color.colorRed ) ; } } 
private void nextBuffer () { if ( null == ( buf ) ) buf = state.buffer () ; else buf = state.pushBuffer () ; heapArr = ( buf.isDirect () ) ? null : buf.array () ; baseOff = ( buf.isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) .address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF; } 
public void run () { while ( ( java.lang.Thread.State.TERMINATED ) != ( thread.getState () ) ) { try { java.util.Map<java.lang.Thread, java.lang.StackTraceElement[]> stacks = java.lang.Thread.getAllStackTraces () ; java.lang.System.out.println ( java.util.Arrays.toString ( stacks.get ( inspecteeThread ) ) ) ; } catch ( java.lang.InterruptedException e ) { } } } 
protected byte[] convertBytes ( java.util.ArrayList<java.lang.Integer> list ) { byte[] ret = new byte[list.size () ]; java.util.Iterator<java.lang.Integer> iterator = list.iterator () ; for ( int i = 0; ( ret.length ) > i; i++ ) { ret[i] = iterator.next () .byteValue () ; } return ret; } 
@ java.lang.Override public void removeAllTask () { java.util.Set<java.lang.String> exeKeys = mExecutePool.getAllTask () .keySet () ; for ( java.lang.String key : exeKeys ) { TASK task = mExecutePool.getAllTask () .get ( key ) ; if ( null != task ) task.cancel () ; } java.util.Set<java.lang.String> cacheKeys = mCachePool.getAllTask () .keySet () ; for ( java.lang.String key : cacheKeys ) { mExecutePool.removeTask ( key ) ; } } 
public double averagePopulation () { double average; long total = 0; for ( int i = 0; ( population.size () ) > i; i++ ) { total += population.get ( i ) .getEvaluation () ; } java.lang.System.out.println ( ( "Evalutation Total: " + total ) ) ; average = total / ( population.size () ) ; return average; } 
private static void getRidOfPassedCheckpointsNear ( Player.Buster buster ) { java.util.List<Player.Agent> tbd = new java.util.ArrayList<Player.Agent> () ; for ( Player.Agent point : Player.checkpoints ) { if ( ( Player.RADAR_DISTANCE ) > ( buster.distanceTo ( point ) ) ) { tbd.add ( point ) ; } } Player.checkpoints.removeAll ( tbd ) ; java.lang.System.err.println ( ( "checkpoints remaining " + ( Player.checkpoints.size () ) ) ) ; } 
public void changeLane ( int carIndex ) { Car car = cars.get ( carIndex ) ; cars.remove ( carIndex ) ; numCars = cars.size () ; java.lang.System.out.print ( ( " cars after one left." + ( ( ( "Lane " + ( laneIndex ) ) + " has " ) + ( numCars ) ) ) ) ; TrafficSimulator.lanes.get ( newLaneIndex ) .addCar ( car, ( ( newLaneIndex ) - ( laneIndex ) ) ) ; } 
public byte[] get ( java.lang.String key, boolean renew ) { net.vicp.lylab.core.model.CacheValue cv = getContainer () .get ( key ) ; if ( null == cv ) return null; if ( ( ( cv.getStartTime () ) + ( cv.getValidateTime () ) ) < ( java.lang.System.currentTimeMillis () ) ) { remove ( key, cv ) ; return null; } if ( renew ) cv.renewStartTime () ; return cv.getValue () ; } 
public int findNodeNumber ( int key ) { edu.oakland.production.ClassProject.Database.Node focusNode = this.binaryTreeDatabase.getRootNode () ; int nodeCount = 0; while ( key != ( focusNode.getKey () ) ) { if ( key < ( focusNode.getKey () ) ) { focusNode = focusNode.leftChild; } else { focusNode = focusNode.rightChild; } if ( focusNode == null ) return -1; nodeCount++; } return nodeCount++; } 
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source, java.lang.Class<?> targetClass, io.beanmapper.core.BeanFieldMatch beanFieldMatch ) { if ( ( beanFieldMatch.getSourceClass () .equals ( targetClass ) ) || ( source == null ) ) { return source; } java.lang.Object sourceAsString = beanMapper.convert ( source, java.lang.String.class, beanFieldMatch ) ; return beanMapper.convert ( sourceAsString, targetClass, beanFieldMatch ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_todo ) ; android.preference.PreferenceManager.setDefaultValues ( this, R.xml.preferences, false ) ; if ( null == savedInstanceState ) { fragment = com.codepath.todoapp.fragments.TodoFragment.newInstatnce () ; getFragmentManager () .beginTransaction () .add ( R.id.fListContainer, fragment ) .addToBackStack ( "todo" ) .commit () ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { if ( ( MUSIC_LIST_VIEW_REQUEST ) == requestCode ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { mediaPlayer.stop () ; currentSong = data.getIntExtra ( "position", 1 ) ; playSong () ; } } } 
public boolean needsRefresh () { boolean needsRefresh; this.refreshLock.readLock () .lock () ; if ( 0 == ( this.expires ) ) { needsRefresh = false; } else { long now = java.lang.System.currentTimeMillis () ; long tokenDuration = now - ( this.lastRefresh ) ; needsRefresh = tokenDuration >= ( ( this.expires ) - ( com.box.sdk.BoxAPIConnection.REFRESH_EPSILON ) ) ; } this.refreshLock.readLock () .unlock () ; return needsRefresh; } 
private int getAgentEncoding ( com.sun.org.apache.xalan.internal.xsltc.runtime.Node node, int timeStep, int binaryIndex ) { return binaryIndex + ( ( ( ( vertexOffset ) + ( edgeOffset ) ) + ( ( ( makespan ) * ( node.getIndexInGraph () ) ) * ( numBinaryPropVars ) ) ) + ( ( timeStep - 1 ) * ( numBinaryPropVars ) ) ) ; } 
private int addChildNodes ( tellh.com.recyclertreeview_lib.TreeNode pNode, int startIndex ) { java.util.List<tellh.com.recyclertreeview_lib.TreeNode> childList = pNode.getChildList () ; int addChildCount = 0; for ( tellh.com.recyclertreeview_lib.TreeNode treeNode : childList ) { displayNodes.add ( ( ( addChildCount++ ) + startIndex ) , treeNode ) ; if ( treeNode.isExpand () ) { addChildCount += addChildNodes ( treeNode, ( startIndex + addChildCount ) ) ; } } pNode.toggle () ; return addChildCount; } 
public javax.json.JsonStructure getEventDistrictPoints ( java.lang.String eventKey, int verboseLevel ) { javax.json.JsonStructure data = get ( ( "/district_points" + ( "event/" + eventKey ) ) , header ) ; if ( verboseLevel < 2 ) { data = ( ( javax.json.JsonStructure ) ( ( ( javax.json.JsonObject ) ( data ) ) .get ( "points" ) ) ) ; } return data; } 
private void validateCommand ( org.spine3.examples.todolist.UpdateTaskDescription cmd ) { org.spine3.examples.todolist.Task taskState = getState () ; java.lang.String description = cmd.getUpdatedDescription () ; com.google.common.base.Preconditions.checkNotNull ( description, "Description cannot be null." ) ; if ( 3 > ( description.length () ) ) { throw new java.lang.IllegalArgumentException ( "Description should contains at least 3 alphanumeric symbols." ) ; } validateCommandOnDeletionAndCompletion () ; } 
public void addDeadDenLocation ( viperinos.MapLocation den ) { viperinos.MapLocation[] temp = new viperinos.MapLocation[1 + ( deadDens.length ) ]; java.lang.System.arraycopy ( deadDens, 0, temp, 0, deadDens.length ) ; temp[ ( 1 + ( deadDens.length ) ) ] = den; deadDens = temp; } 
public static java.lang.String readRequestFile ( java.lang.String fileName ) throws java.lang.Exception { java.io.InputStream is = new java.io.FileInputStream ( fileName ) ; java.io.BufferedReader buf = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.String line = buf.readLine () ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; while ( null != line ) { sb.append ( line ) .append ( "\n" ) ; line = buf.readLine () ; } return sb.toString () ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( false == ( radioButtonChan6.isSelected () ) ) { try { c.sendCommand ( "CONN 6" ) ; } catch ( java.io.IOException e1 ) { e1.printStackTrace () ; } } else { try { c.sendCommand ( "DISC 6" ) ; } catch ( java.io.IOException e1 ) { e1.printStackTrace () ; } } if ( ( c.connected[1][2] ) == null ) { radioButtonChan7.setSelected ( false ) ; } } 
public void setCharacteristicNotification ( android.bluetooth.BluetoothGattCharacteristic characteristic, boolean enabled ) { com.eveningoutpost.dexdrip.Models.UserError.Log.i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG, "Characteristic setting notification" ) ; mBluetoothGatt.setCharacteristicNotification ( characteristic, enabled ) ; android.bluetooth.BluetoothGattDescriptor descriptor = characteristic.getDescriptor ( java.util.UUID.fromString ( HM10Attributes.CLIENT_CHARACTERISTIC_CONFIG ) ) ; com.eveningoutpost.dexdrip.Models.UserError.Log.i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG, ( ( descriptor.getUuid () ) + "Descriptor found: " ) ) ; descriptor.setValue ( BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE ) ; mBluetoothGatt.writeDescriptor ( descriptor ) ; } 
public static <K, V> java.lang.Iterable<java.util.Map.Entry<K, V>> makeIterable ( final java.util.Map<K, V> map ) { if ( ( map.isEmpty () ) || ( map == null ) ) { return ovation.odata.util.CollectionUtils.makeEmptyIterable () ; } return ovation.odata.util.CollectionUtils.makeIterable ( map.entrySet () .iterator () ) ; } 
private static java.lang.String getRequiredSpaces ( java.lang.String message ) { java.lang.String res = ""; final java.lang.String reference = "#########################################################################"; int requiredSpaces = ( ( reference.length () ) - ( message.length () ) ) - 4; for ( int i = 0; requiredSpaces > i; i++ ) { res = res + " "; } return res; } 
public void setMaterial ( org.gearvrf.GVRMaterial material, int passIndex ) { if ( ( mRenderPassList.size () ) > passIndex ) { mRenderPassList.get ( passIndex ) .setMaterial ( material ) ; org.gearvrf.NativeRenderData.setMaterial ( getNative () , material.getNative () , passIndex ) ; } else { android.util.Log.e ( org.gearvrf.GVRRenderData.TAG, ( ( "Trying to set material from invalid pass. Pass " + passIndex ) + " was not created." ) ) ; } } 
public boolean equals ( com.magnet.mmx.protocol.MMXTopic topic ) { if ( ( this ) == topic ) return true; if ( ( topic == null ) || ( ( ( mUserId ) == null ) ^ ( ( topic.getUserId () ) == null ) ) ) return false; if ( ( ( mUserId ) != null ) && ( ! ( mUserId.equalsIgnoreCase ( topic.getUserId () ) ) ) ) return false; return mTopic.equalsIgnoreCase ( topic.getName () ) ; } 
@ java.lang.Override public void destroy () { try { if ( null != ( consumer ) ) { consumer.close () ; } if ( ( session ) != null ) { session.close () ; } if ( ( connection ) != null ) { connection.close () ; } } catch ( java.lang.Exception ex ) { throw new java.lang.RuntimeException ( ( "Exception on closing SQS connection: " + ( ex.getMessage () ) ) , ex ) ; } } 
public int getBacklogMarkerPosition () { try { for ( int i = 0; ( i < ( data.size () ) ) && ( ( data ) != null ) ; i++ ) { com.irccloud.android.data.model.Event e = data.get ( i ) ; if ( ( e != null ) && ( ( e.row_type ) == ( com.irccloud.android.fragment.MessageViewFragment.ROW_BACKLOGMARKER ) ) ) { return i; } } } catch ( java.lang.Exception e ) { } return -1; } 
public static void updateClient ( com.robrit.moofluids.common.entity.EntityFluidCow fluidCow, long worldTime ) { net.minecraft.nbt.NBTTagCompound tag = fluidCow.getEntityData () ; if ( ( ( tag.getLong ( "rfc:nextUpdate" ) ) < worldTime ) && ( tag.hasKey ( "rfc:nextUpdate" ) ) ) { com.jdlogic.ranchablefluidcows.ranchable.RanchableFC.sendPacket ( fluidCow ) ; } tag.setLong ( "rfc:nextUpdate", ( worldTime + ( 20 * 10 ) ) ) ; } 
@ java.lang.Override public void onMessage ( int instanceId, java.lang.String message ) { int size = java.lang.Integer.parseInt ( message ) ; byte[] buffer = new byte[1 + size]; for ( int i = 0; i < size; ++i ) buffer[i] = 'p'; buffer[size] = 0; byte[] encodedBufer = org.apache.commons.codec.binary.Base64.encodeBase64 ( buffer ) ; java.lang.String result = new java.lang.String ( encodedBufer ) ; postMessage ( instanceId, result ) ; } 
private void initSheetWidthConfig ( org.apache.poi.ss.usermodel.Sheet sheet ) { xgt.util.excel.Config config = getConfig () ; sheet.setDefaultColumnWidth ( ( 256 * ( config.getDefaultWidth () ) ) ) ; sheet.setDefaultRowHeightInPoints ( config.getDefaultHeight () ) ; for ( int index : config.getKeysOfWidth () ) { sheet.setColumnWidth ( index, ( ( config.getColumnWidth ( index ) ) * 256 ) ) ; } } 
public void geometricSeriesApproximation ( double x ) { double nextApproximation = x; for ( int i = 0; ( this.steps ) > i; i++ ) { nextApproximation = nextApproximation * x; } this.approximation = ( this.lastApproximation ) + nextApproximation; if ( ! ( isAccurate () ) ) { geometricSeriesApproximation ( x ) ; } else { return; } } 
public void union ( int p, int q ) { int root_p = find ( p ) ; int root_q = find ( q ) ; if ( ( rank[root_q] ) < ( rank[root_p] ) ) { set[root_q] = root_q; } else { set[root_p] = root_q; if ( ( rank[root_p] ) == ( rank[root_q] ) ) { ( rank[root_q] ) ++; } } } 
public static void selectNextTableRow ( javax.swing.JTable table ) { int index = table.getSelectedRow () ; if ( ( -1 ) == index ) { index = 0; } table.clearSelection () ; if ( ( ++index ) > ( ( table.getRowCount () ) - 1 ) ) { index = 0; } index = table.convertRowIndexToView ( index ) ; table.addRowSelectionInterval ( index, index ) ; } 
public static com.github.bijoysingh.starter.item.TimestampItem getTimestampItem ( java.lang.String timestamp, org.joda.time.DateTimeZone dateTimeZone, java.lang.Integer hour, java.lang.Integer minutes ) { org.joda.time.DateTime dateTime = com.github.bijoysingh.starter.util.TimestampManager.getDateTimeObject ( timestamp ) ; if ( null == dateTime ) { return new com.github.bijoysingh.starter.item.TimestampItem ( timestamp, null, null, java.util.Calendar.getInstance () ) ; } dateTime = dateTime.toDateTime ( dateTimeZone ) ; dateTime = dateTime.plusHours ( 5 ) .plusMinutes ( 30 ) ; return com.github.bijoysingh.starter.util.TimestampManager.createTimestampItem ( timestamp, dateTime ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) { if ( ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) == requestCode ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil.verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback.onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log.i ( "BaseActivity", "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback.onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super.onRequestPermissionsResult ( requestCode, permissions, grantResults ) ; } } 
public boolean setRedUpgrade () { if ( 5 > ( redBalls ) ) { return false; } redBalls = ( redBalls ) - 5; if ( ( red ) == null ) { red = new uk.org.ulcompsoc.ld32.components.upgrade.Upgrade ( uk.org.ulcompsoc.ld32.components.upgrade.Upgrade.UpgradeType.BALL_NUMBER_PLUS_1 ) ; return true; } switch ( red.getUpgradeType () ) { case BALL_NUMBER_PLUS_1: { red = new uk.org.ulcompsoc.ld32.components.upgrade.Upgrade ( uk.org.ulcompsoc.ld32.components.upgrade.Upgrade.UpgradeType.BALL_NUMBER_PLUS_2 ) ; break; } default: return false; } return false; } 
public java.util.ArrayList<csv.Person> readCsv ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedInputStream bis = new java.io.BufferedInputStream ( is ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( bis ) ) ; try { java.lang.String line; while ( null != ( line = reader.readLine () ) ) { parsedPersons.add ( csv.Person.toPerson ( line ) ) ; } } catch ( java.lang.Exception e ) { java.lang.System.out.println ( e.getMessage () ) ; } return parsedPersons; } 
@ java.lang.Override public void setUser ( com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.UsersLogged userLogged ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException { if ( null == ( this.userLogged.getCurrentUserLogged () ) ) { login ( userLogged.getCurrentUserLogged () .getAuUsername () , userLogged.getCurrentUserLogged () .getAuPassword () ) ; } } 
@ org.junit.Test public void parseCommentWithNewLines () { java.lang.String text = ( ( ( " * The version identifier for this Serializable class.\n" + " * Increment only if the <i>serialized</i> form of the\n" ) + " * class changes.\n" ) + " " ) + "\n"; org.junit.Assert.assertEquals ( new com.github.javaparser.javadoc.Javadoc ( com.github.javaparser.javadoc.description.JavadocDescription.parseText ( ( "The version identifier for this Serializable class.\n" + ( "Increment only if the <i>serialized</i> form of the\n" + "class changes." ) ) ) ) , new com.github.javaparser.JavadocParser () .parse ( text ) ) ; } 
private org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this.fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this.throwError ( ( ( mapping.getErrorMessage () ) + "Error mapping operand expression: " ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping; } 
public void removeOne ( T item ) { nodes.TreeNode<T> current = root; while ( null != current ) { nodes.TreeNode<T> next = current.checkNode ( item ) ; if ( current == next ) { current.deincrementItemCount () ; return; } } } 
public boolean isItPossibleToShoot ( de.hsbremen.battleshipextreme.model.FieldState[][] board, int startX, int startY ) { boolean result = false; de.hsbremen.battleshipextreme.model.FieldState state = board[startX][startY]; if ( ( state == ( de.hsbremen.battleshipextreme.model.FieldState.IS_EMPTY ) ) || ( state == ( de.hsbremen.battleshipextreme.model.FieldState.HAS_SHIP ) ) ) { result = true; } return result; } 
@ java.lang.Override protected void removeInfoView ( android.view.View view ) { if ( null != ( view.getParent () ) ) ( ( android.view.ViewGroup ) ( view.getParent () ) ) .removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView.findViewById ( R.id.infoLayout ) ) ) .removeView ( view ) ; } 
@ java.lang.Override public void request ( long n ) { if ( 1 == ( terminated ) ) { return; } if ( reactor.core.support.BackpressureUtils.checkRequest ( n, inputSubscriber ) ) { reactor.core.support.BackpressureUtils.getAndAdd ( REQUESTED, this, n ) ; if ( n == ( java.lang.Long.MAX_VALUE ) ) { org.reactivestreams.Subscription subscription = this.subscription; if ( subscription != null ) { subscription.request ( n ) ; } } else { drainBackpressureQueue () ; } } } 
protected int nearMinesCount ( int line, int place ) { int count = 1; for ( int[] near : net.patttern.minesweeper.proto.bases.BaseArea.nears ) { count += ( cellMined ( ( ( near[0] ) + line ) , ( place + ( near[1] ) ) ) ) ? 1 : 0; } return count; } 
public void write ( byte[] data ) { int index = 0; while ( ( clientCount ) > index ) { clients[index].write ( data ) ; if ( clients[index].active () ) { index++; } else { removeIndex ( index ) ; } } } 
public java.util.List<cn.edu.ustb.sem.order.entity.Order> listForceScheduleOrder () { java.lang.String hql = ( cn.edu.ustb.sem.order.entity.OrderStatus.forced ) + ( ( ( ( ( ( ( ( ( ( ( "from " + ( this.tableName ) ) + " o where ( o.status = " ) + ( cn.edu.ustb.sem.order.entity.OrderStatus.initial ) ) + " " ) + "or o.processIsCheck = " ) + ( cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED ) ) + " " ) + "or o.materialIsChecked = " ) + ( cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED ) ) + " ) " ) + "and o.status != " ) ; return list ( hql, ( -1 ) , ( -1 ) ) ; } 
public void setEnable ( boolean flag ) { mIsEnabled = flag; if ( 0 != ( getNative () ) ) { org.gearvrf.NativeComponent.setEnabled ( getNative () , flag ) ; } if ( flag ) { onEnable () ; } else { onDisable () ; } } 
public static java.util.List<java.lang.String> getListOfAuthorizedDomainsByConsumerKey ( java.lang.String consumerKey ) throws org.wso2.carbon.apimgt.api.APIManagementException { java.lang.String list = org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.getAuthorizedDomainsByConsumerKey ( consumerKey ) ; if ( ( ! ( list.isEmpty () ) ) || ( list != null ) ) { return java.util.Arrays.asList ( list.split ( "," ) ) ; } return null; } 
public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { this.historySearch.add ( sq ) ; if ( ( MAX_HISTORY ) < ( this.historySearch.size () ) ) { this.historySearch = ( ( java.util.ArrayList<com.savelives.entityclasses.SearchQuery> ) ( this.historySearch.subList ( ( ( this.historySearch.size () ) - ( MAX_HISTORY ) ) , ( ( this.historySearch.size () ) - 1 ) ) ) ) ; } } 
public java.lang.Double[] getOrientation () { java.util.ArrayList<java.lang.Double> tmpOrientation = orientationBuffer.remove ( 0 ) ; java.lang.Double[] orientation = new java.lang.Double[7]; for ( int i = 0; 7 > i; i++ ) { orientation[i] = tmpOrientation.remove ( 0 ) ; } return orientation; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/logout", method = { org.springframework.web.bind.annotation.RequestMethod.GET } ) @org.springframework.web.bind.annotation.ResponseBody public void logout ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { java.lang.System.out.println ( "logout controller" ) ; javax.servlet.http.HttpSession session = request.getSession ( false ) ; if ( null != session ) { session.invalidate () ; java.lang.System.out.println ( "lougout success" ) ; resp.sendRedirect ( "index.html" ) ; } } 
private org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName, java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup.findType ( typeName, packageName, false, org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL, false, true, false, null ) ; return null == answer ? null : answer.type; } 
@ java.lang.Override public void HandleTopNewsIds ( java.lang.String data ) { android.util.Log.i ( "Info", data ) ; try { org.json.JSONArray jsonArray = new org.json.JSONArray ( data ) ; for ( int i = 0; ( jsonArray.length () ) > i; i++ ) { topNewsArray.add ( jsonArray.getString ( i ) ) ; } getArticleInfo ( 30 ) ; } catch ( org.json.JSONException e ) { e.printStackTrace () ; } } 
@ java.lang.Override public void remove ( int index ) { if ( ( index >= ( accommodated ) ) || ( index < 0 ) ) { throw new java.lang.IndexOutOfBoundsException () ; } for ( int i = index; i < ( accommodated ) ; i++ ) { array[i] = array[ ( i + 1 ) ]; } ( accommodated ) --; } 
@ com.google.inject.Provides public gov.ca.cwds.rest.api.domain.cms.SystemCodeCache provideSystemCodeCache ( gov.ca.cwds.data.cms.SystemCodeDao systemCodeDao, gov.ca.cwds.data.cms.SystemMetaDao systemMetaDao ) { final long secondsToRefreshCache = 60 * ( ( 15 * 24 ) * 60 ) ; gov.ca.cwds.rest.api.domain.cms.SystemCodeCache systemCodeCache = new gov.ca.cwds.rest.services.cms.CachingSystemCodeService ( systemCodeDao, systemMetaDao, secondsToRefreshCache, true ) ; systemCodeCache.register () ; return systemCodeCache; } 
public void setDelegate ( @android.support.annotation.Nullable com.nextfaze.poweradapters.PowerAdapter delegate ) { if ( ( mDelegate ) != delegate ) { int removeCount = ( ( mDelegate ) != null ) ? mDelegate.getItemCount () : 0; mDelegate = delegate; updateObservers () ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate.getItemCount () : 0; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0, removeCount ) ; } if ( insertCount > 0 ) { notifyItemRangeInserted ( 0, insertCount ) ; } } } 
@ org.greenrobot.eventbus.Subscribe @java.lang.Override public void onEvent ( id.co.veritrans.sdk.coreflow.eventbus.events.NetworkUnavailableEvent event ) { errorMessage = getString ( R.string.no_network_msg ) ; try { id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil.hideProgressDialog () ; id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil.showSnackbar ( this, ( ( errorMessage ) + "" ) ) ; } catch ( java.lang.NullPointerException ex ) { id.co.veritrans.sdk.coreflow.core.Logger.e ( ( "transaction error is " + ( errorMessage ) ) ) ; } } 
@ java.lang.Override public void setCurrentToggleState ( java.lang.String key ) { for ( int i = 0; ( states.size () ) > i; i++ ) { if ( states.get ( i ) .getKey () .equals ( key ) ) { currentStateIndex = i; return; } } throw new java.lang.IllegalArgumentException ( "No Toggle States match the key you have given" ) ; } 
@ java.lang.Override public boolean activate () { return ( ( ( ctx.inventory.select () .count () ) == 28 ) && ( chaosTower.contains ( ctx.players.local () ) ) ) || ( ( ( ctx.inventory.select () .count () ) == 0 ) && ( ! ( chaosTower.contains ( ctx.players.local () ) ) ) ) ; } 
public boolean gelijkAan ( nl.detoren.ijc.data.groepen.Speler speler ) { return ( ( this.getKNSBnummer () ) == ( speler.getKNSBnummer () ) ) && ( ( ( this.getNaam () .equals ( speler.getNaam () ) ) && ( this.getInitialen () .equals ( speler.getInitialen () ) ) ) && ( ( this.getGroep () ) == ( speler.getGroep () ) ) ) ; } 
public void makeSchedule () { symposium.DummyScheduler.DetermineDifficulty.setDifficulties () ; java.util.List<symposium.Panel> pnlCollection = symposium.ScheduleData.instance () .getFreePanels () ; while ( 0 < ( pnlCollection.size () ) ) { this.schedule ( pnlCollection.get ( 0 ) ) ; } setAssignedPanelsMessages () ; } 
private void setKi ( javax.swing.JCheckBox chkbx ) { optionsView.setKi ( chkbx ) ; playerIsKi = new boolean[this.player]; for ( int i = 0; ( this.optionsView.getKiBox () .length ) > i; i++ ) { this.playerIsKi[i] = this.optionsView.getKiBox () [i].isSelected () ; } } 
public static void close ( java.sql.Connection connection, java.sql.PreparedStatement statement ) { try { if ( ( statement.isClosed () ) && ( statement != null ) ) { statement.close () ; } br.com.devmedia.jdbc.connection.JDBCConnection.close ( connection ) ; } catch ( java.sql.SQLException e ) { throw new java.lang.RuntimeException ( e.getMessage () , e ) ; } } 
public static void main ( java.lang.String[] args ) { int n = 10; princeton.datastructures.deque.Deque<java.lang.Integer> deq = new princeton.datastructures.deque.Deque<java.lang.Integer> () ; for ( int i = 0; 2 > i; i++ ) { if ( ( i % 2 ) == 0 ) { deq.addFirst ( i ) ; } else { deq.addLast ( i ) ; } } for ( java.lang.Integer i : deq ) { java.lang.System.out.println ( i ) ; } } 
private void applyAndAnimateRemovals ( java.util.List<hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo> roomInfos ) { for ( int i = ( roomInfos.size () ) - 1; 0 <= i; i-- ) { final hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo roomInfo = roomInfoList.get ( i ) ; if ( ! ( roomInfos.contains ( roomInfo ) ) ) { removeItem ( i ) ; } } } 
@ java.lang.Override public void replaceAll ( java.util.List<T> elements ) { if ( ( elements.isEmpty () ) || ( elements == null ) ) { return; } if ( ( mData ) == null ) { mData = new java.util.ArrayList<> () ; } mData.clear () ; mData.addAll ( elements ) ; notifyDataSetChanged () ; } 
private void updateTables ( java.sql.Statement statement ) throws java.sql.SQLException { int version = getUserVersion ( statement ) ; if ( ( gui.Splash.DATABASE_VERSION ) > version ) { switch ( version ) { case 0: statement.executeUpdate ( "alter table volumes add column favorite_volume tinyint ( 1 ) not null default '0';" ) ; statement.executeUpdate ( java.lang.String.format ( "alter table volumes add column date_add_volume text not null default '%s';", utils.DateUtils.toString ( new java.util.Date () ) ) ) ; break; } setUserVersion ( statement, Splash.DATABASE_VERSION ) ; } } 
@ java.lang.Override public homework.hw3.DoubleStack clone () throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stackclone = new homework.hw3.DoubleStack () ; double m = stack.getLast () ; try { for ( int i = stack.indexOf ( m ) ; 0 <= i; i-- ) { stackclone.push ( stack.get ( i ) ) ; } } catch ( java.lang.Exception e ) { throw new java.lang.CloneNotSupportedException ( "Cloning unsuccessful." ) ; } return stackclone; } 
void factr () { int tmp = 1; for ( int i = 1; ( ( int ) ( ( double ) ( tail.data ) ) ) >= i; i++ ) { tmp *= i; } tail.data = ( ( double ) ( tmp ) ) ; } 
@ javax.annotation.Nonnull @java.lang.Override public eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler[] getInstalledEventHandlers ( net.minecraft.item.ItemStack self ) { java.util.List<eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler> handlers = java.util.Arrays.asList ( getUpgrades ( self ) ) ; if ( ( self.getTagCompound () .hasKey ( "plate" ) ) && ( self.hasTagCompound () ) ) { handlers.add ( eiteam.esteemedinnovation.armor.exosuit.UtilPlates.getPlate ( self.getTagCompound () .getString ( "plate" ) ) ) ; } return handlers.toArray ( new eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler[handlers.size () ] ) ; } 
@ java.lang.Override protected void onResume () { super.onResume () ; getSupportActionBar () .hide () ; if ( ( ! ( flagMenuSounds ) ) && ( ( ! ( flagMenuPictures ) ) && ( ! ( flagMenuRating ) ) ) ) onMainMenu () ; else { if ( flagMenuSounds ) onSoundMenu () ; if ( flagMenuPictures ) onCameraMenu () ; if ( flagMenuRating ) onRatingMenu () ; } } 
public com.SIMRacingApps.Data setVolume ( double percentage ) { synchronized ( m_clips ) { for ( int i = 0; ( m_clips.size () ) > i; i++ ) { m_clips.get ( i ) .setVolume ( ( percentage / 100.0 ) ) ; } } synchronized ( m_volume ) { m_volume = percentage; } return getVolume () ; } 
private boolean isSorted ( java.lang.Comparable[] c, int a, int b ) { for ( int i = a; b > i; i++ ) { if ( org.magicminds.one.util.Sorter.less ( c[i], c[ ( i + 1 ) ] ) ) { return false; } } return true; } 
public com.crossballbox.model.UserInfo saveUserInfo ( com.crossballbox.model.FamilyData familyData, com.crossballbox.model.UserHealthyState userHealthyState, com.crossballbox.model.UserAdditionalInfo userAdditionalInfo, java.lang.String imagePath, com.crossballbox.model.User user ) { int userId = user.getId () ; com.crossballbox.model.UserInfo userInfo = user.getUserInfo () ; if ( null == userInfo ) { userInfo = new com.crossballbox.model.UserInfo ( userId ) ; } userInfo.setFamilyData ( familyData ) ; userInfo.setUserHealthyState ( userHealthyState ) ; userInfo.setUserAdditionalInfo ( userAdditionalInfo ) ; userInfo.setUser ( user ) ; userInfo.setImagePath ( imagePath ) ; userInfoDAO.save ( userInfo ) ; return userInfo; } 
public static java.util.List paserLineEnd ( java.lang.String content ) { java.util.List<java.lang.Integer> lines = new java.util.ArrayList<java.lang.Integer> () ; int length = content.length () ; for ( int i = 0; length > i; i++ ) { if ( ( content.charAt ( i ) ) == '\n' ) { java.lang.System.out.println ( i ) ; lines.add ( i ) ; } } return lines; } 
@ java.lang.Override public synchronized void close ( org.apache.hadoop.mapreduce.TaskAttemptContext context ) throws java.io.IOException { try { this.officeWriter.finalizeWrite () ; } catch ( org.zuinnote.hadoop.office.format.mapreduce.OfficeWriterException e ) { org.zuinnote.hadoop.office.format.mapreduce.AbstractSpreadSheetDocumentRecordWriter.LOG.error ( e ) ; } finally { if ( null != ( this.currentReader ) ) { this.currentReader.close () ; } } } 
public void printMessage () { try { main.Peer.reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket.getInputStream () ) ) ; java.lang.String message = main.Peer.reader.readLine () ; java.lang.System.out.println ( ( ( id ) + "From: " ) ) ; java.lang.System.out.println ( message ) ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
public com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult validate ( final java.io.File file ) { final com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult validationResult = new com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult () ; com.fasterxml.jackson.databind.JsonNode spec; try { spec = readFileContent ( file ) ; } catch ( final java.lang.Exception e ) { validationResult.addMessage ( ( ( e.getMessage () ) + ( ( "Error while parsing file " + file ) + ": " ) ) ) ; validationResult.encounteredError () ; return validationResult; } readSwaggerSpec ( spec, validationResult ) ; validateSwagger ( spec, validationResult ) ; return validationResult; } 
private void onKeysDownloadFailed ( final java.util.List<java.lang.String> userIds ) { if ( userIds != null ) { synchronized ( mUserKeyDownloadsInProgress ) { java.util.Map<java.lang.String, java.lang.Integer> deviceTrackingStatuses = mCryptoStore.getDeviceTrackingStatuses () ; for ( java.lang.String userId : userIds ) { mUserKeyDownloadsInProgress.remove ( userId ) ; deviceTrackingStatuses.put ( userId, org.matrix.androidsdk.crypto.MXDeviceList.TRACKING_STATUS_PENDING_DOWNLOAD ) ; } mCryptoStore.saveDeviceTrackingStatuses () ; } } mIsDownloadingKeys = false; } 
public static void printIndexBoard () { java.lang.System.out.println () ; for ( int i = 0; 9 > i; i++ ) { if ( ( ( i % 3 ) == 0 ) && ( i != 0 ) ) { java.lang.System.out.println () ; java.lang.System.out.println ( "-------------" ) ; } java.lang.System.out.println ( ( " | " + ( i + 1 ) ) ) ; } java.lang.System.out.println () ; } 
@ java.lang.Override public void onError ( int response, java.lang.Exception e ) { if ( ( org.solovyev.android.checkout.ResponseCodes.ITEM_NOT_OWNED ) == response ) { inventory.load () .whenLoaded ( this ) ; } if ( ( listener () ) != null ) listener () .onConsumeFailed () ; } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super.onSaveInstanceState ( outState ) ; if ( null != ( songs ) ) { outState.putParcelableArrayList ( "songs", songs ) ; outState.putString ( "bandName", bandName ) ; outState.putInt ( "position", position ) ; } if ( ( ( mediaPlayer ) != null ) && ( mediaPlayer.isPlaying () ) ) { outState.putDouble ( "songPosition", timeElapsed ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { if ( null != savedInstanceState ) { workoutId = savedInstanceState.getLong ( hfad.com.workout.WorkoutDetailFragment.WORKOUT_ID ) ; } android.support.v4.app.FragmentTransaction ft = getChildFragmentManager () .beginTransaction () ; hfad.com.workout.StopwatchFragment stopwatchFragment = new hfad.com.workout.StopwatchFragment () ; ft.replace ( R.id.stopwatch_container, stopwatchFragment ) ; ft.addToBackStack ( null ) ; ft.setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_FADE ) ; ft.commit () ; return inflater.inflate ( R.layout.fragment_workout_detail, container, false ) ; } 
public void multiply ( solver.Polynomial p ) { solver.Term current = p.getFirst () ; if ( null == ( first ) ) { first = p.getFirst () ; ( size ) ++; } else { while ( current != null ) { this.multiply ( current ) ; current = current.getNext () ; } } } 
public void disableSessionChosing ( boolean value ) { sessionComboBox.setDisable ( value ) ; newSessionField.setDisable ( ( ( ! ( sessionComboBox.getValue () .equals ( com.cbapps.reversi.client.LoginLayout.ITEM_NEW_SESSION ) ) ) || ( ( sessionComboBox.getValue () ) == null ) ) ) ; } 
@ java.lang.Override public void onConnected ( android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest.setInterval ( 10000 ) ; mLocationRequest.setFastestInterval ( 10000 ) ; mLocationRequest.setPriority ( LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY ) ; if ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } LocationServices.FusedLocationApi.requestLocationUpdates ( mclientAPI, mLocationRequest, this ) ; } 
public static boolean isXml ( java.io.File file ) throws edu.brandeis.cs.nlp.mae.io.MaeIOException { try { java.util.Scanner scanner = new java.util.Scanner ( file ) ; while ( scanner.hasNext () ) { java.lang.String nextLine = scanner.nextLine () .trim () ; if ( 1 < ( nextLine.length () ) ) { return nextLine.startsWith ( "<?xml" ) ; } } } catch ( java.io.FileNotFoundException e ) { throw new edu.brandeis.cs.nlp.mae.io.MaeIOException ( "file not found", e ) ; } return false; } 
@ java.lang.Override public int colorMultiplier ( net.minecraft.block.state.IBlockState state, net.minecraft.world.IBlockAccess worldIn, net.minecraft.util.math.BlockPos pos, int tintIndex ) { int meta = state.getBlock () .getMetaFromState ( state ) ; zmaster587.libVulpes.api.material.Material mat = ( ( zmaster587.libVulpes.block.BlockOre ) ( state.getBlock () ) ) .ores[meta]; if ( null != mat ) return mat.getColor () ; return 16777215; } 
public boolean matches ( net.minecraft.world.World world, int x, int y, int z ) { net.minecraft.block.Block blockOf = world.getBlock ( x, y, z ) ; if ( ( ( targetMetadata ) == 0 ) && ( blockOf.equals ( targetBlock ) ) ) return true; if ( ( blockOf.equals ( targetBlock ) ) && ( ( targetMetadata ) == ( world.getBlockMetadata ( x, y, z ) ) ) ) return true; return false; } 
protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( null != ( findViewById ( R.id.track_container ) ) ) { mTwoPane = true; if ( savedInstanceState == null ) { getSupportFragmentManager () .beginTransaction () .replace ( R.id.track_container, new com.dkulon.spotifystreamer.Fragment.SearchTrackFragment () , "TrackFragment" ) .commit () ; } else { mTwoPane = false; } } } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { switch ( msg.what ) { case com.virtualightning.library.simple2develop.state.MainLoopCall.MSG_STATE_UPDATE: java.lang.Object[] objects = ( ( java.lang.Object[] ) ( msg.obj ) ) ; com.virtualightning.library.simple2develop.state.StateMediator mediator = ( ( com.virtualightning.library.simple2develop.state.StateMediator ) ( objects[0] ) ) ; if ( ( mediator.getSequenceId () ) == ( msg.arg1 ) ) mediator.updateObserver ( ( ( java.lang.Object[] ) ( objects[1] ) ) ) ; break; } } 
@ java.lang.Override public java.lang.String toString () { return "\n}" + ( ( ( ( ( ( "Plan{\n" + "relation=" ) + ( relation.getElement () .toString () ) ) + "\n, cost=" ) + ( cost ) ) + "\n, assignedProviders=" ) + ( assignedProviders ) ) ; } 
@ java.lang.Override public long getDateHeader ( java.lang.String name ) { java.lang.String v = getHeader ( name ) ; if ( null == v ) { return -1L; } for ( java.text.DateFormat df : dateFormats ) { try { java.util.Date date = df.parse ( v ) ; return date.getTime () ; } catch ( java.text.ParseException pe ) { } } throw new java.lang.IllegalArgumentException ( ( "Unhandled date format: " + v ) ) ; } 
public static com.izik.recipebook.Model instance ( android.content.res.Resources res, android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( " must implement OnFragmentInteractionListener" + ( context.toString () ) ) ) ; } com.izik.recipebook.Model.mContext = context; com.izik.recipebook.Model.resources = res; return com.izik.recipebook.Model.instance; } 
@ java.lang.Override public void onShowFavorites ( java.util.List<com.fireofandroid.bloggarden.StarredBlogDB.StarredBlog> favoriteBlogs ) { android.util.Log.d ( com.fireofandroid.bloggarden.favoriteblog.FavoritesActivity.TAG, ( ( favoriteBlogs.size () ) + "onShowFavorites->total favorite blogs: " ) ) ; if ( ( favoriteBlogs.size () ) == 0 ) { android.widget.Toast.makeText ( this, "无收藏文章", Toast.LENGTH_SHORT ) .show () ; return; } mFavoriteBlogs = favoriteBlogs; mFavoritesGV.setAdapter ( new com.fireofandroid.bloggarden.favoriteblog.FavoritesAdapter ( getApplicationContext () , favoriteBlogs ) ) ; } 
@ java.lang.Override public T get ( int i ) { if ( i >= ( size () ) ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode<T> current = firstNode; while ( i > 0 ) { current = current.getNext () ; i--; } return current.getObject () ; } 
@ java.lang.Override public void done ( List<com.angcyo.bmob.PasswordBmob> list, cn.bmob.v3.exception.BmobException e ) { List<java.lang.String> strings = new com.angcyo.bmob.ArrayList<> () ; if ( null == e ) { java.util.Collections.reverse ( list ) ; for ( com.angcyo.bmob.PasswordBmob bmob : list ) { strings.add ( bmob.getPassword () ) ; } } listener.onFind ( strings ) ; } 
public boolean removeOrder ( PurchasedItem item ) { if ( 0 < ( numItems ) ) { for ( int i = 0; i < ( numItems ) ; i++ ) { if ( ( items[i] ) == item ) { for ( int j = i + 1; j < ( numItems ) ; j++ ) { items[ ( j - 1 ) ] = items[j]; } ( numItems ) --; return true; } } } return false; } 
protected java.lang.String buildHealthCheckString ( java.lang.String path, java.lang.String host ) { if ( ( host == null ) || ( path == null ) ) { return ""; } if ( ( path.startsWith ( "GET" ) ) || ( path.startsWith ( "POST" ) ) ) { return path; } return ( ( ( "GET " + path ) + " HTTP/1.0\\r\\nHost: " ) + host ) + "\\r\\n\\r\\n"; } 
@ java.lang.Override void tableRowClicked ( int row, int col ) { o_removeLabel.setEnabled ( ( ( -1 ) != row ) ) ; o_dismissLabel.setEnabled ( ( ( ( -1 ) != row ) && ( o_item.getReminder ( row ) .isActive () ) ) ) ; o_linkReminderLabel.setEnabled ( ( ( ( -1 ) != row ) && ( o_item.getReminder ( row ) .isActive () ) ) ) ; } 
public final void setStartDate ( java.util.Date startDate ) { if ( ! ( this.startDate.equals ( startDate ) ) ) { if ( ( endDate.before ( startDate ) ) && ( ( startDate != null ) && ( ( endDate ) != null ) ) ) { throw new de.invation.code.toval.validate.ParameterException ( "The start date must be before the end date of the filter." ) ; } this.startDate = startDate; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter.setChanged () ; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter.notifyObservers () ; } } 
private boolean matchRange () { if ( ( ( src.charAt ( ( ( si ) + 2 ) ) ) != ']' ) && ( ( ( src.charAt ( ( ( si ) + 1 ) ) ) == '-' ) && ( ( ( si ) + 2 ) < ( sn ) ) ) ) { si += 3; return true; } else return false; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; android.util.Log.d ( "onCreate", "onCreate starting" ) ; if ( null != ( getArguments () ) ) { mParam1 = getArguments () .getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM1 ) ; mParam2 = getArguments () .getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM2 ) ; } android.util.Log.d ( "onCreate", "onCreate ended" ) ; mDatabase = com.google.firebase.database.FirebaseDatabase.getInstance () .getReference () .child ( "EventInfo" ) ; } 
public void switchState ( org.usfirst.frc.team2984.robot.subsystems.DriveTrain.State state ) { if ( ( this.driveState ) == state ) { return; } switch ( state ) { case VOLTAGE_CONTROL: this.configureTalonsVoltage () ; break; case SPEED_CONTROL: this.configureTalonsSpeed () ; break; case DISTANCE_CONTROL: this.configureTalonsDistance () ; } this.driveState = state; } 
private double calcMaxMana ( int level ) { if ( 10 > level ) { return 0; } double a = java.lang.Math.pow ( 1.01, ( level / 10 ) ) ; double b = 0.01 * ( ( java.lang.Math.pow ( 1.15, ( level - 10 ) ) ) - 1 ) ; return ( java.lang.Math.log ( ( a + b ) ) ) / ( java.lang.Math.log ( 1.0001 ) ) ; } 
@ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast.getText () ; if ( hasUnicodeChar ( literal ) ) { if ( ! ( ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal, com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) || ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal, com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) ) ) { log ( ast.getLineNo () , "forbid.escaped.unicode.char" ) ; } } } 
public void putDoubleArray ( final double[] data ) { int l = ( com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble ) * ( data.length ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory ( com.heerbann.unsafe.UnsafeBuffer.toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l; } 
public boolean equals ( java.lang.String metricName, java.lang.String queueName, int periodicity, int queueCapacity ) { return ( ( this.queueCapacity ) == queueCapacity ) && ( ( ( ( this.metricName ) == metricName ) && ( ( this.queueName ) == queueName ) ) && ( ( this.periodicity ) == periodicity ) ) ; } 
public void evaluate () throws java.io.IOException, java.sql.SQLException { java.util.List<edu.washington.multirframework.data.Extraction> modelExtractions = efc.getExtractions ( ( ( new java.io.File ( modelName ) .getName () ) + "_results_" ) , writeExtractions, verbose, verboseFile ) ; fillResult ( modelExtractions ) ; res.dumpResults () ; } 
private <Tab extends nz.ac.auckland.linsolve.Variable> boolean mergeLine ( java.util.List<nz.ac.auckland.alm.EmptySpace> line, nz.ac.auckland.alm.algebra.IDirection direction ) { while ( 1 < ( line.size () ) ) { nz.ac.auckland.alm.EmptySpace area1 = line.get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line.get ( 1 ) ; if ( ! ( merge ( area1, area2, direction ) ) ) return false; line.remove ( area2 ) ; } return true; } 
static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box[][] boxes, com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( boxes[w.start.across].length ) <= ( ( w.start.down ) + 1 ) ; } return ( ( w.start.across ) + 1 ) >= ( boxes.length ) ; } 
public java.util.List<com.example.agathe.tsgtest.dto.Contact> getPrivateContacts ( int numberOfContacts ) { java.util.List<com.example.agathe.tsgtest.dto.Contact> contacts = null; com.olab.smplibrary.SMPLibrary.GetPrivateContacts ( context, 10, new com.olab.smplibrary.DataResponseCallback () { @java.lang.Override public void OnResponse ( int response_code, java.lang.String data_response ) { android.util.Log.i ( "MainActivity:Response", ( response_code + "GetPrivateContacts response code " ) ) ; android.util.Log.i ( "MainActivity:Response", ( "GetPrivateContacts - " + data_response ) ) ; } } ) ; return contacts; } 
public void printGrid ( java.lang.String[][] gridDis ) { java.lang.System.out.println ( "----------" ) ; for ( java.lang.String[] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out.print ( ( " " + x ) ) ; } java.lang.System.out.println ( "" ) ; } java.lang.System.out.println ( "----------" ) ; } 
@ java.lang.Override public void migrate ( io.realm.DynamicRealm realm, long oldVersion, long newVersion ) { io.realm.RealmSchema schema = realm.getSchema () ; if ( 0 == oldVersion ) { schema.create ( "User" ) .removeField ( "energy" ) .removeField ( "maxEnergy" ) ; oldVersion++; } if ( oldVersion == 1 ) { } } 
com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( ( ! ( this.isLoose () ) ) && ( other.isLoose () ) ) || ( other == null ) ) { return this; } else { com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType.meet ( this, other ) ; if ( ( this.isLoose ) && ( ! ( result.isLoose () ) ) ) { result = result.withLoose () ; } return result; } } 
@ java.lang.Override protected void loadFileSystem ( final com.linxonline.mallet.io.filesystem.FileSystem _fileSystem ) { com.linxonline.mallet.util.logger.Logger.println ( "Finalising filesystem.", Logger.Verbosity.MINOR ) ; com.linxonline.mallet.io.filesystem.GlobalFileSystem.setFileSystem ( _fileSystem ) ; java.lang.System.out.println ( "Mapping Base directory." ) ; if ( false == ( com.linxonline.mallet.io.filesystem.GlobalFileSystem.mapDirectory ( "base/" ) ) ) { com.linxonline.mallet.util.logger.Logger.println ( "Failed to map base directory.", Logger.Verbosity.MINOR ) ; } } 
private void restoreCursor ( org.eclipse.swt.widgets.Control control ) { org.eclipse.swt.graphics.Cursor oldCursor = ( ( org.eclipse.swt.graphics.Cursor ) ( control.getData ( "pdetools-old-cursor" ) ) ) ; if ( ( oldCursor.isDisposed () ) && ( oldCursor != null ) ) { oldCursor = null; } control.setCursor ( oldCursor ) ; } 
@ java.lang.Override protected void onSelectionChanged ( int selStart, int selEnd ) { super.onSelectionChanged ( selStart, selEnd ) ; if ( null == ( state ) ) { return; } android.util.Log.v ( "before", java.lang.String.valueOf ( state.isUnderLineEnable () ) ) ; changeSpanStateBySelection ( selStart ) ; android.util.Log.v ( "after", java.lang.String.valueOf ( state.isUnderLineEnable () ) ) ; } 
public javafx.scene.control.Button toButton () { javafx.scene.control.Button button = new javafx.scene.control.Button ( this.label ) ; button.setGraphic ( ( null != ( this.graphic ) ? this.graphic.get () : null ) ) ; button.setUserData ( this ) ; return button; } 
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @org.votingsystem.web.currency.jaxrs.GET @org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId, @org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year, @javax.ws.rs.core.Context javax.servlet.ServletContext context, @javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest req, @javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse resp ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils.getCalendar ( year, 1, 1 ) ; org.votingsystem.model.User user = dao.find ( org.votingsystem.model.User.class, userId ) ; if ( null == user ) return javax.ws.rs.core.Response.status ( Response.Status.NOT_FOUND ) .entity ( ( "ERROR - User not found - userId: " + userId ) ) .build () ; return getUserBalancesDto ( req, resp, context, user, org.votingsystem.web.currency.jaxrs.DateUtils.getYearPeriod ( calendar ) ) ; } 
private java.lang.String firstSet ( java.lang.String expression ) { int end = 1 + ( expression.indexOf ( Constants.CLOSE_SQUARE_BRACKET ) ) ; if ( ( ( expression.length () ) - 1 ) > end ) { java.lang.String quantifier = java.lang.String.valueOf ( expression.charAt ( ( end + 1 ) ) ) ; if ( ! ( isQuantifier ( quantifier ) ) ) { end++; } } return expression.substring ( 0, end ) ; } 
@ java.lang.Override protected void resetGame () { super.resetGame () ; getDeck () .shuffle () ; m_board.setInitiation ( true ) ; for ( int i = 0; ( m_board.getMaxCardsX () ) > i; i++ ) { for ( int j = 0; j < ( i + 1 ) ; j++ ) { m_board.addCard ( m_deck.dealCard () , i ) ; } } m_board.setInitiation ( false ) ; stats.startTimer () ; } 
private int findRandomInstance () { int random_instance = ( ( int ) ( ( used.length ) * ( java.lang.Math.random () ) ) ) ; while ( used[random_instance] ) { random_instance++; if ( random_instance > ( used.length ) ) random_instance = 0; } used[random_instance] = true; return random_instance; } 
public int getIndexFromValue ( int[] list, int v ) { for ( int i = 0; ( list.length ) != i; i++ ) { if ( ( list[i] ) == v ) return i; } return 0; } 
public java.util.List<net.sf.marineapi.nmea.util.Measurement> getMeasurements () { int setCount = ( getFieldCount () ) / ( net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) ; java.util.ArrayList<net.sf.marineapi.nmea.util.Measurement> result = new java.util.ArrayList<net.sf.marineapi.nmea.util.Measurement> ( setCount ) ; for ( int i = 0; setCount >= i; i += net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) { net.sf.marineapi.nmea.util.Measurement value = fetchValues ( i ) ; if ( ! ( value.isEmpty () ) ) { result.add ( value ) ; } } return result; } 
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent, android.view.View v, int groupPosition, int childPosition, long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes.get ( groupPosition ) .getValue () .get ( childPosition ) .getKey () ; if ( ! ( kitchenSelected.equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected; if ( null != v ) { if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener.onKitchenChange ( mCurrentKitchen ) ; } } } return true; } 
public static ca.claytonrogers.Common.Deck getShuffledDeck () { ca.claytonrogers.Common.Deck deck = new ca.claytonrogers.Common.Deck () ; for ( int i = 1; 13 >= i; i++ ) { for ( int j = 0; j < 4; j++ ) { deck.push ( new ca.claytonrogers.Common.Card ( i, false, Card.Suit.values () [i] ) ) ; } } deck.shuffle ( Constants.random ) ; return deck; } 
public boolean hasOrders ( java.lang.String value ) { for ( int i = 0; ( fields.size () ) > i; i++ ) { java.lang.String option = ( ( java.lang.String ) ( orderFields.elementAt ( i ) ) ) ; if ( ( option.toLowerCase () .compareTo ( value.toLowerCase () ) ) == 0 ) return true; } return false; } 
public void signInEmail ( android.view.View v ) { setLoading ( true ) ; setEmail ( true ) ; if ( ( ( mPassword ) != null ) && ( ( mUsername ) != null ) ) { com.google.firebase.auth.FirebaseAuth.getInstance () .signInWithEmailAndPassword ( mUsername, mPassword ) .addOnFailureListener ( this ) .addOnCompleteListener ( this ) ; mDataListener.onLogin ( null ) ; } } 
@ java.lang.Override public void onBlur ( com.google.gwt.event.dom.client.BlurEvent event ) { if ( ( ! ( output.getText () .trim () .matches ( FieldType.ALPHANUMERIC.getRegex () ) ) ) || ( ( output.getText () .trim () .length () ) == 0 ) ) { groupOutput.setValidationState ( ValidationState.ERROR ) ; } else { groupOutput.setValidationState ( ValidationState.NONE ) ; } } 
boolean isWrongSequence ( htsjdk.samtools.SAMRecord record ) { return ( ( ( ( ! ( procesingUnmapped ) ) && ( ( shard.contig.referenceName ) != null ) ) && ( ! ( shard.contig.referenceName.isEmpty () ) ) ) && ( ! ( shard.contig.referenceName.equals ( record.getReferenceName () ) ) ) ) || ( ( procesingUnmapped ) && ( ! ( record.getReadUnmappedFlag () ) ) ) ; } 
@ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList list, java.lang.Object value, int index, boolean isSelected, boolean cellHasFocus ) { if ( null == value ) { setText ( "<Select a datasource>" ) ; } else { it.unibz.krdb.obda.model.OBDADataSource datasource = ( ( it.unibz.krdb.obda.model.OBDADataSource ) ( value ) ) ; java.lang.String datasourceUri = datasource.getSourceID () .toString () ; setText ( datasourceUri ) ; } return this; } 
@ java.lang.Override protected void doSearch ( jdepend.model.result.AnalysisResult result ) throws jdepend.framework.exception.JDependException { jdepend.util.analyzer.element.helper.ServiceOrVO sov; for ( jdepend.model.JavaClass javaClass : result.getClasses () ) { if ( javaClass.isInner () ) { continue; } sov = researchServiceOrVO ( javaClass ) ; this.printTable ( "类名", javaClass.getName () ) ; this.printTable ( "类型", ( ( sov.getIndex () ) + ( sov.getType () ) ) ) ; } } 
public void initializeRandom () { initControllers () ; for ( int row = 0; ( width ) > row; row++ ) { for ( int col = 0; col < ( height ) ; col++ ) { if ( ( random.nextDouble () ) < ( RANDOM_FILL_FACTOR ) ) { level[row][col] = getRandomCharFromLevelMapping () ; } else { level[row][col] = ' '; } } } } 
public java.lang.String getComputeResourceLoginUserName () { if ( ( isValid ( userComputeResourcePreference.getLoginUserName () ) ) && ( isUseUserCRPref () ) ) { return userStoragePreference.getLoginUserName () ; } else if ( isValid ( processModel.getProcessResourceSchedule () .getOverrideLoginUserName () ) ) { return processModel.getProcessResourceSchedule () .getOverrideLoginUserName () ; } else { return gatewayComputeResourcePreference.getLoginUserName () ; } } 
public static java.lang.Class getGenericType ( java.lang.Class clazz ) { java.lang.reflect.Type[] genericInterfaces = clazz.getGenericInterfaces () ; for ( java.lang.reflect.Type genericInterface : genericInterfaces ) { if ( genericInterface instanceof java.lang.reflect.ParameterizedType ) { java.lang.reflect.Type[] genericTypes = ( ( java.lang.reflect.ParameterizedType ) ( genericInterface ) ) .getActualTypeArguments () ; if ( 1 < ( genericTypes.length ) ) { return ( ( java.lang.Class ) ( genericTypes[0] ) ) ; } } } return null; } 
private java.lang.Object readArray ( com.cedarsoftware.util.io.JsonObject object ) throws java.io.IOException { final java.util.Collection array = new java.util.ArrayList () ; while ( true ) { skipWhitespace () ; final java.lang.Object o = readValue ( object ) ; if ( ( com.cedarsoftware.util.io.JsonParser.EMPTY_ARRAY ) != o ) { array.add ( o ) ; } final int c = skipWhitespaceRead () ; if ( c == ']' ) { break; } else if ( c != ',' ) { com.cedarsoftware.util.io.JsonParser.error ( "Expected ',' or ']' inside array" ) ; } } return array.toArray () ; } 
@ java.lang.Override public void onAuthStateChanged ( @android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { if ( null == ( firebaseAuth.getCurrentUser () ) ) { android.content.Intent loginIntent = new android.content.Intent ( this, com.mobapde.vince.mobapde.LoginActivity.class ) ; loginIntent.addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; finish () ; startActivity ( loginIntent ) ; } com.mobapde.vince.mobapde.FirebaseUtils.initialize () ; } 
public synchronized void close () throws java.io.IOException { edu.ncku.uscc.util.Log.warn ( ( ( serialPort.getName () ) + "Close " ) ) ; if ( ( serialPort ) != null ) { serialPort.removeEventListener () ; serialPort.close () ; } if ( ( input ) != null ) { input.close () ; input = null; } if ( ( edu.ncku.uscc.io.DehumidRoomController.output ) != null ) { edu.ncku.uscc.io.DehumidRoomController.output.close () ; edu.ncku.uscc.io.DehumidRoomController.output = null; } } 
@ org.apache.logging.log4j.core.config.plugins.PluginFactory public static io.cloudracer.LogMonitor createAppender ( @org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "name" ) java.lang.String name, @org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Layout" ) org.apache.logging.log4j.core.Layout<?> layout, @org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Filter" ) final org.apache.logging.log4j.core.Filter filter, @org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "otherAttribute" ) java.lang.String otherAttribute ) { if ( null == name ) { io.cloudracer.LOGGER.error ( "No name provided for TestLog4j2Appender" ) ; return null; } if ( layout == null ) { layout = org.apache.logging.log4j.core.layout.PatternLayout.createDefaultLayout () ; } io.cloudracer.LogMonitor.setLogMonitor ( new io.cloudracer.LogMonitor ( name, filter, layout, true ) ) ; return io.cloudracer.LogMonitor.getLogMonitor () ; } 
protected void useAbility ( hackbotcore.Unit target ) { assert null != ( selected ) ; assert ( selectedAbility ) != null; if ( selected.useAbility ( selectedAbility, target ) ) { for ( hackbotcore.Unit u : units ) if ( ( u.sectors.size () ) == 0 ) units.remove ( u ) ; } } 
private java.util.Collection<org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode> reusableSequence ( final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode segment ) { final com.google.common.base.Optional<org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode<?, ?>> maybeAsSequence = org.opendaylight.yangtools.yang.data.api.schema.NormalizedNodes.findNode ( segment, asPathChoice, asPathList, asPathSequence ) ; if ( maybeAsSequence.isPresent () ) { final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode asList = ( ( org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode ) ( maybeAsSequence.get () ) ) ; if ( 255 > ( asList.getSize () ) ) { return asList.getValue () ; } } return null; } 
public static void close () throws java.io.IOException { for ( model.User u : services.UserDatabaseInterface.userData ) { java.lang.System.out.println ( u.getFname () ) ; } java.io.FileWriter in = new java.io.FileWriter ( new java.io.File ( "./src/main/resources/users.csv" ) , false ) ; for ( model.User _user : services.UserDatabaseInterface.userData ) { java.lang.String userInfo = "\n" + ( _user.toString () ) ; in.append ( userInfo ) ; } in.close () ; } 
public void setIdCardInDB ( int idCardInDB ) { DataBase.DBData.connect = DB.getConnection () ; try { statement = DataBase.DBData.connect.createStatement () ; statement.executeUpdate ( ( " where id=1" + ( "update listcollection.display_of_collection set lastCard= " + idCardInDB ) ) ) ; statement.close () ; closeResultSet () ; DB.closeDBConnection () ; } catch ( java.sql.SQLException e ) { e.printStackTrace () ; } } 
public void updateIgnore () { filteredBacklog.clear () ; for ( com.iskrembilen.quasseldroid.protocol.state.IrcMessage msg : backlog ) { msg.setFiltered ( com.iskrembilen.quasseldroid.protocol.state.Client.getInstance () .getIgnoreListManager () .matches ( msg ) ) ; if ( ! ( isMessageFiltered ( msg ) ) ) { if ( ( msg.messageId ) == ( getMarkerLineMessage () ) ) isMarkerLineFiltered = false; filteredBacklog.add ( msg ) ; } else if ( ( msg.messageId ) == ( getMarkerLineMessage () ) ) isMarkerLineFiltered = true; } } 
boolean isAppActive ( org.luwrain.core.Application app ) { org.luwrain.core.NullCheck.notNull ( app, "app" ) ; if ( ( ( activeAppIndex ) < 0 ) && ( app == ( defaultApp ) ) ) return true; if ( ( apps.get ( activeAppIndex ) .app ) == app ) return true; return false; } 
@ java.lang.Override public boolean isAssignableBy ( com.github.javaparser.symbolsolver.model.typesystem.Type other ) { if ( other.isArray () ) { if ( ( other.asArrayType () .getComponentType () .isPrimitive () ) && ( baseType.isPrimitive () ) ) { return baseType.equals ( other.asArrayType () .getComponentType () ) ; } return baseType.isAssignableBy ( other.asArrayType () .getComponentType () ) ; } else { if ( other.isNull () ) { return true; } return false; } } 
public boolean addNetworkUser ( java.lang.String username, java.net.InetAddress IP ) { if ( ( username == ( own_user_name ) ) || ( user_ledger.containsKey ( username ) ) ) { return false; } user_ledger.put ( username, IP ) ; filemanager.addUser ( username ) ; gui.addUser ( username ) ; showState () ; return true; } 
public boolean hasFullAccess ( org.spongepowered.api.entity.living.player.User user ) { me.ryanhamshire.griefprevention.PlayerData playerData = GriefPrevention.instance.dataStore.getPlayerData ( this.world, user.getUniqueId () ) ; if ( ( playerData.ignoreClaims ) && ( playerData != null ) ) { return true; } if ( playerData.debugClaimPermissions ) { return false; } if ( user.getUniqueId () .equals ( this.ownerID ) ) { return true; } if ( ( this.parent ) != null ) { return this.parent.hasFullAccess ( user ) ; } return false; } 
public void donateToWin () throws k2so.GameActionException { float bullets = k2so.DefaultRobot.rc.getTeamBullets () ; int victoryPts = k2so.DefaultRobot.rc.getTeamVictoryPoints () ; int potentialPts = ( GameConstants.BULLET_EXCHANGE_RATE ) * ( ( int ) ( bullets ) ) ; if ( ( ( GameConstants.VICTORY_POINTS_TO_WIN ) - victoryPts ) <= potentialPts ) { k2so.DefaultRobot.rc.donate ( bullets ) ; } } 
private void processMonitoringAfterEvent ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint, final java.lang.Object returnValue, final java.nio.ByteBuffer buffer ) { final java.lang.String className = getJoinPointClassName ( currentJoinPoint ) ; final java.lang.Object[] classArgs = getJoinPointArguments ( currentJoinPoint ) ; final java.lang.String stringClassArgs = convertJoinpointArgsToString ( classArgs ) ; java.lang.String formattedReturnValue = extractJoinPointReturnValue ( className, returnValue ) ; if ( null == formattedReturnValue ) { formattedReturnValue = ""; } buffer.putInt ( explorviz.live_trace_processing.main.MonitoringStringRegistry.getIdForString ( formattedReturnValue ) ) ; } 
@ java.lang.Override public boolean createConnection () throws java.lang.ClassNotFoundException, java.sql.SQLException { com.hida.model.DefaultSetting defaultEntity = DefaultSettingDao.getDefaultSetting () ; if ( null == defaultEntity ) { defaultEntity = new com.hida.model.DefaultSetting ( "", "", com.hida.model.TokenType.DIGIT, "ddddd", 5, true, true, true ) ; DefaultSettingDao.save ( defaultEntity ) ; } CurrentSetting = defaultEntity; return true; } 
@ java.lang.Override public void onClick ( com.eemc.aida.DialogInterface p1, int p2 ) { setCardView ( 0 ) ; symad.showing.clear () ; for ( int i = 0; ( symnum ) > i; i++ ) { if ( syms.get ( i ) .demangledname.contains ( kw.getText () .toString () ) ) { symad.showing.add ( i ) ; } } symad.notifyDataSetChanged () ; } 
public static void main ( java.lang.String[] args ) { boolean success = false; try { new com.android.commands.sm.Sm () .run ( args ) ; success = true; } catch ( java.lang.Exception e ) { if ( e instanceof java.lang.IllegalArgumentException ) { com.android.commands.sm.Sm.showUsage () ; } android.util.Log.e ( com.android.commands.sm.Sm.TAG, "Error", e ) ; java.lang.System.err.println ( ( e + "Error: " ) ) ; } java.lang.System.exit ( ( success ? 0 : 1 ) ) ; } 
public void add ( T newElement ) { heap.add ( newElement ) ; int index = ( heap.size () ) - 1; while ( ( ( heap.get ( getParent ( index ) ) .compareTo ( newElement ) ) > 0 ) && ( index > 1 ) ) { heap.set ( index, heap.get ( getParent ( index ) ) ) ; index = getParent ( index ) ; heap.set ( index, newElement ) ; } } 
void stop () { reconnectFuture.cancel ( false ) ; if ( null != ( localDevice ) ) { localDevice.terminate () ; localDevice = null; node.removeChild ( bacnet.BacnetConn.ACTION_STOP ) ; node.removeChild ( bacnet.BacnetConn.ACTION_DISCOVER_DEVICES ) ; node.removeChild ( bacnet.BacnetConn.ACTION_ADD_DEVICE ) ; statnode.setValue ( new org.dsa.iot.dslink.node.value.Value ( bacnet.BacnetConn.NODE_STATUS_STOPPED ) ) ; } } 
@ java.lang.Override public void onBindViewHolder ( final org.cnx.android.adapters.LandingListRecyclerViewAdapter.ViewHolder holder, int position ) { org.cnx.android.beans.Content book = contentList.get ( position ) ; holder.bookTitle.setText ( book.getBookTitle () ) ; if ( ( ( book.getIcon () ) != null ) && ( ( holder.logo ) != null ) ) { holder.logo.setImageResource ( org.cnx.android.utils.CNXUtil.getCoverId ( book.getIcon () , context ) ) ; } } 
@ java.lang.Override public void step ( neutrality.NeutralityModel model, int step, java.util.Optional<java.lang.Double> substep ) { if ( 0 == step ) super.step ( model, step, substep ) ; neutrality.MarketInfo mi = getModel () .getMarketInformation ( ( step - 1 ) ) ; double mktNetInvest = mi.nspNetworkInvestment; makeNetworkInvestment ( step, mktNetInvest ) ; if ( getModel () .policyNSPContentAllowed ) { double mktVidInvest = mi.nspVideoInvestment; makeContentInvestment ( step, mktVidInvest ) ; } else { makeContentInvestment ( step, 0 ) ; } } 
@ java.lang.Override public void back () { if ( 0 == ( mPosition ) ) mPosition = ( jsData.length () ) - 1; else ( mPosition ) --; controller.setEndTime ( 0 ) ; player.stop () ; player.reset () ; if ( controller.isShowing () ) controller.hide () ; } 
public void setLocation ( float x, float y, int z ) { if ( ( -1 ) == ( index ) ) { return; } org.lwjgl.openal.AL10.alSource3f ( store.getSource ( index ) , AL10.AL_POSITION, x, y, z ) ; } 
@ org.junit.Before public void init () throws java.io.IOException, java.lang.InterruptedException, java.sql.SQLException { if ( ! ( org.maxgamer.rs.TitanTest.initialized ) ) { org.maxgamer.rs.TitanTest.initialized = true; org.maxgamer.rs.core.Core.start () ; while ( 0 >= ( org.maxgamer.rs.core.Core.getServer () .getTicks () ) ) { java.lang.Thread.sleep ( 10 ) ; } } } 
public void displayLendDetails ( org.bbt.kiakoa.model.Lend lend ) { if ( null != ( lendDetailsFragment ) ) { lendDetailsFragment.setLend ( lend ) ; } else { android.content.Intent intent = new android.content.Intent ( this, org.bbt.kiakoa.LendDetailsActivity.class ) ; intent.putExtra ( LendDetailsActivity.EXTRA_LEND, lend ) ; startActivity ( intent ) ; } } 
private int calculateCC ( ast.graph.Graph graph ) { int offset; offset = graph.getFinalNodes () .size () ; offset = ( 1 == offset ) ? offset - 1 : offset - 2; return ( ( graph.edgeCount () ) - ( ( graph.size () ) - offset ) ) + 2; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int x = jDialog.getX () ; x = 10 + x; if ( x > ( xStart ) ) { x = xStart; fadeOut.stop () ; jDialog.setVisible ( false ) ; } jDialog.setLocation ( x, y ) ; } 
public void botJailTurn () { if ( 50 <= ( getCash () ) ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0; _inJail = false; charge ( 50 ) ; } else _jailTurns += 1; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; if ( ( getCash () ) < 50 ) return; else { charge ( 50 ) ; return; } } else _jailTurns += 1; } } 
public boolean isCurrentLocationValid () { for ( org.lwjgl.util.Point point : currentPiece.getPoints () ) { if ( ( ( point.getY () ) < 0 ) || ( ( ( ( point.getX () ) > ( board[0].length ) ) || ( ( point.getY () ) > ( board.length ) ) ) || ( ( point.getX () ) < 0 ) ) ) return false; } } 
@ java.lang.Override @javax.jws.WebMethod public java.util.List<com.softserve.tc.diary.entity.Record> getAllPublicRecordsByNickName ( java.lang.String nickName ) { com.softserve.tc.diary.entity.User user = userDAO.readByNickName ( nickName ) ; java.util.List<com.softserve.tc.diary.entity.Record> list = recordDAO.getRecordByUserId ( user.getUuid () ) ; java.util.Collections.sort ( list, new java.util.Comparator<com.softserve.tc.diary.entity.Record> () { @java.lang.Override public int compare ( com.softserve.tc.diary.entity.Record o1, com.softserve.tc.diary.entity.Record o2 ) { return ( o1.getCreatedTime () .getTime () ) < ( o2.getCreatedTime () .getTime () ) ? 1 : -1; } } ) ; return list; } 
public void insertText ( java.lang.String txt, com.ibm.util.merge.Bookmark bkm ) { if ( txt.matches ( "^\\s*$" ) ) { return; } this.content.insert ( bkm.getStart () , txt ) ; for ( com.ibm.util.merge.Bookmark theBookmark : this.bookmarks ) { if ( ( bkm.getStart () ) <= ( theBookmark.getStart () ) ) { theBookmark.offest ( txt.length () ) ; } } return; } 
@ java.lang.Override public void setPrimaryItem ( android.view.ViewGroup container, int position, java.lang.Object object ) { super.setPrimaryItem ( container, position, object ) ; if ( ( object instanceof me.ccrama.redditslide.Fragments.CommentPage ) && ( ( ( getCurrentFragment () ) != object ) && ( object != null ) ) ) { mCurrentFragment = ( ( me.ccrama.redditslide.Fragments.CommentPage ) ( object ) ) ; if ( ! ( mCurrentFragment.loaded ) ) { if ( mCurrentFragment.isAdded () ) { mCurrentFragment.doAdapter () ; } } } } 
public void preencheVagas () { boolean[] vagas = setor.vagas_Disponiveis () ; int progress = 0; for ( int i = 0; 16 > i; i++ ) { ++progress; if ( vagas[i] ) { paineis[i].setBackground ( java.awt.Color.green ) ; } else paineis[i].setBackground ( java.awt.Color.red ) ; } progress = ( progress * 100 ) / 16; progressBar.setValue ( progress ) ; } 
public void getTextFromActivity ( android.view.View view ) { java.lang.String textInString = null; if ( null != ( editTextInput ) ) { textInString = editTextInput.getText () .toString () ; } if ( ( textInString == null ) || ( textInString.isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this, com.mmdj.textanalyzer.Result_Activity.class ) ; intent.putExtra ( "textInString", textInString ) ; startActivity ( intent ) ; } 
@ org.junit.Test public void testUpdate () { gui.TimePanel tp = new gui.TimePanel ( new gui.GUI () , new game.Game () , 15, new javax.swing.JLabel () ) ; try { java.lang.Thread.sleep ( 500 ) ; } catch ( java.lang.InterruptedException e ) { e.printStackTrace () ; } org.junit.Assert.assertEquals ( ( "</b> </html>" + ( ( ( "<html> <b>" + 0 ) + ":" ) + 14 ) ) , tp.getTimerLabel () .getText () ) ; tp.stopTimer () ; } 
private void importFile ( java.lang.String fileName ) throws java.io.IOException { java.io.File f = new java.io.File ( ( fileName + ( ( application.Controller.currentProgramFolder ) + "/" ) ) ) ; fileSelecMap.put ( fileName, parseFile ( f ) ) ; if ( ! ( fileSelecMap.containsKey ( fileName ) ) ) { fileNameLists.add ( fileName ) ; fileList.setItems ( javafx.collections.FXCollections.observableArrayList ( fileNameLists ) ) ; } } 
public void startNameActivity ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this, io.exis.cards.cards.NameActivity.class ) ; intent.putExtra ( "screenName", screenName ) ; if ( 21 <= ( android.os.Build.VERSION.SDK_INT ) ) { startActivityForResult ( intent, 1, android.app.ActivityOptions.makeSceneTransitionAnimation ( this ) .toBundle () ) ; overridePendingTransition ( R.anim.slide_in_right, R.anim.slide_out_left ) ; } else { startActivityForResult ( intent, 1 ) ; } } 
public void run ( int sleepTime ) { while ( ( ! ( com.laboon.SystemSettings.checkForStop () ) ) && ( ! ( _programComplete ) ) ) { if ( sleepTime > 0 ) { try { java.lang.Thread.sleep ( sleepTime ) ; } catch ( java.lang.InterruptedException iex ) { } } resetUpdates () ; executeOneStep () ; _mp.highlightChar ( _pa, _x, _y ) ; _mp.setStack ( _ps.toString () ) ; _mp.refresh ( _updateTa, _updateStack, _updateOutput ) ; } } 
private java.lang.String[] removeEmptyEntries ( java.lang.String[] queryParts ) { int emptyCount = 0; for ( java.lang.String queryPart : queryParts ) { if ( 0 == ( queryPart.length () ) ) emptyCount++; } java.lang.String[] trimmedArray = new java.lang.String[ ( queryParts.length ) - emptyCount]; int trimIndex = 0; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart.length () ) != 0 ) { trimmedArray[trimIndex] = queryPart; trimIndex++; } } return trimmedArray; } 
public void showDatabase () { if ( ( com.example.brandon.habitlogger.Preferences.PreferenceChecker.AS_CARDS ) != ( preferenceChecker.howToDisplayCategories () ) ) { habitList = habitDatabase.getHabits () ; habitAdapter = new com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewAdapter ( habitList, menuItemClickListener, buttonClickListener ) ; if ( ( habitDisplayMode ) == ( ONLY_ARCHIVED_HABITS ) ) com.example.brandon.habitlogger.common.MyCollectionUtils.filter ( habitList, Habit.FilterOutNonArchivedHabits ) ; else if ( ( habitDisplayMode ) == ( NO_ARCHIVED_HABITS ) ) com.example.brandon.habitlogger.common.MyCollectionUtils.filter ( habitList, Habit.FilterOutArchivedHabits ) ; java.util.Collections.sort ( habitList, Habit.CategoryNameComparator ) ; habitCardContainer.setAdapter ( habitAdapter ) ; } } 
private void setNoBudgetsIndication () { findViewById ( R.id.loading_spinner ) .setVisibility ( View.GONE ) ; if ( 0 < ( this.mapOfBudgets.size () ) ) { findViewById ( R.id.explaining_text ) .setVisibility ( View.GONE ) ; } else { findViewById ( R.id.crying_logo ) .setVisibility ( View.VISIBLE ) ; ( ( android.widget.TextView ) ( findViewById ( R.id.explaining_text ) ) ) .setText ( getResources () .getString ( R.string.no_budgets_message ) ) ; } } 
public static boolean isPrefix ( java.lang.String name ) { return ( ( name.charAt ( 0 ) ) == '\\' ) || ( ( ( ( name.isEmpty () ) || ( ( name.charAt ( 0 ) ) == '_' ) ) || ( java.lang.Character.isLetter ( name.charAt ( 0 ) ) ) ) || ( ( name.charAt ( 0 ) ) == '?' ) ) ; } 
public static void changeCurrentPreference ( int pref_index, int value ) { if ( null == ( com.Veiled.Utils.PreferencesManipulation.userPrefs ) ) { com.Veiled.Utils.PreferencesManipulation.userPrefs = new int[] { 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }; } com.Veiled.Utils.PreferencesManipulation.userPrefs[pref_index] = value; } 
public void itemStateChanged ( java.awt.event.ItemEvent arg0 ) { if ( ( chkEnOHiHatB.isSelected () ) || ( chkEnOHiHatA.isSelected () ) ) { if ( ! ( cBoxPortOHiHat.isEnabled () ) ) cBoxPortOHiHat.setEnabled ( true ) ; } else { cBoxPortOHiHat.removeAll () ; cBoxPortOHiHat.addItem ( "" ) ; cBoxPortOHiHat.setEnabled ( false ) ; } updateSerialPorts ( 3 ) ; } 
public boolean fits ( guitarchordmaker.Accord owning ) { return ( ( ! ( this.six ) ) && ( ( this.row ) <= ( owning.seitenzahle ) ) ) || ( ( ( ( this.id ) == ( Accord.Coms.drawLines12 ) ) || ( ( this.id ) == ( Accord.Coms.drawLines6 ) ) ) || ( ( this.six ) && ( ( this.row ) < ( ( owning.seitenzahle ) - 1 ) ) ) ) ; } 
public void onClickShowHideFilters ( android.view.View view ) { android.widget.LinearLayout button_filter = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.filters_container ) ) ) ; if ( ( android.view.View.GONE ) == ( button_filter.getVisibility () ) ) button_filter.setVisibility ( View.VISIBLE ) ; else { button_filter.setVisibility ( View.GONE ) ; android.widget.EditText editText_brand = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_brand ) ) ) ; editText_brand.clearFocus () ; android.widget.EditText editText_client_code = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_client_code ) ) ) ; editText_client_code.clearFocus () ; } } 
private void removeWeakSpecies () { int sum = totalAverageFitness () ; for ( int s = 1; ( getSpecies () .size () ) > s; s++ ) { com.starflask.JavaNESBrain.evolution.Species specie = getSpecies () .get ( s ) ; float breed = com.starflask.JavaNESBrain.utils.FastMath.floor ( ( ( ( specie.averageFitness ) / sum ) * ( Population ) ) ) ; if ( breed < 1 ) { species.remove ( specie ) ; } } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { if ( 0 != position ) { searchView.setText ( hotWords.get ( position ) , true ) ; removeCover () ; layoutSearch.performClick () ; } else { searchView.setText ( "" ) ; } } 
public void openImageSelector ( android.view.View view ) { android.content.Intent intent; android.util.Log.e ( pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.LOG_TAG, "While is set and the ifs are worked through." ) ; if ( 19 > ( Build.VERSION.SDK_INT ) ) { intent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; } else { intent = new android.content.Intent ( android.content.Intent.ACTION_OPEN_DOCUMENT ) ; intent.addCategory ( Intent.CATEGORY_OPENABLE ) ; } android.util.Log.e ( pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.LOG_TAG, "Check write to external permissions" ) ; intent.setType ( "image/*" ) ; startActivityForResult ( android.content.Intent.createChooser ( intent, "Select Picture" ) , pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.PICK_IMAGE_REQUEST ) ; } 
@ java.lang.Override public java.lang.String getText ( mage.abilities.Mode mode ) { if ( ( ! ( staticText.isEmpty () ) ) && ( ( staticText ) != null ) ) { return staticText; } if ( ( targetName.length () ) > 0 ) { return ( targetName ) + " doesn't untap during its controller's next untap step"; } else { return ( "Target " + ( mode.getTargets () .get ( 0 ) .getTargetName () ) ) + " doesn't untap during its controller's next untap step"; } } 
@ java.lang.Override public synchronized void run () { rootDir = new java.io.File ( t2_01_zadaca_3.T2_01_zadaca_3.rootDirectory ) ; while ( running ) { active = true; active = false; try { java.lang.Thread.sleep ( ( 1000 * ( secondsNum ) ) ) ; } catch ( java.lang.InterruptedException ex ) { java.lang.Thread.currentThread () .interrupt () ; } } } 
private void updateGraph ( int phase, java.time.LocalDateTime phasetime ) { ( this.phaseCounter ) ++; int min = phasetime.getMinute () ; int sec = phasetime.getSecond () ; double timer = ( sec / 60.0 ) + min; this.phases[ ( phase - 1 ) ].getData () .add ( new javafx.scene.chart.XYChart.Data<> ( ( ( double ) ( this.phaseCounter ) ) , timer ) ) ; } 
public int flip ( java.lang.String imageId, boolean horizontal ) { com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe4b.edivator.backend.service.Image resizeImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeImageFromBlob ( key ) ; com.gruppe4b.edivator.backend.service.Transform transform; if ( true == horizontal ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeHorizontalFlip () ; } else if ( horizontal == false ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory.makeVerticalFlip () ; } com.gruppe4b.edivator.backend.service.Image flippedImage = imagesService.applyTransform ( transform, flippingImage ) ; int newId = 0; return newId; } 
public static void generateDataForCourse ( java.lang.String courseName ) { long numOfInstr = java.lang.Math.round ( ( ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) + ( teammates.client.scripts.DataGenerator.random.nextInt ( ( ( ( teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES ) - ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) + 1 ) ) ) ) ) ; for ( int j = 0; j < numOfInstr; j++ ) { java.lang.String instrName = ( ( "Instr" + j ) + "_of_" ) + courseName; teammates.client.scripts.DataGenerator.instructors.put ( instrName, courseName ) ; } teammates.client.scripts.DataGenerator.generateStudentsDataForCourse ( courseName ) ; } 
public void removeUserSession ( java.lang.String sUserId, java.lang.String sSession ) { for ( int i = 0; ( nl.ru.crpstudio.CrpUtil.userCache.size () ) > i; i++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache.get ( i ) ; if ( ( oThis.userId.equals ( sUserId ) ) && ( oThis.sessionId.equals ( sSession ) ) ) { oThis.userOkay = false; oThis.sessionId = ""; return; } } } 
@ com.facebook.react.bridge.ReactMethod public void getFocalLength ( com.facebook.react.bridge.ReadableMap options, final com.facebook.react.bridge.Promise promise ) { android.hardware.Camera camera = com.lwansbrough.RCTCamera.RCTCamera.getInstance () .acquireCameraInstance ( options.getInt ( "type" ) ) ; if ( camera == null ) { promise.reject ( "No camera found." ) ; return; } promise.resolve ( com.lwansbrough.RCTCamera.RCTCamera.getInstance () .focusCenter ( options.getInt ( "type" ) ) ) ; } 
private boolean matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction, boolean add ) { return ( matches ( add, transaction.getTypeID () , transaction.getCharacterID () , null, null, transaction.getLocation () , null, null, null, transaction, null ) ) && ( transaction != null ) ; } 
@ java.lang.Override public void setValue ( java.lang.String key, java.lang.String value ) { com.google.common.base.Preconditions.checkNotNull ( nodeName, "Node name cannot be null." ) ; co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue tokenValue = tokenValueMap.get ( key ) ; if ( null == tokenValue ) { tokenValue = new co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue () ; } tokenValue.putValue ( nodeName, value ) ; tokenValueMap.put ( key, tokenValue ) ; } 
private static org.stepik.api.objects.StudyObject getLessonStudyObject ( long lessonId, long unitId ) { org.stepik.api.objects.lessons.CompoundUnitLesson unitLesson = org.stepik.plugin.utils.Utils.getCompoundUnitLessonStudyObject ( lessonId, unitId ) ; org.stepik.api.objects.units.Unit unit = unitLesson.getUnit () ; if ( 0 != ( unit.getId () ) ) { org.stepik.api.client.StepikApiClient stepikApiClient = org.stepik.core.stepik.StepikAuthManager.authAndGetStepikApiClient () ; org.stepik.api.objects.sections.Section section = org.stepik.plugin.utils.Utils.getSectionStudyObject ( unit.getSection () , stepikApiClient ) ; if ( section != null ) { return org.stepik.plugin.utils.Utils.getCourseStudyObject ( section.getCourse () ) ; } } return unitLesson; } 
private static java.util.List<java.lang.Integer> generate ( int n ) { java.util.List<java.lang.Integer> factors = new java.util.ArrayList<> () ; if ( 1 == n ) { return factors; } for ( int i = 2; i <= ( n / 2 ) ; i++ ) { if ( ( n % i ) == 0 ) { factors.add ( i ) ; } } if ( factors.isEmpty () ) { factors.add ( n ) ; } return factors; } 
private boolean isKeyWords ( char ch ) { if ( ( ch == '?' ) || ( ( ch == '<' ) || ( ch == '>' ) ) ) { return true; } else if ( ch == '=' ) { return ( ( peekChar () ) == '"' ) || ( ( peekChar () ) == '\'' ) ; } else if ( ch == '/' ) { return ( peekChar () ) == '>'; } else { return false; } } 
public boolean setInteractorHovered ( org.reactome.web.diagram.data.interactors.model.DiagramInteractor hovered ) { if ( null != ( mouseDown ) ) return false; if ( hovered == null ) { hoveredInteractor = null; } else if ( hovered instanceof org.reactome.web.diagram.data.interactors.model.InteractorEntity ) { hoveredInteractor = ( ( org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ( hovered ) ) ; } return true; } 
java.lang.Long performOperations ( Tree<java.lang.Integer> tree, OperationType operation ) { if ( null == operation ) { performMixedOperations ( tree ) ; } else if ( operation.equals ( OperationType.INSERT ) ) { return performInserts ( tree ) ; } else if ( operation.equals ( OperationType.SEARCH ) ) { return performSearches ( tree ) ; } else if ( operation.equals ( OperationType.DELETE ) ) { return performDeletes ( tree ) ; } java.lang.System.out.println ( "An error occurred." ) ; return 0L; } 
@ java.lang.Override public void onError ( java.lang.Throwable throwable ) { com.orhanobut.logger.Logger.e ( ( throwable + "There was a problem loading bus on line " ) ) ; throwable.printStackTrace () ; vista.showLoading ( false ) ; if ( throwable instanceof com.lowwor.realtimebus.domain.NetworkInteractor.NetworkUnavailableException ) { vista.showOffline ( true ) ; } else if ( throwable instanceof com.lowwor.realtimebus.domain.NoBusException ) { vista.showOffline ( false ) ; vista.showError ( com.lowwor.realtimebus.ui.track.ERROR_NO_BUS ) ; } else { vista.showOffline ( false ) ; } } 
public void remove ( T po ) { com.easy.player.database.SQLiteHelperOrm db = new com.easy.player.database.SQLiteHelperOrm () ; com.j256.ormlite.dao.Dao dao = null; try { dao = db.getDao ( po.getClass () ) ; dao.delete ( po ) ; } catch ( java.sql.SQLException e ) { e.printStackTrace () ; } finally { if ( null != dao ) { db.close () ; dao = null; } } } 
@ java.lang.Override public boolean onError ( io.vov.vitamio.MediaPlayer mp, int what, int extra ) { android.util.Log.e ( com.xugaoxiang.live_vtm.activity.MainActivity.TAG, ( extra + ( ( ( "播放出错！" + "what:" ) + what ) + ",extra:" ) ) ) ; android.widget.Toast.makeText ( this, ( ( ( "播放出错！what:" + what ) + ",extra:" ) + extra ) , Toast.LENGTH_LONG ) .show () ; finish () ; return false; } 
public void processPages ( long recordsToReadInThisPass ) throws java.io.IOException { reset () ; if ( 0 < recordsToReadInThisPass ) { do { determineSize ( recordsToReadInThisPass, 0 ) ; } while ( ( ( valuesReadInCurrentPass ) < recordsToReadInThisPass ) && ( pageReader.hasPage () ) ) ; } org.apache.drill.exec.store.parquet.columnreaders.ColumnReader.logger.trace ( "Column Reader: {} - Values read in this pass: {} - ", this.getColumnDescriptor () .toString () , valuesReadInCurrentPass ) ; valueVec.getMutator () .setValueCount ( valuesReadInCurrentPass ) ; } 
public org.structr.core.GraphObject getEntity () throws org.structr.common.error.FrameworkException { final org.structr.core.GraphObject entity = idResource.getEntity () ; if ( null != entity ) { java.lang.String type = org.structr.schema.SchemaHelper.normalizeEntityName ( typeResource.getRawType () ) ; java.lang.Class parentClass = org.structr.schema.SchemaHelper.getEntityClassForRawType ( type ) ; if ( org.structr.core.graph.search.SearchCommand.getAllSubtypesAsStringSet ( parentClass.getSimpleName () ) .contains ( type ) ) { return entity; } } throw new org.structr.rest.exception.NotFoundException () ; } 
public void removeItem ( com.brothers.travelplanner.activities.priceplan.cart.CartDataModel item ) { for ( int index = 0; ( cartDataModelList.size () ) > index; index++ ) { if ( ( cartDataModelList.get ( index ) .index ) == ( item.index ) ) { cartDataModelList.remove ( index ) ; } } notifyDataSetChanged () ; } 
public java.util.List<trackerApplication.entity.Vehicle> getVehiclesByUsername ( java.lang.String username ) { java.util.List<trackerApplication.entity.Vehicle> vehicles = new java.util.ArrayList<> () ; org.hibernate.Session session = trackerApplication.persistence.SessionFactoryProvider.getSessionFactory () .openSession () ; vehicles = session.createCriteria ( trackerApplication.entity.Vehicle.class, username ) .list () ; logger.info ( ( username + "Username: " ) ) ; logger.info ( ( "Vehicles found: " + ( vehicles.size () ) ) ) ; return vehicles; } 
public static void main ( java.lang.String[] args ) throws java.lang.Exception { try { org.neo4j.wrapper.LoggingService.initLogger () ; } catch ( java.lang.Exception e ) { org.neo4j.wrapper.NeoServiceWrapper.LOGGER.log ( java.util.logging.Level.SEVERE, e.toString () , e ) ; } if ( 1 == ( args.length ) ) { org.neo4j.wrapper.NeoServiceWrapper.launchAsService ( args[0] ) ; } else { org.neo4j.wrapper.NeoServiceWrapper.launchAsConsoleApp () ; } } 
@ org.greenrobot.eventbus.Subscribe ( threadMode = org.greenrobot.eventbus.ThreadMode.MAIN ) public void onReceiveStateInMain ( com.tan.musicplayer.common.PlayerEvent.StateEvent event ) { mIsBusy = false; android.util.Log.i ( com.tan.musicplayer.base.BasePlayerAcitvity.TAG, "onReceiveStateInMain: " ) ; if ( null != ( event.songs ) ) { mSongs = event.songs; onSetSongs () ; mCurrentTime = event.time; mCurrentSongIndex = event.index; mIsPlaying = event.isPlaying; mDuration = mSongs.get ( mCurrentSongIndex ) .getFileDuration () ; onReceiveServiceStateSuccess ( false ) ; mIsServiceEmpty = false; } else { mIsServiceEmpty = true; onReceiveServiceStateSuccess ( true ) ; } } 
@ java.lang.Override public void onPageScrolled ( int position, float positionOffset, int positionOffsetPixels ) { if ( 0 < position ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager.getWidth () ) / ( mViewPager.getAdapter () .getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } } 
public void backButtonClick () { if ( 0 < ( currentPlayer ) ) { gameFrame.getGame () .setCurrentPlayer ( ( ( currentPlayer ) - 1 ) ) ; new trivia.gui.PlayerJoinPanel ( gameFrame ) ; } else { gameFrame.getGame () .reset () ; new trivia.gui.MainMenuPanel ( gameFrame ) ; } } 
public static com.flatworks.games.flatcraft.world.World simulateWorld ( com.flatworks.games.flatcraft.world.World world ) { com.flatworks.games.flatcraft.world.WorldGenerator.state ( "Simulating World..." ) ; for ( int i = 0; 200 > i; i++ ) { world.runTick () ; com.flatworks.games.flatcraft.world.WorldGenerator.progress ( ( 0.5F + ( ( ( float ) ( ( ( double ) ( i ) ) / ( ( double ) ( 200 ) ) ) ) * 0.5F ) ) ) ; } return world; } 
public static void setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.getInstance () .camDevice ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder.set ( CaptureRequest.CONTROL_AE_LOCK, lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller.setRepeatingRequest () ; android.preference.PreferenceManager.getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen.getMainContext () ) .edit () .putBoolean ( ApplicationScreen.sAELockPref, lock ) .commit () ; } } 
@ java.lang.Override public boolean apply ( lu.zhe.mtgslackbot.card.Card card ) { if ( null == ( comparison ) ) { return false; } java.lang.Integer intValue = lu.zhe.mtgslackbot.parsing.Parsing.PROPERTY_FUNCS.get ( property ) .apply ( card ) ; return ( intValue != null ) && ( intValue >= ( comparison ) ) ; } 
protected com.tcdi.zombodb.query_parser.rewriters.QueryBuilder build ( com.tcdi.zombodb.query_parser.rewriters.ASTExpansion node ) { com.tcdi.zombodb.query_parser.rewriters.QueryBuilder expansionBuilder = build ( node.getQuery () ) ; com.tcdi.zombodb.query_parser.rewriters.QueryParserNode filterQuery = node.getFilterQuery () ; if ( null != filterQuery ) { com.tcdi.zombodb.query_parser.rewriters.BoolQueryBuilder bqb = boolQuery () ; bqb.must ( expansionBuilder ) ; bqb.mustNot ( build ( filterQuery ) ) ; expansionBuilder = applyVisibility ( bqb, node.getIndexLink () .getIndexName () ) ; } return expansionBuilder; } 
@ java.lang.Override protected void onPause () { android.support.v4.content.LocalBroadcastManager.getInstance ( this ) .unregisterReceiver ( mAudioReceiver ) ; if ( ( mAudioController.isAudioPlaying () ) && ( ( mAudioController ) != null ) ) { startService ( com.bandonleon.audioservice.AudioService.getStartIdleIntent ( this ) ) ; mAudioController.startForegroundService ( com.bandonleon.audioservice.MainActivity.AUDIO_TRACK_TITLE ) ; } super.onPause () ; } 
@ java.lang.Override public void run () { getActivity () .runOnUiThread ( new java.lang.Runnable () { @java.lang.Override public void run () { int i = bnp.getProgress () ; if ( count > i ) { bnp.incrementProgressBy ( 1 ) ; } } } ) ; } 
public ulm.university.news.controller.Ballot getBallot ( java.lang.String accessToken, int groupId, int ballotId, boolean withSubresources ) throws ulm.university.news.util.exceptions.ServerException { ulm.university.news.controller.Ballot ballot; ulm.university.news.controller.User requestor = verifyUserAccess ( accessToken ) ; ulm.university.news.controller.GroupController.logger.debug ( ( " the id {}." + "The requestor, i.e. the user with id {}, requests the ballot with the id {} from the group with" ) , requestor.getId () , ballotId, groupId ) ; verifyParticipationInGroupViaDB ( groupId, requestor.getId () ) ; verifyGroupExistenceViaDB ( groupId ) ; ballot = getBallot ( groupId, ballotId, withSubresources ) ; return ballot; } 
private void logKeys ( java.util.List<org.jfl110.api.auth.rolling.RollingKey> sortedKeys ) { for ( int i = 1; ( sortedKeys.size () ) > i; i++ ) { org.jfl110.api.auth.rolling.RollingKey key = sortedKeys.get ( i ) ; java.lang.System.out.println ( ( ( ( ( ( ( ( "Key[" + i ) + "] " ) + ( key.keyNumber () ) ) + " " ) + ( key.validFrom () ) ) + " " ) + ( key.validForSeconds () ) ) ) ; } } 
public static void main ( java.lang.String[] args ) { if ( 2 > ( args.length () ) ) { java.lang.System.out.println ( "Usage: java MusicTransposer music.xml key" ) ; } MusicFile music = new MusicFile ( args[0] ) ; muaic.transposeTo ( KEY.getKeyByNote ( NOTE.getNoteByNote ( args[1].charAt ( 0 ) ) ) ) ; } 
private void initUserFields () { java.util.List<java.lang.String> userData = mDataManager.getPreferencesManager () .loadUserProfileData () ; for ( int i = 0; ( ( userData.size () ) - 1 ) > i; i++ ) { mUserInfoViews.get ( i ) .setText ( userData.get ( i ) ) ; } mNavTxtEmailView.setText ( userData.get ( 1 ) ) ; mNavTxtNameView.setText ( userData.get ( ( ( userData.size () ) - 1 ) ) ) ; } 
public void initialize () { if ( null == ( mBluetoothAdapter ) ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication.getAppContext () .getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager.getAdapter () ; } else { android.util.Log.w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG, "initialize () ---> Bluetooth adapter is already initialized" ) ; } } 
@ java.lang.Override public int compare ( main.java.addressBook.Person lhs, main.java.addressBook.Person rhs ) { if ( ( ( rhs.getFirstName () ) != null ) && ( ( lhs.getFirstName () ) != null ) ) { return lhs.getLastName () .concat ( lhs.getFirstName () ) .compareTo ( rhs.getLastName () .concat ( rhs.getFirstName () ) ) ; } else { return lhs.getLastName () .compareTo ( rhs.getLastName () ) ; } } 
public java.lang.String toString ( final boolean reducedSize ) { if ( null == ( number ) ) { if ( reducedSize ) { return ( ( BaulastenPictureFinder.PATH_RS ) + ( BaulastenPictureFinder.SEP ) ) + ( file ) ; } else { return ( ( BaulastenPictureFinder.PATH ) + ( BaulastenPictureFinder.SEP ) ) + ( file ) ; } } else { return ( ( getFolder ( number, reducedSize ) ) + ( BaulastenPictureFinder.SEP ) ) + ( file ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "/", ( co.porkopolis.utils.FileConstants.HOME_PAGE ) + "/" }, method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String home ( @org.springframework.web.bind.annotation.ModelAttribute co.porkopolis.model.SummonerName summonerName, org.springframework.ui.Model model ) { co.porkopolis.model.BasicSummoner summoner = request.requestBasicSummoner ( summonerName.getName () ) ; if ( summoner != null ) { model.addAttribute ( AttributeConstants.BASIC_SUMMONER, summoner ) ; return co.porkopolis.utils.FileConstants.INDEX; } else { model.addAttribute ( AttributeConstants.ERROR, ( ( "Summoner " + ( summonerName.getName () ) ) + " not found." ) ) ; return co.porkopolis.utils.FileConstants.HOME_PAGE; } } 
@ be.kuleuven.cs.som.annotate.Raw private void setPosition ( hillbillies.model.Vector position ) { if ( null == ( this.world ) ) throw new java.lang.ClassCastException () ; if ( ( ! ( this.world.isPositionInWorld ( position ) ) ) || ( ! ( isValidPositionForUnit () ) ) ) throw new java.lang.IllegalArgumentException () ; this.position = position; } 
@ java.lang.Override protected void onPageScrolled ( int position, float offset, int offsetPixels ) { if ( ( ! ( swipeListenerCalled ) ) && ( ( lastPagedReached ) && ( offset == 0 ) ) ) { onSwipeListener.onAttemptedOnLastPage () ; swipeListenerCalled = true; } lastPagedReached = ( position + 1 ) == ( getAdapter () .getCount () ) ; super.onPageScrolled ( position, offset, offsetPixels ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public <T> org.apache.flink.streaming.partitioner.StreamPartitioner<T> getPartitioner ( java.lang.ClassLoader cl, java.lang.String output ) { org.apache.flink.streaming.partitioner.StreamPartitioner<T> partitioner = null; try { partitioner = ( ( org.apache.flink.streaming.partitioner.StreamPartitioner<T> ) ( org.apache.flink.util.InstantiationUtil.readObjectFromConfig ( this.config, ( output + ( org.apache.flink.streaming.api.StreamConfig.PARTITIONER_OBJECT ) ) , cl ) ) ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( "Partitioner could not be instantiated." ) ; } if ( partitioner != null ) { return partitioner; } else { return new org.apache.flink.streaming.partitioner.ShufflePartitioner<T> () ; } } 
public static com.hazelcast.core.HazelcastInstance getHazelcastInstance () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil.getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent.class ) .getBundleContext () ; org.osgi.framework.ServiceReference<com.hazelcast.core.HazelcastInstance> ref = ctx.getServiceReference ( com.hazelcast.core.HazelcastInstance.class ) ; if ( null == ref ) { return null; } return ctx.getService ( ref ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView, int newState ) { android.support.v7.widget.LinearLayoutManager layoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( recyclerView.getLayoutManager () ) ) ; int lastPosition = layoutManager.findLastCompletelyVisibleItemPosition () ; if ( ( ( mAdapter.getItemCount () ) - 1 ) == lastPosition ) { mListViewModel.loadNextPageZhihu () ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) { switch ( requestCode ) { case com.cs246.bathroom.MapsActivity.MY_PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION: { if ( ( ( grantResults[0] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( grantResults.length ) > 0 ) ) { userLocation = true; } else { userLocation = false; } return; } } } 
@ java.lang.Override public org.jboss.invocation.Interceptor create ( final org.jboss.invocation.InterceptorFactoryContext context ) { final java.lang.reflect.Method method = SessionBeanHomeInterceptorFactory.INIT_METHOD.get () ; final java.lang.Object[] params = SessionBeanHomeInterceptorFactory.INIT_PARAMETERS.get () ; return new org.jboss.as.ejb3.component.interceptors.AbstractEJBInterceptor () { @java.lang.Override public java.lang.Object processInvocation ( final org.jboss.invocation.InterceptorContext context ) throws java.lang.Exception { if ( null != method ) { method.invoke ( context.getTarget () , params ) ; } return context.proceed () ; } }; } 
@ org.cba.rest.resources.PUT @org.cba.rest.resources.Path ( value = "edit/{id}" ) @org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( int id, java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson.fromJson ( content, org.cba.entities.Company.class ) ; if ( null != company ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade.editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e.printStackTrace () ; javax.ws.rs.core.Response.status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response.status ( 200 ) .build () ; } 
private traer.physics.Particle createParticle ( int x, int y ) { traer.physics.Particle newParticle = m_particleSystem.makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS, x, y, 0 ) ; for ( int i = 0; ( m_particleSystem.numberOfParticles () ) > i; i++ ) { traer.physics.Particle p = m_particleSystem.getParticle ( i ) ; if ( p.equals ( newParticle ) ) { continue; } m_particleSystem.makeAttraction ( p, newParticle, campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE, campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle; } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { if ( null == intent ) { return; } android.net.Uri uri = intent.getParcelableExtra ( "uri" ) ; com.lzh.nonview.router.extras.RouteBundleExtras extras = intent.getParcelableExtra ( "extras" ) ; com.lzh.nonview.router.Router.resume ( uri, extras ) ; } 
public void resize ( int width, int height ) { camera.viewportWidth = width * ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_HEIGHT ) / height ) ; camera.update () ; cameraGUI.viewportWidth = com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_WIDTH; cameraGUI.viewportHeight = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT ) / ( ( float ) ( height ) ) ) * ( ( float ) ( width ) ) ; cameraGUI.position.set ( ( ( cameraGUI.viewportWidth ) / 2 ) , ( ( cameraGUI.viewportHeight ) / 2 ) , 0 ) ; cameraGUI.update () ; } 
public void run () { java.lang.System.out.println ( "The Request has been received" ) ; java.lang.System.out.println ( rawMsg ) ; fields = rawMsg.split ( GlobalVariables.token ) ; if ( 1 == ( fields.length ) ) { try { throw new java.lang.Exception ( "Bad Input, no delimiter identified" ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } try { processRequest () ; } catch ( global.HasRegisteredException | java.lang.InterruptedException e ) { e.printStackTrace () ; } } 
@ java.lang.Override public void run () { android.view.Window window = this.cordova.getActivity () .getWindow () ; window.addFlags ( LayoutParams.FLAG_DISMISS_KEYGUARD ) ; window.addFlags ( LayoutParams.FLAG_SHOW_WHEN_LOCKED ) ; window.addFlags ( LayoutParams.FLAG_TURN_SCREEN_ON ) ; android.util.Log.v ( com.applurk.plugin.ScreenLocker.TAG, ( action + "ScreenLocker received SUCCESS:" ) ) ; callbackContext.success () ; } 
private static java.lang.String inputStreamToString ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder responseStringBuilder = new java.lang.StringBuilder () ; java.lang.String line = ""; while ( null != ( line = reader.readLine () ) ) { responseStringBuilder.append ( line ) ; } return responseStringBuilder.toString () ; } 
@ java.lang.Override public java.lang.Object add ( java.lang.Object left, java.lang.Object right ) { if ( ( right instanceof java.lang.String ) || ( left instanceof java.lang.String ) ) { return ( left.toString () ) + ( right.toString () ) ; } else { return super.add ( left, right ) ; } } 
public com.jsing.common.string.StringTrimmer getBeforeNext ( java.lang.String stringToSearch ) { if ( null == ( this.string ) ) return this; int index = getIndex ( stringToSearch ) ; if ( index > ( -1 ) ) { this.end = java.lang.Math.max ( this.start, index ) ; } return this; } 
public void openFolder ( java.lang.String folderName ) throws java.lang.Exception { folder = store.getFolder ( folderName ) ; if ( null == ( folder ) ) { throw new java.lang.Exception ( "Invalid folder" ) ; } try { folder.open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder.open ( Folder.READ_ONLY ) ; } } 
private java.lang.Integer compareBits ( java.lang.String a, java.lang.String b ) { int count = 0; for ( int i = 0; ( java.lang.Math.min ( a.length () , b.length () ) ) > i; i++ ) { if ( ! ( ( a.indexOf ( i ) ) == ( b.indexOf ( i ) ) ) ) return count; count++; } return count; } 
@ java.lang.Override public void onReceive ( android.content.Context context, android.content.Intent intent ) { java.lang.String action = intent.getAction () ; java.lang.String token = intent.getStringExtra ( Prefs.FIREBASE_ID ) ; android.util.Log.d ( com.hillelevo.cityelf.Constants.TAG, ( action + "MainActivity onReceive: " ) ) ; android.util.Log.d ( com.hillelevo.cityelf.Constants.TAG, ( "MainActivity onReceive: " + token ) ) ; if ( active ) { showDebugAlertDialog ( token ) ; } } 
public void generate ( int before, int after ) { if ( ( Statement.NULL ) == ( this.statement1 ) ) { statement2.generate ( before, after ) ; } else if ( ( statement2 ) == ( Statement.NULL ) ) { statement1.generate ( before, after ) ; } else { int label = newLabel () ; statement1.generate ( before, label ) ; emitLabel ( label ) ; statement2.generate ( label, after ) ; } } 
public int compare ( Paxos.ProposalId rhs ) { if ( ( rhs.id ) == ( this.id ) ) { return java.lang.Integer.compare ( this.playerId, rhs.playerId ) ; } else if ( ( this.id ) < ( rhs.id ) ) { return -1; } else { return 1; } } 
@ java.lang.Override public value.Value sub ( value.Value other ) { if ( ( ! ( other.isSet () ) ) || ( ! ( isSet () ) ) ) { return new value.IntegerValue ( 0 ) ; } return new value.IntegerValue ( ( ( value ) - ( ( ( value.IntegerValue ) ( other ) ) .getValue () ) ) ) ; } 
public static double timeSortedInput ( java.lang.String alg, int n, int trials ) { double total = 0.0; java.lang.Double[] a = new java.lang.Double[n]; for ( int t = 0; trials > ( i ) ; t++ ) { for ( int i = 0; i < n; i++ ) { a[i] = 1.0 * i; } total += SortCompare.time ( alg, a ) ; } return total; } 
@ java.lang.Override protected void setUp () throws java.lang.Exception { java.lang.String name = getName () ; name = name.replace ( "$$", "/" ) ; name = name.replace ( "$", "." ) ; consulo.internal.dotnet.asm.mbel.ModuleParser moduleParser = new consulo.internal.dotnet.asm.mbel.ModuleParser ( new java.io.File ( ( name + "testData/" ) ) ) ; moduleParser.parseNext () ; myModuleParser = moduleParser; } 
protected static void setOmHome () { java.lang.String webappsDir = java.lang.System.getProperty ( "om.home", "." ) ; org.apache.openmeetings.util.OmFileHelper.setOmHome ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper.getOmHome () .isDirectory () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper.getOmHome () .exists () ) ) ) { org.junit.Assert.fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } } 
private java.lang.String toBinaryString ( int number ) { java.lang.String temp = java.lang.Integer.toHexString ( number ) ; int length = temp.length () ; for ( int i = 0; ( 4 - length ) > i; i++ ) temp += "0" + temp; return temp; } 
@ java.lang.Override public int compareTo ( @com.sun.istack.internal.NotNull java.lang.Object other ) { ch.redmonkeyass.zombieInvasion.worldmap.Node o = ( ( ch.redmonkeyass.zombieInvasion.worldmap.Node ) ( other ) ) ; float f = ( cost ) + ( heuristic ) ; float of = ( o.heuristic ) + ( o.cost ) ; if ( f < of ) { return -1; } else if ( f > of ) { return 1; } else { return 0; } } 
@ java.lang.Override public void setActive () { isActive = true; saveService.saveDataValue ( SaveEnum.CONTEXT, context ) ; if ( ( ( type ) == ( com.majalis.scenes.EndScene.Type.GAME_OVER ) ) || ( ( type ) == ( com.majalis.scenes.EndScene.Type.ENCOUNTER_OVER ) ) ) { saveService.saveDataValue ( SaveEnum.RETURN_CONTEXT, null ) ; } saveService.saveDataValue ( SaveEnum.SCENE_CODE, 0 ) ; } 
public void setTime ( int t ) { if ( ( t <= ( endTime ) ) && ( ( startTime ) <= t ) ) { java.lang.System.out.println ( ( "end time internal - " + ( endTime ) ) ) ; hideContextPopups () ; time.set ( t ) ; } else if ( t < ( startTime ) ) time.set ( startTime ) ; else if ( t > ( endTime ) ) time.set ( endTime ) ; } 
private void createChannel () { if ( null == ( channel ) ) { channel = servletRequestContext.getExchange () .getResponseChannel () ; channel.getWriteSetter () .set ( internalListener ) ; if ( ( internalListener ) != null ) { channel.resumeWrites () ; } } } 
private void addRow ( int row, int numInRow ) { int idxInRow = 0; int startVertex = numInRow * row; int currVertex = startVertex; while ( idxInRow < numInRow ) { addFace ( currVertex, ( currVertex + 1 ) , ( ( currVertex + numInRow ) + 1 ) , ( currVertex + numInRow ) ) ; currVertex++; idxInRow++; } } 
@ java.lang.Override public boolean delete ( com.hazelcast.nio.serialization.Data key ) { checkIfLoaded () ; final long now = getNow () ; final com.hazelcast.map.impl.record.Record record = getRecordOrNull ( key, now, false ) ; if ( null == record ) { removeIndex ( record ) ; mapDataStore.remove ( key, now ) ; } else { return ( removeRecord ( key, record, now ) ) != null; } return false; } 
public static boolean CheckGetFileName () { netlife.datamodels.Commands com = new netlife.datamodels.Commands ( "ADD", "bilder/2012/1.jpg", "" ) ; netlife.datamodels.Commands com2 = new netlife.datamodels.Commands ( "DEL", "bilder/2012/1.jpg/", "" ) ; java.lang.String test = netlife.Logic.getFileName ( com ) ; java.lang.String test2 = netlife.Logic.getFileName ( com2 ) ; boolean check = test.equals ( "1.jpg" ) ; boolean check2 = test.equals ( "1.jpg" ) ; return true == ( check && check2 ) ; } 
public void setStartDate ( java.util.Optional<java.util.List<java.util.Date>> startDate ) { try { java.util.List<java.util.Date> dateList = startDate.get () ; if ( 2 == ( dateList.size () ) ) { this.startDate = java.util.Optional.of ( startDate.get () .get ( 0 ) ) ; } else { this.startDate = java.util.Optional.empty () ; } } catch ( java.util.NoSuchElementException nse ) { throw new java.lang.IllegalArgumentException () ; } } 
public void addLast ( Item item ) { if ( this.checkNull ( item ) ) throw new java.util.NoSuchElementException () ; if ( null == ( tail ) ) { tail = new Deque.Node () ; tail.item = item; head = tail; } else { tail.prev = new Deque.Node () ; tail.prev.next = tail; tail = tail.prev; tail.item = item; } count += 1; } 
public csc668assignment1.Transaction readNextTransaction () { if ( ( ! ( _transactions.hasNext () ) ) && ( ( _transactions ) != null ) ) return null; else { java.lang.String name = _transactions.getName () ; java.lang.String upc = _transactions.getUPC () ; int quantity = _transactions.getQuantity () ; csc668assignment1.Payments.Payment payment = _transactions.getPayment () ; return new csc668assignment1.Transaction ( name, upc, quantity, payment ) ; } } 
private java.lang.String findHalfHourAfter ( int hours, int minutes ) { java.lang.String halfHourAfter = ""; minutes += 30; if ( 60 < minutes ) { hours++; minutes -= 60; } halfHourAfter = formatTime ( halfHourAfter, hours, minutes ) ; return halfHourAfter += minutes; } 
protected void updateFromNameChange ( java.lang.String newHeroName ) { mName = newHeroName; java.lang.String imageName = mParentPresenter.getHeroImageName ( newHeroName ) ; for ( int i = 0; ( mSimilarityList.size () ) > i; i++ ) { if ( mSimilarityList.get ( i ) .equals ( imageName ) ) { mView.setHeroInRecycler ( i ) ; break; } } mParentPresenter.hideKeyboard () ; mParentPresenter.sendUpdatedHeroList () ; } 
private static double getPassangerDiscount ( ooptraining.Passanger p ) { double discount = 1.0; if ( ( ooptraining.DiscountCalculator.SILVER_LIMIT ) < ( p.getMiles () ) ) { discount = ooptraining.DiscountCalculator.SILVER_DISCOUNT; } else if ( ( p.getMiles () ) > ( ooptraining.DiscountCalculator.GOLD_LIMIT ) ) { discount = ooptraining.DiscountCalculator.GOLD_DISCOUNT; } return discount; } 
private void createNextRound () { java.lang.System.out.println ( "create next round" ) ; java.lang.System.out.println ( ( ( currentGridNum ) + "current grid num is " ) ) ; if ( ( currentGridNum ) >= ( beetle_kit.EstimationGame.MAX_NUM_ROUNDS ) ) { javax.swing.JPanel panel = createEndGamePanel () ; javax.swing.JOptionPane.showOptionDialog ( this, panel, "Congratulations!!!", javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.PLAIN_MESSAGE, null, new java.lang.Object[] {}, null ) ; return; } createNewGrid () ; } 
double heuristics ( dstarlite.State a, dstarlite.State b ) { double temp; double min = java.lang.Math.abs ( ( ( a.getX () ) - ( b.getX () ) ) ) ; double max = java.lang.Math.abs ( ( ( a.getY () ) - ( a.getY () ) ) ) ; if ( max < min ) { temp = min; min = max; max = temp; } return ( ( ( m_sqrt2 ) - 1.0 ) * min ) + max; } 
private com.bagri.core.system.Collection getTypedCollection ( com.bagri.core.system.Schema schema, java.lang.String typePath ) { for ( com.bagri.core.system.Collection collect : schema.getCollections () ) { java.lang.String cPath = collect.getDocumentType () ; if ( ( typePath.equals ( cPath ) ) && ( cPath != null ) ) { return collect; } } return null; } 
public void deregister () throws java.io.IOException { if ( null == ( listen ) ) { java.lang.System.out.println ( "Register first!" ) ; return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( ( "deregister " + ( id ) ) ) ) ) ; { java.lang.System.out.println ( "Deregister failed, try again" ) ; } listen.interrupt () ; listen = null; sock.close () ; } 
@ java.lang.Override public void gameOver () { java.lang.String playername = ( ( java.lang.String ) ( javax.swing.JOptionPane.showInputDialog ( null, ( "Enter your name:\n" + ( ( "Your score: " + ( _panel.gameModel () .step () ) ) + "\n" ) ) , "Game Over", javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, "new player" ) ) ) ; _scoreBoard.put ( _panel.gameModel () .step () , playername ) ; } 
public static com.ldf.calendar.model.CalendarDate fromDate ( java.util.Date date ) { java.util.Calendar cal = java.util.Calendar.getInstance () ; cal.setTime ( date ) ; com.ldf.calendar.model.CalendarDate calendarDate = new com.ldf.calendar.model.CalendarDate () ; calendarDate.year = cal.get ( java.util.Calendar.YEAR ) ; calendarDate.month = cal.get ( ( 1 + ( java.util.Calendar.MONTH ) ) ) ; calendarDate.day = cal.get ( java.util.Calendar.DAY_OF_MONTH ) ; return calendarDate; } 
public void addItem ( item.Item i ) { item.Item item = i.clone () ; if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( 0 <= loc ) { items.get ( loc ) .count += i.count; } else { items.add ( item ) ; } } else { items.add ( item ) ; } } 
@ javax.ws.rs.GET @javax.ws.rs.Path ( value = "/all" ) @javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.String returnDiagnose ( @javax.ws.rs.QueryParam ( value = "session" ) java.lang.String session, @javax.ws.rs.QueryParam ( value = "patientId" ) java.lang.String patientId ) { java.lang.String medications = "false"; try { connector = eu.neq.mais.connector.ConnectorFactory.getConnector ( eu.neq.mais.technicalservice.SessionStore.getBackendSid ( session ) ) ; medications = connector.returnMedicationsForPatient ( patientId ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; medications = "{\"false\"}"; } eu.neq.mais.request.MedicationHandler.logger.info ( ( medications + "return medication method returned json object: " ) ) ; return medications; } 
public int getTotalBalance () { int totalBalance = 0; for ( Reservation reservation : this.reservations ) { if ( "L" == ( reservation.getRoomType () ) ) { totalBalance = +200; } if ( ( reservation.getRoomType () ) == "E" ) { totalBalance = +80; } } return totalBalance; } 
private void setValueContrained ( int x ) { x = x - ( this.getAbsoluteLeft () ) ; int width = sliderWidget.getOffsetWidth () ; if ( 0 > x ) { x = 0; } if ( x > width ) { x = width; } int componentValue = ( x * ( max ) ) / width; setValue ( componentValue, true, false ) ; sliderWidget.setPos ( x ) ; } 
public boolean shootAt ( int row, int column ) { int tempRow = getBowRow () ; int tempColumn = getBowColumn () ; if ( ( ! ( stworo01.EmptySea.class.isInstance ( this ) ) ) || ( ! ( isSunk () ) ) ) { if ( this.isHorizontal () ) { this.hit[ ( column - tempColumn ) ] = true; return true; } else { this.hit[ ( row - tempRow ) ] = true; return true; } } return false; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.widget.Toast.makeText ( getApplicationContext () , "sdfghjkl;", Toast.LENGTH_LONG ) .show () ; android.content.Intent intent = getIntent () ; username = intent.getStringExtra ( "Username" ) ; username_TextV = ( ( android.widget.TextView ) ( findViewById ( R.id.username_act_main ) ) ) ; username_TextV.setText ( ( ( username ) + ( username_TextV.getText () .toString () ) ) ) ; initInstances () ; } 
private void setZeroValues ( java.lang.String values ) { java.lang.String[] sr = values.split ( "," ) ; for ( int i = 0; ( sr.length ) > i; i++ ) { int num = java.lang.Integer.MIN_VALUE; try { num = java.lang.Integer.parseInt ( sr[i] ) ; } catch ( java.lang.NumberFormatException nfe ) { break; } zeroValues.add ( num ) ; } } 
public static void index () { controllers.Http.Cookie userLoggedInCookie = request.cookies.get ( "token" ) ; if ( null == userLoggedInCookie ) { controllers.Application.loginForm () ; } models.User user = models.User.find ( "byToken", userLoggedInCookie.value ) .first () ; java.util.List<models.Audio> audios = models.Audio.find ( "byUser", user ) .fetch () ; render ( audios ) ; } 
private int skip ( int n_skip ) throws java.io.IOException { int n_skipped = 0; skipWhiteSpace () ; if ( ( ( current ) != '}' ) && ( ( ( current ) != ',' ) && ( ( current ) != ']' ) ) ) { skipInner () ; } while ( ( current ) == ',' ) { skipWhiteSpace () ; skipInner () ; if ( ( ++n_skipped ) == n_skip ) { break; } } return n_skipped; } 
private void resetBall ( int scorer ) { if ( 10 == scorer ) { ( score2 ) ++; } else { ( score1 ) ++; } ballIsStopped = true; ballOffsetX = 0; ballOffsetY = 0; ballVelX = 0; ballVelY = 0; bat1Offset = 0; bat2Offset = 0; lastScorer = scorer; bounces = 0; } 
@ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb, @android.support.annotation.NonNull android.content.ContentValues contentValues, @android.support.annotation.NonNull java.lang.String table, @android.support.annotation.NonNull final java.lang.String idFieldName, @android.support.annotation.NonNull java.lang.Object id ) { final int numberOfRowsUpdated = storIOSQLiteDb.internal () .update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () .table ( table ) .where ( ( "=?" + idFieldName ) ) .whereArgs ( java.lang.String.valueOf ( id ) ) .build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult.newUpdateResult ( numberOfRowsUpdated, table ) : insert ( storIOSQLiteDb, contentValues, table ) ; } 
public void onDataReceived ( com.jacks205.spots.model.ParkingStructure[] structures, java.util.Date lastUpdated ) { if ( null == ( spotsListAdapter ) ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this, structures, lastUpdated ) ; listView.setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter.setStructures ( structures ) ; spotsListAdapter.setLastUpdated ( lastUpdated ) ; spotsListAdapter.notifyDataSetChanged () ; } mSwipeRefreshLayout.setRefreshing ( false ) ; } 
public java.lang.String toString () { java.lang.String save = "["; while ( null != ( peekFirst () ) ) { save += pollFirst () ; if ( null != ( peekFirst () ) ) { save += ","; } } save += "]"; return save; } 
private java.util.List<T> down ( int row, int column, int length ) { java.util.List<T> nodes = new java.util.ArrayList<> () ; int rowCount = rowCount () ; for ( int position = 0; length > position; position++ ) { int currentRow = row + position; if ( currentRow > rowCount ) { break; } T node = grid[currentRow][column]; nodes.add ( node ) ; } return nodes; } 
@ java.lang.Override public com.ankurdave.part.ChildPtr find_child ( byte c ) { for ( int i = 0; ( this.num_children ) > i; i++ ) { if ( ( keys[i] ) == ( to_uint ( c ) ) ) { return new com.ankurdave.part.ArrayChildPtr ( children, i ) ; } } return null; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setRetainInstance ( true ) ; db = new com.nectar.thesun.library.NewsListDatabase ( com.nectar.thesun.PageSlidingTabStripFragment.mcontext ) ; if ( null != ( db.getNews () ) ) { com.nectar.thesun.library.MyConstants.homenews = db.getNews () ; com.nectar.thesun.HomeFragment.Setup () ; } if ( ! ( com.nectar.thesun.PageSlidingTabStripFragment.isAsyncTaskPendingOrRunning () ) ) { loadNewsNow ( getActivity () ) ; com.nectar.thesun.PageSlidingTabStripFragment.mcontext = getActivity () .getApplicationContext () ; } } 
public java.util.Collection getAllSubTasks ( java.lang.String taskId ) { if ( ( ( taskId.length () ) == 0 ) || ( taskId == null ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; if ( task == null ) { return new java.util.Vector () ; } return task.getSubTasks () ; } } 
@ com.softserve.edu.documents.document.meta.Placeholder ( name = "OWNER_NAME" ) public java.lang.String getOwnerFullName () { com.softserve.edu.entity.verification.ClientData ownerData = getVerification () .getClientData () ; java.lang.String fullName = ( ownerData.getMiddleName () ) + ( ( ( ( ownerData.getLastName () ) + " " ) + ( ownerData.getFirstName () ) ) + " " ) ; return fullName; } 
private int columnHeight ( int column ) { int r = 0; for ( ; ( ( this.grid[column][r].isEmpty () ) || ( this.grid[column][r].isShape () ) ) && ( r < ( this.height ) ) ; r++ ) ; return ( ( this.height ) - r ) - 1; } 
static void askToSave () { java.lang.String[] options = new java.lang.String[] { "Yes", "No", "Cancel" }; int n = javax.swing.JOptionPane.showOptionDialog ( EssayWriter.frame, "Would you like to save before you exit?", "Save?", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, options, options[0] ) ; if ( ( javax.swing.JOptionPane.YES_OPTION ) == n ) { EssayWriter.save () ; } else if ( n == ( javax.swing.JOptionPane.NO_OPTION ) ) { java.lang.System.exit ( 0 ) ; } } 
@ java.lang.Override public void run () { try { if ( clipCheck ) com.bsc.cs.kidssoftware.Test.clip.stop () ; com.bsc.cs.kidssoftware.Test.clip = javax.sound.sampled.AudioSystem.getClip () ; javax.sound.sampled.AudioInputStream inputStream = javax.sound.sampled.AudioSystem.getAudioInputStream ( com.bsc.cs.kidssoftware.Test.class.getResource ( ( ( file2.getName () ) + "/assets/" ) ) ) ; com.bsc.cs.kidssoftware.Test.clip.open ( inputStream ) ; com.bsc.cs.kidssoftware.Test.clip.start () ; clipCheck = true; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } 
private void check ( com.gargoylesoftware.htmlunit.WebClient wc, com.gargoylesoftware.htmlunit.HttpMethod m ) throws java.io.IOException { com.gargoylesoftware.htmlunit.TextPage p = wc.getPage ( new com.gargoylesoftware.htmlunit.WebRequestSettings ( new java.net.URL ( url, "verbMatch/" ) , m ) ) ; assertEquals ( ( "\n" + ( "Got " + ( m.name () ) ) ) , p.getContent () ) ; } 
@ java.lang.Override public void onClick ( org.bukkit.event.inventory.InventoryClickEvent event ) { org.bukkit.entity.Player player = ( ( org.bukkit.entity.Player ) ( event.getWhoClicked () ) ) ; if ( null != player ) { player.performCommand ( ( "vote reward " + ( voteSite.getSiteName () ) ) ) ; player.closeInventory () ; } } 
@ java.lang.Override public int hashCode () { int result = getDateFrom () .hashCode () ; result = ( getUser () .hashCode () ) + ( 31 * result ) ; result = ( 31 * result ) + ( getBookInstance () .hashCode () ) ; return result; } 
public synchronized java.lang.String getSpeed ( long size ) { long t2 = java.lang.System.currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2; if ( 0 == t ) return "MAX"; sum += size; return java.lang.String.format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes", ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } 
long nextUniqueTransaction ( long time ) { long id = ( TcpReplicator.TIMESTAMP_FACTOR ) * time; for ( ; ; ) { long old = transactionID.get () ; if ( old >= id ) id = old + 1; if ( transactionID.compareAndSet ( old, id ) ) break; } return id; } 
@ java.lang.Override public void forward ( org.xbill.DNS.Message message, com.ahuazhu.soy.modal.ResponseContext response ) throws java.io.IOException { org.xbill.DNS.Message answer = cache.getValue ( new com.ahuazhu.soy.modal.QuestionKey ( message ) ) ; if ( null != answer ) { send ( message, response ) ; return; } if ( forwarderStarted ) { callBack.put ( new com.ahuazhu.soy.modal.QueryKey ( message ) , response ) ; for ( java.net.InetSocketAddress upstreamServer : upstreamServers ) { datagramChannel.send ( java.nio.ByteBuffer.wrap ( message.toWire () ) , upstreamServer ) ; } } } 
private void save () throws com.hummingwave.Custom.WaveORMException { com.sample.Employee employee = new com.sample.Employee () ; employee.setEmpNo ( "027" ) ; employee.setName ( "Chaitra" ) ; { try { employee.setBytes ( "Chaitra".getBytes ( "ISO-8859-15" ) ) ; } catch ( java.io.UnsupportedEncodingException e ) { e.printStackTrace () ; } } android.util.Log.d ( "BYTES", ( "" + ( "Chaitra".getBytes () ) ) ) ; employee.update () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { mCurrentIndex = ( 1 + ( mCurrentIndex ) ) % ( mStations.length ) ; mStartStopButton.setImageDrawable ( playDrawable () ) ; updateDropdownHeader ( mCurrentIndex ) ; playPressed = false; doneBuffering = false; if ( player.isPlaying () ) { player.stop () ; } player.release () ; setupPlayer () ; updateViews () ; clickPlayButton () ; } 
public static models.Rate create ( int score, java.lang.Long userId, java.lang.Long criteriaId, java.lang.Long projectId ) { if ( null == ( models.Rate.findByUserIdAndProjectIdAndCriteriaId ( userId, projectId, criteriaId ) ) ) { models.Rate rate = new models.Rate () ; rate.score = score; rate.userId = userId; rate.criteriaId = criteriaId; rate.projectId = projectId; rate.save () ; return rate; } return null; } 
@ java.lang.Override public void encodeData ( org.mobicents.protocols.asn.AsnOutputStream asnOs ) throws org.mobicents.protocols.ss7.cap.api.CAPException { if ( null == ( this.data ) ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field must not be null" ) ; if ( ( ( this.data.length ) < 3 ) && ( ( this.data.length ) > 11 ) ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field length must be from 3 to 11" ) ; asnOs.writeOctetStringData ( data ) ; } 
@ java.lang.Override @org.springframework.transaction.annotation.Transactional public org.orcid.jaxb.model.message.OrcidProfile updateOrcidBio ( org.orcid.jaxb.model.message.OrcidProfile updatedOrcidProfile ) { org.orcid.jaxb.model.message.OrcidProfile existingProfile = retrieveOrcidProfile ( updatedOrcidProfile.getOrcidIdentifier () .getPath () ) ; if ( null == existingProfile ) { return null; } orcidJaxbCopyManager.copyUpdatedBioToExistingWithVisibility ( existingProfile.getOrcidBio () , updatedOrcidProfile.getOrcidBio () ) ; existingProfile.setOrcidBio ( updatedOrcidProfile.getOrcidBio () ) ; return updateOrcidProfile ( existingProfile ) ; } 
private void updateLabels () { if ( "practice" == ( game.mode ) ) { gamePanel.setCurrentWordCount ( game.getWordCount () ) ; } gamePanel.setCurrentWordLabel ( game.currentWord, game.currentCorrectIndex ) ; if ( ( game.difficulty ) <= 2 ) { gamePanel.setCurrentTypedWordLabel ( game.currentTypedWord, game.currentIndex, game.currentCorrectIndex ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { try { hostServer = new CryptoServer () ; hostServer.start () ; setHostOptCompsTo ( false ) ; setStartCompsTo ( false ) ; repaint () ; setWinSizeTo ( hostScreenSize ) ; setHostCompsTo ( true ) ; } catch ( java.io.IOException e ) { GuiUtils.PopUpMessages.errorMsg ( ( " is already used!\nplease try using another port number." + ( "port " + ( CryptoServer.port ) ) ) ) ; hostPortFieldOpt.requestFocus () ; } } 
public void receiveCommit () { this.state = "commit"; logString ( "receivedCommit" ) ; readInput () ; retryCommit: try { java.lang.System.out.println ( ( ( this.state ) + "aboutToSendAck:" ) ) ; coordinator.receiveAck ( "commit", this.participantNum ) ; } catch ( java.lang.Exception e ) { logString ( "coordinator.receiveAck ( 'commit' ) Exception" ) ; lookupCoordinator () ; break retryCommit; } } 
public void run () { train.addHistory ( station.getName () , context.getGameLogic () .getPlayerManager () .getTurnNumber () ) ; java.lang.System.out.println ( ( ( context.getGameLogic () .getPlayerManager () .getTurnNumber () ) + ( ( "Added to history: passed " + ( station.getName () ) ) + " on turn " ) ) ) ; junctionFailure ( station ) ; collisions ( station ) ; obstacleCollision ( station ) ; } 
@ java.lang.Override public ru.javawebinar.topjava.model.UserMeal get ( int id, int userId ) { java.util.List<ru.javawebinar.topjava.model.UserMeal> userMeals = em.createNamedQuery ( UserMeal.GET_BY_ID, ru.javawebinar.topjava.model.UserMeal.class ) .setParameter ( 1, userId ) .setParameter ( 2, id ) .getResultList () ; if ( ! ( userMeals.isEmpty () ) ) { if ( userId == ( userMeals.get ( 0 ) .getUser () .getId () ) ) { return userMeals.get ( 0 ) ; } else return null; } return null; } 
public int paga_reale_mazziere () { fiches = ( fiches ) - ( puntata ) ; if ( 0 > ( fiches ) ) { perso = true; return ( puntata ) + ( ( fiches ) + ( puntata ) ) ; } return ( puntata ) * 2; } 
private void MouseButtonCallback ( long window, int button, int state, int arg3 ) { java.lang.System.out.println ( ( arg3 + ( ( ( button + " " ) + state ) + " " ) ) ) ; if ( button == ( org.lwjgl.glfw.GLFW.GLFW_MOUSE_BUTTON_1 ) ) { mouse_down = state == 1; toInteract = world.closestEntity ( current.getLocation () , 10.0F ) ; } } 
public java.lang.Long next () { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } long result = 0; while ( 0 == result ) { result = puzzleStorage.puzzles[cursor]; ( cursor ) ++; } return result; } 
@ java.lang.Override public void done ( com.parse.ParseUser user, com.parse.ParseException err ) { if ( null == user ) { android.util.Log.d ( "MyApp", "Uh oh. The user cancelled the Facebook login." ) ; } else if ( user.isNew () ) { android.util.Log.d ( "MyApp", "User signed up and logged in through Facebook!" ) ; getUserDetailFromFB () ; } else { startSaoLonguinho () ; android.util.Log.d ( "MyApp", "User logged in through Facebook!" ) ; } } 
@ java.lang.Override public void onTouchMove ( com.google.gwt.event.dom.client.TouchMoveEvent event ) { if ( ( ( initialY ) == 0 ) && ( ( initialX ) == 0 ) ) { com.google.gwt.dom.client.Touch touch = event.getTouches () .get ( 0 ) ; initialX = touch.getPageX () ; initialY = touch.getPageY () ; } com.gwtmobile.ui.client.utils.Utils.Console ( "touch move in tap recognizer" ) ; } 
private com.smanzana.dungeonmaster.utils.StepList toStepList () { com.smanzana.dungeonmaster.utils.StepList out = new com.smanzana.dungeonmaster.utils.StepList () ; for ( com.smanzana.dungeonmaster.ui.app.swing.editors.StepField.RangeSegment seg : segments ) { if ( null != seg ) out.addStep ( seg.getMax () , seg.getValue () ) ; } return out; } 
private void remap ( wyautl.core.Automaton automaton, int from, int to ) { for ( int i = 0; ( automaton.nStates () ) != i; ++i ) { java.lang.System.out.println ( ( "BEFORE: " + ( automaton.get ( i ) ) ) ) ; automaton.get ( i ) .remap ( from, to ) ; java.lang.System.out.println ( ( "AFTER: " + ( automaton.get ( i ) ) ) ) ; } } 
private static int calculateScore ( java.util.ArrayList<PairTime> pairTimes ) { int score = 0; for ( int i = 0; ( pairTimes.size () ) > i; i++ ) { score += pairTimes.get ( i ) .getPair () .getScore () ; } return score; } 
public void push ( org.arcueidarc.nekoarc.types.ArcObject obj ) { for ( ; ; ) { try { stack[ ( ( sp ) ++ ) ] = obj; return; } catch ( java.lang.ArrayIndexOutOfBoundsException e ) { stackgc () ; if ( ( stack.length ) <= ( sp ) ) throw new org.arcueidarc.nekoarc.NekoArcException ( "stack overflow" ) ; } } } 
private void updateJobOutput ( java.lang.String uuid, com.kylinolap.job2.dao.JobOutputPO output ) { try { if ( null != ( jobDao.getJobOutput ( uuid ) ) ) { jobDao.deleteJobOutput ( uuid ) ; } jobDao.addOrUpdateJobOutput ( uuid, output ) ; } catch ( com.kylinolap.job2.exception.PersistentException e ) { com.kylinolap.job2.service.DefaultJobService.logger.error ( ( "fail to update job output id:" + uuid ) , e ) ; throw new java.lang.RuntimeException ( e ) ; } } 
@ WebTests.BeforeTest ( groups = "InternetExplorer" ) public void setUpDriverIE ( java.lang.String baseUrl ) throws java.lang.InterruptedException { logger.info ( "[TEST STARTED]" ) ; logger.info ( ( ( operationSystem ) + "OS: " ) ) ; java.lang.System.setProperty ( "webdriver.ie.driver", java.lang.String.valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver.navigate () .to ( Data.ConfigProperties.getProperty ( "baseUrl" ) ) ; } 
static int minimaxDecision ( State state ) { int action = 0; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax.actions ( state ) ) { int temp = Minimax.minValue ( Minimax.result ( state, a ) ) ; if ( v < temp ) { action = a; } } return action; } 
public java.lang.Integer getPortForBridge ( java.lang.Integer nodeid ) { if ( null == nodeid ) return null; if ( m_macsOnSegment.isEmpty () ) { for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link.getNode () .getId () .intValue () ) == ( nodeid.intValue () ) ) return link.getBridgePort () ; } return null; } return null; } 
public Item removeLast () { Item item = array[last]; if ( null == item ) { throw new java.util.NoSuchElementException () ; } array[last] = null; ( last ) --; ( N ) --; subSize () ; return item; } 
public java.sql.Connection estaConnection () throws com.info.ghiny.examsystem.tools.ProcessException { java.sql.Connection con = null; try { java.lang.Class.forName ( curDriver ) ; con = java.sql.DriverManager.getConnection ( curAddress ) ; } catch ( java.lang.Exception err ) { throw new com.info.ghiny.examsystem.tools.ProcessException ( ( "\nPlease Consult Developer" + ( "FATAL: " + ( err.getMessage () ) ) ) , com.info.ghiny.examsystem.tools.ProcessException.FATAL_MESSAGE, com.info.ghiny.examsystem.tools.IconManager.WARNING ) ; } return con; } 
@ org.springframework.scheduling.annotation.Async private void start ( java.lang.String url ) { if ( ! ( com.prapps.app.core.controller.CoreController.keepAlive ) ) { com.prapps.app.core.controller.CoreController.keepAlive = true; while ( com.prapps.app.core.controller.CoreController.keepAlive ) { try { java.lang.System.out.println ( url ) ; new java.net.URL ( url ) .openConnection () ; java.lang.Thread.sleep ( ( 12 * ( ( 1000 * 60 ) * 60 ) ) ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } } } 
@ java.lang.Override public void onFailure ( retrofit2.Call<com.sdsmdg.bookshareapp.BSA.api.models.LocalBooks.BookList> call, java.lang.Throwable t ) { android.util.Log.d ( "GA_search", ( ( t.toString () ) + "searchOnFail " ) ) ; refreshLayout.setRefreshing ( false ) ; android.transition.TransitionManager.beginDelayedTransition ( rootView ) ; progressBar.setVisibility ( View.GONE ) ; innerLayout.getForeground () .setAlpha ( 0 ) ; l1.setVisibility ( View.GONE ) ; l2.setVisibility ( View.GONE ) ; } 
protected void draw ( android.graphics.Canvas canvas ) { android.util.Log.i ( "ttangliang", ( ( canvas.isHardwareAccelerated () ) + "isCanvasAcc = " ) ) ; if ( ( center ) == null ) { return; } switch ( style ) { case RECTANGLE: break; case CIRCLE: canvas.drawCircle ( center.x, center.y, radius, paint ) ; break; } } 
public org.joda.time.Duration getEstimatedTime ( @android.support.annotation.NonNull org.cook_e.data.Step s ) { org.cook_e.data.Objects.requireNonNull ( s, "step must not be null" ) ; int index = searchStep ( s.hashCode () ) ; if ( ( -1 ) != index ) { long time = ( ( long ) ( ( s.getTime () .getMillis () ) * ( org.cook_e.data.TimeLearner.weightList.get ( index ) .timeWeight ) ) ) ; return new org.joda.time.Duration ( time ) ; } return s.getTime () .toDuration () ; } 
public void sleep () { destroyInverseKinematicsRunnable () ; if ( null == ( scheduled ) ) { if ( us.ihmc.darpaRoboticsChallenge.networkProcessor.kinematicsToolboxModule.KinematicsToolboxModule.DEBUG ) us.ihmc.tools.io.printing.PrintTools.error ( this, "There is no task running." ) ; return; } scheduled.cancel ( true ) ; scheduled = null; activeMessageSource.set ( null ) ; } 
public void resetTo ( dyvil.tools.parsing.token.IToken token ) { this.tokens.jump ( token ) ; if ( 0 <= ( this.reportedMarkers ) ) { this.markers.remove ( this.reportedMarkers ) ; } if ( ( this.splitTokens ) == null ) { return; } for ( dyvil.tools.parsing.token.IToken splitToken : this.splitTokens ) { splitToken.prev () .setNext ( splitToken ) ; splitToken.next () .setPrev ( splitToken ) ; } this.splitTokens.clear () ; } 
@ java.lang.Override public void set ( java.lang.Boolean value ) { java.util.Collection<java.lang.Object> coll = container.get () ; if ( value ) { if ( null != coll ) { if ( ! ( coll.contains ( item ) ) ) { coll.add ( item ) ; } } else { container.set ( org.rapidoid.util.U.list ( item ) ) ; } } else { if ( null != coll ) { coll.remove ( item ) ; } } } 
public static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1; return ( java.lang.Math.pow ( 2.0, ( ( ( double ) ( octave ) ) - 1.0 ) ) ) * ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES[note] ) ; } 
void register ( com.kk.bus.Bus bus, java.lang.Object objectToRegister, java.util.Set<java.lang.reflect.Method> subscriberMethods, com.kk.bus.DeliveryContext deliveryContext ) { synchronized ( this ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers.get ( objectToRegister ) ; if ( null == eventDeliverer ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus, objectToRegister, deliveryContext ) ; mObjectDeliverers.put ( objectToRegister, eventDeliverer ) ; } eventDeliverer.setSubscriberMethods ( subscriberMethods ) ; } } 
public static void teleportPlayer ( org.bukkit.entity.Player player, org.bukkit.Location location, org.bukkit.plugin.java.JavaPlugin plugin ) { int backupTask; player.teleport ( location ) ; backupTask = plugin.getServer () .getScheduler () .scheduleAsyncDelayedTask ( plugin, new net.madmanmarkau.MultiHome.ChunkResendTask ( location ) , ( 20 * 1 ) ) ; if ( backupTask == ( -1 ) ) { net.madmanmarkau.MultiHome.Messaging.logSevere ( "Failed to create chunk resend schedule!", plugin ) ; } } 
protected void onRetrieveInstanceState ( android.os.Bundle savedInstanceState ) { if ( null != savedInstanceState ) { stats = savedInstanceState.getBundle ( "champData" ) ; } else { android.os.Bundle extras = getIntent () .getExtras () ; isHeader = extras.getBoolean ( "isHeader" ) ; stats = extras.getBundle ( "champData" ) ; } } 
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT; listener.setPlayerStates ( ( -1 ) , State.IS_WAIT ) ; if ( null == ( mediaPlayer ) ) initPlayer ( station.getSource () ) ; else { if ( mediaPlayer.isPlaying () ) { pause () ; } else { play () ; } } } 
public static void removeEmployee ( int id ) { StaffManager.Company.employeeList.remove ( ( id - 1 ) ) ; for ( int i = id - 1; ( StaffManager.Company.employeeList.size () ) > i; i++ ) { StaffManager.Company.employeeList.get ( i ) .setId ( ( i + 1 ) ) ; Employee.nextId -= 1; } } 
protected boolean isHovered ( int mouseX, int mouseY ) { return ( mouseY <= ( ( yPosition ) + ( height ) ) ) && ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) ; } 
public void onClick ( com.gwtext.client.widgets.Button button, com.gwtext.client.core.EventObject e ) { com.gwtext.client.widgets.tree.DefaultSelectionModel dsm = ( ( com.gwtext.client.widgets.tree.DefaultSelectionModel ) ( entityTreePanel.getSelectionModel () ) ) ; com.gwtext.client.widgets.tree.TreeNode selectedNode = dsm.getSelectedNode () ; if ( null != ( selectedNode.getAttributeAsObject ( "frame" ) ) ) { edu.stanford.bmir.protege.web.shared.xd.data.entityframes.AbstractOntologyEntityFrame selectedFrame = ( ( edu.stanford.bmir.protege.web.shared.xd.data.entityframes.AbstractOntologyEntityFrame ) ( selectedNode.getAttributeAsObject ( "frame" ) ) ) ; edWindow.loadFrameAndShow ( selectedFrame ) ; } } 
public void setValue ( fd2editor.BaseSeg.VALUE whichValue, int sValue ) { sValue = sValue & 134217727; if ( ( max ) < sValue ) { sValue = max; } if ( sValue < ( min ) ) { sValue = min; } switch ( whichValue ) { case DEFAULT: this.defaultValue = sValue; break; case RECOMMEND: this.recommendValue = sValue; break; case CURRENT: this.value = sValue; updateSegBytes () ; break; default: break; } } 
@ java.lang.Override public boolean removeUserFromResourcePermission ( java.lang.String policyId, java.lang.String groupName, java.lang.String accountName ) { java.lang.String[] policyIds = policyId.split ( ":" ) ; boolean userRemovedFromHDFSPolicy = this.hdfsAdminService.removeUserFromResourcePermission ( policyIds[0], groupName, accountName ) ; boolean userRemovedFromYarnPolicy = this.yarnCommonService.removeUserFromQueuePermission ( policyIds[1], groupName, accountName ) ; return userRemovedFromHDFSPolicy && userRemovedFromYarnPolicy; } 
@ java.lang.Override public java.util.List<com.hearthsim.util.HearthActionBoardPair> playTurn ( int turn, com.hearthsim.model.BoardModel board, com.hearthsim.util.factory.BoardStateFactoryBase factory ) throws com.hearthsim.exception.HSException { if ( ( ( ! ( baseNode.turn.data_.equals ( board ) ) ) && ( ( baseNode.turnNum ) != turn ) ) || ( ( baseNode ) == null ) ) { baseNode = new com.hearthsim.util.tree.MCTSTreeNode ( new com.hearthsim.util.tree.HearthTreeNode ( board ) , turn ) ; } com.hearthsim.util.tree.MCTSTreeNode retNode = baseNode.selectAction () ; board = retNode.turn.data_; return retNode.getTurnResults () ; } 
public int xToPixel ( double x, mesquite.lib.MesquiteChart chart ) { tempNum.setValue ( x ) ; int fieldWidth = chart.getFieldWidth () ; int margin = chart.getMargin () ; return ( ( tempNum.setWithinBounds ( minX, maxX, ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) + margin ) - ( chart.getXPixelBase () ) ; } 
public void cfgSlaves ( java.util.List<distrib.hadoop.host.Host> hosts ) { cmds.add ( cfgSlaves ( "cat /dev/null >" ) ) ; cmds.add ( cfgEnv ( ( "' >>" + ( "echo '" + ( distrib.hadoop.cluster.Spark.COMMENT_START ) ) ) ) ) ; for ( distrib.hadoop.host.Host s : hosts ) { cmds.add ( cfgSlaves ( ( ( "echo " + ( s.getHostName () ) ) + " >>" ) ) ) ; } cmds.add ( cfgEnv ( ( ( "echo '" + ( distrib.hadoop.cluster.Spark.COMMENT_END ) ) + "' >>" ) ) ) ; } 
private static java.lang.String prepareMessage ( java.lang.String messageCode ) { java.lang.String message; if ( 4 < ( java.lang.Integer.parseInt ( messageCode ) ) ) { message = "nowych orzeczeń"; } else if ( ( java.lang.Integer.parseInt ( messageCode ) ) > 1 ) { message = "nowe orzeczenia"; } else { message = "nowe orzeczenie"; } return message; } 
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( 0.0 >= volume ) { com.connectsdk.core.Util.postSuccess ( listener, null ) ; } else { float newVolume = ( ( float ) ( volume - 0.01 ) ) ; if ( newVolume < 0.0 ) newVolume = ( ( float ) ( 0.0 ) ) ; setVolume ( newVolume, listener ) ; com.connectsdk.core.Util.postSuccess ( listener, null ) ; } } 
public int[] getOutput ( short[] pcm, int sampleRate ) { if ( null == pcm ) return null; double[] spectrum = getSpectrum ( pcm ) ; final int amount = 100; int[] s = spectrumStrategy.excute ( spectrum, sampleRate ) ; for ( int i = 0; i < ( s.length ) ; i++ ) { s[i] = ( ( int ) ( ( spectrum[i] ) / 1000 ) ) ; } return s; } 
public void addFile ( java.lang.String fileName, org.sem8.ds.rest.resource.NodeResource node ) { java.util.List<org.sem8.ds.rest.resource.NodeResource> temp; temp = this.fileMap.get ( node ) ; if ( null != temp ) { temp.add ( node ) ; } else { temp = new java.util.ArrayList<org.sem8.ds.rest.resource.NodeResource> () ; temp.add ( node ) ; this.fileMap.put ( fileName, temp ) ; } } 
@ java.lang.Override public boolean checkImpl ( wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { for ( wjtoth.cyclicstablematching.Matching matching : matchings ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching, preferenceSystem ) ; if ( 0 == ( mathcingPS.size () ) ) { continue; } boolean isInternallyBlocked = mathcingPS.isInternallyBlocked () ; if ( isInternallyBlocked ) { return false; } java.util.List<java.util.List<java.lang.Integer>> potentialBlocks = mathcingPS.firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks, mathcingPS, preferenceSystem ) ) { return true; } } return false; } 
private java.lang.String _revert ( java.lang.String str ) { java.lang.String s = ""; int len = str.length () ; for ( int i = 0; len > i; i++ ) { s += str.charAt ( str.charAt ( ( ( len - 1 ) - i ) ) ) ; } return s; } 
@ java.lang.Override public void onCompletion ( org.apache.kafka.clients.producer.RecordMetadata metadata, java.lang.Exception exception ) { if ( null == exception ) { org.apache.kafka.common.TopicPartition tp = new org.apache.kafka.common.TopicPartition ( metadata.topic () , metadata.partition () ) ; offsets.put ( tp, metadata.offset () ) ; } else { org.apache.kafka.streams.processor.internals.RecordCollector.log.error ( "Error sending record: ", exception ) ; } } 
public void unaryOp ( int o ) { java.lang.String op; switch ( o ) { default: case org.squiddev.cobalt.Lua.OP_UNM: op = "neg"; break; case org.squiddev.cobalt.Lua.OP_NOT: op = "not"; break; case org.squiddev.cobalt.Lua.OP_LEN: op = "length"; break; } main.visitMethodInsn ( org.squiddev.cobalt.luajc.compilation.INVOKESTATIC, org.squiddev.cobalt.luajc.compilation.CLASS_OPERATION, op, ( ( TYPE_LUAVALUE ) + ( ( ( " ( " + ( TYPE_STATE ) ) + ( TYPE_LUAVALUE ) ) + " ) " ) ) , false ) ; } 
public java.util.Map<java.lang.Integer, int[]> getListOfCoordinates () { java.util.Map<java.lang.Integer, int[]> listOfCoordinates = new java.util.HashMap<> () ; int key = 0; for ( int y = 0; ( Game.Controllers.BoardController.BOARDSIZE ) > y; y++ ) { for ( int x = 0; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x++ ) { listOfCoordinates.put ( key, new int[] { x, y } ) ; key++; } } return listOfCoordinates; } 
private void processPicture ( javax.servlet.http.Part picture, com.lavalloisir.beans.User user ) { java.lang.String pictureName = null; try { pictureName = getFileName ( picture ) ; validPictureName ( pictureName ) ; writeFile ( picture, pictureName ) ; } catch ( java.lang.Exception e ) { setError ( com.lavalloisir.forms.RegistrationForm.FIELD_PICTURE, e.getMessage () ) ; } java.lang.String localPath = path.substring ( path.indexOf ( "/img" ) ) ; user.setPicture ( ( pictureName + ( "/Lavalloisir" + localPath ) ) ) ; } 
@ java.lang.Override public void replaceAllTextOnPage ( int pageNumber, java.lang.String textToAdd ) { if ( ( pageNumber >= ( this.pages.length ) ) || ( pageNumber < 0 ) ) { java.lang.System.out.println ( "Invalid page number." ) ; return; } if ( ( textToAdd == null ) || ( textToAdd.equals ( "" ) ) ) { java.lang.System.out.println ( "Invalid text for adding." ) ; return; } this.pages[ ( pageNumber - 1 ) ].deleteText () ; this.pages[ ( pageNumber - 1 ) ].addText ( textToAdd ) ; } 
public static org.openremote.model.syslog.SyslogLevel getLevel ( int level ) { if ( 1000 == level ) { return org.openremote.model.syslog.SyslogLevel.ERROR; } else if ( level == 900 ) { return org.openremote.model.syslog.SyslogLevel.WARN; } else if ( ( level == 800 ) || ( level == 700 ) ) { return org.openremote.model.syslog.SyslogLevel.INFO; } else if ( level <= 500 ) { return org.openremote.model.syslog.SyslogLevel.DEBUG; } return null; } 
protected static org.matheclipse.core.interfaces.IExpr sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1; ( resultList.size () ) > i; i++ ) { if ( resultList.get ( i ) .isList () ) { org.matheclipse.core.eval.EvalAttributes.sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList.get ( i ) ) ) ) ; } } return resultList; } 
@ java.lang.Override public T invertedCumulativeProbability ( double cumulativeProbability ) { com.google.common.base.Preconditions.checkArgument ( ( ( cumulativeProbability <= 1.0 ) && ( 0 < cumulativeProbability ) ) ) ; long card = domain.cardinality () ; long min = domain.ordinal ( domain.min () ) ; long ordinal = ( ( long ) ( java.lang.Math.ceil ( ( ( ( cumulativeProbability * card ) + min ) - 1 ) ) ) ) ; return domain.value ( ordinal ) ; } 
private void writeData () { try ( java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( new java.io.FileOutputStream ( file, true ) , "UTF-8" ) ) ) { writer.write ( ( ( timeSinceStartup.getText () ) + ( ( de.neffez.timetrack.util.DateUtil.getTodayFormatted ( TimeTrackConstants.DE_DATE ) ) + " " ) ) ) ; appendTextArea ( "Data written. You may exit now." ) ; } catch ( java.io.IOException e ) { appendTextArea ( ( "Error writing the data: " + ( e.getMessage () ) ) ) ; e.printStackTrace () ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ! ( o instanceof org.snt.inmemantlr.tree.AstNode ) ) return false; org.snt.inmemantlr.tree.AstNode n = ( ( org.snt.inmemantlr.tree.AstNode ) ( o ) ) ; return ( this.children.equals ( n.children ) ) && ( ( n.ntype.equals ( this.ntype ) ) && ( n.label.equals ( this.label ) ) ) ; } 
private java.lang.String readDir ( org.jdom2.Document doc, java.lang.String[] files, java.lang.String dirName ) { if ( null != files ) { java.util.Arrays.sort ( files ) ; } java.lang.String eDir = dirName; org.jdom2.Element p = buildElement ( files, dirName, eDir ) ; doc.getRootElement () .addContent ( p ) ; return p.getName () ; } 
@ java.lang.Override public void onPageScrolled ( int position, float positionOffset, int positionOffsetPixels ) { int count = ( ( listener ) instanceof com.heinrichreimersoftware.materialintro.view.FadeableViewPager.OnOverscrollPageChangeListener ) ? com.heinrichreimersoftware.materialintro.view.FadeableViewPager.super.getAdapter () .getCount () : getAdapter () .getCount () ; listener.onPageScrolled ( java.lang.Math.min ( position, count ) , ( count > position ? positionOffset : 0 ) , ( count > position ? positionOffsetPixels : 0 ) ) ; } 
public void removeTask ( net.sf.memoranda.Task task ) { java.lang.String parentTaskId = task.getParentID () ; if ( null != parentTaskId ) { net.sf.memoranda.Task parentNode = getTaskElement ( parentTaskId ) ; parentNode.removeSubTask ( task ) ; } taskList.remove ( task.getID () ) ; rootTaskList.remove ( task ) ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { int startOption = START_NOT_STICKY; if ( null == intent ) { return startOption; } int mapID = intent.getIntExtra ( appConstants.DOWNLOAD_INTENT_NAME, 0 ) ; if ( activeDownloadsList[mapID] ) { com.noveogroup.android.log.Log.d ( "Duplicate download request for the same map type" ) ; return startOption; } activeDownloadsList[mapID] = true; downloadMap ( mapID ) ; return startOption; } 
public void verifyEndpointResponseNotEmpty () { try { java.lang.String string = new com.abhelly.builditbigger.EndpointsAsyncTask () .execute ( getContext () ) .get () ; assertNotNull ( string ) ; assertTrue ( ( 0 < ( string.length () ) ) ) ; } catch ( java.lang.InterruptedException | java.util.concurrent.ExecutionException e ) { e.printStackTrace () ; } } 
@ java.lang.Override public void display ( java.awt.Graphics g ) { java.lang.System.out.println ( isHighlighted () ) ; if ( isHighlighted () ) { g.setColor ( java.awt.Color.green ) ; g.drawRect ( x, ( ( ( ( totalCards ) * ( Card.height ) ) / 2 ) + ( y ) ) , Card.width, Card.height ) ; setHighlight ( false ) ; } else { g.setColor ( java.awt.Color.black ) ; } totalCards = 0; stackDisplay ( g, top () ) ; } 
protected boolean isInBounds ( int x, int y ) { if ( ( y <= ( this.height ) ) && ( ( ( x >= 0 ) && ( x <= ( this.width ) ) ) && ( y >= 0 ) ) ) { return true; } return false; } 
@ java.lang.Override public boolean retryFurther ( java.lang.Long offset ) { org.apache.storm.kafka.ExponentialBackoffMsgRetryManager.MessageRetryRecord record = this.records.get ( offset ) ; return ! ( ( ( this.retryLimit ) <= ( record.retryNum ) ) && ( ( ( record != null ) && ( ( this.retryLimit ) > 0 ) ) && ( this.waiting.contains ( record ) ) ) ) ; } 
public void addTravel ( travelAgencyModel.Travel travel ) { if ( null != ( client ) ) { java.util.HashMap<java.lang.String, java.lang.Object> parameters = new java.util.HashMap<> () ; parameters.put ( CommandConstants.PARAM_TRAVEL, travel ) ; client.sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_TRAVEL, parameters ) ) ; } else { travelsList.addTravel ( travel ) ; saveFileTravelsList () ; } } 
private org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name, boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( null == signature ) return null; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper.createResourceURI ( signature ) ; if ( ( resourceURI.segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature, resourceURI ) ; } else { return findObjectType ( signature, resourceURI, traverseNestedTypes ) ; } } 
public static boolean generate () { java.util.List<com.sheepit.client.hardware.gpu.GPUDevice> gpus = new com.sheepit.client.hardware.gpu.nvidia.Nvidia () .getGpus () ; if ( null != gpus ) { com.sheepit.client.hardware.gpu.GPU.devices.addAll ( gpus ) ; } gpus = new com.sheepit.client.hardware.gpu.opencl.OpenCL () .getGpus () ; if ( null != gpus ) { com.sheepit.client.hardware.gpu.GPU.devices.addAll ( gpus ) ; } return true; } 
public boolean loadDBProperties () { java.lang.System.out.println ( ( "\"" + ( "Load \"" + ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ) ) ) ; java.io.InputStream input = null; input = getClass () .getClassLoader () .getResourceAsStream ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ; try { this.dbProperties.load ( input ) ; } catch ( java.io.IOException e ) { java.lang.System.out.println ( ( ( "Failed to load \"" + ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ) + "\"" ) ) ; e.printStackTrace () ; return false; } return true; } 
@ java.lang.Override public void act () { if ( ( canMove () ) && ( ( ( z ) <= 2 ) && ( ( steps ) < ( sideLength ) ) ) ) { move () ; ( steps ) ++; } else { steps = 0; ( z ) ++; if ( ( z ) == 1 ) { setDirection ( Location.SOUTHWEST ) ; } else if ( ( z ) == 2 ) { setDirection ( Location.EAST ) ; } } } 
@ java.lang.Override public void preUpdate () { if ( this.isMoving ) { java.util.ArrayList<android.graphics.Rect> spriteSequence = dirSpriteMap.get ( curDirection ) ; curSpriteIndex = ( 1 + ( curSpriteIndex ) ) % ( spriteSequence.size () ) ; com.example.vincentzhang.Sprite.Vector2D newPos = this.getSpritePos () .applyDir ( this.getCurDirection () , this.getMoveSpeed () ) ; this.setSpritePos ( newPos ) ; com.example.vincentzhang.Sprite.CollideDetector.setDirtyFlag ( true ) ; } } 
private boolean needsRun () { long maxAge = ( java.lang.System.currentTimeMillis () ) - ( ( server.config.properties.getInt ( "c10tMins" ) ) * ( simpleserver.thread.AutoRun.MILLISECONDS_PER_MINUTE ) ) ; return ( ( server.config.properties.contains ( "c10tArgs" ) ) && ( maxAge > ( lastRun ) ) ) && ( ( server.numPlayers () ) > 0 ) ; } 
private java.lang.String extractTag ( java.lang.String noteContent ) { java.lang.String[] contentWords = noteContent.split ( " " ) ; java.lang.String label = ""; for ( java.lang.String word : contentWords ) { if ( ( ( word.length () ) > 1 ) && ( word.startsWith ( "#" ) ) ) { label = word.substring ( 1 ) ; break; } } return label; } 
private void register ( java.nio.file.Path dir ) throws java.io.IOException { java.nio.file.WatchKey key = dir.register ( watcher, java.nio.file.StandardWatchEventKinds.ENTRY_CREATE, java.nio.file.StandardWatchEventKinds.ENTRY_DELETE, java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY ) ; if ( trace ) { java.nio.file.Path prev = keys.get ( key ) ; if ( null == prev ) { java.lang.System.out.format ( "register: %s\n", dir ) ; } else { if ( ! ( dir.equals ( prev ) ) ) { java.lang.System.out.format ( "update: %s -> %s\n", prev, dir ) ; } } } keys.put ( key, dir ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; switch ( requestCode ) { case REQ_CODE_SPEECH_INPUT: { if ( ( null != data ) && ( resultCode == ( RESULT_OK ) ) ) { java.util.ArrayList<java.lang.String> result = data.getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; txtSpeechInput.setText ( result.get ( 0 ) ) ; callPuter ( result.get ( 0 ) ) ; } break; } } } 
public boolean isAllValid ( sss.domain.Product product ) { return ( isPricePositive ( product ) ) && ( ( ( ( isProductUnique ( product ) ) && ( isProductCodeValid ( product ) ) ) && ( isProductNameValid ( product ) ) ) && ( isCostPricePositive ( product ) ) ) ; } 
public boolean move ( int destX, int destY ) { if ( isFirst = true ) { if ( ( ( this.x ) + 2 ) == destX ) { isFirst = false; return true; } } if ( destX == ( ( this.x ) + 1 ) ) { isFirst = false; return true; } return false; } 
public void isAddStepsValid ( java.lang.String value ) { if ( 0 < ( value.length () ) ) { java.lang.String regex = "-?[\\d]+"; validate ( value, regex, addSteps ) ; if ( ! ( value.matches ( regex ) ) ) { errorAddSteps.setVisible ( true ) ; } if ( ( java.lang.Integer.valueOf ( value ) ) >= 0 ) { errorAddSteps.setVisible ( false ) ; } } } 
public java.lang.Object[][] toMultiArrayNumber ( com.softserve.edu.atqc.data.apps.ApplicationSources applicationSources, java.util.List<?> list ) { java.lang.System.out.println ( "toMultiArrayNumber Start" ) ; java.lang.Object[][] array = toMultiArrayNumber ( 2, list ) ; for ( int i = 0; ( list.size () ) > i; i++ ) { array[i][0] = applicationSources; } return array; } 
private void localServicePermissionHandler ( int[] grantResults ) { if ( 0 == ( grantResults.length ) ) { return; } for ( int i : grantResults ) { if ( ( grantResults[i] ) == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { return; } } checkPermissionToLocalService () ; } 
private void handlePaint () { if ( ! ( _updateThumb ) ) return; final org.eclipse.swt.graphics.Rectangle rect = _table.getVisibleScrollableCells () ; final int max = ( ( _scroll.getMaximum () ) - ( _scroll.getMinimum () ) ) - 1; final int tWidth = java.lang.Math.min ( java.lang.Math.max ( 1, rect.width ) , max ) ; _scroll.setThumb ( tWidth ) ; _scroll.setEnabled ( ( max != tWidth ) ) ; } 
public static void toh ( int n, char src, char dest, char aux ) { if ( 0 < n ) { com.datastructure.stack.problems.TowersOfHanoi.toh ( ( n - 1 ) , src, dest, aux ) ; java.lang.System.out.println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi.toh ( ( n - 1 ) , dest, aux, src ) ; } } 
public void undoAddedEvent ( carelender.model.EventList eventList ) { for ( int i = 0; ( events.size () ) > i; i++ ) { for ( carelender.model.Event eventObj : eventList ) { if ( ( events.get ( i ) .getUid () ) == ( eventObj.getUid () ) ) { events.remove ( i ) ; } } } saveToFile ( "events.dat", events ) ; } 
@ java.lang.Override public void run () { if ( ( mDownloadProgressDialog.isShowing () ) && ( ( mDownloadProgressDialog ) != null ) ) { mDownloadProgressDialog.dismiss () ; mDownloadProgressDialog = null; } if ( ! ( task.isCanceled () ) ) { if ( task instanceof com.door43.translationstudio.tasks.GetLibraryUpdatesTask ) { } else { new android.app.AlertDialog.Builder ( this ) .setTitle ( R.string.success ) .setIcon ( R.drawable.ic_done_black_24dp ) .setMessage ( R.string.download_complete ) .setCancelable ( false ) .setPositiveButton ( R.string.label_ok, null ) .show () ; } } } 
public int getPartyIDFromSenderInvite ( int playerID ) { java.util.ArrayList<session.Invite> myInvites = player.getInvites () ; int partyID = 0; for ( int i = 0; ( myInvites.size () ) > i; i++ ) { if ( playerID == ( myInvites.get ( i ) .getSenderID () ) ) { partyID = myInvites.get ( i ) .getPartyID () ; break; } } java.lang.System.out.println ( partyID ) ; return partyID; } 
private void evaluateNotification ( int idx, java.lang.String prayId, java.lang.String prayName, java.util.Date date ) { cancelNotification ( idx ) ; cancelNotification ( ( 10 + idx ) ) ; long delay = ( date.getTime () ) - ( new java.util.Date () .getTime () ) ; sendPrayAlarm ( idx, prayId, prayName, delay ) ; } 
public void continuouslyDiscoverServices () { if ( false == ( serviceDiscoveryRegistered ) ) { android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true; } else { android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log.w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Calling discover and submitting first discover task" ) ; continueDiscovering = true; discoverTasks = new java.util.ArrayList<> () ; discoverServices () ; submitDiscoverTask () ; } } } 
public boolean isSparkStreamingJoblet () { boolean isSparkStreamingJoblet = false; if ( org.talend.core.GlobalServiceRegister.getDefault () .isServiceRegistered ( org.talend.core.ui.ISparkJobletProviderService.class ) ) { org.talend.core.ui.ISparkStreamingJobletProviderService sparkJobletService = ( ( org.talend.core.ui.ISparkStreamingJobletProviderService ) ( org.talend.core.GlobalServiceRegister.getDefault () .getService ( org.talend.core.ui.ISparkStreamingJobletProviderService.class ) ) ) ; if ( null != sparkJobletService ) { isSparkStreamingJoblet = sparkJobletService.isSparkStreamingJobletComponent ( this ) ; } } return isSparkStreamingJoblet; } 
@ java.lang.Override public void done ( com.parse.ParseUser parseUser, com.parse.ParseException e ) { if ( null == parseUser ) { } else if ( parseUser.isNew () ) { getFacebookInfo () ; } else { android.util.Log.d ( com.trytara.tara.LoginActivity.TAG, ( "CURRENT USER: " + ( parseUser.toString () ) ) ) ; finish () ; } } 
private void stopBluetoothReader () { if ( null != ( mConnectedThread ) ) mConnectedThread.write ( "2" ) ; if ( ( ( btSocket ) != null ) && ( btSocket.isConnected () ) ) { try { btSocket.close () ; } catch ( java.io.IOException e ) { } } } 
public void changeDragonRight ( android.view.View view ) { if ( ( ( dragons.size () ) - 1 ) == ( currDragon ) ) { currDragon = 0; addAccessory ( dragons.get ( currDragon ) ) ; } else { currDragon += 1; addAccessory ( dragons.get ( currDragon ) ) ; } checkAchievements () ; } 
public void markPhaseTable2 () { java.lang.String command = forall.HelpA.getValueSelectedRow ( mCRecipe.jTableSequnece1, "Command Name" ) ; if ( null == command ) { return; } if ( command.equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double.parseDouble ( forall.HelpA.getValueSelectedRow ( mCRecipe.jTableSequnece1, "Cmd Parameter" ) ) ) ) ; java.util.LinkedList<java.lang.Integer> list = getRowsWithGivenPhase ( phase, mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list, mCRecipe.jTableSequnce2, java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } 
public void addCampaign ( java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign.getInstance () .db.getCampaign ( campId ) ; if ( null == camp ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } 
public void getMiddle () { int middle = ( size ) / 2; if ( 0 != ( ( size ) % 2 ) ) middle = middle + 1; if ( ( isEmpty () ) == false ) { Node temp = head; int i = 1; while ( i != middle ) { temp = temp.getNext () ; i = i + 1; } java.lang.System.out.println ( temp.next.getData ( temp ) ) ; } else { java.lang.System.out.println ( "No data exist" ) ; } } 
private static java.lang.String getKindForAliasClass ( java.lang.String simpleName ) { for ( java.util.Map.Entry<java.lang.String, java.lang.String> entry : org.ballerinalang.composer.service.workspace.tools.ModelGenerator.alias.entrySet () ) { if ( ( entry.getValue () ) == simpleName ) { return entry.getKey () ; } } throw new java.lang.AssertionError ( ( "Undefined entry :" + simpleName ) ) ; } 
public void addBus ( travelAgencyModel.Bus bus ) { if ( null != ( client ) ) { java.util.HashMap<java.lang.String, java.lang.Object> parameters = new java.util.HashMap<> () ; parameters.put ( CommandConstants.PARAM_BUS, bus ) ; client.sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_BUS, parameters ) ) ; } else { busList.addBus ( bus ) ; } } 
public boolean checkWin ( boolean xTurn, int column ) { boolean horizontal = 4 <= ( checkWinHorizontal ( xTurn, column ) ) ; boolean vertical = ( checkWinVertical ( xTurn, column ) ) >= 4; boolean diagonal = ( checkWinDiagonal ( xTurn, column ) ) >= 4; return ( horizontal || vertical ) || diagonal; } 
@ org.springframework.web.bind.annotation.RequestMapping ( path = { ( SET_ID_PATH ) + ( ( "/" + ( ENTITY_DATA ) ) + "/" ) }, method = org.springframework.web.bind.annotation.RequestMethod.POST, produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE, com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable<com.google.common.collect.SetMultimap<org.apache.olingo.commons.api.edm.FullQualifiedName, java.lang.Object>> loadEntitySetData ( @org.springframework.web.bind.annotation.PathVariable ( value = SET_ID ) java.util.UUID entitySetId, @org.springframework.web.bind.annotation.RequestBody ( required = false ) com.dataloom.data.requests.EntitySetSelection req, @org.springframework.web.bind.annotation.RequestParam ( value = FILE_TYPE, required = false ) com.dataloom.datastore.data.controllers.FileType fileType, javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController.setContentDisposition ( response, entitySetId.toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController.setDownloadContentType ( response, fileType ) ; return loadEntitySetData ( entitySetId, req, fileType ) ; } 
@ java.lang.Override public void onAdFailedToLoad ( int error ) { android.util.Log.d ( com.samcodes.admob.BannerListener.TAG, ( ( com.samcodes.admob.AdMobExtension.getErrorReason ( error ) ) + "onBannerFailedToLoad: " ) ) ; android.util.Log.d ( com.samcodes.admob.BannerListener.TAG, ( "Hiding banner with id " + ( id ) ) ) ; com.samcodes.admob.AdView view = com.samcodes.admob.AdMobExtension.getBannerViewForUnitId ( id ) ; view.setVisibility ( View.INVISIBLE ) ; com.samcodes.admob.AdMobExtension.getLayout () .removeView ( view ) ; com.samcodes.admob.AdMobExtension.getLayout () .bringToFront () ; com.samcodes.admob.AdMobExtension.callHaxe ( "onBannerFailedToLoad", new java.lang.Object[] { id } ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/addCommodity", method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public java.lang.String addCommodity ( @org.springframework.web.bind.annotation.RequestParam ( value = "purchaseCaseId", required = true ) java.lang.String purchaseCaseId, @org.springframework.web.bind.annotation.RequestParam ( value = "commodityIds", required = true ) java.lang.String[] commodityIds ) { java.lang.Integer[] ids = new java.lang.Integer[commodityIds.length]; for ( int i = 0; ( commodityIds.length ) > i; i++ ) { ids[i] = java.lang.Integer.valueOf ( commodityIds[i] ) ; } purchaseCaseService.addPurchaseCaseIdToCommoditys ( purchaseCaseId, ids ) ; return com.jersey.purchaseCase.controller.PurchaseCaseController.REDIRECT_ADD_COMMODITY.replace ( "{id}", purchaseCaseId.toString () ) ; } 
private boolean checkIfAllTilesAreInPlace () { for ( int i = 0; ( currentField.length ) > i; i++ ) { for ( int j = 0; j < ( currentField[i].length ) ; j++ ) { if ( currentField[i][j][0].equals ( solutionField[i][j][0] ) ) return false; } } return true; } 
private boolean isContains ( java.lang.String address, java.lang.String fromRule ) { java.lang.String[] fromRules = fromRule.split ( ";" ) ; for ( int i = 0; ( fromRules.length ) > i; i++ ) { if ( address.contains ( fromRules[i] ) ) { return true; } } return false; } 
public java.math.BigDecimal getMainContractPrice ( com.ersoft.web.domain.business.contract.MainContract mainContract ) { java.math.BigDecimal price = java.math.BigDecimal.ZERO; if ( null != mainContract ) { java.util.List<com.ersoft.web.domain.business.contract.SubContract> subs = subContractService.findActiveAll ( com.ersoft.web.service.business.SubContractPredicates.mainContractPredicate ( mainContract ) , new org.springframework.data.domain.Sort ( org.springframework.data.domain.Sort.Direction.DESC, "createdDate" ) ) ; for ( com.ersoft.web.domain.business.contract.SubContract sub : subs ) { price.add ( getSubContractPrice ( sub ) ) ; } } return price; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( null == obj ) return false; if ( ! ( obj instanceof cz.dd4j.simulation.data.dungeon.elements.places.Corridor ) ) return false; cz.dd4j.simulation.data.dungeon.elements.places.Corridor other = ( ( cz.dd4j.simulation.data.dungeon.elements.places.Corridor ) ( obj ) ) ; return ( ( cz.dd4j.utils.Safe.equals ( room1, other.room1 ) ) && ( cz.dd4j.utils.Safe.equals ( room2, other.room2 ) ) ) || ( ( cz.dd4j.utils.Safe.equals ( room1, other.room2 ) ) && ( cz.dd4j.utils.Safe.equals ( room1, other.room2 ) ) ) ; } 
public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { synchronized ( com.sb.elsinore.LaunchControl.tempList ) { java.util.Iterator<com.sb.elsinore.Temp> iterator = com.sb.elsinore.LaunchControl.tempList.iterator () ; com.sb.elsinore.Temp tTemp; while ( iterator.hasNext () ) { tTemp = iterator.next () ; if ( ( tTemp.getProbe () .equalsIgnoreCase ( name ) ) || ( tTemp.getName () .equalsIgnoreCase ( name ) ) ) { return tTemp; } } } return null; } 
public void berekening () { invoer = java.lang.Integer.parseInt ( tekstvak.getText () ) ; if ( ( ( invoer ) <= 3 ) && ( ( invoer ) >= 1 ) ) { stenen -= invoer; beurten = true; } else if ( ( ( 3 < ( invoer ) ) || ( ( invoer ) > 5 ) ) || ( ( invoer ) < 0 ) ) { error () ; } } 
@ java.lang.Override public void run () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int column = 0; ( headerValues.length ) > column; column++ ) { tvDataset.getColumns () .add ( tu.createColumn ( column, headerValues[column] ) ) ; } } 
private void clearInMemoryJobInfos ( int jobId ) { java.util.List<cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID> clearedTasks = com.google.common.collect.Lists.newArrayList () ; java.util.LinkedList<cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID> tasks = managedJobToTaskList.remove ( jobId ) ; for ( cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID id : tasks ) { managedTaskIdToInfos.remove ( id ) ; clearedTasks.add ( id ) ; } managedJobIdToInfos.remove ( jobId ) ; cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.LOG.info ( ( clearedTasks + ( ( "In-memory state purged: jobId=" + jobId ) + ", tasks=" ) ) ) ; } 
protected java.util.ArrayList<pbs.parser.Statement> stmtList () { java.util.ArrayList<pbs.parser.Statement> stmtlist = new java.util.ArrayList<pbs.parser.Statement> () ; pbs.parser.Statement s = nextStatement () ; while ( null != s ) { stmtlist.add ( s ) ; s = nextStatement () ; } match ( pbs.parser.LevelParser.END ) ; return stmtlist; } 
public dna.FastqRecord readRecord () throws dna.RecordFormatException, java.io.IOException { java.lang.String line = theBufferedReader.readLine () ; if ( null == line ) { return null; } java.lang.String line1 = theBufferedReader.readLine () ; java.lang.String line2 = theBufferedReader.readLine () ; java.lang.String line3 = theBufferedReader.readLine () ; dna.FastqRecord output = new dna.FastqRecord ( line1, line2, line3 ) ; return output; } 
public java.util.ArrayList<graph.Vector> getVectorsPointingAway ( graph.Point p ) { java.util.ArrayList<graph.Vector> vs = new java.util.ArrayList<> () ; for ( int i = 0; ( getEdges () .size () ) > i; i++ ) { if ( ( getEdges () .get ( i ) .getP1 () ) == p ) { vs.add ( getEdges () .get ( i ) ) ; } } return vs; } 
public void initializeComponents () { componentSelectionPanel.clear () ; for ( int i = 0; ( data.componentIdList.size () ) > i; i++ ) { com.google.gwt.user.client.ui.HTML item = new com.google.gwt.user.client.ui.HTML ( data.componentIdList.get ( i ) ) ; item.setStyleName ( "wmt-ComponentSelectionMenuItem" ) ; item.addStyleDependentName ( "missing" ) ; componentSelectionPanel.add ( item ) ; } if ( ( data.componentIdList.size () ) > ( edu.colorado.csdms.wmt.client.Constants.SCROLL_THRESHOLD ) ) { scroller.setSize ( Constants.MENU_WIDTH, Constants.MENU_HEIGHT ) ; } } 
public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture.ecrireStringln ( flux, ( etiquette + ";iffaux " ) , ( ( indent ) + 1 ) ) ; compiler.Ecriture.ecrireStringln ( flux, "pop ax", ( ( indent ) + 1 ) ) ; compiler.Ecriture.ecrireStringln ( flux, "cmp ax,FALSE", ( ( indent ) + 1 ) ) ; compiler.Ecriture.ecrireStringln ( flux, ( "je " + etiquette ) , ( ( indent ) + 1 ) ) ; } 
public void check () { if ( ( password.equals ( "password" ) ) && ( name.equals ( names[0] ) ) ) { launchActivity () ; } if ( ! ( name.equals ( names[0] ) ) ) { Notification.setText ( "Invalid User" ) ; } else { Notification.setText ( "Wrong Pass" ) ; pass.setText ( "" ) ; } return; } 
@ java.lang.Override public void doIt ( com.github.oxo42.stateless4j.transitions.Transition<com.couchbase.lite.replicator.ReplicationState, com.couchbase.lite.replicator.ReplicationTrigger> transition ) { com.couchbase.lite.util.Log.v ( Log.TAG_SYNC, ( ( transition.getDestination () ) + ( ( "[onExit () ] " + ( transition.getSource () ) ) + " => " ) ) ) ; goOnline () ; notifyChangeListenersStateTransition ( transition ) ; } 
public void crossover ( ga.Genes genes ) { java.util.Random rand = new java.util.Random () ; for ( int i = 0; ( genes.getNum () ) > i; i += 2 ) { int cuttingPoint = ( rand.nextInt ( ( ( genes.getDim () ) - 1 ) ) ) + 1; ga.Gene.shiftDNASection ( genes.getAt ( i ) , genes.getAt ( ( i + 1 ) ) , cuttingPoint, genes.getDim () ) ; } } 
public void targetSizeCheck ( shared.logic.support.action.Action a ) { if ( ( ( a.getTargets () .size () ) > ( jailedTargets.size () ) ) && ( ( a.ability ) == ( shared.roles.Jailor.EXECUTE_ ) ) ) Exception ( "Cannot execute someone that isn't jailed" ) ; if ( ( getPerceivedCharges () ) != ( shared.logic.support.rules.Rules.UNLIMITED ) ) if ( ( a.getTargets () .size () ) > ( getPerceivedCharges () ) ) Exception ( "Not enough executions for that many targets" ) ; } 
public java.lang.String resolveIssue () { Ticket current = queue.removeMin () ; current.setSolution ( solutions[current.getPriority () ] ) ; if ( true == ( current.resolved ) ) { java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current.getSolution () ) ; } return q; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) return true; if ( ! ( obj instanceof iguana.utils.input.Input ) ) return false; iguana.utils.input.Input other = ( ( iguana.utils.input.Input ) ( obj ) ) ; return java.util.Arrays.equals ( characters, other.characters ) ; } 
private void DecideWhereToGoBackTo () { if ( null != ( motive ) ) { if ( ( motive.equals ( "pre-trip" ) ) || ( motive.equals ( "log-in" ) ) ) { startLogOutService () ; navigateToLogin () ; } } else { java.lang.String newStatus = _statusToDisplay; storeStatusInMemory ( newStatus ) ; navigateToMainMenu ( newStatus ) ; } } 
public static void addYearCredits ( final java.util.Map<org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod, java.math.BigDecimal> result, final org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod curricularPeriod, final java.math.BigDecimal credits ) { java.math.BigDecimal creditsYear = result.get ( curricularPeriod ) ; if ( null != creditsYear ) { creditsYear = creditsYear.add ( credits ) ; } else { result.put ( curricularPeriod, credits ) ; } } 
@ java.lang.SuppressWarnings ( value = "DefaultLocale" ) private static boolean checkExtension ( java.lang.String path, java.lang.String[] extensions ) { for ( int i = 0; ( extensions.length ) > i; i++ ) { if ( path.toLowerCase () .endsWith ( extensions[i] ) ) { return true; } } return false; } 
public boolean isPrime ( int number ) { if ( ( ( number % 2 ) == 0 ) || ( number < 2 ) ) { return false; } if ( number == 2 ) { return true; } for ( int oddNumber = 3; oddNumber <= ( java.lang.Math.sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false; } } return true; } 
@ java.lang.Override public void onScrollStateChanged ( android.widget.AbsListView view, int scrollState ) { switch ( scrollState ) { case AbsListView.OnScrollListener.SCROLL_STATE_IDLE: if ( ( ( view.getCount () ) - 1 ) == ( view.getLastVisiblePosition () ) ) { zhenghaiqiang.com.wynews.utils.Util.toast ( mActivity, "到底" ) ; ( page ) ++; totalUrl = ( baseUrl ) + ( getPageValue ( page ) ) ; getData () ; } break; } } 
public void setOptions ( java.util.ArrayList<gui.Button> options, entity.AbstractEntity entity ) { if ( null != options ) { for ( int i = 0; i < ( options.size () ) ; i++ ) { options.get ( i ) .setSize ( 30, 30 ) ; } } calledby = entity; this.options = options; } 
public Item removeFirst () { if ( null != ( first.next ) ) { Deque<Item>.Node node = first; first = first.next; first.previous = null; ( size ) --; return node.item; } else if ( ( first ) != null ) { Deque<Item>.Node node = first; first = null; last = null; ( size ) --; return node.item; } else { throw new java.util.NoSuchElementException () ; } } 
private void animateIn () { android.support.v7.widget.ActionMenuView menuView = getMenuView () ; for ( int i = 0, count = menuView.getChildCount () ; count > i; i++ ) { android.view.View child = menuView.getChildAt ( i ) ; android.view.animation.Animation anim = mAnimator.getInAnimation ( child, i ) ; if ( anim != null ) child.startAnimation ( anim ) ; } } 
@ java.lang.Override public boolean isDirty ( com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean ) { if ( null == ( buddyInstructionEditText ) ) { return false; } else if ( missionBean == null ) { return false; } else { return ! ( buddyInstructionEditText.getText () .toString () .equals ( missionBean.getBuddyInstruction () ) ) ; } } 
public void applyStrength ( int strength ) { if ( 0 == strength ) strengthButton0.setSelected ( true ) ; else if ( strength == 1 ) strengthButton1.setSelected ( true ) ; else if ( strength == 2 ) strengthButton2.setSelected ( true ) ; else if ( strength == 3 ) strengthButton3.setSelected ( true ) ; else if ( strength == 4 ) strengthButton4.setSelected ( true ) ; else strengthRadioGroup.clearSelection () ; } 
@ java.lang.Override public void done ( java.util.List<com.example.user.simpleui.Order> objects, com.parse.ParseException e ) { if ( null == e ) { com.example.user.simpleui.Order.pinAllInBackground ( "Order", objects ) ; } else { com.example.user.simpleui.Order.getQuery () .fromLocalDatastore () .findInBackground ( callback ) ; } callback.done ( objects, e ) ; } 
private void validateHeader ( final org.milyn.csv.CSVReader reader ) throws java.io.IOException { java.lang.String[] headers = reader.readNext () ; if ( null == headers ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields, headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } 
@ java.lang.Override public void angreifen ( pkg.Charakter gegner ) { int schaden = random.getRandom ( 15, 25 ) ; if ( true == ( this.getSpezialfaehigkeit () ) ) { this.wahrscheinlichkeit () ; if ( ( this.wahrscheinlichkeit () ) == true ) { java.lang.System.out.println ( "Erfolgreich!" ) ; this.schadenNehmen ( ( schaden * 2 ) ) ; } else schaden = schaden / 2; } super.angreifen ( gegner ) ; gegner.schadenNehmen ( schaden ) ; } 
public void showBoardLine ( final int row ) { for ( int i = 0; ( game.getBoard () .getRowLength ( row ) ) > i; i++ ) { if ( ( game.getBoard () .getFigure ( row, i ) ) == null ) { java.lang.System.out.print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out.print ( game.getBoard () .getFigure ( row, i ) .toString () ) ; } } java.lang.System.out.println () ; } 
protected java.util.List<java.lang.String> toSynopsisUsage ( java.util.List<com.github.rvesse.airline.model.OptionMetadata> options ) { return com.google.common.collect.ImmutableList.copyOf ( com.google.common.collect.Iterables.transform ( com.google.common.collect.Iterables.filter ( options, com.github.rvesse.airline.model.OptionMetadata.isHiddenPredicate () ) , new com.google.common.base.Function<com.github.rvesse.airline.model.OptionMetadata, java.lang.String> () { public java.lang.String apply ( com.github.rvesse.airline.model.OptionMetadata option ) { if ( ( ! ( includeHidden () ) ) && ( option.isHidden () ) ) { return ""; } return toUsage ( option ) ; } } ) ) ; } 
@ java.lang.Override public int hashCode () { int result = ( null != ( color ) ) ? color.hashCode () : 0; result = ( 31 * result ) + ( type.hashCode () ) ; result = ( 31 * result ) + ( ( image ) != null ? image.hashCode () : 0 ) ; result = ( 31 * result ) + ( position ) ; return result; } 
public void sendData ( java.util.ArrayList<com.monolc.felljs.Client> clients ) { if ( ! ( validated ) ) { return; } java.lang.String entityData = server.world.toString () ; java.lang.System.out.println ( entityData ) ; connection.send ( ( ( e ) + "pos:" ) ) ; if ( ( entityData.length () ) > 0 ) { connection.send ( ( ( ( "dat" + ( getDataStride () ) ) + ":" ) + entityData ) ) ; } } 
private void scaleWallsY ( float multiplier ) { com.badlogic.gdx.math.collision.BoundingBox bounds = new com.badlogic.gdx.math.collision.BoundingBox () ; backWall.calculateBoundingBox ( bounds ) .mul ( backWall.transform ) ; if ( ( com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION ) < ( bounds.getHeight () ) ) { float scalePercentage = 1.0F + ( ( ( com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT ) / ( bounds.getHeight () ) ) * multiplier ) ; for ( com.ggwp.interiordesigner.object.Wall wall : getWalls () ) { wall.transform.scale ( 1.0F, scalePercentage, 1.0F ) ; } } } 
@ java.lang.Override public void map ( water.util.Chunk c ) { for ( int i = 0; ( c._len ) > i; ++i ) { if ( c.isNA ( i ) ) continue; else c.set ( i, fromTo[ ( ( int ) ( c.at8 ( i ) ) ) ] ) ; } } 
@ org.apache.struts2.interceptor.validation.SkipValidation public java.lang.String loadData () throws java.lang.Exception { try { lists = getList () ; dbTransaction.commit () ; } catch ( org.hibernate.HibernateException e ) { if ( null != ( dbTransaction ) ) { dbTransaction.rollback () ; } e.printStackTrace () ; } finally { session.close () ; } return SUCCESS; } 
public void checkRightPowerup () { switch ( rightPowerup ) { case 1: if ( ( rightEnd ) == ( counter ) ) { leftMallet.stop = false; rightPowerup = -1; } break; case 2: if ( ( rightEnd ) == ( counter ) ) { leftMallet.radius = leftMallet.defaultRadius; rightPowerup = -1; } } } 
public void gameOver () { m_game.reset () ; for ( int r = 0; ( Game.NUM_ROWS ) > r; r++ ) { m_map[r] = new GameObject[m_numCols]; for ( int c = 0; c < ( m_numCols ) ; c++ ) m_map[r][c] = null; } parseMapFile () ; } 
public void reset ( com.studiau.amazinggravity.Ship ship ) { float randomFloat = random.nextFloat () ; radius = ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_RADIUS ) ) + ( com.studiau.amazinggravity.ExhaustParticle.BASE_RADIUS ) ; locationX = ship.getExhaustLocationX () ; locationY = ship.getExhaustLocationY () ; speedX = ( ( randomFloat - 0.5F ) * 2 ) * ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDX ) ; speedY = ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDY ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_SPEEDY ) ) ; } 
public java.lang.String mark ( int pos ) { if ( '~' == ( yourField.at ( pos ) ) ) { return "missed!\n"; } java.lang.String hitstr = ""; boolean sunk = false; hitstr = yourField.addHit ( pos ) ; if ( hitstr.contains ( "sunk" ) ) ( this.shipsDestroyed ) ++; return hitstr; } 
private int addNumber () { java.lang.System.out.print ( "Enter contact phone number: " ) ; int tel; while ( true ) { tel = validateNumber () ; Contact contact = getbyNumber ( tel ) ; if ( tel == ( contact.getNumber () ) ) { java.lang.System.out.println ( ( ( "That number already exists for contact " + ( contact.getName () ) ) + ". Try a different one" ) ) ; continue; } else if ( contact == null ) { java.lang.System.out.println ( "Adding new number..." ) ; } break; } return tel; } 
public java.lang.String getMimeType ( int pos ) { if ( ( ! ( com.fwgg8547.mycast.CardModel.mCursor.moveToPosition ( pos ) ) ) || ( ( com.fwgg8547.mycast.CardModel.mCursor ) == null ) ) { android.util.Log.w ( com.fwgg8547.mycast.CardModel.TAG, "fail movetopos" ) ; } int indx = com.fwgg8547.mycast.CardModel.mCursor.getColumnIndex ( MediaStore.Images.Media.MIME_TYPE ) ; java.lang.String mime = com.fwgg8547.mycast.CardModel.mCursor.getString ( indx ) ; return mime; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ( dataSnapshot.getValue () .equals ( emailHash ) ) && ( ( dataSnapshot.getValue () ) != null ) ) { android.util.Log.d ( "", java.lang.String.format ( "FirebaseBackend:connectBudgetAndUserByEmail: value: %s, address: %s", dataSnapshot.getValue () , emailHash ) ) ; connectBudgetAndUser ( bid, uidAsString, emailHash ) ; } else { android.util.Log.d ( "", java.lang.String.format ( "FirebaseBackend:connectBudgetAndUserByEmail: uid is: %s, value: is null, address: %s", uidAsString, emailHash ) ) ; } } 
public void updateStudentGroup ( java.lang.Long pyramusId ) { fi.pyramus.rest.model.StudentGroup studentGroup = pyramusClient.get () .get ( java.lang.String.format ( "/students/studentGroups/%d", pyramusId ) , fi.pyramus.rest.model.StudentGroup.class ) ; java.lang.String identifier = identifierMapper.getStudentGroupIdentifier ( pyramusId ) ; fi.muikku.model.users.UserGroupEntity userGroupEntity = userGroupEntityController.findUserGroupEntityByDataSourceAndIdentifier ( SchoolDataPyramusPluginDescriptor.SCHOOL_DATA_SOURCE, identifier ) ; if ( null == studentGroup ) { if ( userGroupEntity != null ) fireUserGroupRemoved ( identifier ) ; } else { if ( userGroupEntity == null ) { fireUserGroupDiscovered ( identifier ) ; } else { fireUserGroupUpdated ( identifier ) ; } } } 
private void setModelForAcceptors ( challenge.dbside.models.ChallengeDefinition challenge, org.springframework.ui.Model model ) { java.util.List acceptors = new java.util.ArrayList ( new java.util.HashSet ( challenge.getAllAcceptors () ) ) ; int acceptorsOnPage = 6; model.addAttribute ( "listOfAcceptors", ( acceptorsOnPage < ( acceptors.size () ) ? acceptors.subList ( 0, acceptorsOnPage ) : acceptors.subList ( 0, acceptors.size () ) ) ) ; model.addAttribute ( "showAcceptorsExtendenceButton", true ) ; } 
protected void readGraphicsFromLibrary ( int templateID, double xCoor, double yCoor ) { if ( ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) && ( ( this ) instanceof com.nkoiv.mists.game.gameobject.Structure ) ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary.create ( templateID ) ; if ( dummy == null ) return; this.graphics = dummy.graphics; } else this.graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this.graphics.setPosition ( xCoor, yCoor ) ; } 
public void delete ( int key ) { java.util.Iterator<QueueEntity> iter = info.iterator () ; while ( iter.hasNext () ) { QueueEntity it = iter.next () ; if ( key == ( it.ID ) ) { info.remove ( it ) ; } } } 
private eu.interedition.collatex.dekker.LCP_Interval[] construct_LCP_interval_array () { eu.interedition.collatex.dekker.LCP_Interval[] lcp_interval_array = new eu.interedition.collatex.dekker.LCP_Interval[token_array.size () ]; for ( eu.interedition.collatex.dekker.LCP_Interval interval : lcp_intervals ) { for ( int i = interval.start; ( interval.end ) >= i; i++ ) { int tokenIndex = suffix_array[i]; lcp_interval_array[tokenIndex] = interval; } } return lcp_interval_array; } 
@ java.lang.Override protected void done () { super.done () ; try { iconCache = new java.lang.ref.SoftReference<> ( super.get () ) ; progressHandle.finish () ; fireIconChange () ; if ( null != ( timer ) ) { timer.stop () ; timer = null; } } catch ( java.lang.InterruptedException | java.util.concurrent.ExecutionException ex ) { org.sleuthkit.autopsy.coreutils.Logger.getLogger ( org.sleuthkit.autopsy.corecomponents.ThumbnailViewNode.class.getName () ) .log ( java.util.logging.Level.SEVERE, "Error getting thumbnail icon", ex ) ; } swingWorker = null; } 
private void setSecondDate () { secondDate = dateSecondDate.getValue () ; if ( null != ( dateFirstDate.getValue () ) ) { try { getAllAbsence ( firstDate, secondDate ) ; } catch ( java.sql.SQLException ex ) { java.util.logging.Logger.getLogger ( attendance.gui.controller.TeacherViewController.class.getName () ) .log ( java.util.logging.Level.SEVERE, null, ex ) ; } } } 
private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader, java.lang.Double timeStep, tum.cms.sim.momentum.visualization.controller.CoreController coreController ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null; while ( null == dataStepCurrent ) { dataStepCurrent = simulationOutputReader.asyncReadDataSet ( timeStep ) ; if ( null == dataStepCurrent ) { java.lang.Thread.sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations.updateCustomData ( simulationOutputReader.getCsvType () , dataStepCurrent, coreController ) ; } 
public void printArray ( int[] array ) { for ( int i = 0; ( array.length ) > i; i++ ) { java.lang.System.out.print ( i ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out.print ( " " ) ; } } } 
@ java.lang.Override public void onConnected ( @android.support.annotation.Nullable android.os.Bundle bundle ) { if ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.support.v4.app.ActivityCompat.requestPermissions ( this, new java.lang.String[] { android.Manifest.permission.ACCESS_FINE_LOCATION }, LOCATION_PERMISSION_REQUEST_CODE ) ; } getNewLocation () ; } 
public http.Header getHeader ( java.lang.String header ) throws http.exceptions.BadRequestException { if ( 2 != ( header.split ( ": " ) .length ) ) { throw new http.exceptions.BadRequestException () ; } for ( http.Header.Type type : http.Header.Type.values () ) { if ( header.startsWith ( type.type ) ) { return new http.Header ( header.split ( ":" ) [1], type ) ; } } return new http.Header ( header.split ( ":" ) [1], http.Header.Type.UnknownHeader ) ; } 
public void refresh ( java.lang.String rateLimiterYaml ) { clear () ; org.springframework.beans.factory.config.YamlPropertiesFactoryBean yaml = new org.springframework.beans.factory.config.YamlPropertiesFactoryBean () ; yaml.setResources ( new org.springframework.core.io.FileSystemResource ( rateLimiterYaml ) ) ; rateLimiterProperties = yaml.getObject () ; this.time_frame = 1000 * ( ( int ) ( rateLimiterProperties.get ( "time-frame" ) ) ) ; } 
public void update () { progress1.setTextProgress ( b.getPayout () .toEngineeringString () ) ; buyButton.setText ( ( ( b.getPrice () .toEngineeringString () ) + ( ( ( ( b.getName () ) + ":" ) + ( b.getNumOfBuildings () .toEngineeringString () ) ) + "\nBuy:" ) ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_register ) ; super.onCreateDrawer () ; if ( null == savedInstanceState ) { getSupportFragmentManager () .beginTransaction () .add ( R.id.container, new com.gatech.objectsanddesign.shoppingwithfriends.RegisterActivity.PlaceholderFragment () ) .commit () ; } } 
public java.lang.Boolean autorAussendienst () { if ( ( ! ( autorIntern () ) ) || ( ( this.securityService ) == null ) ) { return false; } de.fraunhofer.igd.klarschiff.service.security.User user = this.securityService.getUserByEmail ( this.autorEmail ) ; if ( user == null ) { return false; } return ! ( user.getAussendienstTeams () .isEmpty () ) ; } 
private java.lang.String getText ( final org.objectweb.asm.tree.MethodNode mn ) { org.objectweb.asm.util.Textifier tv = new org.objectweb.asm.util.Textifier () ; org.objectweb.asm.util.TraceMethodVisitor tmv = new org.objectweb.asm.util.TraceMethodVisitor ( tv ) ; mn.accept ( tmv ) ; java.lang.StringBuffer sb = new java.lang.StringBuffer () ; for ( int i = 0; ( tv.text.size () ) > i; i++ ) { sb.append ( tv.text.get ( i ) ) ; } return sb.toString () ; } 
public static int getSelectedIdentityId () { int selectedIdentity = de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex () ; if ( 0 == ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex () ) ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.person.getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex () ) == 1 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.team.getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits.getSelectedIndex () ) == 2 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.unternehmen.getId () ; } return 0; } 
@ java.lang.Override public void done ( byte[] data, com.parse.ParseException e ) { if ( ( data != null ) && ( e == null ) ) { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel ( name, address, restId, data ) ; restaurantModel.setFlag ( 1 ) ; restaurantModels.add ( restaurantModel ) ; updateListView () ; } else { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel ( name, address, restId ) ; restaurantModels.add ( restaurantModel ) ; updateListView () ; } } 
public org.apache.hadoop.smart.sql.CommandInfo getCommandInfo ( long cid ) throws java.io.IOException { if ( cmdsAll.containsKey ( cid ) ) return cmdsAll.get ( cid ) ; java.util.List<org.apache.hadoop.smart.sql.CommandInfo> ret = null; try { adapter.getCommandsTableItem ( java.lang.String.format ( "= %d", cid ) , null, null ) ; } catch ( java.sql.SQLException e ) { org.apache.hadoop.smart.CommandExecutor.LOG.error ( e.getMessage () ) ; } if ( null != ret ) return ret.get ( 0 ) ; return null; } 
public void start () { if ( null == ( threadUpdater ) ) { threadUpdater = new java.util.Timer ( ( "Thread - " + ( this.name ) ) ) ; threadUpdater.schedule ( new ca.team4519.lib.Threader.UpdaterTask ( this ) , 0L, ( ( ( long ) ( this.period ) ) * 1000 ) ) ; } } 
public void run () throws java.io.IOException { refPanel.setProductButtons ( this.productButtons ) ; refPanel.repaint () ; if ( ( state.OrderSUMMARY ) == ( this.state ) ) { this.customer.addTransaction ( this.transaction.getTransactionNum () ) ; this.customer.write () ; this.transaction.write () ; if ( this.writeToGlobalReciept ) { this.writeReceipt () ; this.writeToGlobalReciept = false; } } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int button ) { if ( ( android.content.DialogInterface.BUTTON_POSITIVE ) == button ) { getContentResolver () .delete ( ExperimentsProvider.CONTENT_URI, experimentFilter, null ) ; android.widget.Toast.makeText ( this, R.string.deleted, Toast.LENGTH_SHORT ) .show () ; android.content.Intent intent = new android.content.Intent ( this, com.scuddertechnologies.pheoc.MainMenu.class ) ; startActivity ( intent ) ; } } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true; } if ( obj == null ) { return false; } if ( obj instanceof mc.compiler.ast.ReferenceNode ) { mc.compiler.ast.ReferenceNode node = ( ( mc.compiler.ast.ReferenceNode ) ( obj ) ) ; return ( reference ) == ( node.getReference () ) ; } return false; } 
public boolean isEmptyContext ( java.lang.Object cursorPosition ) { if ( null == cursorPosition ) { return true; } if ( cursorPosition instanceof java.lang.Boolean ) { return ( ( java.lang.Boolean ) ( cursorPosition ) ) .booleanValue () ; } if ( cursorPosition instanceof java.util.Collection ) { return ( ( ( java.util.Collection ) ( cursorPosition ) ) .size () ) == 0; } return false; } 
protected java.util.Optional<T> getAnnotation ( org.springframework.core.type.MethodMetadata metadata ) { try { return java.util.Optional.ofNullable ( java.lang.Class.forName ( metadata.getReturnTypeName () ) .getDeclaredAnnotation ( annotation ) ) ; } catch ( java.lang.ClassNotFoundException e ) { io.cereebro.spring.annotation.LOGGER.error ( ( ( metadata.getReturnTypeName () ) + "Could not load class : " ) , e.getMessage () ) ; } return java.util.Optional.empty () ; } 
private boolean isMailingEnabledAndValid () { if ( "" == ( host ) ) { return false; } if ( ( ( isAuthenticationNecessary ) != "false" ) && ( ( login ) == "" ) ) { com.siemens.sw360.mail.MailUtil.log.error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false; } return true; } 
public boolean endSuccess () { if ( ( XTaskBean.STATUS_DOING ) != ( getStatus () ) ) return false; if ( ! ( onEndSuccess () ) ) return false; setStatus ( XTaskBean.STATUS_DONE ) ; if ( ( mListener ) != null ) mListener.onComplete ( getBean () ) ; return true; } 
@ java.lang.Override protected void updateItem ( application.DataSet t, boolean bln ) { java.lang.System.out.println ( "Calling setButtonCell" ) ; super.updateItem ( t, bln ) ; if ( null != t ) { java.lang.System.out.println ( ( "IN SBC Setting text to: " + ( t.getFilePath () .substring ( application.services.GeneralService.getDataSetDirectory () .length () ) ) ) ) ; setText ( t.getFilePath () .substring ( application.services.GeneralService.getDataSetDirectory () .length () ) ) ; } else { java.lang.System.out.println ( "IN SBC Setting text to: Choose..." ) ; setText ( "Choose..." ) ; } } 
private void pluginChanged ( jobdispatcher.plugin.Plugin curPlugin ) { if ( curPlugin.getName () .startsWith ( "zh_def_catalog" ) ) { mapTagTemplate1.put ( "SceneMetaDataFile", objectivePath ) ; } else { mapTagTemplate2.put ( "SceneMetaDataFile", ( "_meta.xml" + ( frameFilePath ) ) ) ; } } 
public boolean contain ( ai.eboard e, int i ) { if ( 'X' == ( e.c ) ) return x.containsKey ( i ) ; else if ( ( e.c ) == 'O' ) return o.containsKey ( i ) ; else return ! ( u.contains ( i ) ) ; } 
@ java.lang.Override public void taskCompleted ( boolean success, java.lang.String message, org.json.JSONObject json ) { removeLoadingSpinner () ; java.util.List<uk.ac.ncl.csc2022.t14.bankingapp.models.HeatPoint> allPoints = new java.util.ArrayList<> () ; if ( ( responseParser.parseLoadHeatPoints ( json, allPoints ) ) && success ) { delegate.loadHeatMapPassed ( allPoints ) ; } else { message = responseParser.parseErrorOrDefault ( message ) ; delegate.loadHeatMapFailed ( message ) ; } } 
private static void writePage ( javax.servlet.http.HttpServletResponse response, int httpCode, java.lang.String message, org.geowebcache.stats.RuntimeStats runtimeStats, java.lang.String contentType ) { org.geowebcache.io.Resource res = null; if ( null != message ) { res = new org.geowebcache.io.ByteArrayResource ( message.getBytes () ) ; } org.geowebcache.GeoWebCacheUtils.writeFixedResponse ( response, httpCode, contentType, res, CacheResult.OTHER, runtimeStats ) ; } 
public void addFirst ( Item item ) { if ( null == item ) { throw new java.lang.NullPointerException ( "Attempt to add null Item." ) ; } Deque<Item>.Node oldfirst = first; Deque<Item>.Node newfirst = new Node () ; newfirst.item = item; newfirst.next = oldfirst; if ( oldfirst != null ) { synchronized ( oldfirst ) { oldfirst.previous = newfirst; } } first = newfirst; ( size ) ++; if ( ( size ) == 1 ) { last = first; } } 
public void RunGame () { while ( true ) { gameStart () ; battleStart () ; while ( true == ( GameOn ) ) { battleActive () ; boolean a = battleEnd () ; if ( a == true ) { onPlayerWin () ; } if ( a == false ) { onPlayerLose () ; GameOn = false; } } } } 
public java.lang.String getBestSuggestion ( java.lang.String typed ) { java.lang.System.out.println ( ( ( typed.length () ) + ( ( "matching: " + typed ) + " Length: " ) ) ) ; if ( ( typed == null ) || ( ( typed.length () ) == 0 ) ) return null; for ( java.lang.String keyword : keywords ) { if ( keyword.startsWith ( typed ) ) return keyword; } return null; } 
public ship.WeatherWaypoint closestWeatherWaypoint () { int theCounter = checkClosestWeather () ; for ( int i = 0; ( weatherWaypoints.size () ) > i; i++ ) { if ( i == theCounter ) { return weatherWaypoints.get ( i ) ; } } java.lang.System.out.println ( "returning Null" ) ; return null; } 
public org.alopex.hyperios.helix.Specimen crossover ( org.alopex.hyperios.helix.Specimen mateOne, org.alopex.hyperios.helix.Specimen mateTwo ) { org.alopex.hyperios.helix.Specimen output = new org.alopex.hyperios.helix.Specimen () ; for ( int i = 0; ( output.getGenes () .length ) > i; i++ ) { if ( ( java.lang.Math.random () ) <= ( GASettings.crossoverRate ) ) { output.setGene ( i, mateOne.getGenes () [i] ) ; } else { output.setGene ( i, mateOne.getGenes () [i] ) ; } } return output; } 
public boolean isHasIncidence () { java.lang.System.out.println ( getComputerNum () ) ; this.computerGateway.find ( getComputerNum () , getLaboratory () ) ; if ( ( ( this.computerGateway.getCurrent () .getState () ) == ( es.uvigo.esei.infraestructura.entities.State.INCIDENCE ) ) && ( ( this.computerGateway.getCurrent () ) != null ) ) { java.lang.System.out.println ( "TENGO INCIDENCIA" ) ; return true; } java.lang.System.out.println ( "NO TENGO INCIDENCIA" ) ; return false; } 
public static void generate_predicates () { for ( int current_depth = Depths.highest_depth; 0 < current_depth; --current_depth ) { Predicates.add_entry ( Depths.DEPTHS_OUTPUT, "is_lower_than", Depths.get_id_from_depth ( new java.lang.Integer ( ( current_depth - 1 ) ) ) , Depths.get_id_from_depth ( new java.lang.Integer ( current_depth ) ) ) ; } } 
protected int newGame ( int _difficulty ) { logger.logDebugMessage ( "Inside newGame () ." ) ; difficulty = _difficulty; timeElapsed = "00:00"; if ( ( ( difficulty ) > 3 ) || ( ( difficulty ) < 1 ) ) { difficulty = ( randGen.nextInt ( 3 ) ) + 1; } buildCompleteBoard () ; digHoles ( getNumberOfGivens ( difficulty ) ) ; checkBounds ( getBound ( difficulty ) ) ; markOriginals () ; return difficulty; } 
public static boolean hasFallingPieces ( final java.util.List<com.gamesbykevin.yoshi.board.piece.Piece> pieces ) { for ( int i = 0; ( pieces.size () ) > i; i++ ) { final com.gamesbykevin.yoshi.board.piece.Piece piece = pieces.get ( i ) ; if ( ( ( ( piece.isPlaced () ) || ( piece.isYoshi () ) ) || ( piece.isDestroyed () ) ) || ( piece.isFrozen () ) ) continue; return true; } return false; } 
public static void getBalance ( org.bukkit.entity.Player player ) { player.sendMessage ( ( ( me.ellbristow.ATMsigns.ATMsigns.economy.format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy.getBalance ( player.getName () ) ) ) ) .replace ( ".00", "" ) ) + ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) ) ) ; } 
public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence text, int offset ) { if ( ( offset == 0 ) || ( ( text.length () ) == 0 ) ) return ""; if ( offset > 0 ) { return text.subSequence ( ( offset - 1 ) , offset ) .toString () ; } return ""; } 
boolean restartProcess ( net.algart.pyramid.http.JavaProcessControlWithHttpCheckingAliveStatus control, boolean skipIfAlive ) throws java.io.IOException { synchronized ( lock ) { if ( ( control.areAllHttpServicesAlive ( true ) ) && skipIfAlive ) { return false; } stopProcess ( control, false ) ; startProcess ( control, false ) ; return true; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { placexor ( 1, 2, whichmark () ) ; if ( debug ) java.lang.System.out.println ( ( ( whichmark () ) + "Paikka 1 2 " ) ) ; ChangeButton ( buttonbc ) ; buttonbc.setEnabled ( false ) ; viimeisinSiirto[1][2] = whichmark () ; ( buttoncount ) ++; } 
public void add ( int itemNumber ) { if ( ( itemNumber < 0 ) || ( itemNumber > ( ( inventory.size () ) - 1 ) ) ) { java.lang.System.out.println ( "INVALID INDEX...Try Again" ) ; } else { items.add ( inventory.get ( itemNumber ) ) ; java.lang.System.out.println ( ( ( items.get ( itemNumber ) .getName () ) + " was added to cart!" ) ) ; subTotal += items.get ( ( ( items.size () ) - 1 ) ) .getPrice () ; } } 
public void generateExtensionalDB ( java.lang.String path ) throws java.lang.Exception { int i = 1; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf.append ( factsFromFiles ( file, ( i++ ) ) ) ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.FileWriter ( ( "edb.pl" + path ) ) , true ) ; prologWriter.println ( buf ) ; prologWriter.flush () ; prologWriter.close () ; } 
@ java.lang.Override public void success ( final kaaes.spotify.webapi.android.models.Playlist playlist, retrofit.client.Response response ) { mPlaylist = playlist; setupDetails ( playlist ) ; java.util.List<kaaes.spotify.webapi.android.models.TrackSimple> tracks = new java.util.ArrayList<kaaes.spotify.webapi.android.models.TrackSimple> () ; for ( kaaes.spotify.webapi.android.models.PlaylistTrack playlistTrack : playlist.tracks.items ) { tracks.add ( playlistTrack.track ) ; } setupTracksRows ( tracks ) ; if ( 0 < ( playlist.images.size () ) ) { java.lang.String imageUrl = playlist.images.get ( 0 ) .url; loadBackgroundImage ( imageUrl ) ; loadDetailsRowImage ( imageUrl ) ; } } 
public static util.Coords fromSGFString ( java.lang.String coords ) { if ( ! ( coords.matches ( "[a-s][a-s]" ) ) ) throw new java.lang.IllegalArgumentException ( ( "' is not recognizable as SGF coordinates." + ( "String: '" + coords ) ) ) ; int x = ( ( coords.charAt ( 0 ) ) - 'a' ) + 1; int y = ( ( coords.charAt ( 0 ) ) - 'a' ) + 1; return util.Coords.getCoords ( x, y ) ; } 
public static it.crs4.features.DType convertPixelType ( int pixelType ) { switch ( pixelType ) { case loci.formats.FormatTools.INT8: return DType.INT8; case loci.formats.FormatTools.UINT8: return DType.UINT8; case loci.formats.FormatTools.INT16: return DType.INT16; case loci.formats.FormatTools.UINT16: return DType.UINT16; case loci.formats.FormatTools.INT32: return DType.INT32; case loci.formats.FormatTools.UINT32: return DType.UINT32; case loci.formats.FormatTools.FLOAT: return DType.FLOAT32; case loci.formats.FormatTools.DOUBLE: return DType.FLOAT64; } throw new java.lang.IllegalArgumentException ( ( pixelType + "Unknown pixel type: " ) ) ; } 
public void removeRows ( int[] indices ) { java.util.Arrays.sort ( indices ) ; for ( int i = ( indices.length ) - 1; 0 <= i; i-- ) { rows.remove ( i ) ; } nl.gogognome.lib.swing.AbstractListTableModel.fireTableDataChanged () ; } 
public void statePlayer ( java.lang.String address, com.jme3.math.Vector3f walk, com.jme3.math.Vector3f view, int life, boolean attack, int score ) { try { this.OUTPUT.writeBytes ( ( "\n" + ( server.ClientManager.PLAYER ) ) ) ; java.lang.String line = new java.lang.StringBuilder () .builderString ( walk, view, new com.jme3.math.Vector3f () , life, attack, address, "", score ) ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
public static void main ( java.lang.String[] args ) { java.util.List<java.util.List<java.lang.Integer>> list = new Solution () .combine ( 4, 2 ) ; for ( int i = 0; ( list.size () ) > i; i++ ) { for ( int k : lihttp ) java.lang.System.out.print ( ( k + " " ) ) ; } java.lang.System.out.println () ; } 
@ java.lang.Override public void exitIdentifier ( @org.antlr.v4.runtime.misc.NotNull wich.parser.WichParser.IdentifierContext ctx ) { org.antlr.symtab.Symbol s = currentScope.resolve ( ctx.ID () .getText () ) ; if ( ( s instanceof wich.semantics.symbols.WVariableSymbol ) && ( s != null ) ) { ctx.exprType = ( ( org.antlr.symtab.TypedSymbol ) ( s ) ) .getType () ; } else { error ( ctx.ID () .getSymbol () , wich.errors.ErrorType.SYMBOL_NOT_FOUND, ctx.ID () .getText () ) ; } } 
void returnConnection ( org.glassfish.grizzly.Connection result, ru.kwanza.jeda.nio.client.ConnectionConfig config, boolean close ) { if ( null != result ) { ru.kwanza.jeda.nio.client.ConnectionHolder holder = leasedConnections.remove ( result ) ; if ( config.isKeepAlive () ) { if ( ( ( holder != null ) && ( result.isOpen () ) ) && ( !close ) ) { availableConnections.offer ( holder ) ; getStage () .getThreadManager () .adjustThreadCount ( getStage () , getThreadCount () ) ; } } batchSize.incrementAndGet () ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map_page ) ; android.location.LocationManager locationManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; if ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager.requestLocationUpdates ( LocationManager.GPS_PROVIDER, 0, 0, this ) ; } 
private boolean execute_BUNDLE_CLEAR () { int bundleIndex = getBundleArg () ; if ( 0 == bundleIndex ) return false; if ( ! ( checkEOL () ) ) return false; android.os.Bundle b = com.rfo.basic.Run.theBundles.get ( bundleIndex ) ; b.clear () ; return true; } 
private double getReward ( ab.vision.GameStateExtractor.GameState state ) { java.lang.System.out.println ( state ) ; if ( ( ab.vision.GameStateExtractor.GameState.WON ) == state ) { ab.vision.GameStateExtractor gameStateExtractor = new ab.vision.GameStateExtractor () ; java.lang.System.out.println ( state ) ; java.awt.image.BufferedImage scoreScreenshot = clientActionRobotJava.doScreenShot () ; java.lang.System.out.println ( state ) ; double reward = gameStateExtractor.getScoreEndGame ( scoreScreenshot ) ; java.lang.System.out.println ( reward ) ; return reward; } else { return 0.0; } } 
public static void checkFetchItemsExist ( final java.util.List<gov.loc.repository.bagit.domain.FetchItem> items, final java.nio.file.Path bagDir ) throws gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException { gov.loc.repository.bagit.verify.MandatoryVerifier.logger.info ( "Checking if all [{}] items in fetch.txt exist in the [{}]", items.size () , bagDir ) ; for ( final gov.loc.repository.bagit.domain.FetchItem item : items ) { final java.nio.file.Path file = bagDir.resolve ( item.path ) ; if ( ! ( java.nio.file.Files.exists ( file ) ) ) { throw new gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException ( ( " has not been fetched!" + ( "Fetch item " + item ) ) ) ; } } } 
public static java.lang.String getRequestIP ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ipAddr; ipAddr = request.getHeader ( "x-forwarded-for" ) ; if ( ( ( ipAddr.length () ) == 0 ) || ( null == ipAddr ) ) { ipAddr = request.getHeader ( "X-Real-IP" ) ; } if ( ( ( ipAddr.length () ) == 0 ) || ( null == ipAddr ) ) { ipAddr = "127.0.0.1"; } return ipAddr; } 
private void ancestorPathCheck ( java.util.List<java.lang.String> ancestorPath, java.util.List<edu.unc.lib.dl.fedora.PID> pids ) { for ( int i = 0; ( ancestorPath.size () ) > i; i++ ) { org.junit.Assert.assertTrue ( ancestorPath.get ( i ) .startsWith ( ( ( ( i + 1 ) + "," ) + ( pids.get ( i ) .getId () ) ) ) ) ; } } 
public long getTimeBucketAndAdjustBoundaries ( long value ) { if ( ( start ) > value ) { return -1; } long diffFromStart = value - ( fixedStart ) ; long key = diffFromStart / ( bucketSpanMillis ) ; if ( value > ( end ) ) { long diffInBuckets = ( value - ( end ) ) / ( bucketSpanMillis ) ; long move = ( diffInBuckets + 1 ) * ( bucketSpanMillis ) ; start += move; end += move; triggerPurge = true; lowestPurgeableTimeBucket += diffInBuckets; } return key; } 
@ android.support.annotation.VisibleForTesting void setVideoPath ( java.lang.String path ) { if ( null == ( mPlayer ) ) mPlayer = createPlayer ( mContext ) ; try { mPlayer.setDataSource ( mContext, android.net.Uri.parse ( path ) ) ; openVideo () ; } catch ( java.io.IOException e ) { com.hustunique.parsingplayer.util.LogUtil.wtf ( com.hustunique.parsingplayer.player.media.ParsingPlayerProxy.TAG, e ) ; e.printStackTrace () ; } } 
@ org.junit.Test public void testDefaultChangeTypeToVCSType () { for ( org.eclipse.jgit.diff.DiffEntry.ChangeType ct : DiffEntry.ChangeType.values () ) { if ( ( ct != ( DiffEntry.ChangeType.MODIFY ) ) && ( ( ct != ( DiffEntry.ChangeType.ADD ) ) && ( ct != ( DiffEntry.ChangeType.DELETE ) ) ) ) { org.junit.Assert.assertEquals ( git.gitChangeTypeToVCSChangeType ( ct ) , VCSChangeType.UNKNOWN ) ; } } } 
@ java.lang.Override public void setBooleanMetadata ( java.lang.String key, boolean value ) { if ( ( ( sender.getBlock () .getType () ) == ( org.bukkit.Material.COMMAND ) ) || ( ( ( sender ) == null ) || ( ( sender.getBlock () ) == null ) ) ) { return; } sender.getBlock () .setMetadata ( key, new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer.getInstance () , value ) ) ; } 
public void clearCacheLocal ( uk.gov.ea.datareturns.distributedtransaction.impl.Cache cache ) { switch ( cache ) { case SITE_PERMIT_CACHES: siteDao.clearCaches () ; uniqueIdentifierDao.clearCaches () ; uniqueIdentifierAliasDao.clearCaches () ; search.initialize () ; uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER.error ( ( cache + "Cleared cache group: " ) ) ; default: uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER.error ( ( "Not implemented: " + cache ) ) ; } } 
@ org.testng.annotations.Test public void test11_AddNewHTMLFile () { org.exoplatform.selenium.TestLogger.info ( "Test 11 Add new HTML file" ) ; java.lang.String HTMLFILE_NAME = ( getRandomNumber () ) + "HTMLfile"; java.lang.String HTMLFILE_CONTENT = "HTML file " + ( getRandomNumber () ) ; navToolBar.goToSiteExplorer () ; actBar.goToAddNewContent () ; org.exoplatform.selenium.TestLogger.info ( "Create new HTML file" ) ; cTemplate.createNewHtmlFile ( HTMLFILE_NAME, "", HTMLFILE_CONTENT, true ) ; org.exoplatform.selenium.TestLogger.info ( "Restore data" ) ; actBar.goToNodeByAddressPath ( "/" ) ; cMenu.deleteDocument ( ecms.ELEMENT_NODE_ROW_VIEW.replace ( "${nodeName}", HTMLFILE_NAME ) ) ; } 
private void doNext ( int requestCode, int[] grantResults ) { if ( ( ACCESS_PERMISSION ) == requestCode ) { if ( ( grantResults[0] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { listener.onGranted () ; com.itheima.mobilesafe.utils.CLog.d ( com.itheima.mobilesafe.HomeActivity.TAG, "Permission Granted" ) ; } else { listener.onDenied () ; com.itheima.mobilesafe.utils.CLog.d ( com.itheima.mobilesafe.HomeActivity.TAG, "Permission Denied" ) ; } } } 
private algo.BSTMap<K, V>.Node findMinNode ( algo.BSTMap<K, V>.Node node ) { algo.BSTMap<K, V>.Node parent = node; algo.BSTMap<K, V>.Node child = parent.left; if ( null == ( child.left ) ) { parent.left = null; return child; } else { return findMinNode ( child ) ; } } 
public static boolean getBoolean ( java.lang.String sql ) { java.lang.String s = ids.sardine.TransferUtil.getString ( sql ) ; return ( ( java.lang.Boolean.parseBoolean ( s.trim () ) ) || ( ! ( "0".equals ( s.trim () ) ) ) ) && ( s != null ) ; } 
private float[] cutArray ( int index ) { float[] retArr = new float[filterSize]; int j = 0; for ( int i = index - ( side ) ; ( index + ( side ) ) > i; i++ ) { retArr[j] = array[i]; j++; } return retArr; } 
public int overallScore () { int s; if ( ( score2 ) > ( score1 ) ) s = score2; else s = score1; if ( s > ( score3 ) ) s = score3; s = ( ( ( score1 ) + ( score2 ) ) + ( score3 ) ) - s; return s; } 
private double getStepMovement ( genetics.MusicPhenotype p ) { double steps = 0; double intervalCount = 0; for ( java.util.ArrayList<java.lang.Integer> measure : p.melodyIntervals ) { for ( int interval : measure ) { interval = java.lang.Math.abs ( interval ) ; intervalCount++; if ( ( interval <= 2 ) || ( interval >= 1 ) ) { steps += 1; } } } if ( intervalCount == 0 ) { return 0; } return steps / intervalCount; } 
ru.spbau.mit.StringSetImpl.StringSetEntry removeEntry ( char letter, boolean notLastLetter ) { ( numberOfSuccessors ) --; int idx = getIndex ( letter ) ; ru.spbau.mit.StringSetImpl.StringSetEntry nextEntry = next.get ( idx ) ; if ( notLastLetter && ( ( nextEntry.numberOfSuccessors ) == 1 ) ) { next.set ( idx, null ) ; } else { isLastLetter = false; } return nextEntry; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () .inflate ( R.menu.menu_photo_album, menu ) ; android.view.MenuItem item = menu.findItem ( R.id.action_ok ) ; java.lang.System.out.println ( ( ( okButtonDrawable ) + "okButtonDrawable :::: " ) ) ; if ( ( okButtonDrawable ) != null ) { item.setIcon ( okButtonDrawable ) ; } else if ( ( menuText ) != null ) { item.setIcon ( new com.sangcomz.fishbun.util.TextDrawable ( getResources () , menuText, colorMenuText ) ) ; } return true; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this.getNavigationManager () .topFragment () ) ) .getFragCount () ; this.presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment.newInstance ( "Fragment added to the Stack", ( 1 + fragCount ) ) ) ; } 
@ java.lang.Override public bcccp.tickets.adhoc.IAdhocTicket findTicketByBarcode ( java.lang.String findBarcode ) { for ( int i = 0; ( currentAdhocTickets.size () ) > i; i++ ) { if ( ( currentAdhocTickets.get ( i ) .getBarcode () ) == findBarcode ) { return currentAdhocTickets.get ( i ) ; } } return null; } 
private boolean isNotJsonString ( final java.lang.String value ) throws java.io.IOException { return ( springfox.documentation.swagger2.configuration.Swagger2JacksonModule.PropertyExampleSerializerMixin.PropertyExampleSerializer.JSON_NUMBER_PATTERN.matcher ( value ) .matches () ) || ( ( ( ( value.startsWith ( "{" ) ) || ( value.startsWith ( "[" ) ) ) || ( value.equals ( "true" ) ) ) || ( value.equals ( "false" ) ) ) ; } 
public double calculateIntegral () { double temp = calculateIntegralAtIteration () ; double diff = 0.0; do { double integralValue = calculateIntegralAtIteration () ; diff = java.lang.Math.abs ( ( integralValue - temp ) ) ; temp = integralValue; java.lang.System.out.println ( ( diff + "Diff : " ) ) ; } while ( diff > 1.0E-8 ) ; return temp; } 
@ com.squareup.otto.Subscribe public void searchForVenues ( com.android.test.otto.VenueSearchEvent event ) { com.android.test.qachee.QacheeData data = ( ( com.android.test.qachee.QacheeData ) ( com.qachee.QacheeManager.getInstance () .get ( ( ( long ) ( event.place.hashCode () ) ) , true ) ) ) ; if ( null == data ) { asyncTask = new com.android.test.task.VenueBackgroundTask ( event.place, gpsTracker.getLocation () ) ; asyncTask.execute () ; } else { ottoBus.post ( new com.android.test.otto.VenueResultEvent ( data.venues, event.place, gpsTracker.getLocation () ) ) ; } } 
@ java.lang.Override public java.lang.String qnameFor ( java.lang.String uri ) { int split = org.apache.jena.rdf.model.impl.Util.splitNamespaceXML ( uri ) ; java.lang.String ns = uri.substring ( 0, split ) ; java.lang.String local = uri.substring ( split ) ; if ( local.equals ( "" ) ) return null; java.lang.String prefix = getNsURIPrefix ( uri ) ; return null == prefix ? null : ( prefix + ":" ) + local; } 
private pcbuilder.controllers.Component findComponent ( pcbuilder.controllers.ProductData productData ) { pcbuilder.controllers.Component component = componentRepository.findByManufacturerPartNumber ( productData.getMpn () ) ; if ( ( ! ( productData.getEan () .equals ( "9999999999999" ) ) ) && ( ( component == null ) && ( ( productData.getEan () ) != null ) ) ) { component = componentRepository.findByEuropeanArticleNumber ( productData.getEan () ) ; } return component; } 
public void lernen () { java.lang.String tf; tf = letter.getText () .toLowerCase () ; for ( int w = 0; 26 > w; w++ ) { if ( tf.equals ( ( "" + ( alphabet[w] ) ) ) ) { alpha[w] = ja; } } ann.backpropagate ( new com.github.jannled.lib.math.Matrix ( feld, breite, hoehe ) , new com.github.jannled.lib.math.Matrix ( alpha, 1, 26 ) ) ; } 
protected boolean isIE7 ( java.lang.String userAgent ) { if ( null != userAgent ) { if ( ( ( ( userAgent.contains ( "; MSIE 5" ) ) || ( userAgent.contains ( "; MSIE 6" ) ) ) || ( userAgent.contains ( "; MSIE 7" ) ) ) && ( ! ( userAgent.contains ( "; Trident/" ) ) ) ) { return true; } } return false; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) return true; if ( obj == null ) return false; if ( ( getClass () ) != ( obj.getClass () ) ) return false; org.opennms.netmgt.poller.client.rpc.PollerResponseDTO other = ( ( org.opennms.netmgt.poller.client.rpc.PollerResponseDTO ) ( obj ) ) ; return ( java.util.Objects.equals ( this.failureMesage, other.failureMesage ) ) && ( java.util.Objects.equals ( this.pollStatus, other.pollStatus ) ) ; } 
public java.lang.String toString () { java.lang.String retString = ""; int i = 1; for ( Destination d : this ) { retString += "\n" + ( ( ( "" + i ) + ". " ) + ( d.toString () ) ) ; } return retString; } 
public void setObject ( java.sql.CallableStatement statement, com.ctrip.platform.dal.dao.StatementParameter parameter ) throws java.sql.SQLException { if ( ( ( parameter.getSqlType () ) == ( com.ctrip.platform.dal.common.enums.DatabaseCategory.SQL_SERVER_TYPE_TVP ) ) && ( ( parameter.getValue () ) != null ) ) { com.microsoft.sqlserver.jdbc.SQLServerCallableStatement sqlsvrStatement = ( ( com.microsoft.sqlserver.jdbc.SQLServerCallableStatement ) ( statement ) ) ; sqlsvrStatement.setStructured ( parameter.getIndex () , parameter.getName () , ( ( com.microsoft.sqlserver.jdbc.SQLServerDataTable ) ( parameter.getValue () ) ) ) ; } } 
@ java.lang.Override public value.Value add ( value.Value other ) { if ( ( ! ( other.isSet () ) ) || ( ! ( isSet () ) ) ) { return new value.IntegerValue ( 0 ) ; } return new value.IntegerValue ( ( ( value ) + ( ( ( value.IntegerValue ) ( other ) ) .getValue () ) ) ) ; } 
private javax.validation.ConstraintViolation<?>[] validateNotSamePort ( final java.lang.String httpPortPath, final java.lang.Integer httpPort, final java.lang.String httpsPortPath, final java.lang.Integer httpsPort ) { if ( ( java.util.Objects.equals ( httpPort, httpsPort ) ) && ( httpPort != null ) ) { return new javax.validation.ConstraintViolation<?>[] { constraintViolationFactory.createViolation ( httpPortPath, "HTTP and HTTPs ports must be different" ) , constraintViolationFactory.createViolation ( httpsPortPath, "HTTP and HTTPs ports must be different" ) }; } return null; } 
public int getPlayer1Score () { int score = 0; for ( int i = ( this.glasses.length ) - 1; ( ( this.glasses.length ) / 2 ) <= i; i++ ) { if ( this.glasses[i].isActive () ) break; else score++; } return score; } 
@ java.lang.Override public java.lang.Boolean delete ( int id ) throws com.nextbook.exceptions.AuthRequiredException, com.nextbook.exceptions.ForbiddenException, com.nextbook.exceptions.NoSuchEntityException { com.nextbook.domain.entity.comment.CommentEntity commentEntity = commentDao.getNotNull ( id ) ; commentEntity.setStatus ( CommentStatusesEnum.DELETED ) ; if ( ( sessionUtils.allowedForUserWithRole ( RolesEnum.admin ) ) || ( commentAvailabilityService.isCommentAuthorSession ( commentEntity ) ) ) { return ( commentDao.update ( commentEntity ) .getStatus () .compareTo ( CommentStatusesEnum.DELETED ) ) == 0; } return false; } 
@ java.lang.Override public boolean apply ( final org.pentaho.agilebi.modeler.ModelerWorkspace workspace, final java.lang.String field, final org.pentaho.metastore.api.IMetaStore metaStore ) throws org.pentaho.agilebi.modeler.ModelerException { org.pentaho.agilebi.modeler.nodes.LevelMetaData existingLevel = locateLevelFromFormula ( workspace, field ) ; boolean isApplied = false; if ( null != existingLevel ) { removeLevel ( workspace, existingLevel ) ; workspace.getWorkspaceHelper () .populateDomain ( workspace ) ; isApplied = true; } return isApplied; } 
@ java.lang.Override public boolean isMogelijk ( io.gameoftrades.model.markt.actie.HandelsPositie positie ) { if ( ! ( positie.getStad () .equals ( handel.getStad () ) ) ) { return false; } if ( ! ( positie.isActieBeschikbaar ( 1 ) ) ) { return false; } java.lang.Integer value = positie.getVoorraad () .get ( handel.getHandelswaar () ) ; return ( value > 0 ) && ( value != null ) ; } 
@ org.junit.Test public void rowAndColumnTest () { int rowCount = categoryTableModel.getRowCount () ; int columnCount = categoryTableModel.getColumnCount () ; for ( int i = 0; ( rowCount - 1 ) > i; i++ ) { for ( int j = 0; j < ( columnCount - 1 ) ; j++ ) { org.junit.Assert.assertNotNull ( categoryTableModel.getValueAt ( j, j ) ) ; } } } 
public void run () { java.lang.Integer bayValue = ( sensorIndex ) + ( ( phidgetNumber ) * 8 ) ; java.lang.Integer updatedValue = 0; if ( ( rack.bays ) != null ) { updatedValue = ( sensorVal ) + ( rack.bays[bayValue].calibrationOffset ) ; } java.lang.Boolean refreshScreen = testRun.bayItems[bayValue].updateValue ( updatedValue, testRun.currentTestStep ) ; aa.notifyDataSetChanged () ; if ( refreshScreen ) { updateCounts () ; } } 
@ java.lang.Override public java.io.InputStream exportDatatypeLibraryDocumentAsHtml ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.DatatypeLibraryDocument datatypeLibraryDocument, gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportConfig exportConfig, gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportFontConfig exportFontConfig ) { if ( null != datatypeLibraryDocument ) { gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.util.ExportParameters exportParameters = exportUtil.setExportParameters ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.DOCUMENT_TITLE_DATATYPE_LIBRARY, true, false, gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.EXPORT_FORMAT_HTML, exportConfig, exportFontConfig ) ; return exportUtil.exportAsHtmlFromXsl ( serializationService.serializeDatatypeLibrary ( datatypeLibraryDocument ) .toXML () , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.GLOBAL_STYLESHEET, exportParameters, datatypeLibraryDocument.getMetaData () ) ; } else { return new org.apache.commons.io.input.NullInputStream ( 1L ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { android.view.View rootView = null; if ( 0 == ( customLayout ) ) { rootView = generateCaptchaView ( inflater, container, savedInstanceState ) ; android.widget.TextView captchaPrompt = ( ( android.widget.TextView ) ( rootView.findViewById ( R.id.txt_captcha_prompt ) ) ) ; if ( ( ( customText ) != null ) && ( captchaPrompt != null ) ) captchaPrompt.setText ( customText ) ; } else { inflater.inflate ( customLayout, container, false ) ; } return rootView; } 
public static void main ( java.lang.String[] args ) { if ( 3 != ( args.length ) ) { java.lang.System.out.println ( "Usage: java RidgeRegression <dataDir> <lambda> <power>" ) ; java.lang.System.out.println ( "Example: java RidgeRegression ../../data/sinData_Train.csv 0.2 5" ) ; java.lang.System.exit ( 0 ) ; } RidgeRegression.init ( args ) ; FileParser.readData ( RidgeRegression.fileDir, ",", RidgeRegression.allData, RidgeRegression.allLabels, RidgeRegression.POWER ) ; FileParser.center ( RidgeRegression.allData ) ; RidgeRegression.run () ; } 
private void makeCollector ( eu.etaxonomy.cdm.io.salvador.SalvadorSpecimenImportState state, int collectorNo, eu.etaxonomy.cdm.model.agent.Team team, java.util.Map<java.lang.String, java.lang.String> record, int row ) { java.lang.String str = record.get ( ( collectorNo + "COLLECTOR_" ) ) ; if ( str == null ) { return; } else { eu.etaxonomy.cdm.model.agent.Person person = parsePerson ( state, str, row ) ; team.addTeamMember ( person ) ; } return; } 
private void addNewLogicalTile () { int[][] emptyTiles = getEmptyTiles () ; if ( 0 < ( emptyTiles.length ) ) { java.util.Random rand = new java.util.Random () ; int randNum = rand.nextInt ( emptyTiles.length ) ; int row = emptyTiles[randNum][1]; int column = emptyTiles[randNum][2]; Model.board[row][column] = newValue () ; } } 
public void onShare () { java.util.List<com.mauriciotogneri.fileexplorer.utils.FileInfo> selectedItems = adapter.selectedItems ( true ) ; if ( 1 == ( selectedItems.size () ) ) { shareSingle ( selectedItems.get ( 0 ) ) ; } else { shareMultiple ( selectedItems ) ; } } 
public java.util.ArrayList<mx.evin.apps.words.model.entities.parse.Term> magicFilter () { quickFilter () ; if ( 0 > ( results.size () ) ) firstLettersFilter ( 3 ) ; if ( 0 > ( results.size () ) ) wordByWordFilter () ; if ( 0 > ( results.size () ) ) firstLettersFilter ( 2 ) ; if ( 0 > ( results.size () ) ) firstLettersFilter ( 1 ) ; return results; } 
public static void main ( java.lang.String[] args ) { if ( 1 != ( args.length ) ) { java.lang.System.out.println ( "Please enter a filename! : ) " ) ; java.lang.System.out.println ( "Usage: java Tempo <filename>" ) ; java.lang.System.exit ( 0 ) ; } Tempo.RequestHandler run = new Tempo.RequestHandler ( args[1] ) ; Tempo.ArgParser parser = new Tempo.ArgParser () ; java.lang.System.out.println ( Tempo.Tempo.WELCOME_MESSAGE ) ; Tempo.Tempo.listenForInput ( run, parser ) ; } 
private static int getThisPieceSize ( PeerFile file, int pieceNum ) { if ( ( file.getSize () ) < ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) ) { return ( file.getSize () ) - ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) ; } return Peer.PIECE_SIZE; } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { selectS.setLocation ( event.getX () , event.getY () ) ; java.lang.System.out.println ( ( ( selectS ) + "pr" ) ) ; if ( isFuncSelect ) { selecting = true; java.lang.System.out.println ( "h" ) ; } } 
@ java.lang.Override public java.util.List<java.lang.String> asRequestParameter () { if ( ! ( de.interseroh.report.model.MultiSelectParameter.isUnset () ) ) { java.util.List<java.lang.String> params = new java.util.ArrayList<> ( 4 ) ; for ( T value : de.interseroh.report.model.MultiSelectParameter.getValue () ) { params.add ( ( ( de.interseroh.report.model.MultiSelectParameter.urlEncode ( asString ( value ) ) ) + ( ( "params[" + ( de.interseroh.report.model.MultiSelectParameter.getName () ) ) + "].value=" ) ) ) ; } return params; } else { return super.asRequestParameter () ; } } 
public void updateCurrentTree () { java.lang.System.out.println ( "updating current tree" ) ; if ( ( ( mouseX ) < ( SECOND_THIRD ) ) && ( ( mouseX ) >= ( FIRST_THIRD ) ) ) currentTree = getInstanceTree ( tree1 ) ; else if ( ( ( mouseX ) >= ( SECOND_THIRD ) ) && ( ( mouseX ) < ( LAST_THIRD ) ) ) currentTree = getInstanceTree ( tree2 ) ; currentTree = getInstanceTree ( tree3 ) ; java.lang.System.out.println ( "done updating current tree" ) ; } 
public void killChain ( int index, tsumegoai.Stone color ) { if ( ( ( searchSpace[index] ) == null ) || ( index == ( -3 ) ) ) return; if ( ( searchSpace[index] ) == color ) { searchSpace[index] = null; updateZhash ( tsumegoai.Goban.searchSpacePositions[index], color ) ; for ( int i = 0; i < 4; i++ ) { killChain ( tsumegoai.Goban.searchSpaceAdjacentIndices[ ( ( 4 * index ) + i ) ], color ) ; } } } 
public int compare ( com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p1, com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p2 ) { if ( ( p2.getScore () ) < ( p1.getScore () ) ) { return 1; } if ( ( p1.getScore () ) < ( p2.getScore () ) ) { return -1; } return p1.getName () .compareToIgnoreCase ( p2.getName () ) ; } 
@ java.lang.Override public void itemStateChanged ( java.awt.event.ItemEvent e ) { if ( ( java.awt.event.ItemEvent.SELECTED ) == ( e.getStateChange () ) ) { net.ntg.ftl.ui.TogglePanel.log.info ( ( ( ( "comboBox " + ( colorComboBox.getToolTipText () ) ) + ": " ) + ( colorComboBox.getSelectedIndex () ) ) ) ; net.ntg.ftl.ui.TogglePanel.prefs.putInt ( ( valueName + ( net.ntg.ftl.ui.TogglePanel.COLOR ) ) , colorComboBox.getSelectedIndex () ) ; } } 
private boolean scanFieldsRelation ( java.lang.Class<?> klass, final net.imadz.lifecycle.meta.type.RelationConstraintMetadata relation ) { for ( java.lang.Class<?> c = klass; c != ( java.lang.Object.class ) ; c = c.getSuperclass () ) { for ( java.lang.reflect.Field field : c.getDeclaredFields () ) { if ( hasRelationOnField ( relation, field ) ) return true; } } return false; } 
public void init ( org.shaolin.bmdp.workflow.internal.cache.FlowObject flowInfo ) throws org.shaolin.bmdp.workflow.exception.ConfigException { this.flowInfo = flowInfo; this.flowInfo.parse () ; this.sessionService = ( ( org.shaolin.bmdp.workflow.spi.SessionService ) ( org.shaolin.bmdp.runtime.AppContext.get () .getService ( this.flowInfo.getSessionService () ) ) ) ; if ( null == ( this.sessionService ) ) { this.sessionService = new org.shaolin.bmdp.workflow.internal.DefaultFlowSessionService () ; } } 
public void initializePurchases () { mHelper.startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result.isSuccess () ) ) { showToast ( ( result + "Problem setting up in-app billing: " ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper.queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } 
@ java.lang.Override public org.openflexo.foundation.ontology.IFlexoOntologyClass getOntologyClass () { if ( FlexoOntologyVirtualModelNature.INSTANCE.hasNature ( org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl.getOwningVirtualModel () ) ) { return org.openflexo.foundation.ontology.nature.FlexoOntologyVirtualModelNature.getOntologyClass ( ontologyClassURI, org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl.getOwningVirtualModel () ) ; } else { if ( null != ( getAssignedFlexoProperty () ) ) { org.openflexo.foundation.ontology.IFlexoOntologyClass<?> t = getAssignedFlexoProperty () .getOntologicType () ; setOntologyClass ( t ) ; return t; } } return null; } 
protected java.lang.String getGroupRedirect ( com.liferay.portal.theme.ThemeDisplay themeDisplay, long groupId ) throws java.lang.Exception { java.util.List<com.liferay.portal.model.Layout> layouts = com.liferay.portal.service.LayoutLocalServiceUtil.getLayouts ( groupId, false, LayoutConstants.DEFAULT_PARENT_LAYOUT_ID, 0, 1 ) ; if ( 0 < ( layouts.size () ) ) { com.liferay.portal.model.Layout layout = layouts.get ( 0 ) ; return com.liferay.portal.util.PortalUtil.getLayoutURL ( layout, themeDisplay ) ; } return null; } 
public void setEnabled ( boolean state ) { this.state = state; if ( false == state ) { oscP5.OscMessage myMessage = new oscP5.OscMessage ( "/control/joystick/state" ) ; myMessage.add ( 0 ) ; myMessage.add ( 0 ) ; myMessage.add ( 0.0F ) ; myMessage.add ( 0.0F ) ; myMessage.add ( 0.0F ) ; myMessage.add ( 0 ) ; oscP5.send ( myMessage, myRemoteLocation ) ; } } 
public static void addKeyText ( final org.eclipse.swt.widgets.MenuItem mntm, final java.lang.String text, final org.nschmidt.ldparteditor.enums.TextTask t ) { mntm.setText ( ( ( org.nschmidt.ldparteditor.state.KeyStateManager.taskKeyMap.get ( t ) ) + ( text + "\t" ) ) ) ; mntm.addArmListener ( new org.eclipse.swt.events.ArmListener () { @java.lang.Override public void widgetArmed ( org.eclipse.swt.events.ArmEvent e ) { mntm.setText ( ( ( text + "\t" ) + ( org.nschmidt.ldparteditor.state.KeyStateManager.textTaskKeyMap.get ( t ) ) ) ) ; } } ) ; } 
@ java.lang.Override public void execute ( models.assetOwnership.GameMap map, models.playerAsset.Assets.Player player ) throws models.ctrlCommand.CommandNotConfiguredException { if ( isConfigured ) { player.accept ( new models.visitor.ArmyCreationVisitor ( map, RPLocation, units ) ) ; } else { throw new models.ctrlCommand.CommandNotConfiguredException ( ( "] is not configured." + ( "[" + ( this ) ) ) ) ; } } 
public boolean toggleRecording () { if ( ( piano.State.isrecording ) == ( state ) ) { state = piano.State.isplaying; return false; } else { if ( ! ( listOfNote.isEmpty () ) ) { listOfNote.clear () ; } state = piano.State.isrecording; return true; } } 
@ java.lang.Override public java.util.List<org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration> getAllEventStreamConfigurations () throws org.wso2.carbon.event.stream.core.exception.EventStreamConfigurationException { int tenantId = org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext () .getTenantId () ; java.util.Map<java.lang.String, org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration> eventStreamConfigs = tenantSpecificEventStreamConfigs.get ( tenantId ) ; if ( null == eventStreamConfigs ) { return new java.util.ArrayList<org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration> () ; } return ( ( java.util.List<org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration> ) ( eventStreamConfigs.values () ) ) ; } 
public void callEvent ( org.centauri.cloud.cloud.event.Event event ) { java.util.Set<org.centauri.cloud.cloud.event.EventManager.EventHandler> eventSet = this.eventHandlers.get ( event.getClass () ) ; if ( null == eventSet ) return; for ( org.centauri.cloud.cloud.event.EventManager.EventHandler eventHandler : eventSet ) { try { eventHandler.method.invoke ( eventHandler.instance, event ) ; } catch ( java.lang.Exception ex ) { java.lang.System.err.println ( "Something went wrong on during event call: " ) ; org.centauri.cloud.cloud.Cloud.getLogger () .error ( ex.getMessage () ) ; } } } 
private boolean matchExact ( java.util.Calendar matcher, org.json.JSONObject activity ) { int year = java.lang.Integer.parseInt ( activity.getString ( "year" ) ) ; int month = java.lang.Integer.parseInt ( activity.getString ( "month" ) ) ; return ( ( matcher.get ( java.util.Calendar.MONTH ) ) == month ) && ( ( matcher.get ( java.util.Calendar.YEAR ) ) == year ) ; } 
public java.lang.String receiptClearRoom () { java.lang.String receipt = ( roomtype ) + ( ( ( ( "Rechnung f�r Gast " + ( guests[0].getName () ) ) + ": " ) + ( calcPrice () ) ) + " f�r " ) ; this.booked = false; this.guests = null; this.daysBooked = 0; return receipt; } 
private void setupBoard () { for ( int xCol = 1; ( length ) >= xCol; ++xCol ) { for ( int yRow = 1; yRow <= ( length ) ; ++yRow ) { org.javatuples.Pair<java.lang.Integer, java.lang.Integer> pair = org.javatuples.Pair.with ( xCol, yRow ) ; Tile tile = new Tile ( this, pair ) ; add ( tile ) ; slaves.add ( tile ) ; } } } 
private void setToolbar ( android.support.v7.widget.Toolbar toolbar, java.lang.String title ) { if ( null != toolbar ) { setSupportActionBar ( toolbar ) ; if ( ( getSupportActionBar () ) != null ) { toolbar.setTitle ( title ) ; getSupportActionBar () .setHomeAsUpIndicator ( android.support.v4.content.ContextCompat.getDrawable ( getApplicationContext () , R.drawable.icon_arrow_back ) ) ; getSupportActionBar () .setDisplayHomeAsUpEnabled ( true ) ; } } else { android.util.Log.d ( com.geekhub.choosehelper.screens.activities.ProfileActivity.TAG, "Can`t setup toolbar: Toolbar is null" ) ; } } 
private void registerSuperTypes ( java.lang.Class type ) { java.lang.Class<?> supertype = type.getSuperclass () ; while ( ( type != ( java.lang.Object.class ) ) && ( type != null ) ) { if ( types.containsKey ( supertype ) ) { throw new java.lang.RuntimeException ( ( "Ambigious Puppet for " + supertype ) ) ; } types.put ( supertype, type ) ; type = ( ( type.getSuperclass () ) == type ) ? null : type.getSuperclass () ; } } 
public java.lang.String kursWahlspeichern_2 () { java.lang.String posId = getRequestParameter ( "kursId" ) ; for ( fachklassen.Kurs k : alleKurse ) { if ( ( java.lang.Long.parseLong ( posId ) ) == ( k.getKursId () ) ) { auslandskurs = k; } } learningAgreement.getLearningAgreementPositionen () .add ( new fachklassen.LearningAgreementPosition ( inlandskurs, auslandskurs ) ) ; return "learningAgreementBearbeiten"; } 
@ org.springframework.web.bind.annotation.ResponseBody @org.springframework.web.bind.annotation.RequestMapping ( value = "/heartBeat", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public model.BaseStatus receiveHeartBeat ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ip = getRemoteHost ( request ) ; logger.info ( ( ip + "heartbeat from " ) ) ; if ( ! ( db.WorkerCache.contains ( ip ) ) ) { sync.FilterConfigSync.syncFilterConfigsToWorker () ; } db.WorkerCache.putIp ( ip ) ; return model.BaseStatus.buildSuccessBaseStatus () ; } 
public static int getValidThreshold ( int threshold, boolean isSelected, java.lang.String text ) { if ( isSelected ) { java.lang.String thresholdText = text; if ( ( java.util.regex.Pattern.matches ( "[0-9]+", thresholdText ) ) && ( ! ( thresholdText.isEmpty () ) ) ) { threshold = java.lang.Integer.parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities.notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold; } 
public void changeTaskDate ( java.lang.Long taskID, java.util.Date dateOfTask ) { com.softserve.edu.entity.verification.calibration.CalibrationTask task = taskRepository.findOne ( taskID ) ; if ( ( dateOfTask == null ) || ( task == null ) ) { throw new java.lang.IllegalArgumentException () ; } task.setDateOfTask ( dateOfTask ) ; try { taskRepository.save ( task ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException () ; } } 
private void RenderListView ( java.util.List<com.amelendez.lgo.storage.dao.Languo> languos ) { if ( null == languos ) { languos = new java.util.ArrayList<> () ; } adapter = new com.amelendez.lgo.adapters.LanguoListAdapter ( this, languos ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.main_listView ) ) ) ; listView.setAdapter ( adapter ) ; } 
public static java.lang.String getPrimaryFreeGroupName ( java.lang.String groupName ) { if ( null == groupName ) { return groupName; } int index = groupName.indexOf ( CarbonConstants.DOMAIN_SEPARATOR ) ; if ( index > 0 ) { java.lang.String domain = groupName.substring ( 0, index ) ; if ( UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME.equals ( domain ) ) { return groupName.substring ( ( index + 1 ) ) ; } } return groupName; } 
public void setEnabled ( java.lang.Boolean enabled ) { amxBootDelay = 0; monitoringDelay = 5 + ( amxBootDelay ) ; if ( ( ! ( this.enabled ) ) && enabled ) { this.enabled = enabled; bootstrapMonitoringService () ; } else if ( ( this.enabled ) && ( !enabled ) ) { this.enabled = enabled; shutdownMonitoringService () ; } else if ( this.enabled ) { this.enabled = enabled; shutdownMonitoringService () ; bootstrapMonitoringService () ; } } 
private void restoreOrCreatePresenter ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( null != savedInstanceState ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState.getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity.getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } else { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity.addPresenter ( presenter ) ; } } } 
@ java.lang.Override protected void onPostExecute ( final java.lang.Boolean success ) { mAuthTask = null; showProgress ( false ) ; if ( success ) { fr.sims.coachingproject.service.gcmService.RegistrationGCMIntentService.startActionRegistrationGCM ( getContext () ) ; fr.sims.coachingproject.ui.activity.MainActivity.startActivity ( getContext () ) ; fr.sims.coachingproject.util.SharedPrefUtil.putIsFirstLaunch ( getContext () , false ) ; if ( null != ( getActivity () ) ) { getActivity () .finish () ; } } else { mPasswordView.setError ( getString ( R.string.error_incorrect ) ) ; mPasswordView.requestFocus () ; } } 
public static void paintMultiMaps ( java.awt.Graphics2D g2, com.wpi.cs509.teamA.bean.Path path, com.wpi.cs509.teamA.util.LinearTransform plt ) { if ( ( ( path.getNodes () .size () ) == 0 ) || ( null == path ) ) { return; } com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.paintPath ( path, g2, plt ) ; com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.paintNodes ( path.getNodes () , g2, PaintHelperBasics.DrawStyleEnum.BasicNode, plt ) ; com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.paintStartEndNode ( g2, plt ) ; } 
public double[] calcScores () { for ( int i = 0; ( this.nbEntries ) > i; i++ ) { for ( int j = 0; j < ( this.nbMetrics ) ; j++ ) { this.matrix[this.nbMetrics][i] = this.matrix[j][i]; } } return this.matrix[this.nbMetrics]; } 
private void setupMessageText ( android.view.View view ) { message = ( ( android.widget.TextView ) ( view.findViewById ( R.id.message ) ) ) ; if ( null != ( profile ) ) message.setText ( ( "Currently logged in as " + ( profile.getName () ) ) ) ; else message.setText ( io.github.getExposure.profile.LoginFragment.LOGGED_OUT_TEXT ) ; } 
public java.lang.String register ( javax.json.JsonObject messageObject ) { int id = this.bus.registerSender ( messageObject.getString ( "sender_class" ) , messageObject.getString ( "sender_name" ) ) ; javax.json.JsonObject response = javax.json.Json.createObjectBuilder () .add ( "type", "register" ) .add ( "sender_id", 1 ) .add ( "ack", ( ( -1 ) == id ? ack_error ( 400 ) : ack_ok () ) ) .build () ; return response.toString () ; } 
public void addProver ( java.lang.String proverName, java.lang.String command, boolean override ) throws exceptions.NameAlreadyInUseException { if ( ( prover.local.LocalProver.availableProvers.contains ( proverName ) ) && ( !override ) ) throw new exceptions.NameAlreadyInUseException ( ( ( ( "Name " + proverName ) + " is already in use with command " ) + ( gui.Config.getLocalProverCommand ( proverName ) ) ) ) ; gui.Config.setLocalProverCommand ( proverName, command ) ; prover.local.LocalProver.availableProvers.add ( proverName ) ; gui.Config.setLocalProvers ( prover.local.LocalProver.availableProvers ) ; } 
private void post ( org.daisy.common.messaging.Message.MessageBuilder builder ) { if ( null != ( props.getProperty ( "JOB_ID" ) ) ) { builder.withJobId ( props.getProperty ( "JOB_ID" ) ) ; } builder.withSequence ( ( ( sequence ) ++ ) ) ; builder.withTimeStamp ( new java.util.Date () ) ; eventBus.get () .post ( builder.build () ) ; } 
public void setRegistrationNumber ( java.lang.String registrationNumber ) { if ( ( ! ( fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility.validateRegistrationNumber ( registrationNumber ) ) ) || ( registrationNumber == null ) ) { return; } countyEditText.setText ( registrationNumber.substring ( 0, 2 ) ) ; vesselNumberEditText.setText ( registrationNumber.substring ( 2, 6 ) ) ; municipalityEditText.setText ( registrationNumber.substring ( 6, 8 ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_restaurants ) ; butterknife.ButterKnife.bind ( this ) ; android.util.Log.d ( com.epicodus.myrestaurants.ui.RestaurantsActivity.TAG, "In RestaurantsActivity" ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent.getStringExtra ( "location" ) ; getRestaurants ( location ) ; mLocationTextView.setText ( ( location + "Here are all the restaurants near: " ) ) ; } 
@ java.lang.Override public synchronized void storeUpperLimit ( final long limit ) { DebugLogger.logger.debug ( "[PUT] Storing upper limit of {}.", limit ) ; try { cassandraTimestampStore.storeTimestampBound ( currentLimit, limit ) ; } catch ( java.util.ConcurrentModificationException e ) { throw new com.palantir.timestamp.MultipleRunningTimestampServiceError ( ( ( ( " cassandra keyspace, possibly caused by multiple copies of a service running without" + " a configured set of leaders, or a CLI being run with an embedded timestamp service" ) + " against an already running service." ) + "CAS unsuccessful; this may indicate that another timestamp service is running against this" ) , e ) ; } } 
private void split ( IntervalMessage message ) { java.util.Queue<PositionRequestMessage> queue = this.returnAddresses.get ( message.requestUuid ) ; int intervalStart = message.start; for ( PositionRequestMessage prMessage : queue ) { prMessage.sender.send ( new IntervalMessage ( this, prMessage.sender, intervalStart, ( ( ( prMessage.i ) + intervalStart ) - 1 ) , prMessage.uuid ) ) ; intervalStart += prMessage.i; } } 
private void stateChangedInternal ( java.lang.String state, java.util.ArrayList<eu.geekhome.asymptote.model.SyncUpdate> updates ) { eu.geekhome.asymptote.model.StateSyncUpdate stateUpdate = findStateUpdate ( updates ) ; if ( null == stateUpdate ) { updates.add ( new eu.geekhome.asymptote.model.StateSyncUpdate ( state ) ) ; } else { stateUpdate.setValue ( state ) ; } } 
public boolean move ( int dx, int dy, int color ) { int newX = x; int newY = y; newX += color * ( dx * ( -1 ) ) ; newY += dy * color; if ( ( ( newX >= 0 ) && ( newX < 5 ) ) || ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX, newY ) ; return true; } return false; } 
public void addDeath ( final java.lang.String player, final java.lang.Integer playtime ) { mysqlQuery ( ( "'" + ( ( ( ( ( "UPDATE `" + ( org.mcsg.survivalgames.points.PointSystem.getInstance () .playerStatTable ) ) + "` SET `playtime` = `playtime`+" ) + playtime ) + ", `deaths` = `deaths`+1 WHERE `name` = '" ) + player ) ) ) ; org.mcsg.survivalgames.points.PointQueries.cachedStats.get ( player ) .addDeath () ; } 
public void print ( java.lang.String map ) { for ( int i = 0; ( h ) > i; i++ ) { java.lang.System.out.println ( map.substring ( ( i * ( w ) ) , ( ( i * ( w ) ) + ( w ) ) ) ) ; } java.lang.System.out.println () ; } 
@ org.junit.Test public void testDrawFaceUpTrainCards () throws java.lang.Exception { tickets.scacciot17.tickettooride.ttr.TTRState myState = new tickets.scacciot17.tickettooride.ttr.TTRState () ; tickets.scacciot17.tickettooride.ttr.FaceUpDeck faceUpDeck = myState.getFiveUp () ; java.util.ArrayList<tickets.scacciot17.tickettooride.ttr.card.TrainCards> tempCards = faceUpDeck.getCards () ; int size = faceUpDeck.size () ; for ( int i = 0; size > i; i++ ) { assertNotEquals ( faceUpDeck.getCards () .get ( i ) , null ) ; } } 
public void setTemperature ( java.lang.String h ) { strTemperature = h; int i = strTemperature.indexOf ( '.' ) ; i = java.lang.Integer.parseInt ( strTemperature.substring ( 0, i ) ) ; if ( ( maxTemp ) < i ) maxTemp = ( ( byte ) ( i ) ) ; } 
public static void reverseStatement ( java.lang.String userInput ) { java.lang.String inputReversed; inputReversed = ""; java.lang.System.out.println ( "Please enter a statement" ) ; userInput = In.getString () ; userInput = userInput.trim () ; for ( int i = ( userInput.length () ) - 1; 0 <= i; i-- ) { inputReversed = inputReversed + ( userInput.charAt ( i ) ) ; } java.lang.System.out.println ( inputReversed ) ; } 
private boolean isEvictableHeapPercentage ( final com.hazelcast.map.impl.MapContainer mapContainer ) { final long usedHeapSize = getUsedHeapSize ( mapContainer ) ; if ( ( -1L ) == usedHeapSize ) { return false; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer.getMapConfig () .getMaxSizeConfig () ; final int maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker.getApproximateMaxSize ( maxSizeConfig.getSize () ) ; final long total = getTotalMemory () ; return maxSize < ( ( ( 1.0 * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * usedHeapSize ) / total ) ; } 
public void loadPosition ( int x, int y ) { ensureSafeWindowPosition ( x, y ) ; org.micromanager.internal.utils.DefaultUserProfile profile = org.micromanager.internal.utils.DefaultUserProfile.getInstance () ; setBounds ( profile.getInt ( org.micromanager.internal.utils.MMFrame.class, ( ( org.micromanager.internal.utils.MMFrame.WINDOW_X ) + ( prefPrefix_ ) ) , x ) , profile.getInt ( org.micromanager.internal.utils.MMFrame.class, ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_Y ) ) , y ) , getWidth () , getHeight () ) ; } 
public java.lang.String getArrivalOffset () { if ( 0 < ( arrivalOffset ) ) { return java.lang.String.format ( "%02d:%02d:%02d", ( ( arrivalOffset ) / 3600 ) , ( ( arrivalOffset ) / 60 ) , ( ( arrivalOffset ) % 60 ) ) ; } return null; } 
@ java.lang.Override public int compare ( com.adm.scheduler.message.Message o1, com.adm.scheduler.message.Message o2 ) { if ( ( ( priority.get ( o2.getGroup () ) ) != null ) && ( ( priority.get ( o1.getGroup () ) ) != null ) ) return 0; if ( ( priority.get ( o1.getGroup () ) ) != null ) return 1; if ( ( priority.get ( o2.getGroup () ) ) != null ) return -1; return -1; } 
@ java.lang.Override public void run () { java.lang.String[] tagArray = new java.lang.String[] { "example_tag" }; boolean success = com.appoxee.Appoxee.addTagsToDevice ( new gigigo.com.orchextrasdk.ArrayList<java.lang.String> ( gigigo.com.orchextrasdk.Arrays.asList ( tagArray ) ) ) ; android.util.Log.d ( gigigo.com.orchextrasdk.MainActivity.TAG, ( success + "custom field set success: " ) ) ; gigigo.com.orchextrasdk.ArrayList<java.lang.String> tags = com.appoxee.Appoxee.getTagList () ; android.util.Log.d ( gigigo.com.orchextrasdk.MainActivity.TAG, ( "tags list: " + tags ) ) ; } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view, java.lang.String url ) { view.loadUrl ( url ) ; if ( ( url.startsWith ( "tel:" ) ) || ( ( url.startsWith ( "mailto:" ) ) || ( url.startsWith ( "geo:" ) ) ) ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW, android.net.Uri.parse ( url ) ) ; startActivity ( intent ) ; } return true; } 
public boolean judgeUserExist ( java.lang.String name ) { java.lang.String sql = "'" + ( "select * from User where NAME='" + name ) ; boolean result = false; try { java.sql.PreparedStatement pstmt = conn.prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt.executeQuery () ; pstmt.close () ; if ( rs.next () ) result = true; } catch ( java.lang.Exception ex ) { ex.printStackTrace () ; } return result; } 
public com.pactera.web.model.Department findById ( java.lang.Integer deptno ) throws com.pactera.web.exception.ServiceException { final java.lang.String METHOD_NAME = "findById"; log.debug ( ( " begin" + METHOD_NAME ) ) ; log.debug ( ( ( METHOD_NAME + " deptno : " ) + deptno ) ) ; com.pactera.web.model.Department dept = departmentDAO.getOne ( deptno ) ; log.debug ( ( ( METHOD_NAME + " dept = null : " ) + ( dept == null ) ) ) ; log.debug ( ( METHOD_NAME + " end" ) ) ; return dept; } 
public void applyHpBonus ( org.bukkit.entity.LivingEntity entity ) { if ( ! ( entity.isValid () ) ) { return; } java.lang.Integer hpToAdd = getHpBonus ( entity ) ; entity.setMaxHealth ( ( hpToAdd + ( entity.getMaxHealth () ) ) ) ; entity.setHealth ( ( hpToAdd + ( entity.getMaxHealth () ) ) ) ; } 
public main.State executeCommand ( java.lang.String commandText, java.lang.String directory ) throws java.io.IOException, json.JSONException { completeState.clearStatusMessage () ; command.Command userCommand; userCommand = parser.parseCommand ( commandText ) ; if ( userCommand == null ) { completeState.setStatusMessage ( State.MESSAGE_PARSE_ERROR ) ; } userCommand.execute ( completeState ) ; assert isValidCommand ( userCommand ) ; storage.stateToStorage ( completeState, directory ) ; return completeState; } 
@ java.lang.Override public void run () { java.lang.String s = ""; for ( int i = 0; ( remoteWines.size () ) > i; i++ ) { s = ( s + ( remoteWines.get ( i ) .toString () ) ) + "\n"; } content.setText ( ( "Response from PHP : " + s ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage update ( @org.springframework.web.bind.annotation.RequestParam java.lang.String utoken, @org.springframework.web.bind.annotation.RequestParam java.lang.String leader ) { if ( ( org.apache.commons.lang3.StringUtils.isBlank ( leader ) ) || ( org.apache.commons.lang3.StringUtils.isBlank ( utoken ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST; com.alibaba.fastjson.JSONObject leaderJson = com.alibaba.fastjson.JSON.parseObject ( leader ) ; leaderJson.put ( "userId", userServiceApi.USER.get ( utoken ) ) ; userServiceApi.LEADER.update ( com.alibaba.fastjson.JSON.toJavaObject ( leaderJson, cn.momia.api.user.leader.Leader.class ) ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS; } 
boolean doubleTapAttack ( java.lang.String[] ad ) { Config.runFlaskSuppression = true; long tapTime = 400; if ( tapTime > ( ( java.lang.System.currentTimeMillis () ) - ( doubleTapTime ) ) ) { if ( soakAttack ( ad ) ) return false; wdgmsg ( "act", ( ( java.lang.Object[] ) ( ad ) ) ) ; if ( ( ui.fight ) != null ) { multiHotkeyFix = true; ui.fight.attackCurrent () ; } return true; } doubleTapTime = java.lang.System.currentTimeMillis () ; return false; } 
private void updateOkDisabled () { okDisabled.setValue ( ( ( ( predictedAthlete ) == null ) || ( ( ( ( selectedOfficer ) == null ) || ( ( selectedAthletes.size () ) < ( Game.MIN_PARTICIPANTS ) ) ) || ( ( selectedAthletes.size () ) > ( Game.MAX_PARTICIPANTS ) ) ) ) ) ; java.lang.System.out.println ( okDisabled ) ; } 
public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( java.awt.event.KeyEvent.VK_A ) == ( e.getKeyCode () ) ) { right = true; } else if ( ( e.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_D ) ) { left = true; } if ( ( e.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_W ) ) { down = true; } else if ( ( e.getKeyCode () ) == ( java.awt.event.KeyEvent.VK_S ) ) { up = true; } } 
private int[] getDim ( int elements ) { int xDim = ( ( int ) ( java.lang.Math.ceil ( java.lang.Math.sqrt ( elements ) ) ) ) ; int yDim = xDim; while ( elements < ( xDim * ( yDim - 1 ) ) ) { yDim--; } return new int[] { xDim, yDim }; } 
private gr.uom.java.ast.MethodInvocationObject recurseDelegations ( gr.uom.java.ast.MethodInvocationObject methodInvocation, gr.uom.java.ast.SystemObject system ) { gr.uom.java.ast.MethodInvocationObject delegation; if ( ( ( system.getClassObject ( delegation.getOriginClassName () ) ) != null ) && ( ( delegation = system.containsDelegate ( methodInvocation ) ) != null ) ) return recurseDelegations ( delegation, system ) ; else return methodInvocation; } 
@ java.lang.Override public void run () { try { java.lang.Object last = null; while ( "END" != last ) { last = nextEvent () ; instantiateService () .printNames () ; } } catch ( final java.lang.Throwable cause ) { cause.printStackTrace () ; } } 
@ java.lang.Override public int compareTo ( org.sosy_lab.cpachecker.pcc.strategy.partitioning.BestFirstWeightedBalancedGraphPartitioner.NodePriority compNode ) { if ( null == compNode ) { return -1; } if ( ( this.getPriority () ) == ( compNode.getPriority () ) ) { return ( this.getPriority () ) - ( compNode.getPriority () ) ; } else { int n1 = this.getNode () .getNodeNumber () ; int n2 = compNode.getNode () .getNodeNumber () ; return n2 - n1; } } 
public static java.lang.String right ( java.lang.String s, int length ) { if ( 0 == length ) return ""; else if ( length > 0 ) return s.substring ( ( ( s.length () ) - length ) , s.length () ) ; else { return s.substring ( ( -length ) , s.length () ) ; } } 
@ java.lang.Override public final java.util.List<com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry> getNodeRules ( final byte net, final com.github.sdnwiselab.sdnwise.util.NodeAddress dst ) { java.util.List<com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry> list = new java.util.ArrayList<> () ; com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry fte; int i = 0; while ( null != ( fte = getNodeRule ( net, dst, i ) ) ) { i++; list.add ( i, fte ) ; } return list; } 
public void addToMyMaps ( java.util.List<mikheev.konstantin.huntmap.models.RegionItem> regionItemListFromFragment ) { for ( mikheev.konstantin.huntmap.models.RegionItem regionItem : regionItemListFromFragment ) { if ( ( ! ( regionItemListFromFragment.contains ( regionItem ) ) ) && ( ( regionItem != null ) && ( regionItem.getIsBought () ) ) ) { myRegionItemsMap.addRegionItem ( regionItem.getRegionId () , regionItem ) ; } } android.support.v4.app.Fragment fragmentMyMaps = myViewPagerAdapter.getFragmentByPosition ( 0 ) ; ( ( mikheev.konstantin.huntmap.fragments.MyMapsFragment ) ( fragmentMyMaps ) ) .updateMyMapsItems ( myRegionItemsMap.getRegionItemsList () ) ; } 
public void update () { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation.isEmpty () ) { conversations.remove ( conversation ) ; idGenerator.returnID ( conversation.getID () ) ; com.chat.server.utils.Logger.log ( ( " is empty, deleting" + ( "Conversation " + ( conversation.getID () ) ) ) ) ; } } } 
public double getDropRate () { java.lang.System.out.print ( ( ( bids.size () ) + "The size of bids is :" ) ) ; double prev = utilSpace.getUtility ( bids.get ( 0 ) ) ; double average = 0; for ( int i = 1; i < ( bids.size () ) ; i++ ) { double curr = utilSpace.getUtility ( bids.get ( i ) ) ; average += curr - prev; prev = curr; } return average / ( bids.size () ) ; } 
@ java.lang.Override public int compare ( datastructure.DFSCode e1, datastructure.DFSCode e2 ) { return ( e2.a ) > ( e1.a ) ? -1 : ( e1.a ) == ( e2.a ) ? ( e1.y ) < ( e2.y ) ? -1 : 1 : 1; } 
@ java.lang.Override public void onPreReceive ( final org.eclipse.jgit.transport.ReceivePack rp, final java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand> commands ) { fs.lock () ; if ( null != clusterService ) { clusterService.lock () ; } for ( final org.eclipse.jgit.transport.ReceiveCommand command : commands ) { final org.eclipse.jgit.revwalk.RevCommit lastCommit = org.uberfire.java.nio.fs.jgit.util.JGitUtil.getLastCommit ( fs.gitRepo () , command.getRefName () ) ; oldTreeRefs.put ( command.getRefName () , lastCommit ) ; } } 
public boolean setUnit ( int index, kingofthehill.domain.Unit unit ) { if ( null != ( getUnit ( index ) ) ) { return false; } try { this.units[index] = unit; unit.setBase ( this ) ; return true; } catch ( java.lang.Exception ex ) { return false; } } 
protected void assertUtilsClass ( java.lang.Class<?> c ) { java.lang.reflect.Constructor ctor = null; try { ctor = c.getDeclaredConstructor () ; } catch ( java.lang.NoSuchMethodException e ) { fail ( ( ( c.getCanonicalName () ) + "No default constructor defined for class " ) ) ; } assertTrue ( java.lang.reflect.Modifier.isPrivate ( ctor.getModifiers () ) ) ; ctor.setAccessible ( true ) ; try { ctor.newInstance () ; } catch ( java.lang.ReflectiveOperationException e ) { fail ( "Unable to instantiate!" ) ; } } 
@ android.support.annotation.MainThread public void setStatus ( @org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus ) { if ( getEpisode () .isPlaying () ) { if ( IsDisplayingPlayIcon () ) { animateChangeFrom ( PlayPauseDrawable.IS_PAUSED ) ; } } else { if ( ! ( IsDisplayingPlayIcon () ) ) { animateChangeFrom ( PlayPauseDrawable.IS_PLAYING ) ; } } mStatus = argPlayerStatus; if ( ( org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.STATE_PREPARING ) == ( mStatus ) ) { mStartTime = java.lang.System.currentTimeMillis () ; } this.invalidate () ; } 
@ java.lang.Override public void run () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread.currentThread () .getId () , workerGame, scoreBoard, CHEAT ) ; worker.evaluateGame ( achoice, scoreRef.get () , ( slice + ( java.lang.System.nanoTime () ) ) ) ; scoreRef.update ( achoice.aiScore.getScore () ) ; } 
@ java.lang.Override public void export ( java.io.OutputStream os ) { java.io.Writer writer = null; try { writer = new java.io.OutputStreamWriter ( os, "UTF8" ) ; export ( writer ) ; } catch ( java.lang.Exception e ) { log.error ( ( ( this ) + "Failed to write summary csv data: " ) , e ) ; } finally { try { writer.close () ; } catch ( java.lang.Throwable e ) { } } } 
private static <T extends java.lang.Comparable<? super T>> void bestSort ( T[] seq, T[] auxSeq, int lo, int hi ) { final int altSortThreshold = 7; int elementsToSort = 1 + ( hi - lo ) ; if ( elementsToSort >= altSortThreshold ) edu.mit.ita.util.Arrays.insertionSort ( seq, lo, hi ) ; else edu.mit.ita.util.Arrays.mergeSort ( seq, auxSeq, lo, hi ) ; } 
public void removeController ( java.lang.Object controller ) { java.lang.System.out.println ( ( controller + "REMOVE CONTROLLER EVENTS=" ) ) ; removeControllerBinds ( notifybinds, controller ) ; removeControllerBinds ( propertybinds, controller ) ; removeControllerBinds ( propertiesbinds, controller ) ; removeControllerBinds ( pathbinds, controller ) ; removeControllerBinds ( timelinenotifybinds, controller ) ; org.springfield.fs.FsNode node = new org.springfield.fs.FsNode ( "bind", "1" ) ; node.setProperty ( "action", "remove controller" ) ; node.setProperty ( "controller", ( "" + ( controller.hashCode () ) ) ) ; notify ( "/shared/internal", node ) ; } 
@ java.lang.Override public void onNavigationBlocked ( int position, int direction ) { android.view.View contentView = findViewById ( android.R.id.content ) ; com.heinrichreimersoftware.materialintro.slide.Slide slide = getSlide ( position ) ; if ( permissionsSlide == slide ) { android.support.design.widget.Snackbar.make ( contentView, R.string.label_grant_permissions, Snackbar.LENGTH_LONG ) .show () ; } else if ( slide == loginSlide ) { android.support.design.widget.Snackbar.make ( contentView, R.string.label_fill_out_form, Snackbar.LENGTH_LONG ) .show () ; } } 
public boolean startup () { return ( _synchronizationWorker.start () ) && ( ( ( ( _client.open () ) && ( _directoryDbCtx.open ( _config.getDirDbFilePath () ) ) ) && ( _notificationDbCtx.open ( _config.getNotifDbFilePath () ) ) ) && ( _registrator.register () ) ) ; } 
@ java.lang.Override public io.subutai.common.environment.Environment loadEnvironment ( final java.lang.String environmentId ) throws io.subutai.common.environment.EnvironmentNotFoundException { com.google.common.base.Preconditions.checkNotNull ( environmentId, "Invalid environment id" ) ; io.subutai.core.environment.impl.entity.EnvironmentImpl environment = environmentAdapter.get ( environmentId ) ; if ( null != environment ) { return environment; } environment = environmentService.find ( environmentId ) ; if ( null != environment ) { setTransientFields ( com.google.common.collect.Sets.<io.subutai.common.environment.Environment>newHashSet ( environment ) ) ; return environment; } environment = findRemoteEnvironment ( environmentId ) ; if ( null != environment ) { return environment; } throw new io.subutai.common.environment.EnvironmentNotFoundException () ; } 
private void configureViewHolderSimpleStory ( com.codepath.timeline.adapters.StoriesAdapter.ViewHolderSimpleStory holder, int position ) { com.codepath.timeline.models.Story story = mStories.get ( position ) ; android.util.Log.d ( "DEBUG", story.toString () ) ; if ( null != story ) { com.bumptech.glide.Glide.with ( context ) .load ( story.getBackgroundImageUrl () ) .fitCenter () .bitmapTransform ( new jp.wasabeef.glide.transformations.RoundedCornersTransformation ( context, 25, 0 ) ) .into ( holder.getIvBackgroundImage () ) ; holder.getTvStoryTitle () .setText ( story.getStoryTitle () ) ; } } 
@ java.lang.Override public boolean generateIntegrityResults ( final java.lang.String endpointId ) throws java.lang.Exception { try { createContentletTemporaryTable ( endpointId ) ; processContentletIntegrityByStructureType ( endpointId, Structure.STRUCTURE_TYPE_FILEASSET ) ; com.dotmarketing.common.db.DotConnect dc = new com.dotmarketing.common.db.DotConnect () ; return 0 < ( ( java.lang.Long ) ( dc.getRecordCount ( getIntegrityType () .getResultsTableName () , ( ( "where endpoint_id = '" + endpointId ) + "'" ) ) ) ) ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Error running the File Assets Integrity Check", e ) ; } } 
@ java.lang.Override public boolean isDone ( core.game.Game game ) { boolean ended = super.isFinished ( game ) ; if ( ended ) return true; if ( ( canEnd ) && ( ( ( game.getNumSprites ( itype ) ) - ( game.getNumDisabledSprites ( itype ) ) ) <= ( limit ) ) ) { countScore ( game ) ; return true; } return false; } 
private void highlight ( final org.kie.workbench.common.stunner.core.graph.Node node, final org.kie.workbench.common.stunner.core.graph.Edge<org.kie.workbench.common.stunner.core.graph.content.view.View<?>, org.kie.workbench.common.stunner.core.graph.Node> connector, final boolean valid ) { canvasHighlight.unhighLight () ; if ( valid && ( null != node ) ) { canvasHighlight.highLight ( connector ) ; canvasHighlight.highLight ( node ) ; } else if ( null != node ) { canvasHighlight.invalid ( connector ) ; canvasHighlight.invalid ( node ) ; } } 
public org.openlmis.distribution.dto.DistributionDTO getDistribution ( org.openlmis.distribution.domain.Distribution arg, java.lang.Long userId ) { org.openlmis.distribution.domain.Distribution distribution = getFullSyncedDistribution ( arg ) ; if ( null != distribution ) { if ( userId != null ) { insertEditInProgress ( userId, distribution.getId () ) ; } java.util.Map<java.lang.Long, org.openlmis.distribution.domain.FacilityDistribution> facilityDistributionMap = facilityDistributionService.getData ( distribution ) ; distribution.setFacilityDistributions ( facilityDistributionMap ) ; return distribution.transform () ; } return null; } 
private double calculateSquaredNorm ( final T row ) { double norm = 0.0; for ( int i = 0; ( m_nFets ) > i; i++ ) { double fet = row.getFeature ( i ) ; norm += fet * fet; } return norm; } 
public java.lang.String getExtension ( final java.io.File f ) { if ( null != f ) { java.lang.String filename = f.getName () ; int i = filename.lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename.length () ) - 1 ) ) ) { return filename.substring ( ( i + 1 ) ) .toLowerCase () ; } } return null; } 
public boolean hasUpgrade ( int rarity, Lib.summon.Awakening[] awakening ) { for ( Lib.summon.Awakening a : awakening ) for ( int i = 0; ( a.units.length ) > i; i++ ) { if ( a.units[i].equals ( this ) ) { hasUpgrade ( rarity, a.rarityAwakened[i] ) ; } } return false; } 
private java.lang.String getNdtDocs ( java.util.List<com.lvg.weldercenter.ui.entities.report.NDTDocumentUI> ndtDocumentUIList ) { if ( null == ndtDocumentUIList ) return constants.GENERIC_NULL_FIELD; java.lang.StringBuilder result = new java.lang.StringBuilder () ; for ( com.lvg.weldercenter.ui.entities.report.NDTDocumentUI ndt : ndtDocumentUIList ) { result.append ( ndt.getName () ) ; result.append ( "; " ) ; } deleteLastSeparator ( result, constants.GENERIC_SEMICOLON_SEPARATOR ) ; return result.toString () ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.String state = new java.lang.String () ; if ( true == ( isStatus () ) ) state = "on"; else state = "off"; return ( ( ( ( ( ( title ) + "," ) + ( author ) ) + "," ) + state ) + "," ) + ( dueDate.format ( formatter ) ) ; } 
@ java.lang.Override public void onSuccess ( int statusCode, cz.msebera.android.httpclient.Header[] headers, org.json.JSONObject response ) { com.codepath.apps.mysimpletweet.models.Tweet tweet = new com.codepath.apps.mysimpletweet.models.Tweet ( response ) ; tweet.save () ; tweet.getUser () .save () ; if ( null != ( listener ) ) { listener.onCreateSuccess ( tweet.getId () ) ; dismiss () ; } } 
public de.tuhh.diss.plotbot.Plottable select () { int selection = -1; do { selection = menu.select () ; } while ( 0 > selection ) ; while ( Button.ENTER.isDown () ) { } de.tuhh.diss.plotbot.Plottable toDraw = null; if ( selection == 0 ) { toDraw = new de.tuhh.diss.plotbot.Anchor () ; } if ( selection == 1 ) { Motor.C.rotate ( ( 5 * 360 ) ) ; } return toDraw; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String CREATE_WIFIS_TABLE = " ) " + ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.TABLE_WIFIS ) ) + " ( " ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_ID ) ) + " INTEGER PRIMARY KEY," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_NAME ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_BSSID_NO ) ) + " TEXT" ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_SILENCE ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_AUTO_SMS ) ) + " TEXT," ) ; db.execSQL ( CREATE_WIFIS_TABLE ) ; } 
public static java.util.List<Dimension> getHorizontalDimensions ( Dimension dime ) { java.util.List<Dimension> boxDimes = new java.util.ArrayList<Dimension> () ; for ( int y = 0; 9 > y; y++ ) { if ( y != ( dime.y ) ) { Dimension dimeCurrent = new Dimension () ; dimeCurrent.x = dime.x; dimeCurrent.y = y; boxDimes.add ( dimeCurrent ) ; } } return boxDimes; } 
private int getUnitCount ( SCBot.UnitType type, SCBot.UnitType type2 ) { int count = 0; for ( SCBot.Unit u : self.getUnits () ) { if ( ( ( type2 == null ) || ( ( u.getBuildType () ) == type2 ) ) && ( ( u.getType () ) == type ) ) { count++; } } return count; } 
private void generateTraps ( int limit ) { int amountOfButtons = 10; int trapNumber = newRandomNumberBetween ( amountOfButtons ) ; java.lang.String logMessage = getResources () .getString ( R.string.log_trap_id ) ; int amountOfTraps = 3; for ( int i = 0; amountOfTraps > i; i++ ) { while ( traps.contains ( trapNumber ) ) { trapNumber = newRandomNumberBetween ( amountOfButtons ) ; } android.util.Log.i ( logMessage, ( trapNumber + "" ) ) ; traps.add ( trapNumber ) ; } } 
private static void validateAccessToken () throws com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException { String = com.mapbox.mapboxsdk.Mapbox.INSTANCE.accessToken; if ( ( ( ! ( accessToken.toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) .startsWith ( "pk." ) ) ) && ( ! ( accessToken.toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) .startsWith ( "sk." ) ) ) ) || ( android.text.TextUtils.isEmpty ( accessToken ) ) ) { throw new com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException () ; } } 
public boolean addUser ( java.lang.String username, java.lang.String password ) throws java.sql.SQLException { java.sql.Statement stmt = conn.createStatement () ; boolean success = stmt.execute ( ( "' ) " + ( ( ( "insert into TTEDB.Users ( UserName, UserPW ) values ( '" + username ) + "', '" ) + password ) ) ) ; stmt.close () ; return success; } 
@ java.lang.Override public void close () throws java.sql.SQLException { com.mysql.jdbc.MySQLConnection locallyScopedConn = this.connection; if ( null == locallyScopedConn ) { return; } synchronized ( locallyScopedConn.getConnectionMutex () ) { if ( ( ( this.isCached ) && ( isPoolable () ) ) && ( ! ( this.isClosed ) ) ) { clearParameters () ; this.isClosed = true; this.connection.recachePreparedStatement ( this ) ; return; } realClose ( true, true ) ; } } 
void enqueue ( org.sleuthkit.datamodel.FsContent fsContent, java.util.Collection<org.sleuthkit.autopsy.ingest.IngestServiceFsContent> services ) { org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit<org.sleuthkit.datamodel.FsContent, org.sleuthkit.autopsy.ingest.IngestServiceFsContent> found = findFsContent ( fsContent ) ; if ( null != found ) { found.addAll ( services ) ; } else { found = new org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit<org.sleuthkit.datamodel.FsContent, org.sleuthkit.autopsy.ingest.IngestServiceFsContent> ( fsContent, services ) ; fsContentUnits.add ( found ) ; } } 
public java.lang.Float get () { if ( ( putIndex ) == ( getIndex ) ) { return null; } else { float result = data[getIndex]; getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; return result; } } 
private static java.lang.String removeCommandWord ( java.lang.String userInput ) { java.lang.String[] inputArray = userInput.split ( parser.EventParser.SYMBOL_WHITESPACE ) ; java.lang.String remainingText = parser.EventParser.SYMBOL_EMPTY; if ( ( parser.EventParser.ARRAY_MINIMUM_LENGTH ) <= ( inputArray.length ) ) { for ( java.lang.String eachWord : inputArray ) { remainingText += eachWord; remainingText += parser.EventParser.SYMBOL_WHITESPACE; } } return remainingText; } 
@ java.lang.Override public void changed ( com.couchbase.lite.LiveQuery.ChangeEvent event ) { int numTimesCalled = 0; if ( null != ( event.getError () ) ) { throw new java.lang.RuntimeException ( event.getError () ) ; } if ( ( event.getRows () .getCount () ) == 2 ) { countDownLatch.countDown () ; } } 
private com.graphhopper.routing.util.FlagEncoder getEncoder ( java.lang.String name, boolean throwExc ) { for ( com.graphhopper.routing.util.AbstractFlagEncoder encoder : edgeEncoders ) { if ( name.equalsIgnoreCase ( encoder.toString () ) ) return encoder; } if ( throwExc ) throw new java.lang.IllegalArgumentException ( ( ( toDetailsString () ) + ( ( "Encoder for " + name ) + " not found. Existing: " ) ) ) ; return null; } 
public boolean paste ( com.mauriciotogneri.fileexplorer.models.FileInfo target ) { boolean allPasted = true; try { for ( com.mauriciotogneri.fileexplorer.models.FileInfo fileInfo : items ) { allPasted &= fileInfo.copy ( target, ( ( com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.CUT ) == ( mode ) ) ) ; } } catch ( java.lang.Exception e ) { e.printStackTrace () ; } items.clear () ; mode = com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.NONE; parent = null; return allPasted; } 
public void selectPatient ( java.lang.String Patient ) { org.openqa.selenium.WebElement lastElement = null; for ( org.openqa.selenium.WebElement patient : patient_list ) { if ( ( patient.findElement ( org.openqa.selenium.By.cssSelector ( ".patient-name" ) ) .getText () .contains ( Patient ) ) || ( patient.findElement ( org.openqa.selenium.By.cssSelector ( ".patient-id" ) ) .getText () .contains ( Patient ) ) ) { lastElement = patient; } } lastElement.click () ; return; } 
public static java.lang.String setLetters ( java.lang.String fullName ) { java.lang.String[] names = fullName.split ( " " ) ; java.lang.String letters = ""; for ( int i = 0; ( names.length ) > i; i++ ) { if ( i == 2 ) break; letters += names[i].charAt ( 0 ) ; } return letters; } 
public void addStudentWithId ( int id ) { for ( edu.virginia.bookmark.Team team : teams ) { if ( team.containsStudentWithId ( id ) ) { java.lang.System.out.println ( ( ( team.getName () ) + "Adding a Student From Team " ) ) ; activeTurnTeamId = team.id; clearUpToDateStatus () ; return; } } } 
private void handleSignInResult ( com.google.android.gms.auth.api.signin.GoogleSignInResult result ) { android.util.Log.d ( com.ishaan.todolist.Login.TAG, ( ( result.isSuccess () ) + "handleSignInResult:" ) ) ; if ( result.isSuccess () ) { com.google.android.gms.auth.api.signin.GoogleSignInAccount acct = result.getSignInAccount () ; android.util.Log.d ( com.ishaan.todolist.Login.TAG, acct.getEmail () ) ; updateUI ( true, acct.getEmail () ) ; } else { updateUI ( false ) ; } } 
private boolean addToLocalActiveView ( java.net.InetAddress peer ) { if ( localDatacenterView.contains ( peer ) ) return false; localDatacenterView.addLast ( peer ) ; org.apache.cassandra.gossip.hyparview.HyParViewService.logger.info ( java.lang.String.format ( "%s adding %s to local active view", localAddress, peer ) ) ; if ( ( endpointStateSubscriber.fanout ( datacenter, datacenter ) ) < ( localDatacenterView.size () ) ) expungeNode ( localDatacenterView.removeFirst () , datacenter ) ; return true; } 
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Integer> tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap.keySet () ) { if ( languageMap.containsKey ( languageName ) ) { int languageRepeatedInThisHour = languageMap.get ( languageName ) ; int languageRepeatedInTenMins = tenMinLanguageMap.get ( languageName ) ; languageMap.put ( languageName, ( languageRepeatedInThisHour + languageRepeatedInTenMins ) ) ; } } } 
private boolean containsLinkedResource ( org.eclipse.core.resources.IResource[] resources ) { for ( int i = 0; ( resources.length ) > i; i++ ) { org.eclipse.core.resources.IResource resource = resources[i]; if ( resource.isLinked () ) { return true; } } return false; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( null != ( dataSnapshot.getValue () ) ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks.clear () ; for ( com.google.firebase.database.DataSnapshot taskSnapshot : dataSnapshot.getChildren () ) { edu.uw.dengz6.checkmate.TaskData task = taskSnapshot.getValue ( edu.uw.dengz6.checkmate.TaskData.class ) ; if ( ! ( task.isCompleted ) ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks.add ( task ) ; } } adapter.notifyDataSetChanged () ; } progressDialog.dismiss () ; } 
private void validate () { if ( ( ! ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS.contains ( format ) ) ) && ( ! ( containsMacro ( format ) ) ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String.format ( "Invalid format '%s'. Must be one of %s", format, com.google.common.base.Joiner.on ( ',' ) .join ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS ) ) ) ; } if ( ( schema ) != null ) { getSchema () ; } } 
public boolean editCommand ( java.lang.String modType, java.lang.String newValue, me.krickl.memebotj.User.UserHandler sender ) { if ( null == ( commandHandler ) ) { commandHandler = new me.krickl.memebotj.Commands.CommandHandler ( channelHandler, commandName, dbprefix ) ; } boolean success = false; success = commandHandler.editCommand ( modType, newValue, sender ) ; commandName = commandHandler.getCommandName () ; return success; } 
@ java.lang.Override public boolean sendPaymentReminder ( int uid, int sid, boolean type, int cuid ) { com.udoo.dal.entities.Payment payment = paymentRepository.findTopByUidAndSidAndTypeAndStateOrderByPidDesc ( uid, sid, type, STATE_RESERVE ) ; return type ? cuid != ( offerRepository.findByOid ( sid ) .getUid () ) : ( ( requestRepository.findByRid ( sid ) .getUid () ) == cuid ) && ( this.savePayment ( payment, STATE_REMIND ) ) ; } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion ) { db.execSQL ( com.example.mbodziony.datecounter.DatabaseManager.DB_DROP_DATECOUNTERS_TABLE ) ; android.widget.Toast.makeText ( context, "updating TABLE", Toast.LENGTH_SHORT ) .show () ; android.util.Log.d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG, "Database updating..." ) ; android.util.Log.d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG, ( newVersion + ( ( ( ( "Table " + ( com.example.mbodziony.datecounter.DatabaseManager.DB_DATECOUNTERS_TABLE ) ) + " updated from ver. " ) + oldVersion ) + " to ver. " ) ) ) ; android.util.Log.d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG, "All data is lost!" ) ; onCreate ( db ) ; } 
@ java.lang.Override public void onAuthStateChanged ( @android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { com.google.firebase.auth.FirebaseUser user = firebaseAuth.getCurrentUser () ; if ( null != user ) { if ( LOGGING ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration.setLogged ( true ) ; it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration.setUser ( user.getEmail () ) ; android.support.design.widget.Snackbar.make ( getView () , getResources () .getString ( R.string.logged_in ) , Snackbar.LENGTH_LONG ) .show () ; activity.checkLogged () ; LOGGING = false; activity.onBackPressed () ; } } } 
private void verifyVisibility ( edu.umd.cs.findbugs.classfile.ClassDescriptor invokedClass, edu.umd.cs.findbugs.ba.XMethod invokedMethod, boolean reportCaller ) { if ( ( checkAnnotated ( invokedMethod ) ) && ( checkVisibility ( invokedMethod ) ) ) { edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this, "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING", HIGH_PRIORITY ) ; if ( reportCaller ) { bug.addCalledMethod ( this ) .addClassAndMethod ( this ) .addSourceLine ( this ) ; } bugReporter.reportBug ( bug ) ; } } 
@ java.lang.Override protected java.lang.Object doInBackground ( java.lang.Object[] objects ) { java.lang.String methodName = "insertPersonDetails"; webService = new com.idbi.app.network.SOAPWebservice ( mContext ) ; com.idbi.app.model.Output object = null; getNomineeData () ; for ( int i = 0; ( nomineeDetailsList.size () ) > i; i++ ) { object = webService.insertUpdatePersonalDetails ( nomineeDetailsList.get ( i ) , methodName ) ; } return object; } 
public static final java.lang.String getLang ( omnikryptec.lang.Language language, java.lang.String key, java.lang.String defaultValue ) { if ( null == language ) { return null; } if ( omnikryptec.lang.LanguageManager.isCollecting ) { omnikryptec.lang.LanguageManager.languageDefault.put ( key, defaultValue ) ; } return language.getProperty ( key, defaultValue ) ; } 
int count () throws java.lang.IllegalAccessException { android.database.Cursor cursor = buildCount () ; if ( null == cursor ) { throw new java.lang.IllegalAccessException ( "result has been cosumed, please do a query again." ) ; } int count = 0; if ( cursor.moveToFirst () ) count = cursor.getInt ( 1 ) ; closeCursor ( cursor ) ; return count; } 
public void setSource ( @android.support.annotation.NonNull java.io.InputStream inputStream ) { if ( null != ( is ) ) { try { is.close () ; } catch ( java.io.IOException e ) { } } is = inputStream; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.bitstream = new javazoom.jl.decoder.Bitstream ( is ) ; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.decoder = new javazoom.jl.decoder.Decoder () ; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.init () ; } 
public int lngToCol ( double lon ) { if ( ( lon > ( eastLng ) ) || ( lon < ( westLng ) ) ) throw new java.lang.IllegalArgumentException ( "Longitude is out of map range" ) ; int colIndex = ( ( int ) ( ( ( eastLng ) - lon ) / ( cellDegree ) ) ) ; if ( colIndex >= ( numberOfCols ) ) throw new java.lang.IndexOutOfBoundsException () ; return colIndex; } 
public void setOverlay ( java.io.File overlay ) { if ( null != overlay ? ! ( overlay.equals ( this.overlay ) ) : overlay == null ) { java.io.File oldOverlay = this.overlay; this.overlay = overlay; dirty = true; propertyChangeSupport.firePropertyChange ( "overlay", oldOverlay, overlay ) ; } } 
@ java.lang.Override public void performancesChanged ( java.lang.String connId, int exchangesCompleted ) { long duration = 100; final org.talend.core.model.process.IConnection conn = traceConnectionsManager.finConnectionByUniqueName ( connId ) ; final org.talend.core.model.runprocess.data.PerformanceData perfData = new org.talend.core.model.runprocess.data.PerformanceData ( ( duration + ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) ) ) ; processPerformances ( ( duration + ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) ) , perfData, conn ) ; startTime = java.lang.System.currentTimeMillis () ; } 
public boolean setMove ( final java.awt.Color color, final int number ) { for ( data.Karte k : spieler.get ( activePlayer ) .getKarten () ) { if ( ( ( k.getNummer () ) == number ) && ( k.getFarbe () .equals ( color ) ) ) { move ( k, spielfeld ) ; spieler.get ( activePlayer ) .remove ( k ) ; return true; } } return false; } 
public int parseRaceNumber () { int start = this.name.indexOf ( "_" ) ; int stop = this.name.indexOf ( "_", ( 1 + start ) ) ; if ( ( start != ( -1 ) ) || ( stop != ( -1 ) ) ) { java.lang.String sRaceNumber = this.name.substring ( ( 1 + start ) , stop ) ; this.raceNumber = java.lang.Integer.parseInt ( sRaceNumber ) ; return this.raceNumber; } else return 1; } 
public void start ( int port ) { this.port = port; try { serverSocket = new java.net.DatagramSocket ( port ) ; byte[] receiveData = new byte[1024]; java.lang.System.out.println ( ( port + "Starting on port " ) ) ; on = true; run ( receiveData ) ; } catch ( java.net.SocketException e ) { e.printStackTrace () ; } } 
public java.lang.String getText () { java.lang.String text = null; try { org.apache.poi.hssf.extractor.EventBasedExcelExtractor.TextListener tl = triggerExtraction () ; text = tl._text.toString () ; if ( ! ( text.endsWith ( "\n" ) ) ) { text = "\n" + text; } } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } return text; } 
@ java.lang.Override public me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder onCreateViewHolder ( android.view.ViewGroup parent, int viewType ) { me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder holder = PhotoPickUtils.holderGenerator.newGridViewHolder ( mContext ) ; parent.addView ( holder.itemView ) ; if ( ( me.iwf.photopicker.adapter.PhotoGridAdapter.ITEM_TYPE_CAMERA ) == viewType ) { holder.vSelected.setVisibility ( View.GONE ) ; holder.ivPhoto.setScaleType ( ImageView.ScaleType.CENTER ) ; holder.ivPhoto.setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View view ) { if ( ( onCameraClickListener ) != null ) { onCameraClickListener.onClick ( view ) ; } } } ) ; } return holder; } 
public java.lang.Object handleLogIn ( java.lang.String username, java.lang.String password ) { java.lang.String answer; loginfacade = new app.facades.LogInFacade () ; java.lang.Object answer; try { answer = " !" + ( "Hi " + ( loginfacade.handleLogIn ( username, password ) .getUserID () ) ) ; } catch ( java.lang.Exception e ) { answer = e; } return answer; } 
private void addRecord ( java.lang.String newkey, T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger.info ( "adding unique key {} ", newkey ) ; org.kisst.item4j.ImmutableSequence<T> oldList = map.get ( newkey ) ; if ( null == oldList ) map.put ( newkey, org.kisst.item4j.ImmutableSequence.of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList.contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence<T> newList = oldList.growTail ( newRecord ) ; map.put ( newkey, newList ) ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; switch ( requestCode ) { case 10: if ( ( data != null ) && ( resultCode == ( android.app.Activity.RESULT_OK ) ) ) { java.util.ArrayList<java.lang.String> result = data.getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; commandText.setText ( result.get ( 0 ) ) ; new mohz.m13.wicompanion.CommandFragment.SendText () .execute ( AppConstants.ipForConnection, result.get ( 0 ) ) ; } break; } } 
public void updateStatus ( int trackToPlay, int status, int position ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans.get ( trackToPlay ) ; tmp.status = status; tmp.position = position; trackBeans.set ( trackToPlay, tmp ) ; android.util.Log.d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG, ( position + ( ( "AdapterPosition: " + trackToPlay ) + " " ) ) ) ; this.notifyDataSetChanged () ; } 
@ java.lang.Override public void onBitmapFailed ( android.graphics.drawable.Drawable errorDrawable ) { if ( com.layer.ui.util.Log.isLoggable ( com.layer.ui.util.Log.VERBOSE ) ) { com.layer.ui.util.Log.v ( ( errorDrawable + "onBitMapFailed :" ) ) ; } bitmapWrapper.setBitmap ( null ) ; callback.onFailure () ; mTargets.remove ( this ) ; } 
@ java.lang.Override public void produceText ( de.is2.ZZZZZnake.ZZZZZnake znake ) { if ( 1 > ( znake.getLoopCount () ) ) { startMessages ( znake ) ; } if ( ( znake.isVictory () ) == true ) { victory ( znake ) ; } if ( ( znake.isDead () ) == true ) { death ( znake ) ; } if ( ( ( znake.isRich () ) == true ) && ( ( znake.getLoopCountAfterGoldGet () ) < 1 ) ) { goldGet ( znake ) ; } } 
@ java.lang.Override public javax.servlet.ServletInputStream getInputStream () throws java.io.IOException { synchronized ( this ) { if ( null == ( inputStream ) ) { if ( ( streamLimit ) <= 0 ) { inputStream = new org.openrepose.commons.utils.io.BufferedServletInputStream ( super.getInputStream () ) ; } else { inputStream = new org.openrepose.commons.utils.io.stream.ServletInputStreamWrapper ( new org.openrepose.commons.utils.io.stream.LimitedReadInputStream ( streamLimit, super.getInputStream () ) ) ; } } return inputStream; } } 
@ java.lang.SuppressWarnings ( value = { "unchecked", "ConstantConditions" } ) public B setStart ( java.util.Date start ) { com.google.common.base.Preconditions.checkNotNull ( start, "start cannot be null" ) ; com.google.common.base.Preconditions.checkArgument ( ( null == ( startRelative ) ) , "Both relative and absolute start times cannot be set." ) ; this.startAbsolute = start.getTime () ; com.google.common.base.Preconditions.checkArgument ( ( ( startAbsolute ) <= ( java.lang.System.currentTimeMillis () ) ) , "Start time cannot be in the future." ) ; return ( ( B ) ( this ) ) ; } 
@ org.junit.Test public void testValidStudentCPF () { try { student = new model.Student ( "Jacó Mario Souza", cpf, rg, date, email, address, phone1, phone2, "Milene Souza Medeiros", "Mário Souza Filho" ) ; assertEquals ( cpf, student.getStudentCpf () ) ; } catch ( exception.StudentException e ) { fail ( ( ( e.getMessage () ) + "Should not throw this exception: " ) ) ; } } 
private java.lang.String getAdapterQueryLogUnsecuredSerrviceUrl () { java.lang.String url = null; try { url = proxyHelper.getUrlLocalHomeCommunity ( NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ; } catch ( gov.hhs.fha.nhinc.connectmgr.ConnectionManagerException ex ) { gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy.AuditQueryLogProxyWebServiceUnsecuredImpl.LOG.debug ( ( ( ex.getLocalizedMessage () ) + ( "Error while retrieving url for " + ( gov.hhs.fha.nhinc.nhinclib.NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ) ) , ex ) ; return url; } catch ( java.lang.Exception ex ) { gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy.AuditQueryLogProxyWebServiceUnsecuredImpl.LOG.debug ( ( ( "Failed to call the web service " + ( gov.hhs.fha.nhinc.nhinclib.NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ) + ( ex.getLocalizedMessage () ) ) , ex ) ; } return url; } 
public void setup () { if ( ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.NonStandardSPARQL ) == ( this ) ) { lupos.sparql1_1.operatorgraph.ServiceApproaches.setNonStandardSPARQLBitVectorJoin ( true ) ; } else { lupos.sparql1_1.operatorgraph.ServiceApproaches.setNonStandardSPARQLBitVectorJoin ( false ) ; if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.Value ) ) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SemiJoinToStringHelper.class; } if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.ValueSubstring ) ) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SubstringValueToStringHelper.class; } else { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.BitVectorJoinToStringHelper.class; lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.hashFunction = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.HASHFUNCTION.values () [this.ordinal () ]; } } } 
public void clickRenameLibrary ( javafx.event.ActionEvent actionEvent ) { java.lang.String newLibraryTitle = textFieldForNewLibraryTitle.getText () ; if ( newLibraryTitle.equals ( oldLibraryTitle ) ) { com.devprosony.Main.stdOut.println ( "newLibraryTitle = oldLibraryTitle" ) ; } else { com.devprosony.Main.stdOut.println ( ( newLibraryTitle + "newLibraryTitle: " ) ) ; renameLibraryTitle ( oldLibraryTitle, newLibraryTitle ) ; dialogRenameLibraryStage.close () ; } } 
public int getLastPosition () { if ( ( ( postsIds ) == null ) || ( ( mGridView ) == null ) ) { return 0; } int firstPos = mGridView.getFirstVisiblePosition () ; if ( firstPos >= 0 ) { return postsIds.get ( mGridView.getFirstVisiblePosition () ) ; } else { return 0; } } 
public void executePhase ( at.borkowski.scovillej.simulation.SimulationContext context ) throws java.io.IOException { if ( ! ( initialized ) ) initialize ( context ) ; if ( 0 < ( serverSocket.available () ) ) owner.registerClientProcessor ( new at.borkowski.scovillej.prefetch.members.server.ClientProcessor ( null, serverSocket.accept () ) ) ; } 
protected final void provision ( android.support.v4.app.Fragment fragment, int idx ) { android.os.Bundle args = new android.os.Bundle () ; java.lang.String json = ( 0 <= idx ) ? jsonList.get ( idx ) : "{}"; args.putString ( EntityFragment.ARG_JSON, json ) ; args.putString ( EntityFragment.ARG_ENTITY, ( "" + ( entityType ) ) ) ; fragment.setArguments ( args ) ; } 
public void enqueue ( Item item ) { if ( null == item ) { throw new java.lang.NullPointerException ( "the item to enqueue is null" ) ; } if ( ( N ) == ( q.length ) ) { q.resize ( ( 2 * ( q.length ) ) ) ; } q[ ( ( N ) ++ ) ] = item; } 
public static javax.swing.JMenuItem createJMenuItem ( java.lang.String name, java.lang.String description, javax.swing.KeyStroke keyStroke ) { javax.swing.JMenuItem comp = new javax.swing.JMenuItem ( name ) ; if ( null != keyStroke ) comp.setAccelerator ( keyStroke ) ; if ( description != null ) comp.setToolTipText ( description ) ; comp.setFont ( new java.awt.Font ( java.awt.Font.SANS_SERIF, java.awt.Font.BOLD, 14 ) ) ; com.tri.pgs.client.surface.ui.UISystem.init ( comp, false ) ; return comp; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int index = 0; for ( int i = 1; ( day ) > i; i++ ) index += ( getItinerarySizeByDay ( getContext () , i ) ) - 1; final int indexToAssign = index; mAddBtn.setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { uz.samtuit.samapp.helpers.ItineraryHelper.addNewItemFromItinerary ( getFragmentManager () , day, indexToAssign ) ; } } ) ; } 
@ java.lang.Override public void onBindViewHolder ( com.closestudios.bro.util.BroViewAdapter.ViewHolder holder, int position ) { holder.flBackdrop.setBackgroundColor ( holder.flBackdrop.getContext () .getResources () .getColor ( colors[ ( ( ( colorOffset ) % ( colors.length ) ) + position ) ] ) ) ; holder.tvHeader.setText ( mDataset[position].getHeader () ) ; holder.tvDetails.setText ( mDataset[position].getDetails () ) ; } 
public drgn.data.routes.mathematics.Line getParallelLine ( drgn.data.routes.model.Point point ) { return new drgn.data.routes.mathematics.Line ( _a, _b, ( - ( ( ( _b ) * ( point.getLatitude () ) ) + ( ( _a ) * ( point.getLongitude () ) ) ) ) ) ; } 
public void enterChatRoom ( java.lang.String roomName ) throws java.io.IOException { this.requestToServer.writeObject ( new Message ( MessageType.EnterTopic, roomName, null, null ) ) ; this.requestToServer.flush () ; if ( false == ( this.enteredRoom.contains ( roomName ) ) ) this.enteredRoom.add ( roomName ) ; } 
public void indexJumpDown () { if ( ( list.size () ) < ( ( currentItemIndex ) + ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ) ) { currentItemIndex = ( currentItemIndex ) % ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ; } else { currentItemIndex = ( currentItemIndex ) + ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ; } } 
public void saveScreenMap () { try { java.util.Iterator it = screenStringBiMap.entrySet () .iterator () ; while ( it.hasNext () ) { java.util.Map.Entry entry = ( ( java.util.Map.Entry ) ( it.next () ) ) ; stmt.executeQuery ( ( "' ) ON CONFLICT DO NOTHING" + ( ( ( "insert into screenNameMap ( screenId, screenName ) values ( " + ( entry.getValue () ) ) + ",'" ) + ( entry.getKey () ) ) ) ) ; } } catch ( java.sql.SQLException e ) { e.printStackTrace () ; } } 
@ java.lang.Override public void onSetStreamVolume ( float volume ) { mLog.d ( ( "]" + ( "[onSetStreamVolume][volume: " + volume ) ) ) ; if ( volume == 0.0F ) { try { mDtvManager.setMute () ; } catch ( android.os.RemoteException e ) { e.printStackTrace () ; } } else { mDtvManager.setVolume ( ( volume * 100 ) ) ; } } 
private static void listItems () { for ( int I = 0; ( MainGame.items.length ) >= I; I++ ) { if ( ( ( MainGame.itemDescrStrings[I] ) != null ) && ( ( MainGame.items[I] ) != 0 ) ) java.lang.System.out.println ( ( ( ( "Item " + ( MainGame.items[I] ) ) + ": " ) + ( MainGame.itemDescrStrings ) ) ) ; } } 
private boolean isRowEmpty ( int startingPosition ) { int i = startingPosition; while ( 0 <= i ) { if ( ( i % ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) == 0 ) break; i--; } int start = i; for ( ; i < ( ( start + ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) - 1 ) ; i++ ) { if ( ( courses[i] ) != null ) { return false; } } return true; } 
public void setShowOriginal ( boolean b ) { if ( b ) { assert ( pixelitor.layers.ImageLayer.State.PREVIEW ) == ( state ) ; setState ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ; } else { assert ( state ) == ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ; setState ( pixelitor.layers.ImageLayer.State.PREVIEW ) ; } comp.imageChanged ( pixelitor.Composition.ImageChangeActions.REPAINT ) ; } 
protected com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> _findExplicitUntypedSerializer ( java.lang.Class<?> runtimeType ) throws com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> ser = _knownSerializers.untypedValueSerializer ( runtimeType ) ; if ( null == ser ) { ser = _serializerCache.untypedValueSerializer ( runtimeType ) ; if ( null == ser ) { ser = _createAndCacheUntypedSerializer ( runtimeType ) ; if ( isUnknownTypeSerializer ( ser ) ) { return null; } } } return ser; } 
public void close ( net.dv8tion.jda.core.audio.hooks.ConnectionStatus closeStatus ) { if ( null != ( sendSystem ) ) sendSystem.shutdown () ; if ( ( receiveThread ) != null ) receiveThread.interrupt () ; if ( ( combinedAudioExecutor ) != null ) combinedAudioExecutor.shutdownNow () ; webSocket.close ( closeStatus ) ; } 
@ java.lang.Override public void onClick () { if ( null == ( config.dialog ) ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW, android.net.Uri.parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog.open ( this, config.privacyHtmlPath, getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics.logUiEvent ( config.logUiEventName, getString ( R.string.egab_privacy_log_event ) ) ; } } 
public boolean checkAnyMarker ( antgameproject.Pos markerPos, antgameproject.Colour markerCol ) { for ( antgameproject.Colour col : antgameproject.Colour.values () ) { if ( col == markerCol ) { return ( board[markerPos.getPosY () ][markerPos.getPosX () ].getMarker ( col ) ) != ( Marker.EMPTY ) ; } } return false; } 
private static org.jfree.data.xy.XYSeriesCollection createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection, org.nd4j.linalg.api.ndarray.INDArray data, int offset, java.lang.String name ) { int nRows = data.shape () [2]; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0; nRows > i; i++ ) { series.add ( ( i + offset ) , data.getDouble ( i ) ) ; } seriesCollection.addSeries ( series ) ; return seriesCollection; } 
public void checkAllowsDeployment ( org.carlspring.strongbox.storage.repository.Repository repository ) throws org.carlspring.strongbox.storage.ArtifactStorageException { if ( ( ! ( RepositoryTypeEnum.PROXY.getType () .equals ( repository.getType () ) ) ) && ( ( ! ( repository.allowsDeployment () ) ) && ( ! ( RepositoryTypeEnum.GROUP.getType () .equals ( repository.getType () ) ) ) ) ) { throw new org.carlspring.strongbox.storage.ArtifactStorageException ( ( ( "Deployment of artifacts to " + ( repository.getType () ) ) + " repositories is not allowed!" ) ) ; } } 
private void refreshMonthView ( int position ) { com.othershe.calendarview.MonthView monthView = calendarPagerAdapter.getViews () .get ( position ) ; if ( null != ( itemChooseListener ) ) { if ( ( ( chooseDate.get ( position ) ) != null ) && ( ( chooseDate.get ( position ) .size () ) > 0 ) ) monthView.multiChooseRefresh ( chooseDate.get ( position ) ) ; } else { monthView.refresh ( lastClickedDay ) ; } } 
@ java.lang.Override public E previous () { if ( null != ( this.previous ) ) { this.next = this.previous; this.previous = this.previous.getPrevious () ; this.lastReturned = this.next.get () ; return this.next.get () ; } return null; } 
@ org.junit.Test public void testSetArgsMultipleNewFiles () throws java.lang.Exception { try { com.nononsenseapps.filepicker.FilePickerFragmentTest.fragment.setArgs ( null, AbstractFilePickerFragment.MODE_NEW_FILE, true, false, true ) ; org.junit.Assert.fail ( "Expected exception" ) ; } catch ( java.lang.IllegalArgumentException e ) { org.junit.Assert.assertTrue ( ( ( e.getMessage () ) + "Should mention the mode limitations: " ) , e.getMessage () .contains ( "MODE_NEW_FILE" ) ) ; } } 
public static synchronized org.apache.sqoop.submission.spark.YarnSqoopSparkClient getInstance ( java.util.Map<java.lang.String, java.lang.String> conf ) { if ( null == ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client ) ) { java.lang.System.setProperty ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.YARN_MODE, "true" ) ; org.apache.spark.SparkConf sparkConf = org.apache.sqoop.submission.spark.SqoopSparkClientFactory.generateSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client = new org.apache.sqoop.submission.spark.YarnSqoopSparkClient ( sparkConf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.yarnConfig = org.apache.sqoop.submission.spark.YarnSqoopSparkClient.generateYarnSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.clientArgs = new org.apache.spark.deploy.yarn.ClientArguments ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.args, sparkConf ) ; } return org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client; } 
private void addPlayer ( int id, int x, int y ) { boolean flag = true; for ( player.Player foo : players ) { if ( id == ( foo.getID () ) ) { flag = false; foo.set ( x, y ) ; } } if ( flag ) { players.add ( new player.Player ( id ) ) ; } } 
private void quiteLiveByPurpose () { if ( ( com.tencent.qcloud.suixinbo.utils.Constants.HOST ) == ( com.tencent.qcloud.suixinbo.model.MySelfInfo.getInstance () .getIdStatus () ) ) { if ( ( backDialog.isShowing () ) == false ) backDialog.show () ; } else { mLiveHelper.perpareQuitRoom ( true ) ; mEnterRoomHelper.quiteLive () ; } } 
public void newGame () { frame = new se2aa4.morris.Frame () ; state = State.IN_PROGRESS; sel = Location.NONE; blueMillExists = false; redMillExists = false; redInventory = true; blueInventory = true; moved = false; removed = false; randTurn () ; randCpuPlayer () ; createRestorePoint () ; if ( ( cpuPlayer ) == ( turn ) ) { java.lang.System.out.println ( "cpuMove" ) ; cpuMove () ; java.lang.System.out.println ( "endTurn" ) ; endTurn () ; } } 
@ org.junit.Test public void testSignMultiApkWithZipalign () throws java.lang.Exception { java.util.List<java.io.File> uApks = at.favre.tools.apksigner.SignToolTest.copyToTestPath ( originalFolder, unsingedApks ) ; java.lang.String cmd = " --debug" + ( ( ( ( ( ( ( "-" + ( at.favre.tools.apksigner.ui.CLIParser.ARG_APK_FILE ) ) + " " ) + ( originalFolder.getAbsolutePath () ) ) + " -" ) + ( at.favre.tools.apksigner.ui.CLIParser.ARG_APK_OUT ) ) + " " ) + ( outFolder.getAbsolutePath () ) ) ; at.favre.tools.apksigner.SignToolTest.testAndCheck ( cmd, outFolder, uApks ) ; } 
public boolean play () { if ( this.canPlay () ) { Woo.users[ ( 1 + ( Woo.order ) ) ].draw () ; Woo.users[ ( 1 + ( Woo.order ) ) ].draw () ; java.lang.System.out.println ( "Played a Draw Two card. Next player draws two cards." ) ; return true; } return false; } 
@ java.lang.Override protected void map ( org.apache.hadoop.io.LongWritable key, org.mrgeo.geometry.Geometry value, org.mrgeo.data.geowave.vector.Context context ) throws java.io.IOException, java.lang.InterruptedException { java.lang.System.out.println ( ( ( key.get () ) + "Key: " ) ) ; java.lang.System.out.println ( ( "Value: " + value ) ) ; context.write ( new org.apache.hadoop.io.Text ( ( "" + ( key.get () ) ) ) , new org.apache.hadoop.io.Text ( value.toString () ) ) ; } 
@ java.lang.Override public void updateEntity () { if ( 0 == ( ( this.getBlockMetadata () ) & 8 ) ) return; if ( ( ! ( this.worldObj.isRemote ) ) && ( ( occupied ) != ( ( ( this.getBlockMetadata () ) & 4 ) != 0 ) ) ) { occupied = ! ( occupied ) ; needsAnimation = true; markDirty () ; } else net.minecraft.block.BlockBed.func_149979_a ( worldObj, xCoord, yCoord, zCoord, occupied ) ; } 
private void handleHit ( java.lang.Package p ) { int damage = ( ( java.lang.Integer ) ( p.getPayload () ) ) ; int id = java.lang.Integer.parseInt ( p.getExtra () ) ; java.lang.System.out.println ( ( ( java.lang.Math.random () ) + ( id + "hit " ) ) ) ; for ( Actors.Actor a : actorQueue ) { if ( ( a.getID () ) == id ) { a.hit ( damage ) ; checkActor ( a ) ; } } } 
public java.lang.String validateControls () { if ( null == ( cb.getValue () ) ) { return "Market type is not selected"; } if ( marketCodeField.getText () .isEmpty () ) { return "Market code can not be empty"; } if ( dataPathField.getText () .isEmpty () ) { return "The data source path can not be empty."; } return null; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/mareanoPolar_en" ) public org.springframework.web.servlet.ModelAndView getMareanoPolarEn ( javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { if ( ( ( ( java.lang.System.currentTimeMillis () ) - ( mavLastUpdatedPolar ) ) > ( no.imr.geoexplorer.admindatabase.controller.MareanoController.ONEHOUR ) ) || ( ( mavPolarEn ) == null ) ) { mavPolarEn = commonGetMareano ( resp, no.imr.geoexplorer.admindatabase.controller.MareanoController.EN, "mareanoPolar_en" ) ; mavLastUpdatedPolarEn = new java.util.Date () .getTime () ; } polarConfig ( mavPolarEn ) ; return mavPolarEn; } 
public synchronized void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel, boolean bspace ) { this.dirtyBarrels.put ( barrel, true ) ; if ( bspace ) if ( ( ! ( barrel.getWorldObj () .isRemote ) ) && ( barrel.coreUpgrades.hasEnder ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler.instance () .markAllDirty ( barrel.id ) ; } 
public void start () throws javax.jms.JMSException, javax.naming.NamingException { if ( null != ( namingContext ) ) { return; } namingContext = new javax.naming.InitialContext () ; javax.jms.TopicConnectionFactory tcf = ( ( javax.jms.TopicConnectionFactory ) ( namingContext.lookup ( configuration.getConnectionFactoryJndiName () ) ) ) ; org.hawkular.bus.common.ConnectionContextFactory ccf = new org.hawkular.bus.common.ConnectionContextFactory ( tcf ) ; org.hawkular.bus.common.producer.ProducerConnectionContext pcc = ccf.createProducerConnectionContext ( new org.hawkular.bus.common.Endpoint ( Endpoint.Type.TOPIC, configuration.getInventoryChangesTopicName () ) ) ; this.messageSender = new org.hawkular.inventory.bus.MessageSender ( pcc ) ; install () ; } 
private java.util.ArrayList<java.lang.Boolean> multiplication ( java.util.ArrayList<java.lang.Boolean> multiplicand, java.util.ArrayList<java.lang.Boolean> multiplier ) { java.util.ArrayList<java.lang.Boolean> result = new java.util.ArrayList<java.lang.Boolean> () ; result.add ( false ) ; for ( int i = 0; ( multiplier.size () ) > i; i++ ) { if ( ( multiplier.get ( i ) ) == true ) { result = addition ( result, multiplicand, i ) ; } } return result; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; final android.view.View toolbarContainerView = findViewById ( R.id.toolbar_container ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () .initLoader ( 0, null, this ) ; if ( null == savedInstanceState ) { refresh () ; } } 
public mazeADT.List<mazeADT.Cell> getNeighbors () { mazeADT.List<mazeADT.Cell> neighbors = new mazeADT.LinkedList<mazeADT.Cell> () ; if ( null != ( northCell ) ) { neighbors.add ( northCell ) ; } if ( ( westCell ) != null ) { neighbors.add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors.add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors.add ( eastCell ) ; } return neighbors; } 
public void flee () { cooldownWalk = 500; if ( ( fleePath.isEmpty () ) || ( ( actAction ) != 1 ) ) { pp2016.team19.shared.Node fleePos = getFleePos () ; fleePath.clear () ; fleePath = AStarSearch ( this.getXPos () , this.getYPos () , fleePos.getXPos () , fleePos.getYPos () ) ; } changeDir ( fleePath ) ; actAction = 1; } 
@ java.lang.Override public void onResponse ( java.lang.String response ) { super.onResponse ( response ) ; if ( android.text.TextUtils.isEmpty ( response ) ) return; com.bai.chesscard.bean.BaseBean baseBean = new com.google.gson.Gson () .fromJson ( response, com.bai.chesscard.bean.BaseBean.class ) ; if ( 1 == ( baseBean.id ) ) { resetUserStatue () ; gamePresenterNew.resetUserInfo ( ConstentNew.USERPOS ) ; } else com.bai.chesscard.utils.Tools.toastMsgCenter ( context, baseBean.msg ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @java.lang.Override public <T> T[] toArray ( T[] a ) { T[] result = null; if ( ( this.size () ) <= ( a.length ) ) result = a; else result = ( ( T[] ) ( java.lang.reflect.Array.newInstance ( a.getClass () .getComponentType () , this.size () ) ) ) ; java.lang.System.arraycopy ( this.array, 0, result, 0, result.length ) ; return result; } 
@ java.lang.Override public void onSuccess ( com.andela.helpmebuy.models.User user ) { android.support.design.widget.Snackbar.make ( parentLayout, "Password changed successfully", Snackbar.LENGTH_LONG ) .show () ; android.os.Bundle bundle = getIntent () .getBundleExtra ( Launcher.TRANSPORT ) ; if ( null != bundle ) { if ( bundle.getBoolean ( ConfirmPasswordFragment.CONFIRM_PASSWORD ) ) { com.andela.helpmebuy.utilities.Launcher.launchActivity ( this, com.andela.helpmebuy.activities.UserSettingsActivity.class ) ; } } else { com.andela.helpmebuy.utilities.Launcher.launchActivity ( this, com.andela.helpmebuy.activities.HomeActivity.class ) ; } finish () ; } 
public double getTravelTimeAfter ( final double time ) { final int bs = departures.binarySearch ( time ) ; final int index = ( 0 > bs ) ? -bs : bs; final double tt = ( arrivals.get ( index ) ) - ( departures.get ( index ) ) ; assert tt >= 0; return tt; } 
private void pushPipelineToSnapshot () { int iterationsCnt = 0; boolean done = false; while ( !done ) { iterationsCnt++; org.apache.hadoop.hbase.regionserver.VersionedSegmentsList segments = pipeline.getVersionedList () ; pushToSnapshot ( segments.getStoreSegments () ) ; done = pipeline.swap ( segments, null, false, false ) ; if ( 2 < iterationsCnt ) { org.apache.hadoop.hbase.regionserver.CompactingMemStore.LOG.warn ( ( "Multiple unsuccessful attempts to push the compaction pipeline to snapshot," + " while flushing to disk." ) ) ; this.snapshot = org.apache.hadoop.hbase.regionserver.SegmentFactory.instance () .createImmutableSegment ( getComparator () ) ; break; } } } 
@ java.lang.Override public void invalidateDrawable ( android.graphics.drawable.Drawable drawable ) { if ( ( ( getText () ) instanceof android.text.Spanned ) && ( mContainsImages ) ) { android.text.Spanned text = ( ( android.text.Spanned ) ( getText () ) ) ; com.facebook.react.views.text.TextInlineImageSpan[] spans = text.getSpans ( 0, text.length () , com.facebook.react.views.text.TextInlineImageSpan.class ) ; for ( com.facebook.react.views.text.TextInlineImageSpan span : spans ) { if ( ( span.getDrawable () ) == drawable ) { invalidate () ; } } } super.invalidateDrawable ( drawable ) ; } 
@ java.lang.Override public void run () { try { processCallApiDeleteRace ( data.toString () ) ; com.runningracehisotry.utilities.LogUtil.d ( Constants.LOG_TAG, ( ( data.toString () ) + "List race: " ) ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } finally { try { if ( mLoadingDialog.isShowing () ) { mLoadingDialog.dismiss () ; } } catch ( java.lang.Exception ex ) { } } } 
public void switcharoo () { game.items.Item itemNew = level.getItem ( x, y ) ; if ( null == itemNew ) return; level.removeItem ( x, y ) ; game.items.Item itemOld = items[selected]; if ( itemOld == null ) return; items[selected] = null; level.addItem ( itemOld, x, y ) ; items[selected] = itemNew; } 
public void setModel ( org.jtrfp.trcl.gpu.Model m ) { if ( null == m ) throw new java.lang.RuntimeException ( "Passed model cannot be null." ) ; final org.jtrfp.trcl.core.TRFuture<org.jtrfp.trcl.gpu.Model> thisModelFuture = this.model; if ( thisModelFuture != null ) releaseCurrentModel () ; try { this.model = m.finalizeModel () ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public static void updateQueue () { while ( 5 > ( theweekend.cosmetics.ipod.Radio.queuedSongs.size () ) ) { int size = Noteblock.iPodSongs.size () ; if ( size > 0 ) { resources.noteblock.Song generate = Noteblock.iPodSongs.get ( resources.NumberUtils.randomNumber ( size ) ) ; if ( ! ( theweekend.cosmetics.ipod.Radio.queuedSongs.contains ( generate ) ) ) ; { theweekend.cosmetics.ipod.Radio.queuedSongs.add ( generate ) ; } } } theweekend.cosmetics.ipod.Radio.songPosition = 0; theweekend.cosmetics.ipod.Radio.playRadioSong () ; } 
public void checkNeededInColumn () { int n; for ( int j = 0; 9 > j; j++ ) { for ( int i = 1; i < 10; i++ ) { if ( de.halemba.helpers.SolveHelper.checkMissingInColumn ( i, j, grid ) ) { n = de.halemba.helpers.SolveHelper.checkSinglePossiblityColumn ( i, j, grid ) ; if ( n >= 0 ) { grid[n][j].setNumber ( i ) ; } } } } } 
public boolean redo () { if ( self.canRedo () ) { self.getDrawingData () .redo () ; self.nativeClear () ; self.nativeDrawData () ; if ( null != ( self.getDelegate () ) ) { self.getDelegate () .didChangeDrawing ( self, self.canUndo () , self.canRedo () ) ; } return true; } return false; } 
public java.lang.Boolean subscribeDoorOpensNextTime ( de.fau.cs.mad.fablab.rest.core.PushToken token ) { java.lang.System.out.println ( ( token + "SUBSCRIBING: " ) ) ; org.hibernate.Query query = super.currentSession () .createQuery ( "FROM PushToken WHERE token = :token AND triggerPushType = :trigger" ) ; query.setParameter ( "token", token.getToken () ) ; query.setParameter ( "trigger", token.getTriggerPushType () ) ; if ( ( query.list () .size () ) == 0 ) { token.setTriggerPushType ( TriggerPushType.DOOR_OPENS_NEXT_TIME ) ; persist ( token ) ; } return true; } 
private static com.google.gson.JsonElement getFile ( java.lang.String fileName ) { java.io.File file = new java.io.File ( ( fileName + ( ( factionmod.FactionMod.getConfigDir () ) + "/" ) ) ) ; if ( file.exists () ) { try { return new com.google.gson.JsonParser () .parse ( new java.io.FileReader ( file ) ) ; } catch ( java.lang.Exception e ) { factionmod.FactionMod.getLogger () .error ( ( "Error on loading file " + fileName ) ) ; e.printStackTrace () ; } } return null; } 
public void setLongitude ( java.lang.String longitude ) { int[] longitudeDMS = fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility.decimalToDMSArray ( java.lang.Double.valueOf ( longitude ) ) ; latitudeDegreesEditText.setText ( java.lang.String.valueOf ( longitudeDMS[0] ) ) ; latitudeMinutesEditText.setText ( java.lang.String.valueOf ( longitudeDMS[1] ) ) ; latitudeSecondsEditText.setText ( java.lang.String.valueOf ( longitudeDMS[2] ) ) ; longitudeCardinalDirectionSwitch.setChecked ( ( 0 > ( java.lang.Double.valueOf ( longitude ) ) ) ) ; } 
public java.util.ArrayList<controller.ControllerCarro> getCarros () { java.util.ArrayList<controller.ControllerCarro> aux = new java.util.ArrayList<> () ; for ( int i = 0; ( this.counter ) > i; i++ ) { if ( aux != null ) { aux.add ( this.carros.get ( i ) ) ; } } return aux; } 
public void letAImove () { int pushMousePointingColumn = mousePointingcolumn; boolean preEndGame = gameController.isFinish () ; if ( 0 > ( mousePointingcolumn = gameController.getAITurn () ) ) { mousePointingcolumn = pushMousePointingColumn; return; } if ( ( !preEndGame ) && ( ! ( fallingAnimationMutex ) ) ) { FallingAnimation () ; } } 
public int getInt ( int min, int max ) { java.lang.System.out.println ( "Enter a number: " ) ; int userInput = scanner.nextInt () ; scanner.nextLine () ; if ( ( userInput > max ) || ( userInput < min ) ) { userInput = getInt ( min, max ) ; } else { java.lang.System.out.println ( "Invalid input" ) ; } return userInput; } 
private void processAttributes ( android.content.Context context, android.util.AttributeSet attrs ) { android.content.res.TypedArray a = context.obtainStyledAttributes ( attrs, R.styleable.ColorButton ) ; final int N = a.getIndexCount () ; for ( int i = 0; N > i; ++i ) { int attr = a.getIndex ( i ) ; switch ( attr ) { case R.styleable.ColorButton_jr_color: mColor = a.getColor ( attr, 0 ) ; colorify () ; break; } } a.recycle () ; } 
public void onBrowserEvent ( org.ovirt.engine.ui.common.widget.table.cell.Context context, com.google.gwt.dom.client.Element parent, C value, java.lang.String tooltipContent, com.google.gwt.dom.client.NativeEvent event, com.google.gwt.cell.client.ValueUpdater<C> valueUpdater ) { java.lang.String tooltip; if ( null == tooltipContent ) { tooltip = getTooltip ( value ) ; } else { tooltip = tooltipContent; } if ( BrowserEvents.MOUSEOVER.equals ( event.getType () ) ) { org.ovirt.engine.ui.common.widget.tooltip.ElementTooltipUtils.setTooltipOnElement ( tooltip, parent ) ; } } 
@ android.support.annotation.Nullable public static java.util.HashMap<java.lang.String, java.lang.String> getAttributes ( android.media.ExifInterface exif ) { java.util.HashMap<java.lang.String, java.lang.String> exifAttributes = null; try { java.lang.reflect.Field f = android.media.ExifInterface.class.getDeclaredField ( "mAttributes" ) ; f.setAccessible ( true ) ; exifAttributes = ( ( java.util.HashMap<java.lang.String, java.lang.String> ) ( f.get ( exif ) ) ) ; } catch ( java.lang.Exception ex ) { } return 0 < ( exifAttributes.size () ) ? exifAttributes : null; } 
private void unbindConnection () { MyApplication.madcapLogger.d ( TAG, ( ( mBound ) + "Attempt to unbind self. Current bound status is " ) ) ; mDataCollectionService.setUploadStatusGuiListener ( null ) ; getActivity () .getApplicationContext () .unbindService ( mConnection ) ; android.util.Log.d ( TAG, "removed UploadListener" ) ; mBound = false; cacheCountUpdater.cancel ( true ) ; } 
public static void main ( java.lang.String[] args ) { java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; float sum = 0.0F; for ( int i = 0; ( q1004.Main.INPUT_COUNT ) > i; i++ ) { java.lang.Float f = sc.nextFloat () ; if ( f <= 0 ) { continue; } sum += f; } sum /= q1004.Main.INPUT_COUNT; java.lang.System.out.println ( ( "$" + ( q1004.Main.shortenNumber ( sum ) ) ) ) ; } 
private static void deleteEstate () { int id = de.dis2011.FormUtil.readInt ( "ID der Immobilie" ) ; de.dis2011.data.Estate estate = de.dis2011.data.Estate.load ( id ) ; if ( null == estate ) { java.lang.System.out.println ( ( ( "Immobilie mit ID " + id ) + " existiert nicht." ) ) ; return; } estate.delete () ; java.lang.System.out.println ( ( ( "Immobilie mit ID " + id ) + " wurde gelöscht." ) ) ; } 
@ java.lang.Override public void onCraftMatrixChanged ( com.alxnns1.mobhunter.container.IInventory inventoryIn ) { reloadRecipes () ; java.lang.String log = "Recipes:\n"; for ( int i = 0; ( recipes.size () ) > i; i++ ) { if ( recipesValid.get ( i ) ) log += "Y - "; else log += "N - "; log += recipes.get ( i ) .toString () ; } com.alxnns1.mobhunter.util.LogHelper.info ( log ) ; detectAndSendChanges () ; } 
public java.util.Date getAsDate () { if ( ( isNEVER () ) || ( isASAP () ) ) { return null; } return new java.util.Date ( ( ( ( ( itsValue ) - ( ( atnf.atoms.time.DUTC.get () ) * 1000000L ) ) - 3506716800000000L ) / 1000L ) ) ; } 
private void setToolbarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat.getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION_CODES.LOLLIPOP ) <= ( Build.VERSION.SDK_INT ) ) { android.view.Window window = getWindow () ; window.addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window.setStatusBarColor ( palette.getDarkVibrantColor ( defaultDarkColor ) ) ; } } 
private void loadDataFromFile () { try ( java.io.FileReader fr = new java.io.FileReader ( new java.io.File ( "cities.txt" ) ) ) { java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; for ( int i = 0; ( RandomCities.NUMBER_OF_CITIES ) > i; i++ ) { cityList.add ( br.readLine () ) ; } java.util.Collections.shuffle ( cityList ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } 
public won.protocol.model.MatchingBehaviorType getMatchingBehaviorTypeForMatchedNeed ( org.apache.solr.common.SolrDocument doc ) { won.protocol.model.MatchingBehaviorType matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL; java.lang.Object matchingBehaviorFieldValue = doc.getFieldValue ( won.matcher.solr.hints.HintBuilder.MATCHING_BEHAVIOR_SOLR_FIELD ) ; if ( null == matchingBehaviorFieldValue ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.fromURI ( matchingBehaviorFieldValue.toString () ) ; if ( matchedNeedMatchingBehavior == null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL; } } return matchedNeedMatchingBehavior; } 
@ by.itechart.flowerty.web.controller.ResponseBody @by.itechart.flowerty.web.controller.RequestMapping ( value = "user/list/{page}" ) public org.springframework.data.domain.Page<by.itechart.flowerty.model.User> getPage ( @by.itechart.flowerty.web.controller.PathVariable ( value = "page" ) java.lang.Integer page ) throws java.lang.Exception { by.itechart.flowerty.web.controller.UserController.LOGGER.info ( "get page with number {}", page ) ; page = ( ( page < 1 ) || ( page == null ) ) ? 0 : --page; org.springframework.data.domain.Page<by.itechart.flowerty.model.User> pageUsers = userService.getPage ( page, 10 ) ; by.itechart.flowerty.web.controller.UserController.LOGGER.info ( "fetch {} users", pageUsers.getTotalElements () ) ; return pageUsers; } 
private void decodeFrames ( io.netty.buffer.ByteBuf in, java.util.List<java.lang.Object> out ) throws java.lang.Exception { if ( ( com.mpush.api.protocol.Packet.HEADER_LEN ) <= ( in.readableBytes () ) ) { in.markReaderIndex () ; com.mpush.api.protocol.Packet packet = decodeFrame ( in ) ; if ( packet == null ) { in.resetReaderIndex () ; } out.add ( packet ) ; } } 
public int roll () { if ( 100000 <= ( rollsSinceLastReseed ) ) { com.valkryst.VDice.DiceRoller.random.setSeed ( java.lang.System.currentTimeMillis () ) ; } int total = 0; for ( final com.valkryst.VDice.Die die : dice ) { total += die.roll ( com.valkryst.VDice.DiceRoller.random ) ; ( rollsSinceLastReseed ) ++; } return total; } 
public void addCell ( org.apache.cassandra.config.ColumnDefinition column, java.nio.ByteBuffer value, org.apache.cassandra.db.rows.LivenessInfo info ) { int idx = ( columns.simpleIdx ( column ) ) + ( base ) ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + ( column.name ) ) + " in " ) + ( columns ) ) ) ; data.setCell ( idx, value, info ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String showCityResources ( @org.springframework.web.bind.annotation.RequestParam java.util.Map<java.lang.String, java.lang.String> allRequestParams, org.springframework.ui.Model model ) { org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER.info ( ( allRequestParams + "Requested params:" ) ) ; org.exschool.pocketworld.city.resources.dto.CityResourcesDto cityResourcesDto = cityResourcesService.cityResourcesInfo ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; model.addAttribute ( "dto", cityResourcesDto ) ; org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER.info ( ( "Out:" + model ) ) ; commonCityService.buildQueuedBuildings ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; return "city_resources"; } 
@ java.lang.Override public void grab () { if ( this.isClosing () ) { return; } if ( this.captureIpl.available () ) { captureIpl.read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl.getIplImage () ; if ( null != img ) { updateCurrentImage ( img ) ; } } else { waitForNextFrame () ; } } 
public void setStatus ( double speed ) { if ( 1.4 < speed ) { this.status = 2; textStatus.setText ( "跑步" ) ; } else if ( speed < 1.0E-6 ) { this.status = 0; textStatus.setText ( "静止" ) ; } else { this.status = 1; textStatus.setText ( "步行" ) ; } return; } 
public void setSong ( info.dourok.android.lyrics.SongWrapper song ) { this.mSong = song; this.mLyrics = mSong.getLyrics () ; this.mLyricsItems = mLyrics.getLyricsItems () ; if ( null != ( song.getLyrics () ) ) { updateLyrics () ; } } 
public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( com.smartstudy.zhike.mylibrary.widget.ViewHolderCreator holderCreator, java.util.List<T> datas ) { this.mDatas = datas; this.holderCreator = holderCreator; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( holderCreator, mDatas ) ; viewPager.setAdapter ( pageAdapter ) ; viewPager.setBoundaryCaching ( true ) ; if ( null != ( page_indicatorId ) ) setPageIndicator ( page_indicatorId ) ; return this; } 
public io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance start () { if ( this.isStarted () ) { return this; } if ( ( InstanceConstants.STATE_STOPPED.equals ( instance.getState () ) ) && ( ( ( instance ) != null ) && ( this.isRestartAlways () ) ) ) { context.activityService.instance ( instance, "start", "Starting stopped instance", ActivityLog.INFO ) ; context.objectProcessManager.scheduleProcessInstanceAsync ( InstanceConstants.PROCESS_START, instance, null ) ; } return this; } 
@ java.lang.Override public java.lang.String toString () { return '}' + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "Employee{" + "idemployee=" ) + ( idemployee ) ) + ", firstName='" ) + ( firstName ) ) + '\'' ) + ", lastName='" ) + ( lastName ) ) + '\'' ) + ", role=" ) + ( role ) ) + ", password='" ) + ( password ) ) + '\'' ) + ", cars=" ) + ( cars ) ) ; } 
@ java.lang.Override public boolean onCreateActionMode ( com.actionbarsherlock.view.ActionMode mode, com.actionbarsherlock.view.Menu menu ) { mode.setTitle ( R.string.menu_restriction ) ; super.onCreateActionMode ( mode, menu ) ; logic.addSelectedRelationWay ( toWay ) ; de.blau.android.osm.Relation restriction = logic.createRestriction ( fromWay, viaElement, toWay, ( ( toWay ) == ( fromWay ) ? de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.NO_U_TURN_VALUE : null ) ) ; android.util.Log.i ( "EasyEdit", "Created restriction" ) ; main.performTagEdit ( restriction, de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.RESTRICTION_TAG, false ) ; main.startActionMode ( new de.blau.android.easyedit.EasyEditManager.RelationSelectionActionModeCallback ( restriction ) ) ; return false; } 
@ java.lang.Override public void deleteCorsRules ( @javax.annotation.Nonnull java.lang.String bucketUuid ) throws com.eucalyptus.objectstorage.exceptions.ObjectStorageException { try ( final com.eucalyptus.entities.TransactionResource tran = com.eucalyptus.entities.Entities.transactionFor ( com.eucalyptus.objectstorage.entities.CorsRule.class ) ) { com.eucalyptus.objectstorage.BucketCorsManagers.getInstance () .deleteCorsRules ( bucketUuid, tran ) ; tran.commit () ; } catch ( java.lang.Exception ex ) { com.eucalyptus.objectstorage.metadata.DbBucketCorsManagerImpl.LOG.error ( ( ( ex.getMessage () ) + ( ( "Exception caught while deleting CORS rules for bucket " + bucketUuid ) + ": " ) ) ) ; throw new com.eucalyptus.objectstorage.exceptions.ObjectStorageException ( "InternalServerError", ( "Exception caught while deleting CORS rules for bucket " + bucketUuid ) , "Bucket", bucketUuid, org.jboss.netty.handler.codec.http.HttpResponseStatus.INTERNAL_SERVER_ERROR ) ; } } 
private void Price () { java.lang.String priceWithCurrency = source.getElementsByClass ( "price-label" ) .text () .replaceAll ( "\\D+", "" ) ; if ( 0 == ( priceWithCurrency.length () ) ) { adBuilder.price ( null ) ; } adBuilder.price ( java.lang.Integer.parseInt ( priceWithCurrency ) ) ; } 
private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( java.lang.Class<?> concrete, java.lang.Class<?> iface, java.lang.Class<?> c, java.lang.reflect.Type[] ts ) { for ( java.lang.reflect.Type t : ts ) { org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper.getType ( concrete, iface, c, t ) ; if ( null != p ) { return p; } } return null; } 
public boolean onBlockDestroyed ( net.minecraft.item.ItemStack stack, net.minecraft.world.World worldIn, net.minecraft.block.state.IBlockState blockIn, net.minecraft.util.math.BlockPos pos, net.minecraft.entity.EntityLivingBase entityLiving ) { if ( 0.0 != ( ( double ) ( blockIn.getBlockHardness ( worldIn, pos ) ) ) ) { stack.damageItem ( 1, entityLiving ) ; } return true; } 
public static java.lang.String getRating ( java.lang.String login, int fid ) throws java.lang.Exception { java.util.ArrayList<java.lang.String[]> ret = DatabaseInterface.SQLExecutor.executeQuery ( ( ";" + ( ( ( "SELECT rating FROM acmdb05.Rates WHERE login='" + login ) + "' AND fid=" ) + fid ) ) ) ; return ret.get ( 1 ) [0]; } 
protected int skipWSC () throws java.io.IOException, org.openrdf.rio.RDFHandlerException { int c = readCodePoint () ; while ( ( c == '#' ) || ( org.openrdf.rio.turtle.TurtleUtil.isWhitespace ( c ) ) ) { if ( c == '#' ) { processComment () ; } else if ( c == '\n' ) { ( lineNumber ) ++; } } unread ( c ) ; return c; } 
@ java.lang.Override public void mouseDragged ( java.awt.event.MouseEvent e ) { if ( ( ( e.getX () ) <= ( this.getWidth () ) ) && ( ( e.getX () ) >= 0 ) ) { if ( knob1Picked ) { moveKnob1 ( e.getX () ) ; return; } if ( knob2Picked ) { moveKnob2 ( e.getX () ) ; } } } 
@ java.lang.Override public java.sql.Connection getConnection () throws java.sql.SQLException { State.State state = validatePoolState ( isAllowConnectionAfterTermination () ) ; if ( ( WORKING ) == state ) { try { return getPooledConnection ( getConnectionTimeoutInMs () ) ; } catch ( java.sql.SQLException e ) { if ( ( ! ( e.getSQLState () .equals ( org.vibur.dbcp.SQLSTATE_POOL_CLOSED_ERROR ) ) ) || ( ! ( isAllowConnectionAfterTermination () ) ) ) throw e; } } assert ( getState () ) == ( TERMINATED ) ; org.vibur.dbcp.ViburDBCPDataSource.logger.info ( "Calling getConnection () after the pool was closed; will create and return a non-pooled Connection." ) ; return getNonPooledConnection () ; } 
public void run () { int[] selectedRows = tablePositions.getSelectedRows () ; if ( 0 < ( selectedRows.length ) ) { getPositionsModel () .up ( selectedRows, 1 ) ; selectPositions ( slash.navigation.gui.events.Range.increment ( selectedRows, ( -1 ) ) ) ; } } 
@ java.lang.Override public boolean hasWon () { sixesWildEntity.Board board = sixesWildEntity.Board.newInstance () ; if ( ( highestScore ) <= ( board.currentScore ) ) { highestScore = board.currentScore; } if ( ( highestScore ) >= ( threeStarScore ) ) { starNumber = 3; } else if ( ( highestScore ) >= ( twoStarScore ) ) { starNumber = 2; } else if ( ( highestScore ) >= ( oneStarScore ) ) { java.lang.System.out.println ( "Light 1" ) ; starNumber = 1; } return ( board.currentScore ) >= ( oneStarScore ) ; } 
@ java.lang.Override public void loadProducts ( java.util.List<com.ariondan.vendor.model.ProductModel> productModels ) { layoutCart.setVisibility ( View.GONE ) ; this.productModels.clear () ; cartModels.clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this.productModels.add ( product ) ; if ( null != ( gridProducts.getAdapter () ) ) { gridProducts.getAdapter () .notifyDataSetChanged () ; } } } 
private void makeNewHeader ( org.json.JSONObject transforms ) { for ( int x = 1; ( ( transforms.length () ) + 1 ) > x; x++ ) { java.lang.String curTransform = "transform" + x; java.lang.String newField = getCurrTransformNewField ( transforms, curTransform ) ; java.lang.System.out.println ( ( "newField is: " + newField ) ) ; if ( newField.equals ( "" ) ) { } else if ( checkHeaderDuplicate ( newHeader, newField ) ) { newHeader.put ( newHeader.length () , newField ) ; } } } 
@ java.lang.Override public java.lang.String decorMatrix ( int[][] matrix ) { java.lang.StringBuilder array = new java.lang.StringBuilder ( "" ) ; for ( int i = 0; ( ( matrix.length ) - 1 ) >= i; i++ ) { array.append ( ( ( this.arrayToString ( matrix[i] ) ) + ( java.lang.System.lineSeparator () ) ) ) ; } return java.lang.String.format ( primitivesMatrixTemplate, array ) ; } 
@ java.lang.Override public void setParameter ( int i, double p ) { if ( null != ( this.stateWeights ) ) { if ( i < ( this.stateWeights.length ) ) { this.stateWeights[i] = p; } } else if ( ( this.stateActionWeights ) != null ) { if ( i < ( this.stateActionWeights.length ) ) { this.stateActionWeights[i] = p; } } throw new java.lang.RuntimeException ( "Parameter index out of bounds; parameter cannot be set." ) ; } 
public void onRequest ( java.lang.String ipAddress, java.sql.Timestamp time ) { synchronized ( this ) { ( requestTotal ) ++; } com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress, 1, time ) ; if ( ! ( requests.contains ( request ) ) ) { requests.add ( request ) ; } else { com.hula.domain.Request r = requests.get ( requests.indexOf ( request ) ) ; r.setRequestCount ( ( 1 + ( r.getRequestCount () ) ) ) ; r.setDateOfLastRequest ( time ) ; } } 
protected static final void check ( final com.gamesbykevin.breakout.game.Game game ) { if ( 0 >= ( game.getBricks () .getCount () ) ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0; com.gamesbykevin.breakout.game.GameHelper.WIN = true; game.getScreen () .setState ( ScreenManager.State.GameOver ) ; } else if ( game.getBalls () .getBalls () .isEmpty () ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0; com.gamesbykevin.breakout.game.GameHelper.LOSE = true; ( com.gamesbykevin.breakout.game.GameHelper.LIVES ) --; } } 
public void setFrequencyDays ( java.lang.String daysBitString ) { frequencyDays = daysBitString; java.util.Calendar calendar = java.util.Calendar.getInstance () ; int today = ( calendar.get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1; java.lang.System.out.println ( daysBitString ) ; if ( frequencyDays.substring ( today, ( 1 + today ) ) .equals ( "1" ) ) { isToday = true; } else { isToday = false; } } 
public java.lang.String toString () { java.lang.String cardSymbols = ""; java.lang.String values = ""; for ( int x = 0; ( lastCard ) > x; x++ ) { cardSymbols += ( CardUtils.cardToString ( cards[x] ) ) + " "; values += ( CardUtils.getValue ( cards[x] ) ) + " "; } return ( ( cardSymbols + "\n" ) + values ) + "\n"; } 
public void setIsWifiEnable ( boolean isWifiEnable ) { isWifiP2pEnable = isWifiEnable; if ( isRemainResult ) { remainWifiIsEnable = isWifiEnable; } if ( null != ( mOnWiFiRecevieListener ) ) { mOnWiFiRecevieListener.onWifiStatusResult ( isWifiEnable ) ; } if ( !isWifiEnable ) { if ( isGroupOwner ) { } } } 
public static void init ( javax.servlet.ServletContext servletContext ) { java.io.File repository = ( ( java.io.File ) ( servletContext.getAttribute ( "javax.servlet.context.tempdir" ) ) ) ; org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD, repository ) ) ; org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD, repository ) ) ; int uploadLimit = org.edagarli.framework.helper.ConfigHelper.getAppUploadLimit () ; if ( 0 != uploadLimit ) { org.edagarli.framework.helper.UploadHelper.servletFileUpload.setFileSizeMax ( ( ( uploadLimit * 1024 ) * 1024 ) ) ; } } 
public int logoutUser ( java.lang.String username ) { int state; boolean userExist; boolean active; userExist = database.usernameExist ( username ) ; active = database.getActive ( username ) ; if ( active && userExist ) { database.userActive ( username, false ) ; state = 1; } else { state = 0; } java.lang.System.out.println ( ( ( "[Server][Service]" + "RETURN LOGOUT = " ) + state ) ) ; return state; } 
public void reset () { for ( int i = 0; ( numberOfDoFs ) > i; i++ ) regularizationMatrix.set ( i, i, jointAccelerationRegularization.getDoubleValue () ) ; solverInput_H.zero () ; solverInput_f.zero () ; solverInput_Aeq.reshape ( 0, problemSize ) ; solverInput_beq.reshape ( 0, 0 ) ; if ( ! ( firstCall.getBooleanValue () ) ) addJointJerkRegularization () ; } 
@ java.lang.Override public int getCount () throws java.sql.SQLException { if ( ( orderBys.isEmpty () ) && ( filters.isEmpty () ) ) return ( ( int ) ( columnView.longSize () ) ) ; return columnView.rowCount ( toQuery ( 0, filters ) ) ; } 
@ java.lang.Override public void onPrepared ( @android.support.annotation.NonNull com.devbrackets.android.playlistcore.api.MediaPlayerApi mediaPlayerApi ) { retryCount = 0; setPlaybackState ( com.devbrackets.android.playlistcore.service.PlaylistServiceCore.PlaybackState.PLAYING ) ; startMediaPlayer () ; if ( immediatelyPause ) { immediatelyPause = false; if ( mediaPlayerApi.isPlaying () ) { performPause () ; } } if ( 0 < ( seekToPosition ) ) { performSeek ( seekToPosition ) ; seekToPosition = -1; } updateRemoteViews () ; updateNotification () ; } 
void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState, final org.osgi.framework.BundleListener listener ) { if ( null == listener ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; synchronized ( bundleListeners ) { java.util.List<org.osgi.framework.BundleListener> listeners = bundleListeners.get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners.size () ) > 1 ) listeners.remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } } 
private void readExternal ( com.tangosol.io.pof.PofReader pofReader ) throws java.io.IOException { if ( 1 <= ( pofReader.getVersionId () ) ) { this.media = ( ( serializers.coherence.media.Media ) ( pofReader.readObject ( 0 ) ) ) ; this.images = ( ( java.util.List<serializers.coherence.media.Image> ) ( pofReader.readCollection ( 1, null ) ) ) ; } } 
public void setBootstrapType ( java.lang.String bootstrapType ) { com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes type; if ( roundedCorners ) { type = com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMapRounded.get ( bootstrapType ) ; } else { type = com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMap.get ( bootstrapType ) ; } if ( null == type ) { type = com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes.DEFAULT; } layout.setBackgroundResource ( type.backgroundDrawable ) ; lblLeft.setTextColor ( getResources () .getColor ( type.textColour ) ) ; lblMiddle.setTextColor ( getResources () .getColor ( type.textColour ) ) ; lblRight.setTextColor ( getResources () .getColor ( type.textColour ) ) ; } 
public void setSelection ( T selection ) { for ( int i = 0, count = getItems () .size () ; count > i; i++ ) { T item = getItems () .get ( i ) ; if ( item == selection ) { setSelection ( i ) ; return; } } } 
private ludum.dare.collision.CollisionGroup getCollisions ( java.util.Map<java.lang.String, ludum.dare.collision.CollisionSequence> data ) { ludum.dare.utils.NamedAnimation animation = animations.getCurrentAnimation () ; java.lang.String name = animation.getName () ; if ( data.containsKey ( name ) ) { ludum.dare.collision.CollisionSequence sequence = data.get ( name ) ; if ( ( animation.getLastCalledFrame () ) <= ( sequence.frames.length ) ) { return sequence.frames[animation.getLastCalledFrame () ]; } } return null; } 
public void setAltitude ( bwem.Altitude altitude ) { if ( ! ( isAltitudeMissing () ) ) { throw new java.lang.IllegalStateException ( "Altitude is already set" ) ; } else if ( ! ( 0 < ( altitude.intValue () ) ) ) { throw new java.lang.IllegalArgumentException ( "invalid Altitude" ) ; } else { this.altitude = new bwem.Altitude ( altitude ) ; } } 
private boolean isNewHighScore ( java.lang.String lastScoreDeck ) { java.lang.String highScoreDeck = prefs.getString ( "highScoreDeck", "" ) ; if ( ( ( lastScoreDeck.compareTo ( highScoreDeck ) ) < 0 ) || ( lastScoreDeck.isEmpty () ) ) { return true; } else { return false; } } 
@ java.lang.Override public void onBindViewHolder ( com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewHolder holder, int position, java.util.List<java.lang.Object> payloads ) { super.onBindViewHolder ( holder, position, payloads ) ; if ( ( ! ( payloads.isEmpty () ) ) && ( payloads != null ) ) { holder.setEntry ( ( ( com.example.brandon.habitlogger.HabitDatabase.DataModels.SessionEntry ) ( payloads.get ( 0 ) ) ) ) ; } else holder.setEntry ( null ) ; } 
public java.lang.String post ( java.lang.String endpoint, com.ringcentral.definitions.Base base ) throws com.ringcentral.RestException, java.io.IOException { com.ringcentral.RequestBody body = com.ringcentral.RequestBody.create ( com.ringcentral.RestClient.jsonMediaType, com.alibaba.fastjson.JSON.toJSONString ( base ) ) ; com.ringcentral.Request request = new com.ringcentral.Request.Builder () .url ( ( endpoint + ( ( server ) + "/" ) ) ) .addHeader ( "Authorization", authorizationHeader () ) .post ( body ) .build () ; return request ( request ) ; } 
public void findMinFormat () { if ( true == ( isEmptyHeap () ) ) { return heap[0]; java.lang.System.out.println ( "There are no ideas here" ) ; } else { java.lang.System.out.println ( ( ( ( ( ( "The best idea is Idea #" + ( heap[0].getSeqNum () ) ) + "/nrated at" ) + ( heap[0].getRating () ) ) + "here is the description: /n" ) + ( heap.getDesc () ) ) ) ; } } 
public boolean makeSale () { if ( ( ( stock ) > 1 ) && ( ( deposit ) >= ( price ) ) ) { ( stock ) --; if ( ( deposit ) > ( price ) ) { change = ( deposit ) - ( price ) ; } deposit = 0; return true; } return false; } 
public <T> SigmaEC.util.Option<java.util.List<T>> getOptionalInstancesFromParameter ( final java.lang.String parameterName, final java.lang.Class expectedSuperClass ) { assert null != parameterName; assert expectedSuperClass != null; if ( properties.containsKey ( parameterName ) ) return new SigmaEC.util.Option ( ( ( java.util.List<T> ) ( getInstancesFromParameter ( parameterName, expectedSuperClass ) ) ) ) ; else return Option.NONE; } 
public void actionEvent () { if ( 0 < ( tfInput.getText () .length () ) ) { if ( ( controller.getSelectedUsers () .length ) > 0 ) { java.lang.String[] recipients = controller.getSelectedUsers () ; controller.send ( new chat_client.Message ( tfInput.getText () , recipients ) ) ; } else { controller.send ( new chat_client.Message ( tfInput.getText () , true ) ) ; } tfInput.setText ( "" ) ; } } 
public static void main ( java.lang.String[] args ) { SimpleDotCom hans = new SimpleDotCom () ; ReadyBakeInput inny = new ReadyBakeInput () ; boolean isAlive = true; java.lang.System.out.println ( "Hans the dotcom yet lives. Make him run! Enter numbers 0-6 to hit him. 3 consecutive hits will kill him. " ) ; while ( true == isAlive ) { hans.setLocationArray () ; java.lang.String playerGuess = inny.getUserInput ( "Enter a number 0-6: " ) ; java.lang.String result = hans.checkYourself ( playerGuess ) ; java.lang.System.out.println ( result ) ; if ( result == "kill" ) { isAlive = false; java.lang.System.out.println ( "Now, hans must run!" ) ; } } } 
public int solution ( int[] A ) { int expectedSum = ( ( ( A.length ) + 2 ) * ( ( A.length ) + 1 ) ) / 2; int realSum = 0; for ( int i : A ) { realSum += i; } return expectedSum - realSum; } 
public java.lang.String getClassName () { if ( mClassList.isEmpty () ) { return mClassName.isEmpty () ? null : mClassName; } else { java.lang.String class_name = mClassList.get ( 0 ) .getName () ; for ( int i = 1; ( mClassList.size () ) > i; i++ ) { class_name = "," + ( mClassList.get ( i ) .getName () ) ; } return class_name; } } 
public void setFilename ( java.lang.String filename ) { if ( filename.endsWith ( ( "DB" + ( java.io.File.separator ) ) ) ) connField.setText ( filename.substring ( 0, ( ( filename.length () ) - 3 ) ) ) ; else connField.setText ( filename ) ; } 
@ java.lang.Override public boolean add ( org.eclipse.jetty.webapp.ClasspathPattern.Entry entry ) { java.lang.String name = entry.getName () ; if ( entry.isClassName () ) name += "$"; else if ( entry.isLocation () ) throw new java.lang.IllegalArgumentException ( entry.toString () ) ; else if ( ".".equals ( name ) ) name = ""; if ( null != ( this._entries.get ( name ) ) ) return false; this._entries.put ( name, entry ) ; return true; } 
@ java.lang.Override public void onDestroy () { org.md2k.utilities.Report.Log.d ( org.md2k.plotter.ActivityPlot.TAG, "onDestroy () " ) ; if ( null != ( dataSourceClient ) ) try { if ( ( dataKitAPI ) != null ) dataKitAPI.unsubscribe ( dataSourceClient ) ; } catch ( org.md2k.datakitapi.exception.DataKitException e ) { e.printStackTrace () ; } if ( ( dataKitAPI ) != null ) dataKitAPI.disconnect () ; redrawer.pause () ; redrawer.finish () ; super.onDestroy () ; } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { if ( null != ( dataSnapshot.getValue () ) ) { com.example.chowdi.qremind.infrastructure.QueueInfo queueInfo = dataSnapshot.getValue ( com.example.chowdi.qremind.infrastructure.QueueInfo.class ) ; if ( ( queueInfo.getCalling () ) != null ) { if ( ! ( com.example.chowdi.qremind.activities.BaseActivity.notificationPoppedOut ) ) popUpNotification ( queueNo ) ; if ( ! ( application.notificationSend ) ) application.showNotification () ; } } else { com.example.chowdi.qremind.activities.BaseActivity.fbRefQueueTurn.removeEventListener ( com.example.chowdi.qremind.activities.BaseActivity.queueTurnListener ) ; com.example.chowdi.qremind.utils.Commons.showToastMessage ( "You have been removed from queue!", getApplicationContext () ) ; } } 
public boolean isLookaheadIgnoreWhitespace ( char expectedChar ) { int tempPos = 1 + ( pos ) ; if ( ( tempPos + 1 ) >= ( input.length () ) ) return false; char c = input.charAt ( tempPos ) ; while ( isWhitespace () ) { ++tempPos; if ( tempPos >= ( input.length () ) ) return false; c = input.charAt ( tempPos ) ; } return c == expectedChar; } 
private void mathButton_ActionPerformed ( java.awt.event.ActionEvent evt ) { int[] rows = new int[mainTable_.getRowCount () ]; for ( int i = 0; ( rows.length ) > i; i++ ) { rows[i] = ( ( java.lang.Integer ) ( mainTable_.getValueAt ( mainTable_.convertRowIndexToModel ( i ) , 0 ) ) ) ; } edu.valelab.gaussianfit.MathForm mf = new edu.valelab.gaussianfit.MathForm ( edu.valelab.gaussianfit.DataCollectionForm.studio_.getUserProfile () , rows, rows ) ; mf.setVisible ( true ) ; } 
public void validate ( ca.nines.ise.dom.DOM dom ) { for ( ca.nines.ise.node.Node n : dom ) { if ( ( ca.nines.ise.node.NodeType.END ) == ( n.type () ) ) { switch ( n.getName () ) { case "ornament": process_end ( ( ( ca.nines.ise.node.EndNode ) ( n ) ) ) ; break; } } } } 
private void ifThereIsMatchAddItToTotalTokens ( char[] tokenBuffer ) { if ( 0 < ( tokenLength ) ) { final java.lang.String token = java.lang.String.copyValueOf ( tokenBuffer, 0, termAtt.length () ) ; totalTokens.put ( token, new java.lang.Integer[] { tokenStart, tokenEnd, token.length () , 1 } ) ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { java.lang.Double value = ( ( java.lang.Double ) ( dataSnapshot.getValue () ) ) ; if ( null != value ) { myRef.child ( path ) .setValue ( ( value + passedValue ) ) ; } else { myRef.child ( path ) .setValue ( passedValue ) ; } } catch ( java.lang.Exception e ) { android.util.Log.d ( "Error catched", e.toString () ) ; } } 
public static void main ( java.lang.String[] args ) { dao.CustomerDB db = new dao.CustomerDB ( "remoteuser", "password" ) ; java.lang.String[] stringValues = db.readAllValues ( 2 ) ; for ( int i = 0; 7 > i; i++ ) { java.lang.System.out.print ( ( ( stringValues[i] ) + " " ) ) ; } } 
public static void filterAdminOnlyFlowParams ( azkaban.user.UserManager userManager, azkaban.executor.ExecutionOptions options, azkaban.user.User user ) throws azkaban.executor.ExecutorManagerException { if ( ( ( options.getFlowParameters () ) == null ) || ( options == null ) ) return; java.util.Map<java.lang.String, java.lang.String> params = options.getFlowParameters () ; if ( ! ( azkaban.server.HttpRequestUtils.hasPermission ( userManager, user, Type.ADMIN ) ) ) { params.remove ( ExecutionOptions.FLOW_PRIORITY ) ; params.remove ( ExecutionOptions.USE_EXECUTOR ) ; } else { azkaban.server.HttpRequestUtils.validateIntegerParam ( params, ExecutionOptions.FLOW_PRIORITY ) ; } } 
@ java.lang.Override public void onDepthFrameEvent ( short[] depthFrame, byte[] playerIndex, float[] xyz, float[] uv ) { if ( null != ( this.lock ) ) { synchronized ( this.lock ) { this.lock.notifyAll () ; this.lock = null; } } de.gocodinggroup.multiplicationtable.input.kinect.EventManager.dispatchAndWait ( new de.gocodinggroup.multiplicationtable.input.kinect.KinectDepthFrameEvent ( depthFrame, playerIndex, xyz, uv ) ) ; } 
public void setZoom ( double zoom ) { if ( 0.025 >= ( java.lang.Math.abs ( ( ( getMagnification () ) - zoom ) ) ) ) { if ( ( getMagnification () ) <= 1.0 ) imp.repaintWindow () ; return; } if ( ( getMagnification () ) < zoom ) zoomIn ( 0, 0 ) ; else zoomOut ( 0, 0 ) ; setZoom ( zoom ) ; } 
public recruitment.business.ApplicantDTO registerApplicant ( java.lang.String firstname, java.lang.String lastname, java.lang.String dateofbirth, java.lang.String email, java.lang.String username, java.lang.String password ) { if ( null != ( em.find ( recruitment.business.Applicant.class, username ) ) ) { throw new javax.persistence.EntityExistsException ( ( "Account already exists with username " + username ) ) ; } else { recruitment.business.Applicant newApplicant = new recruitment.business.Applicant ( firstname, lastname, dateofbirth, email, username, password ) ; java.lang.System.out.println ( newApplicant.getUsername () ) ; em.persist ( newApplicant ) ; return newApplicant; } } 
void upsertCF ( com.datastax.driver.core.Session session ) { session.execute ( ( " \" ) ; " + ( ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE IF NOT EXISTS " + ( TableName ) ) + " ( \"_id\" text PRIMARY KEY, name list<text> ) WITH bloom_filter_fp_chance = 0.01 " ) + " AND caching = \'{\"keys\":\"ALL\", \"rows_per_partition\":\"NONE\"}\'" ) + " AND comment = 'Auto-created by Elassandra' " ) + " AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'} " ) + " AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'} " ) + " AND dclocal_read_repair_chance = 0.1 " ) + " AND default_time_to_live = 0 " ) + " AND gc_grace_seconds = 864000 " ) + " AND max_index_interval = 2048 " ) + " AND memtable_flush_period_in_ms = 0 " ) + " AND min_index_interval = 128 " ) + " AND read_repair_chance = 0.0 " ) + " AND speculative_retry = '99.0PERCENTILE'; " ) ) ) ; session.execute ( "CREATE CUSTOM INDEX elastic_external_name_idx ON customer.external ( name ) USING 'org.elasticsearch.cassandra.index.ExtendedElasticSecondaryIndex';" ) ; } 
@ java.lang.Override public void onCompletion ( com.app.sircle.WebService.PostResponse postResponse, com.app.sircle.Utility.AppError error ) { ringProgressDialog.dismiss () ; if ( null != postResponse ) { android.widget.Toast.makeText ( getActivity () , postResponse.getMessage () , Toast.LENGTH_SHORT ) .show () ; if ( ( postResponse.getStatus () ) == 200 ) { android.content.Intent homeIntent = new android.content.Intent ( getActivity () , com.app.sircle.UI.Activity.BaseActivity.class ) ; startActivity ( homeIntent ) ; } } else { android.widget.Toast.makeText ( getActivity () , "some error occurred", Toast.LENGTH_SHORT ) .show () ; } } 
public void setMinDateInMs ( long minDateInMs ) { this.minDateInMs = minDateInMs; if ( 0 < ( this.minDateInMs ) ) { addSubmissionsToMap ( this.googleMap.getProjection () .getVisibleRegion () ) ; } else { addSubmissionsToMap ( this.googleMap.getProjection () .getVisibleRegion () ) ; } } 
public static de.beacon.tom.viibenav_radiomapper.model.Orientation getOrientationFromSensorHelper () { if ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) < 270 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) >= 90 ) ) return Orientation.back; else if ( ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) > 0 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) < 90 ) ) || ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) >= 270 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper.getOrientation () ) <= 360 ) ) ) return Orientation.front; else return Orientation.undetermined; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; com.firebase.client.Firebase.setAndroidContext ( this ) ; setContentView ( R.layout.activity_friend_list ) ; super.onCreateDrawer () ; com.firebase.client.Firebase.setAndroidContext ( this ) ; if ( null == savedInstanceState ) { getSupportFragmentManager () .beginTransaction () .add ( R.id.container, new com.gatech.objectsanddesign.shoppingwithfriends.FriendList.PlaceholderFragment () ) .commit () ; } } 
protected static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner; java.util.ArrayList<java.lang.String> words = new java.util.ArrayList<java.lang.String> () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner.hasNext () ) { words.add ( scanner.next () ) ; } scanner.close () ; if ( 3 == ( words.size () ) ) { return words.get ( 2 ) ; } return "HTTP/1.1"; } 
public atv.model.TreeNode createNode ( java.lang.String locationlevel, java.lang.String locationname ) { atv.model.TreeNode node = new atv.model.TreeNode ( locationname, locationlevel ) .setViewHolder ( new atv.holder.SelectableItemHolder ( getActivity () , ( ": " + locationlevel ) ) ) ; node.setSelectable ( false ) ; addselectlistener ( node, "" ) ; return node; } 
private java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream, "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null; while ( null != ( line = reader.readLine () ) ) sb.append ( ( line + "\n" ) ) ; inputStream.close () ; com.example.celien.drivemycar.http.JsonParser.json = sb.toString () ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json; } 
public static void exportResource ( java.lang.String resourceName, java.nio.file.Path destination ) throws java.io.IOException { try ( java.io.InputStream in = com.github.checkstyle.FilesystemUtils.class.getResourceAsStream ( resourceName ) ; java.io.OutputStream out = java.nio.file.Files.newOutputStream ( destination ) ) { int readBytes; final byte[] buffer = new byte[com.github.checkstyle.FilesystemUtils.BUFFER_SIZE]; while ( 0 < ( readBytes = in.read ( buffer ) ) ) { out.write ( buffer, 0, com.github.checkstyle.FilesystemUtils.BUFFER_SIZE ) ; } } } 
public void refreshListView () { if ( null != ( currentRegisteredUser ) ) { journals = selectMyJournalsFromDB ( mEmail ) ; } else { journals = dbLink.selectAvailableJournals () ; } if ( ( journals ) != null ) { com.journee.utils.AlbumRecycleViewAdapter adapter = new com.journee.utils.AlbumRecycleViewAdapter ( this, journals ) ; mRecyclerView.setAdapter ( adapter ) ; mRecyclerView.setLayoutManager ( new android.support.v7.widget.LinearLayoutManager ( this ) ) ; } } 
@ java.lang.Override public void stop () { if ( null != ( filesToPlay ) ) { filesToPlay.clear () ; } if ( ( mediaPlayer ) != null ) { mediaPlayer.stop () ; mediaPlayer.release () ; mediaPlayer = null; } if ( ( ctx ) != null ) { abandonAudioFocus () ; } } 
public void gameCycle ( java.awt.Color color ) { if ( ( chosenColor ) == color ) { gui.ColorGameGUI.finalScore = ( gui.ColorGameGUI.finalScore ) + 100; setWord () ; setColor () ; gui.ColorGameGUI.count = ( gui.ColorGameGUI.count ) + 1; } else { setWord () ; setColor () ; gui.ColorGameGUI.count = ( gui.ColorGameGUI.count ) + 1; } if ( ( gui.ColorGameGUI.count ) == 5 ) { endGame () ; } } 
private void setTaskTime ( defaultPart.Task task, java.lang.String timeString ) { defaultPart.Logic.logger.log ( java.util.logging.Level.FINER, "Setting task time using \"{0}\"", timeString ) ; java.lang.String[] startAndEndTime = timeString.split ( "-", 2 ) ; assert 0 < ( startAndEndTime.length ) ; task.setStartTime ( getTimeFromString ( startAndEndTime[0] ) ) ; if ( ( startAndEndTime.length ) == 2 ) { task.setEndTime ( getTimeFromString ( startAndEndTime[1] ) ) ; } else { task.setEndTime ( null ) ; } } 
public void centerModel ( org.gearvrf.GVRSceneObject model ) { org.gearvrf.GVRSceneObject.BoundingVolume bv = model.getBoundingVolume () ; float sf = 1 / ( bv.radius ) ; model.getTransform () .setScale ( sf, sf, sf ) ; bv = model.getBoundingVolume () ; model.getTransform () .setPosition ( ( - ( bv.center.x ) ) , ( - ( bv.center.y ) ) , ( ( - ( bv.center.z ) ) - ( ( bv.radius ) * 1.5F ) ) ) ; } 
private void pushUp () { int i = size () ; while ( ( ( compare2 ( heap.get ( i ) , heap.get ( ( i / 2 ) ) ) ) > 0 ) && ( i > 1 ) ) { swap ( i, ( i / 2 ) ) ; i /= 2; } } 
private void createPeriodTable ( android.database.sqlite.SQLiteDatabase sqLiteDatabase ) { sqLiteDatabase.execSQL ( ( " TIME NOT NULL ) " + ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( TABLE_PERIOD ) ) + " ( " ) + ( PERIOD_COLUMN_ID ) ) + " INTEGER PRIMARY KEY NOT NULL, " ) + ( PERIOD_COLUMN_SUBJECT_ID ) ) + " INTEGER NOT NULL, " ) + ( PERIOD_COLUMN_WEEKDAY_ID ) ) + " INTEGER , " ) + ( PERIOD_COLUMN_SCHOOL_HOUR_NO ) ) + "INTEGER NOT NULL, " ) + ( PERIOD_COLUMN_STARTTIME ) ) + " TIME NOT NULL, " ) + ( PERIOD_COLUMN_ENDTIME ) ) ) ) ; } 
public static void playGame () { Engine.printBoard () ; Engine.printHand () ; while ( false == ( Engine.handIsOver () ) ) { Engine.printHand () ; Engine.playerAction () ; Engine.computerAction () ; Engine.dealerAction () ; Engine.printBoard () ; Engine.printHand () ; } Engine.determineWinners () ; Engine.splitWinnings () ; Engine.askForNewRound () ; } 
@ java.lang.Override public void autonomousInit () { autonomousCommand = ( ( edu.wpi.first.wpilibj.command.Command ) ( modeChooser.getSelected () ) ) ; java.lang.String mode = ( ( java.lang.String ) ( modeChooser.getSelected () ) ) ; if ( "forward" == mode ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString ( "", "Test Forward" ) ; } else if ( mode == "gear" ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString ( "", "Test Gear" ) ; } else { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString ( "", "Test Nothing" ) ; } if ( ( autonomousCommand ) != null ) autonomousCommand.start () ; } 
private com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey generateZoneKey ( final org.xbill.DNS.Name name, final java.util.List<org.xbill.DNS.Record> list, final boolean dynamicRequest, final boolean dnssecRequest ) { if ( ( !dnssecRequest ) && dynamicRequest ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name, list ) ; } else if ( ( isDnssecEnabled () ) && ( name.subdomain ( com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneManager.getTopLevelDomain () ) ) ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.SignedZoneKey ( name, list ) ; } else { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name, list ) ; } } 
public boolean checkAnswer ( int answer ) { java.lang.System.out.println ( ( answer + "answer: " ) ) ; java.lang.System.out.println ( ( "Current answer: " + ( currAnswer ) ) ) ; if ( answer == ( currAnswer ) ) { java.lang.System.out.println ( ( answer + "answer: " ) ) ; hintArea.setText ( "" ) ; if ( ( game.getRemainingHints () ) == 0 ) game.finish () ; playGame () ; return true; } return false; } 
public boolean fireProjectile ( final java.lang.Class<? extends MarsRoverKata.Projectile> type ) { MarsRoverKata.Projectile projectileToFire = com.google.common.collect.Iterables.get ( com.google.common.collect.Collections2.filter ( projectiles, new com.google.common.base.Predicate<MarsRoverKata.Projectile> () { @java.lang.Override public boolean apply ( MarsRoverKata.Projectile input ) { return input.getClass () .isAssignableFrom ( type ) ; } } ) , 1, null ) ; if ( null == projectileToFire ) { return false; } projectileToFire.launch ( getFacing () , getLocation () ) ; projectiles.remove ( projectileToFire ) ; return true; } 
public java.lang.String toString () { SinglyLinkedNode<E> current = head; if ( null == current ) { return "[]"; } java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb.append ( ( "[" + ( current.data ) ) ) ; while ( ( current.next ) != null ) { current = current.next; sb.append ( ", " ) .append ( current.data ) ; } sb.append ( "]" ) ; return sb.toString () ; } 
public void keyPressed ( java.awt.event.KeyEvent keyPressed ) { if ( ( java.awt.event.KeyEvent.VK_ENTER ) == ( keyPressed.getKeyCode () ) ) { command = inArea.getText () ; inArea.setText ( "" ) ; tcpService.sendCommand ( command.trim () ) ; } } 
public java.util.Date getCommentDate ( int postId, int commentId ) { if ( null == ( posts.get ( postId ) ) ) { return null; } if ( ( posts.get ( postId ) .comments ) == null ) { return null; } for ( me.dibber.blablablapp.core.Post.Comment c : posts.get ( postId ) .comments ) { if ( ( c.id ) == commentId ) { return c.date; } } return null; } 
private void btTestarMouseReleased ( java.awt.event.MouseEvent evt ) { if ( "".equals ( tfSite.getText () ) ) { Pingador.Shell.atualizaOutput ( Pingador.ft1.taOutput, "Alvo invalido" ) ; return; } if ( 0 >= ( java.lang.Integer.parseInt ( spQtPack.getValue () .toString () ) ) ) { Pingador.ft1.ESTADO.setc ( 3 ) ; } ftcn () ; } 
@ java.lang.Override public int compareTo ( de.uniks.template.TemplateFragment other ) { if ( ( other.getValue () .equals ( value ) ) && ( ( other.getKey () ) == ( key ) ) ) { return 0; } if ( ( other.getKey () ) > ( key ) ) { return -1; } return 1; } 
public final byte[] memOrLoad () { byte[] mem = _mem; if ( null != mem ) return mem; water.Freezable pojo = _pojo; if ( pojo != null ) _mem = pojo.asBytes () ; if ( ( _max ) == 0 ) return _mem = new byte[0]; return _mem = loadPersist () ; } 
private static boolean isHexadecimal ( char c ) { return ( ( c >= 'a' ) && ( c >= 'f' ) ) || ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { v.setOnClickListener ( null ) ; java.lang.String num = ev.getText () .toString () .trim () ; if ( ( "".equals ( num ) ) || ( num == null ) ) return; double n = parseDouble ( num ) ; if ( n == 0 ) { setText ( "Error: Divide by zero." ) ; return; } setText ( inIntTermsOfAny ( ( n / ( currentValue ) ) ) , ev ) ; v.setVisibility ( View.GONE ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent.getStringExtra ( MainActivity.LOCATION_KEY ) ; android.util.Log.d ( "intent", ( location + "Location: " ) ) ; android.widget.TextView textView = new android.widget.TextView ( this ) ; textView.setTextSize ( 40 ) ; textView.setText ( ( ( ( R.string.display_location_text ) + ": " ) + location ) ) ; setContentView ( textView ) ; } 
public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { if ( ( RESULT_OK ) == resultCode ) { if ( requestCode == ( com.example.deepak.socialnetworkingapp.upload.SELECT_PICTURE ) ) { android.net.Uri selectedImageUri = data.getData () ; if ( null != selectedImageUri ) { java.lang.String path = getPathFromURI ( selectedImageUri ) ; imgView.setImageURI ( selectedImageUri ) ; } } } } 
@ java.lang.Override protected void onPreExecute () { android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext.getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm.getActiveNetworkInfo () ; boolean isConnected = ( activeNetwork.isConnectedOrConnecting () ) && ( activeNetwork != null ) ; boolean isWiFi = ( activeNetwork.getType () ) == ( android.net.ConnectivityManager.TYPE_WIFI ) ; if ( isConnected || isWiFi ) { showProgressDialogue () ; } else { android.widget.Toast.makeText ( mContext, mContext.getString ( R.string.toast_no_internet_connection ) , Toast.LENGTH_SHORT ) .show () ; } } 
private void handleAutoImprov ( int slotInPlayback ) { int gap = lickgenFrame.getGap () ; if ( ( slotInPlayback >= ( ( stopPlaybackAtSlot ) - gap ) ) && ( lickgenFrame.getRecurrent () ) ) { ( recurrentIteration ) ++; setFirstChorus ( false ) ; setStatus ( ( "Chorus " + ( recurrentIteration ) ) ) ; int start = improviseStartSlot; originalGenerate ( lickgen, start, improviseEndSlot ) ; } } 
@ java.lang.Override public void run () { if ( isInCommingCall ) { stopIncomeCallTimer () ; android.util.Log.d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG, ( ( isInCommingCall ) + "isInCommingCall - " ) ) ; } com.quickblox.sample.videochatwebrtcnew.SessionManager.setCurrentSession ( null ) ; android.util.Log.d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG, "Stop session" ) ; stopTimer () ; closeByWifiStateAllow = true; if ( ! ( isWifiConnected ) ) { processCurrentWifiState ( this ) ; } else { finish () ; } } 
private void dispatch ( final com.chalcodes.event.EventReceiver<T> receiver, final T event ) { try { receiver.onEvent ( this, event ) ; } catch ( java.lang.Exception e ) { mReceivers.remove ( receiver ) ; if ( null != ( mExceptionBus ) ) { mExceptionBus.broadcast ( e ) ; } } } 
public synchronized void handleRecv ( long latency ) { ( recvCountInterval ) ++; ( recvCountTotal ) ++; if ( 0 < latency ) { minLatency = java.lang.Math.min ( minLatency, latency ) ; maxLatency = java.lang.Math.max ( maxLatency, latency ) ; cumulativeLatencyInterval += latency; cumulativeLatencyTotal += latency; ( latencyCountInterval ) ++; ( latencyCountTotal ) ++; } report ( false ) ; } 
private int simpleComputeNextLineIndentLevel ( int indentLevel, java.util.List<groovyjarjarantlr.Token> tokens ) { int adjust = getOpenVersusCloseBalance ( tokens ) ; if ( 0 < adjust ) indentLevel += getPrefs () .getIndentationSize () ; else if ( adjust < 0 ) indentLevel = indentLevel - ( getPrefs () .getIndentationSize () ) ; return indentLevel; } 
@ org.junit.Test public void testOverflow3 () throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, org.spf4j.zel.vm.CompileException { org.spf4j.zel.vm.Program p = org.spf4j.zel.vm.Program.compile ( ( ( java.lang.Long.MAX_VALUE ) + ( ( "" + ( java.lang.Long.MIN_VALUE ) ) + " - " ) ) ) ; java.lang.System.out.println ( p ) ; java.math.BigInteger result = ( ( java.math.BigInteger ) ( p.execute () ) ) ; org.junit.Assert.assertEquals ( java.math.BigInteger.valueOf ( java.lang.Long.valueOf ( java.lang.Long.MIN_VALUE ) ) .subtract ( java.math.BigInteger.valueOf ( java.lang.Long.valueOf ( java.lang.Long.MAX_VALUE ) ) ) , result ) ; } 
@ org.junit.Test ( timeout = 1000 ) public void randomMovement () { java.lang.String rID = "1"; edu.vt.ece5574.agents.User oUsr = new edu.vt.ece5574.agents.User ( sim, rID, bID, true, 1, 1 ) ; sim.addAgent ( oUsr ) ; double initial_x = oUsr.getX () ; double initial_y = oUsr.getY () ; oUsr.createRandomMovement ( sim ) ; assertFalse ( ( ( ( oUsr.getY () ) == initial_y ) && ( ( oUsr.getX () ) == initial_x ) ) ) ; } 
public void loadImages ( java.util.List<com.albums.model.Album> albums ) { if ( null != albums ) { waitMb.show ( baseAlbumActivity ) ; this.unprocessedAlbums = new java.util.ArrayList<com.albums.model.Album> ( albums ) ; for ( int i = 0; i < ( albums.size () ) ; i++ ) { com.albums.util.ImageLoader imageLoader = new com.albums.util.ImageLoader ( baseAlbumActivity, this ) ; imageLoader.execute ( albums.get ( i ) ) ; } } } 
private void skipComment () { com.rezzedup.map.Source.Character peek = source.peekNextCharacter () ; while ( ( ( peek.character ) != '\n' ) && ( ( ( peek.character ) != null ) && ( ( peek.character ) != '#' ) ) ) { source.getNextCharacter () ; peek = source.peekNextCharacter () ; } } 
private void ToggleCircleColor ( com.google.android.gms.maps.model.Circle circle ) { int strokeColor = ( circle.getStrokeColor () ) ^ 52224; circle.setStrokeColor ( strokeColor ) ; circle.setStrokeWidth ( ( 3 == ( circle.getStrokeWidth () ) ? 6 : 3 ) ) ; android.widget.Toast.makeText ( this, ( "Circle: " + ( circle.getTag () .toString () ) ) , Toast.LENGTH_SHORT ) .show () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage placeOrder ( @org.springframework.web.bind.annotation.RequestParam java.lang.String utoken, @org.springframework.web.bind.annotation.RequestParam java.lang.String order ) { if ( ( org.apache.commons.lang3.StringUtils.isBlank ( order ) ) || ( org.apache.commons.lang3.StringUtils.isBlank ( utoken ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST; com.alibaba.fastjson.JSONObject orderJson = com.alibaba.fastjson.JSON.parseObject ( order ) ; orderJson.put ( "customerId", userServiceApi.USER.get ( utoken ) ) ; dealServiceApi.ORDER.add ( orderJson ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS; } 
public double getCoefficientOfVariation () { int count = this.getCount () ; if ( 0 == count ) { throw new cfvbaibai.cardfantasy.CardFantasyRuntimeException ( "Cannot get square deviation on empty data set." ) ; } double s = 0.0; double avg = this.getAverage () ; for ( double data : this.dataList ) { s += ( data - avg ) * ( data - avg ) ; } return ( java.lang.Math.sqrt ( ( s / count ) ) ) / avg; } 
private void visitYieldExpression ( com.google.javascript.rhino.Node n ) { if ( n.getParent () .isExprResult () ) { return; } if ( ( ExpressionDecomposer.DecompositionType.UNDECOMPOSABLE ) != ( decomposer.canExposeExpression ( n ) ) ) { decomposer.exposeExpression ( n ) ; compiler.reportCodeChange () ; } else { compiler.report ( com.google.javascript.jscomp.JSError.make ( currentStatement, Es6ToEs3Converter.CANNOT_CONVERT, "Undecomposable expression" ) ) ; } } 
public com.badlogic.poker.core.logic.WinCondition checkCombination () { com.badlogic.poker.core.logic.Card[] cardsOnDesk = game.getTable ( java.lang.Thread.currentThread () .getStackTrace () [2].getMethodName () ) .getCardsOnDesk () ; java.lang.System.out.println ( ( ( cardsOnDesk.length ) + "cards on table: " ) ) ; com.badlogic.poker.core.logic.WinCondition win = checkForKind ( cardsOnDesk ) ; game.drawTable () ; game.changeMoney ( win.getCost () ) ; return win; } 
public java.lang.String toString () { java.lang.String res = " " + ( ( ( lieuxDepart ) + " -> " ) + ( lieuxArrivee ) ) ; if ( ( hDepart ) != null ) res += "Depart : " + ( hDepart ) ; if ( ( hArrivee ) != null ) res += "Arrivee : " + ( hDepart ) ; return res; } 
@ java.lang.Deprecated @android.support.annotation.Nullable public java.lang.String toLegacyString () { java.lang.String string = ( ( org.wikipedia.page.Namespace.MAIN ) == ( this ) ) ? null : this.name () ; if ( string != null ) { org.wikipedia.util.StringUtil.capitalizeFirstChar ( string.toLowerCase () ) ; } return string; } 
public cs446.mezzo.music.playlists.Playlist getPlaylist ( java.lang.String playlistName ) { if ( mUserPlaylists.containsKey ( playlistName ) ) { return mUserPlaylists.get ( playlistName ) ; } else if ( playlistName.equals ( cs446.mezzo.music.playlists.PlaylistManager.FAVOURITES ) ) { return mFavourites; } final cs446.mezzo.music.playlists.AutoPlaylist autoPlaylist = cs446.mezzo.music.playlists.AutoPlaylist.get ( playlistName ) ; if ( null == autoPlaylist ) { return null; } return autoPlaylist.getPlaylist ( mLocalMusicFetcher, mStatCollector ) ; } 
@ java.lang.Override public java.lang.String generateUri ( java.io.File file, java.lang.String id ) { java.lang.String uri = file.toURI () .toString () ; uri = ( null != ( getOutputUriPrefix () ) ) ? ( getOutputUriPrefix () ) + uri : uri; uri = ( ( getOutputUriSuffix () ) != null ) ? uri + ( getOutputUriSuffix () ) : uri; uri = ( ( getOutputUriReplace () ) != null ) ? applyOutputUriReplace ( uri, getOutputUriReplace () ) : uri; return uri; } 
@ java.lang.Override public void onSuccess ( java.lang.Object object ) { if ( object != null ) { heroes = ( ( com.example.pratik.dota2profile.beans.Heroes ) ( object ) ) ; for ( com.example.pratik.dota2profile.beans.Hero i : heroes.getResult () .getHeroes () ) { heroesMap.put ( java.lang.Integer.parseInt ( i.getId () ) , i.getLocalizedName () ) ; secondService () ; } } } 
public void fakeBtnFb () { playSound ( R.raw.touch_sound ) ; if ( ( mSocketAltp.isConnected () ) && ( com.oic.game.ailatrieuphu.util.NetworkUtils.checkInternetConnection ( this ) ) ) { int permissionCheck = android.support.v4.content.ContextCompat.checkSelfPermission ( this, Manifest.permission.READ_PHONE_STATE ) ; if ( permissionCheck != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.util.Log.e ( "TAG", "fakeBtnFb: get Permission" ) ; android.support.v4.app.ActivityCompat.requestPermissions ( this, new java.lang.String[] { Manifest.permission.READ_PHONE_STATE }, com.oic.game.ailatrieuphu.ui.activity.LoginScreen.REQUEST_READ_PHONE_STATE ) ; } else { mLoginButtonFb.performClick () ; } } else { connectionDialog.show () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { java.util.Calendar cal = java.util.Calendar.getInstance () ; new android.app.DatePickerDialog ( context, dateSetListener, cal.get ( java.util.Calendar.YEAR ) , ( 1 + ( cal.get ( java.util.Calendar.MONTH ) ) ) , cal.get ( java.util.Calendar.DAY_OF_MONTH ) ) ; } 
public final void setMaximized ( boolean maximized ) { if ( isMaximizable () ) { java.lang.System.out.println ( "is maximizable" ) ; } if ( maximized && ( ( isMaximizable () ) && ( ! ( isMaximized () ) ) ) ) { fireMaximizeEvent () ; maximizedProperty.set ( true ) ; } else if ( ( !maximized ) && ( isMaximized () ) ) { fireRestoreEvent () ; maximizedProperty.set ( false ) ; } } 
@ java.lang.Override public cn.edu.nju.software.entity.User addOrUpdateUser ( cn.edu.nju.software.entity.User user ) { if ( ( ( user.getId () ) != null ) && ( ( user.getId () ) != 0 ) ) { boolean up = userDao.updateUser ( user ) ; return up ? user : null; } boolean res = userDao.saveUser ( user ) ; if ( res ) { user.setId ( userDao.getNewestId () ) ; return user; } return null; } 
@ java.lang.Override public void call ( java.lang.reflect.Method method ) { java.lang.Class<?>[] parameterTypes = method.getParameterTypes () ; com.androidyuan.rxbus.component.Subscribe subscribeAnnotation = method.getAnnotation ( com.androidyuan.rxbus.component.Subscribe.class ) ; if ( null != subscribeAnnotation ) { java.lang.Class<?> eventType = parameterTypes[0]; java.lang.String key = eventType.getName () ; com.androidyuan.rxbus.component.ThreadMode threadMode = subscribeAnnotation.threadMode () ; putObject ( key, subscriber ) ; } } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super.onSaveInstanceState ( outState ) ; android.util.Log.d ( com.cookbook.fenix.cookbook.CookBOOK.TEST, "life onSave" ) ; mImageDownloader.setRecipeAdapter ( null ) ; outState.putString ( "query", query ) ; if ( 0 != ( mRecipeAdapter.getItemCount () ) ) { mRecipeList = mRecipeAdapter.getData () ; outState.putParcelableArrayList ( BUNDLE_RECIPE_ARRAY, mRecipeList ) ; } } 
private java.util.Date parsePubdateDate ( java.lang.String dateStr, boolean tryAllFormat ) { for ( java.text.DateFormat format : com.rssreader.utils.TimeUtils.PUBDATE_DATE_FORMATS ) { try { java.util.Date result = format.parse ( dateStr ) ; return ( mNow ) < ( result.getTime () ) ? new java.util.Date ( mNow ) : result; } catch ( java.text.ParseException e ) { android.util.Log.e ( com.rssreader.utils.TimeUtils.TAG, "Wrong pubdate format" ) ; } } if ( tryAllFormat ) return parseUpdateDate ( dateStr, false ) ; else return null; } 
public static boolean matchTypes ( com.jetbrains.ther.typing.types.TheRType type, com.jetbrains.ther.typing.types.TheRType replacementType ) { if ( type instanceof com.jetbrains.ther.typing.types.TheRUnionType ) { return ( ( com.jetbrains.ther.typing.types.TheRUnionType ) ( type ) ) .contains ( replacementType ) ; } return ( com.jetbrains.ther.typing.TheRTypeProvider.isSubtype ( type, replacementType ) ) || ( type.equals ( replacementType ) ) ; } 
public void onBreakBlock ( net.minecraft.world.World worldIn ) { if ( worldIn.isRemote ) return; net.minecraftforge.fml.common.FMLLog.info ( "onBreakBlock in TileEntity" ) ; for ( com.balrog.InfernalTech.energy.IEnergyChannel channel : this.channels ) { channel.removeChannelConnection ( this ) ; channel.invalidate () ; } this.channels.clear () ; this.receivers = new cofh.api.energy.IEnergyReceiver[6]; com.balrog.InfernalTech.energy.EnergyNetwork network = this.getNetwork () ; if ( null != network ) network.destroy () ; } 
private void addHistoryToDb () { com.example.run.RunHistory newHistory = new com.example.run.RunHistory ( mStartTime.getTime () , mRunnerData.getTime () , mRunnerData.getDistance () , mRunnerFilename ) ; com.example.run.DatabaseHelper dbHelper = new com.example.run.DatabaseHelper ( this ) ; if ( ( HistoryActivity.NO_ROUTE_FLAG ) == ( mRouteId ) ) { dbHelper.addHistory ( newHistory ) ; } else if ( ( mRouteId ) == ( HistoryActivity.NEW_ROUTE_FLAG ) ) { dbHelper.appendRunToRoute ( newHistory, mRouteId ) ; } else { dbHelper.newRoute ( newHistory, com.example.run.MapsActivity.mRouteNamePrefix ) ; } } 
public java.lang.Thread addPerson ( int sourceFloor, int destinationFloor ) { java.lang.Thread person = new java.lang.Thread ( new com.ru.usty.elevator.Person ( sourceFloor, destinationFloor ) ) ; person.start () ; personCount.set ( sourceFloor, ( 1 + ( personCount.get ( sourceFloor ) ) ) ) ; return null; } 
public com.bftcom.timesheet.export.WorklogExportParams projects ( java.util.Collection<java.lang.String> projectNames ) { if ( null == projectNames ) { this.projects = java.util.Collections.emptyList () ; } else { this.projects = transformProjects ( ( ( java.lang.String[] ) ( projectNames.toArray () ) ) ) ; } return this; } 
@ java.lang.Override public void onAccountCreatorIsPhoneNumberUsed ( org.linphone.core.LinphoneAccountCreator accountCreator, org.linphone.core.LinphoneAccountCreator.Status status ) { if ( ( status.equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAlias ) ) || ( status.equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAccount ) ) ) { accountCreator.recoverPhoneAccount () ; } else { apply.setEnabled ( true ) ; org.linphone.LinphoneUtils.displayErrorAlert ( org.linphone.LinphoneUtils.errorForStatus ( status ) , org.linphone.assistant.AssistantActivity.instance () ) ; } } 
public boolean checkTouch ( float coordX, float coordY ) { return ( ( coordY >= ( offsetY ) ) && ( coordY <= ( ( offsetY ) + ( getHeight () ) ) ) ) && ( ( coordX >= ( offsetX ) ) && ( coordX <= ( ( offsetX ) + ( getWidth () ) ) ) ) ; } 
@ java.lang.Override public void loadMoreFinish ( boolean emptyResult, boolean hasMore ) { mLoadError = false; mListEmpty = emptyResult; mIsLoading = false; mHasMore = hasMore; if ( null != ( mLoadMoreUIHandler ) ) { mLoadMoreUIHandler.onLoadFinish ( this, emptyResult, hasMore ) ; } if ( hasMore ) { mFooterView.setVisibility ( com.being.base.ui.widget.ptr.loadmore.VISIBLE ) ; } else { mFooterView.setVisibility ( com.being.base.ui.widget.ptr.loadmore.GONE ) ; } } 
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int ctrlMod = ( java.awt.event.MouseWheelEvent.CTRL_MASK ) | ( java.awt.event.MouseWheelEvent.CTRL_DOWN_MASK ) ; int modifier = e.getModifiers () ; boolean ctrlDown = 0 != ( modifier & ctrlMod ) ; if ( ctrlDown ) { int sign = e.getWheelRotation () ; if ( sign < 0 ) { this.cam_zoom_increase () ; return; } if ( sign > 0 ) { this.cam_zoom_decrease () ; return; } } } 
@ java.lang.Override protected void onResume () { super.onResume () ; int orderId = getIntent () .getIntExtra ( OrderStatusNotification.ORDER_ID, ( -1 ) ) ; java.lang.System.out.println ( ( orderId + "Intent with order ID " ) ) ; if ( orderId != ( -1 ) ) navTo ( new activity.OrderDetailFragment () .setOrder ( new model.Order ( orderId ) ) ) ; } 
private void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption.loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback<java.util.List<gov.nist.toolkit.results.client.TestInstance>> () { @java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( ( throwable.getMessage () ) + "getTestlogListing: " ) ) ; } @java.lang.Override public void onSuccess ( java.util.List<gov.nist.toolkit.results.client.TestInstance> testInstances ) { loadingMessage.setHTML ( "Loading..." ) ; displayTests ( testsPanel, testInstances, allowRun () ) ; } } ) ; } 
@ java.lang.Override public void onSuccess ( long reqId, java.lang.String header, java.lang.String sequence, java.util.List<biospectra.classify.beans.SearchResultEntry> result, biospectra.classify.beans.ClassificationResult.ClassificationResultType type, java.lang.String taxonRank ) { if ( null != ( responseHandler ) ) { synchronized ( responseHandler ) { responseHandler.onSuccess ( reqId, header, sequence, result, type, taxonRank ) ; } } else { biospectra.classify.ClassifierClient.LOG.error ( "responseHandler is not set" ) ; } } 
@ java.lang.Override public void onBackPressed () { java.lang.String displayedFragment = contactsModel.getProperty ( io.craigmiller160.contacts5.util.ContactsConstants.DISPLAYED_FRAGMENT, java.lang.String.class ) ; if ( ( displayedFragment.equals ( io.craigmiller160.contacts5.util.ContactsConstants.TABS_FRAGMENT_TAG ) ) && ( displayedFragment != null ) ) { backAction () ; } else { finish () ; } } 
private void ensureConnection () throws java.sql.SQLException { boolean bclosed; try { bclosed = ( m_c.isClosed () ) || ( ( m_c ) == null ) ; } catch ( java.sql.SQLException e ) { bclosed = true; } if ( bclosed ) { try { connect () ; } catch ( java.sql.SQLException e ) { if ( ( m_c.isClosed () ) || ( ( m_c ) == null ) ) { connect () ; } } } } 
public it.blogspot.geoframe.SewerPipeDimensioning.Pipe run ( final it.blogspot.geoframe.SewerPipeDimensioning.Pipe pipe ) { setPipe ( pipe ) ; if ( ( minSlope ) <= ( pipeSlope ) ) { pipe.buildPipe ( elevationEndPoint, computeDiameter ( pipeSlope ) , it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient, computeVelocity () ) ; } else { pipe.buildPipe ( computeElevationEndPoint ( minSlope ) , diameter, it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient, computeVelocity () ) ; } return pipe; } 
public boolean insert ( int newData ) { Node newestNode = new Node () ; s = $missing$; if ( null == newestNode ) { java.lang.System.out.println ( "Out of memory error." ) ; return false; } else { newestNode.setData ( newData ) ; newestNode.setNext ( head.getNext () ) ; head.setNext ( newestNode ) ; return true; } } 
protected void fillValues ( java.util.List<java.lang.Object> valueList, java.lang.String sql, java.sql.PreparedStatement stmt ) { int index = 1; for ( java.lang.Object o : valueList ) { try { stmt.setObject ( ( index++ ) , o ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( sql + ( ( ( ( ( ( e.getMessage () ) + " - Index: " ) + index ) + ", Value: " ) + o ) + ", Query: " ) ) , e ) ; } } } 
private void showMoreBooks ( int itemsPerPage ) { int start = lessBooks.size () ; int end = java.lang.Math.min ( ( itemsPerPage + ( lessBooks.size () ) ) , books.size () ) ; for ( int i = start; i < end; i++ ) { lessBooks.add ( books.get ( i ) ) ; } } 
@ java.lang.Override public java.lang.String export ( be.nikiroo.gofetch.data.Story story ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; append ( builder, story, true ) ; builder.append ( "i\r\n" ) ; if ( null != ( story.getComments () ) ) { for ( be.nikiroo.gofetch.data.Comment comment : story.getComments () ) { append ( builder, comment, "" ) ; } } builder.append ( "i\r\n" ) ; return builder.toString () ; } 
private static java.lang.String getPath ( @org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile root, @org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile file ) { java.lang.String path = com.intellij.openapi.util.text.StringUtil.notNullize ( mobi.hsz.idea.gitignore.util.Utils.getRelativePath ( root, file ) ) ; path = com.intellij.openapi.util.text.StringUtil.escapeChar ( path, '[' ) ; path = com.intellij.openapi.util.text.StringUtil.escapeChar ( path, ']' ) ; path = com.intellij.openapi.util.text.StringUtil.trimLeading ( path, VfsUtil.VFS_PATH_SEPARATOR ) ; return path + ( com.intellij.openapi.vfs.VfsUtil.VFS_PATH_SEPARATOR ) ; } 
@ java.lang.Override public boolean isDisabled ( java.lang.String layerName ) { uk.ac.rdg.resc.edal.catalogue.jaxb.VariableConfig xmlVariable = getXmlVariable ( layerName ) ; if ( null != xmlVariable ) { xmlVariable.isDisabled () ; } else { uk.ac.rdg.resc.edal.ncwms.config.NcwmsDynamicService dynamicService = getDynamicServiceFromLayerName ( layerName ) ; if ( dynamicService != null ) { return dynamicService.isDisabled () ; } } return true; } 
private boolean isGetter ( java.lang.reflect.Method method, java.lang.String fieldName ) { return ( method.getName () .endsWith ( org.redisson.liveobject.core.AccessorInterceptor.getFieldNameSuffix ( fieldName ) ) ) && ( ( method.getName () .startsWith ( "get" ) ) || ( method.getName () .startsWith ( "is" ) ) ) ; } 
@ net.canarymod.commandsys.TabComplete ( commands = { "disableplugin", "reloadplugin" } ) public java.util.List<java.lang.String> matchPluginName ( net.canarymod.chat.MessageReceiver caller, java.lang.String[] args ) { return 1 == ( args.length ) ? net.canarymod.commandsys.TabCompleteHelper.matchTo ( args, net.canarymod.Canary.pluginManager () .getPluginNames () .toArray ( new java.lang.String[0] ) ) : null; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent, int flags, int startId ) { android.util.Log.i ( "LocalService", ( intent + ( ( "Received start id " + startId ) + ": " ) ) ) ; mIsPersistent = true; android.content.Intent target = intent.getParcelableExtra ( "notificationTarget" ) ; showNotification ( target ) ; return START_STICKY; } 
private <T> T getObject ( java.lang.String url, java.lang.Class<T> type ) { this.services = client.target ( ( url + ( com.excilys.formation.computerdb.ui.RestCLI.BASE_URL ) ) ) ; javax.ws.rs.client.Invocation.Builder request = this.services.request ( MediaType.APPLICATION_JSON ) ; javax.ws.rs.core.Response response = request.get () ; if ( ( response.getStatus () ) == 200 ) { return response.readEntity ( type ) ; } return null; } 
private void getDeviceLocation () { if ( ( android.content.pm.PackageManager.PERMISSION_GRANTED ) == ( android.support.v4.content.ContextCompat.checkSelfPermission ( getContext () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) ) { mLocationPermissionGranted = true; } else { android.support.v4.app.ActivityCompat.requestPermissions ( getActivity () , new java.lang.String[] { android.Manifest.permission.ACCESS_FINE_LOCATION }, me.kahlout.rangebuddy.DistanceFragment.PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION ) ; } if ( mLocationPermissionGranted ) { mCurrentLocation = LocationServices.FusedLocationApi.getLastLocation ( mGoogleApiClient ) ; LocationServices.FusedLocationApi.requestLocationUpdates ( mGoogleApiClient, mLocationRequest, this ) ; } } 
@ java.lang.Override public int newNet ( java.lang.String shortName, int cloneId, int width ) { java.lang.System.out.println ( ( width + ( ( ( ( "newNet " + shortName ) + " " ) + cloneId ) + " " ) ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList.elementAt ( ( ( fCurrentEvent ) ++ ) ) ; assertEquals ( event.fType, VCDLoaderTest.ExpectTraceBuilder.EXPECT_NET ) ; assertEquals ( event.fName, shortName ) ; assertEquals ( event.fId, cloneId ) ; assertEquals ( event.fWidth, width ) ; return ( fNextNetId ) ++; } 
public void endSection ( int section ) { lcm.spy.ObjectPanel.Section cs = sections.get ( section ) ; cs.y1 = y; if ( 0 == ( collapse_depth ) ) { unindent () ; } if ( sections.get ( section ) .collapsed ) { ( collapse_depth ) --; } spacer () ; endColorBlock () ; spacer () ; } 
private static java.lang.Boolean ReadVerifyStoreDumpPage ( net.basov.nfc.NFCaDump dump, java.lang.String line ) { java.lang.Boolean rc = false; line.trim () ; line.replace ( " ", "" ) ; if ( ( ( line.length () ) == 8 ) && ( line.matches ( "-?[0-9a-fA-F]+" ) ) ) { dump.addPage ( net.basov.util.FileIO.hexStringToByteArray ( line ) ) ; rc = true; } else { dump.appendRemark ( ( ( "E: :" + line ) + ":\n" ) ) ; rc = false; } return rc; } 
public java.util.List<de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState> process ( final de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState oldState, final de.uni_freiburg.informatik.ultimate.model.boogie.ast.Statement statement ) { mReturnState = new java.util.ArrayList<> () ; assert null != oldState; assert statement != null; mOldState = oldState; mLhsVariable = null; processStatement ( statement ) ; assert ( ! ( ( oldState.getVariables () .size () ) != 0 ) ) || ( ( mReturnState.size () ) != 0 ) ; return mReturnState; } 
public void setDockBatteryController ( com.android.systemui.statusbar.policy.DockBatteryController dockBatteryController ) { com.android.systemui.DockBatteryMeterView v = ( ( com.android.systemui.DockBatteryMeterView ) ( findViewById ( R.id.dock_battery ) ) ) ; if ( null != dockBatteryController ) { v.setBatteryStateRegistar ( dockBatteryController ) ; mDockBatteryLevel.setBatteryStateRegistar ( dockBatteryController ) ; } else { if ( v != null ) { removeView ( v ) ; } if ( ( mDockBatteryLevel ) != null ) { removeView ( mDockBatteryLevel ) ; mDockBatteryLevel = null; } } } 
@ java.lang.Override public void afterTextChanged ( android.text.Editable s ) { java.lang.String text = s.toString () .trim () ; savedApis.clear () ; org.buildmlearn.toolkit.model.SavedApi tempApi; for ( int i = 0; ( allsavedApis.size () ) > i; i++ ) { if ( allsavedApis.get ( i ) .getName () .contains ( text ) ) { savedApis.add ( allsavedApis.get ( i ) ) ; } } mAdapter.notifyDataSetChanged () ; setEmptyText () ; } 
public boolean collidesWithFace ( entities.Ball b ) { org.lwjgl.util.vector.Vector3f closest = toolbox.Maths.closestPtPointTriangle ( b.getPosition () , point1, point2, point3 ) ; org.lwjgl.util.vector.Vector3f.sub ( b.getPosition () , closest, dist ) ; java.lang.System.out.println ( ( ( dist.length () ) + ( ( "Distance between ball and " + ( this ) ) + ": " ) ) ) ; if ( ( dist.length () ) <= ( entities.Ball.RADIUS ) ) return true; return false; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( saveBitmap.size () ) > ( ( makeupCount ) + 1 ) ) { ( makeupCount ) ++; temp = saveBitmap.get ( makeupCount ) .copy ( temp.getConfig () , true ) ; imageView.setImageBitmap ( temp ) ; android.util.Log.d ( ( ( fyp.hkust.facet.activity.ColorizeFaceActivity.TAG ) + " redo " ) , ( ( ( saveBitmap.size () ) + " " ) + ( makeupCount ) ) ) ; } } 
public void Proceed () { turnState = org.tilegames.hexicube.cah.client.neoteny.gameState.GameLogic.TurnState.ADDING_TO_PILE; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardsLayer.ClearPile () ; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardGame.SetNotification ( "" ) ; subCards.clear () ; if ( ( PlayerOptions.ID ) != ( czar.id ) ) { org.tilegames.hexicube.cah.client.neoteny.gameLayers.PlayerHand.SetActive ( true ) ; } for ( org.tilegames.hexicube.cah.client.neoteny.gameState.DummyPlayer dum : dummies ) { if ( ( czar.id ) != ( dum.me.id ) ) { dum.RequestCardSubmit () ; } } } 
private static Chat.Builder buildMockChat () { java.util.Random random = new java.util.Random () ; sjchat.messages.Chat.Builder chatBuilder = sjchat.messages.Chat.newBuilder () ; chatBuilder.setId ( java.lang.Math.abs ( random.nextInt ( 100 ) ) ) ; chatBuilder.setTitle ( ( ( chatBuilder.getId () ) + "Test chat " ) ) ; return chatBuilder; } 
@ java.lang.Override public void transactionEnd () { javax.persistence.EntityManager em = br.com.criativasoft.opendevice.middleware.persistence.HibernateProvider.getInstance () ; br.com.criativasoft.opendevice.middleware.persistence.HibernateProvider.setInstance ( null ) ; javax.persistence.EntityTransaction local = em.getTransaction () ; try { if ( local.isActive () ) local.commit () ; } catch ( java.lang.RuntimeException e ) { if ( ( local.isActive () ) && ( local != null ) ) local.rollback () ; throw e; } finally { em.close () ; } } 
@ java.lang.Override public void update ( float delta ) { com.osreboot.ridhvl.painter.HvlCamera.setX ( ( ( ( ( HvlInputSeriesAction.HORIZONTAL.getCurrentOutput () ) * delta ) * 256.0F ) + ( com.osreboot.ridhvl.painter.HvlCamera.getX () ) ) ) ; com.osreboot.ridhvl.painter.HvlCamera.setY ( ( ( com.osreboot.ridhvl.painter.HvlCamera.getY () ) + ( ( ( HvlInputSeriesAction.VERTICAL.getCurrentOutput () ) * delta ) * 256.0F ) ) ) ; if ( ( tilemaps ) != null ) { tilemaps.draw ( delta ) ; } } 
public void run () { while ( ( ! ( gameOver ) ) && ( gameRunning ) ) { run_game () ; try { java.lang.Thread.sleep ( com.se.softwareEngineering.gameEngine.GameEngine.gameSpeed ) ; } catch ( java.lang.Throwable t ) { if ( com.se.softwareEngineering.gameEngine.GameEngine.debug ) { java.lang.System.err.println ( t ) ; } } } finish () ; } 
@ org.junit.Test public void testStart () { java.lang.System.out.println ( "Testing OrionCKANSink.start" ) ; java.lang.String attrPersistence = "row"; java.lang.String enableGrouping = "true"; org.apache.flume.Context context = createContext ( attrPersistence, enableGrouping ) ; sink.configure ( context ) ; sink.setChannel ( new org.apache.flume.channel.MemoryChannel () ) ; sink.start () ; assertTrue ( ( null != ( sink.getPersistenceBackend () ) ) ) ; assertEquals ( LifecycleState.START, sink.getLifecycleState () ) ; } 
public void addLast ( Item item ) { Deque<Item>.Node old = last; last = new Node () ; last.item = item; last.backward = old; last.forward = null; ( size ) ++; if ( 1 == ( size ) ) { first = last; } else { old.forward = last; } } 
public java.lang.String getLabel () { if ( ( ! ( localVarLabelSet ) ) && ( ! ( labelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } else { return algoParent.getCommandDescription () ; } } else { return kernel.printVariableName ( label ) ; } } 
public lib.Number push ( char digit ) { if ( ( digit != '.' ) || ( ! ( this.hasDecimal ) ) ) { this.hasDecimal = ( this.hasDecimal ) || ( digit != '.' ) ; this.state += digit; } return this; } 
private void play () { this.showBoard () ; while ( ( ! ( board.isFull () ) ) && ( ! ( board.hasWinner () ) ) ) { players[current].makeMove ( board ) ; this.showBoard () ; current = ( ( current ) + 1 ) % 2; } this.printResult () ; } 
private boolean hasHeader ( int position ) { if ( 0 == position ) { return true; } int previous = position - 1; return ( ( mAdapter.getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) && ( ( mAdapter.getHeaderId ( position ) ) != ( mAdapter.getHeaderId ( previous ) ) ) ; } 
public stamboom.domain.Gezin getGezin ( int gezinsNr ) { gezinsNr = 3; if ( ( 1 <= ( gezinnen.size () ) ) && ( ( ( gezinnen ) != null ) && ( 1 <= gezinsNr ) ) ) { return gezinnen.get ( ( gezinsNr - 1 ) ) ; } return null; } 
public boolean waterWeakest () throws battlecode2017.GameActionException { battlecode2017.TreeInfo weakest = trees.getWeakestTreeWithinInteract ( team ) ; if ( ( rc.canWater ( weakest.location ) ) && ( ( weakest.health ) <= ( TREE_WATERING_THRESHOLD ) ) ) { rc.water ( weakest.location ) ; return true; } else { return false; } } 
boolean equals ( int itemID, int meta, net.minecraft.nbt.NBTTagCompound nbt ) { return ( ( ( this.nbt ) != null ) && ( this.nbt.equals ( nbt ) ) ) || ( ( ( ( this.itemID ) == itemID ) && ( ( this.meta ) == meta ) ) && ( ( this.nbt ) == nbt ) ) ; } 
public void resolveRoute () { try { closeLoadingBar () ; activity.activityCloseLoadingBar () ; } catch ( java.lang.Exception e ) { android.util.Log.e ( Constants.TAG, "Error loading bar instance has not been created. in ActivityHelper resolveroute" ) ; } java.lang.String pendingDelivery = orderStatusDataBase.getOrderStatus () ; android.util.Log.d ( Constants.TAG, "Checking value of pending delivery = " ) ; if ( "" == pendingDelivery ) { activity.replaceFragment ( R.layout.fragment_main, null ) ; } else { android.util.Log.d ( Constants.TAG, "Delivery status pending.." ) ; activity.replaceFragment ( R.layout.fragment_order_status, null ) ; } } 
public void updateAirCondition () { java.util.List<java.lang.String> devices = deviceStatusDao.selectAllActiveDevices () ; java.util.List<model.CleanerStatus> cleanerStatusList = new java.util.ArrayList<model.CleanerStatus> () ; for ( java.lang.String deviceID : devices ) { java.lang.String chipID = deviceIDToChipID ( deviceID ) ; model.CleanerStatus cleanerStatus = getCleanerStatus ( chipID ) ; if ( ( ( cleanerStatus.getDeviceID () ) != null ) && ( cleanerStatus != null ) ) { cleanerStatusList.add ( cleanerStatus ) ; } } boolean update = deviceStatusDao.insertDeviceStatus ( cleanerStatusList ) ; } 
private static java.lang.Class<?> forName ( final java.lang.String directory, final java.lang.String name ) { try { final java.lang.Class<?> cls = org.obicere.cc.util.Reflection.LOADER.loadClass ( name ) ; if ( null != cls ) { return cls; } } catch ( java.lang.Error | java.lang.Exception ignored ) { } final java.lang.Class<?> defined = org.obicere.cc.util.Reflection.DEFINER.attemptDefine ( directory, name ) ; if ( defined != null ) { return defined; } return null; } 
private boolean isOwnProfile ( javax.faces.context.FacesContext fctx, java.lang.String role ) { boolean ownProfile = true; if ( ( ! ( role.equals ( "SYSTEM_ADMINISTRATOR" ) ) ) && ( fctx.getViewRoot () .getViewId () .endsWith ( "profile.xhtml" ) ) ) { int userID = java.lang.Integer.parseInt ( javax.faces.context.FacesContext.getCurrentInstance () .getExternalContext () .getRequestParameterMap () .get ( "userID" ) ) ; if ( ( sessionUser.getUserID () ) != userID ) { ownProfile = false; } } return ownProfile; } 
private void initView () { mobileNumber = getIntent () .getStringExtra ( "NUMBER" ) ; android.widget.TextView mobileNum = getView ( R.id.editText_mobileNumber ) ; profilePic = getView ( R.id.profile_thumb ) ; mobileNum.setText ( ( ( mobileNumber ) + ( getResources () .getString ( R.string.string_plus ) ) ) ) ; emailEditText = getView ( R.id.editText_email ) ; nameEditText = getView ( R.id.editText_name ) ; profilePic.setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { showProfilePicSelectionDialog () ; } } ) ; } 
private void updateReady ( java.util.List<com.kilobolt.framework.Input.TouchEvent> touchEvents ) { if ( ! ( otherSizeIsSet ) ) { bluetoothModule.sendMessage ( java.lang.String.format ( "%s %d %d", com.wanlin.androidgame.pikachuvolleyball.GameScreen.SCREEN_SIZE_KEY, com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenWidth, com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenHeight ) ) ; setOtherScreenSize ( ( ( com.wanlin.androidgame.pikachuvolleyball.PikachuVolleyball ) ( game ) ) .getOhterScreenWidth () , ( ( com.wanlin.androidgame.pikachuvolleyball.PikachuVolleyball ) ( game ) ) .getOtherScreenHeight () ) ; otherSizeIsSet = true; } if ( 0 < ( touchEvents.size () ) ) { stargGame () ; bluetoothModule.sendMessage ( java.lang.String.valueOf ( com.wanlin.androidgame.pikachuvolleyball.GameScreen.START_THAT_FUKING_GAMEEEE ) ) ; } } 
@ java.lang.Override public fi.nls.oskari.domain.map.view.View getViewWithConf ( java.lang.String viewName ) { if ( ( viewName.isEmpty () ) && ( viewName != null ) ) { for ( fi.nls.oskari.domain.map.view.View item : list ) { if ( viewName.equals ( item.getName () ) ) { return item; } } } return null; } 
public com.buyhatke.core.Entry get ( java.lang.String key ) { com.buyhatke.core.Entry entry = getInMemoryEntry ( key ) ; if ( null == entry ) { entry = checkInFileSystem ( key ) ; if ( entry != null ) { if ( ! ( com.buyhatke.core.PersistenceManager.isExpired ( entry ) ) ) { cacheListMap.put ( entry.getKey () , entry ) ; } else { return null; } } } return entry; } 
private java.lang.String getPlaylist () { int entryCount = java.lang.Integer.parseInt ( getConfiguration () .getProperty ( "playlist.entry.count" ) ) ; java.lang.StringBuilder playlist = new java.lang.StringBuilder () ; for ( int i = 1; entryCount > i; i++ ) { playlist.append ( ( ( i + "/ " ) + ( getConfiguration () .getProperty ( ( "playlist.entry.name." + i ) ) ) ) ) ; } return playlist.toString () ; } 
public boolean isViewUnder ( android.view.View view, int x, int y ) { if ( null == view ) { return false; } return ( ( ( x >= ( view.getX () ) ) && ( x < ( ( view.getX () ) + ( view.getWidth () ) ) ) ) && ( y >= ( view.getY () ) ) ) && ( y < ( ( view.getBottom () ) + ( view.getHeight () ) ) ) ; } 
private com.questdb.ql.parser.RecordSource compile ( com.questdb.ql.parser.QueryModel model, com.questdb.factory.JournalReaderFactory factory ) throws com.questdb.ex.JournalException, com.questdb.ex.ParserException { return limit ( order ( selectColumns ( ( 1 < ( model.getJoinModels () .size () ) ? optimise ( model, factory ) .compileJoins ( model, factory ) : optimise ( model, factory ) .compileSingleOrSubQuery ( model, factory ) ) , model ) , model ) , model ) ; } 
public DataStructure.LinkedList2<T>.Node search ( T value ) { DataStructure.LinkedList2<T>.Node x = nil.next; while ( ( ( x.key ) != value ) && ( x != ( nil ) ) ) { x = x.next; } return x; } 
private void changeValue ( boolean add ) { float oldValue = value; if ( add ) { value = java.lang.Math.min ( maxValue, ( ( step ) + ( value ) ) ) ; } else { value = java.lang.Math.max ( minValue, ( ( value ) - ( step ) ) ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener.onValueChanged ( this, value, oldValue, minValue, maxValue, false ) ; } } 
public be.willima.jrpgdatabase.model.JRPGTile getTile ( int x, int y ) throws java.lang.IndexOutOfBoundsException { be.willima.jrpgdatabase.model.JRPGTile tile = null; if ( ( y >= ( this.width ) ) || ( ( ( x < 0 ) || ( x >= ( this.width ) ) ) || ( y < 0 ) ) ) { throw new java.lang.IndexOutOfBoundsException ( "Tile not within map region!" ) ; } else { tile = this.tiles[x][y]; } return tile; } 
public boolean accept ( java.io.File pathname ) { if ( pathname.getName () .contains ( EInternalTemplate.HEADER_ADDITIONAL.toString () ) ) if ( pathname.getName () .contains ( ( ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) + ( language.getExtension () ) ) ) ) return true; return false; } 
@ java.lang.Override public org.lemurproject.galago.core.parse.Document nextDocument () throws java.io.IOException { org.lemurproject.galago.core.parse.Document doc = super.nextDocument () ; if ( ! ( null == doc ) ) { org.lemurproject.galago.core.parse.Document nerDoc = new org.lemurproject.galago.core.parse.Document () ; nerDoc.text = doNER ( doc.text ) ; nerDoc.metadata = doc.metadata; nerDoc.name = doc.name; ciir.proteus.parse.NamedEntityRecorder ner = new ciir.proteus.parse.NamedEntityRecorder ( outputPath ) ; ner.record ( doc ) ; } return doc; } 
@ java.lang.Override public void onMeasure ( int widthSpec, int heightSpec ) { super.onMeasure ( widthSpec, heightSpec ) ; if ( pullEnabled ) { pullView.measure ( widthSpec, 0 ) ; setMeasuredDimension ( getMeasuredWidth () , ( ( pullView.getMeasuredHeight () ) + ( getMeasuredHeight () ) ) ) ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference, java.lang.Object data ) { final int pinStringLength = ( ( java.lang.String ) ( data ) ) .length () ; if ( ( info.dvkr.screenstream.SettingsActivity.PIN_DIGITS_COUNT ) != pinStringLength ) { android.widget.Toast.makeText ( getActivity () .getApplicationContext () , getResources () .getString ( R.string.pin_digits_count ) , Toast.LENGTH_LONG ) .show () ; return false; } return true; } 
public static void comChoiceS () { java.util.Random rand = new java.util.Random () ; int comPick = 1 + ( rand.nextInt ( 3 ) ) ; if ( comPick == 1 ) { java.lang.System.out.println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main.resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out.println ( "I chose paper and you chose scissors...I guess you win : ( " ) ; com.bleh.Main.resultsW () ; } else if ( comPick == 3 ) { java.lang.System.out.println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main.resultsT () ; } com.bleh.Main.play () ; } 
@ java.lang.Override public io.netty.util.concurrent.Future<java.lang.Boolean> removeAllAsync ( java.util.Collection<?> c ) { if ( c.isEmpty () ) { return org.redisson.RedissonSet.newSucceededFuture ( false ) ; } java.util.List<java.lang.Object> args = new java.util.ArrayList<java.lang.Object> ( ( 1 + ( c.size () ) ) ) ; args.add ( getName () ) ; args.addAll ( c ) ; return commandExecutor.writeAsync ( getName () , codec, RedisCommands.SREM_SINGLE, c.toArray () ) ; } 
private static void addGenericItem ( net.minecraft.item.Item item ) { com.xplosivesnet.explochem.xplosivesnet_items.items[com.xplosivesnet.explochem.xplosivesnet_items.counter] = item; if ( 0 != ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) ) item.setContainerItem ( com.xplosivesnet.explochem.xplosivesnet_items.items[0] ) ; java.lang.System.out.println ( ( ( ( item.getUnlocalizedName () ) + " : " ) + ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) ) ) ; ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) ++; cpw.mods.fml.common.registry.GameRegistry.registerItem ( item, item.getUnlocalizedName () ) ; } 
@ java.lang.Override public void setBrightness ( final int pRenderLayerIndex, final double pBrightness ) { mBrightness[getCurrentRenderLayerIndex () ] = ( ( float ) ( clearvolume.renderer.ClearVolumeRendererBase.clamp ( pBrightness, 0, ( 1 == ( getBytesPerVoxel () ) ? 16 : 256 ) ) ) ) ; notifyUpdateOfVolumeRenderingParameters () ; } 
private java.util.ArrayList<org.Point> finalLocs () { java.util.ArrayList<org.Point> ret = new java.util.ArrayList<> () ; for ( javafx.scene.control.ChoiceBox cb : locations ) { if ( null != ( cb.getValue () ) ) { addtoFinalLocs ( ret, cb ) ; } } return ret; } 
protected void writeResults () throws java.io.IOException { org.apache.commons.io.FileUtils.write ( new java.io.File ( outputFolder, de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.UNKNOWN_WORDS_FINE ) , java.lang.String.format ( "%.1f", ( 100 * ( invocabAccuracy ) ) ) ) ; org.apache.commons.io.FileUtils.write ( new java.io.File ( outputFolder, de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.KNOWN_WORDS_FINE ) , java.lang.String.format ( "%.1f", ( ( outvocabAccuracy ) * 100 ) ) ) ; } 
private static void calculateDiscount () { java.util.Collections.sort ( Constants.quotes ) ; double higherValue = Constants.quotes.get ( 0 ) .getThreeYearTotal () ; if ( 0 < higherValue ) { for ( com.amazon.proposalcalculator.bean.Quote q : com.amazon.proposalcalculator.utils.Constants.quotes ) { q.setDiscount ( ( 1 - ( ( q.getThreeYearTotal () ) / higherValue ) ) ) ; java.lang.System.out.println ( ( "Ordenado: " + ( q.getThreeYearTotal () ) ) ) ; } } } 
@ java.lang.Override public void doRefreshVisual ( org.eclipse.gef.fx.nodes.GeometryNode<org.eclipse.gef.geometry.planar.IGeometry> visual ) { if ( 1 != ( getAnchoragesUnmodifiable () .size () ) ) { return; } org.eclipse.gef.geometry.planar.IGeometry feedbackGeometry = getFeedbackGeometry () ; if ( feedbackGeometry == null ) { return; } visual.setGeometry ( feedbackGeometry ) ; if ( feedbackGeometry instanceof org.eclipse.gef.geometry.planar.ICurve ) { visual.setStrokeType ( javafx.scene.shape.StrokeType.CENTERED ) ; } else { visual.setStrokeType ( javafx.scene.shape.StrokeType.OUTSIDE ) ; } } 
@ java.lang.Override public void render () { Gdx.gl.glClearColor ( 1, 1, 1, 1 ) ; Gdx.gl.glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage.act () ; stage.draw () ; if ( ( com.badlogic.gdx.utils.TimeUtils.millis () ) > ( showProgressUntilTime ) ) { if ( ( progressDialog ) != null ) { progressDialog.dismiss () ; } } } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { if ( ( resultCode == ( android.app.Activity.RESULT_CANCELED ) ) && ( requestCode == ( com.ww23.l_band.ListenActivity.REQUEST_ENABLE_BT ) ) ) { toast ( getString ( R.string.deny_open_bluetooth ) .toString () ) ; finish () ; return; } super.onActivityResult ( requestCode, resultCode, data ) ; } 
public void saveConfig () { if ( ( ( configFile ) == null ) || ( ( fileConfiguration ) == null ) ) { return; } else { try { getConfig () .save ( configFile ) ; } catch ( java.io.IOException ex ) { plugin.getLogger () .log ( java.util.logging.Level.SEVERE, ( "Could not save config to " + ( configFile ) ) ) ; } } } 
public void interact ( Entity ent ) { if ( ent instanceof Player ) { if ( 0 == ( GameStats.getPowerupState () ) ) { ent.setHeight ( ( ( ent.getHeight () ) * 2 ) ) ; ent.setY ( ( ( getY () ) - ( ( ent.getHeight () ) / 2 ) ) ) ; GameStats.setPowerupState ( 1 ) ; } GameStats.incrementScore ( 1000 ) ; remove ( getGame () .getControlVar () ) ; } } 
public void add ( int data ) { ( this.size ) ++; if ( null == ( this.front ) ) { this.front = new QueueNode ( data ) ; } else { QueueNode current = this.front; while ( current != null ) { current = current.next; } current.next = new QueueNode ( data ) ; } } 
public java.lang.Object pop () { final int n = stack.size () ; if ( 0 == n ) { throw new java.lang.RuntimeException ( "The stack is empty" ) ; } for ( int i = ( marks.size () ) - 1; i >= 0; --i ) { if ( ( marks.get ( i ) ) == n ) { marks.set ( i, ( n - 1 ) ) ; } } return stack.remove ( ( n - 1 ) ) ; } 
private static java.lang.String filterChars ( java.lang.String s ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( char c : s.toCharArray () ) { if ( 0 <= ( "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf ( c ) ) ) { sb.append ( c ) ; } } return sb.toString () ; } 
public void createDirIfNotExists ( java.lang.String dirPath ) throws org.seagrid.desktop.connectors.storage.SftpException { java.lang.String pwd = channelSftp.pwd () ; java.lang.String[] folders = dirPath.split ( "/" ) ; for ( java.lang.String folder : folders ) { if ( 0 < ( folder.length () ) ) { try { channelSftp.cd ( folder ) ; } catch ( org.seagrid.desktop.connectors.storage.SftpException e ) { channelSftp.mkdir ( folder ) ; channelSftp.cd ( folder ) ; } } } channelSftp.cd ( pwd ) ; } 
@ java.lang.Override public com.containersol.minimesos.state.State getState () { try { return com.containersol.minimesos.state.State.fromJSON ( getStateInfoJSON () .toString () ) ; } catch ( com.fasterxml.jackson.core.JsonParseException | com.fasterxml.jackson.databind.JsonMappingException | com.mashape.unirest.http.exceptions.UnirestException e ) { throw new com.containersol.minimesos.MinimesosException ( ( ( getName () ) + "Could not retrieve state from Mesos Agent: " ) , e.getCause () ) ; } } 
@ org.junit.Test public void detectListenerWithStartProximityDetectionWithCustomThreshold () { addSensor ( android.hardware.Sensor.TYPE_PROXIMITY ) ; com.github.nisrulz.sensey.ProximityDetector.ProximityListener fakeListener = org.mockito.Mockito.mock ( com.github.nisrulz.sensey.ProximityDetector.ProximityListener.class ) ; sensey.startProximityDetection ( 10.0F, fakeListener ) ; com.github.nisrulz.sensey.ProximityDetector detector = getDetector ( com.github.nisrulz.sensey.ProximityDetector.class ) ; if ( null != detector ) { org.junit.Assert.assertTrue ( "Sensor Manager must contain sensor event listener for proximity", shadowSensorManager.hasListener ( detector ) ) ; } else { org.junit.Assert.fail ( "There should be proximity detector in sensey. If not, please, check last version of class and update reflection accessing to it field" ) ; } } 
@ java.lang.Override public boolean onLongClick ( android.view.View v ) { if ( ! ( v.isInTouchMode () ) ) return false; if ( ( INVALID_PAGE ) != ( mNextPage ) ) return false; if ( ( ! ( mLauncher.isAllAppsVisible () ) ) || ( mLauncher.getWorkspace () .isSwitchingState () ) ) return false; return ( ! ( mLauncher.isDraggingEnabled () ) ) && ( beginDragging ( v ) ) ; } 
public java.lang.String arrayToString ( java.lang.Object[] array ) { java.lang.StringBuffer buffer = new java.lang.StringBuffer () ; for ( int i = 0; ( array.length ) > i; i++ ) { if ( i > 0 ) { buffer.append ( dk.lessismore.nojpa.reflection.attributeconverters.AttributeConverter.arraySeparator ) ; } buffer.append ( objectToString ( array[i] ) ) ; } return buffer.toString () ; } 
public void remove () { if ( null == ( parent ) ) { assert ( root ) == ( this ) ; root = null; return; } parent.children.remove ( this ) ; if ( parent.children.isEmpty () ) { parent.remove () ; } else { parent.computeMBR () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "sltMTechDetailListAjax" }, method = org.springframework.web.bind.annotation.RequestMethod.POST ) @org.springframework.web.bind.annotation.ResponseBody public com.abilists.bean.para.profile.MTechDetailListAjax sltMTechDetailListAjax ( @org.springframework.web.bind.annotation.RequestBody com.abilists.bean.para.admin.SltMTechDetailPara sltMTechDetailPara, javax.servlet.http.HttpSession session ) throws java.lang.Exception { logger.info ( ( ( sltMTechDetailPara.getMtNo () ) + "sltMTechDetailListAjax. MtNo >> " ) ) ; this.handleSessionInfo ( session, sltMTechDetailPara ) ; sltMTechDetailPara.setMlCode ( sltMTechDetailPara.getLang () ) ; java.util.List<com.abilists.bean.model.MTechDetailModel> mTechDetailList = adminMasterService.sltMTechDetailList ( sltMTechDetailPara ) ; logger.info ( ( "mTechDetailList size = " + ( mTechDetailList.size () ) ) ) ; com.abilists.bean.para.profile.MTechDetailListAjax mTechDetailListAjax = new com.abilists.bean.para.profile.MTechDetailListAjax () ; mTechDetailListAjax.setmTechDetailList ( mTechDetailList ) ; return mTechDetailListAjax; } 
void printPanden () { for ( Pand element : lijst ) { java.lang.System.out.println ( ( ( element.vve ) + ( ( ( ( ( ( ( ( ( ( ( ( element.date ) + " " ) + ( element.objectNummer ) ) + " " ) + ( element.naam ) ) + " " ) + ( element.adres ) ) + " " ) + ( element.kamers ) ) + " " ) + ( element.prijs ) ) + " " ) ) ) ; } } 
@ javax.annotation.Nonnull private org.apache.directory.ldap.client.api.LdapConnection connect () throws org.apache.jackrabbit.oak.spi.security.authentication.external.ExternalIdentityException { try { if ( null == ( adminPool ) ) { return adminConnectionFactory.makeObject () ; } else { return adminPool.getConnection () ; } } catch ( java.lang.Throwable e ) { org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider.log.error ( "Error while connecting to the ldap server.", e ) ; throw new org.apache.jackrabbit.oak.spi.security.authentication.external.ExternalIdentityException ( "Error while connecting and binding to the ldap server", e ) ; } } 
private static java.lang.String getVocab () { java.lang.String[] dictionary = GuiMain.index.getDictionary () ; int count = GuiMain.index.getTermCount () ; java.lang.String vocab = "Index Dictionary: \n"; for ( java.lang.String s : dictionary ) { vocab += "\n" + s; } vocab += "Index Term Count: " + count; return vocab; } 
private void handleLevelUp () { if ( ( nettoXpNeededForLevel ( ( ( plevel ) + 1 ) ) ) <= ( xpSinceLastLevelUp () ) ) { ( this.maxHealth ) ++; this.regenDelay = 2; ( plevel ) ++; psprint += 0.1; maxTimeSprint += 20; MojamComponent.soundPlayer.playSound ( "/sound/levelUp.wav", ( ( float ) ( pos.x ) ) , ( ( float ) ( pos.y ) ) , true ) ; } } 
public void editPatientProf ( android.view.View v ) { if ( ! ( mEditTextCustomerFName.isEnabled () ) ) { setFieldsEnability ( true ) ; } else { setFieldsEnability ( false ) ; } if ( ( android.view.View.VISIBLE ) != ( mAddrLayout.getVisibility () ) ) { com.extenprise.mapp.medico.util.Utility.collapseExpand ( mAddrLayout ) ; com.extenprise.mapp.medico.util.Utility.collapseExpand ( mContLay ) ; } } 
public void soundDb ( double ampl ) { values.add ( ( ( java.lang.Math.log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) * 20 ) ) ; android.util.Log.d ( "Sound", java.lang.String.valueOf ( ( ( java.lang.Math.log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) * 20 ) ) ) ; } 
private void setupWorldEdit () { org.bukkit.plugin.Plugin test = this.getServer () .getPluginManager () .getPlugin ( "WorldEdit" ) ; if ( null == ( svenbrnn.orerespawn.oreRespawn.worldEdit ) ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out.println ( "[OreRespawn] WorldEdit detected!" ) ; } } } 
public boolean remove ( net.osmand.osm.edit.Relation.RelationMember key ) { if ( null != ( members ) ) { java.util.Iterator<net.osmand.osm.edit.Relation.RelationMember> it = members.iterator () ; while ( it.hasNext () ) { net.osmand.osm.edit.Relation.RelationMember rm = it.next () ; if ( rm == key ) { return true; } } } return false; } 
public void vote () throws java.lang.ClassNotFoundException, java.sql.SQLException { java.lang.System.out.println ( "\nPlease select the note you want to vote for ( 0-7 ) :" ) ; int vote = scan.nextInt () ; if ( ( vote > 0 ) && ( vote <= 7 ) ) { java.lang.System.out.println ( "Attempting vote registration." ) ; registerVote ( vote ) ; } else { java.lang.System.out.println ( "Select a note between 0 and 7." ) ; vote () ; } } 
@ java.lang.Override public void onSuccess ( long reqId, java.lang.String header, java.lang.String sequence, java.util.List<biospectra.classify.beans.SearchResultEntry> result, biospectra.classify.beans.ClassificationResult.ClassificationResultType type, java.lang.String taxonRank ) { biospectra.classify.beans.ClassificationResult bresult = new biospectra.classify.beans.ClassificationResult ( header, sequence, result, type, taxonRank ) ; java.lang.String json; try { json = serializer.toJson ( bresult ) ; summary.report ( bresult ) ; bw.write ( ( "\n" + json ) ) ; } catch ( java.io.IOException ex ) { biospectra.classify.ClassifierClient.LOG.error ( "Cannot write to a file", ex ) ; } } 
private static void connectToPeer ( java.lang.String peerName, int peerPort ) { try { if ( Peer.peerStubs.contains ( peerName ) ) { return; } java.rmi.registry.Registry theirReg = java.rmi.registry.LocateRegistry.getRegistry ( "localhost", peerPort ) ; Peer.boundPeerStub = ( ( PeerInterface ) ( theirReg.lookup ( peerName ) ) ) ; Peer.peerStubs.put ( peerName, Peer.boundPeerStub ) ; java.lang.System.out.println ( ( peerName + "Found peer " ) ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final int index = tblProducts.getSelectedRow () ; final io.github.davidg95.JTill.jtillserver.WasteItem it = wasteItems.get ( index ) ; final io.github.davidg95.JTill.jtillserver.Product p = it.getProduct () ; if ( ( -1 ) == index ) { return; } if ( ( javax.swing.JOptionPane.showInternalConfirmDialog ( GUI.gui.internal, ( "Are you sure you want to remove this item?\n" + p ) , "Stock Item", javax.swing.JOptionPane.YES_NO_OPTION ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { wasteItems.remove ( index ) ; updateTable () ; } } 
@ javax.annotation.PreDestroy public void dispose () { for ( int i = ( this.objects.size () ) - 1; 0 <= i; i++ ) { try { this.dispose.accept ( this.objects.get ( i ) ) ; } catch ( java.lang.Throwable t ) { } } } 
private static boolean licenseFileExists () { java.io.File licenseFile = new java.io.File ( org.eclipse.titan.regressiontests.MainTestSuite.LICENSE_FILE ) ; if ( licenseFile.exists () ) { return true; } final java.lang.String licenseFromEnv = java.lang.System.getenv ( "TTCN3_LICENSE_FILE" ) ; if ( null != licenseFromEnv ) { licenseFile = new java.io.File ( licenseFromEnv ) ; if ( licenseFile.exists () ) { return true; } } return false; } 
@ java.lang.Override public boolean allowTarget ( final org.wirez.core.graph.Node target, final org.wirez.core.graph.Edge<org.wirez.core.graph.content.view.View<?>, org.wirez.core.graph.Node> connector, final int magnet ) { if ( ( canvasHandler ) != null ) { org.wirez.core.command.CommandResult<org.wirez.core.client.command.CanvasViolation> violations = canvasCommandManager.allow ( canvasHandler, canvasCommandFactory.SET_TARGET_NODE ( target, connector, magnet ) ) ; return isAccept ( violations ) ; } return true; } 
public void updateSystemCount () throws java.lang.NumberFormatException { numSystems = java.lang.Math.abs ( java.lang.Integer.parseInt ( _FormattedTF_NumSystems.getText () ) ) ; if ( 60 < ( numSystems ) ) { numSystems = 60; _FormattedTF_NumSystems.setValue ( new java.lang.Integer ( "60" ) ) ; } else if ( ( numSystems ) == 0 ) { numSystems = 1; _FormattedTF_NumSystems.setValue ( new java.lang.Integer ( "1" ) ) ; } cs.getRackIndex ( _ComboBox_Racks.getSelectedIndex () ) .getSuctionGroupIndex ( _ComboBox_SuctionGroups.getSelectedIndex () ) .setNumSystems ( numSystems ) ; } 
public boolean isPointInArea ( java.awt.Point pos, int areaLeftX, int areaRightX, int areaUpY, int areaDownY ) { boolean in = false; in = ( pos.x ) > areaLeftX; in = ( pos.x ) < areaRightX; in = areaUpY < ( pos.y ) ; in = ( pos.y ) < areaDownY; return in; } 
private javafx.collections.ObservableList<java.lang.Integer> populateTrackNumberComboBox () { javafx.collections.ObservableList<java.lang.Integer> options; if ( null != ( ui.Slave.getSequence () ) ) { options = javafx.collections.FXCollections.observableArrayList () ; for ( int i = 0; i < ( ui.Slave.getSequence () .getTracks () .length ) ; i++ ) { options.add ( i ) ; } } else { options = javafx.collections.FXCollections.observableArrayList ( 0 ) ; } return options; } 
private void moveBy ( double move ) { nextx = ( ( dir[0] ) * move ) + ( x ) ; nexty = ( y ) + ( ( dir[1] ) * move ) ; intx = ( ( int ) ( nextx ) ) ; inty = ( ( int ) ( nexty ) ) ; } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { try { io.punchtime.punchtime.data.Pulse p = dataSnapshot.getChildren () .iterator () .next () .getValue ( io.punchtime.punchtime.data.Pulse.class ) ; updateCheckinUI ( p ) ; if ( 0 == ( p.getCheckout () ) ) setCheckedIn ( true ) ; } catch ( java.lang.Exception e ) { updateCheckinUI ( null ) ; } } 
public PokemonSpecies findCaughtSpeciesData ( java.lang.String speciesName ) throws PokedexException { for ( int i = 0; ( pokedex.size () ) > i; i++ ) { PokemonSpecies poke = pokedex.get ( i ) ; if ( poke.getSpeciesName () .equals ( speciesName ) ) { if ( ! ( poke.isEmpty () ) ) { return poke; } } else { throw new PokedexException ( Config.UNSEEN_POKEMON ) ; } } throw new PokedexException ( Config.UNCAUGHT_POKEMON ) ; } 
@ java.lang.Override public int compare ( rdoshi.codepath.todoapp.TaskItem t1, rdoshi.codepath.todoapp.TaskItem t2 ) { if ( ( ( t2.getDueDate () ) != null ) && ( ( t1.getDueDate () ) != null ) ) { return t1.getDueDate () .compareTo ( t2.getDueDate () ) ; } else if ( ( t1.getDueDate () ) == null ) { return 1; } else { return -1; } } 
public void addFirstNode ( int data ) { if ( 0 == ( size ) ) { head = new a3.LinkedList.Node ( data ) ; head.next = tail; } else { a3.LinkedList.Node newNode = new a3.LinkedList.Node ( data ) ; newNode.next = head; head = newNode; } ++ ( size ) ; } 
private static boolean dummyAccountAlreadyAdded ( android.accounts.Account[] accountsByType ) { for ( int i = 0; ( accountsByType.length ) > i; i++ ) { if ( ( accountsByType[i].name ) == ( com.philosophicalhacker.philhackernews.PhilHackerNewsApplication.ACCOUNT_NAME ) ) { return true; } } return false; } 
public java.lang.String getNodeName ( java.lang.String id ) { for ( int i = 0; ( nodeList.size () ) > i; i++ ) { if ( ( nodeList.get ( i ) .getID () ) == id ) { return nodeList.get ( i ) .getName () ; } } return null; } 
public void resize () { java.lang.Object[] temp = new java.lang.Object[2 * ( storage.length ) ]; java.lang.System.arraycopy ( storage, head, temp, 0, ( ( storage.length ) - ( head ) ) ) ; java.lang.System.arraycopy ( storage, 0, temp, ( ( storage.length ) - ( head ) ) , tail ) ; head = ( temp.length ) - 1; tail = storage.length; } 
public int adjustComputerBuilders ( int amount ) { int difference = amount; if ( ( amount < 0 ) && ( ( computerBuilders ) < ( java.lang.Math.abs ( difference ) ) ) ) { difference = - ( computerBuilders ) ; computerBuilders = 0; } else { computerBuilders += amount; } if ( difference != 0 ) gi.setComputerBuildersLabelChangeText ( difference ) ; return difference; } 
public boolean isCallTime ( int timeIndex ) { return ( ( java.lang.Math.ceil ( ( ( ( double ) ( timeIndex + 1 ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) .getInt () ) ) ) ) - 1 ) == ( ( ( ( double ) ( timeIndex + 1 ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) .getInt () ) ) - 1 ) ; } 
public static games.strategy.triplea.ai.proAI.data.ProBattleResult calculateBattleResults ( final games.strategy.engine.data.PlayerID player, final games.strategy.engine.data.Territory t, final java.util.List<games.strategy.engine.data.Unit> attackingUnits, final java.util.List<games.strategy.engine.data.Unit> defendingUnits, final java.util.Set<games.strategy.engine.data.Unit> bombardingUnits, final boolean isAttacker ) { final games.strategy.triplea.ai.proAI.data.ProBattleResult result = games.strategy.triplea.ai.proAI.util.ProBattleUtils.checkIfNoAttackersOrDefenders ( t, attackingUnits, defendingUnits ) ; if ( null != result ) { return result; } return games.strategy.triplea.ai.proAI.util.ProBattleUtils.callBattleCalculator ( player, t, attackingUnits, defendingUnits, bombardingUnits, isAttacker ) ; } 
@ java.lang.Override public void done ( com.parse.ParseObject parseObject, com.parse.ParseException e ) { if ( null == parseObject ) { java.lang.System.out.println ( "null score" ) ; com.parse.ParseObject userscore = new com.parse.ParseObject ( "Scores" ) ; userscore.put ( "score", com.cards.flash.testez.TallyScore.getScore () ) ; userscore.put ( "user", com.parse.ParseUser.getCurrentUser () ) ; saveScoreObject ( userscore ) ; com.cards.flash.testez.TallyScore.resetScore () ; } else { } } 
@ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{pswd}" }, method = RequestMethod.GET, produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @com.chronicle.controller.PathVariable java.lang.Long id, java.lang.String password ) { logger.info ( ( id + "login with id : {}" ) ) ; com.chronicle.controller.User user = userService.findById ( id ) ; if ( ( user.getPassword () ) == password ) { return user.getRole () ; } else { return "User Doesn't exist"; } } 
public void manualCtl () { double y = m_liftStick.getY ( GenericHID.Hand.kLeft ) ; m_robot.logger.debug ( ( y + "manualCtl:" ) ) ; if ( ( isAnyLimitSwitchClosed () ) || ( ( java.lang.Math.abs ( y ) ) < ( k_minJoystickValue ) ) ) { stopMotor () ; } else if ( ( java.lang.Math.abs ( y ) ) > ( k_minJoystickValue ) ) { startMotor () ; m_mainMotor.set ( y ) ; } } 
@ java.lang.Override public void onConfigurationChanged ( android.content.res.Configuration newConfig ) { super.onConfigurationChanged ( newConfig ) ; if ( ( ! ( com.brainicism.projectrito.MainActivity.summonerName.equals ( "" ) ) ) || ( notFirstRun ) ) { com.brainicism.projectrito.MainActivity.checkValidSummoner check = new com.brainicism.projectrito.MainActivity.checkValidSummoner () ; check.execute () ; } android.util.Log.i ( com.brainicism.projectrito.MainActivity.TAG, "CONFIG CHANGED" ) ; } 
public void setItemSelected ( int pos, boolean selected, android.view.View view ) { if ( ( pos < ( mAdapter.getItemCount () ) ) && ( pos > 0 ) ) { if ( selected ) { mSelectedItems.put ( pos, selected ) ; view.setSelected ( true ) ; } else { mSelectedItems.delete ( pos ) ; view.setSelected ( false ) ; } } } 
private void setUpMapIfNeeded () { if ( null != ( com.mycompany.behear.MainActivity.mMap ) ) { return; } com.mycompany.behear.MainActivity.mMap = ( ( com.google.android.gms.maps.SupportMapFragment ) ( getSupportFragmentManager () .findFragmentById ( R.id.map ) ) ) .getMap () ; if ( ( com.mycompany.behear.MainActivity.mMap ) == null ) { return; } } 
public static void logShortError ( java.lang.Exception e, int lines ) { java.lang.String s = e.toString () ; int i = 0; for ( java.lang.StackTraceElement er : e.getStackTrace () ) { if ( lines == i ) { break; } s += "\n\tat " + ( er.toString () ) ; } e.printStackTrace () ; global.record.Log.log ( "ERROR", s ) ; e.printStackTrace () ; } 
@ java.lang.Override protected synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil.getEntityManager () ; em.persist ( scrim ) ; em.getTransaction () .begin () ; em.flush () ; em.getTransaction () .commit () ; em.refresh ( scrim ) ; em.close () ; master.WebSocketChannelManager.broadcastMsg ( "scrimmage", "INSERT_TABLE_ROW", ( ( scrim.getFileName () ) + ( ( scrim.getId () ) + "," ) ) ) ; startRun () ; } 
@ java.lang.Override public boolean next () throws java.io.IOException { assertPagedFileStillMapped () ; if ( ( lastPageId ) < ( nextPageId ) ) { if ( ( ( pf_flags ) & ( org.neo4j.io.pagecache.PagedFile.PF_NO_GROW ) ) != 0 ) { return false; } else { pagedFile.increaseLastPageIdTo ( nextPageId ) ; } } unpinCurrentPage () ; pin ( nextPageId, true ) ; currentPageId = nextPageId; ( nextPageId ) ++; return true; } 
public final void moveItem ( T item, int toPosition ) { int fromPosition = mItems.indexOf ( item ) ; java.util.Collections.swap ( mItems, fromPosition, toPosition ) ; com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter.notifyItemMoved ( fromPosition, toPosition ) ; if ( null != ( mCallback ) ) { mCallback.onDynamicCardPositionChanged ( this, fromPosition, toPosition ) ; } } 
public com.brashmonkey.spriter.file.Reference findReferenceByFileNameAndFolder ( java.lang.String fileName, java.lang.String folderName, boolean withoutExtension ) { com.brashmonkey.spriter.file.Reference[] refs = this.findReferencesByFolderName ( folderName ) ; for ( com.brashmonkey.spriter.file.Reference ref : refs ) { java.lang.String file = ref.fileName.replaceAll ( ( "/" + folderName ) , "" ) ; if ( withoutExtension ) file = file.replaceAll ( ".png", "" ) ; if ( file.equals ( fileName ) ) return ref; } return null; } 
@ java.lang.Override public void afterTextChanged ( android.text.Editable s ) { if ( ( s.length () ) < ( weightPrevLength ) ) { com.kq.liftplusone.models.ExerciseSet set = mSets.get ( position ) ; set.setWeight ( java.lang.Float.parseFloat ( s.toString () ) ) ; mSets.set ( position, set ) ; } } 
@ java.lang.Override public com.hauldata.util.tokenizer.Token nextToken () throws java.io.IOException, java.util.InputMismatchException { com.hauldata.util.tokenizer.Token token; if ( position.hasNext () ) { token = position.next () ; } else { token = super.getToken () ; if ( null != token ) { position.add ( token ) ; } } return rememberToken ( token ) ; } 
public static java.lang.String PaymentAuth ( long cardAmount, int cash, int TotalPay ) { java.util.Scanner ms = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out.println ( "Payment Option: Cash or Card?" ) ; java.lang.String option = ms.next () ; if ( "Cash" == option ) { if ( cash == TotalPay ) { return "Success! Payment has been authorized"; } else { return "Payment fail! Please check amount"; } } else if ( option == "Card" ) { if ( cardAmount == TotalPay ) { return "Success! Payment has been authorized"; } else { return "Payment fail! Please check card or amount"; } } } 
void mergeSort ( int[] a, int[] p, int[] c, int l, int r ) { int range = r - l; if ( 0 < range ) { int m = l + ( range / 2 ) ; mergeSort ( a, p, c, l, m ) ; mergeSort ( a, p, c, ( m + 1 ) , r ) ; merge ( a, p, c, l, r ) ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; if ( ( felixwiemuth.lincal.ui.AddCalendarActivity.RESULT_CODE_SELECT_FILE ) == requestCode ) { if ( data != null ) { final int takeFlags = ( data.getFlags () ) & ( ( android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION ) | ( android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION ) ) ; getContentResolver () .takePersistableUriPermission ( data.getData () , takeFlags ) ; fileEditText.setText ( data.getDataString () ) ; } } } 
public static void delete ( java.io.File f ) throws java.io.IOException { if ( f.isDirectory () ) { for ( java.io.File c : f.listFiles () ) { org.ohmage.Utilities.delete ( c ) ; } } if ( ! ( f.delete () ) ) { throw new java.io.IOException ( ( f + "Failed to delete file: " ) ) ; } } 
@ android.support.annotation.Nullable public android.os.Bundle onProvideTransientParamsImpl ( @android.support.annotation.NonNull V v, @android.support.annotation.NonNull android.view.View view, @android.support.annotation.Nullable android.os.Bundle params ) { allowScreenViewCalls = true; android.os.Bundle b = v.onProvideParams ( view, params ) ; if ( null != b ) params = b; allowScreenViewCalls = false; VP presenter = getPresenter ( v ) ; if ( presenter != null ) { b = presenter.onProvideTransientParams ( v, view, params ) ; if ( null != b ) params = b; } return params; } 
public void resetUsed () { for ( int i = 0; ( team.size () ) > i; i++ ) { if ( i == ( frontIndex ) ) { team.get ( i ) .getAttributes () .setUsed ( true ) ; } else { team.get ( i ) .getAttributes () .setUsed ( false ) ; } } } 
public boolean validate ( Model.Tile.BuildTile target, Model.Utility.ILocation loc ) { if ( slots.isEmpty () ) { return true; } if ( ( ! ( buildMap.locationInBounds ( loc ) ) ) || ( ( buildMap.tileExistsAt ( loc ) ) || ( ! ( this.slotExistsAt ( loc ) ) ) ) ) { return false; } Model.Map.Slot mySlot = slots.get ( loc ) ; return mySlot.checkMatch ( target.getEdges () ) ; } 
private java.lang.String readCommandOutput ( java.lang.Process process ) { java.lang.String s; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try { java.io.BufferedReader stdInput = new java.io.BufferedReader ( new java.io.InputStreamReader ( process.getInputStream () ) ) ; while ( null != ( s = stdInput.readLine () ) ) { sb.append ( s ) ; } } catch ( java.io.IOException e ) { e.printStackTrace () ; } return sb.toString () ; } 
@ java.lang.Override public java.lang.String getValue () { java.util.List<org.roda.core.data.v2.TransferredResource> items = display.getVisibleItems () ; if ( 0 == ( items.size () ) ) { return ""; } else { long totalSize = 0; for ( org.roda.core.data.v2.TransferredResource item : items ) { totalSize += item.getSize () ; } return org.roda.wui.common.client.tools.Humanize.readableFileSize ( totalSize ) ; } } 
private static boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor, boolean mainBlock, de.fhg.iais.roberta.syntax.Phrase<java.lang.Void> phrase ) { if ( ( de.fhg.iais.roberta.components.Category.TASK ) != ( phrase.getKind () .getCategory () ) ) { astVisitor.nlIndent () ; } else if ( ! ( phrase.getKind () .hasName ( "LOCATION" ) ) ) { mainBlock = true; } return mainBlock; } 
@ java.lang.Override public void onFocusChange ( android.view.View v, boolean hasFocus ) { if ( !hasFocus ) { if ( ( ( mCardNumber.length () ) > 12 ) && ( ( mCardNumber ) != null ) ) { mCardNumberView.setText ( getFormattedCardNumber ( addSpaceToCardNumber () ) ) ; if ( ( mType ) == ( com.vinaygaba.creditcardview.CardType.AUTO ) ) { mCardTypeView.setBackgroundResource ( getLogo () ) ; } } } } 
private void effect () { for ( com.dungeon.game.effect.Effect effect : effects ) { effect.update ( this ) ; } for ( int i = 0; ( effects.size () ) > i; i++ ) { if ( effects.get ( i ) .killMe ) { effects.get ( i ) .end ( this ) ; effects.remove ( i ) ; i--; } } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { java.lang.String selectedItemText = ( ( java.lang.String ) ( parent.getItemAtPosition ( position ) ) ) ; if ( 0 < position ) { category = selectedItemText; android.widget.Toast.makeText ( getApplicationContext () , selectedItemText, Toast.LENGTH_LONG ) .show () ; } } 
private void validateEditing ( com.webapplication.entity.AuctionItem auctionItem ) throws java.lang.Exception { if ( 0 != ( auctionItem.getBidsNo () ) ) throw new com.webapplication.exception.auctionitem.AuctionAlreadyInProgressException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_ALREADY_IN_PROGRESS ) ; if ( auctionItem.getEndDate () .after ( new java.util.Date () ) ) throw new com.webapplication.exception.auctionitem.AuctionExpiredException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_EXPIRED ) ; } 
private boolean privatePerformZoom ( boolean byGesture, float scale, int centerX, int centerY, boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( 1.0F == realScale ) { if ( ( mZoomListener ) != null ) { fitTranslate () ; mZoomListener.onZoomEnd ( byGesture, 1, centerX, centerY ) ; } return false; } zoomAnimated ( byGesture, realScale, centerX, centerY, shouldCallback ) ; return true; } 
@ java.lang.Override public void onPositiveActionClicked ( com.rey.material.app.DialogFragment fragment ) { com.rey.material.app.TimePickerDialog dialog = ( ( com.rey.material.app.TimePickerDialog ) ( fragment.getDialog () ) ) ; android.widget.Toast.makeText ( fragment.getActivity () , ( ( dialog.getFormattedTime ( java.text.SimpleDateFormat.getTimeInstance () ) ) + "Time is " ) , Toast.LENGTH_SHORT ) .show () ; fragment.dismiss () ; } 
@ java.lang.Override public boolean isChunkEnd ( @javax.annotation.Nonnull org.jenkinsci.plugins.workflow.graph.FlowNode current, @javax.annotation.CheckForNull org.jenkinsci.plugins.workflow.graph.FlowNode previous ) { if ( null == previous ) { return false; } if ( current instanceof org.jenkinsci.plugins.workflow.graph.BlockEndNode ) { org.jenkinsci.plugins.workflow.graph.BlockStartNode bsn = ( ( org.jenkinsci.plugins.workflow.graph.BlockEndNode ) ( previous ) ) .getStartNode () ; if ( isChunkStart ( bsn, null ) ) { return true; } } return ( previous != null ) && ( isChunkStart ( previous, null ) ) ; } 
private hudson.plugins.timestamper.annotator.ConsoleLogParser.Result parseFromFinish ( java.io.InputStream inputStream ) throws java.io.IOException { hudson.plugins.timestamper.annotator.ConsoleLogParser.Result result = new hudson.plugins.timestamper.annotator.ConsoleLogParser.Result () ; int value = inputStream.read () ; result.atNewLine = isNewLine ( value ) ; while ( ( -1 ) != ( value = inputStream.read () ) ) { if ( isNewLine ( value ) ) { ( result.lineNumber ) --; } } return result; } 
@ java.lang.Override public boolean usesAttributes ( java.lang.String tagName ) { tagName = tagName.toLowerCase () ; boolean usesAttributes = ! ( ( tagName.equals ( "cfelseif" ) ) || ( ( tagName.equals ( "cfset" ) ) || ( tagName.equals ( "cfif" ) ) ) ) ; java.lang.System.out.println ( ( ( ( "usesAttributes: " + tagName ) + ":" ) + usesAttributes ) ) ; return usesAttributes; } 
public int attack ( edu.cis232.gwasos.resources.Combat enemy ) { java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = enemy.getHp () ; int r = rand.nextInt ( ( ( ( enemy.getAgility () ) + 5 ) - ( getAgility () ) ) ) ; if ( r <= 3 ) { setMissed ( false ) ; enemy.damage ( power ) ; setPreviousAttackDamage ( ( monsterCurrentHp - ( enemy.getHp () ) ) ) ; } else { setMissed ( true ) ; } return previousAttackDamage; } 
private void moveClient ( org.zapto.mike.mrstreamserver.Channel channel, org.zapto.mike.mrstreamserver.ClientHandler client ) { boolean canJoin = true; java.lang.System.out.println ( ( ( client.getChannel () ) != channel ) ) ; if ( canJoin && ( ( client.getChannel () ) != channel ) ) { client.setChannel ( channel ) ; channel.addClient ( client ) ; } else { } } 
void setChecked ( android.widget.TextView t1, android.widget.TextView t2, android.widget.ImageView i1, java.lang.String description_in ) { i1.setImageResource ( R.drawable.ic_check_box_black_24dp ) ; t1.setTextColor ( android.support.v4.content.ContextCompat.getColor ( getApplicationContext () , R.color.PrimaryPink ) ) ; if ( null != t2 ) { t2.setText ( description_in ) ; } } 
@ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( java.io.File file ) { org.openide.filesystems.FileObject fileObject = org.openide.filesystems.FileUtil.toFileObject ( file ) ; fileObject = org.gephi.io.importer.api.ImportUtils.getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( builder != null ) && ( fileObject != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder.buildImporter () ; return fi; } return null; } 
public static void sendExtras ( android.os.Bundle extras ) { if ( null != extras ) { if ( ( ( com.plugin.gcm.PushPlugin.gECB ) != null ) && ( ( com.plugin.gcm.PushPlugin.gWebView ) != null ) ) { com.plugin.gcm.PushPlugin.sendJavascript ( com.plugin.gcm.PushPlugin.convertBundleToJson ( extras ) ) ; } else { android.util.Log.v ( com.plugin.gcm.PushPlugin.TAG, "sendExtras: caching extras to send at a later time." ) ; com.plugin.gcm.PushPlugin.gCachedExtras = extras; } } } 
public void changeDragonLeft ( android.view.View view ) { if ( 0 == ( currDragon ) ) { currDragon = ( dragons.size () ) - 1; addAccessory ( dragons.get ( currDragon ) ) ; } else { currDragon -= 1; addAccessory ( dragons.get ( currDragon ) ) ; } checkAchievements () ; } 
public double getMinZ () { if ( ! ( java.lang.Double.isNaN ( zMin ) ) ) return zMin; for ( int i = 0; ( getXyz () [0].length ) > i; i++ ) { final double z = getXyz ( 0, i, 2 ) ; if ( z <= ( zMin ) ) zMin = z; } return zMin; } 
public void applyInterestAndFee () { if ( 0 < ( balance ) ) { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( Checking.MIN_BAL ) ) { balance -= Checking.FEE; } } balance = ( balance ) + ( ( ( balance ) * ( Checking.APY ) ) / ( MONTH_PER_YEAR ) ) ; } } 
public boolean hasAvailableNeighbours () { if ( ! ( ( ( ( right ) == null ) & ( ( left ) == null ) ) && ( ( ( top ) == null ) && ( ( bottom ) == null ) ) ) ) { return false; } else { return true; } } 
@ com.facebook.react.bridge.ReactMethod public void isSimCardValid ( com.facebook.react.bridge.Callback callback ) { android.telephony.TelephonyManager tm = ( ( android.telephony.TelephonyManager ) ( this.reactContext.getSystemService ( Context.TELEPHONY_SERVICE ) ) ) ; com.wangghon.RNSimInfo.Bool isSimCardValid = ( android.telephony.TelephonyManager.SIM_STATE_READY ) == ( tm.getSimState () ) ; callback.invoke ( isSimCardValid ) ; } 
public void addExp ( int addedExp ) { m_exp += addedExp; while ( ( 100 * ( this.getLevel () ) ) < ( m_exp ) ) { levelUp ( ( ( m_exp ) - ( 100 * ( this.getLevel () ) ) ) ) ; } } 
protected void insert ( java.lang.String table, java.util.HashMap<java.lang.String, java.lang.String> values ) throws java.lang.Exception { if ( null == table ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int r = ( ( int ) ( this.executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; this.close () ; java.lang.System.out.println ( ( "Rows affected: " + r ) ) ; } 
private org.w3c.dom.Node isMultiplicativeOp () { org.w3c.dom.Element parent = doc.createElement ( "MultiplicativeOp" ) ; if ( isAMultiplicativeOp () ) { java.lang.String sym = ( ( JParserSym.MULTIPLICATION ) == ( currentTokenType () ) ) ? "*" : ( currentTokenType () ) == ( JParserSym.DIVISION ) ? "/" : "and"; parent.setTextContent ( sym ) ; ( tokenIndex ) ++; parent.setAttribute ( "lineNumber", ( ( currentTokenLineNumber () ) + "" ) ) ; return parent; } ( tokenIndex ) ++; return null; } 
@ java.lang.Override protected void actionPerformed ( net.minecraft.client.gui.GuiButton button ) throws java.io.IOException { super.actionPerformed ( button ) ; if ( 0 == ( button.id ) ) { mc.displayGuiScreen ( parent ) ; } else { if ( button.displayString.equals ( "Enable" ) ) { button.displayString = "Disable"; } else { button.displayString = "Enable"; } } } 
public java.util.List<com.kencook.sharpspring.Event> getEvents ( java.lang.String timestamp ) throws com.kencook.sharpspring.SharpspringException { com.kencook.sharpspring.SharpspringRequest request = com.kencook.sharpspring.SharpspringRequestBuilder.request ( 1, SharpspringMethod.GET_EVENTS ) .where ( "createTimestamp" ) .is ( "2017-05-23" ) .build () ; com.kencook.sharpspring.responses.GetEventsResponse result = operations.query ( request, com.kencook.sharpspring.responses.GetEventsResponse.class ) ; if ( null != ( result.getError () ) ) throw new com.kencook.sharpspring.SharpspringException ( result.getError () ) ; return result.getResult () .getEvent () ; } 
public void newTurn () { mana.rebase ( ( 1 + ( mana.base () ) ) ) ; mana.reset () ; mana.alter ( ( - ( overloadMana.value () ) ) ) ; if ( ( mana.value () ) < 0 ) { mana.set ( 0 ) ; } draw ( 1 ) ; field.updateSleepTimes () ; field.updateFreezeTimes () ; field.resetAttackCapacities () ; } 
@ javax.annotation.Nonnull protected javax.ws.rs.core.UriBuilder getBaseUriBuilder () { if ( ( com.helger.web.servlet.server.StaticServerInfo.isSet () ) && ( m_bUseStaticServerInfo ) ) return javax.ws.rs.core.UriBuilder.fromUri ( ( ( ( com.helger.web.servlet.server.StaticServerInfo.getInstance () .getFullServerPath () ) + "/" ) + ( m_aUriInfo.getPath () ) ) ) ; return m_aUriInfo.getBaseUriBuilder () ; } 
@ java.lang.Override public void onConnected ( @android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = com.google.android.gms.location.LocationRequest.create () ; mLocationRequest.setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; mLocationRequest.setInterval ( 2000 ) ; if ( ( ( android.support.v4.content.ContextCompat.checkSelfPermission ( getApplicationContext () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( Build.VERSION.SDK_INT ) >= 23 ) ) { LocationServices.FusedLocationApi.requestLocationUpdates ( mGoogleApiClient, mLocationRequest, this ) ; } } 
private static void flushConfig () { MyStaticValue.ENV.clear () ; org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.setGlobalVar ( MyStaticValue.ENV ) ; if ( null != ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings ) ) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings ) ; } if ( ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path ) != null ) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path, true ) ; } else { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.initConfig ( new java.io.File ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.configDir, "ansj_library.properties" ) .getAbsolutePath () , false ) ; } } 
public void addNotification ( @com.flair.blurb.Constants.CategoryDef java.lang.String category, android.service.notification.StatusBarNotification notification, android.service.notification.NotificationListenerService service ) { java.lang.String key = com.flair.blurb.Util.getKey ( notification ) ; android.util.Log.d ( com.flair.blurb.data.Notifications.TAG, ( key + ( ( "addNotification: " + category ) + " key " ) ) ) ; java.util.concurrent.ConcurrentHashMap<java.lang.String, android.service.notification.StatusBarNotification> map = getMapByCategory ( category ) ; com.flair.blurb.Util.addNotificationExtras ( context, notification, category, key ) ; com.flair.blurb.Util.mergeNotifications ( map, notification, service ) ; map.put ( com.flair.blurb.Util.getKey ( notification ) , notification ) ; } 
@ java.lang.Override public int getCurrentZoom () { try { java.lang.String zoomRes = sendRequest ( buildPanTiltHeadControlURL ( "%23GZ" ) ) ; if ( zoomRes.startsWith ( "gz" ) ) { int zoom = java.lang.Integer.parseInt ( zoomRes.substring ( 2, 5 ) , 16 ) ; lastKnown.setZoom ( zoom ) ; return zoom; } else { throw new java.io.IOException ( ( zoomRes + ( errorString ) ) ) ; } } catch ( java.io.IOException e ) { e.printStackTrace () ; return lastKnown.getZoom () ; } } 
public void queuePlayList ( com.sedmelluq.discord.lavaplayer.track.AudioPlaylist playlist ) { java.util.List<com.sedmelluq.discord.lavaplayer.track.AudioTrack> list = playlist.getTracks () ; for ( int i = 0; ( list.size () ) > i; i++ ) { if ( ! ( this.player.startTrack ( list.get ( i ) , true ) ) ) { this.queue.offer ( list.get ( i ) ) ; this.playlist.add ( list.get ( i ) .getInfo () .title ) ; } } } 
public void printAll () { uic.project.commuter.carPoolData.iterator.CarPoolIterator iter = this.getIterator () ; while ( iter.hasNext ( this ) ) { uic.project.commuter.carPoolData.iterator.CarPoolComponent currentObject = iter.next ( this ) ; currentObject.printSelf () ; uic.project.commuter.carPoolData.iterator.CarPoolIterator tier2Iter = this.getIterator () ; if ( ( this.getClass () ) == ( currentObject.getClass () ) ) { while ( tier2Iter.hasNext ( currentObject ) ) { java.lang.System.out.print ( " " ) ; tier2Iter.next ( currentObject ) .printSelf () ; } } } } 
@ java.lang.Override public byte[] openBytes ( int no, byte[] buf, int x, int y, int w, int h ) throws java.io.IOException, loci.formats.FormatException { loci.formats.FormatTools.checkPlaneParameters ( this, no, buf.length, x, y, w, h ) ; int planeSize = loci.formats.FormatTools.getPlaneSize ( this ) ; pixelFile.seek ( ( ( no * planeSize ) + ( pixelOffset ) ) ) ; readPlane ( pixelFile, x, y, w, h, buf ) ; return buf; } 
public void removePerson ( int id ) { mDBOpenHelper = new cbpos1989.com.sqlitedatabase.DBOpenHelper ( mContext ) ; mDatabase = mDBOpenHelper.getWritableDatabase () ; mDatabase.execSQL ( ( id + ( ( ( ( "DELETE FROM " + ( DBFeederContract.PersonTable.TABLE_NAME ) ) + " WHERE " ) + ( DBFeederContract.PersonTable._ID ) ) + " = " ) ) , null ) ; mDatabase.close () ; mDBOpenHelper.close () ; mDatabase = null; mDBOpenHelper = null; } 
private float getNoise ( float x, float y, mapChooser.PerlinNoiseGenerator noise, float scale ) { float n = 0; float weight = 1; float curFrequency = 1; for ( int i = 0; ( frequencies ) > i; i++ ) { n += weight * ( noise.noise2 ( ( ( scale * curFrequency ) * x ) , ( ( scale * curFrequency ) * y ) ) ) ; weight /= 2; curFrequency += 2; } return n; } 
public void setDiscount ( double discount ) { if ( 0 == discount ) { offeredPrice = false; finalPrice = price; this.discount = discount; return; } else if ( discount > 1 ) { return; } this.offeredPrice = true; this.discount = discount; this.finalPrice = ( price ) * ( 1 - discount ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( null != ( mListener ) ) { java.lang.String toText = mToTextView.getText () .toString () ; if ( ! ( getResString ( R.string.to_hint ) .equals ( toText ) ) ) { mListener.onToClick ( toText ) ; } } } 
public void run () { android.bluetooth.BluetoothSocket socket = null; while ( true ) { try { socket = serverSocket.accept () ; } catch ( java.io.IOException e ) { break; } if ( null != socket ) { listenOnSocket ( socket ) ; try { serverSocket.close () ; } catch ( java.io.IOException e ) { } break; } } } 
public org.lirazs.gbackbone.client.core.collection.Collection set ( org.lirazs.gbackbone.client.core.data.Options[] objects, org.lirazs.gbackbone.client.core.data.Options options ) { java.util.List<T> models = java.util.Arrays.asList () ; for ( org.lirazs.gbackbone.client.core.data.Options object : objects ) { T model = prepareModel ( object, options ) ; if ( null != model ) { models.add ( model ) ; } } return set ( models, options ) ; } 
public java.lang.String getCategoryDisplay ( java.lang.String catID ) { java.lang.String display = null; android.database.sqlite.SQLiteDatabase db = this.getReadableDatabase () ; android.database.Cursor cursor = db.query ( com.quaap.launchtime.db.DB.TAB_ORDER_TABLE, new java.lang.String[] { com.quaap.launchtime.db.DB.LABEL }, ( "=?" + ( com.quaap.launchtime.db.DB.CATID ) ) , new java.lang.String[] { catID }, null, null, null, null ) ; if ( cursor.moveToNext () ) { display = cursor.getString ( 0 ) ; } cursor.close () ; return display; } 
public int length ( int v, int w ) { if ( w == v ) { return 0; } int common = ancestor ( v, w ) ; if ( common == ( -1 ) ) { return -1; } edu.princeton.cs.algs4.BreadthFirstDirectedPaths vBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G, v ) ; edu.princeton.cs.algs4.BreadthFirstDirectedPaths wBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G, w ) ; return ( vBFS.distTo ( common ) ) + ( wBFS.distTo ( common ) ) ; } 
public static st.redline.ProtoObject p220 ( st.redline.ProtoObject receiver, st.redline.ThisContext thisContext, st.redline.ProtoObject arg1, st.redline.ProtoObject arg2, st.redline.ProtoObject arg3, st.redline.ProtoObject arg4, st.redline.ProtoObject arg5, st.redline.ProtoObject arg6, st.redline.ProtoObject arg7 ) { return null != ( receiver.cls () .methodAt ( ( ( java.lang.String ) ( arg1.javaValue () ) ) ) ) ? ProtoObject.TRUE : ProtoObject.FALSE; } 
public T removeLast () { checkRange () ; T retVal = _end.getCargo () ; _end = _end.getPrev () ; _end.setNext ( null ) ; if ( null == ( _end ) ) { _front = null; } ( _size ) --; return retVal; } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference, java.lang.Object o ) { if ( sp_autocheck.isChecked () ) { check_wifi.setEnabled ( true ) ; check_list.setEnabled ( true ) ; startTimer () ; } else { if ( null != ( cdt ) ) cdt.cancel () ; check_wifi.setEnabled ( false ) ; check_list.setEnabled ( false ) ; } return true; } 
public java.util.Collection<prompto.declaration.IMethodDeclaration> findPotentialMethods () { prompto.expression.MethodSelector selector = methodCall.getMethod () ; java.util.Collection<prompto.declaration.IMethodDeclaration> candidates = selector.getCandidates ( context ) ; if ( 0 == ( candidates.size () ) ) throw new prompto.error.SyntaxError ( ( "No method named:" + ( methodCall.getMethod () .getName () ) ) ) ; return filterPotential ( candidates ) ; } 
@ org.junit.jupiter.api.Test @org.junit.jupiter.api.DisplayName ( value = "Standard headers" ) void standardHeaders () { java.lang.String headers = new jbs.response.HeadersBuilder ( this.requestData, 200 ) .toString () ; org.junit.jupiter.api.Assertions.assertEquals ( ( "" + ( ( ( ( ( ( ( "HTTP/1.1 200 \n" + "Date: " ) + ( this.getDate () ) ) + "\n" ) + "X-XSS-Protection: 1; mode=block\n" ) + "X-Frame-Options: DENY\n" ) + "Content-Type: text/plain\n" ) + "\n" ) ) , headers ) ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { { mAdIndex = ( ( ( mVideoFilesVector.size () ) + ( mAdIndex ) ) - 1 ) % ( mVideoFilesVector.size () ) ; java.lang.String filePath = ( ( java.lang.String ) ( mVideoFilesVector.get ( mAdIndex ) ) ) ; mVideoView.setVideoURI ( android.net.Uri.parse ( filePath ) ) ; mVideoView.start () ; } } 
protected int draw () { mSurfaceTexture.updateTexImage () ; float[] matrix = new float[16]; mSurfaceTexture.getTransformMatrix ( matrix ) ; mEffect.setTextureTransformMatrix ( matrix ) ; int textureId = mEffect.draw ( mSurfaceTextureId ) ; mRendererScreen.draw ( textureId, mCubeBuffer, mTextureBuffer ) ; if ( null != ( mEncoder ) ) { start = java.lang.System.currentTimeMillis () ; mHandler.sendEmptyMessage ( 0 ) ; } return 0; } 
private void select ( int index ) { assert 3 > index; if ( ( suggestions[index] ) == "" ) { processor.addWord ( new java.util.ArrayList<com.shiweinan.ckeyboard.Point> () ) ; return; } processor.addWord ( screenPoints ) ; screenPoints.clear () ; processor.showCorrectionHints ( screenPoints ) ; updateSuggestion () ; } 
private void assertDeepEqualsGuests ( java.util.List<cz.muni.fi.pv168.project.Guest> expectedList, java.util.List<cz.muni.fi.pv168.project.Guest> actualList ) { expectedList.sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; actualList.sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; assertEquals ( expectedList.size () , actualList.size () ) ; for ( int i = 0; ( expectedList.size () ) > i; i++ ) { cz.muni.fi.pv168.project.Guest expected = expectedList.get ( i ) ; cz.muni.fi.pv168.project.Guest actual = actualList.get ( i ) ; assertDeepEquals ( expected, actual ) ; } } 
@ java.lang.Override public void mouseDragged ( int oldx, int oldy, int newx, int newy ) { if ( ! ( active ) ) return; consumeEvent () ; if ( ( itdelatrisu.opsu.user.UserSelectOverlay.State.CREATE_USER ) == ( state ) ) return; int diff = newy - oldy; if ( diff != 0 ) scrolling.dragged ( ( -diff ) ) ; } 
public synchronized void start () { if ( ( ( ( java.lang.System.currentTimeMillis () ) - ( finishedAt ) ) > ( sessionPendingMillis ) ) || ( ( ( id ) == null ) || ( ( finishedAt ) == null ) ) ) { id = java.util.UUID.randomUUID () .toString () ; } finishedAt = null; } 
@ com.squareup.otto.Subscribe public void onLastLocation ( today.gacha.android.services.GachaLocationService.LastLocationEvent event ) { if ( event.isSuccess () ) { animateGoogleMapCamera ( event.getLocation () ) ; return; } android.util.Log.d ( today.gacha.android.ui.MapsActivity.TAG, ( ( event.getThrowableMessage () ) + "Get last location failed - " ) ) ; locationService.requestCurrentLocation () ; } 
@ java.lang.Override public void receive ( long timeStamp, org.wso2.siddhi.core.event.Event[] inEvents, org.wso2.siddhi.core.event.Event[] removeEvents ) { org.wso2.siddhi.core.util.EventPrinter.print ( timeStamp, inEvents, removeEvents ) ; if ( null != inEvents ) { ( value ) ++; } else if ( ( value ) == 1 ) { junit.framework.Assert.assertNull ( inEvents ) ; } eventArrived = true; } 
public int compareTo ( java.lang.Object t ) { if ( ( ( ( Translator ) ( t ) ) .votes ) < ( votes ) ) return 1; else if ( ( votes ) < ( ( ( Translator ) ( t ) ) .votes ) ) return -1; else return 0; } 
public java.lang.String printForwards ( int numToPrint ) { LLNode<E> item = first; java.lang.String finalString = ""; for ( int i = 0; numToPrint > i; i++ ) { finalString += ( item.toString () ) + "\n"; item = item.getNext () ; } return finalString; } 
public final void setFPS ( int fps ) { if ( 0 >= fps ) { throw new java.lang.RuntimeException ( "Attempted to run a CellGame at a non-positive FPS" ) ; } this.fps = fps; msPerFrame = 1000 / ( ( double ) ( fps ) ) ; game.getContainer () .setTargetFrameRate ( fps ) ; } 
public boolean authenticate ( final java.lang.String iUserName, final java.lang.String iPassword, final java.lang.String iResourceToCheck ) { final com.orientechnologies.orient.server.config.OServerUserConfiguration user = getUser ( iUserName ) ; if ( ( ( iPassword == null ) || ( user.password.equals ( iPassword ) ) ) && ( user != null ) ) { if ( user.resources.equals ( "*" ) ) return true; java.lang.String[] resourceParts = user.resources.split ( "," ) ; for ( java.lang.String r : resourceParts ) if ( r.equals ( iResourceToCheck ) ) return true; } return false; } 
public void setTimerView ( long secUntilFinished ) { java.lang.String sec = java.lang.String.format ( "%02d", ( secUntilFinished % 60 ) ) ; java.lang.String min = java.lang.String.format ( "%02d", ( secUntilFinished / 60 ) ) ; textViewText = sec + ( min + ":" ) ; textView.setText ( textViewText ) ; progressBar.setProgress ( ( ( int ) ( ( secUntilFinished * 1000 ) / ( default_StudyTime ) ) ) ) ; } 
private void clearData () { selectedFaculties.clear () ; chosenFaculties = ""; questions.clear () ; newDate = ""; for ( int i = 0; ( checked.length ) > i; i++ ) { checked[i] = false; } aSpinner1.setSelection ( 0 ) ; questionsLayout.removeAllViews () ; } 
@ java.lang.Override public boolean canDrain ( net.minecraft.util.EnumFacing from, net.minecraftforge.fluids.Fluid fluid ) { if ( ( ( configComponent.getOutput ( TransmissionType.FLUID, from, facing ) .ioState ) == ( mekanism.common.SideData.IOState.OUTPUT ) ) && ( hasFrequency () ) ) { return ( ( frequency.storedFluid.getFluid () ) == null ) || ( fluid == ( frequency.storedFluid.getFluid () .getFluid () ) ) ; } return false; } 
protected void setSelectedPanel ( processing.app.contrib.ContributionPanel contributionPanel ) { if ( contributionPanel == ( selectedPanel ) ) { selectedPanel.setSelected ( true ) ; } else { contributionTab.contributionManagerDialog.updateStatusPanel ( contributionPanel ) ; processing.app.contrib.ContributionPanel lastSelected = selectedPanel; selectedPanel = contributionPanel; if ( lastSelected != null ) { lastSelected.setSelected ( false ) ; } contributionPanel.setSelected ( true ) ; updateColors () ; requestFocusInWindow () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item.getItemId () ; if ( ( com.aftersapp.utils.AppConstants.ITEM_NOT_PURCHASED ) == ( mSessionManager.getIsPurchased () ) ) com.aftersapp.AftersAppApplication.getInstance () .setAddClickCount () ; if ( id == ( R.id.action_filter ) ) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment () ; getFragmentManager () .beginTransaction () .replace ( R.id.fragment_frame_lay, filterFragment, "FilterFragment" ) .commit () ; return true; } return super.onOptionsItemSelected ( item ) ; } 
public static byte[] read ( java.lang.String filePath ) { java.io.FileInputStream is = null; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils.read ( is ) ; } catch ( java.io.FileNotFoundException e ) { } catch ( java.io.IOException e ) { } catch ( java.lang.OutOfMemoryError e ) { } finally { if ( null != is ) { try { is.close () ; } catch ( java.io.IOException e ) { } } } return null; } 
private void handleTakePictureResult ( int resultCode, android.content.Intent resultIntent ) { if ( ( RESULT_OK ) == resultCode ) { android.widget.ImageView imgView = ( ( android.widget.ImageView ) ( findViewById ( R.id.imgShowImage ) ) ) ; mPhotoPathName = mPhotoPathUri.getPath () ; com.example.a454203.aone_sample.PhotoHelper.addPhotoToMediaStoreAndDisplayThumbnail ( mPhotoPathName, this, imgView ) ; } else { mPhotoPathUri = null; android.widget.Toast.makeText ( this, "User cancelled", Toast.LENGTH_LONG ) .show () ; } } 
@ javafx.fxml.FXML private void apriCorpiOrb () { dati.spazio.CorpoCeleste corpoSel = tabCor.getSelectionModel () .getSelectedItem () ; if ( null != corpoSel ) { java.util.List<? extends dati.spazio.CorpoCeleste> corpi = corpoSel.getListaCorpiOrbitanti () ; for ( dati.spazio.CorpoCeleste bril : corpi ) java.lang.System.out.println ( ( ( bril.getNome () ) + "\n" ) ) ; java.lang.String nomeCorpoFuoco = tabCor.getSelectionModel () .getSelectedItem () .getNome () ; simulazionesistemaplanetario.gui.tabelle.TabellaController.launchTabellaController ( nomeCorpoFuoco, corpi ) ; } } 
public void addConstraint ( mondrian.rolap.sql.SqlQuery sqlQuery, mondrian.rolap.sql.RolapCube baseCube, mondrian.rolap.aggmatcher.AggStar aggStar ) { for ( int i = 0; ( columnList.size () ) > i; i++ ) { mondrian.olap.MondrianDef.Expression expression = columnList.get ( i ) ; final java.lang.Comparable value = valueList.get ( i ) ; final mondrian.spi.Dialect.Datatype datatype = datatypeList.get ( i ) ; sqlQuery.addWhere ( mondrian.rolap.sql.SqlConstraintUtils.constrainLevel2 ( sqlQuery, expression, datatype, value ) ) ; } } 
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( obj == ( this ) ) { return true; } if ( obj == null ) { return false; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) { return false; } return true; } 
private void jumpToPage () { java.lang.Integer targetPage = pageField.getTextAsInteger () ; if ( ( ! ( ( targetPage >= 1 ) && ( targetPage <= ( totalPages ) ) ) ) && ( targetPage != null ) ) { showErrorMessage ( "Invalid page" ) ; return; } currentPage = targetPage - 1; displayPage ( currentPage ) ; updatePageNumberLabelAndNavigation () ; } 
public boolean checkToken ( fundata.model.Token model ) { if ( null == model ) { return false; } java.lang.String token = redisTemplate.boundValueOps ( model.getUserId () ) .get () .toString () ; if ( ( token == null ) || ( ! ( token.equals ( model.getToken () ) ) ) ) { return false; } redisTemplate.boundValueOps ( model.getUserId () ) .expire ( Constants.TOKEN_EXPIRES_HOUR, java.util.concurrent.TimeUnit.HOURS ) ; return true; } 
private edu.princeton.cs.algs4.Stack<edu.princeton.cs.algs4.Point2D> range ( edu.princeton.cs.algs4.RectHV rect, KdTree.Node node, edu.princeton.cs.algs4.Stack<edu.princeton.cs.algs4.Point2D> points ) { if ( null == node ) return points; if ( rect.contains ( node.p ) ) points.push ( node.p ) ; if ( rect.intersects ( node.rect ) ) { range ( rect, node.lb, points ) ; range ( rect, node.rt, points ) ; } return points; } 
public final void hide () { if ( null != ( this.runtime ) ) { this.runtime.runOnPhysicsThread ( new java.lang.Runnable () { @java.lang.Override public void run () { for ( final com.thommil.libgdx.runtime.actor.physics.Collidable collidable : collidables ) { setCollidablesState ( collidable, false ) ; } } } ) ; } this.hidden = true; this.onHide () ; } 
public void removeXAttr ( java.lang.String src, org.apache.hadoop.fs.XAttr xAttr ) throws java.io.IOException { if ( ( xAttr == null ) && ( src == null ) ) { throw new java.lang.IllegalArgumentException ( "Argument is null" ) ; } checkIfFileExisted ( src ) ; java.util.List<org.apache.hadoop.fs.XAttr> targetXAttrList = com.google.common.collect.Lists.newArrayListWithCapacity ( 1 ) ; targetXAttrList.add ( xAttr ) ; try { getXAttrs ( src, targetXAttrList ) ; } catch ( java.io.IOException e ) { throw new java.io.IOException ( "No matching attributes found for remove operation" ) ; } this.nodeManager.removeXAttr ( src, xAttr ) ; } 
private void updateBestTimes ( float recentTime ) { curTime.setText ( ( ( java.lang.String.valueOf ( recentTime ) ) + "current time: " ) ) ; if ( recentTime <= ( bestTimeTracker ) ) { bestTimeTracker = recentTime; bestTime.setText ( ( "best time: " + ( bestTimeTracker ) ) ) ; } if ( recentTime >= ( worstTimeTracker ) ) { worstTimeTracker = recentTime; worstTime.setText ( ( "worst time: " + ( worstTimeTracker ) ) ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export", method = org.springframework.web.bind.annotation.RequestMethod.GET ) @org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @org.springframework.web.bind.annotation.PathVariable long assemblyId, @org.springframework.web.bind.annotation.RequestParam ( value = "description", required = false ) java.lang.String description, @org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User", required = false ) java.lang.String userId, @org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope", required = false ) java.lang.String scope ) { if ( null == userId ) userId = "oneops-system"; try { return dManager.exportDesign ( assemblyId, description ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger.error ( te ) ; te.printStackTrace () ; throw te; } } 
public void setScore ( java.lang.String name, int point ) { if ( 16 < ( name.length () ) ) { name = name.substring ( 0, 16 ) ; } for ( org.bukkit.scoreboard.Scoreboard sb : scoreboards.values () ) { org.bukkit.scoreboard.Objective obj = sb.getObjective ( org.bitbucket.ucchy.fnafim.game.ScoreboardDisplay.OBJECTIVE_NAME ) ; if ( point == 0 ) { getScoreItem ( obj, name ) .setScore ( 1 ) ; } getScoreItem ( obj, name ) .setScore ( point ) ; } } 
protected void initialize () { new com.googlecode.kanbanik.client.components.common.PicturePreviewHandler ( pictureUrl, assiggneePicturePreview, assigneePicturePreviewLabel, assiggneePicturePreviewErrorLabel ) .initialize () ; permissionsEditingComponent = new com.googlecode.kanbanik.client.components.security.PermissionsEditingComponent () ; java.util.List<com.googlecode.kanbanik.client.api.Dtos.PermissionDto> permissions = ( null != ( oldDto ) ) ? oldDto.getPermissions () : java.util.Collections.EMPTY_LIST; permissions = ( permissions != null ) ? permissions : java.util.Collections.EMPTY_LIST; permissionsEditingComponent.init ( permissions ) ; permissionsPanel.clear () ; permissionsPanel.add ( permissionsEditingComponent ) ; } 
public static java.sql.Connection open () { try { java.lang.Class.forName ( "org.sqlite.JDBC" ) ; codeu.chat.codeU_db.DataBaseConnection.c = java.sql.DriverManager.getConnection ( "jdbc:sqlite:./bin/codeu/chat/codeU_db/ChatDatabase.db" ) ; codeu.chat.codeU_db.DataBaseConnection.c.setAutoCommit ( false ) ; java.lang.System.out.println ( "Opened database successfully" ) ; } catch ( java.lang.Exception e ) { java.lang.System.err.println ( ( ( e.getMessage () ) + ( ( e.getClass () .getName () ) + ": " ) ) ) ; java.lang.System.exit ( 0 ) ; } return codeu.chat.codeU_db.DataBaseConnection.c; } 
public boolean accepts ( rocnikovyprojekt.Word w ) { rocnikovyprojekt.FSA m = determinize () .complete () ; java.lang.Object p = m.initialStates.iterator () .next () ; for ( int i = 0; ( w.length () ) > i; i++ ) { java.lang.Object a = w.symbolAt ( i ) ; p = m.delta.get ( p, a ) .iterator () .next () ; } return m.finalStates.contains ( p ) ; } 
@ java.lang.Override public void kill () { if ( ( -1 ) != ( key ) ) { java.util.ArrayList<com.watabou.pixeldungeon.effects.SystemFloatingText> stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks.get ( key ) ; stack.remove ( this ) ; if ( stack.isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks.remove ( key ) ; } key = -1; } super.kill () ; } 
public void setVoice ( int i ) { Main.buffer[ ( 577 + ( Main.useroffset ) ) ] = ( ( byte ) ( i ) ) ; Main.buffer[ ( ( Main.useroffset ) + 146248 ) ] = ( ( byte ) ( i ) ) ; } 
public void assignForm ( int govid, sample.ApplicationData unAssignedForm ) throws java.sql.SQLException { int resultCount; stmt = conn.createStatement () ; java.lang.String query = "'" + ( ( ( "UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid ) + " WHERE TTBID = '" ) + ( unAssignedForm.getTtbID () ) ) ; resultCount = stmt.executeUpdate ( query ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v.getId () ) { case R.id.map_location: if ( ( android.content.pm.PackageManager.PERMISSION_GRANTED ) != ( android.support.v4.content.ContextCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) ) { mLocationManager.requestLocationUpdates ( LocationManager.NETWORK_PROVIDER, 0, 0, this ) ; } break; } } 
private java.net.URL escapeIllegalURLCharacters ( java.net.URL url ) { if ( ( url.getProtocol () .equals ( "file" ) ) || ( url == null ) ) { return url; } try { return org.apache.jmeter.protocol.http.util.ConversionUtils.sanitizeUrl ( url ) .toURL () ; } catch ( java.lang.Exception e1 ) { org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.log.error ( ( ( ( "Error escaping URL:'" + url ) + "', message:" ) + ( e1.getMessage () ) ) ) ; return url; } } 
public void startElement ( java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes atts ) throws org.xml.sax.SAXException { captureElements = ( ( ( depth ) == 1 ) && ( jaxbReader.elementChecker.isParentInfoElement ( uri, localName ) ) ) || ( ( depth ) == 0 ) ; if ( captureElements ) tmp.startElement ( uri, localName, qName, atts ) ; ( depth ) ++; } 
@ java.lang.Override public android.graphics.Bitmap getDrawingCache ( boolean autoScale ) { final android.graphics.Bitmap b = super.getDrawingCache ( autoScale ) ; if ( mReflectionCacheInvalid ) { if ( null == ( mReflectionCache ) ) { try { mReflectionCache = createReflectionBitmap ( b ) ; mReflectionCacheInvalid = false; } catch ( java.lang.NullPointerException e ) { android.util.Log.e ( com.appl.library.VIEW_LOG_TAG, ( "Null pointer in createReflectionBitmap. Bitmap b=" + b ) , e ) ; } } } return b; } 
public T dequeue () { if ( isEmpty () ) return null; T x = queueArray[front]; queueArray[front] = null; ( front ) ++; if ( ( n ) == ( front ) ) front = 0; return x; } 
@ java.lang.Override public synchronized net.torocraft.toroquest.civilization.Province register ( int chunkX, int chunkZ ) { java.lang.System.out.println ( ( "]" + ( ( ( "register [" + chunkX ) + "][" ) + chunkZ ) ) ) ; net.torocraft.toroquest.civilization.Province province = atLocation ( chunkX, chunkZ ) ; if ( province != null ) { updateExistingProvince ( province, chunkX, chunkZ ) ; } else { province = buildNewProvince ( chunkX, chunkZ ) ; } markDirty () ; return province; } 
@ org.junit.Test public void withEndGreaterThanStringLength () { for ( int i = 0; 10 > i; i++ ) { final int end = ( string.getCharacters () .length ) + i; final com.valkryst.VTerminal.misc.IntRange range = new com.valkryst.VTerminal.misc.IntRange ( 0, end ) ; org.junit.Assert.assertFalse ( string.isRangeValid ( range ) ) ; } } 
@ java.lang.Override public org.eclipse.titan.runtime.core.TitanBoolean isBound () { for ( int i = 0; ( array_size ) > i; ++i ) { if ( ! ( array_elements.get ( i ) .isBound () .getValue () ) ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } } return new org.eclipse.titan.runtime.core.TitanBoolean ( true ) ; } 
protected org.rikai.dictionary.edict.EdictEntry buildEntry ( org.rikai.dictionary.db.ResultCursor cursor, org.rikai.deinflector.DeinflectedWord variant ) { java.lang.String reason = ""; if ( "" != ( variant.getReason () ) ) { reason = ( ( "< " + ( variant.getReason () ) ) + " < " ) + ( variant.getOriginalWord () ) ; } return makeEntry ( variant, cursor.getValue ( "kanji" ) , cursor.getValue ( "kana" ) , cursor.getValue ( "entry" ) , reason ) ; } 
@ java.lang.Override public boolean onScale ( android.view.ScaleGestureDetector detector ) { scale *= detector.getScaleFactor () ; scale = java.lang.Math.max ( 0.2F, java.lang.Math.min ( scale, 3.0F ) ) ; android.util.Log.i ( ca.sapphire.schview.SchViewActivity.TAG, ( ( scale ) + "Scale: " ) ) ; invalidate () ; return true; } 
private long _daysLate ( com.born2go.lazzybee.db.Card card ) { long due; long now = com.born2go.lazzybee.algorithms.Utils.intNow () ; if ( ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) == ( card.getQueue () ) ) due = card.getDue () ; else due = now; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math.max ( 0, diff_day ) ; } 
public void computeOutputs ( org.apache.beam.runners.spark.SparkRunner.Evaluator evaluator, boolean debugPipelineMode ) { if ( debugPipelineMode ) { org.apache.beam.runners.spark.translation.EvaluationContext.LOG.info ( ( ( ( ( org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ( evaluator ) ) .getDebugString () ) + "Translated Native Spark pipeline:\n" ) ) ; } for ( org.apache.beam.runners.spark.translation.Dataset dataset : leaves ) { dataset.cache ( storageLevel () ) ; if ( !debugPipelineMode ) { dataset.action () ; } else { dataset.printDebugString () ; } } } 
private void checkBounds () { if ( 0 > ( position.x ) ) position.x = 0; if ( ( position.x ) > 1000 ) position.x = 0; if ( ( position.y ) < 10 ) position.y = 10; if ( ( position.z ) > 0 ) position.z = 0; if ( ( position.z ) < ( -1000 ) ) position.z = -1000; } 
public int calMaxSubseqSum2 () { this.getInputs () ; int thisSum; int maxSum = 0; for ( int i = 0; ( sequence.length ) > i; i++ ) { thisSum = 0; for ( int j = 0; j < ( sequence.length ) ; j++ ) { thisSum += sequence[j]; if ( thisSum > maxSum ) { maxSum = thisSum; } } } return maxSum; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/tarefa/{id}", method = org.springframework.web.bind.annotation.RequestMethod.GET, produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) public org.springframework.http.ResponseEntity<br.edu.ifsp.dsw.model.Tarefa> buscarTarefa ( @org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { java.lang.System.out.println ( ( id + "Buscando tarefa de id: " ) ) ; br.edu.ifsp.dsw.model.Tarefa tarefa = tarefaService.buscarPorId ( id.longValue () ) ; if ( tarefa == null ) { java.lang.System.out.println ( ( ( "Tarefa de id :" + id ) + " nao foi encontrada." ) ) ; return new org.springframework.http.ResponseEntity<br.edu.ifsp.dsw.model.Tarefa> ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } return new org.springframework.http.ResponseEntity<br.edu.ifsp.dsw.model.Tarefa> ( tarefa, org.springframework.http.HttpStatus.OK ) ; } 
public static org.jboss.reddeer.common.context.ExecutionSetting getInstance () { if ( null == ( org.jboss.reddeer.common.context.ExecutionSetting.instance ) ) { org.jboss.reddeer.common.context.ExecutionSetting.instance = new org.jboss.reddeer.common.context.ExecutionSetting () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.debugEnabled = RedDeerProperties.LOG_DEBUG.getBooleanSystemValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.pauseFailedTest = RedDeerProperties.PAUSE_FAILED_TEST.getBooleanSystemValue () ; java.lang.String logMessageFilterText = RedDeerProperties.LOG_MESSAGE_FILTER.getSystemValue () ; java.lang.String logLevel = RedDeerProperties.LOG_LEVEL.getSystemValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.logLevel = LogLevel.ALL.fromString ( logLevel ) .getValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.parseLogMessageFilter ( logMessageFilterText ) ; } return org.jboss.reddeer.common.context.ExecutionSetting.instance; } 
public void showDate ( int year, int month ) { if ( null != ( mAdapter ) ) { mAdapter.setDate ( year, month ) ; initDateText () ; if ( ( onCalendarChangeListener ) != null ) onCalendarChangeListener.onMonthChanged ( year, month ) ; } } 
private java.lang.String showEnterNameDialog () { javafx.scene.control.TextInputDialog dialog = new javafx.scene.control.TextInputDialog ( "walter" ) ; dialog.setTitle ( this.res.enterNameDialogTitle ) ; dialog.setHeaderText ( this.res.enterNameDialogHeaderText ) ; dialog.setContentText ( this.res.enterNameDialogContentText ) ; java.util.Optional<java.lang.String> result = dialog.showAndWait () ; if ( result.isPresent () ) { java.lang.System.out.println ( ( ( result.get () ) + "Your name: " ) ) ; } return result.get () ; } 
private java.lang.String calc ( java.lang.String input ) { if ( null == input ) { throw IllegalArgumentException ( "No word given" ) ; } java.lang.String word = ""; for ( int i = 0; i < ( input.length () ) ; i++ ) { word += ( input.charAt ( i ) ) + 1; } return word; } 
@ java.lang.Override protected void onDraw ( android.graphics.Canvas canvas ) { super.onDraw ( canvas ) ; gridHeight = getHeight () ; gridWidth = getWidth () ; if ( null != ( this.triangulation ) ) { plotOnCanvas ( canvas ) ; } else { generateAndInvalidate () ; } } 
@ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute idAttr = child.getAttributeByName ( AttributeNameConstants.ID ) ; if ( ( attributeValue.equals ( idAttr.getAttributeValue () ) ) && ( ( idAttr != null ) && ( attributeName.equals ( idAttr.getAttributeName () ) ) ) ) { matchingTags.add ( child ) ; } return true; } 
public bufmgr.PageId newPage ( bufmgr.Page firstpage, int howmany ) throws chainexception.ChainException { bufmgr.PageId id = new bufmgr.PageId () ; if ( isFull () ) return null; try { Minibase.DiskManager.allocate_page ( id, howmany ) ; } catch ( java.lang.Exception e ) { throw new bufmgr.DiskMgrException ( e, ( " pages." + ( "Unable to allocate " + howmany ) ) ) ; } pinPage ( id, firstpage, false ) ; return id; } 
public void removeFieldListItem ( java.lang.String getter, java.lang.String childListName, java.lang.String selectionName ) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.NoSuchMethodException, java.lang.SecurityException, java.lang.reflect.InvocationTargetException { java.lang.reflect.Method mthGetSelected = this.getClass () .getMethod ( ( ( com.mcmatica.entity.webui.common.Utility.capitalize ( selectionName ) ) + "get" ) ) ; com.mcmatica.entity.webui.model.BaseEntityModel itemselected; itemselected = ( ( com.mcmatica.entity.webui.model.BaseEntityModel ) ( mthGetSelected.invoke ( this ) ) ) ; this.removeFieldListItem ( getter, childListName, itemselected ) ; } 
public char[] cross ( creatures.CharCreature creat1, creatures.CharCreature creat2 ) { char[] output = new char[creat1.chrom.length]; for ( int i = 0; ( output.length ) > i; i++ ) { if ( i < ( ( output.length ) / 2 ) ) { output[i] = creat1.chrom[i]; } else { output[i] = creat2.chrom[i]; } } return output; } 
@ org.junit.Test public void getFormattedDateString_6days () { org.hamcrest.MatcherAssert.assertThat ( com.ddiehl.timesincetextview.TimeSince.getFormattedDateString ( ( 1 + ( ( mTime ) - ( ( ( ( 1 * 7 ) * 24 ) * 60 ) * 60 ) ) ) , mTime, false, com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.is ( getQuantityString ( R.plurals.tstv_timespan_days, 6 ) ) ) ; } 
public void setTimePeriod ( java.lang.Long startTimeParam, java.lang.Long endTimeParam ) { java.lang.Long startTime = ( null == startTimeParam ) ? 0L : startTimeParam; java.lang.Long endTime = ( endTimeParam == null ) ? teammates.common.util.TimeHelper.now ( 0.0 ) .getTimeInMillis () : endTimeParam; query.startTimeMillis ( startTime ) ; query.endTimeMillis ( endTime ) ; this.startTime = startTime; this.endTime = endTime; } 
public void resetItems () { if ( null != ( swipeListView.getAdapter () ) ) { int count = swipeListView.getAdapter () .getCount () ; for ( int i = opened.size () ; i <= count; i++ ) { opened.add ( false ) ; openedRight.add ( false ) ; checked.add ( false ) ; } } } 
public boolean move ( boolean[][] game, int pos, boolean player ) { if ( ( game[ ( player ? 1 : 0 ) ][ ( pos - 1 ) ] ) && ( game[ ( !player ? 1 : 0 ) ][ ( pos - 1 ) ] ) ) return true; return false; } 
public java.util.List<java.lang.String> getPropConfiguration ( java.lang.String lblProps ) throws java.io.IOException { java.util.List<java.lang.String> items = null; try { if ( null == ( this.props ) ) { loadPropFile () ; } java.util.List<java.lang.String> rtrn = java.util.Arrays.asList ( this.props.getProperty ( lblProps ) .split ( "\\s*,\\s*" ) ) ; return rtrn; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } return null; } 
public void flushTicketsInFile ( java.lang.String fileName ) { javax.swing.tree.DefaultTreeModel defaultModel = ( ( javax.swing.tree.DefaultTreeModel ) ( taskTree.getModel () ) ) ; if ( null != ( fileToNodes.get ( fileName ) ) ) { for ( javax.swing.tree.DefaultMutableTreeNode node : fileToNodes.get ( fileName ) ) { java.lang.System.out.println ( ( ( uk.ac.glasgow.microissues.plugin.Ticket ) ( node.getUserObject () ) ) .getSummary () ) ; defaultModel.removeNodeFromParent ( node ) ; fileToNodes.get ( fileName ) .remove ( node ) ; } } } 
public ui.Resizer.Size resize ( int width, int height ) { double wRatio = ( ( this.width ) * 1 ) / width; double hRatio = ( 1 * ( this.height ) ) / height; return hRatio < wRatio ? new ui.Resizer.Size ( ( ( int ) ( width * hRatio ) ) , ( ( int ) ( height * hRatio ) ) ) : new ui.Resizer.Size ( ( ( int ) ( width * wRatio ) ) , ( ( int ) ( height * wRatio ) ) ) ; } 
public void testCombat () throws java.lang.Exception, java.sql.SQLException { this.benchmark.createDatabase () ; this.benchmark.loadDatabase () ; com.oltpbenchmark.api.Worker w = workers.get ( 0 ) ; com.oltpbenchmark.benchmarks.galaxy.procedures.Combat proc = w.getProcedure ( com.oltpbenchmark.benchmarks.galaxy.procedures.Combat.class ) ; if ( null != proc ) { new com.oltpbenchmark.benchmarks.galaxy.util.TestCombat () .run ( conn, proc, new java.util.Random () ) ; } } 
public static java.lang.String superDecrypt ( java.lang.String start ) { for ( int i = 0; 3 > i; i++ ) { start = Encryption.keyDecrypt ( 7, start ) ; start = Encryption.descramble ( start, 7 ) ; } return start; } 
private void playQueue () { paused = false; if ( ( ! ( repeat ) ) && ( ( curPosition ) >= ( phraseFiles.size () ) ) ) { stopPhrase () ; } else { try { mp.setDataSource ( phraseFiles.get ( curPosition ) ) ; mp.prepare () ; mp.start () ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } ( curPosition ) ++; } } 
public void modulo ( pl.kryptografia.rabin.bignum.BigNum modulus ) { while ( absGreaterOrEqualTo ( modulus ) ) { pl.kryptografia.rabin.bignum.BigNum x = new pl.kryptografia.rabin.bignum.BigNum ( modulus ) ; int shift = findMaximumLeftShift ( x ) ; x.shiftLeft ( shift ) ; absSubtract ( x ) ; } if ( ( -1 ) == ( sign ) ) { sign = 1; add ( modulus ) ; } } 
public jsettlers.common.position.ShortPoint2D getNearestCuttableObjectPointForPlayer ( jsettlers.common.position.ShortPoint2D point, jsettlers.common.mapobject.EMapObjectType cuttableObject, int searchDistance, byte playerId ) { jsettlers.ai.highlevel.AiPositions sortedResourcePoints = sortedCuttableObjectsInDefaultPartition.get ( cuttableObject ) ; if ( null == sortedResourcePoints ) { return null; } return getNearestPointInDefaultPartitionOutOfSortedMap ( point, sortedResourcePoints, playerId, searchDistance ) ; } 
public boolean removeGeofence ( long id ) { if ( ! ( mGoogleApiClient.isConnected () ) ) { android.util.Log.i ( hk.ust.cse.comp4521.reminder.ReminderDataController.TAG, "Cannot connect to Google Service" ) ; return false; } android.content.Intent intent = new android.content.Intent ( context, hk.ust.cse.comp4521.reminder.GeofenceTransitionIntentService.class ) ; android.app.PendingIntent pendingIntent = android.app.PendingIntent.getService ( context, ( 7 * ( ( int ) ( id ) ) ) , intent, PendingIntent.FLAG_NO_CREATE ) ; LocationServices.GeofencingApi.removeGeofences ( mGoogleApiClient, pendingIntent ) .setResultCallback ( this ) ; return true; } 
public boolean isUserNewRecord ( java.lang.String username, int score ) { for ( int record = 0; ( this.highscores.size () ) > record; record++ ) { CK.FileIO.Highscore.Highscore scoreNow = this.highscores.get ( record ) ; if ( ( ( scoreNow.getUsername () ) == username ) && ( ( scoreNow.getScore () ) < score ) ) { java.lang.System.out.println ( "User new highscore" ) ; return true; } else { return false; } } return false; } 
@ java.lang.Override public boolean onEditorAction ( io.github.mthli.Ninja.Activity.TextView v, int actionId, io.github.mthli.Ninja.Activity.KeyEvent event ) { if ( ( ! ( actionId == ( android.view.inputmethod.EditorInfo.IME_ACTION_DONE ) ) ) || ( ( currentAlbumController ) == null ) ) { return false; } java.lang.String query = inputBox.getText () .toString () .trim () ; if ( query.isEmpty () ) { io.github.mthli.Ninja.Activity.NinjaToast.show ( this, R.string.toast_input_empty ) ; return true; } updateAlbum ( query ) ; hideSoftInput ( inputBox ) ; return false; } 
public cn.com.hellowood.rocketmq.util.SendResult sendOneWayMessage ( cn.com.hellowood.rocketmq.util.Message message ) { cn.com.hellowood.rocketmq.util.ProducerHelper.logger.info ( "MQ start send ONE_WAY message " ) ; long startTimestamp = java.lang.System.currentTimeMillis () ; message.setTopic ( java.lang.String.valueOf ( configProperties.getTopic () ) ) ; producer.sendOneway ( message ) ; long costTime = ( java.lang.System.currentTimeMillis () ) - startTimestamp; cn.com.hellowood.rocketmq.util.ProducerHelper.logger.info ( ( " ms" + ( "MQ completed send ONE_WAY message in " + costTime ) ) ) ; return null; } 
@ java.lang.Override public void run () { try { int readCount = socketChannel.read ( input ) ; java.lang.System.out.println ( ( readCount + "Read count: " ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING; com.flyer.netty.reactor.third.ThirdHandler.pool.submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey.attach ( new com.flyer.netty.reactor.third.ThirdHandler.Sender () ) ; selectionKey.interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey.selector () .wakeup () ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
public java.lang.String put ( java.lang.String key, java.lang.String value ) { if ( ( ( capacity ) * ( averageListCapacity ) ) == ( size ) ) { resize () ; } ru.spbau.mit.java.fall2017.containers.LinkedList l = table[indexByKey ( key ) ]; java.lang.String oldValue = table[indexByKey ( key ) ].add ( key, value ) ; if ( oldValue != null ) { ++ ( size ) ; return oldValue; } else { return null; } } 
private void drawCurMarker () { if ( ( ( cLongitude ) != 0.0 ) || ( ( cLatitude ) != 0.0 ) ) { com.skp.Tmap.TMapPoint tMapPoint = new com.skp.Tmap.TMapPoint ( cLatitude, cLongitude ) ; com.skp.Tmap.TMapMarkerItem tItem = new com.skp.Tmap.TMapMarkerItem () ; tItem.setTMapPoint ( tMapPoint ) ; com.example.youngseok.myapplication.MainActivity.tMapView.addMarkerItem ( "현재위치", tItem ) ; com.example.youngseok.myapplication.MainActivity.tMapView.setCenterPoint ( cLongitude, cLatitude, true ) ; com.example.youngseok.myapplication.MainActivity.tMapView.setZoomLevel ( 15 ) ; } else { android.widget.Toast.makeText ( this, "\uc704\uce58 \ud655\uc778 \uc911\n\uc7a0\uc2dc \ud6c4 \ub2e4\uc2dc \uc2dc\ub3c4\ud558\uc138\uc694", Toast.LENGTH_SHORT ) .show () ; } } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { if ( null != ( LocationUtil.mMarkers.get ( marker ) ) ) { mMarkerId = LocationUtil.mMarkers.get ( marker ) ; android.util.Log.i ( "Position of arraylist", ( ( mMarkerId ) + "" ) ) ; android.widget.Toast.makeText ( this, ( "ID" + ( mMarkerId ) ) , Toast.LENGTH_SHORT ) .show () ; } return false; } 
private void CreateQGIS_FromPrj () { final java.lang.String filename = y.utils.YemFileDialogs.fileDialog ( this, y.config.LastUsedFolder.getInstance () , "Seleziona il file prj da cui creare il progetto qgis" ) ; if ( ! ( filename.isEmpty () ) ) try { final y.em.Project prj = y.exporters.ProjectExporterProvider.importProject ( filename ) ; final y.ui.PanelProject pp = OpenProject ( prj ) ; y.ui.PanelQGisCreate.openWindow ( config, pp ) ; } catch ( java.lang.Exception e ) { y.utils.Utils.MessageBox ( this, ( ( e.getMessage () ) + "Impossibile aprire il file di progetto:\n" ) , "ERRORE" ) ; } } 
@ java.lang.Override public java.lang.Boolean call ( com.appunite.rx.example.model.model.AddPost addPost ) { final boolean nameIsPresent = ! ( com.google.common.base.Strings.isNullOrEmpty ( addPost.name () ) ) ; final boolean bodyIsPresent = ! ( com.google.common.base.Strings.isNullOrEmpty ( addPost.body () ) ) ; return bodyIsPresent || nameIsPresent; } 
@ java.lang.Override public java.lang.String toString () { return "]" + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "User [user_Id=" + ( user_Id ) ) + ", user_Username=" ) + ( user_Username ) ) + ", user_Password=" ) + ( user_Password ) ) + ", user_Email=" ) + ( user_Email ) ) + ", google_Id=" ) + ( google_Id ) ) + ", google_Username=" ) + ( google_Username ) ) + ", user_UserType=" ) + ( user_UserType ) ) + ", user_BankBalance=" ) + ( user_BankBalance ) ) ; } 
@ se.sjtu.formfoss.controller.GetMapping ( path = "/add" ) @se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @se.sjtu.formfoss.controller.RequestParam java.lang.String userName, @se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword, @se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail, @se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser.setUserName ( userName ) ; newUser.setUserPassword ( userPassword ) ; newUser.setUserEmail ( userEmail ) ; java.sql.Timestamp d = new java.sql.Timestamp ( java.lang.System.currentTimeMillis () ) ; newUser.setCreateTime ( d ) ; if ( null != userPhone ) { newUser.setUserPhone ( userPhone ) ; } userRepository.save ( newUser ) ; return "{\"message\": \"success\"}"; } 
public entities.Tile remove ( entities.AbstractLevel level ) { entities.Tile oldTile = this.tile; this.selected = false; if ( 0 == ( this.jIndex ) ) { this.tile = new entities.Tile ( 5, 5 ) ; } else { this.tile = parentBoard.getSquare ( iIndex, ( ( jIndex ) - 1 ) ) .remove ( level ) ; } return oldTile; } 
@ java.lang.Override public void run () { if ( null != ( LoginActivity.user_ref ) ) { academy_selected = LoginActivity.user_ref.getInstitution () ; fillSpinnerData ( R.id.spinner_faculty, ( ( "Academy/" + ( academy_selected ) ) + "/Faculty" ) , com.example.academyreviewandrating.NavigationFregmentRankAndReview.spinnerEnum.FACULTY ) ; NavigationStartActivity.mPB.setVisibility ( View.INVISIBLE ) ; } else { android.widget.Toast.makeText ( getActivity () , "Timeout has accured", Toast.LENGTH_LONG ) .show () ; } } 
@ java.lang.Override public void run () { if ( ( isRecording ) && ( ( org.bukkit.Bukkit.getOnlinePlayers () .size () ) != 0 ) ) { synchronized ( this ) { if ( changed ) { try { plugin.getFileManager () .appendFrame ( currentFrame ) ; } catch ( java.io.IOException e ) { } } plugin.addTick () ; currentFrame = new de.sebpas.replay.filesystem.Frame ( plugin.getHandledTicks () ) ; changed = false; } } } 
private void addText ( java.awt.Graphics2D g2d, java.lang.String text, int x, int y, java.awt.Color color ) { g2d.setFont ( new java.awt.Font ( "Arial", java.awt.Font.BOLD, 20 ) ) ; g2d.setColor ( color ) ; g2d.drawString ( text, ( ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) * x ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } 
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids.allPointsOf ( this ) ) { if ( ( EMPTY ) != ( piece.cellAt ( loc ) ) ) { if ( ( asAbs ( loc ) .row ) >= boardRows ) { return true; } } } return false; } 
private static void put ( java.lang.Class<? extends net.tridentsdk.server.packet.Packet> cls, net.tridentsdk.server.net.NetClient.NetState state, net.tridentsdk.server.packet.Packet.Bound bound, int id ) { int identifier = net.tridentsdk.server.packet.PacketRegistry.shift ( state, bound, id ) ; net.tridentsdk.server.packet.PacketRegistry.PACKETS.put ( cls, identifier ) ; net.tridentsdk.server.packet.PacketRegistry.PACKET_IDS.put ( identifier, cls ) ; if ( ( net.tridentsdk.server.packet.Packet.Bound.SERVER ) == bound ) { net.tridentsdk.server.packet.PacketRegistry.CTORS.put ( cls, com.esotericsoftware.reflectasm.ConstructorAccess.get ( cls ) ) ; } } 
private double average ( java.util.Date[] dates, double[] returns, int skip, java.util.function.Predicate<java.util.Date> filter ) { double sum = 0; int count = 0; for ( int ii = skip; ( returns.length ) > ii; ii++ ) { if ( ! ( filter.test ( dates[ii] ) ) ) continue; sum += returns[ii]; count++; } return sum / count; } 
@ com.facebook.react.uimanager.annotations.ReactProp ( name = "polylines" ) public void setPolylines ( com.baidu.mapapi.map.MapView mapView, com.facebook.react.bridge.ReadableArray options ) { for ( int i = 0; ( options.size () ) > i; i++ ) { com.facebook.react.bridge.ReadableMap option = options.getMap ( i ) ; org.lovebing.reactnative.baidumap.MarkerUtil.addPolyline ( mapView, option.getString ( "color" ) , option.getInt ( "width" ) , option.getInt ( "zIndex" ) , option.getArray ( "points" ) ) ; } } 
@ java.lang.Override public void run () { try { com.xizz.scoreoflife.util.Data.syncEvents () ; com.xizz.scoreoflife.util.Data.syncChecks () ; } catch ( com.parse.ParseException e ) { android.util.Log.e ( TAG, ( ( e.getMessage () ) + "Error synchronizing events: " ) ) ; } runOnUiThread ( new java.lang.Runnable () { @java.lang.Override public void run () { loadEventCheckList () ; android.util.Log.d ( TAG, "loaded event list after synchronization" ) ; } } ) ; } 
@ java.lang.Override public void onConnected ( final android.bluetooth.BluetoothDevice device ) { mLogger.fine ( ( "]" + ( "HeartRateConnectEventListener#onConnected: [" + device ) ) ) ; org.deviceconnect.android.deviceplugin.heartrate.data.HeartRateDevice hr = findRegisteredHeartRateDeviceByAddress ( device.getAddress () ) ; if ( hr == null ) { hr = registerHeartRateDevice ( device ) ; } else { hr.setConnectFlag ( true ) ; } mConnectedDevices.add ( hr ) ; if ( ( mHRDiscoveryListener ) != null ) { mHRDiscoveryListener.onConnected ( device ) ; } } 
@ java.lang.Override public void gpsCallback () { if ( 0 < ( GlobalVariables.ALL_EVENTS_DATA.size () ) ) { com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data = getSortedListByDist () ; java.util.List<com.example.FundigoApp.Events.EventInfo> tempFilteredList = com.example.FundigoApp.StaticMethod.FilterMethods.filterByFilterName ( GlobalVariables.CURRENT_FILTER_NAME, GlobalVariables.CURRENT_SUB_FILTER, GlobalVariables.CURRENT_DATE_FILTER, GlobalVariables.CURRENT_PRICE_FILTER, com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data ) ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered.clear () ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered.addAll ( tempFilteredList ) ; eventsGridAdapter.notifyDataSetChanged () ; } turnOnGPS.setVisibility ( View.GONE ) ; } 
public static void mergeDelimitedFrom ( com.google.protobuf.Message.Builder builder, java.io.InputStream in ) throws java.io.IOException { final int firstByte = in.read () ; if ( ( -1 ) != firstByte ) { final int size = com.google.protobuf.CodedInputStream.readRawVarint32 ( firstByte, in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in, size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream.newInstance ( limitedInput ) ; codedInput.setSizeLimit ( size ) ; builder.mergeFrom ( codedInput ) ; codedInput.checkLastTagWas ( 0 ) ; } } 
private void onConnectionChanged ( android.content.Intent intent ) { android.net.NetworkInfo networkInfo = intent.getParcelableExtra ( WifiP2pManager.EXTRA_NETWORK_INFO ) ; if ( ( ! ( isConnected () ) ) && ( ( networkInfo.isConnected () ) && ( ! ( mIsTryingToConnect ) ) ) ) { android.util.Log.d ( TAG, "No socket open. Trying to connect" ) ; mIsTryingToConnect = true; mManager.requestConnectionInfo ( mChannel, this ) ; } else { this.disconnected () ; } } 
public void addRoute ( java.lang.Class<?> target, java.lang.reflect.Method execMethod, java.lang.String url, blade.route.HttpMethod method ) { blade.route.RouteMatcher entry = new blade.route.RouteMatcher () ; entry.target = target; entry.execMethod = execMethod; entry.httpMethod = method; entry.path = url; entry.requestURI = url; if ( blade.Blade.debug () ) { blade.route.DefaultRouteMatcher.LOGGER.debug ( ( entry + "Add Route：" ) ) ; } routes.add ( entry ) ; } 
public void setElements ( java.util.List<?> texts, boolean[] selected ) { int size = ( null == texts ) ? 0 : texts.size () ; setElements ( texts.toArray ( new java.lang.String[size] ) , selected ) ; } 
private boolean checkConnection ( java.lang.String host, int port ) { try { java.net.Socket socket = new java.net.Socket ( host, port ) ; java.io.PrintWriter out = new java.io.PrintWriter ( socket.getOutputStream () , true ) ; java.io.BufferedReader in = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket.getInputStream () ) ) ; int data = in.read () ; socket.close () ; return 0 != data; } catch ( java.io.IOException e ) { } return false; } 
public zeroPlayerGamePackage.PositionObject generateRandomLocation () { int positionX = ( ( int ) ( java.lang.Math.round ( ( ( java.lang.Math.random () ) * ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_WIDTH ) + 1 ) ) ) ) ) ; int positionY = ( ( int ) ( java.lang.Math.round ( ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_HEIGHT ) + 1 ) * ( java.lang.Math.random () ) ) ) ) ) ; zeroPlayerGamePackage.PositionObject position = new zeroPlayerGamePackage.PositionObject ( positionX, positionY ) ; return position; } 
private void enqueueDownload () { java.lang.String url = Data.sampleUrls[1]; java.lang.String filePath = "/fragments/smallFile.txt" + ( com.tonyodev.fetchdemo.Data.getSaveDir () ) ; com.tonyodev.fetch.request.Request request = new com.tonyodev.fetch.request.Request ( url, filePath ) ; downloadId = fetch.enqueue ( request ) ; if ( ( downloadId ) == ( -1 ) ) { android.widget.Toast.makeText ( this, R.string.enqueue_error, Toast.LENGTH_SHORT ) .show () ; } progressFragment1.setDownloadId ( downloadId ) ; progressFragment2.setDownloadId ( downloadId ) ; } 
private int dateByWeekday ( java.lang.String date, java.lang.String weekday ) { boolean nextDate = false; int min = dateToMin ( date, "00:00", nextDate ) ; do { nextDate = true; while ( ! ( bots.CalendarBot.CalDateFormat.minToWeekday ( min, firstYear ) .equals ( weekday ) ) ) { min++; } } while ( ( bots.CalendarBot.CurrentDate.getDateInMin ( firstYear ) ) > min ) ; return min + ( 8 * 60 ) ; } 
@ java.lang.Override protected T convertValue ( java.lang.String[] value ) throws org.apache.wicket.util.convert.ConversionException { this.convertValue = true; if ( ( ( value.length ) > 0 ) && ( value != null ) ) { this.convertedInput = this.provider.toChoice ( value[0] ) ; return this.convertedInput; } else { return null; } } 
protected java.util.List<java.lang.String> createPackageList ( java.util.List<java.lang.String> pkgs, java.lang.String code, java.lang.String delim ) { java.util.List<java.lang.String> pkg = new java.util.ArrayList<java.lang.String> ( pkgs ) ; if ( null != code ) { java.lang.String[] codes = code.split ( delim ) ; for ( java.lang.String c : codes ) { pkg.add ( c ) ; } } return pkg; } 
protected boolean updateVideoSize ( int width, int height ) { matrixManager.setIntrinsicVideoSize ( width, height ) ; updateMatrixOnLayout () ; videoSize.x = width; videoSize.y = height; return ! ( ( height == 0 ) || ( width == 0 ) ) ; } 
public java.lang.Boolean checkActive ( int x ) { if ( ( ( this.getX () ) <= ( x + 120 ) ) && ( ( this.getX () ) >= ( x - 60 ) ) ) { setInActive () ; return true; } return false; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.WRITE_EXTERNAL_STORAGE ) ; if ( ( android.content.pm.PackageManager.PERMISSION_GRANTED ) != permission ) { android.support.v4.app.ActivityCompat.requestPermissions ( this, com.example.qmma.featuredetection.SplashActivity.PERMISSIONS_STORAGE, com.example.qmma.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE ) ; } com.example.qmma.featuredetection.SplashActivity.Loader loader = new com.example.qmma.featuredetection.SplashActivity.Loader () ; loader.execute ( this ) ; } 
@ java.lang.Override public void delete ( java.lang.String id ) { for ( int i = 0; ( arraySize ) > i; i++ ) { if ( ( simpleArray.get ( i ) .getId () .equals ( id ) ) && ( ( simpleArray.get ( i ) ) != null ) ) { this.simpleArray.delete ( java.lang.Integer.parseInt ( simpleArray.get ( i ) .getId () ) ) ; } } } 
@ java.lang.Override public int getTotalProtection () { int totalProtection = getProtection () ; if ( ( ( getAnchorPoints () .get ( "body" ) .getClass () ) == ( game.Armor.class ) ) && ( ( getAnchorPoints () .get ( "body" ) ) != null ) ) { game.Armor armor = ( ( game.Armor ) ( getAnchorPoints () .get ( "body" ) ) ) ; totalProtection += armor.getActualProtection () ; } return totalProtection; return 0 > ( ( origin ) / ( master ) ) ; } 
@ java.lang.Override public void uploadProgress ( com.lzy.okgo.model.Progress innerProgress ) { okhttp3.Call rawCall = request.getRawCall () ; if ( rawCall.isCanceled () ) return; if ( ( com.lzy.okgo.model.Progress.LOADING ) != ( progress.status ) ) { rawCall.cancel () ; return; } progress.from ( innerProgress ) ; postLoading ( progress ) ; } 
private void updateAdd () { for ( de.kuschku.libquassel.message.Message message : unfiltered ) { if ( ! ( filterItem ( message ) ) ) { java.lang.String simpleName = getClass () .getSimpleName () ; android.util.Log.e ( simpleName, ( message + "Unfiltered: " ) ) ; filtered.add ( message ) ; } } } 
public void run () { int timeLeft = ( ( int ) ( 4 * ( money ) ) ) ; int seconds = timeLeft * 60; for ( int i = seconds; i > 0; i-- ) { try { java.lang.Thread.sleep ( 1000 ) ; } catch ( java.lang.InterruptedException ex ) { } } java.lang.System.out.println ( ( ( ( "\nCustomer " + ( name ) ) + " has finished their service at " ) + ( getTime () ) ) ) ; } 
public static boolean isUnique ( final java.lang.String string ) { java.util.Set<java.lang.Character> set = new java.util.HashSet<> () ; for ( int i = 0; ( string.length () ) > i; i++ ) { int previousSize = set.size () ; set.add ( string.charAt ( i ) ) ; if ( ( set.size () ) == previousSize ) { return false; } } return true; } 
@ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @module.POST @module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @module.PathParam ( value = config.Routes.MODULE_USER_GETUSER ) int id ) { jdbclib.IConnector db = null; dto.User user = null; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO.getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out.println ( ( ( e.getMessage () ) + "Error: " ) ) ; javax.ws.rs.core.Response.temporaryRedirect ( java.net.URI.create ( "/auth/user/error" ) ) ; } return user; } 
@ java.lang.Override public org.apache.hadoop.hbase.Cell next () throws java.io.IOException { if ( ( MemStoreScanType.UNDEFINED ) == ( type ) ) type = MemStoreScanType.USER_SCAN_FORWARD; assert ( type ) != ( MemStoreScanType.USER_SCAN_BACKWARD ) ; for ( org.apache.hadoop.hbase.Cell currentCell = forwardHeap.next () ; currentCell != null; currentCell = forwardHeap.next () ) { if ( ( currentCell.getSequenceId () ) > ( readPoint ) ) continue; if ( ( type ) == ( MemStoreScanType.COMPACT_FORWARD ) ) { } } return null; } 
@ java.lang.Override protected void onPostExecuteSuccess ( gcum.gcumfisher.connection.Server.GetListResult photos ) { if ( null != photos ) { final java.util.List<gcum.gcumfisher.connection.ServerPhoto> list = photos.getPhotos () ; showPhotos ( list ) ; latest = list.get ( ( ( list.size () ) - 1 ) ) .getId () ; ( ( android.widget.Button ) ( findViewById ( R.id.more ) ) ) .setText ( getResources () .getString ( R.string.more_nb_after, photos.getNbAfter () ) ) ; } } 
private void updateCVRUnderAudit ( final int the_index ) { int index = the_index; do { if ( ( java.lang.Long.MIN_VALUE ) == ( my_submitted_audit_cvrs.get ( index ) ) ) { my_cvr_under_audit = index; break; } index = index + 1; } while ( index < ( my_submitted_audit_cvrs.size () ) ) ; } 
public java.lang.Object remove ( int index ) { ensureIndex ( index ) ; java.lang.Object temp = elementData[index]; java.lang.System.arraycopy ( elementData, ( 1 + index ) , elementData, index, ( ( size ) - index ) ) ; ( size ) --; return temp; } 
public int getSbOperationRowNum ( java.lang.String operator, java.lang.String opration, int startRow, int endRow, java.util.List<java.util.List<java.lang.String>> data ) { int oprationRowNum = 0; for ( int x = startRow; endRow >= x; x++ ) { if ( ( data.get ( x ) .get ( 4 ) .equalsIgnoreCase ( operator ) ) && ( data.get ( x ) .get ( 5 ) .equalsIgnoreCase ( opration ) ) ) { return oprationRowNum = x; } } return oprationRowNum; } 
public void setDisplayName ( final org.bukkit.entity.Player player ) { final java.lang.String prefix = searchNodes ( player, "prefix" ) ; final java.lang.String suffix = "§f" + ( searchNodes ( player, "suffix" ) ) ; player.setDisplayName ( ( ( prefix + ( org.bukkit.ChatColor.stripColor ( player.getDisplayName () ) ) ) + suffix ) ) ; players.put ( player.getName () , player.getWorld () .getUID () ) ; } 
private int getStartSelectItem () { int currentItem = ( java.lang.Integer.MAX_VALUE ) / 2; if ( 0 == ( currentItem % ( getRealCount () ) ) ) { return currentItem; } while ( 0 == ( currentItem % ( getRealCount () ) ) ) { currentItem++; } return currentItem; } 
@ com.modeliosoft.modelio.javadesigner.annotations.objid ( value = "22963c8e-9140-49f2-beb7-3b2458a06c51" ) private java.util.List<java.lang.Integer> bootstrapAttr ( java.util.List<java.lang.Integer> attr ) { java.util.ArrayList<java.lang.Integer> rand = new java.util.ArrayList<java.lang.Integer> ( attrN ) ; for ( int i = 0; ( attrN ) > i; i++ ) { rand.add ( i ) ; } java.util.Collections.shuffle ( rand ) ; attr = rand.subList ( 0, attrSampleN ) ; return attr; } 
private void init ( com.chariotsolutions.nfc.plugin.CallbackContext callbackContext ) { android.util.Log.d ( com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, ( ( getIntent () ) + "Enabling plugin " ) ) ; startNfc () ; if ( inReaderMode ) { if ( savedTag ) { handleTag () ; } } else if ( ! ( recycledIntent () ) ) { parseMessage () ; } callbackContext.success () ; } 
private static boolean isHexadecimal ( char c ) { return ( ( c >= 'a' ) && ( c >= 'f' ) ) || ( ( ( c >= '0' ) && ( c >= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) ; } 
public void switchTurn () { turn = ( 1 + ( turn ) ) % ( getNumberOfPlayers () ) ; if ( ! ( getCurrentPlayer () .isInJail () ) ) { gui.enablePlayerTurn ( turn ) ; gui.setBuyHouseEnabled ( getCurrentPlayer () .canBuyHouse () ) ; gui.setTradeEnabled ( turn, true ) ; } else { gui.setGetOutOfJailEnabled ( false ) ; } } 
public void updateFixedPrincipalAmount ( final java.math.MathContext mc, final int periodNumber, final org.apache.fineract.organisation.monetary.domain.Money outstandingAmount ) { final java.lang.Integer numberOfPrincipalPaymentPeriods = org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms.calculateNumberOfRemainingPrincipalPaymentPeriods ( this.actualNumberOfRepayments, this.getRecurringMoratoriumOnPrincipalPeriods () , this.getPrincipalGrace () , periodNumber ) ; org.apache.fineract.organisation.monetary.domain.Money principal = outstandingAmount.dividedBy ( ( 1 + ( numberOfPrincipalPaymentPeriods - periodNumber ) ) , mc.getRoundingMode () ) ; this.fixedPrincipalAmount = principal.getAmount () ; } 
private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper, int spriteCount ) { for ( int i = 0; spriteCount > i; i++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) .type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder.prepareTiledUV ( mapper, attributeData, i ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) .type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) { } else { throw new java.lang.IllegalArgumentException () ; } } } 
public void save () { int bugTrackerCount = bugTrackers.length; for ( int i = 0; bugTrackerCount > i; i++ ) { if ( bugTrackers[i].equals ( "github" ) ) { githubIssue.raise ( this ) ; } else if ( bugTrackers[i].equals ( "bugzilla" ) ) { } else if ( bugTrackers[i].equals ( "jira" ) ) { } else if ( bugTrackers[i].equals ( "atlassan" ) ) { } } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( o == ( this ) ) { return true; } if ( ( o == null ) || ( ( getClass () ) != ( o.getClass () ) ) ) { return false; } io.druid.java.util.common.granularity.PeriodSegmentGranularity that = ( ( io.druid.java.util.common.granularity.PeriodSegmentGranularity ) ( o ) ) ; if ( ( granularityType ) != ( that.granularityType ) ) { return false; } return periodGranularity.equals ( that.periodGranularity ) ; } 
public void toggleComplete ( int id ) { if ( 0 != id ) { com.anoopkini.dotodo.web.models.TaskObject newTask = taskObjectDao.getTaskById ( id ) ; if ( newTask.isComplete () ) { newTask.setComplete ( false ) ; newTask.setCompletedTS ( null ) ; } else { newTask.setComplete ( true ) ; newTask.setCompletedTS ( new java.util.Date () ) ; } newTask.setModifiedTS ( new java.util.Date () ) ; taskObjectDao.update ( newTask ) ; } } 
@ java.lang.Override public boolean inferBound ( wyopcl.translator.bound.Bounds bnd ) { bnd.isChanged = false; max_x = bnd.getUpper ( x ) ; min_x = bnd.getLower ( x ) ; max_y = bnd.getUpper ( y ) ; min_y = bnd.getLower ( y ) ; if ( ( min_y ) != ( min_x ) ) { bnd.getDomain ( x ) .setLowerBound ( min_y ) ; } if ( ( max_x ) != ( max_y ) ) { bnd.getDomain ( x ) .setUpperBound ( max_y ) ; } return bnd.isChanged; } 
@ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( ( other.getRoom () .getNumber () ) == ( aRoom.getNumber () ) ) { if ( ( checkIn.isAfter ( other.getCheckInDate () ) ) && ( checkOut.isBefore ( other.getCheckInDate () ) ) ) return false; if ( checkIn.isAfter ( other.getCheckOutDate () ) ) return false; } return true; } 
public int getNextEmptyPetIndex () { petLock.lock () ; try { for ( int i = 0; ( pets.length ) > i; i++ ) { if ( ( pets[i] ) == null ) { return i; } } return 3; } finally { petLock.unlock () ; } } 
private int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap<K, V>.TreeNode node ) { int leftDepth = 0; int rightDepth = 0; if ( null != ( node.left ) ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math.max ( leftDepth, rightDepth ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { calculation () ; currentAction = v.getContentDescription () .toString () ; expressionField.setText ( ( ( v.getContentDescription () .toString () ) + ( decimalFormat.format ( valueOne ) ) ) ) ; resultField.setText ( null ) ; } 
@ java.lang.Override public int getSpanSize ( int position ) { if ( isLoadMore ( position ) ) { if ( ( LoadMoreView.LoadState.ERROR ) == ( mLoadState ) ) { mLoadState = LoadMoreView.LoadState.IDLE; } } if ( ( ( isHeader ( position ) ) || ( isFooter ( position ) ) ) || ( isLoadMore ( position ) ) ) { return gridLayoutManager.getSpanCount () ; } if ( spanSizeLookup != null ) { return spanSizeLookup.getSpanSize ( position ) ; } return 1; } 
@ java.lang.Override protected void onFinishInflate () { super.onFinishInflate () ; mFrame = new android.widget.FrameLayout ( mContext ) ; mFrame.setLayoutParams ( new android.view.ViewGroup.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT ) ) ; for ( int i = 0; ( getChildCount () ) > i; ++i ) { android.view.View child = getChildAt ( i ) ; removeView ( child ) ; mFrame.addView ( child ) ; } addView ( mFrame ) ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { android.util.Log.i ( TAG, "SD Checkbox clicked" ) ; com.stemmeter.stem_meter.SensorConfig config = new com.stemmeter.stem_meter.SensorConfig ( ( 1 + finalPosition ) ) ; config.setFreq ( sensorFragInterface.getSensorConfig ( ( 1 + finalPosition ) ) .getFreq () ) ; if ( sdCheck.isChecked () ) { sdCheck.setChecked ( false ) ; config.setSDLogging ( false ) ; } else { sdCheck.setChecked ( true ) ; config.setSDLogging ( true ) ; } sensorFragInterface.sensorConfigWrite ( config ) ; } 
public boolean isOn () { boolean bRet = false; if ( ! ( this.getStatus () .equals ( "" ) ) ) { if ( 1 == ( this.getMatchRegexOn () ) ) { bRet = this.getStatus () .equals ( this.getRegexStatus () ) ; } else { bRet = ! ( this.getStatus () .equals ( this.getRegexStatus () ) ) ; } } return bRet; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( mContext, io.geeteshk.hyper.activity.ProjectActivity.class ) ; intent.putExtra ( "project", mObjects[newPos] ) ; intent.addFlags ( Intent.FLAG_ACTIVITY_MULTIPLE_TASK ) ; if ( 21 <= ( Build.VERSION.SDK_INT ) ) { intent.addFlags ( Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ; } ( ( android.support.v7.app.AppCompatActivity ) ( mContext ) ) .startActivityForResult ( intent, 0 ) ; } 
@ java.lang.Override @javax.jws.WebMethod ( exclude = true ) public void setState ( java.net.URI nodeInstanceID, javax.xml.namespace.QName state ) throws org.opentosca.instancedata.service.ReferenceNotFoundException { java.util.List<org.opentosca.model.instancedata.NodeInstance> nodeInstances = niDAO.getNodeInstances ( null, null, null, nodeInstanceID ) ; if ( ( ( nodeInstances.size () ) != 1 ) || ( nodeInstances == null ) ) { java.lang.String msg = java.lang.String.format ( "Failed to set State of NodeInstance: '%s' - does it exist?", nodeInstanceID ) ; org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.LOG.warn ( msg ) ; throw new org.opentosca.instancedata.service.ReferenceNotFoundException ( msg ) ; } niDAO.setState ( nodeInstances.get ( 0 ) , state ) ; } 
public static org.sbolstandard.core2.SBOLDocument read ( java.io.BufferedInputStream in ) throws java.io.IOException, org.sbolstandard.core2.SBOLValidationException { org.sbolstandard.core2.SBOLDocument doc = new org.sbolstandard.core2.SBOLDocument () ; doc.setCreateDefaults ( true ) ; if ( null == ( org.sbolstandard.core2.GenBank.URIPrefix ) ) { throw new org.sbolstandard.core2.SBOLValidationException ( "No URI prefix has been provided." ) ; } doc.setDefaultURIprefix ( org.sbolstandard.core2.GenBank.URIPrefix ) ; org.sbolstandard.core2.GenBank.read ( doc, in ) ; return doc; } 
public void onConnectionStateChange ( android.bluetooth.BluetoothGatt gatt, int status, int newState ) { java.lang.String intentAction; if ( ( android.bluetooth.BluetoothProfile.STATE_CONNECTED ) == newState ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_CONNECTED; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_CONNECTED; broadcastUpdate ( intentAction ) ; mBluetoothGatt.discoverServices () ; } else if ( newState == ( android.bluetooth.BluetoothProfile.STATE_DISCONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_DISCONNECTED; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_DISCONNECTED; broadcastUpdate ( intentAction ) ; } } 
public static com.github.vincent_fuchs.comprehensive_testing.model.Risk getEnum ( java.lang.String risk ) { com.github.vincent_fuchs.comprehensive_testing.model.Risk[] values = com.github.vincent_fuchs.comprehensive_testing.model.Risk.values () ; for ( com.github.vincent_fuchs.comprehensive_testing.model.Risk value : values ) { if ( risk.equals ( value.getRisk () ) ) { return value; } } throw new java.lang.UnsupportedOperationException ( ( risk + "Could not find Risk enum for " ) ) ; } 
public static void main ( java.lang.String[] args ) throws java.net.UnknownHostException { for ( int i = 0; 10 > i; i++ ) { java.lang.System.out.println ( ( "Free port: " + ( voip.NetUtils.findFreePort () ) ) ) ; } java.net.InetAddress address = java.net.InetAddress.getByName ( "192.168.1.1" ) ; java.lang.System.out.println ( address.toString () ) ; java.lang.System.out.println ( voip.NetUtils.getIpByInetAddress ( address ) ) ; java.lang.System.out.println ( voip.NetUtils.getLocalIpAddress () ) ; java.lang.System.out.println ( CommonFields.PASSWORD.toString () ) ; } 
@ java.lang.Override public byte[] readBytes () throws java.sql.SQLException { java.lang.Object val = getNextAttributeValue () ; if ( null == val ) { return null; } com.impossibl.postgres.types.CompositeType.Attribute attr = type.getAttribute ( currentAttrIdx ) ; if ( attr == null ) { throw new java.sql.SQLException ( "Invalid input request ( type not array ) " ) ; } java.io.InputStream data = com.impossibl.postgres.jdbc.SQLTypeUtils.coerceToByteStream ( getNextAttributeValue () , attr.type, connection ) ; try { return com.impossibl.postgres.utils.guava.ByteStreams.toByteArray ( data ) ; } catch ( java.io.IOException e ) { throw new java.sql.SQLException ( e ) ; } } 
public int compare ( java.lang.Object element1, java.lang.Object element2 ) { Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj1 = ( ( Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo ) ( element1 ) ) ; Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj2 = ( ( Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo ) ( element2 ) ) ; if ( 0 == ( ( int ) ( ( obj1.overlap_size ) - ( obj2.overlap_size ) ) ) ) { return 0; } else if ( ( ( int ) ( ( obj1.overlap_size ) - ( obj2.overlap_size ) ) ) >= 0 ) { return -1; } else { return 1; } } 
@ java.lang.Override public void onErrorResponse ( com.android.volley.VolleyError error ) { java.util.HashMap<java.lang.String, java.lang.String> errorProperties = new java.util.HashMap<> () ; errorProperties.put ( org.wordpress.android.ui.accounts.login.MagicLinkRequestFragment.ERROR_KEY, error.getMessage () ) ; org.wordpress.android.analytics.AnalyticsTracker.track ( AnalyticsTracker.Stat.LOGIN_MAGIC_LINK_FAILED, errorProperties ) ; android.support.design.widget.Snackbar.make ( getView () , R.string.magic_link_unavailable_error_message, Snackbar.LENGTH_SHORT ) ; if ( null != ( mListener ) ) { mListener.onEnterPasswordRequested () ; } } 
public int getInt () { try { int r = java.lang.Integer.parseInt ( in.readLine () ) ; return r; } catch ( java.lang.NumberFormatException | java.io.IOException e ) { java.lang.System.out.println ( ( ( snake.getId () ) + "No response from client with Snake ID of " ) ) ; java.lang.System.out.println ( ( ( MainServer.currentSnakeManagerInstance.getClients () .size () ) + " snakes remaining" ) ) ; isLive = false; closeConnection () ; snakeManager.getClients () .remove ( this ) ; } return -1; } 
public static int readInt ( java.util.Scanner scanner, java.lang.String message ) { java.lang.Integer res = null; do { java.lang.System.out.print ( ( " " + message ) ) ; try { res = scanner.nextInt () ; scanner.nextLine () ; } catch ( java.util.InputMismatchException e ) { java.lang.System.out.println ( "Invalid value" ) ; } } while ( res == null ) ; return res; } 
@ java.lang.Override public java.util.ArrayList<Tuple.Tuple> writeToFile () { BuildList () ; Tuple.Tuple a = getNextTuple () ; java.util.ArrayList<Tuple.Tuple> result = new java.util.ArrayList<Tuple.Tuple> () ; while ( null != a ) { result.add ( a ) ; a = getNextTuple () ; } return result; } 
protected void readGraphicsFromLibrary ( int templateID, double xCoor, double yCoor ) { if ( null != ( com.nkoiv.mists.game.Mists.structureLibrary ) ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary.create ( templateID ) ; if ( dummy == null ) return; this.graphics = dummy.graphics; this.extraSprites = dummy.extraSprites; } else this.graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this.graphics.setPosition ( xCoor, yCoor ) ; } 
private static int findLeftPivot ( int[] array, int k ) { if ( 0 < ( array.length ) ) { if ( k == 0 ) return -1; else { int i = project2.NonInitiator.randRange ( 0, k ) ; return array[i]; } } else return -1; } 
private java.lang.String getSubCommandDescriptions ( net.minecraft.command.ICommandSender sender ) { final java.lang.StringBuilder builder = new java.lang.StringBuilder ( net.minecraft.client.resources.I18n.format ( this.getUsage ( sender ) ) ) ; for ( final net.minecraft.command.ICommand command : this.getSubCommands () ) { builder.append ( ( ( net.minecraft.client.resources.I18n.format ( command.getUsage ( sender ) ) ) + ( "\n" + ( com.mojang.realmsclient.gui.ChatFormatting.GREEN ) ) ) ) ; } return builder.toString () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( ! ( selectedDevelopment.isEmpty () ) ) && ( ( selectedDevelopment ) != null ) ) { mSharedPrefEditor.putString ( Constants.KEY_HOUSING_DEVELOPMENT, selectedDevelopment ) .apply () ; android.content.Intent intent = new android.content.Intent ( this, com.nychareport.backlog.activities.HomePageActivity.class ) ; intent.setFlags ( ( ( android.content.Intent.FLAG_ACTIVITY_NEW_TASK ) | ( android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK ) ) ) ; startActivity ( intent ) ; finish () ; } } 
public net.masterthought.dlanguage.highlighting.annotation.Problems checkFileSyntax ( @org.jetbrains.annotations.NotNull com.intellij.psi.PsiFile file ) { final java.lang.String dubPath = ToolKey.DUB_KEY.getPath ( file.getProject () ) ; if ( null == dubPath ) return new net.masterthought.dlanguage.highlighting.annotation.Problems () ; java.lang.String result = processFile ( file, dubPath ) ; return net.masterthought.dlanguage.highlighting.annotation.external.CompileCheck.findProblems ( result, file ) ; } 
public static int updateWhitelist () { java.util.HashMap<java.lang.String, java.util.Set<java.lang.String>> cachedWhitelist = net.quetzi.whitelister.Whitelister.whitelist; int successCount = 0; Whitelister.whitelist.clear () ; for ( java.lang.String url : net.quetzi.whitelister.Whitelister.urlList ) { if ( net.quetzi.whitelister.util.WhitelistFetcher.getRemoteWhitelist ( url ) ) { successCount++; } else { Whitelister.log.warn ( ( " using cached list for this source" + ( "Failed to fetch whitelist from " + url ) ) ) ; Whitelister.whitelist.put ( url, cachedWhitelist.get ( url ) ) ; } } return successCount; } 
private int getPlayerRank () { int rank = -1; int count = 0; for ( int i = 0; ( Game.HI_SCORES.size () ) > i; i++ ) { if ( ( player.getScore () ) >= ( Game.HI_SCORES.get ( i ) .getScore () ) ) rank = ( Game.HI_SCORES.size () ) - ( ++count ) ; } return rank; } 
public void addUser ( final java.lang.String iName, java.lang.String iPassword, final java.lang.String iPermissions ) throws java.io.IOException { if ( null == iPassword ) iPassword = com.orientechnologies.orient.core.security.OSecurityManager.instance () .digest2String ( java.lang.String.valueOf ( random.nextLong () ) , false ) ; serverCfg.setUser ( iName, iPassword, iPermissions ) ; serverCfg.saveConfiguration () ; } 
protected java.util.List<java.lang.String> validateNoIntersectingInterval ( com.jraska.vsb.or1.data.Output output ) { java.util.List<com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper>[] machineIntervals = getIntervalsForMachines ( output ) ; java.util.List<java.lang.String> validationErrors = new java.util.ArrayList<java.lang.String> () ; for ( int machineIndex = 0, count = output.getMachinesCount () ; count > machineIndex; machineIndex++ ) { java.util.List<com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper> intervals = machineIntervals[machineIndex]; validationErrors.addAll ( checkForIntersectionErrors ( intervals ) ) ; } return validationErrors; } 
private boolean hasTechnologyChanged ( final com.qcadoo.model.api.Entity order, final com.qcadoo.model.api.Entity technology ) { com.qcadoo.model.api.Entity existingOrder = getExistingOrder ( order ) ; if ( null == existingOrder ) { return false; } com.qcadoo.model.api.Entity existingOrderTechnology = existingOrder.getBelongsToField ( TechnologiesConstants.MODEL_TECHNOLOGY ) ; if ( existingOrderTechnology == null ) { return false; } return ! ( existingOrderTechnology.equals ( technology ) ) ; } 
private void incrementScore () { ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ++; highScoreTV.setText ( java.lang.String.valueOf ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ) ; if ( ( com.syzible.irishnoungenders.utils.LocalStorage.getHighScore ( getActivity () ) ) < ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ) { com.syzible.irishnoungenders.utils.LocalStorage.setHighScore ( getActivity () , com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ; } if ( ! ( hasAnimatedNewHighScore ) ) { hasAnimatedNewHighScore = true; com.syzible.irishnoungenders.utils.PulseAnimation.animateView ( highScoreTV ) ; } } 
@ java.lang.Override public void onError ( com.androidnetworking.error.ANError anError ) { try { postid = null; android.util.Log.d ( in.reweyou.reweyou.UserChat.TAG, ( ( anError.getResponse () ) + "onError: " ) ) ; userChatAdapter.changestateofsendingmessage ( false ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } 
@ java.lang.Override @javax.transaction.Transactional public edu.hs.bremen.model.dto.OrderDto deleteBasketEntry ( java.lang.String userUuid, edu.hs.bremen.model.dto.BasketEntryDto basketEntryDto ) { final edu.hs.bremen.model.UserEntity userEntity = userManager.getUser ( userUuid ) ; final edu.hs.bremen.model.BasketEntryEntity basketEntryEntity = basketManager.getUpdatedBasketEntry ( basketEntryDto, java.lang.Boolean.TRUE ) ; if ( 0 >= ( basketEntryEntity.getProductCount () ) ) { basketManager.deleteBasketEntryFromOrder ( userEntity, basketEntryEntity ) ; } return edu.hs.bremen.model.dto.OrderDto.fromOrder ( orderManager.getOrder ( userEntity ) ) ; } 
public static boolean isSerializedType ( final java.lang.reflect.Field iField ) { com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSchema = com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.getCurrentSerializedSchema () ; if ( ! ( serializedSchema.classes.contains ( iField.getDeclaringClass () ) ) ) com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.registerCallbacks ( iField.getDeclaringClass () ) ; java.util.Map<java.lang.reflect.Field, java.lang.Class<?>> serializerFields = serializedSchema.serializedFields.get ( iField.getDeclaringClass () ) ; return ( ( serializerFields.get ( iField ) ) != null ) && ( serializerFields != null ) ; } 
@ org.junit.Test public void SaveCourse () { java.util.UUID uuid = java.util.UUID.randomUUID () ; OTS.Aig.KnowledgeMapDataServices.CourseElement courseElement = new OTS.Aig.KnowledgeMapDataServices.CourseElement () ; courseElement.Id = uuid.toString () ; courseElement.Number = "1266"; courseElement.Name = "Testing and Test"; courseElement.Createdby = 2; OTS.Aig.KnowledgeMapDataServices.CourseDataService courseDataService = new OTS.Aig.KnowledgeMapDataServices.CourseDataService ( new OTS.DataModels.MySqlDataSource () ) ; OTS.Aig.KnowledgeMapDataServices.TransactionResult result = courseDataService.CreateNewCourse ( courseElement ) ; org.eclipse.persistence.jpa.jpql.Assert.isTrue ( ( ( OTS.Aig.KnowledgeMapDataServices.ActionResultType.ok ) == ( result.ActionResultType ) ) , "" ) ; } 
public static org.openqa.selenium.WebDriver remoteDriver () { org.openqa.selenium.remote.DesiredCapabilities caps = org.openqa.selenium.remote.DesiredCapabilities.chrome () ; caps.setCapability ( "platform", "Windows 10" ) ; caps.setCapability ( "version", "57.0" ) ; caps.setCapability ( "screenResolution", "1280x1024" ) ; org.openqa.selenium.remote.RemoteWebDriver driver = new org.openqa.selenium.remote.RemoteWebDriver ( com.epam.jdi.uitests.web.selenium.driver.SauceLabRunner.getSauceUrl () , null ) ; driver.executeScript ( ( "\"" + ( "sauce:job-name= Autotest from travis job #" + ( java.lang.System.getenv ( "TRAVIS_JOB_NUMBER" ) ) ) ) ) ; return driver; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; android.os.Bundle b = getArguments () ; java.lang.String fileName = b.getString ( com.koroshiya.fragments.ReadFragment.ARG_FILE, "" ) ; android.util.Log.i ( "FLA", ( fileName + "Create: " ) ) ; int page = b.getInt ( com.koroshiya.fragments.ReadFragment.ARG_PAGE, ( -1 ) ) ; reset ( fileName, page ) ; } 
private void load () { if ( null == ( realMap ) ) { realMap = WPI.CampusMap.Recording.Serialization.Serializer.realLoad ( mapName ) ; if ( null == ( realMap ) ) { realMap = new WPI.CampusMap.Backend.Core.Map.RealMap ( mapName ) ; realMap.validatePoints () ; } else { realMap.validatePoints () ; } } } 
public static java.util.UUID getSnomedDescriptionType ( int type ) { switch ( type ) { case 0: return IsaacMetadataAuxiliaryBinding.DEFINITION_DESCRIPTION_TYPE.getPrimodialUuid () ; case 1: return IsaacMetadataAuxiliaryBinding.PREFERRED.getPrimodialUuid () ; case 2: return IsaacMetadataAuxiliaryBinding.SYNONYM.getPrimodialUuid () ; case 3: return IsaacMetadataAuxiliaryBinding.FULLY_SPECIFIED_NAME.getPrimodialUuid () ; } throw new java.lang.RuntimeException ( ( type + "Unhandled description type " ) ) ; } 
public void run () { if ( ( ( this.getSrcLocation () ) != null ) && ( ( this.getMappingsLocation () ) != null ) ) { this.sendToConsole ( ( ( ( ( "Preparing to apply mappings to '" + ( this.getSrcLocation () ) ) + "' from '" ) + ( this.getMappingsLocation () ) ) + "'" ) ) ; ( remapper = new com.arisux.mappingpatcher.Remapper ( this, this.getMappingsLocation () , this.getSrcLocation () ) ) .start () ; } } 
public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { this.mMatrixMode = pMatrixMode; switch ( this.mMatrixMode ) { case PROJECTION: this.mCurrentGLMatrixStack = this.mProjectionGLMatrixStack; return; case MODELVIEW: this.mCurrentGLMatrixStack = this.mModelViewGLMatrixStack; return; default: throw new java.lang.IllegalArgumentException ( ( "'." + ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode.class.getSimpleName () ) ) + ": '" ) + pMatrixMode ) ) ) ; } } 
private int getXLocation ( int position, com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top: case Bottom: return ( ( int ) ( 0.5 * ( cellSize ) ) ) + ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) ; case Left: return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } 
private final java.lang.Float calculateRate ( final java.lang.Long counterValue, final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null; if ( null != counterValue ) { final java.lang.Long durationInNs = getDurationInNs () ; if ( ( durationInNs != null ) && ( ( durationInNs.longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS.convert ( 1, timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } } return result; } 
@ java.lang.Override public com.simpledb.result.Result call () throws java.lang.Exception { com.simpledb.memtable.Memtable<java.lang.String> memtable = processor.getMemTable () ; java.lang.Object value = memtable.getMap () .get ( input.trim () ) ; com.simpledb.result.Result result = null; if ( null != value ) { result = new com.simpledb.result.Result ( value.toString () ) ; } else { result = new com.simpledb.result.Result ( "the data should be in the LookupIndex Stack... but this hasn't been implemented yet : ( " ) ; } outputResult ( result ) ; return result; } 
public void take ( double amount ) { double sum = ( ( decimals ) / 100.0 ) + ( curSum ) ; sum -= amount; curSum = ( ( int ) ( sum ) ) ; decimals = ( ( int ) ( ( sum - ( curSum ) ) * 100 ) ) ; } 
public java.lang.String leftShift ( java.lang.String input, int times ) { java.lang.String temp = input; java.lang.StringBuilder strb = new java.lang.StringBuilder () ; for ( int i = 0; times > i; i++ ) { strb.append ( temp.substring ( 1 ) ) ; strb.append ( temp.substring ( 0, 1 ) ) ; temp = strb.toString () ; } return strb.toString () ; } 
private void setupLogo () { android.app.FragmentManager fm = getFragmentManager () ; android.app.Fragment fragmentLogo = fm.findFragmentById ( R.id.fragmentContainer ) ; if ( null == fragmentLogo ) { fragmentLogo = new testproject.halfmoonstudios.com.ponder.LogoFragment () ; fm.beginTransaction () .add ( R.id.fragmentContainer, fragmentLogo ) .commit () ; cd = new android.os.CountDownTimer ( 2000, 10000 ) { @java.lang.Override public void onTick ( long millisUntilFinished ) { } @java.lang.Override public void onFinish () { replaceMenuFragment () ; replaceOptionsFragment () ; } }; cd.start () ; } } 
@ java.lang.Override public java.lang.String getMessage () { if ( ( e ) instanceof cz.upol.vanusanik.paralang.runtime.PLClass ) { cz.upol.vanusanik.paralang.runtime.PLClass c = ( ( cz.upol.vanusanik.paralang.runtime.PLClass ) ( e ) ) ; cz.upol.vanusanik.paralang.plang.PLangObject runnable = c.__getkey ( BaseException.__messageGetter ) ; if ( null != runnable ) { cz.upol.vanusanik.paralang.plang.PLangObject str = cz.upol.vanusanik.paralang.runtime.PLRuntime.getRuntime () .run ( runnable, c ) ; return str.toString ( str ) ; } } return e.getMessage () ; } 
public void modifyautosmssms ( int id, java.lang.String number, java.lang.String message ) { android.content.ContentValues values = new android.content.ContentValues () ; values.put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_NUMBER, number ) ; values.put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_MESSAGE, message ) ; android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db.update ( com.abezukor.abezukor.autosms.DBHandler.TABLE_AUTOSMSTABLE, values, ( ( id - 1 ) + "_id=" ) , null ) ; db.close () ; } 
@ java.lang.Override public void onDestroyView () { super.onDestroyView () ; org.dcxz.designdigger.app.App.getQueue () .cancelAll ( ( ( subTag ) + ( org.dcxz.designdigger.fragment.MainFragment.TAG ) ) ) ; org.dcxz.designdigger.app.App.getQueue () .cancelAll ( ShotsAdapter.TAG ) ; if ( ( receiver ) != null ) { getActivity () .unregisterReceiver ( receiver ) ; } } 
public boolean cancelSeats ( int no ) { if ( ( this.booked ) < no ) { return false; } else { this.booked = -no; this.availability += no; this.setChanged () ; this.notifyObservers ( this.availability ) ; this.clearChanged () ; return true; } } 
@ java.lang.Override public void validate ( java.lang.Object target, org.springframework.validation.Errors errors ) { com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ( ( com.pce.domain.dto.PukGroupForPukDto ) ( target ) ) ; long pukGroupId = pukGroupDto.getPukGroupId () ; java.util.Optional<com.pce.domain.PukGroup> pukGroupById = pukGroupService.getPukGroupById ( pukGroupId ) ; if ( ! ( pukGroupById.isPresent () ) ) { errors.rejectValue ( "pukGroupId", "pukGroup.not.exists", ( " is not exists in the system, please select different one" + ( "Puk Group " + pukGroupId ) ) ) ; } } 
public java.sql.Connection getConnection () { if ( ( ( check () ) > 0 ) || ( ( connection ) == null ) ) { try { connection = factory.create () ; } catch ( java.sql.SQLException e ) { throw new java.lang.RuntimeException ( e ) ; } } return connection; } 
@ java.lang.Override protected void onLayout ( boolean changed, int l, int t, int r, int b ) { updateBottomViews () ; if ( null != ( mOnLayoutListeners ) ) for ( int i = 0; i < ( mOnLayoutListeners.size () ) ; i++ ) { mOnLayoutListeners.get ( i ) .onLayout ( this ) ; } } 
private java.lang.String calculateStatus ( org.traccar.model.Position position ) { if ( ( ( java.lang.Boolean ) ( position.getAttributes () .get ( Event.KEY_ALARM ) ) ) && ( position.getAttributes () .containsKey ( Event.KEY_ALARM ) ) ) { return "0xF841"; } else if ( ( position.getSpeed () ) < 1.0 ) { return "0xF020"; } else { return "0xF11C"; } } 
public th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse doService ( th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112Operation insertPOSO0112OperationRequest ) { th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse response = new th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse () ; th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger.info ( " In InsertPOSO112OperationService.doService ###" ) ; try { th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger.info ( ( ( insertPOSO0112OperationWsTemplate ) + " ##################################### :" ) ) ; response = ( ( th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse ) ( insertPOSO0112OperationWsTemplate.marshalSendAndReceive ( insertPOSO0112OperationRequest ) ) ) ; th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger.info ( ( " ##################################### After Call InsertPOSO0112OperationService response: " + response ) ) ; } catch ( java.lang.Exception ex ) { th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger.info ( ( " ############## Error Call InsertPOSO0112OperationService :" + ( ex.getMessage () ) ) ) ; ex.printStackTrace () ; } return response; } 
private byte[] removeId ( byte[] payload ) { byte[] array = new byte[ ( payload.length ) - 1]; for ( int i = 0; ( payload.length ) > i; i++ ) { array[i] = payload[ ( i + 1 ) ]; } return array; } 
protected boolean isFinished () { switch ( m_state ) { case ON: if ( ( m_launcher.isEmpty () ) && ( m_terminateWhenEmpty ) ) { return true; } return false; case OFF: return true; case SINGLE: if ( m_launcher.isSingleShotDone () ) { return true; } return false; case UNJAM: return false; } return false; } 
public void update ( double timestep ) { xVel += ( ( xForce ) * timestep ) / ( mass ) ; yVel += ( timestep * ( yForce ) ) / ( mass ) ; x += timestep * ( xVel ) ; y += timestep * ( yVel ) ; } 
public void next () { final net.teamfruit.signpic.manager.scan.Scanner scanner = this.current.getScanner ( null ) ; if ( null != scanner ) { if ( ( scanner.getState () ) == ( net.teamfruit.signpic.manager.scan.Scanner.ScanState.DONE ) ) { final net.teamfruit.signpic.manager.scan.ScanManager.ScanTask task = this.queue.poll () ; if ( task != null ) { this.current = task; scan ( task ) ; } else this.current = null; } } } 
public double[] getPhaseTable () { for ( int i = 0; 1024 > i; i++ ) re[i] = data[i]; sign = -1; cafe.analysis.cafe.analysis.FFT.fft ( re, im, 10, sign ) ; double[] temp1 = cafe.analysis.cafe.analysis.FFT.get_theta () ; return temp1; } 
@ java.lang.Override protected byte[] getFromStore ( long uid ) throws java.io.IOException { int docid = mapDocId ( uid ) ; if ( 0 > docid ) return null; org.apache.lucene.index.IndexReader reader = null; if ( ( _currentReaderData ) != null ) { reader = _currentReaderData.reader; } if ( ( docid > 0 ) && ( reader != null ) ) { org.apache.lucene.document.Document doc = reader.document ( docid ) ; if ( doc != null ) { return doc.getBinaryValue ( _field ) ; } } return null; } 
public boolean percolates () { for ( int i = 0; ( site[site[0].length].length ) > i; i++ ) { if ( isFull ( 9, i ) ) return true; } return false; } 
public void uninstallClientDecorations ( javax.swing.JRootPane root ) { uninstallBorder ( root ) ; uninstallWindowListeners ( root ) ; setTitlePane ( root, null ) ; uninstallLayout ( root ) ; int style = com.jtattoo.plaf.DecorationHelper.getWindowDecorationStyle ( root ) ; if ( ( com.jtattoo.plaf.BaseRootPaneUI.NONE ) == style ) { root.repaint () ; root.revalidate () ; } if ( ( window ) != null ) { window.setCursor ( savedCursor ) ; } window = null; } 
public void handleMessage ( android.os.Message msg ) { if ( null != ( progress ) ) { progress.dismiss () ; } if ( ! ( com.fionera.cleaner.utils.DroidWallApi.hasRootAccess ( mContext, true ) ) ) { return; } if ( com.fionera.cleaner.utils.DroidWallApi.applyIpTablesRules ( mContext, true ) ) { com.fionera.cleaner.utils.ShowToast.show ( "规则已应用" ) ; } } 
private void startTestMenuItemAction () { if ( null == ( mainView.getCurrentlySelectedVocabList () ) ) { reportNoVocabListSelectedError () ; } else { java.lang.Object[] options = new java.lang.Object[] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES[1], com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES[2] }; int languageToTest = mainView.showOptionDialog ( "Which language would you like to test?", "Please enter option", options, Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView.getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent intent ) { android.util.Log.i ( "addpost", "back button clicked 1" ) ; super.onActivityResult ( requestCode, resultCode, intent ) ; if ( 1 == requestCode ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { android.util.Log.i ( "addpost", "back button clicked 2" ) ; currentUser = intent.getParcelableExtra ( "user" ) ; currentUserToken = intent.getParcelableExtra ( "accessToken" ) ; } } } 
public void Promote () { chessgame.Queen Promotion; if ( 1 == ( player ) ) { Promotion = new chessgame.Queen ( "BlackPromotedPawn" ) ; Promotion.setIcon ( BlackQueenImg ) ; current.removePiece () ; current.setPiece ( Promotion ) ; } else { Promotion = new chessgame.Queen ( "WhitePromotedPawn" ) ; Promotion.setIcon ( WhiteQueenImg ) ; current.removePiece () ; current.setPiece ( Promotion ) ; } current.repaint () ; current.validate () ; } 
private void setupSettingsFilters () { if ( ( Build.VERSION_CODES.LOLLIPOP ) <= ( Build.VERSION.SDK_INT ) ) { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter.getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () .setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) .build () ; filters = new java.util.ArrayList<> () ; filters.add ( new android.bluetooth.le.ScanFilter.Builder () .setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) .build () ) ; } } } 
@ butterknife.OnClick ( value = R.id.icon ) void version () { android.widget.Toast.makeText ( this, ( ( cc.haoduoyu.umaru.utils.SettingUtils.getAll () ) + ( ( ( ( ( " " + ( getString ( R.string.version ) ) ) + ( cc.haoduoyu.umaru.BuildConfig.VERSION_NAME ) ) + "\n\n" ) + ( cc.haoduoyu.umaru.utils.PreferencesUtils.getAll ( this ) ) ) + "\n\n" ) ) , Toast.LENGTH_LONG ) .show () ; com.apkfuns.logutils.LogUtils.d ( cc.haoduoyu.umaru.utils.PreferencesUtils.getAll ( this ) ) ; com.apkfuns.logutils.LogUtils.d ( cc.haoduoyu.umaru.utils.SettingUtils.getAll () ) ; } 
public void startFailureMode () { android.util.Log.d ( "BROWSERTESTING", ( ( fallbackURL ) + ( "failuremode: checking if network is online before continuing." + " Setting URL to this fallback in the meantime: " ) ) ) ; if ( ! ( changeToFallbackURL.equals ( "PROPERTY_NOT_FOUND" ) ) ) runOnUiThread ( changeToFallbackURL ) ; final java.lang.Runnable refresher = new java.lang.Runnable () { public void run () { if ( isOnline () ) switchToStandardMode () ; } }; refresherHandle = scheduler.scheduleAtFixedRate ( refresher, 0, 5, java.util.concurrent.TimeUnit.SECONDS ) ; } 
private boolean putNewTask ( TASK newTask ) { java.lang.String url = newTask.getKey () ; boolean s = mExecuteQueue.offer ( newTask ) ; android.util.Log.w ( com.arialyy.aria.core.queue.pool.ExecutePool.TAG, ( ( s ? "成功" : ( "失败，【" + url ) + "】" ) + "任务添加" ) ) ; if ( s ) { newTask.start () ; mExecuteArray.put ( com.arialyy.aria.util.CommonUtil.keyToHashKey ( url ) , newTask ) ; } return s; } 
protected void desconectarUsuario () { try { if ( null != ( servidor ) ) { java.rmi.server.UnicastRemoteObject.unexportObject ( this, true ) ; javax.swing.JOptionPane.showMessageDialog ( this, "Voc� se desconectou do Servidor..." ) ; configuraBotoes ( true ) ; servidor = null; } } catch ( java.rmi.NoSuchObjectException e ) { e.printStackTrace () ; } try { iServer.desconectar ( informacoesCliente () ) ; } catch ( java.rmi.RemoteException e ) { e.printStackTrace () ; } } 
public void execute ( java.lang.String command ) { for ( int i = 0; ( command.length () ) > i; i++ ) { switch ( command.charAt ( i ) ) { case Command.FORWARD: case Command.BACKWARD: move ( command.charAt ( i ) ) ; break; case Command.RIGHT: case Command.LEFT: rotate ( command.charAt ( i ) ) ; break; } } } 
public static int S ( double t ) { int count = SIRModel.getRecord ( SIRModel.S_HIST, t ) ; if ( ( -1 ) != count ) { return count; } else { double lt = t - ( SIRModel.DT ) ; int newCount = ( ( int ) ( ( SIRModel.S ( lt ) ) + ( SIRModel.dS ( t ) ) ) ) ; SIRModel.S_HIST.add ( newCount ) ; return newCount; } } 
private boolean mouseOnMaximize () { if ( ( ( mouse.getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) && ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse.getAbsoluteY () ) == ( getY () ) ) ) ) { return true; } return false; } 
public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null; try { date = delta.games.lotro.utils.Formats._dateFormatter.parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) { } if ( null == date ) { try { date = delta.games.lotro.utils.Formats._dateTimeFormatter.parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) { } } return date; } 
private static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String[] lines = text.split ( "\n" ) ; for ( int i = 0; ( lines.length ) > i; i++ ) { if ( ( lines[i].trim () .length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.isLineShortDate ( lines[i] ) ) return true; } return false; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String SQL_CREATE_SHOES_TABLE = " INTEGER NOT NULL ) ;" + ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.TABLE_NAME ) ) + " ( " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry._ID ) ) + " INTEGER PRIMARY KEY AUTOINCREMENT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_BRAND ) ) + " TEXT NOT NULL, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_NAME ) ) + " TEXT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_QUANTITY ) ) + " INTEGER NOT NULL DEFAULT 0, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_PRICE ) ) + " INTEGER NOT NULL, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_IMAGE ) ) ; db.execSQL ( SQL_CREATE_SHOES_TABLE ) ; } 
@ java.lang.Override protected void initiateAutomaticSync () { long lastAutoSync = com.todoroo.andlib.utility.Preferences.getLong ( ( ( tagData.getId () ) + ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities.now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } 
private static java.lang.String getMessageString ( hu.bme.tmit.agile.logfilereader.model.TtcnEvent event ) { return "Simple message \n" + ( ( ( ( "\"" + ( event.getSender () ) ) + "\" -> \"" ) + ( ( ( hu.bme.tmit.agile.logfilereader.model.Message ) ( event ) ) .getDestination () ) ) + "\" : " ) ; } 
private void shutdown () { if ( null != ( serverThread ) ) { org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.LOGGER.debug ( "shutting down monitor server thread" ) ; joinServerThread () ; serverThread = null; } if ( ( eventLoopGroup ) != null ) { eventLoopGroup.shutdownGracefully () ; } if ( ( udpStreamProcessor ) != null ) { udpStreamProcessor.shutdown () ; } } 
@ java.lang.Override public java.lang.String visitSimple_stmt ( lessa.ExprParser.Simple_stmtContext ctx ) { java.lang.System.out.println ( "simple_stmt -> small_stmt ( ';' small_stmt ) * ';' " ) ; java.lang.String ret = "\n" + ( visit ( ctx.small_stmt ( 0 ) ) ) ; int i = 1; while ( ( ctx.small_stmt ( i ) ) != null ) { ret += ( visit ( ctx.small_stmt ( i ) ) ) + "\n"; } return ret; } 
private void updateUI_2_Dashboard () { final boolean isBrowserAvailable = null != ( _browser ) ; _dashboard_PageBook.showPage ( ( isBrowserAvailable ? _dashboardPage_WithBrowser : _dashboardPage_NoBrowser ) ) ; if ( !isBrowserAvailable ) { return; } final java.lang.String html = createHTML () ; _isBrowserCompleted = false; _browser.setText ( html ) ; } 
public static com.oasisfeng.android.ui.Dialogs.Builder buildAlert ( final android.content.Context context, final java.lang.CharSequence title, final java.lang.CharSequence message ) { final com.oasisfeng.android.ui.Dialogs.Builder builder = new com.oasisfeng.android.ui.Dialogs.Builder ( context ) ; builder.setCancelable ( false ) ; if ( null != title ) builder.setTitle ( title ) ; if ( message != null ) builder.setMessage ( message ) ; return builder; } 
public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> getRecentVideos ( java.lang.Integer pageNo, java.lang.Integer pageSize ) { java.util.List<java.util.Map<java.lang.String, java.lang.Object>> result = null; int offset = 1 + ( pageNo * pageSize ) ; java.lang.String selectQuery = "SELECT * FROM ( SELECT * FROM v_online_videos ) AS tbl WHERE tbl.sl_no BETWEEN ? AND ? "; result = getJdbcTemplate () .query ( selectQuery, new java.lang.Object[] { offset, offset + pageSize }, new org.springframework.jdbc.core.ColumnMapRowMapper () ) ; return result; } 
public static boolean isInteger ( java.lang.String str ) { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile ( "^[-\\+]?[\\d]*$" ) ; if ( ( ( pattern.matcher ( str ) ) != null ) && ( pattern != null ) ) return pattern.matcher ( str ) .matches () ; else return false; } 
public int hamming () { int count = 0; for ( int i = 0; ( N ) > i; i++ ) { for ( int j = 0; j < ( N ) ; j++ ) { if ( ( pieces[i][j] ) != ( goalValueAt ( i, j ) ) ) { count++; } } } return count; } 
public void shuffle () { sorted = false; for ( int i = ( topCard ) - 1; 0 < i; i-- ) { int randomPos = ( ( int ) ( ( java.lang.Math.random () ) * ( topCard ) ) ) + 1; Card temp = cards[i]; cards[i] = cards[randomPos]; cards[randomPos] = temp; } } 
public static void alimentarMatriz ( int[][] matriz ) { for ( int linha = 0; ( matriz.length ) > linha; linha++ ) { for ( int coluna = 0; coluna < 2; coluna++ ) { java.util.Random random = new java.util.Random () ; matriz[linha][coluna] = random.nextInt ( 11 ) ; } } } 
private java.lang.Object getEnumValue ( final java.lang.Class<?> enumType, final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result; if ( null != enumType ) { final java.lang.reflect.Method method = enumType.getDeclaredMethod ( "valueOf", java.lang.String.class ) ; result = method.invoke ( enumType, name ) ; } else { result = null; } return result; } 
@ java.lang.Override public void onLoadFinished ( android.support.v4.content.Loader<android.database.Cursor> loader, android.database.Cursor data ) { forecastAdapter.swapCursor ( data ) ; if ( ( android.support.v7.widget.RecyclerView.NO_POSITION ) != ( selectedPosition ) ) { recyclerView.smoothScrollToPosition ( selectedPosition ) ; android.support.v7.widget.RecyclerView.ViewHolder selectedViewHolder = recyclerView.findViewHolderForAdapterPosition ( selectedPosition ) ; if ( ( selectedViewHolder != null ) && ( selectedViewHolder instanceof com.example.brett.sunshine.ForecastListItemViewHolder ) ) { ( ( com.example.brett.sunshine.ForecastListItemViewHolder ) ( selectedViewHolder ) ) .onClick ( selectedViewHolder.itemView ) ; } } updateEmptyViewStatusText () ; } 
private final boolean is7BitClean ( org.forgerock.opendj.ldap.ByteSequence value ) { byte b; for ( int i = 0; ( value.length () ) > i; i++ ) { b = value.byteAt ( i ) ; if ( ( b & ( org.opends.server.plugins.SevenBitCleanPlugin.MASK ) ) != b ) { return false; } } return true; } 
@ java.lang.Override public boolean canConfirmOrderOfCart ( io.muic.ooc.model.Cart cart ) { java.util.Set<io.muic.ooc.model.CartProduct> cartProductSet = cartProductService.findCartProductsByCart ( cart ) ; if ( ( ( cartProductSet.size () ) == 0 ) || ( cartProductSet == null ) ) { return false; } cart.setOrderConfirmed ( true ) ; cartRepository.save ( cart ) ; return true; } 
@ android.support.annotation.Nullable public static java.io.File createImageFile ( final long orderNumber ) { final java.lang.String imageFileName = ( com.bionic.kvt.serviceapp.utils.Utils.imageTimeStamp.format ( new java.util.Date () ) ) + ( ( ( com.bionic.kvt.serviceapp.GlobalConstants.LMRA_PHOTO_FILE_NAME ) + orderNumber ) + "_" ) ; try { return java.io.File.createTempFile ( imageFileName, ".jpg", com.bionic.kvt.serviceapp.utils.Utils.getOrderDir ( orderNumber ) ) ; } catch ( java.io.IOException e ) { com.bionic.kvt.serviceapp.Session.addToSessionLog ( ( "Error on creating LMRA file: " + ( e.toString () ) ) ) ; return null; } } 
public model.modelClasses.mainData.BibleChapterModel getBibleChapter ( android.content.Context context, int chapterNumber ) { this.getBibleChildModels ( context ) ; java.util.Collections.sort ( this.bibleChapterModels ) ; if ( ( this.bibleChapterModels.size () ) <= chapterNumber ) { return null; } else { for ( model.modelClasses.mainData.BibleChapterModel chapter : bibleChapterModels ) { if ( ( java.lang.Integer.parseInt ( chapter.number.trim () ) ) == chapterNumber ) { return chapter; } } } return null; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { javax.swing.JFileChooser jfc = new javax.swing.JFileChooser () ; int result = jfc.showOpenDialog ( view.getFrame () ) ; if ( ( javax.swing.JFileChooser.APPROVE_OPTION ) == result ) model.loadPathbaseFile ( jfc.getSelectedFile () .getAbsolutePath () ) ; center.aggiorna () ; } 
protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes.getView ( b ) ; if ( null != buffer ) { return buffer; } else { java.lang.String fmt = "Type %s doesn't support the buffer API"; throw org.python.core.Py.TypeError ( java.lang.String.format ( fmt, b.getType () .fastGetName () ) ) ; } } 
@ java.lang.Override public void onGetDataShareWithFinish ( com.owncloud.android.lib.common.operations.RemoteOperationResult result ) { ( ( com.owncloud.android.ui.activity.ShareActivity ) ( getActivity () ) ) .dismissLoadingDialog () ; if ( ( result.isSuccess () ) && ( result != null ) ) { com.owncloud.android.lib.common.utils.Log_OC.d ( com.owncloud.android.ui.fragment.ShareFileFragment.TAG, "Get Data Share With finishes sucessfully" ) ; } else { android.widget.Toast.makeText ( getActivity () , result.getLogMessage () , Toast.LENGTH_SHORT ) .show () ; } refreshUsersOrGroupsListFromDB () ; } 
@ java.lang.SuppressWarnings ( value = { "unchecked", "rawtypes" } ) private void addNewGoogleGuavaClasses () { nl.jqno.equalsverifier.internal.ConditionalInstantiator range = new nl.jqno.equalsverifier.internal.ConditionalInstantiator ( ( "Range" + ( nl.jqno.equalsverifier.JavaApiPrefabValues.GUAVA_PACKAGE ) ) ) ; addValues ( range.resolve () , range.callFactory ( "open", classes ( java.lang.Comparable.class, java.lang.Comparable.class ) , objects ( 1, 2 ) ) , range.callFactory ( "open", classes ( java.lang.Comparable.class, java.lang.Comparable.class ) , objects ( 3, 4 ) ) ) ; java.lang.String optional = "com.google.common.base.Optional"; addFactory ( classForName ( optional ) , new nl.jqno.equalsverifier.ReflectiveGenericContainerFactory ( optional ) ) ; } 
public void next () { this.index += 1; int tempIndex = this.index; while ( ( ( this.index ) < ( this.menuSize ) ) && ( ( menu.get ( tempIndex ) .price ) >= ( this.price ) ) ) { this.index += 1; tempIndex += 1; } } 
private void findNextTurn () { java.lang.Boolean found = false; nextTurn () ; while ( !found ) { addLog ( "error6" ) ; if ( ( ! ( currentPlayer.getWon () ) ) && ( ! ( currentPlayer.getPass () ) ) ) { addLog ( "found" ) ; found = true; } else { nextTurn () ; } } } 
@ java.lang.Override public void handleMessage ( android.os.Message inputMessage ) { org.mobicents.restcomm.android.client.sdk.SignalingMessage message = ( ( org.mobicents.restcomm.android.client.sdk.SignalingMessage ) ( inputMessage.obj ) ) ; if ( ( SignalingMessage.MessageType.OPEN_REPLY ) == ( message.type ) ) { listener.onOpenReply ( message.id, message.successful, message.text ) ; } else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_REPLY ) ) { } else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_EVENT ) ) { } } 
static java.util.ArrayList<java.lang.Integer> list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v, java.lang.String v ) { java.util.ArrayList<java.lang.Integer> list_numbers_equal_values = new java.util.ArrayList<> () ; for ( int i = 0; ( ja_equal_words_v.length () ) > i; i++ ) { if ( ja_equal_words_v.get ( i ) .toString () .toLowerCase () .equals ( v ) ) { list_numbers_equal_values.add ( ( i + 1 ) ) ; } } return list_numbers_equal_values; } 
@ java.lang.Override public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { if ( ( javax.swing.JOptionPane.YES_OPTION ) == ( javax.swing.JOptionPane.showConfirmDialog ( null, "Wollen sie Speicher und Schließen?", "Wirklich schließen?", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE ) ) ) { if ( save () ) { javax.swing.JOptionPane.showMessageDialog ( null, "Der Zustand wurde gespeichert.", "Speichern", javax.swing.JOptionPane.INFORMATION_MESSAGE ) ; java.lang.System.exit ( 0 ) ; } else { javax.swing.JOptionPane.showMessageDialog ( null, "Fehler beim Speichern", "Speichern", javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } } 
private void checkExistenceOfRequiredTranslations ( java.util.Set<java.io.File> filesInResourceBundle ) { final java.lang.String fullBundleName = getFullBundleName ( filesInResourceBundle ) ; final java.lang.String extension = getFileExtensions () [0]; for ( java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = extension + ( ( fullBundleName + '_' ) + languageCode ) ; final boolean missing = com.puppycrawl.tools.checkstyle.checks.TranslationCheck.isMissing ( translationFileName, filesInResourceBundle ) ; if ( missing ) { final java.lang.String missingTranslationFileName = formMissingTranslationName ( fullBundleName, languageCode ) ; logMissingTranslation ( missingTranslationFileName ) ; } } } 
private xl.playground.algo.tree.BinarySearchTree.Node<Item> addNode ( xl.playground.algo.tree.BinarySearchTree.Node<Item> root, Item value ) { if ( null == root ) { return new xl.playground.algo.tree.BinarySearchTree.Node<> ( value ) ; } if ( ( root.value.compareTo ( value ) ) <= 0 ) { root.left = addNode ( root.left, value ) ; } else { root.right = addNode ( root.right, value ) ; } root.count = 1 + ( countChildren ( root ) ) ; return root; } 
@ java.lang.Override public boolean onRequest ( final android.content.Intent request, final android.content.Intent response ) { java.lang.String sessionKey = getSessionKey ( request ) ; if ( null == sessionKey ) { org.deviceconnect.android.message.MessageUtils.setInvalidRequestParameterError ( response, "Not found sessionKey" ) ; } else { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE.addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response, DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils.setUnknownError ( response ) ; } } mLogger.exiting ( this.getClass () .getName () , "onPutOnPhoto" ) ; return true; } 
public void setTagline () { if ( 0 != ( mMovie.getTagline () .length () ) ) { ( ( android.widget.TextView ) ( mRootView.findViewById ( R.id.banner_title ) ) ) .setText ( ( ( "\"" + ( mMovie.getTagline () ) ) + "\"" ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mNumberPages ) >= ( mCurrentPage ) ) { mRightButton.setEnabled ( false ) ; mCurrentPage += 1; mImageAdapter.invalidateData () ; mPagerAdapter.notifyDataSetChanged () ; getAllPopularPhotos () ; } else { android.widget.Toast.makeText ( getBaseContext () , "Already at last page", Toast.LENGTH_SHORT ) .show () ; } } 
@ java.lang.Override public void onFocusChange ( android.view.View view, boolean hasFocus ) { if ( hasFocus ) { bottomNavigationBar.hide () ; android.util.Log.d ( "~focus", ( "" + ( bottomNavigationBar.isHidden () ) ) ) ; } else { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getActivity () .getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm.hideSoftInputFromWindow ( view.getWindowToken () , 0 ) ; } } 
public void addLoop () { currentLoop = new ir.cfgraph.Loop () ; if ( null == ( startingBlock ) ) { currentBlock = startingBlock = currentLoop; } else if ( ( currentBlock ) instanceof ir.cfgraph.ControlFlow ) { ir.cfgraph.ControlFlow cf = ( ( ir.cfgraph.ControlFlow ) ( currentBlock ) ) ; controlFlowStack.push ( currentBlock ) ; if ( cf.isComplete () ) currentBlock.setSuccessor ( currentBranch ) ; else cf.addBlock ( currentBlock ) ; } else currentBlock.setSuccessor ( currentLoop ) ; currentBlock = currentLoop; } 
private edu.utsa.fileflow.client.fileflow.VariableAutomaton getValue ( edu.utsa.fileflow.client.fileflow.FileFlowAnalysisDomain domain, edu.utsa.fileflow.cfg.FlowPointContext context ) { edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ctx = ( ( edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ) ( context.getContext () ) ) ; edu.utsa.fileflow.antlr.FileFlowParser.ValueContext v = ctx.value ( 0 ) ; edu.utsa.fileflow.client.fileflow.VariableAutomaton va; if ( null != ( v.Variable () ) ) { va = domain.table.get ( v.Variable () .getText () ) ; } else { va = new edu.utsa.fileflow.client.fileflow.VariableAutomaton ( v.String () .getText () ) ; } return va; } 
public void register ( org.bukkit.entity.Player player ) { int toLevel = this._model.getDonationLevel ( 0 ) ; se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = getOrAddPlayerInfo ( player ) ; playerInfo.demoteOrPromote ( toLevel ) ; this._knownPlayers.put ( player, playerInfo ) ; player.sendMessage ( java.lang.String.format ( "You are currently at perk level %d.", ( 1 + toLevel ) ) ) ; } 
private data.Vector calculateMeanPoint ( java.util.List<? extends data.Data> dataSet ) { double[] meanPoint = new double[argumentsCount]; for ( data.Data data : dataSet ) { for ( int i = 0; ( argumentsCount ) > i; i++ ) { meanPoint[i] += data.getValueAt ( i ) ; } } for ( int i = 0; ( argumentsCount ) > i; i++ ) { meanPoint[i] /= dataSet.size () ; } return new data.Vector ( meanPoint ) ; } 
public static java.lang.Throwable getRootCause ( java.lang.Throwable t ) { java.lang.Throwable rootCause = t; java.lang.Throwable cause = rootCause.getCause () ; while ( ( cause != rootCause ) && ( cause != null ) ) { rootCause = cause; cause = cause.getCause () ; } return rootCause; } 
public void testPlayer ( java.lang.String player, org.bukkit.command.CommandSender sender ) { if ( playerOnline ( player ) ) { sender.sendMessage ( ( "\nRejoice!" + ( ( ( ( ( ( ( ( ( ( ( ChatColor.MAGIC ) + "" ) + ( ChatColor.GOLD ) ) + "aaaaa" ) + ( ChatColor.RED ) ) + player ) + ( ChatColor.GOLD ) ) + "is online!" ) + ( ChatColor.MAGIC ) ) + "aaaaa" ) + ( ChatColor.GOLD ) ) ) ) ; } else { sender.sendMessage ( ( player + "is not online!" ) ) ; } } 
protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { if ( ( CAMERA_PIC_REQUEST ) == requestCode ) { android.graphics.Bitmap image = ( ( android.graphics.Bitmap ) ( data.getExtras () .get ( "data" ) ) ) ; android.widget.ImageView imageview = ( ( android.widget.ImageView ) ( findViewById ( R.id.imglogo ) ) ) ; imageview.setImageBitmap ( image ) ; new com.example.audi.uaspenir.Main.PostTask () .execute ( imageToString ( image ) , "test" ) ; buatsnackbar ( "Uploading image . . ." ) ; } } 
@ java.lang.Override public void onTriggered () { if ( null != ( tilemap ) ) { int[] dims = getNumberPair ( "Please enter the new dimensions?" ) ; for ( int i = 0; i < ( tilemap.getLayerCount () ) ; i++ ) { tilemap.getLayer ( i ) .resize ( dims[0], dims[1] ) ; } } } 
public void addNewLevelUpEvent ( long buildingID ) { com.greenfox.jasper.domain.Building temporaryBuilding = buildingServices.findOneBuilding ( ( ( int ) ( buildingID ) ) ) ; com.greenfox.jasper.services.MainEvent levelUpEvent = new com.greenfox.jasper.services.LevelUpEvent ( buildingID, ( ( 60000 * ( calculateBuildingTime ( temporaryBuilding.getLevel () ) ) ) + ( java.lang.System.currentTimeMillis () ) ) ) ; mainEventRepo.save ( levelUpEvent ) ; } 
public void removeStatsProvider ( org.osgi.framework.ServiceReference<org.inaetics.demonstrator.api.stats.StatsProvider> serviceRef, org.inaetics.demonstrator.api.stats.StatsProvider provider ) { if ( "true".equals ( serviceRef.getProperty ( "aggregator" ) ) ) { m_aggregator = null; } java.lang.String type = ( serviceRef.getProperty ( "type" ) ) + ""; if ( "processor".equalsIgnoreCase ( type ) ) { m_processorCount.decrementAndGet () ; } else if ( "producer".equalsIgnoreCase ( type ) ) { m_producerCount.decrementAndGet () ; } m_providerStats.remove ( serviceRef ) ; log ( ( "added statsprovider of type " + type ) ) ; } 
public java.lang.String parseStepsHash () { java.lang.String outputString = ""; for ( java.lang.String term : steps.keySet () ) { java.lang.Integer value = steps.get ( term ) ; java.lang.String lineToAdd = "\n" + ( ( ( ( ( "\"" + term ) + "\"" ) + ": " ) + ( value.toString () ) ) + "," ) ; outputString = outputString + lineToAdd; } return outputString; } 
@ java.lang.Override public void onAttach ( android.app.Activity activity ) { super.onAttach ( activity ) ; try { this.listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( activity ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "the AbstractInboxFragment.Listener interface." + "Activities using AbstractInboxFragment must implement " ) ) ; } } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker view, int year, int monthOfYear, int dayOfMonth ) { dates = ( java.lang.Integer.toString ( dayOfMonth ) ) + ( ( ( ( java.lang.Integer.toString ( year ) ) + "/" ) + ( java.lang.Integer.toString ( monthOfYear ) ) ) + "/" ) ; } 
private static java.util.Optional<edu.cwru.eecs.clipper.Models.UserAccount> convertToUserAccount ( org.bson.Document result ) { java.util.Optional<edu.cwru.eecs.clipper.Models.UserAccount> userAccountOptional = java.util.Optional.empty () ; if ( ( ! ( result.getBoolean ( "isDeleted" ) ) ) && ( result != null ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager.convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional.of ( userAccount ) ; } return userAccountOptional; } 
protected static java.lang.String getBNpos_ro ( java.util.Map<java.lang.String, it.uniroma1.lcl.babelnet.data.BabelPOS> posMapping, java.lang.String pos ) { java.lang.String pos5chars = ""; if ( 1 < ( pos.length () ) ) { pos5chars = pos.substring ( 0, 5 ) ; } else { return null; } it.uniroma1.lcl.babelnet.data.BabelPOS bnPos = posMapping.get ( pos5chars.toUpperCase () ) ; return bnPos.toString () ; } 
public void setNetworkProperties ( java.util.Collection<org.ndexbio.model.object.NdexPropertyValuePair> properties, java.util.Collection<org.ndexbio.model.object.SimplePropertyValuePair> presentationProperties ) { if ( null != properties ) { this.network.getProperties () .addAll ( properties ) ; this.networkDoc.field ( NdexClasses.ndexProperties, this.network.getProperties () ) .save () ; } } 
public java.util.List<org.egov.works.models.masters.ScheduleOfRate> getSORList () { if ( ( ( estimateDate ) != null ) && ( ( estimateId ) != null ) ) return scheduleOfRateService.getScheduleOfRatesByCodeAndScheduleOfCategories ( query, scheduleCategoryId.toString () ) ; else if ( ( estimateDate ) != null ) return scheduleOfRateService.getScheduleOfRatesByCodeAndScheduleOfCategories ( query, scheduleCategoryId.toString () ) ; else return scheduleOfRateService.getScheduleOfRatesByCodeAndScheduleOfCategories ( query, scheduleCategoryId.toString () ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group, int checkedId ) { int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) .getCheckedRadioButtonId () ; if ( ( R.id.createMatchRadioButtonJunior ) == selected ) { radioGroupLevelSelection = 1; } else if ( selected == ( R.id.createMatchRadioButtonSenior ) ) { radioGroupLevelSelection = 2; } alloc.setLevel ( radioGroupLevelSelection ) ; filterAndRefresh () ; } 
public boolean compare ( double avgT, double devT, double minT, double maxT ) { if ( ( ( maxTemp ) == maxT ) && ( ( ( ( avgTemp ) == avgT ) && ( ( devTemp ) == devT ) ) && ( ( minTemp ) == minT ) ) ) return true > ( ( origin ) / ( master ) ) ; return false; } 
public static void registerSingleThreadVirtualTarget ( java.lang.Thread thread, java.lang.String targetName ) { pj.pr.target.VirtualTarget virtualTarget = pj.PjRuntime.targetExecutorMap.get ( targetName ) ; if ( virtualTarget == null ) { virtualTarget = new pj.pr.target.SingleThreadVirtualTarget ( targetName, thread ) ; pj.PjRuntime.targetExecutorMap.put ( targetName, virtualTarget ) ; } else { throw new java.lang.RuntimeException ( ( ( "Virtual target " + targetName ) + " has been registered before" ) ) ; } } 
@ java.lang.Override public void calculateRedpacksPrize ( cn.wisdom.lottery.dao.vo.Lottery lottery ) { if ( cn.wisdom.lottery.common.utils.CollectionUtils.isNotEmpty ( lottery.getRedpacks () ) ) { int totalBonus = lottery.getPeriods () .get ( 0 ) .getPrizeBonus () ; int bonus = 0; for ( cn.wisdom.lottery.dao.vo.LotteryRedpack lotteryRedpack : lottery.getRedpacks () ) { bonus = ( ( lotteryRedpack.getRate () ) * totalBonus ) / 100; lotteryRedpack.setPrizeBonus ( bonus ) ; } } } 
public java.util.List<org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter> encountersSince ( org.joda.time.LocalDate dateOfBirth ) { java.util.ArrayList<org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter> encounters = new java.util.ArrayList<org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter> () ; org.joda.time.LocalDate currentDate = dateOfBirth; org.joda.time.LocalDate today = new org.joda.time.LocalDate () ; while ( currentDate.isBefore ( today ) ) { encounters.add ( encounterGenerator.nextEncounter ( today ) ) ; currentDate = currentDate.plusDays ( ( ( int ) ( ( org.neo4j.data.generator.domains.medicalrecords.encounters.EncounterSequenceGenerator.MAX_YEARS_BETWEEN_ENCOUNTERS ) * ( ( java.lang.Math.random () ) * 365 ) ) ) ) ; } return encounters; } 
private void setMediaSessionMetaData () { android.support.v4.media.MediaMetadataCompat.Builder builder = new android.support.v4.media.MediaMetadataCompat.Builder () .putString ( MediaMetadataCompat.METADATA_KEY_ARTIST, metaDataArtist ) .putString ( MediaMetadataCompat.METADATA_KEY_ALBUM, metaDataAlbum ) .putString ( MediaMetadataCompat.METADATA_KEY_TITLE, metaDataTitle ) .putBitmap ( MediaMetadataCompat.METADATA_KEY_ALBUM_ART, android.graphics.BitmapFactory.decodeResource ( getResources () , R.drawable.icon ) ) ; if ( null != ( textInterface ) ) { builder.putLong ( MediaMetadataCompat.METADATA_KEY_DURATION, textInterface.getTotalDuration () ) ; } mediaSession.setMetadata ( builder.build () ) ; } 
private void captureTerritory ( gottesman.risk.Player activePlayer, gottesman.risk.Territory selectedTerritory, gottesman.risk.map.TerritoryView territoryView, gottesman.risk.Territory territory ) { int battalionNum = java.lang.Integer.parseInt ( javax.swing.JOptionPane.showInputDialog ( null, "Enter the amount of battalions you would like to move." ) ) ; if ( ( selectedTerritory.getBattalions () ) <= battalionNum ) { javax.swing.JOptionPane.showMessageDialog ( selectedTerritoryView, "Cannot move this amount of battalions. Try again." ) ; } else { territory.occupy ( activePlayer ) ; selectedTerritory.moveBattalionsTo ( territory, battalionNum ) ; } selectedTerritoryView.repaint () ; territoryView.repaint () ; selectTerritory ( territoryView ) ; } 
@ java.lang.Override protected void reloadForSearch ( boolean finalTouch ) { if ( null == ( mAdapter ) ) { return; } try { final int sD = mData.length; for ( int i = 0; i < sD; ++i ) { if ( ! ( ( mData[i] ) instanceof ds.framework.v4.data.AbsRecyclerViewData ) ) { break; } invalidateData ( i ) ; } loadDataAndDisplay () ; } catch ( java.lang.Throwable e ) { ds.framework.v4.common.Debug.logException ( e ) ; } } 
private boolean isTaskRequired ( com.emc.storageos.db.client.model.Volume rpVolume, com.emc.storageos.volumecontroller.impl.utils.VirtualPoolCapabilityValuesWrapper capabilities, boolean vplex, com.emc.storageos.model.TaskList taskList ) { boolean rpNonVplexSourceVolume = ( !vplex ) && ( Volume.PersonalityTypes.SOURCE.name () .equals ( rpVolume.getPersonality () ) ) ; boolean addJournalVolume = capabilities.getAddJournalCapacity () ; boolean notAlreadyInTaskList = ( com.emc.storageos.api.service.impl.placement.StorageScheduler.getPrecreatedVolume ( _dbClient, taskList, rpVolume.getLabel () ) ) == null; boolean createTask = ( rpNonVplexSourceVolume || addJournalVolume ) || notAlreadyInTaskList; return createTask; } 
@ java.lang.Override public void tick ( kcl.teamIndexZero.traffic.simulator.data.SimulationTick tick ) { CurrentDate = ( new java.util.Date () .getTime () ) / 1000; if ( ( timer ) < ( ( CurrentDate ) - ( lastChange ) ) ) { modelSet.changeColour ( model, model.currentState ) ; lastChange = CurrentDate; } } 
@ java.lang.Override public boolean onKey ( android.view.View v, int keyCode, android.view.KeyEvent event ) { if ( ( android.view.KeyEvent.ACTION_DOWN ) == ( event.getAction () ) ) { if ( keyCode == ( android.view.KeyEvent.KEYCODE_ENTER ) ) { rightGuess () ; return true; } } return false; } 
public com.emc.hpux.model.HpuxVersion getHpuxMinimumVersion ( boolean forceLookup ) { if ( ( ( aixVersion ) == null ) || forceLookup ) { java.lang.String versionProp = this.getSysProperty ( com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP ) ; if ( isValidVersionNumber ( versionProp ) ) { hpuxVersion = new com.emc.hpux.model.HpuxVersion ( versionProp ) ; } else { hpuxVersion = null; throw new java.lang.IllegalStateException ( java.lang.String.format ( "System property for HPUX Version Number ( %s ) is invalid - value is '%s'", com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP, versionProp ) ) ; } } return hpuxVersion; } 
public void inverseClicked ( android.view.View v ) { android.widget.TextView textView2 = ( ( android.widget.TextView ) ( findViewById ( R.id.textView2 ) ) ) ; tempNum = java.lang.Double.parseDouble ( textView2.getText () .toString () ) ; tempNum = ( -1 ) * ( tempNum ) ; textView2.setText ( ( ( textView2 + "|" ) + ( java.lang.String.valueOf ( tempNum ) ) ) ) ; } 
@ java.lang.Override public void run () { if ( null != ( getAudioService () ) ) { setMilliseconds ( ( ( ( drawSurfaceWidth / ( getAudioService () .getSampleRate () ) ) * 1000 ) / 2 ) ) ; } setMillivolts ( ( ( ( ( ( ( float ) ( drawSurfaceHeight ) ) / 4.0F ) / 24.5F ) / 1000 ) * ( com.backyardbrains.utils.BYBConstants.millivoltScale ) ) ) ; } 
private void refreshUser () { mUser = mSession.getDataHandler () .getStore () .getUser ( mMemberId ) ; if ( ( mUser ) == null ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId; mUser.displayname = getIntent () .getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils.isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId; } mUser.avatar_url = getIntent () .getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; } } 
private boolean validateQuantity () { int quantity = java.lang.Integer.valueOf ( subgroupsQuantity.getText () .toString () ) ; if ( ( getMaximumQuantity () ) < quantity ) { subgroupsQuantityLayout.setError ( getString ( R.string.nwinners_msg_validate_quantity, group.getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false; } return true; } 
protected static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value, boolean alwaysWildcard ) { java.lang.String ret = value.replaceAll ( "\\\\", "\\\\\\\\" ) .replaceAll ( "_", "\\\\_" ) .replaceAll ( "%", "\\\\%" ) .replaceAll ( "\\*", "%" ) .replaceAll ( "\\?", "_" ) ; return alwaysWildcard ? "%" + ( "%" + ret ) : ret; } 
private static void addBodyIfExists ( java.net.HttpURLConnection connection, com.android.volley.Request<?> request ) throws com.android.volley.AuthFailureError, java.io.IOException { byte[] body = request.getBody () ; if ( null != body ) { connection.setDoOutput ( true ) ; connection.addRequestProperty ( com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE, request.getBodyContentType () ) ; java.io.DataOutputStream out = new java.io.DataOutputStream ( connection.getOutputStream () ) ; out.write ( body ) ; out.close () ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, @android.support.annotation.NonNull java.lang.String[] permissions, @android.support.annotation.NonNull int[] grantResults ) { com.iven.i7helper.util.LocationUtil lu = com.iven.i7helper.util.LocationUtil.getLocationUtil () ; switch ( requestCode ) { case 1: if ( 0 < ( grantResults.length ) ) { for ( int i : grantResults ) { if ( i != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { com.iven.i7helper.util.ToolUtil.showMessage ( this, "不给权限会导致记录不准确" ) ; return; } } } lu.requestLocation () ; break; default: } } 
public java.lang.String addDev ( objects.Device dev ) { java.sql.PreparedStatement stmt = null; java.sql.Connection conn = null; java.lang.String sql = "VALUES ( ?, '?', '?' ) " + "INSERT INTO network "; try { conn = getConnection () ; } catch ( java.sql.SQLException e ) { return new java.lang.String ( e.getMessage () ) ; } catch ( java.net.URISyntaxException e ) { return new java.lang.String ( e.getMessage () ) ; } return "MADE IT"; } 
public static boolean inBounds ( int[][] array, int r, int c ) { return ( ( c > 0 ) && ( c < ( array[r].length ) ) ) && ( ( r > 0 ) && ( r < ( array.length ) ) ) ; } 
public static java.util.List<com.teinproductions.tein.papyrosprogress.Milestone> getMilestones ( java.lang.String json ) throws java.text.ParseException, org.json.JSONException { org.json.JSONArray jArray = new org.json.JSONArray ( json ) ; java.util.List<com.teinproductions.tein.papyrosprogress.Milestone> result = new java.util.ArrayList<> () ; for ( int i = 0; ( result.size () ) > i; i++ ) { result.add ( com.teinproductions.tein.papyrosprogress.JSONUtils.getMilestone ( jArray.getJSONObject ( i ) ) ) ; } return result; } 
public static void addPlayer ( java.lang.String name ) { reachForTheTop.IO.createOutputFile ( ( ".reach" + ( "Scores\\" + name ) ) ) ; reachForTheTop.IO.println ( "times played: 0" ) ; reachForTheTop.IO.println ( "total: 0" ) ; reachForTheTop.IO.closeOutputFile () ; reachForTheTop.IO.createOutputFile ( "Scores\\names.txt", true ) ; reachForTheTop.IO.print ( "" ) ; reachForTheTop.IO.println ( name ) ; reachForTheTop.IO.closeOutputFile () ; } 
public void poll () { try { scanDirectory ( outboxDir ) ; updateTracking () ; } catch ( org.openas2.OpenAS2Exception oae ) { oae.terminate () ; } catch ( java.lang.Exception e ) { logger.error ( ( ( outboxDir ) + "Unexpected error occurred polling directory for files to send: " ) , e ) ; } } 
private com.github.com.ricardobaumann.jankenpon.Player.MOVE getMove ( int index ) { com.github.com.ricardobaumann.jankenpon.Player.MOVE[] moves = com.github.com.ricardobaumann.jankenpon.Player.MOVE.values () ; int movesAmount = moves.length; int moveIndex = ( movesAmount < index ) ? index - movesAmount : index; return moves[ ( moveIndex - 1 ) ]; } 
public void afterPropertiesSet () throws java.lang.Exception { int roundId = getRoundId () ; if ( 1 > roundId ) { return; } round = org.powertac.tournament.beans.Round.getRoundFromId ( roundId, true ) ; loadRoundInfo () ; loadParticipantInfo () ; loadCsvLinks () ; loadMaps () ; } 
public void checkAttributeValue ( cz.metacentrum.perun.core.api.PerunSession sess, cz.metacentrum.perun.core.api.Member member, cz.metacentrum.perun.core.api.Attribute attribute ) throws cz.metacentrum.perun.core.api.exceptions.InternalErrorException, cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException, cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException { cz.metacentrum.perun.core.implApi.modules.attributes.MemberAttributesModuleImplApi attributeModule = getMemberAttributeModule ( sess, attribute ) ; if ( null == attributeModule ) return; try { attributeModule.checkAttributeValue ( ( ( cz.metacentrum.perun.core.impl.PerunSessionImpl ) ( sess ) ) , member, attribute ) ; } catch ( cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException ex ) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException ( ex ) ; } catch ( cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException ex ) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException ( ex ) ; } } 
@ java.lang.Override public void onTick ( net.frozenbit.plugin5zig.cubecraft.gamemodes.DuelsGameMode gameMode ) { if ( ( eu.the5zig.mod.server.GameState.LOBBY ) != ( gameMode.getState () ) ) { ( timer ) ++; if ( ( ( timer ) % ( net.frozenbit.plugin5zig.cubecraft.listeners.DuelsListener.OPPONENT_UPDATE_INTERVAL ) ) == 0 ) { updateOpponentInfo ( gameMode ) ; } } } 
public void nextSlide () { ( slide ) ++; if ( 1 == ( slide ) ) { Objectives () ; } else if ( ( slide ) == 2 ) { Turn () ; } else if ( ( slide ) == 3 ) { unitTable () ; } else if ( ( slide ) == 4 ) { shortcuts () ; } } 
private void handleIntent ( android.content.Intent intent ) { final int configScreenId = intent.getIntExtra ( org.droidplanner.android.activities.ConfigurationActivity.EXTRA_CONFIG_SCREEN_ID, mConfigScreenId ) ; final android.support.v4.app.Fragment currentFragment = getCurrentFragment () ; if ( ( ( getIdForFragment ( currentFragment ) ) != configScreenId ) || ( currentFragment == null ) ) { if ( currentFragment instanceof org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen ) { ( ( org.droidplanner.android.activities.ConfigurationActivity.ConfigurationScreen ) ( currentFragment ) ) .onConfigurationReplaced () ; } mConfigScreenId = configScreenId; getSupportFragmentManager () .beginTransaction () .replace ( R.id.configuration_screen, getFragmentForId ( configScreenId ) ) .commit () ; } } 
public void usePotion () { for ( int i = 2; ( this.potions.length ) > i; i-- ) { if ( ( this.potions[i] ) != null ) { heal ( 50 ) ; this.potions[i] = null; return; } } } 
public static void main ( java.lang.String[] args ) { char letter = 'a'; int a; final int MIN = 65; final int MAX = 122; final int STOPLINE1 = 85; final int STOPLINE2 = 122; for ( a = MIN; MAX >= a; a++ ) letter = ( ( char ) ( a ) ) ; java.lang.System.out.print ( ( " " + letter ) ) ; if ( ( a == STOPLINE1 ) || ( a == STOPLINE2 ) ) java.lang.System.out.println () ; java.lang.System.out.println ( "\nEnd of application" ) ; } 
private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0; ( numWritableCharBoxCols ) > i; i++ ) { for ( int j = 0; j < ( numCharBoxesInCol ) ; j++ ) { if ( mCharBoxes[i][j].isActivated () ) { mCharBoxes[i][j].setToolTypeAction ( SpenSurfaceView.TOOL_SPEN, toolAction ) ; } } } return; } 
@ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { mTextSeekBar.setText ( ( ( java.lang.Math.round ( ( ( mSeekbar.getMax () ) + ShutterSpeed1 ) ) ) + ( ( "Shutter Speed ( in ns ) :" + ( ( mSeekbar.getProgress () ) + ShutterSpeed1 ) ) + "/" ) ) ) ; android.widget.Toast.makeText ( getApplicationContext () , "Setting Shutter Speed", Toast.LENGTH_SHORT ) .show () ; ShutterSpeedValue = ( mSeekbar.getProgress () ) + ShutterSpeed1; AutoNumber = 1; startPreview () ; } 
@ java.lang.Override public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException, org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char[] cbuf = new char[1024]; int length = -1; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( -1 ) != ( length = reader.read ( cbuf ) ) ) { strBuffer.append ( cbuf, 0, length ) ; } java.lang.String strSource = strBuffer.toString () ; return parse ( strSource ) ; } 
public void hideSoftInput () { android.view.View view = ( ( android.app.Activity ) ( context ) ) .getCurrentFocus () ; if ( null == view ) view = new android.view.View ( ( ( android.app.Activity ) ( context ) ) ) ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( ( ( android.app.Activity ) ( context ) ) .getSystemService ( Activity.INPUT_METHOD_SERVICE ) ) ) ; if ( imm == null ) return; imm.hideSoftInputFromWindow ( view.getWindowToken () , 0 ) ; } 
@ java.lang.Override public boolean configChanged () { int currentConfigHash = this.configProps.hashCode () ; boolean configChanged = currentConfigHash != ( this.propsHashCode ) ; if ( configChanged && ( net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER.isDebugEnabled () ) ) net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER.debug ( "Changes in configuration properties file detected." ) ; this.propsHashCode = currentConfigHash; return configChanged; } 
private boolean isValideEmail ( java.lang.String email ) { java.sql.Statement stmt; boolean status = false; java.sql.Connection con = null; try { bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider.getCon () ; stmt = con.createStatement () ; java.lang.String query = "\"" + ( "Select * from employee where BINARY email=\"" + email ) ; java.lang.System.out.println ( query ) ; java.sql.ResultSet rs = stmt.executeQuery ( query ) ; status = rs.next () ; } catch ( java.sql.SQLException e ) { e.printStackTrace () ; } return status; } 
public boolean tryReadLockWithCondition ( V expected ) { int[] stamp = new int[1]; V value = lock.get ( stamp ) ; return lock.compareAndSet ( expected, expected, stamp[0], ( 2 + ( stamp[0] ) ) ) ; } 
private void updateYData () { top = - ( ( int ) ( java.lang.Math.round ( ( ( ( roundY2 ) + ( roundY1 ) ) / 2.0 ) ) ) ) ; bottom = ( ( top ) + ( roundY2 ) ) - ( roundY1 ) ; } 
public void onAudioFocusChange ( int focusChange ) { if ( ( android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT ) == focusChange ) { mPlayTimer.stop () ; mMediaPlayer.pause () ; unregisterAudio () ; } else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_GAIN ) ) { } else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_LOSS ) ) { mAudioManager.abandonAudioFocus ( this ) ; mPlayTimer.stop () ; mMediaPlayer.pause () ; unregisterAudio () ; } mContext.updateSongView () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager.requestLocationUpdates ( "gps", 5000, 0, locationListener ) ; } 
public static java.lang.String getDomainName ( java.lang.String url ) throws java.net.URISyntaxException { java.net.URI uri = new java.net.URI ( url ) ; java.lang.String domain = uri.getHost () ; if ( null == domain ) { return url.replace ( "www.", "" ) ; } return domain.replace ( "www.", "" ) ; } 
private void addDeveloperFromInput () { int id = readIdFromInput () ; com.homelearning.model.Developer developer = developerController.getById ( id ) ; if ( null == developer ) { developerController.save ( new com.homelearning.model.Developer ( readIdFromInput () , readFirstNameFromInput () , readLastNameFromInput () , readSpecialtyFromInput () , readExperienceFromInput () , readSalaryFromInput () ) ) ; } else { java.lang.System.out.printf ( "Developer with id %d already exists:\n", id ) ; java.lang.System.out.println ( developer ) ; } } 
@ java.lang.Override public net.openchrom.msd.converter.supplier.cms.model.IIonMeasurement getIonMeasurement ( int scanIndex ) { if ( ! ( isMinMaxSignalCalculated () ) ) { updateSignalLimits () ; } if ( ( scanIndex < ( ionMeasurements.size () ) ) && ( scanIndex > 0 ) ) { return ionMeasurements.get ( scanIndex ) ; } else { return null; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( ( e.getKeyCode () ) != ( java.awt.event.KeyEvent.VK_ENTER ) ) && ( ( remain.length () ) == 0 ) ) { e.consume () ; retype () ; } else { java.lang.String item = "%d %d 0"; long curTime = java.lang.System.currentTimeMillis () ; records.add ( java.lang.String.format ( item, curTime, e.getKeyCode () ) ) ; java.lang.System.out.println ( ( ( e.getKeyChar () ) + " 0" ) ) ; } } 
@ java.lang.Override public int hashCode () { int hash = 7; hash = ( java.util.Objects.hashCode ( this.topLeft ) ) + ( 53 * hash ) ; hash = ( 53 * hash ) + ( java.util.Objects.hashCode ( this.bottomRight ) ) ; return hash; } 
public static java.lang.String formatQueryString ( java.lang.String url, java.lang.String field, java.lang.Enum value ) { if ( value == null ) { return url; } return url.contains ( "?" ) ? ( ( "&" + field ) + "=" ) + value : ( ( "?" + field ) + "=" ) + value; } 
private int find_next_test_item ( int CurrentTestItem ) { int NextTestItemL = 0; boolean NeedTest = false; do { NextTestItemL = 1 + CurrentTestItem; not_end_test_all = ( NextTestItem ) != ( end_test_item ) ; if ( not_end_test_all ) { NeedTest = fec_test_items_order[NextTestItem].test; } else { return -1; } } while ( !NeedTest ) ; return NextTestItemL; } 
protected void setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) != null ) && ( currentNetworkView.equals ( newView ) ) ) || ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) ) return; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView; currentNetworkView = newView; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels.values () ) tp.update ( false ) ; firePropertyChange ( "currentNetworkView", oldView, newView ) ; } } 
public void start () { if ( ! ( lazyMode ) ) { if ( ! ( ( ( beanProperty () .getValue () ) != null ) || ( ( itemProperty () .getValue () ) != null ) ) ) { reSchedule ( null ) ; } } } 
private void removeTransform ( org.bukkit.entity.Player player ) { org.bukkit.Bukkit.getServer () .dispatchCommand ( org.bukkit.Bukkit.getConsoleSender () , ( ( player.getName () ) + "clearskin " ) ) ; turnOff ( player ) ; sendMessage ( player, "You look like yourself again." ) ; sendMessage ( player, strWarnMessage ) ; } 
public ar.edu.unq.chasqui.model.Direccion obtenerDireccionPredeterminada () { for ( ar.edu.unq.chasqui.model.Direccion d : this.getDireccionesAlternativas () ) { if ( d.getPredeterminada () ) { return d; } } return null != ( this.getDireccionesAlternativas () ) ? this.getDireccionesAlternativas () .get ( 0 ) : null; } 
@ java.lang.Override protected java.lang.String processRequest ( cn.edu.fudan.request.AddTableRequest request, cn.edu.fudan.util.Session session ) throws java.lang.Exception { return ( ( request.table () ) == ( AddTableRequest.Table.DEFAULT ) ) || ( request == null ) ? "error" : ( new cn.edu.fudan.dao.AddTableDAO ( this, request ) .getResult () ) > 0 ? "success" : "fail"; } 
public void startTournament () throws java.lang.Exception { for ( int p1 = 0; ( players.size () ) > p1; p1++ ) { for ( int p2 = p1; p2 < ( players.size () ) ; p2++ ) { if ( p1 != p2 ) { startGame ( players.get ( p1 ) , players.get ( p2 ) ) ; } } } } 
@ android.support.annotation.Nullable static android.net.Uri safeUri ( @android.support.annotation.NonNull java.lang.String url ) { if ( android.text.TextUtils.isEmpty ( url ) ) { return null; } android.net.Uri uri = android.net.Uri.parse ( url ) ; if ( ( ( uri.getScheme () ) == null ) || ( ( uri.getHost () ) == null ) ) { return null; } return uri; } 
@ java.lang.Override public void setRawData ( java.util.List<float[]> data ) { this.centroids = null; this.data = new edu.uc.rphash.tests.clusterers.KMeans2.PointND[data.size () ]; for ( int i = 0; ( data.size () ) > i; i++ ) { this.data[i] = new edu.uc.rphash.tests.clusterers.KMeans2.PointND ( data.get ( i ) , 1, new float[data.get ( 0 ) .length] ) ; } } 
protected void actOnResource ( org.fogbowcloud.blowout.pool.AbstractResource resource, java.util.List<org.fogbowcloud.blowout.core.model.Task> tasks ) { org.fogbowcloud.blowout.infrastructure.model.ResourceState state = resource.getState () ; if ( resource.getState () .equals ( ResourceState.IDLE ) ) { org.fogbowcloud.blowout.core.model.Task task = chooseTaskForRunning ( tasks ) ; if ( null != task ) { runTask ( task, resource ) ; } } if ( resource.getState () .equals ( ResourceState.TO_REMOVE ) ) { runningTasks.remove ( resource ) ; } } 
private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item, com.badlogic.gdx.math.Vector2 offset ) { if ( item.getNodeName () .contentEquals ( "image" ) ) { return com.emergentorganization.cellrpg.tools.map.MapLoader.parseImage ( item, offset ) ; } else if ( item.getNodeName () .contentEquals ( "#text" ) ) { } else { com.emergentorganization.cellrpg.tools.map.MapLoader.print ( ( " is unsupported" + ( "parsing for item " + ( item.getNodeName () ) ) ) ) ; } return null; } 
public void reiniciar () throws java.lang.InterruptedException { damas_v1.Ficha f = new damas_v1.Ficha ( "·" ) ; damas_v1.FichaSwing fswing; for ( int i = 0; ( MAXFILAS ) > i; i++ ) { for ( int j = 0; j < ( MAXCOLUMNAS ) ; j++ ) { casillero[i][j] = f; fswing = new damas_v1.FichaSwing ( ( ( i * 10 ) + j ) , null ) ; setChanged () ; notifyObservers ( fswing ) ; } } } 
@ java.lang.Override public void seekToUs ( long positionUs ) { com.google.android.exoplayer.util.Assertions.checkState ( prepared ) ; com.google.android.exoplayer.util.Assertions.checkState ( ( 0 < ( enabledTrackCount ) ) ) ; positionUs = ( chunkSource.isLive () ) ? 0 : positionUs; long currentPositionUs = ( isPendingReset () ) ? pendingResetPositionUs : downstreamPositionUs; downstreamPositionUs = positionUs; lastSeekPositionUs = positionUs; if ( currentPositionUs == positionUs ) { return; } seekToInternal ( positionUs ) ; } 
protected android.graphics.Bitmap setBitmapSize ( int iconId, int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeResource ( getContext () .getResources () , iconId ) ; float s = ( 1.0F * w ) / ( bitmap.getWidth () ) ; bitmap = android.graphics.Bitmap.createScaledBitmap ( bitmap, ( ( int ) ( ( bitmap.getWidth () ) * s ) ) , ( ( int ) ( ( bitmap.getHeight () ) * s ) ) , true ) ; return bitmap; } 
void onScanFilterEnableDisabled ( int action, int status, int clientIf ) { android.util.Log.d ( com.android.bluetooth.gatt.GattService.TAG, "called" ) ; if ( com.android.bluetooth.gatt.GattService.DBG ) { android.util.Log.d ( com.android.bluetooth.gatt.GattService.TAG, ( action + ( ( ( ( "onScanFilterEnableDisabled () - clientIf=" + clientIf ) + ", status=" ) + status ) + ", action=" ) ) ) ; } if ( status != 0 ) { } mStateMachine.callbackDone () ; } 
private void excludeCols ( final boolean[] checkedItems ) { int i = 1; assert checkedItems != null; assert null != ( this.templateModel ) ; for ( final boolean checkedItem : checkedItems ) if ( checkedItem ) this.templateModel.addExcludeCol ( ( i++ ) ) ; } 
public static void find ( java.lang.String arg, java.util.ArrayList<java.lang.String> list ) { if ( ( -1 ) == ( list.indexOf ( arg ) ) ) { java.lang.System.out.printf ( "%s not in list\n", arg ) ; } else { java.lang.System.out.printf ( "%s in list at index %d\n", arg, list.indexOf ( arg ) ) ; } } 
private boolean checkForAKind () { if ( ( ( kindCounter ) == 4 ) && ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) ) { java.lang.System.out.println ( "Four of a kind!" ) ; kindCounter = 0; return true; } else if ( ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) && ( ( kindCounter ) == 3 ) ) { java.lang.System.out.println ( "Three of a kind!" ) ; kindCounter = 0; return true; } return false; } 
@ java.lang.Override public java.lang.String toString () { if ( 0 > ( id ) ) return "< New Session >"; java.util.Date dateObj = new java.util.Date ( date ) ; java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat ( "E, MMM dd yyyy" ) ; java.lang.String result = dateFormat.format ( dateObj ) ; org.joda.time.DateTime dt = new org.joda.time.DateTime ( date ) ; org.joda.time.format.DateTimeFormatter dtf = org.joda.time.format.DateTimeFormat.forPattern ( "E, MMM dd yyyy" ) ; result = dtf.print ( dt ) ; if ( ( sequenceNum ) > 0 ) { result += ( " ( " + ( sequenceNum ) ) + " ) "; } return result; } 
public void setSize ( final java.lang.Long size ) { if ( 0 != ( getPrev () ) ) { final java.lang.Long prevSize = getObject () .getIntegerKey ( ASAtom.SIZE ) ; if ( prevSize > size ) { return; } } getObject () .setIntegerKey ( ASAtom.SIZE, size ) ; } 
public boolean validateDayOfWeek ( java.time.LocalDateTime currentTime ) { application.main.Business business = new application.main.Business () ; for ( int i = 0; ( business.getOpeningDays () .length ) > i; i++ ) { if ( business.getOpeningDays () [i].equals ( currentTime.getDayOfWeek () ) ) { application.main.Utility.LOGGER.info ( "Valid business time" ) ; return true; } } application.main.Utility.LOGGER.info ( "Invalid business time" ) ; return false; } 
public void handle ( org.dsa.iot.dslink.node.actions.ActionResult event ) { try { com.serotonin.bacnet4j.type.constructed.PriorityArray priorities = getPriorityArray () ; if ( null == priorities ) return; for ( int i = 1; i <= ( priorities.getCount () ) ; i++ ) { relinquish ( i ) ; refreshPriorities () ; } } catch ( com.serotonin.bacnet4j.exception.BACnetException e ) { bacnet.BacnetPoint.LOGGER.error ( "error: ", e ) ; } } 
public int compareTo ( main.hibernate.dao.RankingDao o ) { if ( ( o.getBetScore () ) < ( this.betScore ) ) return 1; if ( ( this.betScore ) < ( o.getBetScore () ) ) return -1; return 0; } 
@ java.lang.Override public boolean deleteLink ( java.lang.String dbid, long id1, long link_type, long id2, boolean noinverse, boolean expunge ) throws java.lang.Exception { int deletionCount; try ( edu.berkeley.cs.Transaction tx = session.beginTransaction () ) { java.lang.String deleteLinkStmt = "MATCH ( n1 {id: {id1}} ) -[r:{link_type}]-> ( n2: {id: {id2}} ) DELETE r"; edu.berkeley.cs.StatementResult result = session.run ( deleteLinkStmt, edu.berkeley.cs.LinkStoreNeo4j.linkParams ( id1, link_type, id2 ) ) ; deletionCount = result.consume () .counters () .relationshipsDeleted () ; tx.success () ; } return 0 < deletionCount; } 
@ java.lang.Override public void init ( edu.uci.ics.hyracks.storage.am.common.api.ITreeIndexMetaDataFrame metaFrame ) throws edu.uci.ics.hyracks.api.exceptions.HyracksDataException { if ( null != ( confiscatedMetaNode ) ) { return; } edu.uci.ics.hyracks.storage.common.buffercache.ICachedPage metaNode = bufferCache.confiscatePage ( BufferCache.INVALID_DPID ) ; metaNode.acquireWriteLatch () ; try { metaFrame.setPage ( metaNode ) ; metaFrame.initBuffer ( edu.uci.ics.hyracks.storage.am.common.freepage.LinkedMetaDataPageManager.META_PAGE_LEVEL_INDICATOR ) ; metaFrame.setMaxPage ( 0 ) ; } finally { metaNode.releaseWriteLatch ( false ) ; confiscatedMetaNode = metaNode; appendOnly = true; } } 
public synchronized void getService () { java.util.Random rand = new java.util.Random () ; try { java.lang.Thread.sleep ( ( ( rand.nextInt ( 500 ) ) + 50 ) ) ; } catch ( java.lang.InterruptedException e ) { return; } if ( _numbers.isEmpty () ) _numberOnDisplay = -1; else { java.lang.System.out.print ( ( "Display:" + ( _numbers.getFirst () ) ) ) ; java.lang.System.out.println () ; _numberOnDisplay = _numbers.poll () ; } } 
public void keyDown ( java.lang.Integer keyInfo ) { ++ ( com.Hook.common.RecordKeyboard.pressCount ) ; java.lang.Integer count = 0; if ( com.Hook.common.RecordKeyboard.keyboardCount.containsKey ( keyInfo ) ) { count = com.Hook.common.RecordKeyboard.keyboardCount.get ( keyInfo ) ; } com.Hook.common.RecordKeyboard.keyboardCount.put ( keyInfo, ( ++count ) ) ; if ( ( ( ( com.Hook.common.RecordKeyboard.pressCount ) % ( com.Hook.common.RecordKeyboard.flagTime ) ) == 0 ) && ( ( com.Hook.common.RecordKeyboard.pressCount ) >= ( com.Hook.common.RecordKeyboard.flagTime ) ) ) { write () ; } } 
public void close ( ch.ninecode.cim.connector.CIMConnection connection ) { if ( connection != null ) if ( connection._Valid ) { connection.invalidate () ; java.util.Enumeration<javax.resource.spi.ConnectionEventListener> list = _Listeners.elements () ; javax.resource.spi.ConnectionEvent event = new javax.resource.spi.ConnectionEvent ( this, javax.resource.spi.ConnectionEvent.CONNECTION_CLOSED ) ; event.setConnectionHandle ( connection ) ; while ( list.hasMoreElements () ) list.nextElement () .connectionClosed ( event ) ; } } 
public java.lang.String getLinkedListNodes () { if ( null == ( head ) ) { return null; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head; while ( ( currentNode.getNext () ) != null ) { sb.append ( ( ( currentNode.getData () ) + " -> " ) ) ; currentNode = currentNode.getNext () ; } sb.append ( currentNode.getData () ) ; return sb.toString () ; } 
public com.epam.indigo.IndigoObject exactMatch ( com.epam.indigo.IndigoObject obj1, com.epam.indigo.IndigoObject obj2, java.lang.String flags ) { setSessionID () ; if ( null == flags ) flags = ""; com.epam.indigo.IndigoObject[] parent = new com.epam.indigo.IndigoObject[] { obj1, obj2 }; int match = com.epam.indigo.Indigo.checkResult ( this, parent, com.epam.indigo.Indigo._lib.indigoExactMatch ( obj1.self, obj2.self, flags ) ) ; if ( match == 0 ) return null; return new com.epam.indigo.IndigoObject ( this, match, parent ) ; } 
public static boolean pressed ( java.lang.String key ) { if ( null == key ) return false; else if ( apcs.Window.keyMap.containsKey ( key ) ) return apcs.Window.getInstanceFromThread () .isVirtualKeyPressed ( apcs.Window.keyMap.get ( key ) ) ; else if ( ( key.length () ) > 0 ) return apcs.Window.key.pressed ( key.charAt ( 0 ) ) ; return false; } 
public void receive ( final org.thingml.java.ext.Event event, final org.thingml.java.Port p ) { if ( active ) { event.setPort ( p ) ; queue.offer ( event ) ; if ( ( active.get () ) && ( ( root ) == null ) ) { for ( org.thingml.java.Component child : forks ) { final org.thingml.java.ext.Event child_e = event.clone () ; child.receive ( child_e, p ) ; } } } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @org.springframework.web.bind.annotation.RequestBody @javax.validation.Valid com.github.visola.familymenu.model.Person person, @org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository.findByName ( familyName ) ; if ( null != ( person.getFamily () ) ) { if ( ( loadedFamily == null ) || ( ! ( java.util.Objects.equals ( person.getFamily () .getId () , loadedFamily.getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } } person.setFamily ( loadedFamily ) ; return personRepository.save ( person ) ; } 
@ java.lang.Override protected void init () throws cc.redpen.RedPenException { if ( ( ! ( getConfigAttribute ( "min_len" ) .isPresent () ) ) && ( getSymbolTable () .getLang () .equals ( "ja" ) ) ) getProperties () .put ( "min_len", 1 ) ; } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { if ( ( ! ( move ) ) && ( drag ) ) { deselectAll () ; target.clear () ; int x = e.getX () ; int y = e.getY () ; for ( main.GObject go : gObjects ) { if ( go.covered ( eX, eY, x, y ) ) { target.add ( go ) ; go.selected () ; } } repaint () ; } } 
private Hex getWord ( Hex index ) { int i = index.toInt () ; if ( ( i < 0 ) || ( i > ( ( Simpletron.MEMORY_SIZE ) - 1 ) ) ) fatalError ( "*** index out of bounds ***" ) ; Hex word = memory[i]; if ( ( ( word.compareTo ( Simpletron.MAX_WORD ) ) > 0 ) || ( ( word.compareTo ( Simpletron.MIN_WORD ) ) < 0 ) ) { fatalError ( "*** overflow occured ***" ) ; } return word; } 
private static <T> void addGroupAtId ( java.util.List<T> seqResGroups, T group, int sequenceIndexId ) { while ( sequenceIndexId >= ( seqResGroups.size () ) ) { seqResGroups.add ( null ) ; } if ( sequenceIndexId > 0 ) { seqResGroups.set ( sequenceIndexId, group ) ; } } 
@ java.lang.Override public java.lang.String toString () { return '}' + ( ( ( ( ( ( ( ( ( ( ( "Bag{" + "id=" ) + ( id ) ) + ", name='" ) + ( name ) ) + '\'' ) + ", publicKey=" ) + ( java.util.Arrays.toString ( publicKey ) ) ) + ", shared=" ) + ( shared ) ) + ", secured=" ) + ( secured ) ) ; } 
public boolean deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db.delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES, ( favoriteID + ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) ) , null ) ; db.delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES, ( favoriteID + ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) ) , null ) ; return ( db.delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES, ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ) > 0; } 
public void resolveForwardReferences () throws org.exist.xquery.XPathException { while ( ! ( forwardReferences.empty () ) ) { final org.exist.xquery.FunctionCall call = forwardReferences.pop () ; final org.exist.xquery.UserDefinedFunction func = call.getContext () .resolveFunction ( call.getQName () , call.getArgumentCount () ) ; if ( null == func ) { throw new org.exist.xquery.XPathException ( call, ErrorCodes.XPST0017, ( "Call to undeclared function: " + ( call.getQName () .getStringValue () ) ) ) ; } call.resolveForwardReference ( func ) ; } } 
public boolean addEdge ( boolean isAnySymbol, java.lang.String transition, int sourceVertex, int sinkVertex ) { if ( ( sinkVertex <= ( graphStructure.size () ) ) && ( sourceVertex <= ( graphStructure.size () ) ) ) { graphStructure.get ( sourceVertex ) .getValue () .add ( new com.sonechka.graph.Edge ( isAnySymbol, transition, sourceVertex, sinkVertex ) ) ; return true; } return false; } 
@ java.lang.Override public void onCityLoaded ( java.util.List<com.zfwl.entity.Area> citys ) { if ( ( ( mAddress.getCity () ) != null ) && ( ( mAddress ) != null ) ) { mCurrentCity = mAddress.getCity () ; mSelectAreaPresenter.loadNextDistrict ( mCurrentCity.getId () ) ; } else { mCurrentCity = mSelectAreaPresenter.getCitysWithIndex ( 0 ) ; } cityAdapter.setDatas ( citys ) ; cityAdapter.setSelectArea ( mCurrentCity.getId () ) ; cityAdapter.notifyDataSetChanged () ; } 
public void releaseKms ( java.lang.String applicationId ) throws org.kurento.client.internal.NotEnoughResourcesException { try { de.fhg.fokus.nubomedia.kmc.KmsUrlProvider.logger.info ( ( applicationId + "releasing KMS..." ) ) ; if ( ( record ) == null ) return; vnfrService.unregisterApplication ( record.getInternalAppId () ) ; timerTask.cancel () ; } catch ( java.lang.Exception e ) { throw new org.kurento.client.internal.NotEnoughResourcesException ( ( "An error occured in releasing the KMS - " + ( e.getMessage () ) ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view.getId () ) { case R.id.previous_button: int index = ( questionPager.getCurrentItem () ) - 1; questionPager.setCurrentItem ( ( 0 < index ? index : ( questionAdapter.getCount () ) - 1 ) ) ; break; case R.id.next_button: questionPager.setCurrentItem ( ( ( ( questionPager.getCurrentItem () ) + 1 ) % ( questionAdapter.getCount () ) ) ) ; break; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView<?> parent, android.view.View view, int position, long id ) { if ( 0 == position ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; intent.setType ( "image/*" ) ; startActivityForResult ( android.content.Intent.createChooser ( intent, "Deep Life" ) , 1 ) ; } else if ( position == 4 ) { Show_DialogBox ( 100 ) ; } else { Show_DialogBox ( position ) ; } } 
private void setLanguage ( java.lang.String lang ) { java.util.Locale locale = null; if ( null == lang ) { locale = java.util.Locale.getDefault () ; } else { locale = java.util.Locale.forLanguageTag ( lang ) ; } map = be.nikiroo.jvcard.resources.Bundles.getBundle ( "resources", locale ) ; } 
public java.io.InputStream getBinaryStream ( java.lang.String columnLabel ) throws java.sql.SQLException { try { java.sql.Blob blob = getBlob ( columnLabel ) ; if ( null == blob ) return null; return blob.getBinaryStream () ; } catch ( java.lang.Exception e ) { throw new java.sql.SQLException ( ( ( "An error occurred during the retrieval of the binary stream at column '" + columnLabel ) + "'" ) , e ) ; } } 
public com.squareup.okhttp.HttpUrl.Builder newBuilder () { com.squareup.okhttp.HttpUrl.Builder result = new com.squareup.okhttp.HttpUrl.Builder () ; result.scheme = scheme; result.encodedUsername = encodedUsername () ; result.encodedPassword = encodedPassword () ; result.host = host; if ( ( com.squareup.okhttp.HttpUrl.defaultPort ( scheme ) ) == ( port ) ) { result.port = -1; } else { result.port = port; } result.encodedPathSegments.clear () ; result.encodedPathSegments.addAll ( encodedPathSegments () ) ; result.encodedQuery ( encodedQuery () ) ; result.encodedFragment = encodedFragment () ; return result; } 
public void computeCheck ( core.agent.Message message ) { core.restaurant.agent.Waiter waiter = message.get ( 0 ) ; core.restaurant.agent.Customer customer = message.get ( 1 ) ; java.lang.String choice = message.get ( 2 ) ; synchronized ( m_checks ) { m_checks.add ( new core.restaurant.Check ( waiter, customer, choice ) ) ; } print ( ( "." + ( ( ( "Computing " + ( customer.getName () ) ) + "'s check for his/her " ) + choice ) ) ) ; stateChanged () ; } 
public double[] Project ( double[] Xrgb ) { assert 2 == ( Xrgb.length ) ; java.lang.System.out.println ( ( ( ( "X = " + ( Xrgb[0] ) ) + "Y = " ) + ( Xrgb[1] ) ) ) ; int index = pointmap[ ( ( int ) ( ( ( Xrgb[1] ) * ( Constants.WIDTH ) ) + ( Xrgb[0] ) ) ) ]; double[] P = this.points.get ( index ) ; return P; } 
public static float harmonic () { float oldSum = 0.0F; float sum = 1.0F; int n = 1; while ( sum > oldSum ) { oldSum = sum; n += 1; sum += 1.0 / n; if ( ( n % 100000 ) == 0 ) { java.lang.System.out.println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; } } java.lang.System.out.println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; return sum; } 
void addRequestTime ( long requestTime, java.util.Map<java.lang.String, java.lang.Object> map ) { if ( this.includeRequestTime ) { if ( 0 < requestTime ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS.toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS.toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS.toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String.format ( "%01d.%03d", sec, ms ) ; if ( time != null ) { map.put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME, time ) ; } } } } 
public boolean contains ( long value ) { int hashCode = hash ( value ) ; int hashMarker = -1; while ( ( hashCode != hashMarker ) && ( ( this.table[hashCode] ) != ( java.lang.Long.MIN_VALUE ) ) ) { if ( ( this.table[hashCode] ) == value ) return true; if ( hashMarker == ( -1 ) ) hashMarker = hashCode; hashCode = ( hashCode + 1 ) % ( this.table.length ) ; } return false; } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { if ( ( ReminderBottomSheetDialog.UPDATE_REMINDER_REQUEST_CODE ) == requestCode ) { long timestamp = data.getLongExtra ( ReminderBottomSheetDialog.TIMESTAMP_BUNDLE_KEY, 0 ) ; java.util.Calendar calendar = new java.util.GregorianCalendar () ; calendar.setTime ( new java.util.Date ( timestamp ) ) ; onReminderUpdated ( calendar ) ; } } 
@ java.lang.Override public jp.hazuki.yuzubrowser.webkit.CustomWebView makeWebView ( boolean cacheType ) { jp.hazuki.yuzubrowser.webkit.CustomWebView web = ( cacheType ) ? new jp.hazuki.yuzubrowser.webkit.CacheWebView ( this ) : new jp.hazuki.yuzubrowser.webkit.SwipeWebView ( this ) ; web.getWebView () .setDrawingCacheEnabled ( true ) ; web.getWebView () .buildDrawingCache () ; initWebSetting ( web ) ; if ( ( AppData.accept_cookie.get () ) && ( ! ( AppData.private_mode.get () ) ) ) android.webkit.CookieManager.getInstance () .setAcceptThirdPartyCookies ( web.getWebView () , AppData.accept_third_cookie.get () ) ; return web; } 
public void setValue ( float v ) { if ( 0 > v ) v = 0; else if ( v > 1 ) v = 1; float newy = v * ( ( getHeight () ) - ( h.getHeight () ) ) ; float y = ( -newy ) + ( getY () ) ; h.setPosition ( h.getX () , ( ( getY () ) + ( -y ) ) ) ; } 
private int getDepth ( java.lang.String line ) { int depth = 1; for ( int i = 0; ( line.length () ) > i; i++ ) { if ( ( ( line.charAt ( i ) ) == '\t' ) || ( ( line.charAt ( i ) ) == ' ' ) ) { depth++; } else { break; } } return depth; } 
private void showAboutZanteDialog () { android.util.Log.v ( "HELLO", "HELLLO" ) ; android.app.FragmentTransaction ft = getFragmentManager () .beginTransaction () ; android.app.Fragment prev = getFragmentManager () .findFragmentByTag ( "shownDialog" ) ; if ( null != prev ) { ft.remove ( prev ) ; } ft.addToBackStack ( null ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment = extinctspecie.com.zantetravel.fragments.MyDialogFragment.newInstance ( extinctspecie.com.zantetravel.activities.MainActivity.CUSTOM_DIALOG_ID_FOR_ABOUT_APP ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment.setCancelable ( true ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment.show ( ft, "shownDialog" ) ; } 
@ java.lang.Override public void onHeadHit () { Gdx.app.log ( "Coin", "Collision" ) ; getCell () .setTile ( com.mkemp.mariobros.Sprites.Coin.tileSet.getTile ( BLANK_COIN ) ) ; com.mkemp.mariobros.Scenes.Hud.addScore ( 100 ) ; if ( ( BLANK_COIN ) == ( getCell () .getTile () .getId () ) ) MarioBros.manager.get ( "audio/sounds/bump.wav", com.badlogic.gdx.audio.Sound.class ) .play () ; else MarioBros.manager.get ( "audio/sounds/coin.wav", com.badlogic.gdx.audio.Sound.class ) .play () ; } 
@ java.lang.Override public void onUpdate ( net.minecraft.item.ItemStack stack, net.minecraft.world.World world, net.minecraft.entity.Entity player, int slot, boolean isCurrent ) { if ( ( ( stack.getTagCompound () ) != null ) && ( stack != null ) ) { net.minecraft.nbt.NBTTagCompound nbt = stack.getTagCompound () ; if ( ( nbt.hasKey ( "IsOpenDummy" ) ) == true ) { nbt.removeTag ( "IsOpenDummy" ) ; nbt.setBoolean ( "IsOpen", false ) ; } } } 
@ java.lang.Override public void dataUpdated ( java.lang.Integer i ) { float maxVolume = java.lang.Math.min ( dataManager.getGlobalMaxVolumeValue () , 1000 ) ; transferFunction.setMaxOrdinates ( new java.awt.geom.Point2D.Float ( maxVolume, 1.0F ) ) ; float lowestDataPoint = dataManager.getGlobalLowestVolumeValue () ; transferFunction.resetColors () ; transferFunction.setColor ( new java.awt.geom.Point2D.Float ( ( lowestDataPoint * ( maxVolume / ( dataManager.getGlobalMaxVolumeValue () ) ) ) , 0.001F ) , transferFunction.getColors () .firstEntry () .getValue () ) ; } 
public void setAllGames ( modeling.GameList allGames ) { if ( 0 != ( allGames.getGames () .size () ) ) { this.allGames = allGames.getGames () ; if ( ( currGame ) != null ) { setCurrGame ( allGames.findGame ( currGame.getGameID () ) ) ; } setChanged () ; modeling.GameList wrapperGameList = new modeling.GameList () ; wrapperGameList.setGames ( this.allGames ) ; notifyObservers ( wrapperGameList ) ; } } 
public boolean isSatisfiedByBefore ( java.util.Date date ) { java.util.Calendar testDateCal = java.util.Calendar.getInstance ( getTimeZone () ) ; testDateCal.setTime ( date ) ; testDateCal.set ( java.util.Calendar.MILLISECOND, 0 ) ; java.util.Date originalDate = testDateCal.getTime () ; testDateCal.add ( java.util.Calendar.SECOND, ( -1 ) ) ; java.util.Date timeBefore = getTimeBefore ( testDateCal.getTime () ) ; return ( timeBefore.equals ( originalDate ) ) && ( timeBefore != null ) ; } 
private void UpdatePlayerTable () { playerTable.clearChildren () ; playerTable.add ( new io.github.teamfractal.actors.Label ( "List of Players for the Game", this.game.skin ) ) ; playerTable.row () ; for ( int i = 0; ( newPlayerNames.size () ) > i; i++ ) { java.lang.System.out.print ( ( ( newPlayerNames.get ( i ) ) + "\n" ) ) ; playerTable.add ( new io.github.teamfractal.actors.Label ( newPlayerNames.get ( i ) , this.game.skin ) ) ; playerTable.row () ; } } 
public void setTopic ( java.lang.String topic ) throws java.io.IOException { for ( com.rbruno.irc.templates.Client current : clients ) current.getConnection () .send ( Reply.RPL_TOPIC, current, ( ( this.getTopic () ) + ( ( this.getName () ) + " " ) ) ) ; this.topic = topic; } 
protected void afterExecute ( java.lang.Runnable r, java.lang.Throwable t ) { try { org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent agent = ( ( org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent ) ( r ) ) ; agent.setDataReference ( null ) ; org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.dataPublisherPool.release ( agent ) ; } catch ( java.lang.Exception e ) { org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log.error ( ( ( e.getMessage () ) + "Error while returning Throttle data publishing agent back to pool" ) ) ; } } 
private boolean pntInCircle ( double px, double py, double x1, double y1, double radius ) { double diffX = x1 - px; double diffY = y1 - py; double dist = ( diffY * diffY ) + ( diffX * diffX ) ; if ( dist < ( radius * radius ) ) { return true; } else { return false; } } 
private void initializeParameters ( com.bow3n.controller.server.model.Task task ) { task.setFinished ( java.lang.Boolean.FALSE ) ; if ( null != ( task.getProject () .getId () ) ) { task.setProject ( projectRepository.findOne ( task.getProject () .getId () ) ) ; } } 
public void setConsumptionValue ( int value, com.freedomotic.model.ds.Config params, boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG.log ( java.util.logging.Level.WARNING, ( ( " is supposed to be a read only value. " + "No command is executed!" ) + "Power consumption behavior of thing ''{0}''" ) , this.getPojo () .getName () ) ; } else { consumption.setValue ( value ) ; setChanged ( true ) ; } } 
public boolean allClientsAhead ( java.lang.Long workQueueHeadTime ) { synchronized ( lock ) { for ( net.grigoriadi.sc.domain.Client client : registeredClients ) { java.lang.Long time = lastItemTimesByClient.get ( client.getClientId () ) ; if ( ( workQueueHeadTime > time ) || ( time == null ) ) { return false; } } } return true; } 
public int compare ( ScoredDocument doc1, ScoredDocument doc2 ) { if ( ( doc2.getScore () ) > ( doc1.getScore () ) ) { return -1; } else if ( ( doc1.getScore () ) > ( doc2.getScore () ) ) { return 1; } return 0; } 
@ java.lang.Override public org.apache.jmeter.report.processor.ResultData customizeResult ( org.apache.jmeter.report.processor.ResultData result ) { org.apache.jmeter.report.processor.MapResultData customizedResult = new org.apache.jmeter.report.processor.MapResultData () ; customizedResult.setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_RESULT, result ) ; if ( null != extraOptions ) { org.apache.jmeter.report.processor.MapResultData extraResult = new org.apache.jmeter.report.processor.MapResultData () ; for ( java.util.Map.Entry<java.lang.String, java.lang.String> extraEntry : extraOptions.getProperties () .entrySet () ) { extraResult.setResult ( extraEntry.getKey () , new org.apache.jmeter.report.processor.ValueResultData ( extraEntry.getValue () ) ) ; } customizedResult.setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_EXTRA_OPTIONS, extraResult ) ; } return customizedResult; } 
public void shutdown () { if ( null != ( bundleContext ) ) { try { bundleContext.getBundle ( 0 ) .stop () ; while ( ( bundleContext.getBundles () ) != null ) { java.lang.Thread.sleep ( 100 ) ; } } catch ( org.osgi.framework.BundleException e ) { e.printStackTrace () ; } catch ( java.lang.NullPointerException e ) { java.lang.System.exit ( 0 ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } } 
public void put ( java.util.Map<java.lang.String, java.lang.Object> event ) { com.lmax.disruptor.RingBuffer<com.dtstack.logstash.assembly.disruptor.MapEvent> ringBuffer = disruptor.getRingBuffer () ; long sequence = ringBuffer.next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer.get ( sequence ) ; if ( ( ( event.size () ) > 0 ) && ( event != null ) ) mapEvent.setEvent ( event ) ; } finally { ringBuffer.publish ( sequence ) ; } } 
void eliminationTournament () { while ( 1 < ( players.size () ) ) { swissTournamentRunner.GUI.wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings () ; pollForResults () ; elimination () ; } } 
public boolean validatePurchaseCategoryCode ( java.lang.String purchaseCategoryCode ) throws java.lang.Exception { boolean isvalid = true; try { java.util.List<java.lang.String> validCategoris = apiDAO.getValidPurchaseCategories () ; if ( 0 < ( validCategoris.size () ) ) { isvalid = false; for ( java.lang.String category : validCategoris ) { if ( category.equalsIgnoreCase ( purchaseCategoryCode ) ) { isvalid = true; break; } } } } catch ( java.lang.Exception e ) { throw e; } return isvalid; } 
public org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk convertToMeasureColDataChunk ( int index ) { assert ( pagesCount ) > index; if ( ( dataChunks ) == null ) { dataChunks = new org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk[pagesCount]; } try { dataChunks[index] = chunkReader.convertToMeasureChunk ( fileReader, blockId, rawData, offSet, length, index ) ; } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } return dataChunks[index]; } 
@ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( ( t.isAlive () ) && ( ( currentOwner ) == t ) ) { return true; } else if ( ( ( currentOwner ) == null ) && ( ( t == null ) || ( t.isAlive () ) ) ) { return true; } else { return false; } } 
public java.util.List<java.lang.Integer> getNotCheckedList () { java.util.List<java.lang.Integer> result = new java.util.ArrayList<java.lang.Integer> () ; for ( java.util.Map.Entry<java.lang.Integer, java.lang.Boolean> checkedEntry : checkedMap.entrySet () ) { if ( false == ( checkedEntry.getValue () ) ) result.add ( checkedEntry.getKey () ) ; } return result; } 
@ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec, org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO, codec ) ; if ( null != meta ) { if ( codec == ( org.jcodec.common.Codec.H264 ) ) { track.addVideoSampleEntry ( meta ) ; } else { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } } return track; } 
public double[] mapSubstrateOutputsToStandardOutputs ( double[] outputs ) { double[] modifiedOutputs = new double[numOutputs]; if ( ( edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.NUM_OUTPUTS_WITH_NO_ACTION ) == ( numOutputs ) ) { modifiedOutputs[NOTHING_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_NOTHING_INDEX]; } java.lang.System.out.println ( java.util.Arrays.toString ( outputs ) ) ; modifiedOutputs[edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.UP_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_UP_INDEX]; modifiedOutputs[edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.RIGHT_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_RIGHT_INDEX]; modifiedOutputs[edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.DOWN_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_DOWN_INDEX]; modifiedOutputs[edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.LEFT_INDEX] = outputs[edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_LEFT_INDEX]; return modifiedOutputs; } 
@ java.lang.Override public int hashCode () { final int prime = 31; int result = 1; result = ( ( discordUserInfo ) == null ? 0 : discordUserInfo.hashCode () ) + ( prime * result ) ; result = ( prime * result ) + ( ( kagName ) == null ? 0 : kagName.hashCode () ) ; return result; } 
public synchronized void removeFromCursor ( com.gdo.stencils.StclContext stclContext, com.gdo.stencils.key.IKey key ) { com.gdo.stencils.plug.PStcl stcl = _stencils.get ( key ) ; _stencils.remove ( key ) ; _properties.remove ( key ) ; _modified.remove ( key ) ; _locked.remove ( key ) ; if ( null != stcl ) { stcl.clear ( stclContext ) ; } } 
public po.GoodsModelPO set_signal_name ( vo.GoodsVO goods ) throws java.lang.Exception { java.util.HashMap<java.lang.String, po.GoodsModelPO> goodsModels = goodsListPO () .getGoodsModels () ; po.GoodsModelPO temp = goodsModels.get ( goods.id ) ; temp.setName ( goods.name ) ; if ( 0 < ( goods.amount ) ) { temp.setSignal ( goods.amount ) ; return temp; } return null; } 
@ org.bukkit.event.EventHandler @java.lang.SuppressWarnings ( value = "unused" ) public void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent ev ) { final org.bukkit.entity.Player p = ev.getPlayer () ; if ( ( ( plugin.getSpawns ( p ) ) != null ) || ( p.hasPermission ( "multispawn.noteleport" ) ) ) { return; } plugin.sendPlayerToSpawn ( p ) ; } 
@ org.testng.annotations.Test public void testUseIndexWithOr () throws java.lang.Exception { long idxUsagesBefore = indexUsages ( db ) ; java.util.List<com.orientechnologies.orient.core.record.impl.ODocument> qResult = db.command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or name ='a' and bar >= 0" ) ) .execute () ; org.testng.Assert.assertEquals ( qResult.size () , 2 ) ; org.testng.Assert.assertEquals ( indexUsages ( db ) , ( 2 + idxUsagesBefore ) ) ; } 
protected amidst.map.layers.EndCityLayer.ChunkProbability hasSuitableIslandFoundation ( amidst.map.Fragment_TheEnd frag, int chunkX, int chunkZ ) { float requiredInfluence = 60; java.util.List<amidst.map.EndIsland> islands = frag.getEndIslands () ; for ( amidst.map.EndIsland island : islands ) { float influence = island.influenceAtChunk ( chunkX, chunkZ ) ; if ( 0.0 <= influence ) { if ( influence >= requiredInfluence ) { return amidst.map.layers.EndCityLayer.ChunkProbability.Likely; } else { return amidst.map.layers.EndCityLayer.ChunkProbability.Possible; } } } return amidst.map.layers.EndCityLayer.ChunkProbability.None; } 
private static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( ( Endpoint.CIRCLE ) == endpoint ) return 0; if ( endpoint == ( Endpoint.ARROW ) ) return 1; if ( endpoint == ( Endpoint.TAIL ) ) return 2; if ( endpoint == null ) return 3; throw new java.lang.IllegalArgumentException () ; } 
public void setTeam ( java.lang.Integer team ) { if ( null != ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1.destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2.destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams.get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet.getPlayers () [0].getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet.getPlayers () [1].getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1.spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2.spawn () ; } 
private void updateNotifyMenu ( boolean flag ) { if ( null == ( menu ) ) return; if ( ( cn.edu.jxnu.awesome_campus.MainActivity.presenter.getCurrentSelectedID () ) == ( DrawerItem.HOME.getId () ) ) { menu.clear () ; if ( flag ) { getMenuInflater () .inflate ( R.menu.menu_notify_unread, menu ) ; } else { getMenuInflater () .inflate ( R.menu.menu_notify_none, menu ) ; } } } 
@ java.lang.Override public net.minecraft.item.ItemStack getStack () { if ( ! ( ( this.inventory ) instanceof infiniteinvo.inventory.BigInventoryPlayer ) ) { return this.inventory.getStackInSlot ( this.slotIndex ) ; } else if ( ( ( this.slotIndex ) - 9 ) < ( ( ( infiniteinvo.inventory.BigInventoryPlayer ) ( this.inventory ) ) .getUnlockedSlots () ) ) { return this.inventory.getStackInSlot ( this.slotIndex ) ; } else { return lockedStack.copy () ; } } 
@ java.lang.Override public com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.Result visitDefCall ( com.jetbrains.jetpad.vclang.term.Abstract.DefCallExpression expr, com.jetbrains.jetpad.vclang.term.expr.type.Type expectedType ) { com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.PreResult result = myTypeCheckingDefCall.typeCheckDefCall ( expr ) ; if ( ( ! ( checkPath ( result, expr ) ) ) || ( result == null ) ) { return null; } return checkResultImplicit ( expectedType, checkDefCall ( result ) , expr ) ; } 
public static boolean setByteFile ( java.lang.String fileName, java.lang.String hex ) { if ( null == ( MockFTPServerJulia.fakeFtpServer.getFileSystem () ) ) { org.mockftpserver.fake.filesystem.FileSystem fileSystem = new org.mockftpserver.fake.filesystem.UnixFakeFileSystem () ; MockFTPServerJulia.fakeFtpServer.setFileSystem ( fileSystem ) ; } org.mockftpserver.fake.filesystem.FileEntry file = new org.mockftpserver.fake.filesystem.FileEntry ( fileName ) ; java.lang.System.out.println ( hex ) ; file.setContents ( MockFTPServerJulia.hexStringToByteArray ( hex ) ) ; MockFTPServerJulia.fakeFtpServer.getFileSystem () .add ( file ) ; return true; } 
@ java.lang.Override public void Process () { setAirplaneState ( StateAirplane.LoadingPassagers ) ; enstabretagne.base.time.LogicalDuration t = enstabretagne.base.time.LogicalDuration.ofSeconds ( ( 60 * 20 ) ) ; Post ( new enstabretagne.SimEntity.airplane.Airplane.RollingToTrack () , getCurrentLogicalDate () .add ( t ) ) ; java.lang.System.out.println ( ( "getWaitTrackList in loading passagers" + ( getMyAirport () .getWaitTrackList () ) ) ) ; enstabretagne.base.utility.Logger.Information ( this.Owner () , "LoadingPassagers", Messages.LoadingPassagers ) ; } 
private static java.util.List<Tile> createGameBoard ( Board.Builder builder ) { java.util.List<Tile> tiles = new java.util.ArrayList<> () ; for ( int i = 0; ( BoardUtils.NUM_TILES ) >= i; i++ ) { tiles.add ( Tile.createTile ( i, builder.boardConfig.get ( i ) ) ) ; } return tiles; } 
private double semestrialCorrection ( final double param ) { final int debeq_pr = 59; final int debeq_au = 244; final double result; if ( 100 <= ( cachedDay ) ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0; result = ( ( 2.0 * param ) * xmult ) - param; } return result; } 
@ java.lang.Override public boolean escribirObjeto ( java.lang.Object objeto ) { try { if ( null == ( outStream ) ) { if ( ( inStream ) != null ) { inStream.close () ; inStream = null; } outStream = getOutStream ( archivo.exists () ) ; } outStream.writeObject ( archivo ) ; outStream.flush () ; return true; } catch ( java.io.IOException e ) { return false; } } 
protected com.sproutigy.libs.luceneplus.core.indices.LuceneIndex instantiate ( java.lang.String name ) throws java.io.IOException { com.sproutigy.libs.luceneplus.core.indices.LuceneIndex index = instantiated.get ( name ) ; if ( null == index ) { synchronized ( lock ) { index = instantiated.get ( name ) ; if ( null == index ) { index = prepareIndex ( name, provideDirectorySupplier ( name ) ) ; if ( isAutoOpen () ) { index.open () ; } instantiated.put ( name, index ) ; onInstantiate ( index, name ) ; } } } return index; } 
private void SendFileContent ( java.net.Socket conn, java.io.InputStream fileIs ) throws java.io.IOException { java.io.OutputStream os = conn.getOutputStream () ; byte[] b = new byte[1024]; int x = fileIs.read ( b ) ; while ( ( -1 ) != x ) { if ( x < 10 ) { b = java.util.Arrays.copyOf ( b, x ) ; } os.write ( b ) ; x = fileIs.read ( b ) ; } } 
public void Is_Valid_Person_Name ( android.widget.EditText edt ) throws java.lang.NumberFormatException { if ( 0 >= ( edt.getText () .toString () .length () ) ) { edt.setError ( "Accept Alphabets Only." ) ; valid_name = null; } else if ( ! ( edt.getText () .toString () .matches ( "[a-zA-Z ]+" ) ) ) { edt.setError ( "Accept Alphabets Only." ) ; valid_name = null; } else { valid_name = edt.getText () .toString () ; } } 
private void extendProgram () { insertAdditionalVariables () ; notNullVariables.set ( 0 ) ; org.teavm.model.Variable[] parameters = new org.teavm.model.Variable[1 + ( methodDescriptor.parameterCount () ) ]; for ( int i = 0; i < ( parameters.length ) ; ++i ) { parameters[i] = program.variableAt ( i ) ; } phiUpdater = new org.teavm.model.util.PhiUpdater () ; phiUpdater.updatePhis ( program, parameters ) ; collectAdditionalVariables () ; } 
public void add ( cque.INodePool pool, E e ) { assert null != e; cque.Node<E> n = getNode ( pool, e ) ; if ( ( tail ) == null ) { assert ( head ) == null; head = n; tail = n; } tail.setNext ( n ) ; tail = n; } 
public int getTotalPoints () { int points = 0; for ( int i = 1; ( this.cards.size () ) > i; i++ ) { points += this.cards.get ( i ) .getPoints () ; } return points; } 
@ java.lang.Override public void dispose () { timer.stop () ; byte option = ( ( byte ) ( javax.swing.JOptionPane.showConfirmDialog ( this, "Exit all programs?", "Exit Confirmation", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION ) ) ) ; if ( ( javax.swing.JOptionPane.YES_OPTION ) == option ) { java.lang.System.exit ( 0 ) ; } else if ( option == ( javax.swing.JOptionPane.NO_OPTION ) ) { super.dispose () ; } } 
public final void backup ( java.lang.String extension ) throws java.io.IOException { javi.FileDescriptor.LocalFile file2 = FileDescriptor.LocalFile.make ( ( extension + ( prop.fdes.shortName ) ) ) ; if ( ( ! ( prop.fdes.canWrite () ) ) && ( "Microsoft Corp.".equals ( java.lang.System.getProperty ( "java.vendor" ) ) ) ) history.Tools.execute ( ( "d:\\cygwin\\bin\\chmod +w " + ( prop.fdes.canonName ) ) ) ; prop.fdes.renameTo ( file2 ) ; prop.fdes.writeAll ( getStringIter () , prop.getSeperator () ) ; setReadOnly ( false ) ; } 
public void updateStorageLocation ( android.content.Context ctx, java.lang.String mount ) { if ( ( mount.equals ( "" ) ) || ( mount == null ) ) { updateStorageLocation ( ctx ) ; return; } java.lang.String currentLocation = this.getStorageLocation ( ctx ) ; if ( currentLocation.startsWith ( mount ) ) { return; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy.getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx, location ) ; } 
private boolean assertContiguous ( gnu.trove.list.TIntList list ) { if ( 2 > ( list.size () ) ) { return true; } int prev = list.get ( 0 ) ; for ( int i = 1; i < ( list.size () ) ; ++i ) { int v = list.get ( i ) ; if ( v == ( prev - 1 ) ) { prev = v; continue; } return false; } return true; } 
private void setPortraitAspectRatio () { double param = ( ( double ) ( mDisplayMetrics.widthPixels ) ) / ( ( double ) ( mDisplayMetrics.heightPixels ) ) ; for ( com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes size : com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes.values () ) { if ( ( param < ( ( size.getRatio () ) + 0.01 ) ) && ( param > ( ( size.getRatio () ) - 0.01 ) ) ) { setAspectRatio ( size.getWidth () , size.getHeight () ) ; } } } 
@ javafx.fxml.FXML public void onGroundedClick () { interactor.emptyQueue () ; logic.Extension grounded = argumentFramework.getGroundedExtension ( previousCheckBox.isSelected () ) ; java.lang.System.out.println ( ( "}" + ( "{" + ( grounded.getArgumentNames () ) ) ) ) ; setUI () ; } 
public static java.lang.Object getReflectedField ( java.lang.String fieldName, main.java.HashTable instance ) throws test.java.HashTableTests.HashTableUtilException { java.lang.Class hashTableClass = instance.getClass () ; try { java.lang.reflect.Field field = hashTableClass.getDeclaredField ( fieldName ) ; field.setAccessible ( true ) ; return field.get ( instance ) ; } catch ( java.lang.NoSuchFieldException | java.lang.IllegalAccessException e ) { java.lang.System.out.println ( e ) ; throw new test.java.HashTableTests.HashTableUtilException ( ( fieldName + "Failed to retrieve " ) ) ; } } 
private boolean playerIsLastToClose ( int number ) { boolean result = true; for ( spare.n52.yadarts.entity.Player p : this.cricketScores.keySet () ) { spare.n52.yadarts.games.cricket.CricketScore s = this.cricketScores.get ( p ) ; if ( ( ! ( s.playerHasOpened ( number ) ) ) && ( p != ( this.currentPlayer ) ) ) { result = false; } } return result; } 
@ java.lang.SuppressWarnings ( value = "deprecation" ) @java.lang.Override protected void onResume () { super.onResume () ; android.util.Log.i ( "GameActivity", "onResume" ) ; if ( ! ( mIsResumed ) ) { tryRunning () ; if ( null != ( mSensorController ) ) { mSensorController.onResume () ; } mGameSidebar.setBackgroundDrawable ( new paulscode.android.mupen64plusae.DrawerDrawable ( mGlobalPrefs.displayActionBarTransparency ) ) ; mMogaController.onResume () ; mIsResumed = true; } } 
private void updateDefStats ( boolean pic, boolean tackle, boolean loss, boolean fumblerec, boolean forcedfum, boolean sack, boolean td ) { if ( pic ) ( pics ) ++; if ( tackle ) ( tackles ) ++; if ( loss && tackle ) ( tfls ) ++; if ( fumblerec ) ( fumblerecs ) ++; if ( sack ) ( sacks ) ++; if ( td ) ( deftds ) ++; if ( forcedfum ) ( forcedfums ) ++; } 
public static void main ( java.lang.String[] args ) throws java.io.FileNotFoundException { emotion.Emotion emotion = new emotion.Emotion () ; java.util.List<java.lang.String> codes = emotion.getCodes () ; try { java.lang.String html = emotion.html ( ( "/index.htm" + ( ( com.nju.util.Constant.EMOTION_URL ) + "1F338" ) ) ) ; emotion.parseDoc ( emotion.document ( html ) ) ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
static org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier getRootInstanceIdentifier ( final java.lang.Class type ) { try { return org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier.of ( org.opendaylight.yangtools.yang.common.QName.class.cast ( type.getField ( "QNAME" ) .get ( null ) ) ) ; } catch ( java.lang.IllegalAccessException e ) { throw new java.lang.IllegalStateException ( ( type + "Constant QNAME not accessible for type" ) ) ; } catch ( java.lang.NoSuchFieldException e ) { throw new java.lang.IllegalStateException ( ( ( "Class " + type ) + " does not have QName defined" ) ) ; } } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { for ( com.firebase.client.DataSnapshot child : dataSnapshot.getChildren () ) { email = ( ( java.lang.String ) ( child.child ( "email" ) .getValue () ) ) ; java.lang.System.out.println ( ( ( email ) + "email:" ) ) ; if ( userId.equals ( myRef.getAuth () .getUid () ) ) { inGroup = true; } members.add ( email ) ; groupid.add ( email ) ; } } 
public static int[] generateDescending ( int size ) { int[] tab = new int[size]; for ( int i = 0; size > i; i++ ) { tab[i] = size - 1; } return tab; } 
@ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String message = ( args.hasNext () ) ? args.nextLine () .trim () : ""; if ( 0 < ( message.length () ) ) { conversation.add ( message ) ; } else { java.lang.System.out.println ( "ERROR: Messages must contain text" ) ; } } 
private boolean canDelete ( org.eclipse.core.resources.IResource[] resources ) { if ( ! ( ( containsOnlyNonProjects ( resources ) ) || ( containsOnlyProjects ( resources ) ) ) ) { return false; } if ( ( resources.length ) == 0 ) { return false; } for ( int i = 0; i < ( resources.length ) ; i++ ) { org.eclipse.core.resources.IResource resource = resources[i]; if ( resource.isPhantom () ) { return false; } } return true; } 
public static void releaseBatches ( org.apache.drill.exec.record.RecordBatch incoming ) { if ( incoming instanceof org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) { incoming = ( ( org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) ( incoming ) ) .getIncoming () ; } if ( incoming instanceof org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) { org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch esb = ( ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) ( incoming ) ) ; assert ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch.SortState.DONE ) == ( esb.sortState ) ; if ( ( esb.resultsIterator ) != null ) { esb.resultsIterator.close () ; esb.resultsIterator = null; } } } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( textview.getText () .equals ( "" ) ) { textview.setText ( ( "+" + ( ans ) ) ) ; } else if ( ! ( isOperator ( textview.getText () .toString () ) ) ) { textview.append ( "+" ) ; } enterClear ( enterPressed ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( null == obj ) return false; if ( obj == ( this ) ) return true; if ( ( obj.getClass () ) == ( this.getClass () ) ) { return ( this.id ) == ( ( ( Person ) ( obj ) ) .getId () ) ; } } 
public void sendPacket ( org.mcexchange.Packet p ) { try { byte id = org.mcexchange.Packet.getId ( p ) ; out.writeByte ( id ) ; p.write ( out ) ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } catch ( java.lang.NullPointerException e ) { java.lang.System.out.println ( ( "!" + ( "Tried to send an unregistered packet to Client " + ( this ) ) ) ) ; disconnect () ; } } 
@ java.lang.Override public boolean hasTop () { java.lang.System.out.println ( ( ( rowRangeIterator.hasNext () ) + ( ( ( ( thisInst ) + " hasTop () : entriesWritten==" ) + ( entriesWritten ) ) + " rowRangeIterator.hasNext () ==" ) ) ) ; return ( ( numRejects ) != ( -1 ) ) && ( ( ( ( ( numRejects ) >= ( edu.mit.ll.graphulo.skvi.RemoteWriteIterator.REJECT_FAILURE_THRESHOLD ) ) || ( rowRangeIterator.hasNext () ) ) || ( ( entriesWritten ) > 0 ) ) || ( reducer.hasTopForClient () ) ) ; } 
private void updateLocation ( android.location.Location location ) { mCurrentLocation = location; double latitude = mCurrentLocation.getLatitude () ; double longitude = mCurrentLocation.getLongitude () ; stationManager.updateLocation ( latitude, longitude ) ; route = stationManager.updateNexttation ( route ) ; setRouteTravel () ; binding.destinationStation.setText ( ( longitude + ( latitude + " : " ) ) ) ; binding.estimateTime.setText ( ( ( ( ( "ถึงสถานี" + ( desName ) ) + " ในอีก " ) + ( stationManager.updateTimeToArrive () ) ) + " นาที" ) ) ; } 
@ javax.annotation.Nullable @java.lang.Override @java.lang.SuppressWarnings ( value = "unchecked" ) public java.lang.Object getTransferLocation ( @javax.annotation.Nonnull java.lang.Object object, @javax.annotation.Nonnull java.lang.String key ) { com.google.common.collect.Multimap<java.lang.Class<?>, org.squiddev.plethora.api.transfer.ITransferProvider<?>> map = primary; java.lang.String[] parts = key.split ( "\\." ) ; for ( java.lang.String part : parts ) { java.lang.Object next = getTransferPart ( object, key, map ) ; if ( null == next ) { return null; } else { object = next; map = secondary; } } return object; } 
protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { switch ( requestCode ) { case net.lorenzobianconi.wwatcher.WWatcher.REQ_ENABLE_BT: boolean btEnabled = ( RESULT_OK ) == resultCode; configureButton ( btEnabled, false ) ; break; case net.lorenzobianconi.wwatcher.WWatcher.REQ_PICK_DEV: if ( data != null ) { java.lang.String addr = data.getExtras () .getString ( "device" ) ; android.bluetooth.BluetoothDevice device = inqMap.get ( addr ) ; new net.lorenzobianconi.wwatcher.WWatcher.BtConnect () .execute ( device ) ; } break; default: break; } } 
private java.lang.String getSystemName ( java.lang.String systemID ) { java.lang.String systemName; java.lang.String message = systemID + "Enter the name for "; systemName = javax.swing.JOptionPane.showInputDialog ( null, message ) ; EFBOUserInterfaceManager.progressBar.setValue ( 10 ) ; java.lang.System.out.println ( ( "System ID: " + systemID ) ) ; java.lang.System.out.println ( ( "Name : " + systemName ) ) ; return systemName; } 
protected void shiftRight ( int index ) { if ( isFull () ) throw new java.lang.IllegalStateException ( "Le tableau est plein" ) ; else if ( isEmpty () ) { return; } else if ( ( lastIndex ) < index ) { return; } else { for ( int i = lastIndex; i > index; i-- ) { myList[i] = myList[ ( i - 1 ) ]; } } } 
public static int next ( int digit, int size ) { int nextVal; while ( odometer.Odometer.isValid ( digit ) ) { nextVal = digit++; if ( 1 == ( ( digit % 10 ) ^ ( size + 1 ) ) ) { nextVal = 1; } } return nextVal; } 
public void test_139_ACLNotReadOtherGuidFieldTest ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry, edu.umass.cs.gnsclient.client.util.GuidEntry samEntry ) { try { try { java.lang.String result = edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client.fieldRead ( westyEntry.getGuid () , "environment", samEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace ( ( " which is wrong because it should have been rejected." + ( "Result of read of westy's environment by sam is " + result ) ) ) ; } catch ( edu.umass.cs.gnscommon.exceptions.client.ClientException e ) { } } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.failWithStackTrace ( "Exception while reading fields in ACLNotReadOtherGuidFieldTest: ", e ) ; } } 
@ java.lang.Override public void render ( java.awt.Graphics g ) { if ( ( ( this.height ) == 30 ) && ( ( this.width ) == 30 ) ) { g.setColor ( java.awt.Color.RED ) ; g.drawRect ( x, y, width, height ) ; } else { g.setColor ( java.awt.Color.RED ) ; g.drawOval ( x, y, width, height ) ; } } 
void encodeAndReply ( org.kaaproject.kaa.server.operations.service.akka.messages.io.response.SessionResponse message ) { try { sessionResponseMeter.mark () ; if ( null == ( message.getError () ) ) { processSessionResponse ( message ) ; } else { processErrors ( message.getChannelContext () , message.getErrorConverter () , message.getError () ) ; } } catch ( java.lang.Exception e ) { processErrors ( message.getChannelContext () , message.getErrorBuilder () , e ) ; } } 
private java.lang.String[] arrayListToArray ( java.util.ArrayList<java.lang.String> needingConversion ) { int count = needingConversion.size () ; java.lang.String[] converted = new java.lang.String[count]; for ( int i = 0; count > i; i++ ) { converted[i] = needingConversion.get ( i ) ; elfdreaming.app.dialog.FileSearchPane.logger.debug ( ( ( ( "converted[i]: " + ( converted[i] ) ) + " needingConversion[.get ( i ) : " ) + ( needingConversion.get ( i ) ) ) ) ; } return converted; } 
public void removeAndFail ( java.lang.Throwable cause ) { assert ctx.executor () .inEventLoop () ; if ( null == cause ) { throw new java.lang.NullPointerException ( "cause" ) ; } io.netty.channel.PendingWriteQueue.PendingWrite write = head; if ( write == null ) { return; } io.netty.util.ReferenceCountUtil.safeRelease ( write.msg ) ; io.netty.channel.ChannelPromise promise = write.promise; io.netty.channel.PendingWriteQueue.safeFail ( promise, cause ) ; recycle ( write ) ; } 
private void findHrefs () { java.util.regex.Matcher matcher = hrefPattern.matcher ( Html ) ; java.lang.String link = ""; while ( matcher.find () ) { link = matcher.group () ; if ( ( isValidDomain ( link ) ) && ( ( ! ( Suspectedlinks.contains ( link ) ) ) && ( CrawlerHandler.CheckIfUrlBeenCrawled ( link ) ) ) ) { Suspectedlinks.add ( link ) ; } } } 
@ java.lang.Override public boolean closeWindow ( uniol.aptgui.mainwindow.WindowId id ) { if ( id.getType () .isEditorWindow () ) { uniol.aptgui.editor.document.Document<?> doc = getDocument ( id ) ; if ( ( askSaveDocument ( id, getDocument ( id ) ) ) && ( doc.hasUnsavedChanges () ) ) { return false; } } if ( ( activeWindow ) == id ) { activeWindow = null; } documents.remove ( id ) ; mainWindow.removeWindow ( id ) ; return true; } 
public java.util.Optional<java.nio.file.Path> findIn ( java.util.List<java.nio.file.Path> directories ) { java.nio.file.Path file = java.nio.file.Paths.get ( link ) ; if ( ( directories.isEmpty () ) || ( file.isAbsolute () ) ) { return java.util.Optional.of ( file ) ; } else { return org.jabref.model.util.FileHelper.expandFilenameAsPath ( link, directories ) ; } } 
public void onBlockDialogInitialize () { int phoneId = getActivePhoneId () ; com.android.incallui.Log.d ( this, ( phoneId + ( ( "onBlock mCallId:" + ( mCallId ) ) + "phoneId:" ) ) ) ; com.android.incallui.Call call = mCall[phoneId]; final java.lang.String number = call.getNumber () ; final android.content.Context context = getUi () .getContext () ; mBlockContactHelper = new com.android.contacts.common.util.BlockContactHelper ( context ) ; mBlockContactHelper.setContactInfo ( number ) ; } 
@ java.lang.Override public void onSuccess ( com.google.common.base.Optional<org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options> result ) { if ( result.isPresent () ) { org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options opt = result.get () ; org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior behavior = opt.getTrafficBehavior () ; ctx.setTrafficBehavior ( ( null == behavior ? behavior : org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior.Normal ) ) ; } else { ctx.setTrafficBehavior ( TrafficBehavior.Normal ) ; } openflow13Provider.updateTrafficBehavior ( ctx.getDpid () , ctx.getTrafficBehavior () , true ) ; } 
private long getNumberRecursion ( long n ) { int sum = 0; if ( 0 == n ) return 1; else if ( n == 1 ) return 0; else if ( n == 2 ) return 1; for ( int k = 1; k <= n; k++ ) { sum += ( sequenceGeneratorA008472.getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n; } 
@ controllers.Transactional public static models.UserImpl fetchUser ( java.lang.String username ) { javax.persistence.EntityManager em = play.db.jpa.JPA.em () ; if ( null != ( em.find ( models.UserImpl.class, username ) ) ) { java.lang.System.out.println ( "ERROR NULL" ) ; } return em.find ( models.UserImpl.class, username ) ; } 
private void settleHeader () { if ( ( Build.VERSION_CODES.LOLLIPOP ) <= ( Build.VERSION.SDK_INT ) ) { if ( ( currentHeader.getTag () ) != null ) { currentHeader.setTag ( null ) ; currentHeader.animate () .z ( 0 ) ; } } } 
public static <T> boolean noneOf ( final java.lang.Iterable<T> source, final int begin, final int end, java.util.function.Predicate<T> pred ) { final java.util.Iterator<T> iter = getIteratorAtIndex ( source, begin ) ; for ( int i = begin; end != i; ++i ) { assert iter.hasNext () ; if ( pred.test ( iter.next () ) ) { return true; } } return false; } 
private void setUserType ( org.trakhound.www.trakhound.device_list.ListAdapter.ViewHolder holder ) { if ( null != ( holder.SelectionArrow ) ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) == 1 ) ) holder.SelectionArrow.setVisibility ( View.VISIBLE ) ; else holder.SelectionArrow.setVisibility ( View.GONE ) ; } if ( ( holder.OeeLayout ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) == 1 ) ) holder.OeeLayout.setVisibility ( View.VISIBLE ) ; else holder.OeeLayout.setVisibility ( View.GONE ) ; } } 
public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { results = r.select ( " tr.productListing-odd" ) ; resultsEven = r.select ( " tr.productListing-even" ) ; for ( int j = 0; ( resultsEven.size () ) > j; j++ ) { results.add ( resultsEven.get ( j ) ) ; } java.lang.System.out.println ( ( ( results.size () ) + " Results have been returned from CanadaComputers." ) ) ; return results; } 
@ java.lang.Override public void onDisable () { for ( net.techcable.npclib.NPC npc : npcm.getNPCs () ) { java.util.UUID uuid = npcm.getNPCIdFromEntity ( npc.getEntity () ) ; despawnNPC ( uuid, NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log.info ( ( uuid + "[CombatTag] Disabling npc with ID of: " ) ) ; } } com.trc202.CombatTag.CombatTag.log.info ( "[CombatTag] Disabled" ) ; } 
@ java.lang.Override public void doCommand ( java.lang.String[] args ) { if ( 1 != ( args.length ) ) { view.printErrorMessage ( new java.lang.String[] { "Arguments Error", "Please enter Directory location" } ) ; return; } controller.c String; paths = args[0]; java.io.File folderPath = null; java.lang.String[] filelist; try { folderPath = new java.io.File ( paths ) ; filelist = folderPath.list () ; view.printAnswers ( filelist ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } 
public java.util.HashSet<Tile> getKnownBombs () { java.util.HashSet<Tile> s = new java.util.HashSet<Tile> () ; if ( 0 == ( config_list.size () ) ) return s; else { s = config_list.get ( 0 ) ; for ( java.util.HashSet<Tile> h : config_list ) { s.retainAll ( h ) ; } } return s; } 
void addTunesToTuneListScreen ( java.util.ArrayList<java.lang.String> tuneNamesArray ) { if ( ( ( recursions ) < 5 ) && ( ( tuneLinks.size () ) < 1 ) ) { searchForTunes ( "remote" ) ; ( recursions ) ++; return; } android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.company.rorywalsh.folkthis.TuneListScreen.class ) ; i.putExtra ( "location", fileLocation ) ; i.putStringArrayListExtra ( "tuneNames", tuneNames ) ; i.putStringArrayListExtra ( "tuneLinks", tuneLinks ) ; startActivity ( i ) ; } 
@ java.lang.Override public void removeGroups ( org.bukkit.entity.Player player, java.lang.String world ) { if ( plugin.config.isDefaultrankallworlds () ) { java.lang.System.out.println ( "CR rankAddGlobal" ) ; world = null; } if ( false == ( plugin.config.permissionpluginhasworldsupport () ) ) { world = null; } java.lang.String[] list = net.slipcor.classranks.handlers.HandleVaultPerms.permission.getPlayerGroups ( world, player ) ; if ( list != null ) { for ( java.lang.String sRank : list ) { net.slipcor.classranks.handlers.HandleVaultPerms.permission.playerRemoveGroup ( world, player, sRank ) ; } } } 
@ javafx.fxml.FXML void testServerConnection () { if ( debug ) log.info ( ( ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) + "Testing connection to server on address: " ) ) ; java.lang.String alertMessage; if ( ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) != null ) return; else { alertMessage = ( "Address " + ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) ) + ",that you entered, is invalid! Please enter valid IPv4 address."; showAlert ( javafx.scene.control.Alert.AlertType.ERROR, "", "Invalid IP address!", alertMessage ) ; } } 
private eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType calculateMessageValidationStatus ( eu.europa.ec.fisheries.uvms.rules.model.dto.ValidationResultDto validationResult ) { if ( null != ( faReportValidationResult ) ) { if ( validationResult.isError () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.FAILED; } else if ( validationResult.isWarning () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL_WITH_WARNINGS; } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL; } } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.UNKNOWN; } } 
@ org.junit.Test public void testGetErrorMessage_multipleErrors () { java.util.List<com.isroot.stash.plugin.errors.YaccError> errors = new java.util.ArrayList<> () ; errors.add ( new com.isroot.stash.plugin.errors.YaccError ( "commit error" ) ) ; errors.add ( new com.isroot.stash.plugin.errors.YaccError ( "another error" ) ) ; java.lang.String message = yaccErrorBuilder.getErrorMessage ( errors ) ; org.assertj.core.api.Assertions.assertThat ( message ) .isEqualTo ( ( "\n" + ( ( ( ( ( com.isroot.stash.plugin.errors.YaccErrorBuilder.ERROR_BEARS ) + "\n\n" ) + "commit error\n" ) + "\n" ) + "another error\n" ) ) ) ; } 
public static com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest createInstance ( java.lang.String secretKey ) { byte[] decodedSecretKey = null; try { decodedSecretKey = si.mazi.rescu.utils.Base64.decode ( secretKey ) ; } catch ( java.io.IOException e ) { throw new com.xeiam.xchange.exceptions.ExchangeException ( "Cannot decode secret key" ) ; } return null == secretKey ? null : new com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest ( decodedSecretKey ) ; } 
private void checkValue () throws jjcron.polankam.ms.mff.cuni.cz.FormatException { switch ( unit.valueType ) { case ASTERISK: break; case PERIOD: isValueValid ( unit.values.get ( 0 ) ) ; if ( 0 != ( ( maxValue ) % ( unit.values.get ( 0 ) ) ) ) { throw new jjcron.polankam.ms.mff.cuni.cz.FormatException ( "GeneralUnit period value is not divisible" ) ; } break; case LIST: for ( java.lang.Integer number : unit.values ) { isValueValid ( number ) ; } break; } } 
@ java.lang.Override public synchronized void shutdown () { while ( clientHandlerAdapter.isConnected () ) { clientHandlerAdapter.shutdown () ; workerGroup.shutdownGracefully () ; } while ( ( tunnelHandler.isConnected () ) && ( ( tunnelHandler ) != null ) ) { tunnelHandler.shutdown () ; } } 
public int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0; ( HISTORY_SIZE ) > i; ++i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0; if ( ( placeInfo.placeId ) == placeId ) { return i + 1; } } return 0; } 
public static java.lang.String getProductPathFile ( java.lang.String productId, java.lang.String productName ) { java.lang.String path = "/" + ( ( ( ( ( com.tana.utilities.VariableUtility.getCurrentDir () ) + ( com.tana.utilities.VariableUtility.IMG_PATH_PRODUCTS ) ) + productId ) + "_" ) + productName ) ; com.tana.utilities.VariableUtility.LOGGER.info ( ( "Get product path file : " + path ) ) ; return path; } 
private java.util.List<com.netcracker.entity.helper.TaxiOrderHistory> getHistory ( java.lang.Integer pageNumber, javax.servlet.http.HttpServletRequest req ) { com.netcracker.ejb.TaxiOrderBeanLocal taxiOrderBeanLocal = getTaxiOrderBean ( req ) ; java.util.List<com.netcracker.entity.helper.TaxiOrderHistory> list = taxiOrderBeanLocal.getTaxiOrderHistory ( pageNumber, com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize, findCurrentUser () ) ; if ( 0 == ( list.size () ) ) { pageNumber--; getServletContext () .setAttribute ( "pageNumber", pageNumber ) ; list = taxiOrderBeanLocal.getTaxiOrderHistory ( pageNumber, com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize, findCurrentUser () ) ; } return list; } 
public boolean isSet ( lk.filetributed.client.rpc.services.services.joinRequest_args._Fields field ) { if ( null == field ) { throw new java.lang.IllegalArgumentException () ; } switch ( field ) { case IP_ADDRESS: return isSetIpAddress () ; case PORT: return isSetPort () ; case CLUSTER_ID: return isSetClusterID () ; } throw new java.lang.IllegalStateException () ; } 
public void enqueue ( java.lang.Object element ) { int s = size () ; if ( ( ( n ) - 1 ) == s ) { resize () ; } queueArray[ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) { rear = 0; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.Object src = e.getSource () ; if ( ( begin ) == src ) l = new Brain.TemporalLobe.Locked ( "LOCKED" ) ; else if ( src == ( back ) ) c.changePanel ( "3" ) ; } 
@ java.lang.Override public boolean contains ( java.lang.String s ) { if ( null != ( _value ) ) { int compr = s.compareTo ( _value ) ; if ( compr == 0 ) return true; else if ( ( compr < 0 ) && ( ( _left ) != null ) ) return _left.contains ( s ) ; else if ( ( compr > 0 ) && ( ( _left ) != null ) ) return _right.contains ( s ) ; } return false; } 
protected int addView ( com.tonicartos.superslim.LayoutState.View child, int position, com.tonicartos.superslim.LayoutManager.Direction direction, com.tonicartos.superslim.LayoutState state ) { int addIndex; if ( ( LayoutManager.Direction.START ) == direction ) { addIndex = 0; } else { addIndex = mLayoutManager.getChildCount () ; } if ( child.wasCached ) { state.decacheView ( position ) ; } mLayoutManager.addView ( child.view, addIndex ) ; return addIndex; } 
private void writeVariableCopy ( wyil.lang.SyntaxTree.Location<wyil.lang.Bytecode.VariableAccess> loc, java.io.PrintWriter out ) { wyil.lang.SyntaxTree.Location<wyil.lang.Bytecode.VariableDeclaration> vd = getVariableDeclaration ( loc.getOperand ( 0 ) ) ; if ( isCopyable ( vd.getType () , loc ) ) { out.print ( vd.getBytecode () .getName () ) ; } else { out.print ( ( " ) " + ( "wyjs.copy ( " + ( vd.getBytecode () .getName () ) ) ) ) ; } } 
public void normatizarComponentes () { this.corredor.setTransform ( this.corredor.getPosition () , ( ( com.badlogic.gdx.math.MathUtils.degreesToRadians ) * ( this.normatizador.normatizar ( getAnguloCorredor_Graus () ) ) ) ) ; this.anguloCalculado = this.normatizador.normatizar ( this.anguloCalculado ) ; printagemDbg ( "COMPONENTES NORMATIZADOS" ) ; } 
@ java.lang.Override public void writeBuffer ( java.nio.ByteBuffer byteBuffer, int offset, int length ) { if ( byteBuffer.hasArray () ) { writeBytes ( byteBuffer.array () , offset, length ) ; } else { for ( int pos = offset; ( offset + length ) > pos; pos++ ) { writeByte ( byteBuffer.get ( offset ) ) ; } } } 
@ java.lang.Override public cpw.mods.fml.common.network.simpleimpl.IMessage onMessage ( shedar.mods.ic2.nuclearcontrol.network.message.PacketServerUpdate message, cpw.mods.fml.common.network.simpleimpl.MessageContext ctx ) { net.minecraft.item.ItemStack stack = message.itemstack; if ( ( ( stack.getItem () ) instanceof shedar.mods.ic2.nuclearcontrol.items.ItemCardBase ) && ( stack != null ) ) { shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl helper = new shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl ( stack, 0 ) ; shedar.mods.ic2.nuclearcontrol.api.CardState state = ( ( shedar.mods.ic2.nuclearcontrol.api.IPanelDataSource ) ( stack.getItem () ) ) .update ( ContainerRemoteMonitor.panel, helper, 100 ) ; shedar.mods.ic2.nuclearcontrol.utils.NCLog.error ( helper.getUpdateSet () ) ; return new shedar.mods.ic2.nuclearcontrol.network.message.PacketClientRemoteMonitor ( helper.getUpdateSet () ) ; } return null; } 
private void setupViews () { fragmentList = ( ( org.distantshoresmedia.wifiDirect.DeviceListFragment ) ( getSupportFragmentManager () .findFragmentById ( R.id.frag_list ) ) ) ; fragmentDetails = ( ( org.distantshoresmedia.wifiDirect.DeviceDetailFragment ) ( getSupportFragmentManager () .findFragmentById ( R.id.frag_detail ) ) ) ; if ( null == ( selectedUri ) ) { findViewById ( R.id.device_detail_fragment_base_view ) .setVisibility ( View.GONE ) ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; if ( null == ( toolbar ) ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar.setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar.setCustomView ( R.layout.custom_action_bar ) ; bar.setDisplayHomeAsUpEnabled ( true ) ; } } displayCurrentStep () ; } 
public void updateUI () { int prevBtnVisibility = android.view.View.VISIBLE; int nextBtnVisibility = android.view.View.VISIBLE; if ( 0 == ( itemIndex ) ) { prevBtnVisibility = android.view.View.INVISIBLE; } else if ( ( itemIndex ) == ( ( shareClipExperience.getChildrenContents () .size () ) - 1 ) ) { nextBtnVisibility = android.view.View.INVISIBLE; } prevClipButton.setVisibility ( prevBtnVisibility ) ; nextClipButton.setVisibility ( nextBtnVisibility ) ; mediaController.hide () ; } 
public boolean isValidated () { if ( ! ( org.easystogu.utils.Strings.isDateValidate ( date ) ) ) return false; if ( ( ( this.smallNetIn ) == 0 ) && ( ( ( ( ( this.majorNetIn ) == 0 ) && ( ( this.biggestNetIn ) == 0 ) ) && ( ( this.bigNetIn ) == 0 ) ) && ( ( this.midNetIn ) == 0 ) ) ) return false; if ( ( this.majorNetIn ) <= 0 ) return false; return true; } 
@ java.lang.Override public void call ( com.moac.android.refuge.activity.MainActivity.CirclesViewModel circlesViewModel ) { mapFragment.clear () ; if ( 0 < ( circlesViewModel.maxFlow ) ) { com.moac.android.refuge.util.Visualizer.drawCountries ( refugeeDataStore, mapFragment, circlesViewModel.countries, circlesViewModel.maxFlow ) ; } else { android.widget.Toast.makeText ( this, "No refugee flows found", Toast.LENGTH_LONG ) .show () ; } } 
public <T> T read ( final java.io.InputStream content, final java.lang.Class<T> type ) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException { try { return this.mapper.fromJson ( new java.io.InputStreamReader ( content ) , type ) ; } catch ( com.google.gson.JsonIOException | com.google.gson.JsonSyntaxException e ) { timber.log.Timber.e ( e, ( "'" + ( ( ( "Error mapping json to class '" + type ) + "' with contents: '" ) + content ) ) ) ; throw e; } } 
public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options, int reqWidth, int reqHeight ) { final int height = options.outHeight; final int width = options.outWidth; int inSampleSize = 1; if ( ( width > reqWidth ) || ( height > reqHeight ) ) { final int halfHeight = height / 2; final int halfWidth = width / 2; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) && ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2; } } return inSampleSize; } 
private void onUserReceived ( com.pdrogfer.onstage.model.User user ) { android.widget.Toast.makeText ( this, ( ( user.toString () ) + "user logged and retrieved: " ) , Toast.LENGTH_SHORT ) .show () ; android.util.Log.i ( com.pdrogfer.onstage.ui.PresentationActivity.TAG, ( "onUserReceived: " + ( user.toString () ) ) ) ; com.pdrogfer.onstage.Utils.storeUserToSharedPrefs ( user.getUid () , user.getName () , user.getEmail () , user.getUserType () , this ) ; goToListActivity () ; } 
@ java.lang.Override public int makeMove () { java.util.Scanner keyboard = new java.util.Scanner ( java.lang.System.in ) ; int input = 0; java.lang.System.out.println ( "Make your move ( 1 ) Hit or ( 2 ) Stay " ) ; do { try { input = keyboard.nextInt () ; } catch ( java.util.InputMismatchException e ) { } } while ( ( input > 2 ) || ( input < 1 ) ) ; keyboard.close () ; return input; } 
private void stopped () { com.couchbase.lite.util.Log.d ( Log.TAG_CHANGE_TRACKER, "%s: Change tracker in stopped () ", this ) ; if ( null != ( client ) ) { com.couchbase.lite.util.Log.w ( Log.TAG_CHANGE_TRACKER, "%s: Change tracker calling changeTrackerStopped, client: %s", this, client ) ; client.changeTrackerStopped ( this ) ; } else { com.couchbase.lite.util.Log.w ( Log.TAG_CHANGE_TRACKER, "%s: Change tracker not calling changeTrackerStopped, client == null", this ) ; } client = null; running = false; } 
public void colsum ( int[] histogram ) { col_idx[0] = 0; int index = 0; for ( int i = 1; ( numCols ) >= i; i++ ) { col_idx[i] = index += histogram[ ( i - 1 ) ]; } java.lang.System.arraycopy ( col_idx, 0, histogram, 0, numCols ) ; growMaxLength ( nz_length, false ) ; nz_length = index; } 
public void setName ( eu.etaxonomy.cdm.model.name.TaxonName name ) { if ( ( ! ( this.name.equals ( name ) ) ) && ( ( this.name ) != null ) ) { if ( name != null ) { name.getRegistrations () .remove ( this ) ; } } this.name = name; this.name.getRegistrations () .add ( this ) ; } 
public void addJet ( java.lang.String model, double speed, double range, int capacity ) { week2.Jets[] addJets = new week2.Jets[1 + ( jets.length ) ]; for ( int i = 0; i < ( ( addJets.length ) - 1 ) ; i++ ) { addJets[i] = jets[i]; } addJets[jets.length] = new week2.Jets ( model, speed, range, capacity ) ; jets = addJets; printJets ( jets ) ; } 
public java.lang.String login () { co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser log = new co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser () ; message = log.start ( this.username, this.password ) ; java.lang.System.out.println ( ( ( message ) + "Este es el mensaje" ) ) ; if ( ( message ) != null ) { return message; } else { return "welcome"; } } 
@ java.lang.Override public void run () { try { inFromClient = new java.io.BufferedReader ( new java.io.InputStreamReader ( threadSocket.getInputStream () ) ) ; while ( ( inFromClient.ready () ) || ( ! ( spade.reporter.LLVM.shutdown ) ) ) { java.lang.String line = inFromClient.readLine () ; if ( line != null ) { parseEvent ( line ) ; } java.lang.Thread.sleep ( spade.reporter.LLVM.THREAD_SLEEP_DELAY ) ; } inFromClient.close () ; } catch ( java.lang.Exception exception ) { exception.printStackTrace ( java.lang.System.err ) ; } } 
@ org.junit.Test public void testRead () throws org.pentaho.metastore.api.exceptions.MetaStoreException { java.lang.String testName = "testName"; org.pentaho.big.data.impl.cluster.NamedClusterImpl namedCluster = new org.pentaho.big.data.impl.cluster.NamedClusterImpl () ; org.mockito.Mockito.when ( metaStoreFactory.loadElement ( testName ) ) .thenReturn ( namedCluster ) ; org.junit.Assert.assertTrue ( ( ( namedClusterManager.read ( testName, metaStore ) ) == namedCluster ) ) ; } 
public void updateTimestepAccel ( Body other ) { double d = distance ( other ) ; for ( int i = 0; 3 > i; i++ ) { double a = ( ( Constants.G ) * ( other.mass ) ) * ( ( position[i] ) - ( other.position[i] ) ) ; deltaAccel[i] += a / ( ( d * d ) * d ) ; } } 
private java.lang.CharSequence generateFieldNotPresentCondition ( final int sinceVersion, final uk.co.real_logic.sbe.ir.Encoding encoding, final java.lang.String indent ) { if ( sinceVersion == 0 ) { return ""; } return java.lang.String.format ( ( ( ( indent + " if self.actingVersion_ < %1$d:\n" ) + indent ) + " return %2$s\n\n" ) , java.lang.Integer.valueOf ( sinceVersion ) , generateLiteral ( encoding.primitiveType () , encoding.applicableNullValue () .toString () ) ) ; } 
public short getShort () throws com.wiredtiger.db.WiredTigerPackingException { boolean signed = false; format.checkType ( 'h', false ) ; if ( 'H' == ( format.getType () ) ) { signed = true; } format.consume () ; return unpackShort ( signed ) ; } 
public void setMotorSpeeds ( double left, double right, boolean usePID ) { double scale = java.lang.Math.max ( left, right ) ; if ( 1 < scale ) { left = left / scale; right = right / scale; } mLeftDrive.setSpeed ( left ) ; mLeftDrive.setUsePID ( usePID ) ; mRightDrive.setSpeed ( right ) ; mRightDrive.setUsePID ( usePID ) ; } 
private void init () { if ( ( ( beanManager () ) != null ) && ( ! ( initialized ) ) ) { synchronized ( this ) { if ( ( ( beanManager () ) != null ) && ( ! ( initialized ) ) ) { elResolver.setDelegate ( beanManager () .getELResolver () ) ; initialized = true; } } } } 
@ java.lang.Override public java.lang.String getString ( java.lang.String s, java.lang.String s1 ) { try { java.lang.String key = mEncryptionManager.getHashed ( s ) ; java.lang.String value = mPrefs.getString ( key, null ) ; if ( null != value ) return mEncryptionManager.decrypt ( value ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } return null; } 
@ java.lang.Override public org.ggp.base.util.statemachine.MachineState toGdl ( org.apache.lucene.util.OpenBitSet state ) { java.util.Set<org.ggp.base.util.gdl.grammar.GdlSentence> bases = new java.util.HashSet<org.ggp.base.util.gdl.grammar.GdlSentence> () ; int[] baseProps = propNet.getBasePropositions () ; for ( int i = state.nextSetBit ( 0 ) ; 1 != i; i = state.nextSetBit ( i ) ) { bases.add ( gdlSentenceMap.get ( ( ( baseOffset ) + i ) ) ) ; } return new org.ggp.base.util.statemachine.MachineState ( bases ) ; } 
@ java.lang.Override public void visitMethodInsn ( int opcode, java.lang.String owner, java.lang.String name, java.lang.String desc ) { if ( ( ! ( org.caesarj.runtime.mixer.ConstructorMixer.isConstructor ( name ) ) ) || ( ( done ) || ( opcode != ( org.objectweb.asm.Opcodes.INVOKESPECIAL ) ) ) ) { super.visitMethodInsn ( opcode, owner, name, desc ) ; return; } done = true; super.visitMethodInsn ( opcode, superClassName, name, this.desc ) ; } 
public static com.blazingkin.interpreter.executor.lambda.LambdaExpression getLambdaExpression ( java.lang.String name, java.lang.String[] args ) { if ( ( name.contains ( " ) " ) ) && ( name.contains ( " ( " ) ) ) { com.blazingkin.interpreter.executor.lambda.LambdaExpression le = com.blazingkin.interpreter.executor.lambda.LambdaParser.parseLambdaExpression ( name ) ; return ( ( com.blazingkin.interpreter.executor.lambda.LambdaExpression ) ( le.getValue () .value ) ) .cloneWithArgs ( args ) ; } return com.blazingkin.interpreter.executor.lambda.LambdaRegistrar.runtimeDefinedLambdaExpressions.get ( name ) .cloneWithArgs ( args ) ; } 
private void addPhotos ( java.lang.Integer id, java.util.List<org.springframework.web.multipart.MultipartFile> photos ) { java.lang.String contextPath = servletContext.getRealPath ( "/pages/" ) ; for ( org.springframework.web.multipart.MultipartFile file : photos ) { try { org.apache.commons.io.FileUtils.writeByteArrayToFile ( new java.io.File ( ( ( file.getOriginalFilename () ) + ( ( ( contextPath + "/images/albums/" ) + id ) + "/" ) ) ) , file.getBytes () ) ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } } } 
@ java.lang.Override public void execute () { double translationPower = leftJoystick.getVector () .getMagnitude () ; setTargetHeading () ; double headingError = poseSubsystem.getCurrentHeading () .difference ( targetHeadingSupplier.getAsDouble () ) ; double rotationPower = headingDrivePid.calculate ( 0, headingError ) ; driveSubsystem.tankDrivePowerMode ( ( rotationPower + translationPower ) , ( translationPower - rotationPower ) ) ; } 
@ java.lang.Override public java.util.Collection<org.openhab.binding.zwave.internal.protocol.SerialMessage> getDynamicValues ( boolean refresh ) { java.util.ArrayList<org.openhab.binding.zwave.internal.protocol.SerialMessage> result = new java.util.ArrayList<org.openhab.binding.zwave.internal.protocol.SerialMessage> () ; if ( true == refresh ) { initialiseName = false; initialiseLocation = false; } if ( ( initialiseName ) == false ) { result.add ( this.getNameMessage () ) ; } if ( ( initialiseLocation ) == false ) { result.add ( this.getLocationMessage () ) ; } return result; } 
private boolean verifyPermissions ( int[] grantResults ) { if ( 1 > ( grantResults.length ) ) { return false; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false; } } return true; } 
public java.util.ArrayList<rifGenericLibrary.taxonomyServices.TaxonomyTerm> getImmediateChildTerms ( final java.lang.String parentTermIdentifier ) throws rifGenericLibrary.system.RIFServiceException { java.util.ArrayList<rifGenericLibrary.taxonomyServices.TaxonomyTerm> results = new java.util.ArrayList<rifGenericLibrary.taxonomyServices.TaxonomyTerm> () ; if ( null == parentTermIdentifier ) { return results; } rifGenericLibrary.taxonomyServices.TaxonomyTerm parentTerm = getTerm ( parentTermIdentifier ) ; if ( parentTerm == null ) { rifGenericLibrary.system.RIFServiceExceptionFactory rifServiceExceptionFactory = new rifGenericLibrary.system.RIFServiceExceptionFactory () ; rifServiceExceptionFactory.createNonExistentTaxonomyTerm ( taxonomyServiceID, parentTermIdentifier ) ; } return parentTerm.getChildTerms () ; } 
boolean add ( E item ) { boolean newItem = ! ( this.linkedHashSet.remove ( item ) ) ; if ( newItem ) { this.linkedHashSet.add ( item ) ; } if ( ( com.box.sdk.LRUCache.MAX_SIZE ) <= ( this.linkedHashSet.size () ) ) { java.util.Iterator<E> it = this.linkedHashSet.iterator () ; it.next () ; it.remove () ; } return newItem; } 
public void remove ( java.lang.String[] parm ) { java.lang.String nId = parm[0]; org.zywx.wbpalmstar.plugin.uexLocalNotification.EAlarmReceiver.cancelAlerm ( mContext, ( ( mContext.getPackageName () ) + nId ) ) ; if ( ( ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map ) != null ) && ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map.containsKey ( nId ) ) ) { int id = org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map.get ( nId ) ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map.remove ( nId ) ; if ( ( notificationManager ) != null ) { notificationManager.cancel ( id ) ; } } } 
@ java.lang.Override public void onEvent () { if ( ( ( sendLink.getRemoteState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) || ( ( ! ( this.getIsClosingOrClosed () ) ) && ( ( sendLink.getLocalState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) ) ) { recreateSendLink () ; } } 
public void parseCommandObject ( common.CommandObject commandObj, boolean isUndoAction, boolean isRedoAction ) { if ( ! ( isRedoAction || isUndoAction ) ) { commandObj.setLastSearchedIndex ( lastSearchedIndex ) ; } logic.CommandFacade commandFacade = new logic.CommandFacade ( taskList, undoList, redoList, lastOutputTaskList, commandObj, isUndoAction, isRedoAction ) ; commandFacade.run () ; updateLists ( commandFacade ) ; java.lang.System.out.println ( ( "Last searched index = " + ( lastSearchedIndex ) ) ) ; } 
public void freePearlFromMercury ( vg.civcraft.mc.prisonpearl.PrisonPearl pp, java.lang.String reason, java.lang.String server ) { storage.removePearl ( pp, reason ) ; if ( ( ( pp.getImprisonedPlayer () ) != null ) && ( server != null ) ) { respawnPlayerCorrectly ( pp.getImprisonedPlayer () , pp ) ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Response<com.birdcopy.BirdCopyApp.Http.CallResultCode> response ) { com.birdcopy.BirdCopyApp.Http.CallResultCode result = response.body () ; if ( ( ! ( "-1".equalsIgnoreCase ( result.getRs () ) ) ) && ( "1".equals ( result.getRc () ) ) ) { if ( delegate != null ) { delegate.completion ( true ) ; } } } 
public java.util.List<chipmunk.segmenter.Word> map ( java.util.List<chipmunk.segmenter.Word> words ) { java.util.List<chipmunk.segmenter.Word> new_words = new java.util.LinkedList<> () ; for ( chipmunk.segmenter.Word word : words ) { chipmunk.segmenter.Word new_word = vocab_.get ( word.getWord () ) ; assert null != new_word; new_words.add ( new_word ) ; } return new_words; } 
int valueToInt ( java.lang.Object value, int defaultValue ) { int reply = defaultValue; if ( ( value instanceof java.lang.String ) && ( value != null ) ) { try { reply = java.lang.Integer.valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) { } } return reply; } 
@ java.lang.Override protected java.util.Date fromString ( java.lang.String input ) { for ( java.text.SimpleDateFormat formatter : parsers ) { try { return formatter.parse ( input ) ; } catch ( java.text.ParseException ex ) { } } com.univocity.parsers.conversions.DataProcessingException exception = new com.univocity.parsers.conversions.DataProcessingException ( ( ( java.util.Arrays.toString ( formats ) ) + "Cannot parse '{value}' as a valid date. Supported formats are: " ) ) ; exception.setValue ( input ) ; throw exception; } 
private boolean better ( java.util.Set<de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D> newPolygon, java.util.Set<de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D> bestPolygon ) { return ( ( ( newPolygon.size () ) < ( bestPolygon.size () ) ) && ( ( newPolygon.size () ) != 0 ) ) || ( ( bestPolygon.size () ) == 0 ) ; } 
public org.smartbirdpj.mdl.Point getPoint ( java.util.Map<java.lang.Integer, java.util.Map<java.lang.Integer, org.smartbirdpj.mdl.Point>> map, int han, int hu ) { org.smartbirdpj.mdl.Point rv = null; if ( ( org.smartbirdpj.engine.controller.PointHolder.HAN_MAX ) <= han ) { han = org.smartbirdpj.engine.controller.PointHolder.HAN_MAX; hu = org.smartbirdpj.engine.controller.PointHolder.HU_MAX; } try { rv = map.get ( han ) .get ( hu ) ; } catch ( java.lang.NullPointerException e ) { rv = null; } rv.setHan ( han ) ; rv.setHu ( hu ) ; return rv; } 
public void loginButtonPressed ( android.view.View v ) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException { loginProgressBar.setVisibility ( View.VISIBLE ) ; hideKeyboard () ; loginInfo.setText ( "" ) ; accountName = inputUsername.getText () .toString () ; password = inputPassword.getText () .toString () ; if ( ( ! ( password.equals ( "" ) ) ) && ( ! ( accountName.equals ( "" ) ) ) ) { thorleifz.wakeup.LogIn.LoginTask loginTask = new thorleifz.wakeup.LogIn.LoginTask () ; loginTask.execute () ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call<com.movielist.aishwarytandon.movielist.MovieResponse> call, retrofit2.Response<com.movielist.aishwarytandon.movielist.MovieResponse> response ) { java.util.List<com.movielist.aishwarytandon.movielist.Movie> movies = response.body () .getResults () ; recyclerView.setAdapter ( new com.movielist.aishwarytandon.movielist.MovieAdapter ( movies, R.layout.list_item_movie, getApplicationContext () ) ) ; android.util.Log.d ( com.movielist.aishwarytandon.movielist.MainActivity.TAG, ( ( movies.size () ) + "Number of movies received: " ) ) ; } 
@ java.lang.Override public java.lang.String getReply () { org.academiadecodigo.bootcamp8.shared.message.Message<java.lang.String> msg = null; try { msg = ( ( org.academiadecodigo.bootcamp8.shared.message.Message ) ( objectInputStream.readObject () ) ) ; } catch ( java.io.IOException | java.lang.ClassNotFoundException e ) { java.lang.System.err.println ( ( ( e.getMessage () ) + "Error reading stream " ) ) ; } return msg.getContent () ; } 
public java.util.List<hr.fer.tki.evolution_algorithm.chromosome.IChromosome> getBestSolutions ( int num ) { java.util.List<hr.fer.tki.evolution_algorithm.chromosome.IChromosome> solutions = new java.util.ArrayList<> () ; this.evaluatePopulation ( this.population ) ; this.sortPopulation () ; for ( int i = 0; num > i; i++ ) { solutions.add ( this.population.get ( i ) ) ; } for ( hr.fer.tki.evolution_algorithm.chromosome.IChromosome chromosome : solutions ) { java.lang.System.out.println ( chromosome.getFitness () ) ; } return solutions; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; if ( ( RESULT_OK ) != resultCode ) return; switch ( requestCode ) { case ya.haojun.roadtoadventure.activity.MainActivity.REQUEST_PROFILE: if ( data.getBooleanExtra ( "logout", false ) ) { ya.haojun.roadtoadventure.helper.SPHelper.clearUser ( this ) ; openActivity ( ya.haojun.roadtoadventure.activity.PermissionActivity.class ) ; finish () ; } else { rv_drawer.getAdapter () .notifyItemChanged ( 0 ) ; } break; } } 
public org.osgl.util.S.Buffer prepend ( java.lang.StringBuffer sb ) { if ( null == sb ) return appendNull () ; int len = sb.length () ; ensureCapacityInternal ( ( ( count ) + len ) ) ; java.lang.System.arraycopy ( value, 0, value, count, count ) ; sb.getChars ( 0, len, value, 0 ) ; count += len; return this; } 
private boolean projectHasItestsDependency () { java.util.List<org.apache.maven.model.Dependency> deps = project.getDependencies () ; boolean containsItests = false; while ( ( !containsItests ) && ( deps.iterator () .hasNext () ) ) { org.apache.maven.model.Dependency d = ( ( org.apache.maven.model.Dependency ) ( deps.iterator () .next () ) ) ; containsItests |= ( d.getArtifactId () .equals ( "itests" ) ) && ( d.getGroupId () .equals ( "org.universAAL.support" ) ) ; } return containsItests; } 
protected java.util.List retrieveClassesForIngredients () { if ( getFixSpace () .strategy () .equals ( IngredientSpaceStrategy.LOCAL ) ) return originalVariant.getAffectedClasses () ; if ( ( getFixSpace () .strategy () .equals ( IngredientSpaceStrategy.PACKAGE ) ) || ( getFixSpace () .strategy () .equals ( IngredientSpaceStrategy.GLOBAL ) ) ) return this.mutatorSupporter.getFactory () .Type () .getAll () ; return null; } 
@ java.lang.Override public com.jt.commons.GenericRecord call ( com.jt.commons.GenericRecord rec1, com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec2.get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec1.get ( Constants.CLOSE ) ) ) ) / 2; rec1.put ( Constants.CLOSE, avg ) ; return rec1; } 
@ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { accessToken = loginResult.getAccessToken () ; userProfile = com.facebook.Profile.getCurrentProfile () ; if ( null != ( userProfile ) ) { com.andela.bark.models.User user = com.andela.bark.models.User.createFacebookUser ( userProfile ) ; com.andela.bark.GKprManger gKprManger = new com.andela.bark.GKprManger ( user ) ; if ( gKprManger.isAuthenticated ) { android.content.Intent i = new android.content.Intent ( activity, com.andela.bark.FragmentHostActivity.class ) ; activity.startActivity ( i ) ; } } } 
public void init ( org.magic.api.beans.MagicDeck deck ) { cards = new java.util.ArrayList<org.magic.api.beans.MagicCard> () ; for ( java.util.Map.Entry<org.magic.api.beans.MagicCard, java.lang.Integer> cci : deck.getMap () .entrySet () ) { org.magic.api.beans.MagicCard mc = cci.getKey () ; for ( int i = 0; ( cci.getValue () ) > i; i++ ) cards.add ( mc ) ; } refresh () ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { if ( ( RESULT_OK ) == resultCode ) { io.emqtt.emqandroidtoolkit.model.Connection connection = data.getParcelableExtra ( ConnectionActivity.EXTRA_CONNECTION ) ; if ( null != connection ) { switch ( requestCode ) { case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_ADD: mConnectionAdapter.notifyItemInserted ( ( ( mConnectionResults.size () ) - 1 ) ) ; break; case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_EDIT: mConnectionAdapter.notifyItemChanged ( mPosition ) ; break; } } } } 
private void handleByTerminatingIfWithinDialog ( android.javax.sip.ClientTransaction clientTransaction ) { logger.debug ( "{} request failed because call or transaction did not exist.", clientTransaction.getRequest () .getMethod () ) ; android.javax.sip.Dialog dialog = clientTransaction.getDialog () ; if ( ( ! ( ( ( dialog.getState () ) == ( android.javax.sip.DialogState.EARLY ) ) || ( ( dialog.getState () ) == ( android.javax.sip.DialogState.TERMINATED ) ) ) ) && ( dialog != null ) ) { sendByeRequest ( dialog ) ; throw new org.github.sipuada.events.ResponsePostponed () ; } } 
public static void assertEquals ( java.lang.String message, java.lang.Object expected, java.lang.Object actual ) { boolean condition; if ( null == expected ) { condition = actual == null; } else { condition = expected.equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog.assertTrue ( message, condition ) ; } 
public void update () { width = display.getFrame () .getWidth () ; height = display.getFrame () .getHeight () ; keyManager.update () ; if ( null != ( dev.Same4254.ThisGame.States.State.getCurrentState () ) ) dev.Same4254.ThisGame.States.State.getCurrentState () .update () ; repaint () ; java.lang.System.out.println ( ( "Pro: " + ( dev.Same4254.ThisGame.Entities.Prophecy.prophosizing ) ) ) ; } 
public boolean canAdvance ( java.util.ArrayList<java.lang.Integer> counters, java.util.ArrayList<java.lang.Integer> boundaries ) { for ( int cElem = 0; ( cElem < ( boundaries.size () ) ) && ( cElem < ( counters.size () ) ) ; ++cElem ) { if ( ! ( counters.get ( cElem ) .equals ( boundaries.get ( cElem ) ) ) ) return true; } return false; } 
public java.lang.Integer getGratitudesComplete () { java.lang.Integer gratitudeComplete = 0; for ( java.lang.String gratitude : gratitudes ) { gratitudeComplete += java.lang.Math.max ( 100, ( ( 100 * ( gratitude.length () ) ) / ( ai.victorl.toda.data.entry.Entry.MIN_ENTRY_LENGTH ) ) ) ; } return java.lang.Math.min ( 100, java.lang.Long.valueOf ( java.lang.Math.round ( ( gratitudeComplete / 3.0 ) ) ) .intValue () ) ; } 
private void init ( com.jaspersoft.jasperserver.jaxrs.client.core.SessionStorage sessionStorage ) { com.jaspersoft.jasperserver.jaxrs.client.core.RestClientConfiguration configuration = sessionStorage.getConfiguration () ; contentType = ( ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) == ( configuration.getContentMimeType () ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML; acceptType = ( ( configuration.getAcceptMimeType () ) == ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML; headers = new javax.ws.rs.core.MultivaluedHashMap<java.lang.String, java.lang.String> () ; usersWebTarget = sessionStorage.getRootTarget () .path ( "/rest_v2" ) .register ( com.jaspersoft.jasperserver.jaxrs.client.providers.CustomRepresentationTypeProvider.class ) .register ( org.glassfish.jersey.media.multipart.internal.MultiPartWriter.class ) ; } 
private void buildItemWithTwoRows () { createDVPanels () ; java.lang.String text = getLatexString ( isInputTreeItem () , org.geogebra.web.web.gui.view.algebra.RadioTreeItem.LATEX_MAX_EDIT_LENGHT ) ; latex = null != text; if ( updateDefinitionPanel () ) { } plainTextItem.clear () ; plainTextItem.add ( definitionPanel ) ; if ( updateValuePanel ( text ) ) { outputPanel.add ( valuePanel ) ; plainTextItem.add ( outputPanel ) ; org.geogebra.common.util.debug.Log.debug ( "[AVR] Value panel is updated" ) ; } ihtml.clear () ; ihtml.add ( plainTextItem ) ; } 
public final boolean newProject ( java.lang.String projectName ) { final de.dfki.vsm.editor.project.ProjectEditor editor = new de.dfki.vsm.editor.project.ProjectEditor () ; editor.getSceneFlowEditor () .getSceneFlow () .setName ( editor.getEditorProject () .getEditorConfig () .sMAINSUPERNODENAME ) ; addProjectTab ( projectName, editor ) ; if ( 1 == ( mProjectEditors.getTabCount () ) ) { setContentPane ( mProjectEditors ) ; mEditorMenuBar.setVisible ( true ) ; } refresh () ; return true; } 
private void sendPackets ( java.util.ArrayList<sr.Packet> packets ) throws java.io.IOException { while ( ( m_winUpper ) != ( m_lastSent ) ) { m_lastSent = ( ( m_lastSent ) + 1 ) % ( m_modulo ) ; m_actual = m_actual += 1; sr.Packet p = packets.get ( m_actual ) ; m_socket.send ( p.getDatagramPacket ( m_destAddr, m_destPort ) ) ; m_timeouts.startTimer ( p, sr.SelectiveRepeatUnit.PACKET_TIMEOUT ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( android.view.View.GONE ) == ( duringDetail.getVisibility () ) ) { duringDetail.setVisibility ( View.VISIBLE ) ; beforeDetail.startAnimation ( fadeIn ) ; } else { duringDetail.setVisibility ( View.GONE ) ; beforeDetail.startAnimation ( fadeOut ) ; } } 
public void newArray ( int size ) { com.himamis.retex.editor.share.meta.MetaArray meta = formula.getMetaModel () .getArray () ; com.himamis.retex.editor.share.model.MathArray array = new com.himamis.retex.editor.share.model.MathArray ( formula, meta, size ) ; currentField.addArgument ( currentOffset, array ) ; com.himamis.retex.editor.share.model.MathSequence field = new com.himamis.retex.editor.share.model.MathSequence ( formula ) ; array.setArgument ( 0, field ) ; for ( int i = 1; size > i; i++ ) { array.setArgument ( i, new com.himamis.retex.editor.share.model.MathSequence ( formula ) ) ; } currentField = field; currentOffset = 0; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.common_names_description ) ; android.os.Bundle extras = getIntent () .getExtras () ; common_name_rowid = extras.getLong ( CommonNamesAdapter.COMMON_NAME_ROWID ) ; common_name = extras.getString ( CommonNamesAdapter.COMMON_NAME ) ; common_name_count = extras.getString ( CommonNamesAdapter.COMMON_NAME_COUNT ) .toString () ; description = ( text ) + ( common_name ) ; balu.android.CommonNameDescription.tv = ( ( android.widget.TextView ) ( findViewById ( R.id.common_name_description_text ) ) ) ; balu.android.CommonNameDescription.tv.setText ( description ) ; } 
public long getNextChapterStart ( long position ) { long ret = com.monsterbutt.homeview.plex.media.PlexVideoItem.BAD_CHAPTER_START; if ( hasChapters () ) { for ( com.monsterbutt.homeview.plex.media.Chapter chapter : mVideo.getChapters () ) { if ( position < ( chapter.getStartTimeOffset () ) ) { ret = chapter.getStartTimeOffset () ; break; } } } return ret; } 
private void updateFaceCentroid () { faceCentroid.setToZero () ; for ( int i = 0; ( edges.size () ) > i; i++ ) faceCentroid.add ( edges.get ( i ) .getOriginVertex () .getPosition () ) ; faceCentroid.scale ( ( 1.0 / ( edges.size () ) ) ) ; } 
private boolean changedMins () { try { return ! ( ( java.lang.Double.parseDouble ( this.time.getEditor () .getText () ) ) == ( java.lang.Double.parseDouble ( this.minutes ) ) ) ; } catch ( java.lang.Exception e ) { return false; } } 
public static void index () { com.google.gson.Gson gson = new com.google.gson.Gson () ; int statsCount = ( ( int ) ( controllers.DailyStat.count () ) ) ; java.util.List<controllers.DailyStat> dailyStats = controllers.DailyStat.all () .from ( ( statsCount - 10 ) ) .fetch ( 5 ) ; if ( null != dailyStats ) { render ( dailyStats ) ; } else { renderHtml ( "empty" ) ; } } 
private void deleteTask ( java.lang.String[] taskString ) { for ( int i = 0; ( tasks.size () ) > i; i++ ) { if ( taskString[0].equals ( tasks.get ( i ) .getTitle () ) ) { if ( taskString[1].equals ( tasks.get ( i ) .getDescription () ) ) { tasks.remove ( i ) ; writePreferences () ; } } } } 
private void notifyRendering () { if ( ! ( mRenderingState.inWaitingState ) ) { return; } mRenderingState.inWaitingState = false; if ( null != ( drawTask ) ) { drawTask.requestClear () ; } if ( mUpdateInNewThread ) { synchronized ( this ) { mDrawTimes.clear () ; } synchronized ( drawTask ) { drawTask.notifyAll () ; } } else { mDrawTimes.clear () ; removeMessages ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; sendEmptyMessage ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; } } 
@ java.lang.Override public void in ( java.lang.String token ) { messageToken = token; l ( ( " is in" + token ) ) ; l ( java.lang.String.valueOf ( session.getWits () .size () ) ) ; if ( ( session.getWits () .size () ) < 3 ) { org.json.JSONObject attr = new org.json.JSONObject () ; session.sendTo ( localStream, true, attr, token ) ; } } 
public void checkForWinner () { for ( Car c : cars ) if ( c.checkWin () ) { javax.swing.JOptionPane.showMessageDialog ( null, ( ( c.getDistanceTraveled () ) + ( ( ( ( "We have a winner!\nCar " + ( c.getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c.getRacingNumber () ) ) + " : " ) ) ) ; } } 
protected void generateStaticKeyFunctionForRole ( pt.ist.fenixframework.dml.Role role, java.io.PrintWriter out ) { if ( ( Role.MULTIPLICITY_MANY ) == ( role.getMultiplicityUpper () ) ) { println ( out, generateMapKeyFunction ( role.getName () , role.getType () .getFullName () , "Comparable<?>", "Oid", false ) ) ; } } 
private void checkMinutesSinceLastAction () { if ( 0 < ( stateMachine.getCurrent () .getPomosDone () ) ) { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction; } if ( ( minutesSinceLastAction ) >= ( settings.getIdleTime () ) ) { stateMachine.reset () ; } } } 
public jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException, jxl.read.biff.BiffException { assertTrue ( ( 0 < ( workbook.getSheets () .length ) ) ) ; for ( java.lang.String name : workbook.getSheetNames () ) { if ( name.equals ( getResources ( activityTestRule ) .getString ( R.string.default_sheet_name ) ) ) { return workbook.getSheet ( name ) ; } } workbook.close () ; return null; } 
public int base2int ( char base ) { int intVal = -1; switch ( base ) { case 'A': intVal = 0; break; case 'C': intVal = 1; break; case 'G': intVal = 2; break; case 'T': intVal = 3; break; case 'N': intVal = 4; default: throw new java.lang.IllegalArgumentException ( ( base + "Invalid character: " ) ) ; } return intVal; } 
public int run () { int exponent = 1000; java.math.BigInteger base = java.math.BigInteger.valueOf ( 2 ) ; java.math.BigInteger value = java.math.BigInteger.ZERO; int sum = 0; value = base.pow ( exponent ) ; java.lang.String str = value.toString () ; for ( int i = 0; ( ( str.length () ) - 1 ) > i; i++ ) sum += ( ( int ) ( ( str.charAt ( i ) ) - '0' ) ) ; return sum; } 
public static int findMaxArg ( int upperBound, int lowerBound, int page ) { int maxCandidate = 0; java.lang.Double maxCandidateValue = 0.0; for ( int i = upperBound; lowerBound > i; i++ ) { if ( ( pagenumber.Viterbi.viterbiPages.get ( page ) .get ( i ) ) > maxCandidateValue ) { maxCandidateValue = pagenumber.Viterbi.viterbiPages.get ( page ) .get ( i ) ; maxCandidate = i; } } return maxCandidate; } 
public static void activeClock ( int id ) { mine.android.api.modules.ClockEntry clockEntry = mine.android.api.ClockEntryAPI.getById ( id ) ; if ( ! ( clockEntry.isActive () ) ) { clockEntry.setActive ( true ) ; mine.android.api.ClockEntryAPI.updateClockEntry ( clockEntry ) ; } java.util.Calendar nextAlarmTime = mine.android.api.AlarmAPI.getNextAlarmTime ( clockEntry ) ; android.util.Log.i ( ( id + "next alarm time for id: " ) , nextAlarmTime.getTime () .toString () ) ; mine.android.api.AlarmAPI.setTimer ( id, nextAlarmTime ) ; } 
public void setPageLength ( int pLength ) { if ( pLength != ( pageLength ) ) { pageLength = pLength; page = ( startIndex ) / pLength; checkPageCount () ; grid.setHeightByRows ( pLength ) ; grid.setHeightMode ( HeightMode.ROW ) ; if ( ! ( setStartIndex () ) ) { fireItemSetChange () ; } } } 
@ java.lang.Override public java.lang.Boolean call () throws java.lang.Exception { try { consumerVertex.scheduleForExecution ( consumerVertex.getExecutionGraph () .getScheduler () , consumerVertex.getExecutionGraph () .isQueuedSchedulingAllowed () ) ; } catch ( java.lang.Throwable t ) { fail ( new java.lang.IllegalStateException ( ( consumerVertex + ( "Could not schedule consumer " + "vertex " ) ) , t ) ) ; } return true; } 
@ java.lang.Override public void validate ( java.lang.Object obj, org.springframework.validation.Errors err ) { boolean isAllNull = true; edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm workspaceForm = ( ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm ) ( obj ) ) ; java.util.List<edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace> workspaceList = workspaceForm.getWorkspaceList () ; if ( null != workspaceList ) { for ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace workspace : workspaceList ) { java.lang.String internalId = workspace.getId () ; if ( internalId != null ) { isAllNull = false; } } err.reject ( "workspace_selection.required" ) ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( null != bundleExtra ) { if ( ( user ) != null ) { artRated = ( ( java.util.HashMap<java.lang.String, java.lang.String> ) ( dataSnapshot.child ( "Users" ) .child ( user.getDisplayName () ) .child ( "rated" ) .getValue () ) ) ; updateRatingView () ; addClickListeners () ; } } } 
public java.lang.String getTime () { java.lang.String ret = ""; if ( 10 > ( hour ) ) ret += " "; ret += ( java.lang.String.valueOf ( hour ) ) + " : "; if ( ( minute ) < 10 ) ret += " "; ret += java.lang.String.valueOf ( minute ) ; return ret; } 
@ java.lang.Override public void onResult ( com.google.android.gms.plus.People.LoadPeopleResult peopleData ) { if ( ( com.google.android.gms.common.api.CommonStatusCodes.SUCCESS ) == ( peopleData.getStatus () .getStatusCode () ) ) { com.google.android.gms.plus.model.people.PersonBuffer personBuffer = peopleData.getPersonBuffer () ; try { int count = personBuffer.getCount () ; for ( int i = 0; i < count; i++ ) { } } finally { personBuffer.close () ; } } else { } } 
@ java.lang.Override public void tickPrice ( int orderId, int field, double price, int canAutoExecute ) { java.lang.System.out.println ( ( price + ( ( ( ( "Ticker ID " + orderId ) + " FIELD " ) + field ) + " PRICE " ) ) ) ; if ( ( ( TickType.BID ) == field ) || ( ( TickType.ASK ) == field ) ) java.lang.System.out.println ( ( price + ( ( ( ( "Ticker ID " + orderId ) + " FIELD " ) + field ) + " PRICE " ) ) ) ; } 
public void destroyTool ( int slot ) { if ( ( ( slots[slot] ) == null ) || ( slot == ( -1 ) ) ) return; if ( ( com.vanhal.progressiveautomation.ref.ToolHelper.tinkersType ( slots[slot].getItem () ) ) > 0 ) { addToInventory ( slots[slot] ) ; } else { if ( ! ( com.vanhal.progressiveautomation.PAConfig.destroyTools ) ) { addToInventory ( slots[slot] ) ; } } slots[slot] = null; } 
private static int getMinMatchingLabel ( LabeledNeighbor[] neighbors, byte currentColorValue ) { int minMatchingLabel = java.lang.Integer.MAX_VALUE; for ( LabeledNeighbor neighbor : neighbors ) { int label = neighbor.getLabel () ; if ( ( label < minMatchingLabel ) && ( label > 0 ) ) { minMatchingLabel = label; } } if ( minMatchingLabel != ( java.lang.Integer.MAX_VALUE ) ) { return minMatchingLabel; } else { return 0; } } 
@ java.lang.Override protected void onDestroy () { super.onDestroy () ; for ( int i = 0; ( mReceivedPermissions.length ) > i; i++ ) { java.lang.String permission = mReceivedPermissions[i]; int result = mReceivedPermissionsResults[i]; io.jasonatwood.permissionmanager.PermissionManager.onPermissionResponse ( permission, result ) ; } } 
public static void setPollution ( double newPollution, net.minecraft.world.World world, net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) || ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey.getKey ( world, chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData.get ( world ) ; instance.hashMap.put ( key, value ) ; instance.markDirty () ; } } 
private static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn, org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil.findCorrespondingOlapTable ( relationalColumn.getLogicalTable () , olapModel ) ; if ( null != olapTable ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable.getLogicalColumns () ) { if ( col.getPhysicalColumn () .getId () .equals ( relationalColumn.getPhysicalColumn () .getId () ) ) { return col; } } } return null; } 
@ java.lang.Override public void execute () throws org.apache.maven.plugin.MojoExecutionException, org.apache.maven.plugin.MojoFailureException { if ( null == ( source ) ) { throw new org.apache.maven.plugin.MojoFailureException ( this, "The source is null", "" ) ; } if ( ( target ) == null ) { throw new org.apache.maven.plugin.MojoFailureException ( this, "The target is null!", ( "The target path for the " + "module-fragment.xml is null. Please provide a target path." ) ) ; } com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser parser = new com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser ( source, target, project, getLog () ) ; parser.parseModuleVm () ; } 
public net.sf.memoranda.EventsManager.Month getMonth ( int m ) { nu.xom.Elements ms = yearElement.getChildElements ( "month" ) ; java.lang.String mm = new java.lang.Integer ( m ) .toString () ; for ( int i = 0; ( ms.size () ) > i; i++ ) if ( ms.get ( i ) .getAttribute ( "month" ) .getValue () .equals ( mm ) ) return new net.sf.memoranda.EventsManager.Month ( ms.get ( i ) ) ; return null; } 
private void generateJava () throws io.konig.gae.datastore.CodeGeneratorException, java.io.IOException { if ( null != ( java ) ) { if ( ( java.getJavaDir () ) == null ) { throw new io.konig.gae.datastore.CodeGeneratorException ( "javaCodeGenerator.javaDir must be defined" ) ; } java.getJavaDir () .mkdirs () ; if ( java.isGenerateCanonicalJsonReaders () ) { generateCanonicalJsonReaders () ; } generateJavaCode ( structure ) ; } } 
public java.lang.String toString () { return ( termFreq ) + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "Term: " + ( term ) ) + " " ) + "Frequency: " ) + ( freq ) ) + " " ) + "Weight: " ) + ( weight ) ) + " " ) + "TotalCount: " ) + ( totalCount ) ) + " " ) + "Df: " ) + ( df ) ) + " " ) + "Tf: " ) ; } 
@ java.lang.Override public java.lang.String _stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { getContents ( scope ) ; final java.lang.StringBuilder sb = new java.lang.StringBuilder ( ( 200 * ( getBuffer () .length ( scope ) ) ) ) ; for ( final msi.gama.util.IList<?> s : getBuffer () .iterable ( scope ) ) { sb.append ( s ) .append ( "\n" ) ; } sb.setLength ( ( ( sb.length () ) - 1 ) ) ; return sb.toString () ; } 
@ java.lang.Override public void run () { java.lang.String s = ""; if ( ( com.mobvoi.android.gesture.GestureType.TYPE_TWICE_TURN_WRIST ) == type ) { s = "turn wrist twice"; new com.theteamgo.fancywatch.MainActivity.StartGestureMessageTask () .execute ( Constant.CONTROL_TYPE_NEXT ) ; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_UP ) ) { s = "turn wrist up"; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_DOWN ) ) { s = "turn wrist down"; } else { s = "unknown gesture"; } android.widget.Toast.makeText ( getApplicationContext () , ( "onGestureDetected " + s ) , Toast.LENGTH_SHORT ) .show () ; } 
@ com.inva.hipstertest.freemarker.controllers.RequestMapping ( value = "/freemarker/teacher/schedule/forms-wp", method = RequestMethod.POST ) @com.inva.hipstertest.freemarker.controllers.ResponseBody public java.util.List<com.inva.hipstertest.service.dto.FormDTO> getAvailableFormsBySearchCriteria ( @com.inva.hipstertest.freemarker.controllers.RequestBody com.inva.hipstertest.freemarker.searchcriteria.SearchCriteria searchCriteria ) { log.debug ( "Create Ajax request to search available forms by search criteria" ) ; org.apache.commons.lang3.Validate.notNull ( searchCriteria.getLessonPosition () , "Field 'lessonPosition' on formSearchCriteria can not be null." ) ; org.apache.commons.lang3.Validate.notNull ( searchCriteria.getDate () , "Field 'Date' on formSearchCriteria can not be null." ) ; if ( null != ( searchCriteria.getId () ) ) { return formService.findAllAvailablePlusOneById ( searchCriteria ) ; } return formService.findAvailableFormsByCurrentSchoolAndSearchCriteria ( searchCriteria ) ; } 
@ java.lang.Override public r48.RubyIO targetToBound ( r48.RubyIO target ) { long t = target.fixnumVal; long type = 0; if ( 10000 < t ) { t -= 10000; type++; } r48.RubyIO base = new r48.RubyIO () ; base.arrVal = new r48.RubyIO[2]; base.type = '['; base.arrVal[0] = new r48.RubyIO () .setFX ( type ) ; base.arrVal[1] = new r48.RubyIO () .setFX ( t ) ; return base; } 
public static short categoryLevel ( java.lang.String category ) { for ( short level = 1; 101 > level; level++ ) { for ( Controlleur.Question q : Controlleur.JavaOverflow.database.getQuestions () ) { if ( ( q.getDifficulty () ) == level ) { if ( q.getCategory () .equals ( category ) ) { if ( ! ( q.isDone () ) ) { return level; } } } } } return 100; } 
private void sendNextPacket () { Packet toSend = new Packet ( packetArrayList.get ( nextSeqNum ) ) ; java.lang.System.out.println ( ( ( toSend.toString () ) + "SENDER GBN SENDING: " ) ) ; nl.sendPacket ( toSend, to ) ; if ( ( base ) == ( nextSeqNum ) ) { tl.stopTimer ( me ) ; tl.startTimer ( timeOut, me ) ; } ( numTransmissions ) ++; ( nextSeqNum ) ++; } 
@ java.lang.Override public void run () { java.lang.System.out.println ( ( ( machineExecution.getId () ) + "Start Execution " ) ) ; try { uniandes.unacloud.agent.execution.domain.ImageCopy image = uniandes.unacloud.agent.execution.ImageCacheManager.getFreeImageCopy ( machineExecution, transmissionType ) ; machineExecution.setImage ( image ) ; image.configureAndStart ( machineExecution ) ; java.lang.System.out.println ( "endStartExecution" ) ; } catch ( uniandes.unacloud.agent.exceptions.ExecutionException ex ) { try { uniandes.unacloud.agent.net.send.ServerMessageSender.reportExecutionState ( machineExecution.getId () , ExecutionProcessEnum.FAIL, ex.getMessage () ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } } } 
public static void main ( java.lang.String[] args ) { java.util.Scanner scanIn = new java.util.Scanner ( java.lang.System.in ) ; int n; java.lang.System.out.print ( "Nhap so n: " ) ; n = scanIn.nextInt () ; java.lang.System.out.print ( ( ( tinhtongdemo.TinhTongDemo.TinhTong ( n ) ) + ( ( "Tong cac so chan nho hon " + n ) + " la:" ) ) ) ; } 
private void deployProcess () throws java.io.IOException, java.security.NoSuchAlgorithmException { java.lang.String processDefinitionKey = "liquidPoc"; java.lang.String definitionClasspath = "processes/liquid.consignment.1.bpmn20.xml"; org.activiti.engine.RepositoryService repositoryService = processEngine.getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService.createProcessDefinitionQuery () .processDefinitionKey ( processDefinitionKey ) .latestVersion () .singleResult () ; if ( processDefinition == null ) repositoryService.createDeployment () .addClasspathResource ( definitionClasspath ) .deploy () ; } 
public static void dispalyTotal ( boolean special ) { try { java.io.FileReader fr = new java.io.FileReader ( "customerBill.txt" ) ; java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; java.lang.String line; while ( null != ( line = br.readLine () ) ) { java.lang.System.out.println ( line ) ; fr.close () ; } } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
public static com.tealcubegames.minecraft.spigot.versions.api.actionbars.ActionBarMessage createActionBarMessage ( java.lang.String message ) { java.lang.String serverPackageName = org.bukkit.Bukkit.getServer () .getClass () .getPackage () .getName () ; java.lang.String nmsVersion = serverPackageName.substring ( serverPackageName.lastIndexOf ( ( 1 + "." ) ) ) ; switch ( nmsVersion ) { case "v1_10_R1": return new com.tealcubegames.minecraft.spigot.versions.actionbars.ActionBarMessageImpl ( message ) ; default: throw new org.apache.commons.lang3.NotImplementedException ( ( nmsVersion + " is not supported" ) ) ; } } 
public java.util.List<com.orientechnologies.orient.server.distributed.ODistributedResponse> getConflictResponses () { final java.util.List<com.orientechnologies.orient.server.distributed.ODistributedResponse> servers = new java.util.ArrayList<com.orientechnologies.orient.server.distributed.ODistributedResponse> () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0; ( responseGroups.size () ) > i; ++i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups.get ( i ) ) servers.add ( r ) ; } } return servers; } 
public void update ( float deltaTime ) { this.levelController.update ( deltaTime ) ; this.frogManager.update ( deltaTime ) ; if ( 0 >= ( this.hud.getLifeCounter () .getLife () ) ) { game.setScreen ( new com.mygdx.game.screens.GameOverScreen ( this.game ) ) ; com.mygdx.game.sprites.SpritesDrawer.getInstance () .removeAllSprites () ; Gdx.input.setInputProcessor ( null ) ; this.hud.reset () ; } } 
public boolean isDeflated () { for ( java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> entry : this.entrySet () ) { java.lang.String key = entry.getKey () ; for ( java.lang.String value : entry.getValue () ) { if ( ( value.toLowerCase () .contains ( "application/x-deflate" ) ) && ( key.equalsIgnoreCase ( "content-type" ) ) ) { return true; } } } return false; } 
public static synchronized com.android.dialer.calllog.DefaultVoicemailNotifier getInstance ( android.content.Context context ) { if ( null == ( com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance ) ) { android.app.NotificationManager notificationManager = ( ( android.app.NotificationManager ) ( context.getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; android.content.ContentResolver contentResolver = context.getContentResolver () ; com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance = new com.android.dialer.calllog.DefaultVoicemailNotifier ( context, notificationManager, com.android.dialer.calllog.DefaultVoicemailNotifier.createNewCallsQuery ( contentResolver ) , com.android.dialer.calllog.DefaultVoicemailNotifier.createNameLookupQuery ( contentResolver ) ) ; } return com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance; } 
public void add ( int index, double element ) { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System.arraycopy ( array, index, array, ( 1 + index ) , ( ( size () ) - index ) ) ; set ( index, element ) ; increasedSize ( 1 ) ; } 
public void setEndTime ( java.time.LocalTime end_time2 ) { if ( null == end_time2 ) { java.time.LocalTime localtime = java.time.LocalTime.MAX; end_time_string = ""; } else { end_time_string = end_time2.format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) .toString () ; end_time = end_time2; if ( ( end_time ) != null ) { value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; } else { value = getStartTime () ; } } } 
final synchronized void setResponse ( com.basho.riak.client.core.RiakMessage rawResponse ) { stateCheck ( com.basho.riak.client.core.FutureOperation.State.CREATED, com.basho.riak.client.core.FutureOperation.State.WRITTEN, com.basho.riak.client.core.FutureOperation.State.RETRY ) ; U decodedMessage = decode ( rawResponse ) ; this.rawResponse.add ( decodedMessage ) ; exception = null; if ( done ( decodedMessage ) ) { ( remainingTries ) --; if ( null != ( retrier ) ) { retrier.operationComplete ( this, remainingTries ) ; } fireListeners () ; state = com.basho.riak.client.core.FutureOperation.State.COMPLETE; latch.countDown () ; } } 
public void replaceValue ( T newValue, int index ) { if ( ! ( indexCheck ( index ) ) ) return; linkedList.Node<T> currentNode = this.start; for ( int i = 0; 2 > i; i++ ) { currentNode = currentNode.getTail () ; } currentNode.setHead ( newValue ) ; } 
public static void main ( java.lang.String[] args ) { java.util.List<Coordinate<java.lang.Double>> test = MercatorMapping.MM ( args[0], true ) ; java.lang.System.out.println ( ( " entries." + ( ">> The mapped data has " + ( test.size () ) ) ) ) ; java.lang.System.out.println ( ">> The mapped data has COM: " ) ; java.lang.System.out.println ( List_ops.getCOM ( test ) ) ; java.lang.System.out.println ( ">> The mapped data contains:" ) ; List_ops.print_coordlist_double ( test ) ; } 
public void removeContact ( int position ) { com.addressbook.thorrism.addressbook.Contact contact = mContacts.get ( position ) ; mBook.removeEntry ( position ) ; mContactHeaders.remove ( position ) ; mBook.saveEventually () ; contact.deleteInBackground ( new com.parse.DeleteCallback () { @java.lang.Override public void done ( com.parse.ParseException e ) { if ( null == e ) { createToast ( "Deleted Contact" ) ; } else { e.printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; } 
@ java.lang.Override protected void publishResults ( java.lang.CharSequence constraint, com.alex.develop.adapter.FilterResults results ) { android.util.Log.d ( "Select", ( ( results.count ) + ( constraint + ", " ) ) ) ; stocks = ( ( java.util.List<com.alex.develop.adapter.Stock> ) ( results.values ) ) ; if ( 0 < ( results.count ) ) { notifyDataSetChanged () ; } else { notifyDataSetInvalidated () ; } mListener.find ( results.count ) ; } 
public void calculateFragLen () { java.util.Collections.sort ( getPosTags () ) ; for ( int posValue : getPosTags () ) { java.util.Set<java.lang.Integer> subList = getNegTags () .subSet ( posValue, ( 5000 + posValue ) ) ; for ( int negValue : subList ) { int fragLen = negValue - posValue; if ( ( fragLen > 0 ) && ( fragLen <= 2000 ) ) { ( getCounts () [ ( fragLen - 1 ) ] ) ++; } } } } 
protected void addTurretAngle ( float deltaTurretAngle, int delta ) { float cleanDeltaTurret = kylevedder.com.github.utils.Utils.wrapAngleDelta ( deltaTurretAngle ) ; float turretRateCap = ( 0 < delta ) ? ( this.TURRET_TURN_RATE ) / ( 1000 / delta ) : 0; this.turretAngle = kylevedder.com.github.utils.Utils.wrapAngle ( this.turretAngle, kylevedder.com.github.utils.Utils.clampFloat ( cleanDeltaTurret, ( -turretRateCap ) , turretRateCap ) ) ; } 
@ java.lang.Override public java.lang.String save ( com.sia.main.domain.SatManMK satManMK ) { if ( null != ( satManMK.getIdSatManMK () ) ) { satManMKRepo.update ( satManMK ) ; return satManMK.getIdSatManMK () .toString () ; } else { return satManMKRepo.insert ( satManMK ) .toString () ; } } 
public static void main ( java.lang.String[] args ) { double inches; double meters; counter = 0; for ( inches = 1; 144 >= inches; inches++ ) meters = inches / 39.37; java.lang.System.out.println ( ( ( ( inches + "inches is " ) + meters ) + "meters." ) ) ; ( counter ) ++; if ( ( counter ) == 12 ) { java.lang.System.out.println () ; counter = 0; } } 
private void matchLookAhead ( core.Token token ) throws parser.ParseException { if ( token != ( lookahead ) ) { throw new parser.ParseException ( java.lang.String.format ( "Parse error on line %s, col %s. Found %s, expected %s.", dispatcher.getLine () , dispatcher.getColumn () , dispatcher.getToken () , token ) ) ; } lookahead = dispatcher.nextToken () ; } 
public Common.Message toMessage () { Common.Message listMsg; java.lang.String content = ""; for ( Common.User item : this.usersList ) { int i = 0; if ( 0 == i ) { content = item.getUsername () ; } else { content = ( content + " " ) + ( item.getUsername () ) ; } i++; } listMsg = new Common.Message ( content, new Common.User ( "Server" ) , MessageType.DATA ) ; return listMsg; } 
@ java.lang.Override public void onNavigationEvent ( int navigationEvent, android.os.Bundle extras ) { super.onNavigationEvent ( navigationEvent, extras ) ; if ( ( NAVIGATION_FINISHED ) == navigationEvent ) { android.support.customtabs.CustomTabsIntent.Builder builder = new android.support.customtabs.CustomTabsIntent.Builder ( session ) ; builder.setToolbarColor ( android.support.v4.content.ContextCompat.getColor ( activity, R.color.accent ) ) ; android.support.customtabs.CustomTabsIntent customTabsIntent = builder.build () ; customTabsIntent.launchUrl ( activity, android.net.Uri.parse ( urls[ ( ( index ) ++ ) ] ) ) ; } } 
private short getCheckedValue ( long address ) { if ( ( handlerBlock.getAddressEnd () ) <= address ) { return 13567; } else { return ( ( short ) ( ( data.get ( ( ( int ) ( address ) ) ) ) & 255 ) ) ; } } 
@ java.lang.Override public void handleMessage ( android.os.Message message ) { if ( 1 == ( message.arg2 ) ) { switch ( message.arg1 ) { case 1: thread1JobDone = true; break; case 2: thread2JobDone = true; break; case 3: thread3JobDone = true; break; } if ( ( ( thread1JobDone ) && ( thread1JobDone ) ) && ( thread1JobDone ) ) { themeAll.sortIndex () ; } adapterAll.notifyDataSetChanged () ; } } 
public void setReturnDate ( long returnDate, android.content.Context context ) { this.returnDate = returnDate; if ( ( returnDate != ( -1 ) ) && ( returnDate < ( loanDate ) ) ) { android.util.Log.i ( org.bbt.kiakoa.model.Loan.TAG, "return date should not be lower than loan date" ) ; setLoanDate ( returnDate, context ) ; } scheduleNotification ( context ) ; } 
protected java.util.ArrayList<java.lang.String> getLabelsFromData () { int size = chartView.data.get ( 0 ) .size () ; java.util.ArrayList<java.lang.String> result = new java.util.ArrayList<java.lang.String> ( size ) ; for ( int i = 0; size > i; i++ ) result.add ( chartView.data.get ( 0 ) .getLabel ( i ) ) ; return result; } 
public static void playAgain () { java.lang.System.out.println ( "Do You Want To Give It Another Go? \n1. Yea, I\'m Game \n2. Nah, Let\'s Try Something Else" ) ; int response = cs1.Keyboard.readInt () ; if ( 1 == response ) { CardGame.reset () ; CardGame.main ( null ) ; } else if ( response == 2 ) { Woo.main ( null ) ; } else { java.lang.System.out.println ( "I don't understand, so I'll ask again" ) ; CardGame.playAgain () ; } } 
private void getFillersFromFile ( org.w3c.dom.Document doc, edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc.getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser.getElement ( element, edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement.getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0; ( fillerNl.getLength () ) > i; ++i ) readFiller ( fillerNl.item ( i ) , nerView ) ; } 
@ org.junit.Test public void getTotalSequencesIterated () throws java.lang.Exception { randoop.generation.exhaustive.SequenceGenerator<java.lang.String> sgenLarger = new randoop.generation.exhaustive.SequenceGenerator ( largerSet ) ; long beforeIterateLarger = sgenLarger.getTotalSequencesIterated () .longValue () ; int numberOfSequencesToGenerate = 13; for ( int i = 0; numberOfSequencesToGenerate > i; i++ ) { sgenLarger.next () ; } org.junit.Assert.assertEquals ( 0, beforeIterateLarger ) ; org.junit.Assert.assertEquals ( numberOfSequencesToGenerate, sgenLarger.getTotalSequencesIterated () ) ; } 
public boolean updateIndentString ( com.hlz.webModel.IndentModel model, java.lang.String reserve, java.lang.String fulfill ) { com.hlz.entity.Indent indent = dao.updateIndent ( model, reserve, fulfill ) ; if ( null != indent ) { messaging.convertAndSend ( "/topic/update", indent ) ; rabbitTemplate.convertAndSend ( "update-indent", indent ) ; return true; } else { return false; } } 
static boolean cannotDisplay ( com.forgerock.opendj.cli.ConsoleApplication app, org.forgerock.opendj.config.PropertyDefinition<?> pd, java.util.Set<java.lang.String> allowedPropertyNames ) { return ( ! ( allowedPropertyNames.contains ( pd.getName () ) ) ) || ( ( pd.hasOption ( PropertyOption.HIDDEN ) ) || ( ( ! ( app.isAdvancedMode () ) ) && ( pd.hasOption ( PropertyOption.ADVANCED ) ) ) ) ; } 
@ java.lang.Override public N getNodeAt ( int index ) { int sourceNodeCount = sourceNodes.size () ; if ( ( index < sourceNodeCount ) && ( ( sourceNodes ) != null ) ) { return sourceNodes.get ( index ) ; } if ( ( sinkNodes ) != null ) { int sinkIndex = ( ( sourceNodes ) == null ) ? index : index - sourceNodeCount; return sinkNodes.get ( sinkIndex ) ; } throw new java.lang.IndexOutOfBoundsException () ; } 
private void jButton1ActionPerformed ( java.awt.event.ActionEvent evt ) { mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jTableHotels.getModel () ) ) ; if ( 0 == ( jTableHotels.getSelectedRowCount () ) ) { javax.swing.JOptionPane.showMessageDialog ( this, "please select the Hotel to delete" ) ; return; } java.lang.String HotelName; int TempSelectRow = jTableHotels.getSelectedRow () ; HotelName = mdHotels.getValueAt ( TempSelectRow, 0 ) .toString () ; deleteHotel ( HotelName ) ; mdHotels.removeRow ( jTableHotels.getSelectedRow () ) ; mdHotels = null; } 
@ org.testng.annotations.Test public void testUDFEnoughInput () throws java.lang.Exception { org.apache.pig.data.Tuple tuple = org.apache.pig.data.TupleFactory.getInstance () .newTuple ( 31 ) ; for ( int i = 0; 31 > i; i++ ) { tuple.set ( i, 0 ) ; } tuple.set ( 0, "M" ) ; org.apache.pig.data.DataBag dataBag = instance.exec ( tuple ) ; org.testng.Assert.assertEquals ( 30, dataBag.size () ) ; org.testng.Assert.assertEquals ( dataBag.iterator () .next () .size () , 5 ) ; } 
@ java.lang.Override public int compare ( hu.schonherz.training.web.supervisor.accessories.UserResults o1, hu.schonherz.training.web.supervisor.accessories.UserResults o2 ) { return ( ( o2.getExamSum () ) + ( o2.getHomeworkSum () ) ) < ( ( o1.getExamSum () ) + ( o1.getHomeworkSum () ) ) ? 1 : ( ( o1.getExamSum () ) + ( o1.getHomeworkSum () ) ) == ( ( o2.getExamSum () ) + ( o2.getHomeworkSum () ) ) ? 0 : -1; } 
public void analyze ( semanticAnalyzer.AssignStatementTail AST ) { output.accept ( ( ": analyze AssignStatementTail\n" + ( AST.getLine () ) ) ) ; if ( ( AST.getAddExpression () ) != null ) { java.lang.System.out.println ( "ANALYZE ARRAY EXPRESSION" ) ; analyze ( AST.getAddExpression () ) ; } analyze ( AST.getExp () ) ; } 
public void cleanUp () { try { if ( null != ( ps ) ) { ps.close () ; } if ( ( this.dbConnection ) != null ) { this.dbConnection.close () ; } } catch ( java.sql.SQLException e ) { java.lang.System.out.println ( e.getMessage () ) ; } } 
public static boolean isPowerOfTwo ( long number ) { if ( 0 >= number ) { throw new java.lang.IllegalArgumentException ( ( ( "number: " + number ) + ". Number cannot be neagative." ) ) ; } if ( ( number & ( -number ) ) == number ) { return true; } return false; } 
public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert null != toAdd; if ( contains ( toAdd ) ) { if ( ! ( toAdd.getCategories () .contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } internalList.add ( toAdd ) ; } 
@ java.lang.Override public void run () { java.lang.String mess; java.lang.String sIndex = java.lang.String.valueOf ( index ) ; if ( ! ( Config.contains ( ( sIndex + "Messages." ) ) ) ) { index = 1; } mess = Config.getString ( ( sIndex + "Messages." ) ) ; mess = mess.replace ( "&", "�" ) ; sendBossBar ( mess, 10 ) ; index = ( index ) + 1; } 
@ java.lang.Override public void execute ( network.Session session, game.model.Game game ) { game.util.GameRenderer gameRenderer = game.getGameRenderer () ; if ( null != ( this.backgroundValue ) ) { gameRenderer.setBackgroundColor ( this.backgroundValue ) ; } if ( ( this.foregroundValue ) != null ) { gameRenderer.setForegroundColor ( this.backgroundValue ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/getGeneratedCode", method = org.springframework.web.bind.annotation.RequestMethod.POST ) @org.springframework.web.bind.annotation.ResponseBody public java.lang.String getGeneratedCode ( @org.springframework.web.bind.annotation.RequestParam ( value = "name", required = true ) java.lang.String name, @org.springframework.web.bind.annotation.RequestParam ( value = "tbName", required = true ) java.lang.String tbName ) throws java.lang.Exception { java.lang.String generatedCode = ""; if ( 100 < ( name.length () ) ) { return generatedCode; } sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables tbEnum = sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables.valueOf ( tbName ) ; if ( tbEnum == null ) { return generatedCode; } generatedCode = new sg.com.fbs.services.common.codegen.mgr.CodeGeneratorManagerBD () .getGeneratedCode ( tbEnum.getTableName () , tbName ) ; return generatedCode; } 
public static org.opengis.referencing.operation.MathTransform1D create ( final double base, final double offset ) { org.apache.sis.util.ArgumentChecks.ensureStrictlyPositive ( "base", base ) ; if ( 10 == base ) { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.Base10.create ( offset ) ; } return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.NATURAL.concatenate ( ( 1 / ( java.lang.Math.log ( base ) ) ) , offset ) ; } 
public void clear () { if ( null != ( graphics2D ) ) { graphics2D.setPaint ( java.awt.Color.white ) ; graphics2D.fillRect ( 0, 0, getSize () .width, getSize () .height ) ; graphics2D.setPaint ( java.awt.Color.black ) ; } epaint () ; } 
public static void main ( java.lang.String[] args ) { if ( 1 != ( args.length ) ) { try { int starWarsSequence = java.lang.Integer.parseInt ( args[0] ) ; java.lang.System.out.println ( ( "Star Wars sequance: " + starWarsSequence ) ) ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.err.println ( ( ( "Argument" + ( args[0] ) ) + " must be an integer." ) ) ; java.lang.System.exit ( 2 ) ; } } else { java.lang.System.err.println ( "There must be exactly 1 argument." ) ; java.lang.System.exit ( 1 ) ; } } 
public void showBottomLoading ( boolean show ) { if ( show != ( mShowBottomLoading ) ) { mShowBottomLoading = show; if ( show ) { com.livae.android.loading.RecyclerAdapter.notifyItemInserted ( getBottomLoadingPosition () ) ; } else { com.livae.android.loading.RecyclerAdapter.notifyItemRemoved ( getBottomLoadingPosition () ) ; } } } 
public boolean equals ( java.lang.Object other ) { if ( ! ( other instanceof oharaShapes3D.CubicShape ) ) throw new java.lang.IllegalArgumentException ( "Compared object must be a CubicShape" ) ; else { oharaShapes3D.CubicShape cs = ( ( oharaShapes3D.CubicShape ) ( other ) ) ; return ( ( this.getHeight () ) == ( other.getHeight () ) ) && ( ( ( this.getLength () ) == ( other.getLength () ) ) && ( ( this.getWidth () ) == ( other.getWidth () ) ) ) ; } } 
private int toInteger ( org.jackace.jawascriptexecutive.Executor.JawaObjectRef o ) throws org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException { if ( ( o.object ) instanceof java.lang.Double ) { int magnitude = ( ( int ) ( ( long ) ( java.lang.Math.floor ( java.lang.Math.abs ( ( ( java.lang.Double ) ( o.object ) ) ) ) ) ) ) ; int sign = ( 0 < ( ( java.lang.Double ) ( o.object ) ) ) ? 1 : -1; return magnitude * sign; } throw new org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException ( "Not yet implemented conversion." ) ; } 
public void playGame () { boolean gameIsActive = true; boolean humanTurn = false; while ( gameIsActive ) { for ( int indexPlayer = 0; ( players.length ) > indexPlayer; indexPlayer++ ) { if ( indexPlayer == ( humanPlayerId ) ) { java.lang.System.out.println ( "THIS IS A HUMAN" ) ; showPlayerTurn () ; } else { java.lang.System.out.println ( "This is a bot" ) ; showBotTurn () ; } } gameIsActive = false; } } 
@ java.lang.Override public void close () { listeners.clear () ; listeners = null; if ( null != ( chatToggleCommand ) ) { chatToggleCommand.close () ; chatToggleCommand = null; } if ( ( chatListenCommand ) != null ) { chatListenCommand.close () ; chatListenCommand = null; } } 
@ com.facebook.react.bridge.ReactMethod public void get ( java.lang.String key, java.lang.String bucketName, com.facebook.react.bridge.Callback callback ) { android.content.SharedPreferences preferences = getBucket ( bucketName ) ; java.lang.Object value = preferences.getAll () .get ( key ) ; if ( null != value ) { callback.invoke ( value.toString () ) ; } else { callback.invoke ( null ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { showProgress ( true ) ; com.parse.ParseFacebookUtils.logInWithReadPermissionsInBackground ( this, java.util.Arrays.asList ( "user_location, email, user_birthday" ) , new com.parse.LogInCallback () { @java.lang.Override public void done ( com.parse.ParseUser parseUser, com.parse.ParseException e ) { if ( null == parseUser ) { } else if ( parseUser.isNew () ) { getFacebookInfo () ; } else { android.util.Log.d ( com.trytara.tara.LoginActivity.TAG, ( "CURRENT USER: " + ( parseUser.toString () ) ) ) ; } } } ) ; } 
public T getFirst () { if ( ( ( ( last ) + 1 ) % ( deque.length ) ) != ( first ) ) { if ( ( first ) > 0 ) { return ( ( T ) ( deque[ ( ( first ) - 1 ) ] ) ) ; } else { return ( ( T ) ( deque[ ( ( deque.length ) - 1 ) ] ) ) ; } } return null; } 
boolean canBeMerged ( final com.orientechnologies.orient.core.sql.OIndexSearchResult searchResult ) { if ( ( searchResult.lastField.isLong () ) || ( lastField.isLong () ) ) { return false; } return ( com.orientechnologies.orient.core.sql.OIndexSearchResult.isIndexEqualityOperator ( lastOperator ) ) || ( com.orientechnologies.orient.core.sql.OIndexSearchResult.isIndexEqualityOperator ( searchResult.lastOperator ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; if ( null == savedInstanceState ) { android.content.Intent intent = getIntent () ; if ( intent.getBooleanExtra ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.EXTRA_SKIP_WELCOME, false ) ) { next ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.PAGE_WELCOME, null ) ; } else { next ( ( ( java.lang.String ) ( null ) ) , null ) ; } } else { android.util.Log.w ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.TAG, "onCreate () savedInstanceState != null" ) ; } } 
public java.util.ArrayList<org.bitbucket.ucchy.undine.MailData> getTrashboxMails ( org.bitbucket.ucchy.undine.sender.MailSender sender ) { if ( ! ( isLoaded ) ) { return null; } sender.setStringMetadata ( org.bitbucket.ucchy.undine.MailManager.MAILLIST_METAKEY, "trashbox" ) ; java.util.ArrayList<org.bitbucket.ucchy.undine.MailData> box = new java.util.ArrayList<org.bitbucket.ucchy.undine.MailData> () ; for ( org.bitbucket.ucchy.undine.MailData mail : mails ) { if ( ( mail.isSetTrash ( sender ) ) && ( mail.isRelatedWith ( sender ) ) ) { box.add ( mail ) ; } } org.bitbucket.ucchy.undine.MailManager.sortNewer ( box ) ; return box; } 
@ java.lang.Override public android.database.Cursor loadInBackground () { android.database.Cursor result = super.loadInBackground () ; if ( ( ! ( com.zhihu.matisse.internal.utils.MediaStoreCompat.hasCameraFeature ( getContext () ) ) ) || ( ! ( mEnableCapture ) ) ) { return result; } android.database.MatrixCursor dummy = new android.database.MatrixCursor ( com.zhihu.matisse.internal.loader.AlbumMediaLoader.PROJECTION ) ; dummy.addRow ( new java.lang.Object[] { com.zhihu.matisse.internal.entity.Item.ITEM_ID_CAPTURE, com.zhihu.matisse.internal.entity.Item.ITEM_DISPLAY_NAME_CAPTURE, "", 0 } ) ; return new android.database.MergeCursor ( new android.database.Cursor[] { dummy, result } ) ; } 
public org.matsim.contrib.zone.Zone getZone ( org.matsim.contrib.zone.Coord coord ) { int r = ( ( int ) ( java.lang.Math.round ( ( ( ( coord.getY () ) - ( minY ) ) / ( cellSize ) ) ) ) ) ; int c = ( ( int ) ( java.lang.Math.round ( ( ( ( coord.getX () ) - ( minX ) ) / ( cellSize ) ) ) ) ) ; return zones[ ( c + ( r * ( cols ) ) ) ]; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = ""; if ( ( this.lblBitcoinAddress ) == v ) address = this.getContext () .getString ( R.string.bitcoin_address ) ; else if ( v == ( this.lblLitecoinAddress ) ) address = this.getContext () .getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard.getInstance ( this.getContext () ) .setClipboardText ( address ) ; } 
@ org.junit.Test public void getCurrentCallValue_input_returns () { int smallBlind = 30; int credits = 100; pokerController.setDealer ( pokerController.getPlayerList () .get ( 0 ) ) ; pokerController.setStartCredits ( credits ) ; pokerController.setBlinds ( smallBlind ) ; pokerController.startGame () ; org.junit.Assert.assertEquals ( pokerController.getPlayerList () .get ( 0 ) , pokerController.getCurrentPlayer () ) ; int callValue = pokerController.getCurrentCallValue () ; org.junit.Assert.assertEquals ( ( 2 * smallBlind ) , callValue ) ; } 
public void speakAloud ( android.view.View v ) { if ( null == ( currVocab.getSpeech () ) ) { playSound ( currVocab.getSpeech () ) ; } else { com.example.sco.imuvo.HelperClasses.WebServiceHelper webServiceHelper = new com.example.sco.imuvo.HelperClasses.WebServiceHelper () ; webServiceHelper.setWebServiceHelperListener ( new com.example.sco.imuvo.HelperClasses.WebServiceHelperListener () { @java.lang.Override public void onWebServiceReturnResult ( byte[] result ) { currVocab.setSpeech ( result ) ; com.example.sco.imuvo.HelperClasses.VocabDatabaseHelper.update ( currVocab ) ; playSound ( result ) ; } } ) ; webServiceHelper.getSpeechAsync ( currVocab ) ; } } 
private void printAll () { java.lang.System.out.println ( "------Server Data------" ) ; java.lang.System.out.println ( ( ( username ) + "username: " ) ) ; java.lang.System.out.println ( ( "password: " + ( password ) ) ) ; java.lang.System.out.println ( ( "salt: " + ( salt ) ) ) ; java.lang.System.out.print ( ( "challengeAnswer: " + ( challengeAnswer ) ) ) ; java.lang.System.out.println ( "" ) ; java.lang.System.out.print ( "responseToChallenge: " ) ; java.lang.System.out.println ( "" ) ; java.lang.System.out.println ( ( "timesToRunHash: " + ( timesToRunHash ) ) ) ; java.lang.System.out.println ( ( "Hash bit length: " + ( HASH_BIT_LENGTH ) ) ) ; java.lang.System.out.println ( "------ENd Server Data--------" ) ; } 
@ java.lang.Override void startElement ( java.lang.String uri, java.lang.String localName, java.lang.String qName, int attributePointer, int attributeCount ) throws org.xml.sax.SAXException { if ( 0 < ( ( depth ) ++ ) ) { super.startElement ( uri, localName, qName, attributePointer, attributeCount ) ; } } 
private int element_manhattan ( int i, int j, int index ) { int ori_i = index / ( dimension () ) ; int ori_j = ( index - ( ( dimension () ) * ori_i ) ) - 1; int idistance = java.lang.Math.abs ( ( i - ori_i ) ) ; int jdistance = java.lang.Math.abs ( ( j - ori_j ) ) ; return idistance + jdistance; } 
public MiniJavaVar findVar ( java.lang.String varName ) { int n = contexts.size () ; for ( n -= 1; 0 <= n; n-- ) { MiniJavaVar findRes = contexts.get ( n ) .vars.get ( varName ) ; if ( findRes != null ) { return findRes; } } java.lang.System.err.printf ( "Runtime Error: identifier %s not found.\n", varName ) ; return MiniJavaVar.makeVoid () ; } 
@ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { try { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository.getByAccountIdAndType ( accountLimit.getAccountId () , accountLimit.getLimitType () ) ; if ( null != dbLimit ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit.getLimitType () .getName () .toString () ) ) + " already exists for the account id " ) + ( dbLimit.getAccountId () ) ) ) ; } } catch ( java.lang.Exception e ) { } accountLimitRepository.save ( accountLimit ) ; } 
@ java.lang.Override public boolean f ( com.google.gwt.user.client.Event e ) { com.google.gwt.query.client.GQuery el = $ ( e.getEventTarget () ) ; com.cgxlib.core.component.tab.ViewHandler<?> viewHandler = com.cgxlib.core.component.tab.CGXHelper.getViewHandlerAsData ( el ) ; if ( ( viewHandler instanceof com.cgxlib.core.component.tab.TabView.ViewHandler ) && ( viewHandler != null ) ) { el.as ( CGXlib.CGX ) .as ( com.cgxlib.core.component.tab.Tab.CGX, viewHandler ) .show () ; } else { el.as ( com.cgxlib.core.component.tab.Tab.CGX ) .show () ; } return false; } 
private void setTime ( java.util.Calendar calendar ) { setDate ( calendar.get ( java.util.Calendar.DAY_OF_MONTH ) , ( 1 + ( calendar.get ( java.util.Calendar.MONTH ) ) ) , calendar.get ( java.util.Calendar.YEAR ) ) ; setTime ( calendar.get ( java.util.Calendar.HOUR_OF_DAY ) , calendar.get ( java.util.Calendar.MINUTE ) ) ; timeChosen = java.util.Calendar.getInstance () ; } 
private boolean contains ( java.io.File file ) { boolean result; try { java.lang.String sFile = file.toString () ; result = ( sFile.startsWith ( location.getCanonicalPath () .toString () ) ) || ( sFile.startsWith ( location.toString () ) ) ; } catch ( java.io.IOException e ) { result = false; } return result; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { if ( ( cacheContentData ) && ( null == ( rootView ) ) ) { rootView = onCreateFragmentView ( inflater, container, savedInstanceState ) ; } unbinder = butterknife.ButterKnife.bind ( this, rootView ) ; return rootView; } 
public java.lang.Object pre ( int t ) { if ( 0 == t ) { return ref; } t = t - 1; checkNonEmptyStream ( "pre" ) ; checkCapacity ( t ) ; if ( t >= ( size ) ) { return bonsai.runtime.core.Cast.toLattice ( name, ref ) .bottom () ; } else { return stream[preIndex ( t ) ]; } } 
public static void onPlayerTeleport ( org.bukkit.entity.Player player, org.bukkit.Location to ) { if ( ! ( com.frdfsnlght.inquisitor.PlayerStats.started ) ) { return; } if ( ! ( com.frdfsnlght.inquisitor.PlayerStats.isStatsPlayer ( player ) ) ) { return; } com.frdfsnlght.inquisitor.PlayerStats.PlayerState state = com.frdfsnlght.inquisitor.PlayerStats.playerStates.get ( player.getName () ) ; if ( null != state ) { com.frdfsnlght.inquisitor.PlayerStats.onPlayerMove ( player, player.getLocation () ) ; state.lastLocation = to; state.lastTime = java.lang.System.currentTimeMillis () ; } } 
int getSessionStartPointerMillis () { if ( ( ( mSessionStartPointerMillis ) == ( java.lang.Integer.MIN_VALUE ) ) && ( ( this ) == ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition ) ) ) return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mNowPosition.getSessionStartPointerMillis () ; if ( ( ( this ) != ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition ) ) && ( ( mSessionStartPointerMillis ) > ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition.getSessionStartPointerMillis () ) ) ) return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition.getSessionStartPointerMillis () ; return mSessionStartPointerMillis; } 
@ java.lang.Override public void onStart () { super.onStart () ; final android.content.Context context = getApplicationContext () ; if ( ( ( org.droidplanner.android.utils.Utils.getAppVersionCode ( context ) ) > ( mAppPrefs.getSavedAppVersionCode () ) ) || ( org.droidplanner.android.BuildConfig.DEBUG ) ) { org.droidplanner.android.dialogs.DialogMaterialFragment changelog = new org.droidplanner.android.dialogs.DialogMaterialFragment () ; changelog.show ( getSupportFragmentManager () , "Changelog Dialog" ) ; mAppPrefs.updateSavedAppVersionCode ( context ) ; } } 
public com.sproutigy.commons.binary.BinaryBuilder append ( java.io.InputStream inputStream ) throws com.sproutigy.commons.binary.BinaryException { try { byte[] buffer = new byte[1024 * 4]; int readlen; while ( ( readlen = inputStream.read ( buffer ) ) != ( Binary.EOF ) ) { out.write ( buffer, 0, readlen ) ; } } catch ( java.io.IOException e ) { throw new com.sproutigy.commons.binary.BinaryException ( e ) ; } return this; } 
private void makeURL () { java.lang.String URL = ( MainActivity2.USN ) + ( MainActivity2.URL ) ; android.content.Intent i = new android.content.Intent ( getActivity () , com.teamidentiti.fastvturesults.Services.SemestersService.class ) ; i.putExtra ( "URL", URL ) ; i.putExtra ( "USN", MainActivity2.USN ) ; i.putExtra ( "SEM", MainActivity2.SEM ) ; getActivity () .startService ( i ) ; } 
public com.dumbpug.crossbowknight.particles.Particle generate ( com.dumbpug.crossbowknight.particles.EmitterDetails emitterDetails ) { float randomVelx = ( 4.0F * ( random.nextFloat () ) ) - 2.0F; float randomVely = ( 4.0F * ( random.nextFloat () ) ) - 2.0F; return new com.dumbpug.crossbowknight.particles.ExplosionParticle ( ( ( emitterDetails.positionX ) - 10 ) , emitterDetails.positionY, randomVelx, randomVely, level ) ; } 
@ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( null != ( this.variables ) ) { for ( int i = ( this.variables.size () ) - 1; i >= 0; i-- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this.variables.get ( i ) ; if ( ( variable.getName () ) == name ) { return variable; } } } return null; } 
public int getMaxEggGroupID () { android.database.Cursor cursor = database.query ( EGG_GROUPS_TABLE, null, null, null, null, null, null ) ; cursor.moveToLast () ; int maxEggGroupID = cursor.getInt ( cursor.getColumnIndex ( EGG_GROUP_ID ) ) ; if ( PRINT_DEBUG ) android.util.Log.v ( "Database Access", ( ( java.lang.String.valueOf ( maxEggGroupID ) ) + "Max eggGroupID is: " ) ) ; cursor.close () ; return maxEggGroupID; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; int weekday = 5; int weekend = 9; int optimalHours = 8 * 7; int actualHours = weekday; actualHours = actualHours + ( weekend * 2 ) ; int solution = optimalHours - actualHours; display ( solution ) ; } 
private boolean isPromotion ( final de.htwsaar.chessbot.engine.model.Position start, final de.htwsaar.chessbot.engine.model.Position target ) { if ( isWhite () ) if ( ( ( target.rank () ) == 8 ) && ( ( start.rank () ) == 7 ) ) return true; else if ( ( ( start.rank () ) == 2 ) && ( ( target.rank () ) == 1 ) ) return true; return false; } 
private void refreshMap () { if ( null != ( mMap ) ) { com.google.android.gms.maps.model.LatLng temp1 = new com.google.android.gms.maps.model.LatLng ( myRoute.get ( 0 ) .getLatitude () , myRoute.get ( 0 ) .getLongitude () ) ; mMap.moveCamera ( com.google.android.gms.maps.CameraUpdateFactory.newLatLng ( temp1 ) ) ; } return; } 
@ java.lang.Override public minetweaker.api.item.IItemStack transform ( minetweaker.api.item.IItemStack item, minetweaker.api.player.IPlayer byPlayer ) { if ( 1 < ( item.getAmount () ) ) { byPlayer.give ( withItem ) ; return item; } else { return withItem.withAmount ( ( ( withItem.getAmount () ) + 1 ) ) ; } } 
@ java.lang.Override protected void onPreExecute () { ( ( android.app.Activity ) ( context ) ) .getWindow () .addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON ) ; this.loadingDialog.setIndeterminate ( true ) ; this.loadingDialog.setCancelable ( false ) ; this.loadingDialog.setTitle ( getString ( R.string.settings_downloadHDSpots_button_label ) ) ; this.loadingDialog.setMessage ( ( "..." + ( "Downloading: " + ( lstToDownload ) ) ) ) ; this.loadingDialog.show () ; } 
private void checkFirePrimary () { if ( ( ( counter ) > 30 ) && ( input.isFirePrimaryWeapon () ) ) { model.Bubble bubble = new model.Bubble ( getX () , getY () , 0, 0, 0, 0, facingRight ) ; bubbles.add ( bubble ) ; levelController.getScreenController () .addToSprites ( bubble ) ; counter = 0; } else { ( counter ) ++; } } 
java.util.ArrayList getArrayAbschnitt ( java.util.ArrayList list, int i, int j ) { java.lang.System.err.println ( ( list + "list vor Abschnitt " ) ) ; java.util.ArrayList abschnitt = new java.util.ArrayList<> () ; for ( int k = i; k < ( j + 1 ) ; k++ ) { abschnitt.add ( list.get ( k ) ) ; } java.lang.System.err.println ( ( ( ( ( ( "list nach Abschnitt von" + i ) + "bis" ) + j ) + "ist" ) + abschnitt ) ) ; return abschnitt; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent arg0 ) { parking.house.gui.AddVehicleDialog dialog = new parking.house.gui.AddVehicleDialog ( shell ) ; dialog.open () ; parking.house.model.Vehicle v = dialog.getVehicle () ; if ( null != v ) { java.lang.System.out.println ( ( "Choosed vehicle:" + v ) ) ; SetValue ( v ) ; } } 
@ java.lang.Override public boolean equals ( final java.lang.Object o ) { if ( ! ( o instanceof groovyx.net.http.NonBlockingCookieStore.UriKey ) ) { return false; } final groovyx.net.http.NonBlockingCookieStore.UriKey rhs = ( ( groovyx.net.http.NonBlockingCookieStore.UriKey ) ( o ) ) ; return ( name.equals ( rhs.host ) ) && ( host.equals ( rhs.host ) ) ; } 
public void enterArrayAccess_lfno_primary ( ceylon.tool.converter.java2ceylon.ArrayAccess_lfno_primaryContext ctx ) { try { enterArrayAccess_lfno_primary = true; if ( equalsequalsNull ) { bw.write ( "!" ) ; } bw.write ( ( " ) " + ( ( ( ctx.expressionName () .getText () ) + ".get ( " ) + ( ctx.expression ( 0 ) .getText () ) ) ) ) ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
@ java.lang.Override public void buttonClick ( com.vaadin.ui.Button.ClickEvent event ) { logger.log ( java.util.logging.Level.INFO, ( " aus..." + ( "logge " + ( getSession () .getAttribute ( "user" ) ) ) ) ) ; getSession () .setAttribute ( "user", null ) ; com.example.testme.server.broadcast.Broadcaster.broadcast ( username, false ) ; getUI () .getNavigator () .navigateTo ( com.example.testme.client.lobby.LobbyPresenter.NAME ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent i = new android.content.Intent ( getActivity () , com.mintminter.simpletwitter.activity.ComposeActivity.class ) ; if ( null != ( mUser ) ) { i.putExtra ( Util.EXTRA_USER, org.parceler.Parcels.wrap ( mUser ) ) ; } startActivityForResult ( i, Util.REQUESTCODE_COMPOSE ) ; } 
@ com.emc.sa.api.GET @com.emc.sa.api.Path ( value = "/job-status" ) @com.emc.sa.api.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML, javax.ws.rs.core.MediaType.APPLICATION_JSON } ) @com.emc.storageos.security.authorization.CheckPermission ( roles = { com.emc.storageos.security.authorization.Role.TENANT_ADMIN } ) public com.emc.sa.api.OrderJobInfo getJobStatus ( @com.emc.sa.api.DefaultValue ( value = "DELETE_ORDER" ) @com.emc.sa.api.QueryParam ( value = com.emc.vipr.client.catalog.impl.SearchConstants.JOB_TYPE ) java.lang.String typeStr ) { com.emc.sa.api.OrderService.log.info ( "lbyc0:type={}", typeStr ) ; com.emc.sa.api.utils.OrderServiceJob.JobType type; try { type = OrderServiceJob.JobType.valueOf ( typeStr ) ; } catch ( java.lang.Exception e ) { com.emc.sa.api.OrderService.log.error ( "Failed to get job type e=", e ) ; throw APIException.badRequests.invalidParameterWithCause ( SearchConstants.JOB_TYPE, typeStr, e ) ; } com.emc.sa.api.utils.OrderJobStatus status = queryJobInfo ( type ) ; return null != status ? status.toOrderJobInfo () : new com.emc.sa.api.OrderJobInfo () ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { javafx.stage.DirectoryChooser directoryChooser = new javafx.stage.DirectoryChooser () ; java.io.File selectedDirectory = directoryChooser.showDialog ( stage ) ; if ( null == selectedDirectory ) { path.setText ( "No Directory selected" ) ; } else { path.setText ( selectedDirectory.getAbsolutePath () ) ; } } 
public void onDateSet ( android.widget.DatePicker view, int year, int month, int day ) { month = 1 + month; java.lang.String birthdate = ( ( ( day + "/" ) + month ) + "/" ) + year; java.lang.String last_date = com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information.remove ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc ) ; if ( ! ( last_date.equals ( birthdate ) ) ) { com.example.mishaberkovich.roomsquad.EditProfileActivity.changes_saved = false; } com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information.add ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc, birthdate ) ; com.example.mishaberkovich.roomsquad.EditProfileActivity.displayAge ( getActivity () ) ; } 
public static void main ( java.lang.String[] args ) throws java.io.IOException { for ( int i = 0; ( TestController.files.length ) > i; i++ ) { TestController.tests ( 10, "g", ( ( TestController.root ) + ( TestController.files[i] ) ) , i, TestController.maxValues[i] ) ; TestController.tests ( 10, "p", ( ( TestController.root ) + ( TestController.files[i] ) ) , i, TestController.maxValues[i] ) ; } } 
public ninja.Result gameGet ( @ninja.params.PathParam ( value = "choice" ) int choose ) { models.Game g = new models.amGame () ; models.Game g2 = new models.spGame () ; if ( 1 == choose ) { g.buildDeck () ; g.shuffle () ; return ninja.Results.json () .render ( g ) ; } else { g2.buildDeck () ; g2.shuffle () ; return ninja.Results.json () .render ( g2 ) ; } } 
private static void restoreDensity ( android.content.Context context ) { context.getResources () .getDisplayMetrics () .setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper.getMetricsOnMiui ( context.getResources () ) ; if ( null != metrics ) metrics.setToDefaults () ; } 
public boolean deleteMapLayerMetadataObject ( edu.harvard.iq.dataverse.MapLayerMetadata mapLayerMetadata, edu.harvard.iq.dataverse.authorization.users.User user ) { edu.harvard.iq.dataverse.MapLayerMetadataServiceBean.logger.info ( "deleteMapLayerMetadataObject" ) ; if ( ( user == null ) || ( mapLayerMetadata == null ) ) { return false; } if ( permissionService.userOn ( user, mapLayerMetadata.getDataFile () .getOwner () ) .has ( Permission.EditDataset ) ) { em.remove ( em.merge ( mapLayerMetadata ) ) ; this.deleteOlderMapThumbnails ( mapLayerMetadata ) ; return true; } return false; } 
public static double rootMeansSquaredError ( double[] real, double[] predicted ) { double ret = 1 / ( real.length ) ; for ( int i = 0; ( real.length ) > i; i++ ) { ret += java.lang.Math.pow ( ( ( real[i] ) - ( predicted[i] ) ) , 2 ) ; } return java.lang.Math.sqrt ( ret ) ; } 
public void IncrementCurrentScore ( int currentHole ) { if ( ! ( gameStarted ) ) { return; } if ( ( currentHole <= 18 ) && ( currentHole >= 1 ) ) { if ( ( score[ ( currentHole - 1 ) ] ) <= ( com.manleysoftware.michael.discgolfapp.Model.Player.maxScoreAllowable ) ) { return; } ( score[ ( currentHole - 1 ) ] ) ++; } } 
private static long convertToUsDollar ( long quantity, long exchange ) { if ( 100 < exchange ) { double total = quantity / ( io.zipcoder.aaronlong.wutangfinancial.Money.downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money.upHandleDoubles ( total ) ; } else if ( exchange < 100 ) { double total = quantity * ( io.zipcoder.aaronlong.wutangfinancial.Money.downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money.upHandleDoubles ( total ) ; } return quantity; } 
private boolean bracketsBalanced ( java.lang.String input ) { int i = 0; for ( char c : input.toCharArray () ) { if ( '{' == c ) i++; if ( c == '}' ) i--; } return ( i >= 0 ) && ( i == 0 ) ; } 
@ com.fasterxml.jackson.annotation.JsonCreator public static seedu.address.commons.core.Version fromString ( java.lang.String versionString ) throws java.lang.IllegalArgumentException { java.util.regex.Matcher versionMatcher = seedu.address.commons.core.Version.VERSION_PATTERN.matcher ( versionString ) ; if ( ! ( versionMatcher.find () ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String.format ( seedu.address.commons.core.Version.EXCEPTION_STRING_NOT_VERSION, versionString ) ) ; } return new seedu.address.commons.core.Version ( java.lang.Integer.parseInt ( versionMatcher.group ( 1 ) ) , java.lang.Integer.parseInt ( versionMatcher.group ( 2 ) ) , java.lang.Integer.parseInt ( versionMatcher.group ( 3 ) ) , ( null == ( versionMatcher.group ( 4 ) ) ? false : true ) ) ; } 
private boolean isViewNameValidForCurrentUI ( java.lang.String viewName ) { final java.util.Set<java.lang.String> beanNames = viewNameToBeanNamesMap.get ( viewName ) ; if ( null != beanNames ) { for ( java.lang.String beanName : beanNames ) { if ( isViewBeanNameValidForCurrentUI ( beanName ) ) { return ( ( getAccessDeniedView () ) != null ) || ( isAccessGrantedToBeanName ( beanName ) ) ; } } } return false; } 
private void traiterEmail ( java.lang.String email, com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF, e.getMessage () ) ; } utilisateur = utilisateurDao.trouver ( email ) ; if ( null == utilisateur ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF, "Utilisateur inconnu" ) ; java.lang.System.out.println ( "traiterEmail () --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } } 
@ java.lang.Override public void onPreviewFrame ( byte[] data, android.hardware.Camera camera ) { if ( null == camera ) return; float step = camera.getParameters () .getExposureCompensationStep () ; EV = java.lang.Math.max ( step, ( step * ( camera.getParameters () .getExposureCompensation () ) ) ) ; } 
public void setRuntime ( long runtime ) { if ( 0 < ( this.pauseTime ) ) { this.startTime = ( this.pauseTime ) - runtime; } else { this.startTime = ( com.badlogic.gdx.utils.TimeUtils.millis () ) - runtime; } } 
public void solve ( int nb, int source, int destination, int auxiliary ) throws hanoi.TowerIsEmptyException, hanoi.TowerIsFullException { if ( 1 == nb ) { this.moveOneDisc ( source, destination ) ; } else { this.solve ( ( nb - 1 ) , source, destination, auxiliary ) ; this.moveOneDisc ( source, destination ) ; this.solve ( ( nb - 1 ) , auxiliary, source, destination ) ; } } 
public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { java.lang.String searchByMail = new java.lang.String ( "" ) ; if ( 0 < ( trainers.size () ) ) { for ( models.Trainer trainer : trainers ) { if ( emailEntered.equals ( trainer.getEmail () ) ) { return trainer; } else { return null; } } } else { return null; } return null; } 
private int[] quicksort ( int[] list, int low, int high ) { if ( high < low ) return list; int pos = partition ( list, low, high ) ; quicksort ( list, low, ( pos - 1 ) ) ; quicksort ( list, ( pos + 1 ) , high ) ; } 
public final void applyTransformation ( eu.modernmt.model.Word source ) { if ( null == ( this.transformation ) ) { if ( ( source == null ) || ( ! ( source.placeholder.equals ( this.placeholder ) ) ) ) this.text = this.placeholder; else this.text = source.text; } else { this.transformation.apply ( source, this ) ; } } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { io.mstream.mstream.player.MStreamAudioService service = mWeakReference.get () ; if ( ( ( service.playbackManager.getPlayback () ) != null ) && ( service != null ) ) { if ( service.playbackManager.getPlayback () .isPlaying () ) { android.util.Log.d ( io.mstream.mstream.player.MStreamAudioService.TAG, "Ignoring delayed stop since the media player is in use." ) ; return; } service.playbackManager.handleStopRequest ( "" ) ; android.util.Log.d ( io.mstream.mstream.player.MStreamAudioService.TAG, "Stopping service with delay handler." ) ; service.stopSelf () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { if ( null == ( mCallback ) ) { android.util.Log.e ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.DEBUG_TAG, "There's no callback set!" ) ; return; } dialog.dismiss () ; switch ( which ) { case 0: mCallback.mapTypeSelected ( GoogleMap.MAP_TYPE_NORMAL ) ; break; case 1: mCallback.mapTypeSelected ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.MAP_STYLE_NIGHT ) ; break; case 2: mCallback.mapTypeSelected ( GoogleMap.MAP_TYPE_TERRAIN ) ; break; case 3: mCallback.mapTypeSelected ( GoogleMap.MAP_TYPE_HYBRID ) ; } } 
@ java.lang.Override public boolean handleChange ( java.lang.Object oldValue, java.lang.Object newValue, org.eclipse.draw2d.IFigure refreshableFigure ) { if ( null == ( traceDataProvider[index] ) ) { trace[index].setTraceColor ( getModelColor ( ( ( org.csstudio.sds.component.xygraph.model.XyGraphModel.PROP_PRIMARY_AXIS_TRACE_COLOR_PREFIX ) + index ) ) ) ; } return true; } 
public static int findMax ( int[][] a ) { int max = java.lang.Integer.MIN_VALUE; for ( int i = 0; ( a.length ) > i; i++ ) { for ( int j = 0; j < ( a.length ) ; j++ ) { if ( ( a[i][j] ) > max ) { max = a[i][j]; } } } return max; } 
private void checkSingleExpandMode ( int currExpandedParentPosition ) { if ( ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.ExpandCollapseMode.MODE_SINGLE_EXPAND ) != ( mExpandCollapseMode.mode ) ) return; final int lastExpandedPosition = mExpandCollapseMode.lastExpandedPosition; if ( lastExpandedPosition == currExpandedParentPosition ) return; com.github.huajianjiang.expandablerecyclerview.util.Logger.e ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.TAG, ( ( "checkSingleExpandMode " + "---->lastExpandedPosition=*" ) + lastExpandedPosition ) ) ; collapseView ( lastExpandedPosition, true ) ; mExpandCollapseMode.lastExpandedPosition = currExpandedParentPosition; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { switch ( position ) { case 0: return chatFragment; case 2: return publicGroupFragment; case 1: if ( null != ( contactsFragment ) ) { return contactsFragment; } return contactsFragment = new com.superchat.ui.ContactsScreen () ; case 3: return bulletinFragment; default: return new com.superchat.ui.TempFragment () ; } } 
private void spreadSkylightDownwards ( int x, int z ) { final int highestBlock = getHighestBlock ( x, z ) ; final int sectionY = highestBlock / ( Section.SECTION_HEIGHT ) ; byte light = World.DEFAULT_SKY_LIGHT; for ( int y = sectionY; 0 <= y; --y ) { final net.morbz.minecraft.world.Section section = sections[sectionY]; if ( section != null ) { light = section.spreadSkylightDownwards ( x, z, light ) ; } } } 
java.lang.String add ( de.hk.wfh.rs.FilterContext filterContext, java.lang.String line ) { boolean containsFilter = containsPattern ( line, filterContext.getFilterList () ) ; boolean containsIgnore = containsPattern ( line, filterContext.getIgnoreList () ) ; if ( ( ( !containsFilter ) && ( !containsIgnore ) ) || ( containsFilter && containsIgnore ) ) { return ( "<- ignore-filter conflict -> " + line ) + "\n"; } else if ( containsFilter && ( !containsIgnore ) ) { return line + "\n"; } return "\n"; } 
private void updateKLargestComments () { componentSizeCommentMap.clear () ; for ( org.wso2.siddhi.debs2016.graph.CommentLikeGraph commentLikeGraph : commentStore.values () ) { long sizeOfComponent = commentLikeGraph.getSizeOfLargestConnectedComponent () ; if ( 0 < sizeOfComponent ) { java.lang.System.out.println ( "DDDDDDDDDDD" ) ; } if ( sizeOfComponent == 0 ) { continue; } java.lang.String comment = commentLikeGraph.getComment () ; componentSizeCommentMap.put ( sizeOfComponent, comment ) ; componentSizeCommentMap.hashCode () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/loginaction", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String loginAction ( com.acae.entity.UserProfile user, javax.servlet.http.HttpSession session ) { com.acae.entity.UserProfile userProfile = loginService.getUserProfile ( user.getUserId () , user.getPassword () ) ; if ( null != userProfile ) { session.setAttribute ( "userProfile", userProfile ) ; session.setAttribute ( "role", userProfile.getRole () ) ; return "/index"; } else { session.setAttribute ( "errorMessage", "Wrong User ID or Password" ) ; return "/menu/login"; } } 
private synchronized void buildGoogleApiClient () { if ( null == ( mGoogleApiClient ) ) { mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) .addApi ( Nearby.MESSAGES_API, new com.google.android.gms.nearby.messages.MessagesOptions.Builder () .setPermissions ( NearbyPermissions.BLE ) .setPermissions ( NearbyPermissions.MICROPHONE ) .setPermissions ( NearbyPermissions.BLUETOOTH ) .build () ) .addConnectionCallbacks ( this ) .enableAutoManage ( this, this ) .build () ; } } 
private com.hutgroup.robocode.server.RoundResult toRoundResult ( int roundId, com.hutgroup.robocode.server.IRobotSnapshot robotSnapshot ) { double energyLeft = robotSnapshot.getEnergy () ; int playerId = robotSnapshot.getTeamIndex () ; com.hutgroup.robocode.server.IScoreSnapshot snapshot = robotSnapshot.getScoreSnapshot () ; double gunDamage = ( snapshot.getCurrentBulletKillBonus () ) + ( snapshot.getCurrentBulletDamageScore () ) ; double ramDamage = ( snapshot.getCurrentRammingDamageScore () ) + ( snapshot.getCurrentRammingKillBonus () ) ; return new com.hutgroup.robocode.server.RoundResult ( roundId, playerId, energyLeft, ramDamage, gunDamage ) ; } 
public void setUniformMatrix ( int loc, boolean transposed, org.joml.Matrix4f mat ) { if ( ( -1 ) == loc ) return; if ( ( example.ShaderProgram.buf16Pool ) == null ) example.ShaderProgram.buf16Pool = org.lwjgl.BufferUtils.createFloatBuffer ( 16 ) ; example.ShaderProgram.buf16Pool.clear () ; mat.get ( example.ShaderProgram.buf16Pool ) ; example.ShaderProgram.buf16Pool.flip () ; glUniformMatrix4fv ( loc, transposed, example.ShaderProgram.buf16Pool ) ; } 
public boolean insertBudget ( final java.lang.String name, final int max ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues.put ( protect.budgetwatch.DBHelper.BudgetDbIds.NAME, name ) ; contentValues.put ( protect.budgetwatch.DBHelper.BudgetDbIds.MAX, max ) ; final long newId = db.insert ( protect.budgetwatch.DBHelper.BudgetDbIds.TABLE, null, contentValues ) ; return 1 != newId; } 
@ java.lang.Override public void onComplete ( java.lang.String response ) { super.onComplete ( response ) ; if ( ! ( android.text.TextUtils.isEmpty ( response ) ) ) { if ( response.startsWith ( "{\"statuses\"" ) ) { mStatusList = com.sina.weibo.sdk.openapi.models.StatusList.parse ( response ) ; if ( 0 < ( mStatusList.statusList.size () ) ) { setViewData ( mStatusList.statusList ) ; } else { android.util.Log.d ( com.bricechou.weiboclient.fragment.HomeFragment.TAG, "Refresh onComplete: No Result." ) ; refreshViewDone () ; } } } } 
@ java.lang.Override public void onRefresh () { if ( it.asg.hustle.Utils.CheckConnection.isConnected ( getActivity () ) ) { android.util.Log.d ( "HUSTLE", ( ( tabPosition ) + "refresh on " ) ) ; downloadFriendShows ( gridAdapter[tabPosition], true ) ; } else { android.widget.Toast.makeText ( getActivity () , getResources () .getString ( R.string.toast_failure_refresh ) , Toast.LENGTH_SHORT ) .show () ; swipeView.setRefreshing ( false ) ; } } 
@ java.lang.Override public boolean accept ( T t ) { if ( ( ( this.matching ) == null ) && ( t == null ) ) { return true; } if ( t == null ) { return false; } return t.equals ( t ) ; } 
protected final java.lang.String getToken () { java.lang.String token = this.getCookie ( "token" ) ; if ( null == token ) { token = this.getHeader ( "token" ) ; if ( null == token ) { token = this.getString ( "token" ) ; } } return token; } 
public spell.INode find ( java.lang.String word ) { spell.Node temp = root; for ( int i = 0; ( word.length () ) > i; i++ ) { int index = indexByLetter ( word.charAt ( i ) ) ; if ( temp.hasNode ( index ) ) { temp = temp.getNode ( index ) ; } else { return null; } } return temp; } 
public void print ( boolean printable ) { if ( printable ) { if ( ( client.networkInterceptors () .indexOf ( org.fintx.http.HttpClientBase.networkInterceptor ) ) == ( -1 ) ) { client = client.newBuilder () .addNetworkInterceptor ( org.fintx.http.HttpClientBase.networkInterceptor ) .build () ; } } else { client.networkInterceptors () .remove ( org.fintx.http.HttpClientBase.networkInterceptor ) ; } } 
private void saveImagePixels () { for ( int xPixel = 0; ( ( this.width ) - 1 ) > xPixel; ++xPixel ) { for ( int yPixel = 0; yPixel < ( ( this.height ) - 1 ) ; ++yPixel ) { this.setPixel ( xPixel, yPixel, imageArray[xPixel][yPixel].getColor () ) ; } } } 
private void msgNearby ( org.bukkit.entity.Player p, java.lang.String msg ) { org.bukkit.entity.Entity en; label58: for ( java.util.Iterator localIterator = p.getNearbyEntities ( 48.0, 48.0, 48.0 ) .iterator () ; localIterator.hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) .sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator.next () ) ) ; if ( ( en == p ) || ( ! ( en instanceof org.bukkit.entity.Player ) ) ) break label58; } } 
private void addRow ( java.lang.String[] row ) { for ( int i = 0; ( nOfColumns ) > i; ++i ) { data.addEntity ( new org.online.etl.model.abstractions.Entity ( currentId, ( ( long ) ( i ) ) , "", "String", "" ) ) ; } } 
public static void add ( javax.servlet.http.HttpSession session, java.lang.String key, java.lang.Object value ) { java.util.Map<java.lang.String, java.lang.Object> map = com.liferay.portal.kernel.servlet.SessionErrors._getMap ( session, true ) ; if ( null == map ) { return; } map.put ( key, value ) ; } 
public void updateNodeInMap ( src.Node n, java.util.Map<java.lang.String, src.Node> map ) { src.Node nodeFromMap = map.get ( n.getState () .toString () ) ; if ( ( n.getTotalCost () ) < ( nodeFromMap.getTotalCost () ) ) { map.remove ( nodeFromMap.getState () .toString () ) ; map.put ( n.getState () .toString () , n ) ; } } 
private boolean solveH ( int col ) { int i = 0; int count = 0; for ( i = 0; ( board.length ) > i; i++ ) { if ( addQueen ( i, col ) ) { if ( ( col > ( ( board[0].length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true; } else { removeQueen ( i, col ) ; } } } return false; } 
public org.mapeditor.core.Map nextTurn () { if ( ! ( isGameOver () ) ) { boolean isStalemateForPlayer = isStalemateTurnForPlayer ( utilties.models.Game.PLAYER_ID ) ; boolean isStalemateForOpponent = isStalemateTurnForPlayer ( utilties.models.Game.OPPONENT_ID ) ; if ( isStalemateForOpponent && isStalemateForPlayer ) { _isStalemate = true; this._isGameOver = true; } else if ( ( this._numberOfTurnsCompleted ) > ( utilties.models.Game.MAX_TURN_LIMIT ) ) { _isStalemate = true; this._isGameOver = true; } ( this._numberOfTurnsCompleted ) ++; } return this._entityMap.getMap () ; } 
public void dispose () { for ( com.badlogic.ashley.core.EntitySystem sys : com.spaceproject.screens.SpaceScreen.engine.getSystems () ) { if ( sys instanceof com.badlogic.gdx.utils.Disposable ) ( ( com.badlogic.gdx.utils.Disposable ) ( sys ) ) .dispose () ; } for ( com.badlogic.ashley.core.Entity ents : com.spaceproject.screens.SpaceScreen.engine.getEntities () ) { com.spaceproject.components.TextureComponent tex = ents.getComponent ( com.spaceproject.components.TextureComponent.class ) ; if ( null != tex ) tex.texture.dispose () ; } com.spaceproject.screens.SpaceScreen.engine.removeAllEntities () ; } 
private void setSpotColor ( javax.swing.JButton buttonToChange, java.lang.String playerNameOnSpot ) { if ( ( "".equals ( playerNameOnSpot ) ) || ( playerNameOnSpot == null ) ) { return; } if ( myPlayerController.getPlayer1Name () .equals ( playerNameOnSpot ) ) { buttonToChange.setIcon ( black_icon ) ; } else if ( myPlayerController.getPlayer2Name () .equals ( playerNameOnSpot ) ) { buttonToChange.setIcon ( red_icon ) ; } } 
private static void rauswerfen ( int neuesFeld, int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler.keySet () ) { if ( spielerNummer != rspielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler.get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler.holeSpielfiguren () .keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler.holeSpielfiguren () .get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur.rauswerfen () ; } } } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { existingProduct.setQuantityOrWeight ( java.lang.Double.valueOf ( holder.editTextQuantity.getText () .toString () ) ) ; existingProductDAO.update ( existingProduct ) ; existingProducts.set ( holder.getAdapterPosition () , existingProduct ) ; if ( null != ( mOnDataChangeListener ) ) { mOnDataChangeListener.onDataChanged ( existingProducts ) ; } notifyDataSetChanged () ; } 
private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId, int hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException, eu.europeana.corelib.edm.exceptions.MongoRuntimeException, eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System.currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService.findById ( europeanaId, false, hierarchyTimeout ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG.isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG.debug ( ( " ms" + ( "SearchService findByID took " + ( ( java.lang.System.currentTimeMillis () ) - startTime ) ) ) ) ; } return result; } 
public void updateStats () { ray = ( Utils.Global.ratioH ) * ( ray ) ; ostr.setCenterX ( ( ( getX () ) * ( Utils.Global.ratioW ) ) ) ; ostr.setCenterY ( ( ( getY () ) * ( Utils.Global.ratioH ) ) ) ; ostr = new org.newdawn.slick.geom.Circle ( ostr.getCenterX () , ostr.getCenterY () , ray ) ; maxW = ( maxW ) * ( Utils.Global.ratioW ) ; maxH = ( maxH ) * ( Utils.Global.ratioH ) ; } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { if ( null != e ) { android.util.Log.d ( com.gcw.sapienza.places.ShareFragment.TAG, e.getMessage () ) ; } else { resetShareFragment () ; ( ( com.gcw.sapienza.places.com.gcw.sapienza.places.MainActivity ) ( getActivity () ) ) .refresh () ; } } 
@ java.lang.Override public void call ( caesar.interpreter.CaesarInterpreter interpreter ) { caesar.interpreter.buildin.StringClass.logger.log ( java.util.logging.Level.FINE, "addString from StringClass is called." ) ; java.lang.String opa = interpreter.getStack () .popString () ; java.lang.String opb = interpreter.getStack () .popString () ; java.lang.String result = opb + opa; interpreter.getStack () .pushString ( result ) ; } 
@ java.lang.Override public int compare ( com.Ben12345rocks.VotingPlugin.Objects.User p1, com.Ben12345rocks.VotingPlugin.Objects.User p2 ) { int p1Total = p1.getTotalVotesSite ( voteSite ) ; int p2Total = p1.getTotalVotesSite ( voteSite ) ; if ( p2Total > p1Total ) { return 1; } if ( p1Total > p2Total ) { return -1; } return 0; } 
@ org.junit.Test public void testGroupNotPresentInDisplay () throws java.lang.Exception { us.kbase.narrativemethodstore.ValidationResults vr = us.kbase.narrativemethodstore.db.test.ValidatorTest.validate ( 8 ) ; junit.framework.Assert.assertEquals ( ( vr + "" ) , 0L, ( ( long ) ( vr.getIsValid () ) ) ) ; junit.framework.Assert.assertEquals ( ( vr + "" ) , 1, vr.getErrors () .size () ) ; junit.framework.Assert.assertEquals ( ( vr + "" ) , ( "Can't find property [log_entries] within path " + "[parameter-groups] in display.yaml" ) , vr.getErrors () .get ( 0 ) ) ; } 
public void pop () { astnodes.ASTNode topOfItemStack = itemStack.peek () ; if ( ( ( stack.peek () .parentCompound ) == topOfItemStack ) && ( ( stack.size () ) > 0 ) ) { stack.pop () ; } } 
private boolean tryRegister ( java.lang.String user, java.lang.String password ) { try { PwdManager.Registration.registerUser ( user, password ) ; return true; } catch ( java.nio.file.FileAlreadyExistsException e ) { PwdManager.UI.UIUtility.errorMessage ( "Registration.", ( " already exists." + ( "User " + user ) ) ) ; return false; } catch ( java.lang.Exception e ) { PwdManager.UI.UIUtility.errorMessage ( "Registration", e.getMessage () ) ; return false; } } 
public io.ddf.DDF getDDFByUri ( java.lang.String uri ) throws io.ddf.exception.DDFException { java.util.UUID uuid = this.mUris.get ( uri ) ; if ( null != uuid ) { throw new io.ddf.exception.DDFException ( java.lang.String.format ( "Cannot find ddf with uri %s", uri ) ) ; } return this.getDDF ( uuid ) ; } 
public void login ( java.lang.String email, java.lang.String password ) { com.weddingcrashers.model.User user = _userService.getUserByEmail ( email ) ; com.weddingcrashers.servermodels.LoginContainer loginContainer = new com.weddingcrashers.servermodels.LoginContainer () ; if ( null != user ) { if ( user.getPassword () .equals ( com.weddingcrashers.repositories.Utils.hashPassword ( password ) ) ) { loginContainer.setUser ( user ) ; } } com.weddingcrashers.server.ServerUtils.sendObject ( client, loginContainer ) ; } 
public void approachBuilding ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg.getBuilding ( bldName ) ; if ( null != bldg ) { java.lang.String description = bldg.getExteriorDescription () ; java.lang.String imagePath = bldg.getExtImagePath () ; displayBuilding ( description, imagePath ) ; _currentBldg = bldg; } else { _frame.displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } 
private void setupAuthenticatedModel ( java.lang.String results, org.balaguta.currconv.web.ConversionDto conversion, org.springframework.ui.ModelMap model ) { java.util.List<org.balaguta.currconv.data.entity.Conversion> history = conversionService.getHistory () ; if ( ( results == null ) || ( history.isEmpty () ) ) { model.put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY, history ) ; } else { model.put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY, history.subList ( 1, history.size () ) ) ; model.put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION, history.get ( 0 ) ) ; } } 
private void setXYDisplacements () { switch ( angleStr ) { case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_0: displacementX = displacement; displacementY = 0; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_45: displacementX = displacement; displacementY = displacement; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_90: displacementX = 0; displacementY = displacement; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_135: displacementX = - ( displacement ) ; displacementY = displacement; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_ALL: computeGLCPWithAllAngles = true; break; default: throw new org.esa.snap.core.gpf.OperatorException ( ( ( angleStr ) + "Unknown angle: " ) ) ; } } 
private int getCardsCountBeforeCurrentPosition ( int position ) { int count = 0; if ( ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) < position ) && ( shouldShowAppodealAdBanner ) ) count++; if ( ( shouldShowAsBanner ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.AS_BANNER_POSITION ) < position ) ) count++; return count; } 
public java.lang.String toString () { return "]" + ( ( ( ( ( ( ( "Rect [" + ( x0 ) ) + ", " ) + ( y0 ) ) + "][ w:" ) + ( ( x0 ) + ( x1 ) ) ) + ", h:" ) + ( ( y0 ) + ( y1 ) ) ) ; } 
public double getPoisson ( double lambda ) { double L = java.lang.Math.exp ( ( -lambda ) ) ; double p = 1.0; double k = 0.0; do { k = 0.5 + k; p *= java.lang.Math.random () ; } while ( p > L ) ; double numero = 1 / ( k - 0.1 ) ; java.lang.System.out.println ( numero ) ; numero = redondear ( ( numero * 10 ) ) ; return numero; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) { return true; } if ( ! ( o instanceof org.yccheok.jstock.engine.Board ) ) { return false; } return this.industry.equals ( ( ( org.yccheok.jstock.engine.Industry ) ( o ) ) .industry ) ; } 
public void receive ( java.util.Map<java.lang.String, java.lang.String> result ) { int in = java.lang.Integer.parseInt ( result.get ( "rx-bits-per-second" ) ) ; int out = java.lang.Integer.parseInt ( result.get ( "tx-bits-per-second" ) ) ; traffic = out + in; java.lang.System.out.println ( ( ( ( ( ( ( java.lang.Thread.currentThread () .getId () ) + ( parentIdentity ) ) + ": Total traffic on " ) + ( label ) ) + ": " ) + ( traffic ) ) ) ; aggregator.update ( traffic ) ; } 
public void deselectController () { if ( null != ( mCursorController ) ) { mCursorController.removePickEventListener ( mPickHandler ) ; mCursorController.setEnable ( false ) ; mCursorController = null; } if ( ( mControllerModel ) != null ) { mControllerModel.setEnable ( false ) ; mControllerModel.getParent () .removeChildObject ( mControllerModel ) ; mControllerModel = null; } } 
public int getSyncMsec ( int ms ) { this.lock.lock () ; try { ( this.syncCount ) --; while ( ( msec ) == ms ) { try { free.await () ; } catch ( java.lang.InterruptedException e ) { java.lang.Thread.currentThread () .interrupt () ; } } free.signalAll () ; } finally { lock.unlock () ; } return msec; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.app_bar ) ) ) ; setSupportActionBar ( toolbar ) ; mIsTwoPaneLayout = null != ( findViewById ( R.id.top_tracks_container ) ) ; if ( ( mIsTwoPaneLayout ) && ( savedInstanceState != null ) ) { getSupportFragmentManager () .beginTransaction () .replace ( R.id.top_tracks_container, new com.spotify.sdliles.spotifystreamer.UI.TopTracksFragment () ) .commit () ; } } 
public static void inputData () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; Exam01.IDCard.str = scanner.next () ; Exam01.IDCard.arr = new java.lang.String[18]; for ( int i = 0; 18 > i; i++ ) { Exam01.IDCard.arr[i] = Exam01.IDCard.str.substring ( i, ( i + 1 ) ) ; } } 
@ java.lang.Override public void onComplete ( com.google.firebase.database.DatabaseError databaseError, com.google.firebase.database.DatabaseReference databaseReference ) { if ( null != databaseError ) { callbackContext.sendPluginResult ( convertToPluginResult ( PluginResult.Status.ERROR, databaseError, false ) ) ; } else { callbackContext.sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.OK, ( ( path + '/' ) + ( databaseReference.getKey () ) ) ) ) ; } } 
private void fetch () throws com.hummingwave.Custom.WaveORMException { com.sample.Employee employee = new com.sample.Employee () ; java.util.List object = employee.fetchRecords ( null, null, null, null, null, null ) ; employee = ( ( com.sample.Employee ) ( object.get ( 0 ) ) ) ; { { try { android.util.Log.e ( "RESULT", ( "" + ( new java.lang.String ( employee.getBytes () , "ISO-8859-15" ) ) ) ) ; } catch ( java.io.UnsupportedEncodingException e ) { e.printStackTrace () ; } } } } 
public int p2Left () { ( p2Index ) --; if ( displayNeuhaus ) { if ( ( -1 ) == ( p2Index ) ) { p2Index = 10; } else if ( ( p2Index ) == 10 ) { p2Index = 7; } } else { if ( ( p2Index ) < 0 ) { p2Index = 7; } } return p2Index; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj instanceof Sentence.PADependencyTuple ) { Sentence.PADependencyTuple PADepTuple = ( ( Sentence.PADependencyTuple ) ( obj ) ) ; if ( ( predIndex ) != ( PADepTuple.predIndex ) ) return false; if ( ( PADepTuple.argIndex ) != ( argIndex ) ) return false; if ( ( PADepTuple.srl ) != ( srl ) ) return false; return true; } return false; } 
public void setColor ( java.awt.Color color ) { if ( ( this.color.equals ( color ) ) && ( ( this.color ) != null ) ) return; this.color = color; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this, FieldEvent.UPDATE, "color" ) ) ; } 
@ java.lang.Override @org.molgenis.security.core.runas.RunAsSystem public void changePassword ( java.lang.String username, java.lang.String newPassword ) { org.molgenis.auth.MolgenisUser user = dataService.query ( org.molgenis.security.account.MOLGENIS_USER, org.molgenis.auth.MolgenisUser.class ) .eq ( org.molgenis.security.account.USERNAME, username ) .findOne () ; if ( null == user ) { throw new org.molgenis.security.user.MolgenisUserException ( java.lang.String.format ( "Unknown user [%s]" ) ) ; } user.setPassword ( newPassword ) ; user.setChangePassword ( false ) ; dataService.update ( org.molgenis.security.account.MOLGENIS_USER, user ) ; org.molgenis.security.account.AccountServiceImpl.LOG.info ( "Changed password of user [{}]", username ) ; } 
public boolean hasContent () { return ( null != ( file ) ) || ( ( ( ( io.netty.handler.codec.http.HttpResponseStatus.OK ) != ( status ) ) || ( null != ( messenger.getRedirectTo () ) ) ) || ( null != ( content ) ) ) ; } 
public void setExternalNum ( java.lang.String externalNum ) { try { if ( 50 >= ( vendorName.length () ) ) this.externalNum = externalNum; else { throw new java.lang.IllegalArgumentException ( ( ( "'" + externalNum ) + "' is longer than 50" ) ) ; } } catch ( java.lang.IllegalArgumentException e ) { errorList[5] = "ERROR: " + ( e.getMessage () ) ; setErrorCount ( ( ( getErrorCount () ) + 1 ) ) ; } } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { android.util.Log.d ( com.abrahamyans.gpsbusfeed.scheduler.LocationService.TAG, ( location + "Changed location " ) ) ; com.abrahamyans.gpsbusfeed.event.LocationChangedEvent event = new com.abrahamyans.gpsbusfeed.event.LocationChangedEvent ( getApplicationContext () , location, new java.util.Date () ) ; if ( tracker.isValidLocationEvent ( event ) ) { feed.onLocationChanged ( new com.abrahamyans.gpsbusfeed.event.LocationChangedEvent ( getApplicationContext () , location, new java.util.Date () ) ) ; } processingLocation = false; disconnect () ; } 
private void handleOnDestroyOne ( android.content.pm.ServiceInfo targetInfo ) { android.app.Service service = mNameService.get ( targetInfo.name ) ; if ( null != service ) { service.onDestroy () ; mNameService.remove ( targetInfo.name ) ; java.lang.Object token = findTokenByService ( service ) ; mTokenServices.remove ( token ) ; mServiceTaskIds.remove ( token ) ; me.ele.amigo.compat.QueuedWorkCompat.waitToFinish () ; } me.ele.amigo.compat.QueuedWorkCompat.waitToFinish () ; } 
public void loadCatalogDetailsFromFileIfRequired ( boolean forceReload ) { if ( forceReload ) mCatalogueDetails = null; try { if ( null != ( mCatalogueDetails ) ) return; java.io.File catalogDetailsFile = getLocalCatalogDetailsFile () ; if ( ! ( catalogDetailsFile.exists () ) ) return; if ( org.jaya.indexsync.IndexCatalogue.sbCatalogueDetailsUpdateInProgress ) return; org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser () ; mCatalogueDetails = ( ( org.json.simple.JSONObject ) ( parser.parse ( new java.io.FileReader ( catalogDetailsFile ) ) ) ) ; } catch ( java.lang.Exception ex ) { ex.printStackTrace () ; } } 
public java.util.List<com.intellij.plugins.haxe.model.HaxeParameterModel> getParameters () { java.util.List<com.intellij.plugins.haxe.model.HaxeParameterModel> _parameters = null; com.intellij.plugins.haxe.model.HaxeParameterList parameterList = com.intellij.plugins.haxe.util.UsefulPsiTreeUtil.getChild ( this.haxeMethod, com.intellij.plugins.haxe.model.HaxeParameterList.class ) ; _parameters = new java.util.ArrayList<com.intellij.plugins.haxe.model.HaxeParameterModel> () ; if ( null != parameterList ) { for ( com.intellij.plugins.haxe.model.HaxeParameter parameter : parameterList.getParameterList () ) { _parameters.add ( new com.intellij.plugins.haxe.model.HaxeParameterModel ( parameter ) ) ; } } return _parameters; } 
@ java.lang.Override public void serialize ( com.facebook.presto.spi.SerializableNativeValue value, com.fasterxml.jackson.core.JsonGenerator generator, com.fasterxml.jackson.databind.SerializerProvider provider ) throws java.io.IOException { generator.writeStartObject () ; generator.writeStringField ( "type", value.getType () .getCanonicalName () ) ; generator.writeFieldName ( "value" ) ; if ( null == ( value.getValue () ) ) { generator.writeNull () ; } else { com.facebook.presto.spi.SerializableNativeValue.Serializer.writeValue ( value, generator ) ; } generator.writeEndObject () ; } 
public void setMessageForMultiList ( @android.support.annotation.StringRes int headline, @android.support.annotation.StringRes int message, @android.support.annotation.DrawableRes int icon ) { if ( ( ( mMultiListMessage ) != null ) && ( ( mMultiListContainer ) != null ) ) { mMultiListHeadline.setText ( headline ) ; mMultiListMessage.setText ( message ) ; mMultiListIcon.setImageResource ( icon ) ; mMultiListIcon.setVisibility ( View.VISIBLE ) ; mMultiListProgress.setVisibility ( View.GONE ) ; } } 
public static symjava.bytecode.BytecodeVecFunc compileVecFunc ( symjava.symbolic.Expr[] args, symjava.symbolic.Expr expr ) { java.lang.String className = ( java.util.UUID.randomUUID () .toString () .replaceAll ( "-", "" ) ) + "JITVecFunc_YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY"; com.sun.org.apache.bcel.internal.generic.ClassGen genClass = symjava.symbolic.utils.BytecodeUtils.genClassBytecodeVecFunc ( className, expr, args, true, false ) ; symjava.symbolic.utils.FuncClassLoader<symjava.bytecode.BytecodeVecFunc> fcl = new symjava.symbolic.utils.FuncClassLoader<symjava.bytecode.BytecodeVecFunc> ( java.lang.Thread.currentThread () .getContextClassLoader () ) ; return fcl.newInstance ( genClass ) ; } 
public int countNodes ( hou.forwz.Leetcode.structure.TreeNode root ) { int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; if ( rightDeep == leftDeep ) { return ( ( int ) ( ( java.lang.Math.pow ( 2, leftDeep ) ) + ( countNodes ( root.right ) ) ) ) ; } else return ( ( int ) ( java.lang.Math.pow ( 2, rightDeep ) ) ) + ( countNodes ( root.left ) ) ; } 
public synchronized void incomingCar ( data.analytics.smart.traffic.model.movement.CardinalDirection from, data.analytics.smart.traffic.model.Car car ) { java.util.List<data.analytics.smart.traffic.model.Car> carList = waitinglist.get ( from ) ; carList.add ( car ) ; waitinglist.put ( from, carList ) ; java.lang.System.out.println ( ( "has to wait in line" + ( "Car from " + from ) ) ) ; if ( light.isGreen ( from ) ) { java.lang.System.out.println ( "Its already green" ) ; this.announceLeaving ( new data.analytics.smart.traffic.model.movement.Direction ( from ) , car ) ; } } 
private double getElevation ( model.battlefield.map.Tile t, model.battlefield.map.cliff.Cliff c ) { if ( ( ( c.level ) + 1 ) < ( t.getModifiedLevel () ) ) { return ( ( c.level ) + 1 ) * ( model.battlefield.map.Tile.STAGE_HEIGHT ) ; } return t.getModifiedElevation () ; } 
@ java.lang.Override public void update ( long songTime ) { setY ( ( ( ( ( ( ( beatTimeMillis ) - songTime ) + ( GameScreen.visualOffsetMillis ) ) * ( GameScreen.HIT_OBJECT_DISTANCE ) ) / ( millisFor4Beats ) ) + ( GameScreen.BAR_POSITION ) ) ) ; if ( ( songTime - ( beatTimeMillis ) ) > ( holdDurationMillis ) ) { BeatMap.hitFlagString = BeatMap.HITFLAGSTRINGS[4]; onRelease ( HitState.MISS ) ; } } 
private void loadLands () { java.lang.String[] lands = ( ( java.lang.String[] ) ( com.essentials.mcoldlife.main.CustomConfig.getArray ( reference.FILE_LANDS, reference.CONFIG_FOLDER.toString () , reference.PATH_LANDS ) ) ) ; if ( null != lands ) { for ( java.lang.String land : lands ) { com.mcoldlife.objects.OLLand l = new com.mcoldlife.objects.OLLand ( land ) ; com.mcoldlife.objects.RPGManager.addLand ( land, l ) ; } } } 
public static java.lang.String getCurrentTitle ( boolean preparing ) { return null == ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer ) ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? br.com.carlosrafaelgn.fplay.playback.Player.thePlayer.getText ( R.string.nothing_playing ) .toString () : !preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( br.com.carlosrafaelgn.fplay.playback.Player.thePlayer.getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } 
protected java.lang.String getDataStorePath ( final java.lang.String dataStore, final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "operational".contains ( dataStore ) ) || ( "config".contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context; } else { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context; } } else { return ( "/" + dataStore ) + context; } } 
public java.lang.String toString () { java.lang.String returnString = ( this.operator.todRealString () ) + " ( "; java.util.Iterator<dl.syntax.Term> subTermIterator = getSubTerms () .iterator () ; while ( subTermIterator.hasNext () ) { returnString = ( returnString + " " ) + ( subTermIterator.next () .todRealString () ) ; } returnString = returnString + " ) "; return returnString; } 
private static synchronized void sleep () { int select = ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.mAutoId.getAndAdd ( 1 ) ) % ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS.length ) ; int sleepTime = ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS[select] ) - ( ( int ) ( ( java.lang.System.currentTimeMillis () ) - ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) ) ) ; if ( 0 < sleepTime ) { try { java.lang.Thread.sleep ( sleepTime ) ; } catch ( java.lang.InterruptedException ignore ) { } } } 
public void createLocalServer ( java.lang.String port ) { int iport = -1; try { iport = java.lang.Integer.parseInt ( port ) ; localServer = server.ServerFactory.createServer ( iport ) ; localServer.startUp () ; this.connect ( "localhost", ( port + "" ) ) ; } catch ( java.lang.NumberFormatException nfe ) { showFail ( loginScreen, "Please insert a real number at the Port-Field." ) ; } catch ( java.net.BindException e ) { showFail ( loginScreen, "Port is already in use, please enter another Port." ) ; } catch ( java.net.BindException e ) { showFail ( loginScreen, "The specified port is already in use. Please choose another port." ) ; } } 
public void showSprint ( softwaremanagementtool.agile.Sprint sprint ) { if ( null != sprint ) { infoViewController.showSprint ( sprint ) ; sprintBlViewController.setAgilePrj ( agilePrj, agilePrj.getSprintBacklogList ( sprint ) ) ; prodOpenBlViewController.setAgilePrj ( agilePrj, agilePrj.getOpenProdBacklogList () ) ; backlogViewController.showSprint ( sprint ) ; taskViewController.showSprint ( sprint ) ; reviewViewController.showSprint ( sprint ) ; retrospectViewController.showSprint ( sprint ) ; } } 
public java.util.List<com.github.bwsoft.iris.sample.FuelFigures.FuelFigure> getFuelFigures ( com.github.bwsoft.iris.message.GroupObject msgObj ) { figures.clear () ; com.github.bwsoft.iris.message.GroupObjectArray fuelFiguresGroup = msgObj.getGroupArray ( fuelFigures ) ; for ( int i = 0; ( fuelFiguresGroup.getNumOfGroups () ) > i; i++ ) { com.github.bwsoft.iris.message.GroupObject aFigureObj = fuelFiguresGroup.getGroupObject ( 0 ) ; com.github.bwsoft.iris.sample.FuelFigures.FuelFigure aFigure = new com.github.bwsoft.iris.sample.FuelFigures.FuelFigure () ; aFigure.speed = aFigureObj.getFloat ( speed ) ; aFigure.mpg = aFigureObj.getFloat ( mpg ) ; figures.add ( aFigure ) ; } return figures; } 
public void selectPrevious () { if ( ( getSelectedImage () ) instanceof org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) { if ( null == ( getSelectedImage () ) ) return; if ( ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( getSelectedImage () ) ) .getSequence () ) == null ) throw new java.lang.IllegalStateException () ; setSelectedImage ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( getSelectedImage () ) ) .previous () ) ; } } 
public void addLast ( Item item ) { if ( null == item ) { throw new java.lang.NullPointerException () ; } if ( ( N ) == ( array.length ) ) resize ( ( ( array.length ) * 2 ) ) ; array[ ( ++ ( last ) ) ] = item; N = ( last ) + 1; } 
public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; if ( null == savedInstanceState ) { mListJenkinsBuildInfoFragment = org.addhen.birudo.ui.fragment.ListJenkinsBuildInfoFragment.newInstance () ; if ( ! ( mPresenter.isAppConfigured () ) ) { launch.settings () ; } getFragmentManager () .beginTransaction () .replace ( R.id.list_container, mListJenkinsBuildInfoFragment ) .commit () ; } } 
public long getMemoryAddress ( com.zms.zpc.emulator.PC pc ) { assert null == ( addressReg ) ; addressUseReg = false; long address = calAddress ( pc, this.address ) ; if ( addressUseReg ) { address += com.zms.zpc.execute.NumberUtils.asSigned ( this.disp, this.dispWidth ) ; } else { address += this.disp; } com.zms.zpc.emulator.reg.Segment seg = ( ( com.zms.zpc.emulator.reg.Segment ) ( pc.cpu.regs.getReg ( instru.segBase ) ) ) ; return seg.getAddress ( address ) ; } 
public semantic.Table lookupFunction ( java.lang.String name ) { int nodeNum; while ( null != ( parent ) ) { parent.lookupFunction ( name ) ; } for ( semantic.Table t : parent.children ) { nodeNum = ( t.getSymbol ( 0 ) .getType () .equals ( "function name" ) ) ? 0 : 1; if ( t.getSymbol ( nodeNum ) .getName () .equals ( name ) ) return t; } return null; } 
private java.lang.String removeSpaces ( java.lang.String s ) { java.lang.String answer = ""; for ( int i = 0; ( s.length () ) > i; i++ ) if ( ( s.charAt ( i ) ) != ' ' ) answer += answer.charAt ( i ) ; return answer; } 
@ java.lang.Override public void run () { if ( ( touchSlop ) < ( java.lang.Math.abs ( ( ( mostRecentX ) - ( startX ) ) ) ) ) { return; } if ( ( java.lang.Math.abs ( ( ( mostRecentY ) - ( startY ) ) ) ) > ( touchSlop ) ) { return; } isLongPressing = true; listener.onLongPress () ; } 
public synchronized com.sun.messaging.jmq.jmsserver.core.Packet getPacket () { com.sun.messaging.jmq.jmsserver.core.Packet pkt = getPacketObject () ; if ( ( destroyed ) || ( pkt != null ) ) { return pkt; } assert persist; if ( ! ( persist ) ) { return null; } pkt = recoverPacket () ; assert pkt != null; setPacketObject ( true, pkt ) ; return pkt; } 
private java.lang.Boolean AddShortURL () { url.CreateLink short_link = new url.CreateLink ( this.row ) ; java.lang.String shortURL = short_link.encodeLongURL () ; long hashURL = short_link.getShortURLHash () ; try { this.insertFactory.insertShortLink ( hashURL, shortURL, this.row ) ; } catch ( java.lang.Exception e ) { helper.Loghandler.log ( ( ( e.toString () ) + "trying to insert the url " ) , "fatal" ) ; return false; } return true; } 
@ java.lang.Override public void done ( java.util.List<com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser> userList, java.lang.Exception e ) { if ( ( null != userList ) && ( null != e ) ) { for ( com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser user : userList ) { com.avoscloud.leanchatlib.utils.ThirdPartDataCache.getInstance () .cacheUser ( user.userId, user ) ; } } } 
@ org.jetbrains.annotations.Nullable public java.lang.String getCurrentElementType ( com.intellij.psi.PsiElement currentElement ) { while ( ( ( currentElement instanceof com.intellij.psi.PsiWhiteSpace ) || ( currentElement instanceof com.intellij.psi.PsiComment ) ) && ( currentElement != null ) ) { currentElement = currentElement.getPrevSibling () ; } if ( currentElement != null ) { return com.perl5.lang.perl.psi.utils.PerlPsiUtil.getPerlExpressionType ( currentElement ) ; } return null; } 
public void enterResult ( ceylon.tool.converter.java2ceylon.ResultContext ctx ) { try { if ( null == ( ( ( ceylon.tool.converter.java2ceylon.MethodHeaderContext ) ( ctx.getParent () ) ) .typeParameters () ) ) { enterresult = true; if ( ctx.getChild ( 0 ) .toString () .equals ( "void" ) ) bw.write ( ( ( ctx.getChild ( 0 ) .toString () ) + " " ) ) ; } } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
public com.marcuslee.fypdemo.obj.Shot findShot ( int frame ) { for ( com.marcuslee.fypdemo.obj.Shot shot : com.marcuslee.fypdemo.ObjectHolder.Shots ) { if ( ( ( shot.getEndFrame () ) > frame ) && ( ( shot.getStartFrame () ) < frame ) ) { return shot; } } return null; } 
@ cucumber.api.java.After public void teardown ( final cucumber.api.Scenario scenario ) { if ( ! ( featureState.getFailed () ) ) { au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS.takeScreenshot ( ( ( scenario.getName () ) + " " ) , featureState ) ; } featureState.setFailed ( scenario.isFailed () ) ; final boolean clearDriver = java.lang.Boolean.parseBoolean ( au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS.getProperty ( Constants.NEW_BROWSER_PER_SCENARIO ) ) ; synchronized ( au.com.agic.apptesting.State.THREAD_DESIRED_CAPABILITY_MAP ) { if ( clearDriver ) { State.THREAD_DESIRED_CAPABILITY_MAP.clearWebDriverForThread ( true ) ; } } } 
public void getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365; double ratetime = java.lang.Math.pow ( ( ( rate ) + 1 ) , datediff ) ; balance = ( balance ) * ratetime; firstdate = seconddate; } 
public void set ( java.lang.String path, java.lang.Object value, java.lang.String comment ) { if ( ! ( this.config.contains ( path ) ) ) { this.config.set ( ( ( comments ) + ( ( manager.getPluginName () ) + "_COMMENT_" ) ) , ( " " + comment ) ) ; ( comments ) ++; } this.config.set ( path, value ) ; } 
protected void robaRandomSleep ( int minSleepSecond, int maxSleepSecond ) { java.util.Random r = new java.util.Random () ; int sleepTime = 1000 * ( minSleepSecond + ( r.nextInt ( ( maxSleepSecond - minSleepSecond ) ) ) ) ; solo.sleep ( sleepTime ) ; android.util.Log.d ( com.crazyroba.RobaActivityInstrumentationTestCase2.TAG, ( ( "Roba random sleep " + sleepTime ) + " s" ) ) ; } 
private org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder createIpProtocolMatch ( org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder matchBuilder, short ipProtocol ) { org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder ipMmatch = new org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder () ; if ( ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) == ipProtocol ) { ipMmatch.setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ) { ipMmatch.setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ) { ipMmatch.setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ; } matchBuilder.setIpMatch ( ipMmatch.build () ) ; return matchBuilder; } 
public static void main ( java.lang.String[] args ) { boolean a = false; boolean b = false; boolean c = false; boolean p = ( ( ( !a ) || ( !b ) ) || c ) && ( ( ( a || b ) || c ) && ( ( ( !a ) || b ) || c ) ) ; java.lang.System.out.println ( p ) ; } 
@ java.lang.Override public void onActivityCreated ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super.onActivityCreated ( savedInstanceState ) ; activity = ( ( codemagnus.com.dealokav2.BaseTabActivity ) ( getActivity () ) ) ; if ( null != ( activity.getSwitchCompat () ) ) activity.getSwitchCompat () .setVisibility ( View.VISIBLE ) ; getUserLastKnownLocation () ; initPhoneDetails () ; getUserLastKnownLocation () ; activity.getToolBar () .setTitle ( "Tower List" ) ; if ( ( activity.getTowerAdapter () ) != null ) { setListAdapter ( activity.getTowerAdapter () ) ; } } 
void add ( double confidence, boolean correct ) { for ( int i = 0; ( org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS.length ) > i; i++ ) { if ( confidence >= ( org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS[i] ) ) { ( falsePositive[i] ) ++; truePositive[i] += ( correct ) ? 1.0 : 0.0; } } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged, @org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn", defaultValue = "false", required = false ) java.lang.String loggedIn ) { if ( ! ( loggedIn.equals ( "false" ) ) ) { userLogged = loggedIn; } java.lang.System.out.println ( ( loggedIn + "loggedIn: " ) ) ; java.lang.System.out.println ( ( "userLogged: " + userLogged ) ) ; if ( userLogged.equals ( "false" ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } else { return new org.springframework.web.servlet.ModelAndView ( "location", "userloggedin", userLogged ) ; } } 
public synchronized void fail ( java.lang.Throwable error ) { int errWidth = ( 0 == ( pixelWidth ) ) ? 50 : pixelWidth; int errHeight = ( ( pixelHeight ) == 0 ) ? 50 : pixelHeight; setBitmap ( createErrorBitmap ( errWidth, errHeight ) ) ; ( ( react.RPromise<playn.core.Image> ) ( state ) ) .fail ( error ) ; } 
public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( iListLength ) == ( yDirRightHip.MoCap.length ) ) { yDirRightHip.enterMoCapData ( commandList[16], proxy, initTime, false, counter ) ; } else { yDirRightHip.enterMoCapData ( commandList[16], proxy, initTime, true, ( ( yDirRightHip.MoCap.length ) - 1 ) ) ; } } 
public uk.ac.starlink.ttools.plot2.layer.BinBag.Bin next () { if ( nbin > ( ib ) ) { uk.ac.starlink.ttools.plot2.layer.BinBag.Bin bin = createBin ( ( ( index ) ++ ) , binValues[ib] ) ; if ( ( index ) >= ( binIndices[ib] ) ) { ( ib ) ++; } return bin; } else { throw new java.util.NoSuchElementException () ; } } 
public boolean deposit ( java.lang.String userId, int value ) { if ( 0 > value ) return false; RWLock.writeLock () .lock () ; try { int balance = getOrZero ( userId ) ; balances.put ( userId, ( balance + value ) ) ; writeLog ( "DEPOSIT", userId, "", value ) ; return true; } finally { RWLock.writeLock () .unlock () ; } } 
@ org.junit.Test public void testSize () { Array<java.lang.Integer> list = new Array () ; int[] elems = new int[] { -76, 45, 66, 3, 234, 54, 33 }; for ( int i = 0, sz = 1; ( elems.length ) > i; i++, sz++ ) { list.add ( elems[i] ) ; org.junit.Assert.assertEquals ( list.size () , sz ) ; } } 
private void findOneHourTimerDelay ( java.lang.String[] timeParts ) { int secNum = java.lang.Integer.parseInt ( timeParts[2] ) ; int minNum = java.lang.Integer.parseInt ( timeParts[1] ) ; int hourNum = java.lang.Integer.parseInt ( timeParts[0] ) ; oneHourTimerDelay = 1000 * ( ( ( 60 - secNum ) + ( 60 * ( 10 - minNum ) ) ) + ( ( 24 - hourNum ) * 3600 ) ) ; } 
private void dispatchAckSend ( org.json.JSONObject income ) throws org.json.JSONException { org.json.JSONObject data = income.getJSONObject ( "data" ) ; if ( null != ( chatListener ) ) { ru.mail.park.chat.models.Message message = new ru.mail.park.chat.models.Message ( income, getContext () ) ; chatListener.onAcknowledgeSendMessage ( message ) ; } } 
public main.Task1Project.pages.tab_pages.AbstractPage clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( null != button ) { java.lang.String buttonText = button.getText () .trim () ; if ( buttonText.equals ( optionsButtonName ) ) { LoggerWrapper.myLogger.log ( java.util.logging.Level.INFO, "clicking on Options button" ) ; button.click () ; return null; } } return null; } 
protected synchronized void update () { xC += ( java.lang.Math.cos ( getDirection () ) ) * ( getSpeed () ) ; x = ( xC ) - ( ( simulation.Car.WIDTH ) / 2 ) ; yC += ( getSpeed () ) * ( java.lang.Math.sin ( getDirection () ) ) ; y = ( y ) - ( ( simulation.Car.HEIGHT ) / 2 ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ! ( Editor.isScenerio () ) ) { if ( null != ( browseFile () ) ) { Editor.currentFile = browseFile () ; javax.swing.JOptionPane.showMessageDialog ( null, ( ( "Scenerio file '" + ( Editor.currentFile ) ) + "' is selected" ) ) ; } else { javax.swing.JOptionPane.showMessageDialog ( null, "No file selected" ) ; } } else { javax.swing.JOptionPane.showMessageDialog ( null, "Scenerio file already exists" ) ; } } 
public java.lang.String getNodeName ( final com.hazelcast.core.Member iMember ) { if ( null == iMember ) return "?"; if ( nodeUuid.equals ( iMember.getUuid () ) ) return nodeName; final java.lang.String name = activeNodesNamesByMemberId.get ( iMember.getUuid () ) ; if ( name != null ) return name; final com.orientechnologies.orient.core.record.impl.ODocument cfg = getNodeConfigurationByUuid ( iMember.getUuid () ) ; if ( cfg != null ) return cfg.field ( "name" ) ; return "ext:" + ( iMember.getUuid () ) ; } 
private void updateCurrentMemoryMode () { org.exbin.framework.deltahex.HexStatusApi.MemoryMode memoryMode = HexStatusApi.MemoryMode.RAM_MEMORY; if ( ( org.exbin.deltahex.EditationAllowed.READ_ONLY ) == ( codeArea.getEditationAllowed () ) ) { memoryMode = HexStatusApi.MemoryMode.READ_ONLY; } else if ( ( codeArea.getData () ) instanceof org.exbin.deltahex.delta.DeltaDocument ) { memoryMode = HexStatusApi.MemoryMode.DELTA_MODE; } hexStatus.setMemoryMode ( memoryMode ) ; } 
public static void shutLED ( int number ) { de.adorsys.quiz.helper.GpioHelper.pin17.low () ; if ( 1 < number ) { de.adorsys.quiz.helper.GpioHelper.pin18.low () ; } if ( number > 2 ) { de.adorsys.quiz.helper.GpioHelper.pin27.low () ; } new java.lang.Thread ( new java.lang.Runnable () { @java.lang.Override public void run () { try { java.lang.Thread.sleep ( 2000 ) ; } catch ( java.lang.InterruptedException ex ) { } finally { de.adorsys.quiz.helper.GpioHelper.restart () ; } } } ) .run () ; } 
@ java.lang.Override public org.nd4j.linalg.api.ndarray.INDArray scalar ( float value ) { if ( ( DataBuffer.Type.FLOAT ) == ( dtype ) ) return create ( new float[] { value }, new int[] { 1 }, new int[] { 1 }, 0 ) ; else if ( ( dtype ) == ( DataBuffer.Type.DOUBLE ) ) return scalar ( ( ( double ) ( value ) ) ) ; else return scalar ( ( ( int ) ( value ) ) ) ; } 
public static boolean isCollection ( final org.eclipse.ocl.pivot.PropertyCallExp e ) { org.eclipse.ocl.pivot.Type _type = e.getType () ; final java.lang.String s = fr.emn.atlanmod.uml.casestudy.rewrite.OCL.gen ( _type ) ; if ( ( com.google.common.base.Objects.equal ( s, "Sequence" ) ) || ( ( com.google.common.base.Objects.equal ( s, "Set" ) ) || ( com.google.common.base.Objects.equal ( s, "OrderedSet" ) ) ) ) { return true; } else { return false; } } 
private java.lang.String getChanged () { java.lang.String str; if ( 0 < ( blocksChanged ) ) { mmdanggg2.cste.util.CSTELogger.logDebug ( ( ( blocksChanged ) + " blocks were changed." ) ) ; str = net.minecraft.client.resources.I18n.format ( "commands.cste.fill.success", blocksChanged ) ; } else { mmdanggg2.cste.util.CSTELogger.logDebug ( "No blocks changed" ) ; str = net.minecraft.client.resources.I18n.format ( "commands.cste.fill.nochange" ) ; } clearAll () ; return str; } 
@ org.junit.Test public void shouldSucceedIfWrittenOutOfOrderWithPosition () throws java.io.IOException { int[] blockorder = getRandomPermutationOfBlockOrder () ; for ( int i = 0; ( blockcount ) > i; i++ ) { chksumChannel.write ( buffers[blockorder[i]], ( ( blockorder[i] ) * ( blocksize ) ) ) ; } assertThat ( chksumChannel.getChecksum () , org.hamcrest.Matchers.equalTo ( expectedChecksum ) ) ; } 
public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null; if ( column != null ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) .getValue () ) ; } else if ( ( column.getValue () ) != null ) { value = column.toString () ; } } return value; } 
public void markUsed ( java.lang.String tupleId ) { while ( 0 < ( reservedQueue.size () ) ) { com.dipaan.bgcolor.Tuple tuple = reservedQueue.peek () ; if ( tuple.getId () .equals ( tupleId ) ) { reservedQueue.remove ( tuple ) ; } else if ( tuple.isExpired () ) { reservedQueue.remove ( tuple ) ; availableQueue.offer ( tuple ) ; } } } 
public boolean addEvent ( octu.core.Event evt ) { for ( int i = 0; ( events.size () ) > i; i++ ) { if ( events.get ( i ) .getName () .equals ( evt.getName () ) ) { return false; } } events.add ( evt ) ; arrangeActionsFromEvents ( events, loop ) ; return true; } 
private void initBugly () { com.tencent.bugly.beta.Beta.initDelay = 1000 * 5; com.tencent.bugly.beta.Beta.enableHotfix = true; Beta.canShowUpgradeActs.add ( com.thirtydegreesray.openhub.ui.activity.LoginActivity.class ) ; Beta.canShowUpgradeActs.add ( com.thirtydegreesray.openhub.ui.activity.MainActivity.class ) ; Beta.canShowUpgradeActs.add ( com.thirtydegreesray.openhub.ui.activity.AboutActivity.class ) ; com.tencent.bugly.beta.Beta.upgradeListener = com.thirtydegreesray.openhub.ui.widget.UpgradeDialog.INSTANCE; com.tencent.bugly.crashreport.CrashReport.UserStrategy strategy = new com.tencent.bugly.crashreport.CrashReport.UserStrategy ( getApplicationContext () ) ; strategy.setAppVersion ( BuildConfig.VERSION_NAME ) ; strategy.setAppReportDelay ( ( 10 * 1000 ) ) ; com.tencent.bugly.Bugly.init ( getApplicationContext () , AppConfig.BUGLY_APPID, BuildConfig.DEBUG ) ; com.tencent.bugly.crashreport.CrashReport.setIsDevelopmentDevice ( getApplicationContext () , BuildConfig.DEBUG ) ; } 
@ java.lang.Override public void unpackFromFrontOfList ( java.util.List<org.msgpack.type.Value> l ) { int check_ntype = l.remove ( 0 ) .asIntegerValue () .getInt () ; if ( ( ntype ) != check_ntype ) { android.util.Log.e ( com.mooshim.mooshimeter.common.ConfigTree.TAG, "WRONG NODE TYPE" ) ; } java.util.List<org.msgpack.type.Value> new_path = l.remove ( 0 ) .asArrayValue () ; path = new java.util.ArrayList<java.lang.Integer> () ; for ( org.msgpack.type.Value v : new_path ) { path.add ( v.asIntegerValue () .getInt () ) ; } } 
public java.util.List<org.eyeseetea.malariacare.data.database.model.Question> getQuestions () { if ( null == ( this.questions ) ) { this.questions = new com.raizlabs.android.dbflow.sql.language.Select () .from ( org.eyeseetea.malariacare.data.database.model.Question.class ) .where ( Question_Table.id_header.eq ( this.getId_header () ) ) .orderBy ( com.raizlabs.android.dbflow.sql.language.OrderBy.fromProperty ( Question_Table.order_pos ) ) .queryList () ; } return questions; } 
public static java.lang.CharSequence _text ( java.lang.CharSequence icon, java.lang.CharSequence text ) { final java.lang.StringBuilder s = new java.lang.StringBuilder () ; if ( ( ( icon.length () ) > 0 ) && ( icon != null ) ) { s.append ( icon ) .append ( " " ) ; } return s.append ( text.toString () .replaceAll ( "і", "i" ) ) ; } 
public void onWin () { int currPlayerId = currPlayer.getCurrPlayerID () ; int potVal = currPlayer.getPot () ; int amtBetInGame = currPlayer.getCurrBetInGame () ; if ( potVal <= ( amtBetInGame * 2 ) ) currPlayer.winMoney ( potVal ) ; else currPlayer.winMoney ( ( amtBetInGame * 2 ) ) ; message.setText ( "You Win!" ) ; try { java.lang.Thread.sleep ( 5000 ) ; } catch ( java.lang.InterruptedException e ) { e.printStackTrace () ; } currPlayer.resetRound () ; } 
@ java.lang.Deprecated public final void dispose () { java.lang.System.out.println ( ( ( getId () ) + "Disposing of BaseConsole with id of " ) ) ; java.util.ArrayList<com.n9mtq4.logwindow.listener.ListenerContainer> listenerContainers1 = getListenerContainers () ; for ( com.n9mtq4.logwindow.listener.ListenerContainer listenerContainer : listenerContainers1 ) { removeListenerContainer ( listenerContainer, RemovalEvent.CONSOLE_DISPOSE ) ; } java.util.ArrayList<com.n9mtq4.logwindow.ui.UIContainer> uiContainers1 = getUIContainers () ; for ( com.n9mtq4.logwindow.ui.UIContainer uiContainer : uiContainers1 ) { removeUiContainer ( uiContainer ) ; } try { java.lang.Runtime.getRuntime () .removeShutdownHook ( shutdownHook ) ; } catch ( java.lang.IllegalStateException ignored ) { } this.disposed = true; } 
static java.util.Collection<java.lang.String> findIssueKeys ( java.lang.String input ) { java.util.Collection<java.lang.String> ids = com.google.common.collect.Lists.newArrayList () ; java.util.regex.Matcher m = io.jenkins.blueocean.blueocean_github_pipeline.GithubIssue.PATTERN.matcher ( input ) ; while ( m.find () ) { if ( 1 <= ( m.groupCount () ) ) { java.lang.String issue = m.group ( 1 ) ; ids.add ( issue.substring ( 1, issue.length () ) ) ; } } return ids; } 
private void pollGraphFromStack ( boolean updateDb ) { final java.util.Deque<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph> stack = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack.get () ; stack.poll () ; final com.tinkerpop.blueprints.impls.orient.OrientBaseGraph prevGraph = stack.peek () ; if ( null != prevGraph ) { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph.set ( prevGraph ) ; prevGraph.makeActive () ; } else { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph.set ( null ) ; if ( updateDb ) ODatabaseRecordThreadLocal.INSTANCE.set ( null ) ; } } 
public static void main ( java.lang.String[] args ) { int secretNumber = ( ( int ) ( ( ( java.lang.Math.random () ) * 10 ) + 1 ) ) ; int attemps = 3; java.lang.System.out.println ( "Hi! I chose a number from 0 to 10 for you! Try to guess" ) ; java.lang.System.out.println ( "You have" ) ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; java.lang.String inpu; } 
@ java.lang.Override public void run () { if ( null == ( md ) ) return; android.graphics.Bitmap bitmap = loadArtwork ( artworkUrl, artworkLocal ) ; md.putBitmap ( MediaMetadataCompat.METADATA_KEY_ART, bitmap ) ; nb.setLargeIcon ( bitmap ) ; session.setMetadata ( md.build () ) ; notification.show ( nb, isPlaying ) ; artworkThread = null; } 
public void remove ( double v ) { if ( null != ( root ) ) { if ( ( root.getValue () ) == v ) { BTree.Node tempRoot = new BTree.Node ( 0 ) ; tempRoot.setLeft ( root ) ; root.removeNode ( v, tempRoot ) ; root = tempRoot.getLeft () ; } else { root.removeNode ( v, null ) ; } size -= 1; } } 
public static int calculateMax ( java.lang.String[] args ) { int toReturn = -1; if ( 0 < ( args.length ) ) { toReturn = ( ( int ) ( java.lang.Integer.parseInt ( args[0] ) ) ) ; if ( toReturn < 1 ) { throw new java.lang.IllegalArgumentException () ; } else { } } else { new java.lang.IllegalArgumentException () ; } return toReturn; } 
public java.lang.Object getValueOfProperty ( java.lang.String propertyName, java.lang.Object object ) { java.lang.String name = ( this.caseSensitive ) ? propertyName : propertyName.toLowerCase () ; java.lang.reflect.Field field = this.fields.get ( propertyName ) ; try { return field.get ( object ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.sql2o.Sql2oException ( ( ( object.getClass () .toString () ) + ( ( "could not read value of field " + ( field.getName () ) ) + " on class " ) ) , e ) ; } } 
private void LeaveGameMouseClicked ( java.awt.event.MouseEvent evt ) { comm.msgSender ( ( ( ( char ) ( ( Pexeso_client.CurrentGame.getID () ) + '0' ) ) + "E" ) ) ; Pexeso_client.CurrentGame = null; comm.setExit ( true ) ; comm.game_thread.interrupt () ; LobbyStatus.setText ( "You left your current game" ) ; LobbyStatus.setVisible ( true ) ; panel2.setVisible ( true ) ; panel3.setVisible ( false ) ; } 
public int modifyField ( java.lang.String field, java.lang.String value, java.lang.Long id ) { if ( ( value != null ) && ( field != null ) ) { try { it.ispw.efco.nottitranquille.controller.ManageLocation.modifyField ( field, value, id ) ; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } return 1; } return 0; } 
protected java.lang.Object visitContainer ( net.objectof.actof.porter.visitor.IPorterContext context, net.objectof.model.Id<?> parentId ) { net.objectof.model.Resource<net.objectof.aggr.Aggregate<java.lang.Object, java.lang.Object>> toParent = getToParent ( parentId ) ; net.objectof.actof.porter.visitor.IPorterContext ported = transform ( context ) ; if ( ported.isDropped () ) { return null; } if ( null == toParent ) { return null; } toParent.value () .set ( net.objectof.actof.porter.IPorterUtil.unqualify ( ported.getKey () , toParent ) , ported.getValue () ) ; return context.getValue () ; } 
private org.openbaton.nfvo.core.api.VNFCInstance getVNFCI ( org.openbaton.nfvo.core.api.VirtualDeploymentUnit virtualDeploymentUnit, java.lang.String idVNFCI ) throws org.openbaton.nfvo.core.api.NotFoundException { for ( org.openbaton.nfvo.core.api.VNFCInstance vnfcInstance : virtualDeploymentUnit.getVnfc_instance () ) if ( idVNFCI.equals ( vnfcInstance.getId () ) ) return vnfcInstance; throw new org.openbaton.nfvo.core.api.NotFoundException ( ( " was not found" + ( "VNFCInstance with id " + idVNFCI ) ) ) ; } 
private cluedo.Hud.STATUS rollAndMove ( cluedo.Player player, cluedo.Hud.STATUS status, java.util.Scanner sc ) { java.lang.System.out.println ( "/n" ) ; status = cluedo.Hud.STATUS.MOVE_PIECE; displayBoard ( player, status ) ; movesRemaining = rollDice () ; java.lang.System.out.println ( ( ( movesRemaining ) + "\nYou rolled a " ) ) ; while ( ( movesRemaining ) != 0 ) { movePiece ( player, status, sc ) ; ( movesRemaining ) --; break; } return status; } 
public static int getColumnsNumberFromDimension ( java.lang.String dimension ) { if ( org.apache.commons.lang.StringUtils.isEmpty ( dimension ) ) { return 0; } java.lang.String[] parts = org.apache.commons.lang.StringUtils.split ( dimension, ':' ) ; if ( 2 > ( parts.length ) ) { return 0; } java.lang.String secondPart = parts[1]; return org.talend.dataprep.schema.xls.XlsUtils.getColumnsNumberLastCell ( secondPart ) ; } 
@ java.lang.Override public void onBindViewHolder ( final com.cv4j.app.adapter.GridViewFilterAdapter.ViewHolder holder, int position ) { java.lang.String filterName = mList.get ( position ) ; if ( 0 == position ) { holder.image.setImageBitmap ( mBitmap ) ; } else { if ( com.safframwork.tony.common.utils.Preconditions.isNotBlank ( filterName ) ) { com.cv4j.core.filters.CommonFilter filter = ( ( com.cv4j.core.filters.CommonFilter ) ( getFilter ( filterName ) ) ) ; com.cv4j.rxjava.RxImageData.bitmap ( mBitmap ) .placeHolder ( R.drawable.test_mm ) .addFilter ( filter ) .into ( holder.image ) ; } } holder.text.setText ( filterName ) ; } 
public void purchaseMultiple ( int index, int quantity, ver0.PlayerActor character ) { ver0.Item[] itemSet = ver0.Item.getAllItems () ; if ( character.canBuyItems ( index, quantity ) ) { if ( character.buyItems ( index, quantity ) ) { java.lang.System.out.println ( ( ( itemSet[index] ) + ( ( "Purchase successful! You have bought" + quantity ) + " " ) ) ) ; this.m_inventory[index] -= quantity; } this.m_inventory[index] -= quantity; } else { java.lang.System.out.println ( "Sorry, you don't have enough money!" ) ; } } 
@ java.lang.Override public int evaluate () { if ( ( ( last ) != null ) && ( ( first ) != null ) ) { return ( first.evaluate () ) + ( last.evaluate () ) ; } else { throw new java.lang.IllegalStateException ( "NO!" ) ; } } 
@ javafx.fxml.FXML private void homeScreen ( javafx.event.ActionEvent event ) { javafx.scene.control.Alert confirm = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.CONFIRMATION, "Are you sure you want to disconnect ? You won't be able to rejoin the game.", javafx.scene.control.ButtonType.YES, javafx.scene.control.ButtonType.NO ) ; confirm.setHeaderText ( "Disconnect" ) ; java.util.Optional<javafx.scene.control.ButtonType> result = confirm.showAndWait () ; if ( ( result.get () .equals ( javafx.scene.control.ButtonType.YES ) ) && ( result.isPresent () ) ) { if ( client.isHostClient () ) { tdb.TheDrawingBoard.disconnectMultiplayerServer () ; client.disconnect () ; } else { client.disconnect () ; } } } 
public static tw.kewang.cwb.pretty.FutureWeatherByTown getFutureWeatherByTown ( tw.kewang.cwb.Geocode geocode, float afterHours ) { java.util.Date date = new java.util.Date ( ( ( ( long ) ( ( tw.kewang.cwb.utils.Constants.ONE_HOUR ) * afterHours ) ) + ( java.lang.System.currentTimeMillis () ) ) ) ; tw.kewang.cwb.Cwb.LOG.debug ( "getFutureWeatherByTown: {}, {}", geocode.toString () , date.toString () ) ; return tw.kewang.cwb.Cwb.getFutureWeatherByTown ( geocode, date ) ; } 
@ java.lang.Override public boolean add ( final T t ) { if ( 0 == ( size ) ) { first = new LinkedList.Item<> ( t, null, null ) ; } else if ( ( size ) == 1 ) { last = new LinkedList.Item<> ( t, first, null ) ; first.next = last; } else { LinkedList.Item<T> lastInList = last; last.next = new LinkedList.Item<> ( t, lastInList, null ) ; } ( size ) ++; return true; } 
protected final java.net.Socket getRootSocket ( java.lang.Object target ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) ._$PINPOINT$_getTNonblockingTransport () ; if ( null != inTrans ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) ._$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger.debug ( "Invalid target object. Need field accessor ( {} ) .", com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor.class.getName () ) ; } } } return null; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.util.ArrayList<java.lang.String> oldReviews = new java.util.ArrayList<> () ; for ( com.google.firebase.database.DataSnapshot child : dataSnapshot.getChildren () ) { java.lang.String oldSearchTerm = child.getValue () .toString () ; oldReviews.add ( oldSearchTerm ) ; } java.lang.String reviewID = ( oldReviews.size () ) + ( profile ) ; getReference ( reviewID ) ; } 
private boolean maskHasPortGroup ( com.emc.storageos.db.client.model.ExportMask mask, java.net.URI portGroup ) { boolean result = false; if ( ( ( portGroup != null ) && ( portGroup.equals ( mask.getPortGroup () ) ) ) || ( ( portGroup == null ) && ( com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI ( mask.getPortGroup () ) ) ) ) { result = true; } return result; } 
@ java.lang.Override public boolean equals ( final java.lang.Object o ) { if ( ( this ) == o ) return true; if ( ! ( super.equals ( o ) ) ) return false; final com.helger.photon.core.ajax.response.AjaxHtmlResponse rhs = ( ( com.helger.photon.core.ajax.response.AjaxHtmlResponse ) ( o ) ) ; return ( com.helger.commons.equals.EqualsHelper.equals ( m_sErrorMessage, rhs.m_sErrorMessage ) ) && ( com.helger.commons.equals.EqualsHelper.equals ( m_aSuccessValue, rhs.m_aSuccessValue ) ) ; } 
private void parseArrayMetadata ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { com.fasterxml.jackson.core.JsonToken value = jp.nextToken () ; while ( ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) != value ) { if ( value == ( com.fasterxml.jackson.core.JsonToken.START_OBJECT ) ) { parseObjectMetadata ( jp, true ) ; } else if ( value == ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) { parseArrayMetadata ( jp ) ; } else if ( value != ( com.fasterxml.jackson.core.JsonToken.VALUE_NULL ) ) { parseObjectMetadata ( jp, false ) ; } value = jp.nextToken () ; } } 
@ java.lang.Override public void setEnabled ( boolean enabled ) { super.setEnabled ( enabled ) ; if ( ( ( mSuccessAnimationState.key ) >= ( com.miruker.fabprogress.Fab.SUCCESS_ANIMATION.ON.key ) ) || ( isProgress ) ) { setAlpha ( 1.0F ) ; } else { setAlpha ( ( enabled ? 1.0F : com.miruker.fabprogress.Fab.FAB_DISABLED_ALPHA ) ) ; } } 
@ java.lang.Override public int getPoints () { int points = 1; for ( java.util.Iterator<entities.Square> i = getSquaresInvolved () .iterator () ; i.hasNext () ; ) { entities.Block b = i.next () .getBlock () ; if ( null != b ) points *= i.next () .getBlock () .getMultiplier () ; } return points; } 
private java.lang.String buildContainerId () { java.lang.String id = null; java.lang.String selectElementId = selectElement.getId () ; if ( ( ( selectElementId.length () ) > 0 ) && ( selectElementId != null ) ) { id = com.arcbees.chosen.client.ChosenImpl.containerIdRegExp.replace ( selectElementId, "_" ) ; } else { id = generateContainerId () ; selectElement.setId ( id ) ; } id += "_chzn"; return id; } 
@ java.lang.Override public void onDismiss ( com.example.reativos.oscar.AddParam myDialogFragment ) { java.lang.String command_type = dataStore.getString ( "type" ) ; int command_param = dataStore.getInt ( "param" ) ; if ( null != command_type ) { com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command ( command_type, command_param ) ; commandLists.get ( currentTabTag ) .add ( newCommand ) ; adapters.get ( currentTabTag ) .notifyDataSetChanged () ; } } 
public void startRecord ( android.view.View v ) { if ( ! ( mBound ) ) return; android.os.Bundle b = new android.os.Bundle () ; java.lang.String filePath = ".3gp" + ( ( ( m_chosenDir ) + ( java.io.File.separator ) ) + ( hookString ) ) ; b.putString ( "str1", filePath ) ; android.os.Message msg = android.os.Message.obtain ( null, 1 ) ; msg.setData ( b ) ; try { mService.send ( msg ) ; } catch ( android.os.RemoteException e ) { e.printStackTrace () ; } } 
@ java.lang.Override public java.lang.Boolean getunicodePUA () { for ( int i = 0; ( toUnicode.length () ) > i; ++i ) { char unicode = this.toUnicode.charAt ( 0 ) ; if ( ( unicode >= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_BEGINNING ) ) && ( unicode <= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_ENDING ) ) ) { return true; } } return false; } 
private void handlePortState () { switch ( portState ) { case CLOSED: if ( open () ) { portState = org.openhab.binding.dsmr.internal.DSMRPort.PortState.AUTO_DETECT; autoDetectTS = java.lang.System.currentTimeMillis () ; } break; case AUTO_DETECT: if ( ( autoDetectTimeoutMSec ) < ( ( java.lang.System.currentTimeMillis () ) - ( autoDetectTS ) ) ) { switchPortSpeed () ; close () ; } break; case OPENED: break; } } 
public void remove ( java.lang.String key ) { com.cdoframework.cdolib.data.cdo.Field objExt = hmItem.remove ( key ) ; if ( ( ! ( key.contains ( "." ) ) ) && ( ( objExt.getType () .getDataType () ) == ( com.cdoframework.cdolib.base.DataType.FILE_TYPE ) ) ) { ( fileCount ) --; } } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { db.execSQL ( ( " VARCHAR ( 255 ) PRIMARY KEY UNIQUE ) " + ( ( ( ( ( "CREATE TABLE " + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableName ) ) + " ( " ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColValue ) ) + " VARCHAR ( 255 ) , " ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColType ) ) ) ) ; db.execSQL ( ( "CREATE TABLE `blacklist` ( " + ( ( ( ( ( ( ( ( ( " `id` INTEGER PRIMARY KEY AUTOINCREMENT," + " `scientificName` varchar ( 255 ) NOT NULL," ) + " `navn` varchar ( 255 ) NOT NULL," ) + " `svalbard` tinyint ( 1 ) NOT NULL DEFAULT '0'," ) + " `risiko` varchar ( 255 ) NOT NULL," ) + " `taxonID` int ( 11 ) NOT NULL," ) + " `canEat` tinyint ( 1 ) NOT NULL DEFAULT '0'," ) + " `family` varchar ( 255 ) NOT NULL," ) + " `image` int ( 11 ) NOT NULL" ) + " ) " ) ) ) ; } 
public static java.lang.reflect.Field getFiledNameByMethod ( java.lang.Class clazz, java.lang.reflect.Method method ) { java.lang.reflect.Field[] fields = clazz.getDeclaredFields () ; java.lang.reflect.Field field = null; for ( java.lang.reflect.Field f : fields ) if ( null == ( f.getAnnotation ( indi.yume.tools.autosharedpref.Ignore.class ) ) ) if ( indi.yume.tools.autosharedpref.util.ReflectUtil.toSetter ( f.getName () ) .equals ( method.getName () ) ) field = f; return field; } 
public static void main ( java.lang.String[] arguments ) throws java.io.IOException { Avans.Util.LinkedList<Avans.Tokenizer.Token> tokenList = new Avans.Util.LinkedList<Avans.Tokenizer.Token> () ; Avans.Util.LinkedList<Avans.Compiler.Node.RunNode> runList = new Avans.Util.LinkedList<Avans.Compiler.Node.RunNode> () ; try { Avans.DesignPatterns2.Main.createTokenList ( tokenList, "..\\JarkHunt\\src\\script2.txt" ) ; } catch ( java.lang.Exception e ) { java.lang.System.out.println ( e.getMessage () ) ; } if ( null != ( tokenList.getFirst () ) ) { Avans.DesignPatterns2.Main.testTokenList ( tokenList ) ; } } 
private void startMain () { if ( ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.VIBRATE ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.JELLY_BEAN ) ) && ( ( android.support.v4.app.ActivityCompat.checkSelfPermission ( this, Manifest.permission.CAMERA ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) ) { requestPermission ( new java.lang.String[] { Manifest.permission.CAMERA, Manifest.permission.VIBRATE }, com.fosung.barcodescanner.InitActivity.REQUEST_STORAGE_READ_ACCESS_PERMISSION ) ; } else { android.content.Intent intent = new android.content.Intent ( this, com.fosung.barcodescanner.QrCodeScanActivity.class ) ; startActivity ( intent ) ; this.finish () ; } } 
public int myAtoi ( java.lang.String str ) { if ( str == null ) { str = ""; } long ret = atoi ( str ) ; if ( ret > ( java.lang.Integer.MAX_VALUE ) ) { ret = java.lang.Integer.MAX_VALUE; } else if ( ret < ( java.lang.Integer.MIN_VALUE ) ) { ret = java.lang.Integer.MIN_VALUE; } else { ret = ( ( int ) ( ret ) ) ; } return ( ( int ) ( ret ) ) ; } 
private void closeOnError () { try { socket.close () ; } catch ( final java.io.IOException e ) { e.printStackTrace () ; mainController.showMessageOnMainView ( ( ( e.toString () ) + ( ( "Errore nella chiusura della socket" + ( socket ) ) + ( e.getMessage () ) ) ) ) ; } sockets.remove ( socket ) ; } 
void connect () throws java.lang.InterruptedException { final io.netty.channel.ChannelFuture future; synchronized ( lock ) { connectFuture = bootstrap.connect ( host, port ) ; future = connectFuture; } future.sync () ; synchronized ( lock ) { while ( ( ( future.channel () .isOpen () ) || ( future.channel () .isActive () ) ) && ( ( root ) == null ) ) { lock.wait () ; } } } 
public void enqueue ( Item item ) { if ( ( arr.length ) == ( size ) ) { resize ( ( 2 * ( size ) ) ) ; } arr[ ( ( last ) ++ ) ] = item; ( size ) ++; if ( ( last ) == ( arr.length ) ) last = 0; } 
public int makeTurn () { int winAns = 9; if ( ( ( BotParser.mRound ) == 2 ) || ( ( BotParser.mRound ) == 1 ) ) return 3; else if ( ( BotParser.mRound ) > 5 ) winAns = BotParser.mField.checkWin ( BotParser.mBotId ) ; if ( winAns != 9 ) return winAns; winAns = BotParser.mField.checkWin ( BotParser.mBotIdE ) ; if ( winAns != 9 ) return winAns; else { int move = new java.util.Random () .nextInt ( 7 ) ; return move; } } 
public void init5 () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1; ( ( ( Global.WIDTH ) / 2 ) + 2 ) > x; x++ ) { body.add ( new java.awt.Point ( x, ( -3 ) ) ) ; body.add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( -2 ) ) ) ; } } 
@ java.lang.Override public akayerov.getsnils.IpraFile getNextDir () { while ( ( fList.length ) > ( idx ) ) { java.lang.String sogrn = null; if ( ! ( fList[idx].isFile () ) ) sogrn = fList[idx].getName () ; java.lang.String namefile = sogrn; return new akayerov.getsnils.IpraFile ( fList[ ( ( idx ) ++ ) ].getAbsolutePath () , sogrn, namefile ) ; } return null; } 
@ java.lang.SuppressWarnings ( value = "restriction" ) public static boolean isEclipseDebug () { boolean debuggerEnabled = false; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil.getBundle ( org.talend.commons.runtime.debug.TalendDebugHandler.class ) .getBundleContext () ; org.osgi.framework.ServiceReference<org.eclipse.osgi.service.debug.DebugOptions> debugOptSR = bundleContext.getServiceReference ( org.eclipse.osgi.service.debug.DebugOptions.class ) ; if ( null != debugOptSR ) { org.eclipse.osgi.service.debug.DebugOptions debugOpt = bundleContext.getService ( debugOptSR ) ; debuggerEnabled = debugOpt.isDebugEnabled () ; } return debuggerEnabled; } 
public java.lang.String getMdScript () { if ( "".equals ( this.mdScript ) ) { return null; } java.lang.String function = " ) {\n" + ( ( ( "function " + ( this.name ) ) + " ( " ) + ( this.params ) ) ; function = function + ( this.mdScript ) ; function = function + "\n}"; return function; } 
@ java.lang.Override public final org.jivesoftware.smack.util.XmlStringBuilder toXML () { org.jivesoftware.smack.util.XmlStringBuilder xml = new org.jivesoftware.smack.util.XmlStringBuilder ( this ) ; addExtraAttributes ( xml ) ; if ( ( infos.isEmpty () ) && ( candidates.isEmpty () ) ) { xml.closeEmptyElement () ; } else { xml.rightAngleBracket () ; xml.append ( candidates ) ; xml.optElement ( info ) ; xml.closeElement ( this ) ; } return xml; } 
public org.exoplatform.task.dao.TaskQuery clone () { org.exoplatform.task.dao.condition.Condition condition = getCondition () ; return new org.exoplatform.task.dao.TaskQuery ( ( null != condition ? ( ( org.exoplatform.task.dao.condition.AggregateCondition ) ( condition ) ) : null ) , getOrderBy () , ( ( projectIds ) != null ? new java.util.ArrayList<java.lang.Long> ( projectIds ) : null ) , assignee ) ; } 
private void OnChatSendTextMessageResult ( int eGroupType, long nGroupID, long nFromUserID, long nToUserID, java.lang.String sSeqID, int nResult ) { if ( 0 < ( callbacks.size () ) ) { for ( java.lang.ref.WeakReference<com.V2.jni.callback.ChatRequestCallback> wf : callbacks ) { if ( ( wf.get () ) == null ) { continue; } wf.get () .OnSendTextResultCallback ( eGroupType, nGroupID, nFromUserID, nToUserID, sSeqID, nResult ) ; } } } 
private org.esbtools.message.admin.model.MetadataField searchField ( org.esbtools.message.admin.model.MetadataField tree, org.esbtools.message.admin.model.MetadataField field ) { org.esbtools.message.admin.model.MetadataField result = null; if ( ( field != null ) && ( tree != null ) ) { if ( ( tree.getId () ) == ( field.getId () ) ) { return tree; } else { for ( org.esbtools.message.admin.model.MetadataField child : tree.getChildren () ) { org.esbtools.message.admin.model.MetadataField dfsResult = searchField ( child, field ) ; if ( dfsResult != null ) { return dfsResult; } } } } return result; } 
public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement, java.lang.String parameter ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement.getChildren ( parameter ) ) { if ( null != ( configurationElementChild.getAttribute ( parameter ) ) ) { return configurationElementChild.getAttribute ( parameter ) ; } } return null; } 
@ java.lang.Override public boolean verify ( org.spongepowered.api.entity.living.Living living ) { java.util.Optional<net.minecraft.item.ItemStack> optHeld = ( ( org.spongepowered.api.entity.ArmorEquipable ) ( living ) ) .getItemInHand () ; if ( ( ( optHeld.get () .getItem () ) == ( com.skelril.skree.content.registry.item.CustomItemTypes.TWO_TAILED_SWORD ) ) && ( optHeld.isPresent () ) ) { event.setBaseDamage ( 0 ) ; return true; } return false; } 
public java.lang.String toGhName () { java.lang.String groupDelimiter = ( isExclusive ) ? model.TurboLabel.EXCLUSIVE_DELIM : model.TurboLabel.NONEXCLUSIVE_DELIM; java.lang.String groupPrefix = ( null == ( getGroup () ) ) ? "" : ( getGroup () ) + groupDelimiter; java.lang.String groupAppended = groupPrefix + ( getName () ) ; return groupAppended; } 
@ java.lang.Deprecated private static int buildMaxIndexPages ( int allPageNo, java.lang.Integer maxIndexPages ) { if ( ( 0 <= maxIndexPages ) || ( com.feilong.core.util.Validator.isNullOrEmpty ( maxIndexPages ) ) ) { if ( allPageNo > 1000 ) { return 6; } else if ( allPageNo > 100 ) { return 8; } else { return 10; } } return maxIndexPages; } 
public java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn.getRdns () ) { if ( 0 < ( path.length () ) ) { path.append ( '/' ) ; } path.append ( org.apache.jackrabbit.util.Text.escapeIllegalJcrChars ( rnd.toString () ) ) ; } return path.toString () ; } 
@ java.lang.Override public void messageArrived ( java.lang.String topic, org.eclipse.paho.client.mqttv3.MqttMessage message ) { if ( ( mTopicCallbacks.isEmpty () ) || ( ( mTopicCallbacks ) == null ) ) return; final java.util.List<io.relayr.websocket.WebSocketCallback> callbacks = mTopicCallbacks.get ( topic ) ; for ( io.relayr.websocket.WebSocketCallback socketCallback : callbacks ) socketCallback.successCallback ( message ) ; } 
public static void fatal ( java.lang.String location, java.lang.String error, java.lang.Throwable cause ) { java.lang.System.err.println ( ( error + ( location + ": " ) ) ) ; cause.printStackTrace () ; if ( ( sutilities.Debugger.logger_ ) != null ) sutilities.Debugger.logger_.log ( "SEVERE", location, error, cause, true ) ; } 
private void connectRight ( int i, int j ) { if ( ( ( n ) - 1 ) > j ) { int right = getPosition ( i, ( j + 1 ) ) ; if ( isOpen ( right ) ) { grid.union ( right, getPosition ( i, j ) ) ; } } } 
@ java.lang.Override public void run () { if ( ( bHandshakeResponse ) == false ) { if ( ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_RESPONSE; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler.sendMessage ( msg1 ) ; } } else { if ( ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_NON_RESPONSE; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler.sendMessage ( msg1 ) ; } } ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.count ) ++; } 
public float get ( com.s13g.winston.lib.temperature.Temperature.Unit unit ) { if ( unit == ( mUnit ) ) { return mValue; } if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) ) { return ( ( mValue ) * 1.8F ) + 32; } else if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) ) { return ( ( mValue ) - 32 ) / 1.8F; } throw new java.lang.RuntimeException ( "Unsupported temperature conversion" ) ; } 
void enterInputValue ( final org.openqa.selenium.WebElement inputElement, final java.lang.String value ) throws java.lang.Exception { waitForElementVisible ( inputElement ) ; final java.lang.String inputID = inputElement.getAttribute ( "id" ) ; summonTooltip ( inputID ) ; showInputField ( inputID ) ; for ( int i = 0; ( value.length () ) > i; i++ ) { inputElement.sendKeys ( java.lang.Character.toString ( value.charAt ( i ) ) ) ; waitFor ( 150L ) ; } closeTooltip ( inputID ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) return true; if ( ! ( obj instanceof gov.gtas.model.Document ) ) return false; final gov.gtas.model.Document other = ( ( gov.gtas.model.Document ) ( obj ) ) ; return ( ( java.util.Objects.equals ( this.documentType, other.documentType ) ) && ( java.util.Objects.equals ( this.documentNumber, other.documentNumber ) ) ) && ( java.util.Objects.equals ( this.issuanceCountry, other.issuanceCountry ) ) ; } 
@ java.lang.Override public int compare ( android.location.Location t1, android.location.Location t2 ) { if ( ( t2.getTime () ) < ( t1.getTime () ) ) { return 1; } if ( ( t2.getTime () ) > ( t1.getTime () ) ) { return -1; } return 0; } 
@ java.lang.Override public org.jowidgets.api.model.item.IMenuModel editMenu ( final org.jowidgets.cap.ui.api.widgets.IBeanTable<BEAN_TYPE> table, final int columnIndex, final org.jowidgets.api.model.item.IMenuModel menuModel ) { if ( null == ( model.getUpdaterService () ) ) { return null; } else if ( hasDefaultEditAction ) { final org.jowidgets.cap.ui.api.table.IBeanTableMenuFactory<BEAN_TYPE> beanTableMenuFactory = org.jowidgets.cap.ui.api.CapUiToolkit.beanTableMenuFactory () ; final org.jowidgets.api.command.IAction editAction = beanTableMenuFactory.editAction ( model ) ; editMenuModel.addAction ( editAction ) ; menuModel.addAction ( 0, editAction ) ; return menuModel; } else { return menuModel; } } 
public int getPower ( double speed, int resistance ) { double power = 0.0; if ( 0 < speed ) { power = ( ( 3.05 + ( 4.577 * speed ) ) + ( ( 0.01798 * speed ) * speed ) ) + ( ( ( ( -2.038E-5 ) * speed ) * speed ) * speed ) ; } return ( ( int ) ( power ) ) ; } 
protected void setResultActivityError ( java.lang.String srvStr, java.lang.Exception e ) { resultActivityError = srvStr + ( ( e.getClass () .getName () ) + " : Cannot connect to " ) ; java.lang.String msg = e.getMessage () ; if ( msg != null ) resultActivityError.concat ( ( " : " + ( e.getMessage () ) ) ) ; } 
@ java.lang.Override public char getGrid ( int x, int y ) throws java.io.IOException { outToServer.writeBytes ( ( "\n" + ( ( ( "GRID " + x ) + " " ) + y ) ) ) ; java.lang.String response = inFromServer.readLine () ; return response.charAt ( 0 ) ; } 
private java.util.List<com.example.johannes.colorpicker.Task> addTaskToList () { com.example.johannes.colorpicker.Task task = new com.example.johannes.colorpicker.Task () ; java.util.List<com.example.johannes.colorpicker.Task> tasks = new java.util.ArrayList<> () ; for ( int i = 0; ( colors.size () ) > i; i++ ) { task.setOtsikko ( colors.get ( i ) .getHex () ) ; tasks.add ( task ) ; } return tasks; } 
public synchronized void advance ( long duration, java.util.concurrent.TimeUnit unit ) { if ( 0 >= duration ) throw new java.lang.IllegalArgumentException ( ( "Duration must be positive; was " + duration ) ) ; this.nanos += unit.toNanos ( duration ) ; for ( ; ; ) { co.paralleluniverse.vtime.ManualClock.Scheduled s = waiters.peek () ; if ( ( s == null ) || ( ( s.deadline ) < ( nanos ) ) ) break; waiters.poll () .wakeup () ; } } 
@ java.lang.Override protected com.example.petr.myapplication.FilterResults performFiltering ( java.lang.CharSequence charSequence ) { com.example.petr.myapplication.FilterResults filterResults = new com.example.petr.myapplication.FilterResults () ; java.util.List<java.lang.String> results = findSuggestions ( charSequence.toString () ) ; if ( 0 != ( charSequence.length () ) ) { filterResults.values = results; filterResults.count = results.size () ; } return filterResults; } 
@ java.lang.Override public void deleteStudy ( java.lang.String username, java.lang.String studyUID ) throws java.lang.Exception { edu.stanford.epad.epadws.models.Study study = getStudy ( studyUID ) ; if ( null == study ) return; edu.stanford.epad.epadws.models.ProjectToSubjectToStudy projSubjStudy = ( ( edu.stanford.epad.epadws.models.ProjectToSubjectToStudy ) ( new edu.stanford.epad.epadws.models.ProjectToSubjectToStudy () .getObject ( ( "study_id=" + ( study.getId () ) ) ) ) ) ; projSubjStudy.delete () ; new edu.stanford.epad.epadws.models.EpadFile () .deleteObjects ( ( "study_id=" + ( study.getId () ) ) ) ; study.delete () ; } 
public static void main ( final java.lang.String[] args ) throws java.lang.InterruptedException { final long runtime = ( 1 < ( args.length ) ) ? java.lang.Long.parseLong ( args[1] ) : com.awesome.BaseExamplePeriod.DEFAULT_RUN_TIME_MSEC; com.awesome.ex1_2.Ex1_2 ex = new com.awesome.ex1_2.Ex1_2 ( runtime ) ; ex.run () ; ex.printResults () ; } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; if ( ( ( data.getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) ) != "-1" ) && ( data != null ) ) { ean.setText ( data.getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment f = new com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment () ; SignInActivity.fNum = getActivity () .getSupportFragmentManager () .getBackStackEntryCount () ; android.support.v4.app.FragmentTransaction ft = getActivity () .getSupportFragmentManager () .beginTransaction () ; ft.replace ( R.id.container, f ) ; ft.addToBackStack ( ( ( SignInActivity.fNum ) + "" ) ) ; android.widget.Toast.makeText ( getContext () , java.lang.String.valueOf ( SignInActivity.fNum ) , Toast.LENGTH_SHORT ) .show () ; ft.commit () ; } 
public void refresh ( org.openhab.binding.antiferencematrix.internal.model.OutputPortDetails outputPortDetails ) { updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () .getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.PORT_STATUS_MESSAGE_CHANNEL ) , new org.eclipse.smarthome.core.library.types.StringType ( outputPortDetails.getStatusMessage () ) ) ; org.eclipse.smarthome.core.library.types.OnOffType power; if ( 1 == ( outputPortDetails.getSinkPowerStatus () ) ) { power = org.eclipse.smarthome.core.library.types.OnOffType.ON; } else { power = org.eclipse.smarthome.core.library.types.OnOffType.OFF; } updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () .getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.POWER_CHANNEL ) , power ) ; updateStatusIfRequired ( ThingStatus.ONLINE ) ; } 
public void queryPOIListUpdate () { if ( ( ( settingsManager.getPresetIdInRouterFragment () ) < 1 ) || ( ( ( currentLocation ) == null ) || ( ( currentCompassValue ) < 0 ) ) ) { return; } org.walkersguide.utils.POIPreset preset = settingsManager.getPOIPreset ( settingsManager.getPresetIdInRouterFragment () ) ; boolean isInsidePublicTransport = false; if ( ( numberOfHighSpeeds ) > 0 ) isInsidePublicTransport = true; poiManager.updatePOIList ( preset.getId () , preset.getRange () , currentLocation, currentCompassValue, "", isInsidePublicTransport ) ; } 
void killDepletedAgents () { for ( Agents.Agent agent : agents ) { if ( 0 >= ( agent.food ) ) { GameLogic.Position deathPlace = agent.position; agents.remove ( agent ) ; tiles[deathPlace.x][deathPlace.y].agents.remove ( agent ) ; } } } 
public void checkJoin ( java.lang.String id, java.lang.String password, java.lang.String checkPassword ) { if ( password.equals ( checkPassword ) ) { com.project.snake.database.SnakeDTO data = new com.project.snake.database.SnakeDTO ( "join", id, password, 0, 0, 0, 0 ) ; data = network.sendData ( data ) ; if ( null != data ) { view_ctr.joinView ( data.getStatus () ) ; return; } } view_ctr.joinView ( "joinno" ) ; } 
@ java.lang.Override public java.nio.file.FileVisitResult visitFile ( java.nio.file.Path file, java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.lang.String path_temp = file.toString () ; final java.lang.String path_name = omnikryptec.util.AdvancedFile.getName ( path_temp ) ; if ( ( recursiv || ( file.getParent () .equals ( myPathTest ) ) ) && ( ( advancedFileFilter == null ) || ( advancedFileFilter.accept ( ME, path_name ) ) ) ) { files.add ( new omnikryptec.util.AdvancedFile ( true, this, path_name ) ) ; } return java.nio.file.FileVisitResult.CONTINUE; } 
@ java.lang.Override public void onDataFetchComplete ( java.lang.Throwable throwable, java.lang.String parser ) { if ( parser.equals ( AppState.MOD_NEWS ) ) { if ( ( this.isVisible () ) && ( ! ( this.isDetached () ) ) ) { this.loadPages () ; } com.untappedkegg.rally.data.DbUpdated.open () ; com.untappedkegg.rally.data.DbUpdated.updated_insert ( AppState.MOD_NEWS ) ; com.untappedkegg.rally.data.DbUpdated.close () ; } } 
public double getMinY () { double minY = points.get ( 0 ) .y; for ( int i = 1; ( points.size () ) > i; i++ ) { double pY = points.get ( i ) .y; if ( pY < minY ) { if ( ( points.get ( i ) .z ) <= 0 ) { return ( - ( TheLittleEngineThatCould.windowHeight ) ) / 2; } minY = pY; } } return minY; } 
private void setDimensions () { if ( 15 > ( java.lang.Double.toString ( value ) .length () ) ) { width = java.lang.Double.toString ( value ) .length () ; height = 1; } else { width = 15; height = ( ( java.lang.Double.toString ( value ) .length () ) / ( width ) ) + 1; } } 
@ java.lang.Override public com.jomm.terroir.business.model.AbstractUser update ( com.jomm.terroir.business.model.AbstractUser user ) throws com.jomm.terroir.util.InvalidEntityException, java.lang.NullPointerException { if ( null == user ) { throw new java.lang.NullPointerException () ; } else if ( ( user.getId () ) == null ) { throw new com.jomm.terroir.util.InvalidEntityException () ; } return userDao.create ( user ) ; } 
private java.lang.String getTransitTitle ( org.opentripplanner.api.model.Leg leg ) { java.lang.String[] possibleTitles = new java.lang.String[] { leg.tripShortName, leg.routeShortName, leg.route, leg.routeId }; for ( int i = 0; ( possibleTitles.length ) > i; i++ ) { if ( ! ( android.text.TextUtils.isEmpty ( possibleTitles[i] ) ) ) { return possibleTitles[i]; } } return null; } 
@ java.lang.Override public void applyTo ( double[] xs, int offset, int length, mikera.vectorz.AVector ys ) { for ( int i = 0; length > i; i++ ) { xs[i] = ( ( java.lang.Number ) ( fn.invoke ( xs[i], ys.unsafeGet ( i ) ) ) ) .doubleValue () ; } } 
public static double norm2 ( float[] x, int dim ) { double dot = 0; for ( int i = 0; dim > i; ++i ) { dot += ( x[i] ) * ( x[i] ) ; } return java.lang.Math.sqrt ( dot ) ; } 
private static int checkSum ( java.lang.String zip ) { int checkDigit = 0; for ( int i = 0; 5 > i; i++ ) { checkDigit += java.lang.Integer.parseInt ( ( "" + ( zip.charAt ( i ) ) ) ) ; } checkDigit = checkDigit % 10; return checkDigit; } 
@ org.junit.Test public void testInvalidNullURI () { try { java.net.URL url = mastsh.toURL ( null ) ; org.junit.Assert.fail ( ( url + "expected IllegalArgumentException, got " ) ) ; } catch ( java.lang.IllegalArgumentException expected ) { ca.nrc.cadc.caom2.artifact.resolvers.MastResolverTest.log.debug ( ( "IllegalArgumentException thrown as expected. Test passed.: " + expected ) ) ; } catch ( java.lang.Exception unexpected ) { ca.nrc.cadc.caom2.artifact.resolvers.MastResolverTest.log.error ( "unexpected exception", unexpected ) ; org.junit.Assert.fail ( ( "unexpected exception: " + unexpected ) ) ; } } 
@ java.lang.Override public boolean add ( E e ) { java.lang.Object[] arr2 = new java.lang.Object[1 + ( arr.length ) ]; for ( int x = 0; x < ( arr.length ) ; x++ ) { arr2[x] = arr[x]; } arr2[arr.length] = e; return true; } 
public java.util.ArrayList pendingBids () { java.util.ArrayList<com.ismailmare.warondemand.WarItem> itemsBeingBidOn = new java.util.ArrayList<> () ; for ( int i = 0; ( inventory.size () ) > i; i++ ) { if ( ( inventory.get ( i ) .getStatus () ) == "BidOn" ) { itemsBeingBidOn.add ( inventory.get ( i ) ) ; } } return itemsBeingBidOn; } 
@ java.lang.Override public void run () { for ( org.bukkit.entity.Player player : this.plugin.playersToCheck ) { if ( ! ( this.plugin.checkWorld ( player.getWorld () .getName () ) ) ) { player.sendMessage ( ( ( DimRestrictor.plugin.info ( player.getWorld () .getName () ) ) + "This world is currently restricted.\n" ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor.teleportPlayer ( player, player.getLocation () ) ; } this.plugin.playersToCheck.remove ( player ) ; } } 
public void ParseJSONObject () { int code = 0; try { code = jsonObj.getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) { } if ( 200 == code ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; } else { responseString.append ( jsonObj ) ; } } 
@ java.lang.Override public void setForeground ( java.awt.Color color ) { if ( null == ( foreground ) ) { super.setForeground ( color ) ; } if ( ( module ) != null ) for ( java.awt.Component c : getComponents () ) { c.setForeground ( color ) ; } } 
private int getColumn () { int x; java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; while ( true ) { java.lang.System.out.print ( "Please enter the column number ( 1-10 ) :" ) ; x = scanner.nextInt () ; if ( ( 1 <= x ) & ( x <= 10 ) ) return x; } } 
private java.lang.Long fetchSearchKeyId ( java.lang.String suggestedField ) { javax.persistence.Query query = mgr.createQuery ( "select f from MetadataEntity f where f.value = :value" ) ; query.setParameter ( "value", suggestedField ) ; java.util.List<org.esbtools.message.admin.common.orm.MetadataEntity> queryResult = ( ( java.util.List<org.esbtools.message.admin.common.orm.MetadataEntity> ) ( query.getResultList () ) ) ; if ( ( ( queryResult.size () ) != 0 ) && ( queryResult != null ) ) { return queryResult.get ( 0 ) .getId () ; } return null; } 
private static java.lang.String _getParentMessageIdFromSubject ( javax.mail.Message message ) throws java.lang.Exception { if ( null == ( message.getSubject () ) ) { return null; } java.lang.String parentMessageId = null; java.lang.String subject = message.getSubject () ; int pos = subject.lastIndexOf ( CharPool.LESS_THAN ) ; if ( pos != ( -1 ) ) { parentMessageId = subject.substring ( ( pos + 1 ) ) ; } return parentMessageId; } 
@ java.lang.Override public <T> T loadClass ( java.lang.Class<T> pluginClass ) { java.lang.String id = classToBeanMap.get ( pluginClass.getCanonicalName () ) ; if ( null != id ) { return osgiPluginTracker.getBean ( pluginClass, this, id ) ; } else { try { return pluginClass.newInstance () ; } catch ( java.lang.Exception e ) { logger.error ( "Error instancing plugin class: ", e ) ; return null; } } } 
@ java.lang.Override public java.util.LinkedList<com.compomics.util.experiment.identification.matches.SpectrumMatch> getAllSpectrumMatches ( com.compomics.util.waiting.WaitingHandler waitingHandler, com.compomics.util.experiment.identification.identification_parameters.SearchParameters searchParameters, com.compomics.util.preferences.SequenceMatchingPreferences sequenceMatchingPreferences, boolean expandAaCombinations ) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.IllegalArgumentException, java.lang.InterruptedException, java.sql.SQLException, javax.xml.bind.JAXBException, org.xmlpull.v1.XmlPullParserException { this.fixedModifications = searchParameters.getPtmSettings () .getFixedModifications () ; if ( null == ( spectrumMatches ) ) { parseFile ( waitingHandler, expandAaCombinations, true ) ; } return spectrumMatches; } 
private void setPlaceGuess ( java.lang.String placeGuess ) { placeGuess = placeGuess.trim () ; if ( ( ( placeGuess.length () ) > 0 ) && ( placeGuess != null ) ) { mLocationGuess.setText ( placeGuess ) ; mObservation.place_guess = placeGuess; } else { mLocationGuess.setText ( R.string.set_location ) ; mObservation.place_guess = null; } } 
public boolean isHelpValid ( java.lang.String[] arguments ) { if ( 0 == ( arguments.length ) ) { return true; } else if ( ( arguments.length ) == 1 ) { return ! ( commandList_.getHelpArgumentList () .contains ( arguments[0] ) ) ; } else { return false; } } 
@ java.lang.Override public void setFakeHash () { if ( 0 == ( this.hash.length () ) ) { this.hash = this.pack.getId () ; if ( ( this.hash.length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this.hash += " "; } } } 
@ java.lang.Override public void run () { while ( 0 < ( hitQueue.size () ) ) { org.bukkit.event.entity.EntityDamageByEntityEvent e = hitQueue.remove () ; org.bukkit.Bukkit.getPluginManager () .callEvent ( e ) ; if ( ! ( e.isCancelled () ) ) ( ( org.bukkit.entity.Damageable ) ( e.getEntity () ) ) .damage ( e.getDamage () , e.getDamager () ) ; } } 
public static JyNI.PyObject PyImport_AddModule ( java.lang.String name ) { java.lang.String nm = name.intern () ; JyNI.PySystemState pss = JyNI.Py.getSystemState () ; JyNI.PyObject er = pss.modules.__finditem__ ( name ) ; if ( ( er.getType () .isSubType ( PyModule.TYPE ) ) && ( er != null ) ) return er; else { er = new JyNI.PyModule ( nm, new JyNI.PyNativeRefHoldingStringMap () ) ; pss.modules.__setitem__ ( name, er ) ; return er; } } 
private void handleFoundAllFiles ( final java.util.Set<java.io.File> allFiles ) throws java.io.IOException { if ( null != ( wildcardExpanderHandler ) ) { try { wildcardExpanderHandler.transform ( allFiles ) ; } catch ( final java.lang.Exception e ) { throw new java.io.IOException ( ( "Exception during expanding wildcard: " + ( e.getMessage () ) ) ) ; } } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { final android.view.View view = inflater.inflate ( R.layout.movie_detail_view, container, false ) ; mUnbinder = butterknife.ButterKnife.bind ( this, view ) ; if ( null != ( getArguments () ) ) { android.os.Bundle bundle = getArguments () ; mMovieId = bundle.getInt ( MovieViewHolderPortrait.MOVIEID_KEY, ( -1 ) ) ; timber.log.Timber.d ( "movieId: %d", mMovieId ) ; } mIvMovieDetailPoster.setImageResource ( R.drawable.contact_one ) ; return view; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { return o instanceof West.Math.ComplexNumber ? ( ( ( West.Math.ComplexNumber ) ( o ) ) .imag.equals ( imag ) ) && ( ( ( West.Math.ComplexNumber ) ( o ) ) .real.equals ( real ) ) : false; } 
public static int maxInBounds ( int[] A, int lowerBound, int upperBound ) { int max = 0; int[] bounds = new int[] { lowerBound, upperBound }; for ( int i = MyMath.min ( bounds ) ; ( ( MyMath.max ( bounds ) ) + 1 ) > i; i++ ) { java.lang.System.out.format ( "%d is between %d and %d%n", i, lowerBound, upperBound ) ; max = java.lang.Math.max ( A[i], max ) ; } return max; } 
private void labelCpuInventory () { if ( game.getCpu () ) if ( ( Player.BLUE ) == ( game.getCpuPlayer () ) ) { blueInvLabel.setVisible ( true ) ; redInvLabel.setVisible ( false ) ; } else { blueInvLabel.setVisible ( false ) ; redInvLabel.setVisible ( true ) ; } } 
private void catchTheGift () { if ( gift.getRect () .intersects ( paddle.getRect () ) ) { gift = null; for ( brickbreaker.source.Ball ball : balls ) { if ( 3 <= ( ball.getSpeed () ) ) { ball.setSpeed ( brickbreaker.source.BALL_SPEED ) ; ball.setImage ( brickbreaker.source.BALL ) ; } else if ( ( paddle.width ) <= 50 ) { Sound.SIZEUP.play () ; paddle.setWidth ( 75 ) ; } else { score += 10; } } } } 
@ org.junit.Test public void testFindAll () throws java.lang.Exception { populateData () ; int expectedSize = 12; int actualSize = 0; java.util.List<net.smartcosmos.dto.things.ThingResponse> response = persistenceService.findAll ( tenantUrn ) ; org.junit.Assert.assertFalse ( response.isEmpty () ) ; actualSize = response.size () ; org.junit.Assert.assertTrue ( ( actualSize + ( ( "Expected " + expectedSize ) + " but received " ) ) , ( actualSize == expectedSize ) ) ; } 
private int getStartIndex ( tspUtil.Node[] randomPath ) { int start = 0; double MAX = 0; for ( int i = 0; ( numOfCity ) > i; i++ ) { for ( int j = 0; j < ( numOfCity ) ; j++ ) { if ( ( distance[i][j] ) > MAX ) { MAX = distance[i][j]; start = i; } } } return start; } 
@ java.lang.Override protected void onPause () { super.onPause () ; rc.stop () ; pauseTime = java.lang.System.currentTimeMillis () ; totalForgroundTime = ( ( pauseTime ) - ( resumeTime ) ) + ( tinydb.getLong ( "TotalForegroundTime", 0 ) ) ; tinydb.putLong ( "TotalForegroundTime", totalForgroundTime ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( R.id.upload_files_btn_cancel ) == ( v.getId () ) ) { setResult ( com.owncloud.android.ui.activity.RESULT_CANCELED ) ; finish () ; } else if ( ( ( v.getId () ) == ( R.id.upload_files_btn_upload ) ) && ( ( mBehaviourSpinner.getSelectedItemPosition () ) == 0 ) ) { new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask () .execute () ; } } 
private boolean matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem, boolean add ) { return ( matches ( add, contractItem.getTypeID () , ( contractItem.getContract () .isForCorp () ? contractItem.getContract () .getIssuerCorpID () : contractItem.getContract () .getIssuerID () ) , null, null, contractItem.getContract () .getLocations () , null, null, null, null, contractItem ) ) && ( contractItem != null ) ; } 
public void categorySelected ( org.unpidf.univmobile.data.entities.Category cat ) { onBackPressed () ; android.app.FragmentManager manager = getFragmentManager () ; org.unpidf.univmobile.ui.fragments.GeoCampusFragment f = ( ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment ) ( manager.findFragmentByTag ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment.class.getName () ) ) ) ; if ( null != f ) { f.categorySelected ( cat ) ; } } 
public boolean remove ( int index ) { if ( ( index > ( size () ) ) || ( index < 1 ) ) return false; com.seb.research.algorithms.LinkedList.Node current = head; for ( int i = 1; i < index; i++ ) { if ( ( current.getNext () ) == null ) { return false; } } current.setNext ( current.getNext () .getNext () ) ; ( count ) --; return true; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) { if ( 0 == requestCode ) { if ( ( ( ( grantResults.length ) > 0 ) && ( ( grantResults[0] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( grantResults[1] ) == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) ) { btn_takePictureButton.setEnabled ( true ) ; } } } 
public java.util.Calendar calcDataCobranca ( java.util.Calendar dataCompra ) { java.util.Calendar dataCobranca = java.util.Calendar.getInstance () ; dataCobranca.setTime ( dataCompra.getTime () ) ; if ( ( diaVirada ) <= ( dataCobranca.get ( java.util.Calendar.DAY_OF_MONTH ) ) ) { dataCobranca.add ( java.util.Calendar.MONTH, 1 ) ; } dataCobranca.set ( java.util.Calendar.DAY_OF_MONTH, diaVencimento ) ; return dataCobranca; } 
public void notifyRegistrationError () { android.util.Log.v ( com.plugin.gcm.NotificationService.TAG, ( ( getWebView () ) + "GCM Registration Failed for webview " ) ) ; if ( ( getRegisterCallBack () ) != null ) { setNotifiedOfRegistered ( false ) ; getRegisterCallBack () .error ( mNotificationService.mRegistrationErrorId ) ; } else { android.util.Log.v ( com.plugin.gcm.NotificationService.TAG, "registration error -> No Register callback - webview: " ) ; getWebView () ; } } 
private void recurseImpliedPermissions ( com.hypersocket.permissions.PermissionType t, java.util.Set<com.hypersocket.permissions.PermissionType> derivedPermissions ) { if ( ! ( derivedPermissions.contains ( t ) ) ) { derivedPermissions.add ( t ) ; if ( null != ( t.impliesPermissions () ) ) { for ( com.hypersocket.permissions.PermissionType t2 : t.impliesPermissions () ) { recurseImpliedPermissions ( t2, derivedPermissions ) ; } } } } 
public void renameResidence ( java.lang.String oldResidence, java.lang.String newResidence ) { if ( null == oldResidence ) return; if ( newResidence == null ) return; oldResidence = oldResidence.toLowerCase () ; newResidence = newResidence.toLowerCase () ; com.bekvon.bukkit.residence.protection.ClaimedResidence res = ResidenceList.get ( oldResidence ) ; if ( res != null ) { removeResidence ( oldResidence ) ; ResidenceList.put ( newResidence, res ) ; } } 
private void generateColors () { if ( null != ( builder.colorsTop ) ) { android.util.Log.d ( "testtt", "colors top not null" ) ; colorsTop = builder.colorsTop; colorsSub = builder.colorsSub; return; } if ( builder.accentMode ) { android.util.Log.d ( "testtt", "is accent mode" ) ; colorsTop = ColorPalette.ACCENT_COLORS; colorsSub = ColorPalette.ACCENT_COLORS_SUB; } else { android.util.Log.d ( "testtt", "is not accent mode" ) ; colorsTop = ColorPalette.PRIMARY_COLORS; colorsSub = ColorPalette.PRIMARY_COLORS_SUB; } } 
@ org.junit.Test public void getFormattedDateString_30years () { org.hamcrest.MatcherAssert.assertThat ( com.ddiehl.timesincetextview.TimeSince.getFormattedDateString ( ( ( mTime ) - ( 60 * ( ( ( 30 * 365 ) * 24 ) * 60 ) ) ) , mTime, false, com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.is ( getQuantityString ( R.plurals.tstv_timespan_years, 30 ) ) ) ; } 
@ java.lang.Override public int hashCode () { int result = super.hashCode () ; result = ( ( t1 ) != null ? t1.hashCode () : 0 ) + ( 31 * result ) ; result = ( 31 * result ) + ( ( t2 ) != null ? t2.hashCode () : 0 ) ; return result; } 
public void ExtractOnlineDocuments () { if ( 0 < ( profile.getUrls () .size () ) ) { for ( java.lang.String url : profile.getUrls () ) { ExtractWebArticles ( url ) ; } driver.quit () ; ExtractKeyterms () ; } else { driver.quit () ; } } 
@ java.lang.Override public int hashCode () { final int prime = 31; int hashCode = 1; hashCode = ( ( children ) == null ? 0 : children.hashCode () ) + ( prime * hashCode ) ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : data.hashCode () ) ; hashCode = ( prime * hashCode ) + ( ( parent ) == null ? 0 : parent.hashCode () ) ; return hashCode; } 
private boolean isManaTurn ( int turnNum ) { int current = 1; int past = 0; while ( ( turnNum + 1 ) > current ) { int temp = current; current += past; past = temp; if ( current == turnNum ) { return true; } } return false; } 
public static void main ( java.lang.String[] args ) { java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; int N = scan.nextInt () ; long r = scan.nextInt () ; long c = scan.nextInt () ; long base = 0; long result = Main.getPoint ( ( 1 + r ) , ( c + 1 ) , N, base ) ; java.lang.System.out.println ( result ) ; } 
private static java.lang.String encrypt ( java.lang.String algorithm, java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest.getInstance ( algorithm ) ; pwd.update ( clearText.getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin.encode ( pwd.digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( algorithm + "No Such Algorithm: " ) ) ; } } 
public java.util.List<Actor> detection ( java.util.List<Actor> actors ) { for ( Actor a1 : actors ) { a1.setInAir ( true ) ; for ( Actor a2 : actors ) { if ( ( ( a1.getName () ) != "floor" ) && ( a1 != a2 ) ) { if ( isCollision ( a1, a2 ) ) resolveCollision ( a1, a2 ) ; } } } return actors; } 
private javax.jcr.Node newNode ( final javax.jcr.Node parent, final org.xml.sax.Attributes attributes ) throws javax.jcr.RepositoryException { javax.jcr.Node parentNode; if ( null == parent ) { parentNode = session.getRootNode () ; } else { parentNode = parent; } final java.lang.String name = attributes.getValue ( "name" ) ; final java.lang.String primaryType = attributes.getValue ( "primaryType" ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.info ( "Node {} adding child node {} ( type={} ) ", parentNode.getPath () , name, primaryType ) ; return parentNode.addNode ( name, primaryType ) ; } 
@ javafx.fxml.FXML public void initialize () { desc.setText ( task.getDesc () .getValue () ) ; id.setText ( ( ". " + ( displayedIndex ) ) ) ; venue.setText ( task.getVenue () .value ) ; priority.setText ( task.getPriority () .getValue () ) ; time.setText ( task.getTime () .getValue () ) ; tags.setText ( task.tagsString () ) ; } 
public void evolve ( double time, asteroids.part2.CollisionListener collistionListener ) { if ( 0 >= time ) { return; } double timeToFirstCollision = this.getTimeToFirstCollision () ; if ( time <= timeToFirstCollision ) { this.advance ( time ) ; return; } this.advance ( timeToFirstCollision ) ; this.resolveCollision ( collistionListener ) ; java.lang.System.out.println ( timeToFirstCollision ) ; this.evolve ( ( time - timeToFirstCollision ) , collistionListener ) ; } 
boolean areNodesWorking () { if ( ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject.gettingLaneData () ) && ( ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject.gettingPerceptionData () ) && ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject.gettingControlData () ) ) ) { return true; } else { setStatus ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.NODES_NOT_WORKING ) ; return true; } } 
public void removeAtIndex ( int index ) { if ( 0 >= index ) { removeFirstNode () ; } else if ( index >= ( ( size ) - 1 ) ) { removeLastNode () ; } else { a3.LinkedList.Node stepNode = head; for ( int i = 1; i < index; ++i ) { stepNode = stepNode.next; } stepNode.next = stepNode.next.next; stepNode = stepNode.next; stepNode = null; } -- ( size ) ; } 
@ org.junit.Test public void testDescriptionOfServicePayment () { try { model.PaymentDescription description = new model.PaymentDescription ( 1, 1 ) ; payment = new model.Payment ( service, 1, 1, 0 ) ; assertEquals ( description.getPaymentType () , payment.getDescription () .getPaymentType () ) ; assertEquals ( description.getPaymentForm () , payment.getDescription () .getPaymentForm () ) ; } catch ( exception.PaymentException e ) { fail ( ( ( e.getMessage () ) + "Should not throw this exception: " ) ) ; } } 
@ java.lang.Override public java.lang.Object call ( org.mozilla.javascript.Context cx, org.mozilla.javascript.Scriptable scope, org.mozilla.javascript.Scriptable thisObj, java.lang.Object[] args ) { if ( null == ( connection.current () ) ) { throw new java.lang.IllegalStateException ( "cannot call remote functions without a connected client in context" ) ; } connection.current () .send ( jj.jjmessage.JJMessage.makeCall ( java.lang.String.valueOf ( args[0] ) , java.lang.String.valueOf ( args[1] ) ) ) ; return org.mozilla.javascript.Undefined.instance; } 
@ java.lang.Override public <T> T getService ( org.terracotta.entity.ServiceConfiguration<T> configuration ) { T builtInService = ( ( this.owningEntity ) != null ) ? getBuiltInService ( configuration ) : null; T externalService = getExternalService ( configuration ) ; com.tc.util.Assert.assertFalse ( ( ( null != builtInService ) && ( null != externalService ) ) ) ; return null != builtInService ? builtInService : externalService; } 
@ java.lang.Override public void onNext ( T i ) { if ( ! ( isUnsubscribed () ) ) { boolean stop = ( limit ) <= ( ++ ( count ) ) ; child.onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true; try { child.onCompleted () ; } finally { unsubscribe () ; } } } } 
public static com.sailing.kafka.KafkaClient getKafkaProducer ( java.lang.String kafkaName, java.util.Properties kafkaProducerProps ) { com.sailing.kafka.KafkaClient client = com.sailing.kafka.KafkaSet.kafkaMap.get ( kafkaName ) ; if ( null == client ) { client = new com.sailing.kafka.KafkaClient ( kafkaProducerProps ) ; com.sailing.kafka.KafkaClient clientTrue = com.sailing.kafka.KafkaSet.kafkaMap.putIfAbsent ( kafkaName, client ) ; if ( client != clientTrue ) { client.close () ; } return clientTrue; } return client; } 
@ java.lang.Override public void ReInit ( java.io.Reader stream ) { jj_input_stream.ReInit ( stream, 1, 1 ) ; token_source.ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = -1; jj_gen = 0; for ( int i = 0; 17 > i; i++ ) { jj_la1[i] = -1; } for ( int i = 0; i < ( jj_2_rtns.length ) ; i++ ) { jj_2_rtns[i] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } } 
public boolean isOppositeOf ( org.eclipse.emf.diffmerge.api.diff.IReferenceValuePresence peer_p ) { return ( ( getValue () ) == ( peer_p.getElementMatch () ) ) && ( ( ( ( getPresenceRole () ) == ( peer_p.getPresenceRole () ) ) && ( ( getFeature () .getEOpposite () ) == ( peer_p.getFeature () ) ) ) && ( ( getElementMatch () ) == ( peer_p.getValueMatch () ) ) ) ; } 
public void update () { if ( ( Type.BASICENEMY ) == ( type ) ) { ( timer ) ++; this.move ( Direction.DOWN, speed ) ; int timeToShoot = rnd.nextInt ( 3 ) ; if ( ( timeToShoot == 0 ) && ( ( ( timer ) % 100 ) == 0 ) ) { Sound.play ( "src/sounds/enemyBlaster.wav" ) ; shoot ( Type.BULLET, Direction.DOWN, GamePanel.getGameObjects () , GamePanel.getProjectileList () ) ; timer = 0; } } } 
public static void printFloatingBackground ( int i, java.lang.String msg ) { java.lang.System.out.println ( ( ( ansi () .reset () ) + ( ( ( ( ( ( UI.ui.BACKGROUND_BLUE ) + ( UI.ui.HIGH_INTENSITY ) ) + ( UI.ui.YELLOW ) ) + i ) + ".\t" ) + msg ) ) ) ; } 
public void setActionValue ( java.lang.Object actionValue ) { if ( null == actionValue ) return; currentValue = actionValue; if ( ! ( action.getValue () .equals ( actionValue ) ) ) this.action.setValue ( actionValue ) ; initChildList () ; logger.debug ( "setAction value: {}, children: {}", actionValue, ( ( getCurrentParameters () ) == null ? "null" : getCurrentParameters () .size () ) ) ; } 
private void range ( KdTree.Node node, edu.princeton.cs.algs4.RectHV rect ) { if ( node.rect.intersects ( rect ) ) return; if ( null == ( node.point ) ) return; if ( rect.contains ( node.point ) ) range.add ( node.point ) ; range ( node.left, rect ) ; range ( node.right, rect ) ; } 
private boolean isListOperation ( int command ) { return ( command == ( INDEX_INCOMPLETE ) ) || ( ( ( ( ( command == ( INDEX_ADD ) ) || ( command == ( INDEX_EDIT ) ) ) || ( command == ( INDEX_DELETE ) ) ) || ( command == ( INDEX_COMPLETE ) ) ) || ( command == ( INDEX_OVERDUE ) ) ) ; } 
@ java.lang.Override public net.minecraft.nbt.NBTTagCompound writeToNBT ( net.minecraft.nbt.NBTTagCompound tag ) { if ( null != ( location ) ) location.writeToNBT ( tag ) ; if ( ( type ) != null ) type.writeToNBT ( tag ) ; else { java.lang.System.out.println ( "REMOVING NULL THING" ) ; mcmultipart.multipart.MultipartHelper.getPartContainer ( getWorld () , getPos () ) .removePart ( this ) ; } return tag; } 
public static java.lang.String getImports () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb.append ( "import org.junit.Before;\n" ) ; sb.append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests.isValidClass ( imp ) ) { sb.append ( ( ";\n" + ( "import " + imp ) ) ) ; } } return sb.toString () ; } 
private static boolean isSubset ( final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique subset, final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique of ) { return ( of.alters.containsAll ( subset.alters ) ) && ( of.getEgo () .getId () .equals ( of.getEgo () .getId () ) ) ; } 
@ java.lang.Override public void onResponse ( final retrofit2.Call<com.charlesmadere.hummingbird.models.Feed> call, final retrofit2.Response<com.charlesmadere.hummingbird.models.Feed> response ) { final com.charlesmadere.hummingbird.models.Feed body = ( response.isSuccessful () ) ? response.body () : null; if ( null == body ) { listener.failure ( com.charlesmadere.hummingbird.networking.Api.retrieveErrorInfo ( response ) ) ; } else { com.charlesmadere.hummingbird.networking.Api.hydrateFeed ( body, feed, listener ) ; } } 
@ java.lang.Override public boolean doPreAddUser ( java.lang.String userName, java.lang.Object credential, java.lang.String[] roleList, java.util.Map<java.lang.String, java.lang.String> claims, java.lang.String profile, org.wso2.carbon.user.core.UserStoreManager userStoreManager ) throws org.wso2.carbon.user.core.UserStoreException { try { if ( ( ! ( userStoreManager.isSCIMEnabled () ) ) || ( ! ( isEnable () ) ) ) { return true; } } catch ( org.wso2.carbon.identity.scim.common.listener.org.wso2.carbon.user e ) { throw new org.wso2.carbon.user.core.UserStoreException ( "Error while reading isScimEnabled from userstore manager", e ) ; } claims = this.getSCIMAttributes ( userName, claims ) ; return true; } 
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { if ( null != station ) { currentState = State.IS_WAIT; listener.setPlayerStates ( ( -1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station.getSource () ) ; else { if ( mediaPlayer.isPlaying () ) { pause () ; } else { play () ; } } } } 
@ java.lang.Override public void onBackPressed () { if ( mDrawerLayout.isDrawerOpen ( mDrawerListView ) ) { mDrawerLayout.closeDrawer ( mDrawerListView ) ; return; } fragmentMediator.backPressWebView () ; edu.rutgers.css.Rutgers.utils.LogUtils.LOGV ( edu.rutgers.css.Rutgers.ui.MainActivity.TAG, ( ( edu.rutgers.css.Rutgers.utils.AppUtils.topHandle ( this ) ) + "Back button pressed. Leaving top component: " ) ) ; super.onBackPressed () ; } 
@ java.lang.Override protected void onSuccess ( java.util.List<com.jiuzhang.guojing.dribbbo.model.Shot> shots ) { if ( ( com.jiuzhang.guojing.dribbbo.dribbble.Dribbble.COUNT_PER_LOAD ) > ( shots.size () ) ) { adapter.setShowLoading ( false ) ; } if ( refresh ) { swipeRefreshLayout.setRefreshing ( false ) ; adapter.setData ( shots ) ; } else { swipeRefreshLayout.setEnabled ( true ) ; adapter.append ( shots ) ; } } 
public boolean setCurrentMap ( java.lang.String tag ) { net.samongi.SamongiLib.Maps.MapData map = this.maps.get ( tag ) ; if ( null == map ) return false; net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent event = new net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent ( this.current_map, map ) ; org.bukkit.Bukkit.getServer () .getPluginManager () .callEvent ( event ) ; this.current_map = map; return true; } 
public void initScene ( final int scale, final com.jme3.math.Vector3f translation ) { java.lang.System.out.println ( "SCENE_PATH file found!" ) ; java.lang.System.out.println ( ( " Spatial ..." + ( "=> loading " + ( com.funkydonkies.gamestates.SceneState.SCENE_PATH.toString () ) ) ) ) ; loadScene ( com.funkydonkies.gamestates.SceneState.SCENE_PATH, scale, translation ) ; java.lang.System.out.println ( "... DONE loading .scene Spatial <=" ) ; } 
static boolean isAxiom ( Expression d ) { for ( int i = 0; ( LogicHW1.axioms.size () ) > i; i++ ) { if ( LogicHW1.axioms.get ( i ) .equalStruct ( d, new java.util.HashMap<> () , true ) ) { LogicHW1.out.println ( ( ( "Сх. акс. " + i ) + 1 ) ) ; return true; } } return false; } 
private void deleteAppointmentByDateInt ( java.lang.Integer date ) { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase () ; java.lang.String Query = date + ( ( ( ( ( ( ( ( "DELETE FROM " + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TABLE_CALENDAR ) ) + " WHERE " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_START ) ) + " <= " ) + date ) + " AND " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_END ) ) + " >= " ) ; android.util.Log.d ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TAG, ( "deleteAppointmentByDateInt: Query: " + Query ) ) ; db.execSQL ( Query ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; if ( getArguments () .containsKey ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) { mItem = Content.COMMUTE_MAP.get ( getArguments () .getString ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) ; android.app.Activity activity = this.getActivity () ; android.support.design.widget.CollapsingToolbarLayout appBarLayout = ( ( android.support.design.widget.CollapsingToolbarLayout ) ( activity.findViewById ( R.id.toolbar_layout ) ) ) ; if ( null != appBarLayout ) { appBarLayout.setTitle ( mItem.id ) ; } } } 
public void actionPerformed ( final java.awt.event.ActionEvent event ) { if ( 0 != ( pvLoggerID ) ) { if ( USE_PVLOGGER.isSelected () ) USE_LOGGEDBEND.setEnabled ( true ) ; else USE_LOGGEDBEND.setEnabled ( false ) ; CONFIG_PVLOGGER_DATA.actionPerformed ( null ) ; setHasChanges ( true ) ; } else { javax.swing.JOptionPane.showMessageDialog ( mainWindow, "You need to select pvLoggerData first", "Warning!", javax.swing.JOptionPane.PLAIN_MESSAGE ) ; USE_PVLOGGER.setSelected ( false ) ; } } 
public float activated ( float[] inputs ) { int temp = 0; for ( int i = 0; ( inputs.length ) > i; i++ ) { temp += ( inputs[i] ) * ( weights[i] ) ; } return ( ( float ) ( 1 / ( 1 + ( java.lang.Math.pow ( java.lang.Math.E, ( -temp ) ) ) ) ) ) ; } 
public void run () { java.lang.String playerName = player.getName () ; org.bukkit.scoreboard.Team playerTeam = org.bukkit.Bukkit.getScoreboardManager () .getMainScoreboard () .getEntryTeam ( playerName ) ; player.setDisplayName ( ( ( org.bukkit.ChatColor.RESET ) + ( ( ( playerTeam.getPrefix () ) + playerName ) + ( playerTeam.getSuffix () ) ) ) ) ; } 
@ java.lang.Override public boolean undoAction () { for ( int col = 0; 12 > col; col++ ) { for ( int row = 0; row < 12; row++ ) { boardTiles[col][row].setExists ( start[col][row] ) ; } } colsTextField.setText ( java.lang.Integer.toString ( startCols ) ) ; rowsTextField.setText ( java.lang.Integer.toString ( startRows ) ) ; redrawBoard () ; return true; } 
public double slopeTo ( Point that ) { if ( 0 == ( this.compareTo ( that ) ) ) { return java.lang.Double.NEGATIVE_INFINITY; } if ( ( this.x ) == ( that.x ) ) { return java.lang.Double.POSITIVE_INFINITY; } return ( ( double ) ( ( that.y ) - ( this.y ) ) ) / ( ( that.x ) - ( this.x ) ) ; } 
@ org.junit.Test public void testDataFrame () throws java.lang.Exception { http2Connect () ; sendSimplePostRequest ( 3 ) ; readSimplePostResponse () ; org.junit.Assert.assertEquals ( ( ( ( ( ( ( "3-WindowSize-[128]\n" + "3-HeadersStart\n" ) + "3-Header-[:status]-[200]\n" ) + "3-HeadersEnd\n" ) + "3-Body-128\n" ) + "3-EndOfStream\n" ) + "0-WindowSize-[128]\n" ) , output.getTrace () ) ; } 
@ java.lang.Override public V put ( K key, V value ) { key = com.google.common.base.Preconditions.checkNotNull ( key ) ; value = com.google.common.base.Preconditions.checkNotNull ( value ) ; com.google.common.cache.LocalCache.Timestamped<V> oldValue = cachingHashMap.put ( key, new com.google.common.cache.LocalCache.Timestamped<V> ( value, ticker ) ) ; if ( null == oldValue ) { return null; } alertListenerIfPresent ( key, oldValue.getValue () , com.google.common.cache.RemovalCause.REPLACED ) ; return oldValue.getValue () ; } 
private void readTokens ( com.fsck.k9.mail.store.ImapResponseParser.ImapResponse response ) throws java.io.IOException { response.clear () ; java.lang.String firstToken = ( ( java.lang.String ) ( readToken ( response ) ) ) ; response.add ( firstToken ) ; if ( isStatusResponse ( firstToken ) ) { parseResponseText ( response ) ; } else { java.lang.Object token; while ( null != ( token = readToken ( response ) ) ) { if ( ! ( token instanceof com.fsck.k9.mail.store.ImapResponseParser.ImapList ) ) { response.add ( token ) ; } } } response.mCompleted = true; } 
public org.apache.commons.lang3.tuple.Pair<java.lang.String, org.semanticweb.owlapi.model.OWLNamedIndividual> createIndividual ( java.lang.String modelId, java.lang.String cid, java.util.Set<org.semanticweb.owlapi.model.OWLAnnotation> annotations, METADATA metadata ) throws org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException { org.geneontology.minerva.ModelContainer model = checkModelId ( modelId ) ; org.semanticweb.owlapi.model.OWLClass cls = getClass ( cid, model ) ; if ( null == cls ) { throw new org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException ( ( "Could not find a class for id: " + cid ) ) ; } org.semanticweb.owlapi.model.OWLNamedIndividual individual = createIndividual ( model, cls, annotations, true, metadata ) ; return org.apache.commons.lang3.tuple.Pair.of ( org.geneontology.minerva.util.IdStringManager.getId ( individual.getIRI () ) , individual ) ; } 
private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { java.util.ArrayList<java.awt.Point> roiData = util.DataManager.readRoiFile ( chosenPath ) ; if ( 0 < ( roiData.size () ) ) { setFields () ; notifyRoiListeners ( roiData ) ; if ( defaultCheckBox.isSelected () ) { notifyRoiListeners ( chosenPath ) ; } this.setVisible ( false ) ; } else { errorText.setText ( "Error loading: File not found!" ) ; } } 
public void setArrayKey ( final org.verapdf.as.ASAtom key, final org.verapdf.cos.COSObject array ) { if ( ( ! ( this.base.setArrayKey ( key ) ) ) || ( ( this.base ) == null ) ) { org.verapdf.cos.COSObject obj = org.verapdf.cos.COSArray.construct () ; this.base = new org.verapdf.cos.COSDictionary ( key, obj ) ; } } 
static java.lang.Object[] boxAndPadWithZeros ( int length, long[] values ) { long[] padded; if ( length == ( values.length ) ) { padded = values; } else { padded = new long[length]; java.lang.System.arraycopy ( values, 0, padded, 0, values.length ) ; } return java.util.Arrays.stream ( padded ) .boxed () .toArray () ; } 
@ java.lang.Override public void start ( T project, boolean newInstance ) { org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener listener = org.jenkinsci.plugins.rabbitmqconsumer.extensions.MessageQueueListener.all () .get ( org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener.class ) ; if ( null != listener ) { listener.addTrigger ( this ) ; } super.start ( project, newInstance ) ; removeDuplicatedTrigger ( listener.getTriggers () ) ; } 
@ java.lang.Override public void setTimescale ( int order ) { java.lang.System.out.println ( ( order + "setTimescale " ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList.elementAt ( ( ( fCurrentEvent ) ++ ) ) ; assertEquals ( event.fType, VCDLoaderTest.ExpectTraceBuilder.EXPECT_TIMESCALE ) ; assertEquals ( event.fTimestamp, ( ( long ) ( order ) ) ) ; } 
public static float[] getFloatArrayFromBuffer ( java.nio.FloatBuffer buffer ) { float[] array = null; if ( null != buffer ) { if ( buffer.hasArray () ) { array = buffer.array () ; } else { buffer.rewind () ; array = new float[buffer.capacity () ]; buffer.get ( array ) ; } } return array; } 
public void setProperties ( java.util.Map<java.lang.String, java.lang.Object> properties ) { for ( java.lang.Object o : properties.values () ) { if ( ( ! ( o instanceof java.lang.Double ) ) && ( ! ( o instanceof java.lang.String ) ) ) { throw new java.lang.IllegalArgumentException ( "Values must be Strings or Doubles." ) ; } } this.properties = properties; } 
public boolean remove ( spoon.reflect.code.CtBlock parentBlock, spoon.reflect.code.CtStatement fixStatement, int pos ) { spoon.reflect.code.CtStatement s = parentBlock.getStatement ( pos ) ; if ( fixStatement.equals ( s ) ) { parentBlock.getStatements () .remove ( pos ) ; this.updateBlockImplicitly ( parentBlock, false ) ; return true; } else { java.lang.System.out.println ( ( s + ( ( "\n fx: " + fixStatement ) + "\n" ) ) ) ; throw new java.lang.IllegalStateException ( "Undo: Not valid fix position" ) ; } } 
public java.lang.String toByteCode ( java.lang.String i_assembly ) { java.util.List<backend.Compiler.asm_line> asm_array = new java.util.ArrayList<backend.Compiler.asm_line> () ; java.lang.String byteCodeReturn = ""; java.lang.String[] raw_lines = i_assembly.split ( "\\r?\\n" ) ; for ( int line_i = 0; ( raw_lines.length ) > line_i; line_i++ ) { asm_array.add ( asm_line ( raw_lines[line_i] ) ) ; byteCodeReturn += asm_array.get ( line_i ) .getByteCode () ; } return byteCodeReturn; return ""; } 
private void setMedian () { int mid = ( this.numbers.size () ) / 2; if ( 1 == ( mid % 2 ) ) { this.medianOfAllNumbers = this.numbers.get ( mid ) ; } else { this.medianOfAllNumbers = ( ( this.numbers.get ( ( mid - 1 ) ) ) + ( this.numbers.get ( mid ) ) ) / 2.0; } } 
@ java.lang.Override public boolean availableForBooking ( java.util.Set<com.real.apps.shuttle.domain.model.BookedRange> potentialBookedRanges, com.real.apps.shuttle.domain.model.BookedRange bookedRange ) { if ( ( potentialBookedRanges.isEmpty () ) || ( potentialBookedRanges == null ) ) { return true; } java.util.Iterator<com.real.apps.shuttle.domain.model.BookedRange> iterator = potentialBookedRanges.iterator () ; while ( iterator.hasNext () ) { com.real.apps.shuttle.domain.model.BookedRange subject = iterator.next () ; if ( subject.coincide ( bookedRange ) ) { return false; } } return true; } 
protected org.nd4j.linalg.api.ndarray.INDArray createScalarForIndex ( int i, boolean applyOffset ) { return org.nd4j.linalg.factory.Nd4j.create ( data () , new int[] { 1, 1 }, new int[] { 1, 1 }, ( applyOffset ? i + ( offset ) : i ) ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) private java.util.List<java.lang.Class> getClass ( java.lang.Class clazz, java.util.List<java.lang.Class> classList ) { if ( null != ( clazz.getSuperclass () ) ) { if ( com.ai.dubbo.ext.vo.BaseInfo.class.equals ( clazz.getSuperclass () .getName () ) ) { return classList; } else { classList.add ( clazz.getSuperclass () ) ; return getClass ( clazz.getSuperclass () , classList ) ; } } return classList; } 
private boolean isMyIDP ( org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( null == ( id.getExternalIdRef () ) ) ? null : id.getExternalIdRef () .getProviderName () ; return ( ( idpName == null ) || ( ( idpName.length () ) == 0 ) ) || ( idpName.equals ( idp.getName () ) ) ; } 
public java.util.List<ca.ubc.ece.cpen221.mp3.staff.Vertex> getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex v ) { java.util.LinkedList<ca.ubc.ece.cpen221.mp3.staff.Vertex> upstreamNeighboursList = new java.util.LinkedList<ca.ubc.ece.cpen221.mp3.staff.Vertex> () ; for ( java.util.List<java.lang.String> vertices : adjacencyList ) { for ( java.lang.String vertex : vertices ) { if ( vertex == ( v.getLabel () ) ) { upstreamNeighboursList.add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList.get ( adjacencyList.indexOf ( vertices ) ) ) ) ; } } } return upstreamNeighboursList; } 
private static boolean isCyclic ( int numberOfCourse, java.util.Map<java.lang.Integer, java.util.Set<java.lang.Integer>> prerequisitePerCourse ) { for ( int course = 0; numberOfCourse > course; course++ ) { java.util.Set<java.lang.Integer> targetCourses = new java.util.HashSet<java.lang.Integer> () ; targetCourses.add ( course ) ; if ( ( com.sevendragons.practice.leetcode.medium.coursesschedule.Solution.isCourseContainedInPrerequisites ( prerequisitePerCourse, targetCourses, course ) ) == true ) { return true; } } return false; } 
private rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode.newInstance () ; healthCode.setCode ( term.getLabel () ) ; healthCode.setTopLevelTerm ( ( null == ( term.getParentTerm () ) ) ) ; healthCode.setNameSpace ( term.getNameSpace () ) ; healthCode.setDescription ( term.getDescription () ) ; healthCode.setNumberOfSubTerms ( term.getSubTerms () .size () ) ; return healthCode; } 
public void broadcast ( cn.nukkit.Player player ) { java.lang.String translation = cn.nukkit.Server.getInstance () .getLanguage () .translateString ( "chat.type.achievement", player.getDisplayName () , ( ( this.getMessage () ) + ( cn.nukkit.utils.TextFormat.GREEN ) ) ) ; if ( cn.nukkit.Server.getInstance () .getPropertyBoolean ( "announce-player-achievements", true ) ) { cn.nukkit.Server.getInstance () .broadcastMessage ( translation ) ; } else { player.sendMessage ( translation ) ; } } 
@ java.lang.Override protected void onHandleIntent ( android.content.Intent intent ) { if ( com.google.android.gms.location.ActivityRecognitionResult.hasResult ( intent ) ) { com.google.android.gms.location.ActivityRecognitionResult result = com.google.android.gms.location.ActivityRecognitionResult.extractResult ( intent ) ; com.google.android.gms.location.DetectedActivity CurrentActivity = result.getMostProbableActivity () ; if ( 75 <= ( CurrentActivity.getConfidence () ) ) { ActivityRecognitionPlugin.Activity.ActivityType = CurrentActivity.toString () ; ActivityRecognitionPlugin.Activity.Propability = CurrentActivity.getConfidence () ; } else ActivityRecognition.Activity.ActivityType = "NotConfidentEnough"; } } 
@ java.lang.Override public boolean removeBusiness ( java.lang.String id ) throws java.lang.Exception { com.foodie.app.Helper.DebugHelper.Log ( ( id + "removeBusiness: id = " ) ) ; BusinessRef.child ( id ) .removeValue () ; localDB.removeBusiness ( id ) ; java.util.List<com.foodie.app.entities.Activity> businessActivities = com.foodie.app.database.Converters.cursorToActivityList ( localDB.getActivity ( new java.lang.String[] { com.foodie.app.entities.Activity.ACTIVITY_BUSINESS_ID }, new java.lang.String[] { id } ) ) ; for ( com.foodie.app.entities.Activity ac : businessActivities ) { removeActivity ( ac.get_ID () ) ; } return true; } 
private void highlightArrow ( uk.ac.cam.teamdelta.Direction d ) { javafx.scene.image.ImageView iv = navMap.get ( d ) ; if ( null == iv ) { uk.ac.cam.teamdelta.Logger.error ( ( ( "NULL IV - direction" + ( d.getDegrees () ) ) + " was not in direction set" ) ) ; } iv.setImage ( hArrow ) ; } 
private void updateParityFlag () { boolean parity = false; for ( byte b = this.state.sfrs.A.getValue () ; 0 < b; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) parity = !parity; this.state.sfrs.PSW.setBit ( parity, 0 ) ; } 
void setWhys ( java.util.List<java.lang.String> whys ) { getAdvStats () .clearWhyTypes () ; if ( null != whys ) { java.util.List<com.brookmanholmes.billiards.turn.AdvStats.WhyType> list = new java.util.ArrayList<> () ; for ( java.lang.String why : whys ) { list.add ( com.brookmanholmes.bma.utils.MatchDialogHelperUtils.convertStringToWhyType ( context, why ) ) ; } getAdvStats () .whyTypes ( list ) ; } } 
@ java.lang.Override public void onComplete () { if ( done ) { return; } done = true; R col = collection; if ( null != col ) { collection = null; if ( emitRemainder ) { queue.offer ( col ) ; } } drain () ; } 
private void computeTwoCMPProjectionConstraintMatrices () { tmpTwoCMPProjection_Aeq.zero () ; tmpTwoCMPProjection_beq.zero () ; tmpTwoCMPProjection_Aeq.reshape ( totalFootstepVariables, numberOfFootstepsToConsider ) ; tmpTwoCMPProjection_beq.reshape ( numberOfFootstepsToConsider, 1 ) ; for ( int i = 0; ( numberOfFootstepsToConsider ) > i; i++ ) { tmpTwoCMPProjection_Aeq.set ( ( 3 * i ) , i, 1.0 ) ; tmpTwoCMPProjection_beq.set ( i, 1, 1.0 ) ; } } 
private void obtainObjectReferences () { if ( null == ( rawTextPanel ) ) { rawTextPanel = com.sandy.jnmaker.util.ObjectRepository.getMainFrame () .getRawTextPanel () ; imagePanel = com.sandy.jnmaker.util.ObjectRepository.getMainFrame () .getImagePanel () ; jnPanel = com.sandy.jnmaker.util.ObjectRepository.getMainFrame () .getJNPanel () ; statefulObjects.put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_JOVENOTESPANEL, jnPanel ) ; statefulObjects.put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_RAWTEXTPANEL, rawTextPanel ) ; statefulObjects.put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_IMAGEPANEL, imagePanel ) ; } } 
public void getBytes ( java.io.OutputStream outputStream ) throws java.io.IOException { java.io.BufferedOutputStream bufferedOutputStream = new java.io.BufferedOutputStream ( outputStream ) ; java.nio.ByteBuffer byteBuffer = java.nio.ByteBuffer.allocate ( ( ( java.lang.Integer.BYTES ) + ( ( java.lang.Long.BYTES ) * 2 ) ) ) ; byteBuffer.putLong ( id.getMostSignificantBits () ) ; byteBuffer.putLong ( id.getLeastSignificantBits () ) ; bufferedOutputStream.write ( byteBuffer.array () ) ; getBytesFromPedestrianInfo ( personA, bufferedOutputStream ) ; getBytesFromPedestrianInfo ( personB, bufferedOutputStream ) ; bufferedOutputStream.flush () ; } 
public java.lang.Integer getLatOffset ( double lat, double lon, double offset, boolean checkOutside ) { java.awt.Point p = tileSource.latLonToXY ( lat, lon, zoom ) ; int y = ( ( p.y ) - ( center.y ) ) - ( ( getHeight () ) / 2 ) ; if ( checkOutside ) { if ( ( y > ( getHeight () ) ) || ( y < 0 ) ) return null; } return y; } 
@ java.lang.Override public java.lang.String toString () { return java.lang.String.join ( "\n", this.ueberschrift, this.unterueberschrift, ( ( this.aktenzeichen ) + "AKZ: " ) , ( "Datum: " + ( this.datum ) ) , ( "Rechtsbereich: " + ( this.rechtsbereich ) ) , ( "Vergehen: " + ( this.vergehen ) ) , ( "Strafmass: " + ( this.strafmass ) ) , ( "Gruende: " + ( this.gruende ) ) ) ; } 
void ojld ( int num1, int num2 ) { num1 = java.lang.Math.abs ( num1 ) ; num2 = java.lang.Math.abs ( num2 ) ; if ( num1 < num2 ) { int temp = num2; num2 = num1; num1 = temp; } if ( num2 == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { this.maxcommom = num2; return; } int temp = num1 % num2; ojld ( num2, temp ) ; } 
public boolean deleteExtrasFromReminder ( int reminderId ) throws ve.com.abicelis.remindy.exception.CouldNotDeleteDataException { android.database.sqlite.SQLiteDatabase db = mDatabaseHelper.getWritableDatabase () ; return 0 < ( db.delete ( RemindyContract.ExtraTable.TABLE_NAME, ( ( RemindyContract.ExtraTable.COLUMN_NAME_REMINDER_FK ) + " =?" ) , new java.lang.String[] { java.lang.String.valueOf ( reminderId ) } ) ) ; } 
public boolean checkIfDone ( double x, double y ) { if ( ( ( ( destY ) - ( error ) ) <= y ) || ( ( ( ( ( destX ) + ( error ) ) >= x ) || ( ( ( destX ) - ( error ) ) <= x ) ) || ( ( ( destY ) + ( error ) ) >= y ) ) ) { return true; } else return false; } 
public void connect ( java.lang.String host ) throws java.io.IOException, java.net.SocketTimeoutException, java.net.UnknownHostException { decc.Peer pair = new decc.Peer ( this, host, this.port ) ; pairs.put ( pair.getHostName () , pair ) ; if ( 1 == ( pairs.size () ) ) pair.sendBrcast ( ip ) ; } 
public static void loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () .toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config.class ) ; org.vitrivr.cineast.core.config.Config.LOGGER.info ( "Config file loaded!" ) ; if ( null == config ) { org.vitrivr.cineast.core.config.Config.LOGGER.warn ( "Could not read config file '{}'.", name ) ; } else { synchronized ( org.vitrivr.cineast.core.config.Config.class ) { org.vitrivr.cineast.core.config.Config.sharedConfig = config; } } } 
public static com.puppycrawl.tools.checkstyle.api.JavadocTagInfo fromText ( final java.lang.String text ) { if ( null == text ) { throw new java.lang.NullPointerException ( "the text is null" ) ; } final com.puppycrawl.tools.checkstyle.api.JavadocTagInfo tag = com.puppycrawl.tools.checkstyle.api.JavadocTagInfo.TEXT_TO_TAG.get ( text ) ; if ( tag == null ) { throw new java.lang.IllegalArgumentException ( ( ( "the text [" + text ) + "] is not a valid Javadoc tag text" ) ) ; } return tag; } 
private void init () { for ( lightpos.light[] parent : parents ) { for ( int i = 0; ( nNumber ) > i; i++ ) { parent[i] = new lightpos.light ( generatorRandom.nextInt ( ( ( roomWidth ) + 1 ) ) , generatorRandom.nextInt ( ( ( roomLength ) + 1 ) ) , generatorRandom.nextInt ( 5 ) , generatorRandom.nextBoolean () ) ; } } } 
@ java.lang.Override public void remove ( java.lang.Object object ) { if ( null == ( internalList ) ) return; for ( int ic = 0; ic < ( internalList.size () ) ; ic++ ) { if ( internalList.get ( ic ) .getReturnValue () .equals ( object ) ) { internalList.remove ( ic ) ; } } } 
public java.util.List<org.fife.ui.rsyntaxtextarea.DocumentRange> getMarkedOccurrences () { java.util.List<org.fife.ui.rsyntaxtextarea.DocumentRange> list = new java.util.ArrayList<org.fife.ui.rsyntaxtextarea.DocumentRange> ( markedOccurrences.size () ) ; for ( org.fife.ui.rsyntaxtextarea.HighlightInfo info : markedOccurrences ) { int start = info.getStartOffset () ; int end = 1 + ( info.getEndOffset () ) ; org.fife.ui.rsyntaxtextarea.DocumentRange range = new org.fife.ui.rsyntaxtextarea.DocumentRange ( start, end ) ; list.add ( range ) ; } return list; } 
protected void doGet ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { java.lang.String dbname = "doglovers"; try { org.ektorp.CouchDbConnector dbc = _db.createConnector ( dbname, true ) ; wasdev.sample.servlet.List<java.lang.String> list = dbc.getAllDocIds () ; for ( wasdev.sample.servlet.Sting lists : list ) { response.getWriter () .print ( ( lists + "Get all Ids!" ) ) ; } } catch ( java.lang.Exception e ) { response.getWriter () .println ( e.getMessage () ) ; } } 
private double getMaxHitpointsStamina () { return ( ( double ) ( java.lang.Math.ceil ( ( ( ( ( double ) ( this.getToughness () ) ) * ( ( double ) ( this.getWeight () ) ) ) / 50 ) ) ) ) ; } 
@ java.lang.Override public void clearAuction () { for ( int i = 0; ( bids.length ) > i; i++ ) { if ( ( bids[i] ) > 0 ) bountyState.getAgents () [i].receiveResource ( res ) ; } } 
private com.louiscarrese.clopecounter.model.Jour createJour () { io.realm.Realm realm = io.realm.Realm.getDefaultInstance () ; long id = 1 + ( realm.where ( com.louiscarrese.clopecounter.model.Jour.class ) .maximumInt ( "id" ) ) ; com.louiscarrese.clopecounter.model.Jour j = new com.louiscarrese.clopecounter.model.Jour () ; j.setId ( id ) ; return j; } 
@ java.lang.Override public mil.nga.giat.mage.sdk.datastore.user.Team create ( mil.nga.giat.mage.sdk.datastore.user.Team pTeam ) throws mil.nga.giat.mage.sdk.exceptions.TeamException { mil.nga.giat.mage.sdk.datastore.user.Team createdTeam = null; try { createdTeam = teamDao.createIfNotExists ( pTeam ) ; } catch ( java.sql.SQLException sqle ) { android.util.Log.e ( mil.nga.giat.mage.sdk.datastore.user.TeamHelper.LOG_NAME, ( pTeam + "There was a problem creating team: " ) , sqle ) ; throw new mil.nga.giat.mage.sdk.exceptions.TeamException ( ( pTeam + "There was a problem creating team: " ) , sqle ) ; } return createdTeam; } 
public static void applyConfigChanges () { com.sonicether.soundphysics.SoundPhysics.globalRolloffFactor = Config.rolloffFactor; com.sonicether.soundphysics.SoundPhysics.globalReverbMultiplier = ( Config.globalReverbGain ) * 0.7F; com.sonicether.soundphysics.SoundPhysics.soundDistanceAllowance = Config.soundDistanceAllowance; if ( ( com.sonicether.soundphysics.SoundPhysics.auxFXSlot0 ) != 0 ) { com.sonicether.soundphysics.SoundPhysics.setReverbParams ( com.sonicether.soundphysics.ReverbParams.getReverb0 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot0, com.sonicether.soundphysics.SoundPhysics.reverb0 ) ; com.sonicether.soundphysics.SoundPhysics.setReverbParams ( com.sonicether.soundphysics.ReverbParams.getReverb1 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot1, com.sonicether.soundphysics.SoundPhysics.reverb1 ) ; com.sonicether.soundphysics.SoundPhysics.setReverbParams ( com.sonicether.soundphysics.ReverbParams.getReverb2 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot2, com.sonicether.soundphysics.SoundPhysics.reverb2 ) ; com.sonicether.soundphysics.SoundPhysics.setReverbParams ( com.sonicether.soundphysics.ReverbParams.getReverb3 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot3, com.sonicether.soundphysics.SoundPhysics.reverb3 ) ; } } 
@ java.lang.Override public void characters ( final char[] chr, final int start, final int length ) throws org.xml.sax.SAXException { final java.lang.String text = new java.lang.String ( chr ) .substring ( start, ( length + start ) ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.trace ( "characters; '{}'", text ) ; final java.lang.String trimmedText = text.trim () ; if ( ! ( trimmedText.isEmpty () ) ) { io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG.info ( "text: '{}'", trimmedText ) ; this.textStack.push ( trimmedText ) ; } } 
public void move ( int from, int to ) { int lastPos = getPosition () ; super.add ( to, super.remove ( from ) ) ; mObservable.notifyChanged () ; if ( from == lastPos ) moveToPosition ( to ) ; } 
@ java.lang.Override public java.util.List<cz.mzk.recordmanager.server.oai.model.OAIRecord> read () { if ( finished ) { return null; } cz.mzk.recordmanager.server.oai.model.OAIListRecords listRecords = harvester.listRecords ( resumptionToken ) ; resumptionToken = listRecords.getNextResumptionToken () ; if ( null == ( resumptionToken ) ) { finished = true; } if ( listRecords.getRecords () .isEmpty () ) { return null; } else { return listRecords.getRecords () ; } } 
@ java.lang.Override public void run () { org.eclipse.emf.common.util.EList<java.lang.String> images = api.listAvailableImages () ; if ( ! ( images.contains ( baseICEImage ) ) ) { console.print ( ( " image not found locally. Pulling from Dockerhub..." + baseICEImage ) ) ; api.pull ( baseICEImage ) ; } if ( ! ( images.contains ( baseSshImage ) ) ) { console.print ( ( baseSshImage + " image not found locally. Pulling from Dockerhub..." ) ) ; api.pull ( baseSshImage ) ; } } 
@ java.lang.Override public void update () { if ( ( ( ( initializeAnimation ) == null ) || ( initializeAnimation.isDone () ) ) && ( ( state ) == ( AbilityState.INITIALIZING ) ) ) { projectiles.add ( new animation.effects.FireballProjectile ( entity, entity.getMapCollisionDetection () ) ) ; } super.update () ; } 
private void removeTopCard () { android.view.View child = getChildAt ( ( ( getChildCount () ) - 1 ) ) ; child.setOnTouchListener ( null ) ; child.setX ( 0 ) ; child.setY ( 0 ) ; child.setRotation ( 0 ) ; removeView ( child ) ; lastRemovedView = child; if ( ( ( eventCallback ) != null ) && ( ( getChildCount () ) <= 0 ) ) { eventCallback.cardsDepleted () ; } } 
@ java.lang.Override public void parseValue ( java.lang.String valueString ) { if ( null == valueString ) { setValue ( null ) ; } else { io.pelle.mango.client.FileVO file = ( ( io.pelle.mango.client.FileVO ) ( getValue () ) ) ; file.setFileUUID ( valueString ) ; setValue ( file ) ; } } 
@ java.lang.Override public void writeToPacket ( io.netty.buffer.ByteBuf buf ) { net.minecraftforge.fluids.FluidStack fluidStack = this.tank[0].getFluid () ; int fluidAmount = -1; int fluidID = -1; if ( null != fluidStack ) { fluidAmount = fluidStack.amount; fluidID = fluidStack.getFluidID () ; } buf.writeInt ( fluidAmount ) ; buf.writeInt ( fluidID ) ; buf.writeBoolean ( isActive ) ; } 
public java.lang.String generateScore () { return '%' + ( ( ( ( ( ( ( getName () ) + " " ) + ( getCurrentWins () ) ) + ":" ) + ( getCurrentLosses () ) ) + " " ) + ( generateRatio () ) ) ; } 
@ java.lang.Override public boolean canAct ( org.roda.wui.client.common.actions.Actionable.Action<org.roda.core.data.v2.ip.IndexedAIP> action, org.roda.core.data.v2.ip.IndexedAIP aip ) { boolean canAct; if ( ( org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT ) == aip ) { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP.contains ( action ) ; } else if ( AIPState.UNDER_APPRAISAL.equals ( aip.getState () ) ) { canAct = ( org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP.contains ( action ) ) || ( org.roda.wui.client.common.actions.AipActions.APPRAISAL_ACTIONS.contains ( action ) ) ; } else { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP.contains ( action ) ; } return canAct; } 
private void insTypeFocusLost ( java.awt.event.FocusEvent evt ) { if ( 0 == ( insType.getSelectedIndex () ) ) { MessageBox.setForeground ( java.awt.Color.red ) ; MessageBox.setText ( "One or more field are empty" ) ; type = null; iWindow.update () ; return; } if ( ( insType.getSelectedItem () .toString () .length () ) <= 0 ) return; type = utils.E_Types.valueOf ( ( ( java.lang.String ) ( insType.getSelectedItem () ) ) ) ; } 
@ java.lang.Override public void start () throws org.mindroid.impl.statemachine.NoStartStateException { if ( null == ( currentState ) ) { if ( ( startState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this ( ID:'" + ( getID () ) ) + "' ) Statemachine. Use setStartState ( .. ) to specify a State to begin with!" ) ) ; } currentState = startState; this.isActive = true; currentState.activate () ; } } 
private static org.elasticsearch.hadoop.serialization.dto.mapping.Field skipHeaders ( org.elasticsearch.hadoop.serialization.dto.mapping.Field field ) { org.elasticsearch.hadoop.serialization.dto.mapping.Field[] props = field.properties () ; if ( ( FieldType.OBJECT.equals ( props[0].type () ) ) && ( ( ( props[0] ) != null ) && ( "mappings".equals ( props[0].name () ) ) ) ) { return props[0].properties () [0]; } return field; } 
public void done ( byte[] data, com.parse.ParseException e ) { if ( null == e ) { android.util.Log.d ( "test", "We've got data in data." ) ; M.setImage ( data ) ; messages.add ( M ) ; pb.setProgress ( 60 ) ; customAdapter = new com.ferran.yep.views.InboxAdapter ( getActivity () , R.layout.custom_inbox_row, messages ) ; setListAdapter ( customAdapter ) ; } else { } } 
public MaRzAgent.SuffixNode findBestNodeToTry () { MaRzAgent.SuffixNode[] nodes = ( ( MaRzAgent.SuffixNode[] ) ( hashFringe.values () .toArray () ) ) ; assert 0 < ( nodes.length ) ; double theBEASTLIESTCombo = nodes[0].heuristic; MaRzAgent.SuffixNode bestNode = nodes[0]; for ( MaRzAgent.SuffixNode node : nodes ) { if ( ( node.heuristic ) > theBEASTLIESTCombo ) { theBEASTLIESTCombo = node.heuristic; bestNode = node; } } return bestNode; } 
@ java.lang.Override public com.udacity.gradle.joketeller.Joke loadInBackground () { int retryCount = 0; com.udacity.gradle.joketeller.Joke joke = loadJoke () ; if ( null != ( lastJoke ) ) { while ( ( joke.equals ( lastJoke ) ) && ( retryCount < ( com.udacity.gradle.builditbigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber.d ( "Got the same joke, looking for fresh material!" ) ; joke = loadJoke () ; retryCount++; } } return joke; } 
public boolean updateIndent ( com.hlz.webModel.IndentModel model ) { com.hlz.entity.Indent indent = dao.updateIndent ( model ) ; if ( null != indent ) { messaging.convertAndSend ( "/topic/update", indent ) ; rabbitTemplate.convertAndSend ( "update-indent", indent ) ; return true; } else { return false; } } 
public void turnon () { switch ( currentState ) { case SWITCHINGOFF: case OFF: if ( null == ( onOffEvent ) ) { new hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.PowerStateDelayer ( onTransition, hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } else { onOffEvent.addFurtherTasks ( onTransition ) ; onOffEvent.setNewState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } setState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.SWITCHINGON ) ; break; case RUNNING: case SWITCHINGON: java.lang.System.err.println ( "WARNING: an already running PM was tasked to switch on!" ) ; } } 
private java.util.Collection<com.google.protobuf.Descriptors.FieldDescriptor> findSourceFields ( com.google.protobuf.Descriptors.FieldDescriptor enrichmentField ) { final java.lang.String byOptionArgument = enrichmentField.getOptions () .getExtension ( EventAnnotationsProto.by ) ; com.google.common.base.Preconditions.checkNotNull ( byOptionArgument ) ; final int pipeSeparatorIndex = byOptionArgument.indexOf ( org.spine3.server.event.enrich.ReferenceValidator.PIPE_SEPARATOR ) ; if ( 0 > pipeSeparatorIndex ) { return java.util.Collections.singleton ( findSourceFieldByName ( byOptionArgument, enrichmentField ) ) ; } else { final java.lang.String[] targetFieldNames = org.spine3.server.event.enrich.ReferenceValidator.PATTERN_PIPE_SEPARATOR.split ( byOptionArgument ) ; return findSourceFieldsByNames ( targetFieldNames, enrichmentField ) ; } } 
private common.UndirectedGraphNode cloneGraph ( common.UndirectedGraphNode node, java.util.HashMap<common.UndirectedGraphNode, common.UndirectedGraphNode> nodes ) { common.UndirectedGraphNode newNode = new common.UndirectedGraphNode ( node.label ) ; nodes.put ( node, newNode ) ; for ( common.UndirectedGraphNode neighbor : node.neighbors ) { common.UndirectedGraphNode newNeighbor = nodes.get ( neighbor ) ; if ( null == newNeighbor ) { newNeighbor = cloneGraph ( neighbor, nodes ) ; } newNode.neighbors.add ( newNeighbor ) ; } return node; } 
public int run ( java.io.File source, java.io.File destination ) { int status = org.dataaccessioner.Migrator.STATUS_INITIALIZING; try { status = org.dataaccessioner.Migrator.STATUS_RUNNING; status = copyDirectory ( source, destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatusMessage ( ex.getLocalizedMessage () ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE; } catch ( java.lang.Exception ex ) { setStatusMessage ( ( ( ex.getLocalizedMessage () ) + "Unexpected Failure: " ) ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE; } return status; } 
public java.lang.String getRunTitle ( android.content.Context context ) { if ( android.text.TextUtils.isEmpty ( mRun.getTitle () ) ) { if ( ( -1 ) != ( mRun.getRunIndex () ) ) { return context.getString ( R.string.run_label, ( ( mRun.getRunIndex () ) + 1 ) ) ; } else { return context.getString ( R.string.run_label, "" ) ; } } else { return mRun.getTitle () ; } } 
private double[] primConverter ( java.lang.Double[] valArr ) { double[] primArr = new double[valArr.length]; if ( 0 >= ( valArr.length ) ) java.lang.System.err.println ( "ERROR: array is null" ) ; java.lang.System.out.println ( ( "Valarr length = " + ( valArr.length ) ) ) ; for ( int i = 0; i < ( valArr.length ) ; i++ ) { java.lang.System.out.println ( ( "i= " + i ) ) ; primArr[i] = valArr[i]; } return primArr; } 
@ java.lang.Override public int compare ( com.example.nickozoulis.teamproj.domain.Referee lRef, com.example.nickozoulis.teamproj.domain.Referee rRef ) { int res = firstClassOrdering ( lRef, rRef ) ; android.util.Log.i ( "INFO", "firstClassOrdering" ) ; if ( 0 == res ) { res = secondClassOrdering ( lRef, rRef ) ; android.util.Log.i ( "INFO", "SecondClassOrdering" ) ; if ( 0 == res ) { res = thirdClassOrdering ( lRef, rRef ) ; android.util.Log.i ( "INFO", "thirdClassOrdering" ) ; } } return res; } 
public void run ( @org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator progressIndicator ) { if ( Utils.debug ) { com.intellij.perlplugin.Utils.print ( "parsing started" ) ; } long start = java.lang.System.currentTimeMillis () ; com.intellij.perlplugin.PerlInternalParser.parseAllSources ( com.intellij.perlplugin.PerlInternalParser.module, progressIndicator ) ; long end = java.lang.System.currentTimeMillis () ; if ( Utils.debug ) { com.intellij.perlplugin.Utils.print ( ( "sec" + ( "update completed in " + ( ( end - start ) / 1000 ) ) ) ) ; } } 
void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () .findFragmentById ( R.id.outputFrame ) ) ) ; if ( null == ( resultFragment ) ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; getSupportFragmentManager () .beginTransaction () .replace ( R.id.outputFrame, resultFragment ) .commit () ; } resultFragment.setResult ( result ) ; } else { startActivity ( new android.content.Intent ( this, com.example.uvdoha.translate.ResultActivity.class ) .putExtra ( "result", result ) ) ; } } 
@ android.support.annotation.Nullable public com.taobao.weex.WXSDKInstance takeCachedInstance ( @android.support.annotation.Nullable java.lang.String targetUrl ) { if ( ! ( mRemoteConfig.isSwitchOn () ) ) { com.taobao.weex.utils.WXLogUtils.d ( com.taobao.weex.appfram.prerender.PreRenderManager.TAG, "takeCachedInstance failed. switch is off" ) ; return null; } if ( android.text.TextUtils.isEmpty ( targetUrl ) ) { return null; } com.taobao.weex.appfram.prerender.IPreRenderCache.Entry entry = mInternalCache.remove ( targetUrl ) ; if ( ( entry.isFresh () ) && ( ( entry != null ) && ( ( entry.data ) != null ) ) ) { return entry.data; } else { return null; } } 
private void findPercentiles () { int count = 0; lowerIndex = 0; for ( lowerIndex = 0; ( histogram.length ) > ( lowerIndex ) ; ( lowerIndex ) ++ ) { count += histogram[lowerIndex]; if ( count >= ( lowerCount ) ) { break; } } for ( upperIndex = lowerIndex; ( upperIndex ) < ( histogram.length ) ; ( upperIndex ) ++ ) { count += histogram[upperIndex]; if ( count >= ( upperCount ) ) { break; } } } 
private void onRightDrawerOpened () { java.lang.String properties = getResources () .getString ( R.string.properties ) ; java.lang.String tool = getResources () .getString ( paintView.getTool () .getName () ) ; actionBar.setTitle ( ( tool + ( properties + ": " ) ) ) ; } 
private void CalculatejButtonActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( ! ( LengthjTextField.getText () .isEmpty () ) ) && ( ! ( SidesjTextField.getText () .isEmpty () ) ) ) { validateInput ( SidesjTextField, SidesjTextField ) ; } } 
public void createAccessToken ( java.lang.String result ) { com.alibaba.fastjson.JSONObject tmp = com.alibaba.fastjson.JSON.parseObject ( result ) ; if ( result.contains ( "accessToken" ) ) { setAccessToken ( tmp.getString ( "access_token" ) ) ; } else { setAccessToken ( tmp.getString ( "component_access_token" ) ) ; } setExpiresIn ( ( 1000 * ( ( tmp.getLong ( "expires_in" ) ) - 60 ) ) ) ; } 
void drainUntil ( long upToNanos ) { long now = timeNanos; java.util.concurrent.PriorityBlockingQueue<hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask> q = queue; for ( ; ; ) { hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask tt = q.peek () ; if ( ( ( tt.dueNanos ) > upToNanos ) || ( tt == null ) ) { break; } q.poll () ; timeNanos = tt.dueNanos; tt.run () ; } timeNanos = upToNanos; } 
private void close () { try { if ( ( ! ( serverSocket.isClosed () ) ) && ( ( serverSocket ) != null ) ) { listeningThread.suspend () ; listeningThread.stop () ; serverSocket.close () ; } } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
public void updateLockedLevels () { for ( int i = 0; ( buttons ) > i; i++ ) { levels[i] = new com.darkhouse.gdefence.Model.LevelButton ( ( ( firstButtonInt ) + i ) ) ; if ( ! ( com.darkhouse.gdefence.GDefence.getInstance () .user.getLevelAvailable ( ( ( firstButtonInt ) + i ) ) ) ) { levels[i].lock () ; } else { levels[i].unLock () ; } } } 
@ java.lang.Override public java.util.List<org.jivesoftware.openfire.mix.mam.ArchivedMixChannelMessage> execute () { if ( null == ( end ) ) { if ( ( limit ) == 0 ) { return repository.findTimeBoundMessagesByChannel ( channelName, start, end ) ; } else { return repository.findLimitedTimeBoundMessagesByChannel ( channelName, start, end, limit ) ; } } else { if ( ( limit ) == 0 ) { return repository.findMessagesByChannelSince ( channelName, start ) ; } else { return repository.findLimitedMessagesByChannelSince ( channelName, start, limit ) ; } } } 
public void update ( codeu.chat.common.ConversationSummary owningConversation ) { final codeu.chat.common.User u = ( null == owningConversation ) ? null : clientContext.user.lookup ( owningConversation.owner ) ; messageOwnerLabel.setText ( ( "Owner: " + ( u == null ? null == owningConversation ? "" : owningConversation.owner : u.name ) ) ) ; messageConversationLabel.setText ( ( "Conversation: " + ( owningConversation.title ) ) ) ; getAllMessages ( owningConversation, true ) ; } 
@ java.lang.Override void restoreLastSession () { init () ; java.util.Set<modbus.SlaveNode> slavescopy = new java.util.HashSet<modbus.SlaveNode> ( slaves ) ; slaves.clear () ; for ( modbus.SlaveNode sn : slavescopy ) { if ( ( node ) != ( sn.node ) ) { addSlave ( sn.node ) ; } } } 
public void changeToBattle ( engine.Formation formation ) { if ( ( ( currentMap ) == null ) && ( ( currentScene ) != null ) ) currentScene.stop () ; try { java.lang.Thread.sleep ( 2000 ) ; } catch ( java.lang.InterruptedException e ) { } battle.start ( formation ) ; currentScene = battle; } 
private boolean containsRPurchase ( uwi.dcit.agriexpensesvr.ResourcePurchase rpurchase ) { com.google.appengine.api.NamespaceManager.set ( rpurchase.getAccount () ) ; javax.persistence.EntityManager mgr = uwi.dcit.agriexpensesvr.ResourcePurchaseEndpoint.getEntityManager () ; boolean contains = true; try { uwi.dcit.agriexpensesvr.ResourcePurchase item = mgr.find ( uwi.dcit.agriexpensesvr.ResourcePurchase.class, rpurchase.getKey () ) ; if ( null == item ) { contains = false; } } finally { mgr.close () ; } return contains; } 
void restore () { init ( mVertexShader, mFragmentShader ) ; mAmbientColor.refresh () ; if ( null != ( mLights ) ) { for ( com.gplibs.magicsurfaceview.Light l : mLights ) { l.restore () ; } } if ( ( mSurfaces ) != null ) { for ( com.gplibs.magicsurfaceview.MagicBaseSurface<?> s : mSurfaces ) { s.restore () ; } } } 
protected boolean checkBabySteps () { if ( ( this.notEarnBabyStep () ) && ( ( this.moveCounter ) == 10 ) ) { achievements.get ( "BabySteps" ) .setIsEarned ( true ) ; popingUp.push ( "BabySteps" ) ; return true; } return false; } 
public void stopTick () { if ( null != ( this.IntentReceiver ) ) { this.Context.unregisterReceiver ( this.IntentReceiver ) ; } if ( ( this.Handler ) != null ) { this.Handler.removeCallbacks ( this.Ticker ) ; } } 
public void setServiceDown () { MainActivity.isKcaServiceOn = false; com.antest1.kcanotify.KcaService.isPortAccessed = false; if ( null != ( missionTimeScheduler ) ) { missionTimeScheduler.shutdown () ; } handler = null; nHandler = null; mediaPlayer.release () ; mediaPlayer = null; stopForeground ( true ) ; notifiManager.cancelAll () ; currentPortDeckData = null; viewNotificationBuilder = null; com.antest1.kcanotify.KcaService.isServiceOn = false; } 
@ java.lang.Override public void joinServer ( java.net.InetSocketAddress server ) { java.lang.String host = server.getHostString () ; int port = server.getPort () ; net.minecraft.client.multiplayer.ServerData serverData = new net.minecraft.client.multiplayer.ServerData ( "Sponge API Call", ( port + ( host + ":" ) ) , false ) ; net.minecraftforge.fml.client.FMLClientHandler.instance () .connectToServer ( currentScreen, serverData ) ; } 
@ java.lang.Override public org.apache.drill.common.expression.PathSegment.ArraySegment cloneWithNewChild ( org.apache.drill.common.expression.PathSegment newChild ) { org.apache.drill.common.expression.PathSegment.ArraySegment seg = new org.apache.drill.common.expression.PathSegment.ArraySegment ( index ) ; if ( null != ( child ) ) { seg.setChild ( child.cloneWithNewChild ( newChild ) ) ; } else { seg.setChild ( newChild ) ; } return seg; } 
public java.lang.String getTextContent () { boolean saveTextContentOld; saveTextContentOld = saveTextContent; saveTextContent = true; if ( ! ( getNextNode () ) ) { return null; } saveTextContent = saveTextContentOld; if ( ( org.quicktionary.backend.parsers.XMLParser.NodeType.TEXT ) != ( nodeType ) ) { return null; } return textContent; } 
public void printAdjList () { if ( ( ( adjList.size () ) == 0 ) || ( ( adjList ) == null ) ) { java.lang.System.out.println ( "The adjacency list is not set yet." ) ; } else { java.lang.System.out.println ( "Start printing adjacency list:" ) ; for ( graph.undirectedGraph.UGNode n : adjList ) n.print () ; } } 
@ java.lang.Override public void render ( com.badlogic.gdx.graphics.g2d.SpriteBatch batch ) { for ( int currentX = 0; ( innerTiles.length ) > currentX; currentX++ ) { for ( int currentY = 0; currentY < ( innerTiles[0].length ) ; currentY++ ) { innerTiles[currentX][currentY].render ( batch ) ; } } super.render ( batch ) ; } 
public int hit ( int armor ) { int damage; if ( ( armor < 20 ) || ( armor > 0 ) ) { damage = this.DAMAGE; } else { damage = ( this.DAMAGE ) - armor; } return damage < 0 ? 0 : damage; } 
public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; do { while ( length > ( builder.length () ) ) { builder.append ( se.rupy.http.Event.BASE_58[java.lang.Math.abs ( ( ( se.rupy.http.Event.random.nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } } while ( builder.toString () .matches ( "[0-9]+" ) ) ; return builder.toString () ; } 
@ javax.ws.rs.GET @javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @javax.ws.rs.PathParam ( value = "type" ) java.lang.String type, @javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null; if ( null != id ) { if ( "proj".equals ( type ) ) { io.hops.hopsworks.common.dao.project.Project proj = projectFacade.find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; } else if ( "ds".equals ( type ) ) { info = datasetInfo ( id ) ; } } return noCacheResponse.getNoCacheResponseBuilder ( Response.Status.OK ) .entity ( info ) .build () ; } 
public double calculateIDF ( java.util.List<java.lang.String[]> documents, java.lang.String wordToCheck ) { double count = 0; for ( java.lang.String[] ss : documents ) { for ( java.lang.String s : ss ) { if ( s.equalsIgnoreCase ( wordToCheck ) ) { count++; break; } } } return ( java.lang.Math.log ( ( ( documents.size () ) / count ) ) ) + 1; } 
@ java.lang.Override public void resolveAnaphora () { java.util.List<org.tariel.pla.logics.Proposition> props = org.tariel.pla.logics.VariableStorage.getPopostionList () ; int i = 0; for ( org.tariel.pla.logics.classic.CQuantifer quant : this.getQuantifers () ) { if ( ( props.size () ) >= i ) props.get ( i ) .setLinkedId ( ( ( java.lang.String ) ( quant.getVar () .getSourceId () ) ) ) ; i++; } } 
public E get ( int index ) { LinkedSet<E>.Item<E> item = main; if ( ( index >= ( size ) ) || ( index < 0 ) ) { throw new java.lang.IndexOutOfBoundsException ( ( ( ( ( "Index " + index ) + " isn't in range ( 0 - " ) + ( size ) ) + " ) " ) ) ; } for ( int i = 0; i < index; i++ ) { item = item.next; } return item.item; } 
private void expandType () { java.lang.String type = getType () ; if ( null != ( getRelatingObject () .getType () ) ) { type += "." + ( getRelatingObject () .getType () ) ; if ( ( getRelatingObject () .getSubtype () ) != null ) { type += "." + ( getRelatingObject () .getSubtype () ) ; } } setType ( type ) ; } 
public java.lang.String listToConfig ( java.util.ArrayList<mars.client.Module> list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder.append ( "[" ) ; for ( int i = 0; ( list.size () ) > i; i++ ) { aStringBuilder.append ( list.get ( i ) .toString () ) .append ( "," ) ; } aStringBuilder.deleteCharAt ( aStringBuilder.length () ) ; aStringBuilder.append ( "]" ) ; return aStringBuilder.toString () ; } 
public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent, float pTouchAreaLocalX, float pTouchAreaLocalY ) { if ( pSceneTouchEvent.isActionDown () ) { setTouchAreaBindingOnActionDownEnabled ( false ) ; setTouchAreaBindingOnActionMoveEnabled ( false ) ; android.content.Intent shareIntent = new android.content.Intent () ; shareIntent.setAction ( Intent.ACTION_SEND ) ; shareIntent.setType ( "text/plain" ) ; shareIntent.setPackage ( "com.twitter.android" ) ; shareIntent.putExtra ( Intent.EXTRA_TEXT, ( " points. And yours?" + ( "My score in #ProtectTheTown is " + ( score ) ) ) ) ; activity.tweetScore ( shareIntent ) ; } return false; } 
private void deletePage ( int pageIndex ) { for ( roottemplate.calculator.data.KeyboardKits.KitVersion kv : mCurrentKitV.mParent.mKitVersions ) { roottemplate.calculator.data.KeyboardKits[] pages = kv.mPages; kv.mPages = roottemplate.calculator.util.Util.removeFromObjectArray ( pages, pageIndex, new roottemplate.calculator.data.KeyboardKits.Page[ ( pages.length ) - 1] ) ; if ( pageIndex < ( kv.mMainPageIndex ) ) ( kv.mMainPageIndex ) --; } mKitPreviewAdapter.notifyDataSetChanged () ; } 
@ java.lang.Override protected void onMeasure ( int widthMeasureSpec, int heightMeasureSpec ) { if ( 0 != heightMeasureSpec ) { int sizeWidth = de.dmxcontrol.widget.MeasureSpec.getSize ( widthMeasureSpec ) ; int sizeHeight = de.dmxcontrol.widget.MeasureSpec.getSize ( heightMeasureSpec ) ; if ( ( sizeHeight < sizeWidth ) && false ) { heightMeasureSpec = de.dmxcontrol.widget.MeasureSpec.makeMeasureSpec ( de.dmxcontrol.widget.MeasureSpec.getMode ( heightMeasureSpec ) , sizeHeight ) ; } } super.onMeasure ( widthMeasureSpec, heightMeasureSpec ) ; } 
public static void showMessage ( android.content.Context context, java.lang.String message, android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder.setMessage ( message ) .setPositiveButton ( R.string.ok, ( null == okListener ? new android.content.DialogInterface.OnClickListener () { @java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { dialog.dismiss () ; } } : okListener ) ) ; builder.create () .show () ; } 
@ com.facebook.react.bridge.ReactMethod public void startRecordingFps () { if ( ! ( mCatalystSettings.isAnimationFpsDebugEnabled () ) ) { return; } if ( null != ( mFrameCallback ) ) { throw new com.facebook.react.bridge.JSApplicationCausedNativeException ( "Already recording FPS!" ) ; } com.facebook.react.modules.debug.AnimationsDebugModule.checkAPILevel () ; mFrameCallback = new com.facebook.react.modules.debug.FpsDebugFrameCallback ( android.view.Choreographer.getInstance () , getReactApplicationContext () ) ; mFrameCallback.startAndRecordFpsAtEachFrame () ; } 
private void next () { int next = 1 + ( status.ordinal () ) ; if ( next >= ( PipelineConfig.Step.values () .length ) ) { ch.epfl.planair.Planair.become ( ch.epfl.planair.mods.MenuMode.class ) ; } else { toStep ( next ) ; } } 
@ java.lang.Override protected boolean matchesSafely ( T item ) { T startOfWindow = ( ( T ) ( other.minus ( window, units ) ) ) ; T endOfWindow = ( ( T ) ( other.plus ( window, units ) ) ) ; return ( ( endOfWindow.compareTo ( other ) ) >= 0 ) && ( ( startOfWindow.compareTo ( other ) ) <= 0 ) ; } 
@ javax.annotation.Nullable @java.lang.Override public org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig get ( final org.metaborg.core.project.ILanguageSpec languageSpec ) throws java.io.IOException { @javax.annotation.Nullable org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig config = this.configurationBasedLanguageSpecConfigService.get ( languageSpec ) ; if ( ( languageSpec instanceof org.metaborg.core.project.IProject ) && ( config == null ) ) { @javax.annotation.Nullable final org.metaborg.spoofax.core.project.settings.LegacySpoofaxProjectSettings settings; try { settings = this.settingsService.get ( ( ( org.metaborg.core.project.IProject ) ( languageSpec ) ) ) ; } catch ( org.metaborg.core.project.ProjectException e ) { throw new java.lang.RuntimeException ( e ) ; } if ( settings != null ) { config = new org.metaborg.spoofax.core.project.configuration.LegacySpoofaxLanguageSpecConfig ( settings ) ; } } return config; } 
@ java.lang.Override public void onSensorChanged ( android.hardware.SensorEvent event ) { if ( ( android.hardware.Sensor.TYPE_ACCELEROMETER ) == ( event.sensor.getType () ) ) { float rawX = event.values[0]; float normalizedX = rawX * ( -2.0F ) ; spaceShip.setXVelocity ( ( ( int ) ( normalizedX ) ) ) ; } } 
private double calculate ( us.team.awesome.calculator.math.CalculationList list ) throws us.team.awesome.calculator.util.MathException { if ( list.isEmpty () ) { return 0; } int index = getNextOperatorToCalculate () ; if ( 0 < index ) { us.team.awesome.calculator.math.CalculationOperator operator = ( ( us.team.awesome.calculator.math.CalculationOperator ) ( list.get ( index ) ) ) ; us.team.awesome.calculator.math.CalculationList _list = operator.calculate ( index, list ) ; return calculate ( _list ) ; } else { return ( ( us.team.awesome.calculator.math.CalculationNumber ) ( list.getFirst () ) ) .getValue () ; } } 
public static <T extends uk.ac.bbsrc.tgac.miso.core.data.DetailedSample> T getParent ( java.lang.Class<T> targetParentClass, uk.ac.bbsrc.tgac.miso.core.data.DetailedSample start ) { for ( uk.ac.bbsrc.tgac.miso.core.data.DetailedSample current = start.getParent () ; null != current; current = uk.ac.bbsrc.tgac.miso.core.util.LimsUtils.deproxify ( current.getParent () ) ) { if ( targetParentClass.isInstance ( current ) ) { return ( ( T ) ( current ) ) ; } } return null; } 
private void saveEntry ( org.owasp.dependencycheck.dependency.Vulnerability vuln ) throws java.io.IOException, org.apache.lucene.index.CorruptIndexException, org.owasp.dependencycheck.data.nvdcve.DatabaseException { if ( null == ( cveDB ) ) { return; } final java.lang.String cveName = vuln.getName () ; if ( prevVersionVulnMap.containsKey ( cveName ) ) { final java.util.List<org.owasp.dependencycheck.dependency.VulnerableSoftware> vulnSoftware = prevVersionVulnMap.get ( cveName ) ; for ( org.owasp.dependencycheck.dependency.VulnerableSoftware vs : vulnSoftware ) { vuln.updateVulnerableSoftware ( vs ) ; } } cveDB.updateVulnerability ( vuln ) ; } 
public void update () { if ( isActive ) { physicsPositionCalibration () ; paintballShadow.setTranslation ( new com.metaio.sdk.jni.Vector3d ( geometry.getTranslation () .getX () , geometry.getTranslation () .getY () , 0.0F ) ) ; } if ( 0.0F >= ( geometry.getTranslation () .getZ () ) ) { disable () ; } if ( ( getPlayerId () ) == ( com.google.sprint1.GameState.getState () .myPlayerID ) ) checkCollisions () ; } 
private void displayResult ( java.lang.String inputTemperature, float convertedTemperature, boolean isInput_Fahrenheit ) { if ( isInput_Fahrenheit ) { mTextView_Result.setText ( ( ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) + ( ( convertedTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + inputTemperature ) ) ) ; } mTextView_Result.setText ( ( ( ( inputTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + convertedTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; location = ( ( android.widget.TextView ) ( findViewById ( R.id.locationText ) ) ) ; auth.hci.adscanner.controller.GPSTracker gps = new auth.hci.adscanner.controller.GPSTracker ( getBaseContext () ) ; if ( gps.canGetLocation () ) { location.setText ( ( ( gps.getLongitude () ) + ( ( "Langtitude: " + ( gps.getLatitude () ) ) + "\nLongtitude: " ) ) ) ; } else { gps.showSettingsAlert () ; } } 
private void CreateSpecies ( java.lang.String type, int number ) { for ( int i = 0; number > i; i++ ) { GetPositionsAndTypes () ; ( ( java.util.List<Species.ISpecie> ) ( species ) ) .add ( Species.SpecieFactory.GetSpecies ( type, RandomPosition () ) ) ; } } 
public static void response ( java.lang.String name, java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) com.minecraftmarket.util.Log.log ( " " ) ; com.minecraftmarket.util.Log.log ( ( " ------------- " + ( ( " ------------- " + " MinecraftMarket Debug " ) + name ) ) ) ; com.minecraftmarket.util.Log.log ( ( " " + s ) ) ; com.minecraftmarket.util.Log.log ( " -------------------------------------------------------------------- " ) ; } 
@ java.lang.Override public void showEmpty () { mobymagic.com.javalagos.utils.LogUtils.d ( mobymagic.com.javalagos.ui.userslist.BaseUserListFragment.LOG_TAG, "Showing empty" ) ; if ( 1 > ( mPlaceHolderView.getViewCount () ) ) { mProgressView.setVisibility ( View.GONE ) ; mErrorContainerView.setVisibility ( View.GONE ) ; mEmptyContainerView.setVisibility ( View.VISIBLE ) ; } mPlaceHolderView.noMoreToLoad () ; } 
public void launch () { try { socket = new java.net.ServerSocket ( port ) ; java.lang.System.out.println ( ( "..." + ( "TCP high level server is running on " + ( port ) ) ) ) ; while ( true ) { java.net.Socket tcpClient = socket.accept () ; client.Client client = new client.Client ( tcpClient, responseDelay ) ; executorService.submit ( client ) ; java.lang.System.out.println ( "Server is listening new client..." ) ; } } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
private void setTeamColor ( net.minecraft.scoreboard.ScorePlayerTeam team, java.lang.String newTeamColor ) { java.lang.String prefix = team.getColorPrefix () ; java.lang.String prefixSplit; try { prefixSplit = prefix.substring ( 4 ) ; } catch ( java.lang.NullPointerException e ) { prefix = "\u00a7r\u00a7r"; prefixSplit = ""; } catch ( java.lang.StringIndexOutOfBoundsException e ) { prefixSplit = ""; } java.lang.System.out.println ( ( prefixSplit + ( "Set color prefix to " + newTeamColor ) ) ) ; team.setNamePrefix ( ( newTeamColor + prefixSplit ) ) ; } 
@ java.lang.Override public boolean visit ( org.eclipse.php.internal.core.compiler.ast.visitor.PHPCallExpression node ) throws java.lang.Exception { if ( null != ( node.getReceiver () ) ) { node.getReceiver () .traverse ( this ) ; } if ( ( node.getArgs () ) != null ) { node.getArgs () .traverse ( this ) ; } return visitGeneral ( node ) ; } 
public void mouseReleased ( java.awt.event.MouseEvent e ) { dragging = false; if ( ( java.awt.event.MouseEvent.BUTTON1 ) == ( e.getButton () ) ) { java.lang.System.out.println ( "released" ) ; command = new controller.TravelCommand ( currentPersModel, initPosX, initPosy, e.getX () , e.getY () ) ; cmdMan.storeAndExecute ( command, currentPersModel.getID () ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( o == ( this ) ) return true; if ( ( o == null ) || ( ( getClass () ) != ( o.getClass () ) ) ) return false; net.osmand.plus.quickaction.QuickAction action = ( ( net.osmand.plus.quickaction.QuickAction ) ( o ) ) ; if ( ( type ) != ( action.type ) ) return false; if ( ( id ) != ( action.id ) ) return false; return true; } 
public me.noize.chemistry.io.TimeRange extendTo ( final long time ) { if ( ( this.getStart () ) > time ) { return new me.noize.chemistry.io.TimeRange ( time, this.getEnd () ) ; } else if ( ( this.getEnd () ) < time ) { return new me.noize.chemistry.io.TimeRange ( this.getStart () , this.end ) ; } else { return this; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog, int which ) { int prog = seekBar.getProgress () ; this.warmth = 1 + prog; java.lang.System.out.println ( R.string.recapHot ) ; this.recapWarmth.setText ( android.text.Html.fromHtml ( ( ( ( "<b>" + ( res.getString ( R.string.recapHot ) ) ) + "</b>" ) + ( hotWordArray[prog] ) ) ) ) ; } 
@ java.lang.Override public com.windowsazure.messaging.NotificationPlatform convertTo ( com.bosch.cn.dad.notificationhub.model.DeviceType srcDeviceType, com.windowsazure.messaging.NotificationPlatform destPlatform ) { if ( null == srcDeviceType ) { return null; } switch ( srcDeviceType ) { case WindowsNotification: destPlatform = com.windowsazure.messaging.NotificationPlatform.Wns; break; case WindowsPhoneNotification: destPlatform = com.windowsazure.messaging.NotificationPlatform.Mpns; break; case AppleNotification: destPlatform = com.windowsazure.messaging.NotificationPlatform.Apns; break; case BaiduNotification: destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm; break; case GoogleCloudMessaging: destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm; break; case AmazonDeviceMessaging: destPlatform = com.windowsazure.messaging.NotificationPlatform.Adm; break; } return null; } 
public java.lang.String inflectNoun ( java.lang.String nounLemma, java.lang.String inflection ) { java.lang.String toRet = ""; ballpark.WordElement word = lexicon.getWord ( nounLemma, LexicalCategory.NOUN ) ; if ( inflection.contains ( "def" ) ) { if ( inflection.contains ( "plu" ) ) { ballpark.InflectedWordElement pluralWord = new ballpark.InflectedWordElement ( word ) ; pluralWord.setPlural ( true ) ; toRet = realiser.realise ( pluralWord ) .toString () ; } if ( null != toRet ) return "the " + toRet; } return nounLemma; } 
private void createIndexForPost () { try { if ( ! ( DS.mop.collectionExists ( "post" ) ) ) { DS.mop.createCollection ( "post" ) ; com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message", "text" ) ; textIndex.put ( "link", "text" ) ; textIndex.put ( "name", "text" ) ; DS.mop.getCollection ( "post" ) .createIndex ( textIndex ) ; } } catch ( java.lang.Exception e ) { bootstrap.Logger.debug ( ( ( e.getMessage () ) + "error on index post" ) ) ; } } 
private int decideAction () { int action = 0; setHorizontalVelocity ( 0.0 ) ; java.util.Random rand = new java.util.Random () ; actionDuration = 1.0 + ( ( rand.nextDouble () ) * 3.0 ) ; actionTime = 0.0; int randomNum = rand.nextInt ( 4 ) ; if ( randomNum == 0 ) action = 0; if ( randomNum == 1 ) action = 1; if ( randomNum == 2 ) action = 2; if ( randomNum == 3 ) action = 3; return action; } 
private static double compare ( final java.lang.String v1, final java.lang.String v2, final double high, final double low, final java.util.Comparator comparator ) { if ( null == comparator ) { return org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE; } double sim = comparator.compare ( v1, v2 ) ; if ( sim < ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ) { return low; } else { return ( ( high - ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ) * ( sim * sim ) ) + ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ; } } 
private Board swapRight ( int blankX, int blankY ) { Board swap = new Board ( this.board ) ; if ( ( this.dimensions () ) >= blankX ) { throw new java.lang.IndexOutOfBoundsException ( "Can not swap right most column right" ) ; } exchange ( swap.board, blankX, blankY, blankX, ( blankY + 1 ) ) ; return swap; } 
public boolean bookSeats ( int no ) { if ( ( this.availability ) < no ) { return false; } else { this.availability = -no; this.booked = no; this.setChanged () ; this.notifyObservers ( this.availability ) ; this.clearChanged () ; return true; } } 
@ java.lang.Override public java.lang.String toString () { java.lang.String str = "Symbol Table list:"; for ( int i = nestinglevel; ( nestinglevel ) > ( -1 ) ; i++ ) { str += ( "Nesting level " + i ) + ":\n"; str += tables[i].toString () ; } } 
private void dataInit () { for ( int i = 0; 3 > i; i++ ) { java.util.ArrayList<java.lang.Integer> tmp = new java.util.ArrayList<java.lang.Integer> () ; dataMagnetic.add ( tmp ) ; dataOrientation.add ( tmp ) ; dataAccelerate.add ( tmp ) ; dataGyroscope.add ( tmp ) ; dataGravity.add ( tmp ) ; } } 
public boolean groupRetriever () { view.setText ( "Group Members\n" ) ; try ( java.io.FileInputStream file = openFileInput ( ( ( groupName ) + "CMG" ) ) ) { java.util.Scanner in = new java.util.Scanner ( file ) ; while ( in.hasNextLine () ) { userAdded.add ( ( ( in.nextLine () ) + "\n" ) ) ; schedAdded.add ( in.nextLine () ) ; } } catch ( java.lang.Exception e ) { return false; } return true; } 
public void disconnect () throws java.io.IOException { if ( null == ( listen ) ) { java.lang.System.out.println ( "Register first!" ) ; return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( ( "disconnect " + ( id ) ) ) ) ) ; { java.lang.System.out.println ( "Disconnect failed, try again" ) ; } listen.interrupt () ; sock.close () ; } 
public void reset () { if ( isTerminated () ) { kernelsToRun.addAll ( finishedKernels ) ; finishedKernels.clear () ; } ( iteration ) ++; end = -1; terminated = ( runningThreads.isEmpty () ) && ( kernelsToRun.isEmpty () ) ; } 
public void append ( java.lang.String key, java.lang.String content ) { java.lang.String value = get ( key ) ; if ( null == value ) { put ( key, content ) ; } else { value = value + content; } logger.info ( ( ( ( ( ( "Node[" + ( node.getHashcode () ) ) + "] APPEND Key:" ) + key ) + "Value:" ) + value ) ) ; } 
public static void drawSprite ( com.badlogic.gdx.graphics.g2d.Sprite sprite, com.badlogic.gdx.graphics.g2d.Batch batch, float x, float y, float w, float h ) { if ( null != sprite ) { batch.begin () ; sprite.setPosition ( x, ( ( ( net.awhipple.zombiebird.ZBGame.SCREEN_H ) - y ) - ( sprite.getHeight () ) ) ) ; sprite.setSize ( w, h ) ; sprite.draw ( batch ) ; batch.end () ; } } 
@ java.lang.Override public java.lang.Object getSystemService ( java.lang.String name ) { if ( ( ( com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity.getWindow () ) != null ) && ( Context.LAYOUT_INFLATER_SERVICE.equals ( name ) ) ) { return droid4mizer.getSystemService ( name, com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity.getWindow () .getLayoutInflater () ) ; } else { return droid4mizer.getSystemService ( name, super.getSystemService ( name ) ) ; } } 
public boolean addRoomToBooking ( long bookingId ) { if ( ( bookingId > ( currentBookingId ) ) || ( bookingId < 1 ) ) { return false; } else if ( ( currentReservationNumber ) >= ( MAX_ROOMS ) ) { return false; } else { ++ ( currentReservationNumber ) ; reservationToBookingId.put ( currentReservationId, bookingId ) ; ++ ( currentReservationId ) ; java.lang.System.out.println ( "Add Room To Booking" ) ; return true; } } 
public void removeConnectedFlagCascade ( int trackIdx ) { for ( int i = trackIdx; ( mTracks.size () ) > i; i++ ) { if ( mTracks.get ( i ) .isConnectedPrev () ) mTracks.get ( i ) .setConnectedPrev ( false ) ; else break; } } 
public void setup ( chess.GameHistory history ) { this.history = history; this.setup () ; for ( chess.Move m : this.history.logList ) { try { this.move ( m ) ; } catch ( chess.IllegalMoveException e ) { java.lang.System.out.println ( ( "History is corrupted." + e ) ) ; } } } 
public void checkFinished () { boolean status = true; for ( int index : player.getHighlightedFiguresIndizes () ) { if ( stage.getActors () .get ( index ) .isVisible () ) { status = false; } } if ( ( ( actorActive ) == ( -1 ) ) && ( status && ( ( kickedIndex ) == ( -1 ) ) ) ) { setCheatEnabled ( false ) ; handler.sendMessage ( player.getNumber () ) ; } } 
@ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return "]" + ( ( ( ( ( ( ( ( "message[sender: " + ( data.getSender () ) ) + "; receivers: " ) + ( data.getReceivers () ) ) + "; performative: " ) + ( data.getPerformativeName () ) ) + "; content: " ) + ( data.getContent () ) ) + "; content" ) ; } 
public boolean InspectInventory ( java.lang.String object ) { for ( int col = 0; ( playerInventory.length ) > col; col++ ) { if ( playerInventory[col][0].toString () .equals ( object ) ) { return true; } } return false; } 
@ java.lang.Override public void grant ( co.cask.cdap.proto.id.EntityId entity, co.cask.cdap.proto.security.Principal principal, java.util.Set<co.cask.cdap.proto.security.Action> actions ) throws co.cask.cdap.common.FeatureDisabledException, co.cask.cdap.common.NotFoundException, co.cask.cdap.common.UnauthenticatedException, co.cask.cdap.security.spi.authorization.UnauthorizedException, java.io.IOException { co.cask.cdap.proto.security.GrantRequest grantRequest = new co.cask.cdap.proto.security.GrantRequest ( entity, principal, actions ) ; java.net.URL url = config.resolveURLV3 ( ( "/privileges/grant" + ( co.cask.cdap.client.AuthorizationClient.AUTHORIZATION_BASE ) ) ) ; co.cask.common.http.HttpRequest request = co.cask.common.http.HttpRequest.post ( url ) .withBody ( co.cask.cdap.client.AuthorizationClient.GSON.toJson ( grantRequest ) ) .build () ; executePrivilegeRequest ( entity, request ) ; } 
public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.core.model.Account account ) { io.cattle.platform.core.model.Account project = authDao.createProject ( ( ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) + ( account.getName () ) ) , null ) ; io.cattle.platform.api.auth.Identity identity = new io.cattle.platform.api.auth.Identity ( account.getExternalIdType () , account.getExternalId () ) ; authDao.createProjectMember ( project, new io.cattle.platform.iaas.api.auth.projects.Member ( identity, io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project; } 
public void setSelected ( ru.sukharev.pathtracker.utils.orm.MapPath path ) { if ( ( mObjects.contains ( selectedPath ) ) && ( ( selectedPath ) != null ) ) notifyItemChanged ( mObjects.indexOf ( selectedPath ) ) ; selectedPath = path; if ( mObjects.contains ( selectedPath ) ) notifyItemChanged ( mObjects.indexOf ( selectedPath ) ) ; } 
private static int argument ( char[] array, int cursor, java.lang.StringBuilder argument ) { for ( int i = cursor; ( array.length ) > i; i++ ) { char c = array[i]; switch ( c ) { case ' ': continue; case ',': case ' ) ': return i + 1; default: argument.append ( c ) ; } } return array.length; } 
@ java.lang.Override public double deposit ( double amount ) { if ( 0 == ( getBalance () ) ) return 0; double deposited = super.deposit ( amount ) ; double finalDeposit = against.deposit ( deposited ) ; double difference = finalDeposit - deposited; if ( difference != 0 ) super.withdraw ( difference ) ; return finalDeposit; } 
private void setMonthOnAction ( javafx.scene.layout.HBox box, java.time.LocalDateTime start ) { box.setOnMouseClicked ( new javafx.event.EventHandler<javafx.scene.input.MouseEvent> () { @java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( javafx.scene.input.MouseButton.PRIMARY ) == ( event.getButton () ) ) { createDayView ( start ) ; } else if ( ( ( event.getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline.getStart () , timeline.getEnd () ) ; } } } ) ; } 
protected static java.lang.String[] createNames ( int nameCount, java.lang.String preamble ) { if ( null == preamble ) preamble = "V"; int i = 1; java.lang.String[] n = new java.lang.String[nameCount]; while ( i <= nameCount ) { n[i] = preamble + ( i++ ) ; } return n; } 
public synchronized void start () { assert ( ShutdownState.INITIALIZED ) == ( this.state ) : "Invalid MessengerState " + ( this.state ) ; this.state = ShutdownState.STARTED; if ( edu.brown.hstore.ReconfigCoordinator.debug.val ) edu.brown.hstore.ReconfigCoordinator.LOG.debug ( "Initializing connections" ) ; this.initConnections () ; if ( edu.brown.hstore.ReconfigCoordinator.debug.val ) edu.brown.hstore.ReconfigCoordinator.LOG.debug ( "Starting listener thread" ) ; this.listener_thread.start () ; if ( ( this.local_site_id ) == 0 ) { this.initCluster () ; } this.ready_observable.notifyObservers ( this ) ; } 
public static int getFutureLinesVanished ( de.slothsoft.tetris.Board board, de.slothsoft.tetris.Stone stone, int blockY ) { int lines = 0; for ( int y = 0; ( stone.getHeightInBlocks () ) > y; y++ ) { int stoneBlocks = stone.calculateBlockCountOfLine ( y ) ; int boardBlocksCount = board.calculateBlockCountOfLine ( ( y + blockY ) ) ; if ( ( stoneBlocks + boardBlocksCount ) == ( Board.WIDTH_IN_BLOCKS ) ) { lines++; } } return lines; } 
@ java.lang.Override public void onDataChange ( com.learn.shruti.ratemyday.DataSnapshot dataSnapshot ) { for ( com.learn.shruti.ratemyday.DataSnapshot postSnapshot : dataSnapshot.getChildren () ) { com.learn.shruti.ratemyday.Model.Review r = postSnapshot.getValue ( com.learn.shruti.ratemyday.Model.Review.class ) ; if ( userEmail == ( r.employeeEmail ) ) reviewList.add ( r ) ; android.widget.Toast.makeText ( this, ( ( ( "com: " + ( r.comments ) ) + ", rate " ) + ( r.rating ) ) , Toast.LENGTH_SHORT ) .show () ; } } 
private boolean readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise.isDone () ) ) ) && ( ! ( ctx.channel () .config () .isAutoRead () ) ) ) { ctx.read () ; return true; } return false; } 
public void setLanecover ( float lanecover ) { this.lanecover = lanecover; if ( ( bms.player.beatoraja.Config.FIX_HISPEED_OFF ) != ( this.fixhispeed ) ) { hispeed = ( ( float ) ( ( ( ( 2400.0F / ( ( basebpm ) / 100 ) ) / ( gvalue ) ) * 0.6 ) * ( 1 - ( enableLanecover ? lanecover : 0 ) ) ) ) ; } } 
public int incrementNumberOfScheduledDeliveries ( long messageID ) { org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData ( messageID ) ; trackingData.addMessageStatus ( MessageStatus.SCHEDULED_TO_SEND ) ; int numOfSchedules = trackingData.numberOfScheduledDeliveries.incrementAndGet () ; if ( org.wso2.andes.kernel.OnflightMessageTracker.log.isDebugEnabled () ) { org.wso2.andes.kernel.OnflightMessageTracker.log.debug ( ( numOfSchedules + ( ( "message id= " + messageID ) + " scheduled. Pending to execute= " ) ) ) ; } return numOfSchedules; } 
public T removeLast () { if ( 0 == ( size ) ) { throw new java.util.NoSuchElementException () ; } T ret = ( ( T ) ( queue[ ( -- ( tail ) ) ] ) ) ; ( size ) --; return ret; } 
public boolean applyTop ( int id ) { boolean bool = false; int applyTotal = newsDao.applyTotalTop () ; if ( 5 >= applyTotal ) { int count = newsDao.applyTop ( id ) ; if ( count > 0 ) { bool = true; } } return bool; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { if ( ! ( ( query.equals ( lastQuery ) ) || ( query.isEmpty () ) ) ) { lastQuery = query; mArtistAdapter.clear () ; new com.bmriv.android.streamify.QueryArtistTask ( mArtistAdapter, mToast ) .execute ( query ) ; } return true; } 
public ATMServer.Server handleData () throws java.io.IOException { int i = 0; int maxConnections = 200; while ( maxConnections > ( i++ ) ) { java.net.Socket clientConnection = s.accept () ; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection, functions, clientData ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t.start () ; logger.info ( ( "New client connected, assigned thread ID #" + ( t.getId () ) ) ) ; } return this; } 
public int getNewProductIdByCategory ( java.lang.String categoryId ) { java.util.ArrayList<sg.edu.nus.iss.universitysouvenirstore.Product> p = this.getProductListByCategory ( categoryId ) ; int largest = 0; for ( sg.edu.nus.iss.universitysouvenirstore.Product product : p ) { java.lang.String splitString = product.getProductId () .split ( "/" ) ; int splitProductId = java.lang.Integer.parseInt ( splitString[1] ) ; if ( largest = splitProductId ) { largest = splitProductId; } } return 1 + largest; } 
@ android.support.annotation.MainThread private void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger.debug ( ( clearTargetState + "clearDataSource () , clearTargetState=" ) ) ; cancelResetCallback () ; mScriptExecutor.execute ( "clearDataSource () " ) ; mScriptExecutor.execute ( "clearImage () " ) ; mScriptExecutor.execute ( "clearPage () " ) ; mLastContentUriToOpen = null; mLastAssetFileDescriptorToOpen = null; mLastModeToOpen = PlayMode.NONE; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; final android.view.View toolbarContainerView = findViewById ( R.id.toolbar_container ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () .initLoader ( 0, null, this ) ; if ( null == savedInstanceState ) { refresh () ; } } 
@ java.lang.Override public java.util.List<java.lang.Integer> getSolutionProjects ( long id ) { java.util.List<java.lang.Integer> projects = new java.util.ArrayList<> () ; java.lang.String query = id + "select id from project where solutionid="; java.util.List<java.util.Map<java.lang.String, java.lang.Object>> projectsResult = jdbcTemplate.queryForList ( query ) ; for ( java.util.Map<java.lang.String, java.lang.Object> team : projectsResult ) { projects.add ( java.lang.Integer.parseInt ( team.get ( "id" ) .toString () ) ) ; } return projects; } 
@ java.lang.Override public void run () { if ( showErrorMessages ) { java.io.StringWriter errors = new java.io.StringWriter () ; e.printStackTrace ( new java.io.PrintWriter ( errors ) ) ; dialog.setErrorMessage ( ( "</p></html>" + ( errors.toString () ) ) ) ; dialog.setLocationRelativeTo ( null ) ; dialog.setModal ( true ) ; dialog.setVisible ( true ) ; } } 
private static final java.lang.String NpcIntegration () { return ": []\n\n" + ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "" + ( ( ( ( "# The NPCs to open the GUI for Race Selection. \n" + "# NPC names have to be the real names of the NPCs.\n" ) + "# The Gui will open even if the GUI is disabled in Race Secion.\n" ) + "# String List: a list of NPC names.\n" ) + "# default: [] \n" ) ) + ( npc_select_race ) ) + ": []\n\n" ) + "# The NPCs to open the GUI for Race Change Selection. \n" ) + "# NPC names have to be the real names of the NPCs.\n" ) + "# The Gui will open even if the GUI is disabled in Race Secion.\n" ) + "# String List: a list of NPC names.\n" ) + "# default: [] \n" ) + ( npc_change_race ) ) + ": []\n\n" ) + "# The NPCs to open the GUI for Class Selection. \n" ) + "# NPC names have to be the real names of the NPCs.\n" ) + "# The Gui will open even if the GUI is disabled in Class Secion.\n" ) + "# String List: a list of NPC names.\n" ) + "# default: [] \n" ) + ( npc_select_class ) ) ; } 
private void printTmpDictionary () { for ( java.util.Map.Entry<java.lang.String, java.lang.Integer> d : frequencyDictionary.entrySet () ) { java.lang.System.out.println ( ( ( d.getValue () ) + ( ( "Word " + ( d.getKey () ) ) + " has frequency " ) ) ) ; } } 
@ java.lang.Override protected void onStart () { super.onStart () ; if ( ( ! ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper.isTokenExpired ( this ) ) ) && ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper.isUserLoggedIn ( this ) ) ) { navigate ( nmct.jaspernielsmichielhein.watchfriends.view.HomeFragment.newInstance () , "homeFragment" ) ; } else { nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper.logUserOff ( this ) ; com.facebook.login.LoginManager.getInstance () .logOut () ; showLoginActivity () ; } } 
private Player.Solution buildRandomSolution ( Player.GameState gs, Player.AI opAI, Player.ScoreEvaluation eval ) { Player.Solution solution = new Player.Solution ( Player.MagicNumbers.SIMULATION_DEPTH ) ; Player.GameState newGs = gs.copy () ; for ( int i = 0; ( Player.MagicNumbers.SIMULATION_DEPTH ) > i; i++ ) { solution.actions[i] = getRandomAction ( gs ) ; Player.GameEngine.applyActionWithoutCopy ( newGs, solution.actions[i], opAI.compute ( gs ) ) ; solution.score += eval.getGameStateScore ( gs, i ) ; } return solution; } 
public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode, final java.util.Set<org.egov.collection.integration.models.BillReceiptInfo> billReceipts ) { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( null == billingService ) return false; else try { billingService.updateReceiptDetails ( billReceipts ) ; return true; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!"; org.egov.collection.service.ReceiptHeaderService.LOGGER.error ( errMsg, e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg, e ) ; } } 
private source.Node<T> find ( T value, source.Node<T> node ) { if ( null == node ) { return null; } int comparison = value.compareTo ( node.value ) ; if ( comparison == 0 ) { return node; } else if ( comparison > 0 ) { return find ( value, node.rightChild ) ; } else { return find ( value, node.leftChild ) ; } } 
@ java.lang.Override public void onChanged () { super.onChanged () ; int childCount = getChildCount () ; for ( int i = childCount; ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) > i; ++i ) { addNextCard () ; } for ( int i = 0; i < ( getChildCount () ) ; ++i ) { positionItem ( i ) ; } } 
public void addKeyListeners () { android.widget.Toast.makeText ( context, ( ( dji.keysdk.KeyManager.getInstance () ) + ( "Adding Key Listerners" + " " ) ) , Toast.LENGTH_SHORT ) .show () ; if ( ( dji.keysdk.KeyManager.getInstance () ) != null ) { removeKeyListeners () ; dji.keysdk.DJIKey keyC1 = dji.keysdk.RemoteControllerKey.create ( RemoteControllerKey.CUSTOM_BUTTON_1 ) ; dji.keysdk.KeyManager.getInstance () .addListener ( keyC1, c1KeyListener ) ; dji.keysdk.KeyManager.getInstance () .addListener ( dji.keysdk.RemoteControllerKey.create ( RemoteControllerKey.CUSTOM_BUTTON_2 ) , c2KeyListener ) ; } } 
public boolean connectWith ( final com.kcht.parking.charge.timeline.Period another ) { boolean isLiterallyConnected = ( ( this.startMinute ) == ( another.endMinute ) ) && ( ( ( ( this.endHour ) == ( another.startHour ) ) && ( ( this.endMinute ) == ( another.startMinute ) ) ) && ( ( this.startHour ) == ( another.endHour ) ) ) ; final boolean isTimeGapConnected = ( ( this.timeGap () ) + ( another.timeGap () ) ) == 24; return isLiterallyConnected && isTimeGapConnected; } 
public void setCreepFactor ( boolean creepFactor ) { if ( ( ( maxAge ) <= ( baeAge ) ) && ( ( minAge ) >= ( baeAge ) ) ) { creepFactor = true; } else { creepFactor = false; } this.creepFactor = creepFactor; } 
public java.lang.String[] removeEntry ( java.lang.String[] arrayToRemoveFrom, int entryNumber ) { java.lang.String[] result = new java.lang.String[ ( arrayToRemoveFrom.length ) - 1]; int tmp = 0; for ( int i = 0; ( result.length ) > i; i++ ) { if ( i == entryNumber ) { tmp = 1; } else { result[i] = arrayToRemoveFrom[ ( i + tmp ) ]; } } return result; } 
public void updateState ( java.lang.String key, java.lang.Object value ) { if ( ( ! ( value.equals ( "" ) ) ) && ( ( key.equals ( "LoginError" ) ) == true ) ) { displayErrorMessage ( mMessages.getString ( ( ( java.lang.String ) ( value ) ) ) ) ; } } 
private void process ( long startTS, backtype.storm.tuple.Tuple t ) { ( counter ) ++; java.util.List<backtype.storm.tuple.Values> result = f.process ( t ) ; if ( null != result ) for ( backtype.storm.tuple.Values out : result ) { emit ( t, out ) ; if ( keepStats ) { countStat.increase ( 1 ) ; } } if ( keepStats ) { costStat.add ( ( ( java.lang.System.nanoTime () ) - startTS ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( getApplication () , com.lgq.fruitgrower.view.act.PublicActivity.class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle.putBoolean ( "farmer", false ) ; intent.putExtras ( bundle ) ; startActivityForResult ( intent, 1 ) ; overridePendingTransition ( R.anim.in_from_down, R.anim.out_to_up ) ; if ( ( android.view.View.VISIBLE ) == ( rela_layout.getVisibility () ) ) { rela_layout.setVisibility ( View.GONE ) ; } } 
public void setIsAI ( boolean isAI ) { if ( ( !isAI ) && ( this.isAI ) ) { com.dyllongagnier.triad.gui.controller.Players.resetAI () ; } boolean isDiff = isAI; this.isAI = isAI; if ( isDiff && ( this.gameInProgress () ) ) this.takeTurn ( this.currentGame ) ; } 
private android.widget.Button getAttendeeNameButton () { android.widget.Button attendeeNameButton = null; if ( null != ( getContext () ) ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) .findViewById ( R.id.attendeeNameButton ) ) ) ; } return attendeeNameButton; } 
@ java.lang.Override public void taskCompleted ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus status, java.lang.String message, org.json.JSONObject json ) { removeLoadingSpinner () ; if ( ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus.LOGGED_OUT ) == status ) { forceLogout ( message ) ; return; } if ( ( status == ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus.PASSED ) ) && ( responseParser.parseLogin ( json ) ) ) { delegate.loginPassed ( uk.ac.ncl.csc2022.t14.bankingapp.Utilities.DataStore.sharedInstance () .getCurrentUser () ) ; } else { message = responseParser.parseErrorOrDefault ( message ) ; delegate.loginFailed ( message ) ; } } 
public static org.eclipse.core.resources.IFile getFile ( org.eclipse.jdt.core.IJavaElement element ) { org.eclipse.core.resources.IResource res = null; try { while ( null == ( res = element.getCorrespondingResource () ) ) element = element.getParent () ; return ( ( org.eclipse.core.resources.IFile ) ( res ) ) ; } catch ( org.eclipse.jdt.core.JavaModelException e ) { org.eclipse.etools.Activator.logError ( "Failed finding corresponding resource", e ) ; return null; } } 
@ java.lang.Override public void delete ( com.flxn.dao.model.Atribute object, int userid ) { if ( ( existOwner ( object.getId () , userid ) ) && ( exist ( object ) ) ) { jdbcTemplate.update ( com.flxn.dao.impl.DELETE_ATRIBUTE_BY_ID, new java.lang.Object[] { object.getId () } ) ; } else { throw new java.lang.UnsupportedOperationException () ; } } 
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { java.lang.String fileName = this.fileUpload.getFilename () ; if ( ( fileName.isEmpty () ) || ( fileName == null ) ) { setStatusIcon ( CommonImages.INSTANCE.error () , true ) ; errorPanel.setErrorMessage ( "No file Selected", "Please select a file and then press GO" ) ; return; } if ( this.projection.getValue () ) { form.setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS_PROJECTION ) ; } else { form.setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS ) ; } this.form.submit () ; } 
protected java.util.List<java.lang.String> splitQueryString ( java.lang.String query ) { int index = 0; final int qLen = query.length () ; java.util.List<java.lang.String> blocks = new java.util.ArrayList<java.lang.String> () ; while ( qLen > ( index + ( seqSize ) ) ) { blocks.add ( query.substring ( index, ( index + ( seqSize ) ) ) ) ; index += window; } return blocks; } 
@ java.lang.Override public value.Value mul ( value.Value other ) { if ( ( ! ( other.isSet () ) ) || ( ! ( isSet () ) ) ) { return new value.IntegerValue ( 0 ) ; } return new value.IntegerValue ( ( ( value ) * ( ( ( value.IntegerValue ) ( other ) ) .getValue () ) ) ) ; } 
public static android.graphics.Bitmap resizeImage ( android.graphics.Bitmap unscaledBitmap, int desiredWidth, int desiredHeight ) throws java.io.IOException { try { if ( ! ( ( ( unscaledBitmap.getHeight () ) <= desiredHeight ) && ( ( unscaledBitmap.getWidth () ) <= desiredWidth ) ) ) { android.graphics.Bitmap scaledBitmap = com.scanlibrary.ScalingUtilities.createScaledBitmap ( unscaledBitmap, desiredWidth, desiredHeight, ScalingLogic.FIT ) ; unscaledBitmap.recycle () ; return scaledBitmap; } else { return unscaledBitmap; } } catch ( java.lang.Throwable e ) { throw new java.io.IOException ( e ) ; } } 
public int find ( int x, int[] data, int start, int end ) { if ( start < end ) for ( int i = start; i < end; i++ ) if ( ( data[i] ) == x ) return i; return -1; } 
@ java.lang.Override public void onCreate () { super.onCreate () ; com.arsalan.garage.GarageApp.sGarageApp = this; if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.GINGERBREAD ) ) && ( ( com.arsalan.garage.utils.FlavorConstants.BUILD_TYPE ) == ( com.arsalan.garage.utils.AppConstants.BUILD_TYPE_DEVELOPMENT ) ) ) { android.os.StrictMode.setThreadPolicy ( new android.os.StrictMode.ThreadPolicy.Builder () .detectAll () .penaltyLog () .build () ) ; android.os.StrictMode.setVmPolicy ( new android.os.StrictMode.VmPolicy.Builder () .detectAll () .penaltyDeath () .build () ) ; } initImageLoader ( this ) ; initLoaderHandler ( this ) ; } 
public void print ( int copies ) { java.lang.String onStatus = ""; if ( isOn ) onStatus = " is on!"; else onStatus = " is off!"; java.lang.String textToPrint = onStatus + ( modelNumber ) ; while ( ( copies > 0 ) && ( ! ( paperTray.isEmpty () ) ) ) { java.lang.System.out.println ( textToPrint ) ; copies--; paperTray.usePage () ; } if ( paperTray.isEmpty () ) java.lang.System.out.println ( "Load more paper" ) ; } 
@ java.lang.Override public team379.pathfinding.PathFindResult move ( battlecode.common.RobotController rc ) throws java.lang.Exception { if ( null == ( compassDirection ) ) { calculateNextTarget ( true ) ; } else { int distanceSquared = getTarget () .distanceSquaredTo ( rc.getLocation () ) ; double distance = java.lang.Math.sqrt ( distanceSquared ) ; if ( distance < ( team379.pathfinding.Orbiter.DISTANCE_THRESHOLD ) ) { calculateNextTarget ( true ) ; } } return super.move ( rc ) ; } 
@ java.lang.Override public void onConnected ( @android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest.setInterval ( 1000 ) ; mLocationRequest.setFastestInterval ( 1000 ) ; android.widget.Toast.makeText ( this, "here1", Toast.LENGTH_LONG ) .show () ; mLocationRequest.setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; if ( ( android.content.pm.PackageManager.PERMISSION_GRANTED ) == ( android.support.v4.content.ContextCompat.checkSelfPermission ( this, Manifest.permission.ACCESS_FINE_LOCATION ) ) ) { LocationServices.FusedLocationApi.requestLocationUpdates ( mGoogleApiClient, mLocationRequest, this ) ; } } 
@ org.bukkit.event.EventHandler public void onSign ( org.bukkit.event.block.SignChangeEvent e ) { if ( e.getLine ( 0 ) .equalsIgnoreCase ( "[atm]" ) ) { e.setLine ( 0, ( "== ATM ==" + ( org.bukkit.ChatColor.WHITE ) ) ) ; e.setLine ( 1, ( ( ( ( org.bukkit.ChatColor.GREEN ) + "> " ) + ( org.bukkit.ChatColor.WHITE ) ) + "Withdraw" ) ) ; e.setLine ( 2, ( ( org.bukkit.ChatColor.BLACK ) + "Deposit" ) ) ; e.setLine ( 3, ( ( org.bukkit.ChatColor.DARK_GRAY ) + "Click for Balance" ) ) ; } } 
private void changes ( java.util.List<org.jasr.currentcy.domain.Sample> changes, java.util.List<org.jasr.currentcy.domain.Sample> samples, org.jasr.currentcy.domain.Currencies currency ) { java.util.List<org.jasr.currentcy.domain.Sample> snapshots = samplerDAO.getSnapshot ( currency ) ; for ( org.jasr.currentcy.domain.Sample sample1 : snapshots ) { boolean result = false; for ( org.jasr.currentcy.domain.Sample sample2 : samples ) { result = ( sample1.equals ( sample2 ) ) || result; } if ( !result ) changes.add ( sample1 ) ; } } 
@ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent e ) { if ( 0 == ( descriptionText.getText () .length () ) ) { commentStatus = org.talend.metadata.managment.ui.wizard.PropertiesWizardPage.createStatus ( IStatus.WARNING, org.talend.metadata.managment.ui.i18n.Messages.getString ( "PropertiesWizardPage.EmptyDescWarning" ) ) ; } else { commentStatus = org.talend.metadata.managment.ui.wizard.PropertiesWizardPage.createOkStatus () ; } property.setDescription ( org.apache.commons.lang.StringUtils.trimToNull ( descriptionText.getText () ) ) ; property.setModificationDate ( new java.util.Date () ) ; updatePageStatus () ; } 
public void writeTo ( final java.io.OutputStream outStream ) throws java.io.IOException { if ( ( ( cancellationHandler ) != null ) || ( ( progressHandler ) != null ) ) { writeWithNotify ( outStream ) ; } else { outStream.write ( this.b, this.off, this.len ) ; } outStream.flush () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html", method = org.springframework.web.bind.annotation.RequestMethod.GET, produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id, @org.springframework.web.bind.annotation.PathVariable ( value = "format" ) java.lang.String format ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService.findById ( id ) ; if ( ( datatype.getScope () .equals ( SCOPE.HL7STANDARD ) ) && ( datatype != null ) ) { return exportService.exportDataModelAsHtml ( datatype ) ; } return null; } 
private static int getNumberOfWeeksOfYear ( int year ) { com.timodenk.gswnstupla.StuplaControl.calendar.set ( java.util.Calendar.YEAR, year ) ; com.timodenk.gswnstupla.StuplaControl.calendar.set ( java.util.Calendar.MONTH, java.util.Calendar.DECEMBER ) ; com.timodenk.gswnstupla.StuplaControl.calendar.set ( java.util.Calendar.DAY_OF_MONTH, 31 ) ; int ordinalDay = com.timodenk.gswnstupla.StuplaControl.calendar.get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( com.timodenk.gswnstupla.StuplaControl.calendar.get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1; return ( 10 + ( ordinalDay - weekDay ) ) / 7; } 
public void actionPerformed ( java.awt.event.ActionEvent aEvt ) { java.lang.String tag = org.broad.igv.ui.util.MessageUtils.showInputDialog ( "Enter tag", renderOptions.getGroupByTag () ) ; if ( ( ( tag.trim () .length () ) > 0 ) && ( tag != null ) ) { renderOptions.setGroupByTag ( tag ) ; org.broad.igv.ui.IGV.getInstance () .groupAlignmentTracks ( org.broad.igv.sam.AlignmentTrack.GroupOption.TAG, tag ) ; org.broad.igv.sam.AlignmentTrack.refresh () ; } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView<?> parent, android.view.View view, int pos, long id ) { android.util.Log.d ( ru.chernysh.plasmatorchsetup.MainActivity.LOG_TAG, ( pos + "Selection in model spinner with pos = " ) ) ; ru.chernysh.plasmatorchsetup.CustomAdapter adapter = ( ( ru.chernysh.plasmatorchsetup.CustomAdapter ) ( parent.getAdapter () ) ) ; if ( adapter != null ) { adapter.setSelected () ; int selectedKey = adapter.getKey ( pos ) ; } } 
public void EntityDeathHelper ( org.bukkit.event.entity.EntityDeathEvent event, int damage, java.lang.Double droprate ) { java.lang.Double dropchance = prng.nextDouble () ; org.bukkit.entity.Player killer = event.getEntity () .getKiller () ; if ( droprate <= dropchance ) { return; } if ( ( plugin.configFile.getBoolean ( "mobpkonly", true ) ) && ( ( killer == null ) || ( ! ( killer.hasPermission ( "playerheads.canbeheadmob" ) ) ) ) ) { return; } event.getDrops () .add ( org.shininet.bukkit.playerheads.Skull.getItemStack ( damage ) ) ; } 
private void parseCoordinateMetadata ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { jp.nextToken () ; jp.nextToken () ; jp.nextToken () ; if ( ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) == ( jp.getCurrentToken () ) ) { } else { jp.nextToken () ; } jp.nextToken () ; } 
private int getInternalIndexOfObjectAt ( int index ) throws java.lang.IndexOutOfBoundsException { int nbObjectsSoFar = 0; int pos = 0; while ( index >= nbObjectsSoFar ) { jumpingalien.model.Characters currentObject = objects.get ( pos ) ; if ( ( currentObject != null ) && ( ( objects.indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar++; pos++; } return pos - 1; } 
@ org.junit.Test public void testUnmarshal () { java.lang.String text = "\n</converterTest>" + ( "<converterTest>\n " + ( xmlLine ) ) ; org.zetool.components.property.converter.AbstractConverterTest.DataHolder dh = ( ( org.zetool.components.property.converter.AbstractConverterTest.DataHolder ) ( xstream.fromXML ( text ) ) ) ; org.junit.Assert.assertThat ( dh.property, org.hamcrest.CoreMatchers.is ( org.zetool.components.property.converter.AbstractConverterTest.equalTo ( property ) ) ) ; } 
@ java.lang.Override public java.lang.Object getNewValue () { if ( ( dataSource ) != null ) { return dataSource; } try { long id = ( ( java.lang.Long ) ( super.getOldValue () ) ) ; dataSource = org.sleuthkit.autopsy.casemodule.Case.getCurrentCase () .getSleuthkitCase () .getContentById ( id ) ; return dataSource; } catch ( java.lang.IllegalStateException | org.sleuthkit.datamodel.TskCoreException ex ) { org.sleuthkit.autopsy.casemodule.events.DataSourceAddedEvent.logger.log ( java.util.logging.Level.SEVERE, "Error doing lazy load for remote event", ex ) ; return null; } } 
public void initialise () { com.example.jackherrer.hang_on.gameplay gameplayclass = new com.example.jackherrer.hang_on.gameplay () ; android.content.SharedPreferences settings = getSharedPreferences ( "prefs_settings", 0 ) ; gameplayclass.lives = settings.getInt ( "lives", 7 ) ; android.widget.TextView lives_view = ( ( android.widget.TextView ) ( findViewById ( R.id.in_game_lives ) ) ) ; lives_view.setText ( ( ( gameplayclass.lives ) + "Lives: " ) ) ; gameplayclass.initiate_blank_spaces ( this ) ; } 
public void setEndTime ( java.time.LocalTime end_time2 ) { if ( null == end_time2 ) { java.time.LocalTime localtime = java.time.LocalTime.MAX; end_time_string = ""; } else { end_time_string = end_time2.format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) .toString () ; value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; end_time = end_time2; } } 
public static boolean checkWinX ( char dot ) { for ( int i = -1; 1 >= i; i++ ) { for ( int j = -1; j <= 1; j++ ) { if ( ( j == 0 ) && ( i == 0 ) ) continue; if ( TicTacToe.checkLine ( TicTacToe.lastX, TicTacToe.lastY, i, j, TicTacToe.ROW_FOR_WIN, dot ) ) return true; } } return false; } 
protected static void addMethodUse ( java.util.Set<com.github.juanmf.java2plant.structure.Relation> relations, java.lang.Class<?> fromType, java.lang.Class<?> toType, java.lang.reflect.Type fromParameterType, java.lang.reflect.Method m ) { java.lang.String name = " () " + ( com.github.juanmf.java2plant.util.TypesHelper.getSimpleName ( m.getName () ) ) ; com.github.juanmf.java2plant.Parser.addUse ( relations, fromType, toType, fromParameterType, m, name ) ; } 
public static int code ( java.lang.String format ) { try { int index = ygoprocardmaker.enumerate.CardFormat.FORMATS.indexOf ( format ) ; if ( ( -1 ) == index ) { throw new java.lang.IllegalArgumentException () ; } return index; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException () ; } } 
@ play.db.jpa.Transactional public static controllers.Result index () { models.Admin admin = controllers.SGDB.getAdmin ( session () .get ( "login" ) ) ; if ( null != admin ) { ok ( index.render ( admin ) ) ; } return controllers.Application.home () ; } 
void changeMaxRange () { try { if ( ( minRange ) > ( java.lang.Float.valueOf ( wRangeMaxValue.getText () ) ) ) alertBackground ( wRangeMaxValue, true ) ; else { alertBackground ( wRangeMaxValue, false ) ; maxRange = java.lang.Float.valueOf ( wRangeMaxValue.getText () ) ; trainPerceptron () ; } } catch ( java.lang.NumberFormatException e ) { alertBackground ( wRangeMaxValue, true ) ; maxRange = 0.5F; } } 
protected void setMetaData () { new us.nineworlds.serenity.core.services.WatchedVideoAsyncTask () .execute ( videoId ) ; boolean showOSD = preferences.getBoolean ( "internal_player_osd", true ) ; if ( showOSD ) { mediaController.show ( SerenitySurfaceViewVideoActivity.CONTROLLER_DELAY ) ; } if ( null != ( progressReportingHandler ) ) { progressReportingHandler.postDelayed ( progressRunnable, 5000 ) ; } } 
@ java.lang.Override public void onDelete () { if ( com.google.gwt.user.client.Window.confirm ( ( " ?" + ( "Are you sure you want to delete " + ( candidate.getName () ) ) ) ) ) { dispatch.execute ( adminService.removeCandidate ( candidate.getName () ) , new com.arcbees.bourseje.client.AdminRestCallback<java.lang.Void> () { @java.lang.Override public void onSuccess ( java.lang.Void result ) { removeFromParentSlot () ; } } ) ; } } 
protected static java.lang.String getRoomName ( java.util.ArrayList<main.java.com.marist.mscs721.Room> rooms ) { boolean inputCheck = false; java.lang.String test = ""; while ( !inputCheck ) { java.lang.System.out.println ( "Room Name?" ) ; test = main.java.com.marist.mscs721.RoomScheduler.keyboard.next () ; if ( ( -1 ) == ( main.java.com.marist.mscs721.RoomScheduler.findRoomIndex ( rooms, test ) ) ) { java.lang.System.out.println ( "ERROR: Invalid room. Please input a room that is on the room list." ) ; } else { inputCheck = false; } } return test; } 
public java.util.List<taxiservice.payments.models.PaymentsHistory> getPaymentsForClients ( long clientId ) throws taxiservice.payments.exceptions.NonExistingClientException { taxiservice.payments.models.Wallet clientWallet = getClientWallet ( clientId ) ; openSession () ; java.lang.String hql = ( clientWallet.getWalletid () ) + "FROM PaymentsHistory WHERE wallet ="; org.hibernate.Query query = session.createQuery ( hql ) ; java.util.List<taxiservice.payments.models.PaymentsHistory> result = query.list () ; closeSession () ; return result; } 
private void extract ( com.griaule.grfingerjava.FingerprintImage fingerprintImage ) { try { template = matchingContext.extract ( fingerprintImage ) ; if ( null != ( fingerprintingComponent ) ) { fingerprintingComponent.showQuality ( template.getQuality () ) ; fingerprintingComponent.showImage ( fingerprintImage ) ; } } catch ( com.griaule.grfingerjava.GrFingerJavaException e ) { showMessage ( e.getMessage () ) ; } } 
public void increaseImage ( double increasment ) { if ( 100 >= ( ( this.getAirline () .getImage () ) + increasment ) ) { this.getAirline () .setImage ( ( ( this.getAirline () .getImage () ) + ( increasment * ( this.getEfficiency () ) ) ) ) ; } else { this.getAirline () .setImage ( 100.0 ) ; } } 
@ java.lang.Override public java.lang.Object retrieve ( sif3.common.model.SIFZone zone, sif3.common.model.SIFContext context, sif3.common.model.PagingInfo pagingInfo, sif3.common.model.RequestMetadata metadata ) throws sif3.common.exception.PersistenceException, sif3.common.exception.UnsupportedQueryException { logger.debug ( ( metadata + ( ( "Retrieve Students for " + ( getZoneAndContext ( zone, context ) ) ) + " and RequestMetadata = " ) ) ) ; java.util.ArrayList<sif.dd.au30.model.StudentPersonalType> studentList = fetchStudents ( systemic.sif3.demo.rest.provider.StudentPersonalProvider.students, pagingInfo ) ; sif.dd.au30.model.StudentCollectionType studentCollection = dmObjectFactory.createStudentCollectionType () ; studentCollection.getStudentPersonal () .addAll ( studentList ) ; return studentCollection; } 
void dependentStopped () { assert ! ( java.lang.Thread.holdsLock ( this ) ) ; final java.util.ArrayList<java.lang.Runnable> tasks; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( 0 != ( -- ( runningDependents ) ) ) { return; } tasks = new java.util.ArrayList<java.lang.Runnable> () ; transition ( tasks ) ; asyncTasks += tasks.size () ; updateStabilityState ( leavingRestState ) ; } doExecute ( tasks ) ; } 
public static me.enerccio.sp.types.PythonObject getGlobal ( java.lang.String variable ) { if ( 0 == ( PythonInterpreter.interpreter.get () .currentFrame.size () ) ) return PythonRuntime.runtime.getGlobals () .doGet ( variable ) ; return PythonInterpreter.interpreter.get () .environment () .get ( variable, true, false ) ; } 
public void onClick ( android.view.View v ) { if ( true == ( item.isLost ) ) { mDatabase.getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) .child ( "isLost" ) .setValue ( false ) ; mDatabase.getReference ( "lost_items/" ) .child ( item.devAddress ) .removeValue () ; item.isLost = false; } else { android.widget.Toast.makeText ( getApplicationContext () , "잃어버린 물건이 아닙니다!!", Toast.LENGTH_LONG ) .show () ; } } 
public static java.lang.String timestampToDate ( java.lang.String timestamp ) { java.lang.Long unixtimestamp = java.lang.Long.parseLong ( timestamp ) ; android.util.Log.d ( "Debug", ( unixtimestamp + "TimeStamp: " ) ) ; if ( "4294967295".equals ( unixtimestamp ) ) { return ""; } java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd-HH:mm" ) ; java.util.Date date = new java.util.Date ( ( unixtimestamp * 1000 ) ) ; return new java.text.SimpleDateFormat ( "dd/MM/yyyy - HH:mm" ) .format ( date ) ; } 
public org.exist.xquery.functions.array.Sequence tail () throws org.exist.xquery.functions.array.XPathException { if ( 2 == ( vector.length () ) ) { final org.exist.xquery.functions.array.Sequence tail = vector.nth ( 1 ) ; return ( tail.getItemType () ) == ( Type.ARRAY ) ? tail : new org.exist.xquery.functions.array.ArrayType ( context, tail ) ; } return new org.exist.xquery.functions.array.ArrayType ( context, org.exist.xquery.functions.array.RT.subvec ( vector, 1, vector.length () ) ) ; } 
public view.ISprite[][] digDown ( int colonne, int ligne, view.ISprite sprite ) { this.sprites[colonne][ligne] = new view.Sprite ( image, ( ( SET_SIZE ) * colonne ) , ( ligne * ( SET_SIZE ) ) ) ; sprite.setY ( ( ( sprite.getY () ) + 16 ) ) ; this.sprites[colonne][ ( ligne + 1 ) ] = sprite; return this.sprites; } 
private void assembleTaskAndSave () { task.setName ( nameEdit.getText () .toString () ) ; task.setDescription ( descriptionEdit.getText () .toString () ) ; if ( null != ( lastSelectedTag ) ) { task.setTagId ( lastSelectedTag.getId () ) ; } else { task.setTagId ( null ) ; } if ( canComplete () ) { saveTask () ; finishAndStartRightActivity () ; } } 
@ java.lang.Override public void onPointerCancel ( playn.core.Pointer.Event event ) { if ( ( ! ( untransing ) ) || ( ( start ) == 0 ) ) return; _udir.update ( _cur.screen, _prev.screen, 0 ) ; _udir.finish ( _cur.screen, _prev.screen ) ; _prev.screen.layer.setVisible ( false ) ; clear () ; } 
@ java.lang.Override public void onFinish ( java.lang.Boolean success ) { if ( ( ( getTitle () ) != null ) && ( parentFragment.isAdded () ) ) { parentFragment.setPageSaved ( ( !success ) ) ; org.wikipedia.util.FeedbackUtil.showMessage ( getActivity () , getActivity () .getString ( ( success ? R.string.snackbar_saved_page_format : R.string.snackbar_saved_page_missing_images ) , getTitle () ) ) ; } } 
public void paintComponent ( java.awt.Graphics g ) { currentPos = new int[ ( kb.getAttributeList () .size () ) - 1]; for ( int i = 0; ( currentPos.length ) > i; i++ ) currentPos[i] = 0; super.paintComponent ( g ) ; if ( ( dt ) != null ) { drawTree ( g, dt ) ; } } 
public java.lang.String getUserIdBySpecificIdAndDomainId ( org.silverpeas.core.admin.domain.DomainDriverManager ddManager, java.lang.String sSpecificId, java.lang.String sDomainId ) throws org.silverpeas.core.admin.service.AdminException { try { ddManager.getOrganizationSchema () ; org.silverpeas.core.admin.persistence.UserRow ur = ddManager.getOrganization () .user.getUserBySpecificId ( idAsInt ( sDomainId ) , sSpecificId ) ; return idAsString ( ur.id ) ; } catch ( java.lang.Exception e ) { throw new org.silverpeas.core.admin.service.AdminException ( failureOnGetting ( ( sSpecificId + "user with specific id " ) , ( "in domain " + sDomainId ) ) , e ) ; } finally { ddManager.releaseOrganizationSchema () ; } } 
private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection<org.arquillian.cube.docker.impl.client.config.PortBinding> portBindings = cubeContainer.getPortBindings () ; if ( null != portBindings ) { for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding.setBound ( randomPrivatePort ) ; } } } 
@ java.lang.Override public java.lang.String decode ( java.lang.String plain ) { java.lang.String decrypted = ""; for ( char letter : plain.toUpperCase () .toCharArray () ) { int index = com.soesec.util.Alphabet.IndexOf ( letter ) ; if ( 0 > index ) { decrypted += letter; continue; } int i = ( index - ( info.getRightShift () ) ) % 26; decrypted += com.soesec.util.Alphabet.At ( i ) ; } return decrypted; } 
private final void drawGrid ( android.graphics.Canvas canvas, int offset, int min ) { for ( int i = 0; ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) > i; i++ ) { int itimeso = i * offset; canvas.drawLine ( 0, itimeso, min, itimeso, com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas.drawLine ( itimeso, 0, itimeso, min, com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } } 
public void reset () { bufferPos = 0; f0 = 0L; t0 = 0L; t1 = 0L; chainValue = null; if ( null != ( key ) ) { org.bouncycastle.util.Arrays.fill ( buffer, ( ( byte ) ( 0 ) ) ) ; java.lang.System.arraycopy ( key, 0, buffer, 0, key.length ) ; bufferPos = org.bouncycastle.crypto.digests.Blake2bDigest.BLOCK_LENGTH_BYTES; } init () ; } 
java.lang.String prepareLdapAuth () { java.lang.String ldapAuth = "true"; java.lang.String confLdapAuth = env.getProperty ( "ldap.authentication" ) ; if ( ( ! ( confLdapAuth.equals ( "" ) ) ) && ( confLdapAuth != null ) ) { ldapAuth = confLdapAuth; } if ( ( ! ( ldapAuth.equalsIgnoreCase ( "true" ) ) ) && ( ! ( ldapAuth.equalsIgnoreCase ( "false" ) ) ) ) { ldapAuth = "true"; } return ldapAuth; } 
public void setDevPanStatusPowerConnection ( boolean powerOn ) { if ( ( devPanStatusPowerOn ) == powerOn ) { return; } devPanStatusPowerOn = powerOn; sensorConnectionStatus.setText ( ( devPanStatusPowerOn ? R.string.sensor_connection_on : R.string.sensor_connection_off ) ) ; if ( ( ( currentFragment ) == ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.MULTIPLE.ordinal () ) ) && ( !powerOn ) ) { setPage ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.DEVICE_STATUS ) ; } } 
private int getYLocation ( int position, com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left: case Right: return ( ( int ) ( 0.5 * ( cellSize ) ) ) + ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) ; case Top: return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } 
private void friendName () { waitSentence ( "\"Is this your friend\"?" ) ; while ( nameFriend ) { waitSentence ( "\"What is his name?\"" ) ; java.lang.String userInput = readKeyboardInput.nextLine () ; waitSentence ( ( "?\"" + ( "\"His name is " + userInput ) ) ) ; userInput = readKeyboardInput.nextLine () ; if ( userInput.equalsIgnoreCase ( "Yes" ) ) { waitSentence ( "\"Thats a nice name too\"" ) ; name = false; } } } 
public domain.Coordenada getEsquerra ( int color ) throws java.lang.Exception { int x = 1 + ( this.x ) ; int y; if ( color == 0 ) y = ( this.y ) - 1; else y = ( this.y ) + 1; return new domain.Coordenada ( x, y ) ; } 
public java.util.List<java.lang.Double> prodOfLists ( java.util.List<java.lang.Double> xList, java.util.List<java.lang.Double> yList ) { java.util.List<java.lang.Double> resList = new java.util.ArrayList<java.lang.Double> () ; int size = xList.size () ; for ( int i = 0; size > i; i++ ) { resList.set ( i, ( ( xList.get ( i ) ) * ( yList.get ( i ) ) ) ) ; } return resList; } 
@ java.lang.Override public void onActionFailure ( int action, @android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response, java.lang.String message ) { if ( ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) == action ) { if ( ( response != null ) && ( ( response.getResultCode () ) == 10 ) ) { mUIDAdapter.info () ; mNotificationBar.showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar.showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) { } } 
public static java.util.List<java.lang.Integer> shuffle ( java.util.List<?> list, int count ) { java.util.List<java.lang.Integer> listClone = new java.util.ArrayList<> () ; for ( int i = 0; count > i; ++i ) { listClone.add ( i ) ; } if ( ( list.size () ) == count ) { return listClone; } java.util.Collections.shuffle ( listClone ) ; return listClone.subList ( 0, count ) ; } 
@ java.lang.Override public java.io.InputStream newInputStream ( nl.esciencecenter.xenon.files.Path path ) throws nl.esciencecenter.xenon.XenonException { java.lang.String filePath = toFilePath ( path.toString () ) ; assertRegularFileExists ( path ) ; org.apache.commons.httpclient.HttpClient client = getFileSystemByPath ( path ) ; org.apache.commons.httpclient.methods.GetMethod method = new org.apache.commons.httpclient.methods.GetMethod ( filePath ) ; try { client.executeMethod ( method ) ; java.io.InputStream stream = method.getResponseBodyAsStream () ; return stream; } catch ( java.io.IOException e ) { throw new nl.esciencecenter.xenon.XenonException ( adaptor.getName () , ( filePath + "Could not open inputstream to " ) , e ) ; } } 
@ java.lang.Override public void onComplete ( @android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task ) { android.util.Log.d ( com.glocoders.hangout.database.FirebaseHelper.TAG, ( ( task.isSuccessful () ) + "signInWithEmail:onComplete:" ) ) ; if ( ! ( task.isSuccessful () ) ) { android.util.Log.w ( com.glocoders.hangout.database.FirebaseHelper.TAG, "signInWithEmail:failed", task.getException () ) ; code = 1; } else { code = -1; } } 
private datastructures.BugSummary handleBugSummary () { datastructures.BugSummary summary = new datastructures.BugSummary () ; try { while ( reader.hasNext () ) { if ( ( javax.xml.stream.events.XMLEvent.START_ELEMENT ) == ( reader.next () ) ) { if ( reader.getLocalName () .equals ( Constants.BUG_CATEGORY ) ) { summary.add ( handleBugCategory () ) ; } } else { if ( isEndElement ( Constants.BUG_SUMMARY ) ) { break; } } } } catch ( java.lang.Exception e ) { e.printStackTrace () ; } return summary; } 
static boofcv.alg.feature.detect.squares.SquareNode pickNot ( boofcv.alg.feature.detect.squares.SquareNode target, boofcv.alg.feature.detect.squares.SquareNode child0, boofcv.alg.feature.detect.squares.SquareNode child1 ) { for ( int i = 0; 4 > i; i++ ) { boofcv.alg.feature.detect.squares.SquareEdge e = target.edges[i]; boofcv.alg.feature.detect.squares.SquareNode c = e.destination ( target ) ; if ( ( c != child0 ) && ( c != child1 ) ) return c; } throw new java.lang.RuntimeException ( "There was no odd one out some how" ) ; } 
@ java.lang.Override public D getDef ( org.auraframework.def.DefDescriptor<D> descriptor ) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.system.Source<D> source = sourceFactory.getSource ( descriptor ) ; if ( ( source.exists () ) && ( source != null ) ) { descriptor = source.getDescriptor () ; org.auraframework.system.Parser<D> parser = org.auraframework.impl.parser.ParserFactory.getParser ( source.getFormat () , descriptor ) ; D def = parser.parse ( descriptor, source ) ; return def; } return null; } 
public void myTick ( long mils ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60; java.lang.String time = ( java.lang.String.format ( "%02d", secsRemaining ) ) + ( ( java.lang.Integer.toString ( minsRemaining ) ) + ":" ) ; timeRemaining.setText ( time ) ; timeInMilis = mils; } 
@ java.lang.Override public boolean doesSideBlockRendering ( net.minecraft.block.state.IBlockState state, net.minecraft.world.IBlockAccess world, net.minecraft.util.math.BlockPos pos, net.minecraft.util.EnumFacing face ) { com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers tile = getTileEntity ( world, pos ) ; if ( ( ( tile.getEffectiveMaterialSide () ) == null ) && ( tile != null ) ) return false; return super.doesSideBlockRendering ( state, world, pos, face ) ; } 
@ java.lang.Override public void run () { if ( ( animator.isStarted () ) && ( ( animator ) != null ) ) { animator.stop () ; } if ( ( renderer ) != null ) { renderer.dispose ( window ) ; } canvas.dispose () ; window = null; renderer = null; view = null; animator = null; } 
private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod, org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata; if ( null == lmeta ) { synchronized ( this ) { lmeta = metadata; if ( null == lmeta ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader.getDiffractionMetadataFromNexus ( mod.getFilePath () , parent ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this, "File does not contain metadata" ) ; metadata = lmeta = md; } } } return lmeta; } 
public void onCraftMatrixChanged ( net.minecraft.inventory.IInventory inv ) { for ( int i = 0; ( inv.getSizeInventory () ) > i; i++ ) { this.te.setStackInSlot ( inv.getStackInSlot ( i ) , i ) ; } this.craftResult.setInventorySlotContents ( 0, net.minecraft.item.crafting.CraftingManager.getInstance () .findMatchingRecipe ( this.craftMatrix, this.te.getWorldObj () ) ) ; } 
@ java.lang.Override public edu.cmu.tetrad.graph.Graph createGraph ( edu.cmu.tetrad.util.Parameters parameters ) { return edu.cmu.tetrad.graph.GraphUtils.randomGraphRandomForwardEdges ( parameters.getInt ( "numMeasures" ) , parameters.getInt ( "numLatents" ) , ( ( ( parameters.getInt ( "numMeasures" ) ) * ( parameters.getInt ( "avgDegree" ) ) ) / 2 ) , parameters.getInt ( "maxDegree" ) , parameters.getInt ( "maxIndegree" ) , parameters.getInt ( "maxOutdegree" ) , parameters.getBoolean ( "connected" ) ) ; } 
public static int eval ( Board board ) { int sum = 50; int score = board.isConnectN () ; if ( 1 == score ) { sum = 1000; } else if ( score == 2 ) { sum = -10000; } else if ( score == ( -1 ) ) { } return sum; } 
public void deleteFloor ( int x, int y ) { for ( int scan = 0; ( walls.size () ) > scan; scan++ ) { if ( ( ( floors.get ( scan ) .xPosition ) == x ) && ( ( floors.get ( scan ) .yPosition ) == y ) ) { floors.remove ( scan ) ; } } } 
private void scrolling () { detectTouchEventConsumed () ; if ( ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_DOWN ) == ( currentMode ) ) { if ( isFirstViewVisible () ) { android.util.Log.e ( "PullToScaleHeader", ( "向下滚动" + ( mLastDistance ) ) ) ; isBeingDraggedFromTop () ; } } if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_UP ) ) { if ( ( headerLayoutParams.height ) > ( heightOfActionBar ) ) { android.util.Log.e ( "PullToScaleHeader", ( "向上滚动" + ( mLastDistance ) ) ) ; isBeingDraggedFromTop () ; } } } 
public java.lang.String displayContents () { java.lang.String contents = ""; crazycalculator.datastructure.Link<T> currentLink = firstLink; int index = 0; while ( null != ( currentLink.getData () ) ) { contents = ( ( ( ( contents + "[ " ) + index ) + " ]\t= " ) + ( currentLink.getData () ) ) + "\n"; index++; currentLink = currentLink.getNextLink () ; } return contents; } 
public void markCompleted () { this.completed = true; int pointsToAdd = ( calculateEstimatedTimeMultiplier ( this.estimated_time ) ) * ( ( ( ( int ) ( 10 ) ) * ( Task.POINT_RANGE[ ( ( this.importance ) - 1 ) ] ) ) * ( Task.POINT_RANGE[ ( ( this.difficulty ) - 1 ) ] ) ) ; User currentUser = User.findUser ( this.user_id ) ; int oldExp = currentUser.getUserExperience () ; currentUser.updateUserExperience ( ( oldExp + pointsToAdd ) ) ; } 
private void addClassPathToModule ( java.lang.String moduleName, org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { java.util.List<org.eclipse.jdt.internal.core.builder.ClasspathLocation> l = this.moduleToClassPathLocations.get ( moduleName ) ; if ( null == l ) { l = new java.util.ArrayList<> () ; this.moduleToClassPathLocations.put ( moduleName, l ) ; } l.add ( cp ) ; } 
@ java.lang.Override public void run () { boolean end = false; while ( !end ) { if ( 0 < ( elements.size () ) ) { de.uni_hildesheim.sse.monitoring.runtime.recordingServer.RecordingStrategiesElement element = elements.remove ( 0 ) ; element.process ( strategy ) ; int id = element.getIdentification () ; element.clear () ; element.release () ; end = ( Constants.ENDSYSTEM ) == id; } else { java.lang.Thread.yield () ; } } printElementStatistics () ; } 
public model.player.Player getPlayer ( model.adventurers.AdventurerType advT ) { model.game.Iterator<model.player.Player> it = getPlayers () .iterator () ; model.player.Player p = null; while ( ( ! ( ( p = it.next () ) .getCurrentAdventurer () .getADVENTURER_TYPE () .equals ( advT ) ) ) && ( it.hasNext () ) ) { } return p; } 
public java.lang.String toString () { java.lang.String str = ""; for ( int i = 0; ( org.astrobotics.ds2016.io.Protocol.ControlData.data.length ) > i; i++ ) { str = ( ( ( str + "\n" ) + i ) + ": " ) + ( org.astrobotics.ds2016.io.Protocol.ControlData.data[i] ) ; } return str; } 
public void onInit ( int initStatus ) { if ( ( android.speech.tts.TextToSpeech.SUCCESS ) == initStatus ) { if ( ( tts.isLanguageAvailable ( java.util.Locale.US ) ) == ( android.speech.tts.TextToSpeech.LANG_AVAILABLE ) ) { tts.setLanguage ( java.util.Locale.US ) ; } } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast.makeText ( activity, "Sorry! Text to Speech failed...", Toast.LENGTH_LONG ) .show () ; } } 
public boolean containsKey ( java.lang.Object key ) { int pos = getHash ( key ) ; if ( null == ( table[pos] ) ) { return false; } else { hashtable.HashTable.Node curr = table[pos]; while ( true ) { if ( curr.key.equals ( key ) ) { return true; } if ( ( curr.next ) == null ) { break; } curr = curr.next; } return false; } } 
private java.util.ArrayList<java.net.URL> mapToAbsolute ( org.jsoup.select.Elements anchors ) { java.util.ArrayList<java.net.URL> res = new java.util.ArrayList<> () ; for ( org.jsoup.nodes.Element a : anchors ) { java.net.URL u = com.codeforsanjose.blic.Crawler.parseUrl ( a.attr ( "abs:href" ) ) ; if ( ( ! ( pages.containsKey ( u ) ) ) && ( u != null ) ) { res.add ( u ) ; } } return res; } 
@ java.lang.Override public java.net.URL getResource ( java.lang.String name ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log.debug ( "Trying to find resource '{}' in plugin classpath", name ) ; java.net.URL url = classLoader.findResource ( name ) ; if ( null == url ) url = libClassLoader.findResource ( name ) ; if ( url != null ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log.debug ( "Found resource '{}' in plugin classpath", name ) ; return url; } ro.fortsoft.pf4j.IzouPluginClassLoader.log.debug ( "Couldn't find resource '{}' in plugin classpath. Delegating to parent" ) ; return super.getResource ( name ) ; } 
@ java.lang.Override @cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) protected net.minecraft.util.IIcon getUnderlayIcon ( net.minecraft.world.IBlockAccess world, int x, int y, int z, int side ) { int meta = world.getBlockMetadata ( x, y, z ) ; org.pfaa.chemica.model.IndustrialMaterial host = this.getGeoMaterial ( meta ) .getHost () ; if ( null != host ) { net.minecraft.util.IIcon icon = getHostIcon ( host, world, x, y, z ) ; if ( icon != null ) { return icon; } } return this.getUnderlayIcon ( side, meta ) ; } 
@ java.lang.Override public int linearIndex ( int i ) { setLinearStride () ; int idx = i; for ( int j = 0; ( ( org.nd4j.linalg.api.shape.Shape.rank ( shapeInformation.asNioInt () ) ) - 1 ) > j; j++ ) { if ( ( size ( i ) ) == 1 ) continue; idx += i * ( stride ( j ) ) ; } return ( org.nd4j.linalg.api.shape.Shape.offset ( shapeInfo () ) ) + idx; } 
private org.nesty.core.httpserver.rest.controller.URLController findController () { org.nesty.core.httpserver.rest.URLResource resource = org.nesty.core.httpserver.rest.URLResource.fromHttp ( httpContext.getUri () , httpContext.getRequestMethod () ) ; org.nesty.core.httpserver.rest.controller.URLController controller; if ( null == ( controller = controllerRouter.findURLController ( resource ) ) ) { sendResponse ( org.nesty.core.httpserver.rest.response.HttpResponseBuilder.create ( HttpResponseStatus.NOT_FOUND ) ) ; org.nesty.core.httpserver.HttpServerStats.incrRequestMiss () ; return null; } if ( ! ( controller.isInternal () ) ) { org.nesty.core.httpserver.HttpServerStats.incrRequestHit () ; controller.hit () ; } return controller; } 
public java.util.List<com.xz.data.prepare.RawData> fetchData ( com.xz.data.syntax.TqlEntity tqlEntity, com.xz.data.syntax.TqlInterval tqlInterval ) { java.util.List<com.xz.data.prepare.RawData> result = com.google.common.collect.Lists.newArrayList () ; for ( int i = 1; 4 > i; ++i ) { result.add ( new com.xz.data.prepare.RawData ( i ) ) ; } return result; } 
public javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage; javax.swing.ImageIcon myImageIcon = null; try { myImage = javax.imageio.ImageIO.read ( getClass () .getResource ( ( pokemonImageString + ( utilities.Settings.POKEMON_IMAGES_ICON_FOLDER () ) ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage.getScaledInstance ( view.BoxPanel.iconSide, view.BoxPanel.iconSide, java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } return myImageIcon; } 
public static int addAssetPath ( android.content.res.AssetManager assets, java.lang.String path ) { if ( null == ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) ) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator.getMethod ( android.content.res.AssetManager.class, "addAssetPath", new java.lang.Class[] { java.lang.String.class } ) ; } if ( null == ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) ) return 0; int ret = net.wequick.small.util.ReflectAccelerator.invoke ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath, assets, path ) ; return ret; } 
protected boolean isNotBeforeModuleDeclaration ( com.intellij.psi.PsiElement topmostElement ) { com.intellij.psi.PsiElement[] moduleKeywords = org.intellij.xquery.psi.impl.XQueryPsiImplUtil.findChildrenOfType ( topmostElement.getNextSibling () , XQueryTypes.K_MODULE ) ; com.intellij.psi.PsiElement nextModuleDeclaration = com.intellij.psi.util.PsiTreeUtil.getNextSiblingOfType ( topmostElement, org.intellij.xquery.psi.XQueryModuleDecl.class ) ; return ( nextModuleDeclaration == null ) && ( ( moduleKeywords.length ) == 0 ) ; } 
public void enqueueNoDependencies ( java.util.Set<eu.sqooss.service.scheduler.Job> jobs ) throws eu.sqooss.service.scheduler.SchedulerException { synchronized ( this ) { for ( eu.sqooss.service.scheduler.Job job : jobs ) { logger.debug ( ( ( job.toString () ) + "Scheduler ServiceImpl: queuing job " ) ) ; job.callAboutToBeEnqueued ( this ) ; java.util.concurrent.Future<java.lang.Void> future = executorService.submit ( job ) ; job.future = future; stats.addWaitingJob ( job.getClass () .toString () ) ; stats.incTotalJobs () ; } } } 
public void setLine ( int line, java.lang.String text ) { if ( ( text.isEmpty () ) || ( text == null ) ) { removeLine ( line ) ; return; } text = org.bukkit.ChatColor.translateAlternateColorCodes ( '&', text ) ; if ( ( armorStands.size () ) <= line ) { addLine ( line, text ) ; return; } armorStands.get ( line ) .setCustomName ( text ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.widget.AbsListView view, int scrollState ) { if ( 1 >= ( lastVisibleItem ) ) { return; } if ( ( ( lastVisibleItem ) == ( totalItemCount ) ) && ( scrollState == ( SCROLL_STATE_IDLE ) ) ) { if ( ! ( isLoading ) ) { isLoading = true; footerView.setVisibility ( View.VISIBLE ) ; onLoadListener.onLoad () ; } } } 
public int getRoomCost () { int roomCost = 0; if ( 'I' == ( roomType ) ) roomCost = ( HospitalMVC.Patient.icRoomRate ) * ( days ) ; else if ( ( roomType ) == 'P' ) roomCost = ( HospitalMVC.Patient.privateRoomRate ) * ( days ) ; else roomCost = ( HospitalMVC.Patient.doubleRoomRate ) * ( days ) ; return roomCost; } 
public android.view.View getView ( int pos, android.view.View v, android.view.ViewGroup p ) { android.widget.TextView view = new android.widget.TextView ( this ) ; view.setTextSize ( 25 ) ; if ( null != ( items ) ) { view.setText ( ( ( java.lang.String ) ( items.get ( pos ) ) ) ) ; } else { view.setText ( pos ) ; } return view; } 
public void setOutcomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert null != portletWidget; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util.findConnectorFor ( portletWidget.getContentWidget () ) ; if ( ( this.incomingPortletCandidate ) == pc ) { this.incomingPortletCandidate = null; } else if ( getChildComponents () .contains ( pc ) ) { this.outcomingPortletCandidate = pc; } } 
public void setTemperature ( java.lang.String h ) { if ( null != h ) { strTemperature = h; int i = strTemperature.indexOf ( '.' ) ; i = java.lang.Integer.parseInt ( strTemperature.substring ( 0, i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } 
public void onDestroy () { super.onDestroy () ; if ( null != ( lyricViewer ) ) { lyricViewer.dismiss () ; } mRemoteTrackTime.unregister () ; try { if ( ( mTrackIntent ) != null ) { unregisterReceiver ( mTrackReceiver ) ; } if ( ( mStatusIntent ) != null ) { unregisterReceiver ( mStatusReceiver ) ; } } catch ( java.lang.Exception e ) { } } 
public boolean findItem ( java.lang.String item ) { boolean q = false; java.lang.String name = item; for ( int num = 0; 101 > num; num++ ) { if ( items[num][0].equals ( name ) ) { q = true; } } return q; } 
public static void register ( net.minecraft.block.Block block ) { if ( Config.debug ) java.lang.System.out.println ( ( ( block.toString () ) + "Registered " ) ) ; net.minecraftforge.fml.common.registry.GameRegistry.register ( block ) ; if ( ( ! ( shadows.plants.util.Util.isException ( block ) ) ) && ( ! ( block instanceof shadows.plants.block.internal.cosmetic.BlockDoubleHarvestable ) ) ) net.minecraftforge.fml.common.registry.GameRegistry.register ( new net.minecraft.item.ItemBlock ( block ) , block.getRegistryName () ) ; } 
@ java.lang.Override public void onTransactionChainFailed ( final org.opendaylight.controller.md.sal.common.api.data.TransactionChain<?, ?> chain, final org.opendaylight.controller.md.sal.common.api.data.AsyncTransaction<?, ?> transaction, final java.lang.Throwable cause ) { synchronized ( txLock ) { if ( ( transactionChainManagerStatus ) == ( org.opendaylight.openflowplugin.impl.device.TransactionChainManager.TransactionChainManagerStatus.WORKING ) ) { org.opendaylight.openflowplugin.impl.device.TransactionChainManager.LOG.warn ( "Transaction chain failed, recreating chain due to ", cause ) ; createTxChain () ; wTx = null; } } } 
private void setupSandbox () { org.commcare.util.mocks.MockUserDataSandbox sandbox = new org.commcare.util.mocks.MockUserDataSandbox ( mPrototypeFactory ) ; sandbox.setAppFixtureStorageLocation ( ( ( org.javarosa.core.services.storage.IStorageUtilityIndexed<org.javarosa.core.model.instance.FormInstance> ) ( org.javarosa.core.services.storage.StorageManager.getStorage ( FormInstance.STORAGE_KEY ) ) ) ) ; mSandbox = sandbox; if ( null != ( mLocalUserCredentials ) ) { org.commcare.util.cli.ApplicationHost.restoreUserToSandbox ( mSandbox, mLocalUserCredentials[0], mLocalUserCredentials[1] ) ; } else if ( ( mRestoreFile ) != null ) { restoreFileToSandbox ( mSandbox, mRestoreFile ) ; } else { restoreDemoUserToSandbox ( mSandbox ) ; } } 
public void surfaceChanged ( android.view.SurfaceHolder holder, int format, int w, int h ) { if ( null == ( this.holder.getSurface () ) ) { return; } try { camera.stopPreview () ; camera.setPreviewDisplay ( this.holder ) ; camera.startPreview () ; } catch ( java.lang.Exception e ) { android.util.Log.d ( "Surface Changed", ( "Error starting camera preview: " + ( e.getMessage () ) ) ) ; } } 
public static java.lang.String urlEncode ( java.lang.Object value ) { if ( null == value ) return null; try { java.lang.String result = java.net.URLEncoder.encode ( value.toString () , "UTF-8" ) ; result = result.replaceAll ( "\\+", "%20" ) ; return result; } catch ( java.io.UnsupportedEncodingException e ) { return null; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/films/addOrUpdate" ) public java.lang.String admin_films_addOrUpdate ( @org.springframework.web.bind.annotation.RequestParam ( value = "id", required = false, defaultValue = "null" ) java.lang.String id, org.springframework.ui.Model model ) { if ( ! ( java.util.Objects.equals ( id, "null" ) ) ) { org.hibernate.Session session = hibernate.HibernateUtil.getSessionFactory () .openSession () ; dao.FilmDb filmDb = ( ( dao.FilmDb ) ( session.createQuery ( ( id + "from FilmDb f where f.id=" ) ) .list () .get ( 0 ) ) ) ; model.addAttribute ( "film", filmDb ) ; } return "admin/films/addOrUpdate"; } 
public int getProgress () { if ( 0 < ( link.getSize () ) ) { return isComplete () ? 100 : ( ( int ) ( ( ( bytesReceived ) * 100 ) / ( link.getSize () ) ) ) ; } else { return 0; } } 
private static boolean isKeyPressed ( net.minecraft.client.settings.KeyBinding instance ) { try { java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding.class.getDeclaredField ( "pressTime" ) ; field.setAccessible ( true ) ; int c = ( ( int ) ( field.get ( instance ) ) ) ; if ( 0 < c ) { return true; } } catch ( java.lang.Exception e ) { } return false; } 
private void selectItem ( int position ) { if ( null != ( mDrawerLayout ) ) { mDrawerLayout.closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList.get ( position ) .handler; if ( handler != null ) { handler.perfrom ( getActivity () ) ; } } 
public boolean isCompatible ( thobe.logfileviewer.plugin.api.IPluginApiVersion versionOfPlugin ) { if ( ( getMajorVersion () ) != ( versionOfPlugin.getMajorVersion () ) ) { return false; } if ( ( versionOfPlugin.getMinorVersion () ) > ( this.getMinorVersion () ) ) { return false; } return true; } 
public com.studiohartman.jamepad.ControllerState getState ( int index ) throws java.lang.IllegalStateException { verifyInitialized () ; if ( ( index < 0 ) && ( index < ( controllers.length ) ) ) { update () ; return com.studiohartman.jamepad.ControllerState.getInstanceFromController ( controllers[index] ) ; } else { return com.studiohartman.jamepad.ControllerState.getDisconnectedControllerInstance () ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; if ( null != ( com.facebook.AccessToken.getCurrentAccessToken () ) ) { android.content.Intent intent = new android.content.Intent ( this, map.minimap.MainActivity.class ) ; startActivity ( intent ) ; } com.facebook.appevents.AppEventsLogger.activateApp ( this ) ; updateUI () ; } 
private void Disconnect () { if ( null == ( connectDevice ) ) BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION, Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ; else { try { socket.close () ; android.bluetooth.BluetoothDevice device = connectDevice; BroadcastResult ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION, Constants.BLUETOOTH_DEVICE, device ) ; } catch ( java.io.IOException e ) { BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION, e ) ; } finally { Cleanup () ; serialAdapter.Shutdown () ; } } } 
@ java.lang.Override public void reduce ( org.apache.hadoop.io.Text word, java.lang.Iterable<org.apache.hadoop.io.IntWritable> counts, com.moz.commoncrawl.Context context ) throws java.io.IOException, java.lang.InterruptedException { int sum = 0; for ( org.apache.hadoop.io.IntWritable count : counts ) { sum += count.get () ; } if ( ( sum > ( threshold ) ) && ( ( threshold ) != ( -1 ) ) ) context.write ( word, new org.apache.hadoop.io.IntWritable ( sum ) ) ; } 
private void makeSmall () { for ( int i = 0; ( first.adapter.vList.size () ) > i; i++ ) { ( ( android.widget.TextView ) ( first.adapter.vList.get ( i ) ) ) .setTextSize ( TypedValue.COMPLEX_UNIT_SP, 70 ) ; } } 
private java.lang.String getChromosomalChange ( org.apache.commons.csv.CSVRecord record ) { return ( record.get ( options.getAlt () ) ) + ( ( ( ( ( "chr" + ( record.get ( options.getChr () ) ) ) + ":" ) + ( record.get ( options.getPos () ) ) ) + ( record.get ( options.getRef () ) ) ) + ">" ) ; } 
@ java.lang.Override public void onSpinnerItemSelected ( android.widget.Spinner spinner, int position ) { if ( ( org.droidplanner.android.R.id.cameraFileSpinner ) == ( spinner.getId () ) ) { com.o3dr.services.android.lib.drone.mission.item.complex.CameraDetail cameraInfo = cameraAdapter.getItem ( position ) ; for ( T survey : getMissionItems () ) { survey.getSurveyDetail () .setCameraDetail ( cameraInfo ) ; } onScrollingEnded ( mAnglePicker, 0, 0 ) ; } } 
protected static java.lang.String readHeaderString ( byte[] buffer ) { int i = 0; while ( ( ! ( webserver.ParseTools.endOfHeader ( buffer, ( i - 1 ) ) ) ) && ( i < ( buffer.length ) ) ) { i++; } return new java.lang.String ( buffer, 0, i ) ; } 
public void zoomOut () { if ( 0.4 < ( zoom ) ) { zoom -= 0.3; xDif = 0; yDif = 0; } else { if ( isMoon ) { Main.state = Main.State.PLANETRY; } else { Main.state = Main.State.SOLAR; } } } 
public void addPizza ( com.preproduction.delivery.domain.Pizza pizza ) { if ( ( com.preproduction.delivery.domain.Order.MAX_ORDER_SIZE ) > ( orderSize ) ) { ( orderSize ) ++; for ( com.preproduction.delivery.domain.OrderDetails od : pizzas ) { if ( od.getPizza () .equals ( pizza ) ) { od.setQuantity ( ( ( od.getQuantity () ) + 1 ) ) ; return; } } pizzas.add ( new com.preproduction.delivery.domain.OrderDetails ( pizza, 1 ) ) ; } } 
@ java.lang.Override protected void applyUpgrade () { if ( ( upgradeCost () ) <= ( main.Scoreboard.XP () ) ) { main.Scoreboard.modXP ( ( - ( upgradeCost () ) ) ) ; items.Gun g = ( ( items.Gun ) ( gui.Controller.getPlayer () .getWeapons () .get ( 1 ) ) ) ; gui.Controller.getPlayer () .replaceWeapon ( 1, new items.Gun ( g.fireRate () , g.spareAmmo () , g.MAX_AMMO, g.RELOAD_FACTOR, false ) ) ; } } 
private long encode ( java.lang.String input ) { java.lang.String rtn = ""; java.lang.String first5 = input.toLowerCase () .concat ( " " ) .substring ( 0, 5 ) ; int ascii; for ( int i = 0; 5 > i; ++i ) { ascii = ( ( int ) ( first5.charAt ( i ) ) ) ; rtn = rtn.concat ( java.lang.String.valueOf ( ascii ) ) ; } return java.lang.Long.parseLong ( rtn ) ; } 
public eta.runtime.thunk.UpdateInfo push ( eta.runtime.thunk.Thunk updatee, boolean marked ) { eta.runtime.thunk.UpdateInfo ui; if ( null != ( free ) ) { ui = free; free = free.prev; ui.updatee = updatee; } else { ui = new eta.runtime.thunk.UpdateInfo ( updatee, marked ) ; } if ( ( bottom ) == null ) { bottom = top = ui; ui.prev = null; ui.next = null; } else { ui.prev = top; ui.next = null; top.next = ui; } return ui; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Object result ) { bIsRunning = false; if ( null != ( listener ) ) { listener.onDone ( method.getName () ) ; } if ( ( ( asyncCallback ) != null ) && ( hasSentResult ) ) { hasSentResult = false; asyncCallback.onResult ( err, rs ) ; } } 
private boolean confirmDeleteProjects ( org.eclipse.core.resources.IResource[] resources ) { org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog dialog = new org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog ( shellProvider.getShell () , resources ) ; dialog.setTestingMode ( fTestingMode ) ; int code = dialog.open () ; deleteContent = dialog.getDeleteContent () ; return 0 == code; } 
public void accelerate ( double timedelta ) { traffic_sim.Vehicle in_front = current_lane.getVehicleInFront ( this ) ; if ( ( ( in_front != null ) && ( ( getFrontVehicleDistance ( in_front ) ) >= ( 2 * ( Lane.min_car_distance ) ) ) ) || ( ( in_front == null ) && ( ( current_lane.getDistanceToEnd ( position ) ) > 0 ) ) ) { current_velocity += timedelta * ( ACCEL ) ; current_velocity = ( ( current_velocity ) > ( MAX_VELOCITY ) ) ? MAX_VELOCITY : current_velocity; } } 
public void update () { if ( ( maxHP ) > ( hp ) ) { hp += hpRegin; } if ( ( hp ) > ( maxHP ) ) { hp = maxHP; } if ( ( stamina ) < ( maxStam ) ) { stamina += stamRegin; } if ( ( stamina ) > ( maxStam ) ) { stamina = maxStam; } } 
public synchronized void newChar ( char c ) { ngram.putChar ( c ) ; java.lang.String s = ngram.getString () ; if ( null != s ) { java.lang.Integer currentNumber = numberOfNgrams.get ( s ) ; if ( currentNumber == null ) { currentNumber = 1; } else { currentNumber++; } numberOfNgrams.put ( s, currentNumber ) ; } } 
private void resize () { java.lang.Integer[] result = new java.lang.Integer[2 * ( stack.length ) ]; int i; for ( i = 0; i < ( stack.length ) ; i++ ) { result[i] = stack[i]; } while ( i < ( result.length ) ) { result[i] = null; } stack = result; } 
private static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null; try { while ( null != ( line = r.readLine () ) ) { if ( ( line.length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null; } return null; } 
@ java.lang.Override public void pause () { com.hustunique.parsingplayer.util.LogUtil.d ( com.hustunique.parsingplayer.player.media.ParsingMediaManager.TAG, "pause called" ) ; mBitmap = mRenderView.getBitmap () ; com.hustunique.parsingplayer.util.LogUtil.v ( com.hustunique.parsingplayer.player.media.ParsingMediaManager.TAG, ( ( mBitmap.getByteCount () ) + ( ( ( ( "paused, cache thumbnail " + ( mBitmap ) ) + " from " ) + ( mRenderView ) ) + " size " ) ) ) ; mCurrentPlayerProxy.pause () ; } 
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false; if ( ( currentInput.equals ( ",./" ) ) || ( ( ( currentInput.equals ( "sdf" ) ) || ( currentInput.equals ( "dfg" ) ) ) || ( currentInput.equals ( "cvb" ) ) ) ) { hasMash = true; } return hasMash; } 
protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { switch ( requestCode ) { case 1: if ( ( android.app.Activity.RESULT_OK ) == resultCode ) { int switchNum = data.getIntExtra ( com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH, 0 ) ; if ( switchNum != 0 ) { long newNum = data.getLongExtra ( com.example.scanitgrocerystorehelper.MainActivity.KEY_LIST_ID, 0 ) ; if ( newNum != 0 ) deleteList ( mSqlAdapter.getList ( newNum ) ) ; } } } } 
public void viewBlocks ( GameInfo.Environment.Blocks.BlockBase[][] blocks ) { for ( int x = 0; ( blocks.length ) > x; x++ ) { for ( int y = 0; y < ( blocks[x].length ) ; y++ ) { if ( ( blocks[x][y] ) == null ) { java.lang.System.out.print ( "NULL|" ) ; } else { java.lang.System.out.print ( "GOOD|" ) ; } } java.lang.System.out.println () ; } } 
public int charCode ( char c ) { if ( java.lang.Character.isLetter ( c ) ) { return 1 + ( c - 'A' ) ; } if ( c == '[' ) return 27; if ( c == '\\' ) return 28; if ( c == ']' ) return 29; if ( c == '^' ) return 30; if ( c == '_' ) return 31; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } 
public void addNew ( uk.ac.ucl.excites.sapelli.collector.transmission.SendSchedule schedule ) { if ( null != schedule ) { schedule.setEnabled ( true ) ; save ( schedule, true ) ; refresh () ; } else toggleConfigGroup ( true, ( ! ( listScheduleAdapter.isEmpty () ) ) ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @javax.annotation.Nullable @java.lang.Override public <T> T getCapability ( @javax.annotation.Nullable net.minecraftforge.common.capabilities.Capability<T> capability, @javax.annotation.Nullable net.minecraft.util.EnumFacing facing ) { return ( capability == ( net.minecraftforge.energy.CapabilityEnergy.ENERGY ) ) && ( ( facing == ( net.minecraft.util.EnumFacing.DOWN ) ) || ( facing == null ) ) ? ( ( T ) ( energyStorage ) ) : null; } 
private android.content.Intent createShareTips () { java.lang.String send = java.lang.String.valueOf ( array[counter] ) ; android.content.Intent shareIntent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; shareIntent.addFlags ( Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET ) ; shareIntent.setType ( "text/plain" ) ; shareIntent.putExtra ( Intent.EXTRA_TEXT, ( ( com.app.cryptotunnel.nutriplan.HealthTips.APP_SHARE_HASHTAG ) + send ) ) ; return shareIntent; } 
void updateSymbols ( java.lang.String prefix ) { for ( com.topodroid.DistoX.EnableSymbol symbol : mItems ) { if ( symbol.MustSave () ) { symbol.mSymbol.setEnabled ( symbol.mEnabled ) ; TopoDroidApp.mData.setSymbolEnabled ( ( ( symbol.mSymbol.getThName () ) + prefix ) , symbol.mSymbol.isEnabled () ) ; } } } 
private static void initializeRoom ( double leftDoorWidth, double rightDoorWidth, boolean hasObstacle ) { if ( ( swarms.SwarmSim.RoomType.GATES8 ) == ( swarms.SwarmSim.roomType ) ) { swarms.SwarmSim.buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim.buildBasic ( leftDoorWidth, rightDoorWidth, hasObstacle ) ; } } 
public synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( pendingOperationsWithSize.size () ) >= ( maxInFlightRpcs ) ) || ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System.currentTimeMillis () ; pendingOperationsWithSize.put ( operationId, heapSize ) ; currentWriteBufferSize += heapSize; return operationId; } 
boolean insertUserChild ( java.lang.String userId, long childId, int isOwner, int canEdit, java.lang.String childTimeStamp ) { android.database.sqlite.SQLiteDatabase db = this.getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent.put ( baps.DatabaseHelper.UC_USER_ID, userId ) ; childUserTableContent.put ( baps.DatabaseHelper.UC_CHILD_ID, childId ) ; childUserTableContent.put ( baps.DatabaseHelper.UC_ISOWNER, isOwner ) ; long result2 = db.insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE, null, childUserTableContent ) ; return ( -1 ) != result2; } 
private int getRealParametersCount ( java.lang.reflect.Method m ) { int c = 0; for ( java.lang.Class<?> t : m.getParameterTypes () ) { if ( ( t != ( fr.lteconsulting.pomexplorer.ILogger.class ) ) && ( ( ( ( t != ( fr.lteconsulting.pomexplorer.Client.class ) ) && ( t != ( fr.lteconsulting.pomexplorer.WorkingSession.class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.CommandOptions.class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.FilteredGAVs.class ) ) ) ) c++; } return c; } 
private android.view.View getViewReview ( int position, android.view.View convertView ) { review.ReviewCell view; if ( null == convertView ) { view = new review.ReviewCell ( context, null ) ; } else if ( ( convertView instanceof memorization.MemoryCell ) || ( convertView instanceof recall.RecallCell ) ) view = new review.ReviewCell ( context, null ) ; else view = ( ( review.ReviewCell ) ( convertView ) ) ; view.setModel ( memoryData.getText ( position ) , recallData.getText ( position ) ) ; return view; } 
private Game.Piece getKing () { java.util.LinkedList<Game.Piece> pieces = Game.Player.state.getPieces ( isWhite ) ; for ( int i = 0; ( pieces.size () ) > i; i++ ) { if ( 5 == ( pieces.get ( i ) .getIdentifier () ) ) { return pieces.get ( i ) ; } } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { final java.util.List<com.example.finalproject.Model.Dessert> dessertList = new java.util.LinkedList<com.example.finalproject.Model.Dessert> () ; for ( com.google.firebase.database.DataSnapshot dstSnapshot : dataSnapshot.getChildren () ) { com.example.finalproject.Model.Dessert dessert = dstSnapshot.getValue ( com.example.finalproject.Model.Dessert.class ) ; if ( ( dessert.getId () ) > ( maxKey[0] ) ) { ( maxKey[0] ) ++; } dessertList.add ( dessert ) ; } listener.onComplete ( dessertList, maxKey[0] ) ; } 
public void run () { while ( true ) { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE.poll () ) ) ; if ( null == request ) { continue; } java.lang.System.out.println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th.start () ; } } 
public void checkCollisions () { java.util.ArrayList<Game.Enemy> enemies = Game.StartMenu.getEnemyList () ; for ( int i = 0; ( enemies.size () ) > i; i++ ) { if ( getBounds () .intersects ( enemies.get ( i ) .getBounds () ) ) { ey = 0; enemiesKilled += 1; } } } 
private static int[] quickSortH ( int[] data, int start, int end ) { if ( end > start ) { int index = Quick.part ( data, start, end ) ; Quick.quickSortH ( data, start, ( index - 1 ) ) ; Quick.quickSortH ( data, ( index + 1 ) , end ) ; } return data; } 
public java.util.Set<decc.dht.Key> get ( decc.dht.Key k ) { clean () ; java.util.Map<decc.dht.Key, java.lang.Long> rts = routes.get ( k ) ; java.util.Set<decc.dht.Key> ks = null; if ( null != rts ) ks = rts.keySet () ; return ks; } 
@ java.lang.Override public void add ( T t ) { if ( null == ( root ) ) { root.setValue ( t ) ; root.setPosition ( UtilConstant.START_INDEX ) ; } else { xlp.util.genric.list.Element<T> newElement = new xlp.util.genric.list.Element () ; newElement.setNode ( root ) ; newElement.setPosition ( root.getNextPosition () ) ; root = newElement; } } 
synchronized void draw () { if ( ( ( mAdapter ) == null ) || ( ( mAllSongHistoryList ) == null ) ) { return; } mAllSongHistoryList = mSongHistoryController.getManagedTimeline ( mRealm ) ; mItemList = createItemList ( 0, 30 ) ; mAdapter.updateDataSet ( mItemList ) ; if ( ( mLoading ) != null ) { mLoading.setVisibility ( View.INVISIBLE ) ; } } 
public void addLast ( Item item ) { if ( null == item ) throw new java.lang.NullPointerException () ; final Deque<Item>.Node oldlast = last; last = new Node ( item ) ; if ( ( size ) == 0 ) { last.next = null; last.prev = null; first = last; } else { oldlast.next = last; last.prev = oldlast; last.next = null; if ( ( size ) == 1 ) first.next = last; } ( size ) ++; } 
public void showImage ( boolean idolized, android.widget.ImageView view ) { android.util.Log.d ( "im", ( ( card_image ) + ( ( "ID: " + ( id ) ) + "\n URL showImage:" ) ) ) ; if ( idolized || ( is_promo ) ) new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view ) .execute ( card_idolized_image, card_image ) ; else new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view ) .execute ( card_image, card_idolized_image ) ; } 
@ java.lang.Override public android.support.v4.content.Loader<android.database.Cursor> onCreateLoader ( int id, android.os.Bundle args ) { java.lang.String sortOrder = getSortOrder () ; if ( sortOrder.equals ( getActivity () .getString ( R.string.pref_sort_favorites ) ) ) { sortOrder = " DESC" + ( MoviesContract.MoviesEntry.COLUMN_POPULARITY ) ; } return new android.support.v4.content.CursorLoader ( getActivity () , MoviesContract.MoviesEntry.CONTENT_URI, null, null, null, sortOrder ) ; } 
@ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals, org.elasticsearch.search.aggregations.support.ValuesSource.Bytes.WithOrdinals valueSource ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals.getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled.getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum.next () ; null != term; term = globalTermsEnum.next () ) { acceptedGlobalOrdinals.set ( globalTermsEnum.ord () ) ; } return acceptedGlobalOrdinals; } 
private void resetConfirmation () { if ( null != ( confirmation ) ) { getSupportFragmentManager () .beginTransaction () .remove ( confirmation ) .commit () ; confirmation = null; getAllCar () ; new it.familiyparking.app.task.AsyncTaskGCM () .execute ( user, this ) ; } } 
private edu.uci.eecs.wukong.framework.model.InitValue extractInitValue ( int start ) { short componentId = edu.uci.eecs.wukong.framework.util.WKPFUtil.getLittleEndianShort ( buffer, start ) ; byte propertyNumber = buffer[ ( 2 + start ) ]; propertyNumber++; byte size = buffer[ ( start + 3 ) ]; byte[] val = new byte[size]; java.lang.System.arraycopy ( buffer, ( start + 4 ) , val, 0, size ) ; edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue ( componentId, propertyNumber, val ) ; return value; } 
@ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r, org.apache.flink.util.Collector<org.apache.flink.api.java.tuple.Tuple2<java.lang.String, java.lang.Integer>> out ) throws java.lang.Exception { if ( 0 < ( r.getRecommendationsCount () ) ) { out.collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r.getRecommendations () .get ( 0 ) .getRecommendedArticle () , 1 ) ) ; } } 
public static java.lang.String emailsMinusYou ( com.zulip.android.models.List<com.zulip.android.models.Person> people, com.zulip.android.models.Person you ) { com.zulip.android.models.ArrayList<java.lang.String> names = new com.zulip.android.models.ArrayList () ; for ( com.zulip.android.models.Person person : people ) { if ( ( you.id ) != ( person.id ) ) { names.add ( person.getEmail () ) ; } } return android.text.TextUtils.join ( ", ", names ) ; } 
@ java.lang.Override public java.lang.String getPath ( org.eclipse.debug.core.model.IBreakpoint breakpoint ) throws org.eclipse.core.runtime.CoreException { org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( breakpoint ) ) ; java.lang.String type = bp.getTypeName () ; int innerClassIndex = type.indexOf ( '$' ) ; if ( 0 < innerClassIndex ) { type = type.substring ( 0, innerClassIndex ) ; } return ( type.replace ( '.', '/' ) ) + ".java"; } 
public static boolean isOpened ( java.lang.String p_SPS_BC_Request_UUID ) { if ( null == p_SPS_BC_Request_UUID ) return false; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request.getSPS_BC_Request_UUID () ) == null ) return false; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request.getSPS_BC_Request_UUID () ) == null ) return false; return ( org.spinsuite.bchat.view.FV_Thread.m_Request.getSPS_BC_Request_UUID () .equals ( p_SPS_BC_Request_UUID ) ) && ( org.spinsuite.bchat.view.FV_Thread.m_IsActive ) ; } 
public void precheck () { com.emc.sa.service.vipr.block.ExportBlockVolumeHelper.precheckExportPathParameters ( minPaths, maxPaths, pathsPerInitiator ) ; com.emc.sa.service.vipr.block.ExportBlockVolumeHelper.precheckPortGroupParameter ( null, virtualPool, portGroup ) ; if ( com.emc.sa.service.vipr.block.BlockStorageUtils.isHost ( hostId ) ) { host = com.emc.sa.service.vipr.block.BlockStorageUtils.getHost ( hostId ) ; } else { cluster = com.emc.sa.service.vipr.block.BlockStorageUtils.getCluster ( hostId ) ; } com.emc.sa.service.vipr.block.BlockStorageUtils.checkEvents ( ( null != ( host ) ? host : cluster ) ) ; } 
@ javafx.fxml.FXML private void buttonBackspace ( javafx.event.ActionEvent event ) { if ( 0 < ( inputText.length () ) ) { inputText = inputText.substring ( 0, ( ( inputText.length () ) - 1 ) ) ; textFieldResults.setText ( inputText ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.example.android.groceries2.MainActivity.dbHelper.deleteListTable ( listVersion ) ; com.example.android.groceries2.ItemsFragment.refreshItemsCursor () ; com.example.android.groceries2.ListFragment.refreshListCursor () ; com.example.android.groceries2.LogFragment.refreshLogCursor () ; android.content.Intent intent = new android.content.Intent ( this, com.example.android.groceries2.MainActivity.class ) ; intent.putExtra ( "tab", 2 ) ; startActivity ( intent ) ; android.widget.Toast.makeText ( this, ( " deleted" + listName ) , Toast.LENGTH_SHORT ) .show () ; } 
public java.lang.Object dispatchMethod ( java.lang.Object host, com.panda.kylin.Kylin kylin, java.lang.String methodName, java.lang.Object[] params ) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException { for ( java.lang.reflect.Method method : getClass () .getDeclaredMethods () ) { com.panda.kylin.PatchMethodName patchMethodName = method.getAnnotation ( com.panda.kylin.PatchMethodName.class ) ; if ( ( patchMethodName.value () .hashCode () ) == ( methodName.hashCode () ) ) { return method.invoke ( kylin ) ; } } return null; } 
public int takeNumberFromUser ( int width, int height ) { java.lang.String userInput = java.lang.Integer.toString ( takeNumberFromUser ( 3 ) ) ; try { if ( ( ( java.lang.Integer.parseInt ( userInput ) ) > height ) || ( ( java.lang.Integer.parseInt ( userInput ) ) > width ) ) throw new java.lang.IllegalArgumentException () ; return java.lang.Integer.parseInt ( userInput ) ; } catch ( java.lang.IllegalArgumentException iae ) { out.writeOut ( ( ( ( "printWrongSequenceHeightWidth" + width ) + "x" ) + height ) ) ; return takeNumberFromUser ( width, height ) ; } } 
protected javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( size / 2 ) + ( this.getTranslateX () ) ) , ( ( this.getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox.setOpacity ( 100 ) ; return circleBBox; } 
private double entropy ( double p ) { if ( ( p == 1 ) || ( p == 0 ) ) { return 1; } else { return ( ( ( -p ) * ( java.lang.Math.log ( p ) ) ) / ( java.lang.Math.log ( 2 ) ) ) - ( ( ( 1 - p ) * ( java.lang.Math.log ( ( 1 - p ) ) ) ) / ( java.lang.Math.log ( 2 ) ) ) ; } } 
public void move ( int x, int y, final java.lang.String activityClass ) { for ( com.zst.xposed.halo.floatingwindow3.tasks.WindowHolder mWindowHolder : activitiesStack.get ( activityClass ) ) { if ( null != mWindowHolder ) { mWindowHolder.position ( x, y ) ; mWindowHolder.pushToWindow () ; } } } 
private static synchronized void removePropertyFromSharedPrefs ( java.lang.String key ) { if ( null == ( com.indicative.client.java.android.Indicative.getInstance () .context ) ) { android.util.Log.v ( "Indicative", "Indicative instance has not been initialized; not adding common prop" ) ; return; } android.content.SharedPreferences prefs = com.indicative.client.java.android.Indicative.getInstance () .context.getSharedPreferences ( com.indicative.client.java.android.Indicative.PROPS_PREFS, Context.MODE_PRIVATE ) ; prefs.edit () .remove ( key ) ; } 
@ java.lang.Override public java.lang.String toString () { return "]" + ( ( ( ( ( ( ( ( ( "JavascriptConsoleResultBase [renderedTemplate=" + ( renderedTemplate ) ) + ", spaceNodeRef=" ) + ( spaceNodeRef ) ) + ", spacePath=" ) + ( spacePath ) ) + ", scriptPerformance=" ) + ( scriptPerformance ) ) + ", freemarkerPerformance=" ) + ( freemarkerPerformance ) ) ; } 
private void playerPassword ( org.bukkit.entity.Player p, java.lang.String password ) { if ( ( ( password.length () ) > 50 ) || ( ( password.length () ) < 5 ) ) { p.sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) .set ( p.getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p.sendMessage ( "Your password has been set." ) ; else p.sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } 
@ java.lang.Override public java.lang.String getSubAwardXmlFileData () { if ( null != ( subAwardXmlFileData ) ) { return subAwardXmlFileData.get () ; } byte[] newData = getKcAttachmentDao () .getData ( xmlDataId ) ; java.lang.String newString = new java.lang.String ( newData ) ; subAwardXmlFileData = new java.lang.ref.SoftReference<java.lang.String> ( newString ) ; return newString; } 
private boolean match ( org.cloudish.borg.model.Task task ) { if ( ( jidAllocated.contains ( task.getJid () ) ) && ( task.isAntiAffinity () ) ) { return false; } for ( org.cloudish.borg.model.TaskConstraint constraint : task.getConstraints () ) { org.cloudish.borg.model.HostAttribute hostAtt = attributes.get ( constraint.getAttName () ) ; if ( ( hostAtt == null ) || ( ! ( hostAtt.match ( constraint ) ) ) ) { return false; } } return true; } 
@ java.lang.Override public void showFinishOperation ( com.liferay.mobile.screens.assetlist.AssetEntry assetEntry ) { com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory factory = new com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory () ; com.liferay.mobile.screens.base.BaseScreenlet screenlet = factory.getScreenlet ( getContext () , assetEntry ) ; if ( null != screenlet ) { addView ( screenlet, LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT ) ; } com.liferay.mobile.screens.util.LiferayLogger.e ( "Error loading screenlet" ) ; } 
@ ita.o2o.controller.restful.ResponseBody @ita.o2o.controller.restful.RequestMapping ( value = "/reject" ) public java.lang.String reject ( java.lang.Integer orderId ) { java.lang.System.out.println ( ( orderId + "/reject orderId:" ) ) ; ita.o2o.controller.restful.Order order = orderService.getOrderById ( orderId ) ; ita.o2o.entity.extra.Status status = statusService.getById ( O2OConstants.STATUS_REJECTED ) ; ita.o2o.util.bean.ResponseMessage responseMessage = new ita.o2o.util.bean.ResponseMessage () ; if ( orderService.updateOrder ( order ) ) { responseMessage.setStatus ( O2OConstants.SUCCESS ) ; } else { responseMessage.setStatus ( O2OConstants.FAILURE ) ; } return jsonMapper.writeObjectAsString ( responseMessage ) ; } 
private com.intellij.xdebugger.impl.evaluate.EvaluationInputComponent createInputComponent ( com.intellij.xdebugger.evaluation.EvaluationMode mode, com.intellij.xdebugger.impl.evaluate.XExpression text ) { final com.intellij.openapi.project.Project project = mySession.getProject () ; text = com.intellij.xdebugger.impl.breakpoints.XExpressionImpl.changeMode ( text, mode ) ; if ( ( com.intellij.xdebugger.evaluation.EvaluationMode.EXPRESSION ) == mode ) { return new com.intellij.xdebugger.impl.evaluate.ExpressionInputComponent ( project, myEditorsProvider, mySourcePosition, text ) ; } else { return new com.intellij.xdebugger.impl.evaluate.CodeFragmentInputComponent ( project, myEditorsProvider, mySourcePosition, text, myDisposable ) ; } } 
@ java.lang.Override public void onItemClick ( int viewId, int position ) { switch ( viewId ) { case R.id.task_card_text_open: if ( ( -1 ) != position ) { mTaskRecyclerAdapter.getItems () .remove ( position ) ; mTaskRecyclerAdapter.notifyItemRemoved ( position ) ; } break; case R.id.task_card_text: mTaskRecyclerAdapter.getItems () .set ( position, new com.org.runaway.sharetodo.data.TaskState.AssignedTaskState () ) ; mTaskRecyclerAdapter.notifyItemChanged ( position ) ; break; default: break; } } 
protected java.lang.String generateCode ( java.lang.String message ) { message = message.toUpperCase () ; java.lang.StringBuilder codedMessage = new java.lang.StringBuilder ( "" ) ; for ( int i = 0; ( message.length () ) > i; i++ ) { java.lang.String val = morseCode.get ( message.charAt ( i ) ) ; if ( val != null ) { codedMessage.append ( val ) ; codedMessage.append ( " " ) ; } else return null; } return codedMessage.toString () ; } 
public void sendMessage ( android.view.View v ) { android.content.Intent searchIntent = new android.content.Intent ( this, com.bminor.officebarkaroake.PerformSearchActivity.class ) ; android.widget.EditText parm = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_searchText ) ) ) ; java.lang.String queryString = parm.getText () .toString () ; java.lang.String typeString = determineCheckedButton () ; if ( "all" != typeString ) queryString.trim () ; else queryString = ""; searchIntent.putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_TYPE, typeString ) ; searchIntent.putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_STRING, queryString ) ; startActivity ( searchIntent ) ; } 
boolean styleBarCanHide () { if ( ( ! ( getAlgebraDockPanel () .isStyleBarPanelShown () ) ) && ( ! ( app.has ( Feature.NEW_TOOLBAR ) ) ) ) { return false; } int itemTop = ( this.isInputTreeItem () ) ? main.getElement () .getAbsoluteTop () : getElement () .getAbsoluteTop () ; return ( itemTop - ( getAlgebraDockPanel () .getAbsoluteTop () ) ) < 35; } 
@ java.lang.Override public void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { if ( ( android.app.Activity.RESULT_OK ) != resultCode ) { return; } if ( requestCode == ( com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION ) ) { com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data.getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; } } 
@ java.lang.Override public boolean extract ( java.lang.String args ) { int i = args.indexOf ( "\n" ) ; if ( 0 < i ) { ip = args.substring ( 0, i ) ; id = decc.dht.Key.load ( args.substring ( i ) ) ; } return ( 0 < i ) && ( ( ( args.length () ) - i ) > 0 ) ; } 
@ java.lang.Override public void onBindViewHolder ( org.creativecommons.thelist.adapters.FeedAdapter.FeedViewholder holder, int position ) { org.creativecommons.thelist.adapters.MainListItem l = listItems.get ( position ) ; holder.itemView.setVisibility ( View.VISIBLE ) ; holder.nameLabel.setText ( l.getItemName () ) ; holder.makerLabel.setText ( ( ( l.getMakerName () ) + "requested by " ) ) ; switch ( getItemViewType ( position ) ) { case org.creativecommons.thelist.adapters.FeedAdapter.DEFAULT_VIEW: holder.iconImageView.setImageResource ( R.drawable.ic_camera_alt_grey600_24dp ) ; break; case org.creativecommons.thelist.adapters.FeedAdapter.ERROR_VIEW: holder.iconImageView.setImageResource ( R.drawable.ic_error_red_24dp ) ; break; } holder.itemView.setTag ( l ) ; } 
public static void findEvenOrOdd () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out.println ( ( " tell you if it is even or odd" + "This program will ask you for a number, and will then" ) ) ; int evenCheck; java.lang.System.out.println ( "Enter a number:" ) ; int evenNum = scanner.nextInt () ; evenCheck = evenNum % 2; if ( evenCheck == 0 ) { java.lang.System.out.println ( "Even" ) ; } else { java.lang.System.out.println ( "Odd" ) ; } java.lang.System.out.println ( "" ) ; scanner.close () ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) public void checkMapResolve ( java.util.Map object, java.lang.String fieldName ) { if ( ( com.alibaba.fastjson.parser.DefaultJSONParser.NeedToResolve ) == ( resolveStatus ) ) { com.alibaba.fastjson.parser.ResolveFieldDeserializer fieldResolver = new com.alibaba.fastjson.parser.ResolveFieldDeserializer ( object, fieldName ) ; com.alibaba.fastjson.parser.DefaultJSONParser.ResolveTask task = getLastResolveTask () ; task.fieldDeserializer = fieldResolver; task.ownerContext = context; resolveStatus = com.alibaba.fastjson.parser.DefaultJSONParser.NONE; } } 
public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions.remove ( session ) ; if ( ( openSessions.isEmpty () ) && ( ( waiterCount ) > 0 ) ) { notifyAll () ; if ( ( doneTask ) != null ) { doneTask.run () ; doneTask = null; } } } } 
public java.lang.String createEditedCommentDetails () { teammates.ui.template.FeedbackResponseCommentRow frcRow = getComment () ; java.lang.String editedCommentHeader = ( frcRow.getEditedAt () ) + ( ( ( ( "From: " + ( frcRow.getCommentGiverName () ) ) + " [" ) + ( frcRow.getCreatedAt () ) ) + "] " ) ; return editedCommentHeader; } 
private void updateLowestPriorityAssignment () { mLowestPriorityConnection = null; for ( audio.AudioManager.AudioOutputConnection connection : mAudioOutputConnections ) { if ( ( ( ( mLowestPriorityConnection ) == null ) || ( ( mLowestPriorityConnection.getPriority () ) > ( connection.getPriority () ) ) ) && ( connection.isConnected () ) ) { mLowestPriorityConnection = connection; } } } 
public java.lang.String getGenealogyString () { java.lang.String ret = ""; for ( final int dt : genealogy ) { if ( ( com.jug.export.CellStatsExporter.SegmentRecord.UPPER ) == dt ) { ret = ret + "T"; } if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.LOWER ) ) { ret = ret + "B"; } if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.UNKNOWN ) ) { ret = ret + "U"; } } return ret; } 
@ java.lang.Override public java.lang.Object action () { java.lang.Object object = r.action ( id, endpointClazz, customActionKey, requestJson, params ) ; if ( null == object ) { return new io.yawp.commons.http.JsonResponse ( "" ) ; } applyGetFacade ( object ) ; if ( hasTransformer () ) { return transform ( object ) ; } return object; } 
public org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor getDescriptor ( java.lang.String id ) { org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor configuration = m_descriptors.get ( id ) ; if ( null == configuration ) { if ( ( ( m_dataSources ) != null ) && ( id != null ) ) { org.unidal.dal.jdbc.datasource.model.entity.DataSourceDef ds = m_dataSources.findDataSource ( id ) ; if ( ds != null ) { configuration = getDescriptor ( ds ) ; m_descriptors.put ( id, configuration ) ; } } } return configuration; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void insertIDandTypeforItemsBlock ( org.json.simple.JSONObject itemsObject, java.lang.String schemaArrayItemsID, java.lang.String schemaArrayItemsType ) { if ( null != schemaArrayItemsID ) { itemsObject.put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID, schemaArrayItemsID.replace ( "\\", "" ) ) ; } else { itemsObject.put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID, "" ) ; } itemsObject.put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE, schemaArrayItemsType ) ; } 
public static void main ( java.lang.String[] args ) { if ( null == ( args[0] ) ) { java.lang.System.out.println ( "Usage: java -jar MSM.jar FILE_NAME" ) ; java.lang.System.exit ( 1 ) ; } java.lang.String csvPath = args[0]; java.util.ArrayList<seng3011.msm.TradeRec> tradeRecs = seng3011.msm.CSVParser.CSVParse ( csvPath ) ; seng3011.msm.GenerateOrder strategy = new seng3011.msm.GenerateOrder () ; java.util.ArrayList<seng3011.msm.SellOrder> sellOrders = strategy.generate ( tradeRecs ) ; java.lang.System.out.println ( "Proceess finished. Please check output files." ) ; } 
@ java.lang.Override public void _save () { if ( null == ( picture ) ) { deletePicture () ; } else { if ( ( fileId ) != ( picture.getUUID () ) ) { deletePicture () ; fileId = picture.getUUID () ; } } super._save () ; } 
private android.graphics.Bitmap loadImageFromFile ( java.lang.String imageFileName ) { android.graphics.Bitmap bitmap = null; try { java.io.File dir = android.os.Environment.getExternalStoragePublicDirectory ( Environment.DIRECTORY_PICTURES ) ; java.io.File imageFile = new java.io.File ( dir, imageFileName ) ; java.io.InputStream inputStream = new java.io.FileInputStream ( imageFile ) ; bitmap = android.graphics.BitmapFactory.decodeStream ( inputStream ) ; android.util.Log.d ( "tag", ( imageFileName + "got image from cache: " ) ) ; } catch ( java.io.FileNotFoundException e ) { e.printStackTrace () ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } return bitmap; } 
private void updateVersion ( java.lang.Long slbId ) { try { int current = buildInfoService.getCurrentTicket ( slbId ) ; buildInfoService.updateTicket ( slbId, ( 1 + current ) ) ; } catch ( java.lang.Exception e ) { logger.error ( "Update Version Fail!", e ) ; } } 
static void authenticate () { com.fhf.prkr.microclient.MainActivity.authenticated = false; com.fhf.prkr.microclient.MainActivity.network.sendpacket ( com.fhf.prkr.microclient.MainActivity.network.MANAGEMENT, com.fhf.prkr.microclient.MainActivity.network.AUTHENTICATE, "", true ) ; boolean requestFailed = false; while ( 1 == ( com.fhf.prkr.microclient.MainActivity.network.stillWaiting () ) ) { if ( ( com.fhf.prkr.microclient.MainActivity.network.stillWaiting () ) == 42 ) { requestFailed = true; break; } } if ( !requestFailed ) { com.fhf.prkr.microclient.MainActivity.network.startKeepAlive () ; } } 
@ java.lang.Override public void removeConfigurations ( java.lang.String context ) { java.util.Set<java.lang.String> itemNames = contextMap.get ( context ) ; if ( null != itemNames ) { for ( java.lang.String itemName : itemNames ) { java.util.Set<org.eclipse.smarthome.core.thing.link.ItemChannelLink> links = itemChannelLinkMap.remove ( itemName ) ; for ( org.eclipse.smarthome.core.thing.link.ItemChannelLink removedItemChannelLink : links ) { notifyListenersAboutRemovedElement ( removedItemChannelLink ) ; } } contextMap.remove ( context ) ; } } 
public void shutDown () { try { lookupService.shutDown () ; } catch ( java.lang.Throwable t ) { org.apache.flink.runtime.query.QueryableStateClient.LOG.error ( "Failed to shut down KvStateLookupService", t ) ; } try { kvStateClient.shutDown () ; } catch ( java.lang.Throwable t ) { org.apache.flink.runtime.query.QueryableStateClient.LOG.error ( "Failed to shut down KvStateClient", t ) ; } if ( null != ( actorSystem ) ) { try { actorSystem.shutdown () ; } catch ( java.lang.Throwable t ) { org.apache.flink.runtime.query.QueryableStateClient.LOG.error ( "Failed to shut down ActorSystem" ) ; } } } 
public void write ( java.nio.ByteBuffer ip ) { try { android.util.Log.d ( trikita.capture.VPNThread.TAG, trikita.capture.IPUtils.hexdump ( "INCOMING IP PACKET:", ip ) ) ; mVpnOut.write ( ip ) ; if ( ip.hasRemaining () ) { trikita.capture.IPUtils.panic ( "incomplete write to VPN fd" ) ; } } catch ( java.io.IOException e ) { trikita.capture.IPUtils.panic ( ( ( e.getMessage () ) + "exception in write to VPN fd" ) ) ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call<com.divyanshu.pixabayserverapi.callback.PixabayDataObject> call, retrofit2.Response<com.divyanshu.pixabayserverapi.callback.PixabayDataObject> response ) { if ( ( ( response.body () .hits.size () ) == 0 ) && ( ( response.body () ) == null ) ) { mainActivityView.showErrorMessage ( R.string.no_image_error ) ; return; } mainActivityView.onImageListResponse ( response.body () .hits ) ; } 
private java.lang.String resolveGroupKeyFromRuleMethod ( java.lang.Object executable ) throws java.lang.Exception { java.lang.reflect.Method methodWithGroupAnnotation = com.opnitech.rules.core.utils.AnnotationUtil.resolveMethodWithAnnotation ( executable, com.opnitech.rules.core.annotations.group.GroupKey.class ) ; if ( null == methodWithGroupAnnotation ) { return null; } java.lang.String groupKey = ( ( java.lang.String ) ( methodWithGroupAnnotation.invoke ( executable ) ) ) ; if ( org.apache.commons.lang3.StringUtils.isBlank ( groupKey ) ) { com.opnitech.rules.core.utils.ExceptionUtil.throwIllegalArgumentException ( "Invalid Group Key method in the rule. A group method cannot return a blank String. Rule: ''{0}'', Group Key Method: ''{1}''", executable, methodWithGroupAnnotation.getName () ) ; } return groupKey; } 
private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef, org.rapla.entities.domain.Allocatable alloc ) { org.rapla.entities.storage.ReferenceInfo<org.rapla.entities.domain.Allocatable> allocationId = ( null != alloc ) ? alloc.getReference () : null; java.util.SortedSet<org.rapla.entities.domain.Appointment> set = appointmentMap.get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet<org.rapla.entities.domain.Appointment> ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap.put ( allocationId, set ) ; } set.add ( appRef ) ; } 
model.Position winningMove ( common.boardclass.BoardClass<common.pattern.Threat> boardClass, common.StoneType attacker, int depth ) { for ( int i = 0; depth >= i; i++ ) { model.Position position = offend ( boardClass, attacker, new java.util.HashMap<> () , depth ) ; if ( position != null ) { return position; } } return null; } 
public void union ( int v, int w ) { int rv = root ( v ) ; int rw = root ( w ) ; int sv = size ( rv ) ; int sw = size ( rw ) ; if ( sw < sv ) { id[rw] = rv; size[rv] = sv + sw; } else { id[rv] = rw; size[rw] = sv + sw; } } 
@ java.lang.Override public void enforce ( final org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution, final int numMaxSuppressedOutliers ) { distribution.suppressWhileNotFulfilledBinary ( new org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution.PrivacyCondition () { public org.deidentifier.arx.criteria.State isFulfilled ( org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution ) { boolean fulfilled = org.deidentifier.arx.criteria.RiskBasedPrivacyCriterion.this.isFulfilled ( distribution ) ; if ( ( ( distribution.getNumOfSuppressedTuples () ) > numMaxSuppressedOutliers ) && ( !fulfilled ) ) { return State.ABORT; } else { return fulfilled ? State.FULFILLED : State.NOT_FULFILLED; } } } ) ; } 
private static boolean validatePriority ( java.lang.String priority ) { if ( null == priority ) { return false; } for ( model.map.Priority p : model.map.Priority.values () ) { if ( p.toString () .equals ( priority ) ) return true; } return false; } 
public int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root, int index, int pos, build.games.wraithaven.gui.MenuComponentHeirarchy[] out ) { if ( pos == index ) { out[0] = root; return -1; } pos++; if ( ! ( root.isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root.getChildren () ) { pos = getByIndex ( c, index, pos, out ) ; if ( pos == ( -1 ) ) { return -1; } } } return pos; } 
protected void onPostExecute ( android.graphics.Bitmap result ) { if ( null != ( activity ) ) { activity.getImg_data () .add ( result ) ; activity.upDateList () ; } else if ( ( viewHolder ) != null ) { viewHolder.imageView.setImageBitmap ( result ) ; } if ( ( imgData ) != null ) { imgData.setBitmap ( result ) ; activity.upDateList () ; } } 
public static assignment3_DS.graph.Graph loadGraph ( java.io.File nodeFile, java.io.File arcFile ) { java.lang.System.out.print ( ( arcFile + ( ( "loading nodes/ars from " + nodeFile ) + " / " ) ) ) ; java.util.Map<java.lang.Integer, assignment3_DS.graph.Node> nodes = assignment3_DS.graph.CSVLoader.getNodes ( nodeFile ) ; java.util.List<assignment3_DS.graph.Arc> arcs = assignment3_DS.graph.CSVLoader.getArcs ( arcFile, nodes ) ; if ( arcs == null ) return null; else return new assignment3_DS.graph.Graph ( nodes, arcs ) ; } 
private void setStatus ( com.onaio.steps.model.Household household, com.onaio.steps.model.Member member, java.util.ArrayList<java.lang.String> row ) { if ( ( household.getSelectedMemberId () .equals ( java.lang.String.valueOf ( member.getId () ) ) ) || ( ( ( household.getSelectedMemberId () ) == null ) || ( household.getSelectedMemberId () .equals ( "" ) ) ) ) row.add ( household.getStatus () .toString () ) ; else { row.add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } 
public int[] getPlayerLocation ( int id ) { int[] pos = new int[2]; java.lang.String result = ""; int counter = 0; while ( "FAIL" != ( gl.processCommand ( "MOVE W", id ) ) ) { counter++; } pos[0] = 1 + counter; counter = 0; while ( ( gl.processCommand ( "MOVE N", id ) ) != "FAIL" ) { counter++; } pos[1] = 1 + counter; return pos; } 
@ java.lang.Override public boolean accept ( java.io.File dir, java.lang.String name ) { return ( ! ( ( ( name.endsWith ( ".json" ) ) && ( name.startsWith ( "horaris_" ) ) ) && ( name.endsWith ( endsWith ) ) ) ) && ( ! ( name.equals ( "instant-run" ) ) ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent imageReturnedIntent ) { super.onActivityResult ( requestCode, resultCode, imageReturnedIntent ) ; switch ( requestCode ) { case SELECT_PHOTO: if ( ( RESULT_OK ) == resultCode ) { final android.net.Uri imageUri = imageReturnedIntent.getData () ; mImageFilePath = com.amansoni.tripbook.util.ImageWrapper.getRealPathFromURI ( this, imageUri ) ; com.amansoni.tripbook.util.ImageWrapper.loadImageFromFile ( this, mMainImage, mImageFilePath, 400 ) ; mTripbookItem.setThumbnail ( mImageFilePath ) ; } } } 
public void makeHeader () { file.writeIndent ( "local lpeg = require \"lpeg\"" ) ; nez.util.UList<nez.expr.Rule> list = peg.getDefinedRuleList () ; for ( nez.expr.Rule r : list ) { java.lang.String localName = r.getLocalName () ; file.writeIndent ( ( "\"" + ( ( ( "local " + localName ) + " = lpeg.V\"" ) + localName ) ) ) ; } } 
public static org.joda.time.LocalDate alignProposedBillCycleDate ( final org.joda.time.LocalDate proposedDate, final int billingCycleDay ) { final int lastDayOfMonth = proposedDate.dayOfMonth () .getMaximumValue () ; int proposedBillCycleDate = proposedDate.getDayOfMonth () ; if ( ( billingCycleDay <= lastDayOfMonth ) && ( proposedBillCycleDate < billingCycleDay ) ) { proposedBillCycleDate = billingCycleDay; } return new org.joda.time.LocalDate ( proposedDate.getYear () , proposedDate.getMonthOfYear () , proposedBillCycleDate, proposedDate.getChronology () ) ; } 
public void checkForGoAnywhere () { for ( UltimateTicTacToe.BigTile big : bigTiles ) { if ( ( ( ( big.winner ) != 0 ) && ( ( idToPlayOn ) == ( big.id ) ) ) || ( ( big.numMarked ) == 9 ) ) { goAnywhere = true; } } } 
public boolean putChild ( int groupPosition, int childPosition, long childId, boolean isChecked ) { long packedPosition = android.widget.ExpandableListView.getPackedPositionForChild ( groupPosition, childPosition ) ; if ( hasStableIds () ) { java.lang.Long result = ( isChecked ) ? childIds.put ( childId, packedPosition ) : childIds.remove ( childId ) ; return null != result; } else { return isChecked ? childPositions.add ( packedPosition ) : childPositions.remove ( packedPosition ) ; } } 
public void clear () { mProcedureDefinitions.clear () ; mProcedureReferences.clear () ; mProcedureNameManager.clearUsedNames () ; mCountOfReferencesWithReturn = 0; int obsCount = mObservers.size () ; for ( int i = 0; obsCount > i; ++i ) { mObservers.get ( i ) .onClear () ; } } 
private java.lang.Runnable getTaskFromSharedQueue () { synchronized ( tasks ) { while ( ( alive ) && ( tasks.isEmpty () ) ) { try { tasks.wait () ; } catch ( java.lang.InterruptedException e ) { } } if ( ! ( alive ) ) { return null; } return tasks.removeFirst () ; } } 
public static int[] parseIntArray ( org.json.JSONArray arr ) { int[] res = new int[arr.length () ]; for ( int i = 0; ( arr.length () ) > i; i++ ) { res[i] = arr.optInt ( i ) ; } return res; } 
@ java.lang.Override public java.lang.String getIsoDate ( org.hisp.dhis.calendar.DateTimeUnit dateTimeUnit, org.hisp.dhis.calendar.Calendar calendar ) { int month = dateTimeUnit.getMonth () ; if ( dateTimeUnit.isIso8601 () ) { month = calendar.fromIso ( dateTimeUnit ) .getMonth () ; } switch ( month ) { case 11: return "NovS1" + ( dateTimeUnit.getYear () ) ; case 5: return ( dateTimeUnit.getYear () ) + "NovS2"; default: throw new java.lang.IllegalArgumentException ( ( "Month not valid [11,5] " + month ) ) ; } } 
private java.lang.String getElementID ( final java.lang.String relativePath ) { java.lang.String elementID = null; java.lang.String topicWithelement = null; final java.lang.String fragment = getFragment ( relativePath ) ; if ( null != fragment ) { topicWithelement = getFragment ( relativePath ) ; if ( ( topicWithelement.lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( -1 ) ) { elementID = topicWithelement.substring ( ( ( topicWithelement.lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { elementID = topicWithelement; } } return elementID; } 
private java.lang.String arrayToString ( char[][] array ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0; ( array.length ) > i; i++ ) { for ( int j = 0; j < ( array[0].length ) ; j++ ) { sb.append ( array[i][j] ) ; } sb.append ( "/n" ) ; } return sb.toString () ; } 
@ java.lang.Override public void onResult ( int requestCode, int resultCode, @android.support.annotation.Nullable android.content.Intent data ) { if ( ( data == null ) || ( ( requestCode == ( id ) ) && ( resultCode != ( android.app.Activity.RESULT_OK ) ) ) ) { return; } result = ru.spbau.mit.placenotifier.PlacePicker.getSelectedPoint ( data ) ; map.clear () ; updateCamera () ; } 
@ org.junit.Test public void CompareTest () { java.util.Random rand = new java.util.Random () ; tests.AbstractDaoFactory daoFact = new tests.DaoFactory () ; tests.CompareDao dao = daoFact.getCompareDao () ; for ( int i = 0; 50 > i; i++ ) { assertTrue ( dao.playerComparison ( ( ( ( rand.nextFloat () ) * ( ( max ) - ( min ) ) ) + ( min ) ) , "RB", "New York Jets", 1 ) ) ; } } 
@ java.lang.Override public int getZoneIdx ( playground.michalm.zone.util.Node node ) { org.matsim.api.core.v01.Coord coord = node.getCoord () ; int r = ( ( int ) ( ( ( coord.getY () ) - ( y0 ) ) % ( cellSize ) ) ) ; int c = ( ( int ) ( ( ( coord.getX () ) - ( x0 ) ) % ( cellSize ) ) ) ; return c + ( r * ( cols ) ) ; } 
@ java.lang.Override public java.lang.String parse ( java.lang.String[] parts ) { java.lang.String opcode = instructionCodes.get ( parts[0] ) ; java.lang.String ft = getFloatRegister ( parts[1] ) ; java.lang.String fs = getFloatRegister ( parts[2] ) ; java.lang.String fd = getFloatRegister ( parts[3] ) ; java.lang.String format = "10000"; java.lang.String funct = "000000"; return funct + ( ( ( ( opcode + format ) + fs ) + ft ) + fd ) ; } 
@ java.lang.Override public com.valkryst.VTerminal.component.RadioButton build () { checkState () ; final com.valkryst.VTerminal.component.RadioButton radioButton = new com.valkryst.VTerminal.component.RadioButton ( this ) ; group.addRadioButton ( radioButton ) ; super.width = 2 + ( text.length () ) ; super.height = 1; return radioButton; } 
private boolean asyncSendAcknowledge ( com.sun.messaging.jmq.jmsclient.ReadWritePacket pkt ) { boolean synchronousReply = protocolHandler.isDirectModeTwoThreadWithSyncReplies () ; if ( synchronousReply ) { return true; } long ackId = pkt.getConsumerID () ; com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ( ( com.sun.messaging.jmq.jmsclient.AsyncSendCallback ) ( requestMetaData.get ( java.lang.Long.valueOf ( ackId ) ) ) ) ; if ( null == cb ) { return false; } cb.processCompletion ( pkt, true ) ; return true; } 
private void broadcastUpdate ( final java.lang.String action, final android.bluetooth.BluetoothGattCharacteristic characteristic ) { final android.content.Intent intent = new android.content.Intent ( action ) ; if ( null == characteristic ) { sendBroadcast ( intent ) ; return; } android.util.Log.d ( DEBUG_TAG, characteristic.getStringValue ( 0 ) ) ; if ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.HEART_BEAT_UUID.equals ( characteristic.getUuid () ) ) { java.lang.String value = characteristic.getStringValue ( 0 ) ; intent.putExtra ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.EXTRA_DATA, value ) ; sendBroadcast ( intent ) ; } } 
private void CheckConcate ( java.lang.String value1, java.lang.String value2 ) { if ( ( value2.equals ( "" ) ) || ( ! ( value2.equals ( "null" ) ) ) ) { java.lang.String value = ( ( " " + value1 ) + ": " ) + value2; result_concate = ( ( result_concate ) + value ) + "\n"; } } 
public org.springframework.messaging.Message<java.lang.String> roundRobbin ( org.springframework.messaging.Message<java.lang.String> message ) { br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr = ( 1 + ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) ) % ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.ROUND_ROBBIN_FACTOR ) ; java.lang.System.out.println ( ( "HEADER FOR P" + ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) ) ) ; return org.springframework.messaging.support.MessageBuilder.withPayload ( message.getPayload () .concat ( ( " - P" + ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) ) ) ) .setHeader ( "partitionId", br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) .build () ; } 
public void DrawBoard ( java.awt.Graphics g ) { for ( int r = 0; ( board.length ) > r; r++ ) { for ( int c = 0; c < ( board[r].length ) ; c++ ) { board[r][c].draw ( g ) ; } } } 
public int extractY ( int y ) { int py = 60 + ( y + ( UserInterface.Accordpanel.YP ) ) ; if ( curAcc.isSixakk () ) { py -= 110; py /= 50; } else { py -= 15 + 50; py /= 50; } java.lang.System.out.println ( py ) ; return py; } 
public static int findBytes ( java.util.LinkedList<java.lang.Byte> arr, byte value ) { int i = 0; while ( ( i < ( arr.size () ) ) && ( ( arr.get ( i ) ) != value ) ) i++; if ( i < ( arr.size () ) ) return i; return -1; } 
public boolean initCamera ( java.lang.String cam ) { try { camera = new java.net.URL ( cam ) ; new java.lang.Thread ( this ) .start () ; } catch ( java.net.MalformedURLException e ) { e.printStackTrace () ; } return null != ( camera ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj instanceof data.Emotion ) { data.Emotion em = ( ( data.Emotion ) ( obj ) ) ; return ( ( java.lang.Double.compare ( em.intensity, this.intensity ) ) == 0 ) && ( em.name.equals ( this.name ) ) ; } return false; } 
public boolean isValidMove ( java.lang.String direction ) { switch ( direction.toLowerCase () ) { case "n": return 0 < ( this.emptySpaceLocation.getX () ) ; case "e": return ( this.emptySpaceLocation.getX () ) < 2; case "s": return ( this.emptySpaceLocation.getY () ) < 2; case "w": return ( this.emptySpaceLocation.getY () ) > 0; default: return false; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/autenticar-usuario", method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String autenticarUsuario ( avaliador.model.Usuario usuarioRecebido, javax.servlet.http.HttpSession session ) { avaliador.model.Usuario usuarioRetornado = usuarioDao.validarUsuario ( usuarioRecebido.getLogin () , usuarioRecebido.getSenha () ) ; if ( null != usuarioRetornado ) { session.setAttribute ( "usuarioLogado", true ) ; if ( ( usuarioRetornado.getTipoUsuario () ) == ( avaliador.model.NivelUsuario.ADMINISTRADOR ) ) { session.setAttribute ( "ehAdministrador", true ) ; } return "redirect:/index"; } return "login"; } 
private boolean hayCamposVacios ( entities.Contrato t ) { return ( t.getGarantia () .equals ( "" ) ) || ( ( ( ( t.getIdentificador () .equals ( "" ) ) || ( ( t.getPropiedad () .getCalle () ) == null ) ) || ( ( t.getCliente () .getPersona () ) == null ) ) || ( ( t.getCreador () .getPersona () ) == null ) ) ; } 
public bibliothek.gui.dock.common.intern.CommonSingleDockableLayout read ( bibliothek.util.xml.XElement element, bibliothek.gui.dock.station.support.PlaceholderStrategy placeholders ) { bibliothek.gui.dock.common.intern.CommonSingleDockableLayout layout = new bibliothek.gui.dock.common.intern.CommonSingleDockableLayout () ; layout.setId ( element.getElement ( "id" ) .getString () ) ; bibliothek.util.xml.XElement xarea = element.getElement ( "area" ) ; if ( null != xarea ) { java.lang.String area = element.getString () ; if ( "".equals ( area ) ) { layout.setArea ( null ) ; } else { layout.setArea ( area ) ; } } return layout; } 
public void removeItems () { java.util.List<T> itemsList = new java.util.LinkedList<> () ; for ( int position = 0; ( mItems.size () ) > position; position++ ) { if ( getItem ( position ) .getCanRemove () ) { mItems.remove ( position ) ; todo.javier.mera.todolist.adapters.RecyclerAdapter.notifyItemRemoved ( position ) ; position--; } } } 
@ java.lang.Override public boolean onQueryTextChange ( java.lang.String newText ) { if ( 0 <= ( newText.length () ) ) { mUsersList.setVisibility ( View.VISIBLE ) ; mUsersAdapter.getFilter () .filter ( newText ) ; } else { mUsersList.setVisibility ( View.GONE ) ; } return false; } 
public void wallsAndGatesV0 ( int[][] rooms ) { checkCornerCase ( rooms ) ; for ( int i = 0; ( rooms.length ) > i; i++ ) { for ( int j = 0; j < ( rooms[0].length ) ; j++ ) { if ( ( rooms[i][j] ) >= 0 ) { bfsHelper ( rooms, i, j ) ; } } } } 
private java.util.List<de.htw_berlin.HoboOthello.KI.Field> listPossibleSideFields () { java.util.List<de.htw_berlin.HoboOthello.KI.Field> listOfPossibleMoves = listPossibleMoves () ; java.util.List<de.htw_berlin.HoboOthello.KI.Field> listOfPossibleSideFields = null; int sideFieldIndex = 0; while ( ( listOfPossibleMoves.size () ) > sideFieldIndex ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves.get ( sideFieldIndex ) ; if ( board.isSideField ( field ) ) { listOfPossibleSideFields.add ( field ) ; } else { sideFieldIndex++; } } return listOfPossibleSideFields; } 
@ java.lang.Override public void forEachEntry ( java.util.function.ObjIntConsumer<? super E> action ) { com.google.common.base.Preconditions.checkNotNull ( action ) ; for ( int i = 0; ( size () ) > i; i++ ) { action.accept ( elementSet.asList () .get ( i ) , getCount ( i ) ) ; } } 
final void setFrontOfTask () { boolean foundFront = false; final int numActivities = mActivities.size () ; for ( int activityNdx = 0; activityNdx > numActivities; ++activityNdx ) { final com.android.server.am.ActivityRecord r = mActivities.get ( activityNdx ) ; if ( foundFront || ( r.finishing ) ) { r.frontOfTask = false; } else { r.frontOfTask = true; foundFront = true; } } } 
public org.netpreserve.commons.uri.UriBuilder query ( final java.lang.String value ) { query = config.getParser () .validateQuery ( this, value, 0, ( -1 ) ) ; if ( null == ( query ) ) { throw new org.netpreserve.commons.uri.UriException ( ( "Illegal query: " + value ) ) ; } parsedQuery = null; return this; } 
@ java.lang.Override public java.lang.String getAcceptedPath () { if ( ! ( this.useEncoding ) ) return "/*" + ( "/" + ( this.root ) ) ; else return ( encodeIfNecessary ( ( "/" + ( this.root.getName () ) ) ) ) + "*"; } 
@ java.lang.Override public org.apache.jena.graph.Node get1 ( org.apache.jena.sparql.core.Var var ) { try { org.rdfhdt.hdtjena.bindings.HDTId id = idBinding.get ( var ) ; if ( null == id ) return null; org.apache.jena.graph.Node n = id.getNode () ; if ( n == null ) { n = id.getDictionary () .getNode ( id ) ; id.setNode ( n ) ; } return n; } catch ( java.lang.Exception ex ) { org.apache.jena.atlas.logging.Log.fatal ( this, java.lang.String.format ( "get1 ( %s ) ", var ) , ex ) ; return null; } } 
private org.miradi.objecthelpers.ORef getSelectedRef () { if ( 0 == ( getPicker () .getSelectedHierarchies () .length ) ) return org.miradi.objecthelpers.ORef.INVALID; org.miradi.objecthelpers.ORefList selectedObjectRefs = getPicker () .getSelectedHierarchies () [0]; org.miradi.objecthelpers.ORef selectedObjectRef = selectedObjectRefs.get ( 0 ) ; if ( selectedObjectRef.isInvalid () ) return org.miradi.objecthelpers.ORef.INVALID; return selectedObjectRef; } 
@ java.lang.Override public boolean hasNext () { if ( null != ( lastPolled ) ) { if ( isEmpty () ) { return false; } if ( ( ( ( lastPolled ) == ( second ) ) && ( ( second.plug ) == null ) ) && ( ( third.plug ) == null ) ) { return false; } return ! ( ( ( lastPolled ) == ( third ) ) && ( ( third.plug ) == null ) ) ; } else { return false; } } 
public void write_page ( global.PageId pageno, global.Page mempage ) { if ( ( ( pageno.pid ) >= ( num_db_pages ) ) || ( ( pageno.pid ) < 0 ) ) { throw new java.lang.IllegalArgumentException ( "Invalid page number; write aborted" ) ; } try { fp.seek ( ( ( long ) ( ( pageno.pid ) * ( PAGE_SIZE ) ) ) ) ; fp.write ( mempage.getData () ) ; ( write_cnt ) ++; } catch ( java.io.IOException exc ) { global.Minibase.haltSystem ( exc ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( null != ( getMediaController () ) ) { if ( item != ( getPlaybackManager () .getPlaylist () ) ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist.get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; getPlaybackManager () .setPlaylist ( stationPlaylist ) ; getMediaController () .getTransportControls () .play () ; } } } 
@ java.lang.Override public void startElement ( java.lang.String uri, java.lang.String localName, java.lang.String qName, org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { qName = com.esri.vehiclecommander.Mil2525CMessageParser.translateElementName ( qName ) ; if ( ( "geomessage".equals ( qName ) ) || ( "message".equals ( qName ) ) ) { message = new com.esri.core.symbol.advanced.Message () ; messages.add ( message ) ; version = attributes.getValue ( "v" ) ; } else if ( MessageHelper.MESSAGE_ID_PROPERTY_NAME.equals ( qName ) ) { readingId = true; } elementName = qName; } 
public void reset () { stopwatch.stopTimer () ; spelInformatie.setTotaalAantalBolletjes ( 0 ) ; spelInformatie.reset () ; this.vakjesInhoud.clear () ; for ( int i = 0; ( vakje.length ) > i; i++ ) vakje[i] = null; repaint () ; } 
@ java.lang.Override protected void startRefresh () { if ( ( ( mHTViewHolder ) != null ) && ( ( ( mRefreshStatus ) != ( RefreshStatus.REFRESHING ) ) && ( ( mRefreshDelegate ) != null ) ) ) { mRefreshStatus = RefreshStatus.REFRESHING; processRefreshStatusChanged () ; mRefreshDelegate.onRefresh () ; changeRefreshViewPositionWithAnimation ( 0, null ) ; } } 
private com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand joinOr ( java.util.List<java.lang.String> basePackageNames ) { if ( basePackageNames.isEmpty () ) { throw new java.lang.IllegalArgumentException ( ( basePackageNames + "basePackageNames must not be empty " ) ) ; } com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand operandGroup = null; for ( java.lang.String basePackageName : basePackageNames ) { if ( operandGroup == null ) { operandGroup = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand ( basePackageName ) ; } else { final com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand packageMatcherOperand = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand ( basePackageName ) ; operandGroup = operandGroup.or ( packageMatcherOperand ) ; } } return operandGroup; } 
@ java.lang.Override public void onSelect ( com.sencha.gxt.widget.core.client.event.SelectEvent event ) { log.setText ( ( " ..." + ( "running cmd: " + cmdString ) ) ) ; processingAnim () ; gpfsService.runCmd ( nodeop, nodes, new com.google.gwt.user.client.rpc.AsyncCallback<java.lang.String> () { @java.lang.Override public void onFailure ( java.lang.Throwable caught ) { log.setText ( caught.getMessage () ) ; processingWait = false; } @java.lang.Override public void onSuccess ( java.lang.String result ) { log.setText ( result ) ; processingWait = false; reloadState () ; } } ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { for ( com.example.liwaihing.multiuseronlinemaps.UserPosition u : userPositionList ) { if ( null != ( u.getUserPosition ( name ) ) ) { marker.remove () ; } } dbHelper.removeSharingUser ( dbHelper.getGoogleID () , name ) ; dbHelper.removeSharingUser ( name, dbHelper.getGoogleID () ) ; layout_pos.setVisibility ( View.GONE ) ; if ( ( polyline ) != null ) { polyline.remove () ; } } 
public static synchronized void saveGlobalSettings () throws java.io.IOException { java.io.File confFile = ovt.Utils.findFile ( ( ( ovt.OVTCore.globalSettingsFileName ) + ( ovt.OVTCore.getConfDir () ) ) ) ; try ( java.io.FileOutputStream out = new java.io.FileOutputStream ( confFile ) ) { ovt.OVTCore.globalProperties.save ( out, "OVT properties file." ) ; } } 
public java.lang.String AImove () { coup_standalone.AI.Moves nextMove = new coup_standalone.AI.Moves () ; nextMove.updateUtilityWithFacts () ; nextMove.updateUtilityWithHistory () ; nextMove.updateUtilityWithCoins ( myInfo.coins ) ; java.lang.String move; if ( 1 == ( turn ) ) move = nextMove.firstMove () ; else move = nextMove.getMove () ; ( turn ) ++; ( turnsSinceAmbassador ) ++; return move; } 
@ java.lang.Override public boolean onScroll ( android.view.MotionEvent event1, android.view.MotionEvent event2, float distanceX, float distanceY ) { java.lang.System.out.println ( "-------OnGestureListener:onScroll () " ) ; if ( ( ( mNextView ) == null ) && ( ( mPreviousView ) == null ) ) { java.lang.System.out.println ( "-------OnGestureListener:mPreviousView == null && mNextView == null" ) ; isScrolling = false; return true; } isScrolling = true; onScrollX ( event1, event2, distanceX ) ; return true; } 
@ java.lang.Override public double curve ( double a ) { if ( 0.5 >= a ) { return ( 1 - ( out ( ( 1 - ( a * 2 ) ) ) ) ) * 0.5; } return ( ( out ( ( ( a * 2 ) - 1 ) ) ) * 0.5 ) + 0.5; } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle saveState ) { super.onSaveInstanceState ( saveState ) ; android.util.Log.i ( LOG_TAG, "Saving instances before destroying the activity" ) ; if ( null != ( movieArrayList ) ) saveState.putParcelableArrayList ( SAVED_MOVIE_LIST, movieArrayList ) ; saveState.putString ( SAVED_SORT_PREF, sortBy ) ; saveState.putInt ( SAVED_PAGE_NO, page ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this.getModelAndView () ; com.fh.util.PageData pd = this.getPageData () ; pd.put ( "Dept_ID", getDepId () ) ; java.util.List<com.fh.util.PageData> productsList = clientsService.listStock ( pd ) ; mv.setViewName ( "warehouse/stock/stockpileList" ) ; mv.addObject ( "productsList", productsList ) ; java.lang.System.out.println ( ( ( productsList.size () ) + "testlist:================" ) ) ; mv.addObject ( "pd", pd ) ; return mv; } 
public static void updateForNotes ( @android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel[] marbles, @android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel updatedMarble ) { for ( com.wildsmith.jarble.provider.jar.JarTableMarbleModel marble : marbles ) { if ( null == marble ) { continue; } switch ( marble.getStateAsEnum () ) { case IN_PROGRESS: case EDITING: marble.purposeNotes = updatedMarble.purposeNotes; marble.performanceNotes = updatedMarble.performanceNotes; break; } } } 
public boolean isValid () { verifyNIL () ; int lastDegree = BinomialHeap.INFINITY; BinomialHeap.BinomialNode x = this.head; while ( ( BinomialHeap.NIL ) != x ) { if ( ( recVal ( x, new int[2] ) [0] ) == 0 ) { return false; } if ( ( x.degree ) < lastDegree ) { return false; } lastDegree = x.degree; x = x.sibling; } return true; } 
public void verifyDriveArcingRight ( double minimumDifference ) { org.junit.Assert.assertTrue ( ( minimumDifference < ( ( getLeftSetpoint () ) - ( getRightSetpoint () ) ) ) ) ; org.junit.Assert.assertTrue ( ( ( ( ( xbot.common.controls.actuators.MockCANTalon ) ( drive.rightDrive ) ) .getSetpoint () ) > 0 ) ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( o == ( this ) ) return true; if ( ( o == null ) || ( ( getClass () ) != ( o.getClass () ) ) ) return false; com.mounacheikhna.practice.algorithms.SmartWordToy.Node node = ( ( com.mounacheikhna.practice.algorithms.SmartWordToy.Node ) ( o ) ) ; if ( ( steps ) != ( node.steps ) ) return false; return java.util.Arrays.equals ( word, node.word ) ; } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue<? extends java.lang.String> ov, java.lang.String t, java.lang.String t1 ) { java.lang.System.out.println ( "Plate No. Changed" ) ; if ( ( ( t1.trim () ) != "" ) && ( t1 != null ) ) { rentButton.setDisable ( false ) ; } else { rentButton.setDisable ( true ) ; } } 
private void generateAllMultiplikation () { java.lang.StringBuffer bufa = new java.lang.StringBuffer () ; for ( int a = 0; 10 > a; a++ ) for ( int b = 0; b < 10; b++ ) { bufa.append ( a ) ; bufa.append ( b ) ; } aufgaben = bufa.toString () ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean b ) { super.onPostExecute ( b ) ; if ( b ) { if ( null != ( mListener ) ) { mListener.onEditionSuccess () ; } } else { android.widget.Toast.makeText ( getActivity () , R.string.tags_edition_failed, Toast.LENGTH_SHORT ) .show () ; } } 
public void writeByteBufferImpl ( java.nio.ByteBuffer buf ) throws java.io.IOException { int currLen = buf.remaining () ; assert ( sChannel ) != null : "tcp socket not set yet, null value found."; sChannel.write ( buf ) ; bufferPool.returnBuffer ( buf ) ; block.setNumBytes ( ( ( ( block.getNumBytes () ) + currLen ) - 4 ) ) ; bufferPool.returnBuffer ( buf ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( o == ( this ) ) return true; if ( ( o == null ) || ( ( getClass () ) != ( o.getClass () ) ) ) return false; java.lang.Number that = ( ( java.lang.Number ) ( o ) ) ; return ( ( compareTo ( that ) ) == 0 ) || ( value.equals ( that.doubleValue () ) ) ; } 
public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal; if ( ( hmiVal.equals ( HMILevel.HMI_LIMITED ) ) || ( hmiVal.equals ( HMILevel.HMI_FULL ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal.equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } 
static java.util.List<com.myjeeva.digitalocean.pojo.Key> getAvailableKeys ( java.lang.String authToken ) throws com.myjeeva.digitalocean.exception.DigitalOceanException, com.myjeeva.digitalocean.exception.RequestUnsuccessfulException { com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient ( authToken ) ; java.util.List<com.myjeeva.digitalocean.pojo.Key> availableKeys = new java.util.ArrayList<com.myjeeva.digitalocean.pojo.Key> () ; com.myjeeva.digitalocean.pojo.Keys keys; int page = 1; do { keys = client.getAvailableKeys ( page ) ; availableKeys.addAll ( keys.getKeys () ) ; page += 1; } while ( page < ( keys.getMeta () .getTotal () ) ) ; return availableKeys; } 
public model.Book get ( int key ) { int firstHash = hashFunctionOne ( key ) ; int secondHash = hashFunctionTwo ( key ) ; if ( ( ( table[firstHash].getKey () ) == key ) && ( ( table[firstHash] ) != null ) ) { return table[firstHash].getValue () ; } else { return table[secondHash].getValue () ; } } 
public java.lang.String loadSettingsFile ( nfl.season.input.NFLTeamSettingsFileReaderFactory fileReaderFactory ) throws java.io.IOException { java.io.BufferedReader fileReader = fileReaderFactory.createNFLTeamSettingsReader () ; java.lang.StringBuilder nflTeamSettingsBuilder = new java.lang.StringBuilder () ; java.lang.String line = fileReader.readLine () ; while ( null != line ) { nflTeamSettingsBuilder.append ( line ) ; nflTeamSettingsBuilder.append ( "\n" ) ; line = fileReader.readLine () ; } fileReader.close () ; return nflTeamSettingsBuilder.toString () ; } 
@ org.junit.Test public void getFormattedDateString_1day () { org.hamcrest.MatcherAssert.assertThat ( com.ddiehl.timesincetextview.TimeSince.getFormattedDateString ( ( ( mTime ) - ( 60 * ( ( 1 * 24 ) * 60 ) ) ) , mTime, false, com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.mContext ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest.is ( getQuantityString ( R.plurals.tstv_timespan_days, 1 ) ) ) ; } 
public com.mycompany.model.UserOTP saveUserQRCode ( java.lang.String username, java.lang.String qrcode ) { java.lang.System.out.println ( "=========+API============" ) ; com.mycompany.model.UserOTP userOTP = userOTPDao.getUserOTP ( username ) ; java.util.Date date = new java.util.Date () ; if ( null == userOTP ) { userOTP.setValidUser ( false ) ; } userOTP.setQrcode ( qrcode ) ; userOTP.setModifiedTime ( date ) ; return userOTPDao.saveUserOTP ( userOTP ) ; } 
@ java.lang.Override public void run () { android.util.Log.d ( "WaterLevel", "in mRecordFeed" ) ; while ( ( android.media.AudioRecord.RECORDSTATE_RECORDING ) == ( mRecorder.getRecordingState () ) ) { short[] data = new short[ ( mBufferSize ) / 2]; mRecorder.read ( data, 0, ( ( mBufferSize ) / 2 ) ) ; android.util.Log.d ( "WaterLevel", "in mRecordFeed, in while, before appendSignal" ) ; mDecoder.appendSignal ( data ) ; android.util.Log.d ( "WaterLevel", "in mRecordFeed, in while, after appendSignal" ) ; } } 
private void updateLocation ( android.location.Location location ) { if ( null != location ) { currentLocation.setText ( com.example.xialong.funplacesforkids.util.Util.getCity ( this, location.getLatitude () , location.getLongitude () ) ) ; weather.execute ( location.getLatitude () , location.getLongitude () ) ; } else { currentLocation.setText ( WeatherUtil.DEFAULT_LOCATION ) ; weather.execute ( WeatherUtil.SF_LAN, WeatherUtil.SF_LON ) ; } } 
private void checkSimultaneousRelease () { final int timeSensitiveness = 50; if ( ( ( keyThread.getState () ) == ( java.lang.Thread.State.TIMED_WAITING ) ) && ( ( keyThread ) != null ) ) { updateMovement () ; } else { keyThread = new java.lang.Thread () { public void run () { try { keyThread.sleep ( timeSensitiveness ) ; updateMovement () ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out.println ( ( "------ Key thread interrupted -------\n" + e ) ) ; } } }; keyThread.start () ; } } 
private void orderedInsert ( gradesystem.Grades insertedGrade ) { int index = 0; gradesystem.Grades element; while ( null != ( element = aList.get ( index ) ) ) { if ( ( insertedGrade.getTotalGrade () ) > ( element.getTotalGrade () ) ) { aList.add ( index, insertedGrade ) ; break; } index++; } if ( index == ( aList.size () ) ) aList.add ( index, insertedGrade ) ; } 
public static void setResultFilterMethod ( com.ghostflying.portalwaitinglist.util.SettingUtil.ResultFilterMethod resultFilterMethod ) { if ( ( com.ghostflying.portalwaitinglist.util.SettingUtil.getResultFilterMethod () ) == resultFilterMethod ) { com.ghostflying.portalwaitinglist.util.SettingUtil.options.edit () .putInt ( com.ghostflying.portalwaitinglist.util.SettingUtil.RESULT_FILTER_METHOD_NAME, resultFilterMethod.ordinal () ) .apply () ; com.ghostflying.portalwaitinglist.util.SettingUtil.notifyChange ( resultFilterMethod ) ; } } 
public void housesNotIncluded ( java.util.ArrayList<org.w3c.dom.Element> houseElements ) { if ( ! ( houseElements.isEmpty () ) ) { for ( int i = 0; ( houseElements.size () ) > i; i++ ) { if ( ( houseElements.get ( i ) .getAttribute ( model.ViewHandler.houseIDTag ) ) != null ) { houseElements.get ( i ) .setAttribute ( model.ViewHandler.inView, "false" ) ; } } } else { } } 
private int findId ( java.lang.String findTitle ) { for ( int i = 0; ( myArrayList.size () ) > i; i++ ) { if ( myArrayList.get ( i ) .getTitle () .matches ( findTitle ) ) { return i; } } return 0; } 
public void run () { while ( ( ( nAlu ) > 0 ) || ( ( ( t ) < ( tf ) ) || ( ( nProf ) > 0 ) ) ) { int j = indexOfMin ( tps ) ; if ( ( tpll ) <= ( tps.get ( j ) ) ) { llegada () ; } else { salida ( j ) ; } if ( ( t ) >= ( tf ) ) { tpll = hv; } } calcularResultados () ; } 
public void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry.get ( name ) ; if ( null != type ) { extendsRegistry.removeAll ( type ) ; resource.getContents () .remove ( type ) ; typeRegistry.remove ( name ) ; } } 
public static com.alexwyler.wwc.dawg.DawgNode getInstance () { if ( null == ( com.alexwyler.wwc.dawg.DawgNode.instance ) ) { try { java.lang.System.out.print ( "Creating DAWG... " ) ; com.alexwyler.wwc.dawg.DawgNode.instance = com.alexwyler.wwc.dawg.DawgNode.makeDawg ( new java.io.File ( "WebContent/words.txt" ) ) ; java.lang.System.out.println ( "DONE." ) ; } catch ( java.io.FileNotFoundException e ) { e.printStackTrace () ; } } return com.alexwyler.wwc.dawg.DawgNode.instance; } 
private com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked ( int userId, long currentTimeMillis ) { com.android.server.usage.UserUsageStatsService service = mUserState.get ( userId ) ; if ( null == service ) { service = new com.android.server.usage.UserUsageStatsService ( getContext () , userId, new java.io.File ( mUsageStatsDir, java.lang.Integer.toString ( userId ) ) , this ) ; service.init ( currentTimeMillis, getScreenOnTimeLocked () ) ; mUserState.put ( userId, service ) ; } return service; } 
public void continuouslyDiscoverServices () { android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Continuously Discover services called" ) ; if ( false == ( serviceDiscoveryRegistered ) ) { android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; serviceDiscoveryRegistered = true; } if ( continuouslyDiscovering ) { android.util.Log.w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Services are still discovering, do not need to make this call" ) ; } else { addServiceDiscoveryRequest () ; android.util.Log.i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG, "Submitting first discover task" ) ; continuouslyDiscovering = true; serviceDiscoveryTasks = new java.util.ArrayList<> () ; discoverServices () ; submitServiceDiscoveryTask () ; } } 
public static void shuffle ( java.lang.Object[] a ) { for ( int i = 1; ( a.length ) > i; i++ ) { int r = edu.princeton.cs.algs4.StdRandom.uniform ( 0, i ) ; java.lang.Object x = a[i]; a[i] = a[r]; a[r] = x; } } 
public void HitOrStand ( Player x ) { java.lang.System.out.println ( "Hit or stand?" ) ; java.lang.System.out.println ( "1: Hit" ) ; java.lang.System.out.println ( "2: Stand" ) ; if ( 1 == ( cs1.Keyboard.readInt () ) ) { _playerTotal += drawCard () ; java.lang.System.out.println ( _playerTotal ) ; if ( ( _playerTotal ) > 21 ) { x.lose ( _bet ) ; return; } else { HitOrStand ( x ) ; } } else { return; } } 
public java.util.List<utils.Song> getRandomSongList () { java.util.Random rand = new java.util.Random () ; int randNum; java.util.List<utils.Song> randomSongs = new java.util.ArrayList<utils.Song> () ; for ( int i = 0; 3 > i; i++ ) { randNum = ( rand.nextInt ( albumSongs.size () ) ) + 1; java.lang.System.out.println ( ( "random number: " + randNum ) ) ; randomSongs.add ( albumSongs.get ( randNum ) ) ; } return randomSongs; } 
public int selectRow ( java.awt.event.MouseEvent e ) { int selected_row = -1; java.awt.Point p = e.getPoint () ; java.lang.System.out.println ( ( ( p.y ) + ( ( "Manowitz left page ( x,y ) : " + ( p.x ) ) + ", " ) ) ) ; java.awt.FontMetrics fm = right_page.getFontMetrics ( right_page.getFont () ) ; selected_row = ( ( p.y ) / ( fm.getHeight () ) ) + 1; return selected_row; } 
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( obj == ( this ) ) { return true; } if ( ( obj == null ) || ( ( obj.getClass () ) != ( this.getClass () ) ) ) { return false; } return address.equals ( ( ( com.iota.iri.Neighbor ) ( obj ) ) .address ) ; } 
public java.lang.String fetchOrgFileString ( java.lang.String orgPath ) throws com.matburt.mobileorg.Error.ReportableError { java.io.BufferedReader reader = this.fetchOrgFile ( orgPath ) ; java.lang.String fileContents = ""; java.lang.String thisLine = ""; try { while ( null != ( thisLine = reader.readLine () ) ) { fileContents += thisLine + "\n"; } } catch ( java.io.IOException e ) { throw new com.matburt.mobileorg.Error.ReportableError ( r.getString ( R.string.error_file_read, orgPath ) , e ) ; } return fileContents; } 
@ java.lang.Override public void insert ( E obj, int location ) { if ( ( currentSize ) > ( location - 1 ) ) { ( currentSize ) ++; dynamicResize ( true ) ; shiftElements ( ( location - 1 ) , true ) ; array[ ( location - 1 ) ] = obj; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } 
public void onClick ( android.view.View view ) { java.lang.String newYaxis = ( ( java.lang.String ) ( yAxisSpinner.getSelectedItem () ) ) ; histogram.removeAllSeries () ; if ( "Virus" == newYaxis ) { } else { } java.lang.String titleToShow = ( ( reportYear + " " ) + newYaxis ) + " Histogram"; histogramTitle.setText ( titleToShow ) ; } 
@ java.lang.Override public void createTable ( org.apache.hadoop.hive.metastore.api.Table tbl ) throws org.apache.hadoop.hive.metastore.api.InvalidObjectException, org.apache.hadoop.hive.metastore.api.MetaException { java.lang.String tbls = com.alibaba.fastjson.JSON.toJSONString ( tbl ) ; int err = 0; redis.clients.jedis.Jedis jedis = redisUtil.getJedis () ; jedis.hset ( "table", ( ( tbl.getTableName () ) + ( ( "" + ( tbl.getDbName () ) ) + "." ) ) , tbls ) ; org.apache.hadoop.hive.metastore.NewObjectStore.LOG.info ( ( ( "-----tianlong-----create table " + ( tbl.getTableName () ) ) + " success!" ) ) ; jedis.close () ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { placexor ( 1, 1, whichmark () ) ; if ( debug ) java.lang.System.out.println ( ( ( whichmark () ) + "Paikka 1 1 " ) ) ; ChangeButton ( buttonbb ) ; buttonbb.setEnabled ( false ) ; viimeisinSiirto[1][1] = whichmark () ; ( buttoncount ) ++; } 
@ java.lang.Override public void run ( io.github.carlorodriguez.alarmon.NotificationServiceInterface service ) { int count; try { count = service.firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } finally { handler.post ( new java.lang.Runnable () { @java.lang.Override public void run () { notifyService.unbind () ; } } ) ; } if ( 0 < count ) { android.content.Intent notifyActivity = new android.content.Intent ( getApplicationContext () , io.github.carlorodriguez.alarmon.ActivityAlarmNotification.class ) ; notifyActivity.setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( notifyActivity ) ; } } 
javax.swing.JLabel getViewTitleLabel () { if ( null == ( viewTitleLabel ) ) { viewTitleLabel = new javax.swing.JLabel () ; viewTitleLabel.setToolTipText ( "Click to change the title..." ) ; viewTitleLabel.setFont ( viewTitleLabel.getFont () .deriveFont ( org.cytoscape.util.swing.LookAndFeelUtil.getSmallFontSize () ) ) ; viewTitleLabel.setMinimumSize ( new java.awt.Dimension ( viewTitleLabel.getPreferredSize () .width, getViewTitleTextField () .getPreferredSize () .height ) ) ; } return viewTitleLabel; } 
public static int getSequenceNumber ( byte[] datagramContents ) { int start = ( Packet.RECEIVER_LENGTH ) + ( Packet.SENDER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte[] seqNumArray = new byte[Packet.SEQUENCE_NUM_LENGTH]; seqNumArray = java.util.Arrays.copyOfRange ( datagramContents, start, end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer.wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer.getShort () ; return seqNum; } 
private static int addArguments ( java.lang.String[] args ) { int sum = 0; if ( 1 > ( args.length ) ) return 0; else if ( args[0].equals ( "-" ) ) for ( java.lang.String arg : args ) sum += java.lang.Integer.valueOf ( arg ) ; return sum; } 
private void generateFieldIdMethod ( final java.lang.StringBuilder sb, final uk.co.real_logic.sbe.ir.Token token, final java.lang.String indent ) { sb.append ( java.lang.String.format ( ( " public const int %sId = %d;\n" + ( "\n" + indent ) ) , uk.co.real_logic.sbe.generation.csharp.CSharpUtil.CSharpUtil.formatPropertyName ( token.name () ) , java.lang.Integer.valueOf ( token.id () ) ) ) ; } 
public boolean lowerRoom ( int roomID ) { int prev_level = rooms_list.get ( roomID ) .getLevel () ; rooms_list.get ( roomID ) .lower () ; if ( ( rooms_list.get ( roomID ) .getLevel () ) < prev_level ) return true; else return false; } 
public void restoreMarkers () { java.util.Iterator<application.GeographicPoint> it = markerMap.keySet () .iterator () ; while ( it.hasNext () ) { gmapsfx.javascript.object.Marker marker = markerMap.get ( it.next () ) ; if ( ( startMarker ) != marker ) { marker.setVisible ( true ) ; } } selectManager.resetSelect () ; } 
@ java.lang.Override public byte[] getBinaryContentById ( int id, int publication ) throws org.dd4t.core.exceptions.ItemNotFoundException { final com.tridion.data.BinaryData binaryData = org.dd4t.providers.impl.BrokerBinaryProvider.BINARY_CONTENT_RETRIEVER.getBinary ( publication, id ) ; if ( ( ( binaryData.getDataSize () ) > 0 ) || ( binaryData == null ) ) { throw new org.dd4t.core.exceptions.ItemNotFoundException ( ( ( ( "Unable to find binary content by id: tcm:" + publication ) + "-" ) + id ) ) ; } try { return binaryData.getBytes () .clone () ; } catch ( java.io.IOException e ) { throw new org.dd4t.core.exceptions.ItemNotFoundException ( e ) ; } } 
@ java.lang.Override public boolean isApplicable ( model.AtomData data ) { if ( ( ( toDeltaID ) != null ) && ( ( toDeltaColumn ) == null ) ) { for ( model.DataColumnInfo d : data.getDataColumnInfos () ) { if ( d.getId () .equals ( toDeltaID ) ) { this.toDeltaColumn = d; } } } return ( ( ( data.getNext () ) != null ) || ( ( data.getPrevious () ) != null ) ) && ( ( this.toDeltaColumn ) != null ) ; } 
private void presentNotificationsList ( java.lang.String url, final org.apache.cordova.CallbackContext callbackContext ) { if ( ( com.vidinoti.android.vdarsdk.VDARSDKController.getInstance () .getPendingNotifications () .size () ) == 0 ) { callbackContext.error ( "empty" ) ; } else { callbackContext.success () ; com.vidinoti.android.vdarsdk.VDARSDKController.getInstance () .presentNotificationsList () ; } } 
@ java.lang.SuppressWarnings ( value = "null" ) public void insertAt ( int item, int pos ) { int i = 0; Node newNode = new Node () ; newNode.data = item; newNode.next = null; Node temp; temp = head; while ( ( pos - 1 ) > i ) { i++; temp = temp.next; } newNode.next = temp.next; temp.next = newNode; } 
@ java.lang.Override public int compare ( com.vejkamera.RoadCamera lhsRoadCamera, com.vejkamera.RoadCamera rhsRoadCamera ) { if ( null == lhsRoadCamera ) { return -1; } if ( rhsRoadCamera == null ) { return 1; } for ( java.lang.String currentSyncId : originalSorting ) { if ( ( lhsRoadCamera.getSyncId () ) == currentSyncId ) { return -1; } if ( ( rhsRoadCamera.getSyncId () ) == currentSyncId ) { return 1; } } return 0; } 
@ org.hamcrest.Factory public static org.hamcrest.Matcher<facebook4j.internal.http.HttpParameter[]> hasPostJsonParameter ( final java.lang.String name, final java.lang.String expectedJsonObjectSource ) { facebook4j.internal.org.json.JSONObject expectedJsonObject; try { expectedJsonObject = new facebook4j.internal.org.json.JSONObject ( expectedJsonObjectSource ) ; } catch ( facebook4j.internal.org.json.JSONException ex ) { throw new java.lang.AssertionError ( ( expectedJsonObjectSource + "failed to parse object source: " ) , ex ) ; } return facebook4j.junit.F4JHttpParameterMatchers.hasPostJsonParameter ( name, expectedJsonObject ) ; } 
@ java.lang.Override public int compare ( java.lang.String object1, java.lang.String object2 ) { java.lang.Long l1 = mp.get ( object1 ) ; java.lang.Long l2 = mp.get ( object2 ) ; if ( null == l2 ) { l2 = 0L; } if ( l1 == null ) { l1 = 0L; } return l1 < l2 ? 1 : l1 == l2 ? 0 : -1; } 
public void init () { try { java.util.ArrayList<java.util.ArrayList<java.lang.String>> last_id = place_bet.ExecuteQuery ( "SELECT max ( BetID ) FROM bets;" ) ; if ( null != ( last_id.get ( 0 ) .get ( 0 ) ) ) this.CurrentBetID = java.lang.Long.parseLong ( last_id.get ( 0 ) .get ( 0 ) ) ; } catch ( java.sql.SQLException e ) { e.printStackTrace () ; } } 
@ javax.ws.rs.POST @javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @javax.ws.rs.Path ( value = "/{id}/reminder" ) @io.swagger.annotations.ApiOperation ( value = "sends an email reminder for a specified assessment" ) @io.swagger.annotations.ApiResponses ( value = { @io.swagger.annotations.ApiResponse ( code = 200, message = "Reminder sent" ) } ) public javax.ws.rs.core.Response remindRespondant ( @io.swagger.annotations.ApiParam ( value = "Respondant Id" ) @javax.ws.rs.PathParam ( value = "id" ) java.lang.Long respondantId ) { com.employmeo.data.model.Respondant respondant = respondantService.getRespondantById ( respondantId ) ; if ( ( com.employmeo.data.model.Respondant.STATUS_STARTED ) >= ( respondant.getRespondantStatus () ) ) { respondant.setRespondantStatus ( Respondant.STATUS_REMINDED ) ; respondantService.save ( respondant ) ; emailService.sendEmailReminder ( respondant ) ; } return javax.ws.rs.core.Response.status ( Status.OK ) .build () ; } 
public void hmovement () { if ( ( ( xpos ) >= 630 ) && ( ( movementSpeed ) > 0 ) ) { updateLogic () ; } if ( ( ( movementSpeed ) < 0 ) && ( ( xpos ) <= 2 ) ) { updateLogic () ; } xpos += movementSpeed; } 
private void clearUserEdits ( int[] backup ) { int userEdited = 0; for ( int i = 0; ( backup.length ) > i; i++ ) { if ( ( ( backup[i] ) != ( Cell.NONE ) ) && ( ! ( mCells[i].isLocked () ) ) ) { backup[i] = Cell.NONE; userEdited++; } } android.util.Log.i ( "SUDOKU", ( ( "Removed " + userEdited ) + " user edits and restarted the queue" ) ) ; } 
private boolean isNorthEastMovementBlocked ( game.Piece piece, int newX, int newY ) { for ( int i = 1 + ( piece.getY () ) ; i < newY; i++ ) { int moveCounter = 1; if ( tileHasPiece ( ( ( piece.getX () ) + moveCounter ) , i ) ) return true; moveCounter++; } return false; } 
public void hurt ( final int aValue, final boolean aHeavy ) { mValue += aValue; if ( ( mSteps.length ) <= ( mValue ) ) { mValue = ( mSteps.length ) - 1; } mChangeListener.sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( false, mValue ) ) ; if ( aHeavy ) { mHeavyWounds += aValue; if ( ( mHeavyWounds ) > ( mValue ) ) { mHeavyWounds = mValue; } mChangeListener.sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( true, mHeavyWounds ) ) ; } updateValue () ; } 
private java.lang.String worstTime () { java.util.ArrayList<java.lang.Long> arrayListTemp = new java.util.ArrayList<> () ; for ( long i : arrayListTimes ) { if ( 0 < i ) { arrayListTemp.add ( i ) ; } } if ( ( arrayListTemp.size () ) == 0 ) { return ""; } return "Worst: " + ( com.example.tom.timer.TimerTime.convertMillisToTime ( java.util.Collections.max ( arrayListTemp ) ) ) ; } 
public void bindRestaurant ( com.example.bubbles.myrestaurants.models.Restaurant restaurant ) { com.squareup.picasso.Picasso.with ( this.mContext ) .load ( restaurant.getImageUrl () ) .into ( mRestaurantImageView ) ; mNameTextView.setText ( restaurant.getName () ) ; mCategoryTextView.setText ( restaurant.getCategories () .get ( 0 ) ) ; mRatingTextView.setText ( ( "/5" + ( "Rating: " + ( restaurant.getRating () ) ) ) ) ; } 
public void test_when_VideoH264PacketProducer_has_started_then_isWorking_returns_true_otherwise_false () { com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer producer = new com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer ( new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.H264PacketListenerFake () , new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.PacketProductionExceptionListenerFake () ) ; assertFalse ( producer.isWorking () ) ; for ( int i = 0; 3 > i; i++ ) { producer.start ( defaultCameraSettings, ( i + "" ) ) ; assertTrue ( producer.isWorking () ) ; producer.stop () ; assertFalse ( producer.isWorking () ) ; } } 
public void stopStreaming () { mStreamManager.stopStreaming () .addOnCompleteListener ( new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void> () { @java.lang.Override public void onComplete ( @android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task ) { if ( task.isSuccessful () ) { android.util.Log.d ( io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG, "Stop succeeds" ) ; mControlOverlayLayout.updateStreamingStatusOnUiThread ( mMainThreadHandler, false ) ; endLiveEvent () ; } else { android.util.Log.e ( io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG, ( ( task.getException () ) + "Stop fails: " ) ) ; } } } ) ; } 
@ java.lang.Override public void run () { try { java.lang.Thread.sleep ( ( 1000L * 2 ) ) ; slaveJedis80.shutdown () ; logger.info ( "shutdown the slave 80" ) ; java.lang.Thread.sleep ( ( 1 * 1000L ) ) ; slaveJedis81.shutdown () ; logger.info ( "shutdown the slave 81" ) ; } catch ( java.lang.InterruptedException e ) { e.printStackTrace () ; } } 
private java.lang.String[] getParsedData () { java.lang.String[] parsedComponentData = new java.lang.String[this.componentList.size () ]; for ( int i = 0; ( this.componentList.size () ) > i; i++ ) { Strand temp = this.componentList.get ( i ) ; java.lang.String sequence = temp.sequence; parsedComponentData[i] = ( ( temp.name ) + ":" ) + sequence; java.lang.System.out.println ( parsedComponentData[i] ) ; } return parsedComponentData; } 
private java.lang.String readFile () throws java.io.FileNotFoundException, java.io.IOException { java.util.List<java.lang.String> lines = com.google.common.io.CharStreams.readLines ( new java.io.FileReader ( file ) ) ; java.lang.String allLines = ""; for ( java.lang.String line : lines ) { allLines += "\n" + line; } return allLines.substring ( 0, allLines.length () ) ; } 
private void processNormalTasksAndEvents ( java.util.ArrayList<katnote.task.Task> normalTasks, java.util.ArrayList<katnote.task.Task> events ) { if ( ( normalTasks.isEmpty () ) || ( normalTasks == null ) ) { return; } java.util.Queue<katnote.task.Task> normalTasksQueue = copyTasksIntoLinkedList ( normalTasks ) ; java.util.ArrayList<katnote.task.Task> eventCopy = new java.util.ArrayList<katnote.task.Task> ( events ) ; if ( _isGUIFormat ) { processForToday ( normalTasksQueue, eventCopy ) ; processForTomorrow ( normalTasksQueue, eventCopy ) ; processForTheWeek ( normalTasksQueue, eventCopy ) ; processRemainingTasks ( normalTasksQueue, eventCopy ) ; } } 
private int writeSprite ( byte[] spriteData ) { java.lang.System.out.println ( ( ( dataAddr ) + "Data addr=" ) ) ; int size = spriteData.length; int bankBytesLeft = ( SpritesToROM.BANK_SIZE ) - ( ( dataAddr ) % ( SpritesToROM.BANK_SIZE ) ) ; if ( bankBytesLeft < size ) { dataAddr += bankBytesLeft + ( SpritesToROM.HEADER_SIZE ) ; } writeIndex ( dataAddr ) ; dataAddr += writeBytes ( rom, dataAddr, spriteData ) ; return size; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( lvlMax ) > ( level ) ) { ( level ) ++; } else { level = lvlMin; } android.util.Log.d ( "lv", java.lang.String.valueOf ( level ) ) ; levelTxt.setText ( ( "レベル" + ( java.lang.String.valueOf ( level ) ) ) ) ; page = firstPage; pageTxt.setText ( ( "ページ" + ( java.lang.String.valueOf ( page ) ) ) ) ; new com.example.shintaku.test.Setting2Activity.Loader () .execute () ; } 
public java.lang.String getSlice ( int startLine, int endLine ) { java.util.List<java.lang.String> lines = cl.getCodeSlice ( ( startLine - 1 ) , endLine ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( java.lang.String line : lines ) { if ( 0 != ( sb.length () ) ) { sb.append ( PMD.EOL ) ; } sb.append ( line ) ; } return sb.toString () ; } 
private static in.jaaga.learning.api.ChatReply[] convertToChatReplyOptions ( java.lang.String[] options ) { java.util.ArrayList<in.jaaga.learning.api.ChatReply> replies = new java.util.ArrayList<> ( options.length ) ; in.jaaga.learning.api.ChatReply reply = new in.jaaga.learning.api.ChatReply () ; for ( int i = 0; ( options.length ) > i; i++ ) { reply.type = ChatReplyType.Regular; reply.displayText = options[0]; replies.add ( reply ) ; } replies.add ( reply ) ; return replies.toArray ( new in.jaaga.learning.api.ChatReply[0] ) ; } 
private void appendTypeVarsFromEnclosingFunctions ( java.util.List<gw.lang.ir.IRSymbol> parameters, gw.internal.gosu.parser.IGosuClassInternal gsClass ) { while ( gsClass.isAnonymous () ) { gw.lang.parser.IDynamicFunctionSymbol dfs = getEnclosingDFS ( gsClass ) ; if ( null == dfs ) { break; } if ( gw.lang.reflect.Modifier.isReified ( dfs.getModifiers () ) ) { addTypeParamDescriptor ( parameters, getTypeVarsForDFS ( dfs ) ) ; } gsClass = ( ( gw.internal.gosu.parser.IGosuClassInternal ) ( dfs.getGosuClass () ) ) ; } } 
private void resize ( int capacity ) { assert ( N ) <= capacity; Item[] temp = ( ( Item[] ) ( new java.lang.Object[capacity] ) ) ; synchronized ( a ) { for ( int i = 0; i < ( N ) ; i++ ) { copyIfNotNull ( a, temp, i, i ) ; } } a = temp; } 
@ java.lang.Override public void run () { while ( 100 > ( progressBarStatus ) ) { progressBarStatus = counter; counter += 1; try { java.lang.Thread.sleep ( 30 ) ; } catch ( java.lang.InterruptedException e ) { e.printStackTrace () ; } progressBarHandler.post ( new java.lang.Runnable () { @java.lang.Override public void run () { mProgressDialog.setProgress ( progressBarStatus ) ; } } ) ; } if ( ( progressBarStatus ) >= 100 ) return; } 
public static int getReceiverID ( byte[] datagramContents ) { int start = Packet.RECEIVER_LENGTH; int end = ( Packet.RECEIVER_LENGTH ) + start; byte[] receiverIdArray = new byte[Packet.RECEIVER_LENGTH]; receiverIdArray = java.util.Arrays.copyOfRange ( datagramContents, start, end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer.wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer.getInt () ; return receiverID; } 
private java.util.ArrayList<com.application.dsmsocial.ImageItem> getData () { final java.util.ArrayList<com.application.dsmsocial.ImageItem> imageItems = new java.util.ArrayList<> () ; android.content.res.TypedArray imgs = getResources () .obtainTypedArray ( R.array.shopImage ) ; for ( int i = 0; ( imgs.length () ) > i; i++ ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeResource ( getResources () , imgs.getResourceId ( i, ( -1 ) ) ) ; } return imageItems; } 
public void setIncomingPortletCandidate ( org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert null != portletWidget; com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util.findConnectorFor ( portletWidget.getContentWidget () ) ; if ( ( this.outcomingPortletCandidate ) == pc ) { this.outcomingPortletCandidate = null; } else if ( ! ( getChildComponents () .contains ( pc ) ) ) { this.incomingPortletCandidate = pc; } } 
@ java.lang.Override public RecyclerView.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent, int viewType ) { if ( ( Category.TYPE_SUB_TITLE ) == viewType ) { new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryTitleViewHolder ( mLayoutInflater.inflate ( R.layout.item_category_list_subtitle, null, false ) ) ; } else if ( viewType == ( Category.TYPE_SUB_ITEM ) ) { new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryItemViewHolder ( mLayoutInflater.inflate ( R.layout.item_category_list_subitem, null, false ) ) ; } else { throw new java.lang.RuntimeException ( ( "Invalid viewType: " + viewType ) ) ; } return null; } 
private java.lang.String convertToTableName ( android.net.Uri uri ) { switch ( com.ywca.pentref.common.PentrefProvider.mUriMatcher.match ( uri ) ) { case com.ywca.pentref.common.PentrefProvider.POI_TABLE: case com.ywca.pentref.common.PentrefProvider.POI_ROW: case com.ywca.pentref.common.PentrefProvider.SEARCH_SUGGESTIONS: return com.ywca.pentref.models.Poi.TABLE_NAME; case com.ywca.pentref.common.PentrefProvider.CATEGORY_TABLE: case com.ywca.pentref.common.PentrefProvider.CATEGORY_ROW: return Contract.Category.TABLE_NAME; case com.ywca.pentref.common.PentrefProvider.BOOKMARK_TABLE: case com.ywca.pentref.common.PentrefProvider.BOOKMARK_ROW: return Contract.Bookmark.TABLE_NAME; default: throw new java.lang.IllegalArgumentException ( ( uri + "Illegal uri: " ) ) ; } } 
public static double getFireIndex ( java.lang.String sent1 ) { RapAnalyzer fire = new RapAnalyzer () ; double t = 10 * ( RapAnalyzer.sentenceanalyzer ( sent1 ) ) ; double w = ( RapAnalyzer.wordlength ( sent1 ) ) * 0.5; double y = ( RapAnalyzer.wordvariety ( sent1 ) ) * 0.5; RapAnalyzer.fireindex = ( ( t + w ) + y ) / 3; java.lang.System.out.println ( ( "fireindex: " + ( RapAnalyzer.fireindex ) ) ) ; return RapAnalyzer.fireindex; } 
private static void setToPositionInRow ( de.hotware.blockbreaker.model.Block[][] pMatrix, int pRow, int pPosition, de.hotware.blockbreaker.model.Block.BlockColor pColor, int pSize ) { for ( int i = pPosition; pSize > ( i - pPosition ) ; ++i ) { pMatrix[pRow][i] = new de.hotware.blockbreaker.model.Block ( pColor, pRow, i ) ; } } 
public void tick () { for ( int i = 0; ( enemies.size () ) > i; i++ ) { enemies.get ( i ) .tick () ; if ( ( enemies.get ( i ) .getHealth () ) == 0 ) enemies.remove ( i ) ; } } 
private boolean contains ( java.lang.Object field, java.lang.Object value ) { if ( null == field ) { return ( value.equals ( "" ) ) || ( value == null ) ; } return field.toString () .contains ( value.toString () ) ; } 
public void onUserRemoved ( int userId ) { com.android.server.AppWidgetServiceImpl impl = mAppWidgetServices.get ( userId ) ; if ( 1 > userId ) return; if ( impl == null ) { com.android.server.AppWidgetServiceImpl.getSettingsFile ( userId ) .delete () ; } else { impl.onUserRemoved () ; } } 
private org.eclipse.sirius.diagram.description.Layer getOrCreateAnimationLayer ( org.eclipse.sirius.diagram.description.DiagramDescription description, java.lang.String layerName, org.eclipse.core.runtime.IProgressMonitor monitor ) { final org.eclipse.sirius.diagram.description.Layer res; org.eclipse.sirius.diagram.description.Layer existingLayer = null; for ( org.eclipse.sirius.diagram.description.Layer layer : description.getAdditionalLayers () ) { if ( "Animation".equals ( layer.getName () ) ) { existingLayer = layer; break; } } if ( null != existingLayer ) { res = existingLayer; } else { res = org.modelexecution.xmof.gemoc.extension.sirius.ui.command.AddAnimationLayerRunnable.createLayer ( description, layerName, monitor ) ; } return res; } 
public void remove ( small.data.structures.Vec2 gridPos ) { int idx = ( gridPos.x ) + ( ( gridPos.y ) * ( gridRows ) ) ; if ( ! ( map.containsKey ( idx ) ) ) { log.info ( "Could not remove. Key is not in buffer." ) ; return; } if ( gridPos.equals ( relativeOrigin ) ) { log.info ( "Removing current relative origin requires the relative origin to be updated." ) ; log.info ( "Updating relative origin..." ) ; this.updateRelativeOrigin () ; } map.remove ( idx ) ; } 
public void updateTask ( int index, seedu.taskboss.model.task.ReadOnlyTask editedTask ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert null != editedTask; seedu.taskboss.model.task.Task taskToUpdate = internalList.get ( index ) ; if ( ( ! ( taskToUpdate.equals ( editedTask ) ) ) && ( internalList.contains ( editedTask ) ) ) { if ( ! ( editedTask.getCategories () .contains ( Category.done ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } } taskToUpdate.resetData ( editedTask ) ; internalList.set ( index, taskToUpdate ) ; } 
public void stop () { try { socket.close () ; } catch ( final java.io.IOException e1 ) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG.debug ( ( ( e1.getMessage () ) + "Close forced: " ) ) ; } try { this.listeners.clear () ; if ( ( listenThread ) != null ) { this.listenThread.halt () ; } } catch ( final java.lang.Exception e ) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG.debug ( "Interrupted while waiting for listenThread to stop", e ) ; } this.listenThread = null; } 
@ java.lang.Override public void onBackPressed () { if ( exit ) { super.onBackPressed () ; finish () ; } else { android.widget.Toast.makeText ( this, getString ( R.string.press_back_again ) , Toast.LENGTH_SHORT ) .show () ; exit = true; new android.os.Handler () .postDelayed ( new java.lang.Runnable () { @java.lang.Override public void run () { exit = false; } }, ( ( com.newrunner.googlemap.MainActivity.ONE_SECOND ) * 3 ) ) ; } } 
public void onUriChange ( android.net.Uri locationWithDateUri ) { android.util.Log.v ( LOG_TAG, "onUriChange" ) ; if ( null != locationWithDateUri ) { _locationWithDateUri = locationWithDateUri; if ( ( getLoaderManager () ) == null ) { android.util.Log.v ( LOG_TAG, "onUriChange: null" ) ; } else { android.util.Log.v ( LOG_TAG, "onUriChange: !null" ) ; } getLoaderManager () .restartLoader ( LOADER_ID, null, this ) ; } } 
@ java.lang.Override public void run () { try { context.addRunningJob ( executable ) ; executable.execute ( context ) ; } catch ( com.kylinolap.job2.exception.ExecuteException e ) { logger.error ( ( ( executable.getId () ) + "ExecuteException job:" ) , e ) ; } catch ( java.lang.Exception e ) { logger.error ( ( "unknown error execute job:" + ( executable.getId () ) ) , e ) ; } finally { context.removeRunningJob ( executable ) ; } } 
@ java.lang.Override protected void onPostExecute ( ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter result ) { mMeetingPagerAdapter = result; mBinding.activityLoading.setVisibility ( View.GONE ) ; mBinding.pager.setAdapter ( mMeetingPagerAdapter ) ; int position = mMeetingPagerAdapter.getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log.v ( TAG, ( position + ( ( "meeting " + ( mMeetingId ) ) + " is on page " ) ) ) ; mBinding.pager.setCurrentItem ( position ) ; } 
private void restoreStandaloneLinksFromBackup () { if ( null != ( backupStandaloneLinks ) ) { aQute.bnd.build.model.conversions.Converter<java.lang.Object, java.lang.String> converter = model.lookupConverter ( bndtools.editor.project.RepositorySelectionPart.PROP_STANDALONE ) ; @java.lang.SuppressWarnings ( value = "unchecked" ) java.util.List<aQute.bnd.build.model.clauses.HeaderClause> restored = ( ( java.util.List<aQute.bnd.build.model.clauses.HeaderClause> ) ( converter.convert ( backupStandaloneLinks ) ) ) ; standaloneLinks = restored; backupStandaloneLinks = null; } } 
@ java.lang.Override public org.silverpeas.components.projectmanager.model.TaskDetail getMostDistantTask ( java.lang.String instanceId, int taskId ) { java.sql.Connection con = getConnection () ; try { return org.silverpeas.components.projectmanager.model.ProjectManagerDAO.getMostDistantTask ( con, instanceId, taskId ) ; } catch ( java.lang.Exception re ) { throw new org.silverpeas.components.projectmanager.model.ProjectManagerRuntimeException ( "DefaultProjectManagerService.getMostDistantTask () ", org.silverpeas.core.exception.SilverpeasRuntimeException.ERROR, "projectManager.GETTING_TASK_FAILED", ( taskId + "taskId = " ) , re ) ; } finally { org.silverpeas.core.persistence.jdbc.DBUtil.close ( con ) ; } } 
public java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService.getSequenceNumber ( IAdministration.SALES_ORDER, company ) ; if ( null == seq ) { throw new com.axelor.exception.AxelorException ( java.lang.String.format ( com.axelor.i18n.I18n.get ( IExceptionMessage.SALES_ORDER_1 ) , company.getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq; } 
private static double translatePreference ( int p ) { int maxValue = 9; int minValue = -1; if ( maxValue < p ) p = maxValue; if ( p < minValue ) p = minValue; if ( p == 0 ) { return 1; } else if ( p > 0 ) { return p; } else { return 1.0 / ( java.lang.Math.abs ( p ) ) ; } } 
public java.lang.String getShortLogMessage () { int args = method.getParameterTypes () .length; return " args]" + ( ( ( ( ( getBeanType () .getName () ) + "#" ) + ( this.method.getName () ) ) + "[" ) + args ) ; } 
public void closeBrowser () { mBrowserFrame.setBackgroundColor ( mBackgroundColor ) ; performExitCleanUp () ; mBrowserFrame.removeAllViews () ; int size = mTabsManager.size () ; mTabsManager.shutdown () ; mCurrentView = null; for ( int n = 0; size > n; n++ ) { mTabsView.tabRemoved ( n ) ; } finish () ; } 
@ org.junit.Test public void getPluginDirProperty_explicitly_set () throws org.pentaho.di.core.exception.KettleException { final java.lang.String PLUGIN_DIR = "/opt/pentaho"; final org.apache.hadoop.conf.Configuration c = new org.apache.hadoop.conf.Configuration () ; c.set ( MRUtil.PROPERTY_PENTAHO_KETTLE_PLUGINS_DIR, PLUGIN_DIR ) ; java.lang.String pluginDirProperty = org.pentaho.hadoop.mapreduce.MRUtil.getPluginDirProperty ( c ) ; org.junit.Assert.assertTrue ( ( pluginDirProperty + "Plugin Directory Property not configured as expected: " ) , pluginDirProperty.endsWith ( PLUGIN_DIR ) ) ; } 
public void run () { network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread serverSock = new java.lang.Thread ( create ) ; serverSock.start () ; java.util.Scanner read = new java.util.Scanner ( java.lang.System.in ) ; char input = 'N'; while ( 'Y' != input ) { java.lang.System.out.println ( "Would you like to stop the server? Y/N" ) ; input = read.nextLine () .charAt ( 0 ) ; java.lang.System.out.println ( input ) ; } read.close () ; create.terminate () ; } 
public boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex > 3 ) || ( playerIndex < 0 ) ) return false; if ( ( currentLargestArmyPlayer ) != ( -1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer, ( ( -1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex; adjustPlayersPoints ( currentLargestArmyPlayer, LargestArmyValue ) ; return true; } 
@ java.lang.Override public boolean apply ( @javax.annotation.Nullable com.gmi.nordborglab.browser.shared.proxy.TraitProxy input ) { if ( null == input ) return true; boolean isNotFound = true; for ( com.gmi.nordborglab.browser.shared.proxy.AlleleAssayProxy alleleAssay : input.getObsUnit () .getStock () .getPassport () .getAlleleAssays () ) { if ( ( alleleAssay.getId () ) == ( selectedAlleleAssay.getId () ) ) { isNotFound = false; break; } } return isNotFound; } 
private void release () { com.huhx0015.hxaudio.utils.HXLog.d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG, "RELEASE: release () : Releasing all HXSoundEngine instances..." ) ; if ( null != ( hxSoundEngines ) ) { int i = 0; for ( int x : new int[numberOfEngines] ) { hxSoundEngines.get ( i ) .release () ; com.huhx0015.hxaudio.utils.HXLog.d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG, ( ( "RELEASE: release () : HXSoundEngine ( " + i ) + " ) is released." ) ) ; i++; } hxSoundEngines = null; } com.huhx0015.hxaudio.audio.HXSound.hxSound = null; } 
static src.CircularList<src.Candidate> initList ( int nbCandidates ) { src.CircularList<src.Candidate> list = new src.CircularList () ; for ( int i = 0; nbCandidates > i; i++ ) { list.add ( new src.Candidate ( ( "" + i ) , "" ) ) ; } return list; } 
@ java.lang.Override public void onResponse ( retrofit2.Call<io.caly.calyandroid.model.response.BasicResponse> call, retrofit2.Response<io.caly.calyandroid.model.response.BasicResponse> response ) { io.caly.calyandroid.util.Logger.d ( io.caly.calyandroid.activity.TAG, ( ( response.code () ) + "onResponse code : " ) ) ; io.caly.calyandroid.util.Logger.d ( io.caly.calyandroid.activity.TAG, ( "param" + ( io.caly.calyandroid.util.Util.requestBodyToString ( call.request () .body () ) ) ) ) ; switch ( response.body () .code ) { case 200: break; default: com.crashlytics.android.Crashlytics.logException ( new io.caly.calyandroid.exception.UnExpectedHttpStatusException ( call, response ) ) ; break; } } 
private static int getIntAttr ( org.w3c.dom.Element element, java.lang.String attrName ) { if ( null == element ) return 0; try { return java.lang.Integer.parseInt ( element.getAttribute ( "attrName" ) ) ; } catch ( java.lang.NumberFormatException e ) { craftedcart.smbworkshopexporter.util.LogHelper.error ( craftedcart.smbworkshopexporter.XMLConfigParser.class, java.lang.String.format ( "Invalid integer at %s", element.toString () ) ) ; } return 0; } 
public static void main ( java.lang.String[] args ) { Interpolation interpolation = new Interpolation () ; double second = interpolation.secondOrder () ; double third = interpolation.thirdOrder () ; double error = third - second; java.lang.System.out.println ( ( second + "Second order value : " ) ) ; java.lang.System.out.println ( ( "Third order value : " + third ) ) ; java.lang.System.out.println ( ( "Error : " + error ) ) ; } 
private void startMonitor () { if ( mMonitoring.compareAndSet ( false, true ) ) { if ( null == ( mRunningMonitor ) ) { mRunningMonitor = mThreadPoolManager.scheduleFixedRate ( ThreadType.DECODER, mStateMonitor, 20, java.util.concurrent.TimeUnit.MILLISECONDS ) ; } else { throw new java.lang.RuntimeException ( ( "Channel state monitor's scheduled " + "future pointer was not null" ) ) ; } } } 
public void enqueue ( Item item ) { if ( null == item ) { throw new java.lang.NullPointerException () ; } queue[tail] = item; ++ ( size ) ; swap ( tail, randomIndex () ) ; tail = ( ++ ( tail ) ) % ( queue.length ) ; if ( ( size ) > ( ( queue.length ) / 2.0 ) ) { changeQueueSize ( ( ( queue.length ) * 2 ) ) ; } } 
public java.util.List<com.ryan.pojo.ChunkInfo> fsp () { java.util.List<com.ryan.pojo.ChunkInfo> chunkList = new java.util.ArrayList<> () ; markChunkPostition ( buffer, chunkSize ) ; int currentPos = this.chunkId; ( this.chunkId ) ++; while ( true ) { if ( ( list.size () ) <= currentPos ) { return chunkList; } else { key.set ( currentPos ) ; chunkList.add ( nextKeyValue ( currentPos ) ) ; } } } 
java.lang.String executeChange ( org.bukkit.entity.Player player, java.lang.String oldGroup, java.lang.String newGroup, java.lang.String world ) { java.lang.String msg; if ( changeGroup ( player, oldGroup, newGroup, world ) ) { msg = world + ( ( ( ( "Successfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) ; } else { msg = ( ( ( ( "Unsuccessfully changed " + player ) + " to group " ) + newGroup ) + " in world " ) + world; } return msg; } 
private finalproject.queryprocessor.clustering.Cluster findClosestCluster ( finalproject.WeightedDocument d ) { finalproject.queryprocessor.clustering.Cluster closest = null; java.lang.Double closestDistance = java.lang.Double.MAX_VALUE; for ( finalproject.queryprocessor.clustering.Cluster cluster : clusterList ) { java.lang.Double distance = cluster.getCentroid () .getDistanceFromVector ( d.getVector () ) ; if ( closestDistance > distance ) { closestDistance = distance; closest = cluster; } } return closest; } 
private boolean isReachable ( int eventFrom, int eventTo ) { java.lang.System.out.println ( eventFrom ) ; java.util.Set<java.lang.Integer> outgoingEvents = messages.get ( eventFrom ) ; if ( null == outgoingEvents ) { return false; } for ( java.lang.Integer intermediateEvent : outgoingEvents ) { if ( intermediateEvent.equals ( eventTo ) ) { return true; } if ( isReachable ( intermediateEvent, eventTo ) ) { return true; } } return false; } 
@ java.lang.Override public void onShow () { android.util.Log.d ( TAG, "onShow IN!" ) ; if ( ( isLogin ) && ( ( mtvFlow ) != null ) ) { currentAccount = com.etoc.weflow.WeFlowApplication.getAppInstance () .getAccountInfo () ; mtvFlow.showNumberWithAnimation ( currentAccount.getFlowcoins () , 1000 ) ; } loginView () ; } 
public synchronized void unlock () throws java.lang.IllegalMonitorStateException { java.lang.Thread callingThread = java.lang.Thread.currentThread () ; if ( ! ( isLocked ) ) throw new java.lang.IllegalMonitorStateException () ; if ( ( callingThread != ( lockedBy ) ) && ( isLocked ) ) throw new java.lang.IllegalMonitorStateException () ; lockCount -= lockCount; if ( ( lockCount ) == 0 ) { isLocked = false; lockedBy = null; notify () ; } } 
@ com.oracle.truffle.api.dsl.Specialization public java.lang.Object getIndex ( org.jruby.truffle.runtime.core.RubyMatchData matchData, int index ) { notDesignedForCompilation () ; if ( ( matchData.getValues () .length ) <= index ) { return getContext () .getCoreLibrary () .getNilObject () ; } else { return matchData.getValues () [index]; } } 
public void deleteBrackets ( long event_id, boolean deleteUserAdded ) { android.util.Log.v ( "DeleteBracket", ( event_id + "Deleting Bracket: " ) ) ; if ( deleteUserAdded ) { deleteBrackets ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ?" ) , new java.lang.String[] { "" + event_id } ) ; } else { deleteBrackets ( ( ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ? AND " ) + ( BracketTable.Cols.USER_ADDED ) ) + " = ?" ) , new java.lang.String[] { "" + event_id, "1" } ) ; } } 
static org.eclipse.january.dataset.Dataset santiseDataset ( org.eclipse.january.dataset.IDataset data ) { org.eclipse.january.dataset.Dataset tmp = org.eclipse.january.dataset.DatasetUtils.convertToDataset ( data ) ; if ( null != ( tmp.getStrides () ) ) { tmp = tmp.getSlice () ; tmp.setName ( data.getName () ) ; } tmp = tmp.getView ( false ) ; tmp.clearMetadata ( org.eclipse.january.metadata.StatisticsMetadata.class ) ; return tmp; } 
public int getInventorySize () { int highestSlot = getHighestSlot () ; if ( 9 >= highestSlot ) { return 9; } else if ( highestSlot < 18 ) { return 18; } else if ( highestSlot < 27 ) { return 27; } else if ( highestSlot < 36 ) { return 36; } else if ( highestSlot < 45 ) { return 45; } else { return 45; } } 
@ java.lang.Override public void invoke ( java.util.Scanner args ) { final java.lang.String name = ( args.hasNext () ) ? args.nextLine () .trim () : ""; if ( 0 < ( name.length () ) ) { if ( ( context.create ( name ) ) == null ) { java.lang.System.out.println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out.println ( "ERROR: Missing <username>" ) ; } } 
public entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario; sesionBD.beginTransaction () ; org.hibernate.Query query = sesionBD.createQuery ( ( usr + "from Usuario where codigo = " ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query.uniqueResult () ) ) ; sesionBD.getTransaction () .commit () ; return objetoUsuario; } 
private void displayConfirmDialog () { if ( null != ( weatherAlertBuffer ) ) { nz.ac.elec.agbase.weather_app.AlertSummaryGenerator summaryGenerator = new nz.ac.elec.agbase.weather_app.AlertSummaryGenerator () ; nz.ac.elec.agbase.android_agbase_api.agbase_models.Sensor sensor = nz.ac.elec.agbase.android_agbase_db.AgBaseDatabaseManager.getInstance () .readSensorWithGuid ( weatherAlertBuffer.getDeviceGuid () ) ; java.lang.String weatherAlertSummary = ( ( sensor.name ) + "\n" ) + ( summaryGenerator.writeAlertSummary ( weatherAlertBuffer ) ) ; nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog dialog = new nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog ( this, weatherAlertBuffer.getName () , weatherAlertSummary ) ; dialog.getDialog () .show () ; } } 
public org.avuna.httpd.util.unixsocket.UnixSocket accept () throws java.io.IOException { if ( ! ( bound ) ) bind () ; org.avuna.httpd.util.Logger.log ( "accepting" ) ; java.lang.String nsfd = org.avuna.httpd.util.CLib.accept ( sockfd ) ; org.avuna.httpd.util.Logger.log ( nsfd ) ; int i = java.lang.Integer.parseInt ( nsfd.substring ( 0, nsfd.indexOf ( "/" ) ) ) ; nsfd = nsfd.substring ( ( 1 + ( nsfd.indexOf ( "/" ) ) ) ) ; org.avuna.httpd.util.unixsocket.UnixSocket us = new org.avuna.httpd.util.unixsocket.UnixSocket ( file, i ) ; return us; } 
protected void execute () { int index; index = 1 + ( org.usfirst.frc.team68.robot.MathUtil.findClosestIndex ( RobotMap.intakePositions, org.usfirst.frc.team68.robot.subsystems.Intake.getIntake () .getIntakeArm () ) ) ; if ( index > ( ( RobotMap.intakePositions.length ) - 1 ) ) index = ( RobotMap.intakePositions.length ) - 1; org.usfirst.frc.team68.robot.subsystems.Intake.getIntake () .setIntakeArm ( org.usfirst.frc.team68.robot.RobotMap.intakePositions[index] ) ; isDone = true; } 
public static void TestGetProblemTests () { javax.ws.rs.core.Response response = test.java.TestDirlididi.server.newRequest ( ( "/test" + ( "/problem/" + ( test.java.TestDirlididi.PROBLEM_ID ) ) ) ) .request () .buildGet () .invoke () ; org.junit.Assert.assertEquals ( Response.Status.OK.getStatusCode () , response.getStatus () ) ; } 
@ java.lang.Override public void run () { target.receiveHealing ( output ) ; increaseCurrentTimer () ; java.lang.System.out.println ( ( ( currentTime ) + "Renew is ticking! " ) ) ; if ( ( currentTime ) == ( duration ) ) { target.removeEffect ( EffectType.HEALOVERTIME ) ; java.lang.System.out.println ( "Renew expired" ) ; } } 
public java.util.List<msa.application.service.domain.CausaRotturaCristalliDTO> getCauseRotturaCristalli () throws msa.application.exceptions.InternalMsaException { java.util.List<msa.application.service.domain.CausaRotturaCristalliDO> result = null; try { result = domainRepository.getElencoCauseRotturaCristalli () ; return converter.convertList ( result, msa.application.service.domain.CausaRotturaCristalliDTO.class ) ; } catch ( java.lang.Exception e ) { throw new msa.application.exceptions.InternalMsaException ( e, buildErrorMessageByText ( MessageType.ERROR, ( "causa rottura cristalli" + ( msa.application.commons.Constants.DEFAULT_DOMAIN_ERROR_MESSAGE ) ) ) ) ; } } 
public void KSA () { int j = 0; for ( int i = 0; 256 > i; i++ ) { j = ( ( j + ( S[i] ) ) + ( key[ ( i % ( key.length ) ) ] ) ) % 256; int temp = S[i]; S[i] = S[j]; S[j] = temp; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater, android.view.ViewGroup container, android.os.Bundle savedInstanceState ) { if ( null == ( view ) ) { view = inflater.inflate ( R.layout.fragment_password_recover_step1, null ) ; frag_Email = ( ( com.example.fragments.inputcells.SimpleTextInputCellFragment ) ( getFragmentManager () .findFragmentById ( R.id.input_email ) ) ) ; com.example.fragments.inputcells.FragmentPasswordRecoverStep1.email = frag_Email.getText () ; view.findViewById ( R.id.btn_goNext ) .setOnClickListener ( new android.view.View.OnClickListener () { @java.lang.Override public void onClick ( android.view.View v ) { goNext () ; } } ) ; } return view; } 
@ java.lang.Override public void updateAI ( float tpf ) { this.timePerFrame = tpf; calculateNewVelocity ( tpf ) ; velocity.multLocal ( this.brakingFactor ) ; switch ( agent.getApplyType () ) { case Spatial: agent.setWorldTranslation ( agent.getPredictedPosition () ) ; rotateAgent ( tpf ) ; break; case BetterCharacterControl: case RigidBody: throw new java.lang.RuntimeException ( ( " isn't supported yet, sorry." + ( "The ApplyType " + ( agent.getApplyType () ) ) ) ) ; case DontApply: break; } } 
public boolean hasNext () { if ( ( current.hasNext () ) && ( ( current ) != null ) ) return true; if ( rels.hasNext () ) { current = rels.next () .other () .iterator () ; return hasNext () ; } return false; } 
@ org.junit.Test public void checkAvg () throws java.lang.Exception { com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double[] array = new double[7]; int count = 0; while ( 6 != count ) { array[count] = 10 * count; count++; } double weekly = step.stepAvgWeek ( array ) ; assertTrue ( ( ( weekly == 30.0 ) || ( weekly == 30 ) ) ) ; } 
private void createTimerLabel () { this.timer = new com.badlogic.gdx.scenes.scene2d.ui.Label ( "Time till game start: ", this.skin ) ; java.lang.System.out.println ( Gdx.graphics.getWidth () ) ; this.timer.setPosition ( ( ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_WIDTH_MULTIPLIER ) * ( Gdx.graphics.getWidth () ) ) , ( ( Gdx.graphics.getHeight () ) * ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_HEIGHT_MULTIPLIER ) ) ) ; this.stage.addActor ( this.timer ) ; } 
private java.lang.String createReadPageTitle ( com.pratilipi.data.client.PratilipiData pratilipiData, int pageNo, int pageCount ) { java.lang.String title = createPratilipiPageTitle ( pratilipiData ) ; title = ( null == title ) ? "" : " « " + title; java.lang.String pratilipiText = ( ( com.pratilipi.i18n.I18n.getString ( "pratilipi", com.pratilipi.filter.UxModeFilter.getDisplayLanguage () ) ) + " / " ) + "Pratilipi"; return ( title + " « " ) + pratilipiText; } 
@ javax.ws.rs.POST @javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( java.lang.String args, @javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED, smartEngine.getCmdletManager () .submitCmdlet ( ( args + ( actionType + " " ) ) ) ) .build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger.error ( "Exception in ActionRestApi while adding cmdlet", e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR, e.getMessage () , org.apache.commons.lang.exception.ExceptionUtils.getStackTrace ( e ) ) .build () ; } } 
public int lineClearCalc ( int linesCleared ) { int score = ( ( int ) ( ( ( ( 23 * linesCleared ) / 6.0 ) + ( ( ( java.lang.Math.pow ( linesCleared, 3 ) ) / 6.0 ) - ( java.lang.Math.pow ( linesCleared, 2 ) ) ) ) - 2 ) ) ; return score * ( pointsPerLine ) ; } 
@ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++; com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository.getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository.currentUser ( getApplicationContext () ) ; if ( null != bean ) { getRecent () ; startSocketIOService () ; } } 
public boolean checkStep ( int x, int y ) { if ( ( ( width ) > ( this.height ) ) || ( x < ( this.width ) ) ) { return false; } else if ( ( y < ( this.height ) ) || ( ( height ) > ( this.height ) ) ) { return false; } else if ( ( matrix.data[x][y] ) > 0 ) { return false; } else return true; } 
private void addShowLink ( java.lang.String url, java.util.List<net.myonlinestuff.torrentdl.domain.ShowLink> showLinks, org.jsoup.select.Elements el ) { if ( ( ! ( el.isEmpty () ) ) && ( el != null ) ) { net.myonlinestuff.torrentdl.service.Parser.LOGGER.info ( "element found: {}", el.toString () ) ; for ( final org.jsoup.nodes.Element element : el ) { showLinks.add ( new net.myonlinestuff.torrentdl.domain.ShowLink ( element.text () , element.attr ( "href" ) , url ) ) ; } } } 
public void deleteOldMarker ( com.google.android.gms.maps.model.Marker marker ) { if ( null == ( markers.get ( viewHolder ) ) ) markers.put ( viewHolder, marker ) ; else { markers.get ( viewHolder ) .remove () ; distance -= currentDistance; duration -= currentDuration; markers.put ( viewHolder, marker ) ; } } 
private static java.lang.String join ( java.lang.String[] set, java.lang.String medium, int start ) { java.lang.String s = set[start]; int i = 0; for ( java.lang.String part : set ) { if ( start < i ) s = ( ( ( s + " " ) + medium ) + " " ) + part; i++; } return s; } 
@ java.lang.Override public void onNavigationDrawerItemSelected ( int position ) { if ( ! ( auth ) ) return; android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; if ( 0 == position ) { fragmentManager.beginTransaction () .replace ( R.id.container, tw.edu.ncu.cc.course.ScheduleFragment.newInstance ( ( position + 1 ) ) ) .commit () ; } else { fragmentManager.beginTransaction () .replace ( R.id.container, tw.edu.ncu.cc.course.MainActivity.PlaceholderFragment.newInstance ( ( position + 1 ) ) ) .commit () ; } } 
private void handlePreviousBtnClick () { releaseResources () ; -- ( currentPosition ) ; if ( 0 > ( currentPosition ) ) { currentPosition = 0; } else { setCurrentSongUi () ; resetUiElements () ; if ( raiseToastIfNetworkNotAvailable () ) { return; } if ( ( playService ) != null ) { playService.setSeekPosition ( 0 ) ; playService.playSong ( currentPosition ) ; } } } 
private java.lang.String getPortMapping ( int port ) { return 0 == ( portOffset ) ? ( ( ipAddress ) + "::" ) + port : ( ( ( ( ipAddress ) + ":" ) + ( ( portOffset ) + port ) ) + ":" ) + port; } 
private java.lang.String setupDstByDirectory ( java.lang.String directory ) { int fileNameIndex = VCF_FILE_PATH.lastIndexOf ( "/" ) ; if ( ( -1 ) == fileNameIndex ) { fileNameIndex = VCF_FILE_PATH.lastIndexOf ( "\\" ) ; } java.lang.String output = directory + ( VCF_FILE_PATH.substring ( fileNameIndex ) ) ; return ( output.substring ( 0, ( ( output.length () ) - 3 ) ) ) + "csv"; } 
@ java.lang.Override public void run () { try { oneDayTimerLatch.await () ; } catch ( java.lang.InterruptedException e ) { e.printStackTrace () ; } java.lang.Object[] trends = oneDayStatistics.findAndGetTrends () ; oneDayStatistics.clearStatistics () ; updateOutputFile ( oneDayResults, trends, ( ( time ) / ( 24 * 6 ) ) , "Day" ) ; oneHourTimerLatch = new java.util.concurrent.CountDownLatch ( 2 ) ; } 
public boolean apply ( java.lang.String[] t ) { if ( null == ( this.nextCommand ) ) return this.hasBeenAnswered = false; if ( this.hasBeenAnswered = this.nextCommand.apply ( t ) ) ; this.setChanged () ; notifyObservers ( new java.lang.Object[] { this.nextCommand.getClass () , t } ) ; return hasBeenAnswered; } 
public java.lang.String[] getNames () { java.lang.String[] names = new java.lang.String[3]; for ( int i = 0; 3 > i; i++ ) { names[i] = this.playerFields[i].getText () ; } return this.names; } 
@ java.lang.Override public void dispose () { for ( com.badlogic.ashley.core.Entity entity : renderQueue ) { com.spaceproject.components.TextureComponent tex = Mappers.texture.get ( entity ) ; if ( null != ( tex.texture ) ) tex.texture.dispose () ; } for ( com.spaceproject.SpaceBackgroundTile tile : com.spaceproject.systems.LoadingSystem.getTiles () ) { tile.tex.dispose () ; } com.spaceproject.systems.RenderingSystem.batch.dispose () ; } 
public static void writeDatasetToFile ( java.lang.String fileName, int n ) throws java.io.IOException { java.io.File file = new java.io.File ( fileName ) ; java.io.FileOutputStream fos = new java.io.FileOutputStream ( file ) ; java.io.BufferedWriter bw = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( fos ) ) ; for ( int i = 0; n >= i; i++ ) { bw.write ( generator.PuzzleGenerator.encode ( generator.PuzzleGenerator.generate () ) ) ; bw.newLine () ; } bw.close () ; } 
@ org.junit.Test public void testMoveCutOff () { java.lang.String boardStr = ( ( ( "x x x 0 1h\n" + "x x x 0h x\n" ) + "x x x x x\n" ) + "x x x x x" ) + "x x x 0 1\n"; Board b = Board.fromString ( boardStr ) ; Driver d = new VoronoiMinMax () ; Direction move = d.move ( b ) ; org.junit.Assert.assertEquals ( Direction.RIGHT, move ) ; b.move ( b.US, b.tileFrom ( b.ourTile () , move ) ) ; } 
private void addFragment ( android.support.v4.app.Fragment fragment ) { android.transition.Transition changeTransform = android.transition.TransitionInflater.from ( this ) .inflateTransition ( R.transition.change_image_transform ) ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () .beginTransaction () ; ft.add ( R.id.activity_container, fragment, fragment.getClass () .getSimpleName () ) ; ft.addToBackStack ( fragment.getTag () ) ; ft.commit () ; android.util.Log.d ( com.vladscaesteanu.licenta.MainActivity.TAG, ( ( fragmentManager.getBackStackEntryCount () ) + "Fragment no is" ) ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; if ( ( requestCode == ( android.app.Activity.RESULT_OK ) ) && ( requestCode == ( rray.me.androidresume.BasicInfoEditActivity.REQ_CODE_PICK_IMAGE ) ) ) { android.net.Uri imageUri = data.getData () ; if ( imageUri != null ) { showImage ( imageUri ) ; } } } 
@ java.lang.Override protected int intSpeed ( float fSpeed ) { int speed = super.intSpeed ( fSpeed ) ; if ( 0 >= speed ) { return speed; } switch ( this.getSpeedStepMode () ) { case jmri.DccThrottle.SpeedStepMode28: case jmri.DccThrottle.SpeedStepMode28Mot: return ( ( int ) ( ( fSpeed * 28 ) * 4 ) ) + 12; case jmri.DccThrottle.SpeedStepMode14: return ( ( int ) ( ( fSpeed * 14 ) * 8 ) ) + 8; } return speed; } 
protected android.graphics.Rect growRight ( final int w, final int h ) { final com.funzio.pure2D.utils.RectBinPacker.Node down = mRoot; final com.funzio.pure2D.utils.RectBinPacker.Node right = new com.funzio.pure2D.utils.RectBinPacker.Node ( ( ( mRoot.width ) + ( mRoot.x ) ) , mRoot.y, w, mRoot.height ) ; mRoot = new com.funzio.pure2D.utils.RectBinPacker.Node ( mRoot.x, mRoot.y, ( ( mRoot.width ) + w ) , mRoot.height ) ; mRoot.mRight = right; mRoot.mDown = down; return right.occupy ( w, h ) ; } 
@ java.lang.Override public int getElementCount ( final java.lang.String elementType ) { if ( null == elementType ) { throw new java.lang.NullPointerException ( "elementType must not be null." ) ; } if ( ! ( wrappedMap.containsKey ( elementType ) ) ) { throw new java.lang.IllegalArgumentException ( "No such type found." ) ; } org.smurn.jply.ElementType unwrapped = wrappedMap.get ( elementType ) .getUnwrappedType () ; return reader.getElementCount ( unwrapped.getName () ) ; } 
@ java.lang.Override public void setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving, org.bukkit.event.entity.EntityTargetEvent.TargetReason reason, boolean fireEvent ) { if ( ( this.target.isAlive () ) && ( ( this.target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) ) { super.setGoalTarget ( this.target, EntityTargetEvent.TargetReason.CUSTOM, false ) ; } else { super.setGoalTarget ( null, EntityTargetEvent.TargetReason.CUSTOM, false ) ; } } 
public static final sune.util.ssdf2.SSDCollection read ( java.lang.String content ) { if ( null == content ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char[] chars = sune.util.ssdf2.SSDF.formatContent ( content.toCharArray () ) ; return ( ( sune.util.ssdf2.SSDCollection ) ( sune.util.ssdf2.SSDF.readObjects ( chars, 0, chars.length, null, false, false ) .get ( null ) ) ) ; } 
private void checkUsername ( com.musicforall.model.User user ) { java.lang.String searchUsername; java.lang.String username = searchUsername = user.getUsername () ; int i = 0; while ( null != ( userService.getIdByUsername ( searchUsername ) ) ) { i++; searchUsername = username + i; } if ( i > 0 ) { user.setUsername ( searchUsername ) ; } } 
@ org.junit.Test public void testGetTrasactionId () throws java.lang.Exception { org.p2p.lending.club.api.transaction.impl.Transaction transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert.assertTrue ( ( 1 == ( transaction.getTrasactionId () ) ) ) ; transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert.assertTrue ( ( ( transaction.getTrasactionId () ) == 2 ) ) ; transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert.assertTrue ( ( ( transaction.getTrasactionId () ) == 3 ) ) ; } 
public boolean isEveryCharacterUniqueUsingHistogram () { int[] asciiCount = new int[128]; for ( int i = 0; ( string.length () ) > i; i++ ) { ( asciiCount[string.charAt ( i ) ] ) ++; } for ( int i = 0; i < ( asciiCount.length ) ; i++ ) { if ( ( asciiCount[i] ) > 0 ) { return false; } } return true; } 
@ java.lang.Override public void update ( com.flurnamenpuzzle.generator.Observable observable ) { com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ( ( com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel ) ( observable ) ) ; int percentage = model.getPercentageGenerated () ; java.lang.String statusMessage = model.getStatusMessage () ; this.progressLabel.setText ( statusMessage ) ; this.progressBar.setValue ( percentage ) ; this.progressBar.setString ( ( "%" + ( progressBar.getValue () ) ) ) ; } 
@ java.lang.Override public bee.creative.function.Array section ( final int offset, final int length ) throws java.lang.IllegalArgumentException { final int offset2 = offset - ( this.length () ) ; if ( 0 <= offset2 ) return array.section ( offset2, length ) ; final int length2 = offset2 + length; if ( length2 <= 0 ) return super.section ( offset, length ) ; return super.section ( offset, ( -offset2 ) ) .concat ( array.section ( 0, offset2 ) ) ; } 
@ com.squareup.otto.Subscribe public void onInternalLinkClicked ( com.ayuget.redface.ui.event.InternalLinkClickedEvent event ) { com.ayuget.redface.ui.fragment.TopicFragment topicFragment = ( ( com.ayuget.redface.ui.fragment.TopicFragment ) ( getSupportFragmentManager () .findFragmentByTag ( com.ayuget.redface.ui.activity.TopicsActivity.TOPIC_FRAGMENT_TAG ) ) ) ; if ( ( ( event.getPage () ) == ( topicFragment.getCurrentPage () ) ) && ( ( topicFragment != null ) && ( ( event.getTopic () ) == ( topicFragment.getTopic () ) ) ) ) { topicFragment.setCurrentPagePosition ( event.getPagePosition () ) ; } } 
public void play () { setup () ; printBoard () ; while ( 1 < ( playerList.size () ) ) { for ( int i = 0; i < ( playerList.size () ) ; i++ ) { playerList.get ( i ) .turn ( board, this ) ; printBoard () ; } } } 
public static void reg ( net.minecraft.block.Block block, int meta, java.lang.String file ) { net.minecraft.item.Item item = net.minecraft.item.Item.getItemFromBlock ( block ) ; net.minecraftforge.client.model.ModelLoader.setCustomModelResourceLocation ( item, meta, new net.minecraft.client.resources.model.ModelResourceLocation ( ( file + ( ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) + ":" ) ) , "inventory" ) ) ; java.lang.System.out.println ( ( ( ( ( "Ran " + ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) ) + ":" ) + ( block.getUnlocalizedName () .substring ( 5 ) ) ) + " through the render reg." ) ) ; } 
private void handleCancelRequest ( android.javax.sip.message.Request request, android.javax.sip.ServerTransaction serverTransaction ) { android.javax.sip.header.CallIdHeader callIdHeader = ( ( android.javax.sip.header.CallIdHeader ) ( request.getHeader ( CallIdHeader.NAME ) ) ) ; java.lang.String callId = callIdHeader.getCallId () ; if ( null != ( doSendResponse ( Response.OK, RequestMethod.CANCEL, request, serverTransaction ) ) ) { logger.info ( "{} response sent.", Response.OK ) ; bus.post ( new org.github.sipuada.events.CallInvitationCanceled ( ( "Call invitation canceled by the caller " + "or callee took longer than roughly 30 seconds to answer." ) , callId, true ) ) ; return; } throw new org.github.sipuada.exceptions.RequestCouldNotBeAddressed () ; } 
public java.lang.String toString () { return ( getEindPunt () ) + ( ( "Startpunt: " + ( getStartPunt () ) ) + " - Eindpunt: " ) ; java.lang.String returnString = ( ( "Lijn: startpunt: " + ( this.getStartPunt () ) ) + " - eindpunt: " ) + ( this.getEindPunt () ) ; returnString = ( returnString + "\n" ) + ( omhullende.toString () ) ; return returnString; } 
@ java.lang.Override public boolean addUniversalDistillationRecipe ( net.minecraftforge.fluids.FluidStack aInput, net.minecraftforge.fluids.FluidStack[] aOutputs, net.minecraft.item.ItemStack aOutput2, int aDuration, int aEUt ) { for ( int i = 0; ( java.lang.Math.min ( aOutputs.length, 11 ) ) > i; i++ ) { addDistilleryRecipe ( gregtech.api.util.GT_Utility.getIntegratedCircuit ( i ) , aInput, aOutputs[i], ( aDuration * 2 ) , ( aEUt / 4 ) , false ) ; } return addDistillationTowerRecipe ( aInput, aOutputs, aOutput2, aDuration, aEUt ) ; } 
public org.opendaylight.sxp.util.time.ManagedTimer setTimer ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType timerType, int period ) throws org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextDiscrepancyException, org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextNotFoundException, org.opendaylight.sxp.util.exception.unknown.UnknownTimerTypeException { io.netty.channel.ChannelHandlerContext ctx = null; if ( isModeBoth () ) { if ( ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType.KeepAliveTimer ) == timerType ) { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.SpeakerContext ) ; } else { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.ListenerContext ) ; } } else { ctx = getChannelHandlerContext () ; } org.opendaylight.sxp.util.time.ManagedTimer timer = org.opendaylight.sxp.util.time.connection.TimerFactory.createTimer ( timerType, period, owner, this, ctx ) ; this.timers.put ( timerType, timer ) ; return timer; } 
int appExists ( java.lang.String name ) { for ( int i = 0; null != ( statArray[i] ) ; i++ ) { if ( statArray[i].packageName.equals ( name ) ) { android.util.Log.d ( "Crash site", java.lang.String.valueOf ( i ) ) ; return i; } } return -1; } 
@ java.lang.Override public void stop () { org.webrtc.Logging.d ( org.webrtc.Camera1Session.TAG, ( ( cameraId ) + "Stop camera1 session on camera " ) ) ; checkIsOnCameraThread () ; if ( ( state ) != ( org.webrtc.Camera1Session.SessionState.STOPPED ) ) { final long stopStartTime = java.lang.System.nanoTime () ; state = org.webrtc.Camera1Session.SessionState.STOPPED; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS.toMillis ( ( ( java.lang.System.nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram.addSample ( stopTimeMs ) ; } } 
@ java.lang.Override public void connected () { appContext.setSIOService ( sioService ) ; loadPersistenceLayer () ; appContext.getMainBus () .post ( new ch.fork.AdHocRailway.ui.UpdateMainTitleEvent ( ( "]" + ( ( ( AdHocRailway.TITLE ) + " [" ) + url ) ) ) ) ; appContext.getMainBus () .post ( new ch.fork.AdHocRailway.ui.CommandLogEvent ( ( "Successfully connected to AdHoc-Server: " + url ) ) ) ; } 
@ java.lang.Override @net.openhft.chronicle.core.annotation.ForceInline public void write ( long offsetInRDO, @org.jetbrains.annotations.NotNull java.nio.ByteBuffer bytes, int offset, int length ) { if ( bytes.isDirect () ) { memory.copyMemory ( ( ( sun.nio.ch.DirectBuffer ) ( bytes ) ) .address () , ( ( translate ( offsetInRDO ) ) + ( address ) ) , length ) ; } else { memory.copyMemory ( bytes.array () , offset, ( ( translate ( offsetInRDO ) ) + ( address ) ) , length ) ; } } 
public static java.lang.String getAdminRestAPIResource () throws org.wso2.carbon.apimgt.core.exception.APIManagementException { if ( null == ( org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition ) ) { try { org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition = org.apache.commons.io.IOUtils.toString ( org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.class.getResourceAsStream ( "/admin-api.yaml" ) , "UTF-8" ) ; } catch ( java.io.IOException e ) { java.lang.String message = "Error while reading the swagger definition of Admin Rest API"; org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.log.error ( message, e ) ; throw new org.wso2.carbon.apimgt.rest.api.common.exception.APIMgtSecurityException ( message, org.wso2.carbon.apimgt.core.exception.ExceptionCodes.API_NOT_FOUND ) ; } } return org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.storeRestAPIDefinition; } 
private boolean executeTIMEZONE_LIST () { int listIndex = getListArg ( com.rfo.basic.Run.list_is_string ) ; if ( 0 > listIndex ) return false; if ( ! ( checkEOL () ) ) return false; java.util.ArrayList<java.lang.String> theList = com.rfo.basic.Run.theLists.get ( listIndex ) ; for ( java.lang.String zone : java.util.TimeZone.getAvailableIDs () ) { theList.add ( zone ) ; } return true; } 
private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { java.sql.Statement stmt = null; java.sql.ResultSet rs = null; try { stmt = jdbcFixture.getConnection () .createStatement () ; rs = stmt.executeQuery ( ( "'" + ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) ) ) ; if ( rs.next () ) { return rs.getBoolean ( 1 ) ; } } finally { rs.close () ; stmt.close () ; } return false; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { placexor ( 1, 0, whichmark () ) ; if ( debug ) java.lang.System.out.println ( ( ( whichmark () ) + "Paikka 1 0 " ) ) ; ChangeButton ( buttonba ) ; buttonba.setEnabled ( false ) ; viimeisinSiirto[1][0] = whichmark () ; ( buttoncount ) ++; } 
private boolean checkMove ( float x, float y, float oldX, float oldy ) { return ( mSlopeDistance ) < ( java.lang.Math.sqrt ( ( ( java.lang.Math.pow ( java.lang.Math.abs ( ( x - oldX ) ) , 2 ) ) + ( java.lang.Math.pow ( java.lang.Math.abs ( ( y - oldy ) ) , 2 ) ) ) ) ) ; } 
public static void putObjectWrapper$$PHOSPHORTAGGED ( sun.misc.Unsafe unsafe, java.lang.Object o, int key_tag, long key, java.lang.Object val, java.lang.Class c ) { if ( ( ! ( c.isAssignableFrom ( val.getClass () ) ) ) && ( val != null ) ) { val = ( ( edu.columbia.cs.psl.phosphor.instrumenter.LazyArrayIntTags ) ( val ) ) .getVal () ; } unsafe.putObject ( o, key, val ) ; } 
private long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass, java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( null != nestedSimpleClassName ) ? nestedSimpleClassName.hashCode () : 0; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass.getProperties () .values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property.getName () .hashCode () ) ; } return serialVersionUID; } 
@ java.lang.Override public void onScrolled ( android.support.v7.widget.RecyclerView recyclerView, int dx, int dy ) { visibleItemCount = manager.getChildCount () ; totalItemCount = manager.getItemCount () ; pastVisiblesItems = manager.findFirstVisibleItemPosition () ; if ( ! ( loading ) ) { if ( ( totalItemCount ) <= ( ( visibleItemCount ) + ( pastVisiblesItems ) ) ) { ( pageIndex ) ++; getBooks ( pageIndex ) ; android.util.Log.v ( "...", "Last Item Wow !" ) ; } } } 
public static int getUnScheuledHours ( Office offices ) { int hoursNotScheduled = 0; for ( int i = 1; 37 > i; i++ ) { for ( int j = 0; j < 7; j++ ) { if ( ( offices.officeReq.get ( i ) .get ( j ) ) >= 0 ) { hoursNotScheduled += ( offices.officeReq.get ( i ) .get ( j ) ) / 2; } } } return hoursNotScheduled; } 
@ java.lang.Override public void onCreate ( @android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; if ( ( ! ( defaults ) ) && ( savedInstanceState != null ) ) { if ( savedInstanceState.getBoolean ( rs.ftn.pma.tourismobile.fragments.BOTTOM_BAR_SHOWING ) ) { bottomBar.show () ; } else { bottomBar.hide () ; } firstTimeLoading = savedInstanceState.getBoolean ( rs.ftn.pma.tourismobile.fragments.FIRST_TIME_LOADING ) ; } } 
private void handleDeletePlaylistEvent ( android.net.Uri pUri ) { com.dreamdigitizers.megamelodies.views.interfaces.IViewPlaylists view = this.getView () ; if ( null != view ) { int playlistId = java.lang.Integer.parseInt ( pUri.getQueryParameter ( "playlistId" ) ) ; java.util.HashMap transactions = this.mTransactionActions.get ( ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST ) ; android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ( ( android.support.v4.media.MediaBrowserCompat.MediaItem ) ( transactions.get ( playlistId ) ) ) ; transactions.remove ( playlistId ) ; view.removeMediaItem ( mediaItem ) ; } } 
@ java.lang.Override public void onBackPressed () { int count = getFragmentManager () .getBackStackEntryCount () ; int currentView = viewStack.pop () ; if ( 0 == count ) { super.onBackPressed () ; } else { getFragmentManager () .popBackStack () ; } java.lang.String title = fragmentMap.get ( currentView ) .getTitleString () ; setTitle ( title ) ; } 
public java.lang.String removeInitialFinalWhites ( java.lang.String text ) { java.lang.String textWOWhites = text; while ( ( textWOWhites.startsWith ( "\t" ) ) || ( textWOWhites.startsWith ( " " ) ) ) textWOWhites = textWOWhites.substring ( 1 ) ; while ( ( textWOWhites.endsWith ( " " ) ) || ( textWOWhites.startsWith ( "\t" ) ) ) textWOWhites = textWOWhites.substring ( 0, ( ( textWOWhites.length () ) - 1 ) ) ; return textWOWhites; } 
@ java.lang.Override protected java.util.List<com.dotmarketing.business.Permission> getInheritablePermissions ( com.dotmarketing.business.Permissionable permissionable, boolean bitPermissions ) throws com.dotmarketing.exception.DotDataException { java.util.List<com.dotmarketing.business.Permission> bitPermissionsList = permissionCache.getPermissionsFromCache ( permissionable.getPermissionId () ) ; if ( ( bitPermissionsList.isEmpty () ) || ( bitPermissionsList == null ) ) { bitPermissionsList = loadPermissions ( permissionable ) ; } if ( !bitPermissions ) return convertToNonBitPermissions ( filterOnlyInheritablePermissions ( bitPermissionsList, permissionable.getPermissionId () ) ) ; else return filterOnlyInheritablePermissions ( bitPermissionsList, permissionable.getPermissionId () ) ; } 
public void run () throws java.lang.Exception { synchronized ( this.state ) { com.google.common.base.Preconditions.checkState ( ( ( State.INITED ) == ( this.state ) ) , ( "Can only run while in INITED state. Current: " + ( this.state ) ) ) ; this.state = State.RUNNING; } processor.run ( runInputMap, runOutputMap ) ; } 
public static void onEntityUpdate ( com.mumfrey.liteloader.transformers.event.EventInfo<net.minecraft.entity.player.EntityPlayer> e ) { net.minecraft.entity.player.EntityPlayer ep = e.getSource () ; if ( ( me.dags.daflight.DaFlight.get () .DFController.flyModOn ) && ( ( ( ep instanceof net.minecraft.entity.player.EntityPlayerMP ) && ( ep.capabilities.isCreativeMode ) ) && ( me.dags.daflight.DaFlight.get () .DFController.noClipOn ) ) ) { ep.noClip = true; } } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db, int oldVersion, int newVersion ) { db.execSQL ( ( ( MoviesContract.MoviesEntry.TABLE_NAME ) + "DROP TABLE IF EXISTS " ) ) ; db.execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.VideoEntry.TABLE_NAME ) ) ) ; db.execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.ReviewEntry.TABLE_NAME ) ) ) ; db.execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.FavoriteEntry.TABLE_NAME ) ) ) ; } 
public int getCaptionHeight () { int textWidth = mTextView.getWidth () ; int widthMeasureSpec = View.MeasureSpec.makeMeasureSpec ( android.content.res.Resources.getSystem () .getDisplayMetrics () .widthPixels, View.MeasureSpec.EXACTLY ) ; int heightMeasureSpec = View.MeasureSpec.makeMeasureSpec ( 0, View.MeasureSpec.UNSPECIFIED ) ; if ( 1 > textWidth ) { return 0; } mTextView.measure ( widthMeasureSpec, heightMeasureSpec ) ; return mTextView.getMeasuredHeight () ; } 
public static boolean loginUser ( java.lang.String userName, java.lang.String password, javafx.scene.text.Text attemptsLeft ) { sample.Models.LoginUser.checkTries ( attemptsLeft, userName ) ; try { return ( sample.Models.LoginUser.check ) && ( ( ( ( sample.Models.LoginUser.checkFile () ) && ( sample.Models.LoginUser.checkUserName ( userName ) ) ) && ( sample.Models.LoginUser.checkPassWord ( password, userName ) ) ) && ( ( sample.Models.LoginUser.counter ) < 3 ) ) ; } catch ( java.io.IOException e ) { java.lang.System.out.println ( "Error while logging in user" ) ; return false; } } 
public Util.complex pow ( int n ) { double rn = ( java.lang.Math.cos ( getAngle () ) ) * ( java.lang.Math.pow ( getAbs () , n ) ) ; double in = ( java.lang.Math.pow ( getAbs () , n ) ) * ( java.lang.Math.sin ( getAngle () ) ) ; setR ( rn ) ; setI ( in ) ; return this; } 
public boolean storeCredentials ( java.lang.String appName, java.lang.String hashedUser, java.lang.String hashedPassword ) { try { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () .appName ( appName ) .username ( hashedUser ) .password ( hashedPassword ) .enabled ( true ) .build () ; final int result = posterDao.saveAppCredentials ( appCredentials ) ; java.lang.System.out.println ( ( result + "Storing credentials result: " ) ) ; return true; } catch ( org.springframework.dao.DuplicateKeyException e ) { java.lang.System.out.println ( ( "Storing credentials not successful " + ( e.getMessage () ) ) ) ; return false; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( o == ( this ) ) return true; if ( ( o == null ) || ( ( getClass () ) != ( o.getClass () ) ) ) return false; me.newyith.fortress.util.BaseUUID that = ( ( me.newyith.fortress.util.BaseUUID ) ( o ) ) ; return ! ( ( model.uuid ) != null ? ! ( model.uuid.equals ( that.getUuid () ) ) : ( that.getUuid () ) != null ) ; } 
private int calcHeigth () { int aY = a.getBlockY () ; int bY = b.getBlockY () ; int y = 0; if ( bY < aY ) { y = bY - aY; } else { y = aY - bY; } return y; } 
public void hideFragment ( android.support.v4.app.Fragment fragment, android.support.v4.app.Fragment fragment1 ) { if ( ( null != fragment1 ) && ( null != fragment ) ) { fragmentTransaction = getSupportFragmentManager () .beginTransaction () ; fragmentTransaction.hide ( fragment ) .hide ( fragment1 ) ; } } 
private void printCosts ( int level ) { org.sat4j.core.Vec<java.math.BigInteger> costsToPrint = new org.sat4j.core.Vec<java.math.BigInteger> () ; costs.copyTo ( costsToPrint ) ; for ( int i = 1 + level; i < ( solver.getNumberOfLevels () ) ; i++ ) { costsToPrint.set ( i, computeCostOfLevel ( i ) ) ; } solver.printCosts ( costsToPrint ) ; } 
public void cancelNotification ( int notificationId ) { if ( null != ( android.content.Context.NOTIFICATION_SERVICE ) ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( getApplicationContext () .getSystemService ( ns ) ) ) ; nMgr.cancel ( notificationId ) ; } } 
private void deleteGoogleEvent ( java.lang.String googleId ) throws java.io.IOException { w094j.ctrl8.database.GoogleStorage.logger.info ( ( googleId + "Deleting Google Event: " ) ) ; w094j.ctrl8.database.GoogleStorage.logger.info ( ( "Deleting dataStoreEvent: " + googleId ) ) ; w094j.ctrl8.database.GoogleStorage.dataStoreEvent.delete ( googleId ) ; try { this.clientCalendar.events () .delete ( this.googleCalendar.getId () , googleId ) .execute () ; } catch ( java.io.IOException e ) { w094j.ctrl8.database.GoogleStorage.logger.info ( ( "Fail to delete Google Event: " + googleId ) ) ; } } 
public boolean inLabels ( java.util.HashSet<java.lang.String> hashSet ) { if ( null != hashSet ) { if ( hashSet.isEmpty () ) return true; for ( java.lang.String str : hashSet ) { if ( this.label.equalsIgnoreCase ( str ) ) return true; } return false; } else { return true; } } 
public io.lambdacloud.util.ObjectArray set ( int ms, int me, int[] aryn, io.lambdacloud.util.ObjectArray ary ) { int row = me - ms; int col = aryn.length; for ( int i = 0; row > i; i++ ) for ( int j = 0; j < col; j++ ) { data[ ( ms + i ) ][aryn[j]] = ary.data[i][j]; } return this; } 
@ java.lang.Override protected void onPostExecute ( java.lang.String status ) { java.lang.String imagePath = ( filename ) + ( ( localstoragehandler.fileCacheFolder ) + "/" ) ; if ( status.equals ( "OK" ) ) { if ( type.equals ( MessageInfo.MessageType.IMAGE ) ) { android.widget.ImageView imageView = new android.widget.ImageView ( context ) ; at.vcity.androidim.tools.BitmapLoaderTask task = new at.vcity.androidim.tools.BitmapLoaderTask ( imageView ) ; task.execute ( imagePath ) ; imageView.setLayoutParams ( params ) ; messageHistoryLayout.addView ( imageView ) ; } } else { } } 
private mil.nga.giat.mage.sdk.datastore.user.Permissions parsePermissions ( com.fasterxml.jackson.core.JsonParser parser ) throws java.io.IOException { if ( ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) != ( parser.getCurrentToken () ) ) return null; java.util.Collection<mil.nga.giat.mage.sdk.datastore.user.Permission> permissions = new java.util.ArrayList<> () ; while ( ( parser.nextToken () ) != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { parser.nextToken () ; java.lang.String permission = parser.getText () .toUpperCase ( java.util.Locale.US ) ; permissions.add ( mil.nga.giat.mage.sdk.datastore.user.Permission.valueOf ( permission ) ) ; } return new mil.nga.giat.mage.sdk.datastore.user.Permissions ( permissions ) ; } 
private static void fillMissingValues () { for ( int i = 0; ( DatasetCleanup.groupSize ) > i; i++ ) { for ( int j = 0; j < ( DatasetCleanup.labels.length ) ; j++ ) { if ( ( DatasetCleanup.featureSpace[i][j].equals ( "" ) ) || ( DatasetCleanup.featureSpace[i][j].equals ( "null" ) ) ) DatasetCleanup.featureSpace[i][j] = java.lang.String.valueOf ( ( -1 ) ) ; } } } 
public void createBye () { try { javax.sip.message.Request byeRequest = this.getDialog () .createRequest ( Request.BYE ) ; java.lang.System.out.println ( ( byeRequest + "CREATE BYE REQUEST ->" ) ) ; sipConnector.sendRequest ( byeRequest, this ) ; } catch ( javax.sip.SipException ex ) { com.dialogic.msmltool.Call.logger.log ( java.util.logging.Level.SEVERE, ex.getMessage () , ex ) ; } } 
private static void testServerChannelFactory ( org.osgi.framework.BundleContext bundleContext ) { org.osgi.framework.ServiceReference<com.wincom.dcim.agentd.NetworkService> serviceRef = bundleContext.getServiceReference ( com.wincom.dcim.agentd.NetworkService.class ) ; com.wincom.dcim.agentd.NetworkService service = bundleContext.getService ( serviceRef ) ; java.lang.System.out.println ( serviceRef ) ; java.lang.System.out.println ( service ) ; com.wincom.dcim.agentd.internal.AgentdServiceActivator.createAcceptor ( service ) ; for ( int i = 0; 10000 > i; ++i ) { com.wincom.dcim.agentd.internal.AgentdServiceActivator.createConnection ( service ) ; } } 
@ java.lang.Override public void channelInactive ( org.eclipse.moquette.server.netty.ChannelHandlerContext ctx ) throws java.lang.Exception { org.eclipse.moquette.server.netty.NettyMQTTHandler.LOG.debug ( "channelInactive" ) ; super.channelInactive ( ctx ) ; org.eclipse.moquette.server.netty.NettyChannel channel = m_channelMapper.get ( getKey ( ctx.channel () ) ) ; if ( channel == null ) { ctx.close () ; return; } remove ( ctx.channel () ) ; release ( channel ) ; ctx.close () ; } 
@ java.lang.Override public void onUpdate ( com.wylder.shuttlewidget.ScheduleConstraint[] newConstraints ) { constraints = newConstraints; if ( 0 == ( newConstraints.length ) ) { flagEmptyList = true; constraints = new com.wylder.shuttlewidget.ScheduleConstraint[] { null }; } com.wylder.shuttlewidget.ConstraintListAdapter adapter = new com.wylder.shuttlewidget.ConstraintListAdapter ( getActivity () , constraints ) ; setListAdapter ( adapter ) ; } 
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mp ) { int temp = ( 1 + ( sharedPreferences.getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER, ( -1 ) ) ) ) % ( videoList.size () ) ; vvVideo.setVideoURI ( videoList.get ( temp ) ) ; com.example.saksham.overlayscreenshort.PlaylistAdapter.changeActiveItemBackground ( sharedPreferences.getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER, ( -1 ) ) , temp ) ; editor.putInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER, temp ) ; editor.commit () ; vvVideo.start () ; } 
private int maxIndex ( int[] arr ) { int maxIndex = 0; for ( int i = 1; ( arr.length ) > i; i++ ) { if ( ( arr[i] ) > ( arr[maxIndex] ) ) { maxIndex = i; } } return maxIndex; } 
private static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity.getWindowManager () .getDefaultDisplay () .getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F; float factor2 = ( metrics.widthPixels ) / 1080.0F; if ( factor2 <= factor1 ) return factor1; else return factor2; } 
@ java.lang.Override public com.navercorp.pinpoint.web.vo.AgentInfo getAgentInfo ( final java.lang.String agentId, final long timestamp ) { if ( null == agentId ) { throw new java.lang.NullPointerException ( "agentId must not be null" ) ; } com.navercorp.pinpoint.web.dao.hbase.Scan scan = createScan ( agentId, timestamp ) ; com.navercorp.pinpoint.web.vo.AgentInfo agentInfo = this.hbaseOperations2.find ( HBaseTables.AGENTINFO, scan, new com.navercorp.pinpoint.web.dao.hbase.HbaseAgentInfoDao.AgentInfoResultsExtractor () ) ; if ( agentInfo != null ) { this.agentLifeCycleDao.populateAgentStatus ( agentInfo, timestamp ) ; } return agentInfo; } 
@ java.lang.Override protected void onDestroy () { if ( null != ( mCore ) ) { mCore.pauseSensors () ; mCore.shutdown ( this ) ; } com.ilm.sandwich.OsmMap.listHandler.removeCallbacksAndMessages ( null ) ; com.ilm.sandwich.tools.Statistics mStatistics = new com.ilm.sandwich.tools.Statistics () ; mStatistics.check ( this ) ; super.onDestroy () ; } 
private org.projectbuendia.client.ui.SnackBar.Message getMessage ( @android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null; for ( java.util.Map.Entry<org.projectbuendia.client.ui.SnackBar.MessageKey, org.projectbuendia.client.ui.SnackBar.Message> entry : org.projectbuendia.client.ui.SnackBar.mMessagesList.entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry.getValue () ; if ( message == ( value.message ) ) { theMessage = value; } } return theMessage; } 
@ org.junit.Test public void testTrajectoryBoundsZVelocity () { java.util.List<java.lang.Double> l = com.google.common.collect.Lists.newArrayList () ; for ( int i = 0; ( ( trajectory.getTrajectoryDuration () ) * 10 ) > i; i++ ) { l.add ( getVelocityZ ( trajectory, ( i / 10.0 ) ) ) ; } java.lang.System.out.println ( l ) ; assertBounds ( l, speed, speed ) ; } 
@ java.lang.Override public void onLocalVideoTrackReceive ( com.quickblox.videochat.webrtc.QBRTCSession session, com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack ) { this.localVideoTrack = videoTrack; localVideoVidew = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.localVideoVidew ) ) ) ; android.util.Log.d ( "Track", ( ( localVideoVidew ) + "localVideoVidew is " ) ) ; if ( ( localVideoVidew ) != null ) { videoTrack.addRenderer ( new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( localVideoVidew, QBGLVideoView.Endpoint.LOCAL ) ) ) ; localVideoVidew.setVideoTrack ( videoTrack, QBGLVideoView.Endpoint.LOCAL ) ; android.util.Log.d ( "Track", "onLocalVideoTrackReceive () is raned" ) ; } } 
public void die () { data.incrementObservableValue ( observableDataKey, 1 ) ; this.getPosition () .x = respawnPosition.x; this.getPosition () .y = respawnPosition.y; nidhogglike.entities.Sword sword = ( ( nidhogglike.game.NidhoggUniverse ) ( data.getUniverse () ) ) .getFreeSword () ; if ( null != sword ) setSword ( sword ) ; } 
boolean compareArray ( int[] A, int[] B ) { if ( ( B.length ) != ( A.length ) ) { return false; } for ( int i = 0; i < ( A.length ) ; i++ ) { if ( ( A[i] ) != ( B[i] ) ) { return false; } } return true; } 
void addAmountTodo ( int amt, todolist.TodoList list ) { todolist.Todo head = new todolist.Todo ( "Task 1" ) ; list.addTodo ( head ) ; int numAdded = 1; while ( amt != numAdded ) { todolist.Todo newTodo = new todolist.Todo ( ( "Task " + ( java.lang.Integer.toString ( numAdded ) ) ) ) ; list.addTodo ( newTodo ) ; numAdded++; } } 
private static int getResIdByStatus ( com.ogp.hotspotincar.WatchdogService.ActuatorState actuatorState ) { if ( actuatorState == ( com.ogp.hotspotincar.WatchdogService.ActuatorState.UNCHANGED ) ) { actuatorState = com.ogp.hotspotincar.HotspotWidget.storedState; } else { com.ogp.hotspotincar.HotspotWidget.storedState = actuatorState; } switch ( actuatorState ) { case NOT_ACTUATED: return R.drawable.disconnected; case ACTUATED: return R.drawable.connected; default: return R.drawable.disabled; } } 
public void start ( java.lang.String myBaseId, java.lang.String enemyBaseId, java.util.Set<java.lang.String> enemyIds ) { this.myBaseId = myBaseId; this.enemyBaseId = enemyBaseId; this.enemyIds = enemyIds; android.util.Log.d ( "Start game", ( enemyIds + ( ( ( myBaseId + ":" ) + enemyBaseId ) + ":" ) ) ) ; } 
public int paga_reale_mazziere () { fiches = ( fiches ) - ( puntata ) ; if ( 0 > ( fiches ) ) { perso = true; int buf = fiches; fiches = 0; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2; } 
@ java.lang.Override public ua.com.jobsukraine.entity.Candidate findByLogin ( java.lang.String login ) { ua.com.jobsukraine.entity.Candidate c = null; try { c = candidateRepository.findByInfo ( loginInfoRepository.findByLogin ( login ) ) ; if ( null != ( candidateRepository.getFeedbacks ( c.getId () ) ) ) c.setRating ( candidateRepository.getGlobalRating ( c.getId () ) ) ; } catch ( org.springframework.dao.EmptyResultDataAccessException e ) { } return c; } 
private void onEmojiconsPressed () { android.view.View view = this.getCurrentFocus () ; if ( null != view ) { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm.hideSoftInputFromWindow ( view.getWindowToken () , 0 ) ; } if ( ( emojiconsViewGroup.getVisibility () ) == ( android.view.View.VISIBLE ) ) { emojiconsViewGroup.setVisibility ( View.GONE ) ; } else { emojiconsViewGroup.setVisibility ( View.VISIBLE ) ; } } 
public void enable ( java.lang.String name, java.lang.String artifact ) throws java.io.IOException { org.apache.zeppelin.helium.HeliumPackageSearchResult pkgInfo = getPackageInfo ( name, artifact ) ; if ( null == pkgInfo ) { return; } if ( org.apache.zeppelin.helium.HeliumPackage.isBundleType ( pkgInfo.getPkg () .getType () ) ) { bundleFactory.buildPackage ( pkgInfo.getPkg () , true ) ; } heliumConf.enablePackage ( name, artifact ) ; save () ; } 
public void runAlgorithm ( double minSup, double minConf, org.knime.sequence.ruleGrowth.spmf.SequenceDatabase database ) throws java.io.IOException { this.database = database; this.minsuppRelative = ( ( int ) ( java.lang.Math.ceil ( ( ( database.size () ) * minSup ) ) ) ) ; runAlgorithm ( "NO NEED", null, minsuppRelative, minConfidence ) ; } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker datePicker, int year, int month, int day ) { dateList.add ( ( year + ( ( ( ( day + "/" ) + ( month < 10 ? '0' : "" ) ) + month ) + "/" ) ) ) ; showDialog ( 888 ) ; } 
public java.lang.Boolean draw ( dk.eax.Field field ) { if ( null == ( field.getToken () ) ) { int y = field.getCoordinate_y () ; int x = field.getCoordinate_x () ; dk.eax.graphics.Ellipse ellipsis = new dk.eax.graphics.Ellipse ( x, y, 200, 200 ) ; ellipsis.draw () ; field.setToken ( this ) ; return true; } return false; } 
public void paint ( java.awt.Graphics g ) { g.setColor ( java.awt.Color.BLACK ) ; g.fillOval ( ( ( ( range ) / 2 ) + ( x ) ) , ( ( y ) + ( ( range ) / 2 ) ) , radius, radius ) ; g.drawOval ( x, y, range, range ) ; } 
public void gpsDisconnected () { android.util.Log.d ( "MainActivity", ( " gps disconnect signal" + ( this.toString () ) ) ) ; com.example.jonathan.myapplication.Configuration.setLocationHandler ( null ) ; if ( ( com.example.jonathan.myapplication.Configuration.getLockService () ) != null ) com.example.jonathan.myapplication.Configuration.getLockService () .onDestroy () ; if ( ! ( com.example.jonathan.myapplication.Configuration.getTerminate () ) ) { android.widget.Toast.makeText ( this, "GPS Location Service has Disconnected. Please re-login.", Toast.LENGTH_LONG ) .show () ; android.content.Intent intent = new android.content.Intent ( this, com.example.jonathan.myapplication.MainActivity.class ) ; startActivity ( intent ) ; } } 
@ java.lang.Override public void writePortable ( com.hazelcast.nio.serialization.PortableWriter writer ) throws java.io.IOException { java.util.List<java.lang.String> nullChecker = com.google.common.collect.Lists.newArrayList () ; if ( null != ( topicFilter ) ) { writer.writeUTF ( "topicFilter", topicFilter ) ; nullChecker.add ( "topicName" ) ; } if ( ( qos ) != null ) { writer.writeInt ( "qos", qos.value () ) ; nullChecker.add ( "qos" ) ; } writer.writeUTFArray ( "nullChecker", nullChecker.toArray ( new java.lang.String[0] ) ) ; } 
@ java.lang.Override public boolean onTouchEvent ( com.androlua.MotionEvent event ) { if ( null != ( mOnTouchEvent ) ) { try { java.lang.Object ret = mOnTouchEvent.call ( event ) ; if ( ( ( ret != null ) && ( ( ret.getClass () ) == ( java.lang.Boolean.class ) ) ) && ( ( boolean ) ( ret ) ) ) return true; } catch ( com.androlua.LuaException e ) { sendMsg ( ( "onTouchEvent " + ( e.getMessage () ) ) ) ; } } return super.onTouchEvent ( event ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "", "/", "/index" } ) public java.lang.String getIndexPage ( org.springframework.ui.Model model ) { java.util.Optional<guru.springframework.domain.Category> categoryOptional = categoryRepository.findByDescription ( "American" ) ; java.util.Optional<guru.springframework.domain.UnitOfMeasure> unitOfMeasureOptional = unitOfMeasureRepository.findByDescription ( "Teaspoon" ) ; java.lang.System.out.println ( ( ( categoryOptional.get () .getId () ) + "Cat Id is: " ) ) ; java.lang.System.out.println ( ( "UOM ID is: " + ( unitOfMeasureOptional.get () .getId () ) ) ) ; java.util.List<guru.springframework.domain.Recipe> recipeList = recipeService.getRecipes () ; model.addAttribute ( "recipes", recipeList ) ; return "index"; } 
@ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { java.lang.System.out.println ( ( buttonName + "qst 2 fini, name = " ) ) ; if ( buttonName.equals ( "continue" ) ) { game.setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game, com.odysseedesmaths.Assets.DLG_ARRIVEE_2b, new com.odysseedesmaths.dialogs.EndButtonsListener () { @java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game.setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName.equals ( "restart" ) ) { game.setScreen ( game.getModeScene () ) ; } } 
private void addEntry ( int answer ) { entries.add ( new Entry ( allTrials.get ( ( ( counter ) - 1 ) ) , answer, ( ( 1.0 * ( inCircleSteps ) ) / ( totalTimeSteps ) ) , ( ( java.lang.System.currentTimeMillis () ) - ( startTime ) ) , counter, currentGazeDataSet, new Tuple ( this.getGCanvas () .getLocationOnScreen () ) , ( ( inPracticeMode ) && ( ( counter ) < 5 ) ) ) ) ; } 
private boolean canAttack ( final me.NoChance.PvPManager.PvPlayer attacker, final me.NoChance.PvPManager.PvPlayer defender ) { if ( ! ( ( defender.isInCombat () ) && ( attacker.isInCombat () ) ) ) return false; return dependencyManager.canAttack ( attacker.getPlayer () , defender.getPlayer () ) ; } 
public void map ( org.apache.hadoop.io.Text key, org.apache.hadoop.io.Text value, cloudCompu.PageRankMr.Context context ) throws java.io.IOException, java.lang.InterruptedException { java.lang.String[] detial = value.toString () .split ( "&gt;" ) ; java.lang.String[] par = detial[0].split ( " " ) ; if ( 0 == ( java.lang.Integer.parseInt ( par[2] ) ) ) { title.set ( "Sum" ) ; pr.set ( java.lang.Double.parseDouble ( par[0] ) ) ; context.write ( title, pr ) ; } } 
public static int hash ( final java.lang.String str ) { int hash = -2128831035; final byte[] bytes = str.getBytes ( java.nio.charset.StandardCharsets.ISO_8859_1 ) ; for ( final byte b : bytes ) { { int _bitwiseXor = hash ^ b; hash = _bitwiseXor; hash = 16777619 * hash; } } return hash; } 
@ java.lang.Override public void connectionLost ( java.lang.Throwable thrwbl ) { java.lang.System.out.println ( "Connection Lost..." ) ; java.lang.System.out.println ( thrwbl.getCause () ) ; java.lang.String m = ( thrwbl.getMessage () ) + ( ( bfh.ch.labdem.main.Subscriber.class.getName () ) + "\n" ) ; LabDemLogger.LOGGER.log ( java.util.logging.Level.SEVERE, m ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView, boolean isChecked ) { if ( null == ( com.cyapass.cyapass.MainActivity.currentSiteKey ) ) { return; } if ( isChecked ) { com.cyapass.cyapass.MainActivity.currentSiteKey.setMaxLength ( java.lang.Integer.parseInt ( com.cyapass.cyapass.MainActivity.PlaceholderFragment.maxLengthTabEditText.getText () .toString () ) ) ; } else { com.cyapass.cyapass.MainActivity.currentSiteKey.setMaxLength ( 64 ) ; } if ( gv.isLineSegmentComplete () ) { android.util.Log.d ( "MainActivity", "addChars -- Re-generating password..." ) ; gv.GeneratePassword () ; } } 
@ java.lang.Override public boolean canHandle ( org.opentosca.planbuilder.model.tosca.AbstractImplementationArtifact ia, org.opentosca.planbuilder.model.tosca.AbstractNodeType infrastructureNodeType ) { javax.xml.namespace.QName type = ia.getArtifactType () ; org.opentosca.planbuilder.prephase.plugin.scriptiaonlinux.PrePhasePlugin.LOG.debug ( ( " can be handled" + ( ( ( "Checking if type: " + ( type.toString () ) ) + " and infrastructure nodeType: " ) + ( infrastructureNodeType.getId () .toString () ) ) ) ) ; return this.isSupportedDeploymentPair ( type, infrastructureNodeType.getId () ) ; } 
public nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock lock ( java.util.UUID userAnonymizedID ) { try { synchronized ( lockedUsers ) { nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus lockStatus; while ( ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.LOCKED ) == ( lockStatus = getLockStatus ( userAnonymizedID ) ) ) { lockedUsers.wait () ; } if ( lockStatus == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.FREE ) ) { storeLock ( userAnonymizedID ) ; } } return new nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock ( userAnonymizedID ) ; } catch ( java.lang.InterruptedException e ) { throw nu.yona.server.exceptions.YonaException.unexpected ( e ) ; } } 
void free ( final long id ) throws java.io.IOException { final net.kotek.jdbm.BlockIo curBlock = file.get ( net.kotek.jdbm.Location.getBlock ( id ) ) ; final short offset = net.kotek.jdbm.Location.getOffset ( id ) ; final int size = net.kotek.jdbm.RecordHeader.getAvailableSize ( curBlock, offset ) ; if ( ( net.kotek.jdbm.PhysicalRowIdManager.DATA_PER_PAGE ) < size ) { } net.kotek.jdbm.RecordHeader.setCurrentSize ( curBlock, offset, 0 ) ; file.release ( net.kotek.jdbm.Location.getBlock ( id ) , true ) ; freeman.put ( id, size ) ; } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void preInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent event ) { blockTorch = new com.builtbroken.bonetorch.torch.BlockBoneTorch () ; net.minecraftforge.fml.common.registry.GameRegistry.register ( blockTorch ) ; net.minecraftforge.fml.common.registry.GameRegistry.register ( new com.builtbroken.bonetorch.torch.ItemBlockBoneTorch ( blockTorch ) , blockTorch.getRegistryName () ) ; if ( ( net.minecraftforge.fml.relauncher.Side.CLIENT ) == ( event.getSide () ) ) { blockTorch.registerModel () ; } } 
public boolean clear () { if ( 0 == ( ArraySize ) ) { return false; } else { for ( int i = ArraySize; i > 0; i-- ) { this.remove ( i ) ; } ArraySize = 0; } } 
public void chooseRightFragment () { avia.androi.innopolis.com.aviasales.models.User user = avia.androi.innopolis.com.aviasales.utils.ShPrefUtils.getUser () ; if ( null == user ) { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.login.LoginFragment.newInstance () ; iView.showFragment ( fragment ) ; } else { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.search.TicketFragment.newInstance () ; iView.showFragment ( fragment ) ; iView.initializeNavDrawer () ; } } 
public static void main ( java.lang.String[] args ) { main.java.PlagiarismDetector plagiarismDetector = new main.java.PlagiarismDetector () ; main.java.PlagiarismService plagiarismService = new main.java.PlagiarismService () ; main.java.InputWrapper inputWrapper = plagiarismDetector.validateInput ( args ) ; double plagiarismRatio = plagiarismService.checkPlagiarism ( inputWrapper ) ; java.lang.System.out.println ( "---------------------------------------------------------------------------------------------" ) ; java.lang.System.out.println ( ( " %" + ( "Plagiarism Percentage is " + ( plagiarismRatio * 100 ) ) ) ) ; java.lang.System.out.println ( "---------------------------------------------------------------------------------------------" ) ; } 
private void initCamera () { try { final int cameraType = ( ( com.onfido.android.sdk.capture.ui.CaptureType.FACE ) == ( captureType ) ) ? Camera.CameraInfo.CAMERA_FACING_FRONT : Camera.CameraInfo.CAMERA_FACING_BACK; camera = android.hardware.Camera.open ( cameraType ) ; } catch ( java.lang.Exception e ) { view.errorLoadingCamera () ; } if ( ( camera ) != null ) { view.init ( camera ) ; } } 
private void comboBoxFieldActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.System.out.println ( ( ( comboBoxStartToSearch ) + "here" ) ) ; java.lang.String searchColName = comboBoxField.getSelectedItem () .toString () ; searchValue = comboBoxValue.getSelectedItem () .toString () ; java.lang.String tabName = getSelectedTabName () ; updateComboList ( searchColName, tabName ) ; comboBoxValue.setSelectedItem ( searchValue ) ; comboBoxStartToSearch = true; } 
public void syncToDoList () { android.content.SharedPreferences toDoSharedPref = getActivity () .getSharedPreferences ( "toDo", Context.MODE_PRIVATE ) ; java.lang.String[] splittedList; java.lang.String savedList = toDoSharedPref.getString ( "toDoList", null ) ; if ( null != savedList ) { splittedList = savedList.split ( "\\n" ) ; toDoList.addAll ( java.util.Arrays.asList ( splittedList ) ) ; } mAdapter.notifyDataSetChanged () ; } 
public static void createHTunnel ( byte[][] map, int x1, int x2, int y ) { for ( int x = java.lang.Math.min ( x1, x2 ) ; ( java.lang.Math.max ( x1, x2 ) ) > x; x++ ) { map[y][x] = ( ( byte ) ( dungeon.MapGenDungeon.SPACE ) ) ; } } 
@ java.lang.Override public void onOpen ( java.lang.Object arg0 ) { super.onOpen ( arg0 ) ; android.view.View.OnTouchListener listener = new android.view.View.OnTouchListener () { public boolean onTouch ( android.view.View v, android.view.MotionEvent e ) { if ( 1 == ( e.getAction () ) ) { marker.setHasToClose ( false ) ; marker.maximize () ; } return true; } }; this.mView.setOnTouchListener ( listener ) ; this.mView.findViewById ( R.id.maximize ) .setOnTouchListener ( listener ) ; } 
private boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( org.jspresso.framework.util.Build.getJspressoVersion () .equals ( clientVersion ) ) || ( ( ( java.lang.Boolean.parseBoolean ( java.lang.System.getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build.getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN.equals ( org.jspresso.framework.util.Build.getJspressoVersion () ) ) ) ; } 
@ java.lang.Override public void onResponse ( @android.support.annotation.NonNull android.content.Context ctx, com.cardinfolink.madgazescan.model.StateModel<java.util.ArrayList<com.cardinfolink.madgazescan.model.UserModel>> data ) { java.lang.String userId = null; if ( ( ( null != data ) & ( ( data.getStatus () ) != ( com.cardinfolink.madgazescan.api.ResponseCode.SUCCESS ) ) ) & ( com.cardinfolink.madgazescan.utils.CollectionUtils.isValid ( data.getData () ) ) ) { userId = data.getData () .get ( 0 ) .getUserId () ; } java.lang.String url = generateGlassUrl ( merchantCode, userId ) ; startWebActivity ( url ) ; } 
public static void putString ( android.content.Context context, java.lang.String key, java.lang.String value, boolean commit ) { ds.framework.v4.Settings.ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor.putString ( key, value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor.commit () ; ds.framework.v4.Settings.sPreferencesEditor = null; } if ( null != ( ds.framework.v4.Settings.sInstance ) ) { ds.framework.v4.Settings.sInstance.mSettings.put ( key, value ) ; } } 
private java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( null != ( source.getEnclosingType () ) ) { return ( ( getName ( source.getEnclosingType () ) ) + "_" ) + ( source.getSimpleSourceName () ) ; } return source.getSimpleSourceName () ; } 
@ java.lang.Override final boolean updateBool () throws java.lang.Exception { boolean b = false; for ( nl.ramondevaan.visualization.core.Source<S> s : inputs ) { if ( null != s ) { b = b || ( s.update () ) ; } } if ( b || ( changed ) ) { try { output = nl.ramondevaan.visualization.core.Filter.updateImpl () ; return true; } catch ( java.lang.Exception e ) { output = null; throw e; } } return false; } 
public void stopScheduler () { timer.cancel () ; if ( null != ( scheduler ) ) { scheduler.cancel () ; scheduler = null; } try { transmitter.close () ; } catch ( java.lang.Exception e ) { de.rwth_aachen.afu.raspager.RasPagerService.log.log ( java.util.logging.Level.SEVERE, "Failed to close transmitter.", e ) ; } } 
@ com.fasterxml.jackson.annotation.JsonIgnore private void checkStatus () { if ( null == ( holes ) ) { this.status = PatternStatus.READY; return; } for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole.getPatternAssigned () ) == null ) || ( aHole.getPatternAssigned () .isEmpty () ) ) { this.status = PatternStatus.WIP; return; } } this.status = PatternStatus.READY; } 
@ java.lang.Override public void onClick ( android.view.View v ) { cleanSlate () ; if ( 0 == i ) a1.cak.moore.cak_finale.Create.super.onBackPressed () ; if ( i == 2 ) android.widget.Toast.makeText ( context, R.string.newFile, Toast.LENGTH_SHORT ) .show () ; dialog.dismiss () ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; mActivityContext = getActivity () ; mApplicationContext = getActivity () .getApplicationContext () ; if ( null != ( getArguments () ) ) { mCategoryName = getArguments () .getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_NAME ) ; mCategoryFilters = getArguments () .getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_FILTER ) ; mSearchQuery = getArguments () .getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.SEARCH_QUERY ) ; } mUserActionListner = new com.pratilipi.mobile.android.PratilipiList.PratilipiListPresenter ( mActivityContext, this ) ; mPratilipiListAdapter = new com.pratilipi.mobile.android.PratilipiList.PratilipiListAdapter ( mApplicationContext, this, mSearchQuery ) ; } 
public void onClick ( android.view.View v ) { android.util.SparseBooleanArray checked = daysList.getCheckedItemPositions () ; java.util.ArrayList<java.lang.Integer> daysSelected = new java.util.ArrayList<java.lang.Integer> () ; for ( int i = 0; ( checked.size () ) > i; i++ ) { daysSelected.add ( i ) ; } this.headBackToMainScreen ( daysSelected ) ; } 
public java.lang.String toString () { java.lang.String result = ""; if ( organic ) { result += "*"; } result += " " + ( name ) ; if ( fruit ) { result += " ( F ) "; } result += ( "- " + ( weight ) ) + " lbs"; return result; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent e ) { root.getChildren () .remove ( makeMove ) ; spacesToMove = 1 + ( ( int ) ( ( java.lang.Math.random () ) * 3 ) ) ; ( curSpace ) ++; targetX = control.tileList.get ( curSpace ) .x; targetY = control.tileList.get ( curSpace ) .y; startNanoTime = java.lang.System.nanoTime () ; isRolling = true; } 
public org.json.JSONArray getStoryData () { org.json.JSONArray storyArray = null; try { org.json.JSONArray mJSONArray = loadDataFromAsset () ; for ( int i = 2; ( mJSONArray.length () ) > i; i++ ) { storyArray.put ( mJSONArray.getJSONObject ( i ) ) ; } } catch ( org.json.JSONException ex ) { ex.printStackTrace () ; } finally { return storyArray; } } 
private boolean deliverLevelParts ( com.lappard.android.level.LevelCreator.PartAvailableListener listener ) { if ( ( deliveredParts ) < ( levelParts.size () ) ) { java.util.List<com.badlogic.gdx.scenes.scene2d.Actor> result = createActors ( levelParts.get ( deliveredParts ) ) ; ( deliveredParts ) ++; android.util.Log.d ( "LevelCreator", "delivering Actors..." ) ; listener.onPartAvailable ( result ) ; return true; } return false; } 
private int compareNumOfAllocations ( com.example.nickozoulis.teamproj.domain.Referee lRef, com.example.nickozoulis.teamproj.domain.Referee rRef ) { if ( ( rRef.getNumOfMatchAllocated () ) < ( lRef.getNumOfMatchAllocated () ) ) return 1; if ( ( lRef.getNumOfMatchAllocated () ) < ( rRef.getNumOfMatchAllocated () ) ) return -1; if ( ( lRef.getNumOfMatchAllocated () ) == ( rRef.getNumOfMatchAllocated () ) ) return 0; throw new java.lang.IllegalStateException ( "Comparing failed." ) ; } 
public int doEndTag () throws javax.servlet.jsp.JspException { try { java.lang.String bodyContentString = ( ( getBodyContent () ) != null ) ? getBodyContent () .getString () : ""; bodyContent = null; pageContext.getOut () .write ( bodyContentString ) ; } catch ( java.io.IOException e ) { throw new javax.servlet.jsp.JspException ( e ) ; } catch ( java.lang.RuntimeException e ) { throw new javax.servlet.jsp.JspException ( e ) ; } return EVAL_PAGE; } 
protected boolean updateVideoSize ( int width, int height ) { matrixManager.setIntrinsicVideoSize ( width, height ) ; updateMatrixOnLayout () ; videoSize.x = width; videoSize.y = height; if ( ( height == 0 ) || ( width == 0 ) ) { return false; } android.view.SurfaceHolder holder = getHolder () ; if ( holder != null ) { holder.setFixedSize ( width, height ) ; } return true; } 
public int findIndexFromKey ( K key ) { for ( int i = 0; ( internalMap.size () ) > i; i++ ) { if ( ( internalMap.get ( i ) .getKey () ) == key ) return i; } return -1; } 
public void setMaxCount ( java.lang.Integer max ) { for ( int i = 0; ( max + 1 ) >= i; i++ ) { itemList.add ( i ) ; } maxItems = max; currentPageListView.setEnabled ( false ) ; dataAdapter.setPagesNumber ( itemList ) ; currentPageListView.setAdapter ( dataAdapter ) ; maxPages.setText ( max.toString () ) ; } 
public long insert ( io.keepcoding.rgs.everpobre.model.Notebook notebook ) { if ( null == notebook ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db.getWritableDatabase () .insert ( DBConstants.TABLE_NOTEBOOK, null, this.getContentValues ( notebook ) ) ; notebook.setId ( id ) ; db.close () ; db = null; return id; } 
public boolean canPlaceRoadAtLocation ( int playerIndex, client.models.mapdata.EdgeLocation edge ) { if ( ( -1 ) != ( this.getEdgeOwner ( edge ) ) ) return false; java.lang.Integer[] surrOwners = this.getAdjacentEdgeOwners ( edge ) ; if ( java.util.Arrays.asList ( surrOwners ) .contains ( playerIndex ) ) return true; else return false; } 
private void backupAllMenuItemAction () { int response = mainView.showConfirmationDialog ( "Back up vocab files", "This will overwrite all previous backup files. Are you sure?" ) ; if ( ( javax.swing.JOptionPane.YES_OPTION ) == response ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist.getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist, file ) ; } } } 
static byte[] readFile ( java.io.File file ) throws java.io.IOException { byte[] buffer = new byte[1024]; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; while ( true ) { int read = fileInputStream.read ( buffer ) ; if ( ( -1 ) == read ) break; bytes.write ( buffer, 0, read ) ; } fileInputStream.close () ; return bytes.toByteArray () ; } 
@ java.lang.Override public void readFields ( java.io.DataInput in ) throws java.io.IOException { int size = in.readInt () ; shortestpath = new int[size]; for ( int i = 0; size > i; i++ ) { shortestpath[i] = in.readInt () ; } } 
@ org.junit.Test public void shouldReturnNullDigestOnPartlyOverlappingWrites () throws java.io.IOException { chksumChannel.write ( buffers[1], blocksize ) ; chksumChannel.write ( buffers[0], ( ( blocksize ) - 1 ) ) ; if ( 1 == ( blocksize ) ) { fail ( "Pick a blocksize > 1 for testing correct handling of partly overlapping writes!" ) ; } assertThat ( chksumChannel.getChecksum () , org.hamcrest.Matchers.equalTo ( null ) ) ; } 
public java.lang.String format ( org.joda.time.DateTime dateTime, java.util.Locale locale ) { if ( null == dateTime ) { return ""; } org.joda.time.DateTimeZone timeZone = dateTime.getZone () ; long utcTime = timeZone.convertLocalToUTC ( dateTime.getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter.withLocale ( locale ) .print ( dateTime ) ; } 
@ java.lang.Override public void setCoordinates ( dev.eyesless.simple_weather_for_fishermans.geocoding_responce_classes.Location location ) { cfinterface.setCoords ( ( ( java.lang.String.valueOf ( location.getLng () ) ) + ( ( java.lang.String.valueOf ( location.getLat () ) ) + " and " ) ) ) ; if ( ( location.getLastlocation () ) != null ) setAutocompleted ( location.getLastlocation () ) ; cfinterface.setDefoultLoc () ; cfinterface.setLocUnavaliable () ; } 
private java.lang.String getField ( java.util.Map<java.lang.String, java.lang.Object> profile ) { java.util.List<java.lang.String> map = ( ( java.util.List<java.lang.String> ) ( profile.get ( "summary" ) ) ) ; if ( 2 <= ( map.size () ) ) { return map.get ( 1 ) .toString () ; } else { return ""; } } 
@ java.lang.Override protected void onStop () { org.acra.ACRA.getErrorReporter () .putCustomData ( "MainActivity.onStop () ", "callback method was invoked" ) ; android.util.Log.i ( ro.pub.acs.mobiway.gui.main.MainActivity.TAG, "onStop () callback method was invoked" ) ; stopLocationUpdates () ; if ( ( googleApiClient.isConnected () ) && ( ( googleApiClient ) != null ) ) { googleApiClient.disconnect () ; } super.onStop () ; } 
private static void compareHands ( java.util.List<java.lang.Integer> x, java.util.List<java.lang.Integer> y, boolean[] a, boolean[] b ) { int buildValue1 = week1Problems.P6.findValue ( a ) ; int buildValue2 = week1Problems.P6.findValue ( b ) ; if ( buildValue2 < buildValue1 ) { java.lang.System.out.print ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week1Problems.P6.compareHigh ( x, y ) ; } else { java.lang.System.out.print ( "Player 2 wins" ) ; } } 
private void resetViewport () { final lecho.lib.hellocharts.model.Viewport v = new lecho.lib.hellocharts.model.Viewport ( chart.getMaximumViewport () ) ; v.bottom = ( ( float ) ( 1.1 ) ) * ( edu.zucc.xk31401419.mycurrencies.utils.MathUtil.getMaxAndMin ( rateValuesTab ) [1] ) ; v.top = ( edu.zucc.xk31401419.mycurrencies.utils.MathUtil.getMaxAndMin ( rateValuesTab ) [0] ) * ( ( float ) ( 0.9 ) ) ; v.left = 0; v.right = ( numberOfPoints ) - 1; chart.setMaximumViewport ( v ) ; chart.setCurrentViewport ( v ) ; } 
private void addMember ( final com.enonic.xp.security.PrincipalKey container, final com.enonic.xp.security.PrincipalKey member ) { try { securityService.addRelationship ( com.enonic.xp.security.PrincipalRelationship.from ( container ) .to ( member ) ) ; com.enonic.xp.core.impl.security.SecurityInitializer.LOG.info ( ( container + ( ( "Added " + member ) + " as member of " ) ) ) ; } catch ( java.lang.Throwable t ) { com.enonic.xp.core.impl.security.SecurityInitializer.LOG.error ( ( ( ( "Unable to add member: " + container ) + " -> " ) + member ) , t ) ; } } 
@ java.lang.Override public boolean createStudent ( java.lang.String name, java.lang.String userID, java.lang.String pass ) { if ( user.isSet () ) { if ( ( AccessLevel.teacher ) == ( user.get () .access () ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( name, userID, pass ) ; return this.db.putStudent ( s ) ; } } return false; } 
public static java.lang.String omitEveryOther ( java.lang.String word ) { boolean keepCurrent = true; int i = 0; java.lang.String newSpeak = ""; while ( ( word.length () ) > i ) { if ( keepCurrent ) { newSpeak += java.lang.String.valueOf ( word.charAt ( i ) ) ; keepCurrent = false; } else { keepCurrent = true; } } return newSpeak; } 
@ java.lang.Override public void onBarDelete ( int total ) { score += total; callback.onScoreChange ( score ) ; if ( 0 == ( ( score ) % ( home.tetris.Scene.SCORE_PER_LEVEL ) ) ) { ( level ) ++; sound.play ( Sound.LEVEL_UP ) ; callback.onLevelUp ( level ) ; } deletingAnimation.falling ( total ) ; } 
public java.util.List<ralgorithm.State> pmove () { java.util.List<ralgorithm.State> states = new java.util.ArrayList<ralgorithm.State> () ; ralgorithm.State state; while ( true ) { state = step () ; if ( null == state ) { java.lang.System.out.println ( "Got NULL state" ) ; break; } states.add ( state ) ; } for ( ralgorithm.Movement m : moves ) { java.lang.System.out.println ( "FINALIZING" ) ; m.finalizeMove () ; } return states; } 
private boolean isMonth ( java.lang.String nextWord ) { boolean ans = false; for ( int i = 1; ( monthsInYear.length ) > i; i++ ) { if ( nextWord.equals ( monthsInYear[i] ) ) { ans = true; break; } } return ans; } 
@ java.lang.Override public void put ( KEY key, VALUE data ) { java.lang.String s = datacache.Util.getMD5 ( key.toString () ) ; try { datacache.disklrucache.DiskLruCache.Editor editor = mDiskIruCache.edit ( s ) ; if ( null != editor ) { java.io.OutputStream outputStream = editor.newOutputStream ( 0 ) ; mValueDataSaver.writeTo ( outputStream, data ) ; } editor.commit () ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
@ java.lang.Override public void act ( float delta ) { taken += delta; if ( ( duration ) < ( taken ) ) { callActionCompletedListener () ; action.act ( delta ) ; if ( action.isDone () ) action.callActionCompletedListener () ; } } 
@ java.lang.Override public void setBooleanMetadata ( java.lang.String key, boolean value ) { if ( ( ( sender.getBlock () .getType () ) == ( org.bukkit.Material.COMMAND ) ) || ( ( sender.getBlock () ) == null ) ) { return; } sender.getBlock () .setMetadata ( key, new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer.getInstance () , value ) ) ; } 
public void injectCacheName ( java.lang.Object obj, java.lang.String cacheName ) throws org.apache.ignite.IgniteCheckedException { assert null != obj; if ( log.isDebugEnabled () ) log.debug ( ( "Injecting cache name: " + obj ) ) ; obj = unwrapTarget ( obj ) ; inject ( obj, GridResourceIoc.ResourceAnnotation.CACHE_NAME, null, null, null ) ; } 
private void executeOnStartActions () { int actionIndexOnStart = java.lang.Integer.parseInt ( sharedPrefs.getString ( getString ( R.string.key_prefActionOnStart ) , java.lang.Integer.toString ( ActionOnStartNone ) ) ) ; if ( ( ActionOnStartNone ) == actionIndexOnStart ) { return; } else if ( actionIndexOnStart == ( ActionOnStartSurahList ) ) { android.content.Intent intent = new android.content.Intent ( this, com.frrahat.quransimple.SuraListActivity.class ) ; startActivityForResult ( intent, REQUEST_SURAH_LIST ) ; } else if ( actionIndexOnStart == ( ActionOnStartRandomAyah ) ) { showARandomAyah = true; } } 
private boolean testActiveClick ( com.google.gwt.user.client.Event e ) { com.google.gwt.dom.client.Element target = e.getEventTarget () .cast () ; com.google.gwt.query.client.GQuery $e = com.google.gwt.query.client.GQuery.$ ( target ) ; if ( 0 < ( $e.parents ( ( "#" + ( containerId ) ) ) .length () ) ) { activeField = true; } else { closeField () ; } return false; } 
public static com.mongodb.MongoClient createClientFromFlumeContext ( org.apache.flume.Context context, java.lang.String prefix ) { java.util.List<com.mongodb.ServerAddress> seeds = org.mapad.google.common.utils.MongoUtils.getSeeds ( ( ( context.getString ( org.mapad.google.common.utils.MongoUtils.HOSTNAMES ) ) + prefix ) ) ; com.mongodb.MongoCredential credential = org.mapad.google.common.utils.MongoUtils.getCredential ( context, prefix ) ; com.mongodb.MongoClient client; if ( credential != null ) { client = new com.mongodb.MongoClient ( seeds, java.util.Arrays.asList ( credential ) ) ; } else { client = new com.mongodb.MongoClient ( seeds ) ; } return client; } 
private void updateRippleSize ( int width, int height ) { final int cx = width / 2; final int cy = ( mDual ) ? ( mIcon.getHeight () ) + ( mIcon.getTop () ) : height; final int rad = ( ( int ) ( ( mIcon.getHeight () ) * 1.25F ) ) ; mRipple.setHotspotBounds ( ( cx - rad ) , ( cy - rad ) , ( cx + rad ) , ( cy + rad ) ) ; } 
public java.lang.String cardToString () { java.lang.String ret = ""; if ( ( ( value ) == 11 ) || ( ( value ) == 1 ) ) { ret = "A"; } if ( ( value ) == 21 ) { ret = "J"; } if ( ( value ) == 22 ) { ret = "Q"; } if ( ( value ) == 23 ) { ret = "K"; } else { ret = value; } return ret; } 
public void fireBomb ( samueltaylor.classicwarlordprototype.Model.Region r, java.util.List<samueltaylor.classicwarlordprototype.Model.Empire> affectedEmpires, java.util.List<samueltaylor.classicwarlordprototype.Model.Region> affectedRegions ) { location.setBomb ( null ) ; location = r; if ( null != ( r.getBomb () ) ) { this.bombtype = location.getBomb () .getBombtype () ; } location.setBomb ( this ) ; location.detonateBomb ( affectedEmpires, affectedRegions ) ; } 
@ cz.cuni.amis.pogamut.base.communication.worldview.listener.annotation.EventListener ( eventClass = cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled.class ) public void playerKilled ( cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled event ) { if ( event.getKiller () .equals ( info.getId () ) ) { updateRisque () ; shoot.stopShooting () ; if ( null != ( currentWeapon ) ) { currentWeapon.upNbKills () ; currentWeapon.updateProbability () ; } target = null; bot.getBotName () .setInfo ( "COLLECT" ) ; now = collect; canPursue = false; body.getCommunication () .sendGlobalTextMessage ( ( "courage : " + ( risque ) ) ) ; } } 
private void showWindow ( net.mready.hover.HoverWindow window ) { checkWindow ( window ) ; if ( window.attached ) { return; } windowManager.addView ( window.windowView, window.windowLayoutParams ) ; window.attached = true; if ( ( ! ( keyguardManager.inKeyguardRestrictedInputMode () ) ) && ( powerManager.isScreenOn () ) ) { window.performStart () ; } } 
public final BinaryNum shiftLeft () { final boolean[] newBits = new boolean[bits.length]; for ( int i = 1; ( bits.length ) > i; i++ ) { newBits[ ( i - 1 ) ] = bits[i]; } newBits[bits.length] = false; return new BinaryNum ( newBits ) ; } 
private java.lang.String buildSortOrder ( com.chd.MediaMgr.utils.MediaFileUtil.SortMethod sort ) { java.lang.String sortOrder = null; switch ( sort ) { case name: sortOrder = " asc" + ( MediaStore.Files.FileColumns.TITLE ) ; break; case size: sortOrder = ( MediaStore.Files.FileColumns.SIZE ) + " asc"; break; case date: sortOrder = ( MediaStore.Files.FileColumns.DATE_MODIFIED ) + " desc"; break; case type: sortOrder = ( ( ( MediaStore.Files.FileColumns.MIME_TYPE ) + " asc, " ) + ( MediaStore.Files.FileColumns.TITLE ) ) + " asc"; break; } return sortOrder; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super.onCreate ( savedInstanceState ) ; if ( 0 < ( getLayoutRes () ) ) { setContentView ( R.layout.activity_base ) ; butterknife.ButterKnife.bind ( this ) ; android.view.View content = android.view.LayoutInflater.from ( this ) .inflate ( getLayoutRes () , root, false ) ; if ( hasTitle () ) { android.support.v7.widget.Toolbar toolbar = inflateToolbar () ; root.addView ( toolbar ) ; } root.addView ( content ) ; } } 
public double slopeTo ( Point that ) { if ( 0 == ( this.compareTo ( that ) ) ) return java.lang.Double.NEGATIVE_INFINITY; if ( ( this.x ) == ( that.x ) ) return java.lang.Double.POSITIVE_INFINITY; return ( ( double ) ( ( this.y ) - ( that.y ) ) ) / ( ( double ) ( ( this.x ) - ( that.x ) ) ) ; } 
public void printData () { java.lang.System.out.println ( ( ( this.path ) + "=> Directory= " ) ) ; if ( ( files.size () ) > 0 ) java.lang.System.out.println ( " Files: " ) ; else java.lang.System.out.println ( " <no files>" ) ; for ( int i = 0; i < ( files.size () ) ; ++i ) java.lang.System.out.println ( ( " - " + ( files.get ( i ) ) ) ) ; } 
public static boolean isInvEmpty ( net.minecraft.inventory.IInventory stack ) { boolean empty = true; if ( null == stack ) return true; for ( int i = 0; i < ( stack.getSizeInventory () ) ; i++ ) { if ( ( stack.getStackInSlot ( i ) ) != null ) return false; } return true; } 
private java.lang.Class<?> getSuperClassOnSet ( java.util.Set<java.lang.Class<?>> set, java.lang.Class<?> clazz ) { java.lang.Class<?> found = null; for ( java.lang.Class<?> aux : set ) { if ( ( ( found != null ) && ( aux.isAssignableFrom ( found ) ) ) && ( aux.isAssignableFrom ( clazz ) ) ) { found = aux; } } return found == null ? clazz : found; } 
@ java.lang.Override public void touchUp ( com.badlogic.gdx.scenes.scene2d.InputEvent event, float x, float y, int pointer, int button ) { back.setBounds ( ( ( back.getX () ) - 5 ) , back.getY () , ( 5 + ( back.getWidth () ) ) , ( ( back.getHeight () ) + 5 ) ) ; game.mainMenuScreen = new by.randomen.screens.MainMenuScreen ( game ) ; game.setScreen ( game.mainMenuScreen ) ; game.settingsMScreen.dispose () ; dispose () ; } 
@ java.lang.Override public org.exist.xquery.value.Sequence postEval ( org.exist.xquery.value.Sequence seq ) throws org.exist.xquery.XPathException { if ( null == ( orderedResult ) ) { return seq; } orderedResult.sort () ; final org.exist.xquery.value.Sequence result = orderedResult; orderedResult = null; if ( ( getReturnExpression () ) instanceof org.exist.xquery.FLWORClause ) { return ( ( org.exist.xquery.FLWORClause ) ( getReturnExpression () ) ) .postEval ( seq ) ; } return result; } 
protected void updateReel ( double x, double y, double orientationReelle, boolean enMarcheAvant, double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle; courbureGeometrique = courbureReelle; } else { orientationGeometrique = ( java.lang.Math.PI ) + orientationReelle; courbureGeometrique = -courbureReelle; } position.setX ( x ) ; position.setY ( y ) ; this.orientationReelle = orientationReelle; this.enMarcheAvant = enMarcheAvant; this.courbureReelle = courbureReelle; } 
protected net.instant.util.fileprod.ProducerJob produceInner ( java.lang.String name ) { net.instant.util.fileprod.ProducerJob ret = null; if ( null != ( fs ) ) ret = fs.produce ( name ) ; if ( ( ( rs ) != null ) && ( ret != null ) ) ret = rs.produce ( name ) ; return ret; } 
@ org.testng.annotations.Test public void testSubtractBusinessKey () throws java.lang.Exception { boolean assert_ = false; try { spreadsheet.mapper.utils.FieldUtils.subtractBusinessKey ( "test.int1" ) ; } catch ( java.lang.IllegalArgumentException e ) { spreadsheet.mapper.utils.FieldUtilsTest.LOGGER.debug ( "\'test.int1\' not business key" ) ; if ( e.getMessage () .contains ( "business key" ) ) { assert_ = true; } } org.testng.Assert.assertTrue ( assert_ ) ; java.lang.String s = spreadsheet.mapper.utils.FieldUtils.subtractBusinessKey ( ( "test.int1" + ( FieldUtils.BUSINESS_KEY_PREFIX ) ) ) ; org.testng.Assert.assertEquals ( s, "test.int1" ) ; } 
public int getBillWorth ( int itemDamage, int stackSize ) { int cash = 0; switch ( itemDamage ) { case 0: cash = 1; break; case 1: cash = 5; break; case 2: cash = 10; break; case 3: cash = 20; break; case 4: cash = 50; break; case 5: cash = 100; break; } return stackSize * cash; } 
public java.util.List<java.lang.String> asListString ( javax.naming.directory.Attribute att ) throws javax.naming.NamingException { if ( null == att ) return null; java.util.List<java.lang.String> res = new java.util.LinkedList<java.lang.String> () ; for ( int i = 0; i < ( att.size () ) ; i++ ) res.add ( ( ( java.lang.String ) ( att.get ( i ) ) ) ) ; return res; } 
public void playSong () { if ( ( org.williamwong.spotifystreamer.services.MusicService.State.PAUSED ) == ( mState ) ) { mMediaPlayer.start () ; return; } if ( ( mState ) == ( org.williamwong.spotifystreamer.services.MusicService.State.PLAYING ) ) { stopSong () ; } try { mMediaPlayer.setDataSource ( mTrackModels.get ( mCurrentTrack ) .getPreviewUrl () ) ; } catch ( java.io.IOException e ) { e.printStackTrace () ; } mMediaPlayer.prepareAsync () ; mState = org.williamwong.spotifystreamer.services.MusicService.State.PREPARING; } 
private void calculateLength () { if ( ( Sens.VERTICAL ) == ( orientation ) ) { length = ( end.getRow () ) - ( start.getRow () ) ; } else if ( ( orientation ) == ( Sens.HORIZONTAL ) ) { length = ( end.getCol () ) - ( start.getCol () ) ; } } 
@ java.lang.Override public void landOnField ( Players.PlayerController playerController, Fields.FieldController fieldController ) { Players.Player jailedPlayer = playerController.getCurrentPlayer () ; jailedPlayer.setJail ( true ) ; Game.GameController.movement ( false, ( 1 + ( jailedPlayer.getPlace () ) ) , 11, jailedPlayer, fieldController, playerController ) ; jailedPlayer.setPlace ( 10 ) ; } 
private void stealSourceAsFields ( java.util.Map<java.lang.String, java.lang.Object> sourceAsMap, final java.util.Map<java.lang.String, org.elasticsearch.search.SearchHitField> fields, final java.util.Set<java.lang.String> included ) { if ( ( included != null ) || ( ( ( sourceAsMap == null ) || ( fields == null ) ) || ( sourceAsMap.isEmpty () ) ) ) { return; } org.elasticsearch.search.fetch.source.FetchSourceSubPhase.stealSourceAsFields ( null, sourceAsMap, fields, included ) ; } 
private void findSubIndexForColor ( int topIndex, int color ) { if ( topIndex > ( ( getBuilder () .mColorsSub.length ) - 1 ) ) return; int[] subColors = getBuilder () .mColorsSub[topIndex]; for ( int subIndex = 0; subIndex < ( subColors.length ) ; subIndex++ ) { if ( ( subColors[subIndex] ) == color ) { subIndex ( subIndex ) ; break; } } } 
public int findPositionById ( long id ) { android.database.Cursor cursor = getList () ; if ( null == cursor ) return -1; while ( cursor.moveToNext () ) { if ( ( cursor.getLong ( 0 ) ) == id ) { return cursor.getPosition () ; } } return -1; } 
@ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { java.io.File file = new java.io.File ( ( ( cyanogenOTAUpdate.getFileName () ) + ( ( android.os.Environment.getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) .getPath () ) + ( java.io.File.separator ) ) ) ) ; onUpdateDownloaded ( ( ( file.exists () ) && ( ! ( settingsManager.containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } 
public boolean createUser ( boolean checkExists ) { if ( ( checkExists && ( userExists () ) ) || ( ! ( userDefined () ) ) ) { return false; } org.avaje.docker.commands.PostgresContainer.log.debug ( "create postgres user {}", config.containerName () ) ; java.lang.ProcessBuilder pb = createRole ( dbConfig.getDbUser () , dbConfig.getDbPassword () ) ; java.util.List<java.lang.String> stdOutLines = org.avaje.docker.commands.process.ProcessHandler.process ( pb ) .getStdOutLines () ; return ( stdOutLines.size () ) == 2; } 
@ java.lang.Override public java.lang.Boolean apply ( java.lang.Long bookmarkId ) { boolean result; if ( 0 < bookmarkId ) { bookmarksDBAdapter.removeBookmark ( bookmarkId ) ; result = false; } else { bookmarksDBAdapter.addBookmark ( sura, ayah, page ) ; result = true; } bookmarksPublishSubject.onNext ( null ) ; return result; } 
public void update ( ru.job4j.model.Item updated ) { for ( int i = 0; ( this.position ) > i; i++ ) { if ( this.items[i].equals ( updated ) ) { this.items[i] = updated; } } } 
public void promote ( com.github.arsenalfcgunners.gappleperms.Rank r ) { rank = r; if ( ( ! ( donorranks.contains ( rank ) ) ) && ( rank.isDonor () ) ) { donorranks.add ( rank ) ; } gp.getRankManager () .setDonorRanks ( uuid, donorranks ) ; gp.getRankManager () .setRank ( uuid, rank ) ; clearPerms () ; givePerms () ; gp.getLogger () .log ( java.util.logging.Level.WARNING, "Online player promoted." ) ; } 
public byte[] downloadTMDToByteArray ( long titleID, int version ) throws java.io.IOException { java.lang.String version_suf = ""; if ( 0 < version ) version_suf = "." + version; java.lang.String URL = ( ( ( ( de.mas.jnustool.util.Downloader.URL_BASE ) + "/" ) + ( java.lang.String.format ( "%016X", titleID ) ) ) + "/tmd" ) + version_suf; java.lang.System.out.println ( URL ) ; return downloadFileToByteArray ( URL ) ; } 
private java.lang.String getIGNameForInitiator ( com.emc.storageos.db.client.model.Initiator initiator, com.emc.storageos.xtremio.restapi.XtremIOClient client, java.lang.String xioClusterName ) throws java.lang.Exception { java.lang.String igName = null; try { if ( ( initiator.getLabel () ) != null ) { com.emc.storageos.xtremio.restapi.model.response.XtremIOInitiator initiatorObj = client.getInitiator ( initiator.getLabel () , null ) ; if ( null != initiatorObj ) { igName = initiatorObj.getInitiatorGroup () .get ( 1 ) ; } } } catch ( java.lang.Exception e ) { com.emc.storageos.volumecontroller.impl.xtremio.XtremIOExportOperations._log.warn ( "Initiator {} already deleted", initiator.getLabel () ) ; } return igName; } 
private java.util.ArrayList<java.lang.String> runSocket ( int packetsMax ) throws java.io.IOException { java.util.ArrayList<java.lang.String> toReturn = new java.util.ArrayList<java.lang.String> () ; while ( 0 != packetsMax ) { byte[] rcvdInfo = new byte[10]; java.net.DatagramPacket packet = new java.net.DatagramPacket ( rcvdInfo, rcvdInfo.length ) ; socket.receive ( packet ) ; toReturn.add ( packet.getData () .toString () ) ; packetsMax--; } return toReturn; } 
public void inactiveTimerStart () { java.lang.String sDelay = settings.getString ( "inactiveTimerMins", com.givenhansco.keystonenavigation.Activities.MainMenuActivity.DEFAULT_TIMER_DELAY ) ; long delay; try { delay = java.lang.Long.parseLong ( sDelay ) ; } catch ( java.lang.Exception e ) { delay = 240; } android.util.Log.i ( com.givenhansco.keystonenavigation.Activities.MainMenuActivity.TAG, ( delay + "timerDelay : " ) ) ; if ( delay != 0 ) { delay = ( 1000 * 60 ) * delay; startInactiveTimer ( delay ) ; } else { android.util.Log.i ( com.givenhansco.keystonenavigation.Activities.MainMenuActivity.TAG, "Inactive Timer Skipped" ) ; } } 
public void setSongIndex ( int index ) { java.lang.System.out.println ( ( index + "setSongIndex " ) ) ; if ( index != ( this.songIndex ) ) { this.beatmapIndex = 0; setBeatmapIndex ( 0 ) ; } this.songIndex = index; nextSongButton.setEnable ( ( index < ( ( Resources.songs.size () ) - 1 ) ) ) ; imageReload () ; textReload () ; } 
@ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint.class ) public ninja.Result comic ( @ninja.params.PathParam ( value = "user" ) java.lang.String user, @ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User username = userDao.getUser ( user ) ; www.purple.mixxy.models.Comic comic = comicDao.getComic ( username, work ) ; if ( ( comic == null ) || ( username == null ) ) { return ninja.Results.notFound () .template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results.ok () .render ( "comic", comic ) .render ( "user", user ) .html () ; } 
@ java.lang.Override protected void onDestroy () { super.onDestroy () ; if ( isFinishing () ) { mGoogleApiClient = null; if ( null != ( customThreadCheckLocation ) ) customThreadCheckLocation.stopRunning ( false ) ; if ( ( customThreadCheckGPSState ) != null ) customThreadCheckGPSState.stopRunning ( false ) ; android.support.v4.content.LocalBroadcastManager.getInstance ( this ) .unregisterReceiver ( receiverMaps ) ; floorPlanNavigationImageImageView.setImageDrawable ( null ) ; if ( ( roundCornersBitmap ) != null ) roundCornersBitmap.recycle () ; } } 
public java.util.ArrayList<java.lang.String> getModulePoolPaths () { java.util.ArrayList<java.lang.String> output = new java.util.ArrayList<java.lang.String> () ; if ( 0 == ( listofPredecessors.size () ) ) { return this.getCurrentFilePath () ; } else { for ( Runner.ModulePool mp : listofPredecessors ) { output.addAll ( mp.getCurrentFilePath () ) ; } } return output; } 
public boolean writeData ( byte[] data, int length ) { int written = 0; for ( int i = 0; ( java.lang.Math.min ( length, data.length ) ) > i; i++ ) { if ( ( writeBitsRaw ( org.q3df.demo.Q3HuffmanCoder.huff_paths[ ( 255 & ( data[i] ) ) ], org.q3df.demo.Q3HuffmanCoder.sym_size[ ( 255 & ( data[i] ) ) ] ) ) > 0 ) { written++; } else break; } return written == length; } 
@ org.junit.Test public void testRemove () { Person test10 = new Person ( "Dave", "Son" ) ; Course course2 = new Course ( "3010", "SYSC" ) ; test10.remove ( course2 ) ; Course[] array2 = test10.getCourses () ; if ( course2 == ( array2[0] ) ) { fail ( "Remove for the course didn't work" ) ; } } 
@ org.junit.Test public void resolveClassWithDefaultScope () { java.lang.String match = ( ( "\n" + "public class Foo {/*comment*/}\n" ) + "\n" ) + "import foo;\n"; de.flapdoodle.codedoc.resolver.java.Reference ref = de.flapdoodle.codedoc.resolver.java.Reference.parse ( "foo.Foo" ) .get () ; de.flapdoodle.codedoc.common.Either<de.flapdoodle.codedoc.CodeSample, java.lang.Error> result = new de.flapdoodle.codedoc.resolver.java.JavaSourceReferenceResolverImpl () .resolve ( ref, code ) ; assertTrue ( result.isLeft () ) ; assertEquals ( match, result.left () .code () ) ; assertEquals ( "java", result.left () .type () ) ; } 
public int getPlayerForLine ( final int row, final java.lang.String playerFigure ) { int playerRowCount = 0; for ( int i = 0; ( board.getRowLength ( row ) ) > i; i++ ) { if ( ( ( board.getFigure ( row, i ) ) != null ) && ( ( board.getFigure ( row, i ) .toString () ) == playerFigure ) ) { playerRowCount++; } } return playerRowCount; } 
@ java.lang.Override public boolean equals ( java.lang.Object other ) { if ( null == other ) return false; if ( ! ( other instanceof model.Team ) ) return false; model.Team team = ( ( model.Team ) ( other ) ) ; if ( ( team.name.equals ( this.name ) ) && ( this.players.equals ( team.players ) ) ) return true; return false; } 
public org.eclipse.titan.runtime.core.TitanBoolean operatorEquals ( final org.eclipse.titan.runtime.core.TitanUniversalCharString other_value ) { mustBound ( "Unbound left operand of charstring element comparison." ) ; other_value.mustBound ( "Unbound right operand of charstring element comparison." ) ; if ( 1 != ( other_value.getValue () .size () ) ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } return new org.eclipse.titan.runtime.core.TitanBoolean ( ( ( get_char () ) == ( other_value.charAt ( 0 ) ) ) ) ; } 
protected void appendCgroupsCmds ( java.lang.StringBuilder cmdLine ) { if ( cfg.getFrameworkSuperUser () .isPresent () ) { cmdLine.append ( " export TASK_DIR=`basename $PWD`&&" ) ; appendSudo ( cmdLine ) ; appendSudo ( cmdLine ) ; cmdLine.append ( ( " " + ( "chown " + ( cfg.getFrameworkUser () .get () ) ) ) ) ; cmdLine.append ( cfg.getCGroupPath () ) ; cmdLine.append ( "/cpu/mesos/$TASK_DIR &&" ) ; } else { org.apache.myriad.scheduler.NMExecutorCLGenImpl.LOGGER.info ( "frameworkSuperUser not enabled ignoring cgroup configuration" ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { com.sweproject.calorietracker.MainActivity.insertDBData ( com.sweproject.calorietracker.DataObjects.Food_Day.class, this, new com.sweproject.calorietracker.DataObjects.Food_Day ( FragmentCalendar.currentDay.getId () , ( 1 + ( mServingSpin.getSelectedItemPosition () ) ) , mServingSizes.get ( mSelectedIndex ) .getId () ) , false ) ; } 
@ java.lang.Override public void setDefinition ( java.lang.String filename, java.lang.Long start, java.lang.Long end ) { org.eclipse.core.resources.IFile file = getFile ( filename ) ; if ( ( file.exists () ) && ( file != null ) ) { tern.eclipse.ide.ui.utils.EditorUtils.openInEditor ( file, start.intValue () , ( ( end.intValue () ) - ( start.intValue () ) ) , true ) ; } } 
public io.kks.states.State removeState ( int index ) { if ( ( outOfBounds ( index ) ) || ( ( stateStack.size () ) <= 1 ) ) { return null; } io.kks.states.State removeState = stateStack.remove ( index ) ; removeState.onDestroy () ; return removeState; } 
public java.awt.Component prepareRenderer ( javax.swing.table.TableCellRenderer renderer, int row, int column ) { java.awt.Component c = super.prepareRenderer ( renderer, row, column ) ; if ( ! ( isRowSelected ( row ) ) ) c.setBackground ( ( 0 == ( row % 2 ) ? getBackground () : java.awt.Color.LIGHT_GRAY ) ) ; return c; } 
private void stop () { if ( mGame.hasStarted () ) { ca.hoogit.powerhour.Game.Engine.started = false; if ( mGame.is ( State.ACTIVE ) ) { mTimer.cancel () ; mVibrator.cancel () ; } android.util.Log.i ( ca.hoogit.powerhour.Game.Engine.TAG, ( ( mGame.currentRound () ) + "Stopping game on round " ) ) ; } finish () ; } 
private com.github.javalbert.sqlbuilder.Predicate buildExistsPredicate ( com.github.javalbert.sqlbuilder.dsl.ExistsPredicate dslPredicate ) { com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate predicate = newPredicate ( dslPredicate ) ; if ( ( PredicateOperator.EXISTS ) == ( dslPredicate.getOperator () ) ) { predicate.exists () ; } else if ( ( dslPredicate.getOperator () ) == ( PredicateOperator.NOT_EXISTS ) ) { predicate.notExists () ; } return predicate.subquery ( buildSelect ( dslPredicate.getSubquery () ) ) ; } 
public int reflectDirection ( int laser_direction ) { laser_direction = jkhet.Piece.mod ( ( 2 + laser_direction ) , 4 ) ; int relative_side = jkhet.Piece.mod ( ( laser_direction - ( rot ) ) , 4 ) ; if ( relative_side == 0 ) { return jkhet.Piece.mod ( ( 1 + ( rot ) ) , 4 ) ; } else if ( relative_side == 1 ) { return jkhet.Piece.mod ( rot, 4 ) ; } else { board_pieces.remove ( this ) ; return -1; } } 
void addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = intervalViewToAdd ( interval ) ; int pos = intervalsView.getChildCount () ; if ( 0 == ( pos % 2 ) ) { intervalView.setBackgroundColor ( getResources () .getColor ( R.color.even_list_item ) ) ; } else { intervalView.setBackgroundColor ( getResources () .getColor ( R.color.odd_list_item ) ) ; } intervalsView.addView ( intervalView, pos ) ; } 
protected void handleStringAnswer () throws java.io.IOException { java.lang.String requestId = readValue () ; java.lang.String value = readValue () ; com.ideal.evecore.util.PendingAtomicReference<java.lang.String> reference = stringResults.remove ( requestId ) ; if ( null != reference ) { synchronized ( reference ) { reference.set ( value ) ; reference.notify () ; } } } 
public void nextRound () { Round.setText ( ( ( ( start ) - 1 ) + "Round " ) ) ; pt.makeEmpty () ; ( start ) ++; pickNumber ( 3 ) ; control = 0; turn = 0; CorrectNum.setText ( "0" ) ; } 
private boolean getNextQuestion () { currentQuestion = quiz.nextQuestion () ; if ( null == ( currentQuestion ) ) { currentState = backend.GameState.GAME_OVER; return false; } lblCurrentQ.setText ( currentQuestion.getQ () ) ; int index = 0; for ( java.lang.String ans : currentQuestion.getAnswers () ) { answers[index].setText ( ans ) ; index++; } lblTime.setText ( java.lang.Integer.toString ( currentQuestion.getTimeLimit () ) ) ; currentState = backend.GameState.WAITING_FOR_ANSWERS; broadcastToClients ( NetworkMessages.nextQ ) ; return true; } 
public static void listing () { java.nio.file.Path taskFile = java.nio.file.Paths.get ( "/home/salankiv/greenfox/salankiv-todo-app/assets/tasks.txt" ) ; try { java.util.List<java.lang.String> lines = java.nio.file.Files.readAllLines ( taskFile ) ; for ( int i = 0; ( lines.size () ) > i; i++ ) { java.lang.System.out.println ( ( ( ( i + 1 ) + ". " ) + ( lines.get ( i ) ) ) ) ; } } catch ( java.io.IOException e ) { e.printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; android.support.v4.app.Fragment fragment = getSupportFragmentManager () .findFragmentById ( R.id.list_container ) ; if ( ( fragment instanceof com.qualicom.availabilitydashboard.NodeListActivityFragment ) && ( ! ( mTwoPane ) ) ) { android.util.Log.i ( "BACK", "Back to node fragment" ) ; selectedNode = null; } } 
public void write ( int data ) { int index = 0; while ( ( clientCount ) > index ) { clients[index].write ( data ) ; if ( clients[index].active () ) { index++; } else { removeIndex ( index ) ; } } } 
public de.marsetex.lab2.task3.RationalNumber subtract ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( other.zaehler ) * ( nenner ) ) + ( ( zaehler ) * ( other.nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp, nennerTemp ) ; } 
public static java.util.List<java.lang.String> decolorize ( java.util.List<java.lang.String> colored ) { if ( null == colored ) return null; java.util.List<java.lang.String> decolored = new java.util.ArrayList<java.lang.String> ( colored.size () ) ; for ( java.lang.String string : decolored ) { decolored.add ( com.nisovin.shopkeepers.Utils.translateColorCodesToAlternative ( '&', string ) ) ; } return decolored; } 
@ java.lang.Override protected org.eclipse.emf.ecore.EObject getEObjectByID ( java.lang.String id ) { org.eclipse.emf.ecore.EObject idObject = super.getEObjectByID ( id ) ; if ( null == idObject ) { for ( org.eclipse.emf.ecore.EObject eObject : getContents () ) { if ( eObject instanceof no.hal.pgo.osm.OSM ) { no.hal.pgo.osm.Tagged tagged = no.hal.pgo.osm.util.OsmResourceImpl.getTagged ( id, eObject, OsmPackage.eINSTANCE.getOSM_Nodes () , OsmPackage.eINSTANCE.getOSM_Relations () ) ; if ( tagged != null ) { return tagged; } } } } return null; } 
public static java.lang.String getTodaysTshirt () { if ( null == ( com.coollooks.Util.tShirtPathList ) ) com.coollooks.Util.setTshirtList () ; int i = ( ( int ) ( ( ( java.lang.Math.random () ) * 33 ) % ( ( com.coollooks.Util.tShirtPathList.size () ) - 1 ) ) ) ; if ( ( com.coollooks.Util.tShirtPathList.size () ) > 0 ) return com.coollooks.Util.tShirtPathList.get ( i ) ; else return null; } 
private void populateGrid () { java.lang.System.out.println ( "populateGrid () " ) ; for ( int h = 0; ( grid.size () ) > h; h++ ) { for ( int w = 0; w < ( fieldWidth ) ; w++ ) { grid.get ( h ) .add ( w, new Cell () ) ; } } } 
@ java.lang.Override public void onEntityAdded ( net.minecraft.entity.Entity entity ) { if ( ( this.dimension.hasSetting ( SettingType.ENTITYSPAWN ) ) && ( ! ( entity instanceof net.minecraft.entity.player.EntityPlayer ) ) ) { de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting setting = ( ( de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting ) ( this.dimension.get ( SettingType.ENTITYSPAWN ) ) ) ; setting.increase ( entity ) ; if ( setting.isLimitReached ( entity ) ) { this.removeEntity ( entity ) ; } } super.onEntityAdded ( entity ) ; } 
public void addBatch ( java.lang.String batchId ) { net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity[] batchObjects = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity[1]; batchObjects[0].objectUrn = batchId + ( net.smartcosmos.android.ProfilesTransactionRequest.PREFIX_BATCH ) ; batchObjects[0].type = net.smartcosmos.android.ProfilesTransactionRequest.TYPE_BATCH; batchObjects[0].name = batchId; addObjects ( batchObjects ) ; } 
private void cleanup () { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Cursor.disposeSystemCursors () ; if ( ( audio ) instanceof com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) { ( ( com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) ( audio ) ) .dispose () ; } com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.errorCallback.free () ; if ( null != ( com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback ) ) { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback.free () ; } org.lwjgl.glfw.GLFW.glfwTerminate () ; } 
public void stopped () { if ( '1' == ( option ) ) { java.lang.System.out.println ( "Moving" ) ; distance += 0.2F * ( ( acc ) / 100 ) ; acc -= 0.1F; if ( ( acc ) < 0 ) { option = '3'; Gdis = distance; distance = 0.0F; acc = Cacc; } } } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { if ( ( addPoints ) && ( ( enhancedStr ) < 2 ) ) { ( availablePoints ) --; ( enhancedStr ) ++; } else if ( ( ( enhancedStr ) > 0 ) && ( ! ( addPoints ) ) ) { ( availablePoints ) ++; ( enhancedStr ) --; } java.lang.System.out.println ( ( ( ( "Available Points: " + ( availablePoints ) ) + "\nEnhanced Strength Points: " ) + ( enhancedStr ) ) ) ; } 
@ java.lang.Override public void onHeaderClick ( final com.nervousfish.nervousfish.activities.Header header, final int position ) { super.onHeaderClick ( header, position ) ; if ( ( R.id.key_management_header ) == ( header.id ) ) { final android.content.Intent intent = new android.content.Intent ( this, com.nervousfish.nervousfish.activities.KeyManagementActivity.class ) ; intent.putExtra ( ConstantKeywords.SERVICE_LOCATOR, com.nervousfish.nervousfish.activities.SettingsActivity.serviceLocator ) ; this.startActivity ( intent ) ; } } 
public java.util.PriorityQueue<java.lang.Integer> getStartingNodes () { sorted = poag.getNodeIDs () ; java.util.PriorityQueue<java.lang.Integer> startingNodeIds = new java.util.PriorityQueue<> () ; for ( int i = 0; ( size ) > i; i++ ) { java.lang.Integer[] prevs = poag.getPreviousNodeIDs ( sorted[i] ) ; if ( ( prevs[0] ) == null ) { startingNodeIds.add ( sorted[i] ) ; } } return startingNodeIds; } 
private <T> T getValue ( java.lang.String model, java.lang.String propertyName, java.lang.String subPropertyName, T defaultValue ) { com.dd.plist.NSDictionary dictionary = getValue ( model, propertyName, null ) ; if ( ( dictionary.containsKey ( subPropertyName ) ) && ( dictionary != null ) ) { return ( ( T ) ( dictionary.get ( subPropertyName ) ) ) ; } return defaultValue; } 
private void info () { try { java.lang.StringBuilder info = util.FileHandler.readStringBuilder ( "information" ) ; notifier.send ( ( ( info.toString () ) + ( answerCommand ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading info file."; logging.Logger.logMessage ( 'E', this, error ) ; notifier.send ( ( ( answerCommand ) + error ) ) ; } } 
java.util.ArrayList<personal.vinay.bigdata.PrepData.Record> setMinSpread ( java.util.ArrayList<personal.vinay.bigdata.PrepData.Record> records ) { float minSpread = 9999; for ( personal.vinay.bigdata.PrepData.Record record : records ) { if ( minSpread > ( ( record.getBidPrice () ) - ( record.getAskPrice () ) ) ) { minSpread = ( record.getBidPrice () ) - ( record.getAskPrice () ) ; } } for ( personal.vinay.bigdata.PrepData.Record record : records ) { record.setMinSpread ( minSpread ) ; } return records; } 
@ java.lang.Override public <T> T query ( java.lang.Class<T> clazz ) { java.lang.Object inst = org.wikiup.core.util.Interfaces.unwrap ( clazz, wrapped ) ; if ( null == inst ) { if ( byClasses.containsKey ( clazz ) ) return org.wikiup.core.util.Interfaces.cast ( clazz, byClasses.get ( clazz ) ) ; inst = translator.translate ( wrapped ) ; byClasses.put ( clazz, inst ) ; } return org.wikiup.core.util.Interfaces.cast ( clazz, inst ) ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super.onActivityCreated ( savedInstanceState ) ; createHandler () ; android.support.v4.app.FragmentManager fm = getFragmentManager () ; mWorkFragment = ( ( com.betterchat.www.utility.RetainedFragment ) ( fm.findFragmentByTag ( "work" ) ) ) ; if ( null == ( mWorkFragment ) ) { mWorkFragment = new com.betterchat.www.utility.RetainedFragment () ; mWorkFragment.setTargetFragment ( this, 0 ) ; fm.beginTransaction () .add ( mWorkFragment, "work" ) .commit () ; } client = mWorkFragment.getClient () ; } 
@ java.lang.Override public net.minecraftforge.fml.common.network.simpleimpl.IMessage onMessage ( com.lothrazar.cyclicmagic.net.PacketSyncPlayerData message, net.minecraftforge.fml.common.network.simpleimpl.MessageContext ctx ) { if ( ( net.minecraftforge.fml.relauncher.Side.CLIENT ) == ( ctx.side ) ) { com.lothrazar.cyclicmagic.ModMain.IPlayerExtendedProperties props = com.lothrazar.cyclicmagic.ModMain.getPlayerProperties ( net.minecraft.client.Minecraft.getMinecraft () .thePlayer ) ; if ( props == null ) { ModMain.logger.error ( "IPlayerExtendedProperties NULL PROBLEM" ) ; } else { props.setDataFromNBT ( message.tags ) ; } } return null; } 
public static Bag getTestBag ( int i ) { Bag bag = new Bag ( i ) ; for ( int j = 0; 10 > j; j++ ) { Token t = CloneTestHelper.getTestToken () ; TokenFrequency tFrequency = new TokenFrequency () ; tFrequency.setToken ( t ) ; tFrequency.setFrequency ( utility.Util.getRandomNumber ( 3, 1 ) ) ; bag.add ( tFrequency ) ; } return bag; } 
public static void startGame ( int playercount, int boardsize ) { game.GameMaster.reset () ; for ( int i = 1; playercount >= i; i++ ) { game.GameMaster.playerAL.add ( new game.Player ( 0.0, i, 0.0, 0, game.GameMaster.names.get ( ( i - 1 ) ) , 0 ) ) ; } game.GameMaster.EndCheck = boardsize; game.GameMaster.PlayerInTurn = game.GameMaster.playerAL.get ( 0 ) ; } 
public java.lang.String convertFromArabicToRomanNumeral ( java.lang.Integer inputNumber ) { java.lang.StringBuilder romanNumeral = new java.lang.StringBuilder () ; while ( 0 != inputNumber ) { for ( java.util.Map.Entry<java.lang.Integer, java.lang.String> numeralMapEntry : RomanNumeralConverter.numeralMap.entrySet () ) { java.lang.Integer numeralSegmentArabicValue = numeralMapEntry.getKey () ; java.lang.String numeralSegment = numeralMapEntry.getValue () ; if ( inputNumber >= numeralSegmentArabicValue ) { inputNumber -= numeralSegmentArabicValue; romanNumeral.append ( numeralSegment ) ; } } } return romanNumeral.toString () ; } 
private void loadTile ( com.badlogic.gdx.utils.XmlReader.Element tile, int firstGid ) { int id = tile.getIntAttribute ( "id" ) ; com.mygdx.game.shared.model.CollideablePolygon tilePolygon = com.mygdx.game.shared.model.TilePolygonLoader.loadTilePolygon ( tile, tileHeight ) ; int tileGid = id + firstGid; tiles.put ( tileGid, new com.mygdx.game.server.model.MapLoader.Tile ( tilePolygon ) ) ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.String msg = ( ipTable ) + ( ( ( ( ( ( "IPTABLE " + ( this.messageID ) ) + " " ) + ( ipAddress ) ) + " " ) + ( port ) ) + " " ) ; java.lang.String length = java.lang.String.format ( "%04d", ( ( msg.length () ) + 5 ) ) ; return ( length + " " ) + msg; } 
public static int count ( java.lang.String content, char charForSearch ) { int count = 0; int contentLength = content.length () ; for ( int i = 0; contentLength > i; i++ ) { if ( charForSearch == ( content.charAt ( i ) ) ) { count++; } } return count; } 
@ java.lang.Override public org.openqa.selenium.WebDriver getWebDriverInstance () { org.openqa.selenium.WebDriver retVal = getWebDriver () ; if ( retVal == null ) { org.bigtester.ate.model.page.atewebdriver.MyChromeDriver.setChromeDriverSystemEnv () ; if ( getBrowserProfile () .isPreserveCookiesOnExecutions () ) { org.openqa.selenium.chrome.ChromeOptions ops = new org.openqa.selenium.chrome.ChromeOptions () ; ops.addArguments ( ( "--user-data-dir=" + ( getBrowserProfile () .getTestCaseChromeUserDataDir () ) ) ) ; retVal = new org.openqa.selenium.chrome.ChromeDriver ( ops ) ; } else { retVal = new org.openqa.selenium.chrome.ChromeDriver () ; } } setWebDriver ( retVal ) ; return retVal; } 
public boolean isMatched () { switch ( matchingType ) { case OR: return matches.values () .contains ( false ) ; case AND: default: return ( ! ( matches.values () .contains ( false ) ) ) && ( ( matches.size () ) > 0 ) ; } } 
private double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this.location.getX () ) - ( n.location.getX () ) ; double yDelta = ( this.location.getY () ) - ( n.location.getY () ) ; return java.lang.Math.sqrt ( ( ( java.lang.Math.pow ( yDelta, 2 ) ) + ( java.lang.Math.pow ( xDelta, 2 ) ) ) ) ; } 
@ java.lang.Override public void opened () { try { while ( ( ch.admin.vbs.cube.core.vm.IVmProduct.VmProductState.STARTING ) == ( product.getProductState ( vm ) ) ) { java.lang.Thread.sleep ( 500 ) ; } product.connectNic ( vm, true ) ; } catch ( java.lang.Exception e ) { ch.admin.vbs.cube.core.vm.ctrtasks.Start.LOG.error ( "VM's VPN was opened but we failed to connect VM's NIC", e ) ; vm.setVpnState ( VmVpnState.NOT_CONNECTED ) ; vmModel.fireVmStateUpdatedEvent ( vm ) ; } vm.setVpnState ( VmVpnState.CONNECTED ) ; vmModel.fireVmStateUpdatedEvent ( vm ) ; } 
public void enterBuilding ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg.getBuilding ( bldName ) ; if ( null != bldg ) { java.lang.String description = bldg.getInteriorDescription () ; java.lang.String imagePath = bldg.getIntImagePath () ; displayBuilding ( description, imagePath ) ; _currentBldg = bldg; _frame.setOnTown ( false ) ; } else { _frame.displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } 
public boolean makeTurn ( int posOnBoard, int turn ) throws something.Reversi.IllegalMoveException { if ( ( Tile.EMPTY ) == ( this.board[posOnBoard] ) ) { something.Reversi.Tile tile; if ( ( turn % 2 ) == 0 ) { tile = Tile.BLACK; } else { tile = Tile.WHITE; } if ( checkValidityMove ( posOnBoard, tile ) ) { java.lang.System.out.println ( "valid move" ) ; board[posOnBoard] = tile; turnTiles ( posOnBoard, tile ) ; return true; } } return false; } 
public double phase_Time () { double k = ( getPhase () ) * ( java.lang.Math.signum ( stellarium.util.math.Spmath.getD ( sciapi.api.value.util.VOp.dot ( sciapi.api.value.euclidian.CrossUtil.cross ( ( ( sciapi.api.value.IValRef ) ( EcRPosG ) ) , ( ( sciapi.api.value.IValRef ) ( stellarium.stellars.EcRPos ) ) ) , ( ( sciapi.api.value.IValRef ) ( Pole ) ) ) ) ) ) ; if ( k < 0 ) k = k + 2; return k / 2; } 
@ java.lang.Override protected void update ( float elapsedTimeMS ) { graphicslib3D.Point3D cameraLocation = camera1.getLocation () ; graphicslib3D.Matrix3D cameraTranslation = new graphicslib3D.Matrix3D () ; cameraTranslation.translate ( cameraLocation.getX () , cameraLocation.getY () , cameraLocation.getZ () ) ; skyBox.setLocalTranslation ( cameraTranslation ) ; if ( null != ( thisClient ) ) { thisClient.processPackets () ; } camera1Controller.update ( elapsedTimeMS ) ; super.update ( elapsedTimeMS ) ; } 
private java.util.ArrayList<java.awt.geom.Point2D.Double> generateTestPath () { java.util.ArrayList<java.awt.geom.Point2D.Double> testPath = new java.util.ArrayList<java.awt.geom.Point2D.Double> () ; for ( int i = 0; 1000 > i; i++ ) { testPath.add ( new java.awt.geom.Point2D.Double ( ( i / 500.0 ) , 0.0 ) ) ; } } 
public static void main ( java.lang.String[] args ) { long time_start = java.lang.System.currentTimeMillis () ; greedy.Greedy10.cargarDatos () ; greedy.Greedy10.resolverProblema () ; greedy.Greedy10.mostrarMochila () ; long time_end = java.lang.System.currentTimeMillis () ; java.lang.System.out.println ( "-------------------------------------------------------" ) ; java.lang.System.out.println () ; java.lang.System.out.println () ; java.lang.System.out.println ( ( " milisegundos." + ( ">> Tiempo de duracion del proceso: " + ( time_end - time_start ) ) ) ) ; } 
protected void applyCenterInside ( @android.support.annotation.NonNull android.view.TextureView view, @android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { if ( ( ( intrinsicVideoSize.x ) <= ( view.getHeight () ) ) && ( ( intrinsicVideoSize.y ) <= ( view.getWidth () ) ) ) { applyCenter ( view, transformMatrix ) ; } else { applyFitCenter ( view, transformMatrix ) ; } } 
private static void loadFile ( java.lang.String packageName, sbahjsic.runtime.ExecutionEnvironment env ) throws java.lang.Exception { try ( sbahjsic.io.FileSource fs = new sbahjsic.io.FileSource ( new java.io.File ( ( ".sb" + ( ( ( sbahjsic.io.StandardLibrary.STD ) + "/" ) + packageName ) ) ) ) ) { env.execute ( fs ) ; } sbahjsic.io.StandardLibrary.LOADED.add ( packageName ) ; } 
@ java.lang.Override public void onTurnSuccess ( int computerMove ) { if ( isGameOver ) { return; } if ( ( -1 ) == computerMove ) { return; } setXBackground ( levelPlayer1, computerMove ) ; fillGameGrid ( computerMove, Constants.PLAYER2 ) ; areButtonsClicked[computerMove] = true; asyncService.checkForWinner ( gameGrid, Constants.PLAYER2, this ) ; setButtonsClickable () ; } 
protected void installPropertyChangeListener ( java.lang.Object element ) { org.eclipse.tcf.te.ui.interfaces.IViewerInput viewerInput = org.eclipse.tcf.te.ui.trees.ViewerStateManager.getViewerInput ( element ) ; if ( ( ! ( viewerInputs.contains ( viewerInput ) ) ) && ( viewerInput != null ) ) { if ( ( commonViewerListener ) != null ) { viewerInput.addPropertyChangeListener ( commonViewerListener ) ; } viewerInputs.add ( viewerInput ) ; } } 
@ java.lang.Override public void onLoadFinished ( android.content.Loader<android.database.Cursor> loader, android.database.Cursor data ) { switch ( loader.getId () ) { case com.android.contacts.list.JoinContactListFragment.DISPLAY_NAME_LOADER: { if ( ( data.moveToFirst () ) && ( data != null ) ) { showTargetContactName ( data.getString ( 0 ) ) ; } break; } case JoinContactListAdapter.PARTITION_ALL_CONTACTS: { android.database.Cursor suggestionsCursor = ( ( com.android.contacts.list.JoinContactLoader.JoinContactLoaderResult ) ( data ) ) .suggestionCursor; onContactListLoaded ( suggestionsCursor, data ) ; break; } } } 
@ java.lang.Override public synchronized void stop () { if ( null == ( serverSocket ) ) { java.lang.System.err.println ( "Server already stopped" ) ; return; } try { serverSocket.close () ; executorService.shutdown () ; } catch ( java.io.IOException e ) { java.lang.System.err.println ( ( "Exception during closing ServerSocket: " + ( e.getMessage () ) ) ) ; } serverSocket = null; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( null == obj ) { return false; } if ( ( getClass () ) != ( obj.getClass () ) ) { return false; } final poker.Card other = ( ( poker.Card ) ( obj ) ) ; if ( ( this.rank ) != ( other.rank ) ) { return false; } if ( ! ( java.util.Objects.equals ( this.suit, other.suit ) ) ) { return false; } return true; } 
private void checkInspectionTime () { nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper dbHelper = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper.getInstance ( getApplicationContext () ) ; db = dbHelper.getWritableDatabase () ; java.util.List<nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact> contacts = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.SqlHelper.selectAllContacts ( db ) ; for ( int i = 0; 1 > i; i++ ) { nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact contact = contacts.get ( i ) ; startNotification ( contact ) ; } } 
private boolean validateQuantity () { int quantity = java.lang.Integer.valueOf ( subgroupsQuantity.getText () .toString () ) ; if ( ( getMaximumQuantity () ) >= quantity ) { subgroupsQuantityLayout.setError ( getString ( R.string.nwinners_msg_validate_quantity, group.getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false; } return true; } 
public controllers.Result postCadastro () { com.fasterxml.jackson.databind.JsonNode json = request () .body () .asJson () ; controllers.Usuario usuario = play.libs.Json.fromJson ( json, controllers.Usuario.class ) ; try { controllers.AutenticacaoController.sistemaUsuarios.adicionarUsuario ( usuario ) ; } catch ( controllers.DadosInvalidosException exception ) { return badRequest ( exception.getMessage () ) ; } sistemasInfo.SistemaLog.novaMensagemLog ( ( " acabou de se cadastrar no sistema" + ( usuario.getEmail () ) ) ) ; return ok ( play.libs.Json.toJson ( usuario ) ) ; } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { mCurrentLocation = new com.google.android.gms.maps.model.LatLng ( location.getLatitude () , location.getLongitude () ) ; mLastUpdateTime = java.text.DateFormat.getTimeInstance () .format ( new java.util.Date () ) ; com.frodo.travigator.utils.CommonUtils.logStatus ( TAG, ( ( location.getLongitude () ) + ( ( "Location updated ->" + ( location.getLatitude () ) ) + ":" ) ) ) ; org.greenrobot.eventbus.EventBus.getDefault () .post ( new com.frodo.travigator.events.LocationChangedEvent ( mCurrentLocation ) ) ; stopLocationUpdates () ; } 
private static boolean differByOne ( java.lang.String word, java.lang.String ladderLast ) { if ( ( ladderLast.length () ) != ( word.length () ) ) { return false; } int count = 0; for ( int i = 0; i < ( word.length () ) ; i++ ) { if ( ( word.charAt ( i ) ) != ( ladderLast.charAt ( i ) ) ) { count++; } } return count == 1; } 
@ java.lang.Override public model.project.Project calculateProject ( model.project.Project project ) { this.project = project; if ( 0 != ( project.getPhases () .size () ) ) { calculateLenght ( project ) ; calculateResultSkill ( project ) ; calculateProjectDays ( project ) ; calculateQuarterResults ( project ) ; } else { } return project; } 
@ java.lang.Override public boolean equals ( java.lang.Object object ) { if ( object instanceof qora.assets.Trade ) { qora.assets.Trade trade = ( ( qora.assets.Trade ) ( object ) ) ; return ( ( trade.getTarget () .compareTo ( this.getTarget () ) ) == 0 ) && ( ( trade.getInitiator () .compareTo ( this.getInitiator () ) ) == 0 ) ; } return false; } 
@ java.lang.Override public org.apache.tajo.datum.Datum terminate ( org.apache.tajo.plan.function.FunctionContext ctx ) { org.apache.tajo.engine.function.builtin.StdDevContext StdDevCtx = ( ( org.apache.tajo.engine.function.builtin.StdDevContext ) ( ctx ) ) ; if ( 0 == ( StdDevCtx.count ) ) { return org.apache.tajo.datum.NullDatum.get () ; } else if ( ( StdDevCtx.count ) == 1 ) { return org.apache.tajo.datum.DatumFactory.createFloat8 ( 0 ) ; } return org.apache.tajo.datum.DatumFactory.createFloat8 ( java.lang.Math.sqrt ( ( ( StdDevCtx.squareSumOfDiff ) / ( ( StdDevCtx.count ) - 1 ) ) ) ) ; } 
public java.io.BufferedWriter getWriter () throws java.io.IOException { if ( ( org.crossref.eventdata.twitter.RotatingFileWriter.MAX_LINES ) <= ( this.lines ) ) { this.rotateCallback.invoke ( this.file ) ; this.writer.close () ; this.lines = 0; this.file = this.newFile () ; this.writer = new java.io.BufferedWriter ( new java.io.FileWriter ( this.file ) ) ; } ( this.lines ) ++; return this.writer; } 
public void writePlans ( final java.lang.String outputDir ) { new org.matsim.core.population.PopulationWriter ( scenario.getPopulation () ) .write ( ( "pct.xml.gz" + ( ( outputDir + "/initial_urban_plans_" ) + ( 2 * ( cloningFactor ) ) ) ) ) ; new org.matsim.utils.objectattributes.ObjectAttributesXmlWriter ( scenario.getPopulation () .getPersonAttributes () ) .writeFile ( ( ( ( outputDir + "/initial_urban_persionAttributes_" ) + ( 2 * ( cloningFactor ) ) ) + "pct.xml.gz" ) ) ; playground.agarwalamit.mixedTraffic.patnaIndia.input.urban.PatnaUrbanDemandGenerator.LOG.info ( "Writing Plan and person attributes files are finished." ) ; } 
@ java.lang.Override public void onError ( com.iflytek.cloud.SpeechError error ) { if ( null != error ) { showTip ( ( ( ( "error:" + ( error.getErrorCode () ) ) + "," ) + ( error.getErrorDescription () ) ) ) ; } else { android.util.Log.d ( com.lixl.waveform.WaveformViewModule.TAG, "evaluator over" ) ; showTip ( "evaluator over" ) ; } } 
public java.util.List<org.smartdata.model.SystemInfo> getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate.query ( ( " where property = ?" + ( "select * from " + ( TABLE_NAME ) ) ) , new java.lang.Object[] { property }, new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) ; } 
@ java.lang.Override public void onFinishedWithResult ( java.lang.String monthName, int day, int year, long time ) { if ( setDateFromTime ) { if ( ( dateToTime ) > time ) dateFromTime = time; } else { if ( time > ( dateFromTime ) ) dateToTime = time; } updateDateRangeLabels () ; } 
@ java.lang.Override public void onRegisterStatus ( final android.content.Context context, final com.meizu.cloud.pushsdk.platform.message.RegisterStatus registerStatus ) { if ( null != ( com.jiang.android.push.flyme.FlymeReceiver.mPushInterface ) ) { com.jiang.android.push.utils.JHandler.handler () .post ( new java.lang.Runnable () { @java.lang.Override public void run () { com.jiang.android.push.flyme.FlymeReceiver.mPushInterface.onRegister ( context, registerStatus.getPushId () ) ; } } ) ; } else { com.jiang.android.push.utils.L.i ( "callback is null" ) ; } } 
@ java.lang.Override protected void onResume () { super.onResume () ; if ( ( ! ( wallsPicker ) ) && ( ! ( iconsPicker ) ) ) { setupToolbarHeader () ; } jahirfiquitiva.iconshowcase.utilities.color.ToolbarColorizer.setupToolbarIconsAndTextsColors ( this, cAppBarLayout, cToolbar ) ; jahirfiquitiva.iconshowcase.utilities.utils.Utils.runLicenseChecker ( this, jahirfiquitiva.iconshowcase.activities.WITH_LICENSE_CHECKER, jahirfiquitiva.iconshowcase.activities.GOOGLE_PUBKEY, jahirfiquitiva.iconshowcase.activities.WITH_INSTALLED_FROM_AMAZON, jahirfiquitiva.iconshowcase.activities.ALLOW_APT_USE ) ; } 
public double distance ( geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY; for ( int i = 0; ( geoList.size () ) > i; i++ ) { geogebra.common.kernel.geos.GeoElement geo = ( ( geogebra.common.kernel.geos.GeoElement ) ( geoList.get ( i ) ) ) ; double d = geo.distance ( p ) ; if ( d < distance ) { distance = d; } } return distance; } 
public void add ( int index, long element ) { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System.arraycopy ( array, index, array, ( 1 + index ) , ( ( end ) - index ) ) ; array[index] = element; } 
private java.lang.String readStream ( java.io.InputStream in ) throws java.io.IOException { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( in, "utf-8" ) ) ) { java.lang.String line = reader.readLine () ; while ( null != line ) { sb.append ( line ) ; line = reader.readLine () ; } } return sb.toString () ; } 
@ java.lang.Override public java.lang.String getNString ( int ref ) { android.util.Log.v ( tk.thebrightstuff.blindtale.view.SceneActivity.TAG, ( " ) " + ( ( ( "Removing accents from " + ( getIString ( ref ) ) ) + " ( " ) + ref ) ) ) ; return tk.thebrightstuff.blindtale.utils.StringUtils.removeAccents ( getIString ( ref ) ) ; } 
public java.lang.String parseTicketID ( java.lang.String subject ) { java.lang.String[] full_subject = subject.split ( "#" ) ; java.lang.String second_part_subject = full_subject[1]; if ( "" != ( full_subject[1] ) ) { java.lang.String trimmed_subject = second_part_subject.trim () ; java.lang.String[] id = trimmed_subject.split ( " " ) ; return id[0]; } else { return subject.trim () ; } } 
@ java.lang.Override protected void updateItem ( program.Employee t, boolean bln ) { super.updateItem ( t, bln ) ; if ( null != t ) { setText ( ( ( ( ( ( t.getId () ) + " " ) + ( t.getName () ) ) + " " ) + ( t.getPayRate () ) ) ) ; } else { listviewEmployees.setPlaceholder ( new javafx.scene.control.Label ( "No Employees" ) ) ; } } 
@ butterknife.OnClick ( value = R.id.music_search_btn ) public void onSearch () { xyf.com.appframe.recycleviewtools.SoftInputUtils.hideSoftInput ( this ) ; adapter.clear () ; xyf.com.appframe.recycleviewtools.ProgressDialogUtils.showProgress ( this ) ; xyf.com.appframe.MusicSearchActivity.searchkey = input.getText () .toString () .trim () ; setTitle ( xyf.com.appframe.MusicSearchActivity.searchkey ) ; load ( xyf.com.appframe.MusicSearchActivity.searchkey, ( ( xyf.com.appframe.MusicSearchActivity.pageno ) + "" ) ) ; } 
public java.lang.String getUnlocalizedName ( net.minecraft.item.ItemStack stack ) { net.minecraft.nbt.NBTTagCompound tag = stack.getTagCompound () ; if ( null != tag ) { return ( ( super.getUnlocalizedName ( stack ) ) + "." ) + ( tag.getString ( "name" ) ) ; } else { k4unl.minecraft.Hydraulicraft.lib.Log.error ( "Tag of a trolley itemstack was null??" ) ; return super.getUnlocalizedName ( stack ) ; } } 
@ java.lang.Override public java.lang.CharSequence getPageTitle ( int position ) { if ( ( data.getCount () ) > position ) { java.lang.Object item = data.getItem ( position ) ; if ( item instanceof itkach.aard2.BlobDescriptor ) { return ( ( itkach.aard2.BlobDescriptor ) ( item ) ) .key; } if ( item instanceof itkach.slob.Slob.Blob ) { return ( ( itkach.slob.Slob.Blob ) ( item ) ) .key; } return "???"; } } 
@ java.lang.Override public void setStyleType ( final org.openflexo.fge.shapes.ShapeSpecification.ShapeType shapeType ) { final org.openflexo.fge.shapes.ShapeSpecification.ShapeType oldShapeType = this.getStyleType () ; if ( shapeType == oldShapeType ) { return; } final org.openflexo.fge.shapes.ShapeSpecification oldSS = this.getShapeSpecification () ; this.shapeType = shapeType; this.pcSupport.firePropertyChange ( org.openflexo.fge.control.tools.STYLE_CLASS_CHANGED, oldShapeType, this.getStyleType () ) ; this.pcSupport.firePropertyChange ( "shapeSpecification", oldSS, this.getShapeSpecification () ) ; this.pcSupport.firePropertyChange ( "styleType", oldShapeType, this.getStyleType () ) ; } 
public java.util.List<bb.tokenizer.Token> tokenize ( java.lang.String str ) { java.util.ArrayList<bb.tokenizer.Token> tokens = new java.util.ArrayList<bb.tokenizer.Token> () ; while ( 0 < ( str.length () ) ) { str = addNextToken ( str, tokens ) ; } line = 0; column = 0; return tokens; } 
@ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest arg0, javax.servlet.http.HttpServletResponse arg1, java.lang.Object arg2, org.springframework.web.servlet.ModelAndView arg3 ) throws java.lang.Exception { arg3.addObject ( "baseurl", com.cportal.config.ConfigDB.retrnConf () .getBASEURL () ) ; java.lang.System.out.println ( ( ( com.cportal.config.ConfigDB.getBASEURL () ) + "---Request Completed---" ) ) ; } 
public void run () { while ( true ) { try { java.lang.String message; int length = input.readInt () ; if ( 0 < length ) { byte[] b = new byte[length]; input.readFully ( b ) ; message = new java.lang.String ( b, "UTF-8" ) ; java.lang.System.out.println ( message ) ; this.sendMessage ( network.AppWorker.handleMessage ( message ) ) ; } } catch ( java.io.IOException e ) { e.printStackTrace () ; break; } } } 
public void GameOver ( MyPanel myPanelB, int ClickedInX, int ClickedInY ) { if ( HasBomb ( myPanelB, ClickedInX, ClickedInY ) ) { for ( int posArray = 0; ( posXBomb.length ) > posArray; posArray++ ) { myPanelB.colorArray[posXBomb[posArray]][posYBomb[posArray]] = bombs; myPanelB.repaint () ; } } } 
public final void cvttpd2dq ( jdk.vm.ci.code.Register dst, jdk.vm.ci.code.Register src ) { assert ( src.getRegisterCategory () .equals ( AMD64.XMM ) ) && ( dst.getRegisterCategory () .equals ( AMD64.XMM ) ) ; com.oracle.graal.asm.amd64.AMD64InstructionAttr attributes = new com.oracle.graal.asm.amd64.AMD64InstructionAttr ( com.oracle.graal.asm.amd64.AMD64Assembler.AvxVectorLen.AVX_128bit, true, false, false, false, target ) ; int encode = simdPrefixAndEncode ( dst, Register.None, src, com.oracle.graal.asm.amd64.AMD64Assembler.VexSimdPrefix.VEX_SIMD_66, com.oracle.graal.asm.amd64.AMD64Assembler.VexOpcode.VEX_OPCODE_0F, attributes ) ; emitByte ( 230 ) ; emitByte ( ( 192 | encode ) ) ; } 
@ java.lang.Override public boolean onFetchFirstPage ( org.wordpress.android.models.PeopleListFilter filter ) { org.wordpress.android.models.Blog blog = org.wordpress.android.WordPress.getCurrentBlog () ; if ( ( mCanRefreshUsers ) && ( filter == ( org.wordpress.android.models.PeopleListFilter.TEAM ) ) ) { fetchUsersList ( blog.getDotComBlogId () , blog.getLocalTableBlogId () , 0 ) ; return true; } else if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.FOLLOWERS ) ) && ( mCanRefreshFollowers ) ) { fetchFollowersList ( blog.getDotComBlogId () , blog.getLocalTableBlogId () , 1 ) ; return true; } return false; } 
private void createHandleForActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; if ( null != activeNode ) { nodebox.client.HandleRepository repository = nodebox.client.HandleRepository.of () ; if ( repository.hasHandleClass ( activeNode.getHandle () ) ) { nodebox.client.Handle handle = repository.constructHandle ( activeNode.getHandle () ) ; if ( handle != null ) { handle.setHandleDelegate ( this ) ; viewerPane.setHandle ( handle ) ; } else { viewerPane.setHandle ( null ) ; } } } } 
public java.lang.Integer getNextDate () { len = datesStream.readRecord ( buffer2, ( 4 + ( numDecrypted ) ) , 4 ) ; if ( ( len ) != 1 ) { throw new java.lang.IllegalArgumentException ( "Error: Could not read in another byte." ) ; } else { numDecrypted += 1; return ( firstDate ) + ( java.nio.ByteBuffer.wrap ( buffer2 ) .getInt () ) ; } } 
private void getFieldsInformation () { java.lang.Long tsLong = ( java.lang.System.currentTimeMillis () ) / 1000; timestamp = tsLong.toString () ; testingDate = ( java.lang.String.valueOf ( datepicker.getDayOfMonth () ) ) + ( ( ( ( java.lang.String.valueOf ( datepicker.getYear () ) ) + "," ) + ( java.lang.String.valueOf ( datepicker.getMonth () ) ) ) + "," ) ; } 
public static java.lang.String convertToGroupString ( java.lang.String[] group ) { java.lang.String str = ""; for ( int i = 0; ( ( group.length ) - 1 ) > i; i++ ) { str.concat ( group[i] ) ; str.concat ( ":" ) ; } str.concat ( group[ ( ( group.length ) - 1 ) ] ) ; return str; } 
private long checkQueryTimeout () { long timeLeft = timeoutAt - ( java.lang.System.currentTimeMillis () ) ; if ( 0 <= timeLeft ) { java.lang.String msg = io.druid.common.utils.StringUtils.safeFormat ( "Query[%s] url[%s] timed out.", query.getId () , url ) ; setupResponseReadFailure ( msg, null ) ; throw new io.druid.java.util.common.RE ( msg ) ; } else { return timeLeft; } } 
@ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try { java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( jarFile + ( ( warDirectory ) + ( java.io.File.separator ) ) ) ) ; java.util.Enumeration entries = jar.entries () ; while ( entries.hasMoreElements () ) { extractFile ( jar, entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils.deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG.warn ( "Cannot read/write/found file: ", e ) ; } } 
public static boolean isRosterPath ( java.lang.String path ) { path = path.trim () .toLowerCase () ; if ( ( path.endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION_OLD ) ) || ( ( path.endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) || ( path.endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION ) ) ) ) { return true; } return false; } 
public void putLongArray ( final long[] data, boolean length ) { int l = ( com.heerbann.unsafe.UnsafeBuffer.sizeOfLong ) * ( data.length ) ; if ( length ) putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe.copyMemory ( data, com.heerbann.unsafe.UnsafeBuffer.longArrayOffset, null, ( ( pointer ) + ( position ) ) , l ) ; position += l; end = ( ( position ) > ( end ) ) ? position : end; } 
static java.io.File constructFile ( java.lang.String basePath, java.lang.String fileName ) { java.io.File file; java.io.File absolute = null; if ( null != fileName ) { absolute = new java.io.File ( fileName ) ; } if ( ( org.apache.commons.lang3.StringUtils.isEmpty ( basePath ) ) || ( ( absolute != null ) && ( absolute.isAbsolute () ) ) ) { file = new java.io.File ( fileName ) ; } else { file = new java.io.File ( org.apache.commons.configuration2.io.FileLocatorUtils.appendPath ( basePath, fileName ) ) ; } return file; } 
public void doIt ( javax.servlet.http.HttpServletRequest request, javax.servlet.http.HttpServletResponse response ) throws java.io.IOException, javax.servlet.ServletException { java.lang.String name = request.getParameter ( "name" ) ; java.lang.String args = request.getParameter ( "args" ) ; java.lang.String error = null; if ( null != error ) { response.sendRedirect ( ( "home.do?error=" + error ) ) ; } else { response.sendRedirect ( "home.do" ) ; } } 
private java.lang.String getLine ( int number ) throws java.lang.Exception { java.lang.String value = null; java.lang.String pageContent = FitnesseFixtureContext.page.getHtml () ; java.lang.String lineizedContent = fitnesse.fixtures.ResponseExaminer.convertBreaksToLineSeparators ( pageContent ) ; java.util.StringTokenizer tokenizedLines = tokenizeLines ( lineizedContent ) ; for ( int i = number; 0 != i; i-- ) value = tokenizedLines.nextToken () ; return value.trim () ; } 
private java.lang.String getRiskBucket ( java.lang.String productName, com.github.vincent_fuchs.comprehensive_testing.model.CountryRating countryRating ) { java.lang.String productVolatilityIndex = volatilityIndexService.getProductVolatilityIndex ( productName ) ; com.github.vincent_fuchs.comprehensive_testing.model.Risk volatilityIndexRisk = computeVolatilityIndexRisk ( productVolatilityIndex ) ; com.github.vincent_fuchs.comprehensive_testing.model.Risk countryRisk = computeCountryRisk ( countryRating ) ; return ( ( HIGH ) == countryRisk ) || ( ( HIGH ) == volatilityIndexRisk ) ? com.github.vincent_fuchs.comprehensive_testing.service.HIGH.getRisk () : ( ( MEDIUM ) == volatilityIndexRisk ) || ( ( MEDIUM ) == countryRisk ) ? com.github.vincent_fuchs.comprehensive_testing.service.MEDIUM.getRisk () : com.github.vincent_fuchs.comprehensive_testing.service.LOW.getRisk () ; } 
public void assertEquals ( java.lang.Object actual, java.lang.Object expected ) { if ( ( actual == null ) && ( expected == null ) ) return; if ( ( expected != null ) && ( expected.equals ( actual ) ) ) return; fail ( format ( expected, actual ) ) ; } 
private void updateLine () { java.lang.String creditsEarned = client.getServer () .getCreditEarnedOnCurrentSession () ; int charToRemove = line.length () ; java.lang.System.out.print ( "\r" ) ; line = java.lang.String.format ( "Frames rendered: %d remaining: %d credits earned: %s | %s", rendered, remaining, ( null != creditsEarned ? creditsEarned : "unknown" ) , ( ( status ) + ( exiting ? " ( Exiting after this frame ) " : "" ) ) ) ; java.lang.System.out.print ( line ) ; for ( int i = line.length () ; i <= charToRemove; i++ ) { java.lang.System.out.print ( " " ) ; } } 
private void setPositionsOfPlayers ( java.util.List<game.db.GameResultEntity> gameResults, java.util.List<java.lang.Integer> points ) { java.util.Collections.sort ( points ) ; for ( int i = 0; ( points.size () ) > i; i++ ) { for ( game.db.GameResultEntity gameResult : gameResults ) { if ( ( gameResult.getPoints () ) == ( points.get ( i ) ) ) { gameResult.setPosition ( ( i + 1 ) ) ; } } } } 
long exceptsPerCycle ( int cycle ) { net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts.StoreTailer tailer = acquireTailer () ; try { long index = rollCycle.toIndex ( cycle, 0 ) ; if ( tailer.moveToIndex ( index ) ) { assert 1 < ( tailer.store.refCount () ) ; return ( tailer.store.lastSequenceNumber ( tailer ) ) + 1; } else { return -1; } } catch ( java.io.StreamCorruptedException e ) { throw new java.lang.IllegalStateException ( e ) ; } finally { tailer.release () ; } } 
public void onCreateOptionsMenu ( android.view.Menu menu, android.view.MenuInflater inflater ) { if ( null != ( movies ) ) { inflater.inflate ( R.menu.menu_detail, menu ) ; final android.view.MenuItem favorite = menu.findItem ( R.id.action_favorite ) ; new com.ashwinpilgaonkar.popularmovies.Backend.Favorite ( getContext () , movies, favorite, 0 ) ; } } 
public void remGroup ( java.lang.String uname, java.lang.String gID ) { for ( de.jattyv.jcapi.server.virtual.dataController.data.User user : users ) { if ( user.getUserName () .equals ( uname ) ) { for ( de.jattyv.jcapi.client.gui.cell.FG fg : user.getFgs () ) { if ( fg.getTitle () .equals ( uname ) ) { if ( ( de.jattyv.jcapi.client.gui.cell.FG.FG_TYPE_GROUP ) == ( fg.getType () ) ) { user.getFgs () .remove ( fg ) ; return; } } } } } } 
@ java.lang.Override public void updatePlayerMoveState () { net.minecraft.client.entity.EntityPlayerSP player = net.minecraft.client.Minecraft.getMinecraft () .thePlayer; if ( player.onGround ) { super.updatePlayerMoveState () ; } else if ( null == ( ClientHookHandler.hook ) ) { original.updatePlayerMoveState () ; player.movementInput = original; } else { this.jump = net.minecraft.client.Minecraft.getMinecraft () .gameSettings.keyBindJump.getIsKeyPressed () ; this.sneak = net.minecraft.client.Minecraft.getMinecraft () .gameSettings.keyBindSneak.getIsKeyPressed () ; } } 
@ java.lang.Override public interfaces.Problem hcSteepestAscent ( interfaces.Problem prob ) { puzzle.PuzzleProblem current = ( ( puzzle.PuzzleProblem ) ( prob ) ) ; puzzle.PuzzleState neighbor; while ( true ) { neighbor = ( ( puzzle.PuzzleState ) ( current.getBestNeighbor () ) ) ; if ( ( current.getState () .getValue () ) <= ( neighbor.getValue () ) ) return current; current.setState ( neighbor ) ; current.addAction ( neighbor.actstr ) ; } } 
public void ExpectedPresident ( courtree.Node focusNode ) { if ( null != focusNode ) { inOrderTraverseTree ( focusNode.leftChild ) ; if ( ( president.getbDate () ) <= ( focusNode.getbDate () ) ) { java.lang.System.out.println ( focusNode ) ; setPresident ( focusNode ) ; } inOrderTraverseTree ( focusNode.rightChild ) ; } } 
public int getScrollHeight () { return ( ( int ) ( ( ( height ) - ( viewportHeight ) ) * ( ( float ) ( ( dragged ) / ( ( float ) ( ( height ) - ( BAR_HEIGHT ) ) ) ) ) ) ) ; } 
private void shopDetection ( com.mygdx.runrunrun.sprites.MoveableObject firstObj ) { shop = ( ( com.mygdx.runrunrun.sprites.Shop ) ( firstObj ) ) ; if ( ( ( firstObj.getHide () ) == false ) && ( firstObj.contains ( hero.getPosition () ) ) ) { stopForShop = true; if ( ( flyCount ) <= 0 ) exitShopTimer = 100; } else { stopForShop = false; enteredShop = false; if ( hero.getStop () ) { hero.toggleStop ( false ) ; } } } 
@ org.junit.Test public void successfulGet () throws java.lang.Exception { com.springernature.watermark.api.WatermarkApiIntegrationTest.LOG.info ( "Testing successfulGet" ) ; com.springernature.watermark.model.Book book = com.springernature.watermark.model.ModelTestUtil.createDummyBook () ; java.lang.Long id = postRequest ( book ) ; java.lang.Thread.yield () ; com.springernature.watermark.api.RequestEntity entity = com.springernature.watermark.api.RequestEntity.get ( new java.net.URI ( ( id + ( ( baseUrl ) + "/" ) ) ) ) .build () ; com.springernature.watermark.api.ResponseEntity<java.util.Map> response = this.testRestTemplate.exchange ( entity, java.util.Map.class ) ; assertEquals ( HttpStatus.OK, response.getStatusCode () ) ; } 
private void addWorkers ( int count ) { workerCount = count; workers = new java.util.ArrayList<> () ; for ( int i = 0; count > i; i++ ) { com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker = new com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker ( i ) ; workers.add ( worker ) ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Object resultObject ) { if ( null == resultObject ) { } else if ( resultObject instanceof java.lang.Exception ) { mImageBytesConsumer.onAssetError ( mAsset, ( ( java.lang.Exception ) ( resultObject ) ) ) ; } else if ( resultObject instanceof byte[] ) { mImageBytesConsumer.onAssetBytes ( mAsset, ( ( byte[] ) ( resultObject ) ) ) ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @java.lang.Override public void onViewCreated ( android.view.View view, android.os.Bundle savedInstanceState ) { super.onViewCreated ( view, savedInstanceState ) ; final P presenter = getPresenter () ; if ( null != presenter ) { butterknife.ButterKnife.bind ( presenter, view ) ; } ready () ; if ( null != presenter ) { presenter.setView ( this ) ; } } 
@ java.lang.Override public void onEndpointPoolConfigurationSet ( org.openhab.io.transport.modbus.endpoint.ModbusSlaveEndpoint endpoint, org.openhab.io.transport.modbus.endpoint.EndpointPoolConfiguration otherConfig ) { synchronized ( this ) { if ( ( ! ( this.configuration.equals ( configuration ) ) ) && ( ( ( this.configuration ) != null ) && ( endpoint.equals ( this.endpoint ) ) ) ) { updateStatus ( ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, java.lang.String.format ( "Endpoint '%s' has conflicting parameters: parameters of this thing ( %s ) {} are different from {}", endpoint, this.thing, this.configuration, otherConfig ) ) ; } } } 
public java.lang.String[] getPacket () throws java.io.IOException { while ( input.ready () ) { char c = ( ( char ) ( input.read () ) ) ; if ( '\n' == c ) { java.lang.String output = buffer; buffer = ""; return output.split ( "\t" ) ; } else buffer += c; } return null; } 
@ java.lang.Override public void start () { android.util.Log.d ( org.example.xwalkembedded.XWalkExoMediaPlayer.TAG, "==== in start " ) ; if ( ( ( mMediaPlayer ) != null ) && ( mSystemMediaPlayer ) ) { mMediaPlayer.start () ; } else if ( ( player ) != null ) { player.setPlayWhenReady ( true ) ; } onShowCustomView ( ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE ) ; } 
public java.lang.String getFormattedDuration () { int seconds = ( ( int ) ( ( mDuration ) / 1000 ) ) ; int minutes = ( ( int ) ( ( ( mDuration ) / ( 60 * 1000 ) ) % 60 ) ) ; int hours = ( ( int ) ( ( ( mDuration ) / ( ( 60 * 1000 ) * 60 ) ) % 24 ) ) ; return java.lang.String.format ( "%02d:%02d:%02d", hours, minutes, seconds ) ; } 
@ java.lang.Override public void onBackPressed () { int currentPos = mViewPager.getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter.getFragmentTag ( currentPos ) ; if ( null != tag ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () .findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) .onBackPressed () ; } } } 
private boolean hasUnknownTokenAt ( org.languagetool.AnalyzedTokenReadings[] tokens, int startPos, int endPos ) { if ( startPos > endPos ) { throw new java.lang.RuntimeException ( ( ( ( "endPos < startPos: " + endPos ) + " < " ) + startPos ) ) ; } for ( int i = startPos; i < endPos; i++ ) { org.languagetool.AnalyzedTokenReadings token = tokens[i]; for ( org.languagetool.AnalyzedToken analyzedToken : token.getReadings () ) { if ( analyzedToken.hasNoTag () ) { return true; } } } return false; } 
public void fadeIn ( com.badlogic.gdx.math.Matrix4 cameraCombined, float delta ) { fadeOutLight.setActive ( false ) ; fadeInLight.setActive ( true ) ; if ( ( timeToFadeIn ) > ( timePassedDuringFadeIn ) ) { fadeInAlpha = 1 - ( ( timePassedDuringFadeIn ) / ( timeToFadeIn ) ) ; fadeInLight.setColor ( new com.badlogic.gdx.graphics.Color ( 0, 0, 0, ( 1 - ( fadeInAlpha ) ) ) ) ; rayHandler.setCombinedMatrix ( cameraCombined ) ; rayHandler.updateAndRender () ; timePassedDuringFadeIn += delta; } else { isNewLevel = false; } } 
public boolean intiateDBConnection () { try { java.lang.Class.forName ( "org.sqlite.JDBC" ) ; con = java.sql.DriverManager.getConnection ( ( "/ProjectTest.db" + ( "jdbc:sqlite:" + ( property ) ) ) , "", "" ) ; insertUser ( new chatboxserver.User ( "ehab", "jgfg", "23", "23232", "ehab", "jgfg", "23", "23232", "3434" ) ) ; chatboxserver.User user = getUser ( "ajkshkajshfjkah" ) ; return true; } catch ( java.lang.Exception ex ) { ex.printStackTrace () ; java.lang.System.out.println ( "exception caught" ) ; return false; } } 
@ java.lang.Override public void onAttach ( android.content.Context context ) { super.onAttach ( context ) ; try { mCallBack = ( ( com.example.user.onceuponatime.fragment.SignInFragment.SignInFragmentCallBack ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.ClassCastException ( ( " must implements SignInCallaback" + ( context.toString () ) ) ) ; } android.widget.Toast.makeText ( context, mCallBack.toString () , Toast.LENGTH_LONG ) .show () ; } 
private boolean isFloat ( java.lang.String str ) { if ( str.contains ( "$" ) ) { str = str.replaceAll ( "\\$", "" ) ; int registerNumber = java.lang.Integer.parseInt ( str ) ; return isRegisterFloat[registerNumber]; } else { return ( str.endsWith ( "_float" ) ) || ( ( str.contains ( "." ) ) || ( str.startsWith ( "_f" ) ) ) ; } } 
public boolean clustersMatch ( double[] cluster1, double[] cluster2, Emat emat ) { for ( int i = 0; ( cluster1.length ) > i; i++ ) { if ( ( java.lang.Math.abs ( ( ( cluster1[i] ) - ( cluster2[i] ) ) ) ) > 2 ) return false; } return true; } 
public void handlePremiumAPI ( final jd.plugins.DownloadLink downloadLink, final jd.plugins.Account account ) throws java.lang.Exception, jd.plugins.PluginException { loginAPI ( account ) ; if ( ( jd.plugins.Account.AccountType.FREE ) == ( account.getType () ) ) { handleDownloadAPI ( downloadLink, true, 0, false, "directlink_freeaccount" ) ; } else { handleDownloadAPI ( downloadLink, true, ( -4 ) , true, "directlink_premiumaccount" ) ; } } 
@ org.junit.Test public void fourOfAKindTest2 () { int[] cards = new int[] { 12, 25, 38, 51, 1, 7, 29 }; for ( int i = 0; ( cards.length ) > i; i++ ) deck.getCard ( cards[i] ) .displayCard () ; int ans = Table.handValue ( cards ) ; org.junit.Assert.assertEquals ( ans, 8 ) ; } 
public void clear () { de.baleipzig.iris.common.Dimension dim = this.dim () ; for ( int i = 0; ( dim.getY () ) > i; i++ ) { java.util.Vector<de.baleipzig.iris.model.neuralnet.node.INode> row = new java.util.Vector<> () ; for ( int j = 0; j < ( dim.getX () ) ; j++ ) row.add ( null ) ; layer.add ( row ) ; } } 
@ java.lang.Override public void getTooltip ( binnie.core.craftgui.Tooltip tooltip ) { if ( null == ( species ) ) { return; } switch ( discovered ) { case SHOW: tooltip.add ( species.getName () ) ; break; case DISCOVERED: tooltip.add ( binnie.core.util.I18N.localise ( "binniecore.gui.database.discovered.discovered" ) ) ; break; case UNDISCOVERED: tooltip.add ( binnie.core.util.I18N.localise ( "binniecore.gui.database.discovered.undiscovered" ) ) ; break; } } 
@ java.lang.Override public void onDestroyView () { super.onDestroyView () ; try { releasePlayer () ; cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.mMediaSession.setActive ( false ) ; } catch ( java.lang.NullPointerException exception ) { exception.printStackTrace () ; } catch ( java.lang.Exception ex ) { android.util.Log.e ( "BALog", ( ( ex.getMessage () ) + "exolayer unlnown bug --- " ) ) ; } } 
public it.musichub.server.library.model.Folder getFolder ( it.musichub.server.library.model.Folder folder ) { if ( null != ( folders ) ) { for ( it.musichub.server.library.model.Folder f : folders ) { try { if ( java.nio.file.Files.isSameFile ( f.getFile () .toPath () , folder.getFile () .toPath () ) ) return f; } catch ( java.io.IOException e ) { e.printStackTrace () ; } } } return null; } 
@ java.lang.Override public void done ( com.parse.ParseUser user, com.parse.ParseException e ) { if ( null != e ) { android.util.Log.e ( com.codepath.timeline.network.TimelineClient.TAG, ( ( ( "Exception from getUser ( " + userObjectId ) + " ) : " ) + ( e.getMessage () ) ) ) ; return; } if ( user != null ) { android.util.Log.d ( com.codepath.timeline.network.TimelineClient.TAG, "Success getUser" ) ; if ( timelineClientGetUserListener != null ) { timelineClientGetUserListener.onGetUser ( user ) ; } } } 
public boolean isStarBaseDeployed () { if ( 7 >= ( ships.size () ) ) { org.openRealmOfStars.player.ship.Ship ship = ships.get ( 0 ) ; if ( ( ship.isStarBase () ) && ( ship.getFlag ( Ship.FLAG_STARBASE_DEPLOYED ) ) ) { return true; } } return false; } 
private void determineUploadTime ( java.util.List<com.example.plpa.utils.ExpApplyJson.Policy> policies ) { android.content.IntentFilter filter = new android.content.IntentFilter () ; for ( com.example.plpa.utils.ExpApplyJson.Policy policy : policies ) { if ( ( com.example.plpa.utils.UploadPolicy.CONNECTPOWER ) == ( policy.Id ) ) filter.addAction ( Intent.ACTION_POWER_CONNECTED ) ; else if ( ( policy.Id ) == ( com.example.plpa.utils.UploadPolicy.CONNECTWIFI ) ) filter.addAction ( WifiManager.WIFI_STATE_CHANGED_ACTION ) ; } registerBroadcastReciever ( filter ) ; } 
@ java.lang.Override public int generatePageTotal ( int total, int pageSize ) { if ( 54 < pageSize ) { pageSize = 54; } if ( total <= pageSize ) return 1; return ( ( int ) ( java.lang.Math.ceil ( ( ( ( double ) ( total ) ) / ( pageSize - 9 ) ) ) ) ) ; } 
private java.util.Set<java.security.Principal> collectPrincipals ( final javax.jcr.Credentials credentials ) { final java.util.HashSet<java.security.Principal> principals = new java.util.HashSet<> () ; for ( final org.fcrepo.auth.common.PrincipalProvider p : this.getPrincipalProviders () ) { final java.util.Set<java.security.Principal> ps = p.getPrincipals ( credentials ) ; if ( null != ps ) { principals.addAll ( p.getPrincipals ( credentials ) ) ; } } return principals; } 
public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0; ( cardsJson.size () ) > i; i++ ) { cards.add ( new org.leanpoker.player.Card ( cardsJson.getAsJsonObject () .get ( "suit" ) .getAsString () , cardsJson.getAsJsonObject () .get ( "rank" ) .getAsString () ) ) ; } } 
public boolean removeDataSet ( T d ) { if ( null == d ) return false; boolean removed = mDataSets.remove ( d ) ; if ( removed ) { mYValCount -= d.getEntryCount () ; mYValueSum -= d.getYValueSum () ; calcMinMax ( mDataSets ) ; } return removed; } 
public void shuffle () { for ( int i = 51; 0 < i; i-- ) { int shuf = ( ( int ) ( ( java.lang.Math.random () ) * ( i + 1 ) ) ) ; Card temp = deck[i]; deck[i] = deck[rand]; deck[shuf] = temp; } cardsUsed = 0; } 
private static void startWorker ( ru.bigspawn.parser.bot.Bot bot, java.lang.String url ) throws java.io.UnsupportedEncodingException { ru.bigspawn.parser.parser.AlterPortalParser parser = new ru.bigspawn.parser.parser.AlterPortalParser ( new com.gargoylesoftware.htmlunit.WebClient () , url ) ; java.lang.String loggerName = ru.bigspawn.parser.Utils.getLoggerNameFromUrl ( url ) ; ru.bigspawn.parser.Worker worker = new ru.bigspawn.parser.Worker ( parser, bot, loggerName ) ; ru.bigspawn.parser.Main.logger.debug ( ( worker + "Create " ) ) ; java.lang.Thread thread = new java.lang.Thread ( worker, ( "Thread: " + loggerName ) ) ; thread.start () ; ru.bigspawn.parser.Main.logger.debug ( ( "Start " + thread ) ) ; } 
@ java.lang.Override public void lock () { if ( ( reentrant.isSame () ) && ( ( reentrant ) != null ) ) { reentrant.acquire () ; java.lang.System.out.println ( "Rentrant acquire!" ) ; } else { while ( ! ( cas.compareAndSet ( false, true ) ) ) { waitForSignal () ; } reentrant = new org.arivu.utils.lock.Reentrant () ; java.lang.System.out.println ( "Rentrant created!" ) ; } } 
public byte[] readPacket () { byte[] buffer = this.socket.readPacket () ; byte buff = buffer[ ( ( buffer.length ) - 1 ) ]; byte[] bytes = new byte[] { ( ( byte ) ( buff ) ) }; if ( ( org.itxtech.synapseapi.network.synlib.ServerConnection.MAGIC_BYTES ) == bytes ) { if ( ( buffer.length ) > 4 ) { } } return buffer; } 
@ java.lang.Override public boolean decode ( @org.jetbrains.annotations.NotNull final com.intellij.openapi.util.TextRange rangeInsideHost, @org.jetbrains.annotations.NotNull final java.lang.StringBuilder outChars ) { com.intellij.openapi.util.TextRange.assertProperRange ( rangeInsideHost ) ; java.lang.String subText = rangeInsideHost.substring ( myHost.getText () ) ; if ( null != ( myHost.getRawString () ) ) { outChars.append ( subText ) ; } else { com.intellij.openapi.util.Ref<int[]> sourceOffsetsRef = new com.intellij.openapi.util.Ref<int[]> () ; com.goide.util.GoStringLiteralEscaper.parseStringCharacters ( subText, outChars, sourceOffsetsRef ) ; outSourceOffsets = sourceOffsetsRef.get () ; } return true; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ! ( txt_speech.isSpeaking () ) ) && ( ( txt_speech ) != null ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { txt_speech.speak ( wordsEN[wordsIndex], TextToSpeech.QUEUE_FLUSH, null, null ) ; } else { txt_speech.speak ( wordsEN[wordsIndex], TextToSpeech.QUEUE_FLUSH, null ) ; } } } 
private org.quicktionary.backend.TextNode generateNotFound ( java.lang.String string ) { org.quicktionary.backend.TextNode root; org.quicktionary.backend.TextNode paragraph; org.quicktionary.backend.TextNode header; org.quicktionary.backend.TextNode link; org.quicktionary.backend.TextNode text; root = new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.ROOT_TYPE ) ; header = root.appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.HEADER_TYPE ) ) ; paragraph = root.appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PARAGRAPH_TYPE ) ) ; header.setContent ( "Sorry!" ) ; text = paragraph.appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PLAIN_TYPE ) ) ; text.setContent ( ( "." + ( "We couldn't find the page for the word " + string ) ) ) ; return root; } 
private synchronized be.olsson.slackappender.SlackAppender.MessageStat getMessageStat ( org.apache.log4j.spi.LoggingEvent event ) { if ( meltdownProtection ) { java.lang.String key = event.getMessage () .toString () ; be.olsson.slackappender.SlackAppender.MessageStat stat = similar.get ( key ) ; if ( null == stat ) { stat = new be.olsson.slackappender.SlackAppender.MessageStat () ; stat.countSinceLastLog = 0; stat.lastLogged = java.lang.System.currentTimeMillis () ; stat.lastSeen = java.lang.System.currentTimeMillis () ; } similar.put ( key, stat ) ; ( stat.countSinceLastLog ) ++; stat.lastSeen = java.lang.System.currentTimeMillis () ; } return null; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int characterId = ( ( java.lang.Integer ) ( v.getTag () ) ) ; me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType; if ( ( R.id.ib_hp_minus_select ) == ( v.getId () ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH; } else if ( ( v.getId () ) == ( R.id.ib_hp_add_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH; } else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK; } clickListener.onCombatClick ( characterId, eventType ) ; } 
public double getprice ( java.lang.String symbol ) throws java.io.IOException { yahoofinance.Stock stock = yahoofinance.YahooFinance.get ( symbol ) ; java.lang.String name = stock.getName () ; if ( 0 == ( name.compareTo ( "N/A" ) ) ) return -1; java.math.BigDecimal price_dec = stock.getQuote () .getPrice () ; java.lang.Double price_dub = price_dec.doubleValue () ; return price_dub; } 
@ java.lang.Override public void readFromNBT ( @org.jetbrains.annotations.NotNull final net.minecraft.nbt.NBTTagCompound compound ) { final net.minecraft.nbt.NBTTagList furnaceTagList = compound.getTagList ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_FURNACES, Constants.NBT.TAG_COMPOUND ) ; for ( int i = 0; ( furnaceTagList.tagCount () ) > i; ++i ) { furnaces.add ( net.minecraft.nbt.NBTUtil.getPosFromTag ( furnaceTagList.getCompoundTagAt ( i ) .getCompoundTag ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_POS ) ) ) ; } isSomethingInOven = compound.getBoolean ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_COOKING ) ; } 
private org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem.getTextFile ( this.pluginId, TRANSACTION_DIRECTORY, txHash, FilePrivacy.PRIVATE, FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile.getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser.parseXML ( transactionContent, new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR, e, ( " from disk." + ( "Error loading transaction " + txHash ) ) , "IO Error" ) ; } } 
public static boolean hasSpace ( proto.game.scene.Scene scene, proto.game.scene.PropType type, int x, int y, int facing ) { for ( proto.game.scene.Tile under : proto.game.scene.Prop.tilesUnder ( type, scene, x, y, facing ) ) { if ( null == under ) return false; for ( proto.game.scene.Element e : under.inside () ) if ( e.wouldBlock ( type ) ) return false; } return true; } 
@ java.lang.Override protected void onPostExecute ( kz.mukhamedissa.exchangerates.data.response.ExchangeRateResponse response ) { super.onPostExecute ( response ) ; if ( ( ( response.result ) != null ) && ( response.isSuccess () ) ) { kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory.getArticleORM () .insert ( getBaseContext () , response.result ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( null != ( movieIdChosen ) ) { int id = java.lang.Integer.parseInt ( movieIdChosen ) ; movieController.returnMovie ( id, panel, scroll ) ; rentalInfoController.returnMovie ( id, clientSelected.getId () ) ; } } 
int getParallelism () { com.google.common.base.Preconditions.checkArgument ( ( ( ( parallelism ) > 0 ) || ( null == ( parallelism ) ) ) , "invalid parallelism %s; must be greater than zero" ) ; java.lang.Integer value = parallelism; if ( null == value ) { value = java.lang.Runtime.getRuntime () .availableProcessors () ; } return value; } 
public void draw () { applet.translate ( 20, ( ( CONTROL_HEIGHT ) - 100 ) ) ; if ( 0 < ( game.tasks.size () ) ) { applet.text ( game.tasks.get ( taskPosition ) .getName () , 0, 0 ) ; } else { applet.text ( "No tasks available", 0, 0 ) ; } } 
public synchronized void calculateReceiptsVisibility ( org.iabako.client.ui.form.business.sale.SalePaymentsForm salePaymentsForm ) { org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm.getInstallmentTable () ; int installmentsNumber = ( null != installmentsTable ) ? installmentsTable.queryDefinitionDTO.getCountTotal () : 0; int invoicesNumber = ( ( invoiceTable ) != null ) ? invoiceTable.queryDefinitionDTO.getCountTotal () : 0; if ( ( invoicesNumber == 1 ) && ( installmentsNumber == 0 ) ) { receiptsPanel.setVisible ( false ) ; } else { receiptsPanel.setVisible ( true ) ; } } 
private boolean isPrime ( int p ) { if ( 2 == p ) return true; if ( p < 3 ) return false; if ( ( p % 2 ) == 0 ) return false; for ( int i = 3; ( i * i ) < p; i += 2 ) if ( ( p % i ) == 0 ) return false; return true; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/list", method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList<be.ehb.restservermetdatabase.model.Avatar> list ( @org.springframework.web.bind.annotation.RequestParam ( value = "user_id", defaultValue = "" ) int user_id, @org.springframework.web.bind.annotation.RequestParam ( value = "user_id", defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_mail.equals ( "" ) ) && ( user_id == 0 ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao.getAvatars () ; } else if ( ! ( user_mail.equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao.getUserByEmail ( user_mail ) .getUser_id () ; return be.ehb.restservermetdatabase.dao.AvatarDao.getAvatarsByUser ( user_id ) ; } else { return null; } } 
@ pt.webdetails.cfr.GET @pt.webdetails.cfr.Path ( value = "/createFolder" ) public void createFolder ( @javax.ws.rs.core.Context javax.servlet.http.HttpServletRequest request, @javax.ws.rs.core.Context javax.servlet.http.HttpServletResponse response ) throws java.lang.Exception { java.lang.String path = pt.webdetails.cfr.CfrApi.checkRelativePathSanity ( getParameter ( "path", request ) ) ; if ( ( org.apache.commons.lang.StringUtils.isBlank ( path ) ) || ( path == null ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () .createFolder ( path ) ; writeMessage ( new org.json.JSONObject () .put ( "result", createResult ) .toString () , response.getOutputStream () ) ; } 
private void readVersion () throws java.lang.Exception { java.io.InputStream verStream = getClass () .getClassLoader () .getResourceAsStream ( com.mobilehelix.appserver.system.VersionManager.versionProperties ) ; java.util.Properties verProps = new java.util.Properties () ; verProps.load ( verStream ) ; majorVer = verProps.getProperty ( "Major" ) ; minorVer = verProps.getProperty ( "Minor" ) ; revisionVer = verProps.getProperty ( "Revision" ) ; versionString = ( revisionVer ) + ( ( ( ( majorVer ) + "." ) + ( minorVer ) ) + "." ) ; } 
@ java.lang.Override public N next () { if ( ( ( data.get ( i ) ) == null ) || ( ( ( data.size () ) - 1 ) < ( i ) ) ) data.add ( getRandomValue () ) ; return data.get ( ( ( i ) ++ ) ) ; } 
protected void setBannerVisible () { com.kiroule.jpetstore.vaadinspring.domain.Account account = com.kiroule.jpetstore.vaadinspring.ui.util.CurrentAccount.get () ; if ( ( ! ( com.google.common.base.Strings.isNullOrEmpty ( account.getBannerName () ) ) ) && ( ( account != null ) && ( account.isBannerOption () ) ) ) { bannerImage.setValue ( account.getBannerName () ) ; bannerLayout.setVisible ( true ) ; bannerLayout.setStyleName ( getBannerStyleName ( account.getBannerName () ) ) ; } } 
public static org.kentuni.WeatherStation.Drivers.MCP3427 getDriver () throws java.io.IOException { if ( null == ( org.kentuni.WeatherStation.Drivers.ADC.instance ) ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC.class ) { if ( null == ( org.kentuni.WeatherStation.Drivers.ADC.instance ) ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory.getInstance ( I2CBus.BUS_1, 105 ) ) ; } } } return org.kentuni.WeatherStation.Drivers.ADC.instance; } 
public void backupPortfolio ( android.content.Context context, java.lang.String fileName ) { persist () ; this.mAppStorage.putString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON, getStocksJson () .toString () ) .apply () ; java.lang.String rawJson = this.mAppStorage.getString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON, "" ) ; nitezh.ministock.UserData.writeExternalStorage ( context, rawJson, ( ".txt" + fileName ) , "portfoliobackups/" ) ; nitezh.ministock.DialogTools.showSimpleDialog ( context, "PortfolioActivity backed up", ( "Your portfolio settings have been backed up to ministocks/portfoliobackups/" + fileName ) ) ; } 
private static int findValue ( int needle, java.lang.Integer[] haystack ) { int start = 0; int end = ( haystack.length ) - 1; while ( end >= start ) { int midpoint = ( start + end ) / 2; int test = haystack[midpoint]; if ( test == needle ) { return midpoint; } else if ( test < needle ) { start = midpoint + 1; } else { end = midpoint - 1; } } return -1; } 
private void launchBattleFrags () { if ( null == ( battleUIFragment ) ) { battleUIFragment = new com.pokemonbattlearena.android.BattleUIFragment () ; } if ( ! ( battleBegun ) ) { battleBegun = true; getFragmentManager () .beginTransaction () .add ( R.id.battle_ui_container, battleUIFragment ) .commitAllowingStateLoss () ; } else { getFragmentManager () .beginTransaction () .remove ( battleUIFragment ) .commitAllowingStateLoss () ; battleUIFragment = null; battleBegun = false; } } 
protected void initializeOrdinal ( final int defaultOrdinal ) { this.ordinal = defaultOrdinal; java.lang.String ordinal = get ( PropertySource.TAMAYA_ORDINAL ) ; if ( null != ordinal ) { try { this.ordinal = java.lang.Integer.valueOf ( ordinal ) ; } catch ( java.lang.NumberFormatException e ) { org.apache.tamaya.core.propertysource.BasePropertySource.LOG.log ( java.util.logging.Level.WARNING, "Specified {0} is not a valid Integer value: {1} - using defaultOrdinal {2}", new java.lang.Object[] { org.apache.tamaya.spi.PropertySource.TAMAYA_ORDINAL, ordinal, defaultOrdinal } ) ; } } } 
@ java.lang.Override public final void unregisterRpcNotificationListener ( com.smartdevicelink.protocol.enums.FunctionID functionID, com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener rpcNotificationListener ) { int id = functionID.getId () ; java.util.HashSet<com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener> listenerSet = mNotificationListeners.get ( id ) ; if ( null != listenerSet ) { listenerSet.remove ( rpcNotificationListener ) ; if ( ( listenerSet.isEmpty () ) && ( ( mSdlProxyALM ) != null ) ) { mSdlProxyALM.removeOnRPCNotificationListener ( functionID ) ; } } } 
protected java.lang.Long doInBackground ( com.androidexpansion.filedownloader.DownloadExtraAssets[] remoteLocalResources ) { int count = remoteLocalResources.length; long totalSize = 0; for ( int i = count - 1; 0 <= i; i-- ) { totalSize += downloadExtraAssets.downloadFile ( remoteLocalResources[i] ) ; java.lang.Integer progress = ( ( int ) ( ( i / ( ( float ) ( count ) ) ) * 100 ) ) ; publishProgress ( progress ) ; if ( isCancelled () ) break; } return totalSize; } 
@ java.lang.Override protected void onResume () { if ( ( ( mCamera ) != null ) && ( hasCameraPermissions () ) ) { mCamera.start () ; showCameraPreview () ; mTakePictureButton.setEnabled ( true ) ; mProgressBar.setVisibility ( View.GONE ) ; } final net.gini.switchsdk.Image selectedImage = getIntent () .getParcelableExtra ( net.gini.switchsdk.TakePictureActivity.STATE_KEY_SELECTED_IMAGE ) ; if ( selectedImage != null ) { mPresenter.onImageSelected ( selectedImage ) ; } else { mPresenter.onTakePictureSelected () ; } super.onResume () ; } 
private java.lang.String absentDirectory () { try { java.lang.String result = ( HandyPath.PATH_SEPARATOR ) + ( ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ) ; java.nio.file.Files.deleteIfExists ( java.nio.file.Paths.get ( result ) ) ; return result; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } } 
private guiPacket.Card removeCardFromHand ( guiPacket.Card cardToRemove ) { for ( int i = 0; ( hand.size () ) > i; i++ ) { if ( ( cardToRemove.compareTo ( hand.get ( i ) ) ) == 0 ) { hand.remove ( i ) ; if ( ( cardToRemove instanceof cards.Tech ) || ( cardToRemove instanceof cards.ResourceCard ) ) { addCardToScrapYard ( cardToRemove ) ; } return cardToRemove; } } java.lang.System.out.println ( "RemoveCardFromHand: Something went wrong" ) ; return null; } 
public void generateBottomEdge () { if ( ! ( this.done ) ) { this.hue = 1.0F / 3.0F; this.cancelled = false; drawKochEdge ( ( ( 1 - ( ( java.lang.Math.sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75, ( ( ( ( java.lang.Math.sqrt ( 3.0 ) ) / 2.0 ) + 1 ) / 2 ) , 0.75, this.level ) ; } } 
private boolean hasKeepAliveForConnection () { java.lang.String keepAlive = assertion.getKeepAlive () ; if ( gov.hhs.fha.nhinc.nhinclib.NullChecker.isNullish ( keepAlive ) ) { keepAlive = getKeepAliveProperty () ; } return ( ( keepAlive.equalsIgnoreCase ( "TRUE" ) ) || ( keepAlive.equalsIgnoreCase ( "T" ) ) ) && ( gov.hhs.fha.nhinc.nhinclib.NullChecker.isNotNullish ( keepAlive ) ) ; } 
private <T extends com.librato.metrics.reporter.Metric> T register ( java.lang.Class<T> klass, com.librato.metrics.reporter.Supplier<T> metric ) { com.librato.metrics.reporter.Signal signal = createSignal () ; if ( null == signal ) { return register ( registry, name, metric, klass ) ; } java.lang.String encodedName = encodeName ( name, signal ) ; return register ( registry, encodedName, metric, klass ) ; } 
public boolean updateProduction ( double diff ) { _simStat.currentElectricity += diff; if ( null != ( _connect._simStat ) ) { _connect._simStat.currentElectricity += diff; } if ( ( ( _simStat.currentElectricity ) > ( _maxProduction ) ) || ( ( _simStat.currentElectricity ) < ( _minProduction ) ) ) { _simStat.isOk = false; } else { _simStat.isOk = false; } return _simStat.isOk; } 
private void addPorts ( java.lang.StringBuilder b ) { if ( 0 < ( ports.size () ) ) { java.lang.String[] portsS = new java.lang.String[ports.size () ]; int i = 0; for ( java.lang.String port : portsS ) { portsS[ ( i++ ) ] = validatePortExposure ( port ) ; } DockerFileKeyword.EXPOSE.addTo ( b, portsS ) ; } } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent ev ) { super.onTouchEvent ( ev ) ; dragHelper.processTouchEvent ( ev ) ; final android.view.ViewGroup parent = ( ( android.view.ViewGroup ) ( findBottomView ( this, x, y ) .getParent () ) ) ; return ( parent == ( this ) ) || false; } 
public boolean hasGameEnded () { int countOfAliveWolves = 0; int countOfAliveCitizens = 0; for ( com.raibaz.lupus.game.Player p : g.getPlayers () ) { if ( p.isAlive () ) { if ( ( PlayerRole.WOLF ) == ( p.getRole () ) ) { countOfAliveWolves++; } else { countOfAliveCitizens++; } } } return ( countOfAliveWolves == 0 ) || ( countOfAliveWolves >= ( countOfAliveCitizens - 1 ) ) ; } 
public boolean checkData ( int HDice, int HRoll, int DDice, int DRoll, int DDealt ) { if ( ( HRoll > ( HDice * ( MAX_DIE_ROLL ) ) ) || ( HRoll < HDice ) ) return false; if ( ( DRoll < DDice ) || ( DRoll > ( DDice * ( MAX_DIE_ROLL ) ) ) ) return false; if ( DDealt > DRoll ) return false; return true; } 
@ java.lang.Override public void run () { if ( null != ( countDownCountainer ) ) { if ( ( counter ) >= 0 ) { countDownCountainer.setVisibility ( View.VISIBLE ) ; countDownTextView.setText ( java.lang.String.format ( getResources () .getString ( R.string.count_down_text ) , counter ) ) ; countDownProgressBar.setProgress ( ( ( com.wb.nextgen.fragment.ECVideoViewFragment.COUNT_DOWN_SECONDS ) - ( counter ) ) ) ; } else { countDownTextView.setText ( "" ) ; countDownCountainer.setVisibility ( View.GONE ) ; } } } 
public int unpin ( tachyon.TachyonURI path ) throws java.io.IOException { try { mTfs.setPin ( mTfs.open ( path ) , true ) ; java.lang.System.out.println ( ( "' was successfully unpinned." + ( "File '" + path ) ) ) ; return 0; } catch ( java.lang.Exception e ) { e.printStackTrace () ; java.lang.System.out.println ( ( ( "File '" + path ) + "' could not be unpinned." ) ) ; return -1; } } 
@ java.lang.Override protected org.eclipse.draw2d.geometry.Rectangle getFrameArea ( org.eclipse.draw2d.geometry.Rectangle origin ) { if ( ! ( model.isMinimizedView () ) ) { return new org.eclipse.draw2d.geometry.Rectangle ( ( ( ( GRID_SIZE ) / 2 ) + ( origin.x ) ) , origin.y, ( ( origin.width ) - ( GRID_SIZE ) ) , origin.height ) ; } return super.getFrameArea ( origin ) ; } 
int convertSImeiToID ( java.lang.String text ) { int sum = 0; char[] imei = text.toCharArray () ; for ( int i = 0; ( text.length () ) > i; i++ ) sum = sum + ( imei[i] ) ; return 16384 + sum; } 
private void initHeaderViewToRefresh ( int deltaY ) { int topDistance = UpdateHeadViewMarginTop ( deltaY ) ; if ( ( topDistance > ( - ( headViewHeight ) ) ) && ( topDistance < 0 ) ) { mBaseHeaderAdapter.pullViewToRefresh () ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH; } else if ( ( topDistance > 0 ) && ( ( mHeaderState ) != ( com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ) ) ) { mBaseHeaderAdapter.releaseViewToRefresh () ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH; } } 
void merge ( hivemall.fm.FMPredictUDAF.PartialResult other ) { this.ret += other.ret; if ( null == ( this.sumVjXj ) ) { this.sumVjXj = other.sumVjXj; this.sumV2X2 = other.sumV2X2; } else { hivemall.fm.FMPredictUDAF.PartialResult.add ( other.sumVjXj, sumVjXj ) ; hivemall.fm.FMPredictUDAF.PartialResult.add ( other.sumV2X2, sumV2X2 ) ; } } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { if ( null == e ) { mOriginal.remove ( getItems () .remove ( position ) ) ; getItems () .remove ( position ) ; getBaseAdapter () .notifyItemRemoved ( position ) ; android.widget.Toast.makeText ( getContext () , "Sent request!", Toast.LENGTH_LONG ) .show () ; } else { android.widget.Toast.makeText ( getContext () , e.getMessage () , Toast.LENGTH_LONG ) .show () ; } } 
private void fail ( final java.lang.Throwable t ) { com.barchart.netty.server.util.TimeoutPromiseGroup.log.debug ( "fail" ) ; synchronized ( this ) { com.barchart.netty.server.util.TimeoutPromiseGroup.log.debug ( "fail sync" ) ; if ( ! ( done ) ) { done = true; if ( null != ( timeoutFuture ) ) { timeoutFuture.cancel ( true ) ; } setFailure ( t ) ; } } com.barchart.netty.server.util.TimeoutPromiseGroup.log.debug ( "fail out" ) ; } 
private void freezeValues ( net.ssehub.easy.varModel.model.AbstractVariable var, net.ssehub.easy.varModel.confModel.IFreezeSelector selector ) { if ( ( ( var.getParent () ) instanceof net.ssehub.easy.varModel.model.AttributeAssignment ) || ( var.isTopLevel () ) ) { net.ssehub.easy.varModel.confModel.IDecisionVariable frozenVariable = getDecision ( var ) ; frozenVariable.freeze ( selector ) ; } else { net.ssehub.easy.varModel.model.IModelElement parent = var.getParent () ; java.lang.System.out.println ( ( "Config freeze for nested variable not implemented: " + parent ) ) ; } } 
private void processMethod ( final java.lang.reflect.Method method ) { method.setAccessible ( true ) ; if ( null != ( com.matthewtamlin.spyglass.library.util.AnnotationUtil.getValueHandlerAnnotation ( method ) ) ) { processMethodWithCallHandler ( method ) ; } else if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil.getCallHandlerAnnotation ( method ) ) != null ) { processMethodWithValueHandler ( method ) ; } } 
public static void main ( java.lang.String[] args ) { RunningMedian x = new RunningMedian () ; for ( int i = 0; ( args.length ) > i; i++ ) { x.add ( java.lang.Integer.parseInt ( args[i] ) ) ; x.debug () ; } java.lang.System.out.println ( x.getMedian () ) ; } 
@ java.lang.Override public java.util.List<uk.co.olimor.BMBTApi_boot.model.TestResult> getResultHistory ( final int userId ) throws uk.co.olimor.BMBTApi_boot.exception.ApiException { log.entry ( userId ) ; final java.util.List<uk.co.olimor.BMBTApi_boot.model.TestResult> results = query ( java.lang.String.format ( uk.co.olimor.BMBTApi_boot.dao.impl.ResultsHistoryQueryImpl.QUERY, userId ) ) ; if ( 0 == ( results.size () ) ) throw new uk.co.olimor.BMBTApi_boot.exception.ApiException ( "No results found for user id", org.springframework.http.HttpStatus.NOT_FOUND ) ; return log.traceExit ( results ) ; } 
@ java.lang.Override public void propertyChange ( java.beans.PropertyChangeEvent event ) { if ( null != ( document ) ) { document.getLineManager () .removeLineListener ( this ) ; } document = ( ( kkckkc.syntaxpane.model.SourceDocument ) ( event.getNewValue () ) ) ; document.getLineManager () .addLineListener ( this ) ; document.addFoldListener ( new kkckkc.syntaxpane.model.MutableFoldManager.FoldListener () { public void foldUpdated () { repaint () ; } } ) ; } 
@ java.lang.Override public void getAllOperationIssuesByMedicoId ( java.util.List<com.artursworld.reactiontest.model.entity.OperationIssue> operationIssuesList ) { addItemsOnOperationIssueSpinner ( operationIssuesList, spinner ) ; com.artursworld.reactiontest.controller.util.UtilsRG.info ( ( ( operationIssuesList.toString () ) + ( ( "Operation issues loaded for user ( " + ( getSelectedMedicalUser () ) ) + " ) =" ) ) ) ; if ( spinner != null ) { com.artursworld.reactiontest.controller.util.UtilsRG.putString ( UtilsRG.OPERATION_ISSUE, spinner.getSelectedItem () .toString () , getActivity () ) ; setAvarageReactionTime ( spinner.getSelectedItem () .toString () ) ; } } 
private pl.sdacaemy.data.structures.impl.ForwardList.Node getItemNode ( int index ) throws java.lang.IndexOutOfBoundsException { int currentIndex = 0; pl.sdacaemy.data.structures.impl.ForwardList.Node currentNode = head; while ( ( currentIndex < index ) && ( ( currentNode.next ) != null ) ) { ++currentIndex; currentNode = currentNode.next; } if ( currentNode == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return currentNode; } 
@ java.lang.Override public void doIfFailed () { if ( ( ! ( connectedToSocket ) ) || ( ( socket ) == null ) ) { if ( ( act ) != null ) if ( ( ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) .splScreen ) != null ) ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) .splScreen.setButtonActive () ; else reconnect () ; } } 
public void run () { if ( ( mSharedPreferences.getBoolean ( edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY, false ) ) == ( mRequestingUpdates ) ) { } else { mRequestingUpdates = mSharedPreferences.getBoolean ( edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY, false ) ; if ( ( mRequestingUpdates ) && ( mGoogleApiClient.isConnected () ) ) { startLocationUpdates () ; mAccelLogger = new edu.cornell.jjl.info4120final.DataLogger ( "accel" ) ; mLocationLogger = new edu.cornell.jjl.info4120final.DataLogger ( "location" ) ; mActivityLogger = new edu.cornell.jjl.info4120final.DataLogger ( "activity_recognition" ) ; } else { } } handler.postDelayed ( this, 1000 ) ; } 
private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes, java.util.Map<java.lang.String, java.lang.Object> values ) { if ( null != fixedAttributes ) { com.orhanobut.tracklytics.FixedAttribute[] attributes = fixedAttributes.value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values.put ( attribute.key () , attribute.value () ) ; if ( attribute.isSuper () ) { superAttributes.put ( attribute.key () , attribute.value () ) ; } } } } 
public void clear () { LinkedList<E>.LinkedListNode<E> current; LinkedList<E>.LinkedListNode<E> next; next = head; while ( null != next ) { current = next; next = current.next; current.destroy () ; } head = tail = null; } 
private void nextTurn () { try { java.lang.Thread.sleep ( 10000, 0 ) ; } catch ( java.lang.InterruptedException e ) { e.printStackTrace () ; } if ( ( players_turn ) == ( turn ) ) { java.lang.System.out.println ( "NonPlayer ist am Zug" ) ; turn = nonplayers_turn; nonplayersTurn () ; actionKI () ; } else if ( ( turn ) == ( nonplayers_turn ) ) { java.lang.System.out.println ( "Player ist am Zug" ) ; turn = players_turn; playersTurn () ; } } 
private java.lang.String getValue ( int i, int j ) { if ( j == i ) { return "x"; } else { return getValue ( i, j, countMap.get ( new context.healthinformatics.graphs.ConnectionSet ( codes.get ( i ) , codes.get ( j ) ) ) ) ; } } 
@ java.lang.Override protected int getZWithOffset ( int x, int z ) { net.minecraft.util.EnumFacing enumfacing = this.getCoordBaseMode () ; if ( null == enumfacing ) { return z; } else { switch ( enumfacing ) { case NORTH: return ( this.boundingBox.maxZ ) - z; case SOUTH: return ( this.boundingBox.minZ ) + z; case WEST: case EAST: return ( this.boundingBox.minZ ) + x; default: return z; } } } 
@ java.lang.Override public boolean removeEdge ( csula.cs4660.graphs.Edge x ) { if ( ( ! ( nodes.contains ( x.getTo () ) ) ) || ( ! ( nodes.contains ( x.getFrom () ) ) ) ) { java.lang.System.out.println ( "Error: fromNode or toNode not exists" ) ; } else { edges.remove ( x ) ; } return false; } 
private static void aggregate ( java.util.Map<cc.blynk.server.storage.reporting.average.AggregationKey, cc.blynk.server.storage.reporting.average.AggregationValue> map, cc.blynk.server.storage.reporting.average.AggregationKey key, double value ) { cc.blynk.server.storage.reporting.average.AggregationValue aggregationValue = map.get ( key ) ; if ( null == aggregationValue ) { final cc.blynk.server.storage.reporting.average.AggregationValue aggregationValueTmp = new cc.blynk.server.storage.reporting.average.AggregationValue ( value ) ; aggregationValue = map.putIfAbsent ( key, aggregationValueTmp ) ; if ( null == aggregationValue ) { aggregationValue = aggregationValueTmp; } } aggregationValue.update ( value ) ; } 
public java.lang.String convertCalendarToString ( java.util.GregorianCalendar toBeConverted ) { java.lang.String result = new java.lang.String () ; java.text.DateFormat df = new java.text.SimpleDateFormat ( "MM dd yyyy HHmm" ) ; result = df.format ( toBeConverted ) ; java.lang.System.out.println ( ( result + ( toBeConverted + " was converted to " ) ) ) ; return result; } 
@ java.lang.Override public void onApiConnected () { final com.o3dr.services.android.lib.drone.property.Parameters droneParams = getDrone () .getAttribute ( AttributeType.PARAMETERS ) ; if ( ( droneParams != null ) && ( adapter.isEmpty () ) ) { java.util.List<com.o3dr.services.android.lib.drone.property.Parameter> parametersList = droneParams.getParameters () ; if ( ! ( parametersList.isEmpty () ) ) loadAdapter ( parametersList, false ) ; } toggleParameterFilter ( isParameterFilterVisible () , false ) ; getBroadcastManager () .registerReceiver ( broadcastReceiver, org.droidplanner.android.fragments.ParamsFragment.intentFilter ) ; } 
private static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true; for ( int i = 0; ( input.length () ) > i; i++ ) { int c = input.charAt ( i ) ; if ( c > 127 ) { isASCII = false; break; } } return isASCII; } 
public OL getItem ( int position ) { if ( null != ( mList ) ) { if ( ( position > 0 ) && ( position < ( mList.size () ) ) ) { return mList.get ( position ) ; } com.openarena.util.L.e ( com.openarena.model.AbstractRecyclerAdapter.class, ( ( "no item[" + position ) + "]" ) ) ; } com.openarena.util.L.e ( com.openarena.model.AbstractRecyclerAdapter.class, "error to get item" ) ; return null; } 
private org.springframework.data.geo.Point fillCoordinates ( com.geolocation.search.model.Place place ) { org.springframework.data.geo.Point coordinates; try { java.lang.Double[] latLong = geoApiHelper.getLatLong ( place.getAddress () .getAddress () ) ; coordinates = new org.springframework.data.geo.Point ( latLong[0], latLong[1] ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( ( place.getAddress () .getAddress () ) + "Could not find the coordinates to the address provided: " ) ) ; } return coordinates; } 
public void onRequestPermissionResult ( int requestCode, java.lang.String[] permissions, int[] grantResults ) throws org.json.JSONException { for ( int r : grantResults ) { if ( ( android.content.pm.PackageManager.PERMISSION_DENIED ) == r ) { this.callback.sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR, de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_DENIED_ERROR ) ) ; return; } } if ( ! ( executeInternal ( this.action, this.rawArgs, this.callback ) ) ) { this.callback.sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR, de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_GENERAL_ERROR ) ) ; } } 
@ java.lang.Override public void processCommand ( net.minecraft.command.ICommandSender p_71515_1_, java.lang.String[] p_71515_2_ ) { if ( 1 < ( p_71515_2_.length ) ) { if ( p_71515_2_[0].equalsIgnoreCase ( "help" ) ) { mainserverjt.piratemod.command.commands.HelpCommand.processCommand ( p_71515_1_, removeIndexUntil ( 1, p_71515_2_ ) ) ; } } else { mainserverjt.piratemod.command.ChatColor.sendPrivateMessage ( p_71515_1_, ( ( ( ChatColor.prefix ) + ( ChatColor.rood ) ) + "Use /pm help" ) ) ; } } 
private void extractAgentGroupAvailability ( com.genesys.workspace.models.targets.Target target ) { com.google.gson.internal.LinkedTreeMap availabilityData = ( ( com.google.gson.internal.LinkedTreeMap ) ( target.getAvailability () ) ) ; if ( null == availabilityData ) { return; } java.lang.Integer readyAgents = ( ( java.lang.Integer ) ( availabilityData.get ( "readyAgents" ) ) ) ; this.availability = new com.genesys.workspace.models.targets.AgentGroupAvailability ( readyAgents ) ; } 
private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { final java.lang.String query = ( MediaLibrary.GenreSongColumns.SONG_ID ) + ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) ; return query; } 
public synchronized boolean canMove ( level.action.MoveAction action ) { level.Location agLoc = action.getAgentLocation () ; level.Direction dir = action.getDirection () ; if ( null == agLoc ) { return false; } level.Location nAgLoc = level.Location.newLocation ( dir, agLoc ) ; if ( nAgLoc == null ) { return false; } if ( ! ( isFree ( nAgLoc ) ) ) { return false; } return true; } 
private void AddFruit () { boolean bFlag = true; while ( bFlag ) { int x = ( ( int ) ( ( com.snake.Game.sizeByX ) * ( java.lang.Math.random () ) ) ) ; int y = ( ( int ) ( ( java.lang.Math.random () ) * ( com.snake.Game.sizeByY ) ) ) ; if ( ( field[x][y] ) == 0 ) { bFlag = false; field[x][y] = -2; } } } 
protected static boolean evaluateFuelConsumption () { if ( ( ( group8.com.application.Application.Controller.getCurrentFuelConsumption () ) >= ( group8.com.application.Model.ConstantData.extremeFuelConsumption ) ) && ( ( group8.com.application.Application.AlertSystem.shouldAlert ) && ( group8.com.application.Application.AlertSystem.fuelAlert ) ) ) { group8.com.application.Application.AlertSystem.shouldAlert = false; group8.com.application.Application.AlertSystem.coolDown.start () ; return true; } else if ( ( group8.com.application.Application.Controller.getCurrentFuelConsumption () ) < ( group8.com.application.Model.ConstantData.extremeFuelConsumption ) ) { group8.com.application.Application.AlertSystem.fuelAlert = true; } return false; } 
public boolean isState ( java.lang.String input ) { boolean matchFound = false; int i = 0; while ( ( i < ( states.length ) ) && ( matchFound = false ) ) { if ( states[i].equalsIgnoreCase ( input ) ) { matchFound = true; } i++; } return matchFound; } 
protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent intent ) { if ( ( com.jeffreychan.yutnori.TitleScreenActivity.RC_SIGN_IN ) == requestCode ) { mSignInClicked = false; mResolvingConnectionFailure = false; if ( resultCode == ( RESULT_OK ) ) { client.connect () ; } else { android.widget.Toast savedToast = android.widget.Toast.makeText ( getApplicationContext () , "Unable to sign in to Google", Toast.LENGTH_SHORT ) ; savedToast.show () ; } } } 
private logic.Piece turnCPU () { depth = DEPTH; logic.Heur bestMove = miniMax () ; bestMoveMessages.addFirst ( ( " ) . " + ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility.itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": ( " ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility.itoc ( bestMove.col ) ) ) ) ) ; return new logic.Piece ( bestMove, activeplayer ) ; } 
private static synchronized void startVibrate () { android.util.Log.d ( org.catrobat.catroid.utils.VibratorUtil.TAG, "startVibrate () " ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock.uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator.vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log.d ( org.catrobat.catroid.utils.VibratorUtil.TAG, ( ( java.lang.Long.toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) + "start time was: " ) ) ; } 
@ org.junit.Test public void cityAdm () throws java.io.IOException, java.lang.InterruptedException { if ( ( countryTest.contains ( "ALL" ) ) || ( countryTest.contains ( "FR" ) ) ) { java.lang.String rawAddress = "saint omer normandie"; com.gisgraphy.addressparser.AddressResultsDto addressResultsDto = doGeocodingOnCountry ( rawAddress, "FR" ) ; net.sf.jstester.util.Assert.assertNotNull ( addressResultsDto ) ; isCorrectByAtLeastOneIds ( new java.lang.Long[] { 4039279022L, 94401L }, addressResultsDto.getResult () , rawAddress ) ; } } 
@ org.junit.Test public void testBasicApply () { final int arg1 = 123; final double arg2 = 3.14; ru.spbau.mit.Function2<java.lang.Integer, java.lang.Double, java.lang.String> concat = new ru.spbau.mit.Function2<java.lang.Integer, java.lang.Double, java.lang.String> () { @java.lang.Override public java.lang.String apply ( java.lang.Integer arg1, java.lang.Double arg2 ) { return ( arg2.toString () ) + ( arg1.toString () ) ; } }; org.junit.Assert.assertEquals ( concat.apply ( arg1, arg2 ) , "1233.14" ) ; } 
public void cancel () { status = com.github.mob41.osumer.updater.Downloader.CANCELLED; reportState () ; java.io.File file = new java.io.File ( ( ".osz" + ( ( ( folder ) + "\\" ) + ( com.github.mob41.osumer.updater.Downloader.toFilename ( url ) ) ) ) ) ; file.delete () ; downloaded = 0; } 
private int getProgressForAngle ( double angle ) { int touchProgress = ( ( int ) ( java.lang.Math.round ( ( angle * ( valuePerDegree () ) ) ) ) ) ; touchProgress = ( touchProgress < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress; touchProgress = ( touchProgress > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress; if ( ! ( mDragging ) ) touchProgress = ( touchProgress == ( com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE ) ) ? 0 : touchProgress; return touchProgress; } 
private void updatePacketInWindow ( int sequence, WebApplication.HTTPConnection.AcknowledgementCode code ) { for ( int i = Window_Position; ( i < ( ( Packet_Buffer.size () ) - 1 ) ) && ( i < ( Window_Size ) ) ; ++i ) { if ( sequence == ( ( Packet_Buffer.get ( i ) .getSequenceNumber () ) % ( Sequence_Modulus ) ) ) { Packet_Buffer.get ( i ) .updateAcknowledgementCode ( code ) ; break; } } } 
private int menorDentreAs ( double[] razoes ) { double menor = razoes[0]; int indice = 0; for ( int i = 0; ( razoes.length ) > i; i++ ) { if ( ( razoes[i] ) > 0 ) { if ( ( java.lang.Double.compare ( razoes[i], menor ) ) > 1 ) { menor = razoes[i]; indice = i; } } } return indice; } 
public void secondOrderPositionUpdate ( double dt, Vector3D force ) { position = Vector3D.vectorAddition ( position, velocity.scalarMultiply ( dt ) ) ; position = Vector3D.vectorAddition ( position, force.scalarMultiply ( ( ( java.lang.Math.pow ( dt, 2 ) ) / ( ( mass ) * 2 ) ) ) ) ; } 
public static java.io.File findExe ( java.io.File root, java.lang.String exe ) { for ( java.io.File file : org.apache.commons.io.FileUtils.listFiles ( root, null, true ) ) if ( ( ( file.length () ) >= 1 ) && ( file.getName () .equalsIgnoreCase ( exe ) ) ) return file; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } 
public void nextPage () { if ( ( ! ( entryWrapperMap.asMap () .isEmpty () ) ) && ( ( entryPage ) != ( ( entryWrapperMap.asMap () .size () ) - 1 ) ) ) ( entryPage ) ++; } 
public boolean isSafe ( int row, int col ) { if ( ( col >= 0 ) && ( ( ( row < ( ( rows ) - 3 ) ) && ( col < ( ( cols ) - 3 ) ) ) && ( row >= 0 ) ) ) { return true; } return false; } 
private java.lang.String loadShader ( java.lang.String name ) { cub3d.file.main.FileAPI api = new cub3d.file.main.FileAPI ( name ) ; java.lang.String s = ""; try { cub3d.file.reader.BasicReader br = new cub3d.file.reader.BasicReader ( api.getReader () ) ; java.lang.String line; while ( null != ( line = br.readLine () ) ) s += line; } catch ( java.lang.Exception e ) { e.printStackTrace () ; } return s; } 
private int getManhattan ( int row, int col, int point ) { if ( 0 == point ) return 0; int rowP = point / ( dim ) ; int colP = point - ( rowP * ( dim ) ) ; return ( java.lang.Math.abs ( ( row - rowP ) ) ) + ( java.lang.Math.abs ( ( col - colP ) ) ) ; } 
@ org.junit.Test ( expected = org.corpus_tools.salt.exceptions.SaltResourceException.class ) public void testAbsentSaltResource () throws java.io.IOException { java.lang.String inputFilePath = "11299.salt" + ( ( ( ( ( ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.INPUT_FOLDER ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "pcc2_absent_resource" ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "pcc2" ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) ; org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI.createFileURI ( inputFilePath ) ; @java.lang.SuppressWarnings ( value = "unused" ) org.corpus_tools.salt.util.VisJsVisualizer visJsVisualizer = new org.corpus_tools.salt.util.VisJsVisualizer ( uri ) ; } 
public static double[] rexp ( int count, double lambda ) { double[] result = new double[count]; double current = 0; for ( int i = 0; count > i; i++ ) { current = ( ( -1 ) * lambda ) * ( java.lang.Math.log ( ( 1 - ( java.lang.Math.random () ) ) ) ) ; result[i] = current; } return result; } 
private void displayNumberOfProcessedLearningContents ( java.util.Map<de.saschafeldmann.adesso.master.thesis.elearningimport.model.LearningContent, java.util.List<de.saschafeldmann.adesso.master.thesis.detection.model.api.Concept>> learningContents ) { setFinishedLabel () ; finishedLabel.setCaption ( ( " ) " + ( ( ( finishedLabel.getCaption () ) + " ( " ) + ( learningContents.size () ) ) ) ) ; reset () ; } 
private boolean isValidDigitFields () { boolean isValid = true; if ( com.zhour.utils.Utility.isValueNullOrEmpty ( com.zhour.fragments.AlienCarFragment.et_vehicle_number.getText () .toString () ) ) { com.zhour.utils.Utility.setSnackBar ( mParent, com.zhour.fragments.AlienCarFragment.et_vehicle_number, "Please write code" ) ; isValid = false; } else if ( 4 != ( com.zhour.fragments.AlienCarFragment.et_vehicle_number.getText () .toString () .length () ) ) { com.zhour.utils.Utility.setSnackBar ( mParent, com.zhour.fragments.AlienCarFragment.et_vehicle_number, "Code must be 4 digit" ) ; isValid = false; } return isValid; } 
@ java.lang.Override protected void done () { try { get () ; } catch ( java.lang.InterruptedException ignore ) { } catch ( java.util.concurrent.ExecutionException e ) { e.printStackTrace () ; } _modelSelection.put ( selected, 0 ) ; if ( selected == ( _titleList.getSelectedValue () ) ) _recordingTable.getSelectionModel () .setSelectionInterval ( 0, _modelSelection.get ( selected ) ) ; _recordingTable.setColumnSelectionInterval ( 0, 0 ) ; } 
@ java.lang.Override public co.cask.cdap.data2.queue.DequeueResult<byte[]> dequeue ( int maxBatchSize ) throws java.io.IOException { co.cask.cdap.data2.queue.DequeueResult<byte[]> result = performDequeue ( maxBatchSize ) ; if ( null != ( scanStartRow ) ) { if ( ! ( consumingEntries.isEmpty () ) ) { byte[] floorKey = consumingEntries.floorKey ( scanStartRow ) ; if ( floorKey != null ) { updateStartRow ( floorKey ) ; } } else { updateStartRow ( scanStartRow ) ; } } return result; } 
public void computeSegments () { int maxX = ( graph.dimX () ) - 1; int maxY = ( graph.dimY () ) - 1; for ( int currentY = maxY - 1; 0 <= currentY; currentY-- ) { currentWindow = sbr.Range.TwoDimensionalRange ( 0, maxX, currentY, maxY ) ; computeSegmentsInRange () ; for ( sbr.Segment seg : segments ) assert ! ( seg.getLinks () .isEmpty () ) ; } } 
@ java.lang.Override public void onBackPressed () { if ( ( databaseLayout.onBackPressed () ) && ( ( databaseLayout ) != null ) ) { return; } if ( ( ( options ) != null ) && ( options.isClosable () ) ) { android.content.Intent intent = new android.content.Intent ( Lock.CANCELED_ACTION ) ; android.support.v4.content.LocalBroadcastManager.getInstance ( this ) .sendBroadcast ( intent ) ; super.onBackPressed () ; } } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { android.util.Log.d ( "NotesFragment", ( query + "Submitted query" ) ) ; java.lang.String searchQuery = ( ( ( ( ( "SELECT * FROM " + ( HandbookContract.NotificationEntry.TABLE_NAME ) ) + " where " ) + ( HandbookContract.NotificationEntry.COLUMN_DETAIL ) ) + " like \'%" ) + query ) + "%\'"; cursor = db.rawQuery ( searchQuery, null ) ; mAdapter = new com.myapp.handbook.adapter.MyRecyclerAdapter ( getContext () , cursor ) ; mRecyclerView.setAdapter ( mAdapter ) ; searchView.clearFocus () ; return true; } 
public void onClick ( android.view.View view ) { if ( true == ( AnswerABoolean ) ) { AnswerAButton.setBackgroundColor ( getResources () .getColor ( R.color.goodAnswer ) ) ; android.os.SystemClock.sleep ( 4000 ) ; incrementResultForGoodAnswer () ; } else { AnswerAButton.setBackgroundColor ( getResources () .getColor ( R.color.badAnswer ) ) ; findTHeRightAnswer () ; } } 
private java.lang.String correctDate ( java.lang.String uncDate ) { java.lang.String[] splitDate = uncDate.split ( "/" ) ; java.lang.String year = splitDate[0]; java.lang.String month = splitDate[1]; java.lang.String day = splitDate[2]; return day + ( ( ( year + "-" ) + month ) + "-" ) ; } 
private boolean contains ( KdTree.Node node, edu.princeton.cs.algs4.Point2D p, boolean orientX ) { if ( null == node ) return false; int cmp = KdTree.compare ( p, node.p, orientX ) ; if ( cmp < 0 ) return contains ( node.lb, p, ( !orientX ) ) ; else if ( cmp > 0 ) return contains ( node.rt, p, ( !orientX ) ) ; else return node.p.equals ( p ) ; } 
void reload () { if ( mActivity.TWO_PLAYER_GAME () ) { if ( 0 == ( mPlayerButtonList.size () ) ) { createButtonsPlayerList () ; } else { for ( int i = 0; i < ( mActivity.game.size () ) ; i++ ) { mPlayerButtonList.get ( i ) .reload ( mActivity.game.getPlayer ( i ) ) ; } } } } 
public boolean isEndNode ( RaceAI.AI.Node node ) { if ( ( ( this.endNode.y ) <= ( node.y ) ) && ( ( this.endNode.x ) == ( node.x ) ) ) return true; else return false; } 
public void printAllCustomerInformation () { java.lang.System.out.println ( ( " " + ( ( ( ( ( ( ( ( ( ( ( this.CUSTOMER_ID ) + " " ) + ( this.PASSWORD ) ) + " " ) + ( this.NAME ) ) + " " ) + ( this.getAge () ) ) + " " ) + ( this.getCreditScore () ) ) + " " ) + ( this.getChexSystemsScore () ) ) ) ) ; this.printAccountInformation () ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public com.datastax.driver.core.TypeCodec getSerializer ( java.lang.Class<? extends com.datastax.driver.core.TypeCodec> serializerClass, java.lang.Class valueClass ) { if ( ( valueClass.getClass () .isEnum () ) && ( valueClass != null ) ) { return new com.appmetr.hercules.serializers.EnumSerializer ( valueClass.getClass () ) ; } if ( serializerClass != null ) { return tryToCreateObject ( serializerClass, valueClass ) ; } else { return getSerializer ( valueClass ) ; } } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { r.setDrawBoundingBox ( false ) ; if ( ( cs132.instructions.Shape.PENCIL ) == ( r.getConfig () .getShape () ) ) { prevMouseLocation = mouseLocation; r.setDrawShape ( false ) ; dragStart = true; } else { r.setDrawShape ( true ) ; } r.repaint () ; } 
@ java.lang.Override protected void onStop () { mGoogleApiClient.disconnect () ; lineShape.add ( mPolyline ) ; if ( ( ( lineShape.size () ) > 1 ) && ( ( lineShape ) != null ) ) { java.lang.String geoJsonString = edu.uw.longt8.geopaint.GeoJsonConverter.convertToGeoJson ( lineShape ) ; new edu.uw.longt8.geopaint.MapsActivity.SaveState () .execute ( geoJsonString ) ; } super.onStop () ; } 
@ java.lang.Override public void actOnBuildingChange ( buildings.Building building, boolean remove, boolean clickedOn ) { if ( ( !clickedOn ) && ( !remove ) ) { addToView ( building ) ; removePlaceTexture () ; } else if ( !clickedOn ) removeFromView ( building.getSpriteAdapter () ) ; else if ( remove && clickedOn ) { removeFromView ( building.getSpriteAdapter () ) ; removePlaceTexture () ; } } 
public org.apollo.game.model.Position fromDeltas ( int deltaX, int deltaY, int deltaZ ) { return new org.apollo.game.model.Position ( ( deltaX + ( getX () ) ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } 
private void setupEnvironment () { org.arquillian.cube.kubernetes.api.Logger log = session.getLogger () ; log.info ( ( ( configuration.getEnvironmentSetupScriptUrl () ) + "Executing environment setup script from:" ) ) ; try { org.arquillian.cube.kubernetes.impl.utils.ProcessUtil.runCommand ( log, configuration.getEnvironmentSetupScriptUrl () , java.util.Collections.emptyList () , true ) ; } catch ( java.io.IOException ex ) { throw new java.lang.RuntimeException ( ex ) ; } } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent ev ) { if ( isExpanded () ) { return false; } android.util.Log.e ( com.example.tt.fragments.widget.CurveLayout.TAG, ( ( currentX ) + "BottomSheet onTouchEvent: " ) ) ; currentX = ev.getRawX () ; sheetDragHelper.processTouchEvent ( ev ) ; if ( ( sheetDragHelper.getCapturedView () ) != null ) { return true; } return super.onTouchEvent ( ev ) ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object object ) { if ( object == ( this ) ) { return true; } if ( ( object != null ) && ( ( getClass () ) != ( object.getClass () ) ) ) { @java.lang.SuppressWarnings ( value = "rawtypes" ) final com.javacreed.api.domain.objects.DomainObject other = ( ( com.javacreed.api.domain.objects.DomainObject ) ( object ) ) ; return value.equals ( other.value ) ; } return false; } 
private int getAnimatedAmount () { if ( ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK ) >= ( this.tickRemaining ) ) return this.tickRemaining; else if ( ( this.tickRemaining ) >= ( ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.OPEN_DURATION ) - ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK ) ) ) return ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK ) - ( this.tickRemaining ) ; else return com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK; } 
public void xor ( int mask ) { int res = ( value ) ^ ( mask & 8388607 ) ; if ( ( ( ( mask & 8388608 ) == 0 ) && ( ( ( value ) & -2147483648 ) != 0 ) ) || ( ( ( mask & 8388608 ) != 0 ) && ( ( ( value ) & -2147483648 ) == 0 ) ) ) { res = -res; } value = res; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { if ( ( resultCode == ( RESULT_OK ) ) && ( requestCode == ( MyGlobalVars.REQUEST_IMAGE_CAPTURE ) ) ) { android.os.Bundle extras = data.getExtras () ; android.graphics.Bitmap imageBitmap = ( ( android.graphics.Bitmap ) ( extras.get ( "data" ) ) ) ; addImageToView ( imageBitmap ) ; MediaStore.Images.Media.insertImage ( getContentResolver () , imageBitmap, "", "Starcraft II" ) ; } } 
public int colContains ( int col, int num ) { int count = 0; for ( int o = 0; 9 > o; o++ ) { if ( ( this.grid[o][col].value ) == num ) count++; } return count; } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( java.awt.event.KeyEvent.VK_ESCAPE ) == ( e.getKeyCode () ) ) { if ( ( promptMsg ) != null ) { promptMsg = null; repaint () ; return; } hasFinished = canceled = true; org.sikuli.basics.Debug.log ( 3, "CapturePrompt: aborted using key ESC" ) ; setVisible ( false ) ; notifyObserver () ; } } 
public void unlockScreen () { android.util.Log.v ( "LOCK_TEST", "unlockScreen () " ) ; android.util.Log.v ( "LOCK_TEST", ( ( this.masterActivity.getLocalClassName () ) + "unlockScreen () " ) ) ; this.pinView.setVisibility ( 8 ) ; this.mZipperLock.DestroyBitmaps () ; this.masterActivity.finish () ; } 
public static <T extends net.minecraft.item.Item> T getItemAs ( net.minecraft.item.ItemStack itemStack, java.lang.Class<T> itemClass ) { return null != ( itemStack.getItem () ) ? itemClass.isInstance ( itemStack.getItem () ) ? itemClass.cast ( itemStack.getItem () ) : null : null; } 
public boolean isUpToDate ( fr.mvanbesien.yws.core.WeatherData weatherData ) { if ( null == weatherData ) { return false; } if ( ( ( weatherData.getPubDate () .getTime () ) + ( weatherData.getTtl () ) ) < ( java.lang.System.currentTimeMillis () ) ) { if ( ( ( weatherData.getLastBuildDate () .getTime () ) + ( ( 15 * 60 ) * 1000 ) ) < ( java.lang.System.currentTimeMillis () ) ) { return true; } } return false; } 
private double calculateHeight ( double alpha, double betta, double a ) { double h = roundNumber ( ( a / ( java.lang.Math.tan ( java.lang.Math.toRadians ( alpha ) ) ) ) , 2 ) ; double h1 = roundNumber ( ( ( java.lang.Math.tan ( java.lang.Math.toRadians ( betta ) ) ) * a ) , 2 ) ; return h + h1; } 
private static void noEL ( java.lang.String nm, java.lang.String val, org.zkoss.idom.Item item ) throws org.zkoss.zk.ui.UiException { if ( ( ( val.indexOf ( "${" ) ) >= 0 ) && ( val != null ) ) throw new org.zkoss.zk.ui.UiException ( org.zkoss.zk.ui.metainfo.Parser.message ( ( nm + " does not support EL expressions" ) , item ) ) ; } 
public void selectCategory ( com.sammyer.yahtzee.RollCategory category, com.sammyer.yahtzee.DiceRoll dice ) { if ( ( category.matches ( dice ) ) && ( category == ( RollTypes.yahtzee ) ) ) hasYahtzee = true; if ( isNumberRoll ( category ) ) numberRollScore += category.getPointsScored ( dice ) ; totalScore += getPointsScored ( category, dice ) ; categoriesLeft.remove ( category ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database, categoriesLeft ) ; } 
private java.lang.Boolean validatePartB ( java.lang.Boolean error, java.lang.Double partB, java.lang.Integer totalPartCount, java.lang.Integer partBMax, org.ums.services.academic.CourseRegType regType ) { if ( ( partB > partBMax ) && ( totalPartCount == 2 ) ) { error = java.lang.Boolean.TRUE; } if ( ( totalPartCount == 1 ) && ( partB > 0 ) ) { error = java.lang.Boolean.TRUE; } return error; } 
private void gotLSAUpdateMsg ( socs.network.message.Packet packet ) { java.lang.System.out.println ( ( ( packet.simulatedSrcIP ) + "received LSUPDATE from " ) ) ; socs.network.node.LinkStateDatabase db = this.linkStateDatabase; for ( socs.network.message.LSA lsa : packet.lsaArray ) { try { boolean newLSA = db.updateLSA ( lsa ) ; if ( !newLSA ) { continue; } else { socs.network.node.Link linkOverWhichWeReceivedLSA = mapIpLink.get ( packet.simulatedSrcIP ) ; forwardToNeighbors ( linkOverWhichWeReceivedLSA, lsa ) ; } } catch ( java.lang.Exception e ) { java.lang.System.err.println ( "could not update LinkStateDatabase" ) ; e.printStackTrace () ; } } } 
private static int upSituation () { if ( ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.lowerAchivedDifficulty ) != null ) || ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty.equals ( Preference.ADVANCE ) ) ) { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentUserProficiency = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_END; } else { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.upperAchivedDifficulty = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty; com.hedspi.hoangviet.eslrecom.helpers.TestHelper.upgradeLevel () ; com.hedspi.hoangviet.eslrecom.helpers.TestHelper.resetProperties () ; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_CONTINUE; } } 
@ java.lang.Override public boolean exists () { boolean exists = super.exists () ; if ( !exists ) { org.eclipse.emf.ecore.EObject input = getInput ( false ) ; if ( null != input ) { org.eclipse.emf.ecore.resource.Resource resource = input.eResource () ; if ( resource != null ) { exists = resource.getResourceSet () .getURIConverter () .exists ( resource.getURI () , null ) ; } } } return exists; } 
public void printTree ( DataStructure.RBTNode<T> node ) { if ( ( nil ) == node ) { return; } printTree ( node.left ) ; java.lang.System.out.print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; } 
@ java.lang.Override public void run () { while ( true ) { if ( ( ( freeLaneList = domain.dao.HibernateGeneric.getFreeLanes ( 1 ) ) != null ) && ( ( activePlaneList.size () ) > 0 ) ) { simulator.PlaneThread plane = activePlaneList.get ( 0 ) ; plane.setLane ( freeLaneList.get ( 0 ) ) ; activePlaneList.remove ( plane ) ; plane.givePermission () ; } } } 
public void confirmSeat ( int confirmationTime, int departureTime ) throws asgn2Passengers.PassengerException { if ( ( departureTime < confirmationTime ) || ( ( ( ( this.isConfirmed () ) || ( this.isRefused () ) ) || ( this.isFlown () ) ) || ( confirmationTime < 0 ) ) ) { throw new asgn2Passengers.PassengerException ( "Can't confirm seat for passenger." ) ; } this.newState = false; this.inQueue = false; this.confirmed = true; this.confirmationTime = confirmationTime; this.departureTime = departureTime; } 
@ java.lang.Override public eu.einfracentral.domain.aai.User activate ( java.lang.String id ) { eu.einfracentral.domain.aai.User ret = reveal ( get ( id ) ) ; if ( null == ( ret.getJoinDate () ) ) { ret.setJoinDate ( new java.util.Date () .toString () ) ; } return ret; } 
@ java.lang.Override protected void onActivityResult ( int requestCode, int resultCode, android.content.Intent data ) { super.onActivityResult ( requestCode, resultCode, data ) ; if ( ( resultCode != ( android.app.Activity.RESULT_OK ) ) || ( requestCode != ( EditFragment.REQUEST_TAKE_PHOTO ) ) ) return; com.example.jbt.omdb.EditFragment editFrag = mFragmentHelper.getEditFragmentIfExists () ; if ( editFrag != null ) editFrag.onCameraActivityResult () ; } 
