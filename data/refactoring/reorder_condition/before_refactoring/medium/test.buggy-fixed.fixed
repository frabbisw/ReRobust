public synchronized void remove ( final java.lang.String pathname ) { it.grid.storm.filesystem.AclLockPoolElement e = __map . get ( pathname ) ; if ( null != e ) { int count = e . decrementUsageCountAndGetIt () ; if ( 0 >= count ) __map . remove ( pathname ) ; } } 
public static java.util.Collection < java.lang.String > getToolString () { java.util.Collection < java.lang.String > toolStr = Main.pref . getCollection ( "toolbar" , java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ) ; if ( ( toolStr == null ) || ( ( toolStr . size () ) == 0 ) ) { toolStr = java.util.Arrays . asList ( org.openstreetmap.josm.gui.preferences.ToolbarPreferences.deftoolbar ) ; } return toolStr ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_searchable ) ; actionbar = getSupportActionBar () ; if ( ( actionbar ) != null ) { actionbar . setTitle ( "搜尋" ) ; actionbar . setDisplayHomeAsUpEnabled ( true ) ; } if ( ( getIntent () ) != null ) { handleIntent ( getIntent () ) ; } } 
private void validate () { java.lang.String valueAsString = dateBox . getTextBox () . getValue () ; if ( com.google.common.base.Strings . isNullOrEmpty ( valueAsString ) ) { valueUpdater . update ( null ) ; } else { java.util.Date dateValue = this . dateBox . getFormat () . parse ( dateBox , valueAsString , false ) ; if ( dateValue == null ) { valueUpdater . onInvalid ( I18N.MESSAGES . dateFieldInvalidValue ( org.activityinfo.ui.client.component.form.field.DateFieldWidget.FORMAT ) ) ; } else { valueUpdater . update ( new org.activityinfo.model.type.time.LocalDate ( dateValue ) ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( singleShot ) mShotStateStore . storeShot () ; mShowCaseView . dismiss () ; mShowCaseView = null ; info . run () ; if ( ( v . getId () ) == ( R.id.btn_end ) ) { showNext ( singleShot ) ; } else if ( ( v . getId () ) == ( R.id.btn_finalize ) ) { mShotStateStore . finished () ; mShowcaseInfos . clear () ; } } 
@ java.lang.Override protected void onResume () { if ( onCreate ) { onCreate = false ; } else { if ( ( mPlayer ) != null ) { mPlayer . resumePlayer () ; } com.kaltura.playersdk.utils.LogUtils . LOGD ( com.kaltura.adplayerdemo.MainActivity.TAG , "on Resume called for player" ) ; if ( ( mAdPlayer ) != null ) { mAdPlayer . moveSurfaceToForeground () ; mAdPlayer . play () ; } } super . onResume () ; com.kaltura.adplayerdemo.NetworkChangeReceiver . getObservable () . addObserver ( this ) ; } 
private void createPages () { if ( ( moviesView ) == null ) { moviesView = new husaynhakeem.io.popularmovies.features.movies.MoviesView () ; husaynhakeem.io.popularmovies.features.movies.MoviesPresenter moviesPresenter = new husaynhakeem.io.popularmovies.features.movies.MoviesPresenter () ; moviesView . setPresenter ( moviesPresenter ) ; } if ( ( favoritesView ) == null ) { favoritesView = new husaynhakeem.io.popularmovies.features.favorites.FavoritesView () ; husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter favoritesPresenter = new husaynhakeem.io.popularmovies.features.favorites.FavoritesPresenter () ; favoritesView . setPresenter ( favoritesPresenter ) ; } } 
public static boolean isInteger ( java.lang.String str ) { if ( ( str . length () ) == 0 ) { return false ; } int i = - 1 ; while ( ( ++ i ) < ( str . length () ) ) { char c = str . charAt ( i ) ; if ( ( c < '0' ) || ( c > '9' ) ) { return false ; } } return true ; } 
public void task ( android.database.sqlite.SQLiteDatabase db ) { if ( edit == null ) { dbh.routes . insert ( r , db ) ; } else { dbh.routes . update ( r , ( ( ( transcend.rockeeper.data.RouteContract._ID ) + "=" ) + ( edit . get ( RouteContract._ID ) ) ) , null , db ) ; } } 
protected java.lang.String makeRequest ( java.lang.String endpoint , java.lang.String queryString ) throws java.lang.Exception { java.net.URI uri = org.apache.http.client.utils.URIUtils . createURI ( uk.ac.jorum.integration.RestApiBaseTest.apiProtocol , uk.ac.jorum.integration.RestApiBaseTest.apiHost , uk.ac.jorum.integration.RestApiBaseTest.apiPort , ( ( uk.ac.jorum.integration.RestApiBaseTest.apiMountPoint ) + endpoint ) , queryString , null ) ; org.apache.http.client.methods.HttpGet httpget = new org.apache.http.client.methods.HttpGet ( uri ) ; httpget . addHeader ( "Accept" , "application/json" ) ; org.apache.http.client.ResponseHandler < java.lang.String > responseHandler = new org.apache.http.impl.client.BasicResponseHandler () ; return client . execute ( httpget , responseHandler ) ; } 
@ java.lang.Override public twitter4j.IDs getFollowersIDs ( long arg0 , long arg1 ) throws twitter4j.TwitterException { if ( ( limits [ 2 ] ) == 14 ) { SocialNetworkAnalysis.TwitterWrapper.timelimited [ 0 ] = new java.util.Date () ; limit . reached () ; limits [ 2 ] = 0 ; } java.lang.System.out . print ( "limits in getFollowersIDs: " ) ; for ( int limit : limits ) { java.lang.System.out . print ( ( limit + " " ) ) ; } java.lang.System.out . println () ; ( limits [ 2 ] ) ++ ; return t . getFollowersIDs ( arg0 , arg1 ) ; } 
private com.emc.storageos.isilon.restapi.IsilonExport getIsilonExport ( com.emc.storageos.isilon.restapi.IsilonApi isilonApi , java.lang.Integer expId , java.lang.String zoneName ) { com.emc.storageos.isilon.restapi.IsilonExport exp = null ; try { _log . debug ( "call getIsilonExport for {} " , expId ) ; if ( expId != null ) { exp = isilonApi . getExport ( expId . toString () , zoneName ) ; _log . debug ( "call getIsilonExport {}" , exp . toString () ) ; } } catch ( java.lang.Exception e ) { _log . error ( "Exception while getting Export for {}" , expId ) ; } return exp ; } 
public void draw ( java.awt.Graphics2D g2 , boolean filled ) { java.awt.geom.Rectangle2D.Double rec = new java.awt.geom.Rectangle2D.Double ( getCenter () . getX () , getCenter () . getY () , getRadius () , getRadius () ) ; g2 . setColor ( getColor () ) ; if ( filled == true ) { g2 . draw ( rec ) ; g2 . fill ( rec ) ; } else { g2 . draw ( rec ) ; } } 
public java.util.List find ( java.lang.String nativeQuery , java.util.List < java.lang.String > relations , java.lang.Class clazz ) { java.util.List < java.lang.Object [] > result = new java.util.ArrayList < java.lang.Object [] > () ; if ( ( s ) == null ) { s = sf . openStatelessSession () ; s . beginTransaction () ; } org.hibernate.SQLQuery q = s . createSQLQuery ( nativeQuery ) . addEntity ( clazz ) ; for ( java.lang.String r : relations ) { q . addScalar ( r ) ; } return q . list () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_detail ) ; if ( savedInstanceState == null ) { android.os.Bundle args = new android.os.Bundle () ; args . putParcelable ( DetailFragment.DETAIL_URI , getIntent () . getData () ) ; com.odytrice.popularmovies.fragments.DetailFragment fragment = new com.odytrice.popularmovies.fragments.DetailFragment () ; fragment . setArguments ( args ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.movie_detail_container , fragment ) . commit () ; } } 
public void updateTimeTaken () { this . experienceTime = ( this . BASE_TIME ) / ( ( ( this . level ) / 10 ) + 1 ) ; this . repairTime = ( this . experienceTime ) * 2 ; if ( ( this . experienceTime ) < 0.5 ) { this . experienceTime = ( ( float ) ( 0.5 ) ) ; } if ( ( this . repairTime ) < 1.0 ) { this . repairTime = ( ( float ) ( 1.0 ) ) ; } } 
private void loginToFacebookIfNeeded ( java.util.List < amai.org.conventions.model.Update > updates ) { initializeFacebookLoginButton () ; loginLayout . setVisibility ( View.GONE ) ; com.facebook.AccessToken accessToken = com.facebook.AccessToken . getCurrentAccessToken () ; if ( ( accessToken != null ) && ( ! ( accessToken . isExpired () ) ) ) { retrieveUpdatesListFromFacebookApi ( accessToken ) ; } else { com.facebook.login.LoginManager . getInstance () . logInWithReadPermissions ( this , java.util.Collections . singletonList ( "public_profile" ) ) ; } } 
public static de.zib.vold.common.Key buildkey ( java.util.List < java.lang.String > key ) throws java.lang.IllegalArgumentException { if ( ( key . size () ) < 3 ) { throw new java.lang.IllegalArgumentException ( ( ( "Tried to build a key out of " + ( key . size () ) ) + " arguments. At leest three (scope, type, keyname) of them are necessary." ) ) ; } return new de.zib.vold.common.Key ( key . get ( 0 ) , key . get ( 1 ) , key . get ( 2 ) ) ; } 
public boolean monsterExist ( game.zork.Monster monster , java.util.Map < game.zork.GameMap.Coordination , java.util.ArrayList < java.lang.Object > > mapLevel ) { game.zork.GameMap.Coordination currentPosition = getCurrentPosition () ; for ( java.lang.Object i : mapLevel . get ( currentPosition ) ) { if ( ( i instanceof game.zork.Monster ) && ( ( ( ( game.zork.Monster ) ( i ) ) . getName () ) == ( monster . getName () ) ) ) { return true ; } } return false ; } 
public com.intplus.shoppingspace.model.Shop getShopById ( int sid ) { com.intplus.shoppingspace.model.Shop currentShop = null ; try { com.intplus.shoppingspace.controller.AppController.shopDatabase = new com.intplus.shoppingspace.model.ShopDatabase ( this . activity ) ; com.intplus.shoppingspace.controller.AppController.shopDatabase . open () ; currentShop = com.intplus.shoppingspace.controller.AppController.shopDatabase.shopsDao . fetchShopBySid ( sid ) ; } catch ( java.lang.Exception e ) { android.util.Log . e ( com.intplus.shoppingspace.controller.AppController.APPLOG , ( ( "Shop with given id:" + sid ) + "is not found" ) ) ; } finally { com.intplus.shoppingspace.controller.AppController.shopDatabase . close () ; android.util.Log . e ( com.intplus.shoppingspace.controller.AppController.APPLOG , "Db is closed" ) ; } return currentShop ; } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound tag ) { super . readFromNBT ( tag ) ; this . isDouble = tag . getBoolean ( "isDouble" ) ; this . isTop = tag . getBoolean ( "isTop" ) ; if ( isDouble ) { capacity = 2 * ( originalCapacity ) ; } else capacity = originalCapacity ; this . tank . setCapacity ( capacity ) ; } 
public void onAdminJoin ( org.bukkit.entity.Player player , boolean fromEvent ) { staff . add ( player ) ; if ( fromEvent ) { final java.util.ArrayList < java.lang.String > lines = latestToLines () ; if ( lines != null ) for ( java.lang.String line : lines ) if ( line != null ) player . sendMessage ( ru.simsonic.rscMinecraftLibrary.Bukkit.GenericChatCodes . processStringStatic ( ( ( ru.simsonic.rscFirstJoinDemo.API.Settings.chatPrefix ) + line ) ) ) ; } } 
@ java.lang.Override public int compare ( ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg0 , ge.edu.freeuni.sdp.xo.achiev.FakeDBObject arg1 ) { int scoreFirst = arg0 . getScore () ; int scoreSecond = arg1 . getScore () ; if ( scoreFirst == scoreSecond ) return 0 ; else if ( scoreFirst > scoreSecond ) return - 1 ; return 1 ; } 
private void clearTheCurrentGame () { for ( int i = 0 ; i < 3 ; i ++ ) { for ( int j = 0 ; j < 3 ; j ++ ) { application.TicTacToeApp.board [ i ] [ j ] . clear () ; } } application.TicTacToeApp.neadNewGame = false ; application.TicTacToeApp.playable = true ; } 
public void focusOut ( org.sbolstandard.core2.ComponentDefinition comp ) throws org.sbolstandard.core2.SBOLValidationException { if ( ( canvasCD ) == comp ) { return; } updateCanvasCD () ; org.sbolstandard.core2.ComponentDefinition parentComponent = parentCDs . pop () ; while ( ! ( parentComponent . equals ( comp ) ) ) { parentComponent = parentCDs . pop () ; } load ( parentComponent ) ; eventBus . publish ( new com.clarkparsia.sbol.editor.event.FocusOutEvent ( this , parentComponent ) ) ; } 
public static int differenceInDays ( java.util.Date firstDate , java.util.Date secondDate ) { long difference = ( firstDate . getTime () ) - ( secondDate . getTime () ) ; return ( ( int ) ( difference ) ) / ( ( ( 24 * 60 ) * 60 ) * 1000 ) ; } 
public int getUuidIndex ( java.lang.String uuid ) { if ( uuid . equals ( "0" ) ) return 0 ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { try { java.lang.String itemuuid = list . get ( i ) . getString ( "uuid" ) ; if ( uuid . equals ( itemuuid ) ) return i + 1 ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } } return 0 ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) throws java.lang.NullPointerException { boolean isEqual = false ; if ( obj != null ) { isEqual = ( ( obj . getClass () ) != ( dss.lingvo.hflts.TTHFLTS . class ) ) && ( java.util.Arrays . equals ( this . terms , ( ( dss.lingvo.hflts.TTHFLTS ) ( obj ) ) . getTerms () ) ) ; } return isEqual ; } 
@ java.lang.Override public void onItemSelected ( java.lang.String ean ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( BookDetail.EAN_KEY , ean ) ; it.jaschke.alexandria.BookDetail fragment = new it.jaschke.alexandria.BookDetail () ; fragment . setArguments ( args ) ; int id = R.id.container ; if ( ( findViewById ( R.id.right_container ) ) != null ) { id = R.id.right_container ; } getSupportFragmentManager () . beginTransaction () . replace ( id , fragment ) . addToBackStack ( null ) . commit () ; } 
@ java.lang.Override void appendOp ( java.lang.String op , boolean binOp ) { if ( binOp ) { if ( ( ( getLastChar () ) != ' ' ) && ( ( op . charAt ( 0 ) ) != ',' ) ) { append ( " " ) ; } append ( op ) ; append ( " " ) ; } else { append ( op ) ; } } 
private static double getScoreForDocumentId ( int documentId , org.terrier.querying.SearchRequest srq ) { org.terrier.matching.ResultSet rs = srq . getResultSet () ; if ( rs == null ) { return 0 ; } int [] docIds = rs . getDocids () ; double [] scores = rs . getScores () ; for ( int i = 0 ; i < ( docIds.length ) ; i ++ ) { if ( ( docIds [ i ] ) == documentId ) { return scores [ i ] ; } } return 0 ; } 
private void updateUI () { if ( ( mAdapter ) == null ) { mAdapter = new com.payforward.androidapp.post.CategoryActivity.CustomAdapter ( this , com.payforward.androidapp.R.layout.category , categoryList ) ; mCategoryList . setAdapter ( mAdapter ) ; } else { mAdapter . clear () ; mAdapter . addAll ( categoryList ) ; mAdapter . notifyDataSetChanged () ; } } 
public static int fastRecursiveExponentiationModulo ( int base , int exponent , int mod ) { if ( exponent == 0 ) return 1 ; if ( exponent == 1 ) return base ; final int resultOnHalfExponent = com.jwetherell.algorithms.mathematics.Exponentiation . fastRecursiveExponentiationModulo ( base , ( exponent / 2 ) , mod ) ; if ( ( exponent % 2 ) == 0 ) return ( resultOnHalfExponent * resultOnHalfExponent ) % mod ; else return ( ( ( resultOnHalfExponent * resultOnHalfExponent ) % mod ) * base ) % mod ; } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { int markerPosition = markers . indexOf ( marker ) ; selectMarker ( markerPosition ) ; if ( ( listener ) != null ) { if ( isZoomed () ) { listener . onActivityMarkerPressedAtIndex ( markerPosition ) ; } else { listener . onLegMarkerPressedAtIndex ( markerPosition ) ; } } return true ; } 
public void visit ( compiler.phase.seman.FunCall funCall ) { for ( int a = 0 ; a < ( funCall . numArgs () ) ; a ++ ) funCall . arg ( a ) . accept ( this ) ; compiler.phase.seman.Decl decl = attrs.declAttr . get ( funCall ) ; compiler.phase.seman.Typ typ = attrs.typAttr . get ( decl ) ; attrs.typAttr . set ( funCall , ( ( compiler.phase.seman.FunTyp ) ( typ ) ) . resultTyp ) ; } 
public void act () { if ( ( Play.dif ) != 4 ) { checkDif () ; if ( ( ( lose ) == false ) && ( ( getX () ) != 533 ) ) { if ( ( cd ) == 1 ) { i = ( i ) + 1 ; setImage ( ( ( "st" + ( ( i ) % 4 ) ) + ".png" ) ) ; } } ( cd ) ++ ; losing () ; } } 
public void removeLink ( com.aleksey.castlegates.types.GearLink link ) { if ( link == null ) return; link . setRemoved () ; if ( ( link . getGear1 () ) != null ) { link . getGear1 () . setLink ( null ) ; } if ( ( link . getGear2 () ) != null ) { link . getGear2 () . setLink ( null ) ; } this . dataWorker . addChangedLink ( link ) ; } 
public java.lang.String getReps ( android.widget.LinearLayout layout ) { java.lang.String toReturn = "" ; for ( int i = 1 ; i < 6 ; i ++ ) { android.widget.EditText editText = ( ( android.widget.EditText ) ( layout . getChildAt ( i ) ) ) ; java.lang.String text = editText . getText () . toString () ; if ( ! ( text . trim () . equals ( "" ) ) ) { toReturn += text + " " ; } } return toReturn ; } 
public void updateDeploymentPolicyInInformationModel ( org.apache.stratos.autoscaler.pojo.policy.deployment.DeploymentPolicy deploymentPolicy ) throws org.apache.stratos.autoscaler.exception.policy.InvalidPolicyException { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap . containsKey ( deploymentPolicy . getDeploymentPolicyID () ) ) { if ( org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log . isDebugEnabled () ) { org.apache.stratos.autoscaler.pojo.policy.PolicyManager.log . debug ( ( "Updating deployment policy: " + ( deploymentPolicy . getDeploymentPolicyID () ) ) ) ; } org.apache.stratos.autoscaler.pojo.policy.PolicyManager.deploymentPolicyListMap . put ( deploymentPolicy . getDeploymentPolicyID () , deploymentPolicy ) ; } } 
public void setListName ( java.lang.String listName ) { if ( ! ( listNameEditSupported ) ) { throw new java.lang.RuntimeException ( ( "Error: Attempted to edit Channel List name for " + "group that does not support it." ) ) ; } java.lang.String oldListName = this . listName ; this . listName = listName ; if ( ( propSupport ) != null ) { propSupport . firePropertyChange ( "listName" , oldListName , listName ) ; } } 
private synchronized void await ( org.opendaylight.vtn.manager.it.ofmock.impl.FlowTable.TableCond cond , long timeout ) throws java.lang.InterruptedException , java.util.concurrent.TimeoutException { if ( ! ( cond . check () ) ) { long msec = timeout ; long deadline = ( java.lang.System . currentTimeMillis () ) + timeout ; do { wait ( msec ) ; if ( cond . check () ) { return; } msec = deadline - ( java.lang.System . currentTimeMillis () ) ; } while ( msec > 0 ) ; throw new java.util.concurrent.TimeoutException ( cond . getTimeoutError () ) ; } } 
public java.lang.String getAccountsUrl ( java.lang.String deploymentUrl , java.lang.String username ) { if ( deploymentUrl . endsWith ( "/" ) ) { deploymentUrl = deploymentUrl . substring ( 0 , ( ( deploymentUrl . length () ) - 1 ) ) ; } java.lang.String accountsUrl = ( ( deploymentUrl + "/2012-04-24/Accounts/" ) + username ) + "/Supervisor.json" ; return accountsUrl ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String toAdd = commenting . getText () . toString () ; if ( ( toAdd != null ) && ( ! ( toAdd . equals ( "" ) ) ) ) { adapter . add ( toAdd ) ; } commenting . setText ( "" ) ; } 
private java.util.List < java.lang.Runnable > getTasks ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType type ) { if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.LOAD ) ) { return load ; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SAVE ) ) { return save ; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.PLAYER_SETUP ) ) { return playerSetup ; } if ( type == ( de.bananaco.bpermissions.imp.loadmanager.TaskRunnable.TaskType.SERVER ) ) { return server ; } return null ; } 
private boolean checkHorizontal ( int row , int col ) { if ( col <= ( ( board [ 0 ] . length ) - 3 ) ) { if ( ( ( board [ row ] [ col ] ) == ( board [ row ] [ ( col + 1 ) ] ) ) && ( ( board [ row ] [ col ] ) == ( board [ row ] [ ( col + 2 ) ] ) ) ) { java.lang.System.out . println ( "There is a win there" ) ; return true ; } } return false ; } 
public java.lang.String newAccountNumber () { java.lang.String newAccountNum = java.lang.Integer . toString ( java.util.concurrent.ThreadLocalRandom . current () . nextInt ( 100000 , 999999 ) ) ; java.io.File f = new java.io.File ( ( newAccountNum + ".csv" ) ) ; if ( f . exists () ) { newAccountNum = newAccountNumber () ; } return newAccountNum ; } 
private org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion maybeMergeIntoUnion ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion one , org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.AbstractModuleExclusion two ) { if ( one . equals ( two ) ) { return one ; } if ( ( one instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) && ( two instanceof org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ) { return maybeMergeIntoUnion ( ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( one ) ) , ( ( org.gradle.api.internal.artifacts.ivyservice.resolveengine.excludes.IntersectionExclusion ) ( two ) ) ) ; } return null ; } 
@ java.lang.Override public gregtech.api.interfaces.ITexture [] getTexture ( gregtech.api.interfaces.tileentity.IGregTechTileEntity aBaseMetaTileEntity , byte aSide , byte aFacing , byte aColorIndex , boolean aActive , boolean aRedstone ) { return new gregtech.api.interfaces.ITexture [] { Textures.BlockIcons.MACHINE_CASINGS [ mTier ] [ ( aColorIndex + 1 ) ] , aSide != aFacing ? new gregtech.api.objects.GT_RenderedTexture ( Textures.BlockIcons.OVERLAY_TELEPORTER_ACTIVE ) : com.github.technus.tectech.thing.metaTileEntity.single.GT_MetaTileEntity_DebugStructureWriter.MARK } ; } 
private java.lang.Iterable < gameoflife.Cell > allCells () { java.util.List < gameoflife.Cell > allCells = new java.util.ArrayList <> () ; for ( int y = 0 ; y < ( matrix . getHeight () ) ; y ++ ) { for ( int x = 0 ; x < ( matrix . getWidth () ) ; x ++ ) { allCells . add ( new gameoflife.Cell ( y , x , ( - 1 ) ) ) ; } } return allCells ; } 
public java.io.InputStream getInput ( java.lang.String pathname ) throws java.io.FileNotFoundException { org.infinispan.io.GridFile file = ( ( org.infinispan.io.GridFile ) ( getFile ( pathname ) ) ) ; if ( ! ( file . exists () ) ) throw new java.io.FileNotFoundException ( pathname ) ; if ( file . isDirectory () ) { throw new java.io.FileNotFoundException ( ( ( "Cannot read from directory (" + file ) + ")" ) ) ; } return new org.infinispan.io.GridInputStream ( file , data ) ; } 
protected static void isTotpConfigurationRequired ( org.keycloak.models.RealmModel realm , org.keycloak.models.UserModel user ) { for ( org.keycloak.models.RequiredCredentialModel c : realm . getRequiredCredentials () ) { if ( ( c . getType () . equals ( CredentialRepresentation.TOTP ) ) && ( ! ( user . isTotp () ) ) ) { org.keycloak.services.managers.AuthenticationManager.logger . debug ( "User is required to configure totp" ) ; } } } 
public static boolean can_paste ( int x , int y , mudmap2.backend.Layer layer ) { if ( ( ( mudmap2.Mudmap2.copy_places ) == null ) || ( mudmap2.Mudmap2.copy_places . isEmpty () ) ) return false ; if ( ( ( mudmap2.Mudmap2.copy_place_locations ) != null ) && ( layer != null ) ) { for ( mudmap2.Pair < java.lang.Integer , java.lang.Integer > coordinate : mudmap2.Mudmap2.copy_place_locations ) if ( layer . exist ( ( x + ( coordinate.first ) ) , ( y + ( coordinate.second ) ) ) ) return false ; } return true ; } 
public synchronized void stop () { if ( ( connectThread ) != null ) { connectThread . cancel () ; connectThread = null ; } if ( ( connectedThread ) != null ) { connectedThread . cancel () ; connectedThread = null ; } if ( ( acceptThread ) != null ) { acceptThread . cancel () ; acceptThread = null ; } setServiceState ( koshianpan.github.com.pontroller.BluetoothService.STATE_NONE ) ; } 
protected void autoLoad () { if ( ( ( ( _articleId ) != null ) || ( ( _classPK ) != 0 ) ) && ( com.liferay.mobile.screens.context.SessionContext . isLoggedIn () ) ) { try { load () ; } catch ( java.lang.Exception e ) { onWebContentFailure ( this , e ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.addressbook.thorrism.addressbook.Contact contact = createContact () ; if ( contact == null ) android.util.Log . e ( DroidBook.TAG , "Null" ) ; else { com.addressbook.thorrism.addressbook.DroidBook . hideKeyboard ( mCurrentEdit , getApplicationContext () ) ; mBook . addEntry ( contact ) ; new com.addressbook.thorrism.addressbook.CreateContactScreen.SaveTask () . execute () ; } } 
public java.lang.String getMultiVector () { if ( this . multicast ) { java.lang.String ans = "" ; for ( int i = 0 ; i < ( groupSize ) ; i ++ ) ans += ( multicastVector [ i ] ) + " " ; return ans ; } else return "no multi" ; } 
public long getTripStartDateOnSharedPreferences () { mSharedPreferences = this . getPreferences ( Context.MODE_PRIVATE ) ; long value_long = mSharedPreferences . getLong ( getString ( R.string.trip_start_date_tag ) , 0 ) ; if ( value_long > 0 ) { mSPEditor = mSharedPreferences . edit () ; mSPEditor . commit () ; } return value_long ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( isNetworkAvailable () ) { if ( ( mAudioService ) != null ) { mAudioService . executeAction ( Constants.Action.ACTION_PLAY ) ; mAudioService . doStartForeground () ; btnPlay . startAnimation ( playClickAnimation ) ; btnPlay . setImageResource ( ( showPlayButton ? android.R.drawable.ic_media_play : android.R.drawable.ic_media_pause ) ) ; } } else { android.widget.Toast . makeText ( this , getString ( R.string.no_network ) , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( savedInstanceState == null ) || ( ! ( savedInstanceState . containsKey ( "movieList" ) ) ) ) {} else { movieList = savedInstanceState . getParcelableArrayList ( "movieList" ) ; } if ( ( getArguments () ) != null ) {} } 
private void dispatchEventHandler ( EventHandler handler , MouseInfo mouse , boolean isFront ) { assert handler != null ; if ( handler instanceof BaseActor ) { handler . onMouseIn () ; handler . onMouseOut () ; } handler . onMouseDown () ; handler . onMouseUp () ; handler . onMouseClicked () ; handler . onMouseMoved () ; handler . onMouseDragged () ; handler . onMouseDragging () ; } 
public void removeProgress () { if ( ( ( this . listMovies ) != null ) && ( ( this . listMovies . size () ) > 0 ) ) { if ( ( getItem ( ( ( getItemCount () ) - 1 ) ) ) == null ) { this . listMovies . remove ( ( ( getItemCount () ) - 1 ) ) ; notifyItemRemoved ( getItemCount () ) ; } } } 
public calendar.EventProvider newEventProvider ( java.lang.String group_name , int group_id , db.Site site , db.DBConnection db ) { calendar.EventProvider event_provider = new calendar.EventProvider ( group_name ) . setAccessPolicy ( new mosaic.GroupAccessPolicy ( group_id , true , true , true , false ) ) . setEventsAreOwned ( true ) . setEventsCanRepeat ( true ) . setEventsHaveColor ( true ) . setEventsHaveEndTime ( true ) . setEventsHaveStartTime ( true ) . setEventsTable ( ( ( "group_" + group_id ) + "_events" ) ) . setSupportReminders ( site ) ; site . addModule ( event_provider , db ) ; return event_provider ; } 
@ java.lang.Override public void exitReturn_stmt ( MiniCParser.Return_stmtContext ctx ) { java.lang.String s1 ; if ( hasReturnExpr ( ctx ) ) { s1 = newTexts . get ( ctx . expr () ) ; newTexts . put ( ctx , ( ( ( s1 + "\n" ) + ( blank ) ) + "retv" ) ) ; } else { newTexts . put ( ctx , ( ( blank ) + "ret" ) ) ; } } 
private static void setTableFeatureProperty ( org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.Wildcards propType , org.opendaylight.yang.gen.v1.urn.opendaylight.openflow.protocol.rev130731.table.features.properties.grouping.TableFeaturePropertiesBuilder propBuilder ) { java.util.List < org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch > setFieldMatch = null ; org.opendaylight.yang.gen.v1.urn.opendaylight.table.types.rev131026.table.feature.prop.type.table.feature.prop.type.wildcards.WildcardSetfield wildcardSetField = propType . getWildcardSetfield () ; if ( null != wildcardSetField ) { setFieldMatch = wildcardSetField . getSetFieldMatch () ; } org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.TableFeaturesConvertor . setSetFieldTableFeatureProperty ( propBuilder , TableFeaturesPropType.OFPTFPTWILDCARDS , ( setFieldMatch == null ? new java.util.ArrayList < org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.SetFieldMatch > () : setFieldMatch ) ) ; } 
private boolean teamHasSpace ( int userId , int teamId ) { if ( teamId == 0 ) { return true ; } try { se.plushogskolan.casemanagement.model.User user = userRepository . getUserById ( userId ) ; if ( ( user . getTeamId () ) == teamId ) { return true ; } else { return numberOfUsersInTeamLessThanTen ( teamId ) ; } } catch ( se.plushogskolan.casemanagement.exception.RepositoryException e ) { return numberOfUsersInTeamLessThanTen ( teamId ) ; } } 
public boolean touched ( testagent.Agent agent ) { if ( pick ) return false ; double distance = java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( ( ( agent.x ) - ( x ) ) , 2 ) ) + ( java.lang.Math . pow ( ( ( agent.y ) - ( y ) ) , 2 ) ) ) ) ; return distance <= ( ( size ) / ( agentIsSized ? 1 : 2 ) ) ; } 
void setActionNameBox ( int itemType ) { if ( ( _selectionMode ) != ( SelectionMode.USECOMBO ) ) { return; } _comboNameBox = createNameBox ( itemType ) ; if ( ( _comboNameBox ) == null ) { return; } _comboNameBox . setSelectedBeanByName ( _curAction . getDeviceName () ) ; _comboNameBox . addItemListener ( new jmri.jmrit.conditional.NameBoxListener ( _actionNameField ) ) ; _actionComboNamePanel . remove ( 1 ) ; _actionComboNamePanel . add ( _comboNameBox , null , 1 ) ; _namePanel . setVisible ( false ) ; _actionComboNamePanel . setVisible ( true ) ; } 
protected boolean getKeepEditorOnClickDisabledRows ( org.json.JSONObject gridElem ) { java.lang.String keepEditor = gridElem . optString ( "keepEditorOnClickDisabledRows" ) ; if ( ( keepEditor != null ) && ( ( keepEditor . trim () . length () ) > 0 ) ) { return java.lang.Boolean . parseBoolean ( keepEditor ) ; } return false ; } 
private java.util.List < edu.clemson.resolve.AnnotatedModule > parseAndReturnRootModules () { java.util.List < edu.clemson.resolve.AnnotatedModule > modules = new java.util.ArrayList <> () ; for ( java.lang.String e : targetFiles ) { edu.clemson.resolve.AnnotatedModule m = parseModule ( e ) ; if ( m != null ) { modules . add ( m ) ; } } return modules ; } 
private void selectItem ( int position ) { if ( position == ( OPTION_MENU_ADD_PERSON ) ) { android.content.Intent intent = new android.content.Intent ( this , com.six.maitime.ui.flipper.ViewFlipperMainActivity . class ) ; startActivity ( intent ) ; return; } else { replaceFragment ( new com.six.maitime.ui.PersonListFragment () ) ; drawerList . setItemChecked ( position , true ) ; mDrawerLayout . closeDrawer ( drawerList ) ; } } 
public java.lang.Long getSupportId ( java.lang.String literal , java.lang.Long citationId ) throws org.ndexbio.model.exceptions.NdexException { org.ndexbio.common.models.object.network.RawSupport r = new org.ndexbio.common.models.object.network.RawSupport ( literal , ( citationId != null ? citationId . longValue () : - 1 ) ) ; java.lang.Long supportId = this . rawSupportMap . get ( r ) ; if ( supportId != null ) return supportId ; supportId = createSupport ( literal , citationId , null ) ; this . rawSupportMap . put ( r , supportId ) ; return supportId ; } 
@ java.lang.Override public void onMessageReceived ( java.lang.String endpointId , byte [] payload , boolean isReliable ) { android.util.Log . d ( com.team2.android.proctor.ui.AttendanceFragment.TAG , ( "onMessageReceived:" + ( new java.lang.String ( payload ) ) ) ) ; java.lang.String message = new java.lang.String ( payload ) ; attendance = new com.team2.android.proctor.model.input.Attendance () ; attendance . setUserId ( java.lang.Long . parseLong ( message . split ( ":" ) [ 0 ] ) ) ; attendance . setCourseId ( java.lang.Integer . parseInt ( message . split ( ":" ) [ 1 ] ) ) ; new com.team2.android.proctor.ui.AttendanceFragment.TakeAttendanceTask () . execute ( attendance ) ; } 
protected java.time.LocalDate parseStringToDate ( java.lang.String inputDateStr , java.lang.String inputPattern , java.time.chrono.Chronology inputChronology ) { if ( ( inputDateStr != null ) && ( ! ( inputDateStr . isEmpty () ) ) ) { java.util.Locale locale = java.util.Locale . getDefault ( java.util.Locale.Category.FORMAT ) ; java.time.format.DateTimeFormatter inputDateTimeFormatter = new java.time.format.DateTimeFormatterBuilder () . parseLenient () . appendPattern ( inputPattern ) . toFormatter () . withChronology ( inputChronology ) . withDecimalStyle ( java.time.format.DecimalStyle . of ( locale ) ) ; return parseStringToDate ( inputDateStr , inputDateTimeFormatter , inputChronology ) ; } return null ; } 
@ java.lang.Override public void onNext ( T t ) { if ( ( t . contentLength () ) == 0 ) { return; } if ( ( httpCallback ) != null ) { try { this . httpCallback . onResolve ( new com.google.gson.Gson () . fromJson ( t . string () , this . httpCallback . getType () ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( "ContactData{" + "id=" ) + ( id ) ) + ", lastname='" ) + ( lastname ) ) + '\'' ) + ", firstname='" ) + ( firstname ) ) + '\'' ) + ", mobilePhone='" ) + ( mobilePhone ) ) + '\'' ) + '}' ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( ( ( currPitInfoIndex ) >= 0 ) && ( ( currTeam ) != null ) ) { try { boolean tempValue = pit_auto_high_goal_Button . isChecked () ; if ( ( currTeam . getBoolean ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL ) ) != tempValue ) { currTeam . put ( DBContract.TablePitInfo.COLNAME_PIT_AUTO_HIGH_GOAL , tempValue ) ; if ( ! ( fillingPitInfo ) ) { dbHelper . updatePitInfo ( currTeam ) ; } } } catch ( org.json.JSONException e ) {} } } 
protected void showLocation ( android.location.Location mCurrentLocation ) { if ( mCurrentLocation != null ) { getNeabyMarkers ( mCurrentLocation ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( new com.google.android.gms.maps.model.LatLng ( mCurrentLocation . getLatitude () , mCurrentLocation . getLongitude () ) , com.dev.cromer.jason.whatsappening.Activities.MapActivity.CAMERA_ZOOM ) ) ; } com.google.android.gms.maps.model.LatLng center = mMap . getCameraPosition () . target ; mLastMarker = mMap . addMarker ( new com.google.android.gms.maps.model.MarkerOptions () . position ( new com.google.android.gms.maps.model.LatLng ( center.latitude , center.longitude ) ) . draggable ( true ) ) ; } 
public boolean removeConnection ( com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection connection ) { boolean removed = false ; java.util.Iterator < com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection > iterator = connections . iterator () ; while ( iterator . hasNext () ) { com.flashvisions.server.red5.jsbridge.listeners.JsBridgeConnection conn = iterator . next () ; if ( conn != null ) { connections . remove ( conn ) ; removed = true ; break; } } return removed ; } 
public void putByteArray ( final byte [] data ) { int l = data.length ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
private void placeFoodBlobs () { int counter = 11 ; while ( counter != 0 ) { java.awt.Point [] foodBlob = makeFoodBlob () ; if ( foodBlob != null ) { for ( java.awt.Point p : foodBlob ) { map . getCell ( p ) . setHasFood ( 5 ) ; } counter -- ; } } } 
public static void shareFileIntent ( android.app.Activity activity , java.lang.String data , java.lang.String title , java.io.File attached ) { ShareCompat.IntentBuilder . from ( activity ) . setType ( "text/plain" ) . addEmailTo ( "" ) . setSubject ( title ) . setStream ( android.support.v4.content.FileProvider . getUriForFile ( activity , ( ( org.eyeseetea.malariacare.BuildConfig.APPLICATION_ID ) + ".data.database.utils.ExportData" ) , attached ) ) . setText ( data ) . startChooser () ; } 
public boolean upload ( java.lang.String nyIpName , java.lang.String fileName , FileContents contents ) { java.lang.System.out . println ( ( "Received file! Name: " + fileName ) ) ; ServerCachedFile serverFile = getFile ( fileName ) ; if ( ( serverFile.state ) == ( FileState.Not_Shared ) ) { java.lang.System.out . println ( "File not shared!" ) ; return false ; } serverFile.fileContents = contents ; writeFile ( serverFile ) ; invalidateClients ( fileName , serverFile.currentWriter ) ; serverFile.currentWriter = null ; serverFile.state = FileState.Not_Shared ; return true ; } 
public boolean undo () { if ( self . canUndo () ) { self . getDrawingData () . undo () ; self . nativeClear () ; self . nativeDrawData () ; if ( ( self . getDelegate () ) != null ) { self . getDelegate () . didChangeDrawing ( self , self . getDrawingData () . canUndo () , self . getDrawingData () . canRedo () ) ; } return true ; } return false ; } 
public java.lang.String toString ( android.content.Context context ) { java.lang.String [] values = context . getResources () . getStringArray ( R.array.element_types_array ) ; if ( ( value ) == ( com.freak.carnetdentretien.domain.bean.MaintenanceElement.Type.OTHER.value ) ) { return values [ ( ( values.length ) - 1 ) ] ; } else { return values [ ( ( value ) - 1 ) ] ; } } 
private void close () { android.content.Intent intent = new android.content.Intent ( "android.location.GPS_ENABLED_CHANGE" ) ; intent . putExtra ( "enabled" , false ) ; sendBroadcast ( intent ) ; if ( ( service ) != null ) { unregisterReceiver ( service ) ; } if ( ( id ) != ( - 1 ) ) { workWithDataBase . onlineEnd ( id ) ; } finish () ; startActivity ( new android.content.Intent ( this , com.example.hjk.testing.MainActivity . class ) ) ; } 
private int compareBNode ( final org.openrdf.model.BNode first , final java.lang.Object second ) { if ( second instanceof org.openrdf.model.BNode ) { return first . getID () . compareTo ( ( ( org.openrdf.model.BNode ) ( second ) ) . getID () ) ; } else if ( ( second instanceof org.openrdf.model.URI ) || ( second instanceof eu.fbk.knowledgestore.data.Record ) ) { return - 1 ; } return 1 ; } 
private void advancePlayer () { if ( ( game.currentplayer ) == ( game.player ) ) { game.currentplayer = game.opponent ; handleAttack ( game.opponent . choseRandomMove ( game ) , game.player ) ; } else { game.currentplayer = game.player ; menu . setVisible ( true ) ; infoText . setVisible ( false ) ; } } 
@ java.lang.Override protected java.util.List < input.ExternalEvent > readEvents ( int nrof ) { if ( allEventsRead ) { return new java.util.ArrayList < input.ExternalEvent > ( 0 ) ; } java.util.List < input.ExternalEvent > events = reader . readEvents ( nrof ) ; if ( ( nrof > 0 ) && ( ( events . size () ) == 0 ) ) { reader . close () ; allEventsRead = true ; } return events ; } 
@ java.lang.Override public int getUserAnswerIdByQuestionNumber ( int number ) { com.inquirer.models.Answer userAnswer = new com.inquirer.models.Answer () ; for ( com.inquirer.models.Answer tmpAnswer : userAnswers ) { if ( ( tmpAnswer . getQuestion () ) == number ) { userAnswer = tmpAnswer ; } } if ( userAnswer == null ) { return 0 ; } else { return userAnswer . getId () ; } } 
protected void processWindowEvent ( java.awt.event.WindowEvent e ) { if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_CLOSING ) ) { if ( net.sf.memoranda.util.Configuration . get ( "ON_CLOSE" ) . equals ( "exit" ) ) doExit () ; else doExit () ; } else if ( ( e . getID () ) == ( java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) { super . processWindowEvent ( new java.awt.event.WindowEvent ( this , java.awt.event.WindowEvent.WINDOW_ICONIFIED ) ) ; doMinimize () ; } else super . processWindowEvent ( e ) ; } 
private void shiftCurrentPlayer () { currentPlayerPosition = ( ( currentPlayerPosition ) + 1 ) % ( activePlayers . size () ) ; currentPlayer = activePlayers . get ( currentPlayerPosition ) ; notifyCurrentPlayerUpdated ( currentPlayer , currentPlayerPosition ) ; java.lang.System.out . println ( ( "[TEST] Current Player: " + ( currentPlayer . toString () ) ) ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { if ( ( item . getItemId () ) == ( android.R.id.home ) ) { android.content.Intent homeIntent = new android.content.Intent ( getApplicationContext () , com.anilicious.rigfinances.activities.MainActivity . class ) ; homeIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; startActivity ( homeIntent ) ; } return super . onOptionsItemSelected ( item ) ; } 
private static double operation ( char op , double val1 , double val2 ) { switch ( op ) { case '+' : return val2 + val1 ; case '-' : return val2 - val1 ; case '*' : return val2 * val1 ; case '/' : if ( val1 == 0 ) throw new java.lang.UnsupportedOperationException ( "Cannot divide by zero" ) ; return val2 / val1 ; case '^' : return java.lang.Math . pow ( val2 , val1 ) ; } return 0 ; } 
private void removeEntryMNS ( java.lang.String mrn ) throws java.io.IOException , java.net.UnknownHostException { java.net.Socket MNSSocket = new java.net.Socket ( "localhost" , 1004 ) ; java.io.BufferedWriter outToMNS = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( MNSSocket . getOutputStream () , java.nio.charset.Charset . forName ( "UTF-8" ) ) ) ; if ( kr.ac.kaist.mms_server.MMSConfiguration.LOGGING ) java.lang.System.out . println ( ( "Remove-Entry:" + mrn ) ) ; outToMNS . write ( ( "Remove-Entry:" + mrn ) ) ; outToMNS . flush () ; outToMNS . close () ; MNSSocket . close () ; return; } 
public void createConnector ( io.joynr.arbitration.ArbitrationResult result ) { connector = io.joynr.proxy.ConnectorFactory . create ( dispatcher , messageSender , proxyParticipantId , result , qosSettings ) ; connectorStatusLock . lock () ; try { connectorStatus = ConnectorStatus.ConnectorSuccesful ; connectorSuccessfullyFinished . signal () ; if ( ( connector ) != null ) { sendQueuedRequests () ; sendQueuedSubscriptionRequests () ; } } finally { connectorStatusLock . unlock () ; } } 
public boolean changeQuizName ( java.lang.String newQuizName ) { Category c = new Category ( category ) ; c . readFromFile ( ( ( c . getCategory () ) + ".txt" ) ) ; if ( c . change ( quizName , newQuizName ) ) { this . quizName = newQuizName ; return true ; } return false ; } 
public static void loadAllWeight () { java.lang.String openid = session . get ( "openid" ) ; java.lang.String sql = ( "select new beans.PregwBean(w.wDate,w.wValue) from GestationalWeight w where  w.userId = '" + openid ) + "' order by w.wDate desc" ; java.util.List < beans.PregwBean > bean = play.db.jpa.JPA . em () . createQuery ( sql ) . getResultList () ; wsOk ( bean ) ; } 
@ java.lang.Override public cn.wisdom.lottery.service.remote.response.LotteryOpenData getCurrentPeriod ( cn.wisdom.lottery.dao.constant.LotteryType lotteryType ) { java.lang.String errMsg = java.text.MessageFormat . format ( "Failed to query {0} current period info." , lotteryType ) ; cn.wisdom.lottery.dao.vo.PrizeLottery prizeLottery = daoHelper . queryForObject ( cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.GET_SSQ_CURRENT_PERIOD , cn.wisdom.lottery.dao.PrizeLotteryDaoImpl.ssqPrizeInfoMapper , errMsg ) ; if ( ( prizeLottery != null ) && ( ( prizeLottery . getOpenTime () ) != null ) ) { unifyOpenTime ( prizeLottery . getOpenTime () ) ; } return new cn.wisdom.lottery.service.remote.response.LotteryOpenData ( prizeLottery ) ; } 
protected void closeFileObject ( com.shesse.h2ha.FilePathHa filePath , long lastModified ) throws java.io.IOException { synchronized ( openFiles ) { java.nio.channels.FileChannel fc = openFiles . remove ( filePath ) ; if ( fc != null ) { fc . close () ; } } if ( filePath . exists () ) { filePath . lastModified ( lastModified ) ; } } 
@ java.lang.Override public void updateQuality ( mvc.models.Item item ) { if ( ( item . getSellIn () ) > 0 ) item . setQuality ( ( ( item . getQuality () ) - ( mvc.models.OrganicBananas.QUALITY_STEP ) ) ) ; else item . setQuality ( ( ( item . getQuality () ) - ( ( mvc.models.OrganicBananas.QUALITY_STEP ) * 2 ) ) ) ; } 
private org.eclipse.smarthome.automation.core.internal.RuntimeRule getRuleByTemplate ( org.eclipse.smarthome.automation.core.internal.RuntimeRule rule ) { java.lang.String ruleTemplateUID = rule . getTemplateUID () ; org.eclipse.smarthome.automation.template.RuleTemplate template = ( ( org.eclipse.smarthome.automation.template.RuleTemplate ) ( tManager . get ( ruleTemplateUID ) ) ) ; if ( template == null ) { logger . debug ( ( ( "Rule template '" + ruleTemplateUID ) + "' does not exist." ) ) ; return null ; } else { org.eclipse.smarthome.automation.core.internal.RuntimeRule r1 = new org.eclipse.smarthome.automation.core.internal.RuntimeRule ( rule , template ) ; return r1 ; } } 
public static java.lang.String encodePath ( java.lang.String path ) { if ( ( path == null ) || ( ( path . length () ) == 0 ) ) return path ; java.lang.StringBuilder buf = org.eclipse.jetty.util.URIUtil . encodePath ( null , path , 0 ) ; return buf == null ? path : buf . toString () ; } 
@ java.lang.Override public org.bds.lang.Type returnType ( org.bds.scope.Scope scope ) { if ( ( returnType ) != null ) return returnType ; expr . returnType ( scope ) ; if ( expr . canCastInt () ) returnType = Type.INT ; else if ( expr . canCastReal () ) returnType = Type.REAL ; else return null ; return returnType ; } 
pl.karol202.evolution.utils.Vector2 getVector ( java.lang.String key ) { org.w3c.dom.Element vectorElement = getVectorElementFromListByName ( key ) ; if ( vectorElement == null ) return null ; return new pl.karol202.evolution.utils.Vector2 ( java.lang.Float . parseFloat ( vectorElement . getAttribute ( "x" ) ) , java.lang.Float . parseFloat ( vectorElement . getAttribute ( "y" ) ) ) ; } 
public void emit ( T record ) throws java.io.IOException , java.lang.InterruptedException { for ( int targetChannel : channelSelector . selectChannels ( record , numChannels ) ) { if ( ( random . nextInt ( 100 ) ) < ( targetPartition . getChannelNonDropProbability ( targetChannel ) ) ) { sendToTarget ( record , targetChannel ) ; } } } 
private void drawWifi ( com.anwesome.games.dataindicationbutton.Canvas canvas , com.anwesome.games.dataindicationbutton.Paint paint ) { float r = ( radius ) / 60 ; canvas . drawCircle ( 0 , 0 , r , paint ) ; for ( int i = 1 ; i <= 3 ; i ++ ) { float newR = r * ( i * 10 ) ; canvas . drawArc ( new com.anwesome.games.dataindicationbutton.RectF ( ( - newR ) , ( - newR ) , newR , newR ) , 240 , 60 , false , paint ) ; } } 
public void assertEqual ( java.lang.Object o1 , java.lang.Object o2 , java.lang.String expression ) { if ( java.util.Objects . equals ( o1 , o2 ) ) { expect ( true , ( ( expression + " == " ) + o2 ) ) ; } else { expect ( false , ( ( expression + " != " ) + o2 ) ) ; } } 
@ java.lang.Override public aljebra.data.sparse.SparseVector scale ( double factor ) { if ( factor == 0.0 ) { return new aljebra.data.sparse.SparseVector ( size ) ; } aljebra.data.sparse.SparseVector result = new aljebra.data.sparse.SparseVector ( size ) ; for ( int i : ids ) { result . set ( i , ( ( get ( i ) ) * factor ) ) ; } return result ; } 
public static double sumSigma ( int i , double [] p , double [] q , double [] b ) { double res = 0 ; for ( int l = 0 ; l < ( p.length ) ; l ++ ) { double power = ( ( p [ i ] ) * ( q [ l ] ) ) + ( b [ l ] ) ; res += java.lang.Math . exp ( power ) ; } return res ; } 
private org.programmatori.domotica.own.plugin.system.Value getModel () { java.lang.String model = null ; try { model = org.programmatori.domotica.own.sdk.config.Config . getInstance () . getNode ( "system.model" ) ; } catch ( java.lang.Exception e ) {} if ( model == null ) { model = "99" ; } return new org.programmatori.domotica.own.plugin.system.Value ( model ) ; } 
public static boolean allNumbersValid ( java.util.Vector < ? > textFields ) { for ( java.lang.Object text : textFields ) { java.lang.String string = ( ( java.awt.TextField ) ( text ) ) . getText () ; if ( ( string . length () ) == 0 ) return false ; try { java.lang.Double . parseDouble ( string ) ; } catch ( java.lang.NumberFormatException e ) { return false ; } } return true ; } 
protected void check () { if ( host . getAutoDeploy () ) { org.apache.catalina.startup.HostConfig.DeployedApplication [] apps = deployed . values () . toArray ( new org.apache.catalina.startup.HostConfig.DeployedApplication [ 0 ] ) ; for ( int i = 0 ; i < ( apps.length ) ; i ++ ) { if ( ! ( isServiced ( apps [ i ] . name ) ) ) checkResources ( apps [ i ] , false ) ; } if ( host . getUndeployOldVersions () ) { checkUndeploy () ; } deployApps () ; } } 
public static void clearInitStack () { final java.lang.ThreadLocal < java.util.Deque < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph > > is = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack ; if ( is != null ) is . get () . clear () ; final java.lang.ThreadLocal < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph > ag = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph ; if ( ag != null ) ag . remove () ; } 
private static java.lang.String getStringResponse ( java.io.InputStream is ) { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; try { while ( ( line = reader . readLine () ) != null ) { sb . append ( ( line + "" ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } 
private static void closeConnectionBetween ( com.hazelcast.core.HazelcastInstance h1 , com.hazelcast.core.HazelcastInstance h2 ) { if ( ( h1 == null ) || ( h2 == null ) ) { return; } com.hazelcast.instance.Node n1 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample . getNode ( h1 ) ; com.hazelcast.instance.Node n2 = com.hazelcast.examples.splitbrain.AbstractCacheSplitBrainSample . getNode ( h2 ) ; if ( ( n1 != null ) && ( n2 != null ) ) { n1.clusterService . removeAddress ( n2.address , null ) ; n2.clusterService . removeAddress ( n1.address , null ) ; } } 
public void payForMeal ( core.agent.Message message ) { core.restaurant.agent.Customer customer = message . get ( 0 ) ; float amountPaid = message . get ( 1 ) ; float cost = 0 ; for ( core.restaurant.Check c : m_checks ) { if ( ( c . getCustomer () ) == customer ) { c . setStatus ( CheckStatusEnum.Received ) ; c . setChange ( ( amountPaid - cost ) ) ; } } print ( ( ( customer . getName () ) + " is paying for his/her meal." ) ) ; stateChanged () ; } 
private synchronized boolean isLineAvaliable ( int line ) { org.zhgeaits.zgdanmaku.model.ZGDanmaku danmaku = mLinesAvaliable . get ( line ) ; if ( danmaku == null ) { return true ; } if ( ( danmaku . getCurrentOffsetX () ) > ( danmaku . getDanmakuWidth () ) ) { mLinesAvaliable . remove ( line ) ; return true ; } return false ; } 
protected void initTableColumns ( boolean keepColumnStatus ) { if ( ( treeViewer ) != null ) { org.eclipse.swt.widgets.Tree tree = treeViewer . getTree () ; if ( ( tree != null ) && ( ! ( tree . isDisposed () ) ) ) { initTableColumns ( tree , keepColumnStatus ) ; } } } 
private void askQuestions () { int idx = ( firstaid_questions . size () ) - ( quesLen ) ; if ( idx < ( firstaid_questions . size () ) ) { app . speakOut ( firstaid_questions . get ( idx ) . getQues () ) ; expect_binary = true ; current_grammar = app.BINARY_RESPONSE ; } else { conclude = true ; } } 
public java.util.List < java.lang.Integer > getDaysFromThisMonth ( int month , int year ) { java.util.Calendar cal = new java.util.GregorianCalendar () ; cal . set ( year , month , 1 ) ; int max = cal . getActualMaximum ( java.util.Calendar.DAY_OF_MONTH ) ; java.lang.System.out . println ( max ) ; java.util.List < java.lang.Integer > daysFromThisMonth = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < max ; i ++ ) { daysFromThisMonth . add ( ( i + 1 ) ) ; } return daysFromThisMonth ; } 
void CurrentPosUpdate () { if ( this . isEmpty () ) { CurrentPosX = sg.util.FastLinkedList.MARGIN ; CurrentPosY = 0 ; } else if ( ! ( currentNode.nodeText . getText () . equals ( "\n" ) ) ) { CurrentPosX = ( currentNode.nodeText . getX () ) + ( java.lang.Math . round ( currentNode.nodeText . getLayoutBounds () . getWidth () ) ) ; CurrentPosY = currentNode.nodeText . getY () ; } else { CurrentPosX = sg.util.FastLinkedList.MARGIN ; } } 
private double getPriorForStructure ( int numParents ) { double e = getStructurePrior () ; int k = numParents ; int vm = ( data.length ) - 1 ; return ( k * ( java.lang.Math . log ( ( e / vm ) ) ) ) + ( ( vm - k ) * ( java.lang.Math . log ( ( 1.0 - ( e / vm ) ) ) ) ) ; } 
private void revertInformationOfRequest ( final com.dmm.leavemanagementsystem.models.LeaveRequest request , final int position ) { setupTextViewStatus ( request ) ; setupLinearLayoutApproveOrUnapprove ( request , position ) ; setupSpinnerSubject ( request ) ; setupTextViewPhone ( request ) ; setupEditTextMessage ( request ) ; setupTextViewFromDate ( request ) ; setupTextViewFromHour ( ( ( request . getSt_approve () ) == 0 ) ) ; setupSpinnerDuration ( request . getDuration () ) ; setupTextViewUnitDuration () ; setupLinearLayoutDeleteAndRevert ( request , position ) ; } 
private int getValidLineNumber ( int line , com.intellij.openapi.editor.Document document ) { int lineCount = getDocumentLineCount ( document ) ; line = line - 1 ; if ( line <= 0 ) { line = 1 ; } else if ( line >= lineCount ) { line = lineCount - 1 ; } return line ; } 
public void gameClick ( android.view.View v ) { if ( ( ! ( canClick ) ) || ( ( ( android.os.SystemClock . elapsedRealtime () ) - ( lastClickTime ) ) < 200 ) ) return; canClick = false ; lastClickTime = android.os.SystemClock . elapsedRealtime () ; super . gameClick ( v ) ; this . playerHandle ( v ) ; } 
public void increaseValue () { java.lang.String oldValue = textBox . getValue () ; if ( ( isChangeable () ) && ( isValidForType ( oldValue ) ) ) { try { java.lang.String newValue = getIncreasedValue ( oldValue ) ; if ( isSmallerThanMax ( newValue ) ) { textBox . setValue ( newValue ) ; value = newValue ; valueUpdateTimer . schedule ( updateDelay ) ; valueUpdateTimer . setValue ( newValue ) ; } } catch ( java.lang.Exception e ) { valueUpdateTimer . cancel () ; com.google.gwt.core.client.GWT . log ( "Exception when increasing value" , e ) ; } } } 
private int setListBottom ( java.util.List listToSetBottomOf , int listTopPos ) { int listBottom = 0 ; if ( ( listToSetBottomOf . size () ) > 0 ) { if ( ( listToSetBottomOf . size () ) < 11 ) { listBottom = listToSetBottomOf . size () ; } else { listBottom = listTopPos + 10 ; } } return listBottom ; } 
private data_structures.Node findNode ( int index ) { if ( index == ( ( size ) - 1 ) ) { return tail ; } data_structures.Node node = head ; for ( int i = 0 ; i < index ; i ++ ) { node = node . getNext () ; } return node ; } 
@ java.lang.Override public synchronized void close ( ) throws com.actemium.basicTvx_sdk.restclient.RestException { com.actemium.basicTvx_sdk.GlobalObjectManager.LOGGER . info ( "fermeture du GOM" ) ; com.actemium.basicTvx_sdk.GlobalObjectManager.isInit = false ; if ( ( com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager ) != null ) com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager . closeHttpClient () ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.idHelper = null ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.factory = null ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.persistanceManager = null ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.gestionCache = null ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.isCachePurgeAutomatiquementSiException = false ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.nonRecuperableViaWebService . clear () ; com.actemium.basicTvx_sdk.GlobalObjectManager.instance.lockFindOrCreate = null ; } 
public void moveTailToBackOfHead () { if ( ( length ) > 0 ) { com.mygdx.game.Cell tail = body . get ( ( ( length ) - ( length ) ) ) ; tail . setX ( breadCrumbsList . get ( length ) . getX () ) ; tail . setY ( breadCrumbsList . get ( length ) . getY () ) ; body . add ( length , tail ) ; } } 
public java.lang.String inviteUserToBooking ( java.lang.String username_to_invite , int booking_id ) throws java.sql.SQLException { java.sql.PreparedStatement s1 = connection . prepareStatement ( "SELECT systemUserId FROM SystemUser WHERE username=?" ) ; s1 . setString ( 1 , username_to_invite ) ; java.sql.ResultSet result = s1 . executeQuery () ; if ( result . next () ) return inviteUserToBooking ( result . getInt ( 1 ) , booking_id ) ; return ( "No such user found '" + username_to_invite ) + "'." ; } 
@ java.lang.Override public void chooseOnePokemon () { int choice = 0 ; int chosenPokemon = 0 ; do { chosenPokemon = 0 ; printStarterPokemon () ; chosenPokemon = getChosen () ; java.lang.System.out . println ( "Do you choose him?" ) ; java.lang.System.out . println ( "[1]Yes      [2]No" ) ; choice = main.ConsoleRenderer.input . nextInt () ; if ( choice == 2 ) { chooseOnePokemon () ; break; } else if ( choice != 1 ) { java.lang.System.out . println ( "Choose Yes or No!" ) ; } } while ( choice != 1 ) ; main.Player . choosePokemon ( chosenPokemon ) ; java.lang.System.out . println ( "Successufully added a pokemon" ) ; } 
public int getIndexDoc ( final java.lang.String filePath ) { for ( int di = 0 ; di < ( ndocs ) ; di ++ ) { if ( docs [ di ] . getDocLoc () . getPath () . contains ( filePath ) ) return di ; } return - 1 ; } 
public void enter ( android.view.View in , com.iodesystems.android.libs.view.transitions.TransitionPair transitionPair ) { if ( ! ( views . isEmpty () ) ) { android.view.View out = views . peek () ; if ( ( onPageTransitionListener ) != null ) { onPageTransitionListener . onPageTransition ( in , out ) ; } transitionPair . enter ( out , in ) ; transitionPairs . push ( transitionPair ) ; } views . push ( in ) ; } 
@ org.isoron.uhabits.utils.Nullable public static java.lang.String getRingtoneName ( org.isoron.uhabits.utils.Context context ) { try { org.isoron.uhabits.utils.Uri ringtoneUri = org.isoron.uhabits.utils.RingtoneUtils . getRingtoneUri ( context ) ; java.lang.String ringtoneName = context . getResources () . getString ( R.string.none ) ; if ( ringtoneUri != null ) { org.isoron.uhabits.utils.Ringtone ringtone = getRingtone ( context , ringtoneUri ) ; if ( ringtone != null ) { ringtoneName = ringtone . getTitle ( context ) ; ringtone . stop () ; } } return ringtoneName ; } catch ( java.lang.RuntimeException e ) { e . printStackTrace () ; return null ; } } 
private void removeSavedArticle ( com.rocdev.guardianreader.models.Article article ) { if ( ( currentSection ) == ( Section.SAVED . ordinal () ) ) { for ( com.rocdev.guardianreader.models.Article a : articles ) { if ( a . equals ( article ) ) { articles . remove ( a ) ; break; } } if ( articles . isEmpty () ) { articlesFragment . showNoSavedArticlesContainer ( true ) ; } articlesFragment . notifyArticlesChanged ( true , true ) ; } } 
public static double normalizeValue ( final double input , final double avg , final double std ) { double res ; if ( std != 0 ) { res = ( input - avg ) / std ; } else { res = 0 ; } return res ; } 
private static java.util.List < ru.stqa.pft.addressbook.model.GroupData > generateGroups ( int count ) { java.util.List < ru.stqa.pft.addressbook.model.GroupData > groups = new java.util.ArrayList < ru.stqa.pft.addressbook.model.GroupData > () ; for ( int i = 0 ; i < count ; i ++ ) { groups . add ( new ru.stqa.pft.addressbook.model.GroupData () . withName ( java.lang.String . format ( "test %s" , i ) ) . withHeader ( java.lang.String . format ( "header %s" , i ) ) . withFooter ( java.lang.String . format ( "footer %s" , i ) ) ) ; } return groups ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update/{code}" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String updateSubCategory ( @ org.springframework.web.bind.annotation.ModelAttribute @ javax.validation.Valid org.egov.tl.entity.LicenseSubCategory licenseSubCategory , org.springframework.validation.BindingResult errors , org.springframework.web.servlet.mvc.support.RedirectAttributes additionalAttr , final org.springframework.ui.Model model ) { if ( errors . hasErrors () ) { return "subcategory-update" ; } licenseSubCategoryService . updateLicenseSubCategory ( licenseSubCategory ) ; additionalAttr . addFlashAttribute ( "message" , "msg.success.subcategory.update" ) ; return "redirect:/licensesubcategory/view/" + ( licenseSubCategory . getCode () ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/login" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String login1 ( javax.servlet.http.HttpSession session , javax.servlet.http.HttpServletRequest request ) { if ( ( session . getAttribute ( "user" ) ) != null ) { session . removeAttribute ( "notification" ) ; session . setAttribute ( "notification" , "You are already logged in." ) ; return "index" ; } else { session . removeAttribute ( "notification" ) ; session . removeAttribute ( "notifsignup" ) ; request . setAttribute ( "url" , request . getParameter ( "url" ) ) ; return "login" ; } } 
public java.util.ArrayList < java.lang.Boolean > asList () { java.util.ArrayList < java.lang.Boolean > l = new java.util.ArrayList < java.lang.Boolean > ( length ) ; for ( int i = 0 ; i < ( length ) ; i ++ ) { l . add ( i , get ( i ) ) ; } return l ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { switch ( requestCode ) { case io.card.payment.CardIOActivity.PERMISSION_REQUEST_ID : { waitingForPermission = false ; if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { showCameraScannerOverlay () ; } else { manualEntryFallbackOrForced = true ; } } } } 
protected synchronized java.lang.String sourceForModelledClass ( spoon.reflect.declaration.CtType < ? > modelledClass ) { prettyPrinter . reset () ; prettyPrinter . scan ( modelledClass ) ; java.lang.String sourceCode = ( ( ( "package " + ( modelledClass . getPackage () . toString () ) ) + ";" ) + ( java.lang.System . getProperty ( "line.separator" ) ) ) + ( prettyPrinter . toString () ) ; prettyPrinter . reset () ; return sourceCode ; } 
public int getTileMeta ( net.minecraft.world.IBlockAccess blockAccess , int x , int y , int z ) { return ( blockAccess . getTileEntity ( x , y , z ) ) != null ? getTileMeta ( blockAccess . getTileEntity ( x , y , z ) . getWorldObj () , x , y , z ) : 0 ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( "EntitySet [entityTypeId=" + ( entityTypeId ) ) + ", name=" ) + ( name ) ) + ", id=" ) + ( id ) ) + ", title=" ) + ( title ) ) + ", description=" ) + ( description ) ) + "]" ; } 
@ org.jetbrains.annotations.NotNull public static com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManager getManager () { if ( ( com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager ) == null ) { com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerADAuthDecorator ( ( com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager = new com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl () ) ) ; } if ( ( com.microsoftopentechnologies.intellij.helpers.azure.rest.AzureRestAPIManagerImpl . getManager () . getAuthenticationMode () ) == ( com.microsoftopentechnologies.intellij.helpers.azure.AzureAuthenticationMode.ActiveDirectory ) ) { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManagerADAuth ; } else { return com.microsoftopentechnologies.intellij.helpers.azure.sdk.AzureSDKManagerImpl.apiManager ; } } 
public double subtractRange ( final int firstIndex , final int secondIndex ) { double result = systemCoefficients [ firstIndex ] [ secondIndex ] ; for ( int k = 0 ; k <= ( secondIndex - 1 ) ; k ++ ) { result -= ( systemCoefficients [ firstIndex ] [ k ] ) * ( systemCoefficients [ secondIndex ] [ k ] ) ; } return result ; } 
public int getRelativeMajor ( int note ) { int relativeMajor = 0 ; for ( int j = 0 ; j < ( SIZE_OF_NOTES_ARRAY ) ; j ++ ) { if ( ( notes [ j ] ) == note ) { int index = ( j + 3 ) % ( SIZE_OF_NOTES_ARRAY ) ; relativeMajor = notes [ index ] ; break; } } return relativeMajor ; } 
@ java.lang.Override public void close () { if ( ( mNewtCanvasAWT ) != null ) { mNewtCanvasAWT = null ; return; } try { mClearGLWindow . close () ; } catch ( final java.lang.NullPointerException e ) {} catch ( final java.lang.Throwable e ) { java.lang.System.err . println ( e . getLocalizedMessage () ) ; } super . close () ; } 
@ java.lang.Override public void connect ( ) throws de.mickare.xserver.exceptions.NotInitializedException , java.io.IOException , java.lang.InterruptedException { if ( ( ! ( this . manager . isRunning () ) ) || ( ! ( valid () ) ) ) { return; } manager . debugInfo ( ( ( "Connecting to " + ( this . name ) ) + " ..." ) ) ; new de.mickare.xserver.net.ConnectionObj ( manager . getSocketFactory () , host , port , this , manager ) ; } 
@ java.lang.Override public void onEvent ( eu.dlvm.domotics.base.Block source , eu.dlvm.domotics.events.EventType event ) { switch ( event ) { case ON : break; case OFF : reallyOff () ; break; case TOGGLE : toggle () ; break; case DELAY_ON : delayOn () ; break; case DELAY_OFF : delayOff () ; break; default: eu.dlvm.domotics.actuators.Fan.logger . warn ( ( ( ( "Ignored event " + event ) + " from " ) + ( source . getName () ) ) ) ; } } 
public void formatEditText ( android.widget.EditText editText ) { if ( editText . getText () . toString () . equals ( "" ) ) { editText . setText ( 0 ) ; } else if ( ( editText . length () ) == 1 ) { java.lang.String temp = 0 + ( editText . getText () . toString () ) ; editText . setText ( temp ) ; } } 
private void syncNewLinePositions () { for ( int i = lastNewLinePositionIndex ; i > ( - 1 ) ; i -- ) { if ( ( position ) >= ( newLinePositions [ lastNewLinePositionIndex ] ) ) { break; } else { newLinePositions [ ( ( lastNewLinePositionIndex ) -- ) ] = - 1 ; } } } 
private java.lang.String inputStreamToString ( java.io.InputStream inputStream ) throws java.io.IOException { java.io.Reader reader = new java.io.InputStreamReader ( inputStream , "gb2312" ) ; java.io.BufferedReader bufferedReader = new java.io.BufferedReader ( reader ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String buffer ; while ( ( buffer = bufferedReader . readLine () ) != null ) { sb . append ( buffer ) . append ( "\n" ) ; } inputStream . close () ; bufferedReader . close () ; reader . close () ; return sb . toString () ; } 
public void shuffleDeck () { int random = 0 ; for ( int i = 0 ; i < ( numberOfCards ) ; i ++ ) { random = srk.syracuse.gameofcards.Model.Deck . getRandomCard ( i ) ; srk.syracuse.gameofcards.Model.Cards temp = cards [ i ] ; cards [ i ] = cards [ random ] ; cards [ random ] = temp ; } } 
private boolean hideMessageByJSONSetting ( org.json.JSONArray array ) { try { org.json.JSONObject object = array . get ( 0 ) ; if ( ( object . getJSONObject ( "data" ) . getBoolean ( "notification" ) ) == false ) { return false ; } } catch ( java.lang.Exception e ) { return true ; } return true ; } 
public static void main ( java.lang.String [] args ) throws java.io.IOException { if ( 3 != ( args.length ) ) { upem.jarret.worker.ClientJarRet . usage () ; return; } upem.jarret.worker.ClientJarRet client = new upem.jarret.worker.ClientJarRet ( args [ 0 ] , args [ 1 ] , java.lang.Integer . parseInt ( args [ 2 ] ) ) ; client . launch () ; } 
public static ml.shifu.shifu.container.obj.ModelConfig loadModelConfig ( java.lang.String path , ml.shifu.shifu.container.obj.RawSourceData.SourceType sourceType ) throws java.io.IOException { ml.shifu.shifu.container.obj.ModelConfig modelConfig = ml.shifu.shifu.util.CommonUtils . loadJSON ( path , sourceType , ml.shifu.shifu.container.obj.ModelConfig . class ) ; if ( ( modelConfig . getTrain () . getGridConfigFile () ) != null ) { modelConfig . getTrain () . setGridConfigFileContent ( ml.shifu.shifu.util.CommonUtils . loadFileContent ( modelConfig . getTrain () . getGridConfigFile () , sourceType ) ) ; } return modelConfig ; } 
public void update () { android.content.ContentResolver resolver = mContext . getContentResolver () ; mOneFingerQuickSettingsIntercept = ( Settings.System . getInt ( resolver , Settings.System.STATUS_BAR_QUICK_QS_PULLDOWN , 1 ) ) == 1 ; mDoubleTapToSleepEnabled = ( Settings.System . getInt ( resolver , Settings.System.DOUBLE_TAP_SLEEP_GESTURE , 1 ) ) == 1 ; mStatusBarLockedOnSecureKeyguard = ( Settings.Secure . getIntForUser ( resolver , Settings.Secure.STATUS_BAR_LOCKED_ON_SECURE_KEYGUARD , 0 , UserHandle.USER_CURRENT ) ) == 1 ; } 
@ java.lang.Override public void run () { if ( download . needToDownload () ) { fireTask ( ( ( ( Language.INSTANCE . localize ( "common.downloading" ) ) + " " ) + ( download . getFilename () ) ) ) ; download . download ( true ) ; } } 
@ java.lang.Override public void onShutdownInput () { assert eventloop . inEventloopThread () ; if ( ( callback ) != null ) { if ( ( ( reading ) == ( BODY ) ) && ( ( contentLength ) == ( UNKNOWN_LENGTH ) ) ) { onHttpMessage ( bodyQueue . takeRemaining () ) ; } else { closeWithError ( io.datakernel.http.HttpClientConnection.CLOSED_CONNECTION ) ; } } else { close () ; } } 
@ java.lang.Override public void onAttachedToRecyclerView ( android.support.v7.widget.RecyclerView recyclerView ) { if ( ( mRunnables . size () ) == 0 ) { int count = getItemCount () ; for ( int i = 0 ; i < count ; i ++ ) { mRunnables . add ( null ) ; } } registerAdapterDataObserver ( new com.tr4android.recyclerviewslideitem.SwipeAdapter.SwipeAdapterDataObserver () ) ; } 
private void updateConnections () { for ( Models.Location l1 : validLocations ) for ( Models.Location l2 : validLocations ) for ( Models.Location mid : validLocations ) if ( ( connection . get ( new Models.LocationPair ( l1 , mid ) ) ) && ( connection . get ( new Models.LocationPair ( mid , l2 ) ) ) ) connection . put ( new Models.LocationPair ( l1 , l2 ) , true ) ; } 
public Person retrieve () { int iterator = ( array.length ) - 1 ; while ( ( iterator > 0 ) && ( ( array [ iterator ] ) == null ) ) { iterator -- ; } Person retrieved = array [ iterator ] ; array [ iterator ] = null ; return retrieved ; } 
public static boolean checkPlayersTiles ( java.lang.String board , int player , int value , int numOfValues ) { java.lang.String tiles = game.manger.SaveTheIslandGame.Board . getPlayersTiles ( player , board ) ; int count = 0 ; for ( int i = 0 ; i < 5 ; i ++ ) { if ( ( java.lang.Integer . parseInt ( tiles . substring ( i , ( i + 1 ) ) ) ) == value ) { count ++ ; } } return count >= numOfValues ; } 
@ org.springframework.scheduling.annotation.Async @ org.springframework.scheduling.annotation.Scheduled ( cron = "0 0 0 * * *" ) private void execute () { java.lang.Integer history = null ; if ( config . contains ( ConfigProperty.EXECUTION_LOG_HISTORY ) ) { history = config . getInteger ( ConfigProperty.EXECUTION_LOG_HISTORY ) ; } if ( ( history == null ) || ( history <= ( - 1 ) ) ) { return; } java.util.Calendar pruneLine = java.util.Calendar . getInstance () ; pruneLine . setTime ( new java.util.Date () ) ; pruneLine . add ( java.util.Calendar.DAY_OF_YEAR , ( - history ) ) ; dbLog . prune ( pruneLine . getTime () ) ; } 
public void mouseUpdate ( int mx , int my , boolean pressed ) { if ( pressed == false ) { this . destroy () ; } else if ( this . contains ( mx , my ) ) { if ( ! ( this . fixed ) ) { this . bind ( mx , my ) ; } else { this . bind ( mx , this . fixed_y ) ; } } } 
public static boolean checkLimit ( net.dv8tion.jda.core.entities.Guild guild ) { fredboat.audio.player.GuildPlayer guildPlayer = fredboat.audio.player.PlayerRegistry . getExisting ( guild ) ; if ( ( guildPlayer != null ) && ( ( guildPlayer . getSongCount () ) > 0 ) ) return true ; return ( ( fredboat.audio.player.PlayerLimitManager.limit ) < 0 ) || ( ( fredboat.audio.player.PlayerRegistry . getPlayingPlayers () . size () ) < ( fredboat.audio.player.PlayerLimitManager.limit ) ) ; } 
public void removeDanceSequence ( T selectedBeatElem ) { java.util.UUID danceSequenceID = selectedBeatElem . getDanceSequenceId () ; removeDanceSequence ( danceSequenceID , selectedBeatElem . getBeatPosition () , ( ( selectedBeatElem . getBeatPosition () ) + ( mDanceSequences . get ( danceSequenceID ) . getLength () ) ) ) ; } 
public boolean containsKey ( java.lang.String key ) { int index = ( key . hashCode () ) % ( this . valueTable . length ) ; java.lang.String currentKey ; while ( ( currentKey = this . keyTable [ index ] ) != null ) { if ( key . equals ( currentKey ) ) return true ; index = ( index + 1 ) % ( this . keyTable . length ) ; } return false ; } 
@ java.lang.Override public twitter4j.User showUser ( java.lang.String arg0 ) throws twitter4j.TwitterException { if ( ( limits [ 1 ] ) == 179 ) { SocialNetworkAnalysis.TwitterWrapper.timelimited [ 0 ] = new java.util.Date () ; limit . reached () ; limits [ 1 ] = 0 ; } ( limits [ 1 ] ) ++ ; java.lang.System.out . print ( "limits in showUser: " ) ; for ( int limit : limits ) { java.lang.System.out . print ( ( limit + " " ) ) ; } java.lang.System.out . println () ; return t . showUser ( arg0 ) ; } 
private com.gamesbykevin.breakout.ball.Balls.Key getRandomKey () { if ( this . keys . isEmpty () ) { for ( com.gamesbykevin.breakout.ball.Balls.Key key : com.gamesbykevin.breakout.ball.Balls.Key . values () ) { if ( key == ( com.gamesbykevin.breakout.ball.Balls.Key.Red ) ) continue; this . keys . add ( key ) ; } } final int index = GamePanel.RANDOM . nextInt ( this . keys . size () ) ; final com.gamesbykevin.breakout.ball.Balls.Key tmp = this . keys . get ( index ) ; this . keys . remove ( index ) ; return tmp ; } 
@ java.lang.Override public org.craftercms.profile.api.VerificationToken getVerificationToken ( java.lang.String tokenId ) throws org.craftercms.profile.api.exceptions.ProfileException { java.lang.String url = getAbsoluteUrl ( ( ( BASE_URL_PROFILE ) + ( URL_PROFILE_GET_VERIFICATION_TOKEN ) ) ) ; url = addQueryParams ( url , createBaseParams () , false ) ; return doGetForObject ( url , org.craftercms.profile.api.VerificationToken . class , tokenId ) ; } 
@ java.lang.Override public void onStart () { super . onStart () ; if ( ( resultDrawer ) == null ) { accountList = getAccounts () ; if ( ! ( accountList . isEmpty () ) ) { selectedAccount = accountList . get ( 0 ) ; createDrawer () ; selectAccount ( selectedAccount ) ; } } } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { progressBar . setVisibility ( View.GONE ) ; startActivity ( new android.content.Intent ( this , com.example.xmppchatsampleproject.ChatOptionActivity . class ) ) ; android.os.Bundle extras = getIntent () . getExtras () ; if ( extras != null ) { java.lang.String messageContent = extras . getString ( "xmpp_status" ) ; if ( ( messageContent != null ) && ( messageContent . equals ( "success" ) ) ) {} else { android.widget.Toast . makeText ( this , "Somthing went wrong. try again" , Toast.LENGTH_SHORT ) . show () ; } } } 
public double getNumSteps ( android.graphics.Point p1 , android.graphics.Point p2 , int stepSize ) { int x = ( p2.x ) - ( p1.x ) ; int y = ( p2.y ) - ( p1.y ) ; double distance = ( java.lang.Math . abs ( java.lang.Math . sqrt ( ( ( x * x ) + ( y * y ) ) ) ) ) / ( player . getScale () ) ; android.util.Log . i ( "Distance between p1/p2" , ( "" + distance ) ) ; return distance / stepSize ; } 
public void setTime ( int minutes , int seconds ) { if ( seconds < 0 ) seconds = 0 ; if ( minutes < 0 ) minutes = 0 ; this . minutes = minutes + ( seconds / 60 ) ; this . seconds = seconds % 60 ; this . setText ( java.lang.String . format ( "%02d:%02d" , this . minutes , this . seconds ) ) ; } 
public static boolean isBF ( java.lang.String word ) throws java.io.IOException { if ( ( utils.GFBF.GFLexicon . isEmpty () ) || ( utils.GFBF.BFLexicon . isEmpty () ) ) utils.GFBF . intializeLexicon () ; if ( ( utils.GFBF.BFLexicon . contains ( word ) ) || ( ! ( utils.GFBF.GFLexicon . contains ( word ) ) ) ) return true ; return false ; } 
@ java.lang.Override public final boolean titleChanged ( final xyz.algogo.core.Algorithm algorithm , final java.lang.String title , final java.lang.String newTitle ) { if ( ( newTitle != null ) && ( ! ( newTitle . isEmpty () ) ) ) { algorithmChanged ( false ) ; this . setTitle ( buildTitle ( newTitle , algorithm . getAuthor () ) ) ; return true ; } javax.swing.JOptionPane . showMessageDialog ( this , xyz.algogo.desktop.utils.LanguageManager . getString ( "joptionpane.invalidtitle" , newTitle ) , xyz.algogo.desktop.utils.LanguageManager . getString ( "joptionpane.error" ) , javax.swing.JOptionPane.ERROR_MESSAGE ) ; return false ; } 
public double rand () { double stdv = 1.0 / ( java.lang.Math . sqrt ( ( ( grads.dims [ 1 ] ) * ( grads.dims [ 2 ] ) ) ) ) ; double stdv2 = stdv * 2 ; return ( ( java.lang.Math . random () ) * stdv2 ) - stdv ; } 
private void setMapPosition () { if ( ( googleMap ) != null ) { java.lang.System.out . println ( "googleMap != null" ) ; if ( com.syzible.loinnir.utils.LocalStorage . getBooleanPref ( LocalStorage.Pref.should_share_location , getActivity () ) ) { getWebServerLocation () ; } else { googleMap . clear () ; googleMap . animateCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLngZoom ( LocationService.ATHLONE , LocationService.INITIAL_LOCATION_ZOOM ) ) ; } } } 
private java.lang.String makeWord () { java.lang.String word = makeSyllable () ; double cutoff ; switch ( monosylProb ) { default: case ALWAYS : return word ; case MOSTLY : cutoff = 0.6 ; break; case FREQUENT : cutoff = 0.45 ; break; case LESS : cutoff = 0.3 ; break; case RARE : cutoff = 0.15 ; break; case CUSTOM : cutoff = monosylProbCustom ; } double jump = rand . nextDouble () ; if ( jump > cutoff ) { word += makeWord () ; } return word ; } 
@ java.lang.Override public java.lang.Object getMessageBlocking ( long timeDuration , java.util.concurrent.TimeUnit timeUnit ) throws java.lang.InterruptedException { FinalProject.communication.CommTuple receivedCommTuple = receivedObjectQueue . poll ( timeDuration , timeUnit ) ; if ( receivedCommTuple == null ) return null ; replyConnection = receivedCommTuple . getConnection () ; return receivedCommTuple . getObj () ; } 
public void addUpdate ( com.lagopusempire.basicupdater.Update < V , U > update ) { if ( update == null ) { throw new java.lang.IllegalArgumentException ( "Update cannot be null." ) ; } V from = update . getFrom () ; if ( updates . containsKey ( from ) ) { throw new com.lagopusempire.basicupdater.DuplicateUpdateException ( updates . remove ( from ) , update ) ; } updates . put ( from , update ) ; } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int itemClicked = item . getItemId () ; if ( itemClicked == ( R.id.item_Setting ) ) { android.content.Context context = this ; android.content.Intent activity_setting = new android.content.Intent ( context , com.example.william.earthdayapplication.SettingActivity . class ) ; startActivity ( activity_setting ) ; } if ( itemClicked == ( R.id.item_Instruction ) ) {} if ( itemClicked == ( R.id.item_Help ) ) { android.content.Intent toy = new android.content.Intent ( getApplicationContext () , com.example.william.earthdayapplication.Main2Activity . class ) ; startActivity ( toy ) ; } return super . onOptionsItemSelected ( item ) ; } 
@ java.lang.Override public boolean onDependentViewChanged ( android.support.design.widget.CoordinatorLayout parent , android.support.design.widget.FloatingActionButton fab , android.view.View dependency ) { if ( dependency instanceof android.support.design.widget.AppBarLayout ) { if ( ( dependency . getY () ) >= 0 ) { fab . show () ; } else { fab . hide () ; } } return true ; } 
public static java.net.URL fromProjectID ( int projectID ) { try { final java.net.URL url = com.therandomlabs.utils.network.NetworkUtils . getRedirectedURL ( com.therandomlabs.curseapi.Curse.PROJECT_URL . replaceAll ( com.therandomlabs.curseapi.Curse.PROJECT_ID , java.lang.Integer . toString ( projectID ) ) , 2 ) ; if ( ! ( com.therandomlabs.curseapi.Curse . isCurseProjectNoRedirect ( com.therandomlabs.utils.network.NetworkUtils . getRedirectedURL ( url ) ) ) ) { throw new com.therandomlabs.curseapi.InvalidProjectIDException ( ( "Invalid project ID: " + projectID ) ) ; } return url ; } catch ( java.io.IOException ex ) { throw new com.therandomlabs.curseapi.CurseException ( ex ) ; } } 
public static java.lang.String getParam ( final org.jooq.lambda.tuple.Tuple2 < java.lang.String , java.lang.String > valueNameCouple ) { return ( ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_START ) + ( valueNameCouple . v1 () ) ) + ( valueNameCouple . v2 () . equals ( "" ) ? "" : ( it.unibo.alchemist.boundary.gui.view.SingleRunApp.Parameter.PARAMETER_NAME_END ) + ( valueNameCouple . v2 () ) ) ; } 
public void setup ( org.bukkit.entity.Player p , java.lang.String id , java.lang.String name , java.lang.String option , int step , org.bukkit.block.Block b ) { setupOp = p ; setup = id ; setupName = name ; setupOption = option ; setupStep = step ; if ( b != null ) { blockChoices . add ( b ) ; setupStep += 1 ; } if ( ( setupStep ) <= 2 ) p . sendMessage ( lang ( ( "region_select" + ( setupStep ) ) ) ) ; else setupComplete () ; } 
protected void checkAnswer ( java.lang.String answer , boolean outOfTime ) { if ( answer . equals ( members [ memberNum ] ) ) { score += 1 ; refreshScoreText () ; } else { java.lang.String wrongText ; if ( ! outOfTime ) { wrongText = "You suck! The correct answer was " + ( members [ memberNum ] ) ; } else { wrongText = "You ran out of time! The correct answer was " + ( members [ memberNum ] ) ; } android.widget.Toast toast = android.widget.Toast . makeText ( getApplicationContext () , wrongText , Toast.LENGTH_SHORT ) ; toast . show () ; } } 
public boolean hasPendingConnectRequest ( java.lang.String ipAddress ) { synchronized ( mReconnectRequestList ) { if ( ( mReconnectRequestList . size () ) > 0 ) { logConnectReqeustList () ; for ( com.assistant.connection.ConnectionManager.ConnectRequest request : mReconnectRequestList ) { if ( android.text.TextUtils . equals ( ipAddress , request.ipAddress ) ) { com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "hasPendingConnectRequest, true for ip:" + ipAddress ) ) ; return true ; } } } } com.assistant.utils.Log . d ( com.assistant.connection.ConnectionManager.TAG , ( "hasPendingConnectRequest, false for reconnecting:" + ipAddress ) ) ; return false ; } 
private static boolean equals ( java.util.Properties p , java.lang.String optionKey , java.lang.String optionValue , boolean caseSensitive ) { java.lang.String v = p . getProperty ( optionKey ) ; if ( v == null ) return false ; if ( ! caseSensitive ) v = v . toLowerCase () ; return v . equals ( optionValue ) ; } 
public void onEvent ( blueprint.com.sage.events.BackEvent event ) { if ( ( mViewPager . getCurrentItem () ) == 0 ) { getActivity () . finish () ; } else { mViewPager . setCurrentItem ( ( ( mViewPager . getCurrentItem () ) - 1 ) , true ) ; } } 
private void grow () { byte [] old = _buffer ; _buffer = new byte [ ( _buffer.length ) * 2 ] ; java.lang.System . arraycopy ( old , 0 , _buffer , 0 , _position ) ; _encoder . init ( _buffer , _position , ( ( _buffer.length ) * 2 ) ) ; } 
public org.apache.catalina.tribes.Member getMember ( org.apache.catalina.tribes.Member mbr ) { org.apache.catalina.tribes.Member [] members = this . members ; if ( ( members.length ) > 0 ) { org.apache.catalina.tribes.Member result = null ; for ( int i = 0 ; ( i < ( members.length ) ) && ( result == null ) ; i ++ ) { if ( members [ i ] . equals ( mbr ) ) { result = members [ i ] ; } } return result ; } else { return null ; } } 
private java.lang.String createFullUrl ( final java.lang.String url , final java.util.Map < java.lang.String , java.lang.Object > params ) { java.lang.String fullUrl = url ; if ( params != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.Object > paramEntry : params . entrySet () ) { fullUrl = addParameter ( fullUrl , paramEntry . getKey () , paramEntry . getValue () . toString () ) ; } } return enableRedirect ( fullUrl ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private com.strobel.decompiler.ast.Expression updateCurrent ( com.strobel.decompiler.ast.Expression node ) { if ( ( node != null ) && ( node != ( Node.NULL ) ) ) { if ( node == scope ) { return null ; } node = parentLookup . get ( node ) ; return node ; } return null ; } 
@ java.lang.Override public double curve ( double t ) { if ( ( t *= 2 ) < 1 ) { return 0.5 * ( ( t * t ) * ( ( ( ( amount ) + 1 ) * t ) - ( amount ) ) ) ; } return 0.5 * ( ( ( ( t -= 2 ) * t ) * ( ( ( ( amount ) + 1 ) * t ) + ( amount ) ) ) + 2 ) ; } 
private static com.orientechnologies.orient.core.record.impl.ODocument getDocument ( final com.orientechnologies.orient.core.db.record.OIdentifiable id , final boolean forceReload ) { if ( id == null ) return null ; final com.orientechnologies.orient.core.record.impl.ODocument doc = id . getRecord () ; if ( ( doc != null ) && forceReload ) { try { doc . reload () ; } catch ( com.orientechnologies.orient.core.exception.ORecordNotFoundException e ) {} } return doc ; } 
@ java.lang.Override public void readFromNBT ( net.minecraft.nbt.NBTTagCompound nbtTagCompound ) { if ( nbtTagCompound . hasKey ( Names.NBT.SOURCES ) ) { net.minecraft.nbt.NBTTagList list = nbtTagCompound . getTagList ( Names.NBT.SOURCES , Constants.NBT.TAG_INT_ARRAY ) ; for ( int i = 0 ; i < ( list . tagCount () ) ; i ++ ) { sources . add ( de.keridos.floodlights.util.GeneralUtil . getPosFromIntArray ( list . getIntArrayAt ( i ) ) ) ; } } } 
@ java.lang.Override public void onResume () { super . onResume () ; com.arnastofnun.idordabanki.Globals g = ( ( com.arnastofnun.idordabanki.Globals ) ( this . getActivity () . getApplication () ) ) ; if ( ( g == null ) || ( ( g . getGlossaryState () ) == null ) ) {} else { resumeGlossaryState ( g ) ; } } 
private static float [] toEffectiveTableColumnWidth ( float [] tableColumnWidth ) { float [] result = new float [ tableColumnWidth.length ] ; for ( int i = 0 ; i < ( result.length ) ; ++ i ) { result [ i ] = ( tableColumnWidth [ i ] ) + ( com.itextpdf.layout.minmaxwidth.MinMaxWidthUtils . getEps () ) ; } return result ; } 
@ java.lang.Override public java.lang.String onPlaceholderRequest ( org.bukkit.entity.Player pPlayer , java.lang.String pIdentifier ) { if ( pPlayer == null ) return "" ; switch ( pIdentifier ) { case "clantag" : return clanTagProvider . getClanTag ( pPlayer . getName () ) ; case "clantag_custom_design" : java.lang.String clanTag = clanTagProvider . getClanTag ( pPlayer . getName () ) ; if ( ! ( clanTag . isEmpty () ) ) return CLAN_MATCHER . replaceFirst ( clanTag ) ; return clanTag ; default: return null ; } } 
protected static org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] createParameters ( int numberOfParameters ) { org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [] params = new org.eclipse.dawnsci.analysis.api.fitting.functions.IParameter [ numberOfParameters ] ; for ( int i = 0 ; i < numberOfParameters ; i ++ ) { params [ i ] = new uk.ac.diamond.scisoft.analysis.fitting.functions.Parameter () ; } return params ; } 
@ java.lang.Override public models.Account getByEmailAndPassword ( models.Account account ) { models.Account acc = ( ( models.Account ) ( getBaseCriteria () . add ( org.hibernate.criterion.Restrictions . eq ( "email" , account . getEmail () ) ) . uniqueResult () ) ) ; if ( ( acc != null ) && ( repositories.BCrypt . checkpw ( account . getPassword () , acc . getPassword () ) ) ) { return account ; } return null ; } 
public int next () { if ( ( currentPosition ) == ( ( realEstate.SortedList.list.length ) - 1 ) ) { currentPosition = 0 ; return realEstate.SortedList.list [ currentPosition ] ; } ( currentPosition ) ++ ; return realEstate.SortedList.list [ currentPosition ] ; } 
public void timedActions () { if ( ( timer . getTick () ) > 0 ) { timer . tick () ; currentTick = timer . getTick () ; java.lang.System.out . println ( currentTick ) ; } if ( ( currentTick ) == 5 ) { java.lang.System.out . println ( "Resetting..." ) ; relay . set ( Value.kOff ) ; barrelMotor . set ( 0.25 ) ; } if ( ( currentTick ) == 53 ) { barrelMotor . set ( 0 ) ; timer . reset () ; } } 
private void sendBtnActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.String user = userName . getText () ; java.lang.String pass1 = new java.lang.String ( password1 . getPassword () ) ; java.lang.String pass2 = new java.lang.String ( password2 . getPassword () ) ; boolean success = validateData ( user , pass1 , pass2 ) ; if ( ! success ) { success = validateData ( user , pass1 , pass2 ) ; } else { java.lang.String newAcctData = ( user + " " ) + pass1 ; connectNewUser ( newAcctData ) ; } } 
private < TGeo extends de.k3b.geo.api.GeoPointDto > TGeo getYandexUri ( java.lang.String uri , TGeo parseResult ) { int dataStart = contentIndexBehind ( uri , "ll=" ) ; java.lang.String [] parts = getParts ( uri , dataStart , "[,?&]" , 2 ) ; if ( parts != null ) { de.k3b.geo.io.GeoUri . setLatLonZoom ( parseResult , parts [ 1 ] , parts [ 0 ] , null ) ; } return uriParamParse ( uri , parseResult ) ; } 
@ java.lang.Override public void onSuccess ( int i , cz.msebera.android.httpclient.Header [] headers , byte [] reponseBody ) { userS . setAvatar ( android.graphics.BitmapFactory . decodeByteArray ( reponseBody , 0 , reponseBody.length ) ) ; if ( ( is_finish [ 0 ] ) == ( ( userSearch . size () ) / 3 ) ) { completeTextView . setAdapter ( new com.example.thanhvu.adsfacebook.model.UserSearchAdaper ( getContext () , R.id.list_view_status , userSearch ) ) ; completeTextView . showDropDown () ; } ( is_finish [ 0 ] ) ++ ; } 
private int getUsersRights () { com.google.firebase.auth.FirebaseUser user = com.google.firebase.auth.FirebaseAuth . getInstance () . getCurrentUser () ; if ( ( user == null ) || ( ( mCheckList ) == null ) ) { return 0 ; } java.lang.String email = user . getEmail () ; com.sunshinator.sharedchecklist.objects.UserRights rights = mCheckList . getAuthorizedUsers () . get ( email ) ; if ( rights == null ) { return 0 ; } return rights . getRights () ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( passcodeEntered . length () ) == 4 ) resetEntered () ; passcodeEntered += e . getActionCommand () ; setEntered ( passcodeEntered ) ; if ( ( temporal ) != null ) { temporal . repaint () ; } } 
@ java.lang.Override public com.iouseph.model.User userParse ( org.json.JSONObject json ) { com.iouseph.model.User user = null ; if ( json != null ) { user = new com.iouseph.model.User () ; user . setId ( json . getString ( "id" ) ) ; user . setPassword ( json . getString ( "password" ) ) ; user . setUsername ( json . getString ( "username" ) ) ; } return user ; } 
private void endTable ( ) throws java.io.IOException { if ( drawLines ) { drawLine ( "Row Bottom Border " , this . margin , this . yStart , ( ( ( this . margin ) + ( width ) ) + ( be.quodlibet.boxable.Table.xSpacing ) ) , this . yStart ) ; } this . tableContentStream . close () ; } 
public ontario.accounts.Account removeAccount ( java.lang.String numAccTemp ) { if ( numAccTemp == null ) { return null ; } else { boolean temp ; ontario.accounts.Account temp2 ; for ( int i = 0 ; i < ( acc . size () ) ; i ++ ) { temp = acc . get ( i ) . getAccountNumber () . equals ( numAccTemp ) ; if ( temp ) { temp2 = acc . get ( i ) ; acc . remove ( i ) ; return temp2 ; } } } return null ; } 
public static boolean putRegistryResource ( java.lang.String path , org.wso2.carbon.registry.api.Resource resource ) throws org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException { try { org.wso2.carbon.registry.core.Registry registry = org.wso2.carbon.device.mgt.extensions.device.type.template.util.DeviceTypeUtils . getConfigurationRegistry () ; registry . beginTransaction () ; registry . put ( path , resource ) ; registry . commitTransaction () ; return true ; } catch ( org.wso2.carbon.registry.api.RegistryException e ) { throw new org.wso2.carbon.device.mgt.extensions.device.type.template.exception.DeviceTypeMgtPluginException ( ( "Error occurred while persisting registry resource : " + ( e . getMessage () ) ) , e ) ; } } 
private org.medipi.medication.Schedule getExistingSchedule ( java.time.LocalDate date , org.medipi.medication.Medication medication , java.lang.String patientUuid ) { java.util.List < org.medipi.medication.Schedule > existing_schedules = scheduleDAOimpl . findByMedicationAndPatient ( medication , patientUuid ) ; for ( org.medipi.medication.Schedule schedule : existing_schedules ) { if ( ( ( schedule . getAssignedEndDate () ) == null ) || ( schedule . getAssignedEndDate () . toLocalDate () . isAfter ( date ) ) ) { return schedule ; } } return null ; } 
@ java.lang.Override public void close ( ) throws java.sql.SQLException { if ( ( connection ) != null ) { if ( com.intrack.transaction.jdbc.JdbcTransaction.log . isDebugEnabled () ) { com.intrack.transaction.jdbc.JdbcTransaction.log . debug ( ( ( "Closing JDBC Connection [" + ( connection ) ) + "]" ) ) ; } if ( ( connectionPool ) != null ) { connectionPool . release ( connection ) ; } else { connection . close () ; } connection = null ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/filterExercise" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String filterExercise ( org.springframework.ui.Model model , java.lang.String title , java.lang.String label ) { if ( ( title . equals ( "0" ) ) || ( title . equals ( "1" ) ) ) { model . addAttribute ( "exercises" , em . filterExercise ( label , label , title , label , true ) ) ; } else { model . addAttribute ( "exercises" , em . filterExercise ( label , label , label , title , false ) ) ; } return "listExercises" ; } 
static boolean cypher ( com.intellij.lang.PsiBuilder b , int l ) { if ( ! ( recursion_guard_ ( b , l , "cypher" ) ) ) return false ; int c = current_position_ ( b ) ; while ( true ) { if ( ! ( com.neueda.jetbrains.plugin.graphdb.language.cypher.parser.CypherParser . StatementItem ( b , ( l + 1 ) ) ) ) break; if ( ! ( empty_element_parsed_guard_ ( b , "cypher" , c ) ) ) break; c = current_position_ ( b ) ; } return true ; } 
public void put ( java.lang.String column , java.lang.Object value ) { if ( value == null ) { currentState . put ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , null , PUT_NULL ) ) ; } else { currentState . put ( column , new org.hibernate.ogm.datastore.spi.TupleOperation ( column , value , PUT ) ) ; } } 
private de.be4.classicalb.core.parser.rules.PSubstitution createConditionalFailAssignment ( de.be4.classicalb.core.parser.rules.TIdentifierLiteral ruleLiteral ) { final java.lang.String ctName = ( ruleLiteral . getText () ) + ( de.be4.classicalb.core.parser.rules.RulesTransformation.RULE_COUNTER_EXAMPLE_VARIABLE_SUFFIX ) ; de.be4.classicalb.core.parser.rules.PPredicate ifCondition = new de.be4.classicalb.core.parser.rules.ANotEqualPredicate ( createIdentifier ( ctName ) , new de.be4.classicalb.core.parser.rules.AEmptySetExpression () ) ; return new de.be4.classicalb.core.parser.rules.AIfSubstitution ( ifCondition , createRuleFailAssignment ( currentRule . getNameLiteral () ) , new java.util.ArrayList < de.be4.classicalb.core.parser.rules.PSubstitution > () , null ) ; } 
public static float variance ( final float [] array , final int offset , final int length ) { final float mean = com.tagtraum.jipes.math.Floats . arithmeticMean ( array , offset , length ) ; double sum = 0 ; for ( int i = offset ; i < ( offset + length ) ; i ++ ) { final float diff = ( array [ i ] ) - mean ; sum += ( diff * diff ) / length ; } return ( ( float ) ( sum ) ) ; } 
public com.sedmelluq.discord.lavaplayer.track.AudioTrack getNext () { if ( ( _playingSong ) == null ) { replacePlayingSong () ; _playingSong = _activePlaylist . get ( 0 ) ; return _playingSong ; } replacePlayingSong () ; _playingSong = _activePlaylist . get ( ( ( _activePlaylist . indexOf ( _playingSong ) ) + 1 ) ) ; return _playingSong ; } 
private void showSavedProfilePicture () { byte [] array = dbHandler . retrieveByteArrayFromDb () ; if ( array == null ) { profilePic . setImageResource ( defaultPic ) ; } else { android.graphics.Bitmap bitmap = convertByteArrayToBitmap ( array ) ; if ( bitmap == null ) { profilePic . setImageResource ( defaultPic ) ; } else { profilePic . setImageBitmap ( bitmap ) ; bitmap . recycle () ; } } } 
public void update ( int x , int y , double r , java.util.ArrayList < zombienado_v1.server.serverUnits.ServerZombie > zombies , java.util.ArrayList < java.awt.Point > walls ) { if ( ( health ) <= 0 ) { isDead = true ; } int xOld = this . x ; int yOld = this . y ; this . x += x ; this . y += y ; this . r = r ; checkWallsCollisions ( xOld , yOld , walls ) ; checkDamageTaking ( zombies ) ; } 
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } return false ; } 
protected void addNearbyDevice ( android.bluetooth.BluetoothDevice device ) { if ( ! ( hasPeer ( device . getName () ) ) ) { android.util.Log . d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG , ( "added new device " + ( device . getName () ) ) ) ; nearbyDevices . add ( device ) ; registerRemoteDevice ( device ) ; } else { android.util.Log . d ( interdroid.swan.crossdevice.swanplus.bluetooth.BTManager.TAG , ( ( "device " + ( device . getName () ) ) + " already present, won't add" ) ) ; } } 
@ java.lang.Override public void stateChanged ( javax.swing.event.ChangeEvent e ) { int alphaValue = sliderAlpha . getValue () ; java.lang.String hexColor = textFieldHexColor . getText () ; if ( ( hexColor . length () ) > 6 ) { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + ( hexColor . substring ( ( ( hexColor . length () ) - 6 ) ) ) ; } else { hexColor = ( convertAlphaValue2HexStr ( alphaValue ) ) + hexColor ; } invalidateUI ( alphaValue , hexColor , true ) ; } 
@ java.lang.Override protected void showInformationControl ( org.eclipse.swt.graphics.Rectangle subjectArea ) { super . showInformationControl ( subjectArea ) ; org.eclipse.jface.internal.text.InternalAccessor accessor = getInternalAccessor () ; org.eclipse.jface.text.IInformationControl iControl = accessor . getCurrentInformationControl () ; if ( ( iControl != null ) && ( ( fInformationControlCloser ) != null ) ) {} } 
protected android.os.Bundle createTransportOptionsBundle ( android.util.Pair [] sharedViews ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { if ( sharedViews != null ) { java.util.ArrayList < android.util.Pair > sharedViewList = extendsSharedViewsForTransport ( new java.util.ArrayList ( java.util.Arrays . asList ( sharedViews ) ) ) ; sharedViews = new android.util.Pair [ sharedViewList . size () ] ; sharedViewList . toArray ( sharedViews ) ; return android.app.ActivityOptions . makeSceneTransitionAnimation ( this , sharedViews ) . toBundle () ; } } return null ; } 
public static void main ( java.lang.String [] args ) { java.lang.String s ; if ( ( args.length ) > 0 ) { s = args [ 0 ] ; } else { s = "etc/server.properties" ; } org.alicebot.server.net.AliceServer aliceserver = new org.alicebot.server.net.AliceServer ( s ) ; java.lang.Runtime . getRuntime () . addShutdownHook ( new java.lang.Thread ( "Shutdown Thread" ) { public void run () { org.alicebot.server.net.AliceServer . shutdown () ; } } ) ; aliceserver . startup ( true ) ; } 
public void disconnect ( boolean expected ) { lookingForInput = false ; listener . shutdown () ; clientAliveTimer . cancel () ; pixyel_backend.connection.socket.SocketServer . disconnect ( this , socket . hashCode () ) ; try { socket . shutdownInput () ; socket . shutdownOutput () ; socket . close () ; } catch ( java.lang.Exception e ) { pixyel_backend.Log . logError ( ( "Could not close the socket of the client " + ( getName () ) ) , pixyel_backend.connection.socket.SocketClient . class ) ; } } 
@ org.junit.Test public void testGenerateName_withThreeToTwentyLength () { for ( int i = 3 ; i < 20 ; i ++ ) { final java.lang.String result = grammarNameGenerator . generateName ( i ) ; org.junit.Assert . assertTrue ( ( ( result . length () ) <= i ) ) ; org.junit.Assert . assertTrue ( ( ( result . length () ) > 0 ) ) ; } } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { hu.gehorvath.lampsv.core.Preset selectedPres = jlUsedPresets . getSelectedValue () ; int currentIndex = usedListModel . indexOf ( selectedPres ) ; if ( currentIndex < ( ( usedListModel . size () ) - 1 ) ) { usedListModel . removeElement ( selectedPres ) ; usedListModel . add ( ( currentIndex + 1 ) , selectedPres ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( selection ) == 1 ) || ( ! ( description . equals ( "" ) ) ) ) { uploadImage () ; } else android.widget.Toast . makeText ( getApplicationContext () , "Please fill the form" , Toast.LENGTH_SHORT ) . show () ; } 
boolean conditionIsTrue ( utilties.models.Game game , int id ) { int data1 = getData ( this . data1 , game , id ) ; int data2 = getData ( this . data2 , game , id ) ; switch ( this . operator ) { case LESS_THAN : return data1 < data2 ; case GREATER_THAN : return data1 > data2 ; case LESS_THAN_OR_EQUAL_TO : return data1 <= data2 ; case GREATER_THAN_OR_EQUAL_TO : return data1 >= data2 ; case EQUALS : return data1 == data2 ; default: return false ; } } 
public java.lang.String mapPath ( java.lang.String path ) { if ( ( mapList ) == null ) { return path ; } for ( int i = 0 ; i < ( mapList.length ) ; i ++ ) { if ( ( mapList [ i ] [ 0 ] . equals ( path ) ) || ( ( ( mapList [ i ] [ 0 ] ) + "/" ) . equals ( path ) ) ) { return mapList [ i ] [ 1 ] ; } } return path ; } 
@ java.lang.Override public boolean isInGroup ( java.lang.String world , java.lang.String permName , org.bukkit.entity.Player player ) { if ( plugin.config . isDefaultrankallworlds () ) { world = null ; } if ( ( plugin.config . permissionpluginhasworldsupport () ) == false ) { world = null ; } return net.slipcor.classranks.handlers.HandleVaultPerms.permission . playerInGroup ( world , player . getName () , permName ) ; } 
@ org.junit.Test public void testAsUTCTimeInTimeZone () { slash.common.type.CompactCalendar calendar = slash.common.type.CompactCalendar . fromMillis ( 1000000 ) ; slash.common.type.CompactCalendar inTimeZone = calendar . asUTCTimeInTimeZone ( java.util.TimeZone . getTimeZone ( "GMT+2" ) ) ; assertEquals ( calendar . getCalendar () . getTimeInMillis () , 1000000 ) ; assertEquals ( inTimeZone . getCalendar () . getTimeInMillis () , ( 1000000 - ( ( ( 2 * 60 ) * 60 ) * 1000 ) ) ) ; assertEquals ( "UTC" , inTimeZone . getTimeZoneId () ) ; } 
private Item [] toArray () { @ java.lang.SuppressWarnings ( value = "unchecked" ) Item [] items = ( ( Item [] ) ( new java.lang.Object [ size ] ) ) ; Deque < Item > . Node n = first ; for ( int i = 0 ; i < ( items.length ) ; i ++ ) { items [ i ] = n.item ; n = n.next ; } return items ; } 
public void writeData ( java.lang.String data ) { android.content.SharedPreferences sharedPref = getActivity () . getPreferences ( Context.MODE_PRIVATE ) ; java.lang.String contents = sharedPref . getString ( day , "" ) ; if ( ! ( contents . equals ( "" ) ) ) { contents += "\n" ; } android.content.SharedPreferences.Editor editor = sharedPref . edit () ; editor . putString ( day , ( contents + ( data . substring ( 0 , ( ( data . length () ) - 13 ) ) ) ) ) ; editor . commit () ; } 
public void setTable ( javafx.scene.control.TableView < com.eiko.back.table.CellValue > content ) { this . table = content ; this . setContent ( content ) ; if ( ( table ) == null ) return; int l = ( ( table . getItems () . size () ) + 1 ) * 40 ; this . setMinHeight ( l ) ; this . setMaxHeight ( l ) ; this . setPrefHeight ( l ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , @ android.support.annotation.NonNull java.lang.String [] permissions , @ android.support.annotation.NonNull int [] grantResults ) { switch ( requestCode ) { case me.esca.fragments.CookFragment.REQUEST_EXTERNAL_STORAGE : { if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.content.Intent photoPickerIntent = new android.content.Intent ( android.content.Intent.ACTION_PICK ) ; photoPickerIntent . setType ( "image/*" ) ; startActivityForResult ( photoPickerIntent , RESULT_LOAD_IMG ) ; } } } } 
public void reset () { app.park.com.vr.VrVideoActivity.isGameOver = false ; android.util.Log . d ( app.park.com.vr.VrVideoActivity.TAG , "[TEST] ========== RESET ==============" ) ; mVrVideoView . seekTo ( 0 ) ; app.park.com.vr.VrVideoActivity.currTime = 0 ; android.util.Log . d ( app.park.com.vr.VrVideoActivity.TAG , ( "[TEST] current position = " + ( mVrVideoView . getCurrentPosition () ) ) ) ; resetScore () ; } 
@ java.lang.Override public void addSettingsStateListener ( @ org.jetbrains.annotations.NotNull com.intellij.platform.WebProjectGenerator.SettingsStateListener stateListener ) { final javax.swing.text.JTextComponent editorComponent = ( ( javax.swing.text.JTextComponent ) ( sdkPathComboWithBrowse . getComboBox () . getEditor () . getEditorComponent () ) ) ; editorComponent . getDocument () . addDocumentListener ( new com.intellij.ui.DocumentAdapter () { protected void textChanged ( javax.swing.event.DocumentEvent e ) { stateListener . stateChanged ( ( ( validate () ) == null ) ) ; } } ) ; if ( ( validate () ) != null ) { stateListener . stateChanged ( false ) ; } } 
@ com.google.common.eventbus.Subscribe public void attemptToMatchSubmissionWithStudent ( edu.pdx.cs410J.grader.poa.POASubmissionSelected selected ) { for ( int i = 0 ; i < ( students . size () ) ; i ++ ) { edu.pdx.cs410J.grader.Student student = students . get ( i ) ; if ( submitterMatchesStudent ( selected . getSubmission () , student ) ) { this . view . setSelectedStudentIndex ( ( i + 1 ) ) ; fireStudentSelectedEvent ( student ) ; return; } } this . view . setSelectedStudentIndex ( 0 ) ; fireStudentSelectedEvent ( null ) ; } 
@ java.lang.Override public void removeRange ( int fromPosition , int itemCount ) { for ( int i = 0 ; i < itemCount ; i ++ ) if ( fromPosition < ( contentList . size () ) ) contentList . remove ( fromPosition ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeRemoved ( fromPosition , itemCount ) ; indi.yume.tools.adapter_renderer.recycler.RendererAdapter . notifyItemRangeChanged ( 0 , getItemCount () ) ; } 
private void invokeFCMService () { android.util.Log . d ( com.lognsys.kalrav.LoginActivity.TAG , "Rest invokeFCMService " ) ; if ( ( com.lognsys.kalrav.util.KalravApplication . getInstance () . getPrefs () . getDevice_token () ) == null ) { android.content.Intent i = new android.content.Intent ( this , com.lognsys.kalrav.FCM.FCMInstanceIdService . class ) ; startService ( i ) ; } android.util.Log . d ( com.lognsys.kalrav.LoginActivity.TAG , ( "Rest invokeFCMService KalravApplication.getInstance().getPrefs().getDevice_token() " + ( com.lognsys.kalrav.util.KalravApplication . getInstance () . getPrefs () . getDevice_token () ) ) ) ; } 
public void addPiece ( org.casestudy.target.chess.pieces.Piece piece ) { java.util.List < org.casestudy.target.chess.pieces.Piece > typePieces = this . pieces . get ( piece . getPieceType () ) ; if ( typePieces == null ) { typePieces = new java.util.ArrayList < org.casestudy.target.chess.pieces.Piece > () ; this . pieces . put ( piece . getPieceType () , typePieces ) ; } typePieces . add ( piece ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) private void takeFromInternalBuffer ( backtype.storm.tuple.Tuple input ) { operator.merger.MergerEntry nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; while ( nextReady != null ) { process ( new backtype.storm.tuple.TupleImpl ( context , ( ( java.util.List < java.lang.Object > ) ( nextReady . getO () ) ) , input . getSourceTask () , input . getSourceStreamId () ) ) ; nextReady = sharedChannels . getNextReadyObj ( ( "" + ( thisTask ) ) , channelID ) ; } } 
@ java.lang.Override public void onChildChanged ( com.google.firebase.database.DataSnapshot dataSnapshot , java.lang.String s ) { java.lang.System.out . println ( ( "key of order firebase ----> " + key ) ) ; java.lang.String key1 = dataSnapshot . getRef () . getKey () ; java.lang.System.out . println ( ( "key of order changed in database " + key1 ) ) ; if ( key . equals ( key1 ) ) { progressWheel . setVisibility ( View.INVISIBLE ) ; textView . setText ( "Your order is ready !!! " ) ; } } 
private java.lang.String askForFirstPassword () { java.lang.String ret = null ; java.lang.String s1 = askForPassword ( "Insert a password for secure archive. You MUST remember it unlock the archive!" ) ; if ( s1 != null ) { java.lang.String s2 = askForPassword ( "Please re-type the previous password" ) ; if ( s2 != null ) { if ( s1 . equals ( s2 ) ) { ret = s1 ; } else { javax.swing.JOptionPane . showMessageDialog ( this , "Two password doesn't match!" , "Error" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; ret = askForFirstPassword () ; } } } return ret ; } 
@ java.lang.Override void initNeo ( org.gbif.checklistbank.nub.source.NeoUsageWriter writer ) throws java.lang.Exception { try ( org.postgresql.core.BaseConnection c = clb . connect () ) { final org.postgresql.copy.CopyManager cm = new org.postgresql.copy.CopyManager ( c ) ; cm . copyOut ( ( ( ( ( "COPY (" + ( ( "SELECT usage.id, usage.parent_fk, usage.basionym_fk, usage.rank, usage.is_synonym, usage.status, usage.nom_status, node.scientific_name" + " FROM name_usage usage join name node ON name_fk=node.id" ) + " WHERE dataset_key = '" ) ) + ( source.key ) ) + "')" ) + " TO STDOUT WITH NULL ''" ) , writer ) ; org.gbif.checklistbank.nub.source.ClbUsageIteratorNeo.LOG . info ( "Loaded nub source data {} with {} usages into neo4j" , source.name , writer . getCounter () ) ; } } 
private void addChip ( java.lang.String communication ) { if ( ( mNachoTextView ) != null ) { mNachoTextView . append ( communication ) ; int start = ( mNachoTextView . getText () . length () ) - ( communication . length () ) ; int last = mNachoTextView . getText () . length () ; mNachoTextView . chipify ( start , last ) ; } else android.util.Log . e ( mx.com.quiin.contactpicker.ui.ContactPickerFragment.TAG , "mNachoTextView is null" ) ; } 
public void setUserName ( java.lang.String userName ) { if ( userName == null ) throw new java.lang.IllegalArgumentException ( "UserName must not be null." ) ; if ( ( userName . length () ) > 50 ) throw new java.lang.IllegalArgumentException ( "UserName is too long." ) ; if ( ( userName . length () ) < 3 ) throw new java.lang.IllegalArgumentException ( "UserName is too short." ) ; this . userName = userName ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getClass () ) != ( obj . getClass () ) ) return false ; org.sqlproc.sample.simple.model.BillingDetails other = ( ( org.sqlproc.sample.simple.model.BillingDetails ) ( obj ) ) ; if ( ( id ) != ( other.id ) ) return false ; return true ; } 
@ java.lang.Override public void setSelectedIndex ( final int index ) { programmaticTextChange = true ; if ( index > ( - 1 ) ) { getUiReference () . select ( index ) ; } else { getUiReference () . deselect ( getUiReference () . getSelectionIndex () ) ; } programmaticTextChange = false ; if ( ! ( getUiReference () . isFocusControl () ) ) { fireInputChanged ( getUiReference () . getText () , index ) ; } } 
public void generateDispText ( java.lang.CharSequence c ) { if ( ( ( ( currValue ) == null ) || ( ( currValue ) == "0" ) ) && ( c != "C" ) ) { currValue = ( ( java.lang.CharSequence ) ( c ) ) ; } else if ( c == "C" ) { currValue = "0" ; } else { currValue = ( currValue . toString () ) + c ; } } 
@ java.lang.Override public void run () { int counter = 0 ; while ( counter < ( this . num ) ) { java.lang.System.out . println ( ( ( ( "Get: " + ( java.lang.Thread . currentThread () . getName () ) ) + " From " ) + ( bucket . getToken () ) ) ) ; counter ++ ; } } 
public void delLabel ( int label ) { for ( java.util.Map < java.util.List < org.projectfloodlight.openflow.protocol.instruction.OFInstruction > , java.lang.Integer > m : switchLabelMap . values () ) { synchronized ( m ) { for ( java.util.List < org.projectfloodlight.openflow.protocol.instruction.OFInstruction > list : m . keySet () ) { java.lang.Integer i = m . get ( list ) ; if ( ( i . intValue () ) == label ) { m . remove ( list ) ; break; } } } } net.floodlightcontroller.savi.forwarding.mpls.MPLSLabelManager.labelQueue . add ( label ) ; } 
public java.lang.String getFreemakerTemplate ( java.util.HashMap < java.lang.String , java.lang.Object > model ) { java.lang.StringBuffer buf = new java.lang.StringBuffer () ; try { buf . append ( org.springframework.ui.freemarker.FreeMarkerTemplateUtils . processTemplateIntoString ( freemarkerConfiguration . getTemplate ( "fm_template.txt" ) , model ) ) ; return buf . toString () ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( ( "Exception occured while processing fmtemplate: " + ( e . getMessage () ) ) ) ; } return "" ; } 
protected void move ( int x ) { moving = true ; moveLocation = x ; if ( ( moveLocation ) < ( this . getx () ) ) { facingRight = false ; left = true ; right = false ; } else if ( ( moveLocation ) > ( this . getx () ) ) { facingRight = true ; left = false ; right = true ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent resultIntent ) { super . onActivityResult ( requestCode , resultCode , resultIntent ) ; switch ( requestCode ) { case diy.uigeneric.sample.SampleListActivity.REQUEST_ADD : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { loadData () ; listView . getAdapter () . notifyDataSetChanged () ; } break; case diy.uigeneric.sample.SampleListActivity.REQUEST_VIEW : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { loadData () ; listView . getAdapter () . notifyDataSetChanged () ; } break; } } 
public boolean equals ( java.lang.Object o ) { if ( o instanceof FoodItem ) { FoodItem i = ( ( FoodItem ) ( o ) ) ; return ( this . itemName . equals ( i.itemName ) ) && ( this . tagCode . equals ( i.tagCode ) ) ; } else if ( o instanceof char [] ) { return this . tagCode . equals ( ( ( char [] ) ( o ) ) ) ; } return false ; } 
public void ignoreBlank () { if ( ! ( Settings.ignoreBlanks ) ) return; while ( ( ( application.VirtualCursor . getCurrentElement ( application.VirtualCursor.gridPane ) ) != null ) && ( ( ( ( javafx.scene.control.Label ) ( application.VirtualCursor . getCurrentElement ( application.VirtualCursor.gridPane ) ) ) . getText () . charAt ( 0 ) ) == ' ' ) ) { moveCursor () ; } } 
private void initRotateView () { if ( ( mRotateView ) != null ) { return; } mRotateView = new android.widget.ImageView ( getContext () ) ; mRotateView . setImageResource ( R.drawable.ic_rotate ) ; mRotateView . setBackgroundResource ( R.drawable.stretch_shape_background ) ; mRotateView . setOnTouchListener ( createRotateListener () ) ; final int rotateViewGravity = ( android.view.Gravity.RIGHT ) | ( android.view.Gravity.TOP ) ; final net.yazeed44.resizableviewlibrary.LayoutParams rotateViewLayoutParams = new net.yazeed44.resizableviewlibrary.LayoutParams ( ViewGroup.LayoutParams.WRAP_CONTENT , ViewGroup.LayoutParams.WRAP_CONTENT , rotateViewGravity ) ; addView ( mRotateView , rotateViewLayoutParams ) ; } 
public static int [] barcodeToIntArray ( java.lang.String barcode ) { if ( barcode == null ) { return new int [ 0 ] ; } java.lang.String [] barcodeArray = barcode . trim () . split ( "(?!^)" ) ; int [] barcodeToInt = new int [ barcodeArray.length ] ; for ( int i = 0 ; i < ( barcodeArray.length ) ; i ++ ) { barcodeToInt [ i ] = java.lang.Integer . parseInt ( barcodeArray [ i ] ) ; } return barcodeToInt ; } 
private void initPuzzleOrGetFromExtras () { android.os.Bundle bundle = getIntent () . getExtras () ; if ( ( bundle != null ) && ( ( bundle . get ( "Puzzle" ) ) != null ) ) { puzzle = new com.sudoku.puzzlesolver.Puzzle ( ( ( java.lang.Integer [] [] ) ( bundle . get ( "Puzzle" ) ) ) ) ; } else { puzzle = new com.sudoku.puzzlesolver.Puzzle () ; } } 
public engine.network.packet.Packet getContentPacket () { engine.network.packet.Packet out = engine.network.packet.Packet . getNewContentPacket ( Packet.MAX_PACKET_SIZE ) ; out.iterator . putNextShortUnsigned ( buff . getID () ) ; out.iterator . putNextInt ( getDurationLeft () ) ; int mapSize = gndData . getMapSize () ; if ( mapSize == 0 ) { out.iterator . putNextShortUnsigned ( 0 ) ; } else { engine.network.packet.Packet gndContent = gndData . getContentPacket () ; out.iterator . putNextShortUnsigned ( gndContent . getSize () ) ; out.iterator . putNextContentPacket ( gndContent ) ; } out.iterator . trimPacket () ; return out ; } 
public void done ( ca.winnipegtrails.winnipegtrails.UserEggLinks object , com.parse.ParseException e ) { if ( e != null ) { if ( WinnipegTrailsApplication.APPDEBUG ) { android.util.Log . d ( WinnipegTrailsApplication.APPTAG , "An error occurred while querying for user eggs" , e ) ; } return; } android.content.Intent intent = new android.content.Intent ( this , ca.winnipegtrails.winnipegtrails.EggActivity . class ) ; intent . putExtra ( "id" , egg . getObjectId () ) ; startActivity ( intent ) ; } 
private void addItemsToQueue () { for ( int i = 0 ; i < ( _numIterations ) ; i ++ ) { java.lang.String message = ( ( "Producer # " + ( _id ) ) + " message # " ) + i ; if ( ( i + 1 ) == ( _numIterations ) ) { _queue . AddToQueue ( message , _listener ) ; } else { _queue . AddToQueue ( message ) ; } nachos.threads.KThread . yield () ; } } 
public boolean isCollidingRect ( pro.Sprite s ) { if ( isCollideable () ) { if ( ( ( ( ( getRight () ) > ( s . getLeft () ) ) && ( ( getLeft () ) < ( s . getRight () ) ) ) && ( ( getBottom () ) > ( s . getTop () ) ) ) && ( ( getTop () ) < ( s . getBottom () ) ) ) { java.lang.System.out . println ( true ) ; return true ; } } return false ; } 
public lv.ailab.lvtb.universalizer.conllu.UDv2Relations advSitToUD ( org.w3c.dom.Node aNode ) throws javax.xml.xpath.XPathExpressionException { java.lang.String tag = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getTag ( aNode ) ; if ( tag . matches ( "n.*|xn.*|p.*|.*\\[(pre|post|rel).*|mc.*|y.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.OBL ; java.lang.String lemma = lv.ailab.lvtb.universalizer.transformator.syntax.Utils . getLemma ( aNode ) ; if ( ( tag . matches ( "r.*" ) ) || ( lemma . equals ( "%" ) ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.ADVMOD ; if ( tag . matches ( "q.*" ) ) return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DISCOURSE ; warn ( aNode ) ; return lv.ailab.lvtb.universalizer.conllu.UDv2Relations.DEP ; } 
public int advance ( int target ) throws java.io.IOException { int doc = scorer . advance ( target ) ; if ( doc == ( NO_MORE_DOCS ) ) { return doc ; } currentScore = innerScore () ; if ( ( currentScore ) < ( minScore ) ) { return nextDoc () ; } return doc ; } 
private void writeFile ( java.io.BufferedWriter fw , java.util.List < java.lang.String > corpus ) throws java.io.IOException { for ( java.lang.String str : corpus ) { fw . write ( ( str + "\n" ) ) ; } fw . write ( "\n" ) ; fw . flush () ; } 
@ java.lang.Override public void setThreadCount ( int numThreads ) { if ( ( this . hessian ) instanceof org.encog.util.concurrency.MultiThreadable ) { ( ( org.encog.util.concurrency.MultiThreadable ) ( this . hessian ) ) . setThreadCount ( numThreads ) ; } else if ( ( numThreads != 1 ) && ( numThreads != 0 ) ) { throw new org.encog.neural.networks.training.TrainingError ( ( ( "The Hessian object in use(" + ( this . hessian . getClass () . toString () ) ) + ") does not support multi-threaded mode." ) ) ; } } 
public static void run ( Game game , AvalonBot bot ) { for ( int i = 0 ; i < ( game.pendingMissionPlayers . size () ) ; i ++ ) { bot . sendMessage ( ( ( ( ( "Type /" + ( ( game.gameId ) - 1 ) ) + " success or /" ) + ( ( game.gameId ) - 1 ) ) + " fail" ) , game.pendingMissionPlayers . get ( i ) . id ) ; } ( game.state ) ++ ; game.pmMissionCount = 0 ; game.missionFailCount = 0 ; } 
public java.lang.String copy ( com.google.auto.value.processor.AutoValueProcessor.Property property ) { if ( ( copyOf ) == null ) { return property . toString () ; } java.lang.String copy = java.lang.String . format ( copyOf , property ) ; if ( property . isNullable () ) { copy = java.lang.String . format ( "(%s == null ? null : %s)" , property , copy ) ; } return copy ; } 
public void reorderToolbarContainer () { toolbarsContainer . removeAllViews () ; java.util.Collections . sort ( com.example.root.myalarmclock.MainActivity.mAlarmList , new java.util.Comparator < com.example.root.myalarmclock.Alarm > () { @ java.lang.Override public int compare ( com.example.root.myalarmclock.Alarm r1 , com.example.root.myalarmclock.Alarm r2 ) { return r1 . getAlarmDate () . compareTo ( r2 . getAlarmDate () ) ; } } ) ; for ( int x = 0 ; x < ( com.example.root.myalarmclock.MainActivity.mAlarmList . size () ) ; x ++ ) { toolbarsContainer . addView ( com.example.root.myalarmclock.MainActivity.mAlarmList . get ( x ) . getToolbar () ) ; } } 
void disconnected ( int number ) { clientHandlers [ number ] = null ; ( connections ) -- ; if ( ( users [ ( number + 1 ) ] ) != null ) send ( new Message ( Message.TYPE_DISCONNECT , number , ( ( users [ ( number + 1 ) ] ) + " disconnected" ) , users [ ( number + 1 ) ] ) ) ; users [ ( number + 1 ) ] = null ; waitForConnection ( number ) ; } 
private void createElanForwardingTablesList ( java.lang.String elanName , org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry macEntry , org.opendaylight.controller.md.sal.binding.api.WriteTransaction tx ) { org.opendaylight.yangtools.yang.binding.InstanceIdentifier < org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry > macEntryId = org.opendaylight.netvirt.elan.utils.ElanUtils . getMacEntryOperationalDataPath ( elanName , macEntry . getMacAddress () ) ; com.google.common.base.Optional < org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.elan.rev150602.forwarding.entries.MacEntry > existingMacEntry = elanUtils . read ( broker , LogicalDatastoreType.OPERATIONAL , macEntryId ) ; if ( ( ! ( existingMacEntry . isPresent () ) ) && ( ( elanUtils . getElanMacTable ( elanName ) ) != null ) ) { tx . put ( LogicalDatastoreType.OPERATIONAL , macEntryId , macEntry , true ) ; } } 
public net.anyflow.lannister.message.OutboundMessageStatus setOutboundMessageStatus ( int messageId , net.anyflow.lannister.message.OutboundMessageStatus.Status targetStatus ) { net.anyflow.lannister.message.OutboundMessageStatus status = outboundMessageStatuses . get ( messageId ) ; if ( status == null ) { return null ; } status . targetStatus ( targetStatus ) ; return outboundMessageStatuses . put ( status . messageId () , status ) ; } 
@ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) public void addInformation ( net.minecraft.item.ItemStack par1ItemStack , net.minecraft.entity.player.EntityPlayer par2EntityPlayer , java.util.List par3List , boolean par4 ) { if ( ( par1ItemStack . getItemDamage () ) == 0 ) { if ( ( par1ItemStack.stackTagCompound ) == null ) { par1ItemStack.stackTagCompound = new net.minecraft.nbt.NBTTagCompound () ; par1ItemStack.stackTagCompound . setInteger ( "Uses" , 5 ) ; } par3List . add ( ( "Uses remaining: " + ( par1ItemStack.stackTagCompound . getInteger ( "Uses" ) ) ) ) ; } } 
public int aggiungi_puntata_reale () { fiches = ( fiches ) - ( puntata ) ; if ( ( fiches ) < 0 ) { int buf = fiches ; fiches = 0 ; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
public com.hgames.rhogue.generation.map.DungeonGenerator setGrassObjectives ( int percent , int nbPools ) { if ( 100 < percent ) throw new java.lang.IllegalStateException ( ( "Percentage of grass must be negative or in [0, 100]. Received: " + percent ) ) ; if ( 0 <= percent ) this . grassPercentage = percent ; if ( 0 <= nbPools ) this . grassPatches = nbPools ; return this ; } 
private long getNextBuildNumber ( @ javax.annotation.Nonnull java.lang.Object entry ) { if ( entry instanceof hudson.model.Queue.Item ) { hudson.model.Queue.Task task = ( ( hudson.model.Queue.Item ) ( entry ) ) . task ; if ( task instanceof hudson.model.Job ) { return ( ( hudson.model.Job ) ( task ) ) . getNextBuildNumber () ; } } else if ( entry instanceof hudson.model.Run ) { return ( ( hudson.model.Run ) ( entry ) ) . getParent () . getNextBuildNumber () ; } return ( jenkins.widgets.HistoryPageEntry . getEntryId ( entry ) ) + 1 ; } 
public void voteThreshold ( int downVotedTrack ) { if ( downVotedTrack < ( mQueueElementList . size () ) ) { if ( ( ( ( ( threshold ) + ( mQueueElementList . get ( downVotedTrack ) . upvoteList . size () ) ) - ( mQueueElementList . get ( downVotedTrack ) . downvoteList . size () ) ) <= 0 ) || ( ( ( MainActivity.mWifiDirectActivity.ipsOnNetwork . size () ) + 1 ) == 1 ) ) { deleteTrack ( downVotedTrack ) ; } } } 
protected static java.lang.String singleSearch ( java.lang.String keyword , java.lang.String text , boolean i ) { java.lang.String returnString = "" ; for ( java.lang.String s : poormansgrep.BonusProject.Search . search ( keyword , text , i ) ) { if ( s != null ) returnString += s ; } return returnString ; } 
private static float findMax ( java.util.ArrayList < java.lang.Float > list , int targetIndex ) { float max = - 1.0F ; for ( int a = 0 ; a <= targetIndex ; a ++ ) { if ( ( list . get ( a ) ) > max ) { max = list . get ( a ) ; } } return max ; } 
public static boolean cancel ( int index ) { if ( ( index == ( - 1 ) ) || ( ( co.theengine.loomdemo.LoomHTTP.clients [ index ] ) == null ) ) { return false ; } co.theengine.loomdemo.LoomHTTP.clients [ index ] . cancelRequests ( co.theengine.loomdemo.LoomHTTP._context , true ) ; return true ; } 
private void setMessage ( final org.apache.logging.log4j.message.Message msg ) { if ( msg instanceof org.apache.logging.log4j.message.ReusableMessage ) { org.apache.logging.log4j.message.ReusableMessage reusable = ( ( org.apache.logging.log4j.message.ReusableMessage ) ( msg ) ) ; reusable . formatTo ( getMessageTextForWriting () ) ; if ( ( parameters ) != null ) { parameters = reusable . swapParameters ( parameters ) ; parameterCount = reusable . getParameterCount () ; } } else { if ( ( ! ( org.apache.logging.log4j.core.util.Constants.FORMAT_MESSAGES_IN_BACKGROUND ) ) && ( msg != null ) ) { msg . getFormattedMessage () ; } this . message = msg ; } } 
public android.database.Cursor getAllNotes ( java.lang.String sortOrder ) { android.database.Cursor cursor = null ; if ( sortOrder == "date" ) { cursor = mDb . query ( NotesContract.TABLE_NAME , null , null , null , null , null , ( ( NotesContract.COLUMN_DATE ) + " DESC" ) ) ; } else if ( sortOrder == "fav" ) { cursor = mDb . query ( NotesContract.TABLE_NAME , null , null , null , null , null , ( ( NotesContract.COLUMN_FAV ) + " DESC" ) ) ; } return cursor ; } 
private void init () { for ( int i = 1 ; i <= ( levelCount ) ; i ++ ) { levels . add ( new world.Level ( i ) ) ; } backgroundX = java.lang.Integer . parseInt ( currentLevel . getWallData ( 0 ) ) ; backgroundY = java.lang.Integer . parseInt ( currentLevel . getWallData ( 1 ) ) ; background = new renderer.Background ( 0 , 0 , this , currentLevel . getImageData ( 0 ) ) ; inventory = new renderer.Texture ( "Assets/Pictures/Textures/Inventory_l1.png" ) ; c = new vault1.CharacterFolder.Controller ( this ) ; } 
public void update ( long timeElapsed , long nanosPerSecond , double xForces , double yForces ) { double secondsElapsed = timeElapsed / nanosPerSecond ; x += ( velX ) * secondsElapsed ; y += ( velY ) * secondsElapsed ; velX += ( acelX ) * secondsElapsed ; velY += ( acelY ) * secondsElapsed ; acelX = xForces / ( mass ) ; acelY = yForces / ( mass ) ; } 
public void putCharArray ( final char [] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfChar ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
public java.util.ArrayList < lexer.Token > tokenize ( java.lang.String input ) { java.util.ArrayList < lexer.Token > resultingTokens = new java.util.ArrayList < lexer.Token > () ; lexer.Token newToken ; if ( input == null ) { java.lang.System.out . println ( "Input not set!" ) ; return null ; } java.util.Collections . sort ( token ) ; while ( ( input . length () ) > 0 ) { newToken = testTokens ( input ) ; input = input . substring ( newToken . getCompleteLength () ) ; resultingTokens . add ( newToken ) ; } return resultingTokens ; } 
@ java.lang.Override public nez.parser.vm.MozInst exec ( nez.parser.vm.ParserMachineContext sc ) throws nez.parser.TerminationException { if ( ( sc . prefetch () ) == ( this . byteChar ) ) { if ( ( this . byteChar ) == 0 ) { return this . next ; } sc . move ( 1 ) ; } return this . next ; } 
private void showWarning () { if ( ( ( toastWidget ) == null ) && ( ( getContext () ) != null ) ) { toastWidget = new bei.m3c.widgets.ToastWidget ( getContext () , getContext () . getString ( R.string.tv_warning ) , getActivity () . findViewById ( android.R.id.content ) ) ; } if ( ( toastWidget ) != null ) { toastWidget . flash () ; } } 
public void closeUDP () { if ( ( mMulticastSocket ) != null ) { try { mMulticastSocket . leaveGroup ( mMulticastAddress ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } mMulticastSocket . close () ; mMulticastSocket = null ; } } 
private void findJourneyPics ( com.xiangyou.product.Product.Day day , int index , java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.String > > journeyPicsMap ) { java.util.Map < java.lang.String , java.lang.String > pictures = journeyPicsMap . get ( ( ( com.xiangyou.product.ProductRepository.PREFIX_DAY ) + index ) ) ; if ( pictures != null ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : pictures . entrySet () ) { day . addPicture ( entry . getKey () , entry . getValue () ) ; } } } 
boolean setMapSize ( int x , int y ) { if ( ( x < 2 ) || ( x > 8 ) ) { return false ; } else { if ( ( x > 4 ) && ( y < 8 ) ) { return false ; } else if ( ( y > 50 ) || ( y < 5 ) ) { return false ; } } size = y ; return true ; } 
public void replace ( int position , java.lang.Object content ) { if ( ( position <= 0 ) || ( ( nodes ) <= 0 ) ) return; if ( position > ( nodes ) ) return; Node replace = start ; for ( int i = 0 ; i < ( position - 1 ) ; i ++ ) { replace = replace . getNextNode () ; } replace . setContent ( content ) ; } 
private java.lang.String getChargeRangeAsString () { java.lang.String charges = "" ; for ( int i = minCharge ; i <= ( maxCharge ) ; i ++ ) { if ( ! ( charges . isEmpty () ) ) { charges += "," ; } charges += i + "+" ; } return charges ; } 
private void turnOffFlash () { isFlashOn = false ; if ( ( ( camera ) == null ) || ( ( params ) == null ) ) { return; } params = camera . getParameters () ; params . setFlashMode ( Camera.Parameters.FLASH_MODE_OFF ) ; camera . setParameters ( params ) ; camera . stopPreview () ; isFlashOn = false ; imgButtonOnOff . setImageResource ( R.drawable.ic_flash_off ) ; } 
@ java.lang.Override public org.talend.core.model.process.IProcess getProcessFromItem ( org.talend.core.model.properties.Item item , boolean loadScreenshots ) { if ( ( org.talend.core.model.properties.impl.ProcessItemImpl . class ) == ( item . getClass () ) ) { java.lang.Process process = null ; process = new java.lang.Process ( item . getProperty () ) ; process . loadXmlFile ( loadScreenshots ) ; return process ; } return null ; } 
private boolean validateTimeRequirement () { util.Util . clearError ( lblTimeRequirementError ) ; if ( txtTimeRequirement . isMessageDefault () ) { return true ; } try { int timeRequirement = java.lang.Integer . parseInt ( txtTimeRequirement . getText () ) ; if ( timeRequirement < 0 ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, must be positive whole numbers only" ) ; return false ; } } catch ( java.lang.NumberFormatException e ) { util.Util . setError ( lblTimeRequirementError , "Invalid value, whole numbers only" ) ; return false ; } return true ; } 
private java.lang.String getWordEndingAtPosition ( int startingPosition , int atPosition ) { java.lang.String startingText = text . substring ( startingPosition , atPosition ) ; int lastIndex = startingText . lastIndexOf ( " " ) ; if ( lastIndex == ( - 1 ) ) { return startingText ; } else { return startingText . substring ( lastIndex , ( ( startingText . length () ) - 1 ) ) . trim () ; } } 
lab9.ULLMap < K , V > . Entry get ( K k ) { if ( ( k != null ) && ( k . equals ( key ) ) ) { return this ; } if ( ( next ) == null ) { return null ; } return next . get ( k ) ; } 
@ java.lang.Override public void onRouteFound ( java.util.List < com.mybus.model.BusRouteResult > results ) { cancelProgressDialog () ; mMyBusMap . removeChargingPointMarkers () ; if ( ( results == null ) || ( results . isEmpty () ) ) { showBottomSheetResults ( false ) ; mViewPagerAdapter = null ; android.widget.Toast . makeText ( this , R.string.toast_no_result_found , Toast.LENGTH_LONG ) . show () ; return; } else { startResultsActivity ( results ) ; } } 
public static com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandler newMergeRequestHookTriggerHandler ( boolean triggerOnMergeRequest , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequest , boolean skipWorkInProgressMergeRequest ) { if ( triggerOnMergeRequest || ( triggerOpenMergeRequest != ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.never ) ) ) { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerImpl ( com.dabsquared.gitlabjenkins.trigger.handler.merge.MergeRequestHookTriggerHandlerFactory . retrieveAllowedStates ( triggerOnMergeRequest , triggerOpenMergeRequest ) , skipWorkInProgressMergeRequest ) ; } else { return new com.dabsquared.gitlabjenkins.trigger.handler.merge.NopMergeRequestHookTriggerHandler () ; } } 
public boolean setActiveInstIdx ( int instIdx ) { programming.Program prog = getActiveProg () ; if ( ( ( prog != null ) && ( instIdx >= 0 ) ) && ( instIdx <= ( prog . getInstructions () . size () ) ) ) { activeInstIdx = instIdx ; return true ; } else { activeInstIdx = - 1 ; return false ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { ar.com.tzulberti.archerytraining.model.tournament.TournamentSerie tournamentSerie = self.tournamentDAO . createNewSerie ( self.tournament ) ; if ( tournamentSerie == null ) { java.lang.System.err . println ( "TODO XXX PENDING: el usuario no deberia ver el boton en este caso" ) ; return; } ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment practiceTestingFragment = ar.com.tzulberti.archerytraining.fragments.tournament.ViewSerieInformationFragment . createInstance ( tournamentSerie ) ; android.support.v4.app.FragmentManager fragmentManager = activity . getSupportFragmentManager () ; fragmentManager . beginTransaction () . replace ( R.id.container , practiceTestingFragment ) . commit () ; } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { android.content.SharedPreferences prefs = mContext . getSharedPreferences ( "apprater" , Context.MODE_PRIVATE ) ; java.lang.Long date_firstLaunch = java.lang.System . currentTimeMillis () ; if ( editor != null ) { editor . putLong ( "launch_count" , 0 ) ; editor . putLong ( "date_firstlaunch" , date_firstLaunch ) ; editor . commit () ; } dialog . dismiss () ; } 
@ java.lang.Override public void processResults ( org.json.JSONObject result ) { int minutes = getTime ( result ) ; if ( minutes <= ( oter . getTime () ) ) { com.joebruzek.oter.utilities.SmsSender . sendText ( oter ) ; oterLayer . removeOter ( oter ) ; } else { com.joebruzek.oter.utilities.AlarmScheduler . scheduleWakeUp ( this , oter , ( minutes - ( oter . getTime () ) ) ) ; } this . stopSelf () ; } 
private void requestAd ( org.json.JSONArray args , org.apache.cordova.CallbackContext callbackContext ) throws org.json.JSONException { final java.lang.String zoneId = args . getString ( 0 ) ; if ( zoneId != null ) { zoneCallbacks . put ( zoneId , callbackContext ) ; } else { defaultZoneCallback = callbackContext ; } ir.tapsell.sdk.TapsellExtraPlatforms . requestAd ( cordova . getActivity () , zoneId ) ; } 
private boolean isDuplicateInCurrCategory ( java.util.HashSet < com.transformuk.bdt.domain.CrawledContent > currContentSet , com.transformuk.bdt.domain.CrawledContent newContent ) { boolean isDuplicate = false ; java.util.Iterator < com.transformuk.bdt.domain.CrawledContent > iterator = currContentSet . iterator () ; while ( iterator . hasNext () ) { com.transformuk.bdt.domain.CrawledContent existingContent = iterator . next () ; if ( ( ( newContent . getTitle () ) != null ) && ( existingContent . getTitle () . equals ( newContent . getTitle () ) ) ) { isDuplicate = true ; break; } } return isDuplicate ; } 
public static com.sl.algorithms.traversal.Node reverseList ( com.sl.algorithms.traversal.Node head ) { com.sl.algorithms.traversal.Node prev ; com.sl.algorithms.traversal.Node curr ; com.sl.algorithms.traversal.Node next ; prev = null ; curr = head ; while ( curr != null ) { next = curr.next ; curr.next = prev ; prev = curr ; curr = next ; } head = prev ; return head ; } 
private void mapLetters ( BoggleBoard board , int rows , int cols ) { letters = new edu.princeton.cs.algs4.SeparateChainingHashST < java.lang.Integer , java.lang.Character > () ; for ( int i = 0 ; i < rows ; i ++ ) for ( int j = 0 ; j < cols ; j ++ ) { int x = ( i * cols ) + j ; letters . put ( x , board . getLetter ( i , j ) ) ; } } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view , java.lang.String url ) { android.util.Log . d ( com.gsma.mobileconnect.helpers.AuthorizationService.TAG , ( "shouldOverrideUrlLoading url=" + url ) ) ; boolean status = false ; if ( ( url != null ) && ( url . startsWith ( redirectUri ) ) ) { handleCompletion ( view , url ) ; } else { view . loadUrl ( url ) ; } return status ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.wewow.utils.ShareUtils su = new com.wewow.utils.ShareUtils ( this ) ; su . setContent ( subject . getTitle () ) ; su . setUrl ( subject . getShare_link () ) ; if ( ( shareBitmap ) != null ) {} su . share () ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public V get ( ) throws java.io.IOException { if ( ( monkey != null ) && ( filer != null ) ) { synchronized ( monkey ) { long ai = MapStore.INSTANCE . get ( filer , monkey , keyBytes ) ; if ( ai > ( - 1 ) ) { return ( ( V ) ( values [ ( ( int ) ( ai ) ) ] ) ) ; } } } return null ; } 
public java.util.List < java.lang.Long > getMembersList () { java.util.List < java.lang.Long > memberLists = new java.util.ArrayList < java.lang.Long > () ; if ( ( this . members . length () ) <= 0 ) return memberLists ; java.lang.String [] list = this . members . split ( "," ) ; for ( int i = 0 ; i < ( list.length ) ; i ++ ) memberLists . add ( java.lang.Long . parseLong ( list [ i ] ) ) ; return memberLists ; } 
public double variance ( double [] dataset ) { double degreeOfFreedom = dataset.length ; double var = 0 ; double mean = mean ( dataset ) ; for ( int i = 0 ; i < ( dataset.length ) ; i ++ ) { var += java.lang.Math . pow ( ( ( dataset [ i ] ) - mean ) , 2 ) ; } var /= degreeOfFreedom ; return var ; } 
static int randNum ( int min , int max ) { java.util.Random rand = new java.util.Random () ; if ( min > max ) { min = 0 ; max = 0 ; } int top = ( max - min ) + 1 ; if ( top <= 0 ) { top = 1 ; } int randomInt = ( rand . nextInt ( top ) ) + min ; return randomInt ; } 
public void rotate ( double winkel ) { double radius = java.lang.Math . sqrt ( ( ( ( x ) * ( x ) ) + ( ( y ) * ( y ) ) ) ) ; this . x = radius * ( java.lang.Math . cos ( winkel ) ) ; this . y = radius * ( java.lang.Math . sin ( winkel ) ) ; } 
@ org.junit.Test public void testGenerateOption () { for ( int i = 0 ; i < 10000 ; i ++ ) { testQuestion1 . generateQuestion ( 4 ) ; tests.Fraction answer = testQuestion1 . generateAnswer ( 4 ) ; assertFalse ( testQuestion1 . generateOption ( 4 ) . checkEquals ( testQuestion1 . getCorrectAnswer () ) ) ; } } 
@ java.lang.Override public void onSuccess ( java.util.ArrayList < com.givekesh.baboon.Utils.Feeds > result ) { if ( result != null ) { if ( ( result . size () ) < 10 ) { recyclerView . disableLoadMore () ; isLoadingMore = false ; } else recyclerView . enableLoadMore () ; if ( isSwipeRefresh ) { mFeedsArrayList . clear () ; mWaveSwipeRefreshLayout . setRefreshing ( false ) ; isSwipeRefresh = false ; } if ( isFirstLoad ) { mFeedsArrayList = result ; isFirstLoad = false ; } else mFeedsArrayList . addAll ( result ) ; refreshRecycler () ; } } 
public boolean collidesWith ( cz.cvut.fel.syrovkar.rpgEngine.archetypes.CollisionBox other ) { return ( ( ( ( this . x ) <= ( ( other.x ) + ( other.sizeX ) ) ) && ( ( ( this . x ) + ( this . sizeX ) ) >= ( other.x ) ) ) && ( ( this . y ) <= ( ( other.y ) + ( other.sizeY ) ) ) ) && ( ( ( this . y ) + ( this . sizeY ) ) >= ( other.y ) ) ; } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > adapterView , android.view.View view , int position , long id ) { android.database.Cursor cursor = ( ( android.database.Cursor ) ( adapterView . getItemAtPosition ( position ) ) ) ; if ( cursor != null ) { ( ( it.jaschke.alexandria.api.Callback ) ( getActivity () ) ) . onItemSelected ( cursor . getString ( cursor . getColumnIndex ( AlexandriaContract.BookEntry._ID ) ) ) ; } } 
private ch.bfh.bti7535.w2016.data.Document test ( ch.bfh.bti7535.w2016.data.Document document ) { double classifiedPositive = 0.0 ; double classifiedNegative = 0.0 ; for ( ch.bfh.bti7535.w2016.algorithm.features.AbstractFeature feature : featurePipeline ) { classifiedPositive += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_POSITIVE ) ; classifiedNegative += calcProbabilityTimesOccurrence ( feature , Classification.SENTIMENT_NEGATIVE ) ; } document . setTestResult ( ( classifiedPositive > classifiedNegative ? ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_POSITIVE : ch.bfh.bti7535.w2016.data.Classification.SENTIMENT_NEGATIVE ) ) ; return document ; } 
public boolean startAnimation ( int radius ) { if ( ( mThumbCurrentRadius ) == radius ) return false ; mRadius = radius ; if ( ( getHandler () ) != null ) { resetAnimation () ; mRunning = true ; getHandler () . postAtTime ( this , ( ( android.os.SystemClock . uptimeMillis () ) + ( com.rey.material.util.ViewUtil.FRAME_DURATION ) ) ) ; invalidate () ; return true ; } else { mThumbCurrentRadius = mRadius ; invalidate () ; return false ; } } 
@ javax.annotation.Nonnull private byte [] loadFromServerFirst ( java.lang.String id ) { try { return loadFromServer ( id ) ; } catch ( java.lang.Exception serverException ) { if ( ( serverException . getCause () ) instanceof org.sonar.api.utils.HttpDownloader.HttpException ) { throw serverException ; } byte [] cached = loadFromCache ( id ) ; if ( cached != null ) { return cached ; } throw new java.lang.IllegalStateException ( org.sonar.batch.bootstrap.WSLoader.FAIL_MSG , serverException ) ; } } 
@ java.lang.Override public javax.el.ExpressionFactory getExpressionFactory () { if ( ( expressionFactory ) == null ) { init () ; synchronized ( this ) { if ( ( expressionFactory ) == null ) { javax.enterprise.inject.spi.BeanManager bm = beanManager () ; if ( bm == null ) { expressionFactory = application . getExpressionFactory () ; } else { expressionFactory = bm . wrapExpressionFactory ( application . getExpressionFactory () ) ; } } } } return expressionFactory ; } 
@ java.lang.Override public void service ( final javax.servlet.ServletRequest req , final javax.servlet.ServletResponse res ) throws java.io.IOException , javax.servlet.ServletException { if ( ! ( ( req instanceof javax.servlet.http.HttpServletRequest ) && ( res instanceof javax.servlet.http.HttpServletResponse ) ) ) { throw new javax.servlet.ServletException ( "non-HTTP request or response" ) ; } javax.servlet.http.HttpServletRequest request = ( ( javax.servlet.http.HttpServletRequest ) ( req ) ) ; javax.servlet.http.HttpServletResponse response = ( ( javax.servlet.http.HttpServletResponse ) ( res ) ) ; doGet ( request , response ) ; } 
@ java.lang.Override public void toggleFullScreen () { try { if ( mClearGLWindow . isFullscreen () ) { mClearGLWindow . setFullscreen ( false ) ; if ( ( ( mLastWindowWidth ) > 0 ) && ( ( mLastWindowHeight ) > 0 ) ) mClearGLWindow . setSize ( mLastWindowWidth , mLastWindowHeight ) ; } else { mLastWindowWidth = mClearGLWindow . getWindowWidth () ; mLastWindowHeight = mClearGLWindow . getWindowHeight () ; mClearGLWindow . setFullscreen ( true ) ; } requestDisplay () ; } catch ( final java.lang.Exception e ) { e . printStackTrace () ; } } 
@ dataClasses.Test public void testCalculateFare () { double pricePerFifthMile = 0.5 ; double totalFare = 0.0 ; double overTwoPassengerCharge = 2.0 ; double dropOffCharge = 2.5 ; double distance = 10.5 ; int numberOfPassengers = 5 ; if ( numberOfPassengers > 2 ) { totalFare = overTwoPassengerCharge * ( numberOfPassengers - 2 ) ; } totalFare += dropOffCharge ; totalFare += distance * pricePerFifthMile ; assertEquals ( 13.75 , totalFare , 0.1 ) ; } 
@ java.lang.Override public void onRemoteVideoTrackReceive ( com.quickblox.videochat.webrtc.QBRTCSession session , com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack , java.lang.Integer userID ) { remoteVideoView = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.remoteVideoView ) ) ) ; android.util.Log . d ( "Track" , ( "remoteVideoView is " + ( remoteVideoView ) ) ) ; if ( ( remoteVideoView ) != null ) { org.webrtc.VideoRenderer remouteRenderer = new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( remoteVideoView , QBGLVideoView.Endpoint.REMOTE ) ) ; videoTrack . addRenderer ( remouteRenderer ) ; remoteVideoView . setVideoTrack ( videoTrack , QBGLVideoView.Endpoint.REMOTE ) ; android.util.Log . d ( "Track" , "onRemoteVideoTrackReceive() is raned" ) ; } } 
@ cz.muni.fi.pa165.controller.RequestMapping ( value = "/new" , method = RequestMethod.GET ) public java.lang.String newLoan ( @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long bookId , @ cz.muni.fi.pa165.controller.RequestParam ( required = false ) java.lang.Long memberId , org.springframework.ui.Model model ) { if ( bookId != null ) { cz.muni.fi.pa165.controller.BookDTO book = bookFacade . findById ( bookId ) ; model . addAttribute ( "book" , book ) ; } if ( memberId != null ) { cz.muni.fi.pa165.controller.MemberDTO member = memberFacade . findById ( memberId ) ; model . addAttribute ( "member" , member ) ; } model . addAttribute ( "createLoan" , new cz.muni.fi.pa165.controller.CreateLoanDTO () ) ; return "loan/new" ; } 
public void onPostExecute ( java.lang.String result ) { if ( ( result != null ) && ( ! ( result . equals ( "" ) ) ) ) { java.lang.String campusChar = com.ihwapp.android.model.Curriculum . getCampusChar ( campus ) ; android.content.SharedPreferences prefs = com.ihwapp.android.model.Curriculum.ctx . getSharedPreferences ( ( ( year ) + campusChar ) , Context.MODE_PRIVATE ) ; prefs . edit () . putString ( "scheduleJSON" , result ) . commit () ; parseScheduleJSON () ; } } 
public java.util.List < core.moves.Move > getLastNMoves ( int n ) { java.util.List < core.moves.Move > moves = new java.util.ArrayList ( this . moveHistory ) ; java.util.Collections . reverse ( moves ) ; if ( ( n > 0 ) && ( n < ( this . moveHistory . size () ) ) ) moves = moves . subList ( 0 , n ) ; return moves ; } 
private boolean isInTriggerZone ( int x , int y ) { return ( ( ( x > ( main.SessionController.HITBOX_X . getFirst () ) ) && ( x < ( main.SessionController.HITBOX_X . getSecond () ) ) ) && ( y > ( main.SessionController.HITBOX_Y . getFirst () ) ) ) && ( y < ( main.SessionController.HITBOX_Y . getSecond () ) ) ; } 
public Model.Grupa dohvatiGrupuPoIDu ( int idGrupa ) { org.hibernate.Query query ; otvoriSession () ; query = hibernateSession . createQuery ( ( ( "from Grupa as K where K.IDGrupa = '" + idGrupa ) + "'" ) ) ; Model.Grupa odabranaGrupa ; if ( ( query . list () . size () ) > 0 ) { odabranaGrupa = ( ( Model.Grupa ) ( query . list () . get ( 0 ) ) ) ; } else { odabranaGrupa = null ; } zatvoriSession () ; return odabranaGrupa ; } 
@ java.lang.Override public void resetPassword ( org.envirocar.server.core.entities.User user , java.lang.String verificationCode ) throws org.envirocar.server.core.exception.BadRequestException { org.envirocar.server.mongo.entity.MongoPasswordReset status = this . passwordResetDao . getPasswordResetStatus ( user , verificationCode ) ; if ( ( status != null ) && ( ! ( status . isExpired () ) ) ) { if ( status . getCode () . equals ( verificationCode ) ) { save ( user ) ; } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Wrong verification code." ) ; } } else { throw new org.envirocar.server.core.exception.BadRequestException ( "Verification code already expired." ) ; } this . passwordResetDao . remove ( status ) ; } 
@ java.lang.Override public int compare ( com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData < ? > arg0 , com.jwetherell.algorithms.data_structures.IntervalTree.IntervalData < ? > arg1 ) { if ( ( arg0.end ) > ( arg1.end ) ) return - 1 ; if ( ( arg1.end ) > ( arg0.end ) ) return 1 ; return 0 ; } 
@ java.lang.Override public net.minecraft.item.ItemStack removeStackFromSlot ( int i ) { if ( i >= ( inventoryContents.length ) ) return net.minecraft.item.ItemStack.EMPTY ; if ( ! ( inventoryContents [ i ] . isEmpty () ) ) { net.minecraft.item.ItemStack itemstack = inventoryContents [ i ] ; inventoryContents [ i ] = net.minecraft.item.ItemStack.EMPTY ; return itemstack ; } return net.minecraft.item.ItemStack.EMPTY ; } 
public static void main ( java.lang.String [] args ) { MainInterface . init () ; int choice = MainInterface . prompt () ; while ( true ) { MainInterface . performChoice ( choice ) ; if ( choice == 0 ) break; choice = MainInterface . prompt () ; } } 
public double getExploit () { if ( ( context . getActivePlayerId () ) == 0 ) { return ( player1Value ) / ( ( numVisits ) + ( epsilon ) ) ; } else { return ( ( numVisits ) - ( player1Value ) ) / ( ( numVisits ) + ( epsilon ) ) ; } } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { android.util.Log . i ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG , ( ( ( ( ( "Upgrading database " + ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB ) ) + " from version " ) + oldVersion ) + " to " ) + newVersion ) ) ; if ( newVersion >= ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.DB_SCHEMA_VERSION_2 ) ) { db . execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_REQUIRE_CREATE ) ; db . execSQL ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.ScriptDbHelper.TBL_RESOURCE_CREATE ) ; } else { android.util.Log . e ( at.pardus.android.webview.gm.store.ScriptStoreSQLite.TAG , ( ( ( ( "Unexpected database upgrade from version" + oldVersion ) + " to " ) + newVersion ) + ". No known upgrade path" ) ) ; } } 
@ java.lang.Override public void onBindViewHolder ( com.spiewak.workoutlogger.adapters.SetAdapter.SetHolder holder , int position ) { com.spiewak.workoutlogger.models.WorkoutSet workoutSet = workoutSets . get ( position ) ; java.lang.String setAndReps = ( ( java.lang.Integer . toString ( workoutSet . getReps () ) ) + "x" ) + ( java.lang.Double . toString ( workoutSet . getLoad () ) ) ; holder.workoutSet . setText ( setAndReps ) ; } 
public boolean isFriendOrNot ( int userID1 , int userID2 ) { return ( ( ( ( this . userID1 ) == userID1 ) && ( ( this . userID2 ) == userID2 ) ) || ( ( ( this . userID1 ) == userID2 ) && ( ( this . userID2 ) == userID1 ) ) ) || ( userID1 == userID2 ) ; } 
void execute ( final java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceAbstract > services , final org.sleuthkit.datamodel.Image image ) { java.util.List < org.sleuthkit.datamodel.Image > images = new java.util.ArrayList < org.sleuthkit.datamodel.Image > () ; images . add ( image ) ; org.sleuthkit.autopsy.ingest.IngestManager.logger . log ( java.util.logging.Level.INFO , ( "Will enqueue image: " + ( image . getName () ) ) ) ; execute ( services , images ) ; } 
public void addAvailableLevel ( int i , int numStars , app.Game g ) { view.AvailableLevelView av = new view.AvailableLevelView ( i ) ; if ( numStars != ( - 1 ) ) { av . unlockLevel ( numStars ) ; addListenerToButton ( i , g ) ; } levels . add ( av ) ; scrollablePanel . add ( av ) ; } 
private void initBlocks ( android.content.Context context ) { for ( int x = 0 ; x <= ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockXAmount ) ; x ++ ) { for ( int y = 0 ; y < ( com.waterfall.thomaswatson.theprovider.PlayerArea.blockYAmount ) ; y ++ ) { com.waterfall.thomaswatson.theprovider.Block block = new com.waterfall.thomaswatson.theprovider.Block ( context ) ; block . setXPosition ( x ) ; block . setYPosition ( y ) ; blocks . add ( block ) ; } } } 
private static java.io.File writeHex ( de.neemann.assembler.asm.Program p , java.io.File name ) throws de.neemann.assembler.expression.ExpressionException , java.io.IOException { if ( name != null ) { java.io.File f = de.neemann.assembler.gui.Main . makeFilename ( name , ".asm" , ".hex" ) ; try ( java.io.PrintStream ps = new java.io.PrintStream ( f , "utf-8" ) ) { p . traverse ( new de.neemann.assembler.asm.formatter.HexFormatter ( ps ) ) ; } return f ; } return null ; } 
public static java.lang.String getStringFromExcelCell ( org.apache.poi.ss.usermodel.Cell cell ) { java.lang.String ret = "" ; try { if ( ( org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC ) == ( cell . getCellType () ) ) { ret = "" + ( ( long ) ( cell . getNumericCellValue () ) ) ; } else { ret = cell . toString () ; } } catch ( java.lang.Exception e ) {} return ret ; } 
@ java.lang.Override public void onCommandDataMessageReceived ( com.tenkiv.tekdaqc.ATekdaqc tekdaqc , com.tenkiv.tekdaqc.communication.message.ABoardMessage message ) { if ( ( mMessengerList . size () ) > 0 ) { com.tenkiv.tekdaqc.android.application.service.Bundle dataBundle = new com.tenkiv.tekdaqc.android.application.service.Bundle () ; dataBundle . putString ( TekCast.DATA_MESSSAGE_TEKDAQC , tekdaqc . getSerialNumber () ) ; dataBundle . putSerializable ( TekCast.DATA_MESSSAGE , message ) ; com.tenkiv.tekdaqc.android.application.service.Message dataMessage = com.tenkiv.tekdaqc.android.application.service.Message . obtain () ; dataMessage.what = com.tenkiv.tekdaqc.android.application.util.TekCast.TEKDAQC_COMMAND_MESSAGE ; dataMessage . setData ( dataBundle ) ; sendMessageToRegisteredListeners ( dataMessage , tekdaqc . getSerialNumber () ) ; } } 
public int read ( java.io.InputStream in , int offset , int byteCount ) throws java.io.IOException { if ( ( offset + byteCount ) > ( _bytes.length ) ) { byte [] newBytes = new byte [ byteCount + offset ] ; java.lang.System . arraycopy ( _bytes , 0 , newBytes , 0 , _bytes.length ) ; _bytes = newBytes ; } _size = in . read ( _bytes , offset , byteCount ) ; return _size ; } 
public static java.lang.String protectAction ( java.lang.String originAction ) { if ( originAction == null ) { return null ; } if ( originAction . startsWith ( "_VA_" ) ) { return originAction ; } java.lang.String newAction = com.lody.virtual.client.env.SpecialComponentList.PROTECTED_ACTION_MAP . get ( originAction ) ; if ( newAction == null ) { newAction = ( com.lody.virtual.client.env.SpecialComponentList.PROTECT_ACTION_PREFIX ) + originAction ; } return newAction ; } 
@ java.lang.Override public zildo.fwk.script.context.LocaleVarContext clone () { try { if ( ( locales . size () ) > 0 ) { zildo.fwk.script.context.LocaleVarContext cloned = ( ( zildo.fwk.script.context.LocaleVarContext ) ( super . clone () ) ) ; cloned.involvedVariables = new java.util.HashSet < java.lang.String > () ; cloned . cloneLocales ( this ) ; return cloned ; } else { return this ; } } catch ( java.lang.CloneNotSupportedException e ) { throw new java.lang.RuntimeException ( "Unable to clone this context !" ) ; } } 
public void dump ( java.io.DataOutputStream out ) throws java.io.IOException { super . dump ( out ) ; out . writeInt ( low ) ; out . writeInt ( ( ( high ) - ( low ) ) ) ; for ( int i = 0 ; i < ( switchAddresses.length ) ; i ++ ) { out . writeShort ( switchAddresses [ i ] ) ; out . writeShort ( switchBranchTargetIndexes [ i ] ) ; } } 
private void takeScreenshotFor ( java.lang.String logLine ) { com.android.ddmlib.RawImage rawImage ; try { rawImage = device . getScreenshot () ; } catch ( java.lang.Exception e ) { return; } if ( rawImage == null ) { return; } java.util.Map < java.lang.String , java.lang.String > keyValueMap = com.github.rtyley.android.screenshot.paparazzo.OnDemandScreenshotService . keyValueMapFor ( logLine ) ; java.awt.image.BufferedImage image = com.github.rtyley.android.screenshot.paparazzo.OnDemandScreenshotService . bufferedImageFrom ( rawImage ) ; for ( com.github.rtyley.android.screenshot.paparazzo.processors.ScreenshotProcessor screenshotProcessor : processors ) { screenshotProcessor . process ( image , keyValueMap ) ; } } 
@ org.junit.Test public void deleteBucket ( ) throws java.lang.Exception { final java.lang.String bucket = "bucket-to-delete" ; createBucketRestCall ( bucket ) ; alluxio.AlluxioURI uri = new alluxio.AlluxioURI ( ( ( alluxio.AlluxioURI.SEPARATOR ) + bucket ) ) ; org.junit.Assert . assertTrue ( mFileSystemMaster . listStatus ( uri , alluxio.master.file.options.ListStatusOptions . defaults () ) . isEmpty () ) ; deleteBucketRestCall ( bucket ) ; try { mFileSystemMaster . getFileInfo ( uri , alluxio.proxy.s3.S3ClientRestApiTest.GET_STATUS_OPTIONS ) ; } catch ( alluxio.exception.FileDoesNotExistException e ) { return; } org.junit.Assert . fail ( "bucket should have been removed" ) ; } 
public static void printResult ( double [] result ) { java.lang.System.out . println ( "" ) ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { java.lang.System.out . print ( ( ( result [ i ] ) + " " ) ) ; } } 
@ java.lang.Override public void removeCard ( org.magic.api.beans.MagicCard mc , org.magic.api.beans.MagicCollection collection ) throws java.sql.SQLException { org.magic.api.dao.impl.HsqlDAO.logger . info ( ( ( ( "remove " + mc ) + " from " ) + collection ) ) ; java.sql.PreparedStatement pst = con . prepareStatement ( "delete from cards where name=? and edition=? and collection=?" ) ; pst . setString ( 1 , mc . getName () ) ; pst . setString ( 2 , mc . getEditions () . get ( 0 ) . getId () ) ; pst . setString ( 3 , collection . getName () ) ; pst . executeUpdate () ; } 
public heronarts.p3lx.ui.component.UIDoubleBox setParameter ( final heronarts.lx.parameter.BoundedParameter parameter ) { if ( ( this . parameter ) != null ) { this . parameter . removeListener ( this . parameterListener ) ; } this . parameter = parameter ; if ( parameter != null ) { this . minValue = parameter.range.min ; this . maxValue = parameter.range.max ; this . parameter . addListener ( this . parameterListener ) ; setValue ( parameter ) ; } return this ; } 
@ org.springframework.web.bind.annotation.RequestMapping public org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > check ( @ org.springframework.web.bind.annotation.RequestParam ( value = "uname" ) java.lang.String uname ) throws java.lang.Exception { com.wmanual.jpa.domain.User user = userRepository . findByUsername ( uname ) ; if ( user != null ) { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( user , org.springframework.http.HttpStatus.OK ) ; } else { return new org.springframework.http.ResponseEntity < com.wmanual.jpa.domain.User > ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } } 
@ java.lang.Override public void run () { run = true ; for ( ; ( ( a ) < ( steps ) ) && ( run ) ; ( a ) ++ ) { java.lang.System.out . println ( a ) ; tick () ; notifyViews () ; } a = 0 ; run = false ; } 
@ java.lang.Override public void run () { if ( ( Main.currentLevel ) != ( - 1 ) ) { javafx.application.Platform . runLater ( new java.lang.Runnable () { @ java.lang.Override public void run () { application.EnvironmentGUIPane pane = new application.EnvironmentGUIPane () ; pane . startLevel ( Main.currentLevel ) ; Main.scene . setRoot ( pane ) ; } } ) ; application.MainMenu.mainMenuTimer . cancel () ; } } 
public java.util.List < org.todss.model.IntakeMoment > test ( org.todss.algorithm.AlgorithmContext context ) { final long start = java.lang.System . currentTimeMillis () ; final java.util.List < org.todss.model.IntakeMoment > list = org.todss.algorithm.SmartAlgorithm . run ( context ) ; java.lang.System.out . println ( ( ( "Took " + ( ( java.lang.System . currentTimeMillis () ) - start ) ) + " ms." ) ) ; assert ( list != null ) && ( ( list . size () ) > 0 ) ; return list ; } 
public boolean guess ( int guessNumber ) { count += 1 ; if ( guessNumber == ( secretNumber ) ) { this . hint = "Correct.  The secret number is " + ( secretNumber ) ; return true ; } else if ( guessNumber > ( secretNumber ) ) { this . hint = "Sorry, your guess is too big" ; return false ; } else { this . hint = "Sorry, your guess is too small" ; return false ; } } 
public static void main ( java.lang.String [] args ) { com.javastud.springmvcweb.designpatterns.singleton.Company comp1 = com.javastud.springmvcweb.designpatterns.singleton.Company . getInstance () ; java.lang.System.out . println ( comp1 ) ; com.javastud.springmvcweb.designpatterns.singleton.Company comp2 = com.javastud.springmvcweb.designpatterns.singleton.Company . getInstance () ; java.lang.System.out . println ( comp2 ) ; java.lang.System.out . println ( ( comp1 == comp2 ) ) ; try { java.lang.Runtime r = java.lang.Runtime . getRuntime () ; r . exec ( "calc" ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public boolean isFinished ( final org.springframework.http.client.ClientHttpResponse response ) throws java.io.IOException { final com.gooddata.dataset.TaskState taskState = extractData ( response , com.gooddata.dataset.TaskState . class ) ; if ( taskState . isSuccess () ) { return true ; } else if ( ! ( taskState . isFinished () ) ) { return false ; } throw new com.gooddata.GoodDataException ( ( ( errorMessage + ": " ) + ( taskState . getMessage () ) ) ) ; } 
public void run () { while ( true ) { try { socket = servidor . accept () ; AgregarSocket ( socket ) ; java.lang.System.out . println ( ( "Nuevo cliente conectado: " + ( java.lang.String . valueOf ( socket ) ) ) ) ; readData ( socket ) ; } catch ( java.lang.Exception e ) { continue; } } } 
private java.lang.String getAllByIdJsonString ( java.lang.String _id ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( "{\"selector\": {" ) ; sb . append ( "\"_id\": {\"$gt\": 0}," ) ; sb . append ( ( ( "\"$and\": [{\"topicId\":\"" + _id ) + "\"}]" ) ) ; sb . append ( "}}" ) ; return sb . toString () ; } 
public void moveNextPosition ( boolean smooth ) { if ( ( getRealAdapter () ) == null ) throw new java.lang.IllegalStateException ( "You did not set a slider adapter" ) ; mViewPager . setCurrentItem ( ( ( mViewPager . getCurrentItem () ) + 1 ) , smooth ) ; if ( mIsShuffle ) { setPagerTransformer ( true , getShuffleTransformer () ) ; } } 
protected int put ( final bee.creative.iam.IAMEncoder.IAMBaseListEncoder list ) throws java.lang.NullPointerException { if ( list == null ) throw new java.lang.NullPointerException () ; final int result = this . lists . size () ; this . lists . add ( result , list ) ; return result ; } 
private void requestMoreAfterEmission ( int emitted ) { if ( emitted > 0 ) { rx.internal.operators.OperatorPublish.OriginSubscriber < T > origin = state . getOrigin () ; if ( origin != null ) { long r = origin.originOutstanding . addAndGet ( ( - emitted ) ) ; if ( r <= ( origin.THRESHOLD ) ) { origin . requestMore ( ( ( rx.internal.util.RxRingBuffer.SIZE ) - ( origin.THRESHOLD ) ) ) ; } } } } 
public double getRawAnalogStickARX () { try { if ( ( ( gp1 . getRawAxis ( 2 ) ) > 0.1 ) || ( ( gp1 . getRawAxis ( 2 ) ) < ( - 0.1 ) ) ) return gp1 . getRawAxis ( 2 ) ; } catch ( java.lang.Exception e ) {} try { if ( ( xbox . getRawAxis ( 2 ) ) != 0.0 ) return xbox . getRawAxis ( 2 ) ; } catch ( java.lang.Exception e ) {} return 0.0 ; } 
public static void ReadMovie () { java.io.BufferedReader br = null ; java.lang.String strLine = "" ; try { br = new java.io.BufferedReader ( new java.io.FileReader ( "\\files\\Movie1.txt" ) ) ; while ( ( strLine = br . readLine () ) != null ) { eu.ooti.forumlite.String_show . string_show ( strLine ) ; java.lang.Thread . sleep ( 2000 ) ; } } catch ( java.lang.Exception e ) {} } 
@ java.lang.Override public void run () { if ( ( fragment . getView () ) != null ) { android.widget.TextView tv1 = ( ( android.widget.TextView ) ( fragment . getView () . findViewById ( R.id.achievementscreen_accelerometer ) ) ) ; tv1 . setText ( ( ( ( ( ( ( "X: " + ( acc_1 ) ) + " G, Y: " ) + ( acc_2 ) ) + " G, Z: " ) + ( acc_3 ) ) + " G" ) ) ; } } 
public void remove ( com.dd.dataTypes.bodyAreas.Item item ) throws com.dd.dataTypes.bodyAreas.InventoryException { if ( items . containsValue ( item ) ) { this . items . remove ( item . getName () ) ; } else { throw new com.dd.dataTypes.bodyAreas.InventoryException ( ( ( item . titleToString () ) + " is not in your inventory. " ) ) ; } } 
void addToBoundIntent ( android.content.Intent intent , android.app.IServiceConnection connection ) { com.lody.virtual.server.am.ServiceRecord.IntentBindRecord record = peekBinding ( intent ) ; if ( record == null ) { record = new com.lody.virtual.server.am.ServiceRecord.IntentBindRecord () ; record.intent = intent ; synchronized ( bindings ) { bindings . add ( record ) ; } } record . addConnection ( connection ) ; } 
@ java.lang.Override public void call ( java.lang.String s ) { if ( ! ( android.text.TextUtils . isEmpty ( s ) ) ) { if ( platform == ( me.shaohui.shareutil.share.SharePlatform.QZONE ) ) { shareToQZoneForMedia ( title , targetUrl , summary , s , activity , listener ) ; } else { shareToQQForMedia ( title , summary , targetUrl , s , activity , listener ) ; } } else { startFailed ( activity , listener , new java.lang.Exception ( "image fetch error" ) ) ; } } 
public void addToView ( java.lang.String resource , org.reactome.web.diagram.data.interactors.model.DiagramInteractor interactor ) { uk.ac.ebi.pwp.structures.quadtree.client.QuadTree < org.reactome.web.diagram.data.interactors.model.DiagramInteractor > tree = interactorsTreeCache . get ( resource ) ; if ( tree == null ) { tree = new uk.ac.ebi.pwp.structures.quadtree.client.QuadTree ( minX , minY , maxX , maxY , org.reactome.web.diagram.data.InteractorsContent.NUMBER_OF_ELEMENTS , org.reactome.web.diagram.data.InteractorsContent.MIN_AREA ) ; interactorsTreeCache . put ( resource , tree ) ; } tree . add ( interactor ) ; } 
private boolean noCourseTwicePerDay ( classscheduling.Course c , classscheduling.Day day , classscheduling.GradeDay gd ) { if ( ( gd . count ( c.code ) ) > 1 ) { errors . add ( ( ( ( ( ( ( gd.grade . name () ) + ": too many " ) + ( c.name ) ) + " classes" ) + " on " ) + ( day.name ) ) ) ; return false ; } return true ; } 
public static nben.mesh.registration.AnglePotential newWellAnglePotential ( double scale , int [] [] T , double [] [] X ) { return new nben.mesh.registration.AnglePotential ( new nben.mesh.registration.InfiniteWellFunction ( ( scale / ( 3 * ( T [ 0 ] . length ) ) ) , 0.0 , java.lang.Math.PI ) , nben.mesh.registration.Util . facesToAngles ( T ) , X ) ; } 
public void onSwipeBottom () { if ( ( contains ( LevelArrays.MOVE_UP , currentLevel [ y ] [ x ] ) ) && ( allowInput ) ) { ( y ) -- ; move () ; startAnimation ( 0 , 0 , 0 , ( ( com.ollum.mazecape.Level.width ) / 3 ) ) ; vibrator . vibrate ( VIBRATE_SHORT ) ; } else { vibrator . vibrate ( VIBRATE_MEDIUM ) ; } } 
private static java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > retrieveHandlers ( boolean triggerOnPush , com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest triggerOpenMergeRequestOnPush , boolean skipWorkInProgressMergeRequest ) { java.util.List < com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandler > result = new java.util.ArrayList <> () ; if ( triggerOnPush ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.PushHookTriggerHandlerImpl () ) ; } if ( triggerOpenMergeRequestOnPush == ( com.dabsquared.gitlabjenkins.trigger.TriggerOpenMergeRequest.both ) ) { result . add ( new com.dabsquared.gitlabjenkins.trigger.handler.push.OpenMergeRequestPushHookTriggerHandler ( skipWorkInProgressMergeRequest ) ) ; } return result ; } 
@ java.lang.Override public net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > onItemRightClick ( net.minecraft.world.World worldIn , net.minecraft.entity.player.EntityPlayer player , net.minecraft.util.EnumHand hand ) { net.minecraft.item.ItemStack heldItem = player . getHeldItem ( hand ) ; if ( heldItem != ( net.minecraft.item.ItemStack.EMPTY ) ) { if ( com.legacy.aether.common.player.PlayerAether . get ( player ) . accessories . setInventoryAccessory ( heldItem . copy () ) ) { heldItem . shrink ( 1 ) ; return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.SUCCESS , heldItem ) ; } } return new net.minecraft.util.ActionResult < net.minecraft.item.ItemStack > ( net.minecraft.util.EnumActionResult.FAIL , heldItem ) ; } 
public void addLast ( Item item ) { if ( item == null ) throw new java.lang.NullPointerException ( "input data is null" ) ; Deque < Item > . Node add = new Node ( item ) ; if ( isEmpty () ) { left = add ; right = add ; } else { add.prev = right ; right.next = add ; right = add ; } ( N ) ++ ; } 
private boolean matches ( java.lang.String oreDict ) { java.util.ArrayList < net.minecraft.item.ItemStack > listStacks = net.minecraftforge.oredict.OreDictionary . getOres ( oreDict ) ; for ( net.minecraft.item.ItemStack stack : listStacks ) { if ( ( net.minecraftforge.oredict.OreDictionary . itemMatches ( stack , input , false ) ) && ( ingredient . isItemEqual ( this . ingredient ) ) ) { return true ; } } return false ; } 
public void jump () { int x = getX () ; int y = getY () ; gravity () ; if ( ( ( ySpeed ) == 0 ) && ( checkCollision ( x , ( y + 2 ) , Main.level . getConstructs () ) ) ) { ySpeed = - ( environment.Constants.JUMP_HEIGHT ) ; } } 
public void process ( org.openstreetmap.osmosis.core.container.v0_6.WayContainer wayContainer ) { org.openstreetmap.osmosis.core.domain.v0_6.Way way ; long wayId ; flushNodes ( true ) ; way = wayContainer . getEntity () ; wayId = way . getId () ; if ( wayId >= ( maxWayId ) ) { maxWayId = wayId + 1 ; } if ( wayId < ( minWayId ) ) { minWayId = wayId ; } wayBuffer . add ( way ) ; flushWays ( false ) ; } 
@ java.lang.Override public org.aopalliance.aop.Advice getAdvice () { if ( ( interceptor ) == null ) { synchronized ( this ) { if ( ( interceptor ) == null ) { org.ironrhino.core.cache.CacheInterceptor temp = new org.ironrhino.core.cache.CacheInterceptor () ; org.ironrhino.core.cache.CacheManager cacheManager = ctx . getBean ( org.ironrhino.core.cache.CacheManager . class ) ; temp . setCacheManager ( cacheManager ) ; temp . setMutex ( mutex ) ; temp . setMutexWait ( mutexWait ) ; interceptor = temp ; } } } return interceptor ; } 
private com.jensen.boardgames.othello.model.player.OthelloPlayer randomPlayer () { if ( com.jensen.boardgames.othello.model.Othello . isGameOver ( this ) ) { return null ; } currentPlayerIndex = new java.util.Random () . nextInt ( players.length ) ; setCurrentPlayer ( players [ currentPlayerIndex ] ) ; if ( ( com.jensen.boardgames.othello.model.Othello . getValidMoves ( this ) . length ) == 0 ) { nextPlayer () ; } return getCurrentPlayer () ; } 
public nl.tudelft.jpacman.Level nextLevel () { nl.tudelft.jpacman.Level level = makeLevel ( ( ++ ( currentLevel ) ) ) ; if ( level == null ) { level = makeLevel ( ( -- ( currentLevel ) ) ) ; } level . setIndex ( currentLevel ) ; return level ; } 
private double productionDeut ( int lvl ) { double tempmod = 1.44 - ( 0.004 * ( Versorgung [ 11 ] ) ) ; return java.lang.Math . round ( ( ( ( ( ( double ) ( 10 ) ) * lvl ) * ( java.lang.Math . pow ( 1.1 , lvl ) ) ) * tempmod ) ) ; } 
public boolean subtractFromRegistry ( int registryIndex , byte value ) { boolean borrow = false ; int result = ( ( chip8 . getRegisters () [ registryIndex ] ) & 255 ) - ( value & 255 ) ; if ( result < 0 ) { borrow = true ; result = ( 255 - ( result * ( - 1 ) ) ) + 1 ; } chip8 . getRegisters () [ registryIndex ] = ( ( byte ) ( result ) ) ; return borrow ; } 
@ com.smartsync.controller.RequestMapping ( method = RequestMethod.DELETE , value = "/{id}" , produces = "application/json" ) public org.springframework.http.ResponseEntity deleteUser ( @ com.smartsync.controller.PathVariable ( value = "id" ) java.lang.Long id ) { com.smartsync.model.User user = this . userService . deleteUser ( id ) ; if ( user == null ) { java.lang.String message = "Could not delete user with id: " + id ; java.lang.String url = "/users/" + id ; logger . error ( ( ( "Could not find user with id: " + id ) + " to delete" ) ) ; throw new com.smartsync.controller.UserNotFoundException ( message , url ) ; } logger . info ( ( "Successfully deleted user: " + user ) ) ; return org.springframework.http.ResponseEntity . ok ( user ) ; } 
public java.sql.ResultSet queryExecution ( java.lang.String query ) throws java.lang.Exception { java.sql.PreparedStatement preparedquery = db . prepareStatement ( ( query + ";" ) ) ; preparedquery . clearParameters () ; java.sql.ResultSet result = null ; try { result = preparedquery . executeQuery () ; } catch ( java.lang.Exception ex ) {} return result ; } 
private boolean hasPassed ( int currTime2 , int time , int [] date ) { return ( ( ( ( currTime2 > time ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_DD ] ) == ( currDD ) ) ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_MM ] ) == ( currMM ) ) ) && ( ( date [ dooyit.parser.DateTimeParser.DATE_INDEX_YY ] ) == ( currYY ) ) ) && ( time != ( - 1 ) ) ; } 
public static void main ( java.lang.String [] args ) { if ( ( args.length ) == 2 ) { java.lang.String firstValue = args [ 0 ] ; java.lang.String secondValue = args [ 1 ] ; } else if ( ( args.length ) == 0 ) { Leaderboard . getInformationDirectlyFromUser () ; } } 
private boolean canCreateDeferredVertices () { return ( ( this . predicates . isEmpty () ) && ( ( this . limit ) == ( org.mastik.query.Query . noLimit () ) ) ) && ( ( this . orders ) == ( org.mastik.query.Query . noOrders () ) ) ; } 
@ org.springframework.web.bind.annotation.PostMapping public final org.springframework.http.ResponseEntity insert ( @ org.springframework.validation.annotation.Validated @ org.springframework.web.bind.annotation.RequestBody final DtoT dto ) throws com.teammental.meconfig.exception.entity.EntityInsertException { java.io.Serializable id = doInsert ( dto ) ; java.lang.String location = ( ( getMappingUrlOfController () ) + "/" ) + ( id . toString () ) ; return org.springframework.http.ResponseEntity . status ( HttpStatus.CREATED ) . header ( "Location" , location ) . build () ; } 
@ java.lang.Override public void onResponse ( okhttp3.Call call , okhttp3.Response response ) throws java.io.IOException { if ( ! ( response . isSuccessful () ) ) throw new java.io.IOException ( ( "Unexpected code " + response ) ) ; loadedHtml = response . body () . string () ; parseHtmlTest ( loadedHtml ) ; } 
private net.minecraft.item.ItemStack getFirstStackHasBlock () { for ( int i = 0 ; i < ( inItems . getSlots () ) ; ++ i ) { if ( ! ( inItems . getStackInSlot ( i ) . isEmpty () ) ) return inItems . getStackInSlot ( i ) ; } return net.minecraft.item.ItemStack.EMPTY ; } 
@ javax.annotation.Nullable public java.lang.String getQueue ( co.cask.cdap.proto.Id.Namespace namespaceId ) { co.cask.cdap.proto.NamespaceMeta meta = store . getNamespace ( namespaceId ) ; if ( meta != null ) { co.cask.cdap.proto.NamespaceConfig config = meta . getConfig () ; return ( config . getSchedulerQueueName () ) != null ? config . getSchedulerQueueName () : getDefaultQueue () ; } else { return getDefaultQueue () ; } } 
@ java.lang.Override public void onPageSelected ( int position ) { final android.animation.Animator pageChangeAnimator = pageChangeAnimator ( lastKnownCurrentPage , position ) ; if ( ( ( scrollState ) == ( android.support.v4.view.ViewPager.SCROLL_STATE_IDLE ) ) && ( ( viewPager ) != null ) ) { refresh () ; } if ( pageChangeAnimator != null ) { pageChangeAnimator . start () ; } lastKnownCurrentPage = position ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/accounts/login" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public gov.nist.hit.core.domain.ResponseMessage doNothing ( javax.servlet.http.HttpSession session ) { org.springframework.security.core.userdetails.User u = userService . getCurrentUser () ; if ( u != null ) { gov.nist.auth.hit.core.domain.Account a = accountService . findByTheAccountsUsername ( u . getUsername () ) ; if ( a != null ) { gov.nist.hit.core.api.SessionContext . setCurrentUserId ( session , a . getId () ) ; recordLastLoggedInDate ( a . getId () ) ; } } return new gov.nist.hit.core.domain.ResponseMessage ( ResponseMessage.Type.success , "loginSuccess" , "succes" ) ; } 
public com.potatoes.cultivation.logic.Tile getTile ( com.potatoes.cultivation.logic.GameMap gameMap ) { if ( ( ( ( ( i () ) >= 0 ) && ( ( i () ) < ( gameMap.map.length ) ) ) && ( ( j ) >= 0 ) ) && ( ( j ) < ( gameMap.map [ 0 ] . length ) ) ) return gameMap.map [ i () ] [ j ] ; return null ; } 
public void beginTransaction ( ) throws java.sql.SQLException { if ( null == ( isSupportTransaction ) ) { isSupportTransaction = conn . getMetaData () . supportsTransactions () ; } if ( false == ( isSupportTransaction ) ) { throw new java.sql.SQLException ( "Transaction not supported for current database!" ) ; } conn . setAutoCommit ( false ) ; } 
private void showPrevCommandUp () { if ( ( commandHistory . size () ) == 0 ) { return; } if ( ( commandHistoryIndex ) == 0 ) { commandHistoryIndex = commandHistory . size () ; } if ( ( commandHistoryIndex ) > 0 ) { ( commandHistoryIndex ) -- ; } java.lang.String text = commandHistory . get ( commandHistoryIndex ) ; inputBox . setText ( text ) ; inputBox . positionCaret ( text . length () ) ; } 
public boolean find ( java.lang.String findWhat , boolean matchCase , boolean wholeWord ) { if ( ( findWhat == null ) || ( findWhat . isEmpty () ) ) return false ; if ( updateMatcher ) { matcher = createMatcher ( findWhat , matchCase , wholeWord ) ; updateMatcher = false ; } boolean found = matcher . find () ; if ( found ) textPane . select ( matcher . start () , matcher . end () ) ; return found ; } 
void findBackward ( java.lang.String pattern ) { LineEditor.ElementDPtr temp = head ; while ( ( ( temp . getValue () ) != pattern ) || ( temp != ( current ) ) ) { temp = temp . getNext () ; } if ( ( temp . getValue () ) == pattern ) { current = temp ; } else { java.lang.System.out . println ( ( ( "STRING " + pattern ) + " NOT FOUND." ) ) ; } } 
@ org.jplus.hyb.database.crud.Test public void testShowList () { java.lang.System.out . println ( "showList" ) ; java.lang.String sql = "select * from Servers" ; org.jplus.hyb.database.crud.Hyberbin instance = new org.jplus.hyb.database.crud.Hyberbin ( new org.jplus.model.Servers () ) ; java.util.List result = null ; try { result = instance . showList ( sql ) ; } catch ( java.sql.SQLException ex ) { fail ( "testShowList faild." ) ; ex . printStackTrace () ; } assertFalse ( org.jplus.util.ObjectHelper . isEmpty ( result ) ) ; assertTrue ( ( ( result . size () ) == 5 ) ) ; } 
private void insertOne ( java.lang.String name , Time time , int index ) { if ( index < ( ( times.length ) - 1 ) ) { insertOne ( names [ index ] , times [ index ] , ( index + 1 ) ) ; names [ index ] = name ; times [ index ] = new Time ( time ) ; } } 
private java.lang.String getParameterValueWithContext ( org.talend.core.model.process.IElement elem , java.lang.String key , org.talend.core.model.process.IContext context , org.talend.core.model.process.IElementParameter basePropertyParameter ) { if ( ( elem == null ) || ( key == null ) ) { return "" ; } java.lang.String actualKey = this . getParaNameFromRepositoryName ( elem , key , basePropertyParameter ) ; if ( actualKey != null ) { return fetchElementParameterValue ( elem , context , actualKey ) ; } else { return fetchElementParameterValue ( elem , context , key ) ; } } 
public java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > getPartsByRelationshipType ( java.lang.String relationshipType ) { if ( relationshipType == null ) throw new java.lang.IllegalArgumentException ( "relationshipType" ) ; java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > retArr = new java.util.ArrayList < org.apache.poi.openxml4j.opc.PackagePart > () ; for ( org.apache.poi.openxml4j.opc.PackageRelationship rel : getRelationshipsByType ( relationshipType ) ) { org.apache.poi.openxml4j.opc.PackagePart part = getPart ( rel ) ; if ( part != null ) { retArr . add ( part ) ; } } java.util.Collections . sort ( retArr ) ; return retArr ; } 
private void loadRomFromZip ( java.lang.String zipName ) throws java.io.IOException { final java.lang.String romName = selectRomInZip ( listRomsInZip ( zipName ) ) ; if ( romName != null ) { final java.io.File extractedFile = extractRomFromZip ( zipName , romName ) ; if ( extractedFile != null ) { extractedFile . deleteOnExit () ; nes . loadROM ( extractedFile . getCanonicalPath () ) ; } } } 
@ java.lang.Override protected void onItemNotFound ( final org.bonitasoft.web.toolkit.client.data.APIID caseId ) { final org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound onCaseDetailsNotFound = new org.bonitasoft.console.client.user.cases.action.OnCaseDetailsNotFound () { @ java.lang.Override protected void redirectToArchivedCaseMoredetails ( final java.lang.String archivedCaseId ) { com.google.gwt.user.client.History . newItem ( ( ( ( ( ( "?_p=" + ( ArchivedCaseMoreDetailsAdminPage.TOKEN ) ) + "&id=" ) + archivedCaseId ) + "&_pf=" ) + ( org.bonitasoft.web.toolkit.client.ClientApplicationURL . getProfileId () ) ) ) ; } } ; onCaseDetailsNotFound . checkIfCaseIsArchived ( caseId . toString () ) ; } 
private boolean unifiesNamespace ( jason.asSyntax.Literal t1s , jason.asSyntax.Literal t2s ) { if ( ( t1s == ( jason.asSyntax.Literal.DefaultNS ) ) && ( t2s == ( jason.asSyntax.Literal.DefaultNS ) ) ) return true ; t1s = t1s . getNS () ; t2s = t2s . getNS () ; if ( t1s . equals ( t2s ) ) return true ; return unifiesNoUndo ( t1s , t2s ) ; } 
private void display ( ) throws java.io.IOException { java.io.File htmlFile = new java.io.File ( ( ( ( ( ( br.com.hammeredsoft.mailoff.util.MailOffConf . getWorkDir () ) + ( java.io.File.separator ) ) + ( br.com.hammeredsoft.mailoff.util.MailOffConf . getConfig ( MailOffConf.WEBROOT ) ) ) + ( java.io.File.separator ) ) + "index.html" ) ) ; java.awt.Desktop . getDesktop () . browse ( htmlFile . toURI () ) ; } 
public void openMailSender ( no.runsafe.framework.api.player.IPlayer sender , no.runsafe.framework.api.player.IPlayer recipient ) { sender . sendColouredMessage ( ( ( "&3Sending mail will cost " + ( this . getMailCostText () ) ) + "." ) ) ; no.runsafe.framework.minecraft.inventory.RunsafeInventory inventory = server . createInventory ( null , 54 , ( "Mail to " + ( recipient . getName () ) ) ) ; this . openSendAgents . put ( sender , new no.runsafe.mailbox.MailSendAgent ( recipient , inventory ) ) ; sender . openInventory ( inventory ) ; } 
public boolean containsAddress ( java.lang.String address ) { if ( ( this . address . size () ) != 0 ) { for ( int i = 0 ; i < ( this . address . size () ) ; i ++ ) { if ( this . address . get ( i ) . equals ( address ) ) { return true ; } } } return false ; } 
public static void remove ( int index ) { TestListReferenceBased.Node ptr = TestListReferenceBased.head ; TestListReferenceBased.Node nxt = TestListReferenceBased.head . getNext () ; for ( int x = 1 ; x < index ; x ++ ) { ptr = ptr . getNext () ; nxt = nxt . getNext () ; } ptr . setNext ( ptr . getNext () . getNext () ) ; nxt . setNext ( null ) ; } 
private void onGameOver ( android.graphics.Canvas canvas ) { canvas . drawText ( getContext () . getString ( R.string.game_over_text ) , ( ( startP_ ) + ( ( cellSize_ ) * 2.5F ) ) , ( ( startP_ ) + ( ( cellSize_ ) * 4.7F ) ) , noticePaint_ ) ; } 
@ java.lang.Override public void updateItem ( model.Event event , boolean empty ) { super . updateItem ( event , empty ) ; if ( event != null ) { data = new gui.EventCell.EventData () ; data . setEvent ( event ) ; setGraphic ( data . getBox () ) ; } else { setGraphic ( null ) ; } } 
private static java.lang.String getName ( org.jetbrains.plugins.cucumber.java.run.Scenario scenario ) { if ( scenario . getKeyword () . equals ( "Scenario Outline" ) ) { return escape ( ( "Scenario: Line: " + ( scenario . getLine () ) ) ) ; } else { return escape ( ( "Scenario: " + ( scenario . getName () ) ) ) ; } } 
@ java.lang.Override public javafx.scene.control.ListCell < repertuar.model.Film > call ( javafx.scene.control.ListView < repertuar.model.Film > param ) { return new javafx.scene.control.ListCell < repertuar.model.Film > () { @ java.lang.Override protected void updateItem ( repertuar.model.Film item , boolean b ) { super . updateItem ( item , b ) ; if ( item != null ) { textProperty () . bind ( item . titleProperty () ) ; } else { textProperty () . unbind () ; textProperty () . set ( "" ) ; } } } ; } 
public void hierarchySetUp ( org.opennms.netmgt.model.topology.Bridge root ) { if ( root . isRootBridge () ) return; root . setRootBridge ( true ) ; root . setRootPort ( null ) ; if ( ( m_bridges . size () ) == 1 ) return; for ( org.opennms.netmgt.model.topology.SharedSegment segment : getSharedSegmentOnTopologyForBridge ( root . getId () ) ) { segment . setDesignatedBridge ( root . getId () ) ; tier ( segment , root . getId () , 0 ) ; } } 
public static edu.ucsd.sccn.LSL.StreamInfo [] resolve_streams ( double wait_time ) { com.sun.jna.Pointer [] buf = new com.sun.jna.Pointer [ 1024 ] ; int num = edu.ucsd.sccn.LSL.inst . lsl_resolve_all ( buf , buf.length , wait_time ) ; edu.ucsd.sccn.LSL.StreamInfo [] res = new edu.ucsd.sccn.LSL.StreamInfo [ num ] ; for ( int k = 0 ; k < num ; k ++ ) res [ k ] = new edu.ucsd.sccn.LSL.StreamInfo ( buf [ k ] ) ; return res ; } 
public void insert ( int element ) { this . Heap [ ( ( this . size ) ++ ) ] = element ; int current = ( this . size ) - 1 ; while ( ( this . Heap [ current ] ) > ( this . Heap [ this . parent ( current ) ] ) ) { this . swap ( current , this . parent ( current ) ) ; current = this . parent ( current ) ; } } 
private void moveLeft ( int t ) { fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eLost = alignment [ t ] ; globalVar -= eLost . getVar () ; eLost . removeOneFrame ( frames [ t ] ) ; globalVar += eLost . getVar () ; fr.loria.synalp.jtransxps.XPMInimizeVars.EtatHMM eGain = alignment [ ( t + 1 ) ] ; globalVar -= eGain . getVar () ; eGain . updateOneFrame ( frames [ t ] ) ; globalVar += eGain . getVar () ; alignment [ t ] = alignment [ ( t + 1 ) ] ; } 
public void setGlobalPosition ( engine.math.Vector2i position ) { if ( ( parent ) == null ) { this . position = position ; return; } this . position = position . sub ( parent . getGlobalPosition () ) . rotateBy ( ( - ( parent . getRotation () ) ) ) ; } 
private void bindData () { android.support.design.widget.NavigationView navigationView = ( ( android.support.design.widget.NavigationView ) ( findViewById ( R.id.activity_main_drawer_navigation ) ) ) ; if ( ( navigationView . getHeaderView ( 0 ) ) == null ) { android.view.View headerView = getLayoutInflater () . inflate ( R.layout.navigation_header , navigationView , false ) ; navigationView . addHeaderView ( headerView ) ; } if ( ( navigationView . getHeaderView ( 0 ) ) != null ) { android.view.View headerView = navigationView . getHeaderView ( 0 ) ; if ( com.appcliente.wegest.WebViewAppConfig.NAVIGATION_DRAWER_HEADER_IMAGE ) {} } } 
public java.util.ArrayList < java.lang.String > getCategories ( java.util.ArrayList < com.fromdev.android.entity.Question > questionList ) { java.util.ArrayList < java.lang.String > mCNameList = new java.util.ArrayList <> () ; for ( int i = 0 ; ( questionList != null ) && ( i < ( questionList . size () ) ) ; i ++ ) { if ( ! ( mCNameList . contains ( questionList . get ( i ) . getCategory () ) ) ) mCNameList . add ( questionList . get ( i ) . getCategory () ) ; } return mCNameList ; } 
@ java.lang.Override public void addGraphCode ( java.util.HashMap < java.lang.String , java.lang.String > items ) { for ( int i = 0 ; i < ( codeGetters . size () ) ; i ++ ) { sb . append ( codeGetters . get ( i ) . getCode ( items ) ) ; } } 
@ java.lang.Override public int skip ( int size ) throws java.io.IOException { byte [] temp = new byte [ java.lang.Math . min ( org.verapdf.cos.filters.BF_BUFFER_SIZE , size ) ] ; int skipped = 0 ; while ( skipped != size ) { int read = this . read ( temp , java.lang.Math . min ( ( size - skipped ) , org.verapdf.cos.filters.BF_BUFFER_SIZE ) ) ; if ( read == ( - 1 ) ) { return skipped ; } else { skipped += read ; } } return skipped ; } 
public void setLatestItem ( Item item ) { if ( item != null ) { if ( ( this . item ) == null ) { this . item = item ; } else { if ( ( this . item . getVersion () ) < ( item . getVersion () ) ) { this . item = item ; } } } this . incrementCounter () ; } 
@ java.lang.Override public android.graphics.Bitmap transform ( android.graphics.Bitmap source ) { int y = ( source . getHeight () ) / 5 ; int x = 0 ; android.graphics.Bitmap result = android.graphics.Bitmap . createBitmap ( source , x , y , source . getWidth () , ( ( ( source . getHeight () ) * 3 ) / 5 ) ) ; if ( result != source ) { source . recycle () ; } return result ; } 
public void onGetLocationStatus ( java.lang.Boolean status , java.lang.String message ) { if ( status ) { org.mygeotrust.indoor.tasks.detectIndoorOutdoor.IndoorOutdoorDetectorController . getInstance () . startIndoorOutdoorDetector ( this , this ) ; toggleIndoorOutdoorButtonStatus ( true ) ; } else { org.mygeotrust.indoor.utils.dialogue.Dialogs . getInstance () . showInfoDialog ( this , " Cannot start indoor/outdoor Detector." , ( ( ( " GPS use Status: " + status ) + "\n Error: " ) + message ) , R.drawable.ic_warning , R.color.colorRed ) ; toggleIndoorOutdoorButtonStatus ( false ) ; } } 
public void nextBuffer () { if ( ( buf ) == null ) buf = state . buffer () ; else buf = state . pushBuffer () ; heapArr = ( buf . isDirect () ) ? null : buf . array () ; baseOff = ( buf . isDirect () ) ? ( ( sun.nio.ch.DirectBuffer ) ( buf ) ) . address () : org.apache.ignite.internal.util.GridUnsafe.BYTE_ARR_OFF ; } 
public void run () { while ( ( inspecteeThread . getState () ) != ( java.lang.Thread.State.TERMINATED ) ) { try { java.util.Map < java.lang.Thread , java.lang.StackTraceElement [] > stacks = java.lang.Thread . getAllStackTraces () ; java.lang.System.out . println ( java.util.Arrays . toString ( stacks . get ( inspecteeThread ) ) ) ; } catch ( java.lang.Exception e ) {} } } 
protected byte [] convertBytes ( java.util.ArrayList < java.lang.Integer > list ) { if ( list == null ) return null ; byte [] ret = new byte [ list . size () ] ; java.util.Iterator < java.lang.Integer > iterator = list . iterator () ; for ( int i = 0 ; i < ( ret.length ) ; i ++ ) { ret [ i ] = iterator . next () . byteValue () ; } return ret ; } 
@ java.lang.Override public void removeAllTask () { for ( java.lang.String key : mExecutePool . getAllTask () . keySet () ) { TASK task = mExecutePool . getAllTask () . get ( key ) ; if ( task != null ) task . cancel () ; } for ( java.lang.String key : mCachePool . getAllTask () . keySet () ) { mCachePool . removeTask ( key ) ; } } 
public double averagePopulation () { double average ; long total = 0 ; for ( int i = 0 ; i < ( population . size () ) ; i ++ ) { total += population . get ( i ) . getEvaluation () ; } average = total / ( population . size () ) ; return average ; } 
private static void getRidOfPassedCheckpointsNear ( Player.Buster buster ) { java.util.List < Player.Agent > tbd = new java.util.ArrayList < Player.Agent > () ; for ( Player.Agent point : Player.checkpoints ) { if ( ( buster . distanceTo ( point ) ) < ( Player.RADAR_DISTANCE ) ) { tbd . add ( point ) ; } } Player.checkpoints . removeAll ( tbd ) ; } 
public void changeLane ( int carIndex ) { Car car = cars . get ( carIndex ) ; cars . remove ( carIndex ) ; numCars = cars . size () ; java.lang.System.out . print ( ( ( ( ( "Lane " + ( laneIndex ) ) + " has " ) + ( numCars ) ) + " cars after one left." ) ) ; TrafficSimulator.lanes . get ( newLaneIndex ) . addCar ( car , ( ( laneIndex ) - ( newLaneIndex ) ) ) ; } 
public byte [] get ( java.lang.String key , boolean renew ) { net.vicp.lylab.core.model.CacheValue cv = getContainer () . get ( key ) ; if ( cv == null ) return null ; if ( ( cv . getValidateTime () ) < ( ( java.lang.System . currentTimeMillis () ) - ( cv . getStartTime () ) ) ) { remove ( key , cv ) ; return null ; } if ( renew ) cv . renewStartTime () ; return cv . getValue () ; } 
public int findNodeNumber ( int key ) { edu.oakland.production.ClassProject.Database.Node focusNode = this . binaryTreeDatabase . getRootNode () ; int nodeCount = 0 ; while ( ( focusNode . getKey () ) != key ) { if ( key < ( focusNode . getKey () ) ) { focusNode = focusNode.leftChild ; } else { focusNode = focusNode.rightChild ; } if ( focusNode == null ) return nodeCount ++ ; nodeCount ++ ; } return nodeCount ++ ; } 
@ java.lang.Override public java.lang.Object convert ( java.lang.Object source , java.lang.Class < ? > targetClass , io.beanmapper.core.BeanFieldMatch beanFieldMatch ) { if ( ( ( source == null ) || ( source . getClass () . equals ( targetClass ) ) ) || ( ( beanFieldMatch != null ) && ( beanFieldMatch . getSourceClass () . equals ( targetClass ) ) ) ) { return source ; } java.lang.Object sourceAsString = beanMapper . convert ( source , java.lang.String . class , beanFieldMatch ) ; return beanMapper . convert ( sourceAsString , targetClass , beanFieldMatch ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_todo ) ; android.preference.PreferenceManager . setDefaultValues ( this , R.xml.preferences , false ) ; if ( savedInstanceState == null ) { fragment = com.codepath.todoapp.fragments.TodoFragment . newInstatnce () ; getFragmentManager () . beginTransaction () . replace ( R.id.fListContainer , fragment , "todo" ) . addToBackStack ( "todo" ) . commit () ; } } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( MUSIC_LIST_VIEW_REQUEST ) ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { currentSong = data . getIntExtra ( "position" , 1 ) ; playSong () ; } } } 
public boolean needsRefresh () { boolean needsRefresh ; this . refreshLock . readLock () . lock () ; if ( ( this . expires ) < 0 ) { needsRefresh = false ; } else { long now = java.lang.System . currentTimeMillis () ; long tokenDuration = now - ( this . lastRefresh ) ; needsRefresh = tokenDuration >= ( ( this . expires ) - ( com.box.sdk.BoxAPIConnection.REFRESH_EPSILON ) ) ; } this . refreshLock . readLock () . unlock () ; return needsRefresh ; } 
private int getAgentEncoding ( com.sun.org.apache.xalan.internal.xsltc.runtime.Node node , int timeStep , int binaryIndex ) { return ( ( ( ( vertexOffset ) + ( edgeOffset ) ) + ( ( ( makespan ) * ( node . getIndexInGraph () ) ) * ( numBinaryPropVars ) ) ) + ( timeStep * ( numBinaryPropVars ) ) ) + binaryIndex ; } 
private int addChildNodes ( tellh.com.recyclertreeview_lib.TreeNode pNode , int startIndex ) { java.util.List < tellh.com.recyclertreeview_lib.TreeNode > childList = pNode . getChildList () ; int addChildCount = 0 ; for ( tellh.com.recyclertreeview_lib.TreeNode treeNode : childList ) { displayNodes . add ( ( startIndex + ( addChildCount ++ ) ) , treeNode ) ; if ( treeNode . isExpand () ) { addChildCount += addChildNodes ( treeNode , ( startIndex + addChildCount ) ) ; } } if ( ! ( pNode . isExpand () ) ) pNode . toggle () ; return addChildCount ; } 
public javax.json.JsonStructure getEventDistrictPoints ( java.lang.String eventKey , int verboseLevel ) { javax.json.JsonStructure data = get ( ( ( "event/" + eventKey ) + "/district_points" ) , header ) ; if ( ( data != null ) && ( verboseLevel < 2 ) ) { data = ( ( javax.json.JsonStructure ) ( ( ( javax.json.JsonObject ) ( data ) ) . get ( "points" ) ) ) ; } return data ; } 
private void validateCommand ( org.spine3.examples.todolist.UpdateTaskDescription cmd ) { java.lang.String description = cmd . getUpdatedDescription () ; com.google.common.base.Preconditions . checkNotNull ( description , "Description cannot be null." ) ; if ( ( description . length () ) < 3 ) { throw new java.lang.IllegalArgumentException ( "Description should contains at least 3 alphanumeric symbols." ) ; } validateCommandOnDeletionAndCompletion () ; } 
public void addDeadDenLocation ( viperinos.MapLocation den ) { viperinos.MapLocation [] temp = new viperinos.MapLocation [ ( deadDens.length ) + 1 ] ; java.lang.System . arraycopy ( deadDens , 0 , temp , 0 , deadDens.length ) ; temp [ deadDens.length ] = den ; deadDens = temp ; } 
public static java.lang.String readRequestFile ( java.lang.String fileName ) throws java.lang.Exception { java.io.InputStream is = new java.io.FileInputStream ( fileName ) ; java.io.BufferedReader buf = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.String line = buf . readLine () ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; while ( line != null ) { sb . append ( line ) ; line = buf . readLine () ; } return sb . toString () ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ( radioButtonChan6 . isSelected () ) == true ) { try { c . sendCommand ( "CONN 6" ) ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } } else { try { c . sendCommand ( "DISC 6" ) ; } catch ( java.io.IOException e1 ) { e1 . printStackTrace () ; } } if ( ( c.connected [ 1 ] [ 2 ] ) == null ) { radioButtonChan7 . setSelected ( false ) ; } } 
public void setCharacteristicNotification ( android.bluetooth.BluetoothGattCharacteristic characteristic , boolean enabled ) { com.eveningoutpost.dexdrip.Models.UserError.Log . i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG , "Characteristic setting notification" ) ; if ( ( mBluetoothGatt ) != null ) { mBluetoothGatt . setCharacteristicNotification ( characteristic , enabled ) ; android.bluetooth.BluetoothGattDescriptor descriptor = characteristic . getDescriptor ( java.util.UUID . fromString ( HM10Attributes.CLIENT_CHARACTERISTIC_CONFIG ) ) ; com.eveningoutpost.dexdrip.Models.UserError.Log . i ( com.eveningoutpost.dexdrip.Services.DexShareCollectionService.TAG , ( "Descriptor found: " + ( descriptor . getUuid () ) ) ) ; descriptor . setValue ( BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE ) ; mBluetoothGatt . writeDescriptor ( descriptor ) ; } } 
public static < K , V > java.lang.Iterable < java.util.Map.Entry < K , V > > makeIterable ( final java.util.Map < K , V > map ) { if ( ( map == null ) || ( map . isEmpty () ) ) { return ovation.odata.util.CollectionUtils . makeEmptyIterable () ; } return ovation.odata.util.CollectionUtils . makeIterable ( map . entrySet () ) ; } 
private static java.lang.String getRequiredSpaces ( java.lang.String reference , java.lang.String message ) { java.lang.String res = "" ; int requiredSpaces = ( ( reference . length () ) - ( message . length () ) ) - 4 ; for ( int i = 0 ; i < requiredSpaces ; i ++ ) { res = res + " " ; } return res ; } 
public void setMaterial ( org.gearvrf.GVRMaterial material , int passIndex ) { if ( passIndex < ( mRenderPassList . size () ) ) { mRenderPassList . get ( passIndex ) . setMaterial ( material ) ; } else { android.util.Log . e ( org.gearvrf.GVRRenderData.TAG , ( ( "Trying to set material from invalid pass. Pass " + passIndex ) + " was not created." ) ) ; } } 
public boolean equals ( com.magnet.mmx.protocol.MMXTopic topic ) { if ( topic == ( this ) ) return true ; if ( ( topic == null ) || ( ( ( getUserId () ) == null ) ^ ( ( topic . getUserId () ) == null ) ) ) return false ; if ( ( ( mUserId ) != null ) && ( ! ( mUserId . equalsIgnoreCase ( topic . getUserId () ) ) ) ) return false ; return mTopic . equalsIgnoreCase ( topic . getName () ) ; } 
@ java.lang.Override public void destroy () { try { consumer . close () ; session . close () ; connection . close () ; } catch ( java.lang.Exception ex ) { throw new java.lang.RuntimeException ( ( "Exception on closing SQS connection: " + ( ex . getMessage () ) ) , ex ) ; } } 
public int getBacklogMarkerPosition () { try { synchronized ( data ) { for ( int i = 0 ; i < ( data . size () ) ; i ++ ) { com.irccloud.android.data.model.Event e = data . get ( i ) ; if ( ( e != null ) && ( ( e.row_type ) == ( com.irccloud.android.fragment.MessageViewFragment.ROW_BACKLOGMARKER ) ) ) { return i ; } } } } catch ( java.lang.Exception e ) {} return - 1 ; } 
public static void updateClient ( com.robrit.moofluids.common.entity.EntityFluidCow fluidCow , long worldTime ) { net.minecraft.nbt.NBTTagCompound tag = fluidCow . getEntityData () ; if ( ( tag . hasKey ( "rfc:nextUpdate" ) ) && ( ( tag . getLong ( "rfc:nextUpdate" ) ) > worldTime ) ) { return; } com.jdlogic.ranchablefluidcows.ranchable.RanchableFC . sendPacket ( fluidCow ) ; tag . setLong ( "rfc:nextUpdate" , ( worldTime + ( 20 * 10 ) ) ) ; } 
@ java.lang.Override public void onMessage ( int instanceId , java.lang.String message ) { int size = java.lang.Integer . parseInt ( message ) ; byte [] buffer = new byte [ size ] ; for ( int i = 0 ; i < size ; ++ i ) buffer [ i ] = 'p' ; java.lang.String result = new java.lang.String ( buffer ) ; postMessage ( instanceId , result ) ; } 
private void initSheetWidthConfig ( org.apache.poi.ss.usermodel.Sheet sheet ) { xgt.util.excel.Config config = getConfig () ; sheet . setDefaultRowHeightInPoints ( config . getDefaultHeight () ) ; for ( int index : config . getKeysOfWidth () ) { sheet . setColumnWidth ( index , ( ( config . getColumnWidth ( index ) ) * 256 ) ) ; } } 
public void geometricSeriesApproximation ( double x ) { double nextApproximation = x ; for ( int i = 0 ; i < ( this . steps ) ; i ++ ) { nextApproximation = nextApproximation * x ; } this . approximation = ( this . lastApproximation ) + nextApproximation ; ( this . steps ) ++ ; if ( ! ( isAccurate () ) ) { geometricSeriesApproximation ( x ) ; } else { return; } } 
public void union ( int p , int q ) { int root_p = find ( p ) ; int root_q = find ( q ) ; if ( ( rank [ root_p ] ) > ( rank [ root_q ] ) ) { set [ root_q ] = root_p ; } else { set [ root_p ] = root_q ; if ( ( rank [ root_p ] ) == ( rank [ root_q ] ) ) { ( rank [ root_q ] ) ++ ; } } } 
public static void selectNextTableRow ( javax.swing.JTable table ) { int index = table . getSelectedRow () ; if ( index == ( - 1 ) ) { index = 0 ; } table . clearSelection () ; if ( ( ++ index ) > ( ( table . getRowCount () ) - 1 ) ) { index = 0 ; } table . addRowSelectionInterval ( index , index ) ; } 
public static com.github.bijoysingh.starter.item.TimestampItem getTimestampItem ( java.lang.String timestamp , org.joda.time.DateTimeZone dateTimeZone , java.lang.Integer hour , java.lang.Integer minutes ) { org.joda.time.DateTime dateTime = com.github.bijoysingh.starter.util.TimestampManager . getDateTimeObject ( timestamp ) ; if ( dateTime == null ) { return new com.github.bijoysingh.starter.item.TimestampItem ( timestamp , null , null , java.util.Calendar . getInstance () ) ; } dateTime = dateTime . toDateTime ( dateTimeZone ) ; dateTime = dateTime . plusHours ( hour ) . plusMinutes ( minutes ) ; return com.github.bijoysingh.starter.util.TimestampManager . createTimestampItem ( timestamp , dateTime ) ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback ) != null ) { if ( requestCode == ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.READ_PERMISSION ) ) { if ( com.example.divyanshu.smyt.Utils.PermissionUtil . verifyPermissions ( grantResults ) ) { com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionGranted ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } else { android.util.Log . i ( "BaseActivity" , "permission was NOT granted." ) ; com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.mCallback . onPermissionDenied ( com.example.divyanshu.smyt.Fragments.RuntimePermissionHeadlessFragment.PERMISSION_TYPE ) ; } } else { super . onRequestPermissionsResult ( requestCode , permissions , grantResults ) ; } } } 
public boolean setRedUpgrade () { if ( ( redBalls ) < 5 ) { return false ; } redBalls = ( redBalls ) - 5 ; if ( ( red ) == null ) { return true ; } switch ( red . getUpgradeType () ) { case BALL_NUMBER_PLUS_1 : { break; } default: return false ; } return false ; } 
public java.util.ArrayList < csv.Person > readCsv ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedInputStream bis = new java.io.BufferedInputStream ( is ) ; java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( bis ) ) ; try { java.lang.String line ; while ( ( line = reader . readLine () ) != null ) { csv.Person a = null ; parsedPersons . add ( a . toPerson ( line ) ) ; } } catch ( java.lang.Exception e ) { java.lang.System.out . println ( e . getMessage () ) ; } return parsedPersons ; } 
@ java.lang.Override public void setUser ( com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.UsersLogged userLogged ) throws com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException { if ( ( this . userLogged . getCurrentUserLogged () ) == null ) { login ( userLogged . getCurrentUserLogged () . getAuUsername () , userLogged . getCurrentUserLogged () . getAuPassword () ) ; } else { login ( userLogged . getCurrentUserLogged () . getAuUsername () , userLogged . getCurrentUserLogged () . getAuPassword () ) ; } } 
@ org.junit.Test public void parseCommentWithNewLines () { java.lang.String text = "\n" + ( ( ( "   * The version identifier for this Serializable class.\n" + "   * Increment only if the <i>serialized</i> form of the\n" ) + "   * class changes.\n" ) + "   " ) ; org.junit.Assert . assertEquals ( new com.github.javaparser.javadoc.Javadoc ( com.github.javaparser.javadoc.description.JavadocDescription . parseText ( ( "The version identifier for this Serializable class.\n" + ( "Increment only if the <i>serialized</i> form of the\n" + "class changes." ) ) ) ) , com.github.javaparser.JavadocParser . parse ( text ) ) ; } 
protected org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping mapOperand ( org.modeldriven.alf.syntax.expressions.Expression operand ) throws org.modeldriven.alf.mapping.MappingError { org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping operandMapping = null ; org.modeldriven.alf.fuml.mapping.FumlMapping mapping = this . fumlMap ( operand ) ; if ( ! ( mapping instanceof org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ) { this . throwError ( ( "Error mapping operand expression: " + ( mapping . getErrorMessage () ) ) ) ; } else { operandMapping = ( ( org.modeldriven.alf.fuml.mapping.expressions.ExpressionMapping ) ( mapping ) ) ; } return operandMapping ; } 
public void removeOne ( T item ) { nodes.TreeNode < T > current = root ; while ( current != null ) { nodes.TreeNode < T > next = current . checkNode ( item ) ; if ( current == next ) { current . deincrementItemCount () ; return; } else current = next ; } } 
public boolean isItPossibleToShoot ( de.hsbremen.battleshipextreme.model.FieldState [] [] board , int startX , int startY ) { boolean result = false ; de.hsbremen.battleshipextreme.model.FieldState state = board [ startY ] [ startX ] ; if ( ( state == ( de.hsbremen.battleshipextreme.model.FieldState.HAS_SHIP ) ) || ( state == ( de.hsbremen.battleshipextreme.model.FieldState.IS_EMPTY ) ) ) { result = true ; } return result ; } 
@ java.lang.Override public void removeInfoView ( android.view.View view ) { if ( ( view . getParent () ) != null ) ( ( android.view.ViewGroup ) ( view . getParent () ) ) . removeView ( view ) ; ( ( android.widget.LinearLayout ) ( guiView . findViewById ( R.id.infoLayout ) ) ) . removeView ( view ) ; } 
@ java.lang.Override public void request ( long n ) { if ( ( terminated ) == 1 ) { return; } if ( reactor.core.support.BackpressureUtils . checkRequest ( n , inputSubscriber ) ) { if ( ( ( reactor.core.support.BackpressureUtils . getAndAdd ( REQUESTED , this , n ) ) == 0 ) && ( n == ( java.lang.Long.MAX_VALUE ) ) ) { org.reactivestreams.Subscription subscription = this . subscription ; if ( subscription != null ) { subscription . request ( n ) ; } } else { drainBackpressureQueue () ; } } } 
protected int nearMinesCount ( int line , int place ) { int count = 0 ; for ( int [] near : net.patttern.minesweeper.proto.bases.BaseArea.nears ) { count += ( cellMined ( ( line + ( near [ 0 ] ) ) , ( place + ( near [ 1 ] ) ) ) ) ? 1 : 0 ; } return count ; } 
public void write ( byte [] data ) { int index = 0 ; while ( index < ( clientCount ) ) { if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } } } 
public java.util.List < cn.edu.ustb.sem.order.entity.Order > listForceScheduleOrder () { java.lang.String hql = ( ( ( ( ( ( ( ( ( "from " + ( this . tableName ) ) + " o where (o.status = " ) + ( cn.edu.ustb.sem.order.entity.OrderStatus.initial ) ) + " " ) + "or o.processIsCheck = " ) + ( cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED ) ) + " " ) + "or o.materialIsChecked = " ) + ( cn.edu.ustb.sem.order.entity.Order.PROCESS_IS_NOT_CHECKED ) ) + ") " ; return list ( hql , ( - 1 ) , ( - 1 ) ) ; } 
public void setEnable ( boolean flag ) { mIsEnabled = flag ; if ( ( getNative () ) != 0 ) { org.gearvrf.NativeComponent . setEnable ( getNative () , flag ) ; } if ( flag ) { onEnable () ; } else { onDisable () ; } } 
public static java.util.List < java.lang.String > getListOfAuthorizedDomainsByConsumerKey ( java.lang.String consumerKey ) throws org.wso2.carbon.apimgt.api.APIManagementException { java.lang.String list = org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO . getAuthorizedDomainsByConsumerKey ( consumerKey ) ; if ( ( list != null ) && ( ! ( list . isEmpty () ) ) ) { return java.util.Arrays . asList ( list . split ( "," ) ) ; } return null ; } 
public void addHistorySearch ( com.savelives.entityclasses.SearchQuery sq ) { java.util.ArrayList < com.savelives.entityclasses.SearchQuery > temp = new java.util.ArrayList <> () ; temp . add ( sq ) ; for ( int i = 0 ; ( i < ( ( MAX_HISTORY ) - 1 ) ) && ( i < ( historySearch . size () ) ) ; i ++ ) { temp . add ( historySearch . get ( i ) ) ; } this . historySearch = temp ; } 
public java.lang.Double [] getOrientation () { if ( ( orientationBuffer . size () ) == 0 ) { return null ; } java.util.ArrayList < java.lang.Double > tmpOrientation = orientationBuffer . remove ( 0 ) ; java.lang.Double [] orientation = new java.lang.Double [ 7 ] ; for ( int i = 0 ; i < 7 ; i ++ ) { orientation [ i ] = tmpOrientation . remove ( 0 ) ; } return orientation ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/logout" , method = { org.springframework.web.bind.annotation.RequestMethod.GET } ) @ org.springframework.web.bind.annotation.ResponseBody public void logout ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { java.lang.System.out . println ( "logout controller" ) ; javax.servlet.http.HttpSession session = request . getSession ( false ) ; if ( session != null ) { session . invalidate () ; java.lang.System.out . println ( "lougout success" ) ; } resp . sendRedirect ( "index.html" ) ; } 
protected org.eclipse.jdt.core.IType findPrimaryType ( java.lang.String packageName , java.lang.String typeName ) throws org.eclipse.jdt.core.JavaModelException { org.eclipse.jdt.internal.core.JavaProject casted = ( ( org.eclipse.jdt.internal.core.JavaProject ) ( javaProject ) ) ; org.eclipse.jdt.internal.core.NameLookup nameLookup = getNameLookup ( casted ) ; org.eclipse.jdt.internal.core.NameLookup.Answer answer = nameLookup . findType ( typeName , packageName , false , org.eclipse.jdt.internal.core.NameLookup.ACCEPT_ALL , false , true , false , null ) ; return answer == null ? null : answer.type ; } 
@ java.lang.Override public void HandleTopNewsIds ( java.lang.String data ) { try { org.json.JSONArray jsonArray = new org.json.JSONArray ( data ) ; for ( int i = 0 ; i < ( jsonArray . length () ) ; i ++ ) { topNewsArray . add ( jsonArray . getString ( i ) ) ; } getArticleInfo ( 30 ) ; } catch ( org.json.JSONException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void remove ( int index ) { if ( ( index < 0 ) || ( index >= ( accommodated ) ) ) { throw new java.lang.IndexOutOfBoundsException () ; } for ( int i = index ; i < ( ( accommodated ) - 1 ) ; i ++ ) { array [ i ] = array [ ( i + 1 ) ] ; } ( accommodated ) -- ; } 
@ com.google.inject.Provides public gov.ca.cwds.rest.api.domain.cms.SystemCodeCache provideSystemCodeCache ( gov.ca.cwds.data.cms.SystemCodeDao systemCodeDao , gov.ca.cwds.data.cms.SystemMetaDao systemMetaDao ) { final long secondsToRefreshCache = ( ( 15 * 24 ) * 60 ) * ( ( long ) ( 60 ) ) ; gov.ca.cwds.rest.api.domain.cms.SystemCodeCache systemCodeCache = new gov.ca.cwds.rest.services.cms.CachingSystemCodeService ( systemCodeDao , systemMetaDao , secondsToRefreshCache , true ) ; systemCodeCache . register () ; return systemCodeCache ; } 
public void setDelegate ( @ android.support.annotation.Nullable com.nextfaze.poweradapters.PowerAdapter delegate ) { if ( delegate != ( mDelegate ) ) { int removeCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; mDelegate = delegate ; int insertCount = ( ( mDelegate ) != null ) ? mDelegate . getItemCount () : 0 ; updateObservers () ; if ( removeCount > 0 ) { notifyItemRangeRemoved ( 0 , removeCount ) ; } if ( insertCount > 0 ) { notifyItemRangeInserted ( 0 , insertCount ) ; } } } 
@ org.greenrobot.eventbus.Subscribe @ java.lang.Override public void onEvent ( id.co.veritrans.sdk.coreflow.eventbus.events.NetworkUnavailableEvent event ) { errorMessage = getString ( R.string.no_network_msg ) ; try { id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil . hideProgressDialog () ; id.co.veritrans.sdk.uiflow.utilities.SdkUIFlowUtil . showSnackbar ( this , errorMessage ) ; } catch ( java.lang.NullPointerException ex ) { id.co.veritrans.sdk.coreflow.core.Logger . e ( ( "transaction error is " + ( errorMessage ) ) ) ; } } 
@ java.lang.Override public void setCurrentToggleState ( java.lang.String key ) { for ( int i = 0 ; i < ( states . size () ) ; i ++ ) { if ( states . get ( i ) . getKey () . equals ( key ) ) { currentStateIndex = i ; init () ; return; } } throw new java.lang.IllegalArgumentException ( "No Toggle States match the key you have given" ) ; } 
@ java.lang.Override public boolean activate () { return ( ( ( ctx.inventory . select () . count () ) == 0 ) && ( ! ( chaosTower . contains ( ctx.players . local () ) ) ) ) || ( ( ctx.inventory . select () . count () ) == 28 ) ; } 
public boolean gelijkAan ( nl.detoren.ijc.data.groepen.Speler speler ) { return ( ( this . getNaam () . equals ( speler . getNaam () ) ) && ( this . getInitialen () . equals ( speler . getInitialen () ) ) ) && ( ( this . getKNSBnummer () ) == ( speler . getKNSBnummer () ) ) ; } 
public void makeSchedule () { setDifficulties () ; java.util.List < symposium.Panel > pnlCollection = symposium.ScheduleData . instance () . getFreePanels () ; while ( ( pnlCollection . size () ) > 0 ) { this . schedule ( pnlCollection . get ( 0 ) ) ; } setAssignedPanelsMessages () ; } 
private void setKi ( javax.swing.JCheckBox chkbx ) { optionsView . setKi ( chkbx ) ; playerIsKi = new boolean [ this . player ] ; for ( int i = 0 ; i < ( this . playerIsKi . length ) ; i ++ ) { this . playerIsKi [ i ] = this . optionsView . getKiBox () [ i ] . isSelected () ; } } 
public static void close ( java.sql.Connection connection , java.sql.PreparedStatement statement ) { try { if ( ( statement != null ) && ( ! ( statement . isClosed () ) ) ) { statement . close () ; } br.com.devmedia.jdbc.connection.JDBCConnection . close ( connection ) ; } catch ( java.sql.SQLException e ) { throw new java.lang.RuntimeException ( e . getMessage () , e ) ; } } 
public static void main ( java.lang.String [] args ) { int n = 10 ; princeton.datastructures.deque.Deque < java.lang.Integer > deq = new princeton.datastructures.deque.Deque < java.lang.Integer > () ; for ( int i = 0 ; i < n ; i ++ ) { if ( ( i % 2 ) == 0 ) { deq . addFirst ( i ) ; } else { deq . addLast ( i ) ; } } for ( java.lang.Integer i : deq ) { java.lang.System.out . println ( i ) ; } } 
private void applyAndAnimateRemovals ( java.util.List < hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo > roomInfos ) { for ( int i = ( roomInfoList . size () ) - 1 ; i >= 0 ; i -- ) { final hk.ust.cse.hunkim.questionroom.BaseActivity.RoomInfo roomInfo = roomInfoList . get ( i ) ; if ( ! ( roomInfos . contains ( roomInfo ) ) ) { removeItem ( i ) ; } } } 
@ java.lang.Override public void replaceAll ( java.util.List < T > elements ) { if ( ( mData ) == null ) { mData = new java.util.ArrayList <> () ; } mData . clear () ; if ( elements != null ) { mData . addAll ( elements ) ; } notifyDataSetChanged () ; } 
private void updateTables ( java.sql.Statement statement ) throws java.sql.SQLException { int version = getUserVersion ( statement ) ; if ( ( version > 0 ) && ( version < ( gui.Splash.DATABASE_VERSION ) ) ) { switch ( version ) { case 0 : statement . executeUpdate ( "alter table volumes add column favorite_volume tinyint(1) not null default '0';" ) ; statement . executeUpdate ( java.lang.String . format ( "alter table volumes add column date_add_volume text not null default '%s';" , utils.DateUtils . toString ( new java.util.Date () ) ) ) ; break; } } setUserVersion ( statement , Splash.DATABASE_VERSION ) ; } 
@ java.lang.Override public homework.hw3.DoubleStack clone ( ) throws java.lang.CloneNotSupportedException { homework.hw3.DoubleStack stackclone = new homework.hw3.DoubleStack () ; for ( int i = ( stack . size () ) - 1 ; i >= 0 ; i -- ) { stackclone . push ( stack . get ( i ) ) ; } return stackclone ; } 
void factr () { if ( ( tail.data ) == null ) return; int tmp = 1 ; for ( int i = 1 ; i <= ( ( int ) ( ( double ) ( tail.data ) ) ) ; i ++ ) { tmp *= i ; } tail.data = ( ( double ) ( tmp ) ) ; } 
@ javax.annotation.Nonnull @ java.lang.Override public eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler [] getInstalledEventHandlers ( net.minecraft.item.ItemStack self ) { java.util.List < eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler > handlers = new java.util.ArrayList ( java.util.Arrays . asList ( getUpgrades ( self ) ) ) ; if ( ( self . hasTagCompound () ) && ( self . getTagCompound () . hasKey ( "plate" ) ) ) { handlers . add ( eiteam.esteemedinnovation.armor.exosuit.UtilPlates . getPlate ( self . getTagCompound () . getString ( "plate" ) ) ) ; } return handlers . toArray ( new eiteam.esteemedinnovation.armor.exosuit.ExosuitEventHandler [ handlers . size () ] ) ; } 
@ java.lang.Override protected void onResume () { super . onResume () ; getSupportActionBar () . hide () ; if ( ( ! ( flagMenuPictures ) ) && ( ! ( flagMenuSounds ) ) ) onMainMenu () ; else { if ( flagMenuSounds ) onSoundMenu () ; if ( flagMenuPictures ) onCameraMenu () ; } } 
public com.SIMRacingApps.Data setVolume ( double percentage ) { synchronized ( m_clips ) { for ( int i = 0 ; i < ( m_clips . size () ) ; i ++ ) { m_clips . get ( i ) . setVolume ( percentage ) ; } } synchronized ( m_volume ) { m_volume = percentage ; } return getVolume () ; } 
private boolean isSorted ( java.lang.Comparable [] c , int a , int b ) { for ( int i = b - 1 ; i >= a ; i -- ) { if ( org.magicminds.one.util.Sorter . less ( c [ ( i + 1 ) ] , c [ i ] ) ) { return false ; } } return true ; } 
public com.crossballbox.model.UserInfo saveUserInfo ( com.crossballbox.model.FamilyData familyData , com.crossballbox.model.UserHealthyState userHealthyState , com.crossballbox.model.UserAdditionalInfo userAdditionalInfo , java.lang.String imagePath , com.crossballbox.model.User user ) { int userId = user . getId () ; com.crossballbox.model.UserInfo userInfo = user . getUserInfo () ; if ( userInfo == null ) { userInfo = new com.crossballbox.model.UserInfo ( userId ) ; } userInfo . setFamilyData ( familyData ) ; userInfo . setUserHealthyState ( userHealthyState ) ; userInfo . setUserAdditionalInfo ( userAdditionalInfo ) ; userInfo . setUser ( user ) ; userInfoDAO . save ( userInfo ) ; return userInfo ; } 
public static java.util.List paserLineEnd ( java.lang.String content ) { java.util.List < java.lang.Integer > lines = new java.util.ArrayList < java.lang.Integer > () ; int length = content . length () ; for ( int i = 0 ; i < length ; i ++ ) { if ( ( content . charAt ( i ) ) == '\n' ) { lines . add ( i ) ; } } return lines ; } 
@ java.lang.Override public synchronized void close ( org.apache.hadoop.mapreduce.TaskAttemptContext context ) throws java.io.IOException { try { this . officeWriter . close () ; } catch ( org.zuinnote.hadoop.office.format.mapreduce.OfficeWriterException e ) { org.zuinnote.hadoop.office.format.mapreduce.AbstractSpreadSheetDocumentRecordWriter.LOG . error ( e ) ; } finally { if ( ( this . currentReader ) != null ) { this . currentReader . close () ; } } } 
public void printMessage () { try { main.Peer.reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () ) ) ; java.lang.String response ; while ( ( response = main.Peer.reader . readLine () ) != null ) { java.lang.System.out . println ( response ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult validate ( final java.io.File file ) { final com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult validationResult = new com.github.sylvainlaurent.maven.swaggervalidator.ValidationResult () ; com.fasterxml.jackson.databind.JsonNode spec ; try { spec = readFileContent ( file ) ; } catch ( final java.lang.Exception e ) { validationResult . addMessage ( ( ( ( "Error while parsing file " + file ) + ": " ) + ( e . getMessage () ) ) ) ; validationResult . encounteredError () ; return validationResult ; } readSwaggerSpec ( spec , file , validationResult ) ; validateSwagger ( spec , validationResult ) ; return validationResult ; } 
private void onKeysDownloadFailed ( final java.util.List < java.lang.String > userIds ) { if ( null != userIds ) { synchronized ( mUserKeyDownloadsInProgress ) { java.util.Map < java.lang.String , java.lang.Integer > deviceTrackingStatuses = mCryptoStore . getDeviceTrackingStatuses () ; for ( java.lang.String userId : userIds ) { mUserKeyDownloadsInProgress . remove ( userId ) ; deviceTrackingStatuses . put ( userId , org.matrix.androidsdk.crypto.MXDeviceList.TRACKING_STATUS_PENDING_DOWNLOAD ) ; } mCryptoStore . saveDeviceTrackingStatuses ( deviceTrackingStatuses ) ; } } mIsDownloadingKeys = false ; } 
public static void printIndexBoard () { java.lang.System.out . println () ; for ( int i = 0 ; i < 9 ; i ++ ) { if ( ( ( i % 3 ) == 0 ) && ( i != 0 ) ) { java.lang.System.out . println () ; java.lang.System.out . println ( "-------------" ) ; } java.lang.System.out . print ( ( " | " + ( i + 1 ) ) ) ; } java.lang.System.out . println () ; } 
@ java.lang.Override public void onError ( int response , java.lang.Exception e ) { if ( response == ( org.solovyev.android.checkout.ResponseCodes.ITEM_NOT_OWNED ) ) { inventory . load () . whenLoaded ( this ) ; } else { if ( ( listener () ) != null ) listener () . onConsumeFailed () ; } } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; if ( ( songs ) != null ) { outState . putParcelableArrayList ( "songs" , songs ) ; outState . putString ( "bandName" , bandName ) ; outState . putInt ( "position" , position ) ; } if ( ( mediaPlayer ) != null ) { outState . putDouble ( "songPosition" , timeElapsed ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { workoutId = savedInstanceState . getLong ( hfad.com.workout.WorkoutDetailFragment.WORKOUT_ID ) ; } else { android.support.v4.app.FragmentTransaction ft = getChildFragmentManager () . beginTransaction () ; hfad.com.workout.StopwatchFragment stopwatchFragment = new hfad.com.workout.StopwatchFragment () ; ft . replace ( R.id.stopwatch_container , stopwatchFragment ) ; ft . addToBackStack ( null ) ; ft . setTransition ( FragmentTransaction.TRANSIT_FRAGMENT_FADE ) ; ft . commit () ; } return inflater . inflate ( R.layout.fragment_workout_detail , container , false ) ; } 
public void multiply ( solver.Polynomial p ) { solver.Polynomial output = new solver.Polynomial () ; solver.Term current = p . getFirst () ; if ( ( first ) == null ) { first = p . getFirst () ; ( size ) ++ ; } else { while ( current != null ) { solver.Polynomial temp = new solver.Polynomial ( this . getFirst () ) ; temp . multiply ( current ) ; output . add ( temp ) ; current = current . getNext () ; } } } 
public void disableSessionChosing ( boolean value ) { sessionComboBox . setDisable ( value ) ; newSessionField . setDisable ( ( ( value || ( ( sessionComboBox . getValue () ) == null ) ) || ( ! ( sessionComboBox . getValue () . equals ( com.cbapps.reversi.client.LoginLayout.ITEM_NEW_SESSION ) ) ) ) ) ; } 
@ java.lang.Override public void onConnected ( android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_BALANCED_POWER_ACCURACY ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } LocationServices.FusedLocationApi . requestLocationUpdates ( mclientAPI , mLocationRequest , this ) ; } 
public static boolean isXml ( java.io.File file ) throws edu.brandeis.cs.nlp.mae.io.MaeIOException { try { java.util.Scanner scanner = new java.util.Scanner ( new java.io.BufferedReader ( new java.io.FileReader ( file ) ) ) ; while ( scanner . hasNext () ) { java.lang.String nextLine = scanner . nextLine () . trim () ; if ( ( nextLine . length () ) > 1 ) { return nextLine . startsWith ( "<?xml" ) ; } } } catch ( java.io.FileNotFoundException e ) { throw new edu.brandeis.cs.nlp.mae.io.MaeIOException ( "file not found" , e ) ; } return false ; } 
@ java.lang.Override public int colorMultiplier ( net.minecraft.block.state.IBlockState state , net.minecraft.world.IBlockAccess worldIn , net.minecraft.util.math.BlockPos pos , int tintIndex ) { int meta = state . getBlock () . getMetaFromState ( state ) ; if ( ( state . getBlock () ) instanceof zmaster587.libVulpes.block.BlockOre ) { zmaster587.libVulpes.api.material.Material mat = ( ( zmaster587.libVulpes.block.BlockOre ) ( state . getBlock () ) ) . ores [ meta ] ; if ( mat != null ) return mat . getColor () ; } return 16777215 ; } 
public boolean matches ( net.minecraft.world.World world , int x , int y , int z ) { net.minecraft.block.Block blockOf = world . getBlock ( x , y , z ) ; if ( ( blockOf . equals ( targetBlock ) ) && ( ( targetMetadata ) == ( - 1 ) ) ) return true ; if ( ( blockOf . equals ( targetBlock ) ) && ( ( targetMetadata ) == ( world . getBlockMetadata ( x , y , z ) ) ) ) return true ; return false ; } 
protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; if ( ( findViewById ( R.id.track_container ) ) != null ) { mTwoPane = true ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . replace ( R.id.track_container , new com.dkulon.spotifystreamer.Fragment.SearchTrackFragment () , "TrackFragment" ) . commit () ; } } } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { switch ( msg.what ) { case com.virtualightning.library.simple2develop.state.MainLoopCall.MSG_STATE_UPDATE : java.lang.Object [] objects = ( ( java.lang.Object [] ) ( msg.obj ) ) ; com.virtualightning.library.simple2develop.state.StateMediator mediator = ( ( com.virtualightning.library.simple2develop.state.StateMediator ) ( objects [ 0 ] ) ) ; msg.obj = null ; if ( ( msg.arg1 ) == ( mediator . getSequenceId () ) ) mediator . updateObserver ( ( ( java.lang.Object [] ) ( objects [ 1 ] ) ) ) ; break; } } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( "Plan{\n" + "relation=" ) + ( relation . getElement () . toString () ) ) + "\n, cost=" ) + ( cost ) ) + "\n, assignedProviders=" ) + ( assignedProviders . toString () ) ) + "\n}" ; } 
@ java.lang.Override public long getDateHeader ( java.lang.String name ) { java.lang.String v = getHeader ( name ) ; if ( v == null ) { return - 1 ; } for ( java.text.DateFormat df : dateFormats ) { try { java.util.Date date = df . parse ( v ) ; return date . getTime () ; } catch ( java.text.ParseException pe ) {} } throw new java.lang.IllegalArgumentException ( ( "Unhandled date format: " + v ) ) ; } 
public static com.izik.recipebook.Model instance ( android.content.Context context ) { if ( context instanceof com.izik.recipebook.Model.OnModelCompletedOperationListener ) { com.izik.recipebook.Model.mListener = ( ( com.izik.recipebook.Model.OnModelCompletedOperationListener ) ( context ) ) ; } else { throw new java.lang.RuntimeException ( ( ( context . toString () ) + " must implement OnFragmentInteractionListener" ) ) ; } com.izik.recipebook.Model.mContext = context ; return com.izik.recipebook.Model.instance ; } 
@ java.lang.Override public void onShowFavorites ( java.util.List < com.fireofandroid.bloggarden.StarredBlogDB.StarredBlog > favoriteBlogs ) { android.util.Log . d ( com.fireofandroid.bloggarden.favoriteblog.FavoritesActivity.TAG , ( "onShowFavorites->total favorite blogs: " + ( favoriteBlogs . size () ) ) ) ; if ( ( favoriteBlogs . size () ) == 0 ) { android.widget.Toast . makeText ( this , "无收藏文章" , Toast.LENGTH_SHORT ) . show () ; } mFavoriteBlogs = favoriteBlogs ; mFavoritesGV . setAdapter ( new com.fireofandroid.bloggarden.favoriteblog.FavoritesAdapter ( getApplicationContext () , favoriteBlogs ) ) ; } 
@ java.lang.Override public T get ( int index ) { if ( ( size () ) <= index ) throw new java.util.NoSuchElementException ( "The required index isn't in the list" ) ; lists.linkedlist.ListNode < T > current = firstNode ; while ( index > 0 ) { current = current . getNext () ; index -- ; } return current . getData () ; } 
@ java.lang.Override public void done ( List < com.angcyo.bmob.PasswordBmob > list , cn.bmob.v3.exception.BmobException e ) { List < java.lang.String > strings = new com.angcyo.bmob.ArrayList <> () ; if ( e == null ) { java.util.Collections . reverse ( list ) ; for ( com.angcyo.bmob.PasswordBmob bmob : list ) { if ( strings . contains ( bmob . getPassword () ) ) {} else { strings . add ( bmob . getPassword () ) ; } } } listener . onFind ( strings ) ; } 
public boolean removeOrder ( PurchasedItem item ) { if ( ( numItems ) > 0 ) { for ( int i = 0 ; i < ( numItems ) ; i ++ ) { if ( items [ i ] . equals ( item ) ) { for ( int j = i + 1 ; j < ( numItems ) ; j ++ ) { items [ ( j - 1 ) ] = items [ j ] ; } ( numItems ) -- ; return true ; } } } return false ; } 
protected java.lang.String buildHealthCheckString ( java.lang.String path , java.lang.String host ) { if ( ( ( path == null ) || ( path . equals ( "" ) ) ) || ( host == null ) ) { return "" ; } if ( ( path . startsWith ( "GET" ) ) || ( path . startsWith ( "POST" ) ) ) { return path ; } return ( ( ( "GET " + path ) + " HTTP/1.0\\r\\nHost: " ) + host ) + "\\r\\n\\r\\n" ; } 
@ java.lang.Override void tableRowClicked ( int row , int col ) { o_removeLabel . setEnabled ( ( row != ( - 1 ) ) ) ; o_dismissLabel . setEnabled ( ( ( row != ( - 1 ) ) && ( o_item . getReminder ( row ) . isActive () ) ) ) ; o_linkReminderLabel . setEnabled ( ( row != ( - 1 ) ) ) ; } 
public final void setStartDate ( java.util.Date startDate ) { if ( ( ( this . startDate ) == null ) || ( ! ( this . startDate . equals ( startDate ) ) ) ) { if ( ( ( startDate != null ) && ( ( endDate ) != null ) ) && ( endDate . before ( startDate ) ) ) { throw new de.invation.code.toval.validate.ParameterException ( "The start date must be before the end date of the filter." ) ; } this . startDate = startDate ; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter . setChanged () ; de.uni.freiburg.iig.telematik.sewol.log.filter.TimeFilter . notifyObservers () ; } } 
private boolean matchRange () { if ( ( ( ( ( si ) + 2 ) < ( sn ) ) && ( ( src . charAt ( ( ( si ) + 1 ) ) ) == '-' ) ) && ( ( src . charAt ( ( ( si ) + 2 ) ) ) != ']' ) ) { si += 3 ; return true ; } else return false ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( getArguments () ) != null ) { mParam1 = getArguments () . getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM1 ) ; mParam2 = getArguments () . getString ( uw.studybuddy.Events.EventsListRecycleViewFragment.ARG_PARAM2 ) ; } } 
public void switchState ( org.usfirst.frc.team2984.robot.subsystems.DriveTrain.State state ) { if ( state == ( this . driveState ) ) { return; } if ( state == null ) { state = this . driveState ; } switch ( state ) { case VOLTAGE_CONTROL : this . configureTalonsVoltage () ; break; case SPEED_CONTROL : this . configureTalonsSpeed () ; break; case DISTANCE_CONTROL : this . configureTalonsDistance () ; } this . driveState = state ; } 
private double calcMaxMana ( int level ) { if ( level < 10 ) { return 0 ; } double a = java.lang.Math . pow ( 1.01 , ( level / 10 ) ) ; double b = 0.01 * ( ( java.lang.Math . pow ( 1.15 , ( level - 10 ) ) ) - 1 ) ; return ( ( java.lang.Math . log ( ( a + b ) ) ) / ( java.lang.Math . log ( 1.0001 ) ) ) + 1 ; } 
@ java.lang.Override public void visitToken ( com.puppycrawl.tools.checkstyle.api.DetailAST ast ) { final java.lang.String literal = ast . getText () ; if ( ( hasUnicodeChar ( literal ) ) && ( ! ( ( ( ( ( allowByTailComment ) && ( haastrailComment ( ast ) ) ) || ( isAllCharactersEscaped ( literal ) ) ) || ( ( allowEscapesForControlCharacters ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sUnicodeControl ) ) ) ) || ( ( allowNonPrintableEscapes ) && ( isOnlyUnicodeValidChars ( literal , com.puppycrawl.tools.checkstyle.checks.AvoidEscapedUnicodeCharactersCheck.sNonPrintableChars ) ) ) ) ) ) { log ( ast . getLineNo () , "forbid.escaped.unicode.char" ) ; } } 
public void putDoubleArray ( final double [] data ) { int l = ( data.length ) * ( com.heerbann.unsafe.UnsafeBuffer.sizeOfDouble ) ; putInt ( l ) ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( com.heerbann.unsafe.UnsafeBuffer . toAddress ( data ) , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
public boolean equals ( java.lang.String metricName , java.lang.String queueName , int periodicity , int queueCapacity ) { return ( ( ( this . metricName . equals ( metricName ) ) && ( this . queueName . equals ( queueName ) ) ) && ( ( this . periodicity ) == periodicity ) ) && ( ( this . queueCapacity ) == queueCapacity ) ; } 
public void evaluate ( ) throws java.io.IOException , java.sql.SQLException { java.util.List < edu.washington.multirframework.data.Extraction > modelExtractions = efc . getExtractions ( ( "_results_" + ( new java.io.File ( modelName ) . getName () ) ) , writeExtractions , verbose , verboseFile ) ; res . fillResult ( modelExtractions ) ; res . dumpResults () ; } 
private boolean mergeLine ( java.util.List < nz.ac.auckland.alm.EmptySpace > line , nz.ac.auckland.alm.algebra.IDirection direction ) { while ( ( line . size () ) > 1 ) { nz.ac.auckland.alm.EmptySpace area1 = line . get ( 0 ) ; nz.ac.auckland.alm.EmptySpace area2 = line . get ( 1 ) ; if ( ! ( merge ( area1 , area2 , direction ) ) ) return false ; line . remove ( area2 ) ; } return true ; } 
static boolean isLastWordInDirection ( com.totsp.crossword.puz.Box [] [] boxes , com.totsp.crossword.puz.Playboard.Word w ) { if ( w.across ) { return ( ( w.start.across ) + ( w.length ) ) >= ( boxes.length ) ; } return ( ( w.start.down ) + ( w.length ) ) >= ( boxes [ w.start.across ] . length ) ; } 
public java.util.List < com.example.agathe.tsgtest.dto.Contact > getPrivateContacts ( int numberOfContacts ) { java.util.List < com.example.agathe.tsgtest.dto.Contact > contacts = null ; com.olab.smplibrary.SMPLibrary . GetPrivateContacts ( context , numberOfContacts , new com.olab.smplibrary.DataResponseCallback () { @ java.lang.Override public void OnResponse ( int response_code , java.lang.String data_response ) { android.util.Log . i ( "MainActivity:Response" , ( "GetPrivateContacts response code " + response_code ) ) ; android.util.Log . i ( "MainActivity:Response" , ( "GetPrivateContacts - " + data_response ) ) ; } } ) ; return contacts ; } 
public void printGrid () { java.lang.System.out . println ( "----------" ) ; for ( java.lang.String [] i : gridDis ) { for ( java.lang.String x : i ) { java.lang.System.out . print ( ( x + " " ) ) ; } java.lang.System.out . println ( "" ) ; } java.lang.System.out . println ( "----------" ) ; } 
@ java.lang.Override public void migrate ( io.realm.DynamicRealm realm , long oldVersion , long newVersion ) { io.realm.RealmSchema schema = realm . getSchema () ; if ( oldVersion == 0 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } if ( oldVersion == 1 ) { schema . create ( "User" ) . removeField ( "energy" ) . removeField ( "maxEnergy" ) ; oldVersion ++ ; } } 
com.google.javascript.jscomp.newtypes.FunctionType specialize ( com.google.javascript.jscomp.newtypes.FunctionType other ) { if ( ( other == null ) || ( ( ! ( this . isLoose () ) ) && ( other . isLoose () ) ) ) { return this ; } com.google.javascript.jscomp.newtypes.FunctionType result = com.google.javascript.jscomp.newtypes.FunctionType . meet ( this , other ) ; if ( ( this . isLoose ) && ( ! ( result . isLoose () ) ) ) { result = result . withLoose () ; } return result ; } 
@ java.lang.Override protected void loadFileSystem ( final com.linxonline.mallet.io.filesystem.FileSystem _fileSystem ) { com.linxonline.mallet.util.logger.Logger . println ( "Finalising filesystem." , Logger.Verbosity.MINOR ) ; com.linxonline.mallet.io.filesystem.GlobalFileSystem . setFileSystem ( _fileSystem ) ; com.linxonline.mallet.util.logger.Logger . println ( "Mapping Base directory." , Logger.Verbosity.MINOR ) ; if ( ( com.linxonline.mallet.io.filesystem.GlobalFileSystem . mapDirectory ( "base/" ) ) == false ) { com.linxonline.mallet.util.logger.Logger . println ( "Failed to map base directory." , Logger.Verbosity.MINOR ) ; } } 
private void restoreCursor ( org.eclipse.swt.widgets.Control control ) { if ( control . isDisposed () ) { return; } org.eclipse.swt.graphics.Cursor oldCursor = ( ( org.eclipse.swt.graphics.Cursor ) ( control . getData ( "pdetools-old-cursor" ) ) ) ; if ( ( oldCursor != null ) && ( oldCursor . isDisposed () ) ) { oldCursor = null ; } control . setCursor ( oldCursor ) ; } 
@ java.lang.Override protected void onSelectionChanged ( int selStart , int selEnd ) { super . onSelectionChanged ( selStart , selEnd ) ; if ( ( state ) == null ) { return; } if ( selStart == selEnd ) { changeSpanStateBySelection ( selStart ) ; } else { changeSpanStateBySelection ( selStart , selEnd ) ; } } 
public javafx.scene.control.Button toButton ( java.lang.String label ) { javafx.scene.control.Button button = new javafx.scene.control.Button ( label ) ; button . setGraphic ( ( ( this . graphic ) != null ? this . graphic . get () : null ) ) ; button . setUserData ( this ) ; return button ; } 
@ javax.annotation.security.RolesAllowed ( value = org.votingsystem.web.currency.util.AuthRole.ADMIN ) @ org.votingsystem.web.currency.jaxrs.Path ( value = "/user/id/{userId}/{year}" ) @ org.votingsystem.web.currency.jaxrs.GET @ org.votingsystem.web.currency.jaxrs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response userYear ( @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "userId" ) long userId , @ org.votingsystem.web.currency.jaxrs.PathParam ( value = "year" ) int year ) throws java.lang.Exception { java.util.Calendar calendar = org.votingsystem.web.currency.jaxrs.DateUtils . getCalendar ( year , 1 , 1 ) ; org.votingsystem.model.User user = dao . find ( org.votingsystem.model.User . class , userId ) ; if ( user == null ) return javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) . entity ( ( "ERROR - User not found - userId: " + userId ) ) . build () ; return getUserBalancesDto ( user , org.votingsystem.web.currency.jaxrs.DateUtils . getYearPeriod ( calendar ) ) ; } 
private java.lang.String firstSet ( java.lang.String expression ) { int end = ( expression . indexOf ( Constants.CLOSE_SQUARE_BRACKET ) ) + 1 ; if ( ( expression . length () ) > end ) { java.lang.String quantifier = java.lang.String . valueOf ( expression . charAt ( end ) ) ; if ( isQuantifier ( quantifier ) ) { end ++ ; } } return expression . substring ( 0 , end ) ; } 
@ java.lang.Override protected void resetGame () { super . resetGame () ; m_deck . shuffle () ; m_board . setInitiation ( true ) ; for ( int i = 0 ; i < ( m_board . getMaxCardsX () ) ; i ++ ) { for ( int j = 0 ; j < ( i + 1 ) ; j ++ ) { m_board . addCard ( m_deck . dealCard () , i ) ; } } m_board . setInitiation ( false ) ; stats . startTimer () ; } 
private int findRandomInstance () { int random_instance = ( ( int ) ( ( java.lang.Math . random () ) * ( used.length ) ) ) ; while ( used [ random_instance ] ) { random_instance ++ ; if ( random_instance >= ( used.length ) ) random_instance = 0 ; } used [ random_instance ] = true ; return random_instance ; } 
public int getIndexFromValue ( java.lang.String [] list , java.lang.String v ) { for ( int i = 0 ; i != ( list.length ) ; i ++ ) { if ( list [ i ] . equals ( v ) ) return i ; } return 0 ; } 
public java.util.List < net.sf.marineapi.nmea.util.Measurement > getMeasurements () { java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > result = new java.util.ArrayList < net.sf.marineapi.nmea.util.Measurement > () ; for ( int i = 0 ; i < ( getFieldCount () ) ; i += net.sf.marineapi.nmea.parser.XDRParser.DATA_SET_LENGTH ) { net.sf.marineapi.nmea.util.Measurement value = fetchValues ( i ) ; if ( ! ( value . isEmpty () ) ) { result . add ( value ) ; } } return result ; } 
@ java.lang.Override public boolean onChildClick ( android.widget.ExpandableListView parent , android.view.View v , int groupPosition , int childPosition , long id ) { final com.wireless.pojo.menuMgr.Kitchen kitchenSelected = mDeptNodes . get ( groupPosition ) . getValue () . get ( childPosition ) . getKey () ; if ( ! ( kitchenSelected . equals ( mCurrentKitchen ) ) ) { mCurrentKitchen = kitchenSelected ; if ( ( mOnKitchenChangeListener ) != null ) { mOnKitchenChangeListener . onKitchenChange ( mCurrentKitchen ) ; } } return true ; } 
public static ca.claytonrogers.Common.Deck getShuffledDeck () { ca.claytonrogers.Common.Deck deck = new ca.claytonrogers.Common.Deck () ; for ( int i = 1 ; i <= 13 ; i ++ ) { for ( int j = 0 ; j < 4 ; j ++ ) { deck . push ( new ca.claytonrogers.Common.Card ( i , false , Card.Suit . values () [ j ] ) ) ; } } deck . shuffle ( Constants.random ) ; return deck ; } 
public boolean hasOrders ( java.lang.String value ) { for ( int i = 0 ; i < ( orderFields . size () ) ; i ++ ) { java.lang.String option = ( ( java.lang.String ) ( orderFields . elementAt ( i ) ) ) ; if ( ( option . toLowerCase () . compareTo ( value . toLowerCase () ) ) == 0 ) return true ; } return false ; } 
public void signInEmail ( android.view.View v ) { setEmail ( true ) ; if ( ( ( mUsername ) != null ) && ( ( mPassword ) != null ) ) { setLoading ( true ) ; com.google.firebase.auth.FirebaseAuth . getInstance () . signInWithEmailAndPassword ( mUsername , mPassword ) . addOnFailureListener ( this ) . addOnCompleteListener ( this ) ; mDataListener . onLogin ( null ) ; } } 
@ java.lang.Override public void onBlur ( com.google.gwt.event.dom.client.BlurEvent event ) { if ( ( output . getText () . trim () . isEmpty () ) || ( ! ( output . getText () . trim () . matches ( FieldType.ALPHANUMERIC . getRegex () ) ) ) ) { groupOutput . setValidationState ( ValidationState.ERROR ) ; } else { groupOutput . setValidationState ( ValidationState.NONE ) ; } } 
boolean isWrongSequence ( htsjdk.samtools.SAMRecord record ) { return ( ( procesingUnmapped ) && ( ! ( record . getReadUnmappedFlag () ) ) ) || ( ( ! ( procesingUnmapped ) ) && ( ( record . getReadUnmappedFlag () ) || ( ( ( ( shard.contig.referenceName ) != null ) && ( ! ( shard.contig.referenceName . isEmpty () ) ) ) && ( ! ( shard.contig.referenceName . equals ( record . getReferenceName () ) ) ) ) ) ) ; } 
@ java.lang.Override public java.awt.Component getListCellRendererComponent ( javax.swing.JList < ? extends it.unibz.krdb.obda.model.OBDADataSource > list , it.unibz.krdb.obda.model.OBDADataSource value , int index , boolean isSelected , boolean cellHasFocus ) { if ( value == null ) { setText ( "<Select a datasource>" ) ; } else { java.lang.String datasourceUri = value . getSourceID () . toString () ; setText ( datasourceUri ) ; } return this ; } 
@ java.lang.Override protected void doSearch ( jdepend.model.result.AnalysisResult result ) throws jdepend.framework.exception.JDependException { jdepend.util.analyzer.element.helper.ServiceOrVO sov ; for ( jdepend.model.JavaClass javaClass : result . getClasses () ) { if ( ! ( javaClass . isInner () ) ) { continue; } sov = researchServiceOrVO ( javaClass ) ; this . printTable ( "类名" , javaClass . getName () ) ; this . printTable ( "类型" , ( ( sov . getType () ) + ( sov . getIndex () ) ) ) ; } } 
public void initializeRandom () { for ( int row = 0 ; row < ( width ) ; row ++ ) { for ( int col = 0 ; col < ( height ) ; col ++ ) { if ( ( random . nextDouble () ) < ( RANDOM_FILL_FACTOR ) ) { level [ row ] [ col ] = getRandomCharFromLevelMapping () ; } else { level [ row ] [ col ] = ' ' ; } } } initControllers () ; } 
public java.lang.String getComputeResourceLoginUserName () { if ( ( isUseUserCRPref () ) && ( isValid ( userComputeResourcePreference . getLoginUserName () ) ) ) { return userComputeResourcePreference . getLoginUserName () ; } else if ( isValid ( processModel . getProcessResourceSchedule () . getOverrideLoginUserName () ) ) { return processModel . getProcessResourceSchedule () . getOverrideLoginUserName () ; } else { return gatewayComputeResourcePreference . getLoginUserName () ; } } 
public static java.lang.Class getGenericType ( java.lang.Class clazz ) { java.lang.reflect.Type [] genericInterfaces = clazz . getGenericInterfaces () ; for ( java.lang.reflect.Type genericInterface : genericInterfaces ) { if ( genericInterface instanceof java.lang.reflect.ParameterizedType ) { java.lang.reflect.Type [] genericTypes = ( ( java.lang.reflect.ParameterizedType ) ( genericInterface ) ) . getActualTypeArguments () ; if ( ( genericTypes.length ) > 0 ) { return ( ( java.lang.Class ) ( genericTypes [ 0 ] ) ) ; } } } return null ; } 
private java.lang.Object readArray ( com.cedarsoftware.util.io.JsonObject object ) throws java.io.IOException { final java.util.Collection array = new java.util.ArrayList () ; while ( true ) { skipWhitespace () ; final java.lang.Object o = readValue ( object ) ; if ( o != ( com.cedarsoftware.util.io.JsonParser.EMPTY_ARRAY ) ) { array . add ( o ) ; } final int c = skipWhitespaceRead () ; if ( c == ']' ) { break; } else if ( c != ',' ) { error ( "Expected ',' or ']' inside array" ) ; } } return array . toArray () ; } 
@ java.lang.Override public void onAuthStateChanged ( @ android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { if ( ( firebaseAuth . getCurrentUser () ) == null ) { android.content.Intent loginIntent = new android.content.Intent ( this , com.mobapde.vince.mobapde.LoginActivity . class ) ; loginIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_TOP ) ; finish () ; startActivity ( loginIntent ) ; } } 
public synchronized void close ( ) throws java.io.IOException { if ( ( serialPort ) != null ) { serialPort . removeEventListener () ; serialPort . close () ; } if ( ( input ) != null ) { input . close () ; input = null ; } if ( ( output ) != null ) { output . close () ; output = null ; } } 
@ org.apache.logging.log4j.core.config.plugins.PluginFactory public static io.cloudracer.LogMonitor createAppender ( @ org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "name" ) java.lang.String name , @ org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Layout" ) org.apache.logging.log4j.core.Layout < ? > layout , @ org.apache.logging.log4j.core.config.plugins.PluginElement ( value = "Filter" ) final org.apache.logging.log4j.core.Filter filter , @ org.apache.logging.log4j.core.config.plugins.PluginAttribute ( value = "otherAttribute" ) java.lang.String otherAttribute ) { if ( name == null ) { io.cloudracer.LOGGER . error ( "No name provided for TestLog4j2Appender" ) ; return null ; } if ( layout == null ) { layout = org.apache.logging.log4j.core.layout.PatternLayout . createDefaultLayout () ; } return new io.cloudracer.LogMonitor ( name , filter , layout , true ) ; } 
protected void useAbility ( hackbotcore.Unit target ) { assert ( selected ) != null ; assert ( selectedAbility ) != null ; if ( selected . useAbility ( selectedAbility , target ) ) { for ( hackbotcore.Unit u : units ) if ( ( u.sectors . size () ) == 0 ) { units . remove ( u ) ; return; } } } 
private java.util.Collection < org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode > reusableSequence ( final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListEntryNode segment ) { final com.google.common.base.Optional < org.opendaylight.yangtools.yang.data.api.schema.NormalizedNode < ? , ? > > maybeAsSequence = org.opendaylight.yangtools.yang.data.api.schema.NormalizedNodes . findNode ( segment , this . asPathChoice , this . asPathList , this . asPathSequence ) ; if ( maybeAsSequence . isPresent () ) { final org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode asList = ( ( org.opendaylight.yangtools.yang.data.api.schema.UnkeyedListNode ) ( maybeAsSequence . get () ) ) ; if ( ( asList . getSize () ) < 255 ) { return asList . getValue () ; } } return null ; } 
public static void close ( ) throws java.io.IOException { java.io.FileWriter in = new java.io.FileWriter ( new java.io.File ( "./src/main/resources/users.csv" ) , false ) ; for ( model.User _user : services.UserDatabaseInterface.userData ) { java.lang.String userInfo = ( _user . toString () ) + "\n" ; in . append ( userInfo ) ; } in . close () ; } 
public void setIdCardInDB ( int idCardInDB ) { DataBase.DBData.connect = DB . getConnection () ; try { statement = DataBase.DBData.connect . createStatement () ; statement . executeUpdate ( ( "update listcollection.display_of_collection set lastCard= " + idCardInDB ) ) ; statement . close () ; closeResultSet () ; DB . closeDBConnection () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
public void updateIgnore () { filteredBacklog . clear () ; synchronized ( backlog ) { for ( com.iskrembilen.quasseldroid.protocol.state.IrcMessage msg : backlog ) { msg . setFiltered ( com.iskrembilen.quasseldroid.protocol.state.Client . getInstance () . getIgnoreListManager () . matches ( msg ) ) ; if ( ! ( isMessageFiltered ( msg ) ) ) { if ( ( getMarkerLineMessage () ) == ( msg.messageId ) ) isMarkerLineFiltered = false ; filteredBacklog . add ( msg ) ; } else if ( ( getMarkerLineMessage () ) == ( msg.messageId ) ) isMarkerLineFiltered = true ; } } } 
boolean isAppActive ( org.luwrain.core.Application app ) { org.luwrain.core.NullCheck . notNull ( app , "app" ) ; if ( ( app == ( defaultApp ) ) && ( ( activeAppIndex ) < 0 ) ) return true ; if ( ( activeAppIndex ) < 0 ) return false ; if ( ( apps . get ( activeAppIndex ) . app ) == app ) return true ; return false ; } 
@ java.lang.Override public boolean isAssignableBy ( com.github.javaparser.symbolsolver.model.typesystem.Type other ) { if ( other . isArray () ) { if ( ( baseType . isPrimitive () ) && ( other . asArrayType () . getComponentType () . isPrimitive () ) ) { return baseType . equals ( other . asArrayType () . getComponentType () ) ; } return baseType . isAssignableBy ( other . asArrayType () . getComponentType () ) ; } else if ( other . isNull () ) { return true ; } return false ; } 
public void addNetworkUser ( java.lang.String username , java.net.InetAddress IP ) { if ( ( user_ledger . containsKey ( username ) ) || ( username == ( own_user_name ) ) ) { return; } user_ledger . put ( username , IP ) ; filemanager . addUser ( username ) ; gui . addUser ( username ) ; showState () ; } 
public boolean hasFullAccess ( org.spongepowered.api.entity.living.player.User user ) { me.ryanhamshire.griefprevention.PlayerData playerData = GriefPrevention.instance.dataStore . getPlayerData ( this . world , user . getUniqueId () ) ; if ( ( playerData != null ) && ( playerData.ignoreClaims ) ) { return true ; } if ( user . getUniqueId () . equals ( this . ownerID ) ) { if ( playerData.debugClaimPermissions ) { return false ; } return true ; } if ( ( this . parent ) != null ) { return this . parent . hasFullAccess ( user ) ; } return false ; } 
public void donateToWin ( ) throws k2so.GameActionException { float bullets = k2so.DefaultRobot.rc . getTeamBullets () ; int victoryPts = k2so.DefaultRobot.rc . getTeamVictoryPoints () ; int potentialPts = ( ( int ) ( bullets ) ) / ( GameConstants.BULLET_EXCHANGE_RATE ) ; if ( ( ( GameConstants.VICTORY_POINTS_TO_WIN ) - victoryPts ) <= potentialPts ) { k2so.DefaultRobot.rc . donate ( bullets ) ; } } 
private void processMonitoringAfterEvent ( final org.aspectj.lang.ProceedingJoinPoint currentJoinPoint , final java.lang.Object returnValue , final java.nio.ByteBuffer buffer ) { final java.lang.String className = getJoinPointClassName ( currentJoinPoint ) ; java.lang.String formattedReturnValue = extractJoinPointReturnValue ( className , returnValue ) ; if ( formattedReturnValue == null ) { formattedReturnValue = "" ; } buffer . putInt ( explorviz.live_trace_processing.main.MonitoringStringRegistry . getIdForString ( formattedReturnValue ) ) ; } 
@ java.lang.Override public boolean createConnection ( ) throws java.lang.ClassNotFoundException , java.sql.SQLException { com.hida.model.DefaultSetting defaultEntity = DefaultSettingDao . getDefaultSetting () ; if ( defaultEntity == null ) { defaultEntity = new com.hida.model.DefaultSetting ( "" , "" , com.hida.model.TokenType.DIGIT , "ddddd" , 5 , true , true , true ) ; } CurrentSetting = defaultEntity ; return true ; } 
@ java.lang.Override public void onClick ( com.eemc.aida.DialogInterface p1 , int p2 ) { setCardView ( 0 ) ; symad.showing . clear () ; for ( int i = 0 ; i < ( symnum ) ; ++ i ) { if ( syms . get ( i ) . demangledname . contains ( kw . getText () . toString () ) ) { symad.showing . add ( i ) ; } } symad . notifyDataSetChanged () ; } 
public static void main ( java.lang.String [] args ) { boolean success = false ; try { new com.android.commands.sm.Sm () . run ( args ) ; success = true ; } catch ( java.lang.Exception e ) { if ( e instanceof java.lang.IllegalArgumentException ) { com.android.commands.sm.Sm . showUsage () ; java.lang.System . exit ( 1 ) ; } android.util.Log . e ( com.android.commands.sm.Sm.TAG , "Error" , e ) ; java.lang.System.err . println ( ( "Error: " + e ) ) ; } java.lang.System . exit ( ( success ? 0 : 1 ) ) ; } 
public void add ( T n ) { heap . add ( null ) ; int index = ( heap . size () ) - 1 ; while ( ( index > 0 ) && ( ( heap . get ( getParent ( index ) ) . compareTo ( n ) ) == 1 ) ) { heap . set ( index , heap . get ( getParent ( index ) ) ) ; index = getParent ( index ) ; } heap . set ( index , n ) ; } 
void stop () { if ( null == ( reconnectFuture ) ) { return; } reconnectFuture . cancel ( false ) ; if ( ( localDevice ) != null ) { localDevice . terminate () ; localDevice = null ; node . removeChild ( bacnet.BacnetConn.ACTION_STOP ) ; node . removeChild ( bacnet.BacnetConn.ACTION_DISCOVER_DEVICES ) ; node . removeChild ( bacnet.BacnetConn.ACTION_ADD_DEVICE ) ; statnode . setValue ( new org.dsa.iot.dslink.node.value.Value ( bacnet.BacnetConn.NODE_STATUS_STOPPED ) ) ; } } 
@ java.lang.Override public void onBindViewHolder ( final org.cnx.android.adapters.LandingListRecyclerViewAdapter.ViewHolder holder , int position ) { org.cnx.android.beans.Content book = contentList . get ( position ) ; holder.bookTitle . setText ( book . getBookTitle () ) ; if ( ( ( holder.logo ) != null ) && ( ( book . getIcon () ) != null ) ) { holder.logo . setImageResource ( org.cnx.android.utils.CNXUtil . getCoverId ( book , context ) ) ; } } 
@ java.lang.Override public void step ( neutrality.NeutralityModel model , int step , java.util.Optional < java.lang.Double > substep ) { if ( step == 0 ) { super . step ( model , step , substep ) ; } else { neutrality.MarketInfo mi = getModel () . getMarketInformation ( ( step - 1 ) ) ; double mktNetInvest = mi.nspNetworkInvestment ; makeNetworkInvestment ( step , mktNetInvest ) ; if ( getModel () . policyNSPContentAllowed ) { double mktVidInvest = mi.nspVideoInvestment ; makeContentInvestment ( step , mktVidInvest ) ; } else { makeContentInvestment ( step , 0 ) ; } } } 
@ java.lang.Override public void back () { if ( ( mPosition ) == 0 ) mPosition = ( jsData . length () ) - 1 ; else ( mPosition ) -- ; controller . setEndTime ( 0 ) ; player . stop () ; player . reset () ; } 
public void setLocation ( float x , float y , float z ) { if ( ( index ) == ( - 1 ) ) { return; } org.lwjgl.openal.AL10 . alSource3f ( store . getSource ( index ) , AL10.AL_POSITION , x , y , z ) ; } 
@ org.junit.BeforeClass public static void init ( ) throws java.io.IOException , java.lang.InterruptedException , java.sql.SQLException { if ( ! ( org.maxgamer.rs.TitanTest.initialized ) ) { org.maxgamer.rs.TitanTest.initialized = true ; org.maxgamer.rs.core.Core . start () ; while ( ( org.maxgamer.rs.core.Core . getServer () . getTicks () ) <= 0 ) { java.lang.Thread . sleep ( 1 ) ; } } } 
public void displayLendDetails ( org.bbt.kiakoa.model.Lend lend ) { if ( ( lendDetailsFragment ) != null ) { lendDetailsFragment . setLend ( lend ) ; } else { if ( lend != null ) { android.content.Intent intent = new android.content.Intent ( this , org.bbt.kiakoa.LendDetailsActivity . class ) ; intent . putExtra ( LendDetailsActivity.EXTRA_LEND , lend ) ; startActivity ( intent ) ; } } } 
private int calculateCC ( ast.graph.Graph graph ) { int offset ; offset = graph . getFinalNodes () . size () ; offset = ( offset == 1 ) ? offset - 1 : offset - 2 ; offset = 0 ; return ( ( graph . edgeCount () ) - ( ( graph . size () ) - offset ) ) + 2 ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { int x = jDialog . getX () ; x = x + 10 ; if ( x > ( xStart ) ) { x = xStart ; if ( ( fadeOut ) != null ) { fadeOut . stop () ; } fadeOut = null ; jDialog . setVisible ( false ) ; } jDialog . setLocation ( x , y ) ; } 
public void botJailTurn () { if ( ( getCash () ) >= 50 ) { if ( ( _jailTurns ) >= 3 ) { _jailTurns = 0 ; _inJail = false ; charge ( 50 ) ; } else _jailTurns += 1 ; } else { if ( ( _jailTurns ) >= 3 ) { autoMortgage ( 50 ) ; charge ( 50 ) ; } else _jailTurns += 1 ; } } 
public boolean isCurrentLocationValid () { for ( org.lwjgl.util.Point point : currentPiece . getPoints () ) { if ( ( ( ( ( point . getX () ) > ( board [ 0 ] . length ) ) || ( ( point . getY () ) > ( board.length ) ) ) || ( ( point . getX () ) < 0 ) ) || ( ( point . getY () ) < 0 ) ) return false ; } return true ; } 
@ java.lang.Override @ javax.jws.WebMethod public java.util.List < com.softserve.tc.diary.entity.Record > getAllPublicRecordsByNickName ( java.lang.String nickName ) { java.util.List < com.softserve.tc.diary.entity.Record > list = recordDAO . getAllPublicRecordsByNickName ( nickName ) ; java.util.Collections . sort ( list , new java.util.Comparator < com.softserve.tc.diary.entity.Record > () { @ java.lang.Override public int compare ( com.softserve.tc.diary.entity.Record o1 , com.softserve.tc.diary.entity.Record o2 ) { return ( o2 . getCreatedTime () . getTime () ) > ( o1 . getCreatedTime () . getTime () ) ? 1 : - 1 ; } } ) ; return list ; } 
public void insertText ( java.lang.String txt , com.ibm.util.merge.Bookmark bkm ) { if ( txt . matches ( "^\\s*$" ) ) { return; } int start = bkm . getStart () ; this . content . insert ( start , txt ) ; for ( com.ibm.util.merge.Bookmark theBookmark : this . bookmarks ) { if ( ( theBookmark . getStart () ) >= start ) { theBookmark . offest ( txt . length () ) ; } } return; } 
@ java.lang.Override public void setPrimaryItem ( android.view.ViewGroup container , int position , java.lang.Object object ) { super . setPrimaryItem ( container , position , object ) ; if ( ( ( ( getCurrentFragment () ) != object ) && ( object != null ) ) && ( object instanceof me.ccrama.redditslide.Fragments.CommentPage ) ) { mCurrentFragment = ( ( me.ccrama.redditslide.Fragments.CommentPage ) ( object ) ) ; if ( ! ( mCurrentFragment.loaded ) ) { if ( mCurrentFragment . isAdded () ) { mCurrentFragment . doAdapter ( true ) ; } } } } 
public void preencheVagas () { boolean [] vagas = setor . vagas_Disponiveis () ; int progress = 0 ; for ( int i = 0 ; i < 16 ; i ++ ) { if ( vagas [ i ] ) { ++ progress ; paineis [ i ] . setBackground ( java.awt.Color.green ) ; } else paineis [ i ] . setBackground ( java.awt.Color.red ) ; } progress = ( progress * 100 ) / 16 ; progressBar . setValue ( progress ) ; } 
public void getTextFromActivity () { java.lang.String textInString = null ; if ( ( editTextInput ) != null ) { textInString = editTextInput . getText () . toString () ; } if ( ( textInString == null ) || ( textInString . isEmpty () ) ) { doToast ( getString ( R.string.CheckText4Analyze ) ) ; return; } android.content.Intent intent = new android.content.Intent ( this , com.mmdj.textanalyzer.Result_Activity . class ) ; intent . putExtra ( "textInString" , textInString ) ; startActivity ( intent ) ; } 
@ org.junit.Test public void testUpdate () { gui.TimePanel tp = new gui.TimePanel ( new gui.GUI ( false ) , new game.Game () , 15 , new javax.swing.JLabel () ) ; try { java.lang.Thread . sleep ( 500 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } org.junit.Assert . assertEquals ( ( ( ( ( "<html> <b>" + 0 ) + ":" ) + 14 ) + "</b> </html>" ) , tp . getTimerLabel () . getText () ) ; tp . stopTimer () ; } 
private void importFile ( java.lang.String fileName ) throws java.io.IOException { if ( ! ( fileSelecMap . containsKey ( fileName ) ) ) { fileNameLists . add ( fileName ) ; fileList . setItems ( javafx.collections.FXCollections . observableArrayList ( fileNameLists ) ) ; } java.io.File f = new java.io.File ( ( ( ( application.Controller.currentProgramFolder ) + "/" ) + fileName ) ) ; fileSelecMap . put ( fileName , parseFile ( f ) ) ; } 
public void startNameActivity ( android.view.View view ) { android.content.Intent intent = new android.content.Intent ( this , io.exis.cards.cards.NameActivity . class ) ; intent . putExtra ( "screenName" , screenName ) ; startActivityForResult ( intent , 1 ) ; if ( ( android.os.Build.VERSION.SDK_INT ) >= 21 ) { overridePendingTransition ( R.anim.slide_in_right , R.anim.slide_out_left ) ; } } 
public void run ( int sleepTime ) { while ( ( ! ( _programComplete ) ) && ( ! ( com.laboon.SystemSettings . checkForStop () ) ) ) { if ( sleepTime > 0 ) { try { java.lang.Thread . sleep ( sleepTime ) ; } catch ( java.lang.InterruptedException iex ) {} } resetUpdates () ; _mp . highlightChar ( _pa , _x , _y ) ; executeOneStep () ; _mp . setStack ( _ps . toString () ) ; _mp . refresh ( _updateTa , _updateStack , _updateOutput ) ; } } 
protected java.lang.String [] removeEmptyEntries ( java.lang.String [] queryParts ) { int emptyCount = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) == 0 ) emptyCount ++ ; } java.lang.String [] trimmedArray = new java.lang.String [ ( queryParts.length ) - emptyCount ] ; int trimIndex = 0 ; for ( java.lang.String queryPart : queryParts ) { if ( ( queryPart . length () ) != 0 ) { trimmedArray [ trimIndex ] = queryPart ; trimIndex ++ ; } } return trimmedArray ; } 
public void showDatabase () { if ( ( preferenceChecker . howToDisplayCategories () ) != ( com.example.brandon.habitlogger.Preferences.PreferenceChecker.AS_CARDS ) ) { habitList = habitDatabase . getHabits () ; habitAdapter = new com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewAdapter ( habitList , this , menuItemClickListener , buttonClickListener ) ; if ( ( habitDisplayMode ) == ( ONLY_ARCHIVED_HABITS ) ) com.example.brandon.habitlogger.common.MyCollectionUtils . filter ( habitList , Habit.FilterOutNonArchivedHabits ) ; else if ( ( habitDisplayMode ) == ( NO_ARCHIVED_HABITS ) ) com.example.brandon.habitlogger.common.MyCollectionUtils . filter ( habitList , Habit.FilterOutArchivedHabits ) ; java.util.Collections . sort ( habitList , Habit.CategoryNameComparator ) ; habitCardContainer . setAdapter ( habitAdapter ) ; } } 
private void setNoBudgetsIndication () { findViewById ( R.id.loading_spinner ) . setVisibility ( View.GONE ) ; if ( ( this . mapOfBudgets . size () ) > 0 ) { findViewById ( R.id.crying_logo ) . setVisibility ( View.GONE ) ; findViewById ( R.id.explaining_text ) . setVisibility ( View.GONE ) ; } else { findViewById ( R.id.crying_logo ) . setVisibility ( View.VISIBLE ) ; ( ( android.widget.TextView ) ( findViewById ( R.id.explaining_text ) ) ) . setText ( getResources () . getString ( R.string.no_budgets_message ) ) ; } } 
public static boolean isPrefix ( java.lang.String name ) { return ( ( ( ( ( name == null ) || ( name . isEmpty () ) ) || ( ( name . charAt ( 0 ) ) == '_' ) ) || ( java.lang.Character . isLetter ( name . charAt ( 0 ) ) ) ) || ( ( name . charAt ( 0 ) ) == '?' ) ) || ( ( name . charAt ( 0 ) ) == '\\' ) ; } 
public static void changeCurrentPreference ( int pref_index , int value ) { if ( ( com.Veiled.Utils.PreferencesManipulation.userPrefs ) == null ) { com.Veiled.Utils.PreferencesManipulation.userPrefs = new int [] { 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 } ; } com.Veiled.Utils.PreferencesManipulation.userPrefs [ pref_index ] = value ; } 
public void itemStateChanged ( java.awt.event.ItemEvent arg0 ) { if ( ( chkEnOHiHatA . isSelected () ) || ( chkEnOHiHatB . isSelected () ) ) { if ( ! ( cBoxPortOHiHat . isEnabled () ) ) cBoxPortOHiHat . setEnabled ( true ) ; } else { cBoxPortOHiHat . removeAll () ; cBoxPortOHiHat . addItem ( "" ) ; cBoxPortOHiHat . setEnabled ( false ) ; } } 
public boolean fits ( guitarchordmaker.Accord owning ) { return ( ( ( ( this . id ) == ( Accord.Coms.drawLines12 ) ) || ( ( this . id ) == ( Accord.Coms.drawLines6 ) ) ) || ( ( this . six ) && ( ( this . row ) < ( owning.seitenzahle ) ) ) ) || ( ( ! ( this . six ) ) && ( ( this . row ) <= ( owning.seitenzahle ) ) ) ; } 
public void onClickShowHideFilters ( android.view.View view ) { android.widget.LinearLayout button_filter = ( ( android.widget.LinearLayout ) ( findViewById ( R.id.filters_container ) ) ) ; if ( ( button_filter . getVisibility () ) == ( android.view.View.GONE ) ) button_filter . setVisibility ( View.VISIBLE ) ; else { button_filter . setVisibility ( View.GONE ) ; android.widget.EditText editText_brand = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_client_code ) ) ) ; editText_brand . clearFocus () ; android.widget.EditText editText_client_code = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_client_code ) ) ) ; editText_client_code . clearFocus () ; } } 
private void removeWeakSpecies () { int sum = totalAverageFitness () ; for ( int s = 0 ; s < ( getSpecies () . size () ) ; s ++ ) { com.starflask.JavaNESBrain.evolution.Species specie = getSpecies () . get ( s ) ; float breed = com.starflask.JavaNESBrain.utils.FastMath . floor ( ( ( ( specie.averageFitness ) / sum ) * ( Population ) ) ) ; if ( breed < 1 ) { species . remove ( specie ) ; } } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( position != 0 ) { searchView . setText ( hotWords . get ( position ) , true ) ; removeCover ( true ) ; layoutSearch . performClick () ; } else { searchView . setText ( "" ) ; } } 
public void openImageSelector ( android.view.View view ) { android.content.Intent intent ; if ( ( Build.VERSION.SDK_INT ) < 19 ) { intent = new android.content.Intent ( android.content.Intent.ACTION_GET_CONTENT ) ; } else { intent = new android.content.Intent ( android.content.Intent.ACTION_OPEN_DOCUMENT ) ; intent . addCategory ( Intent.CATEGORY_OPENABLE ) ; } intent . setType ( "image/*" ) ; startActivityForResult ( android.content.Intent . createChooser ( intent , "Select Picture" ) , pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.PICK_IMAGE_REQUEST ) ; } 
@ java.lang.Override public java.lang.String getText ( mage.abilities.Mode mode ) { if ( ( ( staticText ) != null ) && ( ! ( staticText . isEmpty () ) ) ) { return staticText ; } if ( ( ( targetName ) != null ) && ( ( targetName . length () ) > 0 ) ) { return ( targetName ) + " doesn't untap during its controller's next untap step" ; } else { return ( "Target " + ( mode . getTargets () . get ( 0 ) . getTargetName () ) ) + " doesn't untap during its controller's next untap step" ; } } 
@ java.lang.Override public synchronized void run () { rootDir = new java.io.File ( t2_01_zadaca_3.T2_01_zadaca_3.rootDirectory ) ; while ( running ) { active = true ; try { java.lang.Thread . sleep ( ( ( secondsNum ) * 1000 ) ) ; } catch ( java.lang.InterruptedException ex ) { java.lang.Thread . currentThread () . interrupt () ; active = false ; } } } 
private void updateGraph ( int phase , java.time.LocalDateTime phasetime ) { int min = phasetime . getMinute () ; int sec = phasetime . getSecond () ; double timer = min + ( sec / 60.0 ) ; this . phases [ ( phase - 1 ) ] . getData () . add ( new javafx.scene.chart.XYChart.Data <> ( ( ( double ) ( this . phaseCounter ) ) , timer ) ) ; ( this . phaseCounter ) ++ ; } 
public int flip ( java.lang.String imageId , boolean horizontal ) { com.google.appengine.api.blobstore.BlobKey key = new com.google.appengine.api.blobstore.BlobKey ( "xx" ) ; com.gruppe4b.edivator.backend.service.Image flippingImage = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeImageFromBlob ( key ) ; com.gruppe4b.edivator.backend.service.Transform transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; if ( horizontal == true ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeHorizontalFlip () ; } else if ( horizontal == false ) { transform = com.gruppe4b.edivator.backend.service.ImagesServiceFactory . makeVerticalFlip () ; } com.gruppe4b.edivator.backend.service.Image flippedImage = imagesService . applyTransform ( transform , flippingImage ) ; int newId = 0 ; return newId ; } 
public static void generateDataForCourse ( java.lang.String courseName ) { long numOfInstr = ( teammates.client.scripts.DataGenerator.random . nextInt ( ( ( ( teammates.client.scripts.DataGenerator.MAX_NUM_OF_INSTRUCTOR_PER_COURSES ) - ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ) + 1 ) ) ) + ( teammates.client.scripts.DataGenerator.MIN_NUM_OF_INSTRUCTOR_PER_COURSES ) ; for ( int j = 0 ; j < numOfInstr ; j ++ ) { java.lang.String instrName = ( ( "Instr" + j ) + "_of_" ) + courseName ; teammates.client.scripts.DataGenerator.instructors . put ( instrName , courseName ) ; } teammates.client.scripts.DataGenerator . generateStudentsDataForCourse ( courseName ) ; } 
public void removeUserSession ( java.lang.String sUserId , java.lang.String sSession ) { synchronized ( nl.ru.crpstudio.CrpUtil.userCache ) { for ( int i = 0 ; i < ( nl.ru.crpstudio.CrpUtil.userCache . size () ) ; i ++ ) { nl.ru.crpstudio.UserSession oThis = nl.ru.crpstudio.CrpUtil.userCache . get ( i ) ; if ( ( oThis.userId . equals ( sUserId ) ) && ( oThis.sessionId . equals ( sSession ) ) ) { oThis.userOkay = false ; oThis.sessionId = "" ; return; } } } } 
@ com.facebook.react.bridge.ReactMethod public void getFocalLength ( com.facebook.react.bridge.ReadableMap options , final com.facebook.react.bridge.Promise promise ) { android.hardware.Camera camera = com.lwansbrough.RCTCamera.RCTCamera . getInstance () . acquireCameraInstance ( options . getInt ( "type" ) ) ; if ( null == camera ) { promise . reject ( "No camera found." ) ; return; } promise . resolve ( com.lwansbrough.RCTCamera.RCTCamera . getInstance () . getFocalLength ( options . getInt ( "type" ) ) ) ; } 
private java.lang.Long matchesTransaction ( net.nikr.eve.jeveasset.gui.tabs.transaction.MyTransaction transaction , boolean add ) { if ( transaction != null ) { return matches ( add , transaction . getTypeID () , transaction . getCharacterID () , null , null , transaction . getLocation () , null , null , null , transaction , null ) ; } else { return null ; } } 
@ java.lang.Override public void setValue ( java.lang.String key , java.lang.String value ) { com.google.common.base.Preconditions . checkNotNull ( nodeName , "Node name cannot be null." ) ; co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue tokenValue = tokenValueMap . get ( key ) ; if ( tokenValue == null ) { tokenValue = new co.cask.cdap.internal.app.runtime.workflow.WorkflowTokenValue () ; tokenValueMap . put ( key , tokenValue ) ; } tokenValue . putValue ( nodeName , value ) ; } 
private static org.stepik.api.objects.StudyObject getLessonStudyObject ( long lessonId , long unitId ) { org.stepik.api.client.StepikApiClient stepikApiClient = org.stepik.core.stepik.StepikAuthManager . authAndGetStepikApiClient () ; org.stepik.api.objects.lessons.CompoundUnitLesson unitLesson = org.stepik.plugin.utils.Utils . getCompoundUnitLessonStudyObject ( stepikApiClient , unitId , lessonId ) ; org.stepik.api.objects.units.Unit unit = unitLesson . getUnit () ; if ( ( unit . getId () ) != 0 ) { org.stepik.api.objects.sections.Section section = org.stepik.plugin.utils.Utils . getSectionStudyObject ( stepikApiClient , unit . getSection () ) ; if ( section != null ) { return org.stepik.plugin.utils.Utils . getCourseStudyObject ( section . getCourse () ) ; } } return unitLesson ; } 
private static java.util.List < java.lang.Integer > generate ( int n ) { java.util.List < java.lang.Integer > factors = new java.util.ArrayList <> () ; if ( n == 1 ) { return factors ; } for ( int i = 2 ; i <= n ; i ++ ) { if ( ( n % i ) == 0 ) { factors . add ( i ) ; n /= i ; } } if ( factors . isEmpty () ) { factors . add ( n ) ; } return factors ; } 
private boolean isKeyWords ( char ch ) { if ( ( ( ch == '<' ) || ( ch == '>' ) ) || ( ch == '?' ) ) { return true ; } else if ( ch == '=' ) { return ( ( peekChar () ) == '"' ) || ( ( peekChar () ) == '\'' ) ; } else { return ( ch == '/' ) && ( ( peekChar () ) == '>' ) ; } } 
public boolean setInteractorHovered ( org.reactome.web.diagram.data.interactors.model.DiagramInteractor hovered ) { if ( ( mouseDown ) != null ) return false ; if ( ( hovered != null ) && ( hovered instanceof org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ) { hoveredInteractor = ( ( org.reactome.web.diagram.data.interactors.model.InteractorEntity ) ( hovered ) ) ; } else { hoveredInteractor = null ; } return true ; } 
java.lang.Long performOperations ( Tree < java.lang.Integer > tree , OperationType operation ) { if ( operation == null ) { return performMixedOperations ( tree ) ; } else if ( operation . equals ( OperationType.INSERT ) ) { return performInserts ( tree ) ; } else if ( operation . equals ( OperationType.SEARCH ) ) { return performSearches ( tree ) ; } else if ( operation . equals ( OperationType.DELETE ) ) { return performDeletes ( tree ) ; } java.lang.System.out . println ( "An error occurred." ) ; return 0L ; } 
@ java.lang.Override public void onError ( java.lang.Throwable throwable ) { com.orhanobut.logger.Logger . e ( ( "There was a problem loading bus on line " + throwable ) ) ; throwable . printStackTrace () ; vista . showLoading ( false ) ; if ( throwable instanceof com.lowwor.realtimebus.domain.NetworkInteractor.NetworkUnavailableException ) { vista . showOffline ( true ) ; } else { vista . showOffline ( false ) ; } } 
public void remove ( T po ) { com.easy.player.database.SQLiteHelperOrm db = new com.easy.player.database.SQLiteHelperOrm () ; com.j256.ormlite.dao.Dao dao = null ; try { dao = db . getDao ( po . getClass () ) ; dao . delete ( po ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } finally { if ( dao != null ) { db . close () ; db = null ; } } } 
@ java.lang.Override public boolean onError ( io.vov.vitamio.MediaPlayer mp , int what , int extra ) { android.util.Log . e ( com.xugaoxiang.live_vtm.activity.MainActivity.TAG , ( ( ( ( "播放出错！" + "what:" ) + what ) + ",extra:" ) + extra ) ) ; android.widget.Toast . makeText ( this , ( ( ( "播放出错！what:" + what ) + ",extra:" ) + extra ) , Toast.LENGTH_LONG ) . show () ; return false ; } 
public void processPages ( long recordsToReadInThisPass ) throws java.io.IOException { reset () ; if ( recordsToReadInThisPass > 0 ) { do { determineSize ( recordsToReadInThisPass ) ; } while ( ( ( valuesReadInCurrentPass ) < recordsToReadInThisPass ) && ( pageReader . hasPage () ) ) ; } org.apache.drill.exec.store.parquet.columnreaders.ColumnReader.logger . trace ( "Column Reader: {} - Values read in this pass: {} - " , this . getColumnDescriptor () . toString () , valuesReadInCurrentPass ) ; valueVec . getMutator () . setValueCount ( valuesReadInCurrentPass ) ; } 
public org.structr.core.GraphObject getEntity ( ) throws org.structr.common.error.FrameworkException { final org.structr.core.GraphObject entity = idResource . getEntity () ; if ( entity != null ) { java.lang.String type = org.structr.schema.SchemaHelper . normalizeEntityName ( typeResource . getRawType () ) ; if ( org.structr.core.graph.search.SearchCommand . getAllSubtypesAsStringSet ( entity . getType () ) . contains ( type ) ) { return entity ; } } throw new org.structr.rest.exception.NotFoundException () ; } 
public void removeItem ( com.brothers.travelplanner.activities.priceplan.cart.CartDataModel item ) { for ( int index = 0 ; index < ( cartDataModelList . size () ) ; index ++ ) { if ( ( ( cartDataModelList . get ( index ) . index ) == ( item.index ) ) && ( ( cartDataModelList . get ( index ) . getId () ) == ( item . getId () ) ) ) { cartDataModelList . remove ( index ) ; } } notifyDataSetChanged () ; } 
public java.util.List < trackerApplication.entity.Vehicle > getVehiclesByUsername ( java.lang.String username ) { java.util.List < trackerApplication.entity.Vehicle > vehicles = new java.util.ArrayList <> () ; org.hibernate.Session session = trackerApplication.persistence.SessionFactoryProvider . getSessionFactory () . openSession () ; vehicles = ( ( java.util.List < trackerApplication.entity.Vehicle > ) ( session . get ( trackerApplication.entity.Vehicle . class , username ) ) ) ; logger . info ( ( "Username: " + username ) ) ; logger . info ( ( "Vehicles found: " + ( vehicles . size () ) ) ) ; return vehicles ; } 
public static void main ( java.lang.String [] args ) throws java.lang.Exception { try { new org.neo4j.wrapper.LoggingService () . initLogger () ; } catch ( java.lang.Exception e ) { org.neo4j.wrapper.NeoServiceWrapper.LOGGER . log ( java.util.logging.Level.SEVERE , e . toString () , e ) ; } if ( ( args.length ) == 1 ) { org.neo4j.wrapper.NeoServiceWrapper . launchAsService ( args [ 0 ] ) ; } else { org.neo4j.wrapper.NeoServiceWrapper . launchAsConsoleApp () ; } } 
@ org.greenrobot.eventbus.Subscribe ( threadMode = org.greenrobot.eventbus.ThreadMode.MAIN ) public void onReceiveStateInMain ( com.tan.musicplayer.common.PlayerEvent.StateEvent event ) { mIsBusy = false ; android.util.Log . i ( com.tan.musicplayer.base.BasePlayerAcitvity.TAG , "onReceiveStateInMain: " ) ; if ( ( event.songs ) != null ) { mSongs = event.songs ; mCurrentTime = event.time ; mCurrentSongIndex = event.index ; mIsPlaying = event.isPlaying ; mDuration = mSongs . get ( mCurrentSongIndex ) . getFileDuration () ; onSetSongs () ; onReceiveServiceStateSuccess ( false ) ; mIsServiceEmpty = false ; } else { mIsServiceEmpty = true ; onReceiveServiceStateSuccess ( true ) ; } } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { if ( ( mTabWidth ) == 0 ) { mTabWidth = ( mViewPager . getWidth () ) / ( mViewPager . getAdapter () . getCount () ) ; } float translationX = ( mTabWidth ) * ( positionOffset + position ) ; setTranslationX ( translationX ) ; } 
public void backButtonClick () { if ( ( currentPlayer ) > 0 ) { gameFrame . getGame () . setCurrentPlayer ( ( ( currentPlayer ) - 1 ) ) ; new trivia.gui.PlayerJoinPanel ( gameFrame ) ; } else { gameFrame . getGame () . setCurrentPlayer ( 0 ) ; gameFrame . getGame () . reset () ; new trivia.gui.MainMenuPanel ( gameFrame ) ; } } 
public static com.flatworks.games.flatcraft.world.World simulateWorld ( com.flatworks.games.flatcraft.world.World world ) { com.flatworks.games.flatcraft.world.WorldGenerator . state ( "Simulating World..." ) ; for ( int i = 0 ; i < 200 ; i ++ ) { world . runTick ( true ) ; com.flatworks.games.flatcraft.world.WorldGenerator . progress ( ( 0.5F + ( ( ( float ) ( ( ( double ) ( i ) ) / ( ( double ) ( 200 ) ) ) ) * 0.5F ) ) ) ; } return world ; } 
public static boolean setAutoExposureLock ( boolean lock ) { if ( ( ( com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder ) != null ) && ( ( com.almalence.opencam.cameracontroller.Camera2Controller . getInstance () . camDevice ) != null ) ) { com.almalence.opencam.cameracontroller.Camera2Controller.previewRequestBuilder . set ( CaptureRequest.CONTROL_AE_LOCK , lock ) ; com.almalence.opencam.cameracontroller.Camera2Controller . setRepeatingRequest () ; android.preference.PreferenceManager . getDefaultSharedPreferences ( com.almalence.opencam.ApplicationScreen . getMainContext () ) . edit () . putBoolean ( ApplicationScreen.sAELockPref , lock ) . commit () ; return true ; } return false ; } 
@ java.lang.Override public boolean apply ( lu.zhe.mtgslackbot.card.Card card ) { if ( ( comparison ) == null ) { return false ; } java.lang.Integer intValue = lu.zhe.mtgslackbot.parsing.Parsing.PROPERTY_FUNCS . get ( property ) . apply ( card ) ; return ( intValue != null ) && ( intValue > ( comparison ) ) ; } 
protected com.tcdi.zombodb.query_parser.rewriters.QueryBuilder build ( com.tcdi.zombodb.query_parser.rewriters.ASTExpansion node ) { com.tcdi.zombodb.query_parser.rewriters.QueryBuilder expansionBuilder = build ( node . getQuery () ) ; com.tcdi.zombodb.query_parser.rewriters.QueryParserNode filterQuery = node . getFilterQuery () ; if ( filterQuery != null ) { com.tcdi.zombodb.query_parser.rewriters.BoolQueryBuilder bqb = boolQuery () ; bqb . must ( expansionBuilder ) ; bqb . must ( build ( filterQuery ) ) ; expansionBuilder = applyVisibility ( bqb , node . getIndexLink () . getIndexName () ) ; } return expansionBuilder ; } 
@ java.lang.Override protected void onPause () { android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( mAudioReceiver ) ; if ( ( ( mAudioController ) != null ) && ( mAudioController . isAudioPlaying () ) ) { startService ( com.bandonleon.audioservice.AudioService . getStartIdleIntent ( this ) ) ; mAudioController . startForegroundService ( com.bandonleon.audioservice.MainActivity.AUDIO_TRACK_TITLE ) ; } else {} super . onPause () ; } 
@ java.lang.Override public void run () { if ( ( getActivity () ) == null ) return; getActivity () . runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { int i = bnp . getProgress () ; if ( i < count ) { bnp . incrementProgressBy ( 1 ) ; } } } ) ; } 
public ulm.university.news.controller.Ballot getBallot ( java.lang.String accessToken , int groupId , int ballotId , boolean withSubresources ) throws ulm.university.news.util.exceptions.ServerException { ulm.university.news.controller.Ballot ballot ; ulm.university.news.controller.User requestor = verifyUserAccess ( accessToken ) ; ulm.university.news.controller.GroupController.logger . debug ( ( "The requestor, i.e. the user with id {}, requests the ballot with the id {} from the group with" + " the id {}." ) , requestor . getId () , ballotId , groupId ) ; verifyGroupExistenceViaDB ( groupId ) ; verifyParticipationInGroupViaDB ( groupId , requestor . getId () ) ; ballot = getBallot ( groupId , ballotId , withSubresources ) ; return ballot ; } 
private void logKeys ( java.util.List < org.jfl110.api.auth.rolling.RollingKey > sortedKeys ) { for ( int i = 0 ; i < ( sortedKeys . size () ) ; i ++ ) { org.jfl110.api.auth.rolling.RollingKey key = sortedKeys . get ( i ) ; java.lang.System.out . println ( ( ( ( ( ( ( ( "Key[" + i ) + "] " ) + ( key . keyNumber () ) ) + " " ) + ( key . validFrom () ) ) + " " ) + ( key . validForSeconds () ) ) ) ; } } 
public static void main ( java.lang.String [] args ) { if ( ( args.length ) < 2 ) { java.lang.System.out . println ( "Usage: java MusicTransposer music.xml key" ) ; } MusicFile music = new MusicFile ( args [ 0 ] ) ; muaic . transposeTo ( KEY . getKeyByNote ( NOTE . getNoteByNote ( args [ 1 ] . charAt ( 0 ) ) ) ) ; } 
private void initUserFields () { java.util.List < java.lang.String > userData = mDataManager . getPreferencesManager () . loadUserProfileData () ; for ( int i = 0 ; i < ( mUserInfoViews . size () ) ; i ++ ) { mUserInfoViews . get ( i ) . setText ( userData . get ( i ) ) ; } mNavTxtEmailView . setText ( userData . get ( 1 ) ) ; mNavTxtNameView . setText ( userData . get ( ( ( userData . size () ) - 1 ) ) ) ; } 
private void initialize () { if ( ( mBluetoothAdapter ) == null ) { final android.bluetooth.BluetoothManager bluetoothManager = ( ( android.bluetooth.BluetoothManager ) ( com.supsi.alessandro.pollutionproblemclient.PollutionApplication . getAppContext () . getSystemService ( Context.BLUETOOTH_SERVICE ) ) ) ; mBluetoothAdapter = bluetoothManager . getAdapter () ; } else { android.util.Log . w ( com.supsi.alessandro.pollutionproblemclient.ble.BleManager.TAG , "initialize() ---> Bluetooth adapter is already initialized" ) ; } } 
@ java.lang.Override public int compare ( main.java.addressBook.Person lhs , main.java.addressBook.Person rhs ) { if ( ( ( lhs . getFirstName () ) != null ) || ( ( rhs . getFirstName () ) != null ) ) { return lhs . getLastName () . concat ( lhs . getFirstName () ) . compareTo ( rhs . getLastName () . concat ( rhs . getFirstName () ) ) ; } else { return lhs . getLastName () . compareTo ( rhs . getLastName () ) ; } } 
public java.lang.String toString ( final boolean reducedSize ) { if ( ( number ) == null ) { if ( reducedSize ) { return ( ( BaulastenPictureFinder.PATH_RS ) + ( BaulastenPictureFinder.SEP ) ) + ( file . toUpperCase () ) ; } else { return ( ( BaulastenPictureFinder.PATH ) + ( BaulastenPictureFinder.SEP ) ) + ( file . toUpperCase () ) ; } } else { return ( ( getFolder ( number , reducedSize ) ) + ( BaulastenPictureFinder.SEP ) ) + ( file . toUpperCase () ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "/" , "/" + ( co.porkopolis.utils.FileConstants.HOME_PAGE ) } , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String home ( @ org.springframework.web.bind.annotation.ModelAttribute co.porkopolis.model.SummonerName summonerName , org.springframework.ui.Model model ) { if ( ( summonerName == null ) || ( ( summonerName . getName () ) == null ) ) { return co.porkopolis.utils.FileConstants.HOME_PAGE ; } co.porkopolis.model.BasicSummoner summoner = request . requestBasicSummoner ( summonerName . getName () ) ; if ( summoner != null ) { model . addAttribute ( AttributeConstants.BASIC_SUMMONER , summoner ) ; return co.porkopolis.utils.FileConstants.INDEX ; } else { model . addAttribute ( AttributeConstants.ERROR , ( ( "Summoner " + ( summonerName . getName () ) ) + " not found." ) ) ; return co.porkopolis.utils.FileConstants.HOME_PAGE ; } } 
@ be.kuleuven.cs.som.annotate.Raw private void setPosition ( hillbillies.model.Vector position ) { if ( ( this . world ) == null ) throw new java.lang.ClassCastException () ; if ( ! ( this . world . isPositionInWorld ( position ) ) ) throw new java.lang.IllegalArgumentException () ; this . position = position ; } 
@ java.lang.Override protected void onPageScrolled ( int position , float offset , int offsetPixels ) { if ( ( ( lastPagedReached ) && ( offset == 0 ) ) && ( ! ( swipeListenerCalled ) ) ) { if ( ( onSwipeListener ) != null ) { onSwipeListener . onAttemptedOnLastPage () ; swipeListenerCalled = true ; } } lastPagedReached = ( position + 1 ) == ( getAdapter () . getCount () ) ; super . onPageScrolled ( position , offset , offsetPixels ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public < T > org.apache.flink.streaming.partitioner.StreamPartitioner < T > getPartitioner ( java.lang.ClassLoader cl , java.lang.String output ) { org.apache.flink.streaming.partitioner.StreamPartitioner < T > partitioner = null ; try { partitioner = ( ( org.apache.flink.streaming.partitioner.StreamPartitioner < T > ) ( org.apache.flink.util.InstantiationUtil . readObjectFromConfig ( this . config , ( ( org.apache.flink.streaming.api.StreamConfig.PARTITIONER_OBJECT ) + output ) , cl ) ) ) ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( "Partitioner could not be instantiated." ) ; } return partitioner ; } 
@ java.lang.SuppressWarnings ( value = { "rawtypes" , "unchecked" } ) public static com.hazelcast.core.HazelcastInstance getHazelcastInstance () { org.osgi.framework.BundleContext ctx = org.osgi.framework.FrameworkUtil . getBundle ( org.wso2.carbon.ntask.core.internal.TasksDSComponent . class ) . getBundleContext () ; org.osgi.framework.ServiceReference ref = ctx . getServiceReference ( com.hazelcast.core.HazelcastInstance . class ) ; if ( ref == null ) { return null ; } return ( ( com.hazelcast.core.HazelcastInstance ) ( ctx . getService ( ref ) ) ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.support.v7.widget.RecyclerView recyclerView , int newState ) { android.support.v7.widget.LinearLayoutManager layoutManager = ( ( android.support.v7.widget.LinearLayoutManager ) ( recyclerView . getLayoutManager () ) ) ; int lastPosition = layoutManager . findLastCompletelyVisibleItemPosition () ; if ( lastPosition == ( ( mAdapter . getItemCount () ) - 1 ) ) { mListViewModel . loadNextPageZhihu ( lastPosition ) ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { switch ( requestCode ) { case com.cs246.bathroom.MapsActivity.MY_PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION : { if ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { userLocation = true ; } else { userLocation = false ; } } } } 
@ java.lang.Override public org.jboss.invocation.Interceptor create ( final org.jboss.invocation.InterceptorFactoryContext context ) { final java.lang.reflect.Method method = SessionBeanHomeInterceptorFactory.INIT_METHOD . get () ; final java.lang.Object [] params = SessionBeanHomeInterceptorFactory.INIT_PARAMETERS . get () ; SessionBeanHomeInterceptorFactory.INIT_METHOD . remove () ; SessionBeanHomeInterceptorFactory.INIT_PARAMETERS . remove () ; return new org.jboss.as.ejb3.component.interceptors.AbstractEJBInterceptor () { @ java.lang.Override public java.lang.Object processInvocation ( final org.jboss.invocation.InterceptorContext context ) throws java.lang.Exception { if ( method != null ) { method . invoke ( context . getTarget () , params ) ; } return context . proceed () ; } } ; } 
@ org.cba.rest.resources.PUT @ org.cba.rest.resources.Path ( value = "edit/{id}" ) @ org.cba.rest.resources.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response editCompany ( @ org.cba.rest.resources.PathParam ( value = "id" ) int id , java.lang.String content ) { com.google.gson.Gson gson = new com.google.gson.Gson () ; org.cba.entities.Company company = gson . fromJson ( content , org.cba.entities.Company . class ) ; if ( company == null ) { throw new org.cba.rest.resources.WebApplicationException ( Response.Status.NOT_FOUND ) ; } try { facade . editCompany ( company ) ; } catch ( org.cba.exception.EntityNotFoundException e ) { e . printStackTrace () ; javax.ws.rs.core.Response . status ( Response.Status.NOT_FOUND ) ; } return javax.ws.rs.core.Response . status ( 200 ) . build () ; } 
private traer.physics.Particle createParticle ( int x , int y ) { synchronized ( m_particleSystem ) { traer.physics.Particle newParticle = m_particleSystem . makeParticle ( campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.PARTICLE_MASS , x , y , 0 ) ; for ( int i = 0 ; i < ( m_particleSystem . numberOfParticles () ) ; i ++ ) { traer.physics.Particle p = m_particleSystem . getParticle ( i ) ; if ( p . equals ( newParticle ) ) { continue; } m_particleSystem . makeAttraction ( p , newParticle , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.REPULSIVE_FORCE , campaignencyclopedia.display.swing.graphical.CampaignEntityGraphCanvas.MIN_REPULSIVE_DISTANCE ) ; } return newParticle ; } } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { if ( intent == null ) { return; } android.net.Uri uri = intent . getParcelableExtra ( "uri" ) ; com.lzh.nonview.router.extras.RouteBundleExtras extras = intent . getParcelableExtra ( "extras" ) ; com.lzh.nonview.router.Router . resume ( uri , extras ) . open ( context ) ; } 
public void resize ( int width , int height ) { camera.viewportWidth = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_HEIGHT ) / height ) * width ; camera . update () ; cameraGUI.viewportHeight = com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT ; cameraGUI.viewportWidth = ( ( com.packtpub.libgdx.canyonbunny.util.Constants.VIEWPORT_GUI_HEIGHT ) / ( ( float ) ( height ) ) ) * ( ( float ) ( width ) ) ; cameraGUI.position . set ( ( ( cameraGUI.viewportWidth ) / 2 ) , ( ( cameraGUI.viewportHeight ) / 2 ) , 0 ) ; cameraGUI . update () ; } 
public void run () { java.lang.System.out . println ( "The Request has been received" ) ; java.lang.System.out . println ( rawMsg ) ; fields = rawMsg . split ( GlobalVariables.token ) ; if ( ( fields.length ) == 1 ) { try { throw new java.lang.Exception ( "Bad Input, no delimiter identified" ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } try { processRequest () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void run () { android.view.Window window = cordova . getActivity () . getWindow () ; window . addFlags ( LayoutParams.FLAG_DISMISS_KEYGUARD ) ; window . addFlags ( LayoutParams.FLAG_SHOW_WHEN_LOCKED ) ; window . addFlags ( LayoutParams.FLAG_TURN_SCREEN_ON ) ; android.util.Log . v ( com.applurk.plugin.ScreenLocker.TAG , ( "ScreenLocker received SUCCESS:" + action ) ) ; callbackContext . success () ; } 
private static java.lang.String inputStreamToString ( java.io.InputStream is ) throws java.io.IOException { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( is ) ) ; java.lang.StringBuilder responseStringBuilder = new java.lang.StringBuilder () ; java.lang.String line ; while ( ( line = reader . readLine () ) != null ) { responseStringBuilder . append ( line ) ; } return responseStringBuilder . toString () ; } 
@ java.lang.Override public java.lang.Object add ( java.lang.Object left , java.lang.Object right ) { if ( ( left instanceof java.lang.String ) && ( right instanceof java.lang.String ) ) { return ( ( java.lang.String ) ( left ) ) + right ; } else { return super . add ( left , right ) ; } } 
public com.jsing.common.string.StringTrimmer getBeforeNext ( java.lang.String stringToSearch ) { if ( ( this . string ) == null ) return this ; int index = getIndex ( stringToSearch ) ; if ( ( index > ( - 1 ) ) && ( index < ( this . end ) ) ) { this . end = java.lang.Math . max ( this . start , index ) ; } return this ; } 
private void openFolder ( java.lang.String folderName ) throws javax.mail.MessagingException { folder = store . getFolder ( folderName ) ; if ( ( folder ) == null ) { throw new javax.mail.MessagingException ( "Invalid folder" ) ; } try { folder . open ( Folder.READ_WRITE ) ; } catch ( javax.mail.MessagingException ex ) { folder . open ( Folder.READ_ONLY ) ; } } 
private java.lang.Integer compareBits ( java.lang.String a , java.lang.String b ) { java.lang.System.out . println ( b ) ; int count = 0 ; for ( int i = 0 ; i < ( java.lang.Math . min ( a . length () , b . length () ) ) ; i ++ ) { if ( ! ( ( a . indexOf ( i ) ) == ( b . indexOf ( i ) ) ) ) return count ; count ++ ; } return count ; } 
@ java.lang.Override public void onReceive ( android.content.Context context , android.content.Intent intent ) { java.lang.String action = intent . getAction () ; java.lang.String token = intent . getStringExtra ( Prefs.FIREBASE_ID ) ; android.util.Log . d ( com.hillelevo.cityelf.Constants.TAG , ( "MainActivity onReceive: " + action ) ) ; android.util.Log . d ( com.hillelevo.cityelf.Constants.TAG , ( "MainActivity onReceive: " + token ) ) ; if ( active ) {} } 
public void generate ( int before , int after ) { if ( ( statement1 ) == ( Statement.NULL ) ) { statement2 . generate ( before , after ) ; } else if ( ( statement2 ) == ( Statement.NULL ) ) { statement1 . generate ( before , after ) ; } else { int label = newLabel () ; statement1 . generate ( before , label ) ; emitLabel ( label ) ; statement2 . generate ( label , after ) ; } } 
public int compare ( Paxos.ProposalId rhs ) { if ( ( this . id ) == ( rhs.id ) ) { if ( ( rhs.playerId ) == ( this . playerId ) ) { return 0 ; } else if ( ( this . playerId ) < ( rhs.playerId ) ) { return - 1 ; } else { return 1 ; } } else if ( ( this . id ) < ( rhs.id ) ) { return - 1 ; } else { return 1 ; } } 
@ java.lang.Override public value.Value sub ( value.Value other ) { if ( ( ! ( isSet () ) ) || ( ! ( other . isSet () ) ) ) { return new value.IntegerValue () ; } return new value.IntegerValue ( ( ( value ) - ( ( ( value.IntegerValue ) ( other ) ) . getValue () ) ) ) ; } 
public static double timeSortedInput ( java.lang.String alg , int n , int trials ) { double total = 0.0 ; java.lang.Double [] a = new java.lang.Double [ n ] ; for ( int t = 0 ; t < trials ; t ++ ) { for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = 1.0 * i ; } total += SortCompare . time ( alg , a ) ; } return total ; } 
@ java.lang.Override protected void setUp ( ) throws java.lang.Exception { java.lang.String name = getName () ; name = name . replace ( "$$" , "/" ) ; name = name . replace ( "$" , "." ) ; consulo.internal.dotnet.asm.mbel.ModuleParser moduleParser = new consulo.internal.dotnet.asm.mbel.ModuleParser ( new java.io.File ( ( "testData/" + name ) ) ) ; myModuleParser = moduleParser ; } 
public static void setOmHome () { java.lang.String webappsDir = java.lang.System . getProperty ( "om.home" , "." ) ; org.apache.openmeetings.util.OmFileHelper . setOmHome ( webappsDir ) ; if ( ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . exists () ) ) || ( ! ( org.apache.openmeetings.util.OmFileHelper . getOmHome () . isDirectory () ) ) ) { org.junit.Assert . fail ( ( "Invalid directory is specified as OM HOME: " + webappsDir ) ) ; } } 
private java.lang.String toBinaryString ( int number ) { java.lang.StringBuilder temp = new java.lang.StringBuilder ( java.lang.Integer . toHexString ( number ) ) ; int length = temp . length () ; for ( int i = 0 ; i < ( 4 - length ) ; i ++ ) temp . append ( "0" ) . append ( temp ) ; return temp . toString () ; } 
@ java.lang.Override public int compareTo ( ch.redmonkeyass.zombieInvasion.worldmap.Node other ) { ch.redmonkeyass.zombieInvasion.worldmap.Node o = ( ( ch.redmonkeyass.zombieInvasion.worldmap.Node ) ( other ) ) ; float f = ( heuristic ) + ( cost ) ; float of = ( o.heuristic ) + ( o.cost ) ; if ( f < of ) { return - 1 ; } else if ( f > of ) { return 1 ; } else { return 0 ; } } 
@ java.lang.Override public void setActive () { isActive = true ; saveService . saveDataValue ( SaveEnum.CONTEXT , context ) ; if ( ( ( type ) == ( com.majalis.scenes.EndScene.Type.ENCOUNTER_OVER ) ) || ( ( type ) == ( com.majalis.scenes.EndScene.Type.GAME_OVER ) ) ) { saveService . saveDataValue ( SaveEnum.RETURN_CONTEXT , null ) ; } saveService . saveDataValue ( SaveEnum.SCENE_CODE , ( - 1 ) ) ; } 
public void setTime ( int t ) { if ( ( ( startTime ) <= t ) && ( t <= ( endTime ) ) ) { hideContextPopups () ; time . set ( t ) ; } else if ( t < ( startTime ) ) time . set ( startTime ) ; else if ( t > ( endTime ) ) time . set ( endTime ) ; } 
private void createChannel () { if ( ( channel ) == null ) { channel = servletRequestContext . getExchange () . getResponseChannel () ; if ( ( internalListener ) != null ) { channel . getWriteSetter () . set ( internalListener ) ; } } } 
private void addRow ( int row , int numInRow ) { int idxInRow = 0 ; int startVertex = ( row * numInRow ) + 1 ; int currVertex = startVertex ; while ( idxInRow < ( numInRow - 1 ) ) { addFace ( currVertex , ( currVertex + 1 ) , ( currVertex + numInRow ) ) ; addFace ( ( currVertex + 1 ) , ( ( currVertex + numInRow ) + 1 ) , ( currVertex + numInRow ) ) ; currVertex ++ ; idxInRow ++ ; } } 
@ java.lang.Override public boolean delete ( com.hazelcast.nio.serialization.Data key ) { checkIfLoaded () ; final long now = getNow () ; final com.hazelcast.map.impl.record.Record record = getRecordOrNull ( key , now , false ) ; if ( record == null ) { mapDataStore . remove ( key , now ) ; } else { return ( removeRecord ( key , record , now ) ) != null ; } return false ; } 
public static boolean CheckGetFileName () { netlife.datamodels.Commands com = new netlife.datamodels.Commands ( "ADD" , "bilder/2012/1.jpg" , "" ) ; netlife.datamodels.Commands com2 = new netlife.datamodels.Commands ( "DEL" , "bilder/2012/1.jpg/" , "" ) ; java.lang.String test = netlife.Logic . getFileName ( com ) ; java.lang.String test2 = netlife.Logic . getFileName ( com2 ) ; boolean check = test . equals ( "1.jpg" ) ; boolean check2 = test2 . equals ( "1.jpg" ) ; return ( check && check2 ) == true ; } 
public void setStartDate ( java.util.Optional < java.util.List < java.util.Date > > startDate ) { try { java.util.List < java.util.Date > dateList = startDate . get () ; if ( ( dateList . size () ) == 2 ) { this . startDate = java.util.Optional . of ( startDate . get () . get ( 0 ) ) ; } else { throw new java.util.NoSuchElementException () ; } } catch ( java.util.NoSuchElementException nse ) { this . startDate = java.util.Optional . empty () ; } } 
public void addLast ( Item item ) { if ( this . checkNull ( item ) ) throw new java.lang.NullPointerException () ; if ( ( tail ) == null ) { tail = new Deque.Node () ; tail.item = item ; head = tail ; } else { tail.prev = new Deque.Node () ; tail.prev.next = tail ; tail = tail.prev ; tail.item = item ; } count += 1 ; } 
public csc668assignment1.Transaction readNextTransaction () { if ( ( ( _transactions ) == null ) || ( ! ( _transactions . hasNext () ) ) ) return null ; else { java.lang.String name = _transactions . getName () ; java.lang.String upc = _transactions . getUPC () ; int quantity = _transactions . getQuantity () ; csc668assignment1.Payments.Payment payment = _transactions . getPayment () ; return new csc668assignment1.Transaction ( name , upc , quantity , payment ) ; } } 
private java.lang.String findHalfHourAfter ( int hours , int minutes ) { java.lang.String halfHourAfter = "" ; minutes += 30 ; if ( minutes >= 60 ) { hours ++ ; minutes -= 60 ; } halfHourAfter = formatTime ( halfHourAfter , hours , minutes ) ; return halfHourAfter += minutes ; } 
protected void updateFromNameChange ( java.lang.String newHeroName ) { if ( mName . equals ( newHeroName ) ) return; mName = newHeroName ; java.lang.String imageName = mParentPresenter . getHeroImageName ( newHeroName ) ; for ( int i = 0 ; i < ( mSimilarityList . size () ) ; i ++ ) { if ( mSimilarityList . get ( i ) . equals ( imageName ) ) { mView . setHeroInRecycler ( i ) ; break; } } mParentPresenter . hideKeyboard () ; mParentPresenter . sendUpdatedHeroList () ; } 
private static double getPassangerDiscount ( ooptraining.Passanger p ) { double discount = 1.0 ; if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.GOLD_LIMIT ) ) { discount = ooptraining.DiscountCalculator.GOLD_DISCOUNT ; } else if ( ( p . getMiles () ) > ( ooptraining.DiscountCalculator.SILVER_LIMIT ) ) { discount = ooptraining.DiscountCalculator.SILVER_DISCOUNT ; } return discount ; } 
private void createNextRound () { if ( ( currentGridNum ) >= ( beetle_kit.EstimationGame.MAX_NUM_ROUNDS ) ) { javax.swing.JPanel panel = createEndGamePanel () ; javax.swing.JOptionPane . showOptionDialog ( this , panel , "Congratulations!!!" , javax.swing.JOptionPane.DEFAULT_OPTION , javax.swing.JOptionPane.PLAIN_MESSAGE , null , new java.lang.Object [] {} , null ) ; return; } createNewGrid () ; } 
double heuristics ( dstarlite.State a , dstarlite.State b ) { double temp ; double min = java.lang.Math . abs ( ( ( a . getX () ) - ( b . getX () ) ) ) ; double max = java.lang.Math . abs ( ( ( a . getY () ) - ( b . getY () ) ) ) ; if ( min > max ) { temp = min ; min = max ; max = temp ; } return ( ( ( m_sqrt2 ) - 1.0 ) * min ) + max ; } 
private java.util.Collection getTypedCollection ( com.bagri.core.system.Schema schema , java.lang.String typePath ) { for ( java.util.Collection collect : schema . getCollections () ) { java.lang.String cPath = collect . getDocumentType () ; if ( ( cPath != null ) && ( typePath . equals ( cPath ) ) ) { return collect ; } } return null ; } 
public void deregister ( ) throws java.io.IOException { if ( ( listen ) == null ) { java.lang.System.out . println ( "Register first!" ) ; return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( ( "deregister " + ( id ) ) ) ) ) { java.lang.System.out . println ( "Deregister failed, try again" ) ; } listen . interrupt () ; listen = null ; sock . close () ; } 
@ java.lang.Override public void gameOver () { java.lang.String playername = ( ( java.lang.String ) ( javax.swing.JOptionPane . showInputDialog ( null , ( ( ( "Your score: " + ( _panel . gameModel () . step () ) ) + "\n" ) + "Enter your name:\n" ) , "Game Over" , javax.swing.JOptionPane.PLAIN_MESSAGE , null , null , "new player" ) ) ) ; if ( playername != null ) _scoreBoard . put ( _panel . gameModel () . step () , playername ) ; } 
public static com.ldf.calendar.model.CalendarDate fromDate ( java.util.Date date ) { java.util.Calendar cal = java.util.Calendar . getInstance () ; cal . setTime ( date ) ; com.ldf.calendar.model.CalendarDate calendarDate = new com.ldf.calendar.model.CalendarDate () ; calendarDate.year = cal . get ( java.util.Calendar.YEAR ) ; calendarDate.month = ( cal . get ( java.util.Calendar.MONTH ) ) + 1 ; calendarDate.day = cal . get ( java.util.Calendar.DAY_OF_MONTH ) ; return calendarDate ; } 
public void addItem ( item.Item i , int count ) { item.Item item = i . clone () ; if ( count != ( - 1 ) ) { item.count = count ; } if ( i.isStackable ) { int loc = findShopItemLoc ( i ) ; if ( loc >= 0 ) { items . get ( loc ) . count += item.count ; } else { items . add ( item ) ; } } else { items . add ( item ) ; } } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/all" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public java.lang.String returnDiagnose ( @ javax.ws.rs.QueryParam ( value = "session" ) java.lang.String session , @ javax.ws.rs.QueryParam ( value = "patientId" ) java.lang.String patientId ) { java.lang.String medications = "false" ; try { connector = eu.neq.mais.connector.ConnectorFactory . getConnector ( eu.neq.mais.technicalservice.SessionStore . getBackendSid ( session ) ) ; medications = connector . returnMedicationsForPatient ( patientId ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; medications = "false" ; } eu.neq.mais.request.MedicationHandler.logger . info ( ( "return medication method returned json object: " + medications ) ) ; return medications ; } 
public int getTotalBalance () { int totalBalance = 0 ; for ( Reservation reservation : this . reservations ) { if ( ( reservation . getRoomType () ) == "L" ) { totalBalance += 200 ; } if ( ( reservation . getRoomType () ) == "E" ) { totalBalance += 80 ; } } return totalBalance ; } 
private void setValueContrained ( int x ) { x = x - ( this . getAbsoluteLeft () ) ; int width = sliderWidget . getOffsetWidth () ; if ( x < 0 ) { x = 0 ; } if ( x > ( width - 1 ) ) { x = width - 1 ; } int componentValue = ( x * ( max ) ) / width ; setValue ( componentValue , true , false ) ; sliderWidget . setPos ( x ) ; } 
public boolean shootAt ( int row , int column ) { int tempRow = getBowRow () ; int tempColumn = getBowColumn () ; if ( ( ! ( isSunk () ) ) || ( ! ( stworo01.EmptySea . class . isInstance ( this ) ) ) ) { if ( isHorizontal () ) { this . hit [ ( column - tempColumn ) ] = true ; return true ; } else { this . hit [ ( row - tempRow ) ] = true ; return true ; } } return false ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; android.content.Intent intent = getIntent () ; username = intent . getStringExtra ( "Username" ) ; username_TextV = ( ( android.widget.TextView ) ( findViewById ( R.id.username_act_main ) ) ) ; username_TextV . setText ( ( ( username_TextV . getText () . toString () ) + ( username ) ) ) ; initInstances () ; } 
private void setZeroValues ( java.lang.String values ) { zeroValues = new java.util.ArrayList < java.lang.Integer > () ; java.lang.String [] sr = values . split ( "," ) ; for ( int i = 0 ; i < ( sr.length ) ; i ++ ) { int num = java.lang.Integer.MIN_VALUE ; try { num = java.lang.Integer . parseInt ( sr [ i ] ) ; } catch ( java.lang.NumberFormatException nfe ) { break; } zeroValues . add ( num ) ; } } 
public static void index () { controllers.Http.Cookie userLoggedInCookie = request.cookies . get ( "token" ) ; if ( ( userLoggedInCookie == null ) || ( ( models.User . find ( "byToken" , userLoggedInCookie.value ) . first () ) == null ) ) { controllers.Application . loginForm () ; } models.User user = models.User . find ( "byToken" , userLoggedInCookie.value ) . first () ; java.util.List < models.Audio > audios = models.Audio . find ( "byUser" , user ) . fetch () ; render ( audios ) ; } 
private int skip ( int n_skip ) throws java.io.IOException { int n_skipped = 0 ; skipWhiteSpace () ; if ( ( ( ( current ) != ',' ) && ( ( current ) != ']' ) ) && ( ( current ) != '}' ) ) { skipInner () ; n_skipped = 1 ; } while ( ( ( current ) == ',' ) && ( ( n_skipped ++ ) != n_skip ) ) { skipWhiteSpace () ; skipInner () ; } return n_skipped ; } 
private void resetBall ( int scorer ) { if ( scorer == 1 ) { ( score2 ) ++ ; } else { ( score1 ) ++ ; } ballIsStopped = true ; ballOffsetX = 0 ; ballOffsetY = 0 ; ballVelX = 0 ; ballVelY = 0 ; bat1Offset = 0 ; bat2Offset = 0 ; lastScorer = scorer ; bounces = 0 ; } 
@ android.support.annotation.NonNull private com.pushtorefresh.storio.sqlitedb.operation.put.PutResult updateOrInsert ( @ android.support.annotation.NonNull com.pushtorefresh.storio.sqlitedb.StorIOSQLiteDb storIOSQLiteDb , @ android.support.annotation.NonNull android.content.ContentValues contentValues , @ android.support.annotation.NonNull java.lang.String table , @ android.support.annotation.NonNull java.lang.String idFieldName , @ android.support.annotation.NonNull java.lang.String id ) { final int numberOfRowsUpdated = storIOSQLiteDb . internal () . update ( new com.pushtorefresh.storio.sqlitedb.query.UpdateQuery.Builder () . table ( table ) . where ( ( idFieldName + "=?" ) ) . whereArgs ( id ) . build () , contentValues ) ; return numberOfRowsUpdated > 0 ? com.pushtorefresh.storio.sqlitedb.operation.put.PutResult . newUpdateResult ( numberOfRowsUpdated , table ) : insert ( storIOSQLiteDb , contentValues , table ) ; } 
public void onDataReceived ( com.jacks205.spots.model.ParkingStructure [] structures ) { if ( ( spotsListAdapter ) == null ) { spotsListAdapter = new com.jacks205.spots.adapters.SpotsListAdapter ( this , structures ) ; listView . setAdapter ( spotsListAdapter ) ; } else { spotsListAdapter . setStructures ( structures ) ; spotsListAdapter . notifyDataSetChanged () ; } mSwipeRefreshLayout . setRefreshing ( false ) ; } 
public java.lang.String toString () { java.lang.String save = "[" ; int temp = start ; while ( temp != ( end ) ) { save += ( array [ temp ] ) + "," ; if ( temp == ( ( array.length ) - 1 ) ) { temp = 0 ; } else { temp ++ ; } } save += array [ temp ] ; save += "]" ; return save ; } 
private java.util.List < T > down ( int row , int column , int length ) { java.util.List < T > nodes = new java.util.ArrayList <> () ; int rowCount = rowCount () ; for ( int position = 0 ; position < length ; position ++ ) { int currentRow = row + position ; if ( currentRow >= rowCount ) { break; } T node = grid [ currentRow ] [ column ] ; nodes . add ( node ) ; } return nodes ; } 
@ java.lang.Override public com.ankurdave.part.ChildPtr find_child ( byte c ) { for ( int i = 0 ; i < ( this . num_children ) ; i ++ ) { if ( ( keys [ i ] ) == c ) { return new com.ankurdave.part.ArrayChildPtr ( children , i ) ; } } return null ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setRetainInstance ( true ) ; if ( ( com.nectar.thesun.library.MyConstants.homenews ) == null ) { com.nectar.thesun.library.MyConstants.homenews = new java.util.ArrayList <> () ; } if ( ! ( com.nectar.thesun.PageSlidingTabStripFragment . isAsyncTaskPendingOrRunning () ) ) { com.nectar.thesun.PageSlidingTabStripFragment.mcontext = getActivity () . getApplicationContext () ; loadNewsNow ( getActivity () ) ; } } 
public java.util.Collection < net.sf.memoranda.Task > getAllSubTasks ( java.lang.String taskId ) { if ( ( taskId == null ) || ( ( taskId . length () ) == 0 ) ) { return getAllRootTasks () ; } else { net.sf.memoranda.Task task = getTaskElement ( taskId ) ; return task . getSubTasks () ; } } 
@ com.softserve.edu.documents.document.meta.Placeholder ( name = "OWNER_NAME" ) public java.lang.String getOwnerFullName () { com.softserve.edu.entity.verification.ClientData ownerData = getVerification () . getClientData () ; return ( ( ( ( ownerData . getLastName () ) + " " ) + ( ownerData . getFirstName () ) ) + " " ) + ( ownerData . getMiddleName () ) ; } 
private int columnHeight ( int column ) { int r = 0 ; for ( ; ( r < ( this . height ) ) && ( ( this . grid [ column ] [ r ] . isEmpty () ) || ( this . grid [ column ] [ r ] . isShape () ) ) ; r ++ ) ; return ( this . height ) - r ; } 
static void askToSave () { java.lang.String [] options = new java.lang.String [] { "Yes" , "No" , "Cancel" } ; int n = javax.swing.JOptionPane . showOptionDialog ( EssayWriter.frame , "Would you like to save before you exit?" , "Save?" , javax.swing.JOptionPane.YES_NO_CANCEL_OPTION , javax.swing.JOptionPane.QUESTION_MESSAGE , null , options , options [ 0 ] ) ; if ( n == ( javax.swing.JOptionPane.YES_OPTION ) ) { EssayWriter . save () ; java.lang.System . exit ( 0 ) ; } else if ( n == ( javax.swing.JOptionPane.NO_OPTION ) ) { java.lang.System . exit ( 0 ) ; } } 
@ java.lang.Override public void run () { try { if ( clipCheck ) com.bsc.cs.kidssoftware.Test.clip . stop () ; com.bsc.cs.kidssoftware.Test.clip = javax.sound.sampled.AudioSystem . getClip () ; javax.sound.sampled.AudioInputStream inputStream = javax.sound.sampled.AudioSystem . getAudioInputStream ( com.bsc.cs.kidssoftware.Test . class . getResource ( ( "/assets/" + ( file2 ) ) ) ) ; com.bsc.cs.kidssoftware.Test.clip . open ( inputStream ) ; com.bsc.cs.kidssoftware.Test.clip . start () ; clipCheck = true ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
private void check ( com.gargoylesoftware.htmlunit.WebClient wc , com.gargoylesoftware.htmlunit.HttpMethod m ) throws java.io.IOException { com.gargoylesoftware.htmlunit.TextPage p = wc . getPage ( new com.gargoylesoftware.htmlunit.WebRequestSettings ( new java.net.URL ( url , "verbMatch/" ) , m ) ) ; assertEquals ( ( "Got " + ( m . name () ) ) , p . getContent () ) ; } 
@ java.lang.Override public void onClick ( org.bukkit.event.inventory.InventoryClickEvent event ) { org.bukkit.entity.Player player = ( ( org.bukkit.entity.Player ) ( event . getWhoClicked () ) ) ; if ( player != null ) { player . closeInventory () ; player . performCommand ( ( "vote reward " + ( voteSite . getSiteName () ) ) ) ; } } 
@ java.lang.Override public int hashCode () { int result = ( ( getDateFrom () ) != null ) ? getDateFrom () . hashCode () : 0 ; result = ( 31 * result ) + ( ( getUser () ) != null ? getUser () . hashCode () : 0 ) ; result = ( 31 * result ) + ( ( getBookInstance () ) != null ? getBookInstance () . hashCode () : 0 ) ; return result ; } 
public java.lang.String getSpeed ( long size ) { synchronized ( this ) { sum += size ; } long t2 = java.lang.System . currentTimeMillis () ; long t = t2 - ( t1 ) ; t1 = t2 ; if ( t == 0 ) return "MAX" ; return java.lang.String . format ( "%,dKB/s avg. %,dKB/s, sum=%,dbytes" , ( size / t ) , ( ( sum ) / ( t2 - ( t0 ) ) ) , sum ) ; } 
long nextUniqueTransaction ( long time ) { long id = time ; for ( ; ; ) { long old = transactionID . get () ; if ( old >= id ) id = old + 1 ; if ( transactionID . compareAndSet ( old , id ) ) break; } return id ; } 
@ java.lang.Override public void forward ( org.xbill.DNS.Message message , com.ahuazhu.soy.modal.ResponseContext response ) throws java.io.IOException { org.xbill.DNS.Message answer = cache . getValue ( new com.ahuazhu.soy.modal.QuestionKey ( message ) ) ; if ( answer != null ) { send ( answer , response ) ; return; } if ( forwarderStarted ) { callBack . put ( new com.ahuazhu.soy.modal.QueryKey ( message ) , response ) ; for ( java.net.InetSocketAddress upstreamServer : upstreamServers ) { datagramChannel . send ( java.nio.ByteBuffer . wrap ( message . toWire () ) , upstreamServer ) ; } } } 
private void save ( ) throws com.hummingwave.Custom.WaveORMException { com.sample.Employee employee = new com.sample.Employee () ; employee . setEmpNo ( "027" ) ; employee . setName ( "Chaitra" ) ; employee . setBytes ( "Chaitra" . getBytes () ) ; android.util.Log . d ( "BYTES" , ( ( "Chaitra" . getBytes () ) + "" ) ) ; employee . update () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { mCurrentIndex = ( ( mCurrentIndex ) + 1 ) % ( mStations.length ) ; mStartStopButton . setImageDrawable ( playDrawable () ) ; updateDropdownHeader ( mCurrentIndex ) ; playPressed = false ; doneBuffering = false ; if ( ( player ) != null ) { if ( player . isPlaying () ) { player . stop () ; } player . release () ; } setupPlayer () ; updateViews () ; clickPlayButton () ; } 
public static models.Rate create ( int score , java.lang.Long userId , java.lang.Long criteriaId , java.lang.Long projectId ) { if ( ( models.Rate . findByUserIdAndProjectIdAndCriteriaId ( userId , projectId , criteriaId ) ) == null ) { models.Rate rate = new models.Rate () ; rate.score = score ; rate.userId = userId ; rate.criteriaId = criteriaId ; rate.projectId = projectId ; rate . save () ; return rate ; } models.Rate rate = models.Rate . findByUserIdAndProjectIdAndCriteriaId ( userId , projectId , criteriaId ) ; rate.score = score ; rate . update () ; return rate ; } 
@ java.lang.Override public void encodeData ( org.mobicents.protocols.asn.AsnOutputStream asnOs ) throws org.mobicents.protocols.ss7.cap.api.CAPException { if ( ( this . data ) == null ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field must not be null" ) ; if ( ( ( this . data . length ) < 3 ) || ( ( this . data . length ) > 11 ) ) throw new org.mobicents.protocols.ss7.cap.api.CAPException ( "data field length must be from 3 to 11" ) ; asnOs . writeOctetStringData ( data ) ; } 
@ java.lang.Override @ org.springframework.transaction.annotation.Transactional public org.orcid.jaxb.model.message.OrcidProfile updateOrcidBio ( org.orcid.jaxb.model.message.OrcidProfile updatedOrcidProfile ) { org.orcid.jaxb.model.message.OrcidProfile existingProfile = retrieveOrcidProfile ( updatedOrcidProfile . getOrcidIdentifier () . getPath () ) ; if ( existingProfile == null ) { return null ; } orcidJaxbCopyManager . copyUpdatedBioToExistingWithVisibility ( existingProfile . getOrcidBio () , updatedOrcidProfile . getOrcidBio () ) ; return updateOrcidProfile ( existingProfile ) ; } 
private void updateLabels () { if ( ( game.mode ) == "practice" ) { gamePanel . setCurrentWordCount ( game . getWordCount () ) ; } gamePanel . setCurrentWordLabel ( game.currentWord , game.currentCorrectIndex ) ; if ( ( game.difficulty ) <= 2 ) { gamePanel . setCurrentTypedWordLabel ( game.currentTypedWord , game.currentCorrectIndex , game.currentIndex ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { try { hostServer = new CryptoServer () ; hostServer . start () ; setHostOptCompsTo ( false ) ; setStartCompsTo ( false ) ; setWinSizeTo ( hostScreenSize ) ; setHostCompsTo ( true ) ; } catch ( java.io.IOException e ) { GuiUtils.PopUpMessages . errorMsg ( ( ( "port " + ( CryptoServer.port ) ) + " is already used!\nplease try using another port number." ) ) ; hostPortFieldOpt . requestFocus () ; } } 
public void receiveCommit () { this . state = "commit" ; logString ( "receivedCommit" ) ; readInput () ; try { java.lang.System.out . println ( ( "aboutToSendAck:" + ( this . state ) ) ) ; coordinator . receiveAck ( "commit" , this . participantNum ) ; } catch ( java.lang.Exception e ) { logString ( "coordinator.receiveAck('commit') Exception" ) ; } } 
public void run () { train . addHistory ( station , context . getGameLogic () . getPlayerManager () . getTurnNumber () ) ; java.lang.System.out . println ( ( ( ( "Added to history: passed " + ( station . getName () ) ) + " on turn " ) + ( context . getGameLogic () . getPlayerManager () . getTurnNumber () ) ) ) ; junctionFailure ( station ) ; collisions ( station ) ; obstacleCollision ( station ) ; } 
@ java.lang.Override public ru.javawebinar.topjava.model.UserMeal get ( int id , int userId ) { java.util.List < ru.javawebinar.topjava.model.UserMeal > userMeals = em . createNamedQuery ( UserMeal.GET_BY_ID , ru.javawebinar.topjava.model.UserMeal . class ) . setParameter ( 1 , userId ) . setParameter ( 2 , id ) . getResultList () ; if ( ! ( userMeals . isEmpty () ) ) { if ( ( userMeals . get ( 0 ) . getUser () . getId () ) == userId ) { return userMeals . get ( 0 ) ; } else return null ; } else return null ; } 
public int paga_reale_mazziere () { fiches = ( fiches ) - ( puntata ) ; if ( ( fiches ) < 0 ) { perso = true ; int buf = fiches ; fiches = 0 ; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
private void MouseButtonCallback ( long window , int button , int state , int arg3 ) { java.lang.System.out . println ( ( ( ( ( button + " " ) + state ) + " " ) + arg3 ) ) ; if ( ( button == ( org.lwjgl.glfw.GLFW.GLFW_MOUSE_BUTTON_1 ) ) && ( state == 0 ) ) { mouse_down = state == 1 ; toInteract = world . closestEntity ( current . getLocation () , 10.0F ) ; } } 
public java.lang.Long next () { long result = 0 ; while ( result == 0 ) { if ( ! ( hasNext () ) ) { throw new java.util.NoSuchElementException () ; } result = puzzleStorage.puzzles [ cursor ] ; ( cursor ) ++ ; } return result ; } 
@ java.lang.Override public void done ( com.parse.ParseUser user , com.parse.ParseException err ) { if ( user == null ) { android.util.Log . d ( "MyApp" , "Uh oh. The user cancelled the Facebook login." ) ; getUserDetailFromFB () ; } else if ( user . isNew () ) { android.util.Log . d ( "MyApp" , "User signed up and logged in through Facebook!" ) ; getUserDetailFromFB () ; } else { startSaoLonguinho () ; android.util.Log . d ( "MyApp" , "User logged in through Facebook!" ) ; } } 
@ java.lang.Override public void onTouchMove ( com.google.gwt.event.dom.client.TouchMoveEvent event ) { if ( ( ( initialX ) == 0 ) && ( ( initialY ) == 0 ) ) { com.google.gwt.dom.client.Touch touch = event . getTouches () . get ( 0 ) ; initialX = touch . getPageX () ; initialY = touch . getPageY () ; } } 
private com.smanzana.dungeonmaster.utils.StepList toStepList () { com.smanzana.dungeonmaster.utils.StepList out = new com.smanzana.dungeonmaster.utils.StepList () ; if ( ( segments ) != null ) for ( com.smanzana.dungeonmaster.ui.app.swing.editors.StepField.RangeSegment seg : segments ) { if ( seg != null ) out . addStep ( seg . getMax () , seg . getValue () ) ; } return out ; } 
private void remap ( wyautl.core.Automaton automaton , int from , int to ) { for ( int i = 0 ; i != ( automaton . nStates () ) ; ++ i ) { automaton . get ( i ) . remap ( from , to ) ; } } 
public static int calculateScore ( java.util.ArrayList < PairTime > pairTimes ) { int score = 0 ; for ( int i = 0 ; i < ( pairTimes . size () ) ; i ++ ) { score += pairTimes . get ( i ) . getPair () . getScore () ; } return score ; } 
public void push ( org.arcueidarc.nekoarc.types.ArcObject obj ) { for ( ; ; ) { try { stack [ ( ( sp ) ++ ) ] = obj ; return; } catch ( java.lang.ArrayIndexOutOfBoundsException e ) { ( sp ) -- ; stackgc () ; if ( ( sp ) >= ( stack.length ) ) throw new org.arcueidarc.nekoarc.NekoArcException ( "stack overflow" ) ; } } } 
private void updateJobOutput ( java.lang.String uuid , com.kylinolap.job2.dao.JobOutputPO output ) { try { jobDao . addOrUpdateJobOutput ( uuid , output ) ; } catch ( com.kylinolap.job2.exception.PersistentException e ) { com.kylinolap.job2.service.DefaultJobService.logger . error ( ( "fail to update job output id:" + uuid ) , e ) ; throw new java.lang.RuntimeException ( e ) ; } } 
@ WebTests.BeforeSuite ( groups = "InternetExplorer" ) public void setUpDriverIE ( ) throws java.lang.InterruptedException { logger . info ( "[TEST STARTED]" ) ; logger . info ( ( "OS: " + ( operationSystem ) ) ) ; java.lang.System . setProperty ( "webdriver.ie.driver" , java.lang.String . valueOf ( driverIEWin ) ) ; driver = new org.openqa.selenium.ie.InternetExplorerDriver () ; driver . navigate () . to ( Data.ConfigProperties . getProperty ( "baseUrl" ) ) ; } 
public static int minimaxDecision ( State state ) { int action = 0 ; int v = - ( Minimax.MAX_NUMBER ) ; for ( int a : Minimax . actions ( state ) ) { int temp = Minimax . minValue ( Minimax . result ( state , a ) ) ; if ( temp > v ) { v = temp ; action = a ; } } return action ; } 
public org.opennms.netmgt.model.topology.BridgePort getBridgePort ( java.lang.Integer nodeid ) { if ( nodeid == null ) return null ; for ( org.opennms.netmgt.model.topology.BridgePort link : m_portsOnSegment ) { if ( ( link . getNode () . getId () . intValue () ) == ( nodeid . intValue () ) ) return link ; } return null ; } 
public Item removeLast () { Item item = array [ ( ( last ) - 1 ) ] ; if ( item == null ) { throw new java.util.NoSuchElementException () ; } array [ ( ( last ) - 1 ) ] = null ; ( N ) -- ; last = N ; subSize () ; return item ; } 
public java.sql.Connection estaConnection ( ) throws com.info.ghiny.examsystem.tools.ProcessException { java.sql.Connection con ; try { java.lang.Class . forName ( curDriver ) ; con = java.sql.DriverManager . getConnection ( curAddress ) ; } catch ( java.lang.Exception err ) { throw new com.info.ghiny.examsystem.tools.ProcessException ( ( ( "FATAL: " + ( err . getMessage () ) ) + "\nPlease Consult Developer" ) , com.info.ghiny.examsystem.tools.ProcessException.FATAL_MESSAGE , com.info.ghiny.examsystem.tools.IconManager.WARNING ) ; } return con ; } 
@ org.springframework.scheduling.annotation.Async private void start ( java.lang.String url ) { if ( ! ( com.prapps.app.core.controller.CoreController.keepAlive ) ) { com.prapps.app.core.controller.CoreController.keepAlive = true ; while ( com.prapps.app.core.controller.CoreController.keepAlive ) { try { new java.net.URL ( url ) . openConnection () ; java.lang.Thread . sleep ( ( ( ( 1000 * 60 ) * 60 ) * 12 ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } } 
@ java.lang.Override public void onFailure ( retrofit2.Call < com.sdsmdg.bookshareapp.BSA.api.models.LocalBooks.BookList > call , java.lang.Throwable t ) { android.util.Log . d ( "GA_search" , ( "searchOnFail " + ( t . toString () ) ) ) ; refreshLayout . setRefreshing ( false ) ; progressBar . setVisibility ( View.GONE ) ; innerLayout . getForeground () . setAlpha ( 0 ) ; l1 . setVisibility ( View.GONE ) ; l2 . setVisibility ( View.GONE ) ; } 
protected void draw ( android.graphics.Canvas canvas ) { if ( ( center ) == null ) { return; } switch ( style ) { case RECTANGLE : break; case CIRCLE : canvas . drawCircle ( center.x , center.y , radius , paint ) ; break; } } 
public org.joda.time.Duration getEstimatedTime ( @ android.support.annotation.NonNull org.cook_e.data.Step s ) { org.cook_e.data.Objects . requireNonNull ( s , "step must not be null" ) ; int index = searchStep ( s . hashCode () ) ; if ( index >= 0 ) { long time = ( ( long ) ( ( s . getTime () . getMillis () ) * ( org.cook_e.data.TimeLearner.weightList . get ( index ) . timeWeight ) ) ) ; return new org.joda.time.Duration ( time ) ; } return s . getTime () . toDuration () ; } 
public void sleep () { destroyInverseKinematicsRunnable () ; activeMessageSource . set ( null ) ; if ( ( scheduled ) == null ) { if ( us.ihmc.darpaRoboticsChallenge.networkProcessor.kinematicsToolboxModule.KinematicsToolboxModule.DEBUG ) us.ihmc.tools.io.printing.PrintTools . error ( this , "There is no task running." ) ; return; } scheduled . cancel ( true ) ; scheduled = null ; } 
public void resetTo ( dyvil.tools.parsing.token.IToken token ) { this . tokens . jump ( token ) ; if ( ( this . splitTokens ) == null ) { return; } for ( dyvil.tools.parsing.token.IToken splitToken : this . splitTokens ) { splitToken . prev () . setNext ( splitToken ) ; splitToken . next () . setPrev ( splitToken ) ; } this . splitTokens . clear () ; } 
@ java.lang.Override public void set ( java.lang.Boolean value ) { java.util.Collection < java.lang.Object > coll = container . get () ; if ( value ) { if ( coll != null ) { if ( ! ( coll . contains ( item ) ) ) { coll . add ( item ) ; } } else { coll = org.rapidoid.util.U . list ( item ) ; } } else { if ( coll != null ) { coll . remove ( item ) ; } } container . set ( coll ) ; } 
private static double noteToFreq ( int key ) { int note = key % ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ; int octave = ( key / ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES_IN_OCTAVE ) ) - 1 ; return ( edu.utexas.cs.nn.util.sound.MIDIUtil.NOTES [ note ] ) * ( java.lang.Math . pow ( 2.0 , ( ( ( double ) ( octave ) ) - 1.0 ) ) ) ; } 
synchronized void register ( com.kk.bus.Bus bus , java.lang.Object objectToRegister , java.util.Set < java.lang.reflect.Method > subscriberMethods , com.kk.bus.DeliveryContext deliveryContext ) { com.kk.bus.EventDeliverer eventDeliverer = mObjectDeliverers . get ( objectToRegister ) ; if ( eventDeliverer == null ) { eventDeliverer = new com.kk.bus.EventDeliverer ( bus , objectToRegister , deliveryContext ) ; mObjectDeliverers . put ( objectToRegister , eventDeliverer ) ; } eventDeliverer . setSubscriberMethods ( subscriberMethods ) ; } 
public static void teleportPlayer ( org.bukkit.entity.Player player , org.bukkit.Location location , org.bukkit.plugin.java.JavaPlugin plugin ) { int backupTask ; player . teleport ( location ) ; backupTask = plugin . getServer () . getScheduler () . scheduleAsyncDelayedTask ( plugin , new net.madmanmarkau.MultiHome.ChunkResendTask ( location ) , 1 ) ; if ( backupTask == ( - 1 ) ) { net.madmanmarkau.MultiHome.Messaging . logSevere ( "Failed to create chunk resend schedule!" , plugin ) ; } } 
protected void onRetrieveInstanceState ( android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { stats = savedInstanceState . getBundle ( "champData" ) ; isHeader = savedInstanceState . getBoolean ( "isHeader" , false ) ; } else { android.os.Bundle extras = getIntent () . getExtras () ; isHeader = extras . getBoolean ( "isHeader" ) ; stats = extras . getBundle ( "champData" ) ; } } 
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; if ( station != null ) { listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } 
public static void removeEmployee ( int id ) { StaffManager.Company.employeeList . remove ( ( id - 1 ) ) ; for ( int i = id - 1 ; i < ( StaffManager.Company.employeeList . size () ) ; i ++ ) { StaffManager.Company.employeeList . get ( i ) . setId ( ( i + 1 ) ) ; } } 
public boolean isHovered ( int mouseX , int mouseY ) { return ( ( ( mouseX >= ( xPosition ) ) && ( mouseX <= ( ( xPosition ) + ( width ) ) ) ) && ( mouseY >= ( yPosition ) ) ) && ( mouseY <= ( ( yPosition ) + ( height ) ) ) ; } 
public void onClick ( com.gwtext.client.widgets.Button button , com.gwtext.client.core.EventObject e ) { com.gwtext.client.widgets.tree.DefaultSelectionModel dsm = ( ( com.gwtext.client.widgets.tree.DefaultSelectionModel ) ( entityTreePanel . getSelectionModel () ) ) ; com.gwtext.client.widgets.tree.TreeNode selectedNode = dsm . getSelectedNode () ; if ( ( selectedNode . getAttributeAsObject ( "frame" ) ) != null ) { edWindow . loadFrameAndShow ( selectedNode ) ; } } 
public void setValue ( fd2editor.BaseSeg.VALUE whichValue , int sValue ) { if ( sValue > ( max ) ) { sValue = max ; } if ( sValue < ( min ) ) { sValue = min ; } switch ( whichValue ) { case DEFAULT : this . defaultValue = sValue ; break; case RECOMMEND : this . recommendValue = sValue ; break; case CURRENT : this . value = sValue ; updateSegBytes () ; break; default: break; } } 
@ java.lang.Override public boolean removeUserFromResourcePermission ( java.lang.String policyId , java.lang.String groupName , java.lang.String accountName ) { java.lang.String [] policyIds = policyId . split ( ":" ) ; boolean userRemovedFromYarnPolicy = this . yarnCommonService . removeUserFromQueuePermission ( policyIds [ 0 ] , groupName , accountName ) ; boolean userRemovedFromHDFSPolicy = this . hdfsAdminService . removeUserFromResourcePermission ( policyIds [ 1 ] , groupName , accountName ) ; return userRemovedFromYarnPolicy && userRemovedFromHDFSPolicy ; } 
@ java.lang.Override public java.util.List < com.hearthsim.util.HearthActionBoardPair > playTurn ( int turn , com.hearthsim.model.BoardModel board , com.hearthsim.util.factory.BoardStateFactoryBase factory ) throws com.hearthsim.exception.HSException { if ( ( ( baseNode ) == null ) || ( ( ! ( baseNode.turn.data_ . equals ( board ) ) ) && ( ( baseNode.turnNum ) != turn ) ) ) { baseNode = new com.hearthsim.util.tree.MCTSTreeNode ( new com.hearthsim.util.tree.HearthTreeNode ( board ) , turn ) ; } com.hearthsim.util.tree.MCTSTreeNode retNode = baseNode . selectAction () ; return retNode . getTurnResults () ; } 
public synchronized int xToPixel ( double x , mesquite.lib.MesquiteChart chart ) { tempNum . setValue ( x ) ; int fieldWidth = chart . getFieldWidth () ; int margin = chart . getMargin () ; int value = ( margin + ( tempNum . setWithinBounds ( minX , maxX , ( ( fieldWidth - ( 2 * margin ) ) - ( markerWidth ) ) ) ) ) - ( chart . getXPixelBase () ) ; return value ; } 
public void cfgSlaves ( java.util.List < distrib.hadoop.host.Host > hosts ) { cmds . add ( cfgSlaves ( "cat /dev/null >" ) ) ; for ( distrib.hadoop.host.Host s : hosts ) { cmds . add ( cfgSlaves ( ( ( "echo " + ( s . getHostName () ) ) + " >>" ) ) ) ; } } 
private static java.lang.String prepareMessage ( java.lang.String messageCode ) { if ( ( messageCode == null ) || ( messageCode . isEmpty () ) ) { return "nowe orzeczenie" ; } java.lang.String message ; if ( ( java.lang.Integer . parseInt ( messageCode ) ) > 4 ) { message = "nowych orzeczeń" ; } else if ( ( java.lang.Integer . parseInt ( messageCode ) ) > 1 ) { message = "nowe orzeczenia" ; } else { message = "nowe orzeczenie" ; } return message ; } 
@ java.lang.Override public void onSuccess ( final java.lang.Float volume ) { if ( volume >= 1.0 ) { com.connectsdk.core.Util . postSuccess ( listener , null ) ; } else { float newVolume = ( ( float ) ( volume + 0.01 ) ) ; if ( newVolume > 1.0 ) newVolume = ( ( float ) ( 1.0 ) ) ; setVolume ( newVolume , listener ) ; com.connectsdk.core.Util . postSuccess ( listener , null ) ; } } 
public int [] getOutput ( short [] pcm , int sampleRate ) { if ( pcm == null ) return null ; double [] spectrum = getSpectrum ( pcm ) ; final int amount = 100 ; int [] s = spectrumStrategy . execute ( spectrum , sampleRate ) ; for ( int i = 0 ; i < ( s.length ) ; i ++ ) { s [ i ] = ( ( int ) ( ( spectrum [ i ] ) / 1000 ) ) ; } return s ; } 
public void addFile ( java.lang.String fileName , org.sem8.ds.rest.resource.NodeResource node ) { java.util.List < org.sem8.ds.rest.resource.NodeResource > temp ; temp = this . fileMap . get ( fileName ) ; if ( temp != null ) { temp . add ( node ) ; } else { temp = new java.util.ArrayList < org.sem8.ds.rest.resource.NodeResource > () ; temp . add ( node ) ; this . fileMap . put ( fileName , temp ) ; } } 
public boolean checkImpl ( wjtoth.cyclicstablematching.Matching matching , wjtoth.cyclicstablematching.PreferenceSystem preferenceSystem ) { wjtoth.cyclicstablematching.MatchingPS mathcingPS = new wjtoth.cyclicstablematching.MatchingPS ( matching , preferenceSystem ) ; if ( ( mathcingPS . size () ) == 0 ) { return false ; } boolean isInternallyBlocked = mathcingPS . isInternallyBlocked () ; if ( isInternallyBlocked ) { return false ; } java.util.List < java.util.List < java.lang.Integer > > potentialBlocks = mathcingPS . firstOrderDissatisfied () ; if ( checkImpl ( potentialBlocks , mathcingPS , preferenceSystem ) ) { return true ; } return false ; } 
private java.lang.String _revert ( java.lang.String str ) { java.lang.String s = "" ; int len = str . length () ; for ( int i = 0 ; i < len ; i ++ ) { s += str . charAt ( ( ( len - 1 ) - i ) ) ; } return s ; } 
@ java.lang.Override public void onCompletion ( org.apache.kafka.clients.producer.RecordMetadata metadata , java.lang.Exception exception ) { if ( exception == null ) { org.apache.kafka.common.TopicPartition tp = new org.apache.kafka.common.TopicPartition ( metadata . topic () , metadata . partition () ) ; offsets . put ( tp , metadata . offset () ) ; } else { org.apache.kafka.streams.processor.internals.RecordCollector.log . error ( ( "Error sending record: " + metadata ) , exception ) ; } } 
public void unaryOp ( int o ) { java.lang.String op ; switch ( o ) { default: case org.squiddev.cobalt.Lua.OP_UNM : op = "neg" ; break; case org.squiddev.cobalt.Lua.OP_LEN : op = "length" ; break; case org.squiddev.cobalt.Lua.OP_NOT : op = "not" ; break; } main . visitMethodInsn ( org.squiddev.cobalt.luajc.compilation.INVOKESTATIC , org.squiddev.cobalt.luajc.compilation.CLASS_OPERATION , op , ( ( ( ( "(" + ( TYPE_STATE ) ) + ( TYPE_LUAVALUE ) ) + ")" ) + ( TYPE_LUAVALUE ) ) , false ) ; } 
public java.util.Map < java.lang.Integer , int [] > getListOfCoordinates () { java.util.Map < java.lang.Integer , int [] > listOfCoordinates = new java.util.HashMap <> () ; int key = 0 ; for ( int x = 0 ; x < ( Game.Controllers.BoardController.BOARDSIZE ) ; x ++ ) { for ( int y = 0 ; y < ( Game.Controllers.BoardController.BOARDSIZE ) ; y ++ ) { listOfCoordinates . put ( key , new int [] { x , y } ) ; key ++ ; } } return listOfCoordinates ; } 
private void processPicture ( javax.servlet.http.Part picture , com.lavalloisir.beans.User user ) { java.lang.String pictureName = null ; try { pictureName = getFileName ( picture ) ; validPictureName ( pictureName ) ; writeFile ( picture , pictureName ) ; java.lang.String localPath = path . substring ( path . indexOf ( "/img" ) ) ; user . setPicture ( ( ( "/Lavalloisir" + localPath ) + pictureName ) ) ; } catch ( java.lang.Exception e ) { setError ( com.lavalloisir.forms.RegistrationForm.FIELD_PICTURE , e . getMessage () ) ; } } 
@ java.lang.Override public void replaceAllTextOnPage ( int pageNumber , java.lang.String textToAdd ) { if ( ( pageNumber <= 0 ) || ( pageNumber > ( this . pages . length ) ) ) { java.lang.System.out . println ( "Invalid page number." ) ; return; } if ( ( textToAdd == null ) || ( textToAdd . equals ( "" ) ) ) { java.lang.System.out . println ( "Invalid text for adding." ) ; return; } this . pages [ ( pageNumber - 1 ) ] . deleteText () ; this . pages [ ( pageNumber - 1 ) ] . addText ( textToAdd ) ; } 
public static org.openremote.model.syslog.SyslogLevel getLevel ( int level ) { if ( level == 1000 ) { return org.openremote.model.syslog.SyslogLevel.ERROR ; } else if ( level == 900 ) { return org.openremote.model.syslog.SyslogLevel.WARN ; } else if ( ( level == 800 ) || ( level == 700 ) ) { return org.openremote.model.syslog.SyslogLevel.INFO ; } return null ; } 
protected static org.matheclipse.core.interfaces.IAST sortResults ( org.matheclipse.core.interfaces.IAST resultList ) { for ( int i = 1 ; i < ( resultList . size () ) ; i ++ ) { if ( resultList . get ( i ) . isList () ) { org.matheclipse.core.eval.EvalAttributes . sort ( ( ( org.matheclipse.core.interfaces.IAST ) ( resultList . get ( i ) ) ) ) ; } } return resultList ; } 
@ java.lang.Override public T invertedCumulativeProbability ( double cumulativeProbability ) { com.google.common.base.Preconditions . checkArgument ( ( ( 0 < cumulativeProbability ) && ( cumulativeProbability <= 1.0 ) ) ) ; long card = domain . cardinality () ; long min = domain . ordinal ( domain . min () ) ; long ordinal = ( ( ( long ) ( java.lang.Math . ceil ( ( cumulativeProbability * card ) ) ) ) + min ) - 1 ; return domain . value ( ordinal ) ; } 
private void writeData () { try ( java.io.BufferedWriter writer = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( new java.io.FileOutputStream ( file , true ) , "UTF-8" ) ) ) { writer . write ( ( ( ( ( de.neffez.timetrack.util.DateUtil . getTodayFormatted ( TimeTrackConstants.DE_DATE ) ) + " " ) + ( timeSinceStartup . getText () ) ) + "\n" ) ) ; appendTextArea ( "Data written. You may exit now." ) ; } catch ( java.io.IOException e ) { appendTextArea ( ( "Error writing the data: " + ( e . getMessage () ) ) ) ; e . printStackTrace () ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ! ( o instanceof org.snt.inmemantlr.tree.AstNode ) ) return false ; org.snt.inmemantlr.tree.AstNode n = ( ( org.snt.inmemantlr.tree.AstNode ) ( o ) ) ; return ( ( ( ( n . getId () ) == ( this . getId () ) ) && ( n.ntype . equals ( this . ntype ) ) ) && ( n.label . equals ( this . label ) ) ) && ( this . children . equals ( n.children ) ) ; } 
private java.lang.String readDir ( org.jdom2.Document doc , java.lang.String [] files , java.lang.String dirName ) { if ( files != null ) { java.util.Arrays . sort ( files ) ; } org.jdom2.Element p = buildElement ( files , dirName ) ; doc . getRootElement () . addContent ( p ) ; return p . getName () ; } 
@ java.lang.Override public void onPageScrolled ( int position , float positionOffset , int positionOffsetPixels ) { int count = ( ( listener ) instanceof com.heinrichreimersoftware.materialintro.view.FadeableViewPager.OnOverscrollPageChangeListener ) ? com.heinrichreimersoftware.materialintro.view.FadeableViewPager . super . getAdapter () . getCount () : getAdapter () . getCount () ; listener . onPageScrolled ( java.lang.Math . min ( position , ( count - 1 ) ) , ( position < count ? positionOffset : 0 ) , ( position < count ? positionOffsetPixels : 0 ) ) ; } 
public void removeTask ( net.sf.memoranda.Task task ) { if ( task == null ) { return; } java.lang.String parentTaskId = task . getParentID () ; if ( parentTaskId != null ) { net.sf.memoranda.Task parentNode = getTaskElement ( parentTaskId ) ; if ( parentNode != null ) parentNode . removeSubTask ( task ) ; } taskList . remove ( task . getID () ) ; rootTaskList . remove ( task ) ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { int startOption = START_NOT_STICKY ; if ( intent == null ) { return startOption ; } int mapID = intent . getIntExtra ( appConstants.DOWNLOAD_INTENT_NAME , 0 ) ; if ( ( ( activeDownloadsList [ mapID ] ) != null ) && ( activeDownloadsList [ mapID ] ) ) { com.noveogroup.android.log.Log . d ( "Duplicate download request for the same map type" ) ; return startOption ; } activeDownloadsList [ mapID ] = true ; downloadMap ( mapID ) ; return startOption ; } 
public void verifyEndpointResponseNotEmpty () { try { java.lang.String string = new com.abhelly.builditbigger.EndpointsAsyncTask ( getContext () , null ) . execute () . get () ; assertNotNull ( string ) ; assertTrue ( ( ( string . length () ) > 0 ) ) ; } catch ( java.lang.InterruptedException | java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void display ( java.awt.Graphics g ) { if ( isHighlighted () ) { g . setColor ( java.awt.Color.green ) ; g . drawRect ( x , ( ( y ) + ( ( ( totalCards ) * ( Card.height ) ) / 2 ) ) , Card.width , Card.height ) ; setHighlight ( false ) ; } else { g . setColor ( java.awt.Color.black ) ; } totalCards = 0 ; stackDisplay ( g , top () ) ; } 
protected boolean isInBounds ( int x , int y ) { if ( ( ( ( x >= 0 ) && ( x < ( this . width ) ) ) && ( y >= 0 ) ) && ( y < ( this . height ) ) ) { return true ; } return false ; } 
@ java.lang.Override public boolean retryFurther ( java.lang.Long offset ) { org.apache.storm.kafka.ExponentialBackoffMsgRetryManager.MessageRetryRecord record = this . records . get ( offset ) ; return ! ( ( ( record != null ) && ( ( this . retryLimit ) > 0 ) ) && ( ( this . retryLimit ) <= ( record.retryNum ) ) ) ; } 
public void addTravel ( travelAgencyModel.Travel travel ) { if ( ( client ) != null ) { java.util.HashMap < java.lang.String , java.lang.Object > parameters = new java.util.HashMap <> () ; parameters . put ( CommandConstants.PARAM_TRAVEL , travel ) ; client . sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_TRAVEL , parameters ) ) ; } else { travelsList . addTravel ( travel ) ; } } 
protected org.eclipse.xtext.common.types.JvmType doFindTypeByName ( java.lang.String name , boolean traverseNestedTypes ) { java.lang.String signature = getSignature ( name ) ; if ( signature == null ) return null ; org.eclipse.emf.common.util.URI resourceURI = typeUriHelper . createResourceURI ( signature ) ; if ( ( resourceURI . segment ( 0 ) ) == ( org.eclipse.xtext.common.types.access.jdt.JdtTypeProvider.PRIMITIVES ) ) { return findPrimitiveType ( signature , resourceURI ) ; } else { return findObjectType ( signature , resourceURI , traverseNestedTypes ) ; } } 
public static boolean generate () { com.sheepit.client.hardware.gpu.GPU.devices = new java.util.LinkedList < com.sheepit.client.hardware.gpu.GPUDevice > () ; java.util.List < com.sheepit.client.hardware.gpu.GPUDevice > gpus = new com.sheepit.client.hardware.gpu.nvidia.Nvidia () . getGpus () ; if ( gpus != null ) { com.sheepit.client.hardware.gpu.GPU.devices . addAll ( gpus ) ; } gpus = new com.sheepit.client.hardware.gpu.opencl.OpenCL () . getGpus () ; if ( gpus != null ) { com.sheepit.client.hardware.gpu.GPU.devices . addAll ( gpus ) ; } return true ; } 
public boolean loadDBProperties () { java.lang.System.out . println ( ( ( "Load \"" + ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ) + "\"" ) ) ; dbProperties = new java.util.Properties () ; java.io.InputStream input = null ; input = getClass () . getClassLoader () . getResourceAsStream ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ; try { this . dbProperties . load ( input ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( ( ( "Failed to load \"" + ( com.hiltondublin.db.HiltonDublinDBConnection.DB_PROPERTIES_FILENAME ) ) + "\"" ) ) ; e . printStackTrace () ; return false ; } return true ; } 
@ java.lang.Override public void act () { if ( ( ( ( z ) <= 2 ) && ( ( steps ) < ( sideLength ) ) ) && ( canMove () ) ) { move () ; ( steps ) ++ ; } else { if ( ! ( canMove () ) ) return; steps = 0 ; ( z ) ++ ; if ( ( z ) == 1 ) { setDirection ( Location.SOUTHWEST ) ; } else if ( ( z ) == 2 ) { setDirection ( Location.EAST ) ; } } } 
@ java.lang.Override public void preUpdate () { super . preUpdate () ; if ( this . isMoving ) { java.util.ArrayList < android.graphics.Rect > spriteSequence = dirSpriteMap . get ( curDirection ) ; curSpriteIndex = ( ( curSpriteIndex ) + 1 ) % ( spriteSequence . size () ) ; com.example.vincentzhang.Sprite.Vector2D newPos = this . getSpritePos () . applyDir ( this . getCurDirection () , this . getMoveSpeed () ) ; this . setSpritePos ( newPos ) ; com.example.vincentzhang.Sprite.CollideDetector . setDirtyFlag ( true ) ; } } 
private boolean needsRun () { long maxAge = ( java.lang.System . currentTimeMillis () ) - ( ( simpleserver.thread.AutoRun.MILLISECONDS_PER_MINUTE ) * ( server.config.properties . getInt ( "c10tMins" ) ) ) ; return ( ( server.config.properties . get ( "c10tArgs" ) . length () ) > 0 ) && ( maxAge > ( lastRun ) ) ; } 
private java.lang.String extractTag ( java.lang.String noteContent ) { java.lang.String [] contentWords = noteContent . split ( " " ) ; java.lang.String label = null ; for ( java.lang.String word : contentWords ) { if ( ( word . startsWith ( "#" ) ) && ( ( word . length () ) > 1 ) ) { label = word . substring ( 1 ) ; break; } } return label ; } 
private void register ( java.nio.file.Path dir ) throws java.io.IOException { java.nio.file.WatchKey key = dir . register ( watcher , java.nio.file.StandardWatchEventKinds.ENTRY_CREATE , java.nio.file.StandardWatchEventKinds.ENTRY_DELETE , java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY ) ; if ( trace ) { java.nio.file.Path prev = keys . get ( key ) ; if ( prev == null ) {} else { if ( ! ( dir . equals ( prev ) ) ) {} } } keys . put ( key , dir ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; switch ( requestCode ) { case REQ_CODE_SPEECH_INPUT : { if ( ( resultCode == ( RESULT_OK ) ) && ( null != data ) ) { java.util.ArrayList < java.lang.String > result = data . getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; txtSpeechInput . setText ( result . get ( 0 ) ) ; callPuter ( result . get ( 0 ) . toLowerCase () ) ; } break; } } } 
public boolean isAllValid ( sss.domain.Product product ) { return ( isProductCodeValid ( product ) ) && ( ( ( ( isProductUnique ( product ) ) && ( isProductNameValid ( product ) ) ) && ( isCostPricePositive ( product ) ) ) && ( isPricePositive ( product ) ) ) ; } 
public boolean move ( int destX , int destY ) { if ( isFirst = true ) { if ( destX == ( ( this . y ) + 2 ) ) { isFirst = false ; return true ; } } if ( destX == ( ( this . y ) + 1 ) ) { isFirst = false ; return true ; } return false ; } 
public boolean isAddStepsValid ( java.lang.String value ) { if ( ( value . length () ) > 0 ) { java.lang.String regex = "-?[\\d]+" ; validate ( value , regex , addSteps ) ; if ( ! ( value . matches ( regex ) ) ) { errorAddSteps . setVisible ( true ) ; return false ; } if ( ( java.lang.Integer . valueOf ( value ) ) >= 0 ) { errorAddSteps . setVisible ( false ) ; return true ; } } return true ; } 
public java.lang.Object [] [] toMultiArrayNumber ( com.softserve.edu.atqc.data.apps.ApplicationSources applicationSources , java.util.List < ? > list ) { java.lang.Object [] [] array = toMultiArrayNumber ( 2 , list ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { array [ i ] [ 0 ] = applicationSources ; } return array ; } 
private void localServicePermissionHandler ( int [] grantResults ) { if ( ( grantResults.length ) == 0 ) { return; } for ( int i : grantResults ) { if ( i == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { return; } } checkPermissionToLocalService () ; } 
private void handlePaint () { if ( ! ( _updateThumb ) ) return; final org.eclipse.swt.graphics.Rectangle rect = _table . getVisibleScrollableCells () ; final int max = ( ( _scroll . getMaximum () ) - ( _scroll . getMinimum () ) ) + 1 ; final int tWidth = java.lang.Math . min ( java.lang.Math . max ( 1 , rect.width ) , max ) ; _scroll . setThumb ( tWidth ) ; _scroll . setEnabled ( ( tWidth != max ) ) ; } 
public static void toh ( int n , char src , char aux , char dest ) { if ( n > 0 ) { com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , src , dest , aux ) ; java.lang.System.out . println ( ( ( ( ( n + " " ) + src ) + "-" ) + dest ) ) ; com.datastructure.stack.problems.TowersOfHanoi . toh ( ( n - 1 ) , aux , src , dest ) ; } } 
public void undoAddedEvent ( carelender.model.EventList eventList ) { for ( int i = 0 ; i < ( events . size () ) ; i ++ ) { for ( carelender.model.Event eventObj : eventList ) { if ( ( events . get ( i ) . getUid () ) == ( eventObj . getUid () ) ) { events . remove ( i ) ; } } } saveToFile ( filename , events ) ; } 
@ java.lang.Override public void run () { if ( ( ( mDownloadProgressDialog ) != null ) && ( mDownloadProgressDialog . isShowing () ) ) { mDownloadProgressDialog . dismiss () ; } mDownloadProgressDialog = null ; if ( ! ( task . isCanceled () ) ) { new android.app.AlertDialog.Builder ( this ) . setTitle ( R.string.success ) . setIcon ( R.drawable.ic_done_black_24dp ) . setMessage ( R.string.download_complete ) . setCancelable ( false ) . setPositiveButton ( R.string.label_ok , null ) . show () ; } } 
public int getPartyIDFromSenderInvite ( int playerID ) { java.util.List < session.Invite > myInvites = player . getInvites () ; int partyID = 0 ; for ( int i = 0 ; i < ( myInvites . size () ) ; i ++ ) { if ( playerID == ( myInvites . get ( i ) . getSenderID () ) ) { partyID = myInvites . get ( i ) . getPartyID () ; break; } } java.lang.System.out . println ( partyID ) ; return partyID ; } 
private void evaluateNotification ( int idx , java.lang.String prayId , java.lang.String prayName , java.util.Date date ) { cancelNotification ( idx ) ; cancelNotification ( ( idx + 10 ) ) ; long delay = ( date . getTime () ) - ( new java.util.Date () . getTime () ) ; if ( delay > 0 ) { sendPrayAlarm ( idx , prayId , prayName , delay ) ; } } 
public void continuouslyDiscoverServices () { if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; addServiceDiscoveryRequest () ; serviceDiscoveryRegistered = true ; } android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( continueDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Calling discover and submitting first discover task" ) ; continueDiscovering = true ; discoverTasks = new java.util.ArrayList <> () ; discoverServices () ; submitDiscoverTask () ; } } 
public boolean isSparkStreamingJoblet () { boolean isSparkStreamingJoblet = false ; if ( org.talend.core.GlobalServiceRegister . getDefault () . isServiceRegistered ( org.talend.core.ui.ISparkStreamingJobletProviderService . class ) ) { org.talend.core.ui.ISparkStreamingJobletProviderService sparkJobletService = ( ( org.talend.core.ui.ISparkStreamingJobletProviderService ) ( org.talend.core.GlobalServiceRegister . getDefault () . getService ( org.talend.core.ui.ISparkStreamingJobletProviderService . class ) ) ) ; if ( sparkJobletService != null ) { isSparkStreamingJoblet = sparkJobletService . isSparkStreamingJobletComponent ( this ) ; } } return isSparkStreamingJoblet ; } 
@ java.lang.Override public void done ( com.parse.ParseUser parseUser , com.parse.ParseException e ) { if ( parseUser == null ) {} else if ( parseUser . isNew () ) { getFacebookInfo () ; } else { android.util.Log . d ( com.trytara.tara.LoginActivity.TAG , ( "CURRENT USER: " + ( parseUser . toString () ) ) ) ; } } 
private void stopBluetoothReader () { if ( ( mConnectedThread ) != null ) mConnectedThread . write ( "0" ) ; if ( ( ( btSocket ) != null ) && ( btSocket . isConnected () ) ) { try { btSocket . close () ; } catch ( java.io.IOException e ) {} } } 
public void changeDragonRight ( android.view.View view ) { if ( ( currDragon ) == ( ( dragons . size () ) - 1 ) ) { currDragon = 0 ; addAccessory ( dragons . get ( currDragon ) ) ; } else { currDragon += 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } } 
private void markPhaseTable2 () { java.lang.String command = forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Command Name" ) ; if ( command == null ) { return; } if ( command . equals ( "ADD PHASE" ) ) { int phase = ( ( int ) ( java.lang.Double . parseDouble ( forall.HelpA . getValueSelectedRow ( mCRecipe.jTableSequnece1 , "Cmd Parameter" ) ) ) ) ; java.util.LinkedList < java.lang.Integer > list = getRowsWithGivenPhase ( phase , mCRecipe.jTableSequnce2 ) ; paint_selected_rows_a ( list , mCRecipe.jTableSequnce2 , java.awt.Color.LIGHT_GRAY ) ; } else { unpaintAllRows_a ( mCRecipe.jTableSequnce2 ) ; } } 
public void addCampaign ( java.lang.String name , java.lang.String campId ) throws java.lang.Exception { deleteCampaign ( campId ) ; com.xrtb.common.Campaign camp = com.xrtb.bidder.WebCampaign . getInstance () . db . getCampaign ( name , campId ) ; if ( camp == null ) { throw new java.lang.Exception ( ( ( "Campaign " + campId ) + " does not exist in database" ) ) ; } addCampaign ( camp ) ; } 
public void getMiddle () { int middle = ( size ) / 2 ; if ( ( ( size ) % 2 ) != 0 ) middle = middle + 1 ; if ( ( isEmpty () ) == false ) { Node temp = head ; int i = 1 ; while ( i != middle ) { temp = temp . getNext () ; i = i + 1 ; } java.lang.System.out . println ( temp . getNext () . getData () ) ; } else { java.lang.System.out . println ( "No data exist" ) ; } } 
private static java.lang.String getKindForAliasClass ( java.lang.String simpleName ) { for ( java.util.Map.Entry < java.lang.String , java.lang.String > entry : org.ballerinalang.composer.service.workspace.tools.ModelGenerator.alias . entrySet () ) { if ( simpleName . equals ( entry . getValue () ) ) { return entry . getKey () ; } } throw new java.lang.AssertionError ( ( "Undefined entry :" + simpleName ) ) ; } 
public void addBus ( travelAgencyModel.Bus bus ) { if ( ( client ) != null ) { java.util.HashMap < java.lang.String , java.lang.Object > parameters = new java.util.HashMap <> () ; parameters . put ( CommandConstants.PARAM_BUS , bus ) ; client . sendMessage ( new travelAgencyNetwork.MessageCommands ( travelAgencyNetwork.CommandConstants.ADD_BUS , parameters ) ) ; busList . addBus ( bus ) ; } else { busList . addBus ( bus ) ; } } 
public boolean checkWin ( boolean xTurn , int column ) { boolean horizontal = ( checkWinHorizontal ( xTurn , column ) ) > 4 ; boolean vertical = ( checkWinVertical ( xTurn , column ) ) > 4 ; boolean diagonal = ( checkWinDiagonal ( xTurn , column ) ) > 4 ; return ( horizontal || vertical ) || diagonal ; } 
@ com.dataloom.datastore.data.controllers.RequestMapping ( path = { ( ( "/" + ( ENTITY_DATA ) ) + "/" ) + ( SET_ID_PATH ) } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE , com.dataloom.datastore.constants.CustomMediaType.TEXT_CSV_VALUE } ) public java.lang.Iterable < com.google.common.collect.SetMultimap < org.apache.olingo.commons.api.edm.FullQualifiedName , java.lang.Object > > loadEntitySetData ( @ com.dataloom.datastore.data.controllers.PathVariable ( value = SET_ID ) java.util.UUID entitySetId , @ com.dataloom.datastore.data.controllers.RequestParam ( value = FILE_TYPE , required = false ) com.dataloom.datastore.data.controllers.FileType fileType , @ com.dataloom.datastore.data.controllers.RequestParam ( value = TOKEN , required = false ) java.lang.String token , javax.servlet.http.HttpServletResponse response ) { com.dataloom.datastore.data.controllers.DataController . setContentDisposition ( response , entitySetId . toString () , fileType ) ; com.dataloom.datastore.data.controllers.DataController . setDownloadContentType ( response , fileType ) ; return loadEntitySetData ( entitySetId , fileType , token ) ; } 
@ java.lang.Override public void onAdFailedToLoad ( int error ) { android.util.Log . d ( com.samcodes.admob.BannerListener.TAG , "onBannerFailedToLoad" ) ; android.util.Log . d ( com.samcodes.admob.BannerListener.TAG , ( "Hiding banner with id " + ( id ) ) ) ; com.samcodes.admob.AdView view = com.samcodes.admob.AdMobExtension . getBannerViewForUnitId ( id ) ; view . setVisibility ( View.INVISIBLE ) ; com.samcodes.admob.AdMobExtension . getLayout () . removeView ( view ) ; com.samcodes.admob.AdMobExtension . getLayout () . bringToFront () ; com.samcodes.admob.AdMobExtension . callHaxe ( "onBannerFailedToLoad" , new java.lang.Object [] { id } ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/addCommodity" , method = org.springframework.web.bind.annotation.RequestMethod.PUT ) public java.lang.String addCommodity ( @ org.springframework.web.bind.annotation.RequestParam ( value = "purchaseCaseId" , required = true ) java.lang.String purchaseCaseId , @ org.springframework.web.bind.annotation.RequestParam ( value = "commodityIds" , required = true ) java.lang.String [] commodityIds ) { java.lang.Integer [] ids = new java.lang.Integer [ commodityIds.length ] ; for ( int i = 0 ; i < ( commodityIds.length ) ; i ++ ) { ids [ i ] = java.lang.Integer . valueOf ( commodityIds [ i ] ) ; } purchaseCaseService . addPurchaseCaseIdToCommoditys ( purchaseCaseId , ids ) ; return com.jersey.purchaseCase.controller.PurchaseCaseController.REDIRECT_ADD_COMMODITY . replace ( "{id}" , purchaseCaseId ) ; } 
private boolean checkIfAllTilesAreInPlace () { for ( int i = 0 ; i < ( currentField.length ) ; i ++ ) { for ( int j = 0 ; j < ( currentField [ i ] . length ) ; j ++ ) { if ( ! ( currentField [ i ] [ j ] [ 0 ] . equals ( solutionField [ i ] [ j ] [ 0 ] ) ) ) return false ; } } return true ; } 
private boolean isContains ( java.lang.String address , java.lang.String fromRule ) { java.lang.String [] fromRules = fromRule . split ( ";" ) ; for ( int i = 0 ; i < ( fromRules.length ) ; i ++ ) { if ( ( address != null ) && ( address . contains ( fromRules [ i ] ) ) ) { return true ; } } return false ; } 
public java.math.BigDecimal getMainContractPrice ( com.ersoft.web.domain.business.contract.MainContract mainContract ) { java.math.BigDecimal price = java.math.BigDecimal.ZERO ; if ( mainContract != null ) { java.util.List < com.ersoft.web.domain.business.contract.SubContract > subs = subContractService . findActiveAll ( com.ersoft.web.service.business.SubContractPredicates . mainContractPredicate ( mainContract ) , new org.springframework.data.domain.Sort ( org.springframework.data.domain.Sort.Direction.DESC , "createdDate" ) ) ; for ( com.ersoft.web.domain.business.contract.SubContract sub : subs ) { price = price . add ( getSubContractPrice ( sub ) ) ; } } return price ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == null ) return false ; if ( ! ( obj instanceof cz.dd4j.simulation.data.dungeon.elements.places.Corridor ) ) return false ; cz.dd4j.simulation.data.dungeon.elements.places.Corridor other = ( ( cz.dd4j.simulation.data.dungeon.elements.places.Corridor ) ( obj ) ) ; return ( ( cz.dd4j.utils.Safe . equals ( room1 , other.room1 ) ) && ( cz.dd4j.utils.Safe . equals ( room2 , other.room2 ) ) ) || ( ( cz.dd4j.utils.Safe . equals ( room1 , other.room2 ) ) && ( cz.dd4j.utils.Safe . equals ( room2 , other.room1 ) ) ) ; } 
public static com.sb.elsinore.Temp findTemp ( final java.lang.String name ) { java.util.Iterator < com.sb.elsinore.Temp > iterator = com.sb.elsinore.LaunchControl.tempList . iterator () ; com.sb.elsinore.Temp tTemp ; while ( iterator . hasNext () ) { tTemp = iterator . next () ; if ( ( tTemp . getName () . equalsIgnoreCase ( name ) ) || ( tTemp . getProbe () . equalsIgnoreCase ( name ) ) ) { return tTemp ; } } return null ; } 
public void berekening () { invoer = java.lang.Integer . parseInt ( tekstvak . getText () ) ; if ( ( ( invoer ) >= 1 ) && ( ( invoer ) <= 3 ) ) { beurten = true ; stenen -= invoer ; } else if ( ( ( 3 < ( invoer ) ) || ( ( invoer ) > 5 ) ) || ( ( invoer ) < 0 ) ) { error () ; } } 
@ java.lang.Override public void run () { fractureanalysis.table.TableUtils tu = new fractureanalysis.table.TableUtils () ; for ( int i = 0 ; i < ( headerValues.length ) ; i ++ ) { tvDataset . getColumns () . add ( tu . createColumn ( i , headerValues [ i ] ) ) ; } } 
private void clearInMemoryJobInfos ( int jobId ) { java.util.List < cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID > clearedTasks = com.google.common.collect.Lists . newArrayList () ; java.util.LinkedList < cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID > tasks = managedJobToTaskList . remove ( jobId ) ; if ( tasks != null ) { for ( cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.TaskID id : tasks ) { managedTaskIdToInfos . remove ( id ) ; clearedTasks . add ( id ) ; } } managedJobIdToInfos . remove ( jobId ) ; cn.shiyanjun.ddc.scheduling.platform.component.DefaultSchedulingManager.LOG . info ( ( ( ( "In-memory state purged: jobId=" + jobId ) + ", tasks=" ) + clearedTasks ) ) ; } 
protected java.util.ArrayList < pbs.parser.Statement > stmtList () { java.util.ArrayList < pbs.parser.Statement > stmtlist = new java.util.ArrayList < pbs.parser.Statement > () ; pbs.parser.Statement s = nextStatement () ; while ( s != null ) { stmtlist . add ( s ) ; s = nextStatement () ; } return stmtlist ; } 
public dna.FastqRecord readRecord ( ) throws dna.RecordFormatException , java.io.IOException { java.lang.String line = theBufferedReader . readLine () ; if ( line == null ) { return null ; } java.lang.String line1 = theBufferedReader . readLine () ; java.lang.String line2 = theBufferedReader . readLine () ; java.lang.String line3 = theBufferedReader . readLine () ; dna.FastqRecord output = new dna.FastqRecord ( line , line1 , line3 ) ; return output ; } 
public java.util.ArrayList < graph.Vector > getVectorsPointingAway ( graph.Point p ) { java.util.ArrayList < graph.Vector > vs = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( getEdges () . size () ) ; i ++ ) { if ( getEdges () . get ( i ) . getP1 () . equals ( p ) ) { vs . add ( getEdges () . get ( i ) ) ; } } return vs ; } 
public void initializeComponents () { componentSelectionPanel . clear () ; for ( int i = 0 ; i < ( data.componentIdList . size () ) ; i ++ ) { com.google.gwt.user.client.ui.HTML item = new com.google.gwt.user.client.ui.HTML ( data.componentIdList . get ( i ) ) ; item . setStyleName ( "wmt-ComponentSelectionMenuItem" ) ; item . addStyleDependentName ( "missing" ) ; componentSelectionPanel . add ( item ) ; } } 
public void iffaux ( java.lang.String etiquette ) { compiler.Ecriture . ecrireStringln ( flux , ( ";iffaux " + etiquette ) ) ; compiler.Ecriture . ecrireStringln ( flux , "pop ax" ) ; compiler.Ecriture . ecrireStringln ( flux , "cmp ax,FALSE" ) ; compiler.Ecriture . ecrireStringln ( flux , ( "je " + etiquette ) ) ; } 
public void check () { if ( ( name . equals ( names [ 0 ] ) ) && ( password . equals ( "password" ) ) ) { launchActivity () ; return; } if ( ! ( name . equals ( names [ 0 ] ) ) ) { Notification . setText ( "Invalid User" ) ; } else { Notification . setText ( "Wrong Pass" ) ; pass . setText ( "" ) ; } return; } 
@ java.lang.Override public void doIt ( com.github.oxo42.stateless4j.transitions.Transition < com.couchbase.lite.replicator.ReplicationState , com.couchbase.lite.replicator.ReplicationTrigger > transition ) { com.couchbase.lite.util.Log . v ( Log.TAG_SYNC , ( ( ( "[onExit()] " + ( transition . getSource () ) ) + " => " ) + ( transition . getDestination () ) ) ) ; if ( ( transition . getSource () ) == ( transition . getDestination () ) ) { return; } notifyChangeListenersStateTransition ( transition ) ; } 
public void crossover ( ga.Genes genes ) { java.util.Random rand = new java.util.Random () ; for ( int i = 2 ; i < ( genes . getNum () ) ; i += 2 ) { int cuttingPoint = ( rand . nextInt ( ( ( genes . getDim () ) - 1 ) ) ) + 1 ; ga.Gene . shiftDNASection ( genes . getAt ( i ) , genes . getAt ( ( i + 1 ) ) , cuttingPoint , genes . getDim () ) ; } } 
public void targetSizeCheck ( shared.logic.support.action.Action a ) { if ( ( a.ability ) == ( shared.roles.Jailor.EXECUTE_ ) ) { if ( ( a . getTargets () . size () ) > ( jailedTargets . size () ) ) Exception ( "Cannot execute someone that isn't jailed" ) ; if ( ( getPerceivedCharges () ) != ( shared.logic.support.rules.Rules.UNLIMITED ) ) if ( ( a . getTargets () . size () ) > ( getPerceivedCharges () ) ) Exception ( "Not enough executions for that many targets" ) ; } } 
public java.lang.String resolveIssue () { Ticket current = ( ( Ticket ) ( queue . removeMin () ) ) ; current . setSolution ( solutions [ current . getPriority () ] ) ; java.lang.String q = ( ( "Issue: " + current ) + "\nSolution: " ) + ( current . getSolution () ) ; return q ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( ! ( obj instanceof iguana.utils.input.Input ) ) return false ; iguana.utils.input.Input other = ( ( iguana.utils.input.Input ) ( obj ) ) ; return ( ( this . length () ) == ( other . length () ) ) && ( java.util.Arrays . equals ( characters , other.characters ) ) ; } 
private void DecideWhereToGoBackTo () { if ( ( motive ) != null ) { if ( ( motive . equals ( "pre-trip" ) ) || ( motive . equals ( "log-in" ) ) ) { startLogOutService () ; navigateToLogin () ; } else { java.lang.String newStatus = _statusToDisplay ; storeStatusInMemory ( newStatus ) ; navigateToMainMenu ( newStatus ) ; } } else { java.lang.String newStatus = _statusToDisplay ; storeStatusInMemory ( newStatus ) ; navigateToMainMenu ( newStatus ) ; } } 
public static void addYearCredits ( final java.util.Map < org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod , java.math.BigDecimal > result , final org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod curricularPeriod , final java.math.BigDecimal credits ) { final java.math.BigDecimal creditsYear = result . get ( curricularPeriod ) ; result . put ( curricularPeriod , ( creditsYear != null ? creditsYear . add ( credits ) : credits ) ) ; } 
@ java.lang.SuppressWarnings ( value = "DefaultLocale" ) private static boolean checkExtension ( java.lang.String path , java.lang.String [] extensions ) { if ( path == null ) { return false ; } for ( int i = 0 ; i < ( extensions.length ) ; i ++ ) { if ( path . toLowerCase () . endsWith ( extensions [ i ] ) ) { return true ; } } return false ; } 
private boolean isPrime ( int number ) { if ( number == 2 ) { return true ; } if ( ( number < 2 ) || ( ( number % 2 ) == 0 ) ) { return false ; } for ( int oddNumber = 3 ; oddNumber <= ( java.lang.Math . sqrt ( number ) ) ; oddNumber += 2 ) { if ( ( number % oddNumber ) == 0 ) { return false ; } } return true ; } 
@ java.lang.Override public void onScrollStateChanged ( android.widget.AbsListView view , int scrollState ) { switch ( scrollState ) { case AbsListView.OnScrollListener.SCROLL_STATE_IDLE : if ( ( view . getLastVisiblePosition () ) == ( ( view . getCount () ) - 1 ) ) { ( page ) ++ ; totalUrl = ( baseUrl ) + ( getPageValue ( page ) ) ; getData () ; } break; } } 
public void setOptions ( java.util.ArrayList < gui.Button > options , entity.AbstractEntity entity ) { if ( options != null ) { for ( int i = 0 ; i < ( options . size () ) ; i ++ ) { options . get ( i ) . setSize ( 30 , 30 ) ; } } else if ( entity != ( calledby ) ) { return; } calledby = entity ; this . options = options ; } 
public Item removeFirst () { if ( ( first ) == null ) { throw new java.util.NoSuchElementException () ; } else if ( ( first.next ) != null ) { Deque < Item > . Node node = first ; first = first.next ; first.previous = null ; ( size ) -- ; return node.item ; } else { Deque < Item > . Node node = first ; first = null ; last = null ; ( size ) -- ; return node.item ; } } 
private void animateIn () { android.support.v7.widget.ActionMenuView menuView = getMenuView () ; for ( int i = 0 , count = ( menuView == null ) ? 0 : menuView . getChildCount () ; i < count ; i ++ ) { android.view.View child = menuView . getChildAt ( i ) ; android.view.animation.Animation anim = mAnimator . getInAnimation ( child , i ) ; if ( anim != null ) child . startAnimation ( anim ) ; } } 
@ java.lang.Override public boolean isDirty ( com.playposse.peertopeeroxygen.backend.peerToPeerOxygenApi.model.MissionBean missionBean ) { if ( ( buddyInstructionEditText ) == null ) { return false ; } else if ( missionBean == null ) { return false ; } else { return ! ( buddyInstructionEditText . toString () . equals ( missionBean . getBuddyInstruction () ) ) ; } } 
public void applyStrength ( int strength ) { this . strength = strength ; if ( strength == 0 ) strengthButton0 . setSelected ( true ) ; else if ( strength == 1 ) strengthButton1 . setSelected ( true ) ; else if ( strength == 2 ) strengthButton2 . setSelected ( true ) ; else if ( strength == 3 ) strengthButton3 . setSelected ( true ) ; else if ( strength == 4 ) strengthButton4 . setSelected ( true ) ; else strengthRadioGroup . clearSelection () ; } 
@ java.lang.Override public void done ( java.util.List < com.example.user.simpleui.Order > objects , com.parse.ParseException e ) { if ( e == null ) { com.example.user.simpleui.Order . pinAllInBackground ( "Order" , objects ) ; callback . done ( objects , e ) ; } else { com.example.user.simpleui.Order . getQuery () . fromLocalDatastore () . findInBackground ( callback ) ; } } 
private void validateHeader ( final java.lang.String [] headers ) throws java.io.IOException { if ( headers == null ) { throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) ) ; } if ( validateHeader ( fields , headers ) ) { return; } throw new org.milyn.csv.CSVHeaderValidationException ( getFieldNames ( fields ) , headers ) ; } 
@ java.lang.Override public void angreifen ( pkg.Charakter gegner ) { int schaden = random . getRandom ( 15 , 25 ) ; if ( ( this . getSpezialfaehigkeit () ) == true ) { if ( this . wahrscheinlichkeit () ) { java.lang.System.out . println ( "Erfolgreich!" ) ; this . schadenNehmen ( ( schaden * 2 ) ) ; } else schaden = schaden / 2 ; } super . angreifen ( gegner ) ; gegner . schadenNehmen ( schaden ) ; } 
private void showBoardLine ( final int row ) { for ( int i = 0 ; i < ( game . getBoard () . getRowLength ( row ) ) ; i ++ ) { if ( ( game . getBoard () . getFigure ( row , i ) ) == null ) { java.lang.System.out . print ( com.java.laiy.view.ConsoleView.EMPTY_FIGURE ) ; } else { java.lang.System.out . print ( game . getBoard () . getFigure ( row , i ) . toString () ) ; } } java.lang.System.out . println () ; } 
protected java.util.List < java.lang.String > toSynopsisUsage ( java.util.List < com.github.rvesse.airline.model.OptionMetadata > options ) { return com.google.common.collect.ImmutableList . copyOf ( com.google.common.collect.Iterables . transform ( options , new com.google.common.base.Function < com.github.rvesse.airline.model.OptionMetadata , java.lang.String > () { public java.lang.String apply ( com.github.rvesse.airline.model.OptionMetadata option ) { if ( ( option . isHidden () ) && ( ! ( includeHidden () ) ) ) { return "" ; } return toUsage ( option ) ; } } ) ) ; } 
@ java.lang.Override public int hashCode () { int result = ( ( color ) != null ) ? color . hashCode () : 0 ; result = ( 31 * result ) + ( type . hashCode () ) ; result = ( 31 * result ) + ( ( image ) != null ? image . hashCode () : 0 ) ; return result ; } 
public void sendData ( java.util.ArrayList < com.monolc.felljs.Client > clients ) { if ( ! ( validated ) ) { return; } java.lang.String entityData = server.world . toString () ; connection . send ( ( "pos:" + ( e ) ) ) ; if ( ( entityData . length () ) > 0 ) { connection . send ( ( ( ( "dat" + ( getDataStride () ) ) + ":" ) + entityData ) ) ; } } 
private void scaleWallsY ( float multiplier ) { com.badlogic.gdx.math.collision.BoundingBox bounds = new com.badlogic.gdx.math.collision.BoundingBox () ; backWall . calculateBoundingBox ( bounds ) . mul ( backWall.transform ) ; if ( ( multiplier > 0 ) || ( ( bounds . getHeight () ) > ( com.ggwp.interiordesigner.object.Room.MINIMUM_DIMENSION ) ) ) { float scalePercentage = 1.0F + ( ( ( com.ggwp.interiordesigner.object.Room.SCALE_AMOUNT ) / ( bounds . getHeight () ) ) * multiplier ) ; for ( com.ggwp.interiordesigner.object.Wall wall : getWalls () ) { wall.transform . scale ( 1.0F , scalePercentage , 1.0F ) ; } } } 
@ java.lang.Override public void map ( water.util.Chunk c ) { for ( int i = 0 ; i < ( c._len ) ; ++ i ) { if ( ! ( c . isNA ( i ) ) ) c . set ( i , fromTo [ ( ( int ) ( c . at8 ( i ) ) ) ] ) ; } } 
@ org.apache.struts2.interceptor.validation.SkipValidation public java.lang.String loadData ( ) throws java.lang.Exception { try { lists = getList () ; dbTransaction . commit () ; } catch ( org.hibernate.HibernateException e ) { if ( ( dbTransaction ) != null ) { dbTransaction . rollback () ; } e . printStackTrace () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { session . close () ; } return SUCCESS ; } 
public void checkRightPowerup () { switch ( rightPowerup ) { case 1 : if ( ( counter ) == ( rightEnd ) ) { leftMallet.stop = false ; rightPowerup = - 1 ; } break; case 2 : if ( ( counter ) == ( rightEnd ) ) { leftMallet.radius = leftMallet.defaultRadius ; rightPowerup = - 1 ; } break; } } 
public void gameOver () { m_game . reset () ; for ( int r = 0 ; r < ( Game.NUM_ROWS ) ; r ++ ) { for ( int c = 0 ; c < ( m_numCols ) ; c ++ ) m_map [ r ] [ c ] = null ; } parseMapFile () ; } 
public void reset ( com.studiau.amazinggravity.Ship ship ) { float randomFloat = random . nextFloat () ; radius = ( com.studiau.amazinggravity.ExhaustParticle.BASE_RADIUS ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_RADIUS ) ) ; locationX = ship . getExhaustLocationX () ; locationY = ship . getExhaustLocationY () ; speedX = ( ( ( random . nextFloat () ) - 0.5F ) * 2 ) * ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDX ) ; speedY = ( com.studiau.amazinggravity.ExhaustParticle.BASE_SPEEDY ) + ( randomFloat * ( com.studiau.amazinggravity.ExhaustParticle.MAX_ADDITIONAL_SPEEDY ) ) ; } 
public java.lang.String mark ( int pos ) { if ( ( yourField . at ( pos ) ) == '~' ) { return "missed!\n" ; } java.lang.String hitstr = "" ; hitstr = yourField . addHit ( pos ) ; if ( hitstr . contains ( "sunk" ) ) ( this . shipsDestroyed ) ++ ; return hitstr ; } 
private int addNumber () { java.lang.System.out . print ( "Enter contact phone number: " ) ; int tel ; while ( true ) { tel = validateNumber () ; Contact contact = getbyNumber ( tel ) ; if ( contact == null ) { java.lang.System.out . println ( "Adding new number..." ) ; } else if ( ( contact . getNumber () ) == tel ) { java.lang.System.out . println ( ( ( "That number already exists for contact " + ( contact . getName () ) ) + ". Try a different one" ) ) ; continue; } break; } return tel ; } 
public java.lang.String getMimeType ( int pos ) { if ( ( ( com.fwgg8547.mycast.CardModel.mCursor ) == null ) || ( ! ( com.fwgg8547.mycast.CardModel.mCursor . moveToPosition ( pos ) ) ) ) { android.util.Log . w ( com.fwgg8547.mycast.CardModel.TAG , "fail movetopos" ) ; return null ; } int indx = com.fwgg8547.mycast.CardModel.mCursor . getColumnIndex ( MediaStore.Images.Media.MIME_TYPE ) ; java.lang.String mime = com.fwgg8547.mycast.CardModel.mCursor . getString ( indx ) ; return mime ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( ( ( dataSnapshot . getValue () ) != null ) && ( dataSnapshot . getValue () . equals ( emailHash ) ) ) { android.util.Log . d ( "" , java.lang.String . format ( "FirebaseBackend:connectBudgetAndUserByEmail: value: %s, address: %s" , dataSnapshot . getValue () , emailHash ) ) ; connectBudgetAndUser ( bid , uidAsString ) ; } else { android.util.Log . d ( "" , java.lang.String . format ( "FirebaseBackend:connectBudgetAndUserByEmail: uid is: %s, value: is null, address: %s" , uidAsString , emailHash ) ) ; } } 
public void updateStudentGroup ( java.lang.Long pyramusId ) { fi.pyramus.rest.model.StudentGroup studentGroup = pyramusClient . get () . get ( java.lang.String . format ( "/students/studentGroups/%d" , pyramusId ) , fi.pyramus.rest.model.StudentGroup . class ) ; java.lang.String identifier = identifierMapper . getStudentGroupIdentifier ( pyramusId ) ; fi.muikku.model.users.UserGroupEntity userGroupEntity = userGroupEntityController . findUserGroupEntityByDataSourceAndIdentifier ( SchoolDataPyramusPluginDescriptor.SCHOOL_DATA_SOURCE , identifier , true ) ; if ( studentGroup == null ) { if ( userGroupEntity != null ) fireUserGroupRemoved ( identifier ) ; } else { if ( userGroupEntity == null ) { fireUserGroupDiscovered ( identifier ) ; } else { fireUserGroupUpdated ( identifier ) ; } } } 
private void setModelForAcceptors ( challenge.dbside.models.ChallengeDefinition challenge , org.springframework.ui.Model model ) { java.util.List acceptors = new java.util.ArrayList ( new java.util.HashSet ( challenge . getAllAcceptors () ) ) ; int acceptorsOnPage = 6 ; model . addAttribute ( "listOfAcceptors" , ( ( acceptors . size () ) > acceptorsOnPage ? acceptors . subList ( 0 , acceptorsOnPage ) : acceptors . subList ( 0 , acceptors . size () ) ) ) ; model . addAttribute ( "showAcceptorsExtendenceButton" , ( ( acceptors . size () ) > acceptorsOnPage ) ) ; } 
protected void readGraphicsFromLibrary ( int templateID , double xCoor , double yCoor ) { if ( ( ( this ) instanceof com.nkoiv.mists.game.gameobject.Structure ) && ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary . create ( templateID ) ; if ( dummy != null ) this . graphics = dummy.graphics ; } if ( ( this . graphics ) == null ) this . graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this . graphics . setPosition ( xCoor , yCoor ) ; } 
public void delete ( int key ) { java.util.Iterator < QueueEntity > iter = info . iterator () ; while ( iter . hasNext () ) { QueueEntity it = iter . next () ; if ( ( it.ID ) == key ) { info . remove ( it ) ; break; } } } 
private eu.interedition.collatex.dekker.LCP_Interval [] construct_LCP_interval_array () { eu.interedition.collatex.dekker.LCP_Interval [] lcp_interval_array = new eu.interedition.collatex.dekker.LCP_Interval [ token_array . size () ] ; for ( eu.interedition.collatex.dekker.LCP_Interval interval : lcp_intervals ) { if ( ( interval.length ) == 0 ) { continue; } for ( int i = interval.start ; i <= ( interval.end ) ; i ++ ) { int tokenIndex = suffix_array [ i ] ; lcp_interval_array [ tokenIndex ] = interval ; } } return lcp_interval_array ; } 
@ java.lang.Override protected void done () { super . done () ; try { iconCache = new java.lang.ref.SoftReference <> ( super . get () ) ; fireIconChange () ; } catch ( java.lang.InterruptedException | java.util.concurrent.ExecutionException ex ) { org.sleuthkit.autopsy.coreutils.Logger . getLogger ( org.sleuthkit.autopsy.corecomponents.ThumbnailViewNode . class . getName () ) . log ( java.util.logging.Level.SEVERE , "Error getting thumbnail icon" , ex ) ; } finally { progressHandle . finish () ; if ( ( timer ) != null ) { timer . stop () ; timer = null ; } swingWorker = null ; } } 
private void setSecondDate () { secondDate = dateSecondDate . getValue () ; if ( ( ( dateFirstDate . getValue () ) != null ) && ( ( secondDate ) != null ) ) { try { getAllAbsence ( firstDate , secondDate ) ; } catch ( java.sql.SQLException ex ) { java.util.logging.Logger . getLogger ( attendance.gui.controller.TeacherViewController . class . getName () ) . log ( java.util.logging.Level.SEVERE , null , ex ) ; } } } 
private static javafx.animation.ParallelTransition createDynamicAtTimeStep ( java.lang.Double timeStep , tum.cms.sim.momentum.visualization.controller.CoreController coreController , tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputReader simulationOutputReader ) throws java.lang.Exception { tum.cms.sim.momentum.utility.csvData.reader.SimulationOutputCluster dataStepCurrent = null ; while ( dataStepCurrent == null ) { dataStepCurrent = simulationOutputReader . asyncReadDataSet ( timeStep ) ; if ( dataStepCurrent == null ) { java.lang.Thread . sleep ( 200 ) ; } } return tum.cms.sim.momentum.visualization.utility.AnimationCalculations . updateCustomData ( simulationOutputReader . getCsvType () , dataStepCurrent , coreController ) ; } 
void printArray ( int [] array ) { for ( int i = 0 ; i < ( array.length ) ; i ++ ) { java.lang.System.out . print ( array [ i ] ) ; if ( i != ( ( array.length ) - 1 ) ) { java.lang.System.out . print ( " " ) ; } } } 
@ java.lang.Override public void onConnected ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { android.Manifest.permission.ACCESS_FINE_LOCATION } , LOCATION_PERMISSION_REQUEST_CODE ) ; } else { getNewLocation () ; } } 
public http.Header getHeader ( java.lang.String header ) throws http.exceptions.BadRequestException { if ( ( header . split ( ": " ) . length ) != 2 ) { throw new http.exceptions.BadRequestException () ; } for ( http.Header.Type type : http.Header.Type . values () ) { if ( header . toUpperCase () . startsWith ( type.type ) ) { return new http.Header ( header . split ( ":" ) [ 1 ] , type ) ; } } return new http.Header ( header . split ( ":" ) [ 1 ] , http.Header.Type.UnknownHeader ) ; } 
public void refresh ( java.lang.String rateLimiterYaml ) { org.springframework.beans.factory.config.YamlPropertiesFactoryBean yaml = new org.springframework.beans.factory.config.YamlPropertiesFactoryBean () ; yaml . setResources ( new org.springframework.core.io.FileSystemResource ( rateLimiterYaml ) ) ; rateLimiterProperties = yaml . getObject () ; this . time_frame = ( ( int ) ( rateLimiterProperties . get ( "time-frame" ) ) ) * 1000 ; clear () ; } 
public void update () { progress1 . setTextProgress ( b . getPayout () . toString () ) ; buyButton . setText ( ( ( ( ( ( b . getName () ) + ":" ) + ( b . getNumOfBuildings () . toString () ) ) + "\nBuy:" ) + ( b . getPrice () . toString () ) ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_register ) ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.objectsanddesign.shoppingwithfriends.RegisterActivity.PlaceholderFragment () ) . commit () ; } } 
public java.lang.Boolean autorAussendienst () { if ( ( ( securityService ) == null ) || ( ! ( autorIntern () ) ) ) { return false ; } de.fraunhofer.igd.klarschiff.service.security.User user = securityService . getUserByEmail ( this . autorEmail ) ; if ( user == null ) { return false ; } return ! ( user . getAussendienstTeams () . isEmpty () ) ; } 
private java.lang.String getText ( final org.objectweb.asm.tree.MethodNode mn ) { org.objectweb.asm.util.Textifier tv = new org.objectweb.asm.util.Textifier () ; org.objectweb.asm.util.TraceMethodVisitor tmv = new org.objectweb.asm.util.TraceMethodVisitor ( tv ) ; mn . accept ( tmv ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( tv.text . size () ) ; i ++ ) { sb . append ( tv.text . get ( i ) ) ; } return sb . toString () ; } 
public static int getSelectedIdentityId () { if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 0 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.person . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 1 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.team . getId () ; } else if ( ( de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.ownOrgUnits . getSelectedIndex () ) == 2 ) { return de.hdm.itProjektSS17.client.gui.IdentityMarketChoice.unternehmen . getId () ; } return 0 ; } 
@ java.lang.Override public void done ( byte [] data , com.parse.ParseException e ) { if ( e == null ) { if ( ( data != null ) && ( ( data.length ) != 0 ) ) { restaurantModel = new com.example.vanne.tradish_alpha.Models.RestaurantModel ( name , address , restId , data ) ; restaurantModel . setFlag ( 1 ) ; restaurantModels . add ( restaurantModel ) ; updateListView () ; } } } 
public org.apache.hadoop.smart.sql.CommandInfo getCommandInfo ( long cid ) throws java.io.IOException { if ( cmdsAll . containsKey ( cid ) ) return cmdsAll . get ( cid ) ; java.util.List < org.apache.hadoop.smart.sql.CommandInfo > ret = null ; try { ret = adapter . getCommandsTableItem ( java.lang.String . format ( "= %d" , cid ) , null , null ) ; } catch ( java.sql.SQLException e ) { org.apache.hadoop.smart.CommandExecutor.LOG . error ( e . getMessage () ) ; } if ( ret != null ) return ret . get ( 0 ) ; return null ; } 
public void start () { if ( ( threadUpdater ) == null ) { threadUpdater = new java.util.Timer ( ( "Thread - " + ( this . name ) ) ) ; threadUpdater . schedule ( new ca.team4519.lib.Threader.UpdaterTask ( this ) , ( ( ( long ) ( this . period ) ) * 1000 ) ) ; } } 
public void run ( ) throws java.io.IOException { refPanel . repaint () ; if ( ( this . state ) == ( state.OrderSUMMARY ) ) { this . customer . addTransaction ( this . transaction . getTransactionNum () ) ; this . customer . write () ; this . transaction . write () ; if ( this . writeToGlobalReciept ) { this . writeReceipt () ; this . writeToGlobalReciept = false ; } } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int button ) { if ( button == ( android.content.DialogInterface.BUTTON_POSITIVE ) ) { if ( ( experimentFilter ) != null ) { getContentResolver () . delete ( ExperimentsProvider.CONTENT_URI , experimentFilter , null ) ; } android.widget.Toast . makeText ( this , R.string.deleted , Toast.LENGTH_SHORT ) . show () ; android.content.Intent intent = new android.content.Intent ( this , com.scuddertechnologies.pheoc.MainMenu . class ) ; startActivity ( intent ) ; } } 
public boolean equals ( java.lang.Object obj ) { if ( obj == ( this ) ) { return true ; } if ( obj == null ) { return false ; } if ( obj instanceof mc.compiler.ast.ReferenceNode ) { mc.compiler.ast.ReferenceNode node = ( ( mc.compiler.ast.ReferenceNode ) ( obj ) ) ; return reference . equals ( node . getReference () ) ; } return false ; } 
public boolean isEmptyContext ( java.lang.Object cursorPosition ) { if ( cursorPosition == null ) { return true ; } if ( cursorPosition instanceof java.lang.Boolean ) { return ! ( ( ( java.lang.Boolean ) ( cursorPosition ) ) . booleanValue () ) ; } if ( cursorPosition instanceof java.util.Collection ) { return ( ( ( java.util.Collection ) ( cursorPosition ) ) . size () ) == 0 ; } return false ; } 
protected java.util.Optional < T > getAnnotation ( org.springframework.core.type.MethodMetadata metadata ) { try { return java.util.Optional . ofNullable ( java.lang.Class . forName ( metadata . getReturnTypeName () ) . getDeclaredAnnotation ( annotation ) ) ; } catch ( java.lang.ClassNotFoundException e ) { io.cereebro.spring.annotation.LOGGER . error ( ( "Could not load class : " + ( metadata . getReturnTypeName () ) ) , e ) ; } return java.util.Optional . empty () ; } 
private boolean isMailingEnabledAndValid () { if ( "" . equals ( host ) ) { return false ; } if ( ( ! ( "false" . equals ( isAuthenticationNecessary ) ) ) && ( "" . equals ( login ) ) ) { com.siemens.sw360.mail.MailUtil.log . error ( "Cannot send emails: authentication necessary, but login is not set." ) ; return false ; } return true ; } 
public boolean endSuccess () { synchronized ( this ) { if ( ( getStatus () ) != ( XTaskBean.STATUS_DOING ) ) return false ; if ( ! ( onEndSuccess () ) ) return false ; setStatus ( XTaskBean.STATUS_DONE ) ; } if ( ( mListener ) != null ) mListener . onComplete ( getBean () ) ; return true ; } 
@ java.lang.Override protected void updateItem ( application.DataSet t , boolean bln ) { super . updateItem ( t , bln ) ; if ( t != null ) { setText ( t . getFilePath () . substring ( application.services.GeneralService . getDataSetDirectory () . length () ) ) ; } else { setText ( "Choose..." ) ; } } 
private void pluginChanged ( jobdispatcher.plugin.Plugin curPlugin ) { if ( curPlugin . getName () . startsWith ( "zh_def_catalog" ) ) { mapTagTemplate1 . put ( "SceneMetaDataFile" , objectivePath ) ; mapTagTemplate2 . remove ( "SceneMetaDataFile" ) ; } else { mapTagTemplate1 . remove ( "SceneMetaDataFile" ) ; mapTagTemplate2 . put ( "SceneMetaDataFile" , ( ( frameFilePath ) + "_meta.xml" ) ) ; } } 
public boolean contain ( ai.eboard e , int i ) { if ( ( e.c ) == 'X' ) return x . containsKey ( i ) ; else if ( ( e.c ) == 'O' ) return o . containsKey ( i ) ; else return ! ( u . containsKey ( i ) ) ; } 
@ java.lang.Override public void taskCompleted ( boolean success , java.lang.String message , org.json.JSONObject json ) { java.util.List < uk.ac.ncl.csc2022.t14.bankingapp.models.HeatPoint > allPoints = new java.util.ArrayList <> () ; if ( success && ( responseParser . parseLoadHeatPoints ( json , allPoints ) ) ) { delegate . loadHeatMapPassed ( allPoints ) ; } else { message = responseParser . parseErrorOrDefault ( message ) ; delegate . loadHeatMapFailed ( message ) ; } } 
public static void writePage ( javax.servlet.http.HttpServletResponse response , int httpCode , java.lang.String message , org.geowebcache.stats.RuntimeStats runtimeStats , java.lang.String contentType ) { org.geowebcache.io.Resource res = null ; if ( message != null ) { res = new org.geowebcache.io.ByteArrayResource ( message . getBytes () ) ; } org.geowebcache.GeoWebCacheUtils . writeFixedResponse ( response , httpCode , contentType , res , CacheResult.OTHER , runtimeStats ) ; } 
public void addFirst ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException ( "Attempt to add null Item." ) ; } Deque < Item > . Node oldfirst = first ; Deque < Item > . Node newfirst = new Node () ; newfirst.item = item ; newfirst.next = oldfirst ; if ( oldfirst != null ) { oldfirst.previous = newfirst ; } first = newfirst ; ( size ) ++ ; if ( ( size ) == 1 ) { last = first ; } } 
public void RunGame () { while ( true ) { GameOn = true ; gameStart () ; battleStart () ; while ( ( GameOn ) == true ) { battleActive () ; boolean a = battleEnd () ; if ( a == true ) { onPlayerWin () ; } if ( a == false ) { onPlayerLose () ; GameOn = false ; } } } } 
public java.lang.String getBestSuggestion ( java.lang.String typed ) { if ( ( typed == null ) || ( ( typed . length () ) == 0 ) ) return null ; for ( java.lang.String keyword : keywords ) { if ( keyword . startsWith ( typed ) ) return keyword ; } return null ; } 
public ship.WeatherWaypoint closestWeatherWaypoint () { int theCounter = checkClosestWeather () ; for ( int i = 0 ; i < ( weatherWaypoints . size () ) ; i ++ ) { if ( i == theCounter ) { return weatherWaypoints . get ( i ) ; } } java.lang.System.out . println ( "returning Null" ) ; return new ship.WeatherWaypoint () ; } 
public org.alopex.hyperios.helix.Specimen crossover ( org.alopex.hyperios.helix.Specimen mateOne , org.alopex.hyperios.helix.Specimen mateTwo ) { org.alopex.hyperios.helix.Specimen output = new org.alopex.hyperios.helix.Specimen ( true ) ; for ( int i = 0 ; i < ( output . getGenes () . length ) ; i ++ ) { if ( ( java.lang.Math . random () ) <= ( GASettings.crossoverRate ) ) { output . setGene ( i , mateOne . getGenes () [ i ] ) ; } else { output . setGene ( i , mateOne . getGenes () [ i ] ) ; } } return output ; } 
public boolean isHasIncidence () { this . computerGateway . find ( getComputerNum () , getLaboratory () ) ; if ( ( ( this . computerGateway . getCurrent () ) != null ) && ( ( this . computerGateway . getCurrent () . getState () ) == ( es.uvigo.esei.infraestructura.entities.State.INCIDENCE ) ) ) { return true ; } return false ; } 
public static void generate_predicates () { for ( int current_depth = Depths.highest_depth ; current_depth > 0 ; -- current_depth ) { for ( int i = 0 ; i < current_depth ; ++ i ) { Predicates . add_entry ( Depths.DEPTHS_OUTPUT , "is_lower_than" , Depths . get_id_from_depth ( new java.lang.Integer ( i ) ) , Depths . get_id_from_depth ( new java.lang.Integer ( current_depth ) ) ) ; } } } 
protected int newGame ( int _difficulty ) { difficulty = _difficulty ; timeElapsed = "00:00" ; if ( ( ( difficulty ) < 1 ) || ( ( difficulty ) > 3 ) ) { difficulty = ( randGen . nextInt ( 3 ) ) + 1 ; } buildCompleteBoard () ; digHoles ( getNumberOfGivens ( difficulty ) ) ; checkBounds ( getBound ( difficulty ) ) ; markOriginals () ; return difficulty ; } 
public static boolean hasFallingPieces ( final java.util.List < com.gamesbykevin.yoshi.board.piece.Piece > pieces ) { for ( int i = 0 ; i < ( pieces . size () ) ; i ++ ) { final com.gamesbykevin.yoshi.board.piece.Piece piece = pieces . get ( i ) ; if ( ( ( piece . isPlaced () ) || ( piece . isDestroyed () ) ) || ( piece . isFrozen () ) ) continue; return true ; } return false ; } 
public void getBalance ( org.bukkit.entity.Player player ) { player . sendMessage ( ( ( ( org.bukkit.ChatColor.GREEN ) + "Balance: " ) + ( me.ellbristow.ATMsigns.ATMsigns.economy . format ( ( ( double ) ( me.ellbristow.ATMsigns.ATMsigns.economy . getBalance ( player . getName () ) ) ) ) . replace ( ".00" , "" ) ) ) ) ; } 
public static java.lang.String getCharBeforeOffset ( java.lang.CharSequence str , int offset ) { if ( ( ( str . length () ) == 0 ) || ( offset == 0 ) ) return "" ; if ( offset > 0 ) { return str . subSequence ( ( offset - 1 ) , offset ) . toString () ; } return "" ; } 
boolean restartProcess ( net.algart.pyramid.http.JavaProcessControlWithHttpCheckingAliveStatus control , boolean skipIfAlive ) throws java.io.IOException { synchronized ( lock ) { if ( skipIfAlive && ( control . areAllHttpServicesAlive ( true ) ) ) { return false ; } stopProcess ( control , skipIfAlive ) ; startProcess ( control , false ) ; return true ; } } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out . println ( ( "Paikka 1 2 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbc ) ; buttonbc . setEnabled ( false ) ; viimeisinSiirto [ 1 ] [ 2 ] = whichmark () ; ( buttoncount ) ++ ; } 
public void add ( int itemNumber ) { if ( ( itemNumber > ( ( inventory . size () ) - 1 ) ) || ( itemNumber < 0 ) ) { java.lang.System.out . println ( "INVALID INDEX...Try Again" ) ; } else { items . add ( inventory . get ( itemNumber ) ) ; java.lang.System.out . println ( ( ( inventory . get ( itemNumber ) . getName () ) + " was added to cart!" ) ) ; subTotal += items . get ( ( ( items . size () ) - 1 ) ) . getPrice () ; } } 
public void generateExtensionalDB ( java.lang.String path ) throws java.lang.Exception { int i = 1 ; java.lang.StringBuilder buf = new java.lang.StringBuilder () ; for ( java.io.File file : files ) { buf . append ( factsFromFiles ( file , ( i ++ ) ) ) ; } java.io.PrintWriter prologWriter = new java.io.PrintWriter ( new java.io.File ( ( path + "edb.pl" ) ) ) ; prologWriter . println ( buf ) ; prologWriter . close () ; } 
@ java.lang.Override public void success ( final kaaes.spotify.webapi.android.models.Playlist playlist , retrofit.client.Response response ) { mPlaylist = playlist ; setupDetails ( playlist ) ; java.util.List < kaaes.spotify.webapi.android.models.TrackSimple > tracks = new java.util.ArrayList < kaaes.spotify.webapi.android.models.TrackSimple > () ; for ( kaaes.spotify.webapi.android.models.PlaylistTrack playlistTrack : playlist.tracks.items ) { tracks . add ( playlistTrack.track ) ; } setupTracksRows ( tracks ) ; if ( ( playlist.images . size () ) > 0 ) { java.lang.String imageUrl = playlist.images . get ( 0 ) . url ; loadDetailsRowImage ( imageUrl ) ; } } 
public static util.Coords fromSGFString ( java.lang.String coords ) { if ( ! ( coords . matches ( "[a-s][a-s]" ) ) ) throw new java.lang.IllegalArgumentException ( ( ( "String: '" + coords ) + "' is not recognizable as SGF coordinates." ) ) ; int x = ( ( coords . charAt ( 0 ) ) - 'a' ) + 1 ; int y = ( ( coords . charAt ( 1 ) ) - 'a' ) + 1 ; return util.Coords . getCoords ( x , y ) ; } 
public static it.crs4.features.DType convertPixelType ( int pixelType ) { switch ( pixelType ) { case loci.formats.FormatTools.INT8 : return DType.INT8 ; case loci.formats.FormatTools.UINT8 : return DType.UINT8 ; case loci.formats.FormatTools.INT16 : return DType.INT16 ; case loci.formats.FormatTools.UINT16 : return DType.UINT16 ; case loci.formats.FormatTools.INT32 : return DType.INT32 ; case loci.formats.FormatTools.UINT32 : return DType.UINT32 ; case loci.formats.FormatTools.FLOAT : return DType.FLOAT32 ; case loci.formats.FormatTools.DOUBLE : return DType.FLOAT64 ; default: throw new java.lang.IllegalArgumentException ( ( "Unknown pixel type: " + pixelType ) ) ; } } 
public void removeRows ( int [] indices ) { java.util.Arrays . sort ( indices ) ; for ( int i = ( indices.length ) - 1 ; i >= 0 ; i -- ) { rows . remove ( indices [ i ] ) ; } nl.gogognome.lib.swing.AbstractListTableModel . fireTableDataChanged () ; } 
public void statePlayer ( java.lang.String address , com.jme3.math.Vector3f walk , com.jme3.math.Vector3f view , int life , boolean attack , int score ) { try { this . OUTPUT . writeBytes ( ( ( server.ClientManager.PLAYER ) + "\n" ) ) ; java.lang.String line = new java.lang.StringBuilder () . builderString ( walk , view , new com.jme3.math.Vector3f () , life , attack , address , "" , score ) ; this . OUTPUT . writeBytes ( ( line + "\n" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public static void main ( java.lang.String [] args ) { java.util.List < java.util.List < java.lang.Integer > > list = new Solution () . combine ( 4 , 2 ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { for ( int k : list . get ( i ) ) { java.lang.System.out . print ( ( k + " " ) ) ; } java.lang.System.out . println () ; } } 
@ java.lang.Override public void exitIdentifier ( @ org.antlr.v4.runtime.misc.NotNull wich.parser.WichParser.IdentifierContext ctx ) { org.antlr.symtab.Symbol s = currentScope . resolve ( ctx . ID () . getText () ) ; if ( ( s != null ) && ( s instanceof wich.semantics.symbols.WVariableSymbol ) ) { ctx.exprType = ( ( org.antlr.symtab.TypedSymbol ) ( s ) ) . getType () ; } else {} } 
void returnConnection ( org.glassfish.grizzly.Connection result , ru.kwanza.jeda.nio.client.ConnectionConfig config , boolean close ) { if ( result != null ) { ru.kwanza.jeda.nio.client.ConnectionHolder holder = leasedConnections . remove ( result ) ; if ( config . isKeepAlive () ) { if ( ( ( holder != null ) && ( result . isOpen () ) ) && ( ! close ) ) { availableConnections . offer ( holder ) ; getStage () . getThreadManager () . adjustThreadCount ( getStage () , getThreadCount () ) ; } } } batchSize . incrementAndGet () ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_map_page ) ; android.location.LocationManager locationManager = ( ( android.location.LocationManager ) ( getSystemService ( Context.LOCATION_SERVICE ) ) ) ; if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( LocationManager.GPS_PROVIDER , 0 , 0 , this ) ; android.content.Intent intent = getIntent () ; } 
private boolean execute_BUNDLE_CLEAR () { int bundleIndex = getBundleArg () ; if ( bundleIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; android.os.Bundle b = com.rfo.basic.Run.theBundles . get ( bundleIndex ) ; b . clear () ; return true ; } 
private double getReward ( ab.vision.GameStateExtractor.GameState state ) { java.lang.System.out . println ( state ) ; if ( state == ( ab.vision.GameStateExtractor.GameState.WON ) ) { ab.vision.GameStateExtractor gameStateExtractor = new ab.vision.GameStateExtractor () ; java.lang.System.out . println ( state ) ; java.awt.image.BufferedImage scoreScreenshot = clientActionRobotJava . doScreenShot () ; java.lang.System.out . println ( state ) ; double reward = gameStateExtractor . getScoreEndGame ( scoreScreenshot ) ; java.lang.System.out . println ( reward ) ; return reward ; } else { return 0 ; } } 
public static void checkFetchItemsExist ( final java.util.List < gov.loc.repository.bagit.domain.FetchItem > items , final java.nio.file.Path bagDir ) throws gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException { gov.loc.repository.bagit.verify.MandatoryVerifier.logger . info ( "Checking if all [{}] items in fetch.txt exist in the [{}]" , items . size () , bagDir ) ; for ( final gov.loc.repository.bagit.domain.FetchItem item : items ) { if ( ! ( java.nio.file.Files . exists ( item.path ) ) ) { throw new gov.loc.repository.bagit.exceptions.FileNotInPayloadDirectoryException ( ( ( "Fetch item " + item ) + " has not been fetched!" ) ) ; } } } 
public static java.lang.String getRequestIP ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ipAddr ; ipAddr = request . getHeader ( "X-Real-IP" ) ; if ( ( null == ipAddr ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = request . getHeader ( "x-forwarded-for" ) ; } if ( ( null == ipAddr ) || ( ( ipAddr . length () ) == 0 ) ) { ipAddr = "127.0.0.1" ; } return ipAddr ; } 
private void ancestorPathCheck ( java.util.List < java.lang.String > ancestorPath , java.util.List < edu.unc.lib.dl.fedora.PID > pids ) { for ( int i = 0 ; i < ( ancestorPath . size () ) ; i ++ ) { org.junit.Assert . assertTrue ( ancestorPath . get ( i ) . equals ( ( ( ( i + 1 ) + "," ) + ( pids . get ( i ) . getId () ) ) ) ) ; } } 
public long getTimeBucketAndAdjustBoundaries ( long value ) { if ( value < ( start ) ) { return - 1 ; } long diffFromStart = value - ( fixedStart ) ; long key = diffFromStart / ( bucketSpanMillis ) ; if ( value >= ( end ) ) { long diffInBuckets = ( value - ( end ) ) / ( bucketSpanMillis ) ; long move = ( diffInBuckets + 1 ) * ( bucketSpanMillis ) ; start += move ; end += move ; triggerPurge = true ; lowestPurgeableTimeBucket += diffInBuckets ; } return key ; } 
@ android.support.annotation.VisibleForTesting void setVideoPath ( java.lang.String path ) { if ( ( mPlayer ) == null ) mPlayer = createPlayer ( mContext . get () ) ; try { mPlayer . setDataSource ( mContext . get () , android.net.Uri . parse ( path ) ) ; openVideo () ; } catch ( java.io.IOException e ) { com.hustunique.parsingplayer.util.LogUtil . wtf ( com.hustunique.parsingplayer.player.media.ParsingPlayerProxy.TAG , e ) ; e . printStackTrace () ; } } 
@ org.junit.Test public void testDefaultChangeTypeToVCSType () { for ( org.eclipse.jgit.diff.DiffEntry.ChangeType ct : DiffEntry.ChangeType . values () ) { if ( ( ( ct != ( DiffEntry.ChangeType.ADD ) ) && ( ct != ( DiffEntry.ChangeType.DELETE ) ) ) && ( ct != ( DiffEntry.ChangeType.MODIFY ) ) ) { assertEquals ( git . gitChangeTypeToVCSChangeType ( ct ) , VCSChangeType.UNKNOWN ) ; } } } 
@ java.lang.Override public void setBooleanMetadata ( java.lang.String key , boolean value ) { if ( ( ( ( sender ) == null ) || ( ( sender . getBlock () ) == null ) ) || ( ( sender . getBlock () . getType () ) != ( org.bukkit.Material.COMMAND ) ) ) { return; } sender . getBlock () . setMetadata ( key , new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer . getInstance () , value ) ) ; } 
public void clearCacheLocal ( uk.gov.ea.datareturns.distributedtransaction.impl.Cache cache ) { switch ( cache ) { case SITE_PERMIT_CACHES : siteDao . clearCaches () ; uniqueIdentifierDao . clearCaches () ; uniqueIdentifierAliasDao . clearCaches () ; search . initialize () ; uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER . info ( ( "Cleared cache group: " + cache ) ) ; break; default: uk.gov.ea.datareturns.distributedtransaction.impl.RemoteCacheDelegate.LOGGER . error ( ( "Not implemented: " + cache ) ) ; } } 
@ org.testng.annotations.Test public void test11_AddNewHTMLFile () { org.exoplatform.selenium.TestLogger . info ( "Test 11 Add new HTML file" ) ; java.lang.String HTMLFILE_NAME = "HTMLfile" + ( getRandomNumber () ) ; java.lang.String HTMLFILE_CONTENT = "HTML file " + ( getRandomNumber () ) ; navToolBar . goToSiteExplorer () ; actBar . goToAddNewContent () ; org.exoplatform.selenium.TestLogger . info ( "Create new HTML file" ) ; cTemplate . createNewHtmlFile ( HTMLFILE_NAME , true , "" , HTMLFILE_CONTENT ) ; org.exoplatform.selenium.TestLogger . info ( "Restore data" ) ; actBar . goToNodeByAddressPath ( "/" ) ; cMenu . deleteDocument ( ecms.ELEMENT_NODE_ROW_VIEW . replace ( "${nodeName}" , HTMLFILE_NAME ) ) ; } 
private void doNext ( int requestCode , int [] grantResults ) { int count = 0 ; if ( requestCode == ( ACCESS_PERMISSION ) ) { for ( int i = 0 ; i < ( grantResults.length ) ; i ++ ) { if ( ( grantResults [ i ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) count ++ ; } if ( count == ( grantResults.length ) ) listener . onGranted () ; else listener . onDenied () ; } } 
private algo.BSTMap < K , V > . Node findMinNode ( algo.BSTMap < K , V > . Node parent ) { algo.BSTMap < K , V > . Node child = parent.left ; if ( ( child.left ) == null ) { parent.left = null ; return child ; } else { return findMinNode ( child ) ; } } 
public static boolean getBoolean ( java.lang.String sql ) { java.lang.String s = ids.sardine.TransferUtil . getString ( sql ) ; return ( ( s != null ) && ( ( s . trim () . length () ) != 0 ) ) && ( ( java.lang.Boolean . parseBoolean ( s . trim () ) ) || ( ! ( "0" . equals ( s . trim () ) ) ) ) ; } 
private float [] cutArray ( int index ) { float [] retArr = new float [ filterSize ] ; int j = 0 ; for ( int i = index - ( side ) ; i <= ( index + ( side ) ) ; i ++ ) { retArr [ j ] = array [ i ] ; j ++ ; } return retArr ; } 
public int overallScore () { int s ; if ( ( score1 ) > ( score2 ) ) s = score2 ; else s = score1 ; if ( s > ( score3 ) ) s = score3 ; s = ( ( ( score1 ) + ( score2 ) ) + ( score3 ) ) - s ; return s ; } 
private double getStepMovement ( genetics.MusicPhenotype p ) { double steps = 0 ; double intervalCount = 0 ; for ( java.util.ArrayList < java.lang.Integer > measure : p.melodyIntervals ) { for ( int interval : measure ) { interval = java.lang.Math . abs ( interval ) ; intervalCount ++ ; if ( ( interval >= 1 ) && ( interval <= 2 ) ) { steps += 1 ; } } } if ( intervalCount == 0 ) { return 0 ; } return steps / intervalCount ; } 
ru.spbau.mit.StringSetImpl.StringSetEntry removeEntry ( char letter , boolean notLastLetter ) { ( numberOfSuccessors ) -- ; int idx = getIndex ( letter ) ; ru.spbau.mit.StringSetImpl.StringSetEntry nextEntry = next . get ( idx ) ; if ( ( ( nextEntry.numberOfSuccessors ) == 1 ) && notLastLetter ) { next . set ( idx , null ) ; } return nextEntry ; } 
@ java.lang.Override public boolean onCreateOptionsMenu ( android.view.Menu menu ) { getMenuInflater () . inflate ( R.menu.menu_photo_album , menu ) ; android.view.MenuItem item = menu . findItem ( R.id.action_ok ) ; if ( ( okButtonDrawable ) != null ) { item . setIcon ( okButtonDrawable ) ; } else if ( ( menuText ) != null ) { item . setIcon ( new com.sangcomz.fishbun.util.TextDrawable ( getResources () , menuText , colorMenuText ) ) ; } return true ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( this . getNavigationManager () . topFragment () ) instanceof com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) { int fragCount = ( ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment ) ( this . getNavigationManager () . topFragment () ) ) . getFragCount () ; this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , ( fragCount + 1 ) ) ) ; } else { this . presentFragment ( com.dmcapps.navigationfragmentexample.SingleStackExample.SampleFragment . newInstance ( "Fragment added to the Stack" , 0 ) ) ; } } 
@ java.lang.Override public bcccp.tickets.adhoc.IAdhocTicket findTicketByBarcode ( java.lang.String findBarcode ) { for ( int i = 0 ; i < ( currentAdhocTickets . size () ) ; i ++ ) { if ( ( currentAdhocTickets . get ( i ) . getBarcode () ) == null ? findBarcode == null : currentAdhocTickets . get ( i ) . getBarcode () . equals ( findBarcode ) ) { return currentAdhocTickets . get ( i ) ; } } return null ; } 
private boolean isNotJsonString ( final java.lang.String value ) throws java.io.IOException { return ( ( ( ( value . startsWith ( "{" ) ) || ( value . startsWith ( "[" ) ) ) || ( "true" . equals ( value ) ) ) || ( "false" . equals ( value ) ) ) || ( springfox.documentation.swagger2.configuration.Swagger2JacksonModule.PropertyExampleSerializerMixin.PropertyExampleSerializer.JSON_NUMBER_PATTERN . matcher ( value ) . matches () ) ; } 
public double calculateIntegral () { double temp = calculateIntegralAtIteration () ; double diff = 0.0 ; do { double integralValue = calculateIntegralAtIteration () ; diff = java.lang.Math . abs ( ( integralValue - temp ) ) ; temp = integralValue ; } while ( diff > 1.0E-8 ) ; return temp ; } 
@ com.squareup.otto.Subscribe public void searchForVenues ( com.android.test.otto.VenueSearchEvent event ) { com.android.test.qachee.QacheeData data = ( ( com.android.test.qachee.QacheeData ) ( com.qachee.QacheeManager . getInstance () . get ( event.place , true ) ) ) ; if ( data == null ) { asyncTask = new com.android.test.task.VenueBackgroundTask ( event.place , gpsTracker . getLocation () ) ; asyncTask . execute () ; } else { ottoBus . post ( new com.android.test.otto.VenueResultEvent ( data.venues , event.place , gpsTracker . getLocation () ) ) ; } } 
@ java.lang.Override public java.lang.String qnameFor ( java.lang.String uri ) { int split = org.apache.jena.rdf.model.impl.Util . splitNamespaceXML ( uri ) ; java.lang.String ns = uri . substring ( 0 , split ) ; java.lang.String local = uri . substring ( split ) ; if ( local . equals ( "" ) ) return null ; java.lang.String prefix = getNsURIPrefix ( ns ) ; return prefix == null ? null : ( prefix + ":" ) + local ; } 
private pcbuilder.controllers.Component findComponent ( pcbuilder.controllers.ProductData productData ) { pcbuilder.controllers.Component component = componentRepository . findByManufacturerPartNumber ( productData . getMpn () ) ; if ( ( ( component == null ) && ( ( productData . getEan () ) != null ) ) && ( ! ( productData . getEan () . equals ( "9999999999999" ) ) ) ) { component = componentRepository . findByEuropeanArticleNumber ( productData . getEan () ) . get ( 0 ) ; } return component ; } 
public void lernen () { java.lang.String tf ; tf = letter . getText () . toLowerCase () ; for ( int w = 0 ; w < 26 ; w ++ ) { if ( tf . equals ( ( "" + ( alphabet [ w ] ) ) ) ) { alpha [ w ] = ja ; } } ann . backpropagate ( new com.github.jannled.lib.math.Matrix ( feld , 1 , feld.length ) , new com.github.jannled.lib.math.Matrix ( alpha , 1 , alpha.length ) ) ; } 
protected boolean isIE7 ( java.lang.String userAgent ) { if ( ( userAgent != null ) && ( ! ( userAgent . contains ( "; Trident/" ) ) ) ) { if ( ( ( userAgent . contains ( "; MSIE 5" ) ) || ( userAgent . contains ( "; MSIE 6" ) ) ) || ( userAgent . contains ( "; MSIE 7" ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( obj == null ) return false ; if ( ( getClass () ) != ( obj . getClass () ) ) return false ; org.opennms.netmgt.poller.client.rpc.PollerResponseDTO other = ( ( org.opennms.netmgt.poller.client.rpc.PollerResponseDTO ) ( obj ) ) ; return java.util.Objects . equals ( this . pollStatus , other.pollStatus ) ; } 
public java.lang.String toString () { java.lang.String retString = "" ; int i = 1 ; for ( Destination d : this ) { retString += ( ( ( "" + i ) + ". " ) + ( d . toString () ) ) + "\n" ; i ++ ; } return retString ; } 
public void setObject ( java.sql.CallableStatement statement , com.ctrip.platform.dal.dao.StatementParameter parameter ) throws java.sql.SQLException { if ( ( ( parameter . getValue () ) != null ) && ( ( parameter . getSqlType () ) == ( com.ctrip.platform.dal.common.enums.DatabaseCategory.SQL_SERVER_TYPE_TVP ) ) ) { com.microsoft.sqlserver.jdbc.SQLServerCallableStatement sqlsvrStatement = ( ( com.microsoft.sqlserver.jdbc.SQLServerCallableStatement ) ( statement ) ) ; sqlsvrStatement . setStructured ( parameter . getIndex () , parameter . getName () , ( ( com.microsoft.sqlserver.jdbc.SQLServerDataTable ) ( parameter . getValue () ) ) ) ; } else { super . setObject ( statement , parameter ) ; } } 
@ java.lang.Override public value.Value add ( value.Value other ) { if ( ( ! ( isSet () ) ) || ( ! ( other . isSet () ) ) ) { return new value.IntegerValue () ; } return new value.IntegerValue ( ( ( value ) + ( ( ( value.IntegerValue ) ( other ) ) . getValue () ) ) ) ; } 
private javax.validation.ConstraintViolation < ? > [] validateNotSamePort ( final java.lang.String httpPortPath , final java.lang.Integer httpPort , final java.lang.String httpsPortPath , final java.lang.Integer httpsPort ) { if ( ( httpPort != null ) && ( httpPort . equals ( httpsPort ) ) ) { return new javax.validation.ConstraintViolation < ? > [] { constraintViolationFactory . createViolation ( httpPortPath , "HTTP and HTTPs ports must be different" ) , constraintViolationFactory . createViolation ( httpsPortPath , "HTTP and HTTPs ports must be different" ) } ; } return new javax.validation.ConstraintViolation < ? > [] {} ; } 
public int getPlayer1Score () { int score = 0 ; for ( int i = ( this . glasses . length ) - 1 ; i >= ( ( this . glasses . length ) / 2 ) ; i -- ) { if ( this . glasses [ i ] . isActive () ) break; else score ++ ; } return score ; } 
@ java.lang.Override public java.lang.Boolean delete ( int id ) throws com.nextbook.exceptions.AuthRequiredException , com.nextbook.exceptions.ForbiddenException , com.nextbook.exceptions.NoSuchEntityException { com.nextbook.domain.entity.comment.CommentEntity commentEntity = commentDao . getNotNull ( id ) ; commentEntity . setStatus ( CommentStatusesEnum.DELETED ) ; if ( ( sessionUtils . allowedForUserWithRole ( RolesEnum.admin ) ) || ( commentAvailabilityService . isCommentAuthorSession ( commentEntity ) ) ) { return ( commentDao . update ( commentEntity ) . getStatus () . compareTo ( CommentStatusesEnum.DELETED ) ) == 0 ; } return false ; } 
@ java.lang.Override public boolean apply ( final org.pentaho.agilebi.modeler.ModelerWorkspace workspace , final java.lang.String field , final org.pentaho.metastore.api.IMetaStore metaStore ) throws org.pentaho.agilebi.modeler.ModelerException { org.pentaho.agilebi.modeler.nodes.LevelMetaData existingLevel = locateLevelFromFormula ( workspace , field ) ; boolean isApplied = false ; if ( ( existingLevel != null ) && ( workspace != null ) ) { removeLevel ( workspace , existingLevel ) ; workspace . getWorkspaceHelper () . populateDomain ( workspace ) ; isApplied = true ; } return isApplied ; } 
@ java.lang.Override public boolean isMogelijk ( io.gameoftrades.model.markt.actie.HandelsPositie positie ) { if ( ! ( handel . getStad () . equals ( positie . getStad () ) ) ) { return false ; } if ( ! ( positie . isActieBeschikbaar ( 1 ) ) ) { return false ; } java.lang.Integer value = positie . getVoorraad () . get ( handel . getHandelswaar () ) ; return ( value != null ) && ( value > 0 ) ; } 
@ org.junit.Test public void rowAndColumnTest () { int rowCount = categoryTableModel . getRowCount () ; int columnCount = categoryTableModel . getColumnCount () ; for ( int i = 0 ; i < ( rowCount - 1 ) ; i ++ ) { for ( int j = 0 ; j < ( columnCount - 1 ) ; j ++ ) { org.junit.Assert . assertNotNull ( categoryTableModel . getValueAt ( i , j ) ) ; } } } 
public void run () { java.lang.Integer bayValue = ( ( phidgetNumber ) * 8 ) + ( sensorIndex ) ; java.lang.Integer updatedValue = 0 ; if ( ( rack.bays ) != null ) { updatedValue = ( sensorVal ) + ( rack.bays [ bayValue ] . calibrationOffset ) ; } java.lang.Boolean refreshScreen = testRun.bayItems [ bayValue ] . updateValue ( updatedValue , testRun.currentTestStep , context ) ; aa . notifyDataSetChanged () ; if ( refreshScreen ) { updateCounts () ; } } 
@ java.lang.Override public java.io.InputStream exportDatatypeLibraryDocumentAsHtml ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.DatatypeLibraryDocument datatypeLibraryDocument , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportConfig exportConfig , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportFontConfig exportFontConfig ) { if ( datatypeLibraryDocument != null ) { gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.util.ExportParameters exportParameters = exportUtil . setExportParameters ( gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.DOCUMENT_TITLE_DATATYPE_LIBRARY , true , false , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.EXPORT_FORMAT_HTML , exportConfig , exportFontConfig ) ; return exportUtil . exportAsHtmlFromXsl ( serializationService . serializeDatatypeLibrary ( datatypeLibraryDocument , exportConfig ) . toXML () , gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.ExportServiceImpl.GLOBAL_STYLESHEET , exportParameters , datatypeLibraryDocument . getMetaData () ) ; } else { return new org.apache.commons.io.input.NullInputStream ( 1L ) ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { android.view.View rootView = null ; if ( ( customLayout ) == 0 ) { rootView = generateCaptchaView ( inflater , container , savedInstanceState ) ; android.widget.TextView captchaPrompt = ( ( android.widget.TextView ) ( rootView . findViewById ( R.id.txt_captcha_prompt ) ) ) ; if ( ( ( customText ) != null ) && ( captchaPrompt != null ) ) captchaPrompt . setText ( customText ) ; } else { rootView = inflater . inflate ( customLayout , container , false ) ; } return rootView ; } 
public static void main ( java.lang.String [] args ) { if ( ( args.length ) != 3 ) { java.lang.System.out . println ( "Usage: java RidgeRegression <dataDir> <lambda> <power>" ) ; java.lang.System.out . println ( "Example: java RidgeRegression ../../data/sinData_Train.csv 0.2 5" ) ; java.lang.System . exit ( 0 ) ; } RidgeRegression . init ( args ) ; FileParser . readData ( RidgeRegression.fileDir , "," , RidgeRegression.allData , RidgeRegression.allLabels , RidgeRegression.POWER ) ; RidgeRegression . run () ; } 
private void makeCollector ( eu.etaxonomy.cdm.io.salvador.SalvadorSpecimenImportState state , int collectorNo , eu.etaxonomy.cdm.model.agent.Team team , java.util.Map < java.lang.String , java.lang.String > record , int row ) { java.lang.String str = record . get ( ( "COLLECTOR_" + collectorNo ) ) ; if ( str == null ) { return; } else { parsePerson ( state , str , team , row ) ; } return; } 
private void addNewLogicalTile () { int [] [] emptyTiles = getEmptyTiles () ; if ( ( emptyTiles.length ) > 0 ) { java.util.Random rand = new java.util.Random () ; int randNum = rand . nextInt ( emptyTiles.length ) ; int row = emptyTiles [ randNum ] [ 0 ] ; int column = emptyTiles [ randNum ] [ 1 ] ; Model.board [ row ] [ column ] = newValue () ; } } 
public void onShare () { java.util.List < com.mauriciotogneri.fileexplorer.utils.FileInfo > selectedItems = adapter . selectedItems ( true ) ; if ( ( selectedItems . size () ) == 1 ) { shareSingle ( selectedItems . get ( 0 ) ) ; } else if ( ! ( selectedItems . isEmpty () ) ) { shareMultiple ( selectedItems ) ; } } 
public java.util.ArrayList < mx.evin.apps.words.model.entities.parse.Term > magicFilter () { quickFilter () ; if ( ( results . size () ) < 1 ) firstLettersFilter ( 3 ) ; if ( ( results . size () ) < 1 ) wordByWordFilter () ; if ( ( results . size () ) < 1 ) firstLettersFilter ( 2 ) ; if ( ( results . size () ) < 1 ) firstLettersFilter ( 1 ) ; return results ; } 
public static void main ( java.lang.String [] args ) { if ( ( args.length ) != 1 ) { java.lang.System.out . println ( "Please enter a filename! :)" ) ; java.lang.System.out . println ( "Usage: java Tempo <filename>" ) ; java.lang.System . exit ( 0 ) ; } Tempo.RequestHandler run = new Tempo.RequestHandler ( args [ 0 ] ) ; Tempo.ArgParser parser = new Tempo.ArgParser () ; java.lang.System.out . println ( Tempo.Tempo.WELCOME_MESSAGE ) ; Tempo.Tempo . listenForInput ( run , parser ) ; } 
private static int getThisPieceSize ( PeerFile file , int pieceNum ) { if ( ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) > ( file . getSize () ) ) { return ( ( pieceNum + 1 ) * ( Peer.PIECE_SIZE ) ) - ( file . getSize () ) ; } return Peer.PIECE_SIZE ; } 
@ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { selectS . setLocation ( ( ( int ) ( event . getX () ) ) , ( ( int ) ( event . getY () ) ) ) ; java.lang.System.out . println ( ( "pr" + ( selectS ) ) ) ; if ( isFuncSelect ) { selecting = true ; java.lang.System.out . println ( "h" ) ; } } 
@ java.lang.Override public java.util.List < java.lang.String > asRequestParameter () { if ( ! ( de.interseroh.report.model.MultiSelectParameter . isUnset () ) ) { java.util.List < java.lang.String > params = new java.util.ArrayList <> ( 4 ) ; for ( T value : getValue () ) { params . add ( ( ( ( "params[" + ( de.interseroh.report.model.MultiSelectParameter . getName () ) ) + "].value=" ) + ( de.interseroh.report.model.MultiSelectParameter . urlEncode ( asString ( value ) ) ) ) ) ; } return params ; } else { return super . asRequestParameter () ; } } 
public void updateCurrentTree () { java.lang.System.out . println ( "updating current tree" ) ; if ( ( ( mouseX ) >= ( FIRST_THIRD ) ) && ( ( mouseX ) < ( SECOND_THIRD ) ) ) currentTree = getInstanceTree ( tree1 ) ; else if ( ( ( mouseX ) >= ( SECOND_THIRD ) ) && ( ( mouseX ) < ( LAST_THIRD ) ) ) currentTree = getInstanceTree ( tree2 ) ; else { currentTree = getInstanceTree ( tree3 ) ; java.lang.System.out . println ( "done updating current tree" ) ; } } 
public void killChain ( int index , tsumegoai.Stone color ) { if ( ( index < 0 ) || ( ( searchSpace [ index ] ) == null ) ) return; if ( ( searchSpace [ index ] ) == color ) { searchSpace [ index ] = null ; updateZhash ( tsumegoai.Goban.searchSpacePositions [ index ] , color ) ; for ( int i = 0 ; i < 4 ; i ++ ) { killChain ( tsumegoai.Goban.searchSpaceAdjacentIndices [ ( ( 4 * index ) + i ) ] , color ) ; } } } 
public int compare ( com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p1 , com.schlock.website.entities.apps.notfibbage.NotFibbagePlayer p2 ) { if ( ( p1 . getScore () ) < ( p2 . getScore () ) ) { return 1 ; } if ( ( p1 . getScore () ) > ( p2 . getScore () ) ) { return - 1 ; } return p1 . getName () . compareToIgnoreCase ( p2 . getName () ) ; } 
@ java.lang.Override public void itemStateChanged ( java.awt.event.ItemEvent e ) { if ( ( e . getStateChange () ) == ( java.awt.event.ItemEvent.SELECTED ) ) { net.ntg.ftl.ui.TogglePanel.log . info ( ( ( ( "comboBox " + valueName ) + ": " ) + ( colorComboBox . getSelectedIndex () ) ) ) ; net.ntg.ftl.ui.TogglePanel.prefs . putInt ( ( valueName + ( net.ntg.ftl.ui.TogglePanel.COLOR ) ) , colorComboBox . getSelectedIndex () ) ; } } 
private boolean scanFieldsRelation ( java.lang.Class < ? > klass , final net.imadz.lifecycle.meta.type.RelationConstraintMetadata relation ) { for ( java.lang.Class < ? > c = klass ; ( null != c ) && ( ( java.lang.Object . class ) != c ) ; c = c . getSuperclass () ) { for ( java.lang.reflect.Field field : c . getDeclaredFields () ) { if ( hasRelationOnField ( relation , field ) ) return true ; } } return false ; } 
public void init ( org.shaolin.bmdp.workflow.internal.cache.FlowObject flowInfo ) throws org.shaolin.bmdp.workflow.exception.ConfigException { this . flowInfo = flowInfo ; this . flowInfo . parse () ; if ( ( this . flowInfo . getSessionService () ) != null ) { this . sessionService = ( ( org.shaolin.bmdp.workflow.spi.SessionService ) ( org.shaolin.bmdp.runtime.AppContext . get () . getService ( this . flowInfo . getSessionService () ) ) ) ; if ( ( this . sessionService ) == null ) { this . sessionService = new org.shaolin.bmdp.workflow.internal.DefaultFlowSessionService () ; } } } 
private void initializePurchases () { mHelper . startSetup ( new org.onepf.oms.appstore.googleUtils.IabHelper.OnIabSetupFinishedListener () { public void onIabSetupFinished ( org.onepf.oms.appstore.googleUtils.IabResult result ) { if ( ! ( result . isSuccess () ) ) { showToast ( ( "Problem setting up in-app billing: " + result ) ) ; return; } if ( ( mHelper ) == null ) return; mHelper . queryInventoryAsync ( mGotInventoryListener ) ; } } ) ; } 
@ java.lang.Override public org.openflexo.foundation.ontology.IFlexoOntologyClass getOntologyClass () { if ( ( getAssignedFlexoProperty () ) != null ) { return getAssignedFlexoProperty () . getOntologicType () ; } if ( FlexoOntologyVirtualModelNature.INSTANCE . hasNature ( org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl . getOwningVirtualModel () ) ) { return org.openflexo.foundation.ontology.nature.FlexoOntologyVirtualModelNature . getOntologyClass ( ontologyClassURI , org.openflexo.foundation.ontology.fml.editionaction.AddIndividual.AddIndividualImpl . getOwningVirtualModel () ) ; } return null ; } 
protected java.lang.String getGroupRedirect ( com.liferay.portal.theme.ThemeDisplay themeDisplay , long groupId ) throws java.lang.Exception { java.util.List < com.liferay.portal.model.Layout > layouts = com.liferay.portal.service.LayoutLocalServiceUtil . getLayouts ( groupId , false , LayoutConstants.DEFAULT_PARENT_LAYOUT_ID , false , 0 , 1 ) ; if ( ( layouts . size () ) > 0 ) { com.liferay.portal.model.Layout layout = layouts . get ( 0 ) ; return com.liferay.portal.util.PortalUtil . getLayoutURL ( layout , themeDisplay ) ; } return null ; } 
public void setEnabled ( boolean state ) { this . state = state ; if ( state == false ) { oscP5.OscMessage myMessage = new oscP5.OscMessage ( "/control/joystick/state" ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; myMessage . add ( 0.0F ) ; oscP5 . send ( myMessage , myRemoteLocation ) ; } } 
public static void addKeyText ( final org.eclipse.swt.widgets.MenuItem mntm , final java.lang.String text , final org.nschmidt.ldparteditor.enums.TextTask t ) { mntm . setText ( ( ( text + "\t" ) + ( org.nschmidt.ldparteditor.state.KeyStateManager.textTaskKeyMap . get ( t ) ) ) ) ; mntm . addArmListener ( new org.eclipse.swt.events.ArmListener () { @ java.lang.Override public void widgetArmed ( org.eclipse.swt.events.ArmEvent e ) { mntm . setText ( ( ( text + "\t" ) + ( org.nschmidt.ldparteditor.state.KeyStateManager.textTaskKeyMap . get ( t ) ) ) ) ; } } ) ; } 
@ java.lang.Override public void execute ( models.assetOwnership.GameMap map , models.playerAsset.Assets.Player player ) throws models.ctrlCommand.CommandNotConfiguredException { if ( isConfigured ) { player . accept ( new models.visitor.ArmyCreationVisitor ( map , player , RPLocation , units ) ) ; } else { throw new models.ctrlCommand.CommandNotConfiguredException ( ( ( "[" + ( this ) ) + "] is not configured." ) ) ; } } 
public boolean toggleRecording () { if ( ( state ) == ( piano.State.isrecording ) ) { state = piano.State.isplaying ; return false ; } else if ( ( state ) == ( piano.State.isplaying ) ) { if ( ! ( listOfNote . isEmpty () ) ) { listOfNote . clear () ; } state = piano.State.isrecording ; return true ; } else { return false ; } } 
@ java.lang.Override public java.util.List < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > getAllEventStreamConfigurations ( ) throws org.wso2.carbon.event.stream.core.exception.EventStreamConfigurationException { int tenantId = org.wso2.carbon.context.PrivilegedCarbonContext . getThreadLocalCarbonContext () . getTenantId () ; java.util.Map < java.lang.String , org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > eventStreamConfigs = tenantSpecificEventStreamConfigs . get ( tenantId ) ; if ( eventStreamConfigs == null ) { return new java.util.ArrayList < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > () ; } return new java.util.ArrayList < org.wso2.carbon.event.stream.core.internal.EventStreamConfiguration > ( eventStreamConfigs . values () ) ; } 
public void callEvent ( org.centauri.cloud.cloud.event.Event event ) { java.util.Set < org.centauri.cloud.cloud.event.EventManager.EventHandler > eventSet = this . eventHandlers . get ( event . getClass () ) ; if ( eventSet == null ) return; for ( org.centauri.cloud.cloud.event.EventManager.EventHandler eventHandler : eventSet ) { try { eventHandler.method . invoke ( eventHandler.instance , event ) ; } catch ( java.lang.Exception ex ) { java.lang.System.err . println ( "Something went wrong on during event call: " ) ; org.centauri.cloud.cloud.Cloud . getLogger () . error ( ex . getMessage () , ex ) ; } } } 
private boolean matchExact ( java.util.Calendar matcher , org.json.JSONObject activity ) { int year = activity . getInt ( "year" ) ; int month = activity . getInt ( "month" ) ; return ( ( matcher . get ( java.util.Calendar.YEAR ) ) == year ) && ( ( matcher . get ( java.util.Calendar.MONTH ) ) == month ) ; } 
public java.lang.String receiptClearRoom () { java.lang.String receipt = ( ( ( ( "Rechnung f�r Gast " + ( guests [ 0 ] . getName () ) ) + ": " ) + ( calcPrice () ) ) + " f�r " ) + ( roomtype ) ; this . booked = false ; for ( int i = 0 ; i < ( guests.length ) ; i ++ ) { guests [ i ] = null ; } this . daysBooked = 0 ; return receipt ; } 
private void setupBoard () { for ( int yRow = 1 ; yRow <= ( length ) ; ++ yRow ) { for ( int xCol = 1 ; xCol <= ( length ) ; ++ xCol ) { org.javatuples.Pair < java.lang.Integer , java.lang.Integer > pair = org.javatuples.Pair . with ( xCol , yRow ) ; Tile tile = new Tile ( this , pair ) ; add ( tile ) ; slaves . add ( tile ) ; } } } 
private void setToolbar ( android.support.v7.widget.Toolbar toolbar , java.lang.String title ) { if ( toolbar != null ) { setSupportActionBar ( toolbar ) ; if ( ( getSupportActionBar () ) != null ) { getSupportActionBar () . setHomeAsUpIndicator ( android.support.v4.content.ContextCompat . getDrawable ( getApplicationContext () , R.drawable.icon_arrow_back ) ) ; getSupportActionBar () . setDisplayHomeAsUpEnabled ( true ) ; } } else { android.util.Log . d ( com.geekhub.choosehelper.screens.activities.ProfileActivity.TAG , "Can`t setup toolbar: Toolbar is null" ) ; } } 
private void registerSuperTypes ( java.lang.Class type ) { java.lang.Class < ? > supertype = type . getSuperclass () ; while ( ( type != null ) && ( supertype != ( java.lang.Object . class ) ) ) { if ( types . containsKey ( supertype ) ) { throw new java.lang.RuntimeException ( ( "Ambigious Puppet for " + supertype ) ) ; } types . put ( supertype , type ) ; type = ( ( type . getSuperclass () ) == type ) ? null : type . getSuperclass () ; } } 
public java.lang.String kursWahlspeichern_2 () { java.lang.String posId = getRequestParameter ( "kursId" ) ; for ( fachklassen.Kurs k : alleKurse ) { if ( ( k . getKursId () ) == ( java.lang.Long . parseLong ( posId ) ) ) { auslandskurs = k ; } } learningAgreement . getLearningAgreementPositionen () . add ( new fachklassen.LearningAgreementPosition ( inlandskurs , auslandskurs , learningAgreement ) ) ; return "learningAgreementBearbeiten" ; } 
@ org.springframework.web.bind.annotation.ResponseBody @ org.springframework.web.bind.annotation.RequestMapping ( value = "/heartBeat" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public model.BaseStatus receiveHeartBeat ( javax.servlet.http.HttpServletRequest request ) { java.lang.String ip = getRemoteHost ( request ) ; logger . info ( ( "heartbeat from " + ip ) ) ; if ( ! ( db.WorkerCache . contains ( ip ) ) ) { sync.FilterConfigSync . syncFilterConfigsToWorker ( ip ) ; } db.WorkerCache . putIp ( ip ) ; return model.BaseStatus . buildSuccessBaseStatus () ; } 
public static int getValidThreshold ( boolean isSelected , java.lang.String text ) { int threshold = - 1 ; if ( isSelected ) { java.lang.String thresholdText = text ; if ( ( ! ( thresholdText . isEmpty () ) ) && ( java.util.regex.Pattern . matches ( "[0-9]+" , thresholdText ) ) ) { threshold = java.lang.Integer . parseInt ( text ) ; } else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities . notifyUser ( ( "Illegal input for max threshold. Please specify a " + "valid threshold value. Threshold must be a positive integer." ) ) ; } } return threshold ; } 
public void changeTaskDate ( java.lang.Long taskID , java.util.Date dateOfTask ) { com.softserve.edu.entity.verification.calibration.CalibrationTask task = taskRepository . findOne ( taskID ) ; if ( ( task == null ) || ( dateOfTask == null ) ) { throw new java.lang.IllegalArgumentException () ; } task . setDateOfTask ( dateOfTask ) ; try { taskRepository . save ( task ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( e ) ; } } 
private void RenderListView ( java.util.List < com.amelendez.lgo.storage.dao.Languo > languos ) { if ( languos == null ) { languos = new java.util.ArrayList <> () ; } adapter = new com.amelendez.lgo.adapters.LanguoListAdapter ( this , languos ) ; android.widget.ListView listView = ( ( android.widget.ListView ) ( findViewById ( R.id.main_listView ) ) ) ; if ( listView != null ) { listView . setAdapter ( adapter ) ; } } 
public static java.lang.String getPrimaryFreeGroupName ( java.lang.String groupName ) { if ( groupName == null ) { return null ; } int index = groupName . indexOf ( CarbonConstants.DOMAIN_SEPARATOR ) ; if ( index > 0 ) { java.lang.String domain = groupName . substring ( 0 , index ) ; if ( UserCoreConstants.PRIMARY_DEFAULT_DOMAIN_NAME . equals ( domain ) ) { return groupName . substring ( ( index + 1 ) ) ; } } return groupName ; } 
public void setEnabled ( java.lang.Boolean enabled ) { amxBootDelay = 0 ; monitoringDelay = ( amxBootDelay ) + 5 ; if ( ( ! ( this . enabled ) ) && enabled ) { this . enabled = enabled ; bootstrapMonitoringService () ; } else if ( ( this . enabled ) && ( ! enabled ) ) { this . enabled = enabled ; shutdownMonitoringService () ; } } 
private void restoreOrCreatePresenter ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { if ( savedInstanceState != null ) { presenterUUID = ( ( java.util.UUID ) ( savedInstanceState . getSerializable ( com.kvest.mvp.PresenterActivity.KEY_PRESENTER_UUID ) ) ) ; presenter = ( ( T ) ( com.kvest.mvp.PresenterActivity . getPresenter ( presenterUUID ) ) ) ; if ( ( presenter ) != null ) { onPresenterRestored ( presenter ) ; } } if ( ( presenter ) == null ) { presenter = createPresenter () ; presenterUUID = com.kvest.mvp.PresenterActivity . addPresenter ( presenter ) ; } } 
@ java.lang.Override protected void onPostExecute ( final java.lang.Boolean success ) { mAuthTask = null ; showProgress ( false ) ; if ( success ) { fr.sims.coachingproject.service.gcmService.RegistrationGCMIntentService . startActionRegistrationGCM ( getActivity () ) ; fr.sims.coachingproject.ui.activity.MainActivity . startActivity ( getActivity () ) ; fr.sims.coachingproject.util.SharedPrefUtil . putIsFirstLaunch ( getActivity () , false ) ; if ( ( getActivity () ) != null ) { getActivity () . finish () ; } } else { mPasswordView . setError ( getString ( R.string.error_incorrect ) ) ; mPasswordView . requestFocus () ; } } 
public static void paintMultiMaps ( java.awt.Graphics2D g2 , com.wpi.cs509.teamA.bean.Path path , com.wpi.cs509.teamA.util.LinearTransform plt ) { if ( ( null == path ) || ( ( path . getNodes () . size () ) == 0 ) ) { return; } com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintPath ( path , g2 , plt ) ; com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintNodes ( path . getNodes () , g2 , PaintHelperBasics.DrawStyleEnum.BasicNode , plt ) ; com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite . paintStartEndNode ( g2 , path , plt ) ; } 
public double [] calcScores () { for ( int i = 0 ; i < ( this . nbEntries ) ; i ++ ) { for ( int j = 0 ; j < ( this . nbMetrics ) ; j ++ ) { this . matrix [ this . nbMetrics ] [ i ] += this . matrix [ j ] [ i ] ; } } return this . matrix [ this . nbMetrics ] ; } 
private void setupMessageText ( android.view.View view ) { message = ( ( android.widget.TextView ) ( view . findViewById ( R.id.message ) ) ) ; if ( ( profile ) != null ) { java.lang.String text = "Currently logged in as " + ( profile . getName () ) ; message . setText ( text ) ; } else { message . setText ( io.github.getExposure.profile.LoginFragment.LOGGED_OUT_TEXT ) ; } } 
public java.lang.String register ( javax.json.JsonObject messageObject ) { int id = this . bus . registerSender ( messageObject . getString ( "sender_class" ) , messageObject . getString ( "sender_name" ) ) ; javax.json.JsonObject response = javax.json.Json . createObjectBuilder () . add ( "type" , "register" ) . add ( "sender_id" , id ) . add ( "ack" , ( id == ( - 1 ) ? ack_error ( 400 ) : ack_ok () ) ) . build () ; return response . toString () ; } 
public void addProver ( java.lang.String proverName , java.lang.String command , boolean override ) throws exceptions.NameAlreadyInUseException { if ( ( ! override ) && ( prover.local.LocalProver.availableProvers . contains ( proverName ) ) ) throw new exceptions.NameAlreadyInUseException ( ( ( ( "Name " + proverName ) + " is already in use with command " ) + ( gui.Config . getLocalProverCommand ( proverName ) ) ) ) ; gui.Config . setLocalProverCommand ( proverName , command ) ; if ( ! ( prover.local.LocalProver.availableProvers . contains ( proverName ) ) ) prover.local.LocalProver.availableProvers . add ( proverName ) ; gui.Config . setLocalProvers ( prover.local.LocalProver.availableProvers ) ; } 
private void post ( org.daisy.common.messaging.Message.MessageBuilder builder ) { if ( ( ( props ) != null ) && ( ( props . getProperty ( "JOB_ID" ) ) != null ) ) { builder . withJobId ( props . getProperty ( "JOB_ID" ) ) ; } builder . withSequence ( ( ( sequence ) ++ ) ) ; builder . withTimeStamp ( new java.util.Date () ) ; eventBus . get () . post ( builder . build () ) ; } 
public void setRegistrationNumber ( java.lang.String registrationNumber ) { if ( ( registrationNumber == null ) || ( ! ( fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility . validateRegistrationNumber ( registrationNumber ) ) ) ) { return; } countyEditText . setText ( registrationNumber . substring ( 0 , 2 ) ) ; vesselNumberEditText . setText ( registrationNumber . substring ( 2 , 6 ) ) ; municipalityEditText . setText ( registrationNumber . substring ( 6 , registrationNumber . length () ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_restaurants ) ; butterknife.ButterKnife . bind ( this ) ; android.util.Log . d ( com.epicodus.myrestaurants.ui.RestaurantsActivity.TAG , "In RestaurantsActivity" ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent . getStringExtra ( "location" ) ; mLocationTextView . setText ( ( "Here are all the restaurants near: " + location ) ) ; getRestaurants ( location ) ; } 
@ java.lang.Override public synchronized void storeUpperLimit ( final long limit ) { DebugLogger.logger . debug ( "[PUT] Storing upper limit of {}." , limit ) ; try { cassandraTimestampStore . storeTimestampBound ( currentLimit , limit ) ; currentLimit = limit ; } catch ( java.util.ConcurrentModificationException e ) { throw new com.palantir.timestamp.MultipleRunningTimestampServiceError ( ( "CAS unsuccessful; this may indicate that another timestamp service is running against this" + ( ( " cassandra keyspace, possibly caused by multiple copies of a service running without" + " a configured set of leaders, or a CLI being run with an embedded timestamp service" ) + " against an already running service." ) ) , e ) ; } } 
private void split ( IntervalMessage message ) { java.util.Queue < PositionRequestMessage > queue = this . returnAddresses . get ( message.requestUuid ) ; if ( queue == null ) { return; } int intervalStart = message.start ; for ( PositionRequestMessage prMessage : queue ) { prMessage.sender . send ( new IntervalMessage ( this , prMessage.sender , intervalStart , ( ( intervalStart + ( prMessage.i ) ) - 1 ) , prMessage.uuid ) ) ; intervalStart += prMessage.i ; } this . returnAddresses . remove ( message.requestUuid ) ; } 
private void stateChangedInternal ( java.lang.String state , java.util.List < eu.geekhome.asymptote.model.SyncUpdate > updates ) { eu.geekhome.asymptote.model.StateSyncUpdate stateUpdate = findStateUpdate ( updates ) ; if ( stateUpdate == null ) { updates . add ( new eu.geekhome.asymptote.model.StateSyncUpdate ( state ) ) ; } else { stateUpdate . setValue ( state ) ; } } 
public boolean move ( int dx , int dy , int color ) { int newX = x ; int newY = y ; newX += ( dx * ( - 1 ) ) * color ; newY += dy * color ; if ( ( ( newX >= 0 ) && ( newX < 5 ) ) && ( ( newY >= 0 ) && ( newY < 5 ) ) ) { setPair ( newX , newY ) ; return true ; } return false ; } 
public void addDeath ( final java.lang.String player , final java.lang.Integer playtime ) { mysqlQuery ( ( ( ( ( ( ( "UPDATE `" + ( org.mcsg.survivalgames.points.PointSystem . getInstance () . playerStatTable ) ) + "` SET `playtime` = `playtime`+" ) + playtime ) + ", `deaths` = `deaths`+1 WHERE `name` = '" ) + player ) + "'" ) ) ; org.mcsg.survivalgames.points.PointQueries.cachedStats . get ( player . toLowerCase () ) . addDeath () ; } 
public void print ( char [] [] map ) { for ( int i = 0 ; i < ( h ) ; i ++ ) { for ( int j = 0 ; j < ( w ) ; j ++ ) { java.lang.System.out . print ( map [ i ] [ j ] ) ; } java.lang.System.out . println () ; } java.lang.System.out . println () ; } 
@ org.junit.Test public void testDrawFaceUpTrainCards ( ) throws java.lang.Exception { tickets.scacciot17.tickettooride.ttr.TTRState myState = new tickets.scacciot17.tickettooride.ttr.TTRState () ; tickets.scacciot17.tickettooride.ttr.FaceUpDeck faceUpDeck = myState . getFiveUp () ; int size = faceUpDeck . size () ; for ( int i = 0 ; i < size ; i ++ ) { assertNotEquals ( faceUpDeck . getCards () . get ( i ) , null ) ; } } 
public void setTemperature ( java.lang.String h ) { if ( h != null ) { strTemperature = h ; int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } 
public static void reverseStatement ( java.lang.String userInput ) { java.lang.String inputReversed ; inputReversed = "" ; for ( int i = ( userInput . length () ) - 1 ; i >= 0 ; i -- ) { inputReversed = inputReversed + ( userInput . charAt ( i ) ) ; } java.lang.System.out . println ( inputReversed ) ; } 
private boolean isEvictableHeapPercentage ( final com.hazelcast.map.impl.MapContainer mapContainer ) { final long usedHeapSize = getUsedHeapSize ( mapContainer ) ; if ( usedHeapSize == ( - 1L ) ) { return false ; } final com.hazelcast.config.MaxSizeConfig maxSizeConfig = mapContainer . getMapConfig () . getMaxSizeConfig () ; final float maxSize = com.hazelcast.map.impl.eviction.MaxSizeChecker . getApproximateMaxSize ( maxSizeConfig . getSize () ) ; final long total = getTotalMemory () ; return maxSize < ( ( ( 1.0F * ( com.hazelcast.map.impl.eviction.MaxSizeChecker.ONE_HUNDRED_PERCENT ) ) * usedHeapSize ) / total ) ; } 
public void loadPosition ( int x , int y ) { ensureSafeWindowPosition ( x , y ) ; org.micromanager.internal.utils.DefaultUserProfile profile = org.micromanager.internal.utils.DefaultUserProfile . getInstance () ; setBounds ( profile . getInt ( this . getClass () , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_X ) ) , x ) , profile . getInt ( this . getClass () , ( ( prefPrefix_ ) + ( org.micromanager.internal.utils.MMFrame.WINDOW_Y ) ) , y ) , getWidth () , getHeight () ) ; } 
public java.lang.String getArrivalOffset () { if ( ( arrivalOffset ) >= 0 ) { return java.lang.String . format ( "%02d:%02d:%02d" , ( ( arrivalOffset ) / 3600 ) , ( ( arrivalOffset ) / 60 ) , ( ( arrivalOffset ) % 60 ) ) ; } return null ; } 
@ java.lang.Override public int compare ( com.adm.scheduler.message.Message o1 , com.adm.scheduler.message.Message o2 ) { if ( ( priority . get ( o1 . getGroup () ) ) != null ) return 1 ; if ( ( priority . get ( o2 . getGroup () ) ) != null ) return - 1 ; return 1 ; } 
@ java.lang.Override public void run () { java.lang.String [] tagArray = new java.lang.String [] { "example_tag" } ; boolean success = com.appoxee.Appoxee . addTagsToDevice ( new java.util.ArrayList < java.lang.String > ( java.util.Arrays . asList ( tagArray ) ) ) ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "custom field set success: " + success ) ) ; java.util.List < java.lang.String > tags = com.appoxee.Appoxee . getTagList () ; android.util.Log . d ( gigigo.com.orchextrasdk.MainActivity.TAG , ( "tags list: " + tags ) ) ; } 
@ java.lang.Override public boolean shouldOverrideUrlLoading ( android.webkit.WebView view , java.lang.String url ) { if ( ( ( url . startsWith ( "mailto:" ) ) || ( url . startsWith ( "geo:" ) ) ) || ( url . startsWith ( "tel:" ) ) ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( url ) ) ; startActivity ( intent ) ; } return true ; } 
public boolean judgeUserExist ( java.lang.String name ) { java.lang.String sql = ( "select * from User where NAME='" + name ) + "'" ; boolean result = false ; try { java.sql.PreparedStatement pstmt = conn . prepareStatement ( sql ) ; java.sql.ResultSet rs = pstmt . executeQuery () ; if ( rs . next () ) result = true ; pstmt . close () ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } return result ; } 
public com.pactera.web.model.Department findById ( java.lang.Integer deptno ) throws com.pactera.web.exception.ServiceException { final java.lang.String METHOD_NAME = "findById" ; log . debug ( ( METHOD_NAME + " begin" ) ) ; log . debug ( ( ( METHOD_NAME + " deptno : " ) + deptno ) ) ; com.pactera.web.model.Department dept = departmentDAO . getOne ( deptno ) ; log . debug ( ( METHOD_NAME + " end" ) ) ; return dept ; } 
public void applyHpBonus ( org.bukkit.entity.LivingEntity entity ) { if ( ! ( entity . isValid () ) ) { return; } java.lang.Integer hpToAdd = getHpBonus ( entity ) ; entity . setMaxHealth ( ( ( entity . getMaxHealth () ) + hpToAdd ) ) ; entity . setHealth ( entity . getMaxHealth () ) ; } 
public main.State executeCommand ( java.lang.String commandText , java.lang.String directory ) throws java.io.IOException , json.JSONException { completeState . clearStatusMessage () ; command.Command userCommand ; userCommand = parser . parseCommand ( commandText ) ; if ( null == userCommand ) { completeState . setStatusMessage ( State.MESSAGE_PARSE_ERROR ) ; return completeState ; } userCommand . execute ( completeState ) ; assert isValidCommand ( userCommand ) ; storage . stateToStorage ( completeState , directory ) ; return completeState ; } 
@ java.lang.Override public void run () { java.lang.String s = "" ; for ( int i = 0 ; i < ( remoteWines . size () ) ; i ++ ) { s = ( s + ( remoteWines . get ( i ) . toString () ) ) + "\n" ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/update" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage update ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String utoken , @ org.springframework.web.bind.annotation.RequestParam java.lang.String leader ) { if ( ( org.apache.commons.lang3.StringUtils . isBlank ( utoken ) ) || ( org.apache.commons.lang3.StringUtils . isBlank ( leader ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST ; com.alibaba.fastjson.JSONObject leaderJson = com.alibaba.fastjson.JSON . parseObject ( leader ) ; leaderJson . put ( "userId" , userServiceApi.USER . get ( utoken ) . getId () ) ; userServiceApi.LEADER . update ( com.alibaba.fastjson.JSON . toJavaObject ( leaderJson , cn.momia.api.user.leader.Leader . class ) ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS ; } 
boolean doubleTapAttack ( java.lang.String [] ad ) { Config.runFlaskSuppression = true ; long tapTime = 400 ; if ( ( ( java.lang.System . currentTimeMillis () ) - ( doubleTapTime ) ) < tapTime ) { multiHotkeyFix = true ; if ( soakAttack ( ad ) ) return false ; wdgmsg ( "act" , ( ( java.lang.Object [] ) ( ad ) ) ) ; if ( ( ui.fight ) != null ) { ui.fight . attackCurrent () ; } return true ; } doubleTapTime = java.lang.System . currentTimeMillis () ; return false ; } 
private void updateOkDisabled () { okDisabled . setValue ( ( ( ( ( ( selectedOfficer ) == null ) || ( ( selectedAthletes . size () ) < ( Game.MIN_PARTICIPANTS ) ) ) || ( ( selectedAthletes . size () ) > ( Game.MAX_PARTICIPANTS ) ) ) || ( ( predictedAthlete ) == null ) ) ) ; } 
public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_A ) ) { right = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_D ) ) { left = true ; } if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_W ) ) { up = true ; } else if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_S ) ) { down = true ; } } 
private int [] getDim ( int elements ) { int xDim = ( ( int ) ( java.lang.Math . ceil ( java.lang.Math . sqrt ( elements ) ) ) ) ; int yDim = xDim ; while ( ( xDim * ( yDim - 1 ) ) >= elements ) { yDim -- ; } return new int [] { xDim , yDim } ; } 
private gr.uom.java.ast.MethodInvocationObject recurseDelegations ( gr.uom.java.ast.MethodInvocationObject methodInvocation , gr.uom.java.ast.SystemObject system ) { gr.uom.java.ast.MethodInvocationObject delegation ; if ( ( ( ( delegation = system . containsDelegate ( methodInvocation ) ) != null ) && ( ( system . getClassObject ( delegation . getOriginClassName () ) ) != null ) ) && ( ! ( delegation . equals ( methodInvocation ) ) ) ) return recurseDelegations ( delegation , system ) ; else return methodInvocation ; } 
@ java.lang.Override public void run () { try { java.lang.Object last = null ; while ( ( last == null ) || ( ! ( last . equals ( "END" ) ) ) ) { last = nextEvent () ; instantiateService () . printNames () ; } } catch ( final java.lang.Throwable cause ) { cause . printStackTrace () ; } } 
@ java.lang.Override public int compareTo ( org.sosy_lab.cpachecker.pcc.strategy.partitioning.BestFirstWeightedBalancedGraphPartitioner.NodePriority compNode ) { if ( compNode == null ) { return - 1 ; } if ( ( this . getPriority () ) != ( compNode . getPriority () ) ) { return ( this . getPriority () ) - ( compNode . getPriority () ) ; } else { int n1 = this . getNode () . getNodeNumber () ; int n2 = compNode . getNode () . getNodeNumber () ; return n2 - n1 ; } } 
public static java.lang.String right ( java.lang.String s , int length ) { if ( length == 0 ) return "" ; if ( ( s . length () ) < length ) return s ; else if ( length > 0 ) return s . substring ( ( ( s . length () ) - length ) , s . length () ) ; else { return s . substring ( ( - length ) , s . length () ) ; } } 
@ java.lang.Override public final java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > getNodeRules ( final byte net , final com.github.sdnwiselab.sdnwise.util.NodeAddress dst ) { java.util.List < com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry > list = new java.util.ArrayList <> () ; com.github.sdnwiselab.sdnwise.flowtable.FlowTableEntry fte ; int i = 0 ; while ( ( fte = getNodeRule ( net , dst , i ) ) != null ) { list . add ( i , fte ) ; i ++ ; } return list ; } 
public void addToMyMaps ( java.util.List < mikheev.konstantin.huntmap.models.RegionItem > regionItemListFromFragment ) { for ( mikheev.konstantin.huntmap.models.RegionItem regionItem : regionItemListFromFragment ) { if ( ( regionItem != null ) && ( regionItem . getIsBought () ) ) { myRegionItemsMap . addRegionItem ( regionItem . getRegionId () , regionItem ) ; } } android.support.v4.app.Fragment fragmentMyMaps = myViewPagerAdapter . getFragmentByPosition ( 0 ) ; ( ( mikheev.konstantin.huntmap.fragments.MyMapsFragment ) ( fragmentMyMaps ) ) . updateMyMapsItems ( myRegionItemsMap . getRegionItemsList () ) ; } 
public void update () { synchronized ( conversations ) { for ( com.chat.server.conversations.Conversation conversation : conversations ) { if ( conversation . isEmpty () ) { conversations . remove ( conversation ) ; idGenerator . returnID ( conversation . getID () ) ; com.chat.server.utils.Logger . log ( ( ( "Conversation " + ( conversation . getID () ) ) + " is empty, deleting" ) ) ; } } } } 
public double getDropRate () { double prev = utilSpace . getUtility ( bids . get ( 0 ) ) ; double average = 0 ; for ( int i = 1 ; i < ( bids . size () ) ; i ++ ) { double curr = utilSpace . getUtility ( bids . get ( i ) ) ; average += curr - prev ; prev = curr ; } return average / ( ( bids . size () ) - 1 ) ; } 
@ java.lang.Override public int compare ( datastructure.DFSCode e1 , datastructure.DFSCode e2 ) { return ( e1.a ) < ( e2.a ) ? - 1 : ( e1.a ) == ( e2.a ) ? ( e1.y ) < ( e2.y ) ? - 1 : ( e1.y ) == ( e2.y ) ? 0 : 1 : 1 ; } 
@ java.lang.Override public void onPreReceive ( final org.eclipse.jgit.transport.ReceivePack rp , final java.util.Collection < org.eclipse.jgit.transport.ReceiveCommand > commands ) { fs . lock () ; if ( ( clusterService ) != null ) { clusterService . lock () ; } for ( final org.eclipse.jgit.transport.ReceiveCommand command : commands ) { final org.eclipse.jgit.revwalk.RevCommit lastCommit = org.uberfire.java.nio.fs.jgit.util.JGitUtil . getLastCommit ( fs . gitRepo () , command . getRefName () ) ; oldTreeRefs . put ( command . getRefName () , lastCommit ) ; } } 
public boolean setUnit ( int index , kingofthehill.domain.Unit unit ) { if ( ( getUnit ( index ) ) != null ) { return false ; } try { if ( unit != null ) { this . units [ index ] = unit ; unit . setBase ( this ) ; return true ; } else { return false ; } } catch ( java.lang.Exception ex ) { return false ; } } 
protected void assertUtilsClass ( java.lang.Class < ? > c ) { java.lang.reflect.Constructor ctor = null ; try { ctor = c . getDeclaredConstructor () ; assertTrue ( java.lang.reflect.Modifier . isPrivate ( ctor . getModifiers () ) ) ; ctor . setAccessible ( true ) ; try { ctor . newInstance () ; } catch ( java.lang.ReflectiveOperationException e ) { fail ( "Unable to instantiate!" ) ; } } catch ( java.lang.NoSuchMethodException e ) { fail ( ( "No default constructor defined for class " + ( c . getCanonicalName () ) ) ) ; } } 
@ android.support.annotation.MainThread public void setStatus ( @ org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.PlayerState int argPlayerStatus ) { if ( ( getEpisode () ) == null ) { return; } if ( getEpisode () . isPlaying () ) { if ( IsDisplayingPlayIcon () ) { animateChangeFrom ( PlayPauseDrawable.IS_PAUSED ) ; } } else { if ( ! ( IsDisplayingPlayIcon () ) ) { animateChangeFrom ( PlayPauseDrawable.IS_PLAYING ) ; } } mStatus = argPlayerStatus ; if ( ( mStatus ) == ( org.bottiger.podcast.player.exoplayer.ExoPlayerWrapper.STATE_PREPARING ) ) { mStartTime = java.lang.System . currentTimeMillis () ; } this . invalidate () ; } 
@ java.lang.Override public void execute () { final magic.ai.MMAB.MMABWorker worker = new magic.ai.MMAB.MMABWorker ( java.lang.Thread . currentThread () . getId () , workerGame , scoreBoard , CHEAT ) ; worker . evaluateGame ( achoice , scoreRef . get () , ( ( java.lang.System . nanoTime () ) + slice ) ) ; scoreRef . update ( achoice.aiScore . getScore () ) ; } 
@ java.lang.Override public void export ( java.io.OutputStream os ) { java.io.Writer writer = null ; try { writer = new java.io.OutputStreamWriter ( os , "UTF8" ) ; export ( writer ) ; } catch ( java.lang.Exception e ) { log . error ( ( "Failed to write summary csv data: " + ( this ) ) , e ) ; } finally { if ( writer != null ) { try { writer . close () ; } catch ( java.lang.Throwable e ) {} } } } 
private static < T extends java.lang.Comparable < ? super T > > void bestSort ( T [] seq , T [] auxSeq , int lo , int hi ) { final int altSortThreshold = 7 ; int elementsToSort = ( hi - lo ) + 1 ; if ( elementsToSort > altSortThreshold ) edu.mit.ita.util.Arrays . mergeSort ( seq , auxSeq , lo , hi ) ; else edu.mit.ita.util.Arrays . insertionSort ( seq , lo , hi ) ; } 
public void removeController ( java.lang.Object controller ) { removeControllerBinds ( notifybinds , controller ) ; removeControllerBinds ( propertybinds , controller ) ; removeControllerBinds ( propertiesbinds , controller ) ; removeControllerBinds ( pathbinds , controller ) ; removeControllerBinds ( timelinenotifybinds , controller ) ; org.springfield.fs.FsNode node = new org.springfield.fs.FsNode ( "bind" , "1" ) ; node . setProperty ( "action" , "remove controller" ) ; node . setProperty ( "controller" , ( "" + ( controller . hashCode () ) ) ) ; notify ( "/shared/internal" , node ) ; } 
@ java.lang.Override public void onNavigationBlocked ( int position , int direction ) { android.view.View contentView = findViewById ( android.R.id.content ) ; if ( contentView != null ) { com.heinrichreimersoftware.materialintro.slide.Slide slide = getSlide ( position ) ; if ( slide == permissionsSlide ) { android.support.design.widget.Snackbar . make ( contentView , R.string.label_grant_permissions , Snackbar.LENGTH_LONG ) . show () ; } else if ( slide == loginSlide ) { android.support.design.widget.Snackbar . make ( contentView , R.string.label_fill_out_form , Snackbar.LENGTH_LONG ) . show () ; } } } 
public boolean startup () { boolean result = ( ( ( _client . open () ) && ( _directoryDbCtx . open ( _config . getDirDbFilePath () ) ) ) && ( _notificationDbCtx . open ( _config . getNotifDbFilePath () ) ) ) && ( _registrator . register () ) ; if ( result ) { result &= _synchronizationWorker . start () ; } return result ; } 
@ java.lang.Override public io.subutai.common.environment.Environment loadEnvironment ( final java.lang.String environmentId ) throws io.subutai.common.environment.EnvironmentNotFoundException { com.google.common.base.Preconditions . checkNotNull ( environmentId , "Invalid environment id" ) ; io.subutai.core.environment.impl.entity.EnvironmentImpl environment = environmentAdapter . get ( environmentId ) ; if ( environment != null ) { return environment ; } environment = environmentService . find ( environmentId ) ; if ( environment != null ) { setTransientFields ( com.google.common.collect.Sets . < io.subutai.common.environment.Environment > newHashSet ( environment ) ) ; return environment ; } throw new io.subutai.common.environment.EnvironmentNotFoundException () ; } 
private void configureViewHolderSimpleStory ( com.codepath.timeline.adapters.StoriesAdapter.ViewHolderSimpleStory holder , int position ) { com.codepath.timeline.models.Story story = mStories . get ( position ) ; android.util.Log . d ( "DEBUG" , story . toString () ) ; if ( story != null ) { holder . getTvStoryTitle () . setText ( story . getStoryTitle () ) ; com.bumptech.glide.Glide . with ( context ) . load ( story . getBackgroundImageUrl () ) . fitCenter () . bitmapTransform ( new jp.wasabeef.glide.transformations.RoundedCornersTransformation ( context , 25 , 0 ) ) . into ( holder . getIvBackgroundImage () ) ; } } 
@ java.lang.Override public boolean generateIntegrityResults ( final java.lang.String endpointId ) throws java.lang.Exception { try { createContentletTemporaryTable ( endpointId ) ; processContentletIntegrityByStructureType ( endpointId , Structure.STRUCTURE_TYPE_FILEASSET ) ; com.dotmarketing.common.db.DotConnect dc = new com.dotmarketing.common.db.DotConnect () ; return ( ( java.lang.Long ) ( dc . getRecordCount ( getIntegrityType () . getResultsTableName () ) ) ) > 0 ; } catch ( java.lang.Exception e ) { throw new java.lang.Exception ( "Error running the File Assets Integrity Check" , e ) ; } } 
@ java.lang.Override public boolean isDone ( core.game.Game game ) { boolean ended = super . isFinished ( game ) ; if ( ended ) return true ; if ( ( ( ( itype ) == ( - 1 ) ) && ( ( ( game . getNumSprites ( itype ) ) - ( game . getNumDisabledSprites ( itype ) ) ) <= ( limit ) ) ) && ( canEnd ) ) { countScore ( game ) ; return true ; } return false ; } 
private void highlight ( final org.kie.workbench.common.stunner.core.graph.Node node , final org.kie.workbench.common.stunner.core.graph.Edge < org.kie.workbench.common.stunner.core.graph.content.view.View < ? > , org.kie.workbench.common.stunner.core.graph.Node > connector , final boolean valid ) { canvasHighlight . unhighLight () ; if ( ( null != node ) && valid ) { canvasHighlight . highLight ( node ) ; } else if ( null != node ) { canvasHighlight . invalid ( node ) ; } } 
public org.openlmis.distribution.dto.DistributionDTO getDistribution ( org.openlmis.distribution.domain.Distribution arg , java.lang.Long userId ) { org.openlmis.distribution.domain.Distribution distribution = getFullSyncedDistribution ( arg ) ; if ( distribution != null ) { if ( userId != null ) { insertEditInProgress ( userId , distribution . getId () ) ; } java.util.Map < java.lang.Long , org.openlmis.distribution.domain.FacilityDistribution > facilityDistributionMap = facilityDistributionService . getData ( distribution , true ) ; distribution . setFacilityDistributions ( facilityDistributionMap ) ; return distribution . transform () ; } return null ; } 
private double calculateSquaredNorm ( final T row ) { double norm = 0.0 ; for ( int i = 1 ; i <= ( m_nFets ) ; i ++ ) { double fet = row . getFeature ( i ) ; norm += fet * fet ; } return norm ; } 
private java.lang.String getExtension ( final java.lang.String filename ) { final int i = filename . lastIndexOf ( '.' ) ; if ( ( i > 0 ) && ( i < ( ( filename . length () ) - 1 ) ) ) { return filename . substring ( ( i + 1 ) ) . toLowerCase () ; } return null ; } 
public boolean hasUpgrade ( int rarity , Lib.summon.Awakening [] awakening ) { for ( Lib.summon.Awakening a : awakening ) { for ( int i = 0 ; i < ( a.units.length ) ; i ++ ) { if ( a.units [ i ] . name . equals ( name ) ) { return hasUpgrade ( rarity , a.rarityAwakened [ i ] ) ; } } } return false ; } 
private java.lang.String getNdtDocs ( java.util.List < com.lvg.weldercenter.ui.entities.report.NDTDocumentUI > ndtDocumentUIList ) { if ( ndtDocumentUIList == null ) return constants.GENERIC_NULL_FIELD ; java.lang.StringBuilder result = new java.lang.StringBuilder () ; for ( com.lvg.weldercenter.ui.entities.report.NDTDocumentUI ndt : ndtDocumentUIList ) { result . append ( ndt . getName () ) ; result . append ( constants.GENERIC_SEMICOLON_SEPARATOR ) ; } deleteLastSeparator ( result , constants.GENERIC_SEMICOLON_SEPARATOR ) ; return result . toString () ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.String state = new java.lang.String () ; if ( ( isStatus () ) == true ) state = "on" ; else state = "off" ; return ( ( ( ( ( ( ( title ) + "," ) + ( author ) ) + "," ) + state ) + "," ) + ( dueDate . format ( formatter ) ) ) + "\n" ; } 
@ java.lang.Override public void onSuccess ( int statusCode , cz.msebera.android.httpclient.Header [] headers , org.json.JSONObject response ) { com.codepath.apps.mysimpletweet.models.Tweet tweet = new com.codepath.apps.mysimpletweet.models.Tweet ( response ) ; tweet . save () ; tweet . getUser () . save () ; if ( ( listener ) != null ) { listener . onCreateSuccess ( tweet . getId () ) ; listener = null ; } } 
public de.tuhh.diss.plotbot.Plottable select () { int selection = - 1 ; do { selection = menu . select () ; } while ( selection < 0 ) ; while ( Button.ENTER . isDown () ) {} de.tuhh.diss.plotbot.Plottable toDraw = null ; if ( selection == 0 ) { toDraw = new de.tuhh.diss.plotbot.Anchor () ; } if ( selection == 1 ) {} return toDraw ; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String CREATE_WIFIS_TABLE = ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.TABLE_WIFIS ) ) + "(" ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_ID ) ) + " INTEGER PRIMARY KEY," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_NAME ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_BSSID_NO ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_SILENCE ) ) + " TEXT," ) + ( com.example.iit2014094.autotaskerapp.DatabaseHandler.KEY_AUTO_SMS ) ) + " TEXT" ) + ")" ; db . execSQL ( CREATE_WIFIS_TABLE ) ; } 
public static java.util.List < Dimension > getHorizontalDimensions ( Dimension dime ) { java.util.List < Dimension > boxDimes = new java.util.ArrayList < Dimension > () ; for ( int y = 0 ; y < 9 ; y ++ ) { if ( y != ( dime.y ) ) { Dimension dimeCurrent = new Dimension ( dime.x , y ) ; boxDimes . add ( dimeCurrent ) ; } } return boxDimes ; } 
private int getUnitCount ( SCBot.UnitType type , SCBot.UnitType type2 ) { int count = 0 ; for ( SCBot.Unit u : this . self . getUnits () ) { if ( ( ( u . getType () ) == type ) && ( ( type2 == null ) || ( ( u . getBuildType () ) == type2 ) ) ) { count ++ ; } } return count ; } 
private void generateTraps ( int limit ) { int amountOfButtons = 10 ; int trapNumber = newRandomNumberBetween ( amountOfButtons ) ; java.lang.String logMessage = getResources () . getString ( R.string.log_trap_id ) ; int amountOfTraps = 3 ; for ( int i = 0 ; i < amountOfTraps ; i ++ ) { while ( traps . contains ( trapNumber ) ) { trapNumber = newRandomNumberBetween ( amountOfButtons ) ; } android.util.Log . i ( logMessage , java.lang.Integer . toString ( trapNumber ) ) ; traps . add ( trapNumber ) ; } } 
private static void validateAccessToken ( ) throws com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException { java.lang.String accessToken = com.mapbox.mapboxsdk.Mapbox.INSTANCE.accessToken ; if ( ( android.text.TextUtils . isEmpty ( accessToken ) ) || ( ( ! ( accessToken . toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) . startsWith ( "pk." ) ) ) && ( ! ( accessToken . toLowerCase ( MapboxConstants.MAPBOX_LOCALE ) . startsWith ( "sk." ) ) ) ) ) { throw new com.mapbox.mapboxsdk.exceptions.MapboxConfigurationException () ; } } 
public boolean addUser ( java.lang.String username , java.lang.String password ) throws java.sql.SQLException { java.sql.Statement stmt = conn . createStatement () ; boolean success = stmt . execute ( ( ( ( ( "insert into TTEDB.Users (UserName, UserPW) values ('" + username ) + "', '" ) + password ) + "')" ) ) ; stmt . close () ; conn . close () ; return success ; } 
@ java.lang.Override public void close ( ) throws java.sql.SQLException { com.mysql.jdbc.MySQLConnection locallyScopedConn = this . connection ; if ( locallyScopedConn == null ) { return; } synchronized ( locallyScopedConn . getConnectionMutex () ) { if ( ( ( this . isCached ) && ( isPoolable () ) ) && ( ! ( this . isClosed ) ) ) { clearParameters () ; this . isClosed = true ; this . connection . recachePreparedStatement ( this ) ; return; } this . isClosed = false ; realClose ( true , true ) ; } } 
void enqueue ( org.sleuthkit.datamodel.FsContent fsContent , java.util.List < org.sleuthkit.autopsy.ingest.IngestServiceFsContent > services ) { org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit < org.sleuthkit.datamodel.FsContent , org.sleuthkit.autopsy.ingest.IngestServiceFsContent > found = findFsContent ( fsContent ) ; if ( found != null ) { found . addAll ( services ) ; } else { found = new org.sleuthkit.autopsy.ingest.IngestManager.QueueUnit < org.sleuthkit.datamodel.FsContent , org.sleuthkit.autopsy.ingest.IngestServiceFsContent > ( fsContent , services ) ; fsContentUnits . add ( found ) ; } } 
public java.lang.Float get () { if ( ( getIndex ) == ( putIndex ) ) { return null ; } else { getIndex = ( ( getIndex ) + 1 ) % ( capacity ) ; float result = data [ getIndex ] ; return result ; } } 
private static java.lang.String removeCommandWord ( java.lang.String userInput ) { java.lang.String [] inputArray = userInput . split ( parser.EventParser.SYMBOL_WHITESPACE ) ; java.lang.String remainingText = parser.EventParser.SYMBOL_EMPTY ; if ( ( inputArray.length ) >= ( parser.EventParser.ARRAY_MINIMUM_LENGTH ) ) { for ( int i = 1 ; i < ( inputArray.length ) ; i ++ ) { remainingText += inputArray [ i ] ; remainingText += parser.EventParser.SYMBOL_WHITESPACE ; } } return remainingText ; } 
@ java.lang.Override public void changed ( com.couchbase.lite.LiveQuery.ChangeEvent event ) { if ( ( event . getError () ) != null ) { throw new java.lang.RuntimeException ( event . getError () ) ; } if ( ( event . getRows () . getCount () ) == 2 ) { countDownLatch . countDown () ; } } 
private com.graphhopper.routing.util.FlagEncoder getEncoder ( java.lang.String name , boolean throwExc ) { for ( com.graphhopper.routing.util.FlagEncoder encoder : edgeEncoders ) { if ( name . equalsIgnoreCase ( encoder . toString () ) ) return encoder ; } if ( throwExc ) throw new java.lang.IllegalArgumentException ( ( ( ( "Encoder for " + name ) + " not found. Existing: " ) + ( toDetailsString () ) ) ) ; return null ; } 
public boolean paste ( com.mauriciotogneri.fileexplorer.models.FileInfo target ) { boolean allPasted = true ; try { for ( com.mauriciotogneri.fileexplorer.models.FileInfo fileInfo : items ) { allPasted &= fileInfo . copy ( target , ( ( mode ) == ( com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.CUT ) ) ) ; } } catch ( java.lang.Exception e ) {} items . clear () ; mode = com.mauriciotogneri.fileexplorer.models.Clipboard.Mode.NONE ; parent = null ; return allPasted ; } 
public void selectPatient ( java.lang.String Patient ) { org.openqa.selenium.WebElement lastElement = null ; for ( org.openqa.selenium.WebElement patient : patient_list ) { if ( ( patient . findElement ( org.openqa.selenium.By . cssSelector ( ".patient-id" ) ) . getText () . contains ( Patient ) ) || ( patient . findElement ( org.openqa.selenium.By . cssSelector ( ".patient-name" ) ) . getText () . contains ( Patient ) ) ) { lastElement = patient ; } } if ( lastElement != null ) lastElement . click () ; return; } 
public static java.lang.String setLetters ( java.lang.String fullName ) { java.lang.String [] names = fullName . split ( " " ) ; java.lang.String letters = "" ; for ( int i = 0 ; i < ( names.length ) ; i ++ ) { if ( i == 2 ) break; letters += names [ i ] . charAt ( 0 ) ; } return letters . toUpperCase () ; } 
public void addStudentWithId ( int id ) { for ( edu.virginia.bookmark.Team team : teams ) { if ( team . containsStudentWithId ( id ) ) { java.lang.System.out . println ( ( "Adding a Student From Team " + ( team . getName () ) ) ) ; if ( ( activeTurnTeamId ) < 0 ) { activeTurnTeamId = team.id ; } clearUpToDateStatus () ; return; } } } 
private void handleSignInResult ( com.google.android.gms.auth.api.signin.GoogleSignInResult result ) { android.util.Log . d ( com.ishaan.todolist.Login.TAG , ( "handleSignInResult:" + ( result . isSuccess () ) ) ) ; if ( result . isSuccess () ) { com.google.android.gms.auth.api.signin.GoogleSignInAccount acct = result . getSignInAccount () ; android.util.Log . d ( com.ishaan.todolist.Login.TAG , acct . getEmail () ) ; updateUI ( true ) ; } else { updateUI ( false ) ; } } 
private boolean addToLocalActiveView ( java.net.InetAddress peer ) { if ( localDatacenterView . contains ( peer ) ) return false ; localDatacenterView . addLast ( peer ) ; if ( ( localDatacenterView . size () ) > ( endpointStateSubscriber . fanout ( datacenter , datacenter ) ) ) expungeNode ( localDatacenterView . removeFirst () , datacenter ) ; return true ; } 
private void mergeLanguageMap ( java.util.concurrent.ConcurrentHashMap < java.lang.String , java.lang.Integer > tenMinLanguageMap ) { for ( java.lang.String languageName : tenMinLanguageMap . keySet () ) { int languageRepeatedInThisHour = 0 ; int languageRepeatedInTenMins ; if ( languageMap . containsKey ( languageName ) ) { languageRepeatedInThisHour = languageMap . get ( languageName ) ; } languageRepeatedInTenMins = tenMinLanguageMap . get ( languageName ) ; languageMap . put ( languageName , ( languageRepeatedInTenMins + languageRepeatedInThisHour ) ) ; } } 
private boolean containsLinkedResource ( java.util.List < org.eclipse.core.resources.IResource > resources ) { for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isLinked () ) { return true ; } } return false ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks . clear () ; if ( ( dataSnapshot . getValue () ) != null ) { for ( com.google.firebase.database.DataSnapshot taskSnapshot : dataSnapshot . getChildren () ) { edu.uw.dengz6.checkmate.TaskData task = taskSnapshot . getValue ( edu.uw.dengz6.checkmate.TaskData . class ) ; if ( ! ( task.isCompleted ) ) { edu.uw.dengz6.checkmate.TaskAllFragment.tasks . add ( task ) ; } } } adapter . notifyDataSetChanged () ; progressDialog . dismiss () ; } 
private void validate () { if ( ( ! ( containsMacro ( format ) ) ) && ( ! ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS . contains ( format ) ) ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . format ( "Invalid format '%s'. Must be one of %s" , format , com.google.common.base.Joiner . on ( ',' ) . join ( co.cask.hydrator.plugin.spark.FileStreamingSource.Conf.FORMATS ) ) ) ; } getSchema () ; } 
public boolean editCommand ( java.lang.String modType , java.lang.String newValue , me.krickl.memebotj.User.UserHandler sender ) { if ( ( commandHandler ) == null ) {} boolean success = false ; success = commandHandler . editCommand ( modType , newValue , sender ) ; commandName = commandHandler . getCommandName () ; return success ; } 
@ java.lang.Override public boolean sendPaymentReminder ( int uid , int sid , boolean type , int cuid ) { com.udoo.dal.entities.Payment payment = paymentRepository . findTopByUidAndSidAndTypeAndStateOrderByPidDesc ( uid , sid , type , STATE_RESERVE ) ; return ( type ? ( offerRepository . findByOid ( sid ) . getUid () ) == cuid : ( requestRepository . findByRid ( sid ) . getUid () ) == cuid ) && ( this . savePayment ( payment , STATE_REMIND ) ) ; } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { db . execSQL ( com.example.mbodziony.datecounter.DatabaseManager.DB_DROP_DATECOUNTERS_TABLE ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , "Database updating..." ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , ( ( ( ( ( "Table " + ( com.example.mbodziony.datecounter.DatabaseManager.DB_DATECOUNTERS_TABLE ) ) + " updated from ver. " ) + oldVersion ) + " to ver. " ) + newVersion ) ) ; android.util.Log . d ( com.example.mbodziony.datecounter.DatabaseManager.DEBUG_TAG , "All data is lost!" ) ; onCreate ( db ) ; } 
@ java.lang.Override public void onAuthStateChanged ( @ android.support.annotation.NonNull com.google.firebase.auth.FirebaseAuth firebaseAuth ) { com.google.firebase.auth.FirebaseUser user = firebaseAuth . getCurrentUser () ; if ( user != null ) { if ( LOGGING ) { it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration . setLogged ( true ) ; it.uniba.di.ivu.sms16.gruppo3.fasterfood.AppConfiguration . setUser ( user . getEmail () ) ; android.support.design.widget.Snackbar . make ( getView () , getResources () . getString ( R.string.logged_in ) , Snackbar.LENGTH_LONG ) . show () ; activity . checkLogged () ; LOGGING = false ; activity . onBackPressed () ; } else { activity . onBackPressed () ; } } } 
private void verifyVisibility ( @ javax.annotation.Nonnull final edu.umd.cs.findbugs.ba.XMethod invokedMethod ) { if ( ( checkVisibility ( invokedMethod ) ) && ( checkAnnotated ( invokedMethod ) ) ) { final edu.umd.cs.findbugs.BugInstance bug = new edu.umd.cs.findbugs.BugInstance ( this , "GUAVA_UNEXPECTED_ACCESS_TO_VISIBLE_FOR_TESTING" , HIGH_PRIORITY ) ; bug . addCalledMethod ( this ) . addClassAndMethod ( this ) . addSourceLine ( this ) ; bugReporter . reportBug ( bug ) ; } } 
@ java.lang.Override protected java.lang.Object doInBackground ( java.lang.Object [] objects ) { java.lang.String methodName = "insertPersonDetails" ; webService = new com.idbi.app.network.SOAPWebservice ( mContext ) ; com.idbi.app.model.Output object = null ; getNomineeData () ; if ( ( ( nomineeDetailsList ) != null ) && ( ( nomineeDetailsList . size () ) > 0 ) ) { for ( int i = 0 ; i < ( nomineeDetailsList . size () ) ; i ++ ) { object = webService . insertUpdatePersonalDetails ( nomineeDetailsList . get ( i ) , methodName ) ; } } return object ; } 
public static final java.lang.String getLang ( omnikryptec.lang.Language language , java.lang.String key , java.lang.String defaultValue ) { if ( language == null ) { return defaultValue ; } if ( omnikryptec.lang.LanguageManager.isCollecting ) { omnikryptec.lang.LanguageManager.languageDefault . put ( key , defaultValue ) ; } return language . getProperty ( key , defaultValue ) ; } 
int count ( ) throws java.lang.IllegalAccessException { android.database.Cursor cursor = null ; int count = 0 ; try { cursor = buildCount () ; if ( cursor == null ) { throw new java.lang.IllegalAccessException ( "result has been cosumed, please do a query again." ) ; } if ( cursor . moveToFirst () ) count = cursor . getInt ( 1 ) ; } finally { closeCursor ( cursor ) ; } return count ; } 
public void setSource ( @ android.support.annotation.NonNull java.io.InputStream inputStream ) { if ( ( is ) != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } is = inputStream ; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.bitstream = new javazoom.jl.decoder.Bitstream ( is ) ; ch.zhaw.bait17.audio_signal_processing_toolbox.player.MP3Decoder.decoder = new javazoom.jl.decoder.Decoder () ; init () ; } 
public int lngToCol ( double lon ) { if ( ( lon < ( westLng ) ) || ( lon > ( eastLng ) ) ) throw new java.lang.IllegalArgumentException ( "Longitude is out of map range" ) ; int colIndex = ( ( int ) ( ( lon - ( westLng ) ) / ( cellDegree ) ) ) ; if ( colIndex >= ( numberOfCols ) ) throw new java.lang.IndexOutOfBoundsException () ; return colIndex ; } 
public void setOverlay ( java.io.File overlay ) { if ( overlay != null ? ! ( overlay . equals ( this . overlay ) ) : ( this . overlay ) == null ) { java.io.File oldOverlay = this . overlay ; this . overlay = overlay ; dirty = true ; propertyChangeSupport . firePropertyChange ( "overlay" , oldOverlay , overlay ) ; } } 
@ java.lang.Override public void performancesChanged ( java.lang.String connId , int exchangesCompleted ) { long duration = ( java.lang.System . currentTimeMillis () ) - ( startTime ) ; final org.talend.core.model.process.IConnection conn = traceConnectionsManager . finConnectionByUniqueName ( connId ) ; final org.talend.core.model.runprocess.data.PerformanceData perfData = new org.talend.core.model.runprocess.data.PerformanceData ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) ) ; processPerformances ( ( ( ( ( connId + "|" ) + exchangesCompleted ) + "|" ) + duration ) , perfData , conn ) ; startTime = java.lang.System . currentTimeMillis () ; } 
public boolean setMove ( final java.awt.Color color , final int number ) { for ( data.Karte k : spieler . get ( activePlayer ) . getKarten () ) { if ( ( k . getFarbe () . equals ( color ) ) && ( ( k . getNummer () ) == number ) ) { if ( move ( k , spielfeld ) ) { spieler . get ( activePlayer ) . remove ( k ) ; return true ; } } } return false ; } 
public int parseRaceNumber () { int start = this . name . indexOf ( "_" ) ; int stop = this . name . indexOf ( "_" , ( start + 1 ) ) ; if ( ( start != ( - 1 ) ) && ( stop != ( - 1 ) ) ) { java.lang.String sRaceNumber = this . name . substring ( ( start + 1 ) , stop ) ; this . raceNumber = java.lang.Integer . parseInt ( sRaceNumber ) ; return this . raceNumber ; } else return 1 ; } 
public void start ( int port ) { this . port = port ; if ( ! ( on ) ) { try { serverSocket = new java.net.DatagramSocket ( port ) ; byte [] receiveData = new byte [ 1024 ] ; java.lang.System.out . println ( ( "Starting on port " + port ) ) ; on = true ; run ( receiveData ) ; } catch ( java.net.SocketException e ) { e . printStackTrace () ; } } } 
public java.lang.String getText () { java.lang.String text ; try { org.apache.poi.hssf.extractor.EventBasedExcelExtractor.TextListener tl = triggerExtraction () ; text = tl._text . toString () ; if ( ! ( text . endsWith ( "\n" ) ) ) { text = text + "\n" ; } } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } return text ; } 
@ java.lang.Override public me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { me.iwf.photopicker.adapter.PhotoGridAdapter.PhotoViewHolder holder = PhotoPickUtils.holderGenerator . newGridViewHolder ( mContext ) ; if ( viewType == ( me.iwf.photopicker.adapter.PhotoGridAdapter.ITEM_TYPE_CAMERA ) ) { holder.vSelected . setVisibility ( View.GONE ) ; holder.ivPhoto . setScaleType ( ImageView.ScaleType.CENTER ) ; holder.ivPhoto . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View view ) { if ( ( onCameraClickListener ) != null ) { onCameraClickListener . onClick ( view ) ; } } } ) ; } return holder ; } 
public java.lang.Object handleLogIn ( java.lang.String username , java.lang.String password ) { loginfacade = new app.facades.LogInFacade () ; java.lang.Object answer ; try { answer = ( "Hi " + ( loginfacade . handleLogIn ( username , password ) . getUserID () ) ) + " !" ; } catch ( java.lang.Exception e ) { answer = e ; } return answer ; } 
private void addRecord ( java.lang.String key , T newRecord ) { org.kisst.pko4j.index.MultiIndex.logger . info ( "adding unique key {} " , key ) ; org.kisst.item4j.ImmutableSequence < T > oldList = map . get ( key ) ; if ( oldList == null ) map . put ( key , org.kisst.item4j.ImmutableSequence . of ( getRecordClass () , newRecord ) ) ; else if ( ! ( oldList . contains ( newRecord ) ) ) { org.kisst.item4j.ImmutableSequence < T > newList = oldList . growTail ( newRecord ) ; map . put ( key , newList ) ; } } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; switch ( requestCode ) { case 10 : if ( ( resultCode == ( android.app.Activity.RESULT_OK ) ) && ( data != null ) ) { java.util.ArrayList < java.lang.String > result = data . getStringArrayListExtra ( RecognizerIntent.EXTRA_RESULTS ) ; commandText . setText ( result . get ( 0 ) ) ; new mohz.m13.wicompanion.CommandFragment.SendText () . execute ( result . get ( 0 ) ) ; } break; } } 
public void updateStatus ( int trackToPlay , int status , int position ) { if ( ! ( trackBeans . isEmpty () ) ) { com.fritzbang.theplayer.TrackBean tmp = trackBeans . get ( trackToPlay ) ; tmp.status = status ; tmp.position = position ; trackBeans . set ( trackToPlay , tmp ) ; android.util.Log . d ( com.fritzbang.theplayer.PlaylistArrayAdapter.DEBUG_TAG , ( ( ( "AdapterPosition: " + trackToPlay ) + " " ) + position ) ) ; this . notifyDataSetChanged () ; } } 
@ java.lang.Override public void onBitmapFailed ( android.graphics.drawable.Drawable errorDrawable ) { if ( ( errorDrawable != null ) && ( com.layer.ui.util.Log . isLoggable ( com.layer.ui.util.Log.VERBOSE ) ) ) { com.layer.ui.util.Log . v ( ( "onBitMapFailed :" + errorDrawable ) ) ; } bitmapWrapper . setBitmap ( null ) ; callback . onFailure () ; mTargets . remove ( this ) ; } 
@ java.lang.Override public void produceText ( de.is2.ZZZZZnake.ZZZZZnake znake ) { if ( ( znake . getLoopCount () ) < 1 ) { startMessages ( znake ) ; } if ( ( znake . isVictory () ) == true ) { victory ( znake ) ; } if ( ( znake . isDead () ) == true ) { death ( znake ) ; } if ( ( ( znake . isRich () ) == true ) && ( ( znake . getLoopCountAfterGoldGet () ) <= 1 ) ) { goldGet ( znake ) ; } } 
@ java.lang.Override public javax.servlet.ServletInputStream getInputStream ( ) throws java.io.IOException { synchronized ( this ) { if ( ( inputStream ) == null ) { if ( ( streamLimit ) <= 0 ) { inputStream = new org.openrepose.commons.utils.io.BufferedServletInputStream ( super . getInputStream () ) ; } else { inputStream = new org.openrepose.commons.utils.io.BufferedServletInputStream ( new org.openrepose.commons.utils.io.stream.LimitedReadInputStream ( streamLimit , super . getInputStream () ) ) ; } } return inputStream ; } } 
@ java.lang.SuppressWarnings ( value = { "unchecked" , "ConstantConditions" } ) public B setStart ( java.util.Date start ) { com.google.common.base.Preconditions . checkNotNull ( start , "start cannot be null" ) ; com.google.common.base.Preconditions . checkArgument ( ( ( startRelative ) == null ) , "Both relative and absolute start times cannot be set." ) ; this . startAbsolute = start . getTime () ; return ( ( B ) ( this ) ) ; } 
@ org.junit.Test public void testValidStudentCPF () { try { student = new model.Student ( "Jacó Mario Souza" , cpf , rg , date , email , address , phone1 , phone2 , "Milene Souza Medeiros" , "Mário Souza Filho" , 1 ) ; assertEquals ( cpf , student . getStudentCpf () ) ; } catch ( exception.StudentException e ) { fail ( ( "Should not throw this exception: " + ( e . getMessage () ) ) ) ; } } 
private java.lang.String getAdapterQueryLogUnsecuredSerrviceUrl () { java.lang.String url = null ; try { url = proxyHelper . getUrlLocalHomeCommunity ( NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ; } catch ( gov.hhs.fha.nhinc.connectmgr.ConnectionManagerException ex ) { gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy.AuditQueryLogProxyWebServiceUnsecuredImpl.LOG . debug ( ( ( "Error while retrieving url for " + ( gov.hhs.fha.nhinc.nhinclib.NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ) + ( ex . getLocalizedMessage () ) ) , ex ) ; return url ; } catch ( java.lang.Exception ex ) { gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy.AuditQueryLogProxyWebServiceUnsecuredImpl.LOG . error ( ( ( "Failed to call the web service " + ( gov.hhs.fha.nhinc.nhinclib.NhincConstants.ADAPTER_AUDIT_QUERY_LOG_SERVICE_NAME ) ) + ( ex . getLocalizedMessage () ) ) , ex ) ; } return url ; } 
public void setup () { if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.NonStandardSPARQL ) ) { lupos.sparql1_1.operatorgraph.ServiceApproaches . setNonStandardSPARQLBitVectorJoin ( true ) ; } else { lupos.sparql1_1.operatorgraph.ServiceApproaches . setNonStandardSPARQLBitVectorJoin ( false ) ; if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.Value ) ) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SemiJoinToStringHelper . class ; } else if ( ( this ) == ( lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.APPROACH.ValueSubstring ) ) { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.SubstringValueToStringHelper . class ; } else { lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.approachClass = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.BitVectorJoinToStringHelper . class ; lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.hashFunction = lupos.engine.operators.singleinput.federated.FederatedQueryBitVectorJoin.HASHFUNCTION . values () [ this . ordinal () ] ; } } } 
public void clickRenameLibrary ( javafx.event.ActionEvent actionEvent ) { newLibraryTitle = textFieldForNewLibraryTitle . getText () ; if ( newLibraryTitle . equals ( oldLibraryTitle ) ) { com.devprosony.Main.stdOut . println ( "newLibraryTitle = oldLibraryTitle" ) ; } else { com.devprosony.Main.stdOut . println ( ( "newLibraryTitle: " + ( newLibraryTitle ) ) ) ; renameLibraryTitle ( oldLibraryTitle , newLibraryTitle ) ; dialogRenameLibraryStage . close () ; } } 
public int getLastPosition () { if ( ( ( mGridView ) == null ) || ( ( postsIds ) == null ) ) { return 0 ; } int firstPos = mGridView . getFirstVisiblePosition () ; if ( ( firstPos >= 0 ) && ( firstPos < ( postsIds . size () ) ) ) { return postsIds . get ( firstPos ) ; } else { return 0 ; } } 
public void executePhase ( at.borkowski.scovillej.simulation.SimulationContext context ) throws java.io.IOException { if ( ! ( initialized ) ) initialize ( context ) ; if ( ( serverSocket . available () ) > 0 ) owner . registerClientProcessor ( new at.borkowski.scovillej.prefetch.members.server.ClientProcessor ( owner , serverSocket . accept () ) ) ; } 
protected final void provision ( android.support.v4.app.Fragment fragment , java.lang.String json ) { android.os.Bundle args = new android.os.Bundle () ; args . putString ( EntityFragment.ARG_JSON , json ) ; args . putString ( EntityFragment.ARG_ENTITY , ( "" + ( entityType ) ) ) ; fragment . setArguments ( args ) ; } 
public void enqueue ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException ( "the item to enqueue is null" ) ; } if ( ( N ) == ( q.length ) ) { resize ( ( 2 * ( q.length ) ) ) ; } q [ ( ( N ) ++ ) ] = item ; } 
public static javax.swing.JMenuItem createJMenuItem ( java.lang.String name , java.lang.String description , javax.swing.KeyStroke keyStroke ) { javax.swing.JMenuItem comp = new javax.swing.JMenuItem ( name ) ; if ( keyStroke != null ) comp . setAccelerator ( keyStroke ) ; if ( description != null ) comp . setToolTipText ( description ) ; comp . setFont ( new java.awt.Font ( java.awt.Font.SANS_SERIF , java.awt.Font.BOLD , 14 ) ) ; com.tri.pgs.client.surface.ui.UISystem . init ( comp , false , false ) ; return comp ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int index = 0 ; for ( int i = 1 ; i < ( day ) ; i ++ ) index += ( getItinerarySizeByDay ( getContext () , i ) ) - 1 ; final int indexToAssign = index ; uz.samtuit.samapp.helpers.ItineraryHelper . addNewItemFromItinerary ( getFragmentManager () , day , indexToAssign ) ; } 
@ java.lang.Override public void onBindViewHolder ( com.closestudios.bro.util.BroViewAdapter.ViewHolder holder , int position ) { holder.flBackdrop . setBackgroundColor ( holder.flBackdrop . getContext () . getResources () . getColor ( colors [ ( position + ( ( colorOffset ) % ( colors.length ) ) ) ] ) ) ; holder.tvHeader . setText ( mDataset [ position ] . getHeader () ) ; holder.tvDetails . setText ( mDataset [ position ] . getDetails ( holder.tvDetails . getContext () ) ) ; } 
public drgn.data.routes.mathematics.Line getParallelLine ( drgn.data.routes.model.Point point ) { return new drgn.data.routes.mathematics.Line ( _a , _b , ( - ( ( ( _a ) * ( point . getLongitude () ) ) + ( ( _b ) * ( point . getLatitude () ) ) ) ) , point ) ; } 
public void enterChatRoom ( java.lang.String roomName ) throws java.io.IOException { this . requestToServer . writeObject ( new Message ( MessageType.EnterTopic , null , null , roomName ) ) ; this . requestToServer . flush () ; if ( ( this . enteredRoom . contains ( roomName ) ) == false ) this . enteredRoom . add ( roomName ) ; } 
public void indexJumpDown () { if ( ( ( currentItemIndex ) + ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ) > ( ( list . size () ) - 1 ) ) { currentItemIndex = ( currentItemIndex ) % ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ; } else { currentItemIndex = ( currentItemIndex ) + ( com.harvest.hud_elements.HUDVars.INVENTORY_ROW_SIZE ) ; } } 
public void saveScreenMap () { try { for ( java.util.Map.Entry entry : screenStringBiMap . entrySet () ) { stmt . execute ( ( ( ( ( "insert into screenNameMap (screenId, screenName) values (" + ( entry . getValue () ) ) + ",'" ) + ( entry . getKey () ) ) + "') ON CONFLICT DO NOTHING" ) ) ; } } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void onSetStreamVolume ( float volume ) { mLog . d ( ( ( "[onSetStreamVolume][volume: " + volume ) + "]" ) ) ; if ( volume == 0.0F ) { try { if ( ( mDtvManager ) != null ) { mDtvManager . setMute () ; } } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } } else { if ( ( mDtvManager ) != null ) { mDtvManager . setVolume ( ( volume * 100 ) ) ; } } } 
private static void listItems () { for ( int I = 0 ; I < ( MainGame.items.length ) ; I ++ ) { if ( ( ( MainGame.itemDescrStrings [ I ] ) != null ) && ( ( MainGame.items [ I ] ) != 0 ) ) java.lang.System.out . println ( ( ( ( "Item " + ( MainGame.items [ I ] ) ) + ": " ) + ( MainGame.itemDescrStrings [ I ] ) ) ) ; } } 
private boolean isRowEmpty ( int startingPosition ) { int i = startingPosition ; while ( i >= 0 ) { if ( ( i % ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) == 0 ) break; i -- ; } int start = i ; for ( ; i < ( start + ( com.kiddos.nuktimetable.MainFragment.ScheduleAdapter.NUM_COL ) ) ; i ++ ) { if ( ( courses [ i ] ) != null ) { return false ; } } return true ; } 
public void setShowOriginal ( boolean b ) { if ( b ) { if ( ( state ) == ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ) { return; } setState ( pixelitor.layers.ImageLayer.State.SHOW_ORIGINAL ) ; } else { if ( ( state ) == ( pixelitor.layers.ImageLayer.State.PREVIEW ) ) { return; } setState ( pixelitor.layers.ImageLayer.State.PREVIEW ) ; } comp . imageChanged ( pixelitor.Composition.ImageChangeActions.REPAINT ) ; } 
protected com.fasterxml.jackson.databind.JsonSerializer < java.lang.Object > _findExplicitUntypedSerializer ( java.lang.Class < ? > runtimeType ) throws com.fasterxml.jackson.databind.JsonMappingException { com.fasterxml.jackson.databind.JsonSerializer < java.lang.Object > ser = _knownSerializers . untypedValueSerializer ( runtimeType ) ; if ( ser == null ) { ser = _serializerCache . untypedValueSerializer ( runtimeType ) ; if ( ser == null ) { ser = _createAndCacheUntypedSerializer ( runtimeType ) ; } } if ( isUnknownTypeSerializer ( ser ) ) { return null ; } return ser ; } 
public void shutdown () { if ( ( sendSystem ) != null ) { sendSystem . shutdown () ; sendSystem = null ; } if ( ( receiveThread ) != null ) { receiveThread . interrupt () ; receiveThread = null ; } if ( ( combinedAudioExecutor ) != null ) { combinedAudioExecutor . shutdownNow () ; combinedAudioExecutor = null ; } } 
@ java.lang.Override public void onClick ( boolean b ) { if ( ( config.dialog ) == null ) { startActivity ( new android.content.Intent ( android.content.Intent.ACTION_VIEW , android.net.Uri . parse ( config.privacyHtmlPath ) ) ) ; } else { config.dialog . open ( this , config.privacyHtmlPath , getString ( R.string.egab_privacy_policy ) ) ; } if ( ( config.analytics ) != null ) { config.analytics . logUiEvent ( config.logUiEventName , getString ( R.string.egab_privacy_log_event ) ) ; } } 
public boolean checkAnyMarker ( antgameproject.Pos markerPos , antgameproject.Colour markerCol ) { for ( antgameproject.Colour col : antgameproject.Colour . values () ) { if ( markerCol == col ) { return ( board [ markerPos . getPosY () ] [ markerPos . getPosX () ] . getMarker ( col ) ) != null ; } } return false ; } 
private static void createSeries ( org.jfree.data.xy.XYSeriesCollection seriesCollection , org.nd4j.linalg.api.ndarray.INDArray data , int offset , java.lang.String name ) { int nRows = data . shape () [ 2 ] ; org.jfree.data.xy.XYSeries series = new org.jfree.data.xy.XYSeries ( name ) ; for ( int i = 0 ; i < nRows ; i ++ ) { series . add ( ( i + offset ) , data . getDouble ( i ) ) ; } seriesCollection . addSeries ( series ) ; } 
public void checkAllowsDeployment ( org.carlspring.strongbox.storage.repository.Repository repository ) throws org.carlspring.strongbox.storage.ArtifactStorageException { if ( ( ( ! ( repository . allowsDeployment () ) ) || ( RepositoryTypeEnum.GROUP . getType () . equals ( repository . getType () ) ) ) || ( RepositoryTypeEnum.PROXY . getType () . equals ( repository . getType () ) ) ) { throw new org.carlspring.strongbox.storage.ArtifactStorageException ( ( ( "Deployment of artifacts to " + ( repository . getType () ) ) + " repositories is not allowed!" ) ) ; } } 
private void refreshMonthView ( int position ) { com.othershe.calendarview.MonthView monthView = calendarPagerAdapter . getViews () . get ( position ) ; if ( ( itemChooseListener ) != null ) { if ( ( chooseDate . get ( position ) ) != null ) monthView . multiChooseRefresh ( chooseDate . get ( position ) ) ; } else { monthView . refresh ( lastClickedDay ) ; } } 
@ java.lang.Override public E previous () { if ( ( this . previous ) != null ) { this . next = this . previous ; this . previous = this . previous . getPrevious () ; this . lastReturned = this . next . get () ; ( this . index ) -- ; return this . next . get () ; } return null ; } 
@ org.junit.Test public void testSetArgsMultipleNewFiles ( ) throws java.lang.Exception { try { com.nononsenseapps.filepicker.FilePickerFragmentTest.fragment . setArgs ( null , AbstractFilePickerFragment.MODE_NEW_FILE , true , false , true , false ) ; org.junit.Assert . fail ( "Expected exception" ) ; } catch ( java.lang.IllegalArgumentException e ) { org.junit.Assert . assertTrue ( ( "Should mention the mode limitations: " + ( e . getMessage () ) ) , e . getMessage () . contains ( "MODE_NEW_FILE" ) ) ; } } 
public static synchronized org.apache.sqoop.submission.spark.YarnSqoopSparkClient getInstance ( java.util.Map < java.lang.String , java.lang.String > conf ) { if ( ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client ) == null ) { java.lang.System . setProperty ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.YARN_MODE , "true" ) ; org.apache.spark.SparkConf sparkConf = org.apache.sqoop.submission.spark.SqoopSparkClientFactory . generateSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.yarnConfig = org.apache.sqoop.submission.spark.YarnSqoopSparkClient . generateYarnSparkConf ( conf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client = new org.apache.sqoop.submission.spark.YarnSqoopSparkClient ( sparkConf ) ; org.apache.sqoop.submission.spark.YarnSqoopSparkClient.clientArgs = new org.apache.spark.deploy.yarn.ClientArguments ( org.apache.sqoop.submission.spark.YarnSqoopSparkClient.args , sparkConf ) ; } return org.apache.sqoop.submission.spark.YarnSqoopSparkClient.client ; } 
private void addPlayer ( int id , int x , int y ) { boolean flag = true ; for ( player.Player foo : players ) { if ( ( foo . getID () ) == id ) { flag = false ; foo . set ( x , y ) ; break; } } if ( flag ) { players . add ( new player.Player ( id ) ) ; } } 
private void quiteLiveByPurpose () { if ( ( com.tencent.qcloud.suixinbo.model.MySelfInfo . getInstance () . getIdStatus () ) == ( com.tencent.qcloud.suixinbo.utils.Constants.HOST ) ) { if ( ( backDialog . isShowing () ) == false ) backDialog . show () ; } else { mLiveHelper . perpareQuitRoom ( true ) ; } } 
public void newGame () { frame = new se2aa4.morris.Frame () ; state = State.IN_PROGRESS ; sel = Location.NONE ; blueMillExists = false ; redMillExists = false ; redInventory = true ; blueInventory = true ; moved = false ; removed = false ; randTurn () ; randCpuPlayer () ; createRestorePoint () ; if ( ( turn ) == ( cpuPlayer ) ) { cpuMove () ; endTurn () ; } } 
@ org.junit.Test public void testSignMultiApkWithZipalign ( ) throws java.lang.Exception { java.util.List < java.io.File > uApks = at.favre.tools.apksigner.SignToolTest . copyToTestPath ( originalFolder , unsingedApks ) ; java.lang.String cmd = ( ( ( ( ( ( ( "-" + ( at.favre.tools.apksigner.ui.CLIParser.ARG_APK_FILE ) ) + " " ) + ( originalFolder . getAbsolutePath () ) ) + " -" ) + ( at.favre.tools.apksigner.ui.CLIParser.ARG_APK_OUT ) ) + " " ) + ( outFolder . getAbsolutePath () ) ) + " --debug" ; at.favre.tools.apksigner.SignToolTest . testAndCheck ( cmd , originalFolder , outFolder , uApks ) ; } 
public boolean play () { if ( this . canPlay () ) { Woo.users [ ( ( ( Woo.order ) + 1 ) % ( Woo.users.length ) ) ] . draw () ; Woo.users [ ( ( ( Woo.order ) + 1 ) % ( Woo.users.length ) ) ] . draw () ; java.lang.System.out . println ( "Played a Draw Two card. Next player draws two cards." ) ; return true ; } return false ; } 
@ java.lang.Override protected void map ( org.apache.hadoop.io.LongWritable key , org.mrgeo.geometry.Geometry value , org.mrgeo.data.geowave.vector.Context context ) throws java.io.IOException , java.lang.InterruptedException { context . write ( new org.apache.hadoop.io.Text ( ( "" + ( key . get () ) ) ) , new org.apache.hadoop.io.Text ( value . toString () ) ) ; } 
@ java.lang.Override public void updateEntity () { if ( ( ( this . getBlockMetadata () ) & ( - 8 ) ) == 0 ) return; if ( ( ! ( this . worldObj . isRemote ) ) && ( ( occupied ) != ( ( ( this . getBlockMetadata () ) & 4 ) != 0 ) ) ) { occupied = ! ( occupied ) ; needsAnimation = true ; markDirty () ; } else net.minecraft.block.BlockBed . func_149979_a ( worldObj , xCoord , yCoord , zCoord , occupied ) ; } 
private void handleHit ( java.lang.Package p ) { int damage = ( ( java.lang.Integer ) ( p . getPayload () ) ) ; int id = java.lang.Integer . parseInt ( p . getExtra () ) ; java.lang.System.out . println ( ( ( id + "hit " ) + ( java.lang.Math . random () ) ) ) ; for ( Actors.Actor a : actorQueue ) { if ( ( a . getID () ) == id ) { a . hit ( damage ) ; } } } 
public java.lang.String validateControls () { if ( ( cb . getValue () ) == null ) { return "Market type is not selected" ; } if ( ( ( marketCodeField . getText () ) == null ) || ( marketCodeField . getText () . isEmpty () ) ) { return "Market code can not be empty" ; } if ( ( ( dataPathField . getText () ) == null ) || ( dataPathField . getText () . isEmpty () ) ) { return "The data source path can not be empty." ; } return null ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/mareanoPolar_en" ) public org.springframework.web.servlet.ModelAndView getMareanoPolarEn ( javax.servlet.http.HttpServletResponse resp ) throws java.io.IOException { if ( ( ( mavPolarEn ) == null ) || ( ( ( java.lang.System . currentTimeMillis () ) - ( mavLastUpdatedPolarEn ) ) > ( no.imr.geoexplorer.admindatabase.controller.MareanoController.ONEHOUR ) ) ) { mavPolarEn = commonGetMareano ( resp , no.imr.geoexplorer.admindatabase.controller.MareanoController.EN , "mareanoPolar_en" ) ; mavLastUpdatedPolarEn = new java.util.Date () . getTime () ; } polarConfig ( mavPolarEn ) ; return mavPolarEn ; } 
public void markDirty ( mcp.mobius.betterbarrels.common.blocks.TileEntityBarrel barrel , boolean bspace ) { this . dirtyBarrels . put ( barrel , true ) ; if ( bspace ) if ( ( barrel.coreUpgrades.hasEnder ) && ( ! ( barrel . getWorldObj () . isRemote ) ) ) mcp.mobius.betterbarrels.bspace.BSpaceStorageHandler . instance () . markAllDirty ( barrel.id ) ; } 
public void start ( ) throws javax.jms.JMSException , javax.naming.NamingException { if ( ( namingContext ) != null ) { return; } namingContext = new javax.naming.InitialContext () ; javax.jms.TopicConnectionFactory tcf = ( ( javax.jms.TopicConnectionFactory ) ( namingContext . lookup ( configuration . getConnectionFactoryJndiName () ) ) ) ; org.hawkular.bus.common.ConnectionContextFactory ccf = new org.hawkular.bus.common.ConnectionContextFactory ( tcf ) ; this . messageSender = new org.hawkular.inventory.bus.MessageSender ( ccf , configuration . getInventoryChangesTopicName () ) ; install () ; } 
private java.util.ArrayList < java.lang.Boolean > multiplication ( java.util.ArrayList < java.lang.Boolean > multiplicand , java.util.ArrayList < java.lang.Boolean > multiplier ) { java.util.ArrayList < java.lang.Boolean > result = new java.util.ArrayList < java.lang.Boolean > () ; result . add ( false ) ; for ( int i = 0 ; i != ( multiplier . size () ) ; i ++ ) { if ( ( multiplier . get ( i ) ) == true ) { result = addition ( result , multiplicand , i ) ; } } return result ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mToolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.toolbar ) ) ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () . initLoader ( 0 , null , this ) ; if ( savedInstanceState == null ) { refresh () ; } } 
public java.util.List < mazeADT.Cell > getNeighbors () { java.util.List < mazeADT.Cell > neighbors = new java.util.LinkedList < mazeADT.Cell > () ; if ( ( northCell ) != null ) { neighbors . add ( northCell ) ; } if ( ( westCell ) != null ) { neighbors . add ( westCell ) ; } if ( ( southCell ) != null ) { neighbors . add ( southCell ) ; } if ( ( eastCell ) != null ) { neighbors . add ( eastCell ) ; } return neighbors ; } 
public void flee () { cooldownWalk = 500 ; if ( ( ( actAction ) != 1 ) || ( fleePath . isEmpty () ) ) { pp2016.team19.shared.Node fleePos = getFleePos () ; fleePath . clear () ; if ( fleePos != null ) { fleePath = AStarSearch ( this . getXPos () , this . getYPos () , fleePos . getXPos () , fleePos . getYPos () ) ; } } changeDir ( fleePath ) ; actAction = 1 ; } 
@ java.lang.Override public void onResponse ( java.lang.String response ) { super . onResponse ( response ) ; if ( android.text.TextUtils . isEmpty ( response ) ) return; com.bai.chesscard.bean.BaseBean baseBean = new com.google.gson.Gson () . fromJson ( response , com.bai.chesscard.bean.BaseBean . class ) ; if ( ( baseBean.id ) == 1 ) { gamePresenterNew . resetUserInfo ( ConstentNew.USERPOS ) ; resetUserStatue () ; } else com.bai.chesscard.utils.Tools . toastMsgCenter ( context , baseBean.msg ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public < T > T [] toArray ( T [] a ) { T [] result = null ; if ( ( a.length ) >= ( this . size () ) ) result = a ; else result = ( ( T [] ) ( java.lang.reflect.Array . newInstance ( a . getClass () . getComponentType () , this . size () ) ) ) ; java.lang.System . arraycopy ( this . array , this . start , result , 0 , result.length ) ; return result ; } 
@ java.lang.Override public void onSuccess ( com.andela.helpmebuy.models.User user ) { android.support.design.widget.Snackbar . make ( parentLayout , "Password changed successfully" , Snackbar.LENGTH_LONG ) . show () ; android.os.Bundle bundle = getIntent () . getBundleExtra ( Launcher.TRANSPORT ) ; if ( bundle != null ) { if ( bundle . getBoolean ( ConfirmPasswordFragment.CONFIRM_PASSWORD ) ) { com.andela.helpmebuy.utilities.Launcher . launchActivity ( context , com.andela.helpmebuy.activities.UserSettingsActivity . class ) ; } } else { com.andela.helpmebuy.utilities.Launcher . launchActivity ( context , com.andela.helpmebuy.activities.HomeActivity . class ) ; } finish () ; } 
public double getTravelTimeAfter ( final double time ) { final int bs = departures . binarySearch ( time ) ; final int index = ( bs < 0 ) ? ( - bs ) - 1 : bs ; final double tt = ( arrivals . get ( index ) ) - ( departures . get ( index ) ) ; assert tt >= 0 ; return tt ; } 
private void pushPipelineToSnapshot () { int iterationsCnt = 0 ; boolean done = false ; while ( ! done ) { iterationsCnt ++ ; org.apache.hadoop.hbase.regionserver.VersionedSegmentsList segments = pipeline . getVersionedList () ; pushToSnapshot ( segments . getStoreSegments () ) ; done = pipeline . swap ( segments , null , false ) ; if ( iterationsCnt > 2 ) { org.apache.hadoop.hbase.regionserver.CompactingMemStore.LOG . warn ( ( "Multiple unsuccessful attempts to push the compaction pipeline to snapshot," + " while flushing to disk." ) ) ; this . snapshot = org.apache.hadoop.hbase.regionserver.SegmentFactory . instance () . createImmutableSegment ( getComparator () ) ; break; } } } 
@ java.lang.Override public void invalidateDrawable ( android.graphics.drawable.Drawable drawable ) { if ( mContainsImages ) { android.text.Spanned text = getText () ; com.facebook.react.views.text.TextInlineImageSpan [] spans = text . getSpans ( 0 , text . length () , com.facebook.react.views.text.TextInlineImageSpan . class ) ; for ( com.facebook.react.views.text.TextInlineImageSpan span : spans ) { if ( ( span . getDrawable () ) == drawable ) { invalidate () ; } } } super . invalidateDrawable ( drawable ) ; } 
@ java.lang.Override public void run () { try { processCallApiDeleteRace ( data . toString () ) ; com.runningracehisotry.utilities.LogUtil . d ( Constants.LOG_TAG , ( "List race: " + ( data . toString () ) ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } finally { try { if ( mLoadingDialog . isShowing () ) { mLoadingDialog . dismiss () ; mLoadingDialog = null ; } } catch ( java.lang.Exception ex ) {} } } 
public void switcharoo () { game.items.Item itemNew = level . getItem ( x , y ) ; if ( itemNew == null ) return; level . removeItem ( x , y ) ; game.items.Item itemOld = items [ selected ] . item ; if ( itemOld == null ) return; addItem ( null , selected ) ; level . addItem ( itemOld , x , y ) ; addItem ( itemNew , selected ) ; } 
public void setModel ( org.jtrfp.trcl.gpu.Model m ) { final org.jtrfp.trcl.core.TRFuture < org.jtrfp.trcl.gpu.Model > thisModelFuture = this . model ; if ( m == null ) { if ( thisModelFuture != null ) releaseCurrentModel () ; return; } if ( thisModelFuture != null ) releaseCurrentModel () ; try { this . model = m . finalizeModel () ; } catch ( java.lang.Exception e ) { throw new java.lang.RuntimeException ( e ) ; } } 
public static void updateQueue () { while ( ( theweekend.cosmetics.ipod.Radio.queuedSongs . size () ) < 5 ) { int size = Noteblock.iPodSongs . size () ; if ( size > 0 ) { resources.noteblock.Song generate = Noteblock.iPodSongs . get ( resources.NumberUtils . randomNumber ( size ) ) ; if ( ! ( theweekend.cosmetics.ipod.Radio.queuedSongs . contains ( generate ) ) ) { theweekend.cosmetics.ipod.Radio.queuedSongs . add ( generate ) ; } } } theweekend.cosmetics.ipod.Radio.songPosition = 0 ; theweekend.cosmetics.ipod.Radio . playRadioSong () ; } 
public void checkNeededInColumn () { int n ; for ( int j = 0 ; j < 9 ; j ++ ) { for ( int i = 1 ; i < 10 ; i ++ ) { if ( de.halemba.helpers.SolveHelper . checkMissingInColumn ( i , j , grid ) ) { n = de.halemba.helpers.SolveHelper . checkSinglePossiblityColumn ( i , j , grid ) ; if ( n >= 0 ) { grid [ n ] [ j ] . setNumber ( i ) ; break; } } } } } 
public boolean redo () { if ( self . canRedo () ) { self . getDrawingData () . redo () ; self . nativeClear () ; self . nativeDrawData () ; if ( ( self . getDelegate () ) != null ) { self . getDelegate () . didChangeDrawing ( self , self . getDrawingData () . canUndo () , self . getDrawingData () . canRedo () ) ; } return true ; } return false ; } 
public java.lang.Boolean subscribeDoorOpensNextTime ( de.fau.cs.mad.fablab.rest.core.PushToken token ) { org.hibernate.Query query = super . currentSession () . createQuery ( "FROM PushToken WHERE token = :token AND triggerPushType = :trigger" ) ; query . setParameter ( "token" , token . getToken () ) ; query . setParameter ( "trigger" , token . getTriggerPushType () ) ; if ( ( query . list () . size () ) == 0 ) { token . setTriggerPushType ( TriggerPushType.DOOR_OPENS_NEXT_TIME ) ; persist ( token ) ; } return true ; } 
private static com.google.gson.JsonElement getFile ( java.lang.String fileName ) { java.io.File file = new java.io.File ( factionmod.FactionMod . getConfigDir () , fileName ) ; if ( file . exists () ) { try { return new com.google.gson.JsonParser () . parse ( new java.io.FileReader ( file ) ) ; } catch ( java.lang.Exception e ) { factionmod.FactionMod . getLogger () . error ( ( "Error on loading file " + fileName ) ) ; e . printStackTrace () ; } } return null ; } 
public void setLongitude ( java.lang.String longitude ) { int [] longitudeDMS = fiskinfoo.no.sintef.fiskinfoo.Implementation.FiskInfoUtility . decimalToDMSArray ( java.lang.Double . valueOf ( longitude ) ) ; latitudeDegreesEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 0 ] ) ) ; latitudeMinutesEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 1 ] ) ) ; latitudeSecondsEditText . setText ( java.lang.String . valueOf ( longitudeDMS [ 2 ] ) ) ; longitudeCardinalDirectionSwitch . setChecked ( ( ( java.lang.Double . valueOf ( longitude ) ) >= 0 ) ) ; } 
public java.util.ArrayList < controller.ControllerCarro > getCarros () { java.util.ArrayList < controller.ControllerCarro > aux = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( this . counter ) ; i ++ ) { aux . add ( this . carros . get ( i ) ) ; } return aux ; } 
public void letAImove () { int pushMousePointingColumn = mousePointingcolumn ; boolean preEndGame = gameController . isFinish () ; if ( ( mousePointingcolumn = gameController . getAITurn () ) < 0 ) { mousePointingcolumn = pushMousePointingColumn ; return; } if ( ( ! preEndGame ) && ( ! ( fallingAnimationMutex ) ) ) { FallingAnimation () ; mousePointingcolumn = pushMousePointingColumn ; } else { return; } } 
public int getInt ( int min , int max ) { java.lang.System.out . println ( "Enter a number: " ) ; int userInput = scanner . nextInt () ; scanner . nextLine () ; if ( ( userInput < min ) || ( userInput > max ) ) { java.lang.System.out . println ( "Invalid input" ) ; userInput = getInt ( min , max ) ; } return userInput ; } 
private void processAttributes ( android.content.Context context , android.util.AttributeSet attrs ) { android.content.res.TypedArray a = context . obtainStyledAttributes ( attrs , R.styleable.ColorButton ) ; final int N = a . getIndexCount () ; for ( int i = 0 ; i < N ; ++ i ) { int attr = a . getIndex ( i ) ; if ( attr == ( R.styleable.ColorButton_jr_color ) ) { mColor = a . getColor ( attr , 0 ) ; colorify () ; break; } } a . recycle () ; } 
public void onBrowserEvent ( org.ovirt.engine.ui.common.widget.table.cell.Context context , com.google.gwt.dom.client.Element parent , C value , java.lang.String tooltipContent , com.google.gwt.dom.client.NativeEvent event , com.google.gwt.cell.client.ValueUpdater < C > valueUpdater ) { java.lang.String tooltip ; if ( tooltipContent == null ) { tooltip = getTooltip ( value ) ; } else { tooltip = tooltipContent ; } if ( BrowserEvents.MOUSEOVER . equals ( event . getType () ) ) { org.ovirt.engine.ui.common.widget.tooltip.ElementTooltipUtils . setTooltipOnElement ( tooltip , parent ) ; } else { super . onBrowserEvent ( context , parent , value , event , valueUpdater ) ; } } 
@ android.support.annotation.Nullable public static java.util.HashMap < java.lang.String , java.lang.String > getAttributes ( android.media.ExifInterface exif ) { try { java.lang.reflect.Field f = android.media.ExifInterface . class . getDeclaredField ( "mAttributes" ) ; f . setAccessible ( true ) ; java.util.HashMap < java.lang.String , java.lang.String > exifAttributes = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( f . get ( exif ) ) ) ; if ( ( exifAttributes != null ) && ( ( exifAttributes . size () ) > 0 ) ) return exifAttributes ; } catch ( java.lang.Exception ex ) {} return null ; } 
private void unbindConnection () { MyApplication.madcapLogger . d ( TAG , ( "Attempt to unbind self. Current bound status is " + ( mBound ) ) ) ; cacheCountUpdater . cancel ( true ) ; mDataCollectionService . setUploadStatusGuiListener ( null ) ; getActivity () . getApplicationContext () . unbindService ( mConnection ) ; android.util.Log . d ( TAG , "removed UploadListener" ) ; mBound = false ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; float sum = 0.0F ; for ( int i = 0 ; i < ( q1004.Main.INPUT_COUNT ) ; i ++ ) { float f = sc . nextFloat () ; if ( f <= 0 ) { continue; } sum += f ; } sum /= q1004.Main.INPUT_COUNT ; java.lang.System.out . println ( ( "$" + ( q1004.Main . shortenNumber ( sum ) ) ) ) ; } 
private static void deleteEstate () { int id = de.dis2011.FormUtil . readInt ( "ID der Immobilie" ) ; de.dis2011.data.Estate estate = de.dis2011.data.Estate . load ( id ) ; if ( estate == null ) { java.lang.System.out . println ( ( ( "Immobilie mit ID " + id ) + " existiert nicht." ) ) ; return; } estate . delete ( estate . getType () ) ; java.lang.System.out . println ( ( ( "Immobilie mit ID " + id ) + " wurde gelöscht." ) ) ; } 
@ java.lang.Override public void onCraftMatrixChanged ( com.alxnns1.mobhunter.container.IInventory inventoryIn ) { reloadRecipes () ; java.lang.String log = "Recipes:\n" ; for ( int i = 0 ; i < ( recipes . size () ) ; i ++ ) { if ( recipesValid . get ( i ) ) log += "Y - " ; else log += "N - " ; log += recipes . get ( i ) . toString () ; } detectAndSendChanges () ; } 
public java.util.Date getAsDate () { if ( ( isASAP () ) || ( isNEVER () ) ) { return null ; } return new java.util.Date ( ( ( ( ( itsValue ) - ( ( atnf.atoms.time.DUTC . get ( itsValue ) ) * 1000000L ) ) - 3506716800000000L ) / 1000L ) ) ; } 
private void setStatusBarColor ( android.support.v7.graphics.Palette palette ) { int defaultDarkColor = android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.colorPrimaryDark ) ; if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) { android.view.Window window = getWindow () ; window . addFlags ( WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS ) ; window . setStatusBarColor ( palette . getDarkVibrantColor ( defaultDarkColor ) ) ; } } 
private void loadDataFromFile () { try { java.io.FileReader fr = new java.io.FileReader ( new java.io.File ( "cities.txt" ) ) ; java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; for ( int i = 0 ; i < ( RandomCities.NUMBER_OF_CITIES ) ; i ++ ) { cityList . add ( br . readLine () ) ; } java.util.Collections . shuffle ( cityList ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public won.protocol.model.MatchingBehaviorType getMatchingBehaviorTypeForMatchedNeed ( org.apache.solr.common.SolrDocument doc ) { won.protocol.model.MatchingBehaviorType matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL ; java.lang.Object matchingBehaviorFieldValue = doc . getFieldValue ( won.matcher.solr.hints.HintBuilder.MATCHING_BEHAVIOR_SOLR_FIELD ) ; if ( matchingBehaviorFieldValue != null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType . fromURI ( matchingBehaviorFieldValue . toString () ) ; if ( matchedNeedMatchingBehavior == null ) { matchedNeedMatchingBehavior = won.protocol.model.MatchingBehaviorType.MUTUAL ; } } return matchedNeedMatchingBehavior ; } 
@ by.itechart.flowerty.web.controller.ResponseBody @ by.itechart.flowerty.web.controller.RequestMapping ( value = "user/list/{page}" ) public org.springframework.data.domain.Page < by.itechart.flowerty.model.User > getPage ( @ by.itechart.flowerty.web.controller.PathVariable ( value = "page" ) java.lang.Integer page ) throws java.lang.Exception { by.itechart.flowerty.web.controller.UserController.LOGGER . info ( "get page with number {}" , page ) ; page = ( ( page == null ) || ( page < 1 ) ) ? 0 : -- page ; org.springframework.data.domain.Page < by.itechart.flowerty.model.User > pageUsers = userService . getPage ( page , 1 ) ; by.itechart.flowerty.web.controller.UserController.LOGGER . info ( "fetch {} users" , pageUsers . getTotalElements () ) ; return pageUsers ; } 
private void decodeFrames ( io.netty.buffer.ByteBuf in , java.util.List < java.lang.Object > out ) throws java.lang.Exception { if ( ( in . readableBytes () ) >= ( com.mpush.api.protocol.Packet.HEADER_LEN ) ) { in . markReaderIndex () ; com.mpush.api.protocol.Packet packet = decodeFrame ( in ) ; if ( packet != null ) { out . add ( packet ) ; } else { in . resetReaderIndex () ; } } } 
public int roll () { if ( ( rollsSinceLastReseed ) >= 100000 ) { com.valkryst.VDice.DiceRoller.random . setSeed ( java.lang.System . currentTimeMillis () ) ; rollsSinceLastReseed = 0 ; } int total = 0 ; for ( final com.valkryst.VDice.Die die : dice ) { total += die . roll ( com.valkryst.VDice.DiceRoller.random ) ; ( rollsSinceLastReseed ) ++ ; } return total ; } 
public void addCell ( org.apache.cassandra.config.ColumnDefinition column , java.nio.ByteBuffer value , org.apache.cassandra.db.rows.LivenessInfo info ) { int idx = columns . simpleIdx ( column ) ; if ( idx < 0 ) throw new java.lang.RuntimeException ( ( ( ( "Cannot find column " + ( column.name ) ) + " in " ) + ( columns ) ) ) ; idx += base ; data . setCell ( idx , value , info ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.lang.String showCityResources ( @ org.springframework.web.bind.annotation.RequestParam java.util.Map < java.lang.String , java.lang.String > allRequestParams , org.springframework.ui.Model model ) { org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER . info ( ( "Requested params:" + allRequestParams ) ) ; commonCityService . buildQueuedBuildings ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; org.exschool.pocketworld.city.resources.dto.CityResourcesDto cityResourcesDto = cityResourcesService . cityResourcesInfo ( org.exschool.pocketworld.controllers.city.resources.CityResourcesController.PLAYER_NAME ) ; model . addAttribute ( "dto" , cityResourcesDto ) ; org.exschool.pocketworld.controllers.city.resources.CityResourcesController.LOGGER . info ( ( "Out:" + model ) ) ; return "city_resources" ; } 
@ java.lang.Override public void grab () { if ( this . isClosing () ) { return; } while ( ! ( this . captureIpl . available () ) ) { waitForNextFrame () ; } captureIpl . read () ; org.bytedeco.javacpp.opencv_core.IplImage img = captureIpl . getIplImage () ; if ( img != null ) { updateCurrentImage ( img ) ; } } 
public void setStatus ( double speed ) { if ( speed > 1.4 ) { this . status = 2 ; textStatus . setText ( "跑步" ) ; } else if ( speed < 1.0E-6 ) { this . status = 0 ; textStatus . setText ( "静止" ) ; } else { this . status = 1 ; textStatus . setText ( "步行" ) ; } } 
public void setSong ( info.dourok.android.lyrics.SongWrapper song ) { this . mSong = song ; if ( ( song . getLyrics () ) != null ) { this . mLyrics = mSong . getLyrics () ; this . mLyricsItems = mLyrics . getLyricsItems () ; updateLyrics () ; } } 
public com.smartstudy.zhike.mylibrary.widget.BannerView setPages ( java.util.List < T > datas ) { this . mDatas = datas ; pageAdapter = new com.smartstudy.zhike.mylibrary.widget.BasePageAdapter ( mDatas ) ; viewPager . setAdapter ( pageAdapter ) ; viewPager . setBoundaryCaching ( true ) ; if ( ( page_indicatorId ) != null ) setPageIndicator ( page_indicatorId ) ; return this ; } 
public io.cattle.platform.servicediscovery.deployment.DeploymentUnitInstance start () { if ( this . isStarted () ) { return this ; } if ( ( ( instance ) != null ) && ( InstanceConstants.STATE_STOPPED . equals ( instance . getState () ) ) ) { context.activityService . instance ( instance , "start" , "Starting stopped instance" , ActivityLog.INFO ) ; context.objectProcessManager . scheduleProcessInstanceAsync ( InstanceConstants.PROCESS_START , instance , null ) ; } return this ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "Employee{" + "idemployee=" ) + ( idemployee ) ) + ", firstName='" ) + ( firstName ) ) + '\'' ) + ", lastName='" ) + ( lastName ) ) + '\'' ) + ", role=" ) + ( role . getName () ) ) + ", password='" ) + ( password ) ) + '\'' ) + ", cars=" ) + ( cars ) ) + '}' ; } 
@ java.lang.Override public boolean onCreateActionMode ( com.actionbarsherlock.view.ActionMode mode , com.actionbarsherlock.view.Menu menu ) { mode . setTitle ( R.string.menu_restriction ) ; super . onCreateActionMode ( mode , menu ) ; logic . addSelectedRelationWay ( toWay ) ; de.blau.android.osm.Relation restriction = logic . createRestriction ( fromWay , viaElement , toWay , ( ( fromWay ) == ( toWay ) ? de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.NO_U_TURN_VALUE : null ) ) ; android.util.Log . i ( "EasyEdit" , "Created restriction" ) ; main . performTagEdit ( restriction , de.blau.android.easyedit.EasyEditManager.RestrictionToElementActionModeCallback.RESTRICTION_TAG , false , false ) ; main . startActionMode ( new de.blau.android.easyedit.EasyEditManager.RelationSelectionActionModeCallback ( restriction ) ) ; return false ; } 
@ java.lang.Override public void deleteCorsRules ( @ javax.annotation.Nonnull java.lang.String bucketUuid ) throws com.eucalyptus.objectstorage.exceptions.ObjectStorageException { try ( final com.eucalyptus.entities.TransactionResource tran = com.eucalyptus.entities.Entities . transactionFor ( com.eucalyptus.objectstorage.entities.CorsRule . class ) ) { com.eucalyptus.objectstorage.BucketCorsManagers . getInstance () . deleteCorsRules ( bucketUuid , tran ) ; tran . commit () ; } catch ( java.lang.Exception ex ) { com.eucalyptus.objectstorage.metadata.DbBucketCorsManagerImpl.LOG . error ( ( "Exception caught while deleting CORS rules for bucket " + bucketUuid ) , ex ) ; throw new com.eucalyptus.objectstorage.exceptions.ObjectStorageException ( "InternalServerError" , ( "Exception caught while deleting CORS rules for bucket " + bucketUuid ) , "Bucket" , bucketUuid , org.jboss.netty.handler.codec.http.HttpResponseStatus.INTERNAL_SERVER_ERROR ) ; } } 
private void Price () { java.lang.String priceWithCurrency = source . getElementsByClass ( "price-label" ) . text () . replaceAll ( "\\D+" , "" ) ; if ( ( priceWithCurrency . length () ) == 0 ) { adBuilder . price ( null ) ; } else { adBuilder . price ( java.lang.Integer . parseInt ( priceWithCurrency ) ) ; } } 
private static org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair getType ( final java.lang.Class < ? > concrete , final java.lang.Class < ? > iface , final java.lang.Class < ? > c , final java.lang.reflect.Type [] ts ) { for ( final java.lang.reflect.Type t : ts ) { final org.glassfish.jersey.internal.util.ReflectionHelper.DeclaringClassInterfacePair p = org.glassfish.jersey.internal.util.ReflectionHelper . getType ( concrete , iface , c , t ) ; if ( p != null ) { return p ; } } return null ; } 
public boolean onBlockDestroyed ( net.minecraft.item.ItemStack stack , net.minecraft.world.World worldIn , net.minecraft.block.state.IBlockState blockIn , net.minecraft.util.math.BlockPos pos , net.minecraft.entity.EntityLivingBase entityLiving ) { if ( ( ( double ) ( blockIn . getBlockHardness ( worldIn , pos ) ) ) != 0 ) { stack . damageItem ( 1 , entityLiving ) ; } return true ; } 
public static java.lang.String getRating ( java.lang.String login , int fid ) throws java.lang.Exception { java.util.ArrayList < java.lang.String [] > ret = DatabaseInterface.SQLExecutor . executeQuery ( ( ( ( ( "SELECT rating FROM acmdb05.Rates WHERE login='" + login ) + "' AND fid=" ) + fid ) + ";" ) ) ; return ret . get ( 0 ) [ 0 ] ; } 
protected int skipWSC ( ) throws java.io.IOException , org.openrdf.rio.RDFHandlerException { int c = readCodePoint () ; while ( ( org.openrdf.rio.turtle.TurtleUtil . isWhitespace ( c ) ) || ( c == '#' ) ) { if ( c == '#' ) { processComment () ; } else if ( c == '\n' ) { ( lineNumber ) ++ ; } c = readCodePoint () ; } unread ( c ) ; return c ; } 
@ java.lang.Override public void mouseDragged ( java.awt.event.MouseEvent e ) { if ( ( ( e . getX () ) >= 0 ) && ( ( e . getX () ) <= ( this . getWidth () ) ) ) { if ( knob1Picked ) { moveKnob1 ( java.lang.Math . abs ( e . getX () ) ) ; return; } if ( knob2Picked ) { moveKnob2 ( e . getX () ) ; } } } 
@ java.lang.Override public java.sql.Connection getConnection ( ) throws java.sql.SQLException { State.State state = validatePoolState ( isAllowConnectionAfterTermination () ) ; if ( state == ( WORKING ) ) { try { return getPooledConnection ( getConnectionTimeoutInMs () ) ; } catch ( java.sql.SQLException e ) { if ( ( ! ( org.vibur.dbcp.SQLSTATE_POOL_CLOSED_ERROR . equals ( e . getSQLState () ) ) ) || ( ! ( isAllowConnectionAfterTermination () ) ) ) throw e ; } } assert ( getState () ) == ( TERMINATED ) ; org.vibur.dbcp.ViburDBCPDataSource.logger . info ( "Calling getConnection() after the pool was closed; will create and return a non-pooled Connection." ) ; return getNonPooledConnection () ; } 
public void run () { int [] selectedRows = tablePositions . getSelectedRows () ; if ( ( selectedRows.length ) > 0 ) { getPositionsModel () . up ( selectedRows , 1 ) ; selectPositions ( increment ( selectedRows , ( - 1 ) ) ) ; } } 
@ java.lang.Override public boolean hasWon () { sixesWildEntity.Board board = sixesWildEntity.Board . newInstance () ; if ( ( board.currentScore ) >= ( highestScore ) ) { highestScore = board.currentScore ; } if ( ( highestScore ) >= ( threeStarScore ) ) { starNumber = 3 ; } else if ( ( highestScore ) >= ( twoStarScore ) ) { starNumber = 2 ; } else if ( ( highestScore ) >= ( oneStarScore ) ) { starNumber = 1 ; } return ( board.currentScore ) >= ( oneStarScore ) ; } 
@ java.lang.Override public void loadProducts ( java.util.List < com.ariondan.vendor.model.ProductModel > productModels ) { layoutCart . setVisibility ( View.GONE ) ; this . productModels . clear () ; cartModels . clear () ; populatePopup ( productModels ) ; for ( com.ariondan.vendor.model.ProductModel product : productModels ) { this . productModels . add ( product ) ; } if ( ( gridProducts . getAdapter () ) != null ) { gridProducts . getAdapter () . notifyDataSetChanged () ; } } 
private void makeNewHeader ( org.json.JSONObject transforms ) { for ( int x = 1 ; x < ( ( transforms . length () ) + 1 ) ; x ++ ) { java.lang.String curTransform = "transform" + x ; java.lang.String newField = getCurrTransformNewField ( transforms , curTransform ) ; if ( newField . equals ( "" ) ) {} else if ( checkHeaderDuplicate ( newHeader , newField ) ) { newHeader . put ( newHeader . length () , newField ) ; } } } 
@ java.lang.Override public java.lang.String decorMatrix ( int [] [] matrix ) { java.lang.StringBuilder array = new java.lang.StringBuilder ( "" ) ; for ( int i = 0 ; i <= ( ( matrix.length ) - 1 ) ; i ++ ) { array . append ( this . arrayToString ( matrix [ i ] ) ) ; array . append ( java.lang.System . lineSeparator () ) ; } return java.lang.String . format ( primitivesMatrixTemplate , array ) ; } 
@ java.lang.Override public void setParameter ( int i , double p ) { if ( ( this . stateWeights ) != null ) { if ( i < ( this . stateWeights . length ) ) { this . stateWeights [ i ] = p ; return; } } else if ( ( this . stateActionWeights ) != null ) { if ( i < ( this . stateActionWeights . length ) ) { this . stateActionWeights [ i ] = p ; return; } } throw new java.lang.RuntimeException ( "Parameter index out of bounds; parameter cannot be set." ) ; } 
public synchronized void onRequest ( java.lang.String ipAddress , java.sql.Timestamp time ) { ( requestTotal ) ++ ; com.hula.domain.Request request = new com.hula.domain.Request ( ipAddress , 1 , time ) ; if ( ! ( requests . contains ( request ) ) ) { requests . add ( request ) ; } else { com.hula.domain.Request r = requests . get ( requests . indexOf ( request ) ) ; r . setRequestCount ( ( ( r . getRequestCount () ) + 1 ) ) ; r . setDateOfLastRequest ( time ) ; } } 
protected static final void check ( final com.gamesbykevin.breakout.game.Game game ) { if ( ( game . getBricks () . getCount () ) <= 0 ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0 ; com.gamesbykevin.breakout.game.GameHelper.WIN = true ; game . getScreen () . setState ( ScreenManager.State.GameOver ) ; } else if ( ( game . getBalls () . getCount () ) < 1 ) { com.gamesbykevin.breakout.game.GameHelper.FRAMES = 0 ; com.gamesbykevin.breakout.game.GameHelper.LOSE = true ; ( com.gamesbykevin.breakout.game.GameHelper.LIVES ) -- ; } } 
public void setFrequencyDays ( java.lang.String daysBitString ) { frequencyDays = daysBitString ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; int today = ( calendar . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; if ( frequencyDays . substring ( today , ( today + 1 ) ) . equals ( "1" ) ) { isToday = true ; } else { isToday = false ; } } 
public java.lang.String toString () { java.lang.String cardSymbols = "" ; java.lang.String values = "" ; for ( int x = 0 ; x <= ( lastCard ) ; x ++ ) { cardSymbols += ( CardUtils . cardToString ( cards [ x ] ) ) + " " ; values += ( CardUtils . getValue ( cards [ x ] ) ) + " " ; } return ( ( cardSymbols + "\n" ) + values ) + "\n" ; } 
public void setIsWifiEnable ( boolean isWifiEnable ) { isWifiP2pEnable = isWifiEnable ; if ( isRemainResult ) { remainWifiIsEnable = isWifiEnable ; } if ( ( mOnWiFiRecevieListener ) != null ) { mOnWiFiRecevieListener . onWifiStatusResult ( isWifiEnable ) ; } else { if ( ! isWifiEnable ) {} } } 
public static void init ( javax.servlet.ServletContext servletContext ) { java.io.File repository = ( ( java.io.File ) ( servletContext . getAttribute ( "javax.servlet.context.tempdir" ) ) ) ; org.edagarli.framework.helper.UploadHelper.servletFileUpload = new org.apache.commons.fileupload.servlet.ServletFileUpload ( new org.apache.commons.fileupload.disk.DiskFileItemFactory ( org.apache.commons.fileupload.disk.DiskFileItemFactory.DEFAULT_SIZE_THRESHOLD , repository ) ) ; int uploadLimit = org.edagarli.framework.helper.ConfigHelper . getAppUploadLimit () ; if ( uploadLimit != 0 ) { org.edagarli.framework.helper.UploadHelper.servletFileUpload . setFileSizeMax ( ( ( uploadLimit * 1024 ) * 1024 ) ) ; } } 
public int logoutUser ( java.lang.String username ) { int state ; boolean userExist ; boolean active ; userExist = database . usernameExist ( username ) ; active = database . getActive ( username ) ; if ( userExist && active ) { database . userActive ( username , false ) ; state = 1 ; } else { state = 0 ; } return state ; } 
public void reset () { for ( int i = 0 ; i < ( numberOfDoFs ) ; i ++ ) regularizationMatrix . set ( i , i , jointAccelerationRegularization . getDoubleValue () ) ; solverInput_H . zero () ; solverInput_f . zero () ; solverInput_Aeq . reshape ( 0 , problemSize ) ; solverInput_beq . reshape ( 0 , 1 ) ; if ( ! ( firstCall . getBooleanValue () ) ) addJointJerkRegularization () ; } 
@ java.lang.Override public int getCount ( ) throws java.sql.SQLException { if ( ( filters . isEmpty () ) && ( orderBys . isEmpty () ) ) return ( ( int ) ( columnView . rowCount ( null ) ) ) ; return columnView . rowCount ( toQuery ( 0 , filters ) ) ; } 
@ java.lang.Override public void onPrepared ( @ android.support.annotation.NonNull com.devbrackets.android.playlistcore.api.MediaPlayerApi mediaPlayerApi ) { retryCount = 0 ; setPlaybackState ( com.devbrackets.android.playlistcore.service.PlaylistServiceCore.PlaybackState.PLAYING ) ; startMediaPlayer () ; if ( immediatelyPause ) { immediatelyPause = false ; if ( mediaPlayerApi . isPlaying () ) { performPause () ; } } if ( ( seekToPosition ) > 0 ) { performSeek ( seekToPosition , false ) ; seekToPosition = - 1 ; } updateRemoteViews () ; updateNotification () ; } 
void removeBundleListener ( final org.jboss.osgi.framework.internal.AbstractBundleState bundleState , final org.osgi.framework.BundleListener listener ) { if ( listener == null ) throw new java.lang.IllegalArgumentException ( "Null listener" ) ; java.util.List < org.osgi.framework.BundleListener > listeners = bundleListeners . get ( bundleState ) ; if ( listeners != null ) { if ( ( listeners . size () ) > 1 ) listeners . remove ( listener ) ; else removeBundleListeners ( bundleState ) ; } } 
private void readExternal ( com.tangosol.io.pof.PofReader pofReader ) throws java.io.IOException { if ( ( pofReader . getVersionId () ) >= 1 ) { this . media = ( ( serializers.coherence.media.Media ) ( pofReader . readObject ( 0 ) ) ) ; this . images = ( ( java.util.List < serializers.coherence.media.Image > ) ( pofReader . readCollection ( 1 , new java.util.ArrayList < serializers.coherence.media.Image > () ) ) ) ; } } 
public void setBootstrapType ( java.lang.String bootstrapType ) { com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes type ; type = ( roundedCorners ) ? com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMapRounded . get ( bootstrapType ) : com.beardedhen.androidbootstrap.BootstrapButton.bbuttonTypeMap . get ( bootstrapType ) ; type = ( type == null ) ? com.beardedhen.androidbootstrap.BootstrapButton.BootstrapTypes.DEFAULT : type ; layout . setBackgroundResource ( type.backgroundDrawable ) ; lblLeft . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblMiddle . setTextColor ( getResources () . getColor ( type.textColour ) ) ; lblRight . setTextColor ( getResources () . getColor ( type.textColour ) ) ; } 
public void setSelection ( T selection ) { for ( int i = 0 , count = getItems () . size () ; i < count ; i ++ ) { T item = getItems () . get ( i ) ; if ( item instanceof java.lang.String ) { if ( item . equals ( selection ) ) { setSelection ( i ) ; return; } } else { if ( item == selection ) { setSelection ( i ) ; return; } } } } 
private ludum.dare.collision.CollisionGroup getCollisions ( java.util.Map < java.lang.String , ludum.dare.collision.CollisionSequence > data ) { ludum.dare.utils.NamedAnimation animation = animations . getCurrentAnimation () ; java.lang.String name = animation . getName () ; if ( data . containsKey ( name ) ) { ludum.dare.collision.CollisionSequence sequence = data . get ( name ) ; if ( ( animation . getLastCalledFrame () ) < ( sequence.frames.length ) ) { return sequence.frames [ animation . getLastCalledFrame () ] ; } } return null ; } 
public void setAltitude ( bwem.Altitude altitude ) { if ( ! ( ( isAltitudeMissing () ) && ( ( altitude . intValue () ) > 0 ) ) ) { throw new java.lang.IllegalStateException ( "Altitude is already set" ) ; } else if ( ! ( ( altitude . intValue () ) > 0 ) ) { throw new java.lang.IllegalArgumentException ( "invalid Altitude" ) ; } else { this . altitude = new bwem.Altitude ( altitude ) ; } } 
private boolean isNewHighScore ( java.lang.String lastScoreDeck ) { java.lang.String highScoreDeck = prefs . getString ( "highScoreDeck" , "" ) ; if ( ( highScoreDeck . isEmpty () ) || ( ( lastScoreDeck . compareTo ( highScoreDeck ) ) < 0 ) ) { return true ; } else { return false ; } } 
@ java.lang.Override public void onBindViewHolder ( com.example.brandon.habitlogger.RecyclerViewAdapters.HabitViewHolder holder , int position , java.util.List < java.lang.Object > payloads ) { super . onBindViewHolder ( holder , position , payloads ) ; if ( ( payloads != null ) && ( ! ( payloads . isEmpty () ) ) ) { holder . setEntry ( ( ( com.example.brandon.habitlogger.HabitDatabase.DataModels.SessionEntry ) ( payloads . get ( 0 ) ) ) ) ; } } 
public java.lang.String post ( java.lang.String endpoint , com.ringcentral.definitions.Base base ) throws com.ringcentral.RestException , java.io.IOException { com.ringcentral.RequestBody body = com.ringcentral.RequestBody . create ( com.ringcentral.RestClient.jsonMediaType , com.alibaba.fastjson.JSON . toJSONString ( base ) ) ; com.ringcentral.Request request = new com.ringcentral.Request.Builder () . url ( ( ( server ) + endpoint ) ) . addHeader ( "Authorization" , authorizationHeader () ) . post ( body ) . build () ; return request ( request ) ; } 
public void findMinFormat () { if ( ( isEmptyHeap () ) == true ) { java.lang.System.out . println ( "There are no ideas here" ) ; } else { java.lang.System.out . println ( ( ( ( ( ( "The best idea is Idea #" + ( heap [ 0 ] . getSeqNum () ) ) + "/nrated at" ) + ( heap [ 0 ] . getRating () ) ) + "here is the description: /n" ) + ( heap [ 0 ] . getDesc () ) ) ) ; } } 
public boolean makeSale () { if ( ( ( deposit ) >= ( price ) ) && ( ( stock ) >= 1 ) ) { ( stock ) -- ; if ( ( deposit ) > ( price ) ) { change = ( deposit ) - ( price ) ; } deposit = 0 ; return true ; } return false ; } 
public < T > SigmaEC.util.Option < java.util.List < T > > getOptionalInstancesFromParameter ( final java.lang.String parameterName , final java.lang.Class expectedSuperClass ) { assert parameterName != null ; assert ! ( parameterName . isEmpty () ) ; assert expectedSuperClass != null ; if ( properties . containsKey ( parameterName ) ) return new SigmaEC.util.Option ( ( ( java.util.List < T > ) ( getInstancesFromParameter ( parameterName , expectedSuperClass ) ) ) ) ; else return Option.NONE ; } 
public void actionEvent () { if ( ( tfInput . getText () . length () ) > 0 ) { if ( ( controller . getSelectedUsers () ) != null ) { java.lang.String [] recipients = controller . getSelectedUsers () ; controller . send ( new chat_client.Message ( tfInput . getText () , recipients ) ) ; } else { controller . send ( new chat_client.Message ( tfInput . getText () , true ) ) ; } tfInput . setText ( "" ) ; } } 
public static void main ( java.lang.String [] args ) { SimpleDotCom hans = new SimpleDotCom () ; ReadyBakeInput inny = new ReadyBakeInput () ; boolean isAlive = true ; java.lang.System.out . println ( "Hans the dotcom yet lives. Make him run! Enter numbers 0-6 to hit him. 3 consecutive hits will kill him. " ) ; while ( isAlive == true ) { java.lang.String playerGuess = inny . getUserInput ( "Enter a number 0-6: " ) ; java.lang.String result = hans . checkYourself ( playerGuess ) ; java.lang.System.out . println ( result ) ; if ( result == "kill" ) { isAlive = false ; java.lang.System.out . println ( "Now, hans must run!" ) ; } } } 
public int solution ( int [] A ) { long expectedSum = ( ( ( A.length ) + 1 ) * ( ( A.length ) + 2 ) ) / 2 ; long realSum = 0 ; for ( int i : A ) { realSum = realSum + ( new java.lang.Long ( i ) ) ; } return new java.lang.Long ( ( expectedSum - realSum ) ) . intValue () ; } 
public java.lang.String getClassName () { if ( mClassList . isEmpty () ) { return mClassName . isEmpty () ? null : mClassName ; } else { java.lang.String class_name = mClassList . get ( 0 ) ; for ( int i = 1 ; i < ( mClassList . size () ) ; i ++ ) { class_name = "," + ( mClassList . get ( i ) ) ; } return class_name ; } } 
public void setFilename ( java.lang.String filename ) { if ( filename != null ) { if ( filename . endsWith ( ( ( java.io.File.separator ) + "DB" ) ) ) connField . setText ( filename . substring ( 0 , ( ( filename . length () ) - 3 ) ) ) ; else connField . setText ( filename ) ; } } 
@ java.lang.Override public boolean add ( org.eclipse.jetty.webapp.ClasspathPattern.Entry entry ) { java.lang.String name = entry . getName () ; if ( entry . isClassName () ) name += "$" ; else if ( entry . isLocation () ) throw new java.lang.IllegalArgumentException ( entry . toString () ) ; else if ( "." . equals ( name ) ) name = "" ; if ( ( this . _entries . get ( name ) ) != null ) return false ; return this . _entries . put ( name , entry ) ; } 
@ java.lang.Override public void onDestroy () { org.md2k.utilities.Report.Log . d ( org.md2k.plotter.ActivityPlot.TAG , "onDestroy()" ) ; if ( ( ( dataSourceClient ) != null ) && ( ( dataKitAPI ) != null ) ) try { dataKitAPI . unsubscribe ( dataSourceClient ) ; } catch ( org.md2k.datakitapi.exception.DataKitException e ) { e . printStackTrace () ; } if ( ( dataKitAPI ) != null ) dataKitAPI . disconnect () ; if ( ( redrawer ) != null ) { redrawer . pause () ; redrawer . finish () ; } super . onDestroy () ; } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { if ( ( dataSnapshot . getValue () ) != null ) { com.example.chowdi.qremind.infrastructure.QueueInfo queueInfo = dataSnapshot . getValue ( com.example.chowdi.qremind.infrastructure.QueueInfo . class ) ; if ( ( queueInfo . getCalling () ) != null ) { if ( ! ( com.example.chowdi.qremind.activities.BaseActivity.notificationPoppedOut ) ) popUpNotification ( queueNo ) ; if ( ! ( application.notificationSend ) ) application . showNotification ( this ) ; } } else { com.example.chowdi.qremind.activities.BaseActivity.fbRefQueueTurn . removeEventListener ( com.example.chowdi.qremind.activities.BaseActivity.queueTurnListener ) ; com.example.chowdi.qremind.utils.Commons . showToastMessage ( "You have been removed from queue!" , getApplicationContext () ) ; } } 
public boolean isLookaheadIgnoreWhitespace ( char expectedChar ) { int tempPos = ( pos ) + 1 ; if ( tempPos >= ( input . length () ) ) return false ; char c = input . charAt ( tempPos ) ; while ( isWhitespace ( c ) ) { ++ tempPos ; if ( tempPos >= ( input . length () ) ) return false ; c = input . charAt ( tempPos ) ; } return c == expectedChar ; } 
private void mathButton_ActionPerformed ( java.awt.event.ActionEvent evt ) { int [] rows = new int [ mainTable_ . getRowCount () ] ; for ( int i = 0 ; i < ( rows.length ) ; i ++ ) { java.lang.Integer j = ( ( java.lang.Integer ) ( mainTable_ . getValueAt ( mainTable_ . convertRowIndexToModel ( i ) , 0 ) ) ) ; rows [ i ] = j ; } edu.valelab.gaussianfit.MathForm mf = new edu.valelab.gaussianfit.MathForm ( edu.valelab.gaussianfit.DataCollectionForm.studio_ . getUserProfile () , rows , rows ) ; mf . setVisible ( true ) ; } 
public void validate ( ca.nines.ise.dom.DOM dom ) { for ( ca.nines.ise.node.Node n : dom ) { if ( ( n . type () ) == ( ca.nines.ise.node.NodeType.END ) ) { switch ( n . getName () . toLowerCase () ) { case "ornament" : process_end ( ( ( ca.nines.ise.node.EndNode ) ( n ) ) ) ; break; } } } } 
private void ifThereIsMatchAddItToTotalTokens ( char [] tokenBuffer ) { if ( ( ( tokenLength ) > 0 ) && ( ( termAtt . length () ) > 0 ) ) { final java.lang.String token = java.lang.String . copyValueOf ( tokenBuffer , 0 , termAtt . length () ) ; totalTokens . put ( token , new java.lang.Integer [] { tokenStart , tokenEnd , token . length () , 1 } ) ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { try { java.lang.Double value = setValue ( dataSnapshot . getValue () ) ; if ( value != null ) { myRef . child ( path ) . setValue ( ( value + passedValue ) ) ; } else { myRef . child ( path ) . setValue ( passedValue ) ; } } catch ( java.lang.Exception e ) { android.util.Log . d ( "Error catched" , e . toString () ) ; } } 
public static void main ( java.lang.String [] args ) { dao.CustomerDB db = new dao.CustomerDB ( "remoteuser" , "password" ) ; java.lang.String [] [] stringValues = db . readAllValues () ; for ( int i = 0 ; i < ( stringValues.length ) ; i ++ ) { for ( int j = 1 ; j < 7 ; j ++ ) { java.lang.System.out . print ( ( ( stringValues [ i ] [ j ] ) + " " ) ) ; } java.lang.System.out . println () ; } } 
public static void filterAdminOnlyFlowParams ( azkaban.user.UserManager userManager , azkaban.executor.ExecutionOptions options , azkaban.user.User user ) throws azkaban.executor.ExecutorManagerException { if ( ( options == null ) || ( ( options . getFlowParameters () ) == null ) ) return; java.util.Map < java.lang.String , java.lang.String > params = options . getFlowParameters () ; if ( ! ( azkaban.server.HttpRequestUtils . hasPermission ( userManager , user , Type.ADMIN ) ) ) { params . remove ( ExecutionOptions.FLOW_PRIORITY ) ; } else { azkaban.server.HttpRequestUtils . validateIntegerParam ( params , ExecutionOptions.FLOW_PRIORITY ) ; } } 
@ java.lang.Override public void onDepthFrameEvent ( short [] depthFrame , byte [] playerIndex , float [] xyz , float [] uv ) { if ( ( this . lock ) != null ) { synchronized ( this . lock ) { this . lock . notifyAll () ; this . lock = null ; } } de.gocodinggroup.multiplicationtable.input.kinect.EventManager . dispatchAndWait ( new de.gocodinggroup.multiplicationtable.input.kinect.KinectDepthFrameEvent ( depthFrame , xyz ) ) ; } 
public void setZoom ( double zoom ) { if ( ( getMagnification () ) > zoom ) { while ( ( getMagnification () ) > zoom ) zoomOut ( 0 , 0 ) ; } else { while ( ( getMagnification () ) < zoom ) zoomIn ( 0 , 0 ) ; } if ( ( getMagnification () ) <= 1.0 ) imp . repaintWindow () ; } 
public recruitment.business.ApplicantDTO registerApplicant ( java.lang.String firstname , java.lang.String lastname , java.lang.String dateofbirth , java.lang.String email , java.lang.String username , java.lang.String password ) { if ( ( em . find ( recruitment.business.Applicant . class , username ) ) != null ) { throw new javax.persistence.EntityExistsException ( ( "Account already exists with username " + username ) ) ; } else { recruitment.business.Applicant newApplicant = new recruitment.business.Applicant ( firstname , lastname , dateofbirth , email , username , password ) ; em . persist ( newApplicant ) ; return newApplicant ; } } 
void upsertCF ( com.datastax.driver.core.Session session ) { session . execute ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE IF NOT EXISTS " + ( TableName ) ) + " (\"_id\" text PRIMARY KEY, name list<text>) WITH bloom_filter_fp_chance = 0.01 " ) + " AND caching = \'{\"keys\":\"ALL\", \"rows_per_partition\":\"NONE\"}\'" ) + " AND comment = 'Auto-created by Elassandra' " ) + " AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'} " ) + " AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'} " ) + " AND dclocal_read_repair_chance = 0.1  " ) + " AND default_time_to_live = 0 " ) + " AND gc_grace_seconds = 864000 " ) + " AND max_index_interval = 2048 " ) + " AND memtable_flush_period_in_ms = 0 " ) + " AND min_index_interval = 128 " ) + " AND read_repair_chance = 0.0 " ) + " AND speculative_retry = '99.0PERCENTILE'; " ) ) ; session . execute ( "CREATE CUSTOM INDEX elastic_external_name_idx ON customer.external (name) USING 'org.elasticsearch.cassandra.index.ExtendedElasticSecondaryIndex';" ) ; } 
@ java.lang.Override public void onCompletion ( com.app.sircle.WebService.PostResponse postResponse , com.app.sircle.Utility.AppError error ) { if ( postResponse != null ) { android.widget.Toast . makeText ( getActivity () , postResponse . getMessage () , Toast.LENGTH_SHORT ) . show () ; if ( ( postResponse . getStatus () ) == 200 ) { android.content.Intent homeIntent = new android.content.Intent ( getActivity () , com.app.sircle.UI.Activity.BaseActivity . class ) ; startActivity ( homeIntent ) ; } } else { android.widget.Toast . makeText ( getActivity () , "some error occurred" , Toast.LENGTH_SHORT ) . show () ; } } 
private void setMinDateInMs ( long minDateInMs ) { this . minDateInMs = minDateInMs ; if ( ( this . minDateInMs ) > 0 ) { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } else { addSubmissionsToMap ( this . googleMap . getProjection () . getVisibleRegion () ) ; } } 
public static de.beacon.tom.viibenav_radiomapper.model.Orientation getOrientationFromSensorHelper () { if ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) >= 90 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) < 270 ) ) return Orientation.back ; else if ( ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) >= 0 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) < 90 ) ) || ( ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) >= 270 ) && ( ( de.beacon.tom.viibenav_radiomapper.model.SensorHelper . getOrientation () ) <= 360 ) ) ) return Orientation.front ; else return Orientation.undetermined ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; com.firebase.client.Firebase . setAndroidContext ( this ) ; setContentView ( R.layout.activity_friend_list ) ; super . onCreateDrawer () ; if ( savedInstanceState == null ) { getSupportFragmentManager () . beginTransaction () . add ( R.id.container , new com.gatech.objectsanddesign.shoppingwithfriends.FriendList.PlaceholderFragment () ) . commit () ; } } 
public static java.lang.String parseVersion ( java.lang.String requestLine ) { java.util.Scanner scanner ; java.util.ArrayList < java.lang.String > words = new java.util.ArrayList < java.lang.String > () ; scanner = new java.util.Scanner ( requestLine ) ; while ( scanner . hasNext () ) { words . add ( scanner . next () ) ; } scanner . close () ; if ( ( words . size () ) == 3 ) { return words . get ( 2 ) ; } return "HTTP/1.1" ; } 
public atv.model.TreeNode createNode ( java.lang.String locationlevel , java.lang.String locationname ) { atv.model.TreeNode node = new atv.model.TreeNode ( locationname , locationlevel ) . setViewHolder ( new atv.holder.SelectableItemHolder ( getActivity () , ( locationlevel + ": " ) ) ) ; node . setSelectable ( false ) ; return node ; } 
public static java.lang.String createJsonStringFromInputStream ( java.io.InputStream inputStream ) { try { java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( inputStream , "iso-8859-1" ) , 8 ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; java.lang.String line = null ; while ( ( line = reader . readLine () ) != null ) sb . append ( ( line + "\n" ) ) ; inputStream . close () ; com.example.celien.drivemycar.http.JsonParser.json = sb . toString () ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return com.example.celien.drivemycar.http.JsonParser.json ; } 
public static void exportResource ( java.lang.String resourceName , java.nio.file.Path destination ) throws java.io.IOException { try ( java.io.InputStream in = com.github.checkstyle.FilesystemUtils . class . getResourceAsStream ( resourceName ) ; java.io.OutputStream out = java.nio.file.Files . newOutputStream ( destination ) ) { int readBytes ; final byte [] buffer = new byte [ com.github.checkstyle.FilesystemUtils.BUFFER_SIZE ] ; while ( ( readBytes = in . read ( buffer ) ) > 0 ) { out . write ( buffer , 0 , readBytes ) ; } } } 
public void refreshListView () { if ( ( currentRegisteredUser ) != null ) { journals = selectMyJournalsFromDB ( mEmail ) ; } else { journals = dbLink . selectAvailableJournals () ; } if ( ( journals ) != null ) { com.journee.utils.AlbumRecycleViewAdapter adapter = new com.journee.utils.AlbumRecycleViewAdapter ( this , journals ) ; mRecyclerView . setAdapter ( adapter ) ; } } 
@ java.lang.Override public void stop () { if ( ( filesToPlay ) != null ) { filesToPlay . clear () ; } if ( ( mediaPlayer ) != null ) { mediaPlayer . stop () ; } if ( ( ctx ) != null ) { abandonAudioFocus () ; } } 
public void gameCycle ( java.awt.Color color ) { if ( color == ( chosenColor ) ) { gui.ColorGameGUI.finalScore = ( gui.ColorGameGUI.finalScore ) + 100 ; setWord () ; setColor () ; count = ( count ) + 1 ; } else { setWord () ; setColor () ; count = ( count ) + 1 ; } if ( ( count ) == 5 ) { endGame () ; } } 
private void setTaskTime ( defaultPart.Task task , java.lang.String timeString ) { defaultPart.Logic.logger . log ( java.util.logging.Level.FINER , "Setting task time using \"{0}\"" , timeString ) ; java.lang.String [] startAndEndTime = timeString . split ( "-" , 2 ) ; assert ( startAndEndTime.length ) > 0 ; task . setStartTime ( getTimeFromString ( startAndEndTime [ 0 ] ) ) ; if ( ( startAndEndTime.length ) == 2 ) { task . setEndTime ( getTimeFromString ( startAndEndTime [ 1 ] ) ) ; } } 
public void centerModel ( org.gearvrf.GVRSceneObject model ) { org.gearvrf.GVRSceneObject.BoundingVolume bv = model . getBoundingVolume () ; float sf = 1 ; model . getTransform () . setScale ( sf , sf , sf ) ; bv = model . getBoundingVolume () ; model . getTransform () . setPosition ( ( - ( bv.center.x ) ) , ( - ( bv.center.y ) ) , ( ( - ( bv.center.z ) ) - ( 1.5F * ( bv.radius ) ) ) ) ; } 
private void pushUp ( int i ) { while ( ( i > 1 ) && ( ( compare2 ( heap . get ( i ) , heap . get ( ( i / 2 ) ) ) ) > 0 ) ) { swap ( i , ( i / 2 ) ) ; i /= 2 ; } } 
private void createPeriodTable ( android.database.sqlite.SQLiteDatabase sqLiteDatabase ) { sqLiteDatabase . execSQL ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( TABLE_PERIOD ) ) + "(" ) + ( PERIOD_COLUMN_ID ) ) + " INTEGER PRIMARY KEY NOT NULL, " ) + ( PERIOD_COLUMN_SCHOOL_HOUR_NO ) ) + "INTEGER NOT NULL, " ) + ( PERIOD_COLUMN_STARTTIME ) ) + " TIME NOT NULL, " ) + ( PERIOD_COLUMN_ENDTIME ) ) + " TIME NOT NULL )" ) ) ; } 
public static void playGame () { Engine . printBoard () ; Engine . printHand () ; while ( ( Engine . handIsOver () ) == false ) { Engine . playerAction () ; Engine . computerAction () ; Engine . dealerAction () ; Engine . printBoard () ; Engine . printHand () ; } Engine . determineWinners () ; Engine . splitWinnings () ; Engine . askForNewRound () ; } 
@ java.lang.Override public void autonomousInit () { java.lang.String mode = ( ( java.lang.String ) ( modeChooser . getSelected () ) ) ; if ( mode == "forward" ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putString ( "" , "Test Forward" ) ; } else if ( mode == "gear" ) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putString ( "" , "Test Gear" ) ; } else { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard . putString ( "" , "Test Nothing" ) ; } if ( ( autonomousCommand ) != null ) autonomousCommand . start () ; } 
private com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey generateZoneKey ( final org.xbill.DNS.Name name , final java.util.List < org.xbill.DNS.Record > list , final boolean dynamicRequest , final boolean dnssecRequest ) { if ( dynamicRequest && ( ! dnssecRequest ) ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name , list ) ; } else if ( ( isDnssecEnabled ( name ) ) && ( name . subdomain ( com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneManager . getTopLevelDomain () ) ) ) { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.SignedZoneKey ( name , list ) ; } else { return new com.comcast.cdn.traffic_control.traffic_router.core.dns.ZoneKey ( name , list ) ; } } 
public boolean checkAnswer ( int answer ) { java.lang.System.out . println ( ( "answer: " + answer ) ) ; if ( answer == ( currAnswer ) ) { hintArea . setText ( "" ) ; if ( ( game . getRemainingHints () ) == 0 ) game . finish () ; playGame () ; return true ; } return false ; } 
public boolean fireProjectile ( final java.lang.Class < ? extends MarsRoverKata.Projectile > type ) { MarsRoverKata.Projectile projectileToFire = com.google.common.collect.Iterables . get ( com.google.common.collect.Collections2 . filter ( projectiles , new com.google.common.base.Predicate < MarsRoverKata.Projectile > () { @ java.lang.Override public boolean apply ( MarsRoverKata.Projectile input ) { return input . getClass () . isAssignableFrom ( type ) ; } } ) , 0 , null ) ; if ( projectileToFire == null ) { return false ; } projectileToFire . launch ( getFacing () , getLocation () ) ; projectiles . remove ( projectileToFire ) ; return true ; } 
public java.lang.String toString () { SinglyLinkedNode < E > current = head ; if ( this . isEmpty () ) { return "[]" ; } java.lang.StringBuilder sb = new java.lang.StringBuilder () ; sb . append ( ( "[" + ( current.data ) ) ) ; while ( ( current.next ) != null ) { current = current.next ; sb . append ( ", " ) . append ( current.data ) ; } sb . append ( "]" ) ; return sb . toString () ; } 
public void keyPressed ( java.awt.event.KeyEvent keyPressed ) { if ( ( keyPressed . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_ENTER ) ) { command = inArea . getText () ; tcpService . sendCommand ( command . trim () ) ; inArea . setText ( "" ) ; } } 
public java.util.Date getCommentDate ( int postId , int commentId ) { if ( ( posts . get ( postId ) ) == null ) { return new java.util.Date ( 0 ) ; } if ( ( posts . get ( postId ) . comments ) == null ) { return new java.util.Date ( 0 ) ; } for ( me.dibber.blablablapp.core.Post.Comment c : posts . get ( postId ) . comments ) { if ( ( c.id ) == commentId ) { return c.date ; } } return new java.util.Date ( 0 ) ; } 
private void btTestarMouseReleased ( java.awt.event.MouseEvent evt ) { if ( "" . equals ( tfSite . getText () ) ) { Pingador.Shell . atualizaOutput ( Pingador.ft1.taOutput , "Alvo invalido" ) ; return; } if ( ( java.lang.Integer . parseInt ( spQtPack . getValue () . toString () ) ) < 3 ) { Pingador.ft1.ESTADO . setc ( 3 ) ; } ftcn () ; } 
@ java.lang.Override public int compareTo ( de.uniks.template.TemplateFragment other ) { if ( ( other . getKey () ) == ( key ) ) { if ( other . getValue () . equals ( value ) ) { return 0 ; } return - 1 ; } if ( ( other . getKey () ) > ( key ) ) { return - 1 ; } return 1 ; } 
public final byte [] memOrLoad () { byte [] mem = _mem ; if ( mem != null ) return mem ; water.Freezable pojo = _pojo ; if ( pojo != null ) return _mem = pojo . asBytes () ; if ( ( _max ) == 0 ) return _mem = new byte [ 0 ] ; return _mem = loadPersist () ; } 
public static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c <= 'F' ) ) ) || ( ( c >= 'a' ) && ( c <= 'f' ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { v . setOnClickListener ( null ) ; java.lang.String num = ev . getText () . toString () . trim () ; if ( ( num == null ) || ( "" . equals ( num ) ) ) return; double n = parseDouble ( num ) ; if ( n == 0 ) setText ( "Error: Divide by zero." ) ; else setText ( inIntTermsOfAny ( ( n / ( currentValue ) ) ) , ev ) ; v . setVisibility ( View.GONE ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.content.Intent intent = getIntent () ; java.lang.String location = intent . getStringExtra ( MainActivity.LOCATION_KEY ) ; android.util.Log . d ( "intent" , ( "Location: " + location ) ) ; android.widget.TextView textView = new android.widget.TextView ( this ) ; textView . setTextSize ( 40 ) ; textView . setText ( ( ( ( getString ( R.string.display_location_text ) ) + ": " ) + location ) ) ; setContentView ( textView ) ; } 
public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode == ( RESULT_OK ) ) { if ( requestCode == ( com.example.deepak.socialnetworkingapp.upload.SELECT_PICTURE ) ) { android.net.Uri selectedImageUri = data . getData () ; if ( null != selectedImageUri ) { imgView . setImageURI ( selectedImageUri ) ; } } } } 
@ java.lang.Override protected void onPreExecute () { android.net.ConnectivityManager cm = ( ( android.net.ConnectivityManager ) ( mContext . getSystemService ( Context.CONNECTIVITY_SERVICE ) ) ) ; android.net.NetworkInfo activeNetwork = cm . getActiveNetworkInfo () ; boolean isConnected = ( activeNetwork != null ) && ( activeNetwork . isConnectedOrConnecting () ) ; if ( isConnected ) { showProgressDialogue () ; } else { android.widget.Toast . makeText ( mContext , mContext . getString ( R.string.toast_no_internet_connection ) , Toast.LENGTH_SHORT ) . show () ; } } 
private void handleAutoImprov ( int slotInPlayback ) { int gap = lickgenFrame . getGap () ; if ( ( lickgenFrame . getRecurrent () ) && ( slotInPlayback >= ( ( stopPlaybackAtSlot ) - gap ) ) ) { ( recurrentIteration ) ++ ; setFirstChorus ( false ) ; setStatus ( ( "Chorus " + ( recurrentIteration ) ) ) ; originalGenerate ( lickgen , improviseStartSlot , improviseEndSlot ) ; } } 
@ java.lang.Override public void run () { if ( isInCommingCall ) { stopIncomeCallTimer () ; android.util.Log . d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG , ( "isInCommingCall - " + ( isInCommingCall ) ) ) ; } com.quickblox.sample.videochatwebrtcnew.SessionManager . setCurrentSession ( null ) ; android.util.Log . d ( com.quickblox.sample.videochatwebrtcnew.activities.CallActivity.TAG , "Stop session" ) ; stopTimer () ; closeByWifiStateAllow = true ; finish () ; } 
private void dispatch ( final com.chalcodes.event.EventReceiver < T > receiver , final T event ) { if ( mReceivers . contains ( receiver ) ) { try { receiver . onEvent ( this , event ) ; } catch ( java.lang.Exception e ) { mReceivers . remove ( receiver ) ; if ( ( mExceptionBus ) != null ) { mExceptionBus . broadcast ( e ) ; } } } } 
public synchronized void handleRecv ( long latency ) { ( recvCountInterval ) ++ ; ( recvCountTotal ) ++ ; if ( latency > 0 ) { minLatency = java.lang.Math . min ( minLatency , latency ) ; maxLatency = java.lang.Math . max ( maxLatency , latency ) ; cumulativeLatencyInterval += latency ; cumulativeLatencyTotal += latency ; ( latencyCountInterval ) ++ ; ( latencyCountTotal ) ++ ; } report () ; } 
private int simpleComputeNextLineIndentLevel ( int indentLevel , java.util.List < groovyjarjarantlr.Token > tokens ) { int adjust = getOpenVersusCloseBalance ( tokens ) ; if ( adjust > 0 ) { indentLevel += getPrefs () . getIndentationSize () ; } else if ( adjust < 0 ) { indentLevel -= getPrefs () . getIndentationSize () ; } return indentLevel ; } 
@ org.junit.Test public void testOverflow3 ( ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException , org.spf4j.zel.vm.CompileException { org.spf4j.zel.vm.Program p = org.spf4j.zel.vm.Program . compile ( ( ( ( "" + ( java.lang.Long.MIN_VALUE ) ) + " - " ) + ( java.lang.Long.MAX_VALUE ) ) ) ; java.lang.System.out . println ( p ) ; java.math.BigInteger result = ( ( java.math.BigInteger ) ( p . execute () ) ) ; org.junit.Assert . assertEquals ( java.math.BigInteger . valueOf ( java.lang.Long.MIN_VALUE ) . subtract ( java.math.BigInteger . valueOf ( java.lang.Long.MAX_VALUE ) ) , result ) ; } 
@ org.junit.Test ( timeout = 1000 ) public void randomMovement () { java.lang.String rID = "1" ; java.lang.String bID = "0" ; edu.vt.ece5574.agents.User oUsr = new edu.vt.ece5574.agents.User ( sim , rID , bID , true , 1 , 1 ) ; sim . addAgent ( oUsr ) ; double initial_x = oUsr . getX () ; double initial_y = oUsr . getY () ; oUsr . createRandomMovement ( sim ) ; assertFalse ( ( ( ( oUsr . getX () ) == initial_x ) && ( ( oUsr . getY () ) == initial_y ) ) ) ; } 
public void loadImages ( java.util.List < com.albums.model.Album > albums ) { if ( ( albums != null ) && ( ( albums . size () ) > 0 ) ) { waitMb . show ( baseAlbumActivity ) ; this . unprocessedAlbums = new java.util.ArrayList < com.albums.model.Album > ( albums ) ; for ( int i = 0 ; i < ( albums . size () ) ; i ++ ) { com.albums.util.ImageLoader imageLoader = new com.albums.util.ImageLoader ( baseAlbumActivity , this ) ; imageLoader . execute ( albums . get ( i ) ) ; } } } 
private void skipComment () { com.rezzedup.map.Source.Character peek = source . peekNextCharacter () ; while ( ( ( ( peek.character ) != null ) && ( ( peek.character ) != '#' ) ) && ( ( peek.character ) != '\n' ) ) { source . getNextCharacter () ; peek = source . peekNextCharacter () ; } if ( ( peek.character ) == '#' ) { source . getNextCharacter () ; } } 
private void ToggleCircleColor ( com.google.android.gms.maps.model.Circle circle ) { int strokeColor = ( circle . getStrokeColor () ) ^ 52224 ; circle . setStrokeColor ( strokeColor ) ; circle . setStrokeWidth ( ( ( circle . getStrokeWidth () ) == 3 ? 6 : 3 ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public cn.momia.mapi.web.response.ResponseMessage placeOrder ( @ org.springframework.web.bind.annotation.RequestParam java.lang.String utoken , @ org.springframework.web.bind.annotation.RequestParam java.lang.String order ) { if ( ( org.apache.commons.lang3.StringUtils . isBlank ( utoken ) ) || ( org.apache.commons.lang3.StringUtils . isBlank ( order ) ) ) return cn.momia.mapi.web.response.ResponseMessage.BAD_REQUEST ; com.alibaba.fastjson.JSONObject orderJson = com.alibaba.fastjson.JSON . parseObject ( order ) ; orderJson . put ( "customerId" , userServiceApi.USER . get ( utoken ) . getId () ) ; dealServiceApi.ORDER . add ( orderJson ) ; return cn.momia.mapi.web.response.ResponseMessage.SUCCESS ; } 
public double getCoefficientOfVariation () { int count = this . getCount () ; if ( count == 0 ) { throw new cfvbaibai.cardfantasy.CardFantasyRuntimeException ( "Cannot get square deviation on empty data set." ) ; } double s = 0.0 ; double avg = this . getAverage () ; if ( avg == 0.0 ) { return 0.0 ; } for ( double data : this . dataList ) { s += ( data - avg ) * ( data - avg ) ; } return ( java.lang.Math . sqrt ( ( s / count ) ) ) / avg ; } 
private void visitYieldExpression ( com.google.javascript.rhino.Node n ) { if ( n . getParent () . isExprResult () ) { return; } if ( ( decomposer . canExposeExpression ( n ) ) != ( ExpressionDecomposer.DecompositionType.UNDECOMPOSABLE ) ) { decomposer . exposeExpression ( n ) ; compiler . reportCodeChange () ; } else { compiler . report ( com.google.javascript.jscomp.JSError . make ( n , Es6ToEs3Converter.CANNOT_CONVERT , "Undecomposable expression" ) ) ; } } 
public com.badlogic.poker.core.logic.WinCondition checkCombination () { com.badlogic.poker.core.logic.Card [] cardsOnDesk = game . getTable () . getCardsOnDesk () ; java.lang.System.out . println ( ( "cards on table: " + ( cardsOnDesk.length ) ) ) ; com.badlogic.poker.core.logic.WinCondition win = checkForKind ( cardsOnDesk ) ; game . drawTable () ; game . changeMoney ( win . getCost () ) ; return win ; } 
public java.lang.String toString () { java.lang.String res = ( ( ( lieuxDepart ) + " -> " ) + ( lieuxArrivee ) ) + " " ; if ( ( hDepart ) != null ) res += "Depart : " + ( hDepart ) ; if ( ( hArrivee ) != null ) res += "Arrivee : " + ( hArrivee ) ; return res ; } 
@ java.lang.Deprecated @ android.support.annotation.Nullable public java.lang.String toLegacyString () { java.lang.String string = ( ( this ) == ( org.wikipedia.page.Namespace.MAIN ) ) ? null : this . name () ; if ( string != null ) { string = org.wikipedia.util.StringUtil . capitalizeFirstChar ( string . toLowerCase () ) ; } return string ; } 
public cs446.mezzo.music.playlists.Playlist getPlaylist ( java.lang.String playlistName ) { if ( playlistName . equals ( cs446.mezzo.music.playlists.PlaylistManager.FAVOURITES ) ) { return mFavourites ; } else if ( mUserPlaylists . containsKey ( playlistName ) ) { return mUserPlaylists . get ( playlistName ) ; } final cs446.mezzo.music.playlists.AutoPlaylist autoPlaylist = cs446.mezzo.music.playlists.AutoPlaylist . get ( playlistName ) ; if ( autoPlaylist == null ) { return null ; } return autoPlaylist . getPlaylist ( mLocalMusicFetcher , mStatCollector ) ; } 
@ java.lang.Override public java.lang.String generateUri ( java.io.File file , java.lang.String id ) { java.lang.String uri = file . toURI () . toString () ; uri = ( ( getOutputUriReplace () ) != null ) ? applyOutputUriReplace ( uri , getOutputUriReplace () ) : uri ; uri = ( ( getOutputUriPrefix () ) != null ) ? ( getOutputUriPrefix () ) + uri : uri ; uri = ( ( getOutputUriSuffix () ) != null ) ? uri + ( getOutputUriSuffix () ) : uri ; return uri ; } 
@ java.lang.Override public void onSuccess ( java.lang.Object object ) { if ( null != object ) { heroes = ( ( com.example.pratik.dota2profile.beans.Heroes ) ( object ) ) ; for ( com.example.pratik.dota2profile.beans.Hero i : heroes . getResult () . getHeroes () ) { heroesMap . put ( java.lang.Integer . parseInt ( i . getId () ) , i . getLocalizedName () ) ; } } } 
public void fakeBtnFb () { playSound ( R.raw.touch_sound ) ; if ( ( com.oic.game.ailatrieuphu.util.NetworkUtils . checkInternetConnection ( this ) ) && ( mSocketAltp . isConnected () ) ) { int permissionCheck = android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.READ_PHONE_STATE ) ; if ( permissionCheck != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , new java.lang.String [] { Manifest.permission.READ_PHONE_STATE } , com.oic.game.ailatrieuphu.ui.activity.LoginScreen.REQUEST_READ_PHONE_STATE ) ; } else { mLoginButtonFb . performClick () ; } } else { connectionDialog . show () ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { java.util.Calendar cal = java.util.Calendar . getInstance () ; new android.app.DatePickerDialog ( context , dateSetListener , cal . get ( java.util.Calendar.YEAR ) , ( ( cal . get ( java.util.Calendar.MONTH ) ) + 1 ) , cal . get ( java.util.Calendar.DAY_OF_MONTH ) ) . show () ; } 
public final void setMaximized ( boolean maximized ) { if ( ( ( isMaximizable () ) && ( ! ( isMaximized () ) ) ) && maximized ) { fireMaximizeEvent () ; maximizedProperty . set ( true ) ; } else if ( ( ! maximized ) && ( isMaximized () ) ) { fireRestoreEvent () ; maximizedProperty . set ( false ) ; } } 
@ java.lang.Override public cn.edu.nju.software.entity.User addOrUpdateUser ( cn.edu.nju.software.entity.User user ) { if ( ( ( user . getId () ) != null ) && ( ( user . getId () ) != 0 ) ) { boolean up = userDao . updateUser ( user ) ; return up ? user : null ; } boolean res = userDao . saveUser ( user ) ; if ( res ) { user . setId ( userDao . getNewestId () ) ; return user ; } return null ; } 
@ java.lang.Override public void call ( java.lang.reflect.Method method ) { java.lang.Class < ? > [] parameterTypes = method . getParameterTypes () ; com.androidyuan.rxbus.component.Subscribe subscribeAnnotation = method . getAnnotation ( com.androidyuan.rxbus.component.Subscribe . class ) ; if ( subscribeAnnotation != null ) { java.lang.Class < ? > eventType = parameterTypes [ 0 ] ; java.lang.String key = eventType . getName () ; putObject ( key , subscriber ) ; } } 
@ java.lang.Override protected void onSaveInstanceState ( android.os.Bundle outState ) { super . onSaveInstanceState ( outState ) ; outState . putString ( "query" , query ) ; if ( ( mRecipeAdapter . getItemCount () ) != 0 ) { mRecipeList = mRecipeAdapter . getData () ; outState . putParcelableArrayList ( BUNDLE_RECIPE_ARRAY , mRecipeList ) ; } } 
private java.util.Date parsePubdateDate ( java.lang.String dateStr , boolean tryAllFormat ) { long mNow = new java.util.Date () . getTime () ; for ( java.text.DateFormat format : com.rssreader.utils.TimeUtils.PUBDATE_DATE_FORMATS ) { try { java.util.Date result = format . parse ( dateStr ) ; return ( result . getTime () ) > mNow ? new java.util.Date ( mNow ) : result ; } catch ( java.text.ParseException e ) { android.util.Log . e ( com.rssreader.utils.TimeUtils.TAG , "Wrong pubdate format" ) ; } } return tryAllFormat ? parseUpdateDate ( dateStr , false ) : null ; } 
public static boolean matchTypes ( com.jetbrains.ther.typing.types.TheRType type , com.jetbrains.ther.typing.types.TheRType replacementType ) { if ( type instanceof com.jetbrains.ther.typing.types.TheRUnionType ) { return ( ( com.jetbrains.ther.typing.types.TheRUnionType ) ( type ) ) . contains ( replacementType ) ; } return ( type . equals ( replacementType ) ) || ( com.jetbrains.ther.typing.TheRTypeProvider . isSubtype ( replacementType , type ) ) ; } 
public void onBreakBlock ( net.minecraft.world.World worldIn ) { if ( worldIn.isRemote ) return; net.minecraftforge.fml.common.FMLLog . info ( "onBreakBlock in TileEntity" ) ; for ( com.balrog.InfernalTech.energy.IEnergyChannel channel : this . channels ) { channel . removeChannelConnection ( worldIn , this ) ; } this . channels . clear () ; this . receivers = new cofh.api.energy.IEnergyReceiver [ 6 ] ; com.balrog.InfernalTech.energy.EnergyNetwork network = this . getNetwork () ; if ( network != null ) network . destroy () ; } 
private void addHistoryToDb () { com.example.run.RunHistory newHistory = new com.example.run.RunHistory ( mStartTime . getTime () , mRunnerData . getTime () , mRunnerData . getDistance () , mRunnerFilename ) ; com.example.run.DatabaseHelper dbHelper = new com.example.run.DatabaseHelper ( this ) ; if ( ( mRouteId ) == ( HistoryActivity.NO_ROUTE_FLAG ) ) { dbHelper . addHistory ( newHistory ) ; } else if ( ( mRouteId ) == ( HistoryActivity.NEW_ROUTE_FLAG ) ) { dbHelper . newRoute ( newHistory , com.example.run.MapsActivity.mRouteNamePrefix ) ; } else { dbHelper . appendRunToRoute ( newHistory , mRouteId ) ; } } 
public java.lang.Thread addPerson ( int sourceFloor , int destinationFloor ) { java.lang.Thread person = new java.lang.Thread ( new com.ru.usty.elevator.Person ( sourceFloor , destinationFloor , this ) ) ; person . start () ; personCount . set ( sourceFloor , ( ( personCount . get ( sourceFloor ) ) + 1 ) ) ; return null ; } 
public com.bftcom.timesheet.export.WorklogExportParams projects ( java.util.Collection < java.lang.String > projectNames ) { if ( ( projectNames == null ) || ( ( projectNames . size () ) == 0 ) ) { this . projects = java.util.Collections . emptyList () ; } else { this . projects = transformProjects ( ( ( java.lang.String [] ) ( projectNames . toArray () ) ) ) ; } return this ; } 
@ java.lang.Override public void onAccountCreatorIsPhoneNumberUsed ( org.linphone.core.LinphoneAccountCreator accountCreator , org.linphone.core.LinphoneAccountCreator.Status status ) { if ( ( org.linphone.assistant.AssistantActivity . instance () ) == null ) { apply . setEnabled ( true ) ; return; } if ( ( status . equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAccount ) ) || ( status . equals ( LinphoneAccountCreator.Status.PhoneNumberUsedAlias ) ) ) { accountCreator . recoverPhoneAccount () ; } else { apply . setEnabled ( true ) ; org.linphone.LinphoneUtils . displayErrorAlert ( org.linphone.LinphoneUtils . errorForStatus ( status ) , org.linphone.assistant.AssistantActivity . instance () ) ; } } 
public boolean checkTouch ( float coordX , float coordY ) { return ( ( coordX >= ( offsetX ) ) && ( coordX < ( ( offsetX ) + ( getWidth () ) ) ) ) && ( ( coordY >= ( offsetY ) ) && ( coordY < ( ( offsetY ) + ( getHeight () ) ) ) ) ; } 
@ java.lang.Override public void loadMoreFinish ( boolean emptyResult , boolean hasMore ) { mLoadError = false ; mListEmpty = emptyResult ; mIsLoading = false ; mHasMore = hasMore ; if ( ( mLoadMoreUIHandler ) != null ) { mLoadMoreUIHandler . onLoadFinish ( this , emptyResult , hasMore ) ; } if ( ( mFooterView ) != null ) { if ( hasMore ) { mFooterView . setVisibility ( com.being.base.ui.widget.ptr.loadmore.VISIBLE ) ; } else { mFooterView . setVisibility ( com.being.base.ui.widget.ptr.loadmore.GONE ) ; } } } 
@ java.lang.Override public void mouseWheelMoved ( java.awt.event.MouseWheelEvent e ) { int sign = e . getWheelRotation () ; if ( sign < 0 ) { this . cam_zoom_increase () ; return; } if ( sign > 0 ) { this . cam_zoom_decrease () ; return; } } 
@ java.lang.Override protected void onResume () { super . onResume () ; int orderId = getIntent () . getIntExtra ( OrderStatusNotification.ORDER_ID , ( - 1 ) ) ; if ( orderId != ( - 1 ) ) navTo ( new activity.OrderDetailFragment () . setOrder ( new model.Order ( orderId ) ) ) ; } 
public void displayTestCollection ( final com.google.gwt.user.client.ui.Panel testsPanel ) { currentActorOption . loadTests ( new com.google.gwt.user.client.rpc.AsyncCallback < java.util.List < gov.nist.toolkit.results.client.TestInstance > > () { @ java.lang.Override public void onFailure ( java.lang.Throwable throwable ) { new gov.nist.toolkit.xdstools2.client.widgets.PopupMessage ( ( "getTestlogListing: " + ( throwable . getMessage () ) ) ) ; } @ java.lang.Override public void onSuccess ( java.util.List < gov.nist.toolkit.results.client.TestInstance > testInstances ) { loadingMessage . setHTML ( "Loading..." ) ; displayTests ( testsPanel , testInstances , allowRun () ) ; } } ) ; } 
@ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { if ( ( responseHandler ) != null ) { responseHandler . onSuccess ( reqId , header , sequence , result , type , taxonRank ) ; } else { biospectra.classify.ClassifierClient.LOG . error ( "responseHandler is not set" ) ; } } 
@ java.lang.Override public void onBackPressed () { java.lang.String displayedFragment = contactsModel . getProperty ( io.craigmiller160.contacts5.util.ContactsConstants.DISPLAYED_FRAGMENT , java.lang.String . class ) ; if ( ( displayedFragment != null ) && ( displayedFragment . equals ( io.craigmiller160.contacts5.util.ContactsConstants.TABS_FRAGMENT_TAG ) ) ) { finish () ; } else { backAction () ; } } 
private void ensureConnection ( ) throws java.sql.SQLException { boolean bclosed ; try { bclosed = ( ( m_c ) == null ) || ( m_c . isClosed () ) ; } catch ( java.sql.SQLException e ) { bclosed = true ; } if ( bclosed ) { connect () ; } } 
public it.blogspot.geoframe.SewerPipeDimensioning.Pipe run ( final it.blogspot.geoframe.SewerPipeDimensioning.Pipe pipe ) { setPipe ( pipe ) ; if ( ( pipeSlope ) >= ( minSlope ) ) { this . pipe . buildPipe ( elevationEndPoint , computeDiameter ( pipeSlope ) , it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient , computeVelocity () ) ; } else { this . pipe . buildPipe ( computeElevationEndPoint ( minSlope ) , diameter , it.blogspot.geoframe.SewerPipeDimensioning.SewerPipeDimensioning.fillCoefficient , computeVelocity () ) ; } return this . pipe ; } 
public boolean insert ( int newData ) { Node newestNode = new Node () ; if ( newestNode == null ) { java.lang.System.out . println ( "Out of memory error." ) ; return false ; } else { newestNode . setData ( newData ) ; newestNode . setNext ( head . getNext () ) ; head . setNext ( newestNode ) ; return true ; } } 
protected void fillValues ( java.util.List < java.lang.Object > valueList , java.lang.String sql , java.sql.PreparedStatement stmt ) { int index = 0 ; for ( java.lang.Object o : valueList ) { try { stmt . setObject ( ( ++ index ) , o ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( ( ( ( ( ( ( e . getMessage () ) + " - Index: " ) + index ) + ", Value: " ) + o ) + ", Query: " ) + sql ) , e ) ; } } } 
private void showMoreBooks ( int itemsPerPage ) { int start = lessBooks . size () ; int end = start + itemsPerPage ; for ( int i = start ; i < end ; i ++ ) { lessBooks . add ( books . get ( i ) ) ; } } 
@ java.lang.Override public java.lang.String export ( be.nikiroo.gofetch.data.Story story ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; append ( builder , story , false ) ; builder . append ( "i\r\n" ) ; if ( ( story . getComments () ) != null ) { for ( be.nikiroo.gofetch.data.Comment comment : story . getComments () ) { append ( builder , comment , "" ) ; } } builder . append ( "i\r\n" ) ; return builder . toString () ; } 
private static java.lang.String getPath ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile root , @ org.jetbrains.annotations.NotNull com.intellij.openapi.vfs.VirtualFile file ) { java.lang.String path = com.intellij.openapi.util.text.StringUtil . notNullize ( mobi.hsz.idea.gitignore.util.Utils . getRelativePath ( root , file ) ) ; path = mobi.hsz.idea.gitignore.util.Utils . escapeChar ( path , '[' ) ; path = mobi.hsz.idea.gitignore.util.Utils . escapeChar ( path , ']' ) ; path = com.intellij.openapi.util.text.StringUtil . trimLeading ( path , VfsUtil.VFS_PATH_SEPARATOR ) ; return ( com.intellij.openapi.vfs.VfsUtil.VFS_PATH_SEPARATOR ) + path ; } 
@ java.lang.Override public boolean isDisabled ( java.lang.String layerName ) { uk.ac.rdg.resc.edal.catalogue.jaxb.VariableConfig xmlVariable = getXmlVariable ( layerName ) ; if ( xmlVariable != null ) { return xmlVariable . isDisabled () ; } else { uk.ac.rdg.resc.edal.ncwms.config.NcwmsDynamicService dynamicService = getDynamicServiceFromLayerName ( layerName ) ; if ( dynamicService != null ) { return dynamicService . isDisabled () ; } else { return true ; } } } 
private boolean isGetter ( java.lang.reflect.Method method , java.lang.String fieldName ) { return ( method . getName () . equals ( ( "get" + ( org.redisson.liveobject.core.AccessorInterceptor . getFieldNameSuffix ( fieldName ) ) ) ) ) || ( method . getName () . equals ( ( "is" + ( org.redisson.liveobject.core.AccessorInterceptor . getFieldNameSuffix ( fieldName ) ) ) ) ) ; } 
@ net.canarymod.commandsys.TabComplete ( commands = { "disableplugin" , "reloadplugin" } ) public java.util.List < java.lang.String > matchPluginName ( net.canarymod.chat.MessageReceiver caller , java.lang.String [] args ) { return ( args.length ) == 1 ? matchTo ( args , net.canarymod.Canary . pluginManager () . getPluginNames () . toArray ( new java.lang.String [ 0 ] ) ) : null ; } 
@ java.lang.Override public int onStartCommand ( android.content.Intent intent , int flags , int startId ) { android.util.Log . i ( "LocalService" , ( ( ( "Received start id " + startId ) + ": " ) + intent ) ) ; mIsPersistent = true ; if ( intent != null ) { android.content.Intent target = intent . getParcelableExtra ( "notificationTarget" ) ; if ( target != null ) showNotification ( target ) ; } return START_STICKY ; } 
private < T > T getObject ( java.lang.String url , java.lang.Class < T > type ) { this . services = client . target ( ( ( com.excilys.formation.computerdb.ui.RestCLI.BASE_URL ) + url ) ) ; java.lang.System.out . println ( ( ( com.excilys.formation.computerdb.ui.RestCLI.BASE_URL ) + url ) ) ; javax.ws.rs.client.Invocation.Builder request = this . services . request ( MediaType.APPLICATION_JSON ) ; javax.ws.rs.core.Response response = request . get () ; if ( ( response . getStatus () ) == 200 ) { return response . readEntity ( type ) ; } return null ; } 
private void getDeviceLocation () { if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( getActivity () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationPermissionGranted = true ; } else { android.support.v4.app.ActivityCompat . requestPermissions ( getActivity () , new java.lang.String [] { android.Manifest.permission.ACCESS_FINE_LOCATION } , me.kahlout.rangebuddy.DistanceFragment.PERMISSIONS_REQUEST_ACCESS_FINE_LOCATION ) ; } if ( mLocationPermissionGranted ) { mCurrentLocation = LocationServices.FusedLocationApi . getLastLocation ( mGoogleApiClient ) ; LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; } } 
@ java.lang.Override public int newNet ( java.lang.String shortName , int cloneId , int width ) { java.lang.System.out . println ( ( ( ( ( ( "newNet " + shortName ) + " " ) + cloneId ) + " " ) + width ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList . get ( ( ( fCurrentEvent ) ++ ) ) ; assertEquals ( event.fType , VCDLoaderTest.ExpectTraceBuilder.EXPECT_NET ) ; assertEquals ( event.fName , shortName ) ; assertEquals ( event.fId , cloneId ) ; assertEquals ( event.fWidth , width ) ; return ( fNextNetId ) ++ ; } 
public void endSection ( int section ) { lcm.spy.ObjectPanel.Section cs = sections . get ( section ) ; if ( ( collapse_depth ) == 0 ) { unindent () ; } if ( sections . get ( section ) . collapsed ) { ( collapse_depth ) -- ; } spacer () ; endColorBlock () ; spacer () ; } 
private static java.lang.Boolean ReadVerifyStoreDumpPage ( net.basov.nfc.NFCaDump dump , java.lang.String line ) { java.lang.Boolean rc = false ; if ( ( line . matches ( "-?[0-9a-fA-F]+" ) ) && ( ( line . length () ) == 8 ) ) { dump . addPage ( net.basov.util.FileIO . hexStringToByteArray ( line ) ) ; rc = true ; } else { dump . appendRemark ( ( ( "E: :" + line ) + ":\n" ) ) ; rc = false ; } return rc ; } 
public java.util.List < de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState > process ( final de.uni_freiburg.informatik.ultimate.plugins.analysis.abstractinterpretationv2.domain.nonrelational.interval.IntervalDomainState oldState , final de.uni_freiburg.informatik.ultimate.model.boogie.ast.Statement statement ) { mReturnState = new java.util.ArrayList <> () ; assert oldState != null ; assert statement != null ; mOldState = oldState ; mLhsVariable = null ; processStatement ( statement ) ; assert ( ( oldState . getVariables () . size () ) == 0 ) || ( ( mReturnState . size () ) != 0 ) ; return mReturnState ; } 
public void setDockBatteryController ( com.android.systemui.statusbar.policy.DockBatteryController dockBatteryController ) { com.android.systemui.DockBatteryMeterView v = ( ( com.android.systemui.DockBatteryMeterView ) ( findViewById ( R.id.dock_battery ) ) ) ; if ( dockBatteryController != null ) { v . setBatteryStateRegistar ( dockBatteryController ) ; if ( ( mDockBatteryLevel ) != null ) { mDockBatteryLevel . setBatteryStateRegistar ( dockBatteryController ) ; } } else { if ( v != null ) { removeView ( v ) ; } if ( ( mDockBatteryLevel ) != null ) { removeView ( mDockBatteryLevel ) ; mDockBatteryLevel = null ; } } } 
@ java.lang.Override public void afterTextChanged ( android.text.Editable s ) { java.lang.String text = s . toString () . trim () ; savedApis . clear () ; for ( int i = 0 ; i < ( allsavedApis . size () ) ; i ++ ) { if ( allsavedApis . get ( i ) . getName () . toLowerCase () . contains ( text . toLowerCase () ) ) { savedApis . add ( allsavedApis . get ( i ) ) ; } } mAdapter . notifyDataSetChanged () ; setEmptyText () ; } 
public boolean collidesWithFace ( entities.Ball b ) { org.lwjgl.util.vector.Vector3f closest = toolbox.Maths . closestPtPointTriangle ( b . getPosition () , point1 , point2 , point3 ) ; org.lwjgl.util.vector.Vector3f . sub ( b . getPosition () , closest , dist ) ; if ( ( dist . length () ) <= ( entities.Ball.RADIUS ) ) return true ; return false ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( makeupCount ) < ( saveBitmap . size () ) ) { ( makeupCount ) ++ ; temp = saveBitmap . get ( makeupCount ) . copy ( temp . getConfig () , true ) ; imageView . setImageBitmap ( temp ) ; android.util.Log . d ( ( ( fyp.hkust.facet.activity.ColorizeFaceActivity.TAG ) + " redo " ) , ( ( ( saveBitmap . size () ) + " " ) + ( makeupCount ) ) ) ; } } 
public void Proceed () { turnState = org.tilegames.hexicube.cah.client.neoteny.gameState.GameLogic.TurnState.ADDING_TO_PILE ; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardsLayer . ClearPile () ; org.tilegames.hexicube.cah.client.neoteny.gameLayers.CardGame . SetNotification ( "" ) ; subCards . clear () ; for ( org.tilegames.hexicube.cah.client.neoteny.gameState.DummyPlayer dum : dummies ) { if ( ( czar.id ) != ( dum.me.id ) ) { dum . RequestCardSubmit () ; } } } 
private static Chat.Builder buildMockChat () { java.util.Random random = new java.util.Random () ; sjchat.messages.Chat.Builder chatBuilder = sjchat.messages.Chat . newBuilder () ; chatBuilder . setId ( null ) ; chatBuilder . setTitle ( ( "Test chat " + ( chatBuilder . getId () ) ) ) ; return chatBuilder ; } 
@ java.lang.Override public void transactionEnd () { javax.persistence.EntityManager em = br.com.criativasoft.opendevice.middleware.persistence.HibernateProvider . getInstance () ; br.com.criativasoft.opendevice.middleware.persistence.HibernateProvider . setInstance ( null ) ; javax.persistence.EntityTransaction local = em . getTransaction () ; try { if ( local . isActive () ) local . commit () ; } catch ( java.lang.RuntimeException e ) { if ( ( local != null ) && ( local . isActive () ) ) local . rollback () ; throw e ; } finally {} } 
@ java.lang.Override public void update ( float delta ) { com.osreboot.ridhvl.painter.HvlCamera . setX ( ( ( com.osreboot.ridhvl.painter.HvlCamera . getX () ) + ( ( ( HvlInputSeriesAction.HORIZONTAL . getCurrentOutput () ) * delta ) * 256.0F ) ) ) ; com.osreboot.ridhvl.painter.HvlCamera . setY ( ( ( com.osreboot.ridhvl.painter.HvlCamera . getY () ) + ( ( ( HvlInputSeriesAction.VERTICAL . getCurrentOutput () ) * delta ) * 256.0F ) ) ) ; if ( ( tilemaps ) != null ) { tilemaps . update ( delta ) ; tilemaps . draw ( delta ) ; } } 
public void run () { while ( ( gameRunning ) && ( ! ( gameOver ) ) ) { run_game () ; try { java.lang.Thread . sleep ( com.se.softwareEngineering.gameEngine.GameEngine.gameSpeed ) ; } catch ( java.lang.Throwable t ) { if ( com.se.softwareEngineering.gameEngine.GameEngine.debug ) { java.lang.System.err . println ( t ) ; } } } if ( gameOver ) { finish () ; } } 
@ org.junit.Test public void testStart () { java.lang.System.out . println ( "Testing OrionCKANSink.start" ) ; attrPersistence = "row" ; enableGrouping = "true" ; org.apache.flume.Context context = createContext ( attrPersistence , enableGrouping ) ; sink . configure ( context ) ; sink . setChannel ( new org.apache.flume.channel.MemoryChannel () ) ; sink . start () ; assertTrue ( ( ( sink . getPersistenceBackend () ) != null ) ) ; assertEquals ( LifecycleState.START , sink . getLifecycleState () ) ; } 
public void addLast ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } Deque < Item > . Node old = last ; last = new Node () ; last.item = item ; last.backward = old ; last.forward = null ; ( size ) ++ ; if ( ( size ) == 1 ) { first = last ; } else { old.forward = last ; } } 
public java.lang.String getLabel () { if ( ( ! ( labelSet ) ) && ( ! ( localVarLabelSet ) ) ) { if ( ( algoParent ) == null ) { return toOutputValueString () ; } return algoParent . getCommandDescription () ; } return kernel . printVariableName ( label ) ; } 
public lib.Number push ( char digit ) { if ( ( ! ( this . hasDecimal ) ) || ( digit != '.' ) ) { this . hasDecimal = ( this . hasDecimal ) || ( digit == '.' ) ; this . state += digit ; } return this ; } 
private void play () { this . showBoard () ; do { players [ current ] . makeMove ( board ) ; this . showBoard () ; current = ( ( current ) + 1 ) % 2 ; } while ( ( ! ( board . hasWinner () ) ) && ( ! ( board . isFull () ) ) ) ; this . printResult () ; } 
private boolean hasHeader ( int position ) { if ( ( position == 0 ) && ( ( mAdapter . getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) ) { return true ; } int previous = position - 1 ; return ( ( mAdapter . getHeaderId ( position ) ) != ( android.support.v7.widget.RecyclerView.NO_ID ) ) && ( ( mAdapter . getHeaderId ( position ) ) != ( mAdapter . getHeaderId ( previous ) ) ) ; } 
public stamboom.domain.Gezin getGezin ( int gezinsNr ) { if ( ( ( ( gezinnen ) != null ) && ( 1 <= gezinsNr ) ) && ( 1 <= ( gezinnen . size () ) ) ) { return gezinnen . get ( ( gezinsNr - 1 ) ) ; } return null ; } 
public boolean waterWeakest ( ) throws battlecode2017.GameActionException { battlecode2017.TreeInfo weakest = trees . getWeakestTreeWithinInteract ( team ) ; if ( ( ( weakest != null ) && ( ( weakest.health ) <= ( TREE_WATERING_THRESHOLD ) ) ) && ( rc . canWater ( weakest.location ) ) ) { rc . water ( weakest.location ) ; return true ; } else { return false ; } } 
boolean equals ( int itemID , int meta , net.minecraft.nbt.NBTTagCompound nbt ) { return ( ( ( this . itemID ) == itemID ) && ( ( this . meta ) == meta ) ) && ( ( ( this . nbt ) == nbt ) || ( ( ( this . nbt ) != null ) && ( this . nbt . equals ( nbt ) ) ) ) ; } 
public void resolveRoute () { try { activity . activityCloseLoadingBar () ; closeLoadingBar () ; } catch ( java.lang.Exception e ) { android.util.Log . e ( Constants.TAG , "Error loading bar instance has not been created. in ActivityHelper resolveroute" ) ; } java.lang.String pendingDelivery = orderStatusDataBase . getOrderStatus () ; android.util.Log . d ( Constants.TAG , "Checking value of pending delivery =  " ) ; if ( pendingDelivery == "" ) { activity . replaceFragment ( R.layout.fragment_main , null ) ; } else { android.util.Log . d ( Constants.TAG , "Delivery status pending.." ) ; activity . replaceFragment ( R.layout.fragment_order_status , null ) ; } } 
public void updateAirCondition () { java.util.List < java.lang.String > devices = deviceStatusDao . selectAllActiveDevices () ; java.util.List < model.CleanerStatus > cleanerStatusList = new java.util.ArrayList < model.CleanerStatus > () ; for ( java.lang.String deviceID : devices ) { model.CleanerStatus cleanerStatus = getCleanerStatus ( deviceID ) ; if ( ( cleanerStatus != null ) && ( ( cleanerStatus . getDeviceID () ) != null ) ) { cleanerStatusList . add ( cleanerStatus ) ; } } boolean update = deviceStatusDao . insertDeviceStatus ( cleanerStatusList ) ; } 
private static java.lang.Class < ? > forName ( final java.lang.String directory , final java.lang.String name ) { try { final java.lang.Class < ? > cls = org.obicere.cc.util.Reflection.LOADER . loadClass ( name ) ; if ( cls != null ) { return cls ; } } catch ( final java.lang.Throwable ignored ) {} return org.obicere.cc.util.Reflection.DEFINER . attemptDefine ( directory , name ) ; } 
private boolean isOwnProfile ( javax.faces.context.FacesContext fctx ) { if ( fctx . getViewRoot () . getViewId () . endsWith ( "profile.xhtml" ) ) { int userID = java.lang.Integer . parseInt ( javax.faces.context.FacesContext . getCurrentInstance () . getExternalContext () . getRequestParameterMap () . get ( "userID" ) ) ; if ( ( sessionUser . getUserID () ) == userID ) { return true ; } } return false ; } 
private void initView () { mobileNumber = getIntent () . getStringExtra ( "NUMBER" ) ; android.widget.TextView mobileNum = getView ( R.id.editText_mobileNumber ) ; profilePic = getView ( R.id.profile_thumb ) ; mobileNum . setText ( ( ( getResources () . getString ( R.string.string_plus ) ) + ( mobileNumber ) ) ) ; emailEditText = getView ( R.id.editText_email ) ; nameEditText = getView ( R.id.editText_name ) ; } 
private void updateReady ( java.util.List < com.kilobolt.framework.Input.TouchEvent > touchEvents ) { if ( ! ( otherSizeIsSet ) ) { bluetoothModule . sendMessage ( java.lang.String . format ( "%s %d %d" , com.wanlin.androidgame.pikachuvolleyball.GameScreen.SCREEN_SIZE_KEY , com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenWidth , com.wanlin.androidgame.pikachuvolleyball.GameScreen.screenHeight ) ) ; otherSizeIsSet = true ; } else { if ( ( touchEvents . size () ) > 0 ) { stargGame () ; bluetoothModule . sendMessage ( java.lang.String . valueOf ( com.wanlin.androidgame.pikachuvolleyball.GameScreen.START_THAT_FUKING_GAMEEEE ) ) ; } } } 
@ java.lang.Override public fi.nls.oskari.domain.map.view.View getViewWithConf ( java.lang.String viewName ) { if ( ( viewName != null ) && ( ! ( viewName . isEmpty () ) ) ) { for ( fi.nls.oskari.domain.map.view.View item : list ) { if ( viewName . equals ( item . getName () ) ) { return item ; } } } return null ; } 
public com.buyhatke.core.Entry get ( java.lang.String key ) { com.buyhatke.core.Entry entry = getInMemoryEntry ( key ) ; if ( entry == null ) { entry = checkInFileSystem ( key ) ; if ( entry != null ) { if ( ! ( com.buyhatke.core.PersistenceManager . isExpired ( entry ) ) ) { this . put ( entry ) ; } else { return null ; } } } return entry ; } 
private java.lang.String getPlaylist () { int entryCount = java.lang.Integer . parseInt ( getConfiguration () . getProperty ( "playlist.entry.count" ) ) ; java.lang.StringBuilder playlist = new java.lang.StringBuilder () ; for ( int i = 1 ; i < entryCount ; i ++ ) { playlist . append ( i ) ; playlist . append ( "/ " ) ; playlist . append ( getConfiguration () . getProperty ( ( "playlist.entry.name." + i ) ) ) ; playlist . append ( "\n" ) ; } return playlist . toString () ; } 
public boolean isViewUnder ( android.view.View view , int x , int y ) { if ( view == null ) { return false ; } return ( ( ( x >= ( view . getX () ) ) && ( x < ( ( view . getX () ) + ( view . getWidth () ) ) ) ) && ( y >= ( view . getY () ) ) ) && ( y < ( ( view . getY () ) + ( view . getHeight () ) ) ) ; } 
private com.questdb.ql.parser.RecordSource compile ( com.questdb.ql.parser.QueryModel model , com.questdb.factory.JournalReaderFactory factory ) throws com.questdb.ex.JournalException , com.questdb.ex.ParserException { return limit ( order ( selectColumns ( ( ( model . getJoinModels () . size () ) > 1 ? optimise ( model , factory ) . compileJoins ( model , factory ) : compileSingleOrSubQuery ( model , factory ) ) , model ) , model ) , model ) ; } 
public DataStructure.LinkedList2 < T > . Node search ( T value ) { DataStructure.LinkedList2 < T > . Node x = nil.next ; nil.key = value ; while ( ( x.key ) != value ) { x = x.next ; } nil.key = null ; if ( x == ( nil ) ) { return null ; } return x ; } 
private void changeValue ( boolean add ) { oldValue = value ; if ( add ) { value = java.lang.Math . min ( maxValue , ( ( value ) + ( step ) ) ) ; } else { value = java.lang.Math . max ( minValue , ( ( value ) - ( step ) ) ) ; } if ( ( onValueChangedListener ) != null ) { onValueChangedListener . onValueChanged ( this , value , oldValue , minValue , maxValue , false ) ; } } 
public be.willima.jrpgdatabase.model.JRPGTile getTile ( int x , int y ) throws java.lang.IndexOutOfBoundsException { be.willima.jrpgdatabase.model.JRPGTile tile = null ; if ( ( ( ( x < 0 ) || ( x >= ( this . width ) ) ) || ( y < 0 ) ) || ( y >= ( this . height ) ) ) { throw new java.lang.IndexOutOfBoundsException ( "Tile not within map region!" ) ; } else { tile = this . tiles [ x ] [ y ] ; } return tile ; } 
@ java.lang.Override public boolean accept ( java.io.File pathname ) { if ( pathname . getName () . contains ( EInternalTemplate.HEADER_ADDITIONAL . toString () ) ) { if ( pathname . getName () . contains ( ( ( language . getExtension () ) + ( org.talend.designer.codegen.config.TemplateUtil.TEMPLATE_EXT ) ) ) ) { return true ; } } return false ; } 
@ java.lang.Override public org.lemurproject.galago.core.parse.Document nextDocument ( ) throws java.io.IOException { org.lemurproject.galago.core.parse.Document doc = super . nextDocument () ; if ( ! ( doc == null ) ) { org.lemurproject.galago.core.parse.Document nerDoc = new org.lemurproject.galago.core.parse.Document () ; nerDoc.text = doNER ( doc.text ) ; nerDoc.metadata = doc.metadata ; nerDoc.name = doc.name ; java.lang.System.out . println ( nerDoc.text ) ; ciir.proteus.parse.NamedEntityRecorder ner = new ciir.proteus.parse.NamedEntityRecorder ( outputPath ) ; ner . record ( nerDoc ) ; doc = nerDoc ; } return doc ; } 
@ java.lang.Override public void onMeasure ( int widthSpec , int heightSpec ) { super . onMeasure ( widthSpec , heightSpec ) ; if ( ( pullView ) != null ) { pullView . measure ( widthSpec , 0 ) ; setMeasuredDimension ( getMeasuredWidth () , ( ( getMeasuredHeight () ) + ( pullView . getMeasuredHeight () ) ) ) ; } } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference , java.lang.Object data ) { final int pinStringLength = data . toString () . length () ; if ( pinStringLength != ( info.dvkr.screenstream.SettingsActivity.PIN_DIGITS_COUNT ) ) { android.widget.Toast . makeText ( getActivity () . getApplicationContext () , getResources () . getString ( R.string.pin_digits_count ) , Toast.LENGTH_LONG ) . show () ; return false ; } return true ; } 
public static void comChoiceS () { java.util.Random rand = new java.util.Random () ; int comPick = ( rand . nextInt ( 3 ) ) + 1 ; if ( comPick == 1 ) { java.lang.System.out . println ( "I chose rock and you chose scissors...I win :p" ) ; com.bleh.Main . resultsL () ; } else if ( comPick == 2 ) { java.lang.System.out . println ( "I chose paper and you chose scissors...I guess you win :(" ) ; com.bleh.Main . resultsW () ; } else if ( comPick == 3 ) { java.lang.System.out . println ( "I chose scissors and you chose scissors...We tied :/" ) ; com.bleh.Main . resultsT () ; } } 
@ java.lang.Override public io.netty.util.concurrent.Future < java.lang.Boolean > removeAllAsync ( java.util.Collection < ? > c ) { if ( c . isEmpty () ) { return org.redisson.RedissonSet . newSucceededFuture ( false ) ; } java.util.List < java.lang.Object > args = new java.util.ArrayList < java.lang.Object > ( ( ( c . size () ) + 1 ) ) ; args . add ( getName () ) ; args . addAll ( c ) ; return commandExecutor . writeAsync ( getName () , codec , RedisCommands.SREM_SINGLE , args . toArray () ) ; } 
private static void addGenericItem ( net.minecraft.item.Item item ) { com.xplosivesnet.explochem.xplosivesnet_items.items [ com.xplosivesnet.explochem.xplosivesnet_items.counter ] = item ; if ( ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) != 0 ) item . setContainerItem ( com.xplosivesnet.explochem.xplosivesnet_items.items [ 0 ] ) ; ( com.xplosivesnet.explochem.xplosivesnet_items.counter ) ++ ; cpw.mods.fml.common.registry.GameRegistry . registerItem ( item , item . getUnlocalizedName () ) ; } 
@ java.lang.Override public void setBrightness ( final int pRenderLayerIndex , final double pBrightness ) { mBrightness [ pRenderLayerIndex ] = ( ( float ) ( clearvolume.renderer.ClearVolumeRendererBase . clamp ( pBrightness , 0 , ( ( getBytesPerVoxel () ) == 1 ? 16 : 256 ) ) ) ) ; notifyUpdateOfVolumeRenderingParameters () ; } 
private java.util.ArrayList < org.Point > finalLocs () { java.util.ArrayList < org.Point > ret = new java.util.ArrayList <> () ; for ( javafx.scene.control.ChoiceBox cb : locations ) { if ( ( cb . getValue () ) != null ) { ret . add ( ( ( org.Point ) ( cb . getValue () ) ) ) ; } } return ret ; } 
protected void writeResults ( ) throws java.io.IOException { org.apache.commons.io.FileUtils . write ( new java.io.File ( outputFolder , de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.UNKNOWN_WORDS_FINE ) , java.lang.String . format ( "%.1f" , ( ( outvocabAccuracy ) * 100 ) ) ) ; org.apache.commons.io.FileUtils . write ( new java.io.File ( outputFolder , de.unidue.ltl.flextag.core.reports.crf.TtAbstractKnownUnknownWordAccuracyReport.KNOWN_WORDS_FINE ) , java.lang.String . format ( "%.1f" , ( ( invocabAccuracy ) * 100 ) ) ) ; } 
private static void calculateDiscount () { java.util.Collections . sort ( Constants.quotes ) ; double higherValue = Constants.quotes . get ( 0 ) . getThreeYearTotal () ; if ( higherValue > 0 ) { for ( com.amazon.proposalcalculator.bean.Quote q : com.amazon.proposalcalculator.utils.Constants.quotes ) { q . setDiscount ( ( 1 - ( ( q . getThreeYearTotal () ) / higherValue ) ) ) ; } } } 
@ java.lang.Override public void doRefreshVisual ( org.eclipse.gef.fx.nodes.GeometryNode < org.eclipse.gef.geometry.planar.IGeometry > visual ) { if ( ( getAnchoragesUnmodifiable () . size () ) != 1 ) { return; } org.eclipse.gef.geometry.planar.IGeometry feedbackGeometry = getFeedbackGeometry () ; if ( feedbackGeometry == null ) { return; } if ( feedbackGeometry instanceof org.eclipse.gef.geometry.planar.ICurve ) { visual . setStrokeType ( javafx.scene.shape.StrokeType.CENTERED ) ; } else { visual . setStrokeType ( javafx.scene.shape.StrokeType.OUTSIDE ) ; } visual . setGeometry ( feedbackGeometry ) ; } 
@ java.lang.Override public void render () { Gdx.gl . glClearColor ( 1 , 1 , 1 , 1 ) ; Gdx.gl . glClear ( GL20.GL_COLOR_BUFFER_BIT ) ; stage . act () ; stage . draw () ; if ( ( ( showProgressUntilTime ) < ( com.badlogic.gdx.utils.TimeUtils . millis () ) ) && ( ( showProgressUntilTime ) != 0 ) ) { if ( ( progressDialog ) != null ) { showProgressUntilTime = 0 ; progressDialog . dismiss () ; } } } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode == ( com.ww23.l_band.ListenActivity.REQUEST_ENABLE_BT ) ) && ( resultCode == ( android.app.Activity.RESULT_CANCELED ) ) ) { toast ( getString ( R.string.deny_open_bluetooth ) ) ; finish () ; return; } super . onActivityResult ( requestCode , resultCode , data ) ; } 
public void saveConfig () { if ( ( ( fileConfiguration ) == null ) || ( ( configFile ) == null ) ) { return; } else { try { getConfig () . save ( configFile ) ; } catch ( java.io.IOException ex ) { plugin . getLogger () . log ( java.util.logging.Level.SEVERE , ( "Could not save config to " + ( configFile ) ) , ex ) ; } } } 
public void interact ( Entity ent ) { if ( ent instanceof Player ) { if ( ( GameStats . getPowerupState () ) == 0 ) { ent . setHeight ( ( ( ent . getHeight () ) * 2 ) ) ; ent . setY ( ( ( ent . getY () ) - ( ( ent . getHeight () ) / 2 ) ) ) ; GameStats . setPowerupState ( 1 ) ; } GameStats . incrementScore ( 1000 ) ; remove ( getGame () . getControlVar () ) ; } } 
public void add ( int data ) { ( this . size ) ++ ; if ( ( this . front ) == null ) { this . front = new QueueNode ( data ) ; } else { QueueNode current = this . front ; while ( ( current.next ) != null ) { current = current.next ; } current.next = new QueueNode ( data ) ; } } 
public java.lang.Object pop () { final int n = stack . size () ; if ( n == 0 ) { return 0L ; } for ( int i = ( marks . size () ) - 1 ; i >= 0 ; -- i ) { if ( ( marks . get ( i ) ) == n ) { marks . set ( i , ( n - 1 ) ) ; } } return stack . remove ( ( n - 1 ) ) ; } 
private static java.lang.String filterChars ( java.lang.String s ) { if ( s == null ) { return null ; } java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( char c : s . toCharArray () ) { if ( ( "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" . indexOf ( c ) ) >= 0 ) { sb . append ( c ) ; } } return sb . toString () ; } 
public void createDirIfNotExists ( java.lang.String dirPath ) throws org.seagrid.desktop.connectors.storage.SftpException { java.lang.String pwd = channelSftp . pwd () ; channelSftp . cd ( "/" ) ; java.lang.String [] folders = dirPath . split ( "/" ) ; for ( java.lang.String folder : folders ) { if ( ( folder . length () ) > 0 ) { try { channelSftp . cd ( folder ) ; } catch ( org.seagrid.desktop.connectors.storage.SftpException e ) { channelSftp . mkdir ( folder ) ; channelSftp . cd ( folder ) ; } } } channelSftp . cd ( pwd ) ; } 
@ java.lang.Override public com.containersol.minimesos.state.State getState () { try { return com.containersol.minimesos.state.State . fromJSON ( getStateInfoJSON () . toString () ) ; } catch ( com.fasterxml.jackson.core.JsonParseException | com.fasterxml.jackson.databind.JsonMappingException | com.mashape.unirest.http.exceptions.UnirestException e ) { throw new com.containersol.minimesos.MinimesosException ( ( "Could not retrieve state from Mesos Agent: " + ( getName () ) ) , e ) ; } } 
@ org.junit.Test public void detectListenerWithStartProximityDetectionWithCustomThreshold () { addSensor ( android.hardware.Sensor.TYPE_PROXIMITY ) ; com.github.nisrulz.sensey.ProximityDetector.ProximityListener fakeListener = org.mockito.Mockito . mock ( com.github.nisrulz.sensey.ProximityDetector.ProximityListener . class ) ; sensey . startProximityDetection ( 10.0F , fakeListener ) ; com.github.nisrulz.sensey.ProximityDetector detector = getDetector ( fakeListener , com.github.nisrulz.sensey.ProximityDetector . class ) ; if ( detector != null ) { org.junit.Assert . assertTrue ( "Sensor Manager must contain sensor event listener for proximity" , shadowSensorManager . hasListener ( detector ) ) ; } else { org.junit.Assert . fail ( "There should be proximity detector in sensey. If not, please, check last version of class and update reflection accessing to it field" ) ; } } 
@ java.lang.Override public boolean onLongClick ( android.view.View v ) { if ( ! ( v . isInTouchMode () ) ) return false ; if ( ( mNextPage ) != ( INVALID_PAGE ) ) return false ; if ( ( ! ( mLauncher . isAllAppsVisible () ) ) || ( mLauncher . getWorkspace () . isSwitchingState () ) ) return false ; return beginDragging ( v ) ; } 
public java.lang.String arrayToString ( java.lang.Object [] array ) { java.lang.StringBuilder buffer = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { if ( i > 0 ) { buffer . append ( dk.lessismore.nojpa.reflection.attributeconverters.AttributeConverter.arraySeparator ) ; } buffer . append ( objectToString ( array [ i ] ) ) ; } return buffer . toString () ; } 
public void remove () { if ( ( parent ) == null ) { root = null ; return; } parent.children . remove ( this ) ; if ( parent.children . isEmpty () ) { parent . remove () ; } else { parent . computeMBR () ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "sltMTechDetailListAjax" } , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public com.abilists.bean.para.profile.MTechDetailListAjax sltMTechDetailListAjax ( @ org.springframework.web.bind.annotation.RequestBody com.abilists.bean.para.admin.SltMTechDetailPara sltMTechDetailPara , javax.servlet.http.HttpSession session ) throws java.lang.Exception { this . handleSessionInfo ( session , sltMTechDetailPara ) ; sltMTechDetailPara . setMlCode ( sltMTechDetailPara . getLang () ) ; java.util.List < com.abilists.bean.model.MTechDetailModel > mTechDetailList = adminMasterService . sltMTechDetailList ( sltMTechDetailPara ) ; logger . info ( ( "mTechDetailList size = " + ( mTechDetailList . size () ) ) ) ; com.abilists.bean.para.profile.MTechDetailListAjax mTechDetailListAjax = new com.abilists.bean.para.profile.MTechDetailListAjax () ; mTechDetailListAjax . setmTechDetailList ( mTechDetailList ) ; return mTechDetailListAjax ; } 
void printPanden () { for ( Pand element : lijst ) { java.lang.System.out . println ( ( ( ( ( ( ( ( ( ( ( ( element.date ) + " " ) + ( element.objectNummer ) ) + " " ) + ( element.naam ) ) + " " ) + ( element.adres ) ) + " " ) + ( element.kamers ) ) + " " ) + ( element.prijs ) ) ) ; } } 
@ javax.annotation.Nonnull private org.apache.directory.ldap.client.api.LdapConnection connect ( ) throws org.apache.jackrabbit.oak.spi.security.authentication.external.ExternalIdentityException { try { if ( ( adminPool ) == null ) { return adminConnectionFactory . makeObject () ; } else { return adminPool . getConnection () ; } } catch ( java.lang.Exception e ) { java.lang.String msg = "Error while connecting to the ldap server." ; org.apache.jackrabbit.oak.security.authentication.ldap.impl.LdapIdentityProvider.log . error ( msg , e ) ; throw new org.apache.jackrabbit.oak.spi.security.authentication.external.ExternalIdentityException ( msg , e ) ; } } 
private static java.lang.String getVocab () { java.lang.String [] dictionary = GuiMain.index . getDictionary () ; int count = GuiMain.index . getTermCount () ; java.lang.StringBuffer vocab = new java.lang.StringBuffer ( "Index Dictionary: \n" ) ; for ( java.lang.String s : dictionary ) { vocab . append ( ( s + "\n" ) ) ; } vocab . append ( ( "Index Term Count: " + count ) ) ; return vocab . toString () ; } 
private void handleLevelUp () { if ( ( xpSinceLastLevelUp () ) >= ( nettoXpNeededForLevel ( ( ( plevel ) + 1 ) ) ) ) { ( this . maxHealth ) ++ ; ( plevel ) ++ ; psprint += 0.1 ; maxTimeSprint += 20 ; MojamComponent.soundPlayer . playSound ( "/sound/levelUp.wav" , ( ( float ) ( pos.x ) ) , ( ( float ) ( pos.y ) ) , true ) ; } } 
public void editPatientProf ( android.view.View v ) { if ( ! ( mEditTextCustomerFName . isEnabled () ) ) { setFieldsEnability ( true ) ; if ( ( mAddrLayout . getVisibility () ) != ( android.view.View.VISIBLE ) ) { com.extenprise.mapp.medico.util.Utility . collapseExpand ( mAddrLayout ) ; com.extenprise.mapp.medico.util.Utility . collapseExpand ( mContLay ) ; } } else { setFieldsEnability ( false ) ; } } 
public void soundDb ( double ampl ) { if ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) > 0 ) values . add ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ; android.util.Log . d ( "Sound" , java.lang.String . valueOf ( ( 20 * ( java.lang.Math . log10 ( ( ( getAmplitudeEMA () ) / ampl ) ) ) ) ) ) ; } 
private boolean setupWorldEdit () { org.bukkit.plugin.Plugin test = this . getServer () . getPluginManager () . getPlugin ( "WorldEdit" ) ; if ( ( svenbrnn.orerespawn.oreRespawn.worldEdit ) == null ) { if ( test != null ) { svenbrnn.orerespawn.oreRespawn.worldEdit = ( ( com.sk89q.worldedit.bukkit.WorldEditPlugin ) ( test ) ) ; java.lang.System.out . println ( "[OreRespawn] WorldEdit detected!" ) ; return true ; } } return false ; } 
public boolean remove ( net.osmand.osm.edit.Relation.RelationMember key ) { if ( ( members ) != null ) { java.util.Iterator < net.osmand.osm.edit.Relation.RelationMember > it = members . iterator () ; while ( it . hasNext () ) { net.osmand.osm.edit.Relation.RelationMember rm = it . next () ; if ( rm == key ) { it . remove () ; return true ; } } } return false ; } 
public void vote ( ) throws java.lang.ClassNotFoundException , java.sql.SQLException { java.lang.System.out . print ( "\nPlease select the note you want to vote for (0-7):" ) ; int vote = scan . nextInt () ; if ( ( vote <= 7 ) && ( vote > 0 ) ) { java.lang.System.out . println ( "Attempting vote registration." ) ; registerVote ( vote ) ; } else { java.lang.System.out . println ( "Select a note between 0 and 7." ) ; vote () ; } } 
@ java.lang.Override public void onSuccess ( long reqId , java.lang.String header , java.lang.String sequence , java.util.List < biospectra.classify.beans.SearchResultEntry > result , biospectra.classify.beans.ClassificationResult.ClassificationResultType type , java.lang.String taxonRank ) { biospectra.classify.beans.ClassificationResult bresult = new biospectra.classify.beans.ClassificationResult ( header , sequence , result , type , taxonRank ) ; java.lang.String json ; try { json = serializer . toJson ( bresult ) ; summary . report ( bresult ) ; synchronized ( bw ) { bw . write ( ( json + "\n" ) ) ; } } catch ( java.io.IOException ex ) { biospectra.classify.ClassifierClient.LOG . error ( "Cannot write to a file" , ex ) ; } } 
private static void connectToPeer ( java.lang.String peerName , int peerPort ) { try { java.rmi.registry.Registry theirReg = java.rmi.registry.LocateRegistry . getRegistry ( "localhost" , peerPort ) ; Peer.boundPeerStub = ( ( PeerInterface ) ( theirReg . lookup ( peerName ) ) ) ; Peer.peerStubs . put ( peerName , Peer.boundPeerStub ) ; java.lang.System.out . println ( ( "Found peer " + peerName ) ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent evt ) { final int index = tblProducts . getSelectedRow () ; final io.github.davidg95.JTill.jtillserver.WasteItem it = wasteItems . get ( index ) ; final io.github.davidg95.JTill.jtillserver.Product p = it . getProduct () ; if ( index == ( - 1 ) ) { return; } if ( ( javax.swing.JOptionPane . showInternalConfirmDialog ( this , ( "Are you sure you want to remove this item?\n" + p ) , "Stock Item" , javax.swing.JOptionPane.YES_NO_OPTION ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { wasteItems . remove ( index ) ; updateTable () ; } } 
@ javax.annotation.PreDestroy public void dispose () { for ( int i = ( this . objects . size () ) - 1 ; i >= 0 ; i -- ) { try { this . dispose . accept ( this . objects . get ( i ) ) ; } catch ( java.lang.Throwable t ) {} } } 
private static boolean licenseFileExists () { if ( ( org.eclipse.titan.regressiontests.MainTestSuite.LICENSE_FILE ) != null ) { java.io.File licenseFile = new java.io.File ( org.eclipse.titan.regressiontests.MainTestSuite.LICENSE_FILE ) ; if ( ( licenseFile != null ) && ( licenseFile . exists () ) ) { return true ; } } final java.lang.String licenseFromEnv = java.lang.System . getenv ( "TTCN3_LICENSE_FILE" ) ; if ( licenseFromEnv != null ) { java.io.File licenseFile = new java.io.File ( licenseFromEnv ) ; if ( ( licenseFile != null ) && ( licenseFile . exists () ) ) { return true ; } } return false ; } 
@ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public boolean allowTarget ( final org.wirez.core.graph.Node target , final org.wirez.core.graph.Edge < org.wirez.core.graph.content.view.View < ? > , org.wirez.core.graph.Node > connector , final int magnet ) { if ( ( null != ( canvasHandler ) ) && ( null != target ) ) { org.wirez.core.command.CommandResult < org.wirez.core.client.command.CanvasViolation > violations = canvasCommandManager . allow ( canvasHandler , canvasCommandFactory . SET_TARGET_NODE ( target , connector , magnet ) ) ; return isAccept ( violations ) ; } return false ; } 
public void updateSystemCount ( ) throws java.lang.NumberFormatException { numSystems = java.lang.Math . abs ( java.lang.Integer . parseInt ( _FormattedTF_NumSystems . getText () ) ) ; if ( ( numSystems ) > 60 ) { numSystems = 60 ; _FormattedTF_NumSystems . setValue ( new java.lang.Integer ( "60" ) ) ; } else if ( ( numSystems ) <= 0 ) { numSystems = 0 ; _FormattedTF_NumSystems . setValue ( new java.lang.Integer ( "0" ) ) ; } cs . getRackIndex ( _ComboBox_Racks . getSelectedIndex () ) . getSuctionGroupIndex ( _ComboBox_SuctionGroups . getSelectedIndex () ) . setNumSystems ( numSystems ) ; } 
public boolean isPointInArea ( java.awt.Point pos , int areaLeftX , int areaRightX , int areaUpY , int areaDownY ) { return ( ( ( areaLeftX < ( pos.x ) ) && ( ( pos.x ) < areaRightX ) ) && ( areaUpY < ( pos.y ) ) ) && ( ( pos.y ) < areaDownY ) ; } 
private javafx.collections.ObservableList < java.lang.Integer > populateTrackNumberComboBox () { javafx.collections.ObservableList < java.lang.Integer > options ; if ( ( ui.Slave . getSequence () ) != null ) { options = javafx.collections.FXCollections . observableArrayList () ; for ( int i = 0 ; i < ( ui.Slave . getSequence () . getTracks () . length ) ; i ++ ) { java.lang.System.out . println ( i ) ; options . add ( i ) ; } } else { options = javafx.collections.FXCollections . observableArrayList ( 0 ) ; } return options ; } 
private void moveBy ( double move ) { nextx = ( x ) + ( ( dir [ 0 ] ) * move ) ; nexty = ( y ) + ( ( dir [ 1 ] ) * move ) ; intx = ( ( int ) ( nextx ) ) ; inty = ( ( int ) ( nexty ) ) ; if ( ( nextx ) < 0 ) ( intx ) -- ; if ( ( nexty ) < 0 ) ( inty ) -- ; } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { try { io.punchtime.punchtime.data.Pulse p = dataSnapshot . getChildren () . iterator () . next () . getValue ( io.punchtime.punchtime.data.Pulse . class ) ; updateCheckinUI ( p ) ; if ( ( p . getCheckout () ) == 0 ) setCheckedIn ( true ) ; } catch ( java.lang.Exception e ) { updateCheckinUI ( null ) ; setCheckedIn ( false ) ; } } 
public PokemonSpecies findCaughtSpeciesData ( java.lang.String speciesName ) throws PokedexException { for ( int i = 0 ; i < ( pokedex . size () ) ; i ++ ) { PokemonSpecies poke = pokedex . get ( i ) ; if ( poke . getSpeciesName () . equals ( speciesName ) ) { if ( poke . isEmpty () ) { throw new PokedexException ( Config.UNCAUGHT_POKEMON ) ; } else { return poke ; } } } throw new PokedexException ( Config.UNSEEN_POKEMON ) ; } 
@ java.lang.Override public int compare ( rdoshi.codepath.todoapp.TaskItem t1 , rdoshi.codepath.todoapp.TaskItem t2 ) { if ( ( t1 . getDueDate () ) == null ) { return ( t2 . getDueDate () ) == null ? 0 : - 1 ; } if ( ( t2 . getDueDate () ) == null ) { return 1 ; } return t2 . getDueDate () . compareTo ( t1 . getDueDate () ) ; } 
public void addFirstNode ( int data ) { if ( ( size ) == 0 ) { head = new a3.LinkedList.Node ( data ) ; head.next = tail ; tail = head ; } else { a3.LinkedList.Node newNode = new a3.LinkedList.Node ( data ) ; newNode.next = head ; head = newNode ; } ++ ( size ) ; } 
private static boolean dummyAccountAlreadyAdded ( android.accounts.Account [] accountsByType ) { for ( int i = 0 ; i < ( accountsByType.length ) ; i ++ ) { if ( accountsByType [ i ] . name . equals ( com.philosophicalhacker.philhackernews.PhilHackerNewsApplication.ACCOUNT_NAME ) ) { return true ; } } return false ; } 
public java.lang.String getNodeName ( java.lang.String id ) { for ( int i = 0 ; i < ( nodeList . size () ) ; i ++ ) { if ( nodeList . get ( i ) . getID () . equals ( id ) ) { return nodeList . get ( i ) . getName () ; } } return null ; } 
public void resize () { java.lang.Object [] temp = new java.lang.Object [ ( storage.length ) * 2 ] ; java.lang.System . arraycopy ( storage , head , temp , 0 , ( ( storage.length ) - ( head ) ) ) ; java.lang.System . arraycopy ( storage , 0 , temp , ( ( storage.length ) - ( head ) ) , tail ) ; head = ( temp.length ) - 1 ; tail = storage.length ; storage = temp ; } 
public int adjustComputerBuilders ( int amount ) { int difference = amount ; if ( ( ( computerBuilders ) < ( java.lang.Math . abs ( difference ) ) ) && ( amount < 0 ) ) { difference = ( - ( computerBuilders ) ) + 1 ; computerBuilders = 1 ; } else { computerBuilders += amount ; } if ( difference != 0 ) gi . setComputerBuildersLabelChangeText ( difference ) ; return difference ; } 
public boolean isCallTime ( int timeIndex ) { return ( ( ( ( double ) ( timeIndex ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) . getInt () ) ) - 1 ) == ( ( java.lang.Math . ceil ( ( ( ( double ) ( timeIndex ) ) / ( getProp ( de.htw.berlin.polysun4diac.plugins.BatteryPreSimulatorSocket.CALL_INTERVAL_KEY ) . getInt () ) ) ) ) - 1 ) ; } 
public static games.strategy.triplea.ai.proAI.data.ProBattleResult calculateBattleResults ( final games.strategy.engine.data.PlayerID player , final games.strategy.engine.data.Territory t , final java.util.List < games.strategy.engine.data.Unit > attackingUnits , final java.util.List < games.strategy.engine.data.Unit > defendingUnits , final java.util.Set < games.strategy.engine.data.Unit > bombardingUnits , final boolean isAttacker ) { final games.strategy.triplea.ai.proAI.data.ProBattleResult result = games.strategy.triplea.ai.proAI.util.ProBattleUtils . checkIfNoAttackersOrDefenders ( t , attackingUnits , defendingUnits ) ; if ( result != null ) { return result ; } return games.strategy.triplea.ai.proAI.util.ProBattleUtils . callBattleCalculator ( player , t , attackingUnits , defendingUnits , bombardingUnits ) ; } 
@ java.lang.Override public void done ( com.parse.ParseObject parseObject , com.parse.ParseException e ) { if ( e == null ) { java.lang.System.out . println ( "null score" ) ; com.parse.ParseObject userscore = new com.parse.ParseObject ( "Scores" ) ; userscore . put ( "score" , com.cards.flash.testez.TallyScore . getScore () ) ; userscore . put ( "user" , com.parse.ParseUser . getCurrentUser () ) ; saveScoreObject ( userscore ) ; com.cards.flash.testez.TallyScore . resetScore () ; } else {} } 
@ com.chronicle.controller.RequestMapping ( value = { "/login/{id}/{password}" } , method = RequestMethod.GET , produces = { org.springframework.http.MediaType.APPLICATION_JSON_VALUE } ) public java.lang.String login ( @ com.chronicle.controller.PathVariable java.lang.Long id , @ com.chronicle.controller.PathVariable java.lang.String password ) { logger . info ( ( "login with id : {}" + id ) ) ; com.chronicle.controller.User user = userService . findById ( id ) ; java.lang.System.out . println ( user . getPassword () ) ; java.lang.System.out . println ( password ) ; if ( user . getPassword () . equals ( password ) ) { return user . getRole () ; } else { return "User Doesn't exist" ; } } 
public void manualCtl () { double y = m_liftStick . getY ( GenericHID.Hand.kLeft ) ; m_robot.logger . debug ( ( "manualCtl:" + y ) ) ; if ( ( isAnyLimitSwitchClosed () ) || ( ( java.lang.Math . abs ( y ) ) < ( k_minJoystickValue ) ) ) { stopMotor () ; } else { startMotor () ; m_mainMotor . set ( y ) ; } } 
@ java.lang.Override public void onConfigurationChanged ( android.content.res.Configuration newConfig ) { super . onConfigurationChanged ( newConfig ) ; if ( ( notFirstRun ) || ( ! ( com.brainicism.projectrito.MainActivity.summonerName . equals ( "" ) ) ) ) { com.brainicism.projectrito.MainActivity.checkValidSummoner check = new com.brainicism.projectrito.MainActivity.checkValidSummoner () ; check . execute () ; } } 
public void setItemSelected ( int pos , boolean selected , android.view.View view ) { if ( ( pos < 0 ) || ( pos >= ( mAdapter . getItemCount () ) ) ) return; if ( selected ) { mSelectedItems . put ( pos , selected ) ; } else { mSelectedItems . delete ( pos ) ; } view . setSelected ( selected ) ; } 
private void setUpMapIfNeeded () { if ( ( com.mycompany.behear.MainActivity.mMap ) == null ) { com.mycompany.behear.MainActivity.mMap = ( ( com.google.android.gms.maps.SupportMapFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.map ) ) ) . getMap () ; } if ( ( com.mycompany.behear.MainActivity.mMap ) == null ) { return; } } 
public static void logShortError ( java.lang.Exception e , int lines ) { java.lang.String s = e . toString () ; int i = 0 ; for ( java.lang.StackTraceElement er : e . getStackTrace () ) { if ( i == lines ) { break; } s += "\n\tat " + ( er . toString () ) ; i ++ ; } e . printStackTrace () ; global.record.Log . log ( "ERROR" , s ) ; } 
@ java.lang.Override public synchronized void analyzeScrimmageMatch ( model.BSScrimmageSet scrim ) { javax.persistence.EntityManager em = common.HibernateUtil . getEntityManager () ; em . persist ( scrim ) ; em . getTransaction () . begin () ; em . flush () ; em . getTransaction () . commit () ; em . refresh ( scrim ) ; em . close () ; master.WebSocketChannelManager . broadcastMsg ( "scrimmage" , "INSERT_TABLE_ROW" , ( ( ( scrim . getId () ) + "," ) + ( scrim . getFileName () ) ) ) ; startRun () ; } 
@ java.lang.Override public boolean next ( ) throws java.io.IOException { unpinCurrentPage () ; assertPagedFileStillMapped () ; if ( ( nextPageId ) > ( lastPageId ) ) { if ( ( ( pf_flags ) & ( org.neo4j.io.pagecache.PagedFile.PF_NO_GROW ) ) != 0 ) { return false ; } else { pagedFile . increaseLastPageIdTo ( nextPageId ) ; } } pin ( nextPageId , true ) ; currentPageId = nextPageId ; ( nextPageId ) ++ ; return true ; } 
public final void moveItem ( T item , int toPosition ) { int fromPosition = mItems . indexOf ( item ) ; mItems . remove ( fromPosition ) ; mItems . add ( toPosition , item ) ; com.github.gfranks.dynamiccard.adapter.DynamicCardAdapter . notifyItemMoved ( fromPosition , toPosition ) ; if ( ( mCallback ) != null ) { mCallback . onDynamicCardPositionChanged ( this , fromPosition , toPosition ) ; } } 
public com.brashmonkey.spriter.file.Reference findReferenceByFileNameAndFolder ( java.lang.String fileName , java.lang.String folderName , boolean withoutExtension ) { com.brashmonkey.spriter.file.Reference [] refs = this . findReferencesByFolderName ( folderName ) ; for ( com.brashmonkey.spriter.file.Reference ref : refs ) { java.lang.String file = ref.fileName . replaceAll ( ( folderName + "/" ) , "" ) ; if ( withoutExtension ) file = file . replaceAll ( ".png" , "" ) ; if ( file . toLowerCase () . equals ( fileName ) ) return ref ; } return null ; } 
@ java.lang.Override public void afterTextChanged ( android.text.Editable s ) { if ( ( weightPrevLength ) > ( s . length () ) ) { com.kq.liftplusone.models.ExerciseSet set = mSets . get ( position ) ; set . setWeight ( ( ( s . length () ) > 0 ? java.lang.Float . parseFloat ( s . toString () ) : 0 ) ) ; mSets . set ( position , set ) ; } } 
@ java.lang.Override public com.hauldata.util.tokenizer.Token nextToken ( ) throws java.io.IOException , java.util.InputMismatchException { com.hauldata.util.tokenizer.Token token ; if ( position . hasNext () ) { token = position . next () ; } else { token = super . getToken () ; if ( token != null ) { position . add ( token ) ; } } return token ; } 
public static java.lang.String PaymentAuth ( long cardAmount , int cash , int TotalPay ) { java.util.Scanner ms = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( "Payment Option: Cash or Card?" ) ; java.lang.String option = ms . next () ; if ( option == "Cash" ) { if ( cash == TotalPay ) { return "Success! Payment has been authorized" ; } else { return "Payment fail! Please check amount" ; } } else if ( option == "Card" ) { if ( cardAmount == TotalPay ) { return "Success! Payment has been authorized" ; } else { return "Payment fail! Please check card or amount" ; } } return null ; } 
void mergeSort ( int [] a , int [] p , int [] c , int l , int r ) { if ( l >= r ) { return; } int m = ( l + r ) / 2 ; mergeSort ( a , p , c , l , m ) ; mergeSort ( a , p , c , ( m + 1 ) , r ) ; merge ( a , p , c , l , m , r ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( requestCode == ( felixwiemuth.lincal.ui.AddCalendarActivity.RESULT_CODE_SELECT_FILE ) ) { if ( data != null ) { int takeFlags = data . getFlags () ; takeFlags &= ( android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION ) | ( android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION ) ; getContentResolver () . takePersistableUriPermission ( data . getData () , takeFlags ) ; fileEditText . setText ( data . getDataString () ) ; } } } 
public static void delete ( java.io.File f ) throws java.io.IOException { if ( f == null ) return; if ( f . isDirectory () ) { for ( java.io.File c : f . listFiles () ) { org.ohmage.Utilities . delete ( c ) ; } } f . delete () ; } 
@ android.support.annotation.Nullable public android.os.Bundle onProvideTransientParamsImpl ( @ android.support.annotation.NonNull V v , @ android.support.annotation.NonNull android.view.View view , @ android.support.annotation.Nullable android.os.Bundle params ) { VP presenter = getPresenter ( v , false ) ; allowScreenViewCalls = true ; android.os.Bundle b = v . onProvideParams ( view , params ) ; if ( b != null ) params = b ; allowScreenViewCalls = false ; if ( presenter != null ) { b = presenter . onProvideTransientParams ( v , view , params ) ; if ( b != null ) params = b ; } return params ; } 
public void resetUsed () { for ( int i = 0 ; i < ( team . size () ) ; i ++ ) { team . get ( i ) . getAttributes () . setUsed ( ( i == ( frontIndex ) ) ) ; } } 
public boolean validate ( Model.Tile.BuildTile target , Model.Utility.ILocation loc ) { if ( ( slots . isEmpty () ) && ( buildMap . locationInBounds ( loc ) ) ) { return true ; } if ( ( ( buildMap . tileExistsAt ( loc ) ) || ( ! ( this . slotExistsAt ( loc ) ) ) ) || ( ! ( buildMap . locationInBounds ( loc ) ) ) ) { return false ; } Model.Map.Slot mySlot = slots . get ( loc ) ; return mySlot . checkMatch ( target . getEdges () ) ; } 
private java.lang.String readCommandOutput ( java.lang.Process process ) { java.lang.String s ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try { java.io.BufferedReader stdInput = new java.io.BufferedReader ( new java.io.InputStreamReader ( process . getInputStream () ) ) ; while ( ( s = stdInput . readLine () ) != null ) { sb . append ( s ) . append ( "\n" ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } return sb . toString () ; } 
@ java.lang.Override public java.lang.String getValue () { java.util.List < org.roda.core.data.v2.TransferredResource > items = display . getVisibleItems () ; if ( ( items . size () ) == 0 ) { return "" ; } else { long totalSize = 0 ; for ( org.roda.core.data.v2.TransferredResource item : items ) { totalSize += item . getSize () ; } return totalSize > 0 ? org.roda.wui.common.client.tools.Humanize . readableFileSize ( totalSize ) : "" ; } } 
private boolean handleMainBlocks ( de.fhg.iais.roberta.syntax.codegen.CppCodeGenerationVisitor astVisitor , boolean mainBlock , de.fhg.iais.roberta.syntax.Phrase < java.lang.Void > phrase ) { if ( ( phrase . getKind () . getCategory () ) != ( de.fhg.iais.roberta.components.Category.TASK ) ) { astVisitor . nlIndent () ; } else if ( ! ( phrase . getKind () . hasName ( "LOCATION" ) ) ) { mainBlock = true ; } return mainBlock ; } 
@ java.lang.Override public void onFocusChange ( android.view.View v , boolean hasFocus ) { if ( ! hasFocus ) { if ( ( ( mCardNumber ) != null ) && ( ( mCardNumber . length () ) > 12 ) ) { if ( ( mType ) == ( com.vinaygaba.creditcardview.CardType.AUTO ) ) { mCardTypeView . setBackgroundResource ( getLogo () ) ; } mCardNumberView . setText ( getFormattedCardNumber ( addSpaceToCardNumber () ) ) ; } } } 
private void effect () { for ( int i = ( effects . size () ) - 1 ; i >= 0 ; i -- ) { effects . get ( i ) . update ( this ) ; } for ( int i = ( effects . size () ) - 1 ; i >= 0 ; i -- ) { if ( effects . get ( i ) . killMe ) { effects . get ( i ) . end ( this ) ; effects . remove ( i ) ; } } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { java.lang.String selectedItemText = ( ( java.lang.String ) ( parent . getItemAtPosition ( position ) ) ) ; if ( position > 0 ) { category = selectedItemText ; } } 
private void validateEditing ( com.webapplication.entity.AuctionItem auctionItem ) throws java.lang.Exception { if ( ( auctionItem . getBidsNo () ) != 0 ) throw new com.webapplication.exception.auctionitem.AuctionAlreadyInProgressException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_ALREADY_IN_PROGRESS ) ; if ( ( ( auctionItem . getEndDate () ) != null ) && ( new java.util.Date () . after ( auctionItem . getEndDate () ) ) ) throw new com.webapplication.exception.auctionitem.AuctionExpiredException ( com.webapplication.error.auctionitem.AuctionItemError.AUCTION_EXPIRED ) ; } 
private boolean privatePerformZoom ( boolean byGesture , float scale , int centerX , int centerY , boolean shouldCallback ) { float realScale = checkRealScale ( scale ) ; if ( realScale == 1.0F ) { fitTranslate () ; mZoomListener . onZoomEnd ( byGesture , 1 , centerX , centerY ) ; return false ; } zoomAnimated ( byGesture , realScale , centerX , centerY , shouldCallback ) ; return true ; } 
@ java.lang.Override public void onPositiveActionClicked ( com.rey.material.app.DialogFragment fragment ) { com.rey.material.app.TimePickerDialog dialog = ( ( com.rey.material.app.TimePickerDialog ) ( fragment . getDialog () ) ) ; android.widget.Toast . makeText ( fragment . getDialog () . getContext () , ( "Time is " + ( dialog . getFormattedTime ( java.text.SimpleDateFormat . getTimeInstance () ) ) ) , Toast.LENGTH_SHORT ) . show () ; fragment . dismiss () ; } 
@ java.lang.Override public boolean isChunkEnd ( @ javax.annotation.Nonnull org.jenkinsci.plugins.workflow.graph.FlowNode current , @ javax.annotation.CheckForNull org.jenkinsci.plugins.workflow.graph.FlowNode previous ) { if ( previous == null ) { return false ; } if ( current instanceof org.jenkinsci.plugins.workflow.graph.BlockEndNode ) { org.jenkinsci.plugins.workflow.graph.BlockStartNode bsn = ( ( org.jenkinsci.plugins.workflow.graph.BlockEndNode ) ( previous ) ) . getStartNode () ; if ( isChunkStart ( bsn , null ) ) { return true ; } } return isChunkStart ( previous , null ) ; } 
private hudson.plugins.timestamper.annotator.ConsoleLogParser.Result parseFromFinish ( java.io.InputStream inputStream ) throws java.io.IOException { hudson.plugins.timestamper.annotator.ConsoleLogParser.Result result = new hudson.plugins.timestamper.annotator.ConsoleLogParser.Result () ; result.lineNumber = - 1 ; int value = inputStream . read () ; result.atNewLine = isNewLine ( value ) ; while ( ( value = inputStream . read () ) != ( - 1 ) ) { if ( isNewLine ( value ) ) { ( result.lineNumber ) -- ; } } return result ; } 
@ java.lang.Override public boolean usesAttributes ( java.lang.String tagName ) { tagName = tagName . toLowerCase () ; boolean usesAttributes = ! ( ( ( tagName . equals ( "cfset" ) ) || ( tagName . equals ( "cfif" ) ) ) || ( tagName . equals ( "cfelseif" ) ) ) ; return usesAttributes ; } 
public int attack ( edu.cis232.gwasos.resources.Combat enemy ) { java.util.Random rand = new java.util.Random () ; int monsterCurrentHp = enemy . getHp () ; if ( ( rand . nextInt ( ( ( 5 + ( enemy . getAgility () ) ) - ( getAgility () ) ) ) ) <= 3 ) { setMissed ( false ) ; enemy . damage ( power ) ; setPreviousAttackDamage ( ( monsterCurrentHp - ( enemy . getHp () ) ) ) ; } else { setMissed ( true ) ; } return previousAttackDamage ; } 
private void moveClient ( org.zapto.mike.mrstreamserver.Channel channel , org.zapto.mike.mrstreamserver.ClientHandler client ) { boolean canJoin = true ; if ( canJoin && ( channel != ( client . getChannel () ) ) ) { client . setChannel ( channel ) ; channel . addClient ( client ) ; } else {} } 
void setChecked ( android.widget.TextView t1 , android.widget.TextView t2 , android.widget.ImageView i1 , java.lang.String description_in ) { i1 . setImageResource ( R.drawable.ic_check_box_black_24dp ) ; t1 . setTextColor ( android.support.v4.content.ContextCompat . getColor ( getApplicationContext () , R.color.PrimaryPink ) ) ; if ( ( t2 != null ) && ( ! ( description_in . isEmpty () ) ) ) { t2 . setText ( description_in ) ; } } 
@ java.lang.Override public org.gephi.io.importer.spi.FileImporter getFileImporter ( org.openide.filesystems.FileObject fileObject ) { if ( fileObject != null ) { fileObject = org.gephi.io.importer.api.ImportUtils . getArchivedFile ( fileObject ) ; org.gephi.io.importer.spi.FileImporterBuilder builder = getMatchingImporter ( fileObject ) ; if ( ( fileObject != null ) && ( builder != null ) ) { org.gephi.io.importer.spi.FileImporter fi = builder . buildImporter () ; return fi ; } } return null ; } 
public static void sendExtras ( android.os.Bundle extras ) { if ( extras != null ) { if ( ( ( com.plugin.gcm.PushPlugin.gECB ) != null ) && ( ( com.plugin.gcm.PushPlugin.gWebView ) != null ) ) { com.plugin.gcm.PushPlugin . sendJavascript ( com.plugin.gcm.PushPlugin . convertBundleToJson ( extras ) ) ; } else { com.plugin.gcm.PushPlugin.gCachedExtras = extras ; } } } 
public void changeDragonLeft ( android.view.View view ) { if ( ( currDragon ) == 0 ) { currDragon = ( dragons . size () ) - 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } else { currDragon -= 1 ; addAccessory ( dragons . get ( currDragon ) ) ; } } 
public double getMinZ () { if ( ! ( java.lang.Double . isNaN ( zMin ) ) ) return zMin ; for ( int i = 0 ; i < ( getXyz () [ 0 ] . length ) ; i ++ ) { final double z = getXyz ( 0 , i , 2 ) ; if ( ( z <= ( zMin ) ) || ( java.lang.Double . isNaN ( zMin ) ) ) zMin = z ; } return zMin ; } 
public void applyInterestAndFee () { if ( ! ( directDeposit ) ) { if ( ( balance ) < ( Checking.MIN_BAL ) ) { balance -= Checking.FEE ; } } balance = ( balance ) + ( ( ( balance ) * ( Checking.APY ) ) / ( MONTH_PER_YEAR ) ) ; } 
public boolean hasAvailableNeighbours () { if ( ! ( ( ( ( ( top ) == null ) && ( ( bottom ) == null ) ) && ( ( right ) == null ) ) && ( ( left ) == null ) ) ) { return false ; } else { return true ; } } 
@ com.facebook.react.bridge.ReactMethod public void isSimCardValid ( com.facebook.react.bridge.Callback callback ) { android.telephony.TelephonyManager tm = ( ( android.telephony.TelephonyManager ) ( this . reactContext . getSystemService ( Context.TELEPHONY_SERVICE ) ) ) ; java.lang.Boolean isSimCardValid = ( tm . getSimState () ) == ( android.telephony.TelephonyManager.SIM_STATE_READY ) ; callback . invoke ( isSimCardValid ) ; } 
public void addExp ( int addedExp ) { m_exp += addedExp ; while ( ( m_exp ) >= ( 100 * ( this . getLevel () ) ) ) { levelUp ( ( ( m_exp ) - ( 100 * ( this . getLevel () ) ) ) ) ; } } 
protected void insert ( java.lang.String table , java.util.HashMap < java.lang.String , java.lang.String > values ) throws java.lang.Exception { if ( table == null ) throw new java.lang.Exception ( "El nombre de la tabla no puede estar vacío" ) ; java.lang.String insertBody = putBody ( values ) ; int r = ( ( int ) ( this . executeStatement ( ( ( ( ( "INSERT INTO " + table ) + " SET " ) + insertBody ) + ";" ) , true ) ) ) ; } 
private org.w3c.dom.Node isMultiplicativeOp () { org.w3c.dom.Element parent = doc . createElement ( "MultiplicativeOp" ) ; if ( isAMultiplicativeOp () ) { java.lang.String sym = ( ( currentTokenType () ) == ( JParserSym.MULTIPLICATION ) ) ? "*" : ( currentTokenType () ) == ( JParserSym.DIVISION ) ? "/" : "and" ; parent . setTextContent ( sym ) ; ( tokenIndex ) ++ ; return parent ; } ( tokenIndex ) ++ ; return null ; } 
@ java.lang.Override protected void actionPerformed ( net.minecraft.client.gui.GuiButton button ) throws java.io.IOException { if ( ( button.id ) == 0 ) { mc . displayGuiScreen ( parent ) ; } else { if ( button.displayString . equals ( "Enable" ) ) { button.displayString = "Disable" ; } else { button.displayString = "Enable" ; } } } 
public java.util.List < com.kencook.sharpspring.Event > getEvents ( java.lang.String timestamp ) throws com.kencook.sharpspring.SharpspringException { com.kencook.sharpspring.SharpspringRequest request = com.kencook.sharpspring.SharpspringRequestBuilder . request ( 1 , SharpspringMethod.GET_EVENTS ) . where ( "createTimestamp" ) . is ( timestamp ) . build () ; com.kencook.sharpspring.responses.GetEventsResponse result = operations . query ( request , com.kencook.sharpspring.responses.GetEventsResponse . class ) ; if ( ( result . getError () ) != null ) throw new com.kencook.sharpspring.SharpspringException ( result . getError () ) ; return result . getResult () . getEvent () ; } 
public void newTurn () { mana . rebase ( ( ( mana . base () ) + 1 ) ) ; mana . reset () ; mana . alter ( ( - ( overloadMana . value () ) ) ) ; if ( ( mana . value () ) < 0 ) { mana . set ( 0 ) ; } overloadMana . rebase ( 0 ) ; draw ( 1 ) ; field . updateSleepTimes () ; field . updateFreezeTimes () ; field . resetAttackCapacities () ; } 
@ javax.annotation.Nonnull protected javax.ws.rs.core.UriBuilder getBaseUriBuilder () { if ( ( m_bUseStaticServerInfo ) && ( com.helger.web.servlet.server.StaticServerInfo . isSet () ) ) { return javax.ws.rs.core.UriBuilder . fromUri ( ( ( ( com.helger.web.servlet.server.StaticServerInfo . getInstance () . getFullServerPath () ) + "/" ) + ( m_aUriInfo . getPath ( false ) ) ) ) ; } return m_aUriInfo . getBaseUriBuilder () ; } 
@ java.lang.Override public void onConnected ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = com.google.android.gms.location.LocationRequest . create () ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; mLocationRequest . setInterval ( 2000 ) ; if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( getApplicationContext () , android.Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; } } 
private static void flushConfig () { MyStaticValue.ENV . clear () ; if ( ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings ) != null ) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.ansjSettings ) ; } org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . setGlobalVar ( MyStaticValue.ENV ) ; if ( ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path ) != null ) { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . initConfig ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.path , true ) ; } else { org.ansj.elasticsearch.index.config.AnsjElasticConfigurator . initConfig ( new java.io.File ( org.ansj.elasticsearch.index.config.AnsjElasticConfigurator.configDir , "ansj_library.properties" ) . getAbsolutePath () , false ) ; } } 
public void addNotification ( @ com.flair.blurb.Constants.CategoryDef java.lang.String category , android.service.notification.StatusBarNotification notification , android.service.notification.NotificationListenerService service ) { java.lang.String key = com.flair.blurb.Util . getKey ( notification ) ; android.util.Log . d ( com.flair.blurb.data.Notifications.TAG , ( ( ( "addNotification: " + category ) + " key " ) + key ) ) ; java.util.concurrent.ConcurrentHashMap < java.lang.String , android.service.notification.StatusBarNotification > map = getMapByCategory ( category ) ; com.flair.blurb.Util . mergeNotifications ( map , notification , service ) ; map . put ( com.flair.blurb.Util . getKey ( notification ) , notification ) ; } 
@ java.lang.Override public int getCurrentZoom () { try { java.lang.String zoomRes = sendRequest ( buildPanTiltHeadControlURL ( "%23GZ" ) ) ; if ( zoomRes . startsWith ( "gz" ) ) { int zoom = java.lang.Integer . parseInt ( zoomRes . substring ( 2 , 5 ) , 16 ) ; lastKnown . setZoom ( zoom ) ; return zoom ; } throw new java.io.IOException ( ( ( errorString ) + zoomRes ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; return lastKnown . getZoom () ; } } 
public void queuePlayList ( com.sedmelluq.discord.lavaplayer.track.AudioPlaylist playlist ) { java.util.List < com.sedmelluq.discord.lavaplayer.track.AudioTrack > list = playlist . getTracks () ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { if ( ! ( this . player . startTrack ( list . get ( i ) , true ) ) ) { this . queue . add ( list . get ( i ) ) ; this . playlist . add ( list . get ( i ) . getInfo () . title ) ; } } } 
public void printAll () { uic.project.commuter.carPoolData.iterator.CarPoolIterator iter = this . getIterator () ; while ( iter . hasNext ( this ) ) { uic.project.commuter.carPoolData.iterator.CarPoolComponent currentObject = iter . next ( this ) ; currentObject . printSelf () ; uic.project.commuter.carPoolData.iterator.CarPoolIterator tier2Iter = this . getIterator () ; if ( ( currentObject . getClass () ) == ( this . getClass () ) ) { while ( tier2Iter . hasNext ( currentObject ) ) { tier2Iter . next ( currentObject ) . printSelf () ; } } } } 
@ java.lang.Override public byte [] openBytes ( int no , byte [] buf , int x , int y , int w , int h ) throws java.io.IOException , loci.formats.FormatException { loci.formats.FormatTools . checkPlaneParameters ( this , no , buf.length , x , y , w , h ) ; long planeSize = loci.formats.FormatTools . getPlaneSize ( this ) ; pixelFile . seek ( ( ( pixelOffset ) + ( no * planeSize ) ) ) ; readPlane ( pixelFile , x , y , w , h , buf ) ; return buf ; } 
public void removePerson ( int id ) { mDBOpenHelper = new cbpos1989.com.sqlitedatabase.DBOpenHelper ( mContext ) ; mDatabase = mDBOpenHelper . getWritableDatabase () ; mDatabase . execSQL ( ( ( ( ( ( "DELETE FROM " + ( DBFeederContract.PersonTable.TABLE_NAME ) ) + " WHERE " ) + ( DBFeederContract.PersonTable._ID ) ) + " = " ) + id ) ) ; mDatabase . close () ; mDBOpenHelper . close () ; mDatabase = null ; mDBOpenHelper = null ; } 
private float getNoise ( float x , float y , mapChooser.PerlinNoiseGenerator noise , float scale ) { float n = 0 ; float weight = 1 ; float curFrequency = 1 ; for ( int i = 0 ; i < ( frequencies ) ; i ++ ) { n += weight * ( noise . noise2 ( ( curFrequency * x ) , ( curFrequency * y ) ) ) ; weight /= 2 ; curFrequency += 2 ; } return n ; } 
public void setDiscount ( double discount ) { if ( discount == 0 ) { offeredPrice = false ; finalPrice = price ; this . discount = discount ; return; } else if ( discount > 1 ) { return; } this . offeredPrice = true ; this . discount = discount ; this . finalPrice = ( ( int ) ( java.lang.Math . round ( ( ( price ) * ( 1 - discount ) ) ) ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mListener ) != null ) { java.lang.String toText = mToTextView . getText () . toString () ; if ( ! ( getResString ( R.string.to_hint ) . equals ( toText ) ) ) { mListener . onToClick ( toText ) ; } else { mListener . onToClick ( null ) ; } } } 
public void run () { android.bluetooth.BluetoothSocket socket ; while ( true ) { try { socket = serverSocket . accept () ; } catch ( java.io.IOException e ) { break; } if ( socket != null ) { listenOnSocket ( socket ) ; try { serverSocket . close () ; } catch ( java.io.IOException e ) {} break; } } } 
public org.lirazs.gbackbone.client.core.collection.Collection set ( org.lirazs.gbackbone.client.core.data.Options [] objects , org.lirazs.gbackbone.client.core.data.Options options ) { java.util.List < T > models = new java.util.ArrayList < T > () ; for ( org.lirazs.gbackbone.client.core.data.Options object : objects ) { T model = prepareModel ( object , options ) ; if ( model != null ) { models . add ( model ) ; } } return set ( models , options ) ; } 
public java.lang.String getCategoryDisplay ( java.lang.String catID ) { java.lang.String display = null ; android.database.sqlite.SQLiteDatabase db = this . getReadableDatabase () ; android.database.Cursor cursor = db . query ( com.quaap.launchtime.db.DB.TAB_ORDER_TABLE , new java.lang.String [] { com.quaap.launchtime.db.DB.LABEL } , ( ( com.quaap.launchtime.db.DB.CATID ) + "=?" ) , new java.lang.String [] { catID } , null , null , null , null ) ; try { if ( cursor . moveToNext () ) { display = cursor . getString ( 0 ) ; } } finally { cursor . close () ; } return display ; } 
public int length ( int v , int w ) { if ( v == w ) { return 0 ; } int common = ancestor ( v , w ) ; if ( common == ( - 1 ) ) { return - 1 ; } edu.princeton.cs.algs4.BreadthFirstDirectedPaths vBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , v ) ; edu.princeton.cs.algs4.BreadthFirstDirectedPaths wBFS = new edu.princeton.cs.algs4.BreadthFirstDirectedPaths ( G , w ) ; return ( ( vBFS . distTo ( common ) ) + ( wBFS . distTo ( common ) ) ) - 1 ; } 
public static st.redline.ProtoObject p220 ( st.redline.ProtoObject receiver , st.redline.ThisContext thisContext , st.redline.ProtoObject arg1 , st.redline.ProtoObject arg2 , st.redline.ProtoObject arg3 , st.redline.ProtoObject arg4 , st.redline.ProtoObject arg5 , st.redline.ProtoObject arg6 , st.redline.ProtoObject arg7 ) { return ( receiver . methodAt ( ( ( java.lang.String ) ( arg1 . javaValue () ) ) ) ) != null ? ProtoObject.TRUE : ProtoObject.FALSE ; } 
public T removeLast () { checkRange () ; T retVal = _end . getCargo () ; _end = _end . getPrev () ; if ( ( _end ) == null ) { _front = null ; } else { _end . setNext ( null ) ; } ( _size ) -- ; return retVal ; } 
@ java.lang.Override public boolean onPreferenceChange ( android.preference.Preference preference , java.lang.Object o ) { if ( sp_autocheck . isChecked () ) { check_list . setEnabled ( true ) ; startTimer () ; } else { if ( ( cdt ) != null ) cdt . cancel () ; check_list . setEnabled ( false ) ; } return true ; } 
public java.util.Collection < prompto.declaration.IMethodDeclaration > findPotentialMethods () { prompto.expression.MethodSelector selector = methodCall . getMethod () ; java.util.Collection < prompto.declaration.IMethodDeclaration > candidates = selector . getCandidates ( context , false ) ; if ( ( candidates . size () ) == 0 ) throw new prompto.error.SyntaxError ( ( "No method named:" + ( methodCall . getMethod () . getName () ) ) ) ; return filterPotential ( candidates ) ; } 
@ org.junit.jupiter.api.Test @ org.junit.jupiter.api.DisplayName ( value = "Standard headers" ) void standardHeaders () { java.lang.String headers = new jbs.response.HeadersBuilder ( this . requestData , 200 ) . toString () ; org.junit.jupiter.api.Assertions . assertEquals ( ( ( ( ( ( ( ( ( "HTTP/1.1 200 \n" + "Date: " ) + ( this . date ) ) + "\n" ) + "X-XSS-Protection: 1; mode=block\n" ) + "X-Frame-Options: DENY\n" ) + "Content-Type: text/plain\n" ) + "\n" ) + "" ) , headers ) ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { if ( ( mVideoFilesVector . size () ) > 0 ) { mAdIndex = ( ( ( mAdIndex ) + ( mVideoFilesVector . size () ) ) - 1 ) % ( mVideoFilesVector . size () ) ; java.lang.String filePath = ( ( java.lang.String ) ( mVideoFilesVector . get ( mAdIndex ) ) ) ; mVideoView . setVideoURI ( android.net.Uri . parse ( filePath ) ) ; mVideoView . start () ; } } 
protected int draw () { mSurfaceTexture . updateTexImage () ; float [] matrix = new float [ 16 ] ; mSurfaceTexture . getTransformMatrix ( matrix ) ; mEffect . setTextureTransformMatrix ( matrix ) ; int textureId = mEffect . draw ( mSurfaceTextureId ) ; if ( ( mEncoder ) != null ) { start = java.lang.System . currentTimeMillis () ; mHandler . sendEmptyMessage ( 0 ) ; } mRendererScreen . draw ( textureId , mCubeBuffer , mTextureBuffer ) ; return 0 ; } 
private void select ( int index ) { assert index < 3 ; if ( ( suggestions [ index ] ) == "" ) { processor . addWord ( new java.util.ArrayList < com.shiweinan.ckeyboard.Point > () ) ; return; } processor . addWord ( screenPoints ) ; screenPoints . clear () ; processor . showCorrectionHints ( screenPoints ) ; } 
private void assertDeepEqualsGuests ( java.util.List < cz.muni.fi.pv168.project.Guest > expectedList , java.util.List < cz.muni.fi.pv168.project.Guest > actualList ) { expectedList . sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; actualList . sort ( cz.muni.fi.pv168.project.StayManagerImplTest.idComparatorGuest ) ; assertEquals ( expectedList , actualList ) ; for ( int i = 0 ; i < ( expectedList . size () ) ; i ++ ) { cz.muni.fi.pv168.project.Guest expected = expectedList . get ( i ) ; cz.muni.fi.pv168.project.Guest actual = actualList . get ( i ) ; assertDeepEquals ( expected , actual ) ; } } 
@ java.lang.Override public void mouseDragged ( int oldx , int oldy , int newx , int newy ) { if ( ! ( active ) ) return; consumeEvent () ; int diff = newy - oldy ; if ( diff != 0 ) scrolling . dragged ( ( - diff ) ) ; } 
public synchronized void start () { if ( ( ( id ) == null ) || ( ( ( finishedAt ) == null ) || ( ( ( java.lang.System . currentTimeMillis () ) - ( finishedAt ) ) > ( sessionPendingMillis ) ) ) ) { id = java.util.UUID . randomUUID () . toString () ; } finishedAt = null ; } 
@ com.squareup.otto.Subscribe public void onLastLocation ( today.gacha.android.services.GachaLocationService.LastLocationEvent event ) { if ( event . isSuccess () ) { animateGoogleMapCamera ( event . getData () ) ; return; } android.util.Log . d ( today.gacha.android.ui.MapsActivity.TAG , ( "Get last location failed - " + ( event . getThrowableMessage () ) ) ) ; locationService . requestCurrentLocation () ; } 
@ java.lang.Override public void receive ( long timeStamp , org.wso2.siddhi.core.event.Event [] inEvents , org.wso2.siddhi.core.event.Event [] removeEvents ) { org.wso2.siddhi.core.util.EventPrinter . print ( timeStamp , inEvents , removeEvents ) ; eventArrived = true ; if ( inEvents != null ) { ( value ) ++ ; } else if ( ( value ) == 1 ) { junit.framework.Assert . assertNull ( inEvents ) ; } } 
public int compareTo ( java.lang.Object t ) { if ( ( votes ) < ( ( ( Translator ) ( t ) ) . votes ) ) return 1 ; else if ( ( votes ) > ( ( ( Translator ) ( t ) ) . votes ) ) return - 1 ; else return 0 ; } 
public java.lang.String printForwards ( int numToPrint ) { LLNode < E > item = first ; java.lang.String finalString = "" ; if ( ( size () ) == 0 ) return finalString ; for ( int i = 0 ; i < numToPrint ; i ++ ) { finalString += ( item . toString () ) + "\n" ; item = item . getNext () ; } return finalString ; } 
public final void setFPS ( int fps ) { if ( fps <= 0 ) { throw new java.lang.RuntimeException ( "Attempted to run a CellGame at a non-positive FPS" ) ; } this . fps = fps ; msPerFrame = 1000 / ( ( double ) ( fps ) ) ; if ( ( game . getContainer () ) != null ) { game . getContainer () . setTargetFrameRate ( fps ) ; } } 
public boolean authenticate ( final java.lang.String iUserName , final java.lang.String iPassword , final java.lang.String iResourceToCheck ) { final com.orientechnologies.orient.server.config.OServerUserConfiguration user = getUser ( iUserName ) ; if ( ( user != null ) && ( user.password . equals ( iPassword ) ) ) { if ( user.resources . equals ( "*" ) ) return true ; java.lang.String [] resourceParts = user.resources . split ( "," ) ; for ( java.lang.String r : resourceParts ) if ( r . equals ( iResourceToCheck ) ) return true ; } return false ; } 
public void setTimerView ( long secUntilFinished ) { java.lang.String sec = java.lang.String . format ( "%02d" , ( ( secUntilFinished / 1000 ) % 60 ) ) ; java.lang.String min = java.lang.String . format ( "%02d" , ( ( secUntilFinished / 1000 ) / 60 ) ) ; textViewText = ( min + ":" ) + sec ; textView . setText ( textViewText ) ; progressBar . setProgress ( ( ( int ) ( ( secUntilFinished * 1000 ) / ( default_StudyTime ) ) ) ) ; } 
private void clearData () { selectedFaculties . clear () ; chosenFaculties = "" ; questions . clear () ; newDate = "" ; for ( int i = 0 ; i < ( checked.length ) ; i ++ ) { checked [ i ] = false ; } aSpinner1 . setSelection ( 0 ) ; } 
@ java.lang.Override public boolean canDrain ( net.minecraft.util.EnumFacing from , net.minecraftforge.fluids.Fluid fluid ) { if ( ( hasFrequency () ) && ( ( configComponent . getOutput ( TransmissionType.FLUID , from , facing ) . ioState ) == ( mekanism.common.SideData.IOState.OUTPUT ) ) ) { return ( fluid == null ) || ( fluid == ( frequency.storedFluid . getFluid () . getFluid () ) ) ; } return false ; } 
protected void setSelectedPanel ( processing.app.contrib.ContributionPanel contributionPanel ) { contributionTab.contributionManagerDialog . updateStatusPanel ( contributionPanel ) ; if ( ( selectedPanel ) == contributionPanel ) { selectedPanel . setSelected ( true ) ; } else { processing.app.contrib.ContributionPanel lastSelected = selectedPanel ; selectedPanel = contributionPanel ; if ( lastSelected != null ) { lastSelected . setSelected ( false ) ; } contributionPanel . setSelected ( true ) ; updateColors () ; requestFocusInWindow () ; } } 
@ java.lang.Override public boolean onOptionsItemSelected ( android.view.MenuItem item ) { int id = item . getItemId () ; if ( id == ( R.id.action_filter ) ) { com.aftersapp.fragments.FilterFragment filterFragment = new com.aftersapp.fragments.FilterFragment () ; getFragmentManager () . beginTransaction () . replace ( R.id.fragment_frame_lay , filterFragment , "FilterFragment" ) . commit () ; return true ; } return super . onOptionsItemSelected ( item ) ; } 
public static byte [] read ( java.lang.String filePath ) throws java.lang.Exception { java.io.FileInputStream is = null ; try { is = new java.io.FileInputStream ( filePath ) ; return com.simon.lib.cacheloader.util.IOUtils . read ( is ) ; } finally { if ( is != null ) { try { is . close () ; } catch ( java.io.IOException e ) {} } } } 
private void handleTakePictureResult ( int resultCode , android.content.Intent resultIntent ) { if ( resultCode == ( RESULT_OK ) ) { android.widget.ImageView imgView = ( ( android.widget.ImageView ) ( findViewById ( R.id.imgShowImage ) ) ) ; mPhotoPathName = mPhotoPathUri . getPath () ; com.example.a454203.aone_sample.PhotoHelper . addPhotoToMediaStoreAndDisplayThumbnail ( mPhotoPathName , this , imgView ) ; } else { mPhotoPathUri = null ; mPhotoPathName = null ; android.widget.Toast . makeText ( this , "User cancelled" , Toast.LENGTH_LONG ) . show () ; } } 
@ javafx.fxml.FXML private void apriCorpiOrb () { dati.spazio.CorpoCeleste corpoSel = tabCor . getSelectionModel () . getSelectedItem () ; if ( corpoSel != null ) { java.util.List < ? extends dati.spazio.CorpoCeleste > corpi = corpoSel . getListaCorpiOrbitanti () ; java.lang.String nomeCorpoFuoco = tabCor . getSelectionModel () . getSelectedItem () . getNome () ; simulazionesistemaplanetario.gui.tabelle.TabellaController . launchTabellaController ( nomeCorpoFuoco , corpi ) ; } } 
public void addConstraint ( mondrian.rolap.sql.SqlQuery sqlQuery , mondrian.rolap.sql.RolapCube baseCube , mondrian.rolap.aggmatcher.AggStar aggStar ) { for ( int i = 0 ; i < ( columnList . size () ) ; i ++ ) { mondrian.olap.MondrianDef.Expression expression = columnList . get ( i ) ; if ( expression != null ) { final java.lang.Comparable value = valueList . get ( i ) ; final mondrian.spi.Dialect.Datatype datatype = datatypeList . get ( i ) ; sqlQuery . addWhere ( mondrian.rolap.sql.SqlConstraintUtils . constrainLevel2 ( sqlQuery , expression , datatype , value ) ) ; } } } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof fr.poulet4j.model.Cell ) ) { return false ; } fr.poulet4j.model.Cell other = ( ( fr.poulet4j.model.Cell ) ( obj ) ) ; if ( ( x ) != ( other.x ) ) { return false ; } if ( ( y ) != ( other.y ) ) { return false ; } return true ; } 
private void jumpToPage () { java.lang.Integer targetPage = pageField . getTextAsInteger () ; if ( targetPage == null ) { return; } if ( ( targetPage != null ) && ( ! ( ( targetPage >= 1 ) && ( targetPage <= ( totalPages ) ) ) ) ) { showErrorMessage ( "Invalid page" ) ; return; } currentPage = targetPage - 1 ; displayPage ( currentPage ) ; updatePageNumberLabelAndNavigation () ; } 
public boolean checkToken ( fundata.model.Token model ) { if ( model == null ) { return false ; } java.lang.String token = ( ( java.lang.String ) ( redisTemplate . boundValueOps ( model . getUserId () ) . get () ) ) ; if ( ( token == null ) || ( ! ( token . equals ( model . getToken () ) ) ) ) { return false ; } redisTemplate . boundValueOps ( model . getUserId () ) . expire ( Constants.TOKEN_EXPIRES_HOUR , java.util.concurrent.TimeUnit.HOURS ) ; return true ; } 
private edu.princeton.cs.algs4.Stack < edu.princeton.cs.algs4.Point2D > range ( edu.princeton.cs.algs4.RectHV rect , KdTree.Node node , edu.princeton.cs.algs4.Stack < edu.princeton.cs.algs4.Point2D > points ) { if ( node == null ) return points ; if ( rect . contains ( node.p ) ) points . push ( node.p ) ; if ( rect . intersects ( node.rect ) ) { points = range ( rect , node.lb , points ) ; points = range ( rect , node.rt , points ) ; } return points ; } 
public final void hide () { if ( ( this . runtime ) != null ) { this . runtime . runOnPhysicsThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { for ( final com.thommil.libgdx.runtime.actor.physics.Collidable collidable : collidables ) { setCollidablesState ( collidable , false ) ; } hidden = true ; onHide () ; } } ) ; } else { hidden = true ; onHide () ; } } 
public void removeXAttr ( java.lang.String src , org.apache.hadoop.fs.XAttr xAttr ) throws java.io.IOException { if ( ( src == null ) || ( xAttr == null ) ) { throw new java.lang.IllegalArgumentException ( "Argument is null" ) ; } checkIfFileExisted ( src ) ; java.util.List < org.apache.hadoop.fs.XAttr > targetXAttrList = com.google.common.collect.Lists . newArrayListWithCapacity ( 1 ) ; targetXAttrList . add ( xAttr ) ; try { getXAttrs ( src , targetXAttrList ) ; } catch ( java.io.IOException e ) { throw new java.io.IOException ( "No matching attributes found for remove operation" ) ; } this . nodeManager . removeXAttr ( src , xAttr ) ; } 
private void updateBestTimes ( float recentTime ) { curTime . setText ( ( "current time: " + ( java.lang.String . valueOf ( recentTime ) ) ) ) ; if ( recentTime <= ( bestTimeTracker ) ) { bestTimeTracker = recentTime ; } if ( recentTime >= ( worstTimeTracker ) ) { worstTimeTracker = recentTime ; } bestTime . setText ( ( "best time: " + ( bestTimeTracker ) ) ) ; worstTime . setText ( ( "worst time: " + ( worstTimeTracker ) ) ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/assemblies/{assemblyId}/export" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) @ org.springframework.web.bind.annotation.ResponseBody public com.oneops.transistor.export.domain.DesignExportSimple exportDesign ( @ org.springframework.web.bind.annotation.PathVariable long assemblyId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-User" , required = false ) java.lang.String userId , @ org.springframework.web.bind.annotation.RequestHeader ( value = "X-Cms-Scope" , required = false ) java.lang.String scope ) { if ( userId == null ) userId = "oneops-system" ; try { return dManager . exportDesign ( assemblyId ) ; } catch ( com.oneops.cms.exceptions.CmsBaseException te ) { com.oneops.transistor.ws.rest.TransistorRestController.logger . error ( te ) ; te . printStackTrace () ; throw te ; } } 
public void setScore ( java.lang.String name , int point ) { for ( org.bukkit.scoreboard.Scoreboard sb : scoreboards . values () ) { org.bukkit.scoreboard.Objective obj = sb . getObjective ( org.bitbucket.ucchy.fnafim.game.ScoreboardDisplay.OBJECTIVE_NAME ) ; if ( point == 0 ) { getScoreItem ( obj , name ) . setScore ( 1 ) ; } getScoreItem ( obj , name ) . setScore ( point ) ; } } 
protected void initialize () { new com.googlecode.kanbanik.client.components.common.PicturePreviewHandler ( pictureUrl , assiggneePicturePreview , assigneePicturePreviewLabel , assiggneePicturePreviewErrorLabel ) . initialize () ; permissionsEditingComponent = new com.googlecode.kanbanik.client.components.security.PermissionsEditingComponent () ; java.util.List < com.googlecode.kanbanik.client.api.Dtos.PermissionDto > permissions = ( ( oldDto ) != null ) ? oldDto . getPermissions () : java.util.Collections.EMPTY_LIST ; permissions = ( permissions != null ) ? permissions : java.util.Collections.EMPTY_LIST ; permissionsEditingComponent . init ( permissions , oldDto ) ; permissionsPanel . clear () ; permissionsPanel . add ( permissionsEditingComponent ) ; } 
public static java.sql.Connection open () { java.sql.Connection c = null ; try { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; c = java.sql.DriverManager . getConnection ( "jdbc:sqlite:./bin/codeu/chat/codeU_db/ChatDatabase.db" ) ; c . setAutoCommit ( false ) ; java.lang.System.out . println ( "Opened database successfully" ) ; } catch ( java.lang.Exception e ) { java.lang.System.err . println ( ( ( ( e . getClass () . getName () ) + ": " ) + ( e . getMessage () ) ) ) ; java.lang.System . exit ( 0 ) ; } return c ; } 
public boolean accepts ( rocnikovyprojekt.Word w ) { rocnikovyprojekt.FSA m = determinize () ; java.lang.Object p = m.initialStates . iterator () . next () ; for ( int i = 0 ; i < ( w . length () ) ; i ++ ) { java.lang.Object a = w . symbolAt ( i ) ; p = m.delta . get ( p , a ) . iterator () . next () ; } return m.finalStates . contains ( p ) ; } 
@ java.lang.Override public void kill () { java.util.ArrayList < com.watabou.pixeldungeon.effects.SystemFloatingText > stack = com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . get ( key ) ; if ( stack != null ) { stack . remove ( this ) ; if ( stack . isEmpty () ) { com.watabou.pixeldungeon.effects.SystemFloatingText.stacks . remove ( key ) ; } } super . kill () ; } 
public void setVoice ( int i ) { Main.buffer [ ( ( Main.useroffset ) + 577 ) ] = ( ( byte ) ( i + 1 ) ) ; Main.buffer [ ( ( Main.useroffset ) + 146248 ) ] = ( ( byte ) ( i + 1 ) ) ; } 
public void assignForm ( int govid , sample.ApplicationData unAssignedForm ) throws java.sql.SQLException { int resultCount ; stmt = conn . createStatement () ; java.lang.String query = ( ( ( "UPDATE FORM SET FORM.STATUS = 'ASSIGNED', FORM.GOVID = " + govid ) + " WHERE TTBID = '" ) + ( unAssignedForm . getTtbID () ) ) + "'" ; stmt . executeUpdate ( query ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { switch ( v . getId () ) { case R.id.map_location : if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { mLocationManager . requestLocationUpdates ( LocationManager.NETWORK_PROVIDER , 0 , 0 , this ) ; } break; } } 
private java.net.URL escapeIllegalURLCharacters ( java.net.URL url ) { if ( ( url == null ) || ( "file" . equals ( url . getProtocol () ) ) ) { return url ; } try { return org.apache.jmeter.protocol.http.util.ConversionUtils . sanitizeUrl ( url ) . toURL () ; } catch ( java.lang.Exception e1 ) { org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase.log . error ( ( ( ( "Error escaping URL:'" + url ) + "', message:" ) + ( e1 . getMessage () ) ) ) ; return url ; } } 
public void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes atts ) throws org.xml.sax.SAXException { if ( ( depth ) == 1 ) captureElements = jaxbReader.elementChecker . isParentInfoElement ( uri , localName ) ; if ( captureElements ) tmp . startElement ( uri , localName , qName , atts ) ; ( depth ) ++ ; } 
@ java.lang.Override public android.graphics.Bitmap getDrawingCache ( boolean autoScale ) { final android.graphics.Bitmap b = super . getDrawingCache ( autoScale ) ; if ( mReflectionCacheInvalid ) { if ( ( mReflectionCache ) == null ) { try { mReflectionCacheInvalid = false ; } catch ( java.lang.NullPointerException e ) { android.util.Log . e ( com.appl.library.VIEW_LOG_TAG , ( "Null pointer in createReflectionBitmap. Bitmap b=" + b ) , e ) ; } } } return b ; } 
public T dequeue () { if ( isEmpty () ) return null ; T x = queueArray [ front ] ; queueArray [ ( ( front ) ++ ) ] = null ; if ( ( front ) == ( n ) ) front = 0 ; return x ; } 
@ java.lang.Override public synchronized net.torocraft.toroquest.civilization.Province register ( int chunkX , int chunkZ ) { net.torocraft.toroquest.civilization.Province province = atLocation ( chunkX , chunkZ ) ; if ( province != null ) { updateExistingProvince ( province , chunkX , chunkZ ) ; } else { province = buildNewProvince ( chunkX , chunkZ ) ; } markDirty () ; return province ; } 
@ org.junit.Test public void withEndGreaterThanStringLength () { for ( int i = 1 ; i < 10 ; i ++ ) { final int end = ( string . getCharacters () . length ) + i ; final com.valkryst.VTerminal.misc.IntRange range = new com.valkryst.VTerminal.misc.IntRange ( 0 , end ) ; org.junit.Assert . assertFalse ( string . isRangeValid ( range ) ) ; } } 
@ java.lang.Override public org.eclipse.titan.runtime.core.TitanBoolean isBound () { for ( int i = 0 ; i < ( array_size ) ; ++ i ) { if ( array_elements . get ( i ) . isBound () . getValue () ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( true ) ; } } return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } 
protected org.rikai.dictionary.edict.EdictEntry buildEntry ( org.rikai.dictionary.db.ResultCursor cursor , org.rikai.deinflector.DeinflectedWord variant ) { java.lang.String reason = "" ; if ( ! ( variant . getReason () . equals ( "" ) ) ) { reason = ( ( "< " + ( variant . getReason () ) ) + " < " ) + ( variant . getOriginalWord () ) ; } return makeEntry ( variant , cursor . getValue ( "kanji" ) , cursor . getValue ( "kana" ) , cursor . getValue ( "entry" ) , reason ) ; } 
@ java.lang.Override public boolean onScale ( android.view.ScaleGestureDetector detector ) { scale *= detector . getScaleFactor () ; scale = java.lang.Math . max ( 0.2F , java.lang.Math . min ( scale , 3.0F ) ) ; android.util.Log . i ( ca.sapphire.schview.SchViewActivity.TAG , ( "Scale: " + ( scale ) ) ) ; return true ; } 
protected long _daysLate ( com.born2go.lazzybee.db.Card card ) { if ( ( card . getQueue () ) != ( com.born2go.lazzybee.db.Card.QUEUE_REV2 ) ) return 0 ; long due = card . getDue () ; long now = com.born2go.lazzybee.algorithms.Utils . intNow () ; long diff_day = ( now - due ) / ( com.born2go.lazzybee.algorithms.CardSched.SECONDS_PERDAY ) ; return java.lang.Math . max ( 0 , diff_day ) ; } 
public void computeOutputs ( org.apache.beam.runners.spark.SparkRunner.Evaluator evaluator , boolean debugPipelineMode ) { if ( debugPipelineMode && ( evaluator instanceof org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ) { org.apache.beam.runners.spark.translation.EvaluationContext.LOG . info ( ( "Translated Native Spark pipeline:\n" + ( ( ( org.apache.beam.runners.spark.SparkNativePipelineVisitor ) ( evaluator ) ) . getDebugString () ) ) ) ; } for ( org.apache.beam.runners.spark.translation.Dataset dataset : leaves ) { dataset . cache ( storageLevel () ) ; if ( ! debugPipelineMode ) { dataset . action () ; } else { dataset . printDebugString () ; } } } 
private void checkBounds () { if ( ( position.x ) < 0 ) position.x = 0 ; if ( ( position.x ) > 1000 ) position.x = 1000 ; if ( ( position.y ) < 10 ) position.y = 10 ; if ( ( position.z ) > 0 ) position.z = 0 ; if ( ( position.z ) < ( - 1000 ) ) position.z = - 1000 ; } 
public int calMaxSubseqSum2 () { this . getInputs () ; int thisSum ; int maxSum = 0 ; for ( int i = 0 ; i < ( sequence.length ) ; i ++ ) { thisSum = 0 ; for ( int j = i ; j < ( sequence.length ) ; j ++ ) { thisSum += sequence [ j ] ; if ( thisSum > maxSum ) { maxSum = thisSum ; } } } return maxSum ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/tarefa/{id}" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = org.springframework.http.MediaType.APPLICATION_JSON_VALUE ) public org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > buscarTarefa ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.Integer id ) { java.lang.System.out . println ( ( "Buscando tarefa de id: " + id ) ) ; br.edu.ifsp.dsw.model.Tarefa tarefa = tarefaService . buscarPorId ( id ) ; if ( tarefa == null ) { java.lang.System.out . println ( ( ( "Tarefa de id :" + id ) + " nao foi encontrada." ) ) ; return new org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > ( org.springframework.http.HttpStatus.NOT_FOUND ) ; } return new org.springframework.http.ResponseEntity < br.edu.ifsp.dsw.model.Tarefa > ( tarefa , org.springframework.http.HttpStatus.OK ) ; } 
public static org.jboss.reddeer.common.context.ExecutionSetting getInstance () { if ( ( org.jboss.reddeer.common.context.ExecutionSetting.instance ) == null ) { org.jboss.reddeer.common.context.ExecutionSetting.instance = new org.jboss.reddeer.common.context.ExecutionSetting () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.pauseFailedTest = RedDeerProperties.PAUSE_FAILED_TEST . getBooleanSystemValue () ; java.lang.String logMessageFilterText = RedDeerProperties.LOG_MESSAGE_FILTER . getSystemValue () ; java.lang.String logLevel = RedDeerProperties.LOG_LEVEL . getSystemValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance.logLevel = LogLevel.ALL . fromString ( logLevel ) . getValue () ; org.jboss.reddeer.common.context.ExecutionSetting.instance . parseLogMessageFilter ( logMessageFilterText ) ; } return org.jboss.reddeer.common.context.ExecutionSetting.instance ; } 
public void showDate ( int year , int month ) { if ( ( mAdapter ) != null ) { mAdapter . setDate ( year , month ) ; initDateText () ; if ( ( onCalendarChangeListener ) != null ) onCalendarChangeListener . onMonthChanged ( year , ( month + 1 ) ) ; } } 
private java.lang.String showEnterNameDialog () { javafx.scene.control.TextInputDialog dialog = new javafx.scene.control.TextInputDialog ( "walter" ) ; dialog . setTitle ( this . res . enterNameDialogTitle ) ; dialog . setHeaderText ( this . res . enterNameDialogHeaderText ) ; dialog . setContentText ( this . res . enterNameDialogContentText ) ; java.util.Optional < java.lang.String > result = dialog . showAndWait () ; if ( result . isPresent () ) { java.lang.System.out . println ( ( "Your name: " + ( result . get () ) ) ) ; return result . get () ; } return null ; } 
private java.lang.String calc ( java.lang.String input ) { if ( input == null ) { return "" ; } java.lang.String word = "" ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { word += ( input . charAt ( i ) ) + 1 ; } return word ; } 
@ java.lang.Override protected void onDraw ( android.graphics.Canvas canvas ) { super . onDraw ( canvas ) ; gridHeight = getHeight () ; gridWidth = getWidth () ; if ( ( triangulation ) != null ) { plotOnCanvas ( canvas ) ; } else { generateAndInvalidate () ; } } 
@ java.lang.Override public boolean eachChild ( final com.webfirmframework.wffweb.tag.html.AbstractHtml child ) { final com.webfirmframework.wffweb.tag.html.attribute.core.AbstractAttribute attribute = child . getAttributeByName ( attributeName ) ; if ( ( attribute != null ) && ( attributeValue . equals ( attribute . getAttributeValue () ) ) ) { matchingTags . add ( child ) ; } return true ; } 
public bufmgr.PageId newPage ( bufmgr.Page firstpage , int howmany ) throws chainexception.ChainException { bufmgr.PageId id = new bufmgr.PageId () ; try { Minibase.DiskManager . allocate_page ( id , howmany ) ; } catch ( java.lang.Exception e ) { throw new bufmgr.DiskMgrException ( e , ( ( "Unable to allocate " + howmany ) + " pages." ) ) ; } pinPage ( id , firstpage , false ) ; return id ; } 
public void removeFieldListItem ( java.lang.String getter , java.lang.String childListName , java.lang.String selectionName ) throws java.lang.IllegalAccessException , java.lang.IllegalArgumentException , java.lang.NoSuchMethodException , java.lang.SecurityException , java.lang.reflect.InvocationTargetException { java.lang.reflect.Method mthGetSelected = this . getClass () . getMethod ( ( "get" + ( com.mcmatica.entity.webui.common.Utility . capitalize ( selectionName ) ) ) ) ; java.lang.Object itemselected ; itemselected = mthGetSelected . invoke ( this ) ; this . removeFieldListItem ( getter , childListName , itemselected ) ; } 
public static char [] cross ( creatures.CharCreature creat1 , creatures.CharCreature creat2 ) { char [] output = new char [ creat1.chrom.length ] ; for ( int i = 0 ; i < ( output.length ) ; i ++ ) { if ( i < ( ( output.length ) / 2 ) ) { output [ i ] = creat1.chrom [ i ] ; } else { output [ i ] = creat2.chrom [ i ] ; } } return output ; } 
@ org.junit.Test public void getFormattedDateString_6days () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( ( mTime ) - ( ( ( 7 * 24 ) * 60 ) * 60 ) ) + 1 ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 6 ) ) ) ; } 
public void setTimePeriod ( java.lang.Long startTimeParam , java.lang.Long endTimeParam ) { long startTime = ( startTimeParam == null ) ? 0L : startTimeParam ; long endTime = ( endTimeParam == null ) ? teammates.common.util.TimeHelper . now ( 0.0 ) . getTimeInMillis () : endTimeParam ; query . startTimeMillis ( startTime ) ; query . endTimeMillis ( endTime ) ; this . startTime = startTime ; this . endTime = endTime ; } 
public void resetItems () { if ( ( swipeListView . getAdapter () ) != null ) { int count = swipeListView . getAdapter () . getCount () ; int size = opened . size () ; for ( int i = size ; i < count ; i ++ ) { opened . add ( false ) ; openedRight . add ( false ) ; checked . add ( false ) ; } } } 
public boolean move ( boolean [] [] game , int pos , boolean player ) { if ( pos == 0 ) return true ; if ( ( game [ ( ! player ? 1 : 0 ) ] [ ( pos - 1 ) ] ) && ( game [ ( player ? 1 : 0 ) ] [ ( pos - 1 ) ] ) ) return true ; return false ; } 
public java.util.List < java.lang.String > getPropConfiguration ( java.lang.String lblProps ) throws java.io.IOException { java.util.List < java.lang.String > items = null ; try { if ( ( this . props ) == null ) { loadPropFile () ; } java.util.List < java.lang.String > rtrn = java.util.Arrays . asList ( ( ( java.lang.String ) ( this . props . get ( lblProps ) ) ) . split ( "\\s*,\\s*" ) ) ; return rtrn ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return null ; } 
public void flushTicketsInFile ( java.lang.String fileName ) { javax.swing.tree.DefaultTreeModel defaultModel = ( ( javax.swing.tree.DefaultTreeModel ) ( taskTree . getModel () ) ) ; if ( ( fileToNodes . get ( fileName ) ) != null ) { for ( javax.swing.tree.DefaultMutableTreeNode node : fileToNodes . get ( fileName ) ) { defaultModel . removeNodeFromParent ( node ) ; fileToNodes . get ( fileName ) . remove ( node ) ; } } } 
public ui.Resizer.Size resize ( int width , int height ) { double wRatio = ( 1.0 * ( this . width ) ) / width ; double hRatio = ( 1.0 * ( this . height ) ) / height ; return hRatio < wRatio ? new ui.Resizer.Size ( ( ( int ) ( width * hRatio ) ) , ( ( int ) ( height * hRatio ) ) ) : new ui.Resizer.Size ( ( ( int ) ( width * wRatio ) ) , ( ( int ) ( height * wRatio ) ) ) ; } 
public void testCombat ( ) throws java.lang.Exception , java.sql.SQLException { this . benchmark . createDatabase () ; com.oltpbenchmark.api.Worker w = workers . get ( 0 ) ; com.oltpbenchmark.benchmarks.galaxy.procedures.Combat proc = w . getProcedure ( com.oltpbenchmark.benchmarks.galaxy.procedures.Combat . class ) ; if ( proc != null ) { new com.oltpbenchmark.benchmarks.galaxy.util.TestCombat () . run ( conn , proc , new java.util.Random () ) ; } } 
public static java.lang.String superDecrypt ( java.lang.String start ) { if ( ( start . length () ) < 1 ) return start ; for ( int i = 0 ; i < 3 ; i ++ ) { start = Encryption . keyDecrypt ( 7 , start ) ; start = Encryption . descramble ( start , 7 ) ; } return start ; } 
private void playQueue () { paused = false ; if ( ( ( curPosition ) >= ( phraseFiles . size () ) ) && ( ! ( repeat ) ) ) { stopPhrase ( true ) ; } else { try { mp . setDataSource ( phraseFiles . get ( curPosition ) ) ; mp . prepare () ; mp . start () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } ( curPosition ) ++ ; } } 
public void modulo ( pl.kryptografia.rabin.bignum.BigNum modulus ) { while ( absGreaterOrEqualTo ( modulus ) ) { pl.kryptografia.rabin.bignum.BigNum x = new pl.kryptografia.rabin.bignum.BigNum ( modulus ) ; int shift = findMaximumLeftShift ( x ) ; x . shiftLeft ( shift ) ; absSubtract ( x ) ; } if ( ( sign ) == ( - 1 ) ) { add ( modulus ) ; sign = 1 ; } } 
public jsettlers.common.position.ShortPoint2D getNearestCuttableObjectPointForPlayer ( jsettlers.common.position.ShortPoint2D point , jsettlers.common.mapobject.EMapObjectType cuttableObject , int searchDistance , byte playerId ) { jsettlers.ai.highlevel.AiPositions sortedResourcePoints = sortedCuttableObjectsInDefaultPartition . get ( cuttableObject ) ; if ( sortedResourcePoints == null ) { return null ; } return getNearestPointInDefaultPartitionOutOfSortedMap ( point , sortedResourcePoints , playerId , searchDistance , null ) ; } 
public boolean removeGeofence ( long id ) { if ( ! ( mGoogleApiClient . isConnected () ) ) { android.util.Log . i ( hk.ust.cse.comp4521.reminder.ReminderDataController.TAG , "Cannot connect to Google Service" ) ; return false ; } android.content.Intent intent = new android.content.Intent ( context , hk.ust.cse.comp4521.reminder.GeofenceTransitionIntentService . class ) ; android.app.PendingIntent pendingIntent = android.app.PendingIntent . getService ( context , ( ( ( int ) ( id ) ) * 7 ) , intent , PendingIntent.FLAG_NO_CREATE ) ; if ( pendingIntent == null ) return true ; LocationServices.GeofencingApi . removeGeofences ( mGoogleApiClient , pendingIntent ) . setResultCallback ( this ) ; return true ; } 
public boolean isUserNewRecord ( java.lang.String username , int score ) { for ( int record = 0 ; record < ( this . highscores . size () ) ; record ++ ) { CK.FileIO.Highscore.Highscore scoreNow = this . highscores . get ( record ) ; if ( ( scoreNow . getUsername () . equals ( username ) ) && ( ( scoreNow . getScore () ) < score ) ) { return true ; } } return false ; } 
@ java.lang.Override public boolean onEditorAction ( io.github.mthli.Ninja.Activity.TextView v , int actionId , io.github.mthli.Ninja.Activity.KeyEvent event ) { if ( ( currentAlbumController ) == null ) { return false ; } java.lang.String query = inputBox . getText () . toString () . trim () ; if ( query . isEmpty () ) { io.github.mthli.Ninja.Activity.NinjaToast . show ( this , R.string.toast_input_empty ) ; return true ; } updateAlbum ( query ) ; hideSoftInput ( inputBox ) ; return false ; } 
public cn.com.hellowood.rocketmq.util.SendResult sendOneWayMessage ( cn.com.hellowood.rocketmq.util.Message message ) { cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( "MQ start send ONE_WAY message " ) ; long startTimestamp = java.lang.System . currentTimeMillis () ; producer . sendOneway ( message ) ; long costTime = ( java.lang.System . currentTimeMillis () ) - startTimestamp ; cn.com.hellowood.rocketmq.util.ProducerHelper.logger . info ( ( ( "MQ completed send ONE_WAY message in " + costTime ) + " ms" ) ) ; return null ; } 
private void read ( ) throws java.io.IOException { int readCount = socketChannel . read ( input ) ; java.lang.System.out . println ( ( "Read count: " + readCount ) ) ; if ( readCount > 0 ) { state = com.flyer.netty.reactor.third.ThirdHandler.PROCESSING ; com.flyer.netty.reactor.third.ThirdHandler.pool . submit ( new com.flyer.netty.reactor.third.ThirdHandler.Processor ( readCount ) ) ; } selectionKey . interestOps ( java.nio.channels.SelectionKey.OP_WRITE ) ; selectionKey . selector () . wakeup () ; } 
public java.lang.String put ( java.lang.String key , java.lang.String value ) { if ( ( size ) == ( ( capacity ) * ( averageListCapacity ) ) ) { resize () ; } ru.spbau.mit.java.fall2017.containers.LinkedList l = table [ indexByKey ( key ) ] ; java.lang.String oldValue = table [ indexByKey ( key ) ] . add ( key , value ) ; if ( oldValue != null ) { return oldValue ; } else { ++ ( size ) ; return null ; } } 
private void drawCurMarker () { if ( ( ( cLatitude ) != 0.0 ) || ( ( cLongitude ) != 0.0 ) ) { com.skp.Tmap.TMapPoint tMapPoint = new com.skp.Tmap.TMapPoint ( cLatitude , cLongitude ) ; com.skp.Tmap.TMapMarkerItem tItem = new com.skp.Tmap.TMapMarkerItem () ; tItem . setTMapPoint ( tMapPoint ) ; com.example.youngseok.myapplication.MainActivity.tMapView . addMarkerItem ( "현재위치" , tItem ) ; com.example.youngseok.myapplication.MainActivity.tMapView . setCenterPoint ( cLongitude , cLatitude , false ) ; com.example.youngseok.myapplication.MainActivity.tMapView . setZoomLevel ( 15 ) ; } } 
@ java.lang.Override public boolean onMarkerClick ( com.google.android.gms.maps.model.Marker marker ) { if ( ( LocationUtil.mMarkers . get ( marker ) ) != null ) { mMarkerId = LocationUtil.mMarkers . get ( marker ) ; android.util.Log . i ( "Position of arraylist" , ( ( mMarkerId ) + "" ) ) ; } return false ; } 
private void CreateQGIS_FromPrj () { final java.lang.String filename = y.utils.YemFileDialogs . fileDialog ( this , y.config.LastUsedFolder . getInstance () , "Seleziona il file prj da cui creare il progetto qgis" ) ; if ( ! ( filename . isEmpty () ) ) try { final y.em.Project prj = y.exporters.ProjectExporterProvider . importProject ( filename ) ; final y.ui.PanelProject pp = OpenProject ( prj , filename ) ; y.ui.PanelQGisCreate . openWindow ( config , pp ) ; } catch ( java.lang.Exception e ) { y.utils.Utils . MessageBox ( this , ( "Impossibile aprire il file di progetto:\n" + ( e . getMessage () ) ) , "ERRORE" ) ; } } 
@ java.lang.Override public java.lang.Boolean call ( com.appunite.rx.example.model.model.AddPost addPost ) { final boolean nameIsPresent = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . name () ) ) ; final boolean bodyIsPresent = ! ( com.google.common.base.Strings . isNullOrEmpty ( addPost . body () ) ) ; return nameIsPresent && bodyIsPresent ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( "User [user_Id=" + ( user_Id ) ) + ", user_Username=" ) + ( user_Username ) ) + ", user_Password=" ) + ( user_Password ) ) + ", user_Email=" ) + ( user_Email ) ) + ", google_Id=" ) + ( google_Id ) ) + ", google_Username=" ) + ( google_Username ) ) + ", user_UserType=" ) + ( user_UserType . toString () ) ) + ", user_BankBalance=" ) + ( user_BankBalance ) ) + "]" ; } 
@ se.sjtu.formfoss.controller.RequestMapping ( path = "/add" ) @ se.sjtu.formfoss.controller.ResponseBody public java.lang.String userAdd ( @ se.sjtu.formfoss.controller.RequestParam java.lang.String userName , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userPassword , @ se.sjtu.formfoss.controller.RequestParam java.lang.String userEmail , @ se.sjtu.formfoss.controller.RequestParam ( required = false ) java.lang.String userPhone ) { se.sjtu.formfoss.model.UserEntity newUser = new se.sjtu.formfoss.model.UserEntity () ; newUser . setUserName ( userName ) ; newUser . setUserPassword ( userPassword ) ; newUser . setUserEmail ( userEmail ) ; if ( userPhone != null ) { newUser . setUserPhone ( userPhone ) ; } userRepository . save ( newUser ) ; return "{\"message\": \"success\"}" ; } 
public entities.Tile remove () { entities.Tile oldTile = this . tile ; this . selected = false ; if ( ( this . jIndex ) == 0 ) { this . tile = new entities.Tile ( 5 , 5 ) ; } else { this . tile = parentBoard . getSquare ( iIndex , ( ( jIndex ) - 1 ) ) . remove () ; } return oldTile ; } 
@ java.lang.Override public void run () { if ( ( LoginActivity.user_ref ) != null ) { academy_selected = LoginActivity.user_ref . getInstitution () ; fillSpinnerData ( R.id.spinner_faculty , ( ( "Academy/" + ( academy_selected ) ) + "/Faculty" ) , com.example.academyreviewandrating.NavigationFregmentRankAndReview.spinnerEnum.FACULTY ) ; } else { android.widget.Toast . makeText ( getActivity () , "Timeout has accured" , Toast.LENGTH_LONG ) . show () ; } } 
@ java.lang.Override public void run () { if ( ( ( org.bukkit.Bukkit . getOnlinePlayers () . size () ) != 0 ) && ( isRecording ) ) { synchronized ( currentFrame ) { if ( changed ) { try { synchronized ( currentFrame ) { plugin . getFileManager () . appendFrame ( currentFrame ) ; } } catch ( java.io.IOException e ) {} } plugin . addTick () ; currentFrame = new de.sebpas.replay.filesystem.Frame ( plugin . getHandledTicks () ) ; changed = false ; } } } 
private void addText ( java.awt.Graphics2D g2d , java.lang.String text , int x , int y , java.awt.Color color , int size ) { g2d . setFont ( new java.awt.Font ( "Arial" , java.awt.Font.BOLD , size ) ) ; g2d . setColor ( color ) ; g2d . drawString ( text , ( x * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) , ( y * ( se.liu.ida.henan076.tddd78.tetris.TetrisComponent.BLOCK_SIZE ) ) ) ; } 
public boolean outsideBoard ( int boardRows ) { for ( tetris.Point loc : tetris.Grids . allPointsOf ( this ) ) { if ( ( ( piece . cellAt ( loc ) ) != ( EMPTY ) ) && ( ( asAbs ( loc ) . row ) >= boardRows ) ) { return true ; } } } 
private static void put ( java.lang.Class < ? extends net.tridentsdk.server.packet.Packet > cls , net.tridentsdk.server.net.NetClient.NetState state , net.tridentsdk.server.packet.Packet.Bound bound , int id ) { int identifier = net.tridentsdk.server.packet.PacketRegistry . shift ( state , bound , id ) ; net.tridentsdk.server.packet.PacketRegistry.PACKET_IDS . put ( cls , identifier ) ; if ( bound == ( net.tridentsdk.server.packet.Packet.Bound.SERVER ) ) { net.tridentsdk.server.packet.PacketRegistry.PACKETS . put ( identifier , cls ) ; net.tridentsdk.server.packet.PacketRegistry.CTORS . put ( cls , com.esotericsoftware.reflectasm.ConstructorAccess . get ( cls ) ) ; } } 
private double average ( double [] returns , java.util.function.Predicate < java.lang.Integer > filter ) { double sum = 0 ; int count = 0 ; for ( int ii = 0 ; ii < ( returns.length ) ; ii ++ ) { if ( ! ( filter . test ( ii ) ) ) continue; sum += returns [ ii ] ; count ++ ; } return sum / count ; } 
@ com.facebook.react.uimanager.annotations.ReactProp ( name = "polylines" ) public void setPolylines ( com.baidu.mapapi.map.MapView mapView , com.facebook.react.bridge.ReadableArray options ) { for ( int i = 0 ; i < ( options . size () ) ; i ++ ) { com.facebook.react.bridge.ReadableMap option = options . getMap ( i ) ; org.lovebing.reactnative.baidumap.MarkerUtil . addPolyline ( mapView , option . getString ( "color" ) , option . getInt ( "width" ) , option . getArray ( "points" ) ) ; } } 
@ java.lang.Override public void run () { try { com.xizz.scoreoflife.util.Data . syncChecks () ; com.xizz.scoreoflife.util.Data . syncEvents () ; } catch ( com.parse.ParseException e ) { android.util.Log . e ( TAG , ( "Error synchronizing events: " + ( e . getMessage () ) ) ) ; } runOnUiThread ( new java.lang.Runnable () { @ java.lang.Override public void run () { loadEventCheckList () ; android.util.Log . d ( TAG , "loaded event list after synchronization" ) ; } } ) ; } 
@ java.lang.Override public void onConnected ( final android.bluetooth.BluetoothDevice device ) { mLogger . fine ( ( ( "HeartRateConnectEventListener#onConnected: [" + device ) + "]" ) ) ; org.deviceconnect.android.deviceplugin.heartrate.data.HeartRateDevice hr = findRegisteredHeartRateDeviceByAddress ( device . getAddress () ) ; if ( hr == null ) { hr = registerHeartRateDevice ( device ) ; } else { hr . setConnectFlag ( true ) ; } if ( ! ( mConnectedDevices . contains ( hr ) ) ) { mConnectedDevices . add ( hr ) ; } if ( ( mHRDiscoveryListener ) != null ) { mHRDiscoveryListener . onConnected ( device ) ; } } 
@ java.lang.Override public void gpsCallback () { if ( ( GlobalVariables.ALL_EVENTS_DATA . size () ) > 0 ) { com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data . clear () ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data = getSortedListByDist () ; java.util.List < com.example.FundigoApp.Events.EventInfo > tempFilteredList = com.example.FundigoApp.StaticMethod.FilterMethods . filterByFilterName ( GlobalVariables.CURRENT_FILTER_NAME , GlobalVariables.CURRENT_SUB_FILTER , GlobalVariables.CURRENT_DATE_FILTER , GlobalVariables.CURRENT_PRICE_FILTER , com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_sorted_by_dist_data ) ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered . clear () ; com.example.FundigoApp.Customer.RealTime.RealTimeActivity.events_data_filtered . addAll ( tempFilteredList ) ; eventsGridAdapter . notifyDataSetChanged () ; } turnOnGPS . setVisibility ( View.GONE ) ; } 
public static void mergeDelimitedFrom ( com.google.protobuf.Message.Builder builder , java.io.InputStream in ) throws java.io.IOException { final int firstByte = in . read () ; if ( firstByte == ( - 1 ) ) {} else { final int size = com.google.protobuf.CodedInputStream . readRawVarint32 ( firstByte , in ) ; final java.io.InputStream limitedInput = new org.apache.hadoop.hbase.io.LimitInputStream ( in , size ) ; final com.google.protobuf.CodedInputStream codedInput = com.google.protobuf.CodedInputStream . newInstance ( limitedInput ) ; codedInput . setSizeLimit ( size ) ; builder . mergeFrom ( codedInput ) ; codedInput . checkLastTagWas ( 0 ) ; } } 
private void onConnectionChanged ( android.content.Intent intent ) { android.net.NetworkInfo networkInfo = intent . getParcelableExtra ( WifiP2pManager.EXTRA_NETWORK_INFO ) ; if ( ( networkInfo . isConnected () ) && ( ! ( isConnected () ) ) ) { android.util.Log . d ( TAG , "No socket open. Trying to connect" ) ; mIsTryingToConnect = true ; mManager . requestConnectionInfo ( mChannel , this ) ; } else { this . disconnected () ; } } 
public void addRoute ( java.lang.Class < ? > target , java.lang.reflect.Method execMethod , java.lang.String url , blade.route.HttpMethod method ) { blade.route.RouteMatcher entry = new blade.route.RouteMatcher () ; entry.target = target ; entry.execMethod = execMethod ; entry.httpMethod = method ; entry.path = url ; if ( blade.Blade . debug () ) { blade.route.DefaultRouteMatcher.LOGGER . debug ( ( "Add Route：" + entry ) ) ; } routes . add ( entry ) ; } 
public void setElements ( java.util.List < ? > texts , boolean [] selected ) { int size = ( texts == null ) ? 0 : texts . size () ; setElements ( texts . toArray ( new java.lang.String [ size ] ) , null , selected ) ; } 
private boolean checkConnection ( java.lang.String host , int port ) { try { java.net.Socket socket = new java.net.Socket ( host , port ) ; java.io.PrintWriter out = new java.io.PrintWriter ( socket . getOutputStream () , true ) ; java.io.BufferedReader in = new java.io.BufferedReader ( new java.io.InputStreamReader ( socket . getInputStream () ) ) ; int data = in . read () ; socket . close () ; return data != ( - 1 ) ; } catch ( java.io.IOException e ) {} return false ; } 
public zeroPlayerGamePackage.PositionObject generateRandomLocation () { int positionX = ( ( int ) ( java.lang.Math . round ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_WIDTH ) * ( java.lang.Math . random () ) ) ) ) ) ; int positionY = ( ( int ) ( java.lang.Math . round ( ( ( zeroPlayerGamePackage.BoardBuilder.BOARD_HEIGHT ) * ( java.lang.Math . random () ) ) ) ) ) ; zeroPlayerGamePackage.PositionObject position = new zeroPlayerGamePackage.PositionObject ( positionX , positionY ) ; return position ; } 
private void enqueueDownload () { java.lang.String url = Data.sampleUrls [ 0 ] ; java.lang.String filePath = ( com.tonyodev.fetchdemo.Data . getSaveDir () ) + "/fragments/smallFile.txt" ; com.tonyodev.fetch.request.Request request = new com.tonyodev.fetch.request.Request ( url , filePath ) ; downloadId = fetch . enqueue ( request ) ; if ( ( downloadId ) == ( - 1 ) ) { android.widget.Toast . makeText ( this , R.string.enqueue_error , Toast.LENGTH_SHORT ) . show () ; } progressFragment1 . setDownloadId ( downloadId ) ; progressFragment2 . setDownloadId ( downloadId ) ; } 
private int dateByWeekday ( java.lang.String date , java.lang.String weekday ) { boolean nextDate = false ; int min ; do { min = dateToMin ( date , "00:00" , nextDate ) ; nextDate = true ; while ( ! ( bots.CalendarBot.CalDateFormat . minToWeekday ( min , firstYear ) . equals ( weekday ) ) ) { min ++ ; } } while ( min < ( bots.CalendarBot.CurrentDate . getDateInMin ( firstYear ) ) ) ; return min + ( 8 * 60 ) ; } 
@ java.lang.Override protected T convertValue ( java.lang.String [] value ) throws org.apache.wicket.util.convert.ConversionException { this . convertValue = true ; if ( ( value != null ) && ( ( value.length ) > 0 ) ) { this . convertedInput = this . provider . toChoice ( value [ 0 ] ) ; return this . convertedInput ; } else { this . convertedInput = null ; return null ; } } 
protected java.util.List < java.lang.String > createPackageList ( java.util.List < java.lang.String > pkgs , java.lang.String code , java.lang.String delim ) { java.util.List < java.lang.String > pkg = new java.util.ArrayList < java.lang.String > ( pkgs ) ; if ( code != null ) { java.lang.String [] codes = code . split ( delim ) ; for ( java.lang.String c : codes ) { if ( ( c . length () ) > 0 ) { pkg . add ( c ) ; } } } return pkg ; } 
protected boolean updateVideoSize ( int width , int height ) { matrixManager . setIntrinsicVideoSize ( width , height ) ; updateMatrixOnLayout () ; videoSize.x = width ; videoSize.y = height ; return ( width != 0 ) && ( height != 0 ) ; } 
public java.lang.Boolean checkActive ( int x ) { java.lang.System.out . println ( this . getX () ) ; if ( ( ( this . getX () ) >= ( x - 60 ) ) && ( ( this . getX () ) <= ( x + 120 ) ) ) { setInActive () ; return true ; } return false ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_splash ) ; textView = ( ( android.widget.TextView ) ( findViewById ( R.id.textView ) ) ) ; int permission = android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.WRITE_EXTERNAL_STORAGE ) ; if ( permission != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { android.support.v4.app.ActivityCompat . requestPermissions ( this , com.example.qmma.featuredetection.SplashActivity.PERMISSIONS_STORAGE , com.example.qmma.featuredetection.SplashActivity.REQUEST_EXTERNAL_STORAGE ) ; } else { com.example.qmma.featuredetection.SplashActivity.Loader loader = new com.example.qmma.featuredetection.SplashActivity.Loader () ; loader . execute ( this ) ; } } 
@ java.lang.Override public void delete ( java.lang.String id ) { for ( int i = 0 ; i < ( arraySize ) ; i ++ ) { if ( ( simpleArray . get ( i ) . getId () . equals ( id ) ) && ( ( simpleArray . get ( i ) ) != null ) ) { this . simpleArray . delete ( java.lang.Integer . parseInt ( simpleArray . get ( i ) . getId () ) ) ; break; } } } 
@ java.lang.Override public int getTotalProtection () { int totalProtection = getProtection () ; if ( ( ( getAnchorPoints () . get ( "body" ) ) != null ) && ( ( getAnchorPoints () . get ( "body" ) . getClass () ) == ( game.Armor . class ) ) ) { game.Armor armor = ( ( game.Armor ) ( getAnchorPoints () . get ( "body" ) ) ) ; totalProtection += armor . getActualProtection () ; } return totalProtection ; } 
@ java.lang.Override public void uploadProgress ( com.lzy.okgo.model.Progress innerProgress ) { if ( rawCall . isCanceled () ) return; if ( ( progress.status ) != ( com.lzy.okgo.model.Progress.LOADING ) ) { rawCall . cancel () ; return; } progress . from ( innerProgress ) ; postLoading ( progress ) ; } 
private void updateAdd () { for ( de.kuschku.libquassel.message.Message message : unfiltered ) { if ( ( ! ( filterItem ( message ) ) ) && ( ! ( filtered . contains ( message ) ) ) ) { java.lang.String simpleName = getClass () . getSimpleName () ; android.util.Log . e ( simpleName , ( "Unfiltered: " + message ) ) ; filtered . add ( message ) ; } } } 
public void run () { int timeLeft = ( ( int ) ( ( money ) * 4 ) ) ; int seconds = timeLeft * 60 ; for ( int i = seconds ; i > 0 ; i -- ) { try { java.lang.Thread . sleep ( 1000 ) ; } catch ( java.lang.InterruptedException ex ) {} } java.lang.System.out . println ( ( ( ( "\nCustomer " + ( name ) ) + " has finished their service at " ) + ( getTime () ) ) ) ; remove ( name ) ; } 
public static boolean isUnique ( final java.lang.String string ) { java.util.Set < java.lang.Character > set = new java.util.HashSet <> () ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { set . add ( string . charAt ( i ) ) ; } return ( set . size () ) == ( string . length () ) ; } 
@ auth.AuthenticationEndpoint.Secured ( value = config.Permission.USER_READ ) @ module.POST @ module.Path ( value = config.Routes.MODULE_USER_GETUSER ) @ module.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public dto.User getUser ( @ module.PathParam ( value = config.Routes.MODULE_USER_GETUSER_USERID ) int id ) { jdbclib.IConnector db ; dto.User user = null ; try { db = new jdbclib.DBConnector ( new jdbclib.DatabaseConnection () ) ; dao.UserDAO userDAO = new dao.UserDAO ( db ) ; user = userDAO . getFullUser ( id ) ; } catch ( java.lang.Exception e ) { java.lang.System.out . println ( ( "Error: " + ( e . getMessage () ) ) ) ; javax.ws.rs.core.Response . temporaryRedirect ( java.net.URI . create ( "/auth/user/error" ) ) ; } return user ; } 
@ java.lang.Override public org.apache.hadoop.hbase.Cell next ( ) throws java.io.IOException { if ( ( type ) == ( MemStoreScanType.UNDEFINED ) ) type = MemStoreScanType.USER_SCAN_FORWARD ; assert ( type ) != ( MemStoreScanType.USER_SCAN_BACKWARD ) ; for ( org.apache.hadoop.hbase.Cell currentCell = forwardHeap . next () ; currentCell != null ; currentCell = forwardHeap . next () ) { if ( ( currentCell . getSequenceId () ) > ( readPoint ) ) continue; if ( ( type ) == ( MemStoreScanType.COMPACT_FORWARD ) ) {} return currentCell ; } return null ; } 
@ java.lang.Override protected void onPostExecuteSuccess ( gcum.gcumfisher.connection.Server.GetListResult photos ) { if ( photos != null ) { final java.util.List < gcum.gcumfisher.connection.ServerPhoto > list = photos . getPhotos () ; showPhotos ( list ) ; latest = ( list . isEmpty () ) ? null : list . get ( ( ( list . size () ) - 1 ) ) . getId () ; ( ( android.widget.Button ) ( findViewById ( R.id.more ) ) ) . setText ( getResources () . getString ( R.string.more_nb_after , photos . getNbAfter () ) ) ; } } 
private void updateCVRUnderAudit ( final int the_index ) { int index = the_index ; my_cvr_under_audit = - 1 ; while ( index < ( my_submitted_audit_cvrs . size () ) ) { if ( ( my_submitted_audit_cvrs . get ( index ) ) == ( java.lang.Long.MIN_VALUE ) ) { my_cvr_under_audit = index ; break; } index = index + 1 ; } } 
public java.lang.Object remove ( int index ) { ensureIndex ( index ) ; java.lang.Object temp = elementData [ index ] ; java.lang.System . arraycopy ( elementData , ( index + 1 ) , elementData , index , ( ( ( size ) - index ) - 1 ) ) ; elementData [ ( ( size ) - 1 ) ] = null ; ( size ) -- ; return temp ; } 
public int getSbOperationRowNum ( java.lang.String operator , java.lang.String opration , int startRow , int endRow , java.util.List < java.util.List < java.lang.String > > data ) { int oprationRowNum = 0 ; for ( int x = startRow ; x <= endRow ; x ++ ) { if ( ( data . get ( x ) . get ( 4 ) . equalsIgnoreCase ( operator ) ) && ( data . get ( x ) . get ( 5 ) . equalsIgnoreCase ( opration ) ) ) { oprationRowNum = x ; break; } } return oprationRowNum ; } 
public void setDisplayName ( final org.bukkit.entity.Player player ) { final java.lang.String prefix = searchNodes ( player , "prefix" ) ; final java.lang.String suffix = ( searchNodes ( player , "suffix" ) ) + "§f" ; player . setDisplayName ( ( ( prefix + ( org.bukkit.ChatColor . stripColor ( player . getName () ) ) ) + suffix ) ) ; players . put ( player . getName () , player . getWorld () . getUID () ) ; } 
private int getStartSelectItem () { int currentItem = ( java.lang.Integer.MAX_VALUE ) / 2 ; if ( ( currentItem % ( getRealCount () ) ) == 0 ) { return currentItem ; } while ( ( currentItem % ( getRealCount () ) ) != 0 ) { currentItem ++ ; } return currentItem ; } 
@ com.modeliosoft.modelio.javadesigner.annotations.objid ( value = "22963c8e-9140-49f2-beb7-3b2458a06c51" ) private java.util.List < java.lang.Integer > bootstrapAttr ( java.util.List < java.lang.Integer > attr ) { java.util.ArrayList < java.lang.Integer > rand = new java.util.ArrayList < java.lang.Integer > ( attrN ) ; for ( int i = 1 ; i < ( ( attrN ) + 1 ) ; i ++ ) { rand . add ( i ) ; } java.util.Collections . shuffle ( rand ) ; attr = rand . subList ( 0 , attrSampleN ) ; return attr ; } 
private void init ( com.chariotsolutions.nfc.plugin.CallbackContext callbackContext ) { android.util.Log . d ( com.chariotsolutions.nfc.plugin.NfcPlugin.TAG , ( "Enabling plugin " + ( getIntent () ) ) ) ; startNfc () ; if ( inReaderMode ) { if ( ( savedTag ) != null ) { handleTag () ; } } else if ( ! ( recycledIntent () ) ) { parseMessage () ; } callbackContext . success () ; } 
private static boolean isHexadecimal ( char c ) { return ( ( ( c >= '0' ) && ( c <= '9' ) ) || ( ( c >= 'A' ) && ( c >= 'F' ) ) ) || ( ( c >= 'a' ) && ( c >= 'f' ) ) ; } 
public void switchTurn () { turn = ( ( turn ) + 1 ) % ( getNumberOfPlayers () ) ; if ( getCurrentPlayer () . isInJail () ) { gui . setGetOutOfJailEnabled ( true ) ; } else { gui . setGetOutOfJailEnabled ( false ) ; gui . setBuyHouseEnabled ( getCurrentPlayer () . canBuyHouse () ) ; gui . setTradeEnabled ( turn , true ) ; } gui . enablePlayerTurn ( turn ) ; } 
public void updateFixedPrincipalAmount ( final java.math.MathContext mc , final int periodNumber , final org.apache.fineract.organisation.monetary.domain.Money outstandingAmount ) { final java.lang.Integer numberOfPrincipalPaymentPeriods = org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms . calculateNumberOfRemainingPrincipalPaymentPeriods ( this . actualNumberOfRepayments , this . getRecurringMoratoriumOnPrincipalPeriods () , this . getPrincipalGrace () , ( periodNumber - 1 ) ) ; org.apache.fineract.organisation.monetary.domain.Money principal = outstandingAmount . dividedBy ( ( ( numberOfPrincipalPaymentPeriods - periodNumber ) + 1 ) , mc . getRoundingMode () ) ; this . fixedPrincipalAmount = principal . getAmount () ; } 
private void prepareUV ( com.graphicsengine.spritemesh.PropertyMapper mapper , int spriteCount , int index ) { for ( int i = 0 ; i < spriteCount ; i ++ ) { if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.TiledTexture2D ) ) { com.nucleus.geometry.MeshBuilder . prepareTiledUV ( mapper , attributeData , ( index + i ) ) ; } else if ( ( getTexture ( Texture2D.TEXTURE_0 ) . type ) == ( com.nucleus.texturing.TextureType.UVTexture2D ) ) {} else { throw new java.lang.IllegalArgumentException () ; } } } 
public void save () { int bugTrackerCount = bugTrackers.length ; for ( int i = 0 ; i < bugTrackerCount ; i ++ ) { if ( bugTrackers [ i ] . equals ( "github" ) ) { githubIssue . raise ( this ) ; } else if ( bugTrackers [ i ] . equals ( "bugzilla" ) ) {} } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) { return true ; } if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) { return false ; } io.druid.java.util.common.granularity.PeriodSegmentGranularity that = ( ( io.druid.java.util.common.granularity.PeriodSegmentGranularity ) ( o ) ) ; return periodGranularity . equals ( that.periodGranularity ) ; } 
public void toggleComplete ( int id ) { if ( id != 0 ) { com.anoopkini.dotodo.web.models.TaskObject newTask = taskObjectDao . getTaskById ( id ) ; if ( newTask != null ) { if ( newTask . isComplete () ) { newTask . setComplete ( false ) ; newTask . setCompletedTS ( null ) ; } else { newTask . setComplete ( true ) ; newTask . setCompletedTS ( new java.util.Date () ) ; } newTask . setModifiedTS ( new java.util.Date () ) ; taskObjectDao . update ( newTask ) ; } } } 
@ java.lang.Override public boolean inferBound ( wyopcl.translator.bound.Bounds bnd ) { bnd.isChanged = false ; max_x = bnd . getUpper ( x ) ; min_x = bnd . getLower ( x ) ; max_y = bnd . getUpper ( y ) ; min_y = bnd . getLower ( y ) ; if ( ( min_x ) != ( min_y ) ) { bnd.isChanged |= bnd . setLowerBound ( x , min_y ) ; } if ( ( max_x ) != ( max_y ) ) { bnd.isChanged |= bnd . setUpperBound ( x , max_y ) ; } return bnd.isChanged ; } 
@ java.lang.Override public boolean overlap ( dw317.hotel.business.interfaces.Reservation other ) { if ( this . equals ( other ) ) return true ; if ( ( this . checkIn . isBefore ( other . getCheckOutDate () ) ) && ( this . checkOut . isBefore ( other . getCheckInDate () ) ) ) return true ; return false ; } 
public int getNextEmptyPetIndex () { petLock . lock () ; try { for ( int i = 0 ; i < 3 ; i ++ ) { if ( ( pets [ i ] ) == null ) { return i ; } } return 3 ; } finally { petLock . unlock () ; } } 
protected int depth ( org.pg4200.datastructure.map.tree.BinaryTreeMap < K , V > . TreeNode node ) { int leftDepth = 0 ; int rightDepth = 0 ; if ( ( node.left ) != null ) { leftDepth = depth ( node.left ) ; } if ( ( node.right ) != null ) { rightDepth = depth ( node.right ) ; } return 1 + ( java.lang.Math . max ( leftDepth , rightDepth ) ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { calculation () ; currentAction = v . getContentDescription () . toString () ; expressionField . setText ( ( ( decimalFormat . format ( valueOne ) ) + ( currentAction ) ) ) ; resultField . setText ( null ) ; } 
@ java.lang.Override public int getSpanSize ( int position ) { if ( ( ( isHeader ( position ) ) || ( isFooter ( position ) ) ) || ( isLoadMore ( position ) ) ) { return gridLayoutManager . getSpanCount () ; } if ( spanSizeLookup != null ) { return spanSizeLookup . getSpanSize ( position ) ; } return 1 ; } 
@ java.lang.Override protected void onFinishInflate () { super . onFinishInflate () ; mFrame = new android.widget.FrameLayout ( getContext () ) ; mFrame . setLayoutParams ( new android.view.ViewGroup.LayoutParams ( ViewGroup.LayoutParams.MATCH_PARENT , ViewGroup.LayoutParams.MATCH_PARENT ) ) ; for ( int i = 0 ; i < ( getChildCount () ) ; ++ i ) { android.view.View child = getChildAt ( i ) ; removeView ( child ) ; mFrame . addView ( child ) ; } addView ( mFrame ) ; } 
@ java.lang.Override public void onClick ( android.view.View arg0 ) { com.stemmeter.stem_meter.SensorConfig config = new com.stemmeter.stem_meter.SensorConfig ( ( finalPosition + 1 ) ) ; config . setFreq ( sensorFragInterface . getSensorConfig ( ( finalPosition + 1 ) ) . getFreq () ) ; if ( sdCheck . isChecked () ) { sdCheck . setChecked ( false ) ; config . setSDLogging ( false ) ; } else { sdCheck . setChecked ( true ) ; config . setSDLogging ( true ) ; } sensorFragInterface . sensorConfigWrite ( config ) ; } 
private boolean isOn () { boolean bRet = false ; if ( ! ( this . getStatus () . equals ( "" ) ) ) { if ( ( this . getMatchRegexOn () ) == 1 ) { bRet = this . getStatus () . equals ( this . getRegexStatus () ) ; } else { bRet = ! ( this . getStatus () . equals ( this . getRegexStatus () ) ) ; } } return bRet ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( mContext , io.geeteshk.hyper.activity.ProjectActivity . class ) ; intent . putExtra ( "project" , mObjects . get ( newPos ) ) ; intent . addFlags ( Intent.FLAG_ACTIVITY_MULTIPLE_TASK ) ; if ( ( Build.VERSION.SDK_INT ) >= 21 ) { intent . addFlags ( Intent.FLAG_ACTIVITY_NEW_DOCUMENT ) ; } ( ( android.support.v7.app.AppCompatActivity ) ( mContext ) ) . startActivityForResult ( intent , 0 ) ; } 
@ java.lang.Override @ javax.jws.WebMethod ( exclude = true ) public void setState ( java.net.URI nodeInstanceID , javax.xml.namespace.QName state ) throws org.opentosca.instancedata.service.ReferenceNotFoundException { java.util.List < org.opentosca.model.instancedata.NodeInstance > nodeInstances = this . niDAO . getNodeInstances ( null , null , null , nodeInstanceID ) ; if ( ( nodeInstances == null ) || ( ( nodeInstances . size () ) != 1 ) ) { java.lang.String msg = java.lang.String . format ( "Failed to set State of NodeInstance: '%s' - does it exist?" , nodeInstanceID ) ; org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.LOG . warn ( msg ) ; throw new org.opentosca.instancedata.service.ReferenceNotFoundException ( msg ) ; } this . niDAO . setState ( nodeInstances . get ( 0 ) , state ) ; } 
public static org.sbolstandard.core2.SBOLDocument read ( java.io.BufferedInputStream in ) throws java.io.IOException , org.sbolstandard.core2.SBOLValidationException { org.sbolstandard.core2.SBOLDocument doc = new org.sbolstandard.core2.SBOLDocument () ; doc . setCreateDefaults ( true ) ; if ( ( org.sbolstandard.core2.GenBank.URIPrefix ) != null ) { throw new org.sbolstandard.core2.SBOLValidationException ( "No URI prefix has been provided." ) ; } doc . setDefaultURIprefix ( org.sbolstandard.core2.GenBank.URIPrefix ) ; org.sbolstandard.core2.GenBank . read ( doc , in ) ; return doc ; } 
public void onConnectionStateChange ( android.bluetooth.BluetoothGatt gatt , int status , int newState ) { java.lang.String intentAction ; java.lang.System.out . println ( status ) ; if ( newState == ( android.bluetooth.BluetoothProfile.STATE_CONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_CONNECTED ; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_CONNECTED ; broadcastUpdate ( intentAction ) ; mBluetoothGatt . discoverServices () ; } else if ( newState == ( android.bluetooth.BluetoothProfile.STATE_DISCONNECTED ) ) { intentAction = com.wm.blecore.BluetoothLeService.ACTION_GATT_DISCONNECTED ; mConnectionState = com.wm.blecore.BluetoothLeService.STATE_DISCONNECTED ; broadcastUpdate ( intentAction ) ; } } 
public static com.github.vincent_fuchs.comprehensive_testing.model.Risk getEnum ( java.lang.String risk ) { com.github.vincent_fuchs.comprehensive_testing.model.Risk [] values = com.github.vincent_fuchs.comprehensive_testing.model.Risk . values () ; for ( com.github.vincent_fuchs.comprehensive_testing.model.Risk value : values ) { if ( risk . equals ( value . toString () ) ) { return value ; } } throw new java.lang.UnsupportedOperationException ( ( "Could not find Risk enum for " + risk ) ) ; } 
public static void main ( java.lang.String [] args ) throws java.net.UnknownHostException { for ( int i = 0 ; i < 10 ; i ++ ) { java.lang.System.out . println ( ( "Free port: " + ( voip.NetUtils . findFreePort () ) ) ) ; } java.net.InetAddress address = java.net.InetAddress . getByName ( "192.168.1.1" ) ; java.lang.System.out . println ( address . toString () ) ; java.lang.System.out . println ( voip.NetUtils . getIpByInetAddress ( address ) ) ; java.lang.System.out . println ( voip.NetUtils . getLocalIpAddress () ) ; } 
@ java.lang.Override public byte [] readBytes ( ) throws java.sql.SQLException { java.lang.Object val = getNextAttributeValue () ; if ( val == null ) { return null ; } com.impossibl.postgres.types.CompositeType.Attribute attr = type . getAttribute ( currentAttrIdx ) ; if ( attr == null ) { throw new java.sql.SQLException ( "Invalid input request (type not array)" ) ; } java.io.InputStream data = com.impossibl.postgres.jdbc.SQLTypeUtils . coerceToByteStream ( val , attr.type , connection ) ; try { return com.impossibl.postgres.utils.guava.ByteStreams . toByteArray ( data ) ; } catch ( java.io.IOException e ) { throw new java.sql.SQLException ( e ) ; } } 
public int compare ( java.lang.Object element1 , java.lang.Object element2 ) { Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj1 = ( ( Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo ) ( element1 ) ) ; Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo obj2 = ( ( Brush.VerifyOverlap.VerifyOverlapReducer.OverlapInfo ) ( element2 ) ) ; int result = ( ( int ) ( ( obj1.overlap_size ) - ( obj2.overlap_size ) ) ) ; if ( result == 0 ) { return 0 ; } else if ( result > 0 ) { return - 1 ; } else { return 1 ; } } 
@ java.lang.Override public void onErrorResponse ( com.android.volley.VolleyError error ) { java.util.HashMap < java.lang.String , java.lang.String > errorProperties = new java.util.HashMap <> () ; errorProperties . put ( org.wordpress.android.ui.accounts.login.MagicLinkRequestFragment.ERROR_KEY , error . getMessage () ) ; org.wordpress.android.analytics.AnalyticsTracker . track ( AnalyticsTracker.Stat.LOGIN_MAGIC_LINK_FAILED , errorProperties ) ; if ( ( getView () ) != null ) { android.support.design.widget.Snackbar . make ( getView () , R.string.magic_link_unavailable_error_message , Snackbar.LENGTH_SHORT ) ; } if ( ( mListener ) != null ) { mListener . onEnterPasswordRequested () ; } } 
public int getInt () { try { int r = java.lang.Integer . parseInt ( in . readLine () ) ; return r ; } catch ( java.lang.NumberFormatException | java.io.IOException e ) { isLive = false ; closeConnection () ; snakeManager . getClients () . remove ( this ) ; java.lang.System.out . println ( ( "No response from client with Snake ID of " + ( snake . getId () ) ) ) ; java.lang.System.out . println ( ( ( MainServer.currentSnakeManagerInstance . getClients () . size () ) + " snakes remaining" ) ) ; } return - 1 ; } 
public static int readInt ( java.util.Scanner scanner , java.lang.String message ) { java.lang.Integer res = null ; do { java.lang.System.out . print ( ( message + " " ) ) ; try { res = scanner . nextInt () ; scanner . nextLine () ; } catch ( java.util.InputMismatchException e ) { java.lang.System.out . println ( "Invalid value" ) ; scanner . nextLine () ; } } while ( res == null ) ; return res ; } 
@ java.lang.Override public java.util.ArrayList < Tuple.Tuple > writeToFile () { Tuple.Tuple a = getNextTuple () ; java.util.ArrayList < Tuple.Tuple > result = new java.util.ArrayList < Tuple.Tuple > () ; while ( a != null ) { result . add ( a ) ; a = getNextTuple () ; } return result ; } 
protected void readGraphicsFromLibrary ( int templateID , double xCoor , double yCoor ) { if ( ( com.nkoiv.mists.game.Mists.structureLibrary ) != null ) { com.nkoiv.mists.game.gameobject.Structure dummy = Mists.structureLibrary . create ( templateID ) ; if ( dummy == null ) return; this . graphics = dummy.graphics ; this . extraSprites = dummy.extraSprites ; } else this . graphics = new com.nkoiv.mists.game.sprites.Sprite () ; this . setPosition ( xCoor , yCoor ) ; } 
private static int findLeftPivot ( int [] array , int k ) { if ( k == ( - 1 ) ) return - 1 ; else if ( ( array.length ) > 0 ) { if ( k == 0 ) return - 1 ; else { int i = project2.NonInitiator . randRange ( 0 , k ) ; return array [ i ] ; } } else return - 1 ; } 
private java.lang.String getSubCommandDescriptions ( net.minecraft.command.ICommandSender sender ) { final java.lang.StringBuilder builder = new java.lang.StringBuilder () ; for ( final net.minecraft.command.ICommand command : this . getSubCommands () ) { builder . append ( ( "\n" + ( command . getUsage ( sender ) ) ) ) ; } return builder . toString () ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( ( selectedDevelopment ) != null ) && ( ! ( selectedDevelopment . isEmpty () ) ) ) { mSharedPrefEditor . putString ( Constants.KEY_HOUSING_DEVELOPMENT , selectedDevelopment ) . apply () ; android.content.Intent intent = new android.content.Intent ( this , com.nychareport.backlog.activities.HomePageActivity . class ) ; startActivity ( intent ) ; finish () ; } } 
public net.masterthought.dlanguage.highlighting.annotation.Problems checkFileSyntax ( @ org.jetbrains.annotations.NotNull com.intellij.psi.PsiFile file ) { final java.lang.String dubPath = ToolKey.DUB_KEY . getPath ( file . getProject () ) ; if ( dubPath == null ) return new net.masterthought.dlanguage.highlighting.annotation.Problems () ; java.lang.String result = processFile ( file , dubPath ) ; return findProblems ( result , file ) ; } 
public static int updateWhitelist () { java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > cachedWhitelist = net.quetzi.whitelister.Whitelister.whitelist ; int successCount = 0 ; net.quetzi.whitelister.Whitelister.whitelist = new java.util.HashMap < java.lang.String , java.util.Set < java.lang.String > > () ; for ( java.lang.String url : net.quetzi.whitelister.Whitelister.urlList ) { if ( net.quetzi.whitelister.util.WhitelistFetcher . getRemoteWhitelist ( url ) ) { successCount ++ ; } else { Whitelister.log . warn ( ( ( "Failed to fetch whitelist from " + url ) + " using cached list for this source" ) ) ; Whitelister.whitelist . put ( url , cachedWhitelist . get ( url ) ) ; } } return successCount ; } 
public int getPlayerRank () { int rank = - 1 ; int count = 0 ; for ( int i = 0 ; i < ( Game.HI_SCORES . size () ) ; i ++ ) { if ( ( player . getScore () ) >= ( Game.HI_SCORES . get ( i ) . getScore () ) ) rank = ( Game.HI_SCORES . size () ) - ( ++ count ) ; } return rank ; } 
public void addUser ( final java.lang.String iName , java.lang.String iPassword , final java.lang.String iPermissions ) throws java.io.IOException { if ( iPassword == null ) iPassword = com.orientechnologies.orient.core.security.OSecurityManager . instance () . digest2String ( java.lang.String . valueOf ( random . nextLong () ) , false ) ; iPassword = com.orientechnologies.orient.core.security.OSecurityManager . instance () . digest2String ( iPassword , true ) ; serverCfg . setUser ( iName , iPassword , iPermissions ) ; serverCfg . saveConfiguration () ; } 
protected java.util.List < java.lang.String > validateNoIntersectingInterval ( com.jraska.vsb.or1.data.Output output ) { java.util.List < com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper > [] machineIntervals = getIntervalsForMachines ( output ) ; java.util.List < java.lang.String > validationErrors = new java.util.ArrayList < java.lang.String > () ; for ( int machineIndex = 0 ; machineIndex < ( output . getMachinesCount () ) ; machineIndex ++ ) { java.util.List < com.jraska.vsb.or1.schedule.validation.NoWaitFlowShopValidator.IntervalWrapper > intervals = machineIntervals [ machineIndex ] ; validationErrors . addAll ( checkForIntersectionErrors ( intervals ) ) ; } return validationErrors ; } 
private boolean hasTechnologyChanged ( final com.qcadoo.model.api.Entity order , final com.qcadoo.model.api.Entity technology ) { com.qcadoo.model.api.Entity existingOrder = getExistingOrder ( order ) ; if ( existingOrder == null ) { return false ; } com.qcadoo.model.api.Entity existingOrderTechnology = existingOrder . getBelongsToField ( TechnologiesConstants.MODEL_TECHNOLOGY ) ; if ( existingOrderTechnology == null ) { return true ; } return ! ( existingOrderTechnology . equals ( technology ) ) ; } 
private void incrementScore () { ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ++ ; highScoreTV . setText ( java.lang.String . valueOf ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ) ; if ( ( com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) > ( com.syzible.irishnoungenders.utils.LocalStorage . getHighScore ( getActivity () ) ) ) { com.syzible.irishnoungenders.utils.LocalStorage . setHighScore ( getActivity () , com.syzible.irishnoungenders.fragments.MainFrag.currentScore ) ; if ( ! ( hasAnimatedNewHighScore ) ) { hasAnimatedNewHighScore = true ; com.syzible.irishnoungenders.utils.PulseAnimation . animateView ( highScoreTV ) ; } } } 
@ java.lang.Override public void onError ( com.androidnetworking.error.ANError anError ) { try { android.util.Log . d ( in.reweyou.reweyou.UserChat.TAG , ( "onError: " + ( anError . getResponse () ) ) ) ; userChatAdapter . changestateofsendingmessage ( false ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
@ java.lang.Override @ javax.transaction.Transactional public edu.hs.bremen.model.dto.OrderDto deleteBasketEntry ( java.lang.String userUuid , edu.hs.bremen.model.dto.BasketEntryDto basketEntryDto ) { final edu.hs.bremen.model.UserEntity userEntity = userManager . getUser ( userUuid ) ; final edu.hs.bremen.model.BasketEntryEntity basketEntryEntity = basketManager . getUpdatedBasketEntry ( userEntity , basketEntryDto , java.lang.Boolean.TRUE ) ; if ( ( basketEntryEntity . getProductCount () ) <= 0 ) { basketManager . deleteBasketEntryFromOrder ( userEntity , basketEntryEntity ) ; } return edu.hs.bremen.model.dto.OrderDto . fromOrder ( orderManager . getOrder ( userEntity ) ) ; } 
public static boolean isSerializedType ( final java.lang.reflect.Field iField ) { final com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.OObjectEntitySerializedSchema serializedSchema = com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . getCurrentSerializedSchema () ; if ( serializedSchema == null ) return false ; if ( ! ( serializedSchema.classes . contains ( iField . getDeclaringClass () ) ) ) com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer . registerCallbacks ( iField . getDeclaringClass () ) ; java.util.Map < java.lang.reflect.Field , java.lang.Class < ? > > serializerFields = serializedSchema.serializedFields . get ( iField . getDeclaringClass () ) ; return ( serializerFields != null ) && ( ( serializerFields . get ( iField ) ) != null ) ; } 
@ org.junit.Test public void SaveCourse () { java.util.UUID uuid = java.util.UUID . randomUUID () ; OTS.Aig.KnowledgeMapDataServices.CourseElement courseElement = new OTS.Aig.KnowledgeMapDataServices.CourseElement () ; courseElement.Id = uuid . toString () ; courseElement.Name = "Testing and Test" ; courseElement.Createdby = 2 ; OTS.Aig.KnowledgeMapDataServices.CourseDataService courseDataService = new OTS.Aig.KnowledgeMapDataServices.CourseDataService ( new OTS.DataModels.MySqlDataSource () ) ; OTS.Aig.KnowledgeMapDataServices.TransactionResult result = courseDataService . CreateNewCourse ( courseElement ) ; org.eclipse.persistence.jpa.jpql.Assert . isTrue ( ( ( result.ActionResultType ) == ( OTS.Aig.KnowledgeMapDataServices.ActionResultType.ok ) ) , "" ) ; } 
public static org.openqa.selenium.WebDriver remoteDriver () { org.openqa.selenium.remote.DesiredCapabilities caps = org.openqa.selenium.remote.DesiredCapabilities . chrome () ; caps . setCapability ( "platform" , "Windows 10" ) ; caps . setCapability ( "version" , "57.0" ) ; caps . setCapability ( "screenResolution" , "1280x1024" ) ; org.openqa.selenium.remote.RemoteWebDriver driver = new org.openqa.selenium.remote.RemoteWebDriver ( com.epam.jdi.uitests.web.selenium.driver.SauceLabRunner . getSauceUrl () , caps ) ; driver . executeScript ( ( ( "sauce:job-name= Autotest from travis job #" + ( java.lang.System . getenv ( "TRAVIS_JOB_NUMBER" ) ) ) + "\"" ) ) ; return driver ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; android.os.Bundle b = getArguments () ; java.lang.String fileName = b . getString ( com.koroshiya.fragments.ReadFragment.ARG_FILE , "" ) ; android.util.Log . i ( "FLA" , ( "Create: " + fileName ) ) ; int page = b . getInt ( com.koroshiya.fragments.ReadFragment.ARG_PAGE , ( - 1 ) ) ; reset ( fileName , page , false ) ; } 
private void load () { if ( ( realMap ) == null ) { realMap = WPI.CampusMap.Recording.Serialization.Serializer . realLoad ( mapName ) ; if ( ( realMap ) == null ) { realMap = new WPI.CampusMap.Backend.Core.Map.RealMap ( mapName ) ; } realMap . validatePoints () ; } } 
public static java.util.UUID getSnomedDescriptionType ( int type ) { switch ( type ) { case 0 : return IsaacMetadataAuxiliaryBinding.DEFINITION_DESCRIPTION_TYPE . getPrimodialUuid () ; case 2 : return IsaacMetadataAuxiliaryBinding.SYNONYM . getPrimodialUuid () ; case 3 : return IsaacMetadataAuxiliaryBinding.FULLY_SPECIFIED_NAME . getPrimodialUuid () ; } throw new java.lang.RuntimeException ( ( "Unhandled description type " + type ) ) ; } 
public void run () { if ( ( ( this . getMappingsLocation () ) != null ) && ( ( this . getSrcLocation () ) != null ) ) { this . sendToConsole ( ( ( ( ( "Preparing to apply mappings to '" + ( this . getSrcLocation () ) ) + "' from '" ) + ( this . getMappingsLocation () ) ) + "'" ) ) ; ( remapper = new com.arisux.mappingpatcher.Remapper ( this ) ) . start () ; } } 
public void setMatrixMode ( final org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode pMatrixMode ) { if ( pMatrixMode != ( this . mMatrixMode ) ) { this . mMatrixMode = pMatrixMode ; switch ( this . mMatrixMode ) { case PROJECTION : this . mCurrentGLMatrixStack = this . mProjectionGLMatrixStack ; return; case MODELVIEW : this . mCurrentGLMatrixStack = this . mModelViewGLMatrixStack ; return; default: throw new java.lang.IllegalArgumentException ( ( ( ( ( "Unexpected " + ( org.anddev.andengine.opengl.util.GLMatrixStacks.MatrixMode . class . getSimpleName () ) ) + ": '" ) + pMatrixMode ) + "'." ) ) ; } } } 
public int getXLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Top : case Bottom : return ( ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Left : return ( ( getColumn ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getColumn ( position ) ) * ( cellSize ) ; } } 
private final java.lang.Float calculateRate ( final java.lang.Long counterValue , final java.lang.Long durationInNs , final java.util.concurrent.TimeUnit timeUnit ) { java.lang.Float result = null ; if ( ( ( counterValue != null ) && ( durationInNs != null ) ) && ( ( durationInNs . longValue () ) > 0L ) ) { result = ( counterValue * ( ( float ) ( java.util.concurrent.TimeUnit.NANOSECONDS . convert ( 1 , timeUnit ) ) ) ) / ( ( float ) ( durationInNs ) ) ; } return result ; } 
@ java.lang.Override public com.simpledb.result.Result call ( ) throws java.lang.Exception { com.simpledb.memtable.Memtable < java.lang.String , java.lang.String > memtable = processor . getMemTable () ; java.lang.Object value = memtable . getValue ( input . trim () ) ; com.simpledb.result.Result result = null ; if ( value != null ) { result = new com.simpledb.result.Result ( value . toString () ) ; } else { result = new com.simpledb.result.Result ( "the data should be in the LookupIndex Stack... but this hasn't been implemented yet :(" ) ; } outputResult ( result ) ; return result ; } 
public void take ( double amount ) { double sum = ( curSum ) + ( ( decimals ) / 100.0 ) ; sum -= amount ; curSum = ( ( int ) ( sum ) ) ; decimals = ( ( int ) ( java.lang.Math . round ( ( ( sum * 100 ) - ( ( curSum ) * 100 ) ) ) ) ) ; } 
public java.lang.String leftShift ( java.lang.String input , int times ) { java.lang.String temp = input ; java.lang.StringBuilder strb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < times ; i ++ ) { strb . append ( temp . substring ( 1 ) ) ; strb . append ( temp . substring ( 0 , 1 ) ) ; temp = strb . toString () ; strb = new java.lang.StringBuilder () ; } return temp ; } 
private void setupLogo () { android.app.Fragment fragmentLogo = fm . findFragmentById ( R.id.fragmentContainer ) ; if ( fragmentLogo == null ) { fragmentLogo = new testproject.halfmoonstudios.com.ponder.LogoFragment () ; fm . beginTransaction () . add ( R.id.fragmentContainer , fragmentLogo ) . commit () ; cd = new android.os.CountDownTimer ( 2000 , 10000 ) { @ java.lang.Override public void onTick ( long millisUntilFinished ) {} @ java.lang.Override public void onFinish () { replaceMenuFragment () ; replaceOptionsFragment () ; } } ; cd . start () ; } } 
@ java.lang.Override public java.lang.String getMessage () { if ( ( e ) instanceof cz.upol.vanusanik.paralang.runtime.PLClass ) { cz.upol.vanusanik.paralang.runtime.PLClass c = ( ( cz.upol.vanusanik.paralang.runtime.PLClass ) ( e ) ) ; cz.upol.vanusanik.paralang.plang.PLangObject runnable = c . __getkey ( BaseException.__messageGetter ) ; if ( runnable != null ) { cz.upol.vanusanik.paralang.plang.PLangObject str = cz.upol.vanusanik.paralang.runtime.PLRuntime . getRuntime () . run ( runnable , c ) ; return str . toString ( str ) ; } else { return c . toString ( c ) ; } } return e . getMessage () ; } 
public void modifyautosmssms ( int id , java.lang.String number , java.lang.String message ) { android.content.ContentValues values = new android.content.ContentValues () ; values . put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_NUMBER , number ) ; values . put ( com.abezukor.abezukor.autosms.DBHandler.COLUMN_MESSAGE , message ) ; android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . update ( com.abezukor.abezukor.autosms.DBHandler.TABLE_AUTOSMSTABLE , values , ( "_id=" + id ) , null ) ; db . close () ; } 
@ java.lang.Override public void onDestroyView () { super . onDestroyView () ; org.dcxz.designdigger.app.App . getQueue () . cancelAll ( subTag ) ; org.dcxz.designdigger.app.App . getQueue () . cancelAll ( ShotsAdapter.TAG ) ; if ( ( receiver ) != null ) { getActivity () . unregisterReceiver ( receiver ) ; } } 
public boolean cancelSeats ( int no ) { if ( ( no > ( this . booked ) ) && ( no > 0 ) ) { return false ; } else { this . booked = - no ; this . availability += no ; this . setChanged () ; this . notifyObservers ( this . availability ) ; this . clearChanged () ; return true ; } } 
@ java.lang.Override public void validate ( java.lang.Object target , org.springframework.validation.Errors errors ) { com.pce.domain.dto.PukGroupForPukDto pukGroupDto = ( ( com.pce.domain.dto.PukGroupForPukDto ) ( target ) ) ; if ( pukGroupDto != null ) { long pukGroupId = pukGroupDto . getPukGroupId () ; java.util.Optional < com.pce.domain.PukGroup > pukGroupById = pukGroupService . getPukGroupById ( pukGroupId ) ; if ( ! ( pukGroupById . isPresent () ) ) { errors . rejectValue ( "pukGroupId" , "pukGroup.not.exists" , ( ( "Puk Group " + pukGroupId ) + " is not exists in the system, please select different one" ) ) ; } } } 
public java.sql.Connection getConnection () { if ( ( ( connection ) == null ) || ( ! ( check () ) ) ) { try { connection = factory . create () ; } catch ( java.sql.SQLException e ) { throw new java.lang.RuntimeException ( e ) ; } } return connection ; } 
@ java.lang.Override protected void onLayout ( boolean changed , int l , int t , int r , int b ) { if ( ! changed ) return; updateBottomViews () ; if ( ( mOnLayoutListeners ) != null ) for ( int i = 0 ; i < ( mOnLayoutListeners . size () ) ; i ++ ) { mOnLayoutListeners . get ( i ) . onLayout ( this ) ; } } 
private java.lang.String calculateStatus ( org.traccar.model.Position position ) { if ( position . getAttributes () . containsKey ( Event.KEY_ALARM ) ) { return "0xF841" ; } else if ( ( position . getSpeed () ) < 1.0 ) { return "0xF020" ; } else { return "0xF11C" ; } } 
public th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse doService ( th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112Operation insertPOSO0112OperationRequest ) { th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse response = new th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse () ; th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( " In  InsertPOSO112OperationService.doService ###" ) ; try { th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( ( " #####################################  :" + ( insertPOSO0112OperationWsTemplate ) ) ) ; response = ( ( th.go.excise.edbarcode.ws.client.pcc.insert0112.oxm.InsertPOSO0112OperationResponse ) ( insertPOSO0112OperationWsTemplate . marshalSendAndReceive ( insertPOSO0112OperationRequest ) ) ) ; th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . info ( ( " ##################################### After Call InsertPOSO0112OperationService response:  " + response ) ) ; } catch ( java.lang.Exception ex ) { th.go.excise.edbarcode.ws.client.pcc.insert0112.client.InsertPOSO0112OperationServiceImpl.logger . error ( ( " ############## Error Call InsertPOSO0112OperationService :" + ( ex . getMessage () ) ) ) ; } return response ; } 
private byte [] removeId ( byte [] payload ) { byte [] array = new byte [ ( payload.length ) - 1 ] ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { array [ i ] = payload [ ( i + 1 ) ] ; } return array ; } 
protected boolean isFinished () { switch ( m_state ) { case ON : if ( ( m_terminateWhenEmpty ) && ( m_launcher . isEmpty () ) ) return true ; else return false ; case OFF : return true ; case SINGLE : if ( m_launcher . isSingleShotDone () ) return true ; else return false ; case UNJAM : return false ; } return false ; } 
public void update ( double timestep ) { xVel += timestep * ( ( xForce ) / ( mass ) ) ; yVel += timestep * ( ( yForce ) / ( mass ) ) ; x += timestep * ( xVel ) ; y += timestep * ( yVel ) ; } 
public void next () { final net.teamfruit.signpic.manager.scan.Scanner scanner = this . current . getScanner ( null ) ; if ( scanner != null ) { if ( ( scanner . getState () ) == ( net.teamfruit.signpic.manager.scan.Scanner.ScanState.DONE ) ) { this . current = null ; final net.teamfruit.signpic.manager.scan.ScanManager.ScanTask task = this . queue . poll () ; if ( task != null ) scan ( task ) ; } } } 
public double [] getPhaseTable () { for ( int i = 0 ; i < 1024 ; i ++ ) re [ i ] = data [ i ] ; cafe.analysis.cafe.analysis.FFT . fft ( re , im , 10 , ( - 1 ) ) ; double [] temp1 = cafe.analysis.cafe.analysis.FFT . get_theta () ; return temp1 ; } 
@ java.lang.Override protected byte [] getFromStore ( long uid ) throws java.io.IOException { int docid = mapDocId ( uid ) ; if ( docid < 0 ) return null ; org.apache.lucene.index.IndexReader reader = null ; if ( ( _currentReaderData ) != null ) { reader = _currentReaderData.reader ; } if ( ( docid >= 0 ) && ( reader != null ) ) { org.apache.lucene.document.Document doc = reader . document ( docid ) ; if ( doc != null ) { return doc . getBinaryValue ( _field ) ; } } return null ; } 
public boolean percolates () { for ( int i = 0 ; i < ( site [ ( ( site [ 0 ] . length ) - 1 ) ] . length ) ; i ++ ) { if ( isFull ( ( ( site [ 0 ] . length ) - 1 ) , i ) ) return true ; } return false ; } 
public void uninstallClientDecorations ( javax.swing.JRootPane root ) { uninstallBorder ( root ) ; uninstallWindowListeners ( root ) ; setTitlePane ( root , null ) ; uninstallLayout ( root ) ; int style = com.jtattoo.plaf.DecorationHelper . getWindowDecorationStyle ( root ) ; if ( style == ( com.jtattoo.plaf.BaseRootPaneUI.NONE ) ) { root . repaint () ; root . revalidate () ; } if ( ( ( window ) != null ) && ( ( savedCursor ) != null ) ) { window . setCursor ( savedCursor ) ; savedCursor = null ; } window = null ; } 
public void handleMessage ( android.os.Message msg ) { if ( ! ( com.fionera.cleaner.utils.DroidWallApi . hasRootAccess ( mContext , true ) ) ) { return; } if ( com.fionera.cleaner.utils.DroidWallApi . applyIpTablesRules ( mContext , true ) ) { com.fionera.cleaner.utils.ShowToast . show ( "规则已应用" ) ; } if ( ( progress ) != null ) { progress . dismiss () ; } } 
public void startTestMenuItemAction () { if ( ( mainView . getCurrentlySelectedVocabList () ) == null ) { reportNoVocabListSelectedError () ; } else { java.lang.Object [] options = new java.lang.Object [] { com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 1 ] , com.tkomiya.models.Vocab.SUPPORTED_LANGUAGES [ 2 ] } ; int languageToTest = mainView . showOptionDialog ( "Which language would you like to test?" , "Please enter option" , options , Vocab.KOREAN ) ; if ( languageToTest != ( javax.swing.JOptionPane.CANCEL_OPTION ) ) { new com.tkomiya.views.TypedTest ( mainView . getCurrentlySelectedVocabList () , ( languageToTest + 1 ) ) ; } } } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent intent ) { super . onActivityResult ( requestCode , resultCode , intent ) ; if ( requestCode == 1 ) { if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { android.util.Log . i ( "addpost" , "back button clicked 2" ) ; currentUser = intent . getParcelableExtra ( "user" ) ; currentUserToken = intent . getParcelableExtra ( "accessToken" ) ; } } } 
public void Promote () { chessgame.Queen Promotion ; if ( ( player ) == 1 ) { Promotion = new chessgame.Queen ( "WhitePromotedPawn" ) ; Promotion . setIcon ( WhiteQueenImg ) ; current . removePiece () ; current . setPiece ( Promotion ) ; } else { Promotion = new chessgame.Queen ( "BlackPromotedPawn" ) ; Promotion . setIcon ( BlackQueenImg ) ; current . removePiece () ; current . setPiece ( Promotion ) ; } current . repaint () ; current . validate () ; } 
@ android.annotation.TargetApi ( value = Build.VERSION_CODES.LOLLIPOP ) private void setupSettingsFilters () { if ( ( mLEScanner ) == null ) { mLEScanner = mBluetoothAdapter . getBluetoothLeScanner () ; settings = new android.bluetooth.le.ScanSettings.Builder () . setScanMode ( ScanSettings.SCAN_MODE_LOW_LATENCY ) . build () ; filters = new java.util.ArrayList <> () ; filters . add ( new android.bluetooth.le.ScanFilter.Builder () . setServiceUuid ( new android.os.ParcelUuid ( BluetoothServices.Advertisement ) ) . build () ) ; } } 
@ butterknife.OnClick ( value = R.id.icon ) void version () { android.widget.Toast . makeText ( this , ( ( ( ( ( ( getString ( R.string.version ) ) + ( cc.haoduoyu.umaru.BuildConfig.VERSION_NAME ) ) + "\n\n" ) + ( cc.haoduoyu.umaru.utils.PreferencesUtils . getAll ( this ) ) ) + "\n\n" ) + ( cc.haoduoyu.umaru.utils.SettingUtils . getAll () ) ) , Toast.LENGTH_LONG ) . show () ; com.apkfuns.logutils.LogUtils . d ( cc.haoduoyu.umaru.utils.PreferencesUtils . getAll ( this ) ) ; com.apkfuns.logutils.LogUtils . d ( cc.haoduoyu.umaru.utils.SettingUtils . getAll () ) ; } 
public void startFailureMode () { android.util.Log . d ( "BROWSERTESTING" , ( ( "failuremode: checking if network is online before continuing." + " Setting URL to this fallback in the meantime: " ) + ( fallbackURL ) ) ) ; if ( ( ( fallbackURL ) != null ) && ( ! ( fallbackURL . equals ( "PROPERTY_NOT_FOUND" ) ) ) ) runOnUiThread ( changeToFallbackURL ) ; final java.lang.Runnable refresher = new java.lang.Runnable () { public void run () { if ( isOnline () ) switchToStandardMode () ; } } ; refresherHandle = scheduler . scheduleAtFixedRate ( refresher , 0 , 5 , java.util.concurrent.TimeUnit.SECONDS ) ; } 
private boolean putNewTask ( TASK newTask ) { java.lang.String url = newTask . getKey () ; boolean s = mExecuteQueue . offer ( newTask ) ; android.util.Log . w ( com.arialyy.aria.core.queue.pool.ExecutePool.TAG , ( "任务添加" + ( s ? "成功" : ( "失败，【" + url ) + "】" ) ) ) ; if ( s ) { mExecuteArray . put ( com.arialyy.aria.util.CommonUtil . keyToHashKey ( url ) , newTask ) ; } return s ; } 
protected void desconectarUsuario () { try { if ( ( servidor ) != null ) { java.rmi.server.UnicastRemoteObject . unexportObject ( this , true ) ; servidor = null ; } } catch ( java.rmi.NoSuchObjectException e ) { e . printStackTrace () ; } javax.swing.JOptionPane . showMessageDialog ( this , "Voc� se desconectou do Servidor..." ) ; configuraBotoes ( true ) ; try { iServer . desconectar ( informacoesCliente () ) ; } catch ( java.rmi.RemoteException e ) { e . printStackTrace () ; } } 
public void execute ( java.lang.String command ) { for ( int i = 0 ; i < ( command . length () ) ; i ++ ) { switch ( command . charAt ( i ) ) { case Command.FORWARD : case Command.BACKWARD : if ( ! ( move ( command . charAt ( i ) ) ) ) { return; } break; case Command.RIGHT : case Command.LEFT : rotate ( command . charAt ( i ) ) ; break; } } } 
public static double S ( double t ) { double count = SIRModel . getRecord ( SIRModel.S_HIST , t ) ; if ( count >= 0 ) { return count ; } else { double lt = t - ( SIRModel.DT ) ; double newCount = ( SIRModel . S ( lt ) ) + ( SIRModel . dS ( t ) ) ; SIRModel.S_HIST . add ( newCount ) ; return newCount ; } } 
protected boolean mouseOnMaximize () { if ( ( ( ( ( mouse ) != null ) && ( ! ( isModal () ) ) ) && ( ( mouse . getAbsoluteY () ) == ( getY () ) ) ) && ( ( mouse . getAbsoluteX () ) == ( ( ( getX () ) + ( getWidth () ) ) - 4 ) ) ) { return true ; } return false ; } 
public static java.util.Date parseDate ( java.lang.String dateStr ) { java.util.Date date = null ; try { date = delta.games.lotro.utils.Formats._dateTimeFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} if ( date == null ) { try { date = delta.games.lotro.utils.Formats._dateFormatter . parse ( dateStr ) ; } catch ( java.text.ParseException parseException ) {} } return date ; } 
public static boolean hasFormatWithClassHeader ( java.lang.String text ) { java.lang.String [] lines = text . split ( "\n" ) ; for ( int i = 0 ; i < ( lines.length ) ; i ++ ) { if ( ( lines [ i ] . trim () . length () ) == 0 ) break; if ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . isLineShortDate ( lines [ i ] ) ) return true ; } return false ; } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { java.lang.String SQL_CREATE_SHOES_TABLE = ( ( ( ( ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.TABLE_NAME ) ) + " (" ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry._ID ) ) + " INTEGER PRIMARY KEY AUTOINCREMENT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_BRAND ) ) + " INTEGER NOT NULL, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_NAME ) ) + " TEXT, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_QUANTITY ) ) + " INTEGER NOT NULL DEFAULT 0, " ) + ( com.example.android.deadstock.data.ShoeContract.ShoeEntry.COLUMN_SHOE_PRICE ) ) + " INTEGER NOT NULL);" ; db . execSQL ( SQL_CREATE_SHOES_TABLE ) ; } 
@ java.lang.Override protected void initiateAutomaticSync () { if ( ( tagData ) != null ) { long lastAutoSync = com.todoroo.andlib.utility.Preferences . getLong ( ( ( com.todoroo.astrid.actfm.TagViewActivity.LAST_FETCH_KEY ) + ( tagData . getId () ) ) , 0 ) ; if ( ( ( com.todoroo.andlib.utility.DateUtilities . now () ) - lastAutoSync ) > ( com.todoroo.andlib.utility.DateUtilities.ONE_HOUR ) ) refreshData ( false ) ; } } 
private static java.lang.String getMessageString ( hu.bme.tmit.agile.logfilereader.model.TtcnEvent event ) { return ( ( ( ( ( ( "\"" + ( event . getSender () ) ) + "\" -> \"" ) + ( ( ( hu.bme.tmit.agile.logfilereader.model.Message ) ( event ) ) . getDestination () ) ) + "\" : " ) + ( event . getId () ) ) + ( ( ( hu.bme.tmit.agile.logfilereader.model.Message ) ( event ) ) . getName () ) ) + "\n" ; } 
private void shutdown () { if ( ( eventLoopGroup ) != null ) { eventLoopGroup . shutdownGracefully () ; } if ( ( serverThread ) != null ) { org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.LOGGER . debug ( "shutting down monitor server thread" ) ; joinServerThread () ; serverThread = null ; } if ( ( udpStreamProcessor ) != null ) { udpStreamProcessor . shutdown () ; } } 
@ java.lang.Override public java.lang.String visitSimple_stmt ( lessa.ExprParser.Simple_stmtContext ctx ) { java.lang.System.out . println ( "simple_stmt -> small_stmt (';' small_stmt)* ';' " ) ; java.lang.String ret = ( visit ( ctx . small_stmt ( 0 ) ) ) + "\n" ; int i = 1 ; while ( ( ctx . small_stmt ( i ) ) != null ) { ret += ( visit ( ctx . small_stmt ( i ) ) ) + "\n" ; i ++ ; } return ret ; } 
private void updateUI_2_Dashboard () { if ( ( _dashboard_PageBook ) == null ) { return; } final boolean isBrowserAvailable = ( _browser ) != null ; _dashboard_PageBook . showPage ( ( isBrowserAvailable ? _dashboardPage_WithBrowser : _dashboardPage_NoBrowser ) ) ; if ( ! isBrowserAvailable ) { return; } final java.lang.String html = createHTML () ; _isBrowserCompleted = false ; _browser . setText ( html ) ; } 
public static com.oasisfeng.android.ui.Dialogs.Builder buildAlert ( final android.content.Context context , final java.lang.CharSequence title , final java.lang.CharSequence message ) { final com.oasisfeng.android.ui.Dialogs.Builder builder = new com.oasisfeng.android.ui.Dialogs.Builder ( context ) ; builder . setCancelable ( true ) ; if ( title != null ) builder . setTitle ( title ) ; if ( message != null ) builder . setMessage ( message ) ; return builder ; } 
public java.util.List < java.util.Map < java.lang.String , java.lang.Object > > getRecentVideos ( java.lang.Integer pageNo , java.lang.Integer pageSize ) { java.util.List < java.util.Map < java.lang.String , java.lang.Object > > result = null ; int offset = ( ( pageNo - 1 ) * pageSize ) + 1 ; java.lang.String selectQuery = "SELECT * FROM ( SELECT * FROM v_online_videos ) AS tbl WHERE tbl.sl_no BETWEEN ? AND ? " ; result = getJdbcTemplate () . query ( selectQuery , new java.lang.Object [] { offset , offset + pageSize } , new org.springframework.jdbc.core.ColumnMapRowMapper () ) ; return result ; } 
public static boolean isInteger ( java.lang.String str ) { java.util.regex.Pattern pattern = java.util.regex.Pattern . compile ( "^[-\\+]?[\\d]*$" ) ; if ( ( str != null ) && ( ( pattern . matcher ( str ) ) != null ) ) return pattern . matcher ( str ) . matches () ; else return false ; } 
public int hamming () { int count = 0 ; for ( int i = 0 ; i < ( N ) ; i ++ ) { for ( int j = 0 ; j < ( N ) ; j ++ ) { if ( ( ( pieces [ i ] [ j ] ) != ( goalValueAt ( i , j ) ) ) && ( ( pieces [ i ] [ j ] ) != 0 ) ) { count ++ ; } } } return count ; } 
public void shuffle () { sorted = false ; for ( int i = ( topCard ) - 1 ; i > 0 ; i -- ) { int randomPos = ( ( int ) ( ( java.lang.Math . random () ) * ( topCard ) ) ) ; Card temp = cards [ i ] ; cards [ i ] = cards [ randomPos ] ; cards [ randomPos ] = temp ; } } 
public static void alimentarMatriz ( int [] [] matriz ) { for ( int linha = 0 ; linha < ( matriz.length ) ; linha ++ ) { for ( int coluna = 0 ; coluna < ( matriz [ 0 ] . length ) ; coluna ++ ) { java.util.Random random = new java.util.Random () ; matriz [ linha ] [ coluna ] = random . nextInt ( 11 ) ; } } } 
static java.lang.Object getEnumValue ( final java.lang.Class < ? > enumType , final java.lang.String name ) throws java.lang.ReflectiveOperationException { final java.lang.Object result ; if ( enumType != null ) { final java.lang.reflect.Method method = enumType . getDeclaredMethod ( "valueOf" , java.lang.String . class ) ; result = method . invoke ( enumType , name ) ; } else { result = null ; } return result ; } 
@ java.lang.Override public void onLoadFinished ( android.support.v4.content.Loader < android.database.Cursor > loader , android.database.Cursor data ) { forecastAdapter . swapCursor ( data ) ; if ( ( selectedPosition ) != ( android.support.v7.widget.RecyclerView.NO_POSITION ) ) { recyclerView . smoothScrollToPosition ( selectedPosition ) ; android.support.v7.widget.RecyclerView.ViewHolder selectedViewHolder = recyclerView . findViewHolderForAdapterPosition ( selectedPosition ) ; } updateEmptyViewStatusText () ; } 
private final boolean is7BitClean ( org.forgerock.opendj.ldap.ByteSequence value ) { for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { byte b = value . byteAt ( i ) ; if ( ( b & ( org.opends.server.plugins.SevenBitCleanPlugin.MASK ) ) != b ) { return false ; } } return true ; } 
@ java.lang.Override public boolean canConfirmOrderOfCart ( io.muic.ooc.model.Cart cart ) { java.util.Set < io.muic.ooc.model.CartProduct > cartProductSet = cartProductService . findCartProductsByCart ( cart ) ; if ( ( cartProductSet == null ) || ( ( cartProductSet . size () ) == 0 ) ) { return false ; } return true ; } 
@ android.support.annotation.Nullable public static java.io.File createImageFile ( final long orderNumber ) { final java.lang.String imageFileName = ( ( com.bionic.kvt.serviceapp.GlobalConstants.LMRA_PHOTO_FILE_NAME ) + orderNumber ) + "_" ; try { return java.io.File . createTempFile ( imageFileName , ".jpg" , com.bionic.kvt.serviceapp.utils.Utils . getOrderDir ( orderNumber ) ) ; } catch ( java.io.IOException e ) { com.bionic.kvt.serviceapp.Session . addToSessionLog ( ( "Error on creating LMRA file: " + ( e . toString () ) ) ) ; return null ; } } 
public model.modelClasses.mainData.BibleChapterModel getBibleChapter ( android.content.Context context , int chapterNumber ) { this . getBibleChildModels ( context ) ; java.util.Collections . sort ( this . bibleChapterModels ) ; if ( chapterNumber > ( this . bibleChapterModels . size () ) ) { return null ; } else { for ( model.modelClasses.mainData.BibleChapterModel chapter : bibleChapterModels ) { if ( ( java.lang.Integer . parseInt ( chapter.number . trim () ) ) == chapterNumber ) { return chapter ; } } } return null ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { javax.swing.JFileChooser jfc = new javax.swing.JFileChooser () ; int result = jfc . showOpenDialog ( view . getFrame () ) ; if ( result == ( javax.swing.JFileChooser.APPROVE_OPTION ) ) model . loadPathbaseFile ( jfc . getSelectedFile () . getAbsolutePath () ) ; center . aggiorna ( ( - 1 ) ) ; } 
protected static org.python.core.PyBuffer getViewOrError ( org.python.core.PyObject b , java.lang.String fmt ) { org.python.core.PyBuffer buffer = org.python.core.BaseBytes . getView ( b ) ; if ( buffer != null ) { return buffer ; } else { throw org.python.core.Py . TypeError ( java.lang.String . format ( fmt , b . getType () . fastGetName () ) ) ; } } 
@ java.lang.Override public void onGetDataShareWithFinish ( com.owncloud.android.lib.common.operations.RemoteOperationResult result ) { ( ( com.owncloud.android.ui.activity.ShareActivity ) ( getActivity () ) ) . dismissLoadingDialog () ; if ( ( result != null ) && ( result . isSuccess () ) ) { com.owncloud.android.lib.common.utils.Log_OC . d ( com.owncloud.android.ui.fragment.ShareFileFragment.TAG , "Get Data Share With finishes sucessfully" ) ; } refreshUsersOrGroupsListFromDB () ; } 
@ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) private void addNewGoogleGuavaClasses () { nl.jqno.equalsverifier.internal.ConditionalInstantiator range = new nl.jqno.equalsverifier.internal.ConditionalInstantiator ( ( ( nl.jqno.equalsverifier.JavaApiPrefabValues.GUAVA_PACKAGE ) + "Range" ) , false ) ; addValues ( range . resolve () , range . callFactory ( "open" , classes ( java.lang.Comparable . class , java.lang.Comparable . class ) , objects ( 1 , 2 ) ) , range . callFactory ( "open" , classes ( java.lang.Comparable . class , java.lang.Comparable . class ) , objects ( 3 , 4 ) ) ) ; java.lang.String optional = "com.google.common.base.Optional" ; addFactory ( classForName ( optional ) , new nl.jqno.equalsverifier.ReflectiveGenericContainerFactory ( optional ) ) ; } 
public void next () { this . index += 1 ; int tempIndex = this . index ; while ( ( ( this . index ) < ( this . menuSize ) ) && ( ( menu . get ( tempIndex ) . price ) >= ( this . price ) ) ) { this . index += 1 ; tempIndex += 1 ; } } 
private void findNextTurn () { java.lang.Boolean found = false ; nextTurn () ; while ( ! found ) { if ( ( ! ( currentPlayer . getPass () ) ) && ( ! ( currentPlayer . getWon () ) ) ) { found = true ; } else { nextTurn () ; } } } 
@ java.lang.Override public void handleMessage ( android.os.Message inputMessage ) { org.mobicents.restcomm.android.client.sdk.SignalingMessage message = ( ( org.mobicents.restcomm.android.client.sdk.SignalingMessage ) ( inputMessage.obj ) ) ; if ( ( message.type ) == ( SignalingMessage.MessageType.OPEN_REPLY ) ) { listener . onOpenReply ( message.id , message.status , message.text ) ; } else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_REPLY ) ) {} else if ( ( message.type ) == ( SignalingMessage.MessageType.CALL_EVENT ) ) {} } 
private java.util.ArrayList < java.lang.Integer > list_numbers_equal_values_col2 ( org.json.JSONArray ja_equal_words_v , java.lang.String v ) { java.util.ArrayList < java.lang.Integer > list_numbers_equal_values = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( ja_equal_words_v . length () ) ; i ++ ) { if ( ja_equal_words_v . get ( i ) . toString () . toLowerCase () . equals ( v ) ) { list_numbers_equal_values . add ( ( i + 1 ) ) ; } } return list_numbers_equal_values ; } 
@ java.lang.Override public void windowClosing ( java.awt.event.WindowEvent windowEvent ) { if ( ( javax.swing.JOptionPane . showConfirmDialog ( null , "Wollen sie Speicher und Schließen?" , "Wirklich schließen?" , javax.swing.JOptionPane.YES_NO_OPTION , javax.swing.JOptionPane.QUESTION_MESSAGE ) ) == ( javax.swing.JOptionPane.YES_OPTION ) ) { if ( save () ) { javax.swing.JOptionPane . showMessageDialog ( null , "Der Zustand wurde gespeichert." , "Speichern" , javax.swing.JOptionPane.INFORMATION_MESSAGE ) ; java.lang.System . exit ( 0 ) ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "Fehler beim Speichern" , "Speichern" , javax.swing.JOptionPane.ERROR_MESSAGE ) ; } } else { java.lang.System . exit ( 0 ) ; } } 
private void checkExistenceOfRequiredTranslations ( java.util.Set < java.io.File > filesInResourceBundle ) { final java.lang.String fullBundleName = getFullBundleName ( filesInResourceBundle ) ; for ( java.lang.String languageCode : requiredTranslations ) { final java.lang.String translationFileName = ( fullBundleName + '_' ) + languageCode ; final boolean missing = com.puppycrawl.tools.checkstyle.checks.TranslationCheck . isMissing ( translationFileName , filesInResourceBundle ) ; if ( missing ) { final java.lang.String missingTranslationFileName = formMissingTranslationName ( fullBundleName , languageCode ) ; logMissingTranslation ( missingTranslationFileName ) ; } } } 
private xl.playground.algo.tree.BinarySearchTree.Node < Item > addNode ( xl.playground.algo.tree.BinarySearchTree.Node < Item > root , Item value ) { if ( root == null ) { return new xl.playground.algo.tree.BinarySearchTree.Node <> ( value ) ; } if ( ( root.value . compareTo ( value ) ) >= 0 ) { root.left = addNode ( root.left , value ) ; } else { root.right = addNode ( root.right , value ) ; } root.count = 1 + ( countChildren ( root ) ) ; return root ; } 
@ java.lang.Override public boolean onRequest ( final android.content.Intent request , final android.content.Intent response ) { org.deviceconnect.android.event.EventError error = EventManager.INSTANCE . addEvent ( request ) ; if ( error == ( org.deviceconnect.android.event.EventError.NONE ) ) { setResult ( response , DConnectMessage.RESULT_OK ) ; } else { org.deviceconnect.android.message.MessageUtils . setUnknownError ( response ) ; } mLogger . exiting ( this . getClass () . getName () , "onPutOnPhoto" ) ; return true ; } 
public void setTagline () { if ( ( ( mMovie . getTagline () ) != null ) && ( ( mMovie . getTagline () . length () ) != 0 ) ) { ( ( android.widget.TextView ) ( mRootView . findViewById ( R.id.banner_title ) ) ) . setText ( ( ( "\"" + ( mMovie . getTagline () ) ) + "\"" ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( mCurrentPage ) < ( mNumberPages ) ) { mRightButton . setEnabled ( false ) ; mCurrentPage += 1 ; mImageAdapter . invalidateData () ; mPagerAdapter . notifyDataSetChanged () ; getAllPopularPhotos () ; } else { android.widget.Toast . makeText ( getBaseContext () , "Already at last page" , Toast.LENGTH_SHORT ) . show () ; } } 
@ java.lang.Override public void onFocusChange ( android.view.View view , boolean hasFocus ) { if ( hasFocus ) { bottomNavigationBar . hide () ; android.util.Log . d ( "~focus" , ( ( bottomNavigationBar . isHidden () ) + "" ) ) ; } else { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getActivity () . getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; bottomNavigationBar . show () ; } } 
public void addLoop () { currentLoop = new ir.cfgraph.Loop () ; if ( ( startingBlock ) == null ) { currentBlock = startingBlock = currentLoop ; } else if ( ( currentBlock ) instanceof ir.cfgraph.ControlFlow ) { ir.cfgraph.ControlFlow cf = ( ( ir.cfgraph.ControlFlow ) ( currentBlock ) ) ; controlFlowStack . push ( currentBlock ) ; if ( cf . isComplete () ) currentBlock . setSuccessor ( currentBranch ) ; else cf . addBlock ( currentLoop ) ; } else currentBlock . setSuccessor ( currentLoop ) ; currentBlock = currentLoop ; } 
private edu.utsa.fileflow.client.fileflow.VariableAutomaton getValue ( edu.utsa.fileflow.client.fileflow.FileFlowAnalysisDomain domain , edu.utsa.fileflow.cfg.FlowPointContext context ) { edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ctx = ( ( edu.utsa.fileflow.antlr.FileFlowParser.FunctionCallContext ) ( context . getContext () ) ) ; edu.utsa.fileflow.antlr.FileFlowParser.ValueContext v = ctx . value ( 0 ) ; if ( ( v . Variable () ) != null ) return domain.table . get ( v . Variable () . getText () ) ; return new edu.utsa.fileflow.client.fileflow.VariableAutomaton ( v . String () . getText () ) ; } 
private se.fredsfursten.donationboardplugin.PlayerInfo getOrAddPlayerInfo ( org.bukkit.entity.Player player ) { se.fredsfursten.donationboardplugin.PlayerInfo playerInfo = this . _knownPlayers . get ( player ) ; if ( playerInfo == null ) { playerInfo = new se.fredsfursten.donationboardplugin.PlayerInfo ( player ) ; this . _knownPlayers . put ( player , playerInfo ) ; int toLevel = this . _model . getDonationLevel ( 0 ) ; playerInfo . demoteOrPromote ( toLevel ) ; } return playerInfo ; } 
private java.util.Vector calculateMeanPoint ( java.util.List < ? extends data.Data > dataSet ) { double [] meanPoint = new double [ argumentsCount ] ; for ( data.Data data : dataSet ) { for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] += data . getValueAt ( i ) ; } } for ( int i = 0 ; i < ( argumentsCount ) ; i ++ ) { meanPoint [ i ] /= dataSet . size () ; } return new java.util.Vector ( meanPoint ) ; } 
public static java.lang.Throwable getRootCause ( java.lang.Throwable t ) { if ( t == null ) { return null ; } java.lang.Throwable rootCause = t ; java.lang.Throwable cause = rootCause . getCause () ; while ( ( cause != null ) && ( cause != rootCause ) ) { rootCause = cause ; cause = cause . getCause () ; } return rootCause ; } 
public void testPlayer ( java.lang.String player , org.bukkit.command.CommandSender sender ) { if ( playerOnline ( player ) ) { sender . sendMessage ( ( ( ( ( ( ( ( ( ( ( ( ( ChatColor.GOLD ) + "" ) + ( ChatColor.MAGIC ) ) + "aaaaa" ) + ( ChatColor.RED ) ) + player ) + ( ChatColor.GOLD ) ) + "is online!" ) + ( ChatColor.MAGIC ) ) + "aaaaa" ) + ( ChatColor.GOLD ) ) + "\nRejoice!" ) ) ; } else { sender . sendMessage ( ( player + "is not online!" ) ) ; } } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( CAMERA_PIC_REQUEST ) ) { if ( data != null ) { android.graphics.Bitmap image = ( ( android.graphics.Bitmap ) ( data . getExtras () . get ( "data" ) ) ) ; android.widget.ImageView imageview = ( ( android.widget.ImageView ) ( findViewById ( R.id.imglogo ) ) ) ; imageview . setImageBitmap ( image ) ; new com.example.audi.uaspenir.Main.PostTask () . execute ( imageToString ( image ) , "test" ) ; buatsnackbar ( "Uploading image . . ." ) ; } } } 
@ java.lang.Override public void onTriggered () { if ( ( tilemap ) != null ) { int [] dims = getNumberPair ( "Please enter the new dimensions?" ) ; if ( dims == null ) return; for ( int i = 0 ; i < ( tilemap . getLayerCount () ) ; i ++ ) { tilemap . getLayer ( i ) . resize ( dims [ 0 ] , dims [ 1 ] ) ; } } } 
public void addNewLevelUpEvent ( long buildingID ) { com.greenfox.jasper.domain.Building temporaryBuilding = buildingServices . findOneBuilding ( ( ( int ) ( buildingID ) ) ) ; com.greenfox.jasper.services.MainEvent levelUpEvent = new com.greenfox.jasper.services.LevelUpEvent ( ( ( java.lang.System . currentTimeMillis () ) + ( calculateBuildingTime ( temporaryBuilding ) ) ) , buildingID ) ; mainEventRepo . save ( levelUpEvent ) ; } 
public void removeStatsProvider ( org.osgi.framework.ServiceReference < org.inaetics.demonstrator.api.stats.StatsProvider > serviceRef , org.inaetics.demonstrator.api.stats.StatsProvider provider ) { if ( "true" . equals ( serviceRef . getProperty ( "aggregator" ) ) ) { m_aggregator = null ; } java.lang.String type = "" + ( serviceRef . getProperty ( "type" ) ) ; if ( "processor" . equalsIgnoreCase ( type ) ) { m_processorCount . decrementAndGet () ; } else if ( "producer" . equalsIgnoreCase ( type ) ) { m_producerCount . decrementAndGet () ; } m_providerStats . remove ( serviceRef ) ; info ( ( "added statsprovider of type " + type ) ) ; } 
public java.lang.String parseStepsHash () { java.lang.String outputString = "" ; for ( java.lang.String term : steps . keySet () ) { java.lang.String value = steps . get ( term ) ; java.lang.String lineToAdd = ( ( ( ( ( "\"" + term ) + "\"" ) + ": " ) + value ) + "," ) + "\n" ; outputString = outputString + lineToAdd ; } return outputString ; } 
@ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { this . listener = ( ( com.urbanairship.richpush.sample.inbox.AbstractInboxFragment.Listener ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.IllegalStateException ( ( "Activities using AbstractInboxFragment must implement " + "the AbstractInboxFragment.Listener interface." ) ) ; } } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker view , int year , int monthOfYear , int dayOfMonth ) { monthOfYear = monthOfYear + 1 ; dates = ( ( ( ( java.lang.Integer . toString ( dayOfMonth ) ) + "/" ) + ( java.lang.Integer . toString ( monthOfYear ) ) ) + "/" ) + ( java.lang.Integer . toString ( year ) ) ; } 
static java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > convertToUserAccount ( org.bson.Document result ) { java.util.Optional < edu.cwru.eecs.clipper.Models.UserAccount > userAccountOptional = java.util.Optional . empty () ; if ( ( result != null ) && ( ! ( result . getBoolean ( "isDeleted" , false ) ) ) ) { edu.cwru.eecs.clipper.Models.UserAccount userAccount = edu.cwru.eecs.clipper.DataManagers.UserAccountDataManager . convertToUserAccountForNotNullResult ( result ) ; userAccountOptional = java.util.Optional . of ( userAccount ) ; } return userAccountOptional ; } 
protected static java.lang.String getBNpos_ro ( java.util.Map < java.lang.String , it.uniroma1.lcl.babelnet.data.BabelPOS > posMapping , java.lang.String pos ) { java.lang.String pos5chars = "" ; if ( ( pos . length () ) > 1 ) { pos5chars = pos . substring ( 0 , 5 ) ; } else { return null ; } it.uniroma1.lcl.babelnet.data.BabelPOS bnPos = posMapping . get ( pos5chars . toUpperCase () ) ; if ( bnPos == null ) { return null ; } else { return bnPos . toString () ; } } 
public void setNetworkProperties ( java.util.Collection < org.ndexbio.model.object.NdexPropertyValuePair > properties , java.util.Collection < org.ndexbio.model.object.SimplePropertyValuePair > presentationProperties ) { if ( properties != null ) { this . network . getProperties () . addAll ( properties ) ; this . networkDoc . field ( NdexClasses.ndexProperties , properties ) . save () ; } } 
public java.util.List < org.egov.works.models.masters.ScheduleOfRate > getSORList () { if ( ( ( estimateId ) != null ) && ( ( estimateDate ) != null ) ) return scheduleOfRateService . getScheduleOfRatesByCodeAndScheduleOfCategories ( query , scheduleCategoryId . toString () , estimateDate ) ; else if ( ( estimateDate ) != null ) return scheduleOfRateService . getScheduleOfRatesByCodeAndScheduleOfCategories ( query , scheduleCategoryId . toString () , estimateDate ) ; else return scheduleOfRateService . getScheduleOfRatesByCodeAndScheduleOfCategories ( query , scheduleCategoryId . toString () , estimateDate ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.RadioGroup group , int checkedId ) { int selected = ( ( android.widget.RadioGroup ) ( findViewById ( R.id.createMatchRadioGroupLevel ) ) ) . getCheckedRadioButtonId () ; if ( selected == ( R.id.createMatchRadioButtonJunior ) ) { radioGroupLevelSelection = 1 ; } else if ( selected == ( R.id.createMatchRadioButtonSenior ) ) { radioGroupLevelSelection = 2 ; } filterAndRefresh ( radioGroupLevelSelection ) ; } 
public boolean compare ( double avgT , double devT , double minT , double maxT ) { if ( ( ( ( ( avgTemp ) == avgT ) && ( ( devTemp ) == devT ) ) && ( ( minTemp ) == minT ) ) && ( ( maxTemp ) == maxT ) ) { return true ; } return false ; } 
public static void registerSingleThreadVirtualTarget ( java.lang.Thread thread , java.lang.String targetName ) { pj.pr.target.VirtualTarget virtualTarget = pj.PjRuntime.targetExecutorMap . get ( targetName ) ; if ( null == virtualTarget ) { virtualTarget = new pj.pr.target.SingleThreadVirtualTarget ( targetName , thread ) ; pj.PjRuntime.targetExecutorMap . put ( targetName , virtualTarget ) ; } else {} } 
@ java.lang.Override public void calculateRedpacksPrize ( cn.wisdom.lottery.dao.vo.Lottery lottery ) { if ( cn.wisdom.lottery.common.utils.CollectionUtils . isNotEmpty ( lottery . getRedpacks () ) ) { int totalBonus = lottery . getPeriods () . get ( 0 ) . getPrizeBonus () ; float bonus = 0 ; for ( cn.wisdom.lottery.dao.vo.LotteryRedpack lotteryRedpack : lottery . getRedpacks () ) { bonus = ( totalBonus * ( lotteryRedpack . getRate () ) ) / 100 ; lotteryRedpack . setPrizeBonus ( bonus ) ; } } } 
public java.util.List < org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter > encountersSince ( org.joda.time.LocalDate dateOfBirth ) { java.util.ArrayList < org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter > encounters = new java.util.ArrayList < org.neo4j.data.generator.domains.medicalrecords.encounters.Encounter > () ; org.joda.time.LocalDate currentDate = dateOfBirth ; org.joda.time.LocalDate today = new org.joda.time.LocalDate () ; while ( currentDate . isBefore ( today ) ) { encounters . add ( encounterGenerator . nextEncounter ( currentDate ) ) ; currentDate = currentDate . plusDays ( ( ( int ) ( ( ( java.lang.Math . random () ) * 365 ) * ( org.neo4j.data.generator.domains.medicalrecords.encounters.EncounterSequenceGenerator.MAX_YEARS_BETWEEN_ENCOUNTERS ) ) ) ) ; } return encounters ; } 
private void setMediaSessionMetaData () { if ( ( mediaSession ) == null ) { return; } android.support.v4.media.MediaMetadataCompat.Builder builder = new android.support.v4.media.MediaMetadataCompat.Builder () . putString ( MediaMetadataCompat.METADATA_KEY_ARTIST , metaDataArtist ) . putString ( MediaMetadataCompat.METADATA_KEY_ALBUM , metaDataAlbum ) . putString ( MediaMetadataCompat.METADATA_KEY_TITLE , metaDataTitle ) . putBitmap ( MediaMetadataCompat.METADATA_KEY_ALBUM_ART , android.graphics.BitmapFactory . decodeResource ( getResources () , R.drawable.icon ) ) ; if ( ( textInterface ) != null ) { builder . putLong ( MediaMetadataCompat.METADATA_KEY_DURATION , textInterface . getTotalDuration () ) ; } mediaSession . setMetadata ( builder . build () ) ; } 
private void captureTerritory ( gottesman.risk.Player activePlayer , gottesman.risk.Territory selectedTerritory , gottesman.risk.map.TerritoryView territoryView , gottesman.risk.Territory territory ) { int battalionNum = java.lang.Integer . parseInt ( javax.swing.JOptionPane . showInputDialog ( null , "Enter the amount of battalions you would like to move." ) ) ; if ( battalionNum >= ( selectedTerritory . getBattalions () ) ) { javax.swing.JOptionPane . showMessageDialog ( selectedTerritoryView , "Cannot move this amount of battalions. Try again." ) ; return; } else { territory . occupy ( activePlayer ) ; selectedTerritory . moveBattalionsTo ( territory , battalionNum ) ; } selectedTerritoryView . repaint () ; territoryView . repaint () ; selectTerritory ( territoryView ) ; } 
@ java.lang.Override protected void reloadForSearch ( boolean finalTouch ) { if ( ( mAdapter ) == null ) { return; } try { final int sD = mData.length ; for ( int i = 0 ; i < sD ; ++ i ) { if ( ( mData [ i ] ) instanceof ds.framework.v4.data.AbsRecyclerViewData ) { invalidateData ( i ) ; } } loadDataAndDisplay () ; } catch ( java.lang.Throwable e ) { ds.framework.v4.common.Debug . logException ( e ) ; } } 
private boolean isTaskRequired ( com.emc.storageos.db.client.model.Volume rpVolume , com.emc.storageos.volumecontroller.impl.utils.VirtualPoolCapabilityValuesWrapper capabilities , boolean vplex , com.emc.storageos.model.TaskList taskList ) { boolean rpNonVplexSourceVolume = ( Volume.PersonalityTypes.SOURCE . name () . equals ( rpVolume . getPersonality () ) ) && ( ! vplex ) ; boolean addJournalVolume = capabilities . getAddJournalCapacity () ; boolean notAlreadyInTaskList = ( com.emc.storageos.api.service.impl.placement.StorageScheduler . getPrecreatedVolume ( _dbClient , taskList , rpVolume . getLabel () ) ) == null ; boolean createTask = addJournalVolume || ( rpNonVplexSourceVolume && notAlreadyInTaskList ) ; return createTask ; } 
@ java.lang.Override public void tick ( kcl.teamIndexZero.traffic.simulator.data.SimulationTick tick ) { CurrentDate = ( new java.util.Date () . getTime () ) / 1000 ; if ( ( ( CurrentDate ) - ( lastChange ) ) > ( timer ) ) { if ( ( modelSet ) != null ) { modelSet . changeColour ( model , model.currentState ) ; lastChange = CurrentDate ; } } } 
@ java.lang.Override public boolean onKey ( android.view.View v , int keyCode , android.view.KeyEvent event ) { if ( ( event . getAction () ) == ( android.view.KeyEvent.ACTION_DOWN ) ) { switch ( keyCode ) { case android.view.KeyEvent.KEYCODE_ENTER : rightGuess () ; return true ; default: break; } } return false ; } 
public com.emc.hpux.model.HpuxVersion getHpuxMinimumVersion ( boolean forceLookup ) { if ( forceLookup || ( ( hpuxVersion ) == null ) ) { java.lang.String versionProp = this . getSysProperty ( com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP ) ; if ( isValidVersionNumber ( versionProp ) ) { hpuxVersion = new com.emc.hpux.model.HpuxVersion ( versionProp ) ; } else { hpuxVersion = null ; throw new java.lang.IllegalStateException ( java.lang.String . format ( "System property for HPUX Version Number(%s) is invalid - value is '%s'" , com.emc.storageos.computesystemcontroller.impl.ComputeSystemDiscoveryVersionValidator.HPUX_MIN_PROP , versionProp ) ) ; } } return hpuxVersion ; } 
public void inverseClicked ( android.view.View v ) { android.widget.TextView textView2 = ( ( android.widget.TextView ) ( findViewById ( R.id.textView2 ) ) ) ; tempNum = java.lang.Double . parseDouble ( textView2 . getText () . toString () ) ; tempNum = ( tempNum ) * ( - 1 ) ; textView2 . setText ( java.lang.String . valueOf ( tempNum ) ) ; } 
@ java.lang.Override public void run () { if ( ( getAudioService () ) != null ) { setMilliseconds ( ( ( ( drawSurfaceWidth / ( ( float ) ( getAudioService () . getSampleRate () ) ) ) * 1000 ) / 2 ) ) ; } setMillivolts ( ( ( ( ( ( ( float ) ( drawSurfaceHeight ) ) / 4.0F ) / 24.5F ) / 1000 ) * ( com.backyardbrains.utils.BYBConstants.millivoltScale ) ) ) ; } 
private boolean refreshUser () { mUser = mSession . getDataHandler () . getStore () . getUser ( mMemberId ) ; if ( null == ( mUser ) ) { mUser = new org.matrix.androidsdk.rest.model.User () ; mUser.user_id = mMemberId ; mUser.displayname = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_DISPLAY_NAME ) ; if ( android.text.TextUtils . isEmpty ( mUser.displayname ) ) { mUser.displayname = mMemberId ; } mUser.avatar_url = getIntent () . getStringExtra ( im.vector.activity.VectorMemberDetailsActivity.EXTRA_MEMBER_AVATAR_URL ) ; return true ; } return false ; } 
private boolean validateQuantity () { int quantity = java.lang.Integer . valueOf ( subgroupsQuantity . getText () . toString () ) ; if ( quantity > ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , getMaximumQuantity () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; } return true ; } 
public static java.lang.String escapeAndConvertToSQLWildcards ( java.lang.String value , boolean alwaysWildcard ) { java.lang.String ret = value . replaceAll ( "\\\\" , "\\\\\\\\" ) . replaceAll ( "_" , "\\\\_" ) . replaceAll ( "%" , "\\\\%" ) . replaceAll ( "\\*" , "%" ) . replaceAll ( "\\?" , "_" ) ; return alwaysWildcard ? ( "%" + ret ) + "%" : ret ; } 
private static void addBodyIfExists ( java.net.HttpURLConnection connection , com.android.volley.Request < ? > request ) throws com.android.volley.AuthFailureError , java.io.IOException { byte [] body = request . getBody () ; connection . addRequestProperty ( com.android.volley.toolbox.HurlStack.HEADER_CONTENT_TYPE , request . getBodyContentType () ) ; if ( body != null ) { connection . setDoOutput ( true ) ; java.io.DataOutputStream out = new java.io.DataOutputStream ( connection . getOutputStream () ) ; out . write ( body ) ; out . close () ; } } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , @ android.support.annotation.NonNull java.lang.String [] permissions , @ android.support.annotation.NonNull int [] grantResults ) { com.iven.i7helper.util.LocationUtil lu = com.iven.i7helper.util.LocationUtil . getLocationUtil () ; switch ( requestCode ) { case 1 : if ( ( grantResults.length ) > 0 ) { for ( int i : grantResults ) { if ( i != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { com.iven.i7helper.util.ToolUtil . showMessage ( this , "不给权限会导致记录不准确" ) ; return; } } lu . requestLocation () ; } break; default: } } 
public java.lang.String addDev ( objects.Device dev ) { java.sql.PreparedStatement stmt = null ; java.sql.Connection conn = null ; java.lang.String sql = "INSERT INTO network " + "VALUES (?, '?', '?')" ; try { conn = getConnection () ; } catch ( java.lang.ClassNotFoundException e ) { return new java.lang.String ( e . getMessage () ) ; } catch ( java.sql.SQLException e ) { return new java.lang.String ( e . getMessage () ) ; } catch ( java.net.URISyntaxException e ) { return new java.lang.String ( e . getMessage () ) ; } return "MADE IT" ; } 
public static boolean inBounds ( int [] [] array , int r , int c ) { return ( ( r >= 0 ) && ( r < ( array.length ) ) ) && ( ( c >= 0 ) && ( c < ( array [ r ] . length ) ) ) ; } 
public static java.util.List < com.teinproductions.tein.papyrosprogress.Milestone > getMilestones ( java.lang.String json ) throws java.text.ParseException , org.json.JSONException { org.json.JSONArray jArray = new org.json.JSONArray ( json ) ; java.util.List < com.teinproductions.tein.papyrosprogress.Milestone > result = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( jArray . length () ) ; i ++ ) { result . add ( com.teinproductions.tein.papyrosprogress.JSONUtils . getMilestone ( jArray . getJSONObject ( i ) ) ) ; } return result ; } 
public static void addPlayer ( java.lang.String name ) { reachForTheTop.IO . createOutputFile ( ( ( "Scores\\" + name ) + ".reach" ) ) ; reachForTheTop.IO . println ( "times played: 0" ) ; reachForTheTop.IO . println ( "total: 0" ) ; reachForTheTop.IO . closeOutputFile () ; reachForTheTop.IO . createOutputFile ( "Scores\\names.txt" , true ) ; reachForTheTop.IO . println ( name ) ; reachForTheTop.IO . closeOutputFile () ; } 
public void poll () { try { updateTracking () ; scanDirectory ( outboxDir ) ; } catch ( org.openas2.OpenAS2Exception oae ) { oae . terminate () ; } catch ( java.lang.Exception e ) { logger . error ( ( "Unexpected error occurred polling directory for files to send: " + ( outboxDir ) ) , e ) ; } } 
private com.github.com.ricardobaumann.jankenpon.Player.MOVE getMove ( int index ) { com.github.com.ricardobaumann.jankenpon.Player.MOVE [] moves = com.github.com.ricardobaumann.jankenpon.Player.MOVE . values () ; int movesAmount = moves.length ; int moveIndex = ( index > movesAmount ) ? index / movesAmount : index ; return moves [ ( moveIndex - 1 ) ] ; } 
public void afterPropertiesSet ( ) throws java.lang.Exception { int roundId = getRoundId () ; if ( roundId < 1 ) { return; } round = org.powertac.tournament.beans.Round . getRoundFromId ( roundId , false ) ; loadRoundInfo () ; loadParticipantInfo () ; loadCsvLinks () ; loadMaps () ; } 
public void checkAttributeValue ( cz.metacentrum.perun.core.api.PerunSession sess , cz.metacentrum.perun.core.api.Member member , cz.metacentrum.perun.core.api.Attribute attribute ) throws cz.metacentrum.perun.core.api.exceptions.InternalErrorException , cz.metacentrum.perun.core.api.exceptions.WrongAttributeValueException , cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueException { cz.metacentrum.perun.core.implApi.modules.attributes.MemberAttributesModuleImplApi attributeModule = getMemberAttributeModule ( sess , attribute ) ; if ( attributeModule == null ) return; try { attributeModule . checkAttributeValue ( ( ( cz.metacentrum.perun.core.impl.PerunSessionImpl ) ( sess ) ) , member , attribute ) ; } catch ( cz.metacentrum.perun.core.api.exceptions.WrongAttributeAssignmentException ex ) { throw new cz.metacentrum.perun.core.api.exceptions.InternalErrorException ( ex ) ; } } 
@ java.lang.Override public void onTick ( net.frozenbit.plugin5zig.cubecraft.gamemodes.DuelsGameMode gameMode ) { super . onTick ( gameMode ) ; if ( ( gameMode . getState () ) != ( eu.the5zig.mod.server.GameState.LOBBY ) ) { ( timer ) ++ ; if ( ( ( timer ) % ( net.frozenbit.plugin5zig.cubecraft.listeners.DuelsListener.OPPONENT_UPDATE_INTERVAL ) ) == 0 ) { updateOpponentInfo ( gameMode ) ; } } } 
public void nextSlide () { ( slide ) ++ ; if ( ( ( slide ) % 4 ) == 1 ) { Objectives () ; } else if ( ( ( slide ) % 4 ) == 2 ) { Turn () ; } else if ( ( ( slide ) % 4 ) == 3 ) { unitTable () ; } else if ( ( ( slide ) % 4 ) == 4 ) { shortcuts () ; } } 
private void handleIntent ( android.content.Intent intent ) { final int configScreenId = intent . getIntExtra ( org.droidplanner.android.activities.ConfigurationActivity.EXTRA_CONFIG_SCREEN_ID , mConfigScreenId ) ; final android.support.v4.app.Fragment currentFragment = getCurrentFragment () ; if ( ( currentFragment == null ) || ( ( getIdForFragment ( currentFragment ) ) != configScreenId ) ) { mConfigScreenId = configScreenId ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.configuration_screen , getFragmentForId ( configScreenId ) ) . commit () ; } } 
public void usePotion () { for ( int i = 2 ; i >= 0 ; i -- ) { if ( ( this . potions [ i ] ) != null ) { heal ( 50 ) ; this . potions [ i ] = null ; return; } } } 
public static void main ( java.lang.String [] args ) { char letter ; int a ; final int MIN = 65 ; final int MAX = 122 ; final int STOPLINE1 = 85 ; final int STOPLINE2 = 122 ; for ( a = MIN ; a <= MAX ; a ++ ) { letter = ( ( char ) ( a ) ) ; java.lang.System.out . print ( ( "  " + letter ) ) ; if ( ( a == STOPLINE1 ) || ( a == STOPLINE2 ) ) java.lang.System.out . println () ; } java.lang.System.out . println ( "\nEnd of application" ) ; } 
private void setSPenToolActionWithAllCanvases ( int toolAction ) { for ( int i = 0 ; i < ( numWritableCharBoxCols ) ; i ++ ) { for ( int j = 0 ; j < ( numCharBoxesInCol ) ; j ++ ) { mCharBoxes [ i ] [ j ] . setToolTypeAction ( SpenSurfaceView.TOOL_SPEN , toolAction ) ; } } return; } 
@ java.lang.Override public void onStopTrackingTouch ( android.widget.SeekBar seekBar ) { mTextSeekBar . setText ( ( ( ( "Shutter Speed(in ns):" + ( ( mSeekbar . getProgress () ) + ShutterSpeed1 ) ) + "/" ) + ( java.lang.Math . round ( ( ( mSeekbar . getMax () ) + ShutterSpeed1 ) ) ) ) ) ; android.widget.Toast . makeText ( getApplicationContext () , "Setting Shutter Speed" , Toast.LENGTH_SHORT ) . show () ; ShutterSpeedValue = ( mSeekbar . getProgress () ) + ShutterSpeed1 ; if ( ( AutoNumber ) != 1 ) { AutoNumber = 1 ; } startPreview () ; } 
public org.pb.x12.EDI parse ( java.io.InputStream source ) throws java.io.IOException , org.pb.x12.FormatException { java.lang.StringBuilder strBuffer = new java.lang.StringBuilder () ; char [] cbuf = new char [ 1024 ] ; int length ; java.io.Reader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( source ) ) ; while ( ( length = reader . read ( cbuf ) ) != ( - 1 ) ) { strBuffer . append ( cbuf , 0 , length ) ; } java.lang.String strSource = strBuffer . toString () ; return parse ( strSource ) ; } 
public void hideSoftInput () { android.view.View view = ( ( android.app.Activity ) ( context ) ) . getCurrentFocus () ; if ( view == null ) view = new android.view.View ( context ) ; android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( context . getSystemService ( Activity.INPUT_METHOD_SERVICE ) ) ) ; if ( imm == null ) return; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; } 
@ java.lang.Override public boolean configChanged () { int currentConfigHash = this . configProps . hashCode () ; boolean configChanged = ( ( propsHashCode ) != null ) && ( ( this . propsHashCode ) != currentConfigHash ) ; if ( configChanged && ( net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER . isDebugEnabled () ) ) net.jawr.web.resource.bundle.factory.PropsConfigPropertiesSource.LOGGER . debug ( "Changes in configuration properties file detected." ) ; this . propsHashCode = currentConfigHash ; return configChanged ; } 
private boolean isValideEmail ( java.lang.String email ) { java.sql.Statement stmt ; boolean status = false ; java.sql.Connection con = null ; try { bean.ConnectionProvider provider = new bean.ConnectionProvider () ; con = provider . getCon () ; stmt = con . createStatement () ; java.lang.String query = ( "Select * from employee where BINARY email=\"" + email ) + "\"" ; java.sql.ResultSet rs = stmt . executeQuery ( query ) ; status = rs . next () ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } return status ; } 
public boolean tryReadLockWithCondition ( V expected ) { int [] stamp = new int [ 1 ] ; V value ; do { value = lock . get ( stamp ) ; if ( ( expected != value ) && ( ( value == null ) || ( ! ( expected . equals ( value ) ) ) ) ) { return false ; } } while ( lock . compareAndSet ( value , value , stamp [ 0 ] , ( ( stamp [ 0 ] ) + 2 ) ) ) ; return true ; } 
private void updateYData () { top = - ( ( int ) ( java.lang.Math . round ( ( ( ( roundY2 ) - ( roundY1 ) ) / 2.0 ) ) ) ) ; bottom = ( ( top ) + ( roundY2 ) ) - ( roundY1 ) ; } 
public void onAudioFocusChange ( int focusChange ) { if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT ) ) { mPlayTimer . stop () ; mMediaPlayer . pause () ; } else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_GAIN ) ) {} else if ( focusChange == ( android.media.AudioManager.AUDIOFOCUS_LOSS ) ) { mAudioManager . abandonAudioFocus ( this ) ; mPlayTimer . stop () ; mMediaPlayer . pause () ; unregisterAudio () ; } mContext . updateSongView () ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_FINE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) && ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( view . getContext () , Manifest.permission.ACCESS_COARSE_LOCATION ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { return; } locationManager . requestLocationUpdates ( "gps" , 5000 , 0 , locationListener ) ; } 
public static java.lang.String getDomainName ( java.lang.String url ) throws java.net.URISyntaxException { java.net.URI uri = new java.net.URI ( url ) ; java.lang.String domain = uri . getHost () ; if ( domain == null ) { return url . replaceAll ( "www." , "" ) ; } return domain . replaceAll ( "www." , "" ) ; } 
private void addDeveloperFromInput () { int id = readIdFromInput () ; com.homelearning.model.Developer developer = developerController . getById ( id ) ; if ( developer == null ) { developerController . save ( new com.homelearning.model.Developer ( id , readFirstNameFromInput () , readLastNameFromInput () , readSpecialtyFromInput () , readExperienceFromInput () , readSalaryFromInput () ) ) ; } else { java.lang.System.out . printf ( "Developer with id %d already exists:\n" , id ) ; java.lang.System.out . println ( developer ) ; } } 
@ java.lang.Override public net.openchrom.msd.converter.supplier.cms.model.IIonMeasurement getIonMeasurement ( int scanIndex ) { if ( ! ( isMinMaxSignalCalculated () ) ) { updateSignalLimits () ; } if ( ( scanIndex >= 0 ) && ( scanIndex < ( ionMeasurements . size () ) ) ) { return ionMeasurements . get ( scanIndex ) ; } else { return null ; } } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( ( remain . length () ) == 0 ) && ( ( e . getKeyCode () ) != ( java.awt.event.KeyEvent.VK_ENTER ) ) ) { e . consume () ; retype () ; } else { java.lang.String item = "%d %d 0" ; long curTime = java.lang.System . currentTimeMillis () ; records . add ( java.lang.String . format ( item , curTime , e . getKeyCode () ) ) ; } } 
@ java.lang.Override public int hashCode () { int hash = 7 ; hash = ( 53 * hash ) + ( this . topLeft . hashCode () ) ; hash = ( 53 * hash ) + ( this . bottomRight . hashCode () ) ; return hash ; } 
public static java.lang.String formatQueryString ( java.lang.String url , java.lang.String field , java.lang.Enum value ) { if ( null == value ) { return url ; } return url + ( url . contains ( "?" ) ? ( ( "&" + field ) + "=" ) + value : ( ( "?" + field ) + "=" ) + value ) ; } 
private int find_next_test_item ( int CurrentTestItem ) { int NextTestItemL = 0 ; boolean NeedTest = false ; NextTestItemL = CurrentTestItem + 1 ; do { not_end_test_all = NextTestItemL != ( end_test_item ) ; if ( not_end_test_all ) { NeedTest = fec_test_items_order [ NextTestItemL ] . test ; if ( NeedTest ) { break; } else { NextTestItemL ++ ; } } else { return - 1 ; } } while ( ! NeedTest ) ; return NextTestItemL ; } 
protected boolean setCurrentNetworkView ( final org.cytoscape.view.model.CyNetworkView newView ) { synchronized ( lock ) { if ( ( ( ( currentNetworkView ) == null ) && ( newView == null ) ) || ( ( ( currentNetworkView ) != null ) && ( currentNetworkView . equals ( newView ) ) ) ) return false ; final org.cytoscape.view.model.CyNetworkView oldView = currentNetworkView ; currentNetworkView = newView ; for ( org.cytoscape.internal.view.NetworkViewGrid.ThumbnailPanel tp : thumbnailPanels . values () ) tp . update ( false ) ; firePropertyChange ( "currentNetworkView" , oldView , newView ) ; } return true ; } 
public void start () { if ( ! ( lazyMode ) ) { if ( ! ( ( ( itemProperty () . getValue () ) == null ) && ( ( beanProperty () . getValue () ) == null ) ) ) { reSchedule ( null ) ; } } } 
private void removeTransform ( org.bukkit.entity.Player player ) { org.bukkit.Bukkit . getServer () . dispatchCommand ( org.bukkit.Bukkit . getConsoleSender () , ( "clearskin " + ( player . getName () ) ) ) ; sendMessage ( player , "You look like yourself again." ) ; sendMessage ( player , strWarnMessage ) ; } 
public ar.edu.unq.chasqui.model.Direccion obtenerDireccionPredeterminada () { for ( ar.edu.unq.chasqui.model.Direccion d : this . getDireccionesAlternativas () ) { if ( d . getPredeterminada () ) { return d ; } } return ( ( this . getDireccionesAlternativas () ) != null ) && ( ( this . getDireccionesAlternativas () . size () ) > 0 ) ? this . getDireccionesAlternativas () . get ( 0 ) : null ; } 
@ java.lang.Override protected java.lang.String processRequest ( cn.edu.fudan.request.AddTableRequest request , cn.edu.fudan.util.Session session ) throws java.lang.Exception { if ( ( request == null ) || ( ( request . table () ) == ( AddTableRequest.Table.DEFAULT ) ) ) return "error" ; java.lang.Integer result = new cn.edu.fudan.dao.AddTableDAO ( this , request ) . getResult () ; return ( result != null ) && ( result > 0 ) ? "success" : "fail" ; } 
public void startTournament ( ) throws java.lang.Exception { for ( int p1 = 0 ; p1 < ( players . size () ) ; p1 ++ ) { for ( int p2 = 0 ; p2 < ( players . size () ) ; p2 ++ ) { if ( p1 != p2 ) { startGame ( players . get ( p1 ) , players . get ( p2 ) ) ; } } } } 
@ android.support.annotation.Nullable static android.net.Uri safeUri ( @ android.support.annotation.NonNull java.lang.String url ) { if ( android.text.TextUtils . isEmpty ( url ) ) { return null ; } android.net.Uri uri = android.net.Uri . parse ( url ) ; if ( ( android.text.TextUtils . isEmpty ( uri . getScheme () ) ) || ( android.text.TextUtils . isEmpty ( uri . getHost () ) ) ) { return null ; } return uri ; } 
@ java.lang.Override public void setRawData ( java.util.List < float [] > data ) { this . centroids = null ; this . data = new edu.uc.rphash.tests.clusterers.KMeans2.PointND [ data . size () ] ; for ( int i = 0 ; i < ( data . size () ) ; i ++ ) { this . data [ i ] = new edu.uc.rphash.tests.clusterers.KMeans2.PointND ( data . get ( i ) , 1 , 0.0F ) ; } } 
protected void actOnResource ( org.fogbowcloud.blowout.pool.AbstractResource resource , java.util.List < org.fogbowcloud.blowout.core.model.Task > tasks ) { if ( resource . getState () . equals ( ResourceState.IDLE ) ) { org.fogbowcloud.blowout.core.model.Task task = chooseTaskForRunning ( resource , tasks ) ; if ( task != null ) { runTask ( task , resource ) ; } } if ( resource . getState () . equals ( ResourceState.TO_REMOVE ) ) { runningTasks . remove ( resource ) ; } } 
private static com.emergentorganization.cellrpg.tools.map.MapObject parseItem ( org.w3c.dom.Node item ) { if ( item . getNodeName () . contentEquals ( "image" ) ) { com.badlogic.gdx.math.Vector2 offset = new com.badlogic.gdx.math.Vector2 () ; return com.emergentorganization.cellrpg.tools.map.MapLoader . parseImage ( item , offset ) ; } else if ( item . getNodeName () . contentEquals ( "#text" ) ) {} else { com.emergentorganization.cellrpg.tools.map.MapLoader . print ( ( ( "parsing for item " + ( item . getNodeName () ) ) + " is unsupported" ) ) ; } return null ; } 
public void reiniciar ( ) throws java.lang.InterruptedException { damas_v1.Ficha f = new damas_v1.Ficha ( "·" ) ; for ( int i = 0 ; i < ( MAXFILAS ) ; i ++ ) { for ( int j = 0 ; j < ( MAXCOLUMNAS ) ; j ++ ) { casillero [ i ] [ j ] = f ; setChanged () ; } } } 
@ java.lang.Override public void seekToUs ( long positionUs ) { com.google.android.exoplayer.util.Assertions . checkState ( prepared ) ; com.google.android.exoplayer.util.Assertions . checkState ( ( ( enabledTrackCount ) > 0 ) ) ; long currentPositionUs = ( isPendingReset () ) ? pendingResetPositionUs : downstreamPositionUs ; downstreamPositionUs = positionUs ; lastSeekPositionUs = positionUs ; if ( currentPositionUs == positionUs ) { return; } seekToInternal ( positionUs ) ; } 
private android.graphics.Bitmap setBitmapSize ( int iconId , int w ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getContext () . getResources () , iconId ) ; float s = ( w * 1.0F ) / ( bitmap . getWidth () ) ; bitmap = android.graphics.Bitmap . createScaledBitmap ( bitmap , ( ( int ) ( ( bitmap . getWidth () ) * s ) ) , ( ( int ) ( ( bitmap . getHeight () ) * s ) ) , true ) ; return bitmap ; } 
void onScanFilterEnableDisabled ( int action , int status , int clientIf ) { if ( com.android.bluetooth.gatt.GattService.DBG ) { android.util.Log . d ( com.android.bluetooth.gatt.GattService.TAG , ( ( ( ( ( "onScanFilterEnableDisabled() - clientIf=" + clientIf ) + ", status=" ) + status ) + ", action=" ) + action ) ) ; } if ( status != 0 ) {} mStateMachine . callbackDone () ; } 
private void excludeCols ( final boolean [] checkedItems ) { int i = 1 ; assert null != checkedItems ; assert null != ( this . templateModel ) ; for ( final boolean checkedItem : checkedItems ) { if ( checkedItem ) this . templateModel . addExcludeCol ( i ) ; i ++ ; } } 
public static void find ( java.lang.String arg , java.util.List < java.lang.String > list ) { if ( ( list . indexOf ( arg ) ) == ( - 1 ) ) { java.lang.System.out . printf ( "%s not in list\n" , arg ) ; } else { java.lang.System.out . printf ( "%s in list at index %d\n" , arg , list . indexOf ( arg ) ) ; } } 
private boolean checkForAKind () { if ( ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) && ( ( kindCounter ) == 4 ) ) { java.lang.System.out . println ( "Four of a kind!" ) ; kindCounter = 0 ; return true ; } kindCounter = 0 ; if ( ( ( findSameRank ( ( ( PJ5.SimplePoker.numberOfCards ) - 1 ) ) ) < 0 ) && ( ( kindCounter ) == 3 ) ) { java.lang.System.out . println ( "Three of a kind!" ) ; kindCounter = 0 ; return true ; } kindCounter = 0 ; return false ; } 
@ java.lang.Override public java.lang.String toString () { if ( ( id ) < 0 ) return "< New Session >" ; java.lang.String result ; org.joda.time.DateTime dt = new org.joda.time.DateTime ( date ) ; org.joda.time.format.DateTimeFormatter dtf = org.joda.time.format.DateTimeFormat . forPattern ( "E, MMM dd yyyy" ) ; result = dtf . print ( dt ) ; if ( ( sequenceNum ) > 0 ) { result += ( " (" + ( sequenceNum ) ) + ")" ; } return result ; } 
public void setSize ( final java.lang.Long size ) { if ( ( ( getPrev () ) != null ) && ( ( getPrev () ) != 0 ) ) { final java.lang.Long prevSize = getObject () . getIntegerKey ( ASAtom.SIZE ) ; if ( prevSize > size ) { return; } } getObject () . setIntegerKey ( ASAtom.SIZE , size ) ; } 
public boolean validateDayOfWeek ( java.time.LocalDateTime currentTime ) { application.main.Business business = new application.main.Business () ; for ( int i = 0 ; i < ( business . getOpeningDays () . size () ) ; i ++ ) { if ( business . getOpeningDays () . get ( i ) . equals ( currentTime . getDayOfWeek () ) ) { application.main.Utility.LOGGER . info ( "Valid business time" ) ; return true ; } } application.main.Utility.LOGGER . info ( "Invalid business time" ) ; return false ; } 
public void handle ( org.dsa.iot.dslink.node.actions.ActionResult event ) { try { com.serotonin.bacnet4j.type.constructed.PriorityArray priorities = getPriorityArray () ; if ( priorities == null ) return; for ( int i = 1 ; i <= ( priorities . getCount () ) ; i ++ ) { relinquish ( i ) ; } refreshPriorities () ; } catch ( com.serotonin.bacnet4j.exception.BACnetException e ) { bacnet.BacnetPoint.LOGGER . error ( "error: " , e ) ; } } 
public int compareTo ( main.hibernate.dao.RankingDao o ) { if ( ( this . betScore ) > ( o . getBetScore () ) ) return - 1 ; if ( ( this . betScore ) < ( o . getBetScore () ) ) return 1 ; return 0 ; } 
@ java.lang.Override public boolean deleteLink ( java.lang.String dbid , long id1 , long link_type , long id2 , boolean noinverse , boolean expunge ) throws java.lang.Exception { int deletionCount ; try ( edu.berkeley.cs.Transaction tx = session . beginTransaction () ) { java.lang.String deleteLinkStmt = "MATCH (n1 {id: {id1}}) -[r:{link_type}]-> (n2: {id: {id2}}) DELETE r" ; edu.berkeley.cs.StatementResult result = tx . run ( deleteLinkStmt , edu.berkeley.cs.LinkStoreNeo4j . linkParams ( id1 , link_type , id2 ) ) ; deletionCount = result . consume () . counters () . relationshipsDeleted () ; tx . success () ; } return deletionCount > 0 ; } 
@ java.lang.Override public void init ( edu.uci.ics.hyracks.storage.am.common.api.ITreeIndexMetaDataFrame metaFrame ) throws edu.uci.ics.hyracks.api.exceptions.HyracksDataException { if ( ( confiscatedMetaNode ) != null ) { return; } edu.uci.ics.hyracks.storage.common.buffercache.ICachedPage metaNode = bufferCache . confiscatePage ( BufferCache.INVALID_DPID ) ; try { metaFrame . setPage ( metaNode ) ; metaFrame . initBuffer ( edu.uci.ics.hyracks.storage.am.common.freepage.LinkedMetaDataPageManager.META_PAGE_LEVEL_INDICATOR ) ; metaFrame . setMaxPage ( 0 ) ; } finally { confiscatedMetaNode = metaNode ; appendOnly = true ; } } 
public synchronized void getService () { java.util.Random rand = new java.util.Random () ; try { java.lang.Thread . sleep ( ( 50 + ( rand . nextInt ( 500 ) ) ) ) ; } catch ( java.lang.InterruptedException e ) { return; } synchronized ( _numberOnDisplay ) { if ( _numbers . isEmpty () ) { _numberOnDisplay = - 1 ; } else { java.lang.System.out . print ( ( "Display:" + ( _numbers . getFirst () ) ) ) ; java.lang.System.out . println () ; _numberOnDisplay = _numbers . poll () ; } } } 
public void keyDown ( java.lang.Integer keyInfo ) { java.lang.Integer count = 0 ; if ( com.Hook.common.RecordKeyboard.keyboardCount . containsKey ( keyInfo ) ) { count = com.Hook.common.RecordKeyboard.keyboardCount . get ( keyInfo ) ; } com.Hook.common.RecordKeyboard.keyboardCount . put ( keyInfo , ( ++ count ) ) ; ++ ( com.Hook.common.RecordKeyboard.pressCount ) ; if ( ( ( com.Hook.common.RecordKeyboard.pressCount ) >= ( com.Hook.common.RecordKeyboard.flagTime ) ) && ( ( ( com.Hook.common.RecordKeyboard.pressCount ) % ( com.Hook.common.RecordKeyboard.flagTime ) ) == 0 ) ) { write () ; } } 
public void close ( ch.ninecode.cim.connector.CIMConnection connection ) { if ( null != connection ) if ( connection._Valid ) { connection . invalidate () ; javax.resource.spi.ConnectionEvent event = new javax.resource.spi.ConnectionEvent ( this , javax.resource.spi.ConnectionEvent.CONNECTION_CLOSED ) ; event . setConnectionHandle ( connection ) ; for ( javax.resource.spi.ConnectionEventListener listener : _Listeners ) listener . connectionClosed ( event ) ; } } 
@ java.lang.Override public java.lang.String toString () { if ( ( head ) == null ) { return null ; } java.lang.StringBuffer sb = new java.lang.StringBuffer () ; com.badalchowdhary.datastructures.Node currentNode = head ; while ( ( currentNode . getNext () ) != null ) { sb . append ( ( ( currentNode . getData () ) + " -> " ) ) ; currentNode = currentNode . getNext () ; } sb . append ( currentNode . getData () ) ; return sb . toString () ; } 
public com.epam.indigo.IndigoObject exactMatch ( com.epam.indigo.IndigoObject obj1 , com.epam.indigo.IndigoObject obj2 , java.lang.String flags ) { if ( flags == null ) flags = "" ; com.epam.indigo.IndigoObject [] parent = new com.epam.indigo.IndigoObject [] { obj1 , obj2 } ; setSessionID () ; int match = com.epam.indigo.Indigo . checkResult ( this , parent , com.epam.indigo.Indigo._lib . indigoExactMatch ( obj1.self , obj2.self , flags ) ) ; if ( match == 0 ) return null ; return new com.epam.indigo.IndigoObject ( this , match , parent ) ; } 
public static boolean pressed ( java.lang.String key ) { if ( ( key == null ) || ( ( apcs.Window.keyMap ) == null ) ) return false ; else if ( apcs.Window.keyMap . containsKey ( key ) ) return apcs.Window . getInstanceFromThread () . isVirtualKeyPressed ( apcs.Window.keyMap . get ( key ) ) ; else if ( ( key . length () ) > 0 ) return apcs.Window.key . pressed ( key . charAt ( 0 ) ) ; return false ; } 
public void receive ( final org.thingml.java.ext.Event event , final org.thingml.java.Port p ) { if ( active . get () ) { event . setPort ( p ) ; queue . offer ( event ) ; if ( ( ( root ) == null ) && ( active . get () ) ) { for ( org.thingml.java.Component child : forks ) { final org.thingml.java.ext.Event child_e = event . clone () ; child . receive ( child_e , p ) ; } } } } 
@ org.springframework.web.bind.annotation.RequestMapping ( method = org.springframework.web.bind.annotation.RequestMethod.POST ) public com.github.visola.familymenu.model.Person createPerson ( @ org.springframework.web.bind.annotation.RequestBody @ javax.validation.Valid com.github.visola.familymenu.model.Person person , @ org.springframework.security.core.annotation.AuthenticationPrincipal java.lang.String familyName ) { com.github.visola.familymenu.model.Family loadedFamily = familyRepository . findByName ( familyName ) ; if ( ( ( person . getFamily () ) != null ) && ( ! ( java.util.Objects . equals ( person . getFamily () . getId () , loadedFamily . getId () ) ) ) ) { throw new com.github.visola.familymenu.controller.exception.NotAuthorizedException ( "You don't have permission to add a person to that family." ) ; } person . setFamily ( loadedFamily ) ; return personRepository . save ( person ) ; } 
@ java.lang.Override protected void init ( ) throws cc.redpen.RedPenException { super . init () ; if ( ( getSymbolTable () . getLang () . equals ( "ja" ) ) && ( ! ( getConfigAttribute ( "min_len" ) . isPresent () ) ) ) getProperties () . put ( "min_len" , 1 ) ; } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { int x ; int y ; if ( ( drag ) && ( ! ( move ) ) ) { deselectAll () ; target . clear () ; x = e . getX () ; y = e . getY () ; for ( main.GObject go : gObjects ) { if ( go . covered ( eX , eY , x , y ) ) { target . add ( go ) ; go . selected () ; } } repaint () ; } } 
private Hex getWord ( Hex index ) { int i = index . toInt () ; if ( ( i > ( ( Simpletron.MEMORY_SIZE ) - 1 ) ) || ( i < 0 ) ) fatalError ( "*** index out of bounds ***" ) ; Hex word = new Hex ( memory [ i ] ) ; if ( ( ( word . compareTo ( Simpletron.MAX_WORD ) ) > 0 ) || ( ( word . compareTo ( Simpletron.MIN_WORD ) ) < 0 ) ) { fatalError ( "*** overflow occured ***" ) ; } return word ; } 
private static < T > void addGroupAtId ( java.util.List < T > seqResGroups , T group , int sequenceIndexId ) { while ( ( seqResGroups . size () ) <= sequenceIndexId ) { seqResGroups . add ( null ) ; } if ( sequenceIndexId >= 0 ) { seqResGroups . set ( sequenceIndexId , group ) ; } } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( "Bag{" + "id=" ) + ( id ) ) + ", name='" ) + ( name ) ) + '\'' ) + ", publicKey=" ) + ( java.util.Arrays . toString ( publicKey ) ) ) + '}' ; } 
public void deleteFavorite ( int favoriteID ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_WEBSITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_RELEASE_DATES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_FAVORITE_ID ) + " = " ) + favoriteID ) , null ) ; db . delete ( com.madgusto.gamingreminder.db.DatabaseHelper.TABLE_FAVORITES , ( ( ( com.madgusto.gamingreminder.db.DatabaseHelper.COL_ID ) + " = " ) + favoriteID ) , null ) ; } 
public void resolveForwardReferences ( ) throws org.exist.xquery.XPathException { while ( ! ( forwardReferences . isEmpty () ) ) { final org.exist.xquery.FunctionCall call = forwardReferences . pop () ; final org.exist.xquery.UserDefinedFunction func = call . getContext () . resolveFunction ( call . getQName () , call . getArgumentCount () ) ; if ( func == null ) { throw new org.exist.xquery.XPathException ( call , ErrorCodes.XPST0017 , ( "Call to undeclared function: " + ( call . getQName () . getStringValue () ) ) ) ; } else { call . resolveForwardReference ( func ) ; } } } 
public boolean addEdge ( boolean isAnySymbol , java.lang.String transition , int sourceVertex , int sinkVertex ) { if ( ( sourceVertex < ( graphStructure . size () ) ) && ( sinkVertex < ( graphStructure . size () ) ) ) { graphStructure . get ( sourceVertex ) . getValue () . add ( new com.sonechka.graph.Edge ( isAnySymbol , transition , sourceVertex , sinkVertex ) ) ; return true ; } return false ; } 
@ java.lang.Override public void onCityLoaded ( java.util.List < com.zfwl.entity.Area > citys ) { if ( ( ( mAddress ) != null ) && ( ( mAddress . getCity () ) != null ) ) { mCurrentCity = mAddress . getCity () ; mSelectAreaPresenter . loadNextDistrict ( mCurrentCity . getId () ) ; } else {} cityAdapter . setDatas ( citys ) ; if ( ( mCurrentCity ) != null ) { cityAdapter . setSelectArea ( mCurrentCity . getId () ) ; } cityAdapter . notifyDataSetChanged () ; } 
public void releaseKms ( java.lang.String applicationId ) throws org.kurento.client.internal.NotEnoughResourcesException { try { de.fhg.fokus.nubomedia.kmc.KmsUrlProvider.logger . info ( ( "releasing KMS..." + applicationId ) ) ; if ( ( record ) == null ) return; vnfrService . unregisterApplication ( record . get ( applicationId ) . getInternalAppId () ) ; timerTask . cancel () ; } catch ( java.lang.Exception e ) { throw new org.kurento.client.internal.NotEnoughResourcesException ( ( "An error occured in releasing the KMS - " + ( e . getMessage () ) ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { switch ( view . getId () ) { case R.id.previous_button : int index = ( questionPager . getCurrentItem () ) - 1 ; questionPager . setCurrentItem ( ( index >= 0 ? index : ( questionAdapter . getCount () ) - 1 ) ) ; break; case R.id.next_button : questionPager . setCurrentItem ( ( ( ( questionPager . getCurrentItem () ) + 1 ) % ( questionAdapter . getCount () ) ) ) ; break; } } 
@ java.lang.Override public void onItemClick ( android.widget.AdapterView < ? > parent , android.view.View view , int position , long id ) { if ( position == 0 ) { android.content.Intent intent = new android.content.Intent ( android.content.Intent.ACTION_PICK , android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI ) ; intent . setType ( "image/*" ) ; startActivityForResult ( android.content.Intent . createChooser ( intent , "Deep Life" ) , 1 ) ; } else { Show_DialogBox ( position ) ; } } 
private void setLanguage ( java.lang.String lang ) { java.util.Locale locale = null ; if ( lang == null ) { locale = java.util.Locale . getDefault () ; } else { locale = new java.util.Locale ( lang ) ; } map = be.nikiroo.jvcard.resources.Bundles . getBundle ( "resources" , locale ) ; } 
public java.io.InputStream getBinaryStream ( java.lang.String columnLabel ) throws java.sql.SQLException { try { java.sql.Blob blob = getBlob ( columnLabel ) ; return blob != null ? blob . getBinaryStream () : null ; } catch ( java.lang.Exception e ) { throw new java.sql.SQLException ( ( ( "An error occurred during the retrieval of the binary stream at column '" + columnLabel ) + "'" ) , e ) ; } } 
public com.squareup.okhttp.HttpUrl.Builder newBuilder () { com.squareup.okhttp.HttpUrl.Builder result = new com.squareup.okhttp.HttpUrl.Builder () ; result.scheme = scheme ; result.encodedUsername = encodedUsername () ; result.encodedPassword = encodedPassword () ; result.host = host ; result.port = ( ( port ) != ( com.squareup.okhttp.HttpUrl . defaultPort ( scheme ) ) ) ? port : - 1 ; result.encodedPathSegments . clear () ; result.encodedPathSegments . addAll ( encodedPathSegments () ) ; result . encodedQuery ( encodedQuery () ) ; result.encodedFragment = encodedFragment () ; return result ; } 
public void computeCheck ( core.agent.Message message ) { core.restaurant.agent.Waiter waiter = message . get ( 0 ) ; core.restaurant.agent.Customer customer = message . get ( 1 ) ; java.lang.String choice = message . get ( 2 ) ; m_checks . add ( new core.restaurant.Check ( waiter , customer , choice ) ) ; print ( ( ( ( ( "Computing " + ( customer . getName () ) ) + "'s check for his/her " ) + choice ) + "." ) ) ; stateChanged () ; } 
public double [] Project ( double [] Xrgb ) { assert ( Xrgb.length ) == 2 ; int index = pointmap [ ( ( int ) ( ( ( Xrgb [ 1 ] ) * ( Constants.WIDTH ) ) + ( Xrgb [ 0 ] ) ) ) ] ; double [] P = this . points . get ( index ) ; return P ; } 
public static float harmonic () { float oldSum = 0.0F ; float sum = 1.0F ; int n = 1 ; while ( oldSum < sum ) { oldSum = sum ; sum += 1.0F / n ; n += 1 ; if ( ( n % 100000 ) == 0 ) { java.lang.System.out . println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; } } java.lang.System.out . println ( ( ( ( "n = " + n ) + ", sum = " ) + sum ) ) ; return sum ; } 
protected void addRequestTime ( long requestTime , java.util.Map < java.lang.String , java.lang.Object > map ) { if ( ( this . includeRequestTime ) && ( requestTime > 0 ) ) { final long sec = java.util.concurrent.TimeUnit.MILLISECONDS . toSeconds ( requestTime ) ; final long ms = java.util.concurrent.TimeUnit.MILLISECONDS . toMillis ( ( requestTime - ( java.util.concurrent.TimeUnit.SECONDS . toMillis ( sec ) ) ) ) ; java.lang.String time = java.lang.String . format ( "%01d.%03d" , sec , ms ) ; if ( time != null ) { map . put ( ch.qos.logback.contrib.json.access.JsonLayout.REQUESTTIME_ATTR_NAME , time ) ; } } } 
public boolean contains ( long value ) { int hashCode = hash ( value ) ; int hashMarker = - 1 ; while ( ( ( this . table [ hashCode ] ) != null ) && ( hashCode != hashMarker ) ) { if ( ( this . table [ hashCode ] ) == value ) return true ; if ( hashMarker == ( - 1 ) ) hashMarker = hashCode ; hashCode = ( hashCode + 1 ) % ( this . table . length ) ; } return false ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( requestCode == ( ReminderBottomSheetDialog.UPDATE_REMINDER_REQUEST_CODE ) ) { long timestamp = data . getLongExtra ( ReminderBottomSheetDialog.TIMESTAMP_BUNDLE_KEY , 0 ) ; java.util.Calendar calendar = java.util.Calendar . getInstance () ; calendar . setTime ( new java.util.Date ( timestamp ) ) ; onReminderUpdated ( calendar ) ; } } 
@ java.lang.Override public jp.hazuki.yuzubrowser.webkit.CustomWebView makeWebView ( boolean cacheType ) { jp.hazuki.yuzubrowser.webkit.CustomWebView web = ( cacheType ) ? new jp.hazuki.yuzubrowser.webkit.CacheWebView ( this ) : new jp.hazuki.yuzubrowser.webkit.SwipeWebView ( this ) ; web . getWebView () . setDrawingCacheEnabled ( true ) ; web . getWebView () . buildDrawingCache () ; initWebSetting ( web ) ; web . setAcceptThirdPartyCookies ( android.webkit.CookieManager . getInstance () , ( ( ( ! ( AppData.private_mode . get () ) ) && ( AppData.accept_cookie . get () ) ) && ( AppData.accept_third_cookie . get () ) ) ) ; return web ; } 
public void setValue ( float v ) { if ( v < 0 ) v = 0 ; else if ( v > 1 ) v = 1 ; float newy = ( getY () ) + ( v * ( ( getHeight () ) - ( h . getHeight () ) ) ) ; h . setPosition ( h . getX () , newy ) ; } 
public static int getDepth ( java.lang.String line ) { int depth = 1 ; for ( int i = 0 ; i < ( line . length () ) ; i ++ ) { if ( ( ( line . charAt ( i ) ) == '\t' ) || ( ( line . charAt ( i ) ) == ' ' ) ) { depth ++ ; } else { break; } } return depth ; } 
private void showAboutZanteDialog () { android.app.FragmentTransaction ft = getFragmentManager () . beginTransaction () ; android.app.Fragment prev = getFragmentManager () . findFragmentByTag ( "shownDialog" ) ; if ( prev != null ) { ft . remove ( prev ) ; } ft . addToBackStack ( null ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment = extinctspecie.com.zantetravel.fragments.MyDialogFragment . newInstance ( extinctspecie.com.zantetravel.activities.MainActivity.CUSTOM_DIALOG_ID_FOR_ABOUT_APP ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment . setCancelable ( true ) ; extinctspecie.com.zantetravel.activities.MainActivity.newFragment . show ( ft , "shownDialog" ) ; } 
@ java.lang.Override public void onHeadHit () { Gdx.app . log ( "Coin" , "Collision" ) ; if ( ( getCell () . getTile () . getId () ) == ( BLANK_COIN ) ) MarioBros.manager . get ( "audio/sounds/bump.wav" , com.badlogic.gdx.audio.Sound . class ) . play () ; else MarioBros.manager . get ( "audio/sounds/coin.wav" , com.badlogic.gdx.audio.Sound . class ) . play () ; getCell () . setTile ( com.mkemp.mariobros.Sprites.Coin.tileSet . getTile ( BLANK_COIN ) ) ; com.mkemp.mariobros.Scenes.Hud . addScore ( 100 ) ; } 
@ java.lang.Override public void onUpdate ( net.minecraft.item.ItemStack stack , net.minecraft.world.World world , net.minecraft.entity.Entity player , int slot , boolean isCurrent ) { if ( ( stack != null ) && ( ( stack . getTagCompound () ) != null ) ) { net.minecraft.nbt.NBTTagCompound nbt = stack . getTagCompound () ; if ( ( nbt . hasKey ( "IsOpenDummy" ) ) == true ) { nbt . removeTag ( "IsOpenDummy" ) ; } } } 
@ java.lang.Override public void dataUpdated ( java.lang.Integer i ) { float maxVolume = java.lang.Math . min ( dataManager . getGlobalMaxVolumeValue () , 1000 ) ; transferFunction . setMaxOrdinates ( new java.awt.geom.Point2D.Float ( dataManager . getGlobalMaxVolumeValue () , 1.0F ) ) ; float lowestDataPoint = dataManager . getGlobalLowestVolumeValue () ; transferFunction . resetColors () ; transferFunction . setColor ( new java.awt.geom.Point2D.Float ( ( ( maxVolume / ( dataManager . getGlobalMaxVolumeValue () ) ) * lowestDataPoint ) , 0.001F ) , transferFunction . getColors () . firstEntry () . getValue () ) ; } 
public void setAllGames ( modeling.GameList allGames ) { if ( ( allGames . getGames () . size () ) != 0 ) { this . allGames = allGames . getGames () ; if ( ( currGame ) != null ) { setCurrGame ( allGames . findGame ( currGame . getGameID () ) ) ; } setChanged () ; notifyObservers ( allGames ) ; } } 
public boolean isSatisfiedByBefore ( java.util.Date date ) { java.util.Calendar testDateCal = java.util.Calendar . getInstance ( getTimeZone () ) ; testDateCal . setTime ( date ) ; testDateCal . set ( java.util.Calendar.MILLISECOND , 0 ) ; java.util.Date originalDate = testDateCal . getTime () ; testDateCal . add ( java.util.Calendar.SECOND , 1 ) ; java.util.Date timeBefore = getTimeBefore ( testDateCal . getTime () ) ; return ( timeBefore != null ) && ( timeBefore . equals ( originalDate ) ) ; } 
private void UpdatePlayerTable () { playerTable . clearChildren () ; playerTable . add ( new io.github.teamfractal.actors.Label ( "List of Players for the Game" , this . game . skin ) ) ; playerTable . row () ; for ( int i = 0 ; i < ( newPlayerNames . size () ) ; i ++ ) { playerTable . add ( new io.github.teamfractal.actors.Label ( newPlayerNames . get ( i ) , this . game . skin ) ) ; playerTable . row () ; } } 
public void setTopic ( java.lang.String topic ) throws java.io.IOException { this . topic = topic ; for ( com.rbruno.irc.templates.Client current : clients ) current . getConnection () . send ( Reply.RPL_TOPIC , current , ( ( ( this . getName () ) + " " ) + ( this . getTopic () ) ) ) ; } 
protected void afterExecute ( java.lang.Runnable r , java.lang.Throwable t ) { try { org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent agent = ( ( org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent ) ( r ) ) ; org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.dataPublisherPool . release ( agent ) ; } catch ( java.lang.Exception e ) { org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log . error ( ( "Error while returning Throttle data publishing agent back to pool" + ( e . getMessage () ) ) ) ; } } 
private boolean pntInCircle ( double px , double py , double x1 , double y1 , double radius ) { double diffX = x1 - px ; double diffY = y1 - py ; double dist = ( diffX * diffX ) + ( diffY * diffY ) ; return dist < ( radius * radius ) ; } 
private void initializeParameters ( com.bow3n.controller.server.model.Task task ) { task . setFinished ( java.lang.Boolean.FALSE ) ; if ( ( ( task . getProject () ) != null ) && ( ( task . getProject () . getId () ) != null ) ) { task . setProject ( projectRepository . findOne ( task . getProject () . getId () ) ) ; } } 
public void setConsumptionValue ( int value , com.freedomotic.model.ds.Config params , boolean fireCommand ) { if ( fireCommand ) { com.freedomotic.things.impl.ElectricDevice.LOG . log ( java.util.logging.Level.WARNING , ( "Power consumption behavior of thing ''{0}''" + ( " is supposed to be a read only value. " + "No command is executed!" ) ) , this . getPojo () . getName () ) ; } consumption . setValue ( value ) ; setChanged ( true ) ; } 
public boolean allClientsAhead ( java.lang.Long workQueueHeadTime ) { synchronized ( lock ) { for ( net.grigoriadi.sc.domain.Client client : registeredClients ) { java.lang.Long time = lastItemTimesByClient . get ( client . getClientId () ) ; if ( ( time == null ) || ( workQueueHeadTime >= time ) ) { return false ; } } } return true ; } 
public int compare ( ScoredDocument doc1 , ScoredDocument doc2 ) { if ( ( doc1 . getScore () ) < ( doc2 . getScore () ) ) { return 1 ; } else if ( ( doc1 . getScore () ) > ( doc2 . getScore () ) ) { return - 1 ; } return 0 ; } 
@ java.lang.Override public org.apache.jmeter.report.processor.ResultData customizeResult ( org.apache.jmeter.report.processor.ResultData result ) { org.apache.jmeter.report.processor.MapResultData customizedResult = new org.apache.jmeter.report.processor.MapResultData () ; customizedResult . setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_RESULT , result ) ; if ( ( extraOptions ) != null ) { org.apache.jmeter.report.processor.MapResultData extraResult = new org.apache.jmeter.report.processor.MapResultData () ; for ( java.util.Map.Entry < java.lang.String , java.lang.String > extraEntry : extraOptions . getProperties () . entrySet () ) { extraResult . setResult ( extraEntry . getKey () , new org.apache.jmeter.report.processor.ValueResultData ( extraEntry . getValue () ) ) ; } customizedResult . setResult ( org.apache.jmeter.report.dashboard.HtmlTemplateExporter.DATA_CTX_EXTRA_OPTIONS , extraResult ) ; } return customizedResult ; } 
public void shutdown () { if ( ( bundleContext ) != null ) { try { bundleContext . getBundle ( 0 ) . stop () ; } catch ( org.osgi.framework.BundleException e ) { e . printStackTrace () ; } catch ( java.lang.NullPointerException e ) { java.lang.System . exit ( 0 ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
public void put ( java.util.Map < java.lang.String , java.lang.Object > event ) { if ( ( event != null ) && ( ( event . size () ) > 0 ) ) { long sequence = ringBuffer . next () ; try { com.dtstack.logstash.assembly.disruptor.MapEvent mapEvent = ringBuffer . get ( sequence ) ; mapEvent . setEvent ( event ) ; } finally { ringBuffer . publish ( sequence ) ; } } } 
public void eliminationTournament () { while ( ( players . size () ) > 1 ) { swissTournamentRunner.GUI . wipePane () ; shufflePlayers () ; sortRankings () ; updateParticipantStats () ; print ( displayInDepthRankings () ) ; generatePairings ( 0 ) ; pollForResults () ; elimination () ; } } 
public boolean validatePurchaseCategoryCode ( java.lang.String purchaseCategoryCode ) throws java.lang.Exception { boolean isvalid = false ; try { java.util.List < java.lang.String > validCategoris = apiDAO . getValidPurchaseCategories () ; if ( ( validCategoris . size () ) > 0 ) { for ( java.lang.String category : validCategoris ) { if ( category . equalsIgnoreCase ( purchaseCategoryCode ) ) { isvalid = true ; break; } } } } catch ( java.lang.Exception e ) { throw e ; } return isvalid ; } 
public org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk convertToMeasureColDataChunk ( int index ) { assert index < ( pagesCount ) ; if ( ( dataChunks ) == null ) { dataChunks = new org.apache.carbondata.core.datastore.chunk.MeasureColumnDataChunk [ pagesCount ] ; } try { if ( ( dataChunks [ index ] ) == null ) { dataChunks [ index ] = chunkReader . convertToMeasureChunk ( fileReader , blockId , rawData , offSet , length , index ) ; } } catch ( java.io.IOException e ) { throw new java.lang.RuntimeException ( e ) ; } return dataChunks [ index ] ; } 
@ java.lang.Override public synchronized boolean isOwnedBy ( java.lang.Thread t ) { if ( t == null ) { if ( ( ( this . currentOwner ) == null ) || ( ! ( this . currentOwner . isAlive () ) ) ) return true ; else return false ; } else if ( t . isAlive () ) { if ( ( this . currentOwner ) == t ) return true ; else return false ; } else return false ; } 
private java.util.List < java.lang.Integer > getNotCheckedList () { java.util.List < java.lang.Integer > result = new java.util.ArrayList <> () ; for ( java.util.Map.Entry < java.lang.Integer , java.lang.Boolean > checkedEntry : checkedMap . entrySet () ) { if ( ( checkedEntry . getValue () ) == false ) { result . add ( checkedEntry . getKey () ) ; } } return result ; } 
@ java.lang.Override public org.jcodec.common.MuxerTrack addVideoTrack ( org.jcodec.common.Codec codec , org.jcodec.common.VideoCodecMeta meta ) { org.jcodec.containers.mp4.muxer.FramesMP4MuxerTrack track = addTrack ( MP4TrackType.VIDEO , codec ) ; if ( ( meta == null ) && ( codec != ( org.jcodec.common.Codec.H264 ) ) ) { throw new java.lang.RuntimeException ( "VideoCodecMeta is required upfront for all codecs but H.264" ) ; } track . addVideoSampleEntry ( meta ) ; return track ; } 
public double [] mapSubstrateOutputsToStandardOutputs ( double [] outputs ) { double [] modifiedOutputs = new double [ numOutputs ] ; if ( ( numOutputs ) == ( edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.NUM_OUTPUTS_WITH_NO_ACTION ) ) { modifiedOutputs [ NOTHING_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_NOTHING_INDEX ] ; } modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.UP_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_UP_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.RIGHT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_RIGHT_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.DOWN_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_DOWN_INDEX ] ; modifiedOutputs [ edu.utexas.cs.nn.gridTorus.controllers.TorusPredPreyController.LEFT_INDEX ] = outputs [ edu.utexas.cs.nn.tasks.gridTorus.HyperNEATNNTorusPredPreyController.SUBSTRATE_LEFT_INDEX ] ; return modifiedOutputs ; } 
@ java.lang.Override public int hashCode () { final int prime = 31 ; int result = 1 ; result = ( prime * result ) + ( ( discordUserInfo ) == null ? 0 : discordUserInfo . hashCode () ) ; result = ( prime * result ) + ( ( kagName ) == null ? 0 : kagName . toLowerCase () . hashCode () ) ; return result ; } 
public synchronized void removeFromCursor ( com.gdo.stencils.StclContext stclContext , com.gdo.stencils.key.IKey key ) { com.gdo.stencils.plug.PStcl stcl = _stencils . get ( key ) ; _stencils . remove ( key ) ; _modified . remove ( key ) ; _locked . remove ( key ) ; if ( stcl != null ) {} } 
public po.GoodsModelPO set_signal_name ( vo.GoodsVO goods ) throws java.lang.Exception { java.util.HashMap < java.lang.String , po.GoodsModelPO > goodsModels = goodsListPO () . getGoodsModels () ; po.GoodsModelPO temp = goodsModels . get ( goods.id ) ; temp . setName ( goods.name ) ; if ( ( goods.amount ) < 0 ) { return null ; } temp . setSignal ( goods.amount ) ; return temp ; } 
@ org.bukkit.event.EventHandler @ java.lang.SuppressWarnings ( value = "unused" ) public void onPlayerJoin ( org.bukkit.event.player.PlayerJoinEvent ev ) { final org.bukkit.entity.Player p = ev . getPlayer () ; if ( ( p . hasPermission ( "multispawn.noteleport" ) ) || ( ( plugin . getSpawns ( p ) ) == null ) ) { return; } plugin . sendPlayerToSpawn ( p ) ; } 
@ org.testng.annotations.Test public void testUseIndexWithOr ( ) throws java.lang.Exception { long idxUsagesBefore = indexUsages ( db ) ; java.util.List < com.orientechnologies.orient.core.record.impl.ODocument > qResult = db . command ( new com.orientechnologies.orient.core.sql.OCommandSQL ( "select * from foo where bar = 2 or name ='a' and bar >= 0" ) ) . execute () ; assertEquals ( qResult . size () , 2 ) ; assertEquals ( indexUsages ( db ) , ( idxUsagesBefore + 2 ) ) ; } 
protected amidst.map.layers.EndCityLayer.ChunkProbability hasSuitableIslandFoundation ( amidst.map.Fragment_TheEnd frag , int chunkX , int chunkZ ) { amidst.map.layers.EndCityLayer.ChunkProbability result = amidst.map.layers.EndCityLayer.ChunkProbability.None ; float requiredInfluence = 60 ; java.util.List < amidst.map.EndIsland > islands = frag . getEndIslands () ; for ( amidst.map.EndIsland island : islands ) { float influence = island . influenceAtChunk ( chunkX , chunkZ ) ; if ( influence >= 0.0 ) { if ( influence >= requiredInfluence ) { result = amidst.map.layers.EndCityLayer.ChunkProbability.Likely ; break; } else { result = amidst.map.layers.EndCityLayer.ChunkProbability.Possible ; } } } return result ; } 
public static int getIndex ( edu.cmu.tetrad.graph.Endpoint endpoint ) { if ( endpoint == ( Endpoint.CIRCLE ) ) return 0 ; if ( endpoint == ( Endpoint.ARROW ) ) return 1 ; if ( endpoint == ( Endpoint.TAIL ) ) return 2 ; if ( endpoint == null ) return 3 ; throw new java.lang.IllegalArgumentException () ; } 
public static void setTeam ( java.lang.Integer team ) { if ( ( de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 ) != null ) { de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . destroy () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . destroy () ; } de.mickyjou.plugins.pvpevent.listener.player.EventTeam toSet = de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.teams . get ( team ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 0 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.firstNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 = new de.mickyjou.plugins.pvpevent.listener.player.NPC ( toSet . getPlayers () [ 1 ] . getUniqueId () , de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.secondNPC ) ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC1 . spawn () ; de.mickyjou.plugins.pvpevent.listener.player.SignInteractListener.currentNPC2 . spawn () ; } 
private void updateNotifyMenu ( boolean flag ) { if ( ( menu ) == null ) return; menu . clear () ; if ( ( cn.edu.jxnu.awesome_campus.MainActivity.presenter . getCurrentSelectedID () ) == ( DrawerItem.HOME . getId () ) ) { if ( flag ) { getMenuInflater () . inflate ( R.menu.menu_notify_unread , menu ) ; } else { getMenuInflater () . inflate ( R.menu.menu_notify_none , menu ) ; } } } 
@ java.lang.Override public net.minecraft.item.ItemStack getStack () { if ( ! ( ( this . inventory ) instanceof infiniteinvo.inventory.BigInventoryPlayer ) ) { return this . inventory . getStackInSlot ( this . slotIndex ) ; } else if ( ( ( ( infiniteinvo.inventory.BigInventoryPlayer ) ( this . inventory ) ) . getUnlockedSlots () ) > ( this . slotIndex ) ) { return this . inventory . getStackInSlot ( this . slotIndex ) ; } else { return lockedStack . copy () ; } } 
@ java.lang.Override public com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.Result visitDefCall ( com.jetbrains.jetpad.vclang.term.Abstract.DefCallExpression expr , com.jetbrains.jetpad.vclang.term.expr.type.Type expectedType ) { com.jetbrains.jetpad.vclang.term.expr.visitor.CheckTypeVisitor.PreResult result = myTypeCheckingDefCall . typeCheckDefCall ( expr ) ; if ( ( result == null ) || ( ! ( checkPath ( result , expr ) ) ) ) { return null ; } return checkResultImplicit ( expectedType , checkDefCall ( result , expr ) , expr ) ; } 
public static boolean setByteFile ( java.lang.String fileName , java.lang.String hex ) { if ( ( MockFTPServerJulia.fakeFtpServer . getFileSystem () ) == null ) { org.mockftpserver.fake.filesystem.FileSystem fileSystem = new org.mockftpserver.fake.filesystem.UnixFakeFileSystem () ; MockFTPServerJulia.fakeFtpServer . setFileSystem ( fileSystem ) ; } org.mockftpserver.fake.filesystem.FileEntry file = new org.mockftpserver.fake.filesystem.FileEntry ( fileName ) ; file . setContents ( MockFTPServerJulia . hexStringToByteArray ( hex ) ) ; MockFTPServerJulia.fakeFtpServer . getFileSystem () . add ( file ) ; return true ; } 
@ java.lang.Override public void Process () { setAirplaneState ( StateAirplane.LoadingPassagers ) ; enstabretagne.base.time.LogicalDuration t = enstabretagne.base.time.LogicalDuration . ofSeconds ( ( 20 * 60 ) ) ; Post ( new enstabretagne.SimEntity.airplane.Airplane.RollingToTrack () , getCurrentLogicalDate () . add ( t ) ) ; enstabretagne.base.utility.Logger . Information ( this . Owner () , "LoadingPassagers" , Messages.LoadingPassagers ) ; } 
private static java.util.List < Tile > createGameBoard ( final Board.Builder builder ) { final Tile [] tiles = new Tile [ BoardUtils.NUM_TILES ] ; for ( int i = 0 ; i < ( BoardUtils.NUM_TILES ) ; i ++ ) { tiles [ i ] = Tile . createTile ( i , builder.boardConfig . get ( i ) ) ; } return java.util.Arrays . asList ( tiles ) ; } 
private synchronized double semestrialCorrection ( final double param ) { final int debeq_pr = 59 ; final int debeq_au = 244 ; final double result ; if ( ( cachedDay ) >= 100 ) { final double xmult = ( ( cachedDay ) - debeq_au ) / 40.0 ; result = param - ( ( 2.0 * param ) * xmult ) ; } else { final double xmult = ( ( cachedDay ) - debeq_pr ) / 40.0 ; result = ( ( 2.0 * param ) * xmult ) - param ; } return result ; } 
@ java.lang.Override public boolean escribirObjeto ( java.lang.Object objeto ) { try { if ( ( outStream ) == null ) { if ( ( inStream ) != null ) { inStream . close () ; inStream = null ; } outStream = getOutStream ( archivo . exists () ) ; } outStream . writeObject ( objeto ) ; outStream . flush () ; return true ; } catch ( java.io.IOException e ) { return false ; } } 
protected com.sproutigy.libs.luceneplus.core.indices.LuceneIndex instantiate ( java.lang.String name ) throws java.io.IOException { com.sproutigy.libs.luceneplus.core.indices.LuceneIndex index = instantiated . get ( name ) ; if ( index == null ) { synchronized ( lock ) { index = instantiated . get ( name ) ; if ( index == null ) { index = prepareIndex ( name , provideDirectorySupplier ( name ) ) ; if ( isAutoOpen () ) { index . open () ; } onInstantiate ( index , name ) ; instantiated . put ( name , index ) ; } } } return index ; } 
private void SendFileContent ( java.net.Socket conn , java.io.InputStream fileIs ) throws java.io.IOException { java.io.OutputStream os = conn . getOutputStream () ; byte [] b = new byte [ 1024 ] ; int x = fileIs . read ( b ) ; while ( x != ( - 1 ) ) { if ( x < 1024 ) { b = java.util.Arrays . copyOf ( b , x ) ; } os . write ( b ) ; x = fileIs . read ( b ) ; } } 
public void Is_Valid_Person_Name ( android.widget.EditText edt ) throws java.lang.NumberFormatException { if ( ( edt . getText () . toString () . length () ) <= 0 ) { valid_name = null ; } else if ( ! ( edt . getText () . toString () . matches ( "[a-zA-Z ]+" ) ) ) { valid_name = null ; } else { valid_name = edt . getText () . toString () ; } } 
private void extendProgram () { notNullVariables . set ( 0 ) ; insertAdditionalVariables () ; org.teavm.model.Variable [] parameters = new org.teavm.model.Variable [ ( methodDescriptor . parameterCount () ) + 1 ] ; for ( int i = 0 ; i < ( parameters.length ) ; ++ i ) { parameters [ i ] = program . variableAt ( i ) ; } phiUpdater = new org.teavm.model.util.PhiUpdater () ; phiUpdater . updatePhis ( program , parameters ) ; collectAdditionalVariables () ; } 
public void add ( cque.INodePool pool , E e ) { assert e != null ; cque.Node < E > n = getNode ( pool , e ) ; if ( ( tail ) == null ) { assert ( head ) == null ; head = n ; tail = n ; return; } tail . setNext ( n ) ; tail = n ; } 
public int getTotalPoints () { int points = 0 ; for ( int i = 0 ; i < ( this . cards . size () ) ; i ++ ) { points += this . cards . get ( i ) . getPoints () ; } return points ; } 
@ java.lang.Override public void dispose () { if ( ( timer ) != null ) timer . stop () ; byte option = ( ( byte ) ( javax.swing.JOptionPane . showConfirmDialog ( this , "Exit all programs?" , "Exit Confirmation" , javax.swing.JOptionPane.YES_NO_CANCEL_OPTION ) ) ) ; if ( option == ( javax.swing.JOptionPane.YES_OPTION ) ) { java.lang.System . exit ( 0 ) ; } else if ( option == ( javax.swing.JOptionPane.NO_OPTION ) ) { super . dispose () ; } } 
public final void backup ( java.lang.String extension ) throws java.io.IOException { javi.FileDescriptor.LocalFile file2 = FileDescriptor.LocalFile . make ( ( ( prop.fdes.shortName ) + extension ) ) ; if ( ( ! ( prop.fdes . canWrite () ) ) && ( "Microsoft Corp." . equals ( java.lang.System . getProperty ( "java.vendor" ) ) ) ) history.Tools . execute ( null , ( "d:\\cygwin\\bin\\chmod +w " + ( prop.fdes.canonName ) ) ) ; prop.fdes . renameTo ( file2 ) ; prop.fdes . writeAll ( getStringIter () , prop . getSeperator () ) ; setReadOnly ( false ) ; } 
public boolean updateStorageLocation ( android.content.Context ctx , java.lang.String mount ) { if ( ( mount == null ) || ( mount . equals ( "" ) ) ) { return updateStorageLocation ( ctx ) ; } java.lang.String currentLocation = this . getStorageLocation ( ctx ) ; if ( currentLocation . startsWith ( mount ) ) { return true ; } java.lang.String location = mount + ( org.digitalcampus.oppia.utils.storage.ExternalStorageStrategy . getInternalBasePath ( ctx ) ) ; updateLocationPreference ( ctx , location ) ; return true ; } 
private boolean assertContiguous ( gnu.trove.list.TIntList list ) { if ( ( list . size () ) < 2 ) { return true ; } int prev = list . get ( 0 ) ; for ( int i = 1 ; i < ( list . size () ) ; ++ i ) { int v = list . get ( i ) ; if ( v == ( prev + 1 ) ) { prev = v ; continue; } return false ; } return true ; } 
private void setPortraitAspectRatio () { double param = ( ( double ) ( mDisplayMetrics.widthPixels ) ) / ( ( double ) ( mDisplayMetrics.heightPixels ) ) ; for ( com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes size : com.beautiful_wallpapers_hd_qhd.activity.CropImageActivity.ImageSizes . values () ) { if ( ( param > ( ( size . getRatio () ) - 0.01 ) ) && ( param < ( ( size . getRatio () ) + 0.01 ) ) ) { setAspectRatio ( size . getWidth () , size . getHeight () ) ; break; } } } 
@ javafx.fxml.FXML public void onGroundedClick () { interactor . emptyQueue () ; logic.Extension grounded = argumentFramework . getGroundedExtension ( previousCheckBox . isSelected () ) ; if ( grounded != null ) { java.lang.System.out . println ( ( ( "{" + ( grounded . getArgumentNames () ) ) + "}" ) ) ; } setUI () ; } 
public static java.lang.Object getReflectedField ( java.lang.String fieldName , main.java.HashTable instance ) throws test.java.HashTableTests.HashTableUtilException { java.lang.Class hashTableClass = instance . getClass () ; try { java.lang.reflect.Field field = hashTableClass . getDeclaredField ( fieldName ) ; field . setAccessible ( true ) ; return field . get ( instance ) ; } catch ( java.lang.NoSuchFieldException | java.lang.IllegalAccessException e ) { throw new test.java.HashTableTests.HashTableUtilException ( ( "Failed to retrieve " + fieldName ) ) ; } } 
private boolean playerIsLastToClose ( int number ) { for ( spare.n52.yadarts.entity.Player p : this . cricketScores . keySet () ) { spare.n52.yadarts.games.cricket.CricketScore s = this . cricketScores . get ( p ) ; if ( ( p != ( this . currentPlayer ) ) && ( ! ( s . playerHasOpened ( number ) ) ) ) { return false ; } } return true ; } 
@ java.lang.SuppressWarnings ( value = "deprecation" ) @ java.lang.Override protected void onResume () { super . onResume () ; android.util.Log . i ( "GameActivity" , "onResume" ) ; if ( ! ( mIsResumed ) ) { mIsResumed = true ; tryRunning () ; if ( ( mSensorController ) != null ) { mSensorController . onResume () ; } mGameSidebar . setBackgroundDrawable ( new paulscode.android.mupen64plusae.DrawerDrawable ( mGlobalPrefs.displayActionBarTransparency ) ) ; mMogaController . onResume () ; } } 
public void updateDefStats ( boolean pic , boolean tackle , boolean loss , boolean fumblerec , boolean forcedfum , boolean sack , boolean td ) { if ( pic ) ( pics ) ++ ; if ( tackle ) ( tackles ) ++ ; if ( tackle && loss ) ( tfls ) ++ ; if ( fumblerec ) ( fumblerecs ) ++ ; if ( sack ) ( sacks ) ++ ; if ( td ) ( deftds ) ++ ; if ( forcedfum ) ( forcedfums ) ++ ; } 
public static void main ( java.lang.String [] args ) throws java.io.FileNotFoundException { emotion.Emotion emotion = new emotion.Emotion () ; java.util.List < java.lang.String > codes = emotion . getCodes () ; for ( java.lang.String str : codes ) { try { java.lang.String html = emotion . html ( ( ( ( com.nju.util.Constant.EMOTION_URL ) + str ) + "/index.htm" ) ) ; emotion . parseDoc ( emotion . document ( html ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } } 
static org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier getRootInstanceIdentifier ( final java.lang.Class type ) { try { return org.opendaylight.yangtools.yang.data.api.YangInstanceIdentifier . of ( org.opendaylight.yangtools.yang.common.QName . class . cast ( type . getField ( "QNAME" ) . get ( null ) ) ) ; } catch ( java.lang.IllegalAccessException e ) { throw new java.lang.IllegalStateException ( ( "Constant QNAME not accessible for type" + type ) , e ) ; } catch ( java.lang.NoSuchFieldException e ) { throw new java.lang.IllegalStateException ( ( ( "Class " + type ) + " does not have QName defined" ) , e ) ; } } 
@ java.lang.Override public void onDataChange ( com.firebase.client.DataSnapshot dataSnapshot ) { for ( com.firebase.client.DataSnapshot child : dataSnapshot . getChildren () ) { email = ( ( java.lang.String ) ( child . child ( "email" ) . getValue () ) ) ; java.lang.System.out . println ( ( "email:" + ( email ) ) ) ; if ( userId . equals ( myRef . getAuth () . getUid () ) ) { groupid . add ( email ) ; inGroup = true ; } members . add ( email ) ; } } 
public static int [] generateDescending ( int size ) { int [] tab = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { tab [ i ] = size - i ; } return tab ; } 
@ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String message = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( message . length () ) > 0 ) { conversation . add ( message ) ; } else { java.lang.System.out . println ( "ERROR: Messages must contain text" ) ; } } 
private boolean canDelete ( java.util.List < org.eclipse.core.resources.IResource > resources ) { if ( ! ( ( containsOnlyProjects ( resources ) ) || ( containsOnlyNonProjects ( resources ) ) ) ) { return false ; } if ( resources . isEmpty () ) { return false ; } for ( int i = 0 ; i < ( resources . size () ) ; i ++ ) { org.eclipse.core.resources.IResource resource = resources . get ( i ) ; if ( resource . isPhantom () ) { return false ; } } return true ; } 
public static void releaseBatches ( org.apache.drill.exec.record.RecordBatch incoming ) { if ( incoming instanceof org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) { incoming = ( ( org.apache.drill.exec.physical.impl.validate.IteratorValidatorBatchIterator ) ( incoming ) ) . getIncoming () ; } if ( incoming instanceof org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) { org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch esb = ( ( org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch ) ( incoming ) ) ; if ( ( esb.resultsIterator ) != null ) { esb.resultsIterator . close () ; esb.resultsIterator = null ; } } } 
@ java.lang.Override public void onClick ( android.view.View view ) { enterClear ( enterPressed ) ; if ( textview . getText () . equals ( "" ) ) { textview . setText ( ( ( ans ) + "+" ) ) ; } else if ( ! ( isOperator ( textview . getText () . toString () ) ) ) { textview . append ( "+" ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == null ) return false ; if ( obj == ( this ) ) return true ; if ( ( obj . getClass () ) == ( this . getClass () ) ) { return ( this . id ) == ( ( ( Person ) ( obj ) ) . getId () ) ; } return false ; } 
public void sendPacket ( org.mcexchange.Packet p ) { try { byte id = org.mcexchange.Packet . getId ( p ) ; out . writeByte ( id ) ; p . write ( out ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } catch ( java.lang.NullPointerException e ) { java.lang.System.err . println ( ( ( "Tried to send an unregistered packet to Client " + ( this ) ) + "!" ) ) ; disconnect () ; } } 
@ java.lang.Override public boolean hasTop () { return ( ( numRejects ) != ( - 1 ) ) && ( ( ( ( ( numRejects ) >= ( edu.mit.ll.graphulo.skvi.RemoteWriteIterator.REJECT_FAILURE_THRESHOLD ) ) || ( rowRangeIterator . hasNext () ) ) || ( ( entriesWritten ) > 0 ) ) || ( reducer . hasTopForClient () ) ) ; } 
private void updateLocation ( android.location.Location location ) { mCurrentLocation = location ; double latitude = mCurrentLocation . getLatitude () ; double longitude = mCurrentLocation . getLongitude () ; stationManager . updateLocation ( latitude , longitude ) ; route = stationManager . updateNexttation ( route ) ; setRouteTravel () ; binding.estimateTime . setText ( ( ( ( ( "ถึงสถานี" + ( desName ) ) + " ในอีก " ) + ( stationManager . updateTimeToArrive () ) ) + " นาที" ) ) ; } 
@ javax.annotation.Nullable @ java.lang.Override @ java.lang.SuppressWarnings ( value = "unchecked" ) public java.lang.Object getTransferLocation ( @ javax.annotation.Nonnull java.lang.Object object , @ javax.annotation.Nonnull java.lang.String key ) { com.google.common.collect.Multimap < java.lang.Class < ? > , org.squiddev.plethora.api.transfer.ITransferProvider < ? > > map = primary ; java.lang.String [] parts = key . split ( "\\." ) ; for ( java.lang.String part : parts ) { java.lang.Object next = getTransferPart ( object , part , map ) ; if ( next == null ) { return null ; } else { object = next ; map = secondary ; } } return object ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { switch ( requestCode ) { case net.lorenzobianconi.wwatcher.WWatcher.REQ_ENABLE_BT : btEnabled = resultCode == ( RESULT_OK ) ; configureButton ( btEnabled , false ) ; break; case net.lorenzobianconi.wwatcher.WWatcher.REQ_PICK_DEV : if ( data != null ) { java.lang.String addr = data . getExtras () . getString ( "device" ) ; android.bluetooth.BluetoothDevice device = inqMap . get ( addr ) ; new net.lorenzobianconi.wwatcher.WWatcher.BtConnect () . execute ( device ) ; } break; default: break; } } 
private java.lang.String getSystemName ( java.lang.String systemID ) { java.lang.String systemName = null ; java.lang.String message = "Enter the name for " + systemID ; systemName = javax.swing.JOptionPane . showInputDialog ( null , message ) ; EFBOUserInterfaceManager.progressBar . setValue ( 10 ) ; java.lang.System.out . println ( ( "System ID: " + systemID ) ) ; java.lang.System.out . println ( ( "Name : " + systemName ) ) ; return systemName ; } 
protected void shiftRight ( int index ) { if ( isFull () ) throw new java.lang.IllegalStateException ( "Le tableau est plein" ) ; else if ( isEmpty () ) { return; } else if ( index > ( lastIndex ) ) { return; } else { for ( int i = lastIndex ; i >= index ; i -- ) { myList [ ( i + 1 ) ] = myList [ i ] ; } } } 
public static int next ( int digit , int size ) { int nextVal = 0 ; while ( odometer.Odometer . isValid ( digit , size ) ) { nextVal = digit ++ ; if ( ( ( digit % 10 ) ^ ( size + 1 ) ) == 1 ) { nextVal = 1 ; } } return nextVal ; } 
public void test_139_ACLNotReadOtherGuidFieldTest ( edu.umass.cs.gnsclient.client.util.GuidEntry westyEntry , edu.umass.cs.gnsclient.client.util.GuidEntry samEntry ) { try { try { java.lang.String result = edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest.client . fieldRead ( westyEntry . getGuid () , "environment" , samEntry ) ; edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( ( "Result of read of westy's environment by sam is " + result ) + " which is wrong because it should have been rejected." ) ) ; } catch ( edu.umass.cs.gnscommon.exceptions.client.ClientException e ) {} } catch ( java.lang.Exception e ) { edu.umass.cs.gnsclient.client.integrationtests.ServerIntegrationTest . failWithStackTrace ( ( "Exception while reading fields in ACLNotReadOtherGuidFieldTest: " + e ) ) ; } } 
@ java.lang.Override public void render ( java.awt.Graphics g ) { if ( ( ( this . width ) == 30 ) && ( ( this . height ) == 30 ) ) { g . setColor ( java.awt.Color.RED ) ; g . drawRect ( x , y , width , height ) ; } else { g . setColor ( java.awt.Color.RED ) ; g . drawRect ( x , y , width , height ) ; } } 
void encodeAndReply ( org.kaaproject.kaa.server.operations.service.akka.messages.io.response.SessionResponse message ) { try { sessionResponseMeter . mark () ; if ( ( message . getError () ) == null ) { processSessionResponse ( message ) ; } else { processErrors ( message . getChannelContext () , message . getErrorBuilder () , message . getError () ) ; } } catch ( java.lang.Exception e ) { processErrors ( message . getChannelContext () , message . getErrorBuilder () , e ) ; } } 
private java.lang.String [] arrayListToArray ( java.util.ArrayList < java.lang.String > needingConversion ) { int count = needingConversion . size () ; java.lang.String [] converted = new java.lang.String [ count ] ; for ( int i = 0 ; i < count ; i ++ ) { converted [ i ] = needingConversion . get ( i ) ; } return converted ; } 
public void removeAndFail ( java.lang.Throwable cause ) { assert ctx . executor () . inEventLoop () ; if ( cause == null ) { throw new java.lang.NullPointerException ( "cause" ) ; } io.netty.channel.PendingWriteQueue.PendingWrite write = head ; if ( write == null ) { return; } io.netty.util.ReferenceCountUtil . safeRelease ( write.msg ) ; io.netty.channel.ChannelPromise promise = write.promise ; io.netty.channel.PendingWriteQueue . safeFail ( promise , cause ) ; recycle ( write , true ) ; } 
private void findHrefs () { java.util.regex.Matcher matcher = hrefPattern . matcher ( Html ) ; java.lang.String link = "" ; while ( matcher . find () ) { link = matcher . group ( 1 ) ; if ( ( ( ! ( Suspectedlinks . contains ( link ) ) ) && ( ! ( CrawlerHandler . CheckIfUrlBeenCrawled ( link ) ) ) ) && ( isValidDomain ( link ) ) ) { Suspectedlinks . add ( link ) ; } } } 
@ java.lang.Override public boolean closeWindow ( uniol.aptgui.mainwindow.WindowId id ) { if ( id . getType () . isEditorWindow () ) { uniol.aptgui.editor.document.Document < ? > doc = getDocument ( id ) ; if ( ( doc . hasUnsavedChanges () ) && ( askSaveDocument ( id , getDocument ( id ) ) ) ) { return false ; } } if ( ( activeWindow ) == id ) { activeWindow = null ; } mainWindow . removeWindow ( id ) ; documents . remove ( id ) ; return true ; } 
public java.util.Optional < java.nio.file.Path > findIn ( java.util.List < java.nio.file.Path > directories ) { java.nio.file.Path file = java.nio.file.Paths . get ( link . get () ) ; if ( ( file . isAbsolute () ) || ( directories . isEmpty () ) ) { return java.util.Optional . of ( file ) ; } else { return org.jabref.model.util.FileHelper . expandFilenameAsPath ( link . get () , directories ) ; } } 
public void onBlockDialogInitialize () { int phoneId = getActivePhoneId () ; com.android.incallui.Log . d ( this , ( ( ( "onBlock mCallId:" + ( mCallId ) ) + "phoneId:" ) + phoneId ) ) ; if ( phoneId == ( - 1 ) ) { return; } com.android.incallui.Call call = mCall [ phoneId ] ; final java.lang.String number = call . getNumber () ; final android.content.Context context = getUi () . getContext () ; mBlockContactHelper = new com.android.contacts.common.util.BlockContactHelper ( context ) ; mBlockContactHelper . setContactInfo ( number ) ; } 
@ java.lang.Override public void onSuccess ( com.google.common.base.Optional < org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options > result ) { if ( result . isPresent () ) { org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.fabric.attributes.Options opt = result . get () ; org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior behavior = opt . getTrafficBehavior () ; ctx . setTrafficBehavior ( ( behavior == null ? org.opendaylight.yang.gen.v1.urn.opendaylight.faas.fabric.rev150930.FabricOptions.TrafficBehavior.Normal : behavior ) ) ; } else { ctx . setTrafficBehavior ( TrafficBehavior.Normal ) ; } openflow13Provider . updateTrafficBehavior ( ctx . getDpid () , ctx . getTrafficBehavior () , true ) ; } 
protected long getNumberRecursion ( long n ) { int sum = 0 ; if ( n == 0 ) return 1 ; else if ( n == 1 ) return 0 ; else if ( n == 2 ) return 1 ; for ( int k = 1 ; k <= n ; k ++ ) { sum += ( sequenceGeneratorA008472 . getNumber ( k ) ) * ( getNumberRecursion ( ( n - k ) ) ) ; } return sum / n ; } 
@ controllers.Transactional public static models.UserImpl fetchUser ( java.lang.String username ) { javax.persistence.EntityManager em = play.db.jpa.JPA . em () ; if ( ( em . find ( models.UserImpl . class , username ) ) == null ) { java.lang.System.out . println ( "ERROR NULL" ) ; return null ; } return em . find ( models.UserImpl . class , username ) ; } 
private void settleHeader () { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) && ( ( currentHeader . getTag () ) != null ) ) { currentHeader . setTag ( null ) ; currentHeader . animate () . z ( 0 ) ; } } 
public static < T > boolean noneOf ( final java.lang.Iterable < T > source , final int begin , final int end , java.util.function.Predicate < T > pred ) { final java.util.Iterator < T > iter = getIteratorAtIndex ( source , begin ) ; for ( int i = begin ; i != end ; ++ i ) { assert iter . hasNext () ; if ( pred . test ( iter . next () ) ) { return false ; } } return true ; } 
private void setUserType ( org.trakhound.www.trakhound.device_list.ListAdapter.ViewHolder holder ) { if ( ( holder.SelectionArrow ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) > 0 ) ) holder.SelectionArrow . setVisibility ( View.VISIBLE ) ; else holder.SelectionArrow . setVisibility ( View.GONE ) ; } if ( ( holder.OeeLayout ) != null ) { if ( ( ( org.trakhound.www.trakhound.MyApplication.User ) != null ) && ( ( MyApplication.User.type ) > 0 ) ) holder.OeeLayout . setVisibility ( View.VISIBLE ) ; else holder.OeeLayout . setVisibility ( View.GONE ) ; } } 
public org.jsoup.select.Elements parse ( org.jsoup.select.Elements r ) { if ( r != null ) { results = r . select ( " tr.productListing-odd" ) ; resultsEven = r . select ( " tr.productListing-even" ) ; for ( int j = 0 ; j < ( resultsEven . size () ) ; j ++ ) { results . add ( resultsEven . get ( j ) ) ; } java.lang.System.out . println ( ( ( results . size () ) + " Results have been returned from CanadaComputers." ) ) ; return results ; } else { return null ; } } 
@ java.lang.Override public void onDisable () { if ( ( npcm ) != null ) { for ( net.techcable.npclib.NPC npc : npcm . getNPCs () ) { java.util.UUID uuid = npcm . getNPCIdFromEntity ( npc . getEntity () ) ; despawnNPC ( uuid , NpcDespawnReason.PLUGIN_DISABLED ) ; if ( isDebugEnabled () ) { com.trc202.CombatTag.CombatTag.log . info ( ( "[CombatTag] Disabling npc with ID of: " + uuid ) ) ; } } } com.trc202.CombatTag.CombatTag.log . info ( "[CombatTag] Disabled" ) ; } 
@ java.lang.Override public void doCommand ( java.lang.String [] args ) { if ( ( args.length ) != 1 ) { view . printErrorMessage ( new java.lang.String [] { "Arguments Error" , "Please enter Directory location" } ) ; return; } java.lang.String paths = args [ 0 ] ; java.io.File folderPath = null ; java.lang.String [] filelist ; try { folderPath = new java.io.File ( paths ) ; filelist = folderPath . list () ; view . printAnswers ( filelist ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } 
public java.util.HashSet < Tile > getKnownBombs () { java.util.HashSet < Tile > s = new java.util.HashSet < Tile > () ; if ( ( config_list . size () ) == 0 ) return s ; else { s = new java.util.HashSet < Tile > ( config_list . get ( 0 ) ) ; for ( java.util.HashSet < Tile > h : config_list ) { s . retainAll ( h ) ; } } return s ; } 
void addTunesToTuneListScreen ( java.util.ArrayList < java.lang.String > tuneNamesArray ) { if ( ( ( tuneLinks . size () ) < 1 ) && ( ( recursions ) < 5 ) ) { searchForTunes ( "remote" ) ; ( recursions ) ++ ; return; } android.content.Intent i = new android.content.Intent ( getApplicationContext () , com.company.rorywalsh.folkthis.TuneListScreen . class ) ; i . putExtra ( "location" , fileLocation ) ; i . putStringArrayListExtra ( "tuneNames" , tuneNamesArray ) ; i . putStringArrayListExtra ( "tuneLinks" , tuneLinks ) ; startActivity ( i ) ; } 
@ java.lang.Override public void removeGroups ( org.bukkit.entity.Player player , java.lang.String world ) { if ( plugin.config . isDefaultrankallworlds () ) { world = null ; } if ( ( plugin.config . permissionpluginhasworldsupport () ) == false ) { world = null ; } java.lang.String [] list = net.slipcor.classranks.handlers.HandleVaultPerms.permission . getPlayerGroups ( world , player ) ; if ( list != null ) { for ( java.lang.String sRank : list ) { net.slipcor.classranks.handlers.HandleVaultPerms.permission . playerRemoveGroup ( world , player , sRank ) ; } } } 
@ javafx.fxml.FXML void testServerConnection () { if ( debug ) log . info ( ( "Testing connection to server on address: " + ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) ) ) ; java.lang.String alertMessage ; if ( ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) != null ) { return; } else { alertMessage = ( "Address " + ( com.client.gui.interfaceControllers.LobbyController.serverAddress ) ) + ",that you entered, is invalid! Please enter valid IPv4 address." ; showAlert ( javafx.scene.control.Alert.AlertType.ERROR , "Invalid IP address!" , alertMessage ) ; } } 
private eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType calculateMessageValidationStatus ( eu.europa.ec.fisheries.uvms.rules.model.dto.ValidationResultDto validationResult ) { if ( validationResult != null ) { if ( validationResult . isError () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.FAILED ; } else if ( validationResult . isWarning () ) { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL_WITH_WARNINGS ; } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.SUCCESSFUL ; } } else { return eu.europa.ec.fisheries.schema.exchange.v1.ExchangeLogStatusTypeType.UNKNOWN ; } } 
@ org.junit.Test public void testGetErrorMessage_multipleErrors () { java.util.List < com.isroot.stash.plugin.errors.YaccError > errors = new java.util.ArrayList <> () ; errors . add ( new com.isroot.stash.plugin.errors.YaccError ( "commit error" ) ) ; errors . add ( new com.isroot.stash.plugin.errors.YaccError ( "another error" ) ) ; java.lang.String message = yaccErrorBuilder . getErrorMessage ( errors ) ; org.assertj.core.api.Assertions . assertThat ( message ) . isEqualTo ( ( ( ( ( ( ( "\n" + ( com.isroot.stash.plugin.errors.YaccErrorBuilder.ERROR_BEARS ) ) + "\n\n" ) + "commit error\n" ) + "\n" ) + "another error\n" ) + "\n" ) ) ; } 
public static com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest createInstance ( java.lang.String secretKey ) { if ( secretKey == null ) { return null ; } try { return new com.xeiam.xchange.coinbaseex.service.CoinbaseExDigest ( si.mazi.rescu.utils.Base64 . decode ( secretKey ) ) ; } catch ( java.io.IOException e ) { throw new com.xeiam.xchange.exceptions.ExchangeException ( "Cannot decode secret key" ) ; } } 
private void checkValue ( ) throws jjcron.polankam.ms.mff.cuni.cz.FormatException { switch ( unit.valueType ) { case ASTERISK : break; case PERIOD : isValueValid ( unit.values . get ( 0 ) ) ; if ( ( ( unit.values . get ( 0 ) ) == 0 ) || ( ( ( maxValue ) % ( unit.values . get ( 0 ) ) ) != 0 ) ) { throw new jjcron.polankam.ms.mff.cuni.cz.FormatException ( "GeneralUnit period value is not divisible" ) ; } break; case LIST : for ( java.lang.Integer number : unit.values ) { isValueValid ( number ) ; } break; } } 
@ java.lang.Override public synchronized void shutdown () { while ( clientHandlerAdapter . isConnected () ) { clientHandlerAdapter . shutdown () ; } workerGroup . shutdownGracefully () ; while ( ( ( tunnelHandler ) != null ) && ( tunnelHandler . isConnected () ) ) { tunnelHandler . shutdown () ; } } 
private int findHistoryRecord ( java.lang.String placeId ) { for ( int i = 0 ; i < ( HISTORY_SIZE ) ; ++ i ) { com.github.stephenbaidu.placepicker.PlaceInfo placeInfo = getHistoryRecord ( ( i + 1 ) ) ; if ( placeInfo == null ) return 0 ; if ( ( placeInfo.placeId ) == placeId ) { return i + 1 ; } } return 0 ; } 
public static java.lang.String getProductPathFile ( java.lang.String productId , java.lang.String productName ) { java.lang.String path = ( ( ( ( ( com.tana.utilities.VariableUtility . getCurrentDir () ) + ( com.tana.utilities.VariableUtility.IMG_PATH_PRODUCTS ) ) + productId ) + "_" ) + ( productName . trim () ) ) + "/" ; com.tana.utilities.VariableUtility.LOGGER . info ( ( "Get product path file : " + path ) ) ; return path ; } 
private java.util.List < com.netcracker.entity.helper.TaxiOrderHistory > getHistory ( java.lang.Integer pageNumber , javax.servlet.http.HttpServletRequest req ) { com.netcracker.ejb.TaxiOrderBeanLocal taxiOrderBeanLocal = getTaxiOrderBean ( req ) ; java.util.List < com.netcracker.entity.helper.TaxiOrderHistory > list = taxiOrderBeanLocal . getTaxiOrderHistory ( pageNumber , com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize , findCurrentUser () ) ; if ( ( ( list . size () ) == 0 ) && ( pageNumber > 1 ) ) { pageNumber -- ; getServletContext () . setAttribute ( "pageNumber" , pageNumber ) ; list = taxiOrderBeanLocal . getTaxiOrderHistory ( pageNumber , com.netcracker.tss.web.servlet.customer.CustomerOrderTaxiHistoryServlet.pageSize , findCurrentUser () ) ; } return list ; } 
public boolean isSet ( lk.filetributed.client.rpc.services.services.joinRequest_args._Fields field ) { if ( field == null ) { throw new java.lang.IllegalArgumentException () ; } switch ( field ) { case IP_ADDRESS : return isSetIpAddress () ; case PORT : return isSetPort () ; } throw new java.lang.IllegalStateException () ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public void enqueue ( java.lang.Object element ) { int s = size () ; if ( s == ( ( n ) - 1 ) ) resize () ; queueArray [ ( ( rear ) ++ ) ] = ( ( T ) ( element ) ) ; if ( ( rear ) == ( n ) ) rear = 0 ; } 
@ java.lang.Override public void actionPerformed ( java.awt.event.ActionEvent e ) { java.lang.Object src = e . getSource () ; if ( src == ( begin ) ) l = new Brain.TemporalLobe.Locked ( "LOCKED" , c ) ; else if ( src == ( back ) ) c . changePanel ( "3" ) ; } 
@ java.lang.Override public boolean contains ( java.lang.String s ) { if ( ( _value ) != null ) { int compr = s . compareTo ( _value ) ; if ( compr == 0 ) return true ; else if ( ( compr < 0 ) && ( ( _left ) != null ) ) return _left . contains ( s ) ; else if ( ( compr > 0 ) && ( ( _right ) != null ) ) return _right . contains ( s ) ; } return false ; } 
protected int addView ( com.tonicartos.superslim.LayoutState.View child , int position , com.tonicartos.superslim.LayoutManager.Direction direction , com.tonicartos.superslim.LayoutState state ) { int addIndex ; if ( direction == ( LayoutManager.Direction.START ) ) { addIndex = 0 ; } else { addIndex = mLayoutManager . getChildCount () ; } state . decacheView ( position ) ; mLayoutManager . addView ( child.view , addIndex ) ; return addIndex ; } 
private void writeVariableCopy ( wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableAccess > loc ) { wyil.lang.SyntaxTree.Location < wyil.lang.Bytecode.VariableDeclaration > vd = getVariableDeclaration ( loc . getOperand ( 0 ) ) ; if ( isCopyable ( vd . getType () , loc ) ) { out . print ( vd . getBytecode () . getName () ) ; } else { out . print ( ( ( "wyjs.copy(" + ( vd . getBytecode () . getName () ) ) + ")" ) ) ; } } 
public void normatizarComponentes () { this . corredor . setTransform ( this . corredor . getPosition () , ( ( this . normatizador . normatizar ( getAnguloCorredor_Graus () ) ) * ( com.badlogic.gdx.math.MathUtils.degreesToRadians ) ) ) ; this . anguloCalculado = this . normatizador . normatizar ( this . anguloCalculado ) ; } 
@ java.lang.Override public void writeBuffer ( java.nio.ByteBuffer byteBuffer , int offset , int length ) { if ( byteBuffer . hasArray () ) { writeBytes ( byteBuffer . array () , offset , length ) ; } else { for ( int pos = offset ; pos < ( offset + length ) ; pos ++ ) { writeByte ( byteBuffer . get ( pos ) ) ; } } } 
@ java.lang.Override public cpw.mods.fml.common.network.simpleimpl.IMessage onMessage ( shedar.mods.ic2.nuclearcontrol.network.message.PacketServerUpdate message , cpw.mods.fml.common.network.simpleimpl.MessageContext ctx ) { net.minecraft.item.ItemStack stack = message.itemstack ; if ( ( stack != null ) && ( ( stack . getItem () ) instanceof shedar.mods.ic2.nuclearcontrol.items.ItemCardBase ) ) { shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl helper = new shedar.mods.ic2.nuclearcontrol.panel.CardWrapperImpl ( stack , 0 ) ; shedar.mods.ic2.nuclearcontrol.api.CardState state = ( ( shedar.mods.ic2.nuclearcontrol.api.IPanelDataSource ) ( stack . getItem () ) ) . update ( ContainerRemoteMonitor.panel , helper , 100 ) ; return new shedar.mods.ic2.nuclearcontrol.network.message.PacketClientRemoteMonitor ( helper . getUpdateSet () ) ; } return null ; } 
private void setupViews () { fragmentList = ( ( org.distantshoresmedia.wifiDirect.DeviceListFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.frag_list ) ) ) ; fragmentDetails = ( ( org.distantshoresmedia.wifiDirect.DeviceDetailFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.frag_detail ) ) ) ; if ( ( selectedUri ) == null ) { android.view.View view = findViewById ( R.id.device_detail_fragment_base_view ) ; if ( view != null ) { view . setVisibility ( View.GONE ) ; } } } 
@ java.lang.Override public void onResume () { super . onResume () ; if ( ( toolbar ) == null ) { toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.basic_toolbar_layout ) ) ) ; setSupportActionBar ( toolbar ) ; android.support.v7.app.ActionBar bar = getSupportActionBar () ; if ( bar != null ) { bar . setDisplayOptions ( ActionBar.DISPLAY_SHOW_CUSTOM ) ; bar . setCustomView ( R.layout.custom_action_bar ) ; bar . setDisplayHomeAsUpEnabled ( true ) ; } } displayCurrentStep () ; } 
public void updateUI () { int prevBtnVisibility = android.view.View.VISIBLE ; int nextBtnVisibility = android.view.View.VISIBLE ; if ( ( itemIndex ) == 0 ) { prevBtnVisibility = android.view.View.INVISIBLE ; } if ( ( itemIndex ) == ( ( shareClipExperience . getChildrenContents () . size () ) - 1 ) ) { nextBtnVisibility = android.view.View.INVISIBLE ; } prevClipButton . setVisibility ( prevBtnVisibility ) ; nextClipButton . setVisibility ( nextBtnVisibility ) ; mediaController . hide () ; } 
public boolean isValidated () { if ( ! ( org.easystogu.utils.Strings . isDateValidate ( date ) ) ) return false ; if ( ( ( ( ( ( this . majorNetIn ) == 0 ) && ( ( this . biggestNetIn ) == 0 ) ) && ( ( this . bigNetIn ) == 0 ) ) && ( ( this . midNetIn ) == 0 ) ) && ( ( this . smallNetIn ) == 0 ) ) return false ; return true ; } 
@ java.lang.Override public void call ( com.moac.android.refuge.activity.MainActivity.CirclesViewModel circlesViewModel ) { mapFragment . clear () ; if ( ( circlesViewModel.maxFlow ) > 0 ) { com.moac.android.refuge.util.Visualizer . drawCountries ( refugeeDataStore , mapFragment , circlesViewModel.countries , circlesViewModel.maxFlow ) ; } else if ( ! ( circlesViewModel.countries . isEmpty () ) ) { android.widget.Toast . makeText ( this , "No refugee flows found" , Toast.LENGTH_LONG ) . show () ; } } 
public < T > T read ( final java.io.InputStream content , final java.lang.Class < T > type ) throws com.google.gson.JsonIOException , com.google.gson.JsonSyntaxException { try { return this . mapper . fromJson ( new java.io.InputStreamReader ( content ) , type ) ; } catch ( com.google.gson.JsonIOException | com.google.gson.JsonSyntaxException e ) { timber.log.Timber . e ( ( ( ( ( "Error mapping json to class '" + type ) + "' with contents: '" ) + content ) + "'" ) ) ; throw e ; } } 
public static int calculateInSampleSize ( android.graphics.BitmapFactory.Options options , final int reqWidth , final int reqHeight ) { final int height = options.outHeight ; final int width = options.outWidth ; int inSampleSize = 1 ; if ( ( height > reqHeight ) || ( width > reqWidth ) ) { final int halfHeight = height / 2 ; final int halfWidth = width / 2 ; while ( ( ( halfHeight / inSampleSize ) > reqHeight ) || ( ( halfWidth / inSampleSize ) > reqWidth ) ) { inSampleSize *= 2 ; } } return inSampleSize ; } 
private void onUserReceived ( com.pdrogfer.onstage.model.User user ) { android.util.Log . i ( com.pdrogfer.onstage.ui.PresentationActivity.TAG , ( "onUserReceived: " + ( user . toString () ) ) ) ; com.pdrogfer.onstage.Utils . storeUserToSharedPrefs ( user . getUid () , user . getName () , user . getEmail () , user . getUserType () , this ) ; goToListActivity () ; } 
@ java.lang.Override public int makeMove () { java.util.Scanner keyboard = new java.util.Scanner ( java.lang.System.in ) ; int input = 0 ; do { try { java.lang.System.out . println ( "Make your move (1)Hit or (2)Stay " ) ; input = keyboard . nextInt () ; } catch ( java.util.InputMismatchException e ) {} } while ( ( input < 1 ) || ( input > 2 ) ) ; return input ; } 
private void stopped () { com.couchbase.lite.util.Log . d ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker in stopped()" , this ) ; if ( ( client ) != null ) { com.couchbase.lite.util.Log . d ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker calling changeTrackerStopped, client: %s" , this , client ) ; client . changeTrackerStopped ( this ) ; } else { com.couchbase.lite.util.Log . d ( Log.TAG_CHANGE_TRACKER , "%s: Change tracker not calling changeTrackerStopped, client == null" , this ) ; } client = null ; running = false ; } 
public void colsum ( int [] histogram ) { col_idx [ 0 ] = 0 ; int index = 0 ; for ( int i = 1 ; i <= ( numCols ) ; i ++ ) { col_idx [ i ] = index += histogram [ ( i - 1 ) ] ; } java.lang.System . arraycopy ( col_idx , 0 , histogram , 0 , numCols ) ; nz_length = index ; growMaxLength ( nz_length , false ) ; } 
public void setName ( eu.etaxonomy.cdm.model.name.TaxonName name ) { if ( ( ( this . name ) != null ) && ( ! ( this . name . equals ( name ) ) ) ) { this . name . getRegistrations () . remove ( this ) ; } if ( ( name != null ) && ( ! ( name . equals ( this . name ) ) ) ) { name . getRegistrations () . add ( this ) ; } this . name = name ; } 
public void addJet ( java.lang.String model , double speed , double range , int capacity ) { week2.Jets [] addJets = new week2.Jets [ ( jets.length ) + 1 ] ; for ( int i = 0 ; i < ( ( addJets.length ) - 1 ) ; i ++ ) { addJets [ i ] = jets [ i ] ; } addJets [ jets.length ] = new week2.Jets ( model , speed , range , capacity ) ; jets = addJets ; printJets () ; } 
public java.lang.String login () { co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser log = new co.edu.unal.kwinty.BusinessLogic.Controller.LoginUser () ; message = log . start ( this . username , this . password ) ; java.lang.System.err . println ( ( "Este es el mensaje" + ( message ) ) ) ; if ( ( message ) != null ) { return message ; } else { return "welcome" ; } } 
@ java.lang.Override public void run () { try { inFromClient = new java.io.BufferedReader ( new java.io.InputStreamReader ( threadSocket . getInputStream () ) ) ; while ( ( ! ( spade.reporter.LLVM.shutdown ) ) || ( inFromClient . ready () ) ) { java.lang.String line = inFromClient . readLine () ; if ( line != null ) { parseEvent ( line ) ; } } inFromClient . close () ; } catch ( java.lang.Exception exception ) { exception . printStackTrace ( java.lang.System.err ) ; } } 
@ org.junit.Test public void testRead ( ) throws org.pentaho.metastore.api.exceptions.MetaStoreException { java.lang.String testName = "testName" ; org.pentaho.big.data.impl.cluster.NamedClusterImpl namedCluster = new org.pentaho.big.data.impl.cluster.NamedClusterImpl () ; when ( metaStoreFactory . loadElement ( testName ) ) . thenReturn ( namedCluster ) ; assertTrue ( ( namedCluster == ( namedClusterManager . read ( testName , metaStore ) ) ) ) ; } 
public void updateTimestepAccel ( Body other ) { double d = distance ( other ) ; double sum = 0 ; for ( int i = 0 ; i < 3 ; i ++ ) { double a = ( ( Constants.G ) * ( other.mass ) ) * ( ( other.position [ i ] ) - ( position [ i ] ) ) ; deltaAccel [ i ] += a / ( ( d * d ) * d ) ; sum += deltaAccel [ i ] ; } } 
private java.lang.CharSequence generateFieldNotPresentCondition ( final int sinceVersion , final uk.co.real_logic.sbe.ir.Encoding encoding , final java.lang.String indent ) { if ( 0 == sinceVersion ) { return "" ; } return java.lang.String . format ( ( ( ( indent + "        if self.actingVersion_ < %1$d:\n" ) + indent ) + "            return %2$s\n\n" ) , sinceVersion , generateLiteral ( encoding . primitiveType () , encoding . applicableNullValue () . toString () ) ) ; } 
public short getShort ( ) throws com.wiredtiger.db.WiredTigerPackingException { boolean signed = true ; format . checkType ( 'h' , false ) ; if ( ( format . getType () ) == 'H' ) { signed = false ; } format . consume () ; return unpackShort ( signed ) ; } 
public void setMotorSpeeds ( double left , double right , boolean usePID ) { double scale = java.lang.Math . max ( java.lang.Math . abs ( left ) , java.lang.Math . abs ( right ) ) ; if ( scale > 1 ) { left = left / scale ; right = right / scale ; } mLeftDrive . setSpeed ( left ) ; mLeftDrive . setUsePID ( usePID ) ; mRightDrive . setSpeed ( right ) ; mRightDrive . setUsePID ( usePID ) ; } 
private void init () { if ( ! ( initialized ) ) { synchronized ( this ) { if ( ! ( initialized ) ) { if ( ( beanManager () ) != null ) { elResolver . setDelegate ( beanManager () . getELResolver () ) ; } initialized = true ; } } } } 
@ java.lang.Override public java.lang.String getString ( java.lang.String s , java.lang.String s1 ) { try { java.lang.String key = mEncryptionManager . getHashed ( s ) ; java.lang.String value = mPrefs . getString ( key , null ) ; if ( value != null ) return mEncryptionManager . decrypt ( value ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return s1 ; } 
@ java.lang.Override public org.ggp.base.util.statemachine.MachineState toGdl ( org.apache.lucene.util.OpenBitSet state ) { java.util.Set < org.ggp.base.util.gdl.grammar.GdlSentence > bases = new java.util.HashSet < org.ggp.base.util.gdl.grammar.GdlSentence > () ; int [] baseProps = propNet . getBasePropositions () ; for ( int i = state . nextSetBit ( 0 ) ; i != ( - 1 ) ; i = state . nextSetBit ( ( i + 1 ) ) ) { bases . add ( gdlSentenceMap . get ( ( ( baseOffset ) + i ) ) ) ; } return new org.ggp.base.util.statemachine.MachineState ( bases ) ; } 
@ java.lang.Override public void visitMethodInsn ( int opcode , java.lang.String owner , java.lang.String name , java.lang.String desc ) { if ( ( ( done ) || ( opcode != ( org.objectweb.asm.Opcodes.INVOKESPECIAL ) ) ) || ( ! ( org.caesarj.runtime.mixer.ConstructorMixer . isConstructor ( name ) ) ) ) { super . visitMethodInsn ( opcode , owner , name , desc ) ; return; } done = true ; super . visitMethodInsn ( opcode , this . owner , name , this . desc ) ; } 
public static com.blazingkin.interpreter.executor.lambda.LambdaExpression getLambdaExpression ( java.lang.String name , java.lang.String [] args ) { if ( ( name . contains ( "(" ) ) && ( name . contains ( ")" ) ) ) { com.blazingkin.interpreter.executor.lambda.LambdaExpression le = com.blazingkin.interpreter.executor.lambda.LambdaParser . parseLambdaExpression ( name . toUpperCase () ) ; return ( ( com.blazingkin.interpreter.executor.lambda.LambdaExpression ) ( le . getValue () . value ) ) . cloneWithArgs ( args ) ; } return com.blazingkin.interpreter.executor.lambda.LambdaRegistrar.runtimeDefinedLambdaExpressions . get ( name . toUpperCase () ) . cloneWithArgs ( args ) ; } 
private void addPhotos ( java.lang.Integer id , java.util.List < org.springframework.web.multipart.MultipartFile > photos ) { java.lang.String contextPath = servletContext . getRealPath ( "/pages/" ) ; for ( org.springframework.web.multipart.MultipartFile file : photos ) { try { org.apache.commons.io.FileUtils . writeByteArrayToFile ( new java.io.File ( ( ( ( ( contextPath + "/images/albums/" ) + id ) + "/" ) + ( file . getOriginalFilename () ) ) ) , file . getBytes () ) ; } catch ( java.io.IOException e ) {} } } 
@ java.lang.Override public void execute () { double translationPower = leftJoystick . getVector () . getMagnitude () ; setTargetHeading () ; double headingError = poseSubsystem . getCurrentHeading () . difference ( targetHeadingSupplier . getAsDouble () ) ; double rotationPower = - ( headingDrivePid . calculate ( 0 , headingError ) ) ; driveSubsystem . tankDrivePowerMode ( ( translationPower - rotationPower ) , ( translationPower + rotationPower ) ) ; } 
@ java.lang.Override public java.util.Collection < org.openhab.binding.zwave.internal.protocol.SerialMessage > getDynamicValues ( boolean refresh ) { java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > result = new java.util.ArrayList < org.openhab.binding.zwave.internal.protocol.SerialMessage > () ; if ( refresh == true ) { initialiseName = false ; initialiseLocation = false ; } if ( ( initialiseName ) == false ) { result . add ( getNameMessage () ) ; } if ( ( initialiseLocation ) == false ) { result . add ( getLocationMessage () ) ; } return result ; } 
public boolean verifyPermissions ( int [] grantResults ) { if ( ( grantResults.length ) < 1 ) { return false ; } for ( int result : grantResults ) { if ( result != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { return false ; } } return true ; } 
public java.util.ArrayList < rifGenericLibrary.taxonomyServices.TaxonomyTerm > getImmediateChildTerms ( final java.lang.String parentTermIdentifier ) throws rifGenericLibrary.system.RIFServiceException { java.util.ArrayList < rifGenericLibrary.taxonomyServices.TaxonomyTerm > results = new java.util.ArrayList < rifGenericLibrary.taxonomyServices.TaxonomyTerm > () ; if ( parentTermIdentifier == null ) { return results ; } rifGenericLibrary.taxonomyServices.TaxonomyTerm parentTerm = getTerm ( parentTermIdentifier ) ; if ( parentTerm == null ) { rifGenericLibrary.system.RIFServiceExceptionFactory rifServiceExceptionFactory = new rifGenericLibrary.system.RIFServiceExceptionFactory () ; throw rifServiceExceptionFactory . createNonExistentTaxonomyTerm ( taxonomyServiceID , parentTermIdentifier ) ; } return parentTerm . getChildTerms () ; } 
boolean add ( E item ) { boolean newItem = ! ( this . linkedHashSet . remove ( item ) ) ; this . linkedHashSet . add ( item ) ; if ( ( this . linkedHashSet . size () ) >= ( com.box.sdk.LRUCache.MAX_SIZE ) ) { java.util.Iterator < E > it = this . linkedHashSet . iterator () ; it . next () ; it . remove () ; } return newItem ; } 
public void remove ( java.lang.String [] parm ) { java.lang.String nId = parm [ 0 ] ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EAlarmReceiver . cancelAlerm ( mContext , nId ) ; if ( ( ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map ) != null ) && ( org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . containsKey ( nId ) ) ) { int id = org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . get ( nId ) ; org.zywx.wbpalmstar.plugin.uexLocalNotification.EUexLocalNotify.map . remove ( nId ) ; if ( ( notificationManager ) != null ) { notificationManager . cancel ( id ) ; } } } 
@ java.lang.Override public void onEvent () { if ( ( ! ( this . getIsClosingOrClosed () ) ) && ( ( ( sendLink . getLocalState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) || ( ( sendLink . getRemoteState () ) == ( org.apache.qpid.proton.engine.EndpointState.CLOSED ) ) ) ) { recreateSendLink () ; } } 
public void parseCommandObject ( common.CommandObject commandObj , boolean isUndoAction , boolean isRedoAction ) { if ( ! ( isUndoAction || isRedoAction ) ) { commandObj . setLastSearchedIndex ( lastSearchedIndex ) ; } logic.CommandFacade commandFacade = new logic.CommandFacade ( taskList , undoList , redoList , lastOutputTaskList , commandObj , isUndoAction , isRedoAction ) ; commandFacade . run () ; updateLists ( commandFacade ) ; } 
public void freePearlFromMercury ( vg.civcraft.mc.prisonpearl.PrisonPearl pp , java.lang.String reason , java.lang.String server ) { storage . removePearl ( pp , reason ) ; if ( ( server != null ) && ( ( pp . getImprisonedPlayer () ) != null ) ) { respawnPlayerCorrectly ( pp . getImprisonedPlayer () , pp , null ) ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Response < com.birdcopy.BirdCopyApp.Http.CallResultCode > response ) { com.birdcopy.BirdCopyApp.Http.CallResultCode result = response . body () ; if ( "1" . equals ( result . getRc () ) ) { if ( "-1" . equalsIgnoreCase ( result . getRs () ) ) { if ( delegate != null ) { delegate . completion ( false ) ; } } else { if ( delegate != null ) { delegate . completion ( true ) ; } } } } 
public java.util.List < chipmunk.segmenter.Word > map ( java.util.List < chipmunk.segmenter.Word > words ) { getData () ; java.util.List < chipmunk.segmenter.Word > new_words = new java.util.LinkedList <> () ; for ( chipmunk.segmenter.Word word : words ) { chipmunk.segmenter.Word new_word = vocab_ . get ( word . getWord () ) ; assert new_word != null ; new_words . add ( new_word ) ; } return new_words ; } 
int valueToInt ( java.lang.Object value , int defaultValue ) { int reply = defaultValue ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { try { reply = java.lang.Integer . valueOf ( ( ( java.lang.String ) ( value ) ) ) ; } catch ( java.lang.NumberFormatException ex ) { reply = defaultValue ; } } return reply ; } 
@ java.lang.Override protected java.util.Date fromString ( java.lang.String input ) { for ( java.text.SimpleDateFormat formatter : parsers ) { try { synchronized ( formatter ) { return formatter . parse ( input ) ; } } catch ( java.text.ParseException ex ) {} } com.univocity.parsers.conversions.DataProcessingException exception = new com.univocity.parsers.conversions.DataProcessingException ( ( "Cannot parse '{value}' as a valid date. Supported formats are: " + ( java.util.Arrays . toString ( formats ) ) ) ) ; exception . setValue ( input ) ; throw exception ; } 
private boolean better ( java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > newPolygon , java.util.List < de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.Vector2D > bestPolygon ) { return ( ( bestPolygon . size () ) == 0 ) || ( ( ( newPolygon . size () ) < ( bestPolygon . size () ) ) && ( ( newPolygon . size () ) != 0 ) ) ; } 
public org.smartbirdpj.mdl.Point getPoint ( java.util.Map < java.lang.Integer , java.util.Map < java.lang.Integer , org.smartbirdpj.mdl.Point > > map , int han , int hu ) { org.smartbirdpj.mdl.Point rv = null ; if ( han >= ( org.smartbirdpj.engine.controller.PointHolder.HAN_MAX ) ) { han = org.smartbirdpj.engine.controller.PointHolder.HAN_MAX ; hu = org.smartbirdpj.engine.controller.PointHolder.HU_MAX ; } try { rv = map . get ( han ) . get ( hu ) ; rv . setHan ( han ) ; rv . setHu ( hu ) ; } catch ( java.lang.NullPointerException e ) { rv = null ; } return rv ; } 
public void loginButtonPressed ( android.view.View v ) throws java.lang.InterruptedException , java.util.concurrent.ExecutionException { hideKeyboard () ; loginInfo . setText ( "" ) ; accountName = inputUsername . getText () . toString () ; password = inputPassword . getText () . toString () ; if ( ( ! ( accountName . equals ( "" ) ) ) && ( ! ( password . equals ( "" ) ) ) ) { loginProgressBar . setVisibility ( View.VISIBLE ) ; thorleifz.wakeup.LogIn.LoginTask loginTask = new thorleifz.wakeup.LogIn.LoginTask () ; loginTask . execute () ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.movielist.aishwarytandon.movielist.MovieResponse > call , retrofit2.Response < com.movielist.aishwarytandon.movielist.MovieResponse > response ) { java.util.List < com.movielist.aishwarytandon.movielist.Movie > movies = response . body () . getResults () ; if ( recyclerView != null ) { recyclerView . setAdapter ( new com.movielist.aishwarytandon.movielist.MovieAdapter ( movies , R.layout.list_item_movie , getApplicationContext () ) ) ; } android.util.Log . d ( com.movielist.aishwarytandon.movielist.MainActivity.TAG , ( "Number of movies received: " + ( movies . size () ) ) ) ; } 
@ java.lang.Override public java.lang.String getReply () { java.lang.String msg = null ; try { msg = ( ( java.lang.String ) ( objectInputStream . readObject () ) ) ; } catch ( java.io.IOException | java.lang.ClassNotFoundException e ) { java.lang.System.err . println ( ( "Error reading stream " + ( e . getMessage () ) ) ) ; } return msg ; } 
public java.util.List < hr.fer.tki.evolution_algorithm.chromosome.IChromosome > getBestSolutions ( int num ) { java.util.List < hr.fer.tki.evolution_algorithm.chromosome.IChromosome > solutions = new java.util.ArrayList <> () ; for ( int i = 0 ; i < num ; i ++ ) { solutions . add ( this . population . get ( i ) ) ; } for ( hr.fer.tki.evolution_algorithm.chromosome.IChromosome chromosome : solutions ) { java.lang.System.out . println ( chromosome . getFitness () ) ; } return solutions ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( resultCode != ( RESULT_OK ) ) return; switch ( requestCode ) { case ya.haojun.roadtoadventure.activity.MainActivity.REQUEST_PROFILE : if ( ( data != null ) && ( data . getBooleanExtra ( "logout" , false ) ) ) { ya.haojun.roadtoadventure.helper.SPHelper . clearUser ( this ) ; openActivity ( ya.haojun.roadtoadventure.activity.PermissionActivity . class ) ; finish () ; } else { rv_drawer . getAdapter () . notifyItemChanged ( 0 ) ; } break; } } 
public org.osgl.util.S.Buffer prepend ( java.lang.StringBuffer sb ) { if ( sb == null ) return appendNull () ; int len = sb . length () ; ensureCapacityInternal ( ( ( count ) + len ) ) ; java.lang.System . arraycopy ( value , 0 , value , len , count ) ; sb . getChars ( 0 , len , value , 0 ) ; count += len ; return this ; } 
private boolean projectHasItestsDependency () { java.util.List < org.apache.maven.model.Dependency > deps = project . getDependencies () ; boolean containsItests = false ; java.util.Iterator i = deps . iterator () ; while ( ( i . hasNext () ) && ( ! containsItests ) ) { org.apache.maven.model.Dependency d = ( ( org.apache.maven.model.Dependency ) ( i . next () ) ) ; containsItests |= ( d . getArtifactId () . equals ( "itests" ) ) && ( d . getGroupId () . equals ( "org.universAAL.support" ) ) ; } return containsItests ; } 
protected java.util.List retrieveClassesForIngredients () { if ( ( getFixSpace () . strategy () . equals ( IngredientSpaceStrategy.LOCAL ) ) || ( getFixSpace () . strategy () . equals ( IngredientSpaceStrategy.PACKAGE ) ) ) return originalVariant . getAffectedClasses () ; if ( getFixSpace () . strategy () . equals ( IngredientSpaceStrategy.GLOBAL ) ) return this . mutatorSupporter . getFactory () . Type () . getAll () ; return null ; } 
@ java.lang.Override public java.lang.Double call ( com.jt.commons.GenericRecord rec1 , com.jt.commons.GenericRecord rec2 ) throws java.lang.Exception { java.lang.Double avg = ( ( ( java.lang.Double ) ( rec1 . get ( Constants.CLOSE ) ) ) + ( ( java.lang.Double ) ( rec2 . get ( Constants.CLOSE ) ) ) ) / 2 ; return avg ; } 
@ java.lang.Override public void onSuccess ( com.facebook.login.LoginResult loginResult ) { accessToken = loginResult . getAccessToken () ; userProfile = com.facebook.Profile . getCurrentProfile () ; if ( ( userProfile ) != null ) { com.andela.bark.models.User user = com.andela.bark.models.User . createFacebookUser ( userProfile ) ; com.andela.bark.GKprManger gKprManger = new com.andela.bark.GKprManger ( user , activity ) ; if ( gKprManger.isAuthenticated ) { android.content.Intent i = new android.content.Intent ( activity , com.andela.bark.FragmentHostActivity . class ) ; activity . startActivity ( i ) ; } } } 
public void init ( org.magic.api.beans.MagicDeck deck ) { cards = new java.util.ArrayList < org.magic.api.beans.MagicCard > () ; if ( deck != null ) if ( ( deck . getMap () ) != null ) for ( java.util.Map.Entry < org.magic.api.beans.MagicCard , java.lang.Integer > cci : deck . getMap () . entrySet () ) { org.magic.api.beans.MagicCard mc = cci . getKey () ; for ( int i = 0 ; i < ( cci . getValue () ) ; i ++ ) cards . add ( mc ) ; } refresh () ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode == ( RESULT_OK ) ) { io.emqtt.emqandroidtoolkit.model.Connection connection = data . getParcelableExtra ( ConnectionActivity.EXTRA_CONNECTION ) ; if ( null != connection ) { switch ( requestCode ) { case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_ADD : mConnectionAdapter . notifyItemInserted ( ( ( mConnectionResults . size () ) - 1 ) ) ; break; case io.emqtt.emqandroidtoolkit.ui.activity.MainActivity.REQUEST_EDIT : mConnectionAdapter . notifyItemChanged ( mPosition ) ; break; default: break; } } } } 
private void handleByTerminatingIfWithinDialog ( android.javax.sip.ClientTransaction clientTransaction ) { logger . debug ( "{} request failed because call or transaction did not exist." , clientTransaction . getRequest () . getMethod () ) ; android.javax.sip.Dialog dialog = clientTransaction . getDialog () ; if ( ( dialog != null ) && ( ! ( ( ( dialog . getState () ) == ( android.javax.sip.DialogState.EARLY ) ) || ( ( dialog . getState () ) == ( android.javax.sip.DialogState.TERMINATED ) ) ) ) ) { sendByeRequest ( dialog ) ; } } 
public static void assertEquals ( java.lang.Object expected , java.lang.Object actual , java.lang.String message ) { boolean condition ; if ( expected == null ) { condition = actual == null ; } else { condition = expected . equals ( actual ) ; } com.triangleleft.assertdialog.AssertDialog . assertTrue ( condition , message ) ; } 
public void update () { width = display . getFrame () . getWidth () ; height = display . getFrame () . getHeight () ; keyManager . update () ; if ( ( dev.Same4254.ThisGame.States.State . getCurrentState () ) != null ) dev.Same4254.ThisGame.States.State . getCurrentState () . update () ; repaint () ; } 
public boolean canAdvance ( java.lang.Integer [] counters , java.lang.Integer [] boundaries ) { for ( int cElem = 0 ; ( cElem < ( counters.length ) ) && ( cElem < ( boundaries.length ) ) ; ++ cElem ) { if ( ! ( counters [ cElem ] . equals ( boundaries [ cElem ] ) ) ) return true ; } return false ; } 
public java.lang.Integer getGratitudesComplete () { java.lang.Integer gratitudeComplete = 0 ; for ( java.lang.String gratitude : gratitudes ) { gratitudeComplete += java.lang.Math . min ( 100 , ( ( ( gratitude . length () ) * 100 ) / ( ai.victorl.toda.data.entry.Entry.MIN_ENTRY_LENGTH ) ) ) ; } return java.lang.Math . min ( 100 , java.lang.Long . valueOf ( java.lang.Math . round ( ( gratitudeComplete / 3.0 ) ) ) . intValue () ) ; } 
private void init ( com.jaspersoft.jasperserver.jaxrs.client.core.SessionStorage sessionStorage ) { com.jaspersoft.jasperserver.jaxrs.client.core.RestClientConfiguration configuration = sessionStorage . getConfiguration () ; contentType = ( ( configuration . getContentMimeType () ) == ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML ; acceptType = ( ( configuration . getAcceptMimeType () ) == ( com.jaspersoft.jasperserver.jaxrs.client.core.enums.MimeType.JSON ) ) ? javax.ws.rs.core.MediaType.APPLICATION_JSON : javax.ws.rs.core.MediaType.APPLICATION_XML ; headers = new javax.ws.rs.core.MultivaluedHashMap < java.lang.String , java.lang.String > () ; usersWebTarget = sessionStorage . getRootTarget () . path ( "/rest_v2" ) ; } 
private void buildItemWithTwoRows () { createDVPanels () ; java.lang.String text = getLatexString ( isInputTreeItem () , org.geogebra.web.web.gui.view.algebra.RadioTreeItem.LATEX_MAX_EDIT_LENGHT ) ; latex = text != null ; ihtml . clear () ; if ( updateDefinitionPanel () ) { plainTextItem . clear () ; plainTextItem . add ( definitionPanel ) ; } if ( updateValuePanel ( text ) ) { outputPanel . add ( valuePanel ) ; plainTextItem . add ( outputPanel ) ; } ihtml . add ( plainTextItem ) ; } 
public final boolean newProject ( java.lang.String projectName ) { final de.dfki.vsm.editor.project.ProjectEditor editor = new de.dfki.vsm.editor.project.ProjectEditor ( true ) ; editor . getSceneFlowEditor () . getSceneFlow () . setName ( editor . getEditorProject () . getEditorConfig () . sMAINSUPERNODENAME ) ; addProjectTab ( projectName , editor ) ; if ( ( mProjectEditors . getTabCount () ) == 1 ) { setContentPane ( mProjectEditors ) ; mEditorMenuBar . setVisible ( true ) ; } refresh () ; return true ; } 
private void sendPackets ( java.util.ArrayList < sr.Packet > packets ) throws java.io.IOException { while ( ( m_lastSent ) != ( m_winUpper ) ) { sr.Packet p = packets . get ( m_actual ) ; m_socket . send ( p . getDatagramPacket ( m_destAddr , m_destPort ) ) ; m_timeouts . startTimer ( p , sr.SelectiveRepeatUnit.PACKET_TIMEOUT ) ; m_lastSent = ( ( m_lastSent ) + 1 ) % ( m_modulo ) ; m_actual = m_actual += 1 ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( duringDetail . getVisibility () ) == ( android.view.View.GONE ) ) { duringDetail . setVisibility ( View.VISIBLE ) ; duringDetail . startAnimation ( fadeIn ) ; } else { duringDetail . setVisibility ( View.GONE ) ; duringDetail . startAnimation ( fadeOut ) ; } } 
public void newArray ( int size ) { com.himamis.retex.editor.share.meta.MetaArray meta = formula . getMetaModel () . getArray () ; com.himamis.retex.editor.share.model.MathArray array = new com.himamis.retex.editor.share.model.MathArray ( meta , size ) ; currentField . addArgument ( currentOffset , array ) ; com.himamis.retex.editor.share.model.MathSequence field = new com.himamis.retex.editor.share.model.MathSequence () ; array . setArgument ( 0 , field ) ; for ( int i = 1 ; i < size ; i ++ ) { array . setArgument ( i , new com.himamis.retex.editor.share.model.MathSequence () ) ; } currentField = field ; currentOffset = 0 ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.common_names_description ) ; android.os.Bundle extras = getIntent () . getExtras () ; common_name_rowid = extras . getLong ( CommonNamesAdapter.COMMON_NAME_ROWID ) ; common_name = extras . getString ( CommonNamesAdapter.COMMON_NAME ) ; common_name_count = extras . getString ( CommonNamesAdapter.COMMON_NAME_COUNT ) . toString () ; description = ( ( common_name_count ) + ( text ) ) + ( common_name ) ; balu.android.CommonNameDescription.tv = ( ( android.widget.TextView ) ( findViewById ( R.id.common_name_description_text ) ) ) ; balu.android.CommonNameDescription.tv . setText ( description ) ; } 
public long getNextChapterStart ( long position ) { long ret = com.monsterbutt.homeview.plex.media.PlexVideoItem.BAD_CHAPTER_START ; if ( hasChapters () ) { for ( com.monsterbutt.homeview.plex.media.Chapter chapter : mVideo . getChapters () ) { if ( ( chapter . getStartTimeOffset () ) >= position ) { ret = chapter . getStartTimeOffset () ; break; } } } return ret ; } 
private void updateFaceCentroid () { faceCentroid . setToZero () ; for ( int i = 0 ; i < ( edges . size () ) ; i ++ ) faceCentroid . add ( edges . get ( i ) . getOriginVertex () ) ; faceCentroid . scale ( ( 1.0 / ( edges . size () ) ) ) ; } 
private boolean changedMins () { try { return ! ( ( java.lang.Double . parseDouble ( this . minutes ) ) == ( ( double ) ( this . time . getValue () ) ) ) ; } catch ( java.lang.Exception e ) { return false ; } } 
public static void index () { com.google.gson.Gson gson = new com.google.gson.Gson () ; int statsCount = ( ( int ) ( controllers.DailyStat . count () ) ) ; java.util.List < controllers.DailyStat > dailyStats = controllers.DailyStat . all () . from ( ( statsCount - 5 ) ) . fetch ( 5 ) ; if ( dailyStats != null ) { render ( dailyStats ) ; } else { renderHtml ( "empty" ) ; } } 
private void deleteTask ( java.lang.String [] taskString ) { for ( int i = 0 ; i < ( tasks . size () ) ; i ++ ) { if ( taskString [ 0 ] . equals ( tasks . get ( i ) . getTitle () ) ) { if ( taskString [ 1 ] . equals ( tasks . get ( i ) . getDescription () ) ) { tasks . remove ( i ) ; } } } } 
private void notifyRendering () { if ( ( drawTask ) != null ) { drawTask . requestClear () ; } if ( mUpdateInNewThread ) { synchronized ( this ) { mDrawTimes . clear () ; } synchronized ( drawTask ) { drawTask . notifyAll () ; } } else { mDrawTimes . clear () ; removeMessages ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; sendEmptyMessage ( master.flame.danmaku.controller.DrawHandler.UPDATE ) ; } mRenderingState.inWaitingState = false ; } 
@ java.lang.Override public void in ( java.lang.String token ) { messageToken = token ; l ( ( token + " is in" ) ) ; l ( java.lang.String . valueOf ( session . getWits () . size () ) ) ; org.json.JSONObject attr = new org.json.JSONObject () ; session . sendTo ( localStream , true , attr , token ) ; } 
public boolean checkForWinner () { for ( Car c : cars ) if ( c . checkWin () ) { javax.swing.JOptionPane . showMessageDialog ( null , ( ( ( ( ( "We have a winner!\nCar " + ( c . getRacingNumber () ) ) + " has won!\nDistance traveled by Car " ) + ( c . getRacingNumber () ) ) + " : " ) + ( c . getDistanceTraveled () ) ) ) ; return true ; } return false ; } 
protected void generateStaticKeyFunctionForRole ( pt.ist.fenixframework.dml.Role role , java.io.PrintWriter out ) { if ( ( role . getMultiplicityUpper () ) != 1 ) { println ( out , generateMapKeyFunction ( role . getName () , role . getType () . getFullName () , "Comparable<?>" , "Oid" , false ) ) ; } } 
private void checkMinutesSinceLastAction () { int localMinutesSinceLastAction = getMinutesSinceLastAction () ; if ( localMinutesSinceLastAction > ( minutesSinceLastAction ) ) { minutesSinceLastAction = localMinutesSinceLastAction ; } if ( ( minutesSinceLastAction ) >= ( settings . getIdleTime () ) ) { stateMachine . reset () ; } } 
private jxl.Sheet checkSheetName ( jxl.Workbook workbook ) throws java.io.IOException , jxl.read.biff.BiffException { assertTrue ( ( ( workbook . getSheets () . length ) > 0 ) ) ; for ( java.lang.String name : workbook . getSheetNames () ) { if ( name . equals ( getResources ( activityTestRule ) . getString ( R.string.default_sheet_name ) ) ) { return workbook . getSheet ( name ) ; } } workbook . close () ; return null ; } 
public int base2int ( char base ) { int intVal = - 1 ; switch ( base ) { case 'A' : intVal = 0 ; break; case 'C' : intVal = 1 ; break; case 'G' : intVal = 2 ; break; case 'T' : intVal = 3 ; break; case 'N' : intVal = 4 ; break; default: throw new java.lang.IllegalArgumentException ( ( "Invalid character: " + base ) ) ; } return intVal ; } 
public int run () { int exponent = 1000 ; java.math.BigInteger base = java.math.BigInteger . valueOf ( 2 ) ; java.math.BigInteger value = java.math.BigInteger.ZERO ; int sum = 0 ; value = base . pow ( exponent ) ; java.lang.String str = value . toString () ; for ( int i = 0 ; i < ( str . length () ) ; i ++ ) sum += ( ( int ) ( ( str . charAt ( i ) ) - '0' ) ) ; return sum ; } 
public static int findMaxArg ( int upperBound , int lowerBound , int page ) { int maxCandidate = 0 ; java.lang.Double maxCandidateValue = 0.0 ; for ( int i = lowerBound ; i < upperBound ; i ++ ) { if ( ( pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ) > maxCandidateValue ) { maxCandidateValue = pagenumber.Viterbi.viterbiPages . get ( page ) . get ( i ) ; maxCandidate = i ; } } return maxCandidate ; } 
public static void activeClock ( int id ) { mine.android.api.modules.ClockEntry clockEntry = mine.android.api.ClockEntryAPI . getById ( id ) ; java.util.Calendar nextAlarmTime = mine.android.api.AlarmAPI . getNextAlarmTime ( clockEntry ) ; android.util.Log . i ( ( "next alarm time for id: " + id ) , nextAlarmTime . getTime () . toString () ) ; mine.android.api.AlarmAPI . setTimer ( id , nextAlarmTime ) ; } 
public void setPageLength ( int pLength ) { if ( ( pageLength ) != pLength ) { pageLength = pLength ; page = ( startIndex ) / pLength ; checkPageCount () ; if ( ( grid ) != null ) { grid . setHeightByRows ( pLength ) ; grid . setHeightMode ( HeightMode.ROW ) ; } if ( ! ( setStartIndex () ) ) { fireItemSetChange () ; } } } 
@ java.lang.Override public java.lang.Boolean call ( ) throws java.lang.Exception { try { consumerVertex . scheduleForExecution ( consumerVertex . getExecutionGraph () . getScheduler () , consumerVertex . getExecutionGraph () . isQueuedSchedulingAllowed () ) ; } catch ( java.lang.Throwable t ) { consumerVertex . fail ( new java.lang.IllegalStateException ( ( ( "Could not schedule consumer " + "vertex " ) + consumerVertex ) , t ) ) ; } return true ; } 
@ java.lang.Override public void validate ( java.lang.Object obj , org.springframework.validation.Errors err ) { boolean isAllNull = true ; edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm workspaceForm = ( ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspaceForm ) ( obj ) ) ; java.util.List < edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace > workspaceList = workspaceForm . getWorkspaceList () ; if ( workspaceList != null ) { for ( edu.asu.spring.quadriga.web.workspace.backing.ModifyWorkspace workspace : workspaceList ) { java.lang.String internalId = workspace . getId () ; if ( internalId != null ) { isAllNull = false ; break; } } } if ( isAllNull ) { err . reject ( "workspace_selection.required" ) ; } } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { if ( bundleExtra != null ) { if ( ( user . getDisplayName () ) != null ) { artRated = ( ( java.util.HashMap < java.lang.String , java.lang.String > ) ( dataSnapshot . child ( "Users" ) . child ( user . getDisplayName () ) . child ( "rated" ) . getValue () ) ) ; updateRatingView () ; addClickListeners () ; } } } 
public java.lang.String getTime () { java.lang.String ret = "" ; if ( ( hour ) < 10 ) ret += "0" ; ret += ( java.lang.String . valueOf ( hour ) ) + " : " ; if ( ( minute ) < 10 ) ret += "0" ; ret += java.lang.String . valueOf ( minute ) ; return ret ; } 
@ java.lang.Override public void onResult ( com.google.android.gms.plus.People.LoadPeopleResult peopleData ) { if ( ( peopleData . getStatus () . getStatusCode () ) == ( com.google.android.gms.common.api.CommonStatusCodes.SUCCESS ) ) { com.google.android.gms.plus.model.people.PersonBuffer personBuffer = peopleData . getPersonBuffer () ; try { int count = personBuffer . getCount () ; } finally { personBuffer . close () ; } } } 
@ java.lang.Override public void tickPrice ( int orderId , int field , double price , int canAutoExecute ) { if ( ( ( TickType.BID ) == field ) || ( ( TickType.ASK ) == field ) ) java.lang.System.out . println ( ( ( ( ( ( "Ticker ID " + orderId ) + " FIELD " ) + field ) + " PRICE " ) + price ) ) ; } 
public void destroyTool ( int slot ) { if ( ( slot == ( - 1 ) ) || ( ( slots [ slot ] ) == null ) ) return; if ( ( com.vanhal.progressiveautomation.ref.ToolHelper . tinkersType ( slots [ slot ] . getItem () ) ) >= 0 ) { addToInventory ( slots [ slot ] ) ; } else { if ( ! ( com.vanhal.progressiveautomation.PAConfig.destroyTools ) ) { addToInventory ( slots [ slot ] ) ; } } slots [ slot ] = null ; } 
private static int getMinMatchingLabel ( LabeledNeighbor [] neighbors , byte currentColorValue ) { int minMatchingLabel = java.lang.Integer.MAX_VALUE ; for ( LabeledNeighbor neighbor : neighbors ) { int label = neighbor . getLabel () ; if ( ( ( label > 0 ) && ( label < minMatchingLabel ) ) && ( currentColorValue == ( neighbor . getColor () ) ) ) { minMatchingLabel = label ; } } if ( minMatchingLabel != ( java.lang.Integer.MAX_VALUE ) ) { return minMatchingLabel ; } else { return 0 ; } } 
@ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( ( mReceivedPermissions ) == null ) { return; } for ( int i = 0 ; i < ( mReceivedPermissions.length ) ; i ++ ) { java.lang.String permission = mReceivedPermissions [ i ] ; int result = mReceivedPermissionsResults [ i ] ; io.jasonatwood.permissionmanager.PermissionManager . onPermissionResponse ( permission , result ) ; } } 
private static void setPollution ( double newPollution , net.minecraft.world.World world , net.minecraft.util.math.BlockPos chunkPos ) { if ( ( newPollution < ( PollutionDataValue.minPollutionLevel ) ) || ( newPollution > ( PollutionDataValue.maxPollutionLevel ) ) ) { return; } else { miguknamja.pollution.data.PollutionDataValue value = new miguknamja.pollution.data.PollutionDataValue ( newPollution ) ; miguknamja.pollution.ChunkKey key = miguknamja.pollution.ChunkKey . getKey ( world , chunkPos ) ; miguknamja.pollution.data.PollutionWorldData instance = miguknamja.pollution.data.PollutionWorldData . get ( world ) ; instance.hashMap . put ( key , value ) ; instance . markDirty () ; } } 
protected static org.pentaho.agilebi.modeler.LogicalColumn findCorrespondingOlapColumn ( org.pentaho.agilebi.modeler.LogicalColumn relationalColumn , org.pentaho.agilebi.modeler.LogicalModel olapModel ) { org.pentaho.agilebi.modeler.LogicalTable olapTable = org.pentaho.agilebi.modeler.ModelerConversionUtil . findCorrespondingOlapTable ( relationalColumn . getLogicalTable () , olapModel ) ; if ( olapTable != null ) { for ( org.pentaho.agilebi.modeler.LogicalColumn col : olapTable . getLogicalColumns () ) { if ( col . getPhysicalColumn () . getId () . equals ( relationalColumn . getPhysicalColumn () . getId () ) ) { return col ; } } } return null ; } 
@ java.lang.Override public void execute ( ) throws org.apache.maven.plugin.MojoExecutionException , org.apache.maven.plugin.MojoFailureException { if ( ( source ) == null ) { throw new org.apache.maven.plugin.MojoFailureException ( this , "The source is null" , "" ) ; } if ( ( target ) == null ) { throw new org.apache.maven.plugin.MojoFailureException ( this , "The target is null!" , ( "The target path for the " + "module-fragment.xml is null. Please provide a target path." ) ) ; } com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser parser = new com.github.zaplatynski.firstspirit.modules.fsm.velocity.ModuleXmlParser ( source , target , project ) ; parser . parseModuleVm () ; } 
public net.sf.memoranda.EventsManager.Month getMonth ( int m ) { nu.xom.Elements ms = yearElement . getChildElements ( "month" ) ; java.lang.String mm = java.lang.Integer . toString ( m ) ; for ( int i = 0 ; i < ( ms . size () ) ; i ++ ) if ( ms . get ( i ) . getAttribute ( "month" ) . getValue () . equals ( mm ) ) return new net.sf.memoranda.EventsManager.Month ( ms . get ( i ) ) ; return null ; } 
private void generateJava ( ) throws io.konig.gae.datastore.CodeGeneratorException , java.io.IOException { if ( ( java ) != null ) { if ( ( java . getJavaDir () ) == null ) { throw new io.konig.gae.datastore.CodeGeneratorException ( "javaCodeGenerator.javaDir must be defined" ) ; } java . getJavaDir () . mkdirs () ; if ( java . isGenerateCanonicalJsonReaders () ) { generateCanonicalJsonReaders () ; } generateJavaCode () ; } } 
public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( ( "Term: " + ( term ) ) + " " ) + "Frequency: " ) + ( freq ) ) + " " ) + "Weight: " ) + ( weight ) ) + " " ) + "TotalCount: " ) + ( totalCount ) ) + " " ) + "Tf: " ) + ( termFreq ) ; } 
@ java.lang.Override public java.lang.String _stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { getContents ( scope ) ; final java.lang.StringBuilder sb = new java.lang.StringBuilder ( ( ( getBuffer () . length ( scope ) ) * 200 ) ) ; for ( final java.lang.Object s : getBuffer () . iterable ( scope ) ) { sb . append ( s ) . append ( "\n" ) ; } sb . setLength ( ( ( sb . length () ) - 1 ) ) ; return sb . toString () ; } 
@ java.lang.Override public void run () { java.lang.String s = "" ; if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TWICE_TURN_WRIST ) ) { s = "turn wrist twice" ; new com.theteamgo.fancywatch.MainActivity.StartGestureMessageTask () . execute ( Constant.CONTROL_TYPE_NEXT ) ; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_UP ) ) { s = "turn wrist up" ; } else if ( type == ( com.mobvoi.android.gesture.GestureType.TYPE_TURN_WRIST_DOWN ) ) { s = "turn wrist down" ; } else { s = "unknown gesture" ; } } 
@ com.inva.hipstertest.freemarker.controllers.RequestMapping ( value = "/freemarker/teacher/schedule/forms-wp" , method = RequestMethod.POST ) @ com.inva.hipstertest.freemarker.controllers.ResponseBody public java.util.List < com.inva.hipstertest.service.dto.FormDTO > getAvailableFormsBySearchCriteria ( @ com.inva.hipstertest.freemarker.controllers.RequestBody com.inva.hipstertest.freemarker.searchcriteria.SearchCriteria searchCriteria ) { org.apache.commons.lang3.Validate . notNull ( searchCriteria . getLessonPosition () , "Field 'lessonPosition' on formSearchCriteria can not be null." ) ; org.apache.commons.lang3.Validate . notNull ( searchCriteria . getDate () , "Field 'Date' on  formSearchCriteria can not be null." ) ; if ( ( searchCriteria . getId () ) != null ) { return formService . findAllAvailablePlusOneById ( searchCriteria ) ; } return formService . findAvailableFormsByCurrentSchoolAndSearchCriteria ( searchCriteria ) ; } 
@ java.lang.Override public r48.RubyIO targetToBound ( r48.RubyIO target ) { long t = target.fixnumVal ; long type = 0 ; if ( t >= 10000 ) { t -= 10000 ; type ++ ; } r48.RubyIO base = new r48.RubyIO () ; base.arrVal = new r48.RubyIO [ 2 ] ; base.type = '[' ; base.arrVal [ 0 ] = new r48.RubyIO () . setFX ( type ) ; base.arrVal [ 1 ] = new r48.RubyIO () . setFX ( t ) ; return base ; } 
public static short categoryLevel ( java.lang.String category ) { for ( short level = 1 ; level < 101 ; level ++ ) for ( short level = 1 ; level < 101 ; level ++ ) { for ( Controlleur.Question q : Controlleur.JavaOverflow.database . getQuestions () ) {} } return 100 ; } 
private void sendNextPacket () { Packet toSend = new Packet ( packetArrayList . get ( nextSeqNum ) ) ; java.lang.System.out . println ( ( "SENDER GBN SENDING:     " + ( toSend . toString () ) ) ) ; nl . sendPacket ( toSend , to ) ; if ( ( base ) == ( nextSeqNum ) ) { tl . startTimer ( timeOut , me ) ; } ( numTransmissions ) ++ ; ( nextSeqNum ) ++ ; } 
@ java.lang.Override public void run () { java.lang.System.out . println ( ( "Start Execution " + ( machineExecution . getId () ) ) ) ; try { uniandes.unacloud.agent.execution.domain.ImageCopy image = uniandes.unacloud.agent.execution.ImageCacheManager . getFreeImageCopy ( machineExecution , transmissionType ) ; machineExecution . setImage ( image ) ; image . configureAndStart ( machineExecution ) ; java.lang.System.out . println ( "endStartExecution" ) ; } catch ( java.lang.Exception ex ) { try { uniandes.unacloud.agent.net.send.ServerMessageSender . reportExecutionState ( machineExecution . getId () , ExecutionProcessEnum.FAIL , ex . getMessage () ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } } } 
public static void main ( java.lang.String [] args ) { java.util.Scanner scanIn = new java.util.Scanner ( java.lang.System.in ) ; long n ; java.lang.System.out . print ( "Nhap so n: " ) ; n = scanIn . nextInt () ; java.lang.System.out . print ( ( ( ( "Tong cac so chan nho hon " + n ) + " la:" ) + ( tinhtongdemo.TinhTongDemo . TinhTong ( n ) ) ) ) ; } 
private void deployProcess () { org.activiti.engine.RepositoryService repositoryService = processEngine . getRepositoryService () ; org.activiti.engine.repository.ProcessDefinition processDefinition = repositoryService . createProcessDefinitionQuery () . processDefinitionKey ( processDefinitionKey ) . latestVersion () . singleResult () ; if ( null == processDefinition ) repositoryService . createDeployment () . addClasspathResource ( definitionClasspath ) . deploy () ; } 
public static void dispalyTotal ( boolean special ) { try { java.io.FileReader fr = new java.io.FileReader ( "customerBill.txt" ) ; java.io.BufferedReader br = new java.io.BufferedReader ( fr ) ; java.lang.String line ; while ( ( line = br . readLine () ) != null ) { java.lang.System.out . println ( line ) ; } fr . close () ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public static com.tealcubegames.minecraft.spigot.versions.api.actionbars.ActionBarMessage createActionBarMessage ( java.lang.String message ) { java.lang.String serverPackageName = org.bukkit.Bukkit . getServer () . getClass () . getPackage () . getName () ; java.lang.String nmsVersion = serverPackageName . substring ( ( ( serverPackageName . lastIndexOf ( "." ) ) + 1 ) ) ; switch ( nmsVersion ) { case "v1_10_R1" : return new com.tealcubegames.minecraft.spigot.versions.actionbars.ActionBarMessageImpl ( message ) ; default: throw new org.apache.commons.lang3.NotImplementedException ( ( nmsVersion + " is not supported" ) ) ; } } 
protected java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > getConflictResponses () { final java.util.List < com.orientechnologies.orient.server.distributed.ODistributedResponse > servers = new java.util.ArrayList < com.orientechnologies.orient.server.distributed.ODistributedResponse > () ; int bestGroupSoFar = getBestResponsesGroup () ; for ( int i = 0 ; i < ( responseGroups . size () ) ; ++ i ) { if ( i != bestGroupSoFar ) { for ( com.orientechnologies.orient.server.distributed.ODistributedResponse r : responseGroups . get ( i ) ) servers . add ( r ) ; } } return servers ; } 
public void update ( float deltaTime ) { this . levelController . update ( deltaTime ) ; this . frogManager . update ( deltaTime ) ; if ( ( this . hud . getLifeCounter () . getLife () ) <= 0 ) { game . setScreen ( new com.mygdx.game.screens.GameOverScreen ( this . game ) ) ; com.mygdx.game.sprites.SpritesDrawer . getInstance () . removeAllSprites () ; Gdx.input . setInputProcessor ( null ) ; } } 
public boolean isDeflated () { for ( java.util.Map.Entry < java.lang.String , java.util.List < java.lang.String > > entry : this . entrySet () ) { java.lang.String key = entry . getKey () ; if ( key == null ) { continue; } for ( java.lang.String value : entry . getValue () ) { if ( ( key . equalsIgnoreCase ( "content-type" ) ) && ( value . toLowerCase () . contains ( "application/x-deflate" ) ) ) { return true ; } } } return false ; } 
public static synchronized com.android.dialer.calllog.DefaultVoicemailNotifier getInstance ( android.content.Context context ) { if ( ( com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance ) == null ) { android.app.NotificationManager notificationManager = ( ( android.app.NotificationManager ) ( context . getSystemService ( Context.NOTIFICATION_SERVICE ) ) ) ; android.content.ContentResolver contentResolver = context . getContentResolver () ; com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance = new com.android.dialer.calllog.DefaultVoicemailNotifier ( context , notificationManager , com.android.dialer.calllog.DefaultVoicemailNotifier . createNewCallsQuery ( context , contentResolver ) , com.android.dialer.calllog.DefaultVoicemailNotifier . createNameLookupQuery ( context , contentResolver ) ) ; } return com.android.dialer.calllog.DefaultVoicemailNotifier.sInstance ; } 
public void add ( int index , double element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlageIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( size () ) - index ) ) ; set ( index , element ) ; increasedSize ( 1 ) ; } } 
public void setEndTime ( java.time.LocalTime end_time2 ) { if ( end_time2 == null ) { java.time.LocalTime localtime = java.time.LocalTime.MAX ; end_time_string = "" ; end_time = end_time2 ; value = getStartTime () ; } else { end_time_string = end_time2 . format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) . toString () ; end_time = end_time2 ; if ( ( end_time ) != null ) { value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; } else { value = getStartTime () ; } } } 
final synchronized void setResponse ( com.basho.riak.client.core.RiakMessage rawResponse ) { stateCheck ( com.basho.riak.client.core.FutureOperation.State.CREATED , com.basho.riak.client.core.FutureOperation.State.WRITTEN , com.basho.riak.client.core.FutureOperation.State.RETRY ) ; U decodedMessage = decode ( rawResponse ) ; this . rawResponse . add ( decodedMessage ) ; exception = null ; if ( done ( decodedMessage ) ) { ( remainingTries ) -- ; if ( ( retrier ) != null ) { retrier . operationComplete ( this , remainingTries ) ; } state = com.basho.riak.client.core.FutureOperation.State.COMPLETE ; latch . countDown () ; fireListeners () ; } } 
public void replaceValue ( T newValue , int index ) { if ( ! ( indexCheck ( index ) ) ) return; linkedList.Node < T > currentNode = this . start ; for ( int i = 0 ; i < index ; i ++ ) { currentNode = currentNode . getTail () ; } currentNode . setHead ( newValue ) ; } 
public static void main ( java.lang.String [] args ) { java.util.List < Coordinate < java.lang.Double > > test = MercatorMapping . MM ( args [ 0 ] , false ) ; java.lang.System.out . println ( ( ( ">> The mapped data has " + ( test . size () ) ) + " entries." ) ) ; java.lang.System.out . println ( ">> The mapped data has COM: " ) ; java.lang.System.out . println ( List_ops . getCOM ( test ) ) ; java.lang.System.out . println ( ">> The mapped data contains:" ) ; List_ops . print_coordlist_double ( test ) ; } 
public void removeContact ( com.addressbook.thorrism.addressbook.Contact contact , int position ) { mBook . removeEntry ( position ) ; mContactHeaders . remove ( position ) ; mBook . saveEventually () ; contact . deleteInBackground ( new com.parse.DeleteCallback () { @ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { createToast ( "Deleted Contact" ) ; } else { e . printStackTrace () ; createToast ( "Failed to delete." ) ; } } } ) ; displayList () ; } 
@ java.lang.Override protected void publishResults ( java.lang.CharSequence constraint , com.alex.develop.adapter.FilterResults results ) { stocks = ( ( java.util.List < com.alex.develop.adapter.Stock > ) ( results.values ) ) ; if ( 0 < ( results.count ) ) { notifyDataSetChanged () ; } else { notifyDataSetInvalidated () ; } mListener . find ( results.count ) ; } 
public void calculateFragLen () { java.util.Collections . sort ( getPosTags () ) ; for ( int posValue : getPosTags () ) { java.util.Set < java.lang.Integer > subList = getNegTags () . subSet ( posValue , ( posValue + 5000 ) ) ; for ( int negValue : subList ) { fragLen = negValue - posValue ; if ( ( ( fragLen ) > 0 ) && ( ( fragLen ) <= 2000 ) ) { ( getCounts () [ ( ( fragLen ) - 1 ) ] ) ++ ; } } } } 
protected void addTurretAngle ( float deltaTurretAngle , int delta ) { float cleanDeltaTurret = kylevedder.com.github.utils.Utils . wrapAngleDelta ( deltaTurretAngle ) ; float turretRateCap = ( delta > 0 ) ? ( ( this . TURRET_TURN_RATE ) / 1000 ) * delta : 0 ; this . turretAngle = kylevedder.com.github.utils.Utils . wrapAngle ( this . turretAngle , kylevedder.com.github.utils.Utils . clampFloat ( cleanDeltaTurret , ( - turretRateCap ) , turretRateCap ) ) ; } 
@ java.lang.Override public java.lang.String save ( com.sia.main.domain.SatManMK satManMK ) { if ( ( satManMK . getIdSatManMK () ) != null ) { java.lang.System.out . println ( satManMK . getIdSatManMK () ) ; satManMKRepo . update ( satManMK ) ; return satManMK . getIdSatManMK () . toString () ; } else { return satManMKRepo . insert ( satManMK ) . toString () ; } } 
public static void main ( java.lang.String [] args ) { double inches ; double meters ; int counter ; counter = 0 ; for ( inches = 1 ; inches <= 144 ; inches ++ ) { meters = inches / 39.37 ; java.lang.System.out . println ( ( ( ( inches + "inches is " ) + meters ) + "meters." ) ) ; counter ++ ; if ( counter == 12 ) { java.lang.System.out . println () ; counter = 0 ; } } } 
private void matchLookAhead ( core.Token token ) throws parser.ParseException { if ( ( lookahead ) != token ) { throw new parser.ParseException ( java.lang.String . format ( "Parse error on line %s, col %s. Found %s, expected %s." , dispatcher . getLine () , dispatcher . getColumn () , lookahead , token ) ) ; } lookahead = dispatcher . nextToken () ; } 
public Common.Message toMessage () { Common.Message listMsg ; java.lang.String content = "" ; int i = 0 ; for ( Common.User item : this . usersList ) { if ( i == 0 ) { content = item . getUsername () ; } else { content = ( content + " " ) + ( item . getUsername () ) ; } i ++ ; } listMsg = new Common.Message ( content , new Common.User ( "Server" ) , MessageType.DATA ) ; return listMsg ; } 
@ java.lang.Override public void onNavigationEvent ( int navigationEvent , android.os.Bundle extras ) { super . onNavigationEvent ( navigationEvent , extras ) ; if ( ( navigationEvent == ( NAVIGATION_FINISHED ) ) && ( ( index ) <= ( urls.length ) ) ) { android.support.customtabs.CustomTabsIntent.Builder builder = new android.support.customtabs.CustomTabsIntent.Builder ( session ) ; builder . setToolbarColor ( android.support.v4.content.ContextCompat . getColor ( activity , R.color.accent ) ) ; android.support.customtabs.CustomTabsIntent customTabsIntent = builder . build () ; customTabsIntent . launchUrl ( activity , android.net.Uri . parse ( urls [ ( ( index ) ++ ) ] ) ) ; } } 
private short getCheckedValue ( long address ) { if ( address > ( handlerBlock . getAddressEnd () ) ) { return 13567 ; } else { return ( ( short ) ( ( data . get ( ( ( int ) ( address ) ) ) ) & 255 ) ) ; } } 
@ java.lang.Override public void handleMessage ( android.os.Message message ) { if ( ( message.arg2 ) == 1 ) { switch ( message.arg1 ) { case 1 : thread1JobDone = true ; break; case 2 : thread2JobDone = true ; break; case 3 : thread3JobDone = true ; break; } if ( ( ( thread1JobDone ) && ( thread2JobDone ) ) && ( thread3JobDone ) ) { themeAll . sortIndex () ; } adapterAll . notifyDataSetChanged () ; } } 
public void setReturnDate ( long returnDate , android.content.Context context ) { this . returnDate = returnDate ; if ( ( returnDate < ( loanDate ) ) && ( returnDate != ( - 1 ) ) ) { android.util.Log . i ( org.bbt.kiakoa.model.Loan.TAG , "return date should not be lower than loan date" ) ; setLoanDate ( returnDate , context ) ; } } 
protected java.util.ArrayList < java.lang.String > getLabelsFromData () { int size = ( ( chartView.data . size () ) > 0 ) ? chartView.data . get ( 0 ) . size () : 0 ; java.util.ArrayList < java.lang.String > result = new java.util.ArrayList < java.lang.String > ( size ) ; for ( int i = 0 ; i < size ; i ++ ) result . add ( chartView.data . get ( 0 ) . getLabel ( i ) ) ; return result ; } 
public static void playAgain () { java.lang.System.out . println ( "Do You Want To Give It Another Go?   \n1. Yea, I\'m Game \n2. Nah, Let\'s Try Something Else" ) ; int response = cs1.Keyboard . readInt () ; if ( response == 1 ) { CardGame . reset () ; CardGame . main ( null ) ; } else if ( response == 2 ) { CardGame . reset () ; Woo . main ( null ) ; } else { java.lang.System.out . println ( "I don't understand, so I'll ask again" ) ; CardGame . playAgain () ; } } 
protected void getFillersFromFile ( org.w3c.dom.Document doc , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.View nerView ) throws edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.XMLException { org.w3c.dom.Element element = doc . getDocumentElement () ; org.w3c.dom.Element fillerElement = edu.illinois.cs.cogcomp.nlp.corpusreaders.aceReader.SimpleXMLParser . getElement ( element , edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLERS ) ; org.w3c.dom.NodeList fillerNl = fillerElement . getElementsByTagName ( edu.illinois.cs.cogcomp.nlp.corpusreaders.ereReader.FILLER ) ; for ( int i = 0 ; i < ( fillerNl . getLength () ) ; ++ i ) readFiller ( fillerNl . item ( i ) , nerView ) ; } 
@ org.junit.Test public void getTotalSequencesIterated ( ) throws java.lang.Exception { randoop.generation.exhaustive.SequenceGenerator < java.lang.String > sgenLarger = new randoop.generation.exhaustive.SequenceGenerator ( largerSet ) ; long beforeIterateLarger = sgenLarger . getTotalSequencesIterated () . longValue () ; int numberOfSequencesToGenerate = 13 ; for ( int i = 0 ; i < numberOfSequencesToGenerate ; i ++ ) { sgenLarger . next () ; } org.junit.Assert . assertEquals ( 0 , beforeIterateLarger ) ; org.junit.Assert . assertEquals ( numberOfSequencesToGenerate , sgenLarger . getTotalSequencesIterated () . intValue () ) ; } 
public boolean updateIndentString ( com.hlz.webModel.IndentModel model , java.lang.String reserve , java.lang.String fulfill ) { com.hlz.entity.Indent indent = dao . updateIndent ( model , reserve , fulfill ) ; if ( indent != null ) { messaging . convertAndSend ( "/topic/update" , indent . getId () ) ; rabbitTemplate . convertAndSend ( "update-indent" , indent . getId () ) ; return true ; } else { return false ; } } 
static boolean cannotDisplay ( com.forgerock.opendj.cli.ConsoleApplication app , org.forgerock.opendj.config.PropertyDefinition < ? > pd , java.util.Set < java.lang.String > allowedPropertyNames ) { return ( ( pd . hasOption ( PropertyOption.HIDDEN ) ) || ( ( ! ( app . isAdvancedMode () ) ) && ( pd . hasOption ( PropertyOption.ADVANCED ) ) ) ) || ( ( ! ( allowedPropertyNames . isEmpty () ) ) && ( ! ( allowedPropertyNames . contains ( pd . getName () ) ) ) ) ; } 
@ java.lang.Override public N getNodeAt ( int index ) { if ( ( ( sourceNodes ) != null ) && ( index < ( sourceNodes . size () ) ) ) { return sourceNodes . get ( index ) ; } if ( ( sinkNodes ) != null ) { int sinkIndex = ( ( sourceNodes ) == null ) ? index : index - ( sourceNodes . size () ) ; return sinkNodes . get ( sinkIndex ) ; } throw new java.lang.IndexOutOfBoundsException () ; } 
private void jButton1ActionPerformed ( java.awt.event.ActionEvent evt ) { mdHotels = ( ( javax.swing.table.DefaultTableModel ) ( jTableHotels . getModel () ) ) ; if ( ( jTableHotels . getSelectedRowCount () ) == 0 ) { javax.swing.JOptionPane . showMessageDialog ( this , "please select the Hotel to delete" ) ; return; } java.lang.String HotelName ; int TempSelectRow = jTableHotels . getSelectedRow () ; HotelName = mdHotels . getValueAt ( TempSelectRow , 0 ) . toString () ; deleteHotel ( HotelName ) ; mdHotels . removeRow ( jTableHotels . getSelectedRow () ) ; } 
@ org.testng.annotations.Test public void testUDFEnoughInput ( ) throws java.lang.Exception { org.apache.pig.data.Tuple tuple = org.apache.pig.data.TupleFactory . getInstance () . newTuple ( 31 ) ; for ( int i = 0 ; i < 31 ; i ++ ) { tuple . set ( i , 0 ) ; } tuple . set ( 0 , "M" ) ; org.apache.pig.data.DataBag dataBag = instance . exec ( tuple ) ; org.testng.Assert . assertEquals ( 31 , dataBag . size () ) ; org.testng.Assert . assertEquals ( dataBag . iterator () . next () . size () , 5 ) ; } 
@ java.lang.Override public int compare ( hu.schonherz.training.web.supervisor.accessories.UserResults o1 , hu.schonherz.training.web.supervisor.accessories.UserResults o2 ) { return ( ( o1 . getExamSum () ) + ( o1 . getHomeworkSum () ) ) > ( ( o2 . getExamSum () ) + ( o2 . getHomeworkSum () ) ) ? - 1 : ( ( o1 . getExamSum () ) + ( o1 . getHomeworkSum () ) ) == ( ( o2 . getExamSum () ) + ( o2 . getHomeworkSum () ) ) ? 0 : 1 ; } 
public void analyze ( semanticAnalyzer.AssignStatementTail AST ) { output . accept ( ( ( AST . getLine () ) + ": analyze AssignStatementTail\n" ) ) ; if ( ( AST . getAddExpression () ) != null ) { analyze ( AST . getAddExpression () ) ; } analyze ( AST . getExp () ) ; } 
public void cleanUp () { try { if ( ( this . ps ) != null ) { this . ps . close () ; } if ( ( this . dbConnection ) != null ) { this . dbConnection . close () ; } } catch ( java.sql.SQLException e ) { java.lang.System.out . println ( e . getMessage () ) ; } } 
public static boolean isPowerOfTwo ( long number ) { if ( number < 0 ) { throw new java.lang.IllegalArgumentException ( ( ( "number: " + number ) + ". Number cannot be neagative." ) ) ; } if ( ( number & ( - number ) ) == number ) { return true ; } return false ; } 
public void add ( seedu.taskboss.model.task.Task toAdd ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert toAdd != null ; if ( ( contains ( toAdd ) ) && ( ! ( toAdd . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } internalList . add ( toAdd ) ; } 
@ java.lang.Override public void run () { java.lang.String mess ; java.lang.String sIndex = java.lang.String . valueOf ( index ) ; if ( ! ( Config . contains ( ( "Messages." + sIndex ) ) ) ) { index = 1 ; } mess = Config . getString ( ( "Messages." + sIndex ) ) ; if ( mess . contains ( "&" ) ) mess = mess . replace ( "&" , "�" ) ; sendBossBar ( mess , 10 ) ; index = ( index ) + 1 ; } 
@ java.lang.Override public void execute ( network.Session session , game.model.Game game ) { game.util.GameRenderer gameRenderer = game . getGameRenderer () ; if ( ( this . backgroundValue ) != null ) { gameRenderer . setBackgroundColor ( this . backgroundValue ) ; } if ( ( this . foregroundValue ) != null ) { gameRenderer . setForegroundColor ( this . foregroundValue ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/getGeneratedCode" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) @ org.springframework.web.bind.annotation.ResponseBody public java.lang.String getGeneratedCode ( @ org.springframework.web.bind.annotation.RequestParam ( value = "name" , required = true ) java.lang.String name , @ org.springframework.web.bind.annotation.RequestParam ( value = "tbName" , required = true ) java.lang.String tbName ) throws java.lang.Exception { java.lang.String generatedCode = "" ; if ( ( name . length () ) > 100 ) { return generatedCode ; } sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables tbEnum = sg.com.fbs.web.ui.controller.common.CodeAjaxAllowedTables . valueOf ( tbName ) ; if ( tbEnum == null ) { return generatedCode ; } generatedCode = new sg.com.fbs.services.common.codegen.mgr.CodeGeneratorManagerBD () . getGeneratedCode ( tbEnum . getTableName () , name ) ; return generatedCode ; } 
public static org.opengis.referencing.operation.MathTransform1D create ( final double base , final double offset ) { org.apache.sis.util.ArgumentChecks . ensureStrictlyPositive ( "base" , base ) ; if ( base == 10 ) { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.Base10 . create ( offset ) ; } else { return org.apache.sis.referencing.operation.transform.LogarithmicTransform1D.NATURAL . concatenate ( ( 1 / ( java.lang.Math . log ( base ) ) ) , offset ) ; } } 
public void clear () { if ( ( graphics2D ) != null ) { graphics2D . setPaint ( java.awt.Color.white ) ; graphics2D . fillRect ( 0 , 0 , getSize () . width , getSize () . height ) ; graphics2D . setPaint ( java.awt.Color.black ) ; } } 
public static void main ( java.lang.String [] args ) { if ( ( args.length ) == 1 ) { try { int starWarsSequence = java.lang.Integer . parseInt ( args [ 0 ] ) ; java.lang.System.out . println ( ( "Star Wars sequance: " + starWarsSequence ) ) ; } catch ( java.lang.NumberFormatException e ) { java.lang.System.err . println ( ( ( "Argument" + ( args [ 0 ] ) ) + " must be an integer." ) ) ; java.lang.System . exit ( 2 ) ; } } else { java.lang.System.err . println ( "There must be exactly 1 argument." ) ; java.lang.System . exit ( 1 ) ; } } 
public void showBottomLoading ( boolean show ) { if ( ( mShowBottomLoading ) != show ) { if ( show ) { mShowBottomLoading = true ; com.livae.android.loading.RecyclerAdapter . notifyItemInserted ( getBottomLoadingPosition () ) ; } else { com.livae.android.loading.RecyclerAdapter . notifyItemRemoved ( getBottomLoadingPosition () ) ; mShowBottomLoading = false ; } } } 
public boolean equals ( java.lang.Object other ) { if ( ! ( other instanceof oharaShapes3D.CubicShape ) ) throw new java.lang.IllegalArgumentException ( "Compared object must be a CubicShape" ) ; else { oharaShapes3D.CubicShape cs = ( ( oharaShapes3D.CubicShape ) ( other ) ) ; return ( ( ( this . getLength () ) == ( cs . getLength () ) ) && ( ( this . getWidth () ) == ( cs . getWidth () ) ) ) && ( ( this . getHeight () ) == ( cs . getHeight () ) ) ; } } 
private int toInteger ( org.jackace.jawascriptexecutive.Executor.JawaObjectRef o ) throws org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException { if ( ( o.object ) instanceof java.lang.Double ) { int magnitude = ( ( int ) ( ( long ) ( java.lang.Math . floor ( java.lang.Math . abs ( ( ( java.lang.Double ) ( o.object ) ) ) ) ) ) ) ; int sign = ( ( ( java.lang.Double ) ( o.object ) ) >= 0 ) ? 1 : - 1 ; return magnitude * sign ; } throw new org.jackace.jawascriptexecutive.Executor.JawascriptRuntimeException ( "Not yet implemented conversion." ) ; } 
public void playGame () { boolean gameIsActive = true ; while ( gameIsActive ) { for ( int indexPlayer = 0 ; indexPlayer < ( players.length ) ; indexPlayer ++ ) { if ( indexPlayer == ( humanPlayerId ) ) { java.lang.System.out . println ( "THIS IS A HUMAN" ) ; showPlayerTurn () ; } else { java.lang.System.out . println ( "This is a bot" ) ; showBotTurn () ; } } gameIsActive = false ; } } 
@ java.lang.Override public void close () { listeners . clear () ; if ( ( chatToggleCommand ) != null ) { chatToggleCommand . close () ; chatToggleCommand = null ; } if ( ( chatListenCommand ) != null ) { chatListenCommand . close () ; chatListenCommand = null ; } } 
@ com.facebook.react.bridge.ReactMethod public void get ( java.lang.String key , java.lang.String bucketName , com.facebook.react.bridge.Callback callback ) { android.content.SharedPreferences preferences = getBucket ( bucketName ) ; java.lang.Object value = preferences . getAll () . get ( key ) ; if ( value != null ) { callback . invoke ( value . toString () ) ; } else { callback . invoke () ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.parse.ParseFacebookUtils . logInWithReadPermissionsInBackground ( this , java.util.Arrays . asList ( "user_location, email, user_birthday" ) , new com.parse.LogInCallback () { @ java.lang.Override public void done ( com.parse.ParseUser parseUser , com.parse.ParseException e ) { showProgress ( true ) ; if ( parseUser == null ) {} else if ( parseUser . isNew () ) { getFacebookInfo () ; } else { android.util.Log . d ( com.trytara.tara.LoginActivity.TAG , ( "CURRENT USER: " + ( parseUser . toString () ) ) ) ; } } } ) ; } 
public T getFirst () { if ( ( first ) != ( ( ( last ) + 1 ) % ( deque.length ) ) ) { if ( ( first ) > 0 ) { return ( ( T ) ( deque [ ( ( ( first ) - 1 ) % ( deque.length ) ) ] ) ) ; } else { return ( ( T ) ( deque [ ( ( deque.length ) - 1 ) ] ) ) ; } } return null ; } 
boolean canBeMerged ( final com.orientechnologies.orient.core.sql.OIndexSearchResult searchResult ) { if ( ( lastField . isLong () ) || ( searchResult.lastField . isLong () ) ) { return false ; } if ( ( ! ( lastOperator . canBeMerged () ) ) || ( ! ( searchResult.lastOperator . canBeMerged () ) ) ) { return false ; } return ( com.orientechnologies.orient.core.sql.OIndexSearchResult . isIndexEqualityOperator ( lastOperator ) ) || ( com.orientechnologies.orient.core.sql.OIndexSearchResult . isIndexEqualityOperator ( searchResult.lastOperator ) ) ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( savedInstanceState == null ) { android.content.Intent intent = getIntent () ; if ( intent . getBooleanExtra ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.EXTRA_SKIP_WELCOME , false ) ) { next ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.PAGE_WELCOME , null , true ) ; } else { next ( ( ( java.lang.String ) ( null ) ) , null ) ; } } else { android.util.Log . w ( fr.gaulupeau.apps.Poche.ui.preferences.ConnectionWizardActivity.TAG , "onCreate() savedInstanceState != null" ) ; } } 
public java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > getTrashboxMails ( org.bitbucket.ucchy.undine.sender.MailSender sender ) { if ( ! ( isLoaded ) ) { return null ; } java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > box = new java.util.ArrayList < org.bitbucket.ucchy.undine.MailData > () ; for ( org.bitbucket.ucchy.undine.MailData mail : mails ) { if ( ( mail . isRelatedWith ( sender ) ) && ( mail . isSetTrash ( sender ) ) ) { box . add ( mail ) ; } } org.bitbucket.ucchy.undine.MailManager . sortNewer ( box ) ; return box ; } 
@ java.lang.Override public android.database.Cursor loadInBackground () { android.database.Cursor result = super . loadInBackground () ; if ( ( ! ( mEnableCapture ) ) || ( ! ( com.zhihu.matisse.internal.utils.MediaStoreCompat . hasCameraFeature ( getContext () ) ) ) ) { return result ; } android.database.MatrixCursor dummy = new android.database.MatrixCursor ( com.zhihu.matisse.internal.loader.AlbumMediaLoader.PROJECTION ) ; dummy . addRow ( new java.lang.Object [] { com.zhihu.matisse.internal.entity.Item.ITEM_ID_CAPTURE , com.zhihu.matisse.internal.entity.Item.ITEM_DISPLAY_NAME_CAPTURE , "" , 0 , 0 } ) ; return new android.database.MergeCursor ( new android.database.Cursor [] { dummy , result } ) ; } 
public org.matsim.contrib.zone.Zone getZone ( org.matsim.contrib.zone.Coord coord ) { int r = ( ( int ) ( ( ( coord . getY () ) - ( minY ) ) / ( cellSize ) ) ) ; int c = ( ( int ) ( ( ( coord . getX () ) - ( minX ) ) / ( cellSize ) ) ) ; return zones [ ( ( r * ( cols ) ) + c ) ] ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { java.lang.String address = "" ; if ( v == ( this . lblBitcoinAddress ) ) address = this . getActivity () . getString ( R.string.bitcoin_address ) ; else if ( v == ( this . lblLitecoinAddress ) ) address = this . getActivity () . getString ( R.string.litecoin_address ) ; net.alegen.android.netclip.util.Clipboard . getInstance ( this . getActivity () ) . setClipboardText ( address ) ; } 
@ org.junit.Test public void getCurrentCallValue_input_returns () { int smallBlind = 30 ; int credits = 100 ; pokerController . setDealer ( pokerController . getPlayerList () . get ( 0 ) ) ; pokerController . setStartCredits ( credits ) ; pokerController . setBlinds ( smallBlind ) ; pokerController . startGame ( 0 ) ; org.junit.Assert . assertEquals ( pokerController . getPlayerList () . get ( 0 ) , pokerController . getCurrentPlayer () ) ; int callValue = pokerController . getCurrentCallValue () ; org.junit.Assert . assertEquals ( ( smallBlind * 2 ) , callValue ) ; } 
public void speakAloud ( android.view.View v ) { if ( ( currVocab . getSpeech () ) != null ) { playSound ( currVocab . getSpeech () ) ; } else { com.example.sco.imuvo.HelperClasses.WebServiceHelper webServiceHelper = new com.example.sco.imuvo.HelperClasses.WebServiceHelper () ; webServiceHelper . setWebServiceHelperListener ( new com.example.sco.imuvo.HelperClasses.WebServiceHelperListener () { @ java.lang.Override public void onWebServiceReturnResult ( byte [] result ) { currVocab . setSpeech ( result ) ; com.example.sco.imuvo.HelperClasses.VocabDatabaseHelper . update ( currVocab ) ; playSound ( result ) ; } } ) ; webServiceHelper . getSpeechAsync ( currVocab ) ; } } 
private void printAll () { java.lang.System.out . println ( "------Server Data------" ) ; java.lang.System.out . println ( ( "username: " + ( username ) ) ) ; java.lang.System.out . println ( ( "password: " + ( password ) ) ) ; java.lang.System.out . println ( ( "salt: " + ( salt ) ) ) ; java.lang.System.out . print ( ( "challengeAnswer: " + ( challengeAnswer ) ) ) ; java.lang.System.out . println ( "" ) ; java.lang.System.out . println ( ( "timesToRunHash: " + ( timesToRunHash ) ) ) ; java.lang.System.out . println ( ( "Hash bit length: " + ( HASH_BIT_LENGTH ) ) ) ; java.lang.System.out . println ( "------ENd Server Data--------" ) ; } 
@ java.lang.Override void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , long attributePointer , int attributeCount ) throws org.xml.sax.SAXException { if ( ( ( depth ) ++ ) > 0 ) { super . startElement ( uri , localName , qName , attributePointer , attributeCount ) ; } } 
private int element_manhattan ( int i , int j , int index ) { int ori_i = ( index - 1 ) / ( dimension () ) ; int ori_j = ( index - ( ori_i * ( dimension () ) ) ) - 1 ; int idistance = java.lang.Math . abs ( ( i - ori_i ) ) ; int jdistance = java.lang.Math . abs ( ( j - ori_j ) ) ; return idistance + jdistance ; } 
public MiniJavaVar findVar ( java.lang.String varName ) { int n = contexts . size () ; for ( n -= 1 ; n >= 0 ; n -- ) { MiniJavaVar findRes = contexts . get ( n ) . vars . get ( varName ) ; if ( findRes != null ) { return findRes ; } } return null ; } 
@ java.lang.Override public void save ( org.openstack.atlas.service.domain.services.impl.AccountLimit accountLimit ) throws org.openstack.atlas.service.domain.exceptions.BadRequestException { org.openstack.atlas.service.domain.services.impl.AccountLimit dbLimit = accountLimitRepository . getByAccountIdAndType ( accountLimit . getAccountId () , accountLimit . getLimitType () ) ; if ( dbLimit != null ) { throw new org.openstack.atlas.service.domain.exceptions.BadRequestException ( ( ( ( "A limit for the Limit Type " + ( dbLimit . getLimitType () . getName () . toString () ) ) + " already exists for the account id " ) + ( dbLimit . getAccountId () ) ) ) ; } accountLimitRepository . save ( accountLimit ) ; } 
@ java.lang.Override public boolean f ( com.google.gwt.user.client.Event e ) { com.google.gwt.query.client.GQuery el = $ ( e . getEventTarget () ) ; com.cgxlib.core.component.tab.ViewHandler < ? > viewHandler = com.cgxlib.core.component.tab.CGXHelper . getViewHandlerAsData ( el ) ; if ( ( viewHandler != null ) && ( viewHandler instanceof com.cgxlib.core.component.tab.TabView.ViewHandler ) ) { el . as ( CGXlib.CGX ) . as ( com.cgxlib.core.component.tab.Tab.CGX , viewHandler ) . show () ; } else { el . as ( com.cgxlib.core.component.tab.Tab.CGX ) . show () ; } return true ; } 
private void setTime ( java.util.Calendar calendar ) { setDate ( calendar . get ( java.util.Calendar.DAY_OF_MONTH ) , ( ( calendar . get ( java.util.Calendar.MONTH ) ) + 1 ) , calendar . get ( java.util.Calendar.YEAR ) ) ; setTime ( calendar . get ( java.util.Calendar.HOUR_OF_DAY ) , calendar . get ( java.util.Calendar.MINUTE ) ) ; timeChosen = calendar ; } 
private boolean contains ( java.io.File file ) { boolean result ; try { java.lang.String sFile = file . toString () ; result = ( ( ( location . length () ) > 0 ) && ( sFile . startsWith ( location . toString () ) ) ) || ( sFile . startsWith ( location . getCanonicalPath () . toString () ) ) ; } catch ( java.io.IOException e ) { result = false ; } return result ; } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( null == ( rootView ) ) || ( cacheContentData ) ) { rootView = onCreateFragmentView ( inflater , container , savedInstanceState ) ; } unbinder = butterknife.ButterKnife . bind ( this , rootView ) ; return rootView ; } 
public java.lang.Object pre ( int t ) { if ( t == 0 ) { return ref ; } t = t - 1 ; checkCapacity ( t ) ; if ( t >= ( size ) ) { return bonsai.runtime.core.Cast . toLattice ( name , ref ) . bottom () ; } else { return stream [ preIndex ( t ) ] ; } } 
public static void onPlayerTeleport ( org.bukkit.entity.Player player , org.bukkit.Location to ) { if ( ! ( com.frdfsnlght.inquisitor.PlayerStats.started ) ) { return; } if ( com.frdfsnlght.inquisitor.PlayerStats . isStatsPlayer ( player ) ) { com.frdfsnlght.inquisitor.PlayerStats.PlayerState state = com.frdfsnlght.inquisitor.PlayerStats.playerStates . get ( player . getName () ) ; if ( state != null ) { com.frdfsnlght.inquisitor.PlayerStats . onPlayerMove ( player , player . getLocation () ) ; state.lastLocation = to ; state.lastTime = java.lang.System . currentTimeMillis () ; } } } 
int getSessionStartPointerMillis () { if ( ( ( this ) == ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition ) ) && ( ( mSessionStartPointerMillis ) == ( java.lang.Integer.MIN_VALUE ) ) ) return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mNowPosition . getSessionStartPointerMillis () ; if ( ( ( this ) != ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition ) ) && ( ( mSessionStartPointerMillis ) < ( ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition . getSessionStartPointerMillis () ) ) ) return ee.ioc.phon.android.speechutils.ContinuousRawAudioRecorder.SessionStartPointer.mBeginningOfBufferPosition . getSessionStartPointerMillis () ; return mSessionStartPointerMillis ; } 
@ java.lang.Override public void onStart () { super . onStart () ; final android.content.Context context = getApplicationContext () ; if ( ( org.droidplanner.android.utils.Utils . getAppVersionCode ( context ) ) > ( mAppPrefs . getSavedAppVersionCode () ) ) { org.droidplanner.android.dialogs.DialogMaterialFragment changelog = new org.droidplanner.android.dialogs.DialogMaterialFragment () ; changelog . show ( getSupportFragmentManager () , "Changelog Dialog" ) ; mAppPrefs . updateSavedAppVersionCode ( context ) ; } } 
public com.sproutigy.commons.binary.BinaryBuilder append ( java.io.InputStream inputStream ) throws com.sproutigy.commons.binary.BinaryException { try { byte [] buffer = new byte [ 4 * 1024 ] ; int readlen ; while ( ( readlen = inputStream . read ( buffer ) ) != ( Binary.EOF ) ) { append ( buffer , 0 , readlen ) ; } } catch ( java.io.IOException e ) { throw new com.sproutigy.commons.binary.BinaryException ( e ) ; } return this ; } 
private void makeURL () { java.lang.String URL = ( MainActivity2.URL ) + ( MainActivity2.USN ) ; android.content.Intent i = new android.content.Intent ( getActivity () , com.teamidentiti.fastvturesults.Services.SemestersService . class ) ; i . putExtra ( "URL" , URL ) ; i . putExtra ( "USN" , MainActivity2.USN ) ; getActivity () . startService ( i ) ; } 
public com.dumbpug.crossbowknight.particles.Particle generate ( com.dumbpug.crossbowknight.particles.EmitterDetails emitterDetails ) { float randomVelx = ( ( random . nextFloat () ) * 2.0F ) - 1.0F ; float randomVely = ( ( random . nextFloat () ) * 2.0F ) - 1.0F ; return new com.dumbpug.crossbowknight.particles.ExplosionParticle ( emitterDetails.positionX , emitterDetails.positionY , randomVelx , randomVely , level ) ; } 
@ java.lang.Override public dyvil.tools.compiler.ast.field.IDataMember resolveField ( dyvil.tools.parsing.Name name ) { if ( ( this . variables ) == null ) { return null ; } for ( int i = ( this . variables . size () ) - 1 ; i >= 0 ; i -- ) { final dyvil.tools.compiler.ast.field.IVariable variable = this . variables . get ( i ) ; if ( ( variable . getName () ) == name ) { return variable ; } } return null ; } 
public int getMaxEggGroupID () { android.database.Cursor cursor = database . query ( EGG_GROUPS_TABLE , null , null , null , null , null , null ) ; cursor . moveToLast () ; int maxEggGroupID = cursor . getInt ( cursor . getColumnIndex ( EGG_GROUP_ID ) ) ; if ( PRINT_DEBUG ) android.util.Log . v ( "Database Access" , ( "Max eggGroupID is: " + ( java.lang.String . valueOf ( maxEggGroupID ) ) ) ) ; cursor . close () ; return maxEggGroupID + 1 ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; int weekday = 5 ; int weekend = 9 ; int optimalHours = 7 * 8 ; int actualHours = weekday * 5 ; actualHours = actualHours + ( weekend * 2 ) ; int solution = optimalHours - actualHours ; display ( solution ) ; } 
private boolean isPromotion ( final de.htwsaar.chessbot.engine.model.Position start , final de.htwsaar.chessbot.engine.model.Position target ) { if ( isWhite () ) { if ( ( ( start . rank () ) == 7 ) && ( ( target . rank () ) == 8 ) ) return true ; } else { if ( ( ( start . rank () ) == 2 ) && ( ( target . rank () ) == 1 ) ) return true ; } return false ; } 
private void refreshMap () { if ( ( ( mMap ) != null ) && ( ( myRoute . size () ) > 0 ) ) { com.google.android.gms.maps.model.LatLng temp1 = new com.google.android.gms.maps.model.LatLng ( myRoute . get ( 0 ) . getLatitude () , myRoute . get ( 0 ) . getLongitude () ) ; mMap . moveCamera ( com.google.android.gms.maps.CameraUpdateFactory . newLatLng ( temp1 ) ) ; } return; } 
@ java.lang.Override public minetweaker.api.item.IItemStack transform ( minetweaker.api.item.IItemStack item , minetweaker.api.player.IPlayer byPlayer ) { if ( ( item . getAmount () ) > 1 ) { byPlayer . give ( withItem ) ; return item ; } else { return withItem . withAmount ( withItem . getAmount () ) ; } } 
@ java.lang.Override protected void onPreExecute () { ( ( android.app.Activity ) ( context ) ) . getWindow () . addFlags ( WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON ) ; this . loadingDialog . setIndeterminate ( true ) ; this . loadingDialog . setCancelable ( false ) ; this . loadingDialog . setTitle ( getString ( R.string.settings_downloadHDSpots_button_label ) ) ; this . loadingDialog . setMessage ( ( "Downloading: " + ( lstToDownload ) ) ) ; this . loadingDialog . show () ; } 
private void checkFirePrimary () { if ( ( input . isFirePrimaryWeapon () ) && ( ( counter ) > 30 ) ) { model.Bubble bubble = new model.Bubble ( getX () , getY () , 0 , 0 , 0 , 0 , facingRight , levelController ) ; bubbles . add ( bubble ) ; levelController . getScreenController () . addToSprites ( bubble ) ; counter = 0 ; } else { ( counter ) ++ ; } } 
java.util.ArrayList getArrayAbschnitt ( java.util.ArrayList list , int i , int j ) { java.lang.System.out . println ( ( "list vor Abschnitt " + list ) ) ; java.util.ArrayList abschnitt = new java.util.ArrayList <> () ; for ( int k = i ; k < ( j + 1 ) ; k ++ ) { abschnitt . add ( list . get ( k ) ) ; } java.lang.System.out . println ( ( ( ( ( ( "list nach Abschnitt von" + i ) + "bis" ) + j ) + "ist" ) + abschnitt ) ) ; return abschnitt ; } 
@ java.lang.Override public void widgetSelected ( org.eclipse.swt.events.SelectionEvent arg0 ) { parking.house.gui.AddVehicleDialog dialog = new parking.house.gui.AddVehicleDialog ( shell ) ; dialog . open () ; parking.house.model.Vehicle v = dialog . getVehicle () ; if ( v != null ) { java.lang.System.out . println ( ( "Choosed vehicle:" + v ) ) ; setValue ( v ) ; } } 
@ java.lang.Override public boolean equals ( final java.lang.Object o ) { if ( ! ( o instanceof groovyx.net.http.NonBlockingCookieStore.UriKey ) ) { return false ; } final groovyx.net.http.NonBlockingCookieStore.UriKey rhs = ( ( groovyx.net.http.NonBlockingCookieStore.UriKey ) ( o ) ) ; return ( host . equals ( rhs.host ) ) && ( name . equals ( rhs.name ) ) ; } 
public void enterArrayAccess_lfno_primary ( ceylon.tool.converter.java2ceylon.ArrayAccess_lfno_primaryContext ctx ) { try { enterArrayAccess_lfno_primary = true ; if ( equalsequalsNull ) { bw . write ( "!" ) ; } bw . write ( ( ( ctx . expressionName () . getText () ) + ".get(" ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void buttonClick ( com.vaadin.ui.Button.ClickEvent event ) { logger . log ( java.util.logging.Level.INFO , ( ( "logge " + ( getSession () . getAttribute ( "user" ) ) ) + " aus..." ) ) ; getSession () . setAttribute ( "user" , null ) ; com.example.testme.server.broadcast.Broadcaster . broadcast ( getUI () . getSession () . getSession () . getId () , username , false ) ; getUI () . getNavigator () . navigateTo ( com.example.testme.client.lobby.LobbyPresenter.NAME ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { android.content.Intent i = new android.content.Intent ( getActivity () , com.mintminter.simpletwitter.activity.ComposeActivity . class ) ; if ( ( mUser ) != null ) { i . putExtra ( Util.EXTRA_USER , org.parceler.Parcels . wrap ( mUser ) ) ; } getActivity () . startActivityForResult ( i , Util.REQUESTCODE_COMPOSE ) ; } 
@ com.emc.sa.api.GET @ com.emc.sa.api.Path ( value = "/job-status" ) @ com.emc.sa.api.Produces ( value = { javax.ws.rs.core.MediaType.APPLICATION_XML , javax.ws.rs.core.MediaType.APPLICATION_JSON } ) @ com.emc.storageos.security.authorization.CheckPermission ( roles = { com.emc.storageos.security.authorization.Role.TENANT_ADMIN } ) public com.emc.sa.api.OrderJobInfo getJobStatus ( @ com.emc.sa.api.DefaultValue ( value = "DELETE_ORDER" ) @ com.emc.sa.api.QueryParam ( value = com.emc.vipr.client.catalog.impl.SearchConstants.JOB_TYPE ) java.lang.String typeStr ) { com.emc.sa.api.utils.OrderServiceJob.JobType type ; try { type = OrderServiceJob.JobType . valueOf ( typeStr ) ; } catch ( java.lang.Exception e ) { com.emc.sa.api.OrderService.log . error ( "Failed to get job type e=" , e ) ; throw APIException.badRequests . invalidParameterWithCause ( SearchConstants.JOB_TYPE , typeStr , e ) ; } com.emc.sa.api.utils.OrderJobStatus status = queryJobInfo ( type ) ; return status != null ? status . toOrderJobInfo () : new com.emc.sa.api.OrderJobInfo () ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent event ) { javafx.stage.DirectoryChooser directoryChooser = new javafx.stage.DirectoryChooser () ; java.io.File selectedDirectory = directoryChooser . showDialog ( stage ) ; if ( selectedDirectory == null ) { path = null ; } else { path . setText ( selectedDirectory . getAbsolutePath () ) ; } } 
public void onDateSet ( android.widget.DatePicker view , int year , int month , int day ) { month = month + 1 ; java.lang.String birthdate = ( ( ( day + "/" ) + month ) + "/" ) + year ; java.lang.String last_date = com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information . remove ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc ) ; if ( ( last_date == null ) || ( ! ( last_date . equals ( birthdate ) ) ) ) { com.example.mishaberkovich.roomsquad.EditProfileActivity.changes_saved = false ; } com.example.mishaberkovich.roomsquad.EditProfileActivity.profile_information . add ( com.example.mishaberkovich.roomsquad.EditProfileActivity.birthdate_loc , birthdate ) ; com.example.mishaberkovich.roomsquad.EditProfileActivity . displayAge ( getActivity () ) ; } 
public static void main ( java.lang.String [] args ) throws java.io.IOException { for ( int i = 0 ; i < ( TestController.files.length ) ; i ++ ) { TestController . tests ( 10 , "p" , ( ( TestController.root ) + ( TestController.files [ i ] ) ) , i , TestController.maxValues [ i ] ) ; TestController . tests ( 10 , "g" , ( ( TestController.root ) + ( TestController.files [ i ] ) ) , i , TestController.maxValues [ i ] ) ; } } 
public ninja.Result gameGet ( @ ninja.params.PathParam ( value = "choice" ) int choose ) { models.amGame g = new models.amGame () ; models.spGame g2 = new models.spGame () ; if ( choose == 1 ) { g . buildDeck () ; g . shuffle () ; return ninja.Results . json () . render ( g ) ; } else { g2 . buildDeck () ; g2 . shuffle () ; return ninja.Results . json () . render ( g2 ) ; } } 
public static void restoreDensity ( android.content.Context context ) { context . getResources () . getDisplayMetrics () . setToDefaults () ; android.util.DisplayMetrics metrics = com.bulong.rudeness.RudenessScreenHelper . getMetricsOnMiui ( context . getResources () ) ; if ( metrics != null ) metrics . setToDefaults () ; } 
public boolean deleteMapLayerMetadataObject ( edu.harvard.iq.dataverse.MapLayerMetadata mapLayerMetadata , edu.harvard.iq.dataverse.authorization.users.User user ) { edu.harvard.iq.dataverse.MapLayerMetadataServiceBean.logger . info ( "deleteMapLayerMetadataObject" ) ; if ( ( mapLayerMetadata == null ) || ( user == null ) ) { return false ; } if ( permissionService . userOn ( user , mapLayerMetadata . getDataFile () . getOwner () ) . has ( Permission.EditDataset ) ) { this . deleteOlderMapThumbnails ( mapLayerMetadata ) ; em . remove ( em . merge ( mapLayerMetadata ) ) ; return true ; } return false ; } 
public static double rootMeansSquaredError ( double [] real , double [] predicted ) { double ret = 0.0 ; for ( int i = 0 ; i < ( real.length ) ; i ++ ) { ret += java.lang.Math . pow ( ( ( real [ i ] ) - ( predicted [ i ] ) ) , 2 ) ; } return java.lang.Math . sqrt ( ( ret / ( real.length ) ) ) ; } 
public void IncrementCurrentScore ( int currentHole ) { if ( ! ( gameStarted ) ) { return; } if ( ( currentHole >= 1 ) && ( currentHole <= 18 ) ) { if ( ( score [ ( currentHole - 1 ) ] ) >= ( com.manleysoftware.michael.discgolfapp.Model.Player.maxScoreAllowable ) ) { return; } ( score [ ( currentHole - 1 ) ] ) ++ ; } } 
private static long convertToUsDollar ( long quantity , long exchange ) { if ( exchange > 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( quantity ) ) / ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } else if ( exchange < 100 ) { double total = ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( quantity ) ) * ( io.zipcoder.aaronlong.wutangfinancial.Money . downHandleDoubles ( exchange ) ) ; return io.zipcoder.aaronlong.wutangfinancial.Money . upHandleDoubles ( total ) ; } return quantity ; } 
private boolean bracketsBalanced ( java.lang.String input ) { int i = 0 ; for ( char c : input . toCharArray () ) { if ( c == '{' ) i ++ ; if ( c == '}' ) i -- ; if ( i < 0 ) return false ; } return i == 0 ; } 
@ com.fasterxml.jackson.annotation.JsonCreator public static seedu.address.commons.core.Version fromString ( java.lang.String versionString ) throws java.lang.IllegalArgumentException { java.util.regex.Matcher versionMatcher = seedu.address.commons.core.Version.VERSION_PATTERN . matcher ( versionString ) ; if ( ! ( versionMatcher . find () ) ) { throw new java.lang.IllegalArgumentException ( java.lang.String . format ( seedu.address.commons.core.Version.EXCEPTION_STRING_NOT_VERSION , versionString ) ) ; } return new seedu.address.commons.core.Version ( java.lang.Integer . parseInt ( versionMatcher . group ( 1 ) ) , java.lang.Integer . parseInt ( versionMatcher . group ( 2 ) ) , java.lang.Integer . parseInt ( versionMatcher . group ( 3 ) ) , ( ( versionMatcher . group ( 4 ) ) != null ) ) ; } 
private boolean isViewNameValidForCurrentUI ( java.lang.String viewName ) { final java.util.Set < java.lang.String > beanNames = this . viewNameToBeanNamesMap . get ( viewName ) ; if ( beanNames != null ) { for ( java.lang.String beanName : beanNames ) { if ( isViewBeanNameValidForCurrentUI ( beanName ) ) { return ( ( getAccessDeniedView () ) != null ) || ( isAccessGrantedToBeanName ( beanName ) ) ; } } } return false ; } 
private com.tut.beans.Utilisateur traiterEmail ( java.lang.String email , com.tut.beans.Utilisateur utilisateur ) { try { validationEmail ( email ) ; } catch ( java.lang.Exception e ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , e . getMessage () ) ; } utilisateur = utilisateurDao . trouver ( email ) ; if ( utilisateur == null ) { setErreur ( com.tut.forms.ConnexionForm.CHAMP_IDF , "Utilisateur inconnu" ) ; java.lang.System.out . println ( "traiterEmail() --> Echec de l'inscription : utilisateur non stocké en base de données" ) ; } return utilisateur ; } 
@ java.lang.Override public void onPreviewFrame ( byte [] data , android.hardware.Camera camera ) { if ( camera == null ) return; step = camera . getParameters () . getExposureCompensationStep () ; EV = java.lang.Math . max ( step , ( ( step ) * ( camera . getParameters () . getExposureCompensation () ) ) ) ; } 
public void setRuntime ( long runtime ) { if ( ( this . pauseTime ) > 0 ) { this . startTime = ( this . pauseTime ) - runtime ; } else { if ( ( this . startTime ) <= ( - 1 ) ) { this . pauseTime = com.badlogic.gdx.utils.TimeUtils . millis () ; this . startTime = ( pauseTime ) - runtime ; } else { this . startTime = ( com.badlogic.gdx.utils.TimeUtils . millis () ) - runtime ; } } } 
public void solve ( int nb , int source , int destination , int auxiliary ) throws hanoi.TowerIsEmptyException , hanoi.TowerIsFullException { if ( nb == 1 ) { this . moveOneDisc ( source , destination ) ; } else { this . solve ( ( nb - 1 ) , source , auxiliary , destination ) ; this . moveOneDisc ( source , destination ) ; this . solve ( ( nb - 1 ) , auxiliary , destination , source ) ; } } 
public models.Trainer searchTrainersByEmail ( java.lang.String emailEntered ) { if ( ( trainers . size () ) > 0 ) { int i = 0 ; while ( i < ( trainers . size () ) ) { if ( trainers . get ( i ) . getEmail () . equals ( emailEntered ) ) { return trainers . get ( i ) ; } i ++ ; } return null ; } return null ; } 
private int [] quicksort ( int [] list , int low , int high ) { if ( low >= high ) return list ; int pos = partition ( list , low , high ) ; quicksort ( list , low , ( pos - 1 ) ) ; quicksort ( list , ( pos + 1 ) , high ) ; return list ; } 
public final void applyTransformation ( eu.modernmt.model.Word source ) { if ( ( this . transformation ) == null ) { if ( ( source == null ) || ( ! ( source.placeholder . equals ( this . placeholder ) ) ) ) this . text = this . placeholder ; else this . text = source.text ; } else { this . transformation . apply ( source , this ) ; if ( ( this . text ) == null ) this . text = this . placeholder ; } } 
@ java.lang.Override public void handleMessage ( android.os.Message msg ) { io.mstream.mstream.player.MStreamAudioService service = mWeakReference . get () ; if ( ( service != null ) && ( ( service.playbackManager . getPlayback () ) != null ) ) { if ( service.playbackManager . getPlayback () . isPlaying () ) { android.util.Log . d ( io.mstream.mstream.player.MStreamAudioService.TAG , "Ignoring delayed stop since the media player is in use." ) ; return; } android.util.Log . d ( io.mstream.mstream.player.MStreamAudioService.TAG , "Stopping service with delay handler." ) ; service . stopSelf () ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { if ( ( mCallback ) == null ) { android.util.Log . e ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.DEBUG_TAG , "There's no callback set!" ) ; return; } dialog . dismiss () ; switch ( which ) { case 0 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_NORMAL ) ; break; case 1 : mCallback . mapTypeSelected ( net.exclaimindustries.geohashdroid.fragments.MapTypeDialogFragment.MAP_STYLE_NIGHT ) ; break; case 2 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_HYBRID ) ; break; case 3 : mCallback . mapTypeSelected ( GoogleMap.MAP_TYPE_TERRAIN ) ; } } 
@ java.lang.Override public boolean handleChange ( java.lang.Object oldValue , java.lang.Object newValue , org.eclipse.draw2d.IFigure refreshableFigure ) { if ( ( traceDataProvider [ index ] ) != null ) { trace [ index ] . setTraceColor ( getModelColor ( ( ( org.csstudio.sds.component.xygraph.model.XyGraphModel.PROP_PRIMARY_AXIS_TRACE_COLOR_PREFIX ) + index ) ) ) ; } return true ; } 
public static int findMax ( int [] [] a ) { int max = java.lang.Integer.MIN_VALUE ; for ( int i = 0 ; i < ( a.length ) ; i ++ ) { for ( int j = 0 ; j < ( a [ i ] . length ) ; j ++ ) { if ( ( a [ i ] [ j ] ) > max ) { max = a [ i ] [ j ] ; } } } return max ; } 
private void checkSingleExpandMode ( int currExpandedParentPosition ) { if ( ( mExpandCollapseMode.mode ) != ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.ExpandCollapseMode.MODE_SINGLE_EXPAND ) ) return; final int lastExpandedPosition = mExpandCollapseMode.lastExpandedPosition ; if ( lastExpandedPosition == currExpandedParentPosition ) return; com.github.huajianjiang.expandablerecyclerview.util.Logger . e ( com.github.huajianjiang.expandablerecyclerview.widget.ExpandableAdapter.TAG , ( ( "checkSingleExpandMode " + "---->lastExpandedPosition=*" ) + lastExpandedPosition ) ) ; collapseView ( lastExpandedPosition , true , false ) ; mExpandCollapseMode.lastExpandedPosition = currExpandedParentPosition ; } 
@ java.lang.Override public android.support.v4.app.Fragment getItem ( int position ) { switch ( position ) { case 0 : return chatFragment ; case 1 : if ( ( contactsFragment ) != null ) { return contactsFragment ; } return contactsFragment = new com.superchat.ui.ContactsScreen () ; case 2 : return publicGroupFragment ; case 3 : return bulletinFragment ; default: return new com.superchat.ui.TempFragment () ; } } 
private void spreadSkylightDownwards ( int x , int z ) { final int highestBlock = getHighestBlock ( x , z ) ; final int sectionY = highestBlock / ( Section.SECTION_HEIGHT ) ; byte light = World.DEFAULT_SKY_LIGHT ; for ( int y = sectionY ; y >= 0 ; -- y ) { final net.morbz.minecraft.world.Section section = sections [ sectionY ] ; if ( section != null ) { light = section . spreadSkylightDownwards ( x , z , light ) ; if ( light == 0 ) { break; } } } } 
java.lang.String add ( de.hk.wfh.rs.FilterContext filterContext , java.lang.String line ) { boolean containsFilter = containsPattern ( line , filterContext . getFilterList () ) ; boolean containsIgnore = containsPattern ( line , filterContext . getIgnoreList () ) ; if ( containsFilter && containsIgnore ) { return ( "<- ignore-filter conflict -> " + line ) + "\n" ; } else if ( containsFilter && ( ! containsIgnore ) ) { return line + "\n" ; } return "\n" ; } 
private void updateKLargestComments () { componentSizeCommentMap . clear () ; for ( org.wso2.siddhi.debs2016.graph.CommentLikeGraph commentLikeGraph : commentStore . values () ) { long sizeOfComponent = commentLikeGraph . getSizeOfLargestConnectedComponent () ; if ( sizeOfComponent == 0 ) { continue; } java.lang.String comment = commentLikeGraph . getComment () ; componentSizeCommentMap . put ( sizeOfComponent , comment ) ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/loginaction" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String loginAction ( com.acae.entity.UserProfile user , javax.servlet.http.HttpSession session ) { com.acae.entity.UserProfile userProfile = loginService . getUserProfile ( user . getUserId () , user . getPassword () ) ; if ( userProfile != null ) { session . setAttribute ( "userProfile" , userProfile ) ; return "/index" ; } else { session . setAttribute ( "errorMessage" , "Wrong User ID or Password" ) ; return "/menu/login" ; } } 
private synchronized void buildGoogleApiClient () { if ( ( mGoogleApiClient ) == null ) { mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder ( this ) . addApi ( Nearby.MESSAGES_API , new com.google.android.gms.nearby.messages.MessagesOptions.Builder () . setPermissions ( NearbyPermissions.BLE ) . build () ) . addConnectionCallbacks ( this ) . enableAutoManage ( this , this ) . build () ; } } 
private com.hutgroup.robocode.server.RoundResult toRoundResult ( int roundId , com.hutgroup.robocode.server.IRobotSnapshot robotSnapshot ) { double energyLeft = robotSnapshot . getEnergy () ; com.hutgroup.robocode.server.IScoreSnapshot snapshot = robotSnapshot . getScoreSnapshot () ; java.lang.String playerId = robotSnapshot . getName () ; double gunDamage = ( snapshot . getCurrentBulletDamageScore () ) + ( snapshot . getCurrentBulletKillBonus () ) ; double ramDamage = ( snapshot . getCurrentRammingDamageScore () ) + ( snapshot . getCurrentRammingKillBonus () ) ; return new com.hutgroup.robocode.server.RoundResult ( roundId , playerId , energyLeft , ramDamage , gunDamage ) ; } 
public void setUniformMatrix ( int loc , boolean transposed , org.joml.Matrix4f mat ) { if ( loc == ( - 1 ) ) return; if ( ( example.ShaderProgram.buf16Pool ) == null ) example.ShaderProgram.buf16Pool = org.lwjgl.BufferUtils . createFloatBuffer ( 16 ) ; example.ShaderProgram.buf16Pool . clear () ; mat . get ( example.ShaderProgram.buf16Pool ) ; glUniformMatrix4fv ( loc , transposed , example.ShaderProgram.buf16Pool ) ; } 
public boolean insertBudget ( final java.lang.String name , final int max ) { android.database.sqlite.SQLiteDatabase db = getWritableDatabase () ; android.content.ContentValues contentValues = new android.content.ContentValues () ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.NAME , name ) ; contentValues . put ( protect.budgetwatch.DBHelper.BudgetDbIds.MAX , max ) ; final long newId = db . insert ( protect.budgetwatch.DBHelper.BudgetDbIds.TABLE , null , contentValues ) ; return newId != ( - 1 ) ; } 
@ java.lang.Override public void onComplete ( java.lang.String response ) { super . onComplete ( response ) ; if ( ! ( android.text.TextUtils . isEmpty ( response ) ) ) { if ( response . startsWith ( "{\"statuses\"" ) ) { mStatusList = com.sina.weibo.sdk.openapi.models.StatusList . parse ( response ) ; if ( null != ( mStatusList.statusList ) ) { setViewData ( mStatusList.statusList ) ; } else { android.util.Log . d ( com.bricechou.weiboclient.fragment.HomeFragment.TAG , "Refresh onComplete: No Result." ) ; refreshViewDone () ; } } } } 
@ java.lang.Override public void onRefresh () { if ( it.asg.hustle.Utils.CheckConnection . isConnected ( getActivity () ) ) { android.util.Log . d ( "HUSTLE" , ( "refresh on " + tabPosition ) ) ; downloadFriendShows ( gridAdapter [ tabPosition ] , true ) ; } else { android.widget.Toast . makeText ( getActivity () , getResources () . getString ( R.string.toast_failure_refresh ) , Toast.LENGTH_SHORT ) . show () ; swipeView . setRefreshing ( false ) ; } } 
@ java.lang.Override public boolean accept ( T t ) { if ( ( t == null ) && ( ( this . matching ) == null ) ) { return true ; } if ( t == null ) { return false ; } return t . equals ( matching ) ; } 
public final java.lang.String getToken () { java.lang.String token = this . getCookie ( "token" ) ; if ( token == null ) { token = this . getHeader ( "token" ) ; if ( token == null ) { token = this . getString ( "token" ) ; } } return token ; } 
public spell.INode find ( java.lang.String word ) { spell.Node temp = root ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { int index = indexByLetter ( word . charAt ( i ) ) ; if ( temp . hasNode ( index ) ) { temp = temp . getNode ( index ) ; } else { return null ; } } if ( ( temp . getValue () ) > 0 ) { return temp ; } return null ; } 
public void print ( boolean printable ) { if ( printable ) { if ( ( - 1 ) == ( client . networkInterceptors () . indexOf ( org.fintx.http.HttpClientBase.networkInterceptor ) ) ) { client = client . newBuilder () . addNetworkInterceptor ( org.fintx.http.HttpClientBase.networkInterceptor ) . build () ; } } else {} } 
private void saveImagePixels () { for ( int xPixel = 0 ; xPixel < ( this . width ) ; ++ xPixel ) { for ( int yPixel = 0 ; yPixel < ( this . height ) ; ++ yPixel ) { this . setPixel ( xPixel , yPixel , imageArray [ xPixel ] [ yPixel ] . getColor () ) ; } } } 
public static void msgNearby ( org.bukkit.entity.Player p , java.lang.String msg ) { org.bukkit.entity.Entity en ; label58 : for ( java.util.Iterator localIterator = p . getNearbyEntities ( 48.0 , 48.0 , 48.0 ) . iterator () ; localIterator . hasNext () ; ( ( org.bukkit.entity.Player ) ( en ) ) . sendMessage ( msg ) ) { en = ( ( org.bukkit.entity.Entity ) ( localIterator . next () ) ) ; if ( ( ! ( en instanceof org.bukkit.entity.Player ) ) || ( en == p ) ) break label58 ; } } 
private void addRow ( java.lang.String [] row ) { for ( int i = 0 ; i < ( nOfColumns ) ; ++ i ) { data . addEntity ( new org.online.etl.model.abstractions.Entity ( currentId , ( ( long ) ( i ) ) , "" , "String" , "" , null ) ) ; } } 
public static void add ( javax.servlet.http.HttpSession session , java.lang.String key , java.lang.Object value ) { java.util.Map < java.lang.String , java.lang.Object > map = com.liferay.portal.kernel.servlet.SessionErrors . _getMap ( session , null , true ) ; if ( map == null ) { return; } map . put ( key , value ) ; } 
public java.util.Map < java.lang.String , src.Node > updateNodeInMap ( src.Node n , java.util.Map < java.lang.String , src.Node > map ) { src.Node nodeFromMap = map . get ( n . getState () . toString () ) ; if ( ( nodeFromMap . getTotalCost () ) > ( n . getTotalCost () ) ) { map . remove ( nodeFromMap . getState () . toString () ) ; map . put ( n . getState () . toString () , n ) ; } return map ; } 
private boolean solveH ( int col ) { int i = 0 ; for ( i = 0 ; i < ( board.length ) ; i ++ ) { if ( addQueen ( i , col ) ) { if ( ( col > ( ( board [ 0 ] . length ) - 2 ) ) || ( solveH ( ( col + 1 ) ) ) ) { return true ; } else { removeQueen ( i , col ) ; } } } return false ; } 
public org.mapeditor.core.Map nextTurn () { if ( ! ( isGameOver () ) ) { boolean isStalemateForPlayer = isStalemateTurnForPlayer ( utilties.models.Game.PLAYER_ID ) ; boolean isStalemateForOpponent = isStalemateTurnForPlayer ( utilties.models.Game.OPPONENT_ID ) ; if ( isStalemateForPlayer || isStalemateForOpponent ) { _isStalemate = true ; this . _isGameOver = true ; } else if ( ( this . _numberOfTurnsCompleted ) > ( utilties.models.Game.MAX_TURN_LIMIT ) ) { _isStalemate = true ; this . _isGameOver = true ; } ( this . _numberOfTurnsCompleted ) ++ ; } return this . _entityMap . getMap () ; } 
public void dispose () { for ( com.badlogic.ashley.core.EntitySystem sys : com.spaceproject.screens.SpaceScreen.engine . getSystems () ) { if ( sys instanceof com.badlogic.gdx.utils.Disposable ) ( ( com.badlogic.gdx.utils.Disposable ) ( sys ) ) . dispose () ; } for ( com.badlogic.ashley.core.Entity ents : com.spaceproject.screens.SpaceScreen.engine . getEntities () ) { com.spaceproject.components.TextureComponent tex = ents . getComponent ( com.spaceproject.components.TextureComponent . class ) ; if ( tex != null ) tex.texture . dispose () ; } } 
private void setSpotColor ( javax.swing.JButton buttonToChange , java.lang.String playerNameOnSpot ) { if ( ( playerNameOnSpot == null ) || ( "" . equals ( playerNameOnSpot ) ) ) { buttonToChange . setIcon ( null ) ; } else if ( myPlayerController . getPlayer1Name () . equals ( playerNameOnSpot ) ) { buttonToChange . setIcon ( black_icon ) ; } else if ( myPlayerController . getPlayer2Name () . equals ( playerNameOnSpot ) ) { buttonToChange . setIcon ( red_icon ) ; } } 
private static boolean rauswerfen ( int neuesFeld , int spielerNummer ) { for ( int rspielerNummer : si.projekt.maedn.Spiel.spieler . keySet () ) { if ( rspielerNummer != spielerNummer ) { si.projekt.maedn.Spieler rspieler = si.projekt.maedn.Spiel.spieler . get ( rspielerNummer ) ; for ( int spielFigurNummer : rspieler . holeSpielfiguren () . keySet () ) { si.projekt.maedn.Spielfigur spielFigur = rspieler . holeSpielfiguren () . get ( spielFigurNummer ) ; if ( ( spielFigur.feldnummer ) == neuesFeld ) { spielFigur . rauswerfen () ; return true ; } } } } return false ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { existingProduct . setQuantityOrWeight ( java.lang.Double . valueOf ( holder.editTextQuantity . getText () . toString () ) ) ; existingProducts . set ( holder . getAdapterPosition () , existingProduct ) ; existingProductDAO . update ( existingProduct ) ; if ( ( mOnDataChangeListener ) != null ) { mOnDataChangeListener . onDataChanged ( existingProducts ) ; } notifyDataSetChanged () ; } 
private eu.europeana.corelib.definitions.edm.beans.FullBean retrieveRecord ( java.lang.String europeanaId , java.lang.Integer hierarchyTimeout ) throws eu.europeana.corelib.edm.exceptions.MongoDBException , eu.europeana.corelib.edm.exceptions.MongoRuntimeException , eu.europeana.corelib.neo4j.exception.Neo4JException { long startTime = java.lang.System . currentTimeMillis () ; eu.europeana.corelib.definitions.edm.beans.FullBean result = searchService . findById ( europeanaId , false , ( hierarchyTimeout == null ? 0 : hierarchyTimeout ) ) ; if ( eu.europeana.api2.v2.web.controller.ObjectController.LOG . isDebugEnabled () ) { eu.europeana.api2.v2.web.controller.ObjectController.LOG . debug ( ( ( "SearchService findByID took " + ( ( java.lang.System . currentTimeMillis () ) - startTime ) ) + " ms" ) ) ; } return result ; } 
public void updateStats () { ray = ( ray ) * ( Utils.Global.ratioH ) ; ostr . setCenterX ( ( ( ostr . getCenterX () ) * ( Utils.Global.ratioW ) ) ) ; ostr . setCenterY ( ( ( ostr . getCenterY () ) * ( Utils.Global.ratioH ) ) ) ; ostr = new org.newdawn.slick.geom.Circle ( ostr . getCenterX () , ostr . getCenterY () , ray ) ; maxW = ( maxW ) * ( Utils.Global.ratioW ) ; maxH = ( maxH ) * ( Utils.Global.ratioH ) ; } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e != null ) { resetShareFragment () ; android.util.Log . d ( com.gcw.sapienza.places.ShareFragment.TAG , e . getMessage () ) ; } else { resetShareFragment () ; ( ( com.gcw.sapienza.places.com.gcw.sapienza.places.MainActivity ) ( getActivity () ) ) . refresh () ; } } 
@ java.lang.Override public void call ( caesar.interpreter.CaesarInterpreter interpreter ) { caesar.interpreter.buildin.StringClass.logger . log ( java.util.logging.Level.FINE , "addString from StringClass is called." ) ; java.lang.String opb = interpreter . getStack () . popString () ; java.lang.String opa = interpreter . getStack () . popString () ; java.lang.String result = opa + opb ; interpreter . getStack () . pushString ( result ) ; } 
@ java.lang.Override public int compare ( com.Ben12345rocks.VotingPlugin.Objects.User p1 , com.Ben12345rocks.VotingPlugin.Objects.User p2 ) { int p1Total = p1 . getTotalVotesSite ( voteSite ) ; int p2Total = p2 . getTotalVotesSite ( voteSite ) ; if ( p1Total < p2Total ) { return 1 ; } if ( p1Total > p2Total ) { return - 1 ; } return 0 ; } 
@ org.junit.Test public void testGroupNotPresentInDisplay ( ) throws java.lang.Exception { us.kbase.narrativemethodstore.ValidationResults vr = us.kbase.narrativemethodstore.db.test.ValidatorTest . validate ( 8 , null ) ; junit.framework.Assert . assertEquals ( ( "" + vr ) , 0L , ( ( long ) ( vr . getIsValid () ) ) ) ; junit.framework.Assert . assertEquals ( ( "" + vr ) , 1 , vr . getErrors () . size () ) ; junit.framework.Assert . assertEquals ( ( "" + vr ) , ( "Can't find property [log_entries] within path " + "[parameter-groups] in display.yaml" ) , vr . getErrors () . get ( 0 ) ) ; } 
public void pop () { astnodes.ASTNode topOfItemStack = itemStack . peek () ; while ( ( ( stack . size () ) > 0 ) && ( ( stack . peek () . parentCompound ) == topOfItemStack ) ) { stack . pop () ; } } 
private boolean tryRegister ( java.lang.String user , java.lang.String password ) { try { new PwdManager.Registration ( user , password ) ; return true ; } catch ( java.nio.file.FileAlreadyExistsException e ) { PwdManager.UI.UIUtility . errorMessage ( "Registration." , ( ( "User " + user ) + " already exists." ) ) ; return false ; } catch ( java.lang.Exception e ) { PwdManager.UI.UIUtility . errorMessage ( "Registration" , e . getMessage () ) ; return false ; } } 
public io.ddf.DDF getDDFByUri ( java.lang.String uri ) throws io.ddf.exception.DDFException { java.util.UUID uuid = this . mUris . get ( uri ) ; if ( uuid == null ) { throw new io.ddf.exception.DDFException ( java.lang.String . format ( "Cannot find ddf with uri %s" , uri ) ) ; } return this . getDDF ( uuid ) ; } 
public void login ( java.lang.String email , java.lang.String password ) { com.weddingcrashers.model.User user = _userService . getUserByEmail ( email ) ; com.weddingcrashers.servermodels.LoginContainer loginContainer = new com.weddingcrashers.servermodels.LoginContainer () ; if ( user != null ) { if ( user . getPassword () . equals ( password ) ) { loginContainer . setUser ( user ) ; } } com.weddingcrashers.server.ServerUtils . sendObject ( client , loginContainer ) ; } 
public void approachBuilding ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg . getBuilding ( bldName ) ; if ( bldg != null ) { _currentBldg = bldg ; java.lang.String description = bldg . getExteriorDescription () ; java.lang.String imagePath = bldg . getExtImagePath () ; displayBuilding ( description , imagePath ) ; } else { _frame . displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } 
private void setupAuthenticatedModel ( java.lang.String results , org.springframework.ui.ModelMap model ) { java.util.List < org.balaguta.currconv.data.entity.Conversion > history = conversionService . getHistory () ; if ( ( history . isEmpty () ) || ( results == null ) ) { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history ) ; } else { model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION_HISTORY , history . subList ( 1 , history . size () ) ) ; model . put ( org.balaguta.currconv.web.ConvertController.ATTR_CONVERSION , history . get ( 0 ) ) ; } } 
private void setXYDisplacements () { switch ( angleStr ) { case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_0 : displacementX = displacement ; displacementY = 0 ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_45 : displacementX = - ( displacement ) ; displacementY = displacement ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_90 : displacementX = 0 ; displacementY = displacement ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_135 : displacementX = displacement ; displacementY = displacement ; break; case org.esa.s1tbx.fex.gpf.texture.GLCMOp.ANGLE_ALL : computeGLCPWithAllAngles = true ; break; default: throw new org.esa.snap.core.gpf.OperatorException ( ( "Unknown angle: " + ( angleStr ) ) ) ; } } 
private int getCardsCountBeforeCurrentPosition ( int position ) { int count = 0 ; if ( ( shouldShowAppodealAdBanner ) && ( ( ( ru.aviasales.template.ui.adapter.AdAdapter.APPODEAL_BANNER_POSITION ) + ( shouldShowAsBanner ? 1 : 0 ) ) < position ) ) { count ++ ; } if ( ( shouldShowAsBanner ) && ( ( ru.aviasales.template.ui.adapter.AdAdapter.AS_BANNER_POSITION ) < position ) ) count ++ ; return count ; } 
public java.lang.String toString () { return ( ( ( ( ( ( ( "Rect [" + ( x0 ) ) + ", " ) + ( y0 ) ) + "][ w:" ) + ( ( x1 ) - ( x0 ) ) ) + ", h:" ) + ( ( y1 ) - ( y0 ) ) ) + "]" ; } 
public double getPoisson ( double lambda ) { double L = java.lang.Math . exp ( ( - lambda ) ) ; double p = 1.0 ; double k = 0.0 ; do { k = k + 0.5 ; p *= java.lang.Math . random () ; } while ( p > L ) ; double numero = 1 / ( k - 0.1 ) ; numero = redondear ( ( numero * 10 ) ) ; return numero ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( o == ( this ) ) { return true ; } if ( ! ( o instanceof org.yccheok.jstock.engine.Industry ) ) { return false ; } return this . industry . equals ( ( ( org.yccheok.jstock.engine.Industry ) ( o ) ) . industry ) ; } 
public void receive ( java.util.Map < java.lang.String , java.lang.String > result ) { int in = java.lang.Integer . parseInt ( result . get ( "rx-bits-per-second" ) ) ; int out = java.lang.Integer . parseInt ( result . get ( "tx-bits-per-second" ) ) ; traffic = in + out ; java.lang.System.out . println ( ( ( ( ( ( parentIdentity ) + ": Total traffic on " ) + ( label ) ) + ": " ) + ( traffic ) ) ) ; aggregator . update ( traffic ) ; } 
public void deselectController () { if ( ( mCursorController ) != null ) { mCursorController . removePickEventListener ( mPickHandler ) ; mCursorController . setEnable ( false ) ; mCursorController = null ; } if ( ( mControllerModel ) != null ) { mControllerModel . setEnable ( false ) ; mControllerModel = null ; } } 
public int getSyncMsec ( int ms ) { this . lock . lock () ; try { while ( ( ms == ( msec ) ) && ( ( this . syncCount ) == 0 ) ) { try { free . await () ; } catch ( java.lang.InterruptedException e ) { java.lang.Thread . currentThread () . interrupt () ; } } ( this . syncCount ) -- ; free . signalAll () ; } finally { lock . unlock () ; } return msec ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; toolbar = ( ( android.support.v7.widget.Toolbar ) ( findViewById ( R.id.app_bar ) ) ) ; setSupportActionBar ( toolbar ) ; mIsTwoPaneLayout = ( findViewById ( R.id.top_tracks_container ) ) != null ; if ( ( mIsTwoPaneLayout ) && ( savedInstanceState == null ) ) { getSupportFragmentManager () . beginTransaction () . replace ( R.id.top_tracks_container , new com.spotify.sdliles.spotifystreamer.UI.TopTracksFragment () ) . commit () ; } } 
public static void inputData () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; Exam01.IDCard.str = scanner . next () ; Exam01.IDCard.arr = new java.lang.String [ Exam01.IDCard.str . length () ] ; for ( int i = 0 ; i < ( Exam01.IDCard.str . length () ) ; i ++ ) { Exam01.IDCard.arr [ i ] = Exam01.IDCard.str . substring ( i , ( i + 1 ) ) ; } } 
@ java.lang.Override public void onComplete ( com.google.firebase.database.DatabaseError databaseError , com.google.firebase.database.DatabaseReference databaseReference ) { if ( databaseError != null ) { callbackContext . sendPluginResult ( convertToPluginResult ( databaseError , false ) ) ; } else { callbackContext . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.OK , ( ( path + '/' ) + ( databaseReference . getKey () ) ) ) ) ; } } 
private void fetch ( ) throws com.hummingwave.Custom.WaveORMException { com.sample.Employee employee = new com.sample.Employee () ; java.util.List object = employee . fetchRecords ( null , null , null , null , null , null ) ; android.util.Log . e ( "RESULT" , ( ( ( com.sample.Employee ) ( object . get ( 0 ) ) ) + "" ) ) ; } 
public int p2Left () { ( p2Index ) -- ; if ( displayNeuhaus ) { if ( ( p2Index ) < 0 ) { p2Index = 10 ; } else if ( ( ( p2Index ) < 10 ) && ( ( p2Index ) > 7 ) ) { p2Index = 7 ; } } else { if ( ( p2Index ) < 0 ) { p2Index = 7 ; } } return p2Index ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj instanceof Sentence.PADependencyTuple ) { Sentence.PADependencyTuple PADepTuple = ( ( Sentence.PADependencyTuple ) ( obj ) ) ; if ( ( PADepTuple.predIndex ) != ( predIndex ) ) return false ; if ( ( PADepTuple.argIndex ) != ( argIndex ) ) return false ; if ( ! ( PADepTuple.srl . equals ( srl ) ) ) return false ; return true ; } return false ; } 
public boolean setColor ( java.awt.Color color ) { if ( ( ( ( this . color ) != null ) && ( this . color . equals ( color ) ) ) || ( ( ( this . color ) == null ) && ( color == null ) ) ) return false ; this . color = color ; fireFieldChanged ( new ru.foxling.graphit.config.FieldEvent ( this , FieldEvent.UPDATE , "color" ) ) ; return true ; } 
@ java.lang.Override @ org.molgenis.security.core.runas.RunAsSystem public void changePassword ( java.lang.String username , java.lang.String newPassword ) { org.molgenis.auth.MolgenisUser user = dataService . query ( org.molgenis.security.account.MOLGENIS_USER , org.molgenis.auth.MolgenisUser . class ) . eq ( org.molgenis.security.account.USERNAME , username ) . findOne () ; if ( user == null ) { throw new org.molgenis.security.user.MolgenisUserException ( java.lang.String . format ( "Unknown user [%s]" , username ) ) ; } user . setPassword ( newPassword ) ; user . setChangePassword ( false ) ; dataService . update ( org.molgenis.security.account.MOLGENIS_USER , user ) ; org.molgenis.security.account.AccountServiceImpl.LOG . info ( "Changed password of user [{}]" , username ) ; } 
public boolean hasContent () { return ( ( ( ( null != ( result ) ) || ( ( io.netty.handler.codec.http.HttpResponseStatus.OK ) != ( status ) ) ) || ( null != ( messenger . getRedirectTo () ) ) ) || ( null != ( content ) ) ) || ( null != ( file ) ) ; } 
public void setExternalNum ( java.lang.String externalNum ) { try { if ( ( externalNum . length () ) <= 50 ) this . externalNum = externalNum ; else { throw new java.lang.IllegalArgumentException ( ( ( "'" + externalNum ) + "' is longer than 50" ) ) ; } } catch ( java.lang.IllegalArgumentException e ) { errorList [ 5 ] = "ERROR: " + ( e . getMessage () ) ; setErrorCount ( ( ( getErrorCount () ) + 1 ) ) ; } } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { android.util.Log . d ( com.abrahamyans.gpsbusfeed.scheduler.LocationService.TAG , ( "Changed location " + location ) ) ; com.abrahamyans.gpsbusfeed.event.LocationChangedEvent event = new com.abrahamyans.gpsbusfeed.event.LocationChangedEvent ( getApplicationContext () , location , new java.util.Date () ) ; if ( tracker . isValidLocationEvent ( event ) ) { feed . onLocationChanged ( event ) ; } processingLocation = false ; disconnect () ; } 
private void handleOnDestroyOne ( android.content.pm.ServiceInfo targetInfo ) { android.app.Service service = mNameService . get ( targetInfo.name ) ; if ( service != null ) { service . onDestroy () ; mNameService . remove ( targetInfo.name ) ; java.lang.Object token = findTokenByService ( service ) ; mTokenServices . remove ( token ) ; mServiceTaskIds . remove ( token ) ; } me.ele.amigo.compat.QueuedWorkCompat . waitToFinish () ; } 
public void loadCatalogDetailsFromFileIfRequired ( boolean forceReload ) { if ( forceReload ) mCatalogueDetails = null ; try { if ( ( mCatalogueDetails ) != null ) return; java.io.File catalogDetailsFile = getLocalCatalogDetailsFile () ; if ( ! ( catalogDetailsFile . exists () ) ) return; org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser () ; mCatalogueDetails = ( ( org.json.simple.JSONObject ) ( parser . parse ( new java.io.FileReader ( catalogDetailsFile ) ) ) ) ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; } } 
public java.util.List < com.intellij.plugins.haxe.model.HaxeParameterModel > getParameters () { java.util.List < com.intellij.plugins.haxe.model.HaxeParameterModel > _parameters = new java.util.ArrayList < com.intellij.plugins.haxe.model.HaxeParameterModel > () ; com.intellij.plugins.haxe.model.HaxeParameterList parameterList = com.intellij.plugins.haxe.util.UsefulPsiTreeUtil . getChild ( this . haxeMethod , com.intellij.plugins.haxe.model.HaxeParameterList . class ) ; if ( parameterList != null ) { for ( com.intellij.plugins.haxe.model.HaxeParameter parameter : parameterList . getParameterList () ) { _parameters . add ( new com.intellij.plugins.haxe.model.HaxeParameterModel ( parameter ) ) ; } } return _parameters ; } 
@ java.lang.Override public void serialize ( com.facebook.presto.spi.SerializableNativeValue value , com.fasterxml.jackson.core.JsonGenerator generator , com.fasterxml.jackson.databind.SerializerProvider provider ) throws java.io.IOException { generator . writeStartObject () ; generator . writeStringField ( "type" , value . getType () . getName () ) ; generator . writeFieldName ( "value" ) ; if ( ( value . getValue () ) == null ) { generator . writeNull () ; } else { com.facebook.presto.spi.SerializableNativeValue.Serializer . writeValue ( value , generator ) ; } generator . writeEndObject () ; } 
public void setMessageForMultiList ( @ android.support.annotation.StringRes int headline , @ android.support.annotation.StringRes int message , @ android.support.annotation.DrawableRes int icon ) { if ( ( ( mMultiListContainer ) != null ) && ( ( mMultiListMessage ) != null ) ) { mMultiListHeadline . setText ( headline ) ; mMultiListMessage . setText ( message ) ; mMultiListIcon . setImageResource ( icon ) ; mMultiListMessage . setVisibility ( View.VISIBLE ) ; mMultiListIcon . setVisibility ( View.VISIBLE ) ; mMultiListProgress . setVisibility ( View.GONE ) ; } } 
public static symjava.bytecode.BytecodeVecFunc compileVecFunc ( symjava.symbolic.Expr [] args , symjava.symbolic.Expr expr ) { java.lang.String className = "JITVecFunc_YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY" + ( java.util.UUID . randomUUID () . toString () . replaceAll ( "-" , "" ) ) ; com.sun.org.apache.bcel.internal.generic.ClassGen genClass = symjava.symbolic.utils.BytecodeUtils . genClassBytecodeVecFunc ( className , expr , args , true , false ) ; symjava.symbolic.utils.FuncClassLoader < symjava.bytecode.BytecodeVecFunc > fcl = new symjava.symbolic.utils.FuncClassLoader < symjava.bytecode.BytecodeVecFunc > () ; return fcl . newInstance ( genClass ) ; } 
public int countNodes ( hou.forwz.Leetcode.structure.TreeNode root ) { if ( root == null ) return 0 ; int leftDeep = deep ( root.left ) ; int rightDeep = deep ( root.right ) ; if ( leftDeep == rightDeep ) { return ( ( int ) ( ( java.lang.Math . pow ( 2 , leftDeep ) ) + ( countNodes ( root.right ) ) ) ) ; } else return ( ( int ) ( java.lang.Math . pow ( 2 , rightDeep ) ) ) + ( countNodes ( root.left ) ) ; } 
public synchronized void incomingCar ( data.analytics.smart.traffic.model.movement.CardinalDirection from , data.analytics.smart.traffic.model.Car car ) { if ( light . isGreen ( from ) ) { java.lang.System.out . println ( "Its already green" ) ; } else { java.util.List < data.analytics.smart.traffic.model.Car > carList = waitinglist . get ( from ) ; carList . add ( car ) ; waitinglist . put ( from , carList ) ; java.lang.System.out . println ( ( ( "Car from " + from ) + "has to wait in line" ) ) ; } } 
private double getElevation ( model.battlefield.map.Tile t , model.battlefield.map.cliff.Cliff c ) { if ( ( t . getModifiedLevel () ) > ( ( c.level ) + 1 ) ) { return ( ( c.level ) + 1 ) * ( model.battlefield.map.Tile.STAGE_HEIGHT ) ; } return t . getElevation () ; } 
@ java.lang.Override public void update ( long songTime ) { setY ( ( ( GameScreen.BAR_POSITION ) + ( ( ( ( ( beatTimeMillis ) - songTime ) + ( GameScreen.visualOffsetMillis ) ) * ( GameScreen.HIT_OBJECT_DISTANCE ) ) / ( millisFor4Beats ) ) ) ) ; if ( ( songTime - ( beatTimeMillis ) ) > ( holdDurationMillis ) ) { BeatMap.hitFlagString = BeatMap.HITFLAGSTRINGS [ 4 ] ; onRelease () ; } } 
private void loadLands () { java.lang.Object [] lands = com.essentials.mcoldlife.main.CustomConfig . getArray ( reference.FILE_LANDS , reference.CONFIG_FOLDER . toString () , reference.PATH_LANDS ) ; if ( lands != null ) { for ( java.lang.Object land : lands ) { com.mcoldlife.objects.OLLand l = new com.mcoldlife.objects.OLLand ( land . toString () ) ; com.mcoldlife.objects.RPGManager . addLand ( land . toString () , l ) ; } } } 
public static java.lang.String getCurrentTitle ( android.content.Context context , boolean preparing ) { return context == null ? "" : ( br.com.carlosrafaelgn.fplay.playback.Player.localSong ) == null ? context . getText ( R.string.nothing_playing ) . toString () : ! preparing ? br.com.carlosrafaelgn.fplay.playback.Player.localSong.title : ( ( context . getText ( R.string.loading ) ) + " " ) + ( br.com.carlosrafaelgn.fplay.playback.Player.localSong.title ) ; } 
protected java.lang.String getDataStorePath ( final java.lang.String dataStore , final java.lang.String context ) { if ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.newDraft ) { if ( ( "config" . contains ( dataStore ) ) || ( "operational" . contains ( dataStore ) ) ) { return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/data" ) + context ; } return ( ( "/" + ( org.opendaylight.netconf.sal.rest.doc.impl.BaseYangSwaggerGenerator.RESTCONF_DRAFT ) ) + "/operations" ) + context ; } return ( "/" + dataStore ) + context ; } 
public java.lang.String toString () { java.lang.String returnString = "(" + ( this . operator . toString () ) ; java.util.Iterator < dl.syntax.Term > subTermIterator = getSubTerms () . iterator () ; while ( subTermIterator . hasNext () ) { returnString = ( returnString + " " ) + ( subTermIterator . next () . toString () ) ; } returnString = returnString + " )" ; return returnString ; } 
private static synchronized void sleep () { int select = ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.mAutoId . getAndAdd ( 1 ) ) % ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS.length ) ; int sleepTime = ( ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) == 0 ) ? 0 : ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.PACKET_INTERVALS [ select ] ) - ( ( int ) ( ( java.lang.System . currentTimeMillis () ) - ( com.afunx.ble.blelitelib.operation.BleWriteCharacterisitcNoResponsePacketOperation2.lastTimestamp ) ) ) ; if ( sleepTime > 0 ) { try { java.lang.Thread . sleep ( sleepTime ) ; } catch ( java.lang.InterruptedException ignore ) {} } } 
public void createLocalServer ( java.lang.String port ) { int iport = - 1 ; try { iport = java.lang.Integer . parseInt ( port ) ; localServer = server.ServerFactory . createServer ( iport ) ; localServer . startUp () ; this . connect ( "localhost" , ( "" + port ) ) ; } catch ( java.lang.NumberFormatException nfe ) { showFail ( loginScreen , "Please insert a real number at the Port-Field." ) ; } catch ( java.net.BindException e ) { showFail ( loginScreen , "Port is already in use, please enter another Port." ) ; } } 
public void showSprint ( softwaremanagementtool.agile.Sprint sprint ) { if ( sprint != null ) { infoViewController . showSprint ( sprint ) ; sprintBlViewController . setAgilePrj ( agilePrj , agilePrj . getSprintBacklogList ( sprint ) ) ; prodOpenBlViewController . setAgilePrj ( agilePrj , agilePrj . getOpenProdBacklogList () ) ; backlogViewController . showSprint ( sprint ) ; reviewViewController . showSprint ( sprint ) ; retrospectViewController . showSprint ( sprint ) ; } } 
public java.util.List < com.github.bwsoft.iris.sample.FuelFigures.FuelFigure > getFuelFigures ( com.github.bwsoft.iris.message.GroupObject msgObj ) { figures . clear () ; com.github.bwsoft.iris.message.GroupObjectArray fuelFiguresGroup = msgObj . getGroupArray ( fuelFigures ) ; for ( int i = 0 ; i < ( fuelFiguresGroup . getNumOfGroups () ) ; i ++ ) { com.github.bwsoft.iris.message.GroupObject aFigureObj = fuelFiguresGroup . getGroupObject ( i ) ; com.github.bwsoft.iris.sample.FuelFigures.FuelFigure aFigure = new com.github.bwsoft.iris.sample.FuelFigures.FuelFigure () ; aFigure.speed = aFigureObj . getFloat ( speed ) ; aFigure.mpg = aFigureObj . getFloat ( mpg ) ; figures . add ( aFigure ) ; } return figures ; } 
public void selectPrevious () { if ( ( getSelectedImage () ) instanceof org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) { if ( ( getSelectedImage () ) == null ) return; if ( ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( getSelectedImage () ) ) . getSequence () ) == null ) throw new java.lang.IllegalStateException () ; setSelectedImage ( ( ( org.openstreetmap.josm.plugins.mapillary.MapillaryImage ) ( getSelectedImage () ) ) . previous () , true ) ; } } 
public void addLast ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } if ( ( N ) == ( array.length ) ) resize ( ( ( array.length ) * 2 ) ) ; array [ last ] = item ; ( N ) ++ ; last = N ; } 
public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( savedInstanceState == null ) { mListJenkinsBuildInfoFragment = org.addhen.birudo.ui.fragment.ListJenkinsBuildInfoFragment . newInstance () ; getFragmentManager () . beginTransaction () . replace ( R.id.list_container , mListJenkinsBuildInfoFragment ) . commit () ; } } 
public long getMemoryAddress ( com.zms.zpc.emulator.PC pc ) { assert ( addressReg ) == null ; addressUseReg = false ; long address = calAddress ( pc , this . address ) ; if ( addressUseReg ) { address += com.zms.zpc.execute.NumberUtils . asSigned ( this . disp , this . dispWidth ) ; } else { address += this . disp ; } return getMemoryAddress ( pc , address ) ; } 
public semantic.Table lookupFunction ( java.lang.String name ) { if ( ( parent ) != null ) { parent . lookupFunction ( name ) ; } else { for ( semantic.Table t : parent.children ) { if ( t . getSymbol ( 0 ) . getName () . equals ( name ) ) return t ; } } return null ; } 
private java.lang.String removeSpaces ( java.lang.String s ) { java.lang.String answer = "" ; for ( int i = 0 ; i < ( s . length () ) ; i ++ ) if ( ( s . charAt ( i ) ) != ' ' ) answer += s . charAt ( i ) ; return answer ; } 
@ java.lang.Override public void run () { if ( ( java.lang.Math . abs ( ( ( mostRecentX ) - ( startX ) ) ) ) > ( touchSlop ) ) { return; } if ( ( java.lang.Math . abs ( ( ( mostRecentY ) - ( startY ) ) ) ) > ( touchSlop ) ) { return; } isLongPressing = true ; listener . onLongPress ( mostRecentX , mostRecentY ) ; } 
public synchronized com.sun.messaging.jmq.jmsserver.core.Packet getPacket () { com.sun.messaging.jmq.jmsserver.core.Packet pkt = getPacketObject () ; if ( ( pkt != null ) || ( destroyed ) ) { return pkt ; } if ( ! ( persist ) ) { return null ; } pkt = recoverPacket () ; assert pkt != null ; setPacketObject ( true , pkt ) ; return pkt ; } 
private java.lang.Boolean AddShortURL () { url.CreateLink short_link = new url.CreateLink ( this . row ) ; this . shortURL = short_link . encodeLongURL () ; long hashURL = short_link . getShortURLHash () ; try { this . insertFactory . insertShortLink ( hashURL , this . shortURL , this . row ) ; } catch ( java.lang.Exception e ) { helper.Loghandler . log ( ( "trying to insert the url " + ( e . toString () ) ) , "fatal" ) ; return false ; } return true ; } 
@ java.lang.Override public void done ( java.util.List < com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser > userList , java.lang.Exception e ) { if ( ( null == e ) && ( null != userList ) ) { for ( com.avoscloud.leanchatlib.utils.ThirdPartUserUtils.ThirdPartUser user : userList ) { com.avoscloud.leanchatlib.utils.ThirdPartDataCache . getInstance () . cacheUser ( user.userId , user ) ; } } } 
@ org.jetbrains.annotations.Nullable public java.lang.String getCurrentElementType ( com.intellij.psi.PsiElement currentElement ) { while ( ( currentElement instanceof com.intellij.psi.PsiWhiteSpace ) || ( currentElement instanceof com.intellij.psi.PsiComment ) ) { currentElement = currentElement . getPrevSibling () ; } if ( currentElement != null ) { return com.perl5.lang.perl.psi.utils.PerlPsiUtil . getPerlExpressionType ( currentElement ) ; } return null ; } 
public void enterResult ( ceylon.tool.converter.java2ceylon.ResultContext ctx ) { try { enterresult = true ; if ( ( ( ( ceylon.tool.converter.java2ceylon.MethodHeaderContext ) ( ctx . getParent () ) ) . typeParameters () ) == null ) { if ( ctx . getChild ( 0 ) . toString () . equals ( "void" ) ) bw . write ( ( ( ctx . getChild ( 0 ) . toString () ) + " " ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public com.marcuslee.fypdemo.obj.Shot findShot ( int frame ) { for ( com.marcuslee.fypdemo.obj.Shot shot : com.marcuslee.fypdemo.ObjectHolder.Shots ) { if ( ( ( shot . getStartFrame () ) <= frame ) && ( ( shot . getEndFrame () ) > frame ) ) { return shot ; } } return null ; } 
@ cucumber.api.java.After public void teardown ( final cucumber.api.Scenario scenario ) { if ( ! ( featureState . getFailed () ) ) { au.com.agic.apptesting.steps.StepEventHandling.SCREENSHOT_UTILS . takeScreenshot ( ( " " + ( scenario . getName () ) ) , featureState ) ; } featureState . setFailed ( scenario . isFailed () ) ; final boolean clearDriver = java.lang.Boolean . parseBoolean ( au.com.agic.apptesting.steps.StepEventHandling.SYSTEM_PROPERTY_UTILS . getProperty ( Constants.NEW_BROWSER_PER_SCENARIO ) ) ; if ( clearDriver ) { State.THREAD_DESIRED_CAPABILITY_MAP . clearWebDriverForThread ( true ) ; } } 
public double getInterest () { int datediff = ( seconddate ) - ( firstdate ) ; rate = 0.05 / 365 ; double ratetime = java.lang.Math . pow ( ( 1 + ( rate ) ) , datediff ) ; balance = ( balance ) * ratetime ; firstdate = seconddate ; return balance ; } 
public void set ( java.lang.String path , java.lang.Object value , java.lang.String comment ) { if ( ! ( this . config . contains ( path ) ) ) { this . config . set ( ( ( ( manager . getPluginName () ) + "_COMMENT_" ) + ( comments ) ) , comment ) ; ( comments ) ++ ; } this . config . set ( path , value ) ; } 
protected void robaRandomSleep ( int minSleepSecond , int maxSleepSecond ) { java.util.Random r = new java.util.Random () ; int sleepTime = ( minSleepSecond + ( r . nextInt ( ( maxSleepSecond - minSleepSecond ) ) ) ) * 1000 ; solo . sleep ( sleepTime ) ; android.util.Log . d ( com.crazyroba.RobaActivityInstrumentationTestCase2.TAG , ( ( "Roba random sleep " + ( sleepTime / 1000 ) ) + " s" ) ) ; } 
private org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder createIpProtocolMatch ( org.opendaylight.yang.gen.v1.urn.opendaylight.flow.types.rev131026.flow.MatchBuilder matchBuilder , short ipProtocol ) { org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder ipMmatch = new org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.IpMatchBuilder () ; if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_TCP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_UDP ) ; } else if ( ipProtocol == ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ) { ipMmatch . setIpProtocol ( org.opendaylight.faas.fabrics.vxlan.adapters.ovs.pipeline.PipelineAclHandler.PROTOCOL_ICMP ) ; } else { ipMmatch . setIpProtocol ( ipProtocol ) ; } matchBuilder . setIpMatch ( ipMmatch . build () ) ; return matchBuilder ; } 
public static void main ( java.lang.String [] args ) { boolean a = false ; boolean b = false ; boolean c = true ; boolean p = ( ( ( a || b ) || c ) && ( ( ( ! a ) || b ) || c ) ) && ( ( ( ! a ) || ( ! b ) ) || c ) ; java.lang.System.out . println ( p ) ; } 
@ java.lang.Override public void onActivityCreated ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; activity = ( ( codemagnus.com.dealokav2.BaseTabActivity ) ( getActivity () ) ) ; if ( ( activity . getSwitchCompat () ) != null ) activity . getSwitchCompat () . setVisibility ( View.VISIBLE ) ; initPhoneDetails () ; getUserLastKnownLocation () ; activity . getToolBar () . setTitle ( "Tower List" ) ; } 
void add ( double confidence , boolean correct ) { for ( int i = 0 ; i < ( org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS.length ) ; i ++ ) { if ( confidence >= ( org.deidentifier.arx.aggregates.StatisticsClassification.CONFIDENCE_THRESHOLDS [ i ] ) ) { falsePositive [ i ] += ( correct ) ? 0.0 : 1.0 ; truePositive [ i ] += ( correct ) ? 1.0 : 0.0 ; } } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/fireBase" ) public org.springframework.web.servlet.ModelAndView googleLogin ( @ org.springframework.web.bind.annotation.ModelAttribute ( value = "userloggedin" ) java.lang.String userLogged , @ org.springframework.web.bind.annotation.RequestParam ( value = "loggedIn" , defaultValue = "" , required = false ) java.lang.String loggedIn ) { java.lang.System.out . println ( ( "loggedIn: " + loggedIn ) ) ; if ( ( loggedIn . isEmpty () ) || ( loggedIn . equals ( null ) ) ) { return new org.springframework.web.servlet.ModelAndView ( "fireBase" ) ; } java.lang.System.out . println ( ( "userLogged: " + userLogged ) ) ; if ( ( userLogged . equals ( null ) ) || ( userLogged . isEmpty () ) ) { userLogged = loggedIn ; } return new org.springframework.web.servlet.ModelAndView ( "location" , "userloggedin" , userLogged ) ; } 
public synchronized void fail ( java.lang.Throwable error ) { if ( ( pixelWidth ) == 0 ) pixelWidth = 50 ; if ( ( pixelHeight ) == 0 ) pixelHeight = 50 ; setBitmap ( createErrorBitmap ( pixelWidth , pixelHeight ) ) ; ( ( react.RPromise < playn.core.Image > ) ( state ) ) . fail ( error ) ; } 
public void setyDirRightHip ( mck.MatlabEngine proxy ) throws java.lang.Exception { if ( ( yDirRightHip.MoCap.length ) == ( iListLength ) ) { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , false ) ; } else { yDirRightHip . enterMoCapData ( commandList [ 16 ] , proxy , initTime , true ) ; } } 
public uk.ac.starlink.ttools.plot2.layer.BinBag.Bin next () { if ( ( ib ) < nbin ) { assert ( index ) >= ( binIndices [ ib ] ) ; uk.ac.starlink.ttools.plot2.layer.BinBag.Bin bin = createBin ( index , binValues [ ib ] ) ; ( index ) ++ ; if ( ( ( ib ) == ( nbin - 1 ) ) || ( ( index ) == ( binIndices [ ( ( ib ) + 1 ) ] ) ) ) { ( ib ) ++ ; } return bin ; } else { throw new java.util.NoSuchElementException () ; } } 
public boolean deposit ( java.lang.String userId , int value ) { if ( value < 0 ) return false ; RWLock . writeLock () . lock () ; try { int balance = getOrZero ( userId ) ; balances . put ( userId , ( balance + value ) ) ; return true ; } finally { writeLog ( "DEPOSIT" , userId , "" , value ) ; RWLock . writeLock () . unlock () ; } } 
@ org.junit.Test public void testSize () { Array < java.lang.Integer > list = new Array () ; java.lang.Integer [] elems = new java.lang.Integer [] { - 76 , 45 , 66 , 3 , null , 54 , 33 } ; for ( int i = 0 , sz = 1 ; i < ( elems.length ) ; i ++ , sz ++ ) { list . add ( elems [ i ] ) ; org.junit.Assert . assertEquals ( list . size () , sz ) ; } } 
private void findOneHourTimerDelay ( java.lang.String [] timeParts ) { int secNum = java.lang.Integer . parseInt ( timeParts [ 2 ] ) ; int minNum = ( java.lang.Integer . parseInt ( timeParts [ 1 ] ) ) % 10 ; oneHourTimerDelay = ( ( 60 - secNum ) + ( 60 * ( 60 - minNum ) ) ) * 1000 ; } 
private void dispatchAckSend ( org.json.JSONObject income ) throws org.json.JSONException { org.json.JSONObject data = income . getJSONObject ( "data" ) ; if ( ( chatListener ) != null ) { ru.mail.park.chat.models.Message message = new ru.mail.park.chat.models.Message ( data , getContext () ) ; chatListener . onAcknowledgeSendMessage ( message ) ; } } 
public boolean clickOnMoreOptions ( main.Task1Project.Item item ) { org.openqa.selenium.WebElement button = extractText ( item ) ; if ( button != null ) { java.lang.String buttonText = button . getText () . trim () ; if ( buttonText . equals ( optionsButtonName ) ) { LoggerWrapper.myLogger . log ( java.util.logging.Level.INFO , "clicking on Options button" ) ; button . click () ; return true ; } } return false ; } 
protected synchronized void update () { xC += ( getSpeed () ) * ( java.lang.Math . cos ( getDirection () ) ) ; x = ( xC ) - ( ( simulation.Car.WIDTH ) / 2 ) ; yC += ( getSpeed () ) * ( java.lang.Math . sin ( getDirection () ) ) ; y = ( yC ) - ( ( simulation.Car.HEIGHT ) / 2 ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( ! ( Editor . isScenerio () ) ) { java.lang.String file = browseFile () ; if ( file != null ) { Editor.currentFile = file ; javax.swing.JOptionPane . showMessageDialog ( null , ( ( "Scenerio file '" + ( Editor.currentFile ) ) + "' is selected" ) ) ; } else { javax.swing.JOptionPane . showMessageDialog ( null , "No file selected" ) ; } } else { javax.swing.JOptionPane . showMessageDialog ( null , "Scenerio file already exists" ) ; } } 
public java.lang.String getNodeName ( final com.hazelcast.core.Member iMember ) { if ( iMember == null ) return "?" ; if ( nodeUuid . equals ( iMember . getUuid () ) ) return nodeName ; final java.lang.String name = activeNodesNamesByMemberId . get ( iMember . getUuid () ) ; if ( name != null ) return name ; final com.orientechnologies.orient.core.record.impl.ODocument cfg = getNodeConfigurationByUuid ( iMember . getUuid () , true ) ; if ( cfg != null ) return cfg . field ( "name" ) ; return "ext:" + ( iMember . getUuid () ) ; } 
private void updateCurrentMemoryMode () { org.exbin.framework.deltahex.HexStatusApi.MemoryMode memoryMode = HexStatusApi.MemoryMode.RAM_MEMORY ; if ( ( codeArea . getEditationAllowed () ) == ( org.exbin.deltahex.EditationAllowed.READ_ONLY ) ) { memoryMode = HexStatusApi.MemoryMode.READ_ONLY ; } else if ( ( codeArea . getData () ) instanceof org.exbin.deltahex.delta.DeltaDocument ) { memoryMode = HexStatusApi.MemoryMode.DELTA_MODE ; } if ( ( hexStatus ) != null ) { hexStatus . setMemoryMode ( memoryMode ) ; } } 
public static void shutLED ( int number ) { de.adorsys.quiz.helper.GpioHelper.pin17 . low () ; if ( number > 1 ) { de.adorsys.quiz.helper.GpioHelper.pin18 . low () ; } if ( number > 2 ) { de.adorsys.quiz.helper.GpioHelper.pin27 . low () ; } new java.lang.Thread ( new java.lang.Runnable () { @ java.lang.Override public void run () { try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException ex ) {} finally { de.adorsys.quiz.helper.GpioHelper . restart () ; } } } ) . start () ; } 
@ java.lang.Override public org.nd4j.linalg.api.ndarray.INDArray scalar ( float value ) { if ( ( dtype ) == ( DataBuffer.Type.FLOAT ) ) return create ( new float [] { value } , new int [] { 1 , 1 } , new int [] { 1 , 1 } , 0 ) ; else if ( ( dtype ) == ( DataBuffer.Type.DOUBLE ) ) return scalar ( ( ( double ) ( value ) ) ) ; else return scalar ( ( ( int ) ( value ) ) ) ; } 
public static boolean isCollection ( final org.eclipse.ocl.pivot.PropertyCallExp e ) { final java.lang.String s = fr.emn.atlanmod.uml.casestudy.rewrite.OCL . gen ( e . getType () ) ; if ( ( ( com.google.common.base.Objects . equal ( s , "Set" ) ) || ( com.google.common.base.Objects . equal ( s , "OrderedSet" ) ) ) || ( com.google.common.base.Objects . equal ( s , "Sequence" ) ) ) { return true ; } else { return false ; } } 
private java.lang.String getChanged () { java.lang.String str ; if ( ( blocksChanged ) > 0 ) { mmdanggg2.cste.util.CSTELogger . logDebug ( ( ( blocksChanged ) + " blocks were changed." ) ) ; str = net.minecraft.client.resources.I18n . format ( "commands.cste.fill.success" , blocksChanged ) ; } else { mmdanggg2.cste.util.CSTELogger . logDebug ( "No blocks changed" ) ; str = net.minecraft.client.resources.I18n . format ( "commands.cste.fill.nochange" ) ; } return str ; } 
@ org.junit.Test public void shouldSucceedIfWrittenOutOfOrderWithPosition ( ) throws java.io.IOException { int [] blockorder = getRandomPermutationOfBlockOrder () ; for ( int i = 0 ; i < ( blockcount ) ; i ++ ) { chksumChannel . write ( buffers [ blockorder [ i ] ] , ( ( blockorder [ i ] ) * ( blocksize ) ) ) ; } assertThat ( chksumChannel . getChecksum () , equalTo ( expectedChecksum ) ) ; } 
public java.lang.String toString ( com.google.code.or.common.glossary.Column column ) { java.lang.String value = null ; if ( ( null != column ) && ( ( column . getValue () ) != null ) ) { if ( column instanceof com.google.code.or.common.glossary.column.BlobColumn ) { value = new java.lang.String ( ( ( com.google.code.or.common.glossary.column.BlobColumn ) ( column ) ) . getValue () ) ; } else { value = column . toString () ; } } return value ; } 
public void markUsed ( java.lang.String tupleId ) { int n = reservedQueue . size () ; while ( n > 0 ) { com.dipaan.bgcolor.Tuple tuple = reservedQueue . peek () ; if ( tuple . getId () . equals ( tupleId ) ) { reservedQueue . remove ( tuple ) ; } else if ( tuple . isExpired () ) { reservedQueue . remove ( tuple ) ; availableQueue . offer ( tuple ) ; } n -- ; } } 
public boolean addEvent ( octu.core.Event evt ) { for ( int i = 0 ; i < ( events . size () ) ; i ++ ) { if ( events . get ( i ) . getName () . equals ( evt . getName () ) ) { return false ; } } events . add ( evt ) ; return true ; } 
private void initBugly () { com.tencent.bugly.beta.Beta.initDelay = 5 * 1000 ; com.tencent.bugly.beta.Beta.enableHotfix = false ; Beta.canShowUpgradeActs . add ( com.thirtydegreesray.openhub.ui.activity.LoginActivity . class ) ; Beta.canShowUpgradeActs . add ( com.thirtydegreesray.openhub.ui.activity.MainActivity . class ) ; Beta.canShowUpgradeActs . add ( com.thirtydegreesray.openhub.ui.activity.AboutActivity . class ) ; com.tencent.bugly.beta.Beta.upgradeListener = com.thirtydegreesray.openhub.ui.widget.UpgradeDialog.INSTANCE ; com.tencent.bugly.crashreport.CrashReport.UserStrategy strategy = new com.tencent.bugly.crashreport.CrashReport.UserStrategy ( getApplicationContext () ) ; strategy . setAppVersion ( BuildConfig.VERSION_NAME ) ; strategy . setAppReportDelay ( ( 10 * 1000 ) ) ; com.tencent.bugly.Bugly . init ( getApplicationContext () , AppConfig.BUGLY_APPID , BuildConfig.DEBUG ) ; com.tencent.bugly.crashreport.CrashReport . setIsDevelopmentDevice ( getApplicationContext () , BuildConfig.DEBUG ) ; } 
@ java.lang.Override public void unpackFromFrontOfList ( java.util.List < org.msgpack.type.Value > l ) { int check_ntype = l . remove ( 0 ) . asIntegerValue () . getInt () ; if ( check_ntype != ( ntype ) ) { android.util.Log . e ( com.mooshim.mooshimeter.common.ConfigTree.TAG , "WRONG NODE TYPE" ) ; } path = l . remove ( 0 ) . toString () ; } 
public java.util.List < org.eyeseetea.malariacare.data.database.model.Question > getQuestions () { if ( ( this . questions ) == null ) { this . questions = new com.raizlabs.android.dbflow.sql.language.Select () . from ( org.eyeseetea.malariacare.data.database.model.Question . class ) . where ( Question_Table.id_header . eq ( this . getId_header () ) ) . orderBy ( Question_Table.order_pos , true ) . queryList () ; } return questions ; } 
public static java.lang.CharSequence _text ( java.lang.CharSequence icon , java.lang.CharSequence text ) { final java.lang.StringBuilder s = new java.lang.StringBuilder () ; if ( ( icon != null ) && ( ( icon . length () ) > 0 ) ) { s . append ( icon ) . append ( "  " ) ; } return s . append ( text ) ; } 
public void onWin () { int currPlayerId = currPlayer . getCurrPlayerID () ; int potVal = currPlayer . getPot () ; int amtBetInGame = currPlayer . getCurrBetInGame () ; if ( ( amtBetInGame * 2 ) >= potVal ) currPlayer . winMoney ( potVal ) ; else currPlayer . winMoney ( ( amtBetInGame * 2 ) ) ; message . setText ( "You Win!" ) ; try { java.lang.Thread . sleep ( 5000 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
@ java.lang.Deprecated public final void dispose () { if ( disposed ) return; java.lang.System.out . println ( ( "Disposing of BaseConsole with id of " + ( getId () ) ) ) ; java.util.ArrayList < com.n9mtq4.logwindow.listener.ListenerContainer > listenerContainers1 = getListenerContainers () ; for ( com.n9mtq4.logwindow.listener.ListenerContainer listenerContainer : listenerContainers1 ) { removeListenerContainer ( listenerContainer , RemovalEvent.CONSOLE_DISPOSE ) ; } java.util.ArrayList < com.n9mtq4.logwindow.ui.UIContainer > uiContainers1 = getUIContainers () ; for ( com.n9mtq4.logwindow.ui.UIContainer uiContainer : uiContainers1 ) { removeUiContainer ( uiContainer ) ; } } 
static java.util.Collection < java.lang.String > findIssueKeys ( java.lang.String input ) { java.util.Collection < java.lang.String > ids = new java.util.ArrayList <> () ; java.util.regex.Matcher m = io.jenkins.blueocean.blueocean_github_pipeline.GithubIssue.PATTERN . matcher ( input ) ; while ( m . find () ) { if ( ( m . groupCount () ) >= 1 ) { java.lang.String issue = m . group ( 1 ) ; ids . add ( issue . substring ( 1 , issue . length () ) ) ; } } return ids ; } 
private void pollGraphFromStack ( boolean updateDb ) { final java.util.Deque < com.tinkerpop.blueprints.impls.orient.OrientBaseGraph > stack = com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.initializationStack . get () ; stack . remove ( this ) ; final com.tinkerpop.blueprints.impls.orient.OrientBaseGraph prevGraph = stack . peek () ; if ( prevGraph != null ) { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph . set ( prevGraph ) ; prevGraph . makeActive () ; } else { com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.activeGraph . set ( null ) ; if ( updateDb ) ODatabaseRecordThreadLocal.INSTANCE . set ( null ) ; } } 
public static void main ( java.lang.String [] args ) { int secretNumber = ( ( int ) ( 1 + ( ( java.lang.Math . random () ) * 10 ) ) ) ; int attemps = 3 ; java.lang.System.out . println ( "Hi! I chose a number from 0 to 10 for you! Try to guess" ) ; java.lang.System.out . println ( "You have" ) ; java.util.Scanner sc = new java.util.Scanner ( java.lang.System.in ) ; } 
@ java.lang.Override public void run () { if ( ( md ) == null ) return; android.graphics.Bitmap bitmap = loadArtwork ( artworkUrl , artworkLocal ) ; if ( ( bitmap != null ) && ( ( md ) != null ) ) { md . putBitmap ( MediaMetadataCompat.METADATA_KEY_ART , bitmap ) ; nb . setLargeIcon ( bitmap ) ; } session . setMetadata ( md . build () ) ; notification . show ( nb , isPlaying ) ; artworkThread = null ; } 
public void remove ( double v ) { if ( ( root ) != null ) { if ( ( root . getValue () ) == v ) { root . removeNode ( v , null ) ; root = null ; } else { root . removeNode ( v , null ) ; } } if ( ( ( size ) - 1 ) < 0 ) { size = 0 ; } else { size -= 1 ; } } 
public static int calculateMax ( java.lang.String [] args ) { int toReturn = - 1 ; if ( ( args.length ) > 0 ) { toReturn = ( ( int ) ( java.lang.Integer . parseInt ( args [ 0 ] ) ) ) ; if ( toReturn < 1 ) { throw new java.lang.IllegalArgumentException () ; } else {} } else { throw new java.lang.IllegalArgumentException () ; } return toReturn ; } 
public java.lang.Object getValueOfProperty ( java.lang.String propertyName , java.lang.Object object ) { java.lang.String name = ( this . caseSensitive ) ? propertyName : propertyName . toLowerCase () ; java.lang.reflect.Field field = this . fields . get ( name ) ; try { return field . get ( object ) ; } catch ( java.lang.IllegalAccessException e ) { throw new org.sql2o.Sql2oException ( ( ( ( "could not read value of field " + ( field . getName () ) ) + " on class " ) + ( object . getClass () . toString () ) ) , e ) ; } } 
private void LeaveGameMouseClicked ( java.awt.event.MouseEvent evt ) { comm . msgSender ( ( "E" + ( ( char ) ( ( Pexeso_client.CurrentGame . getID () ) + '0' ) ) ) ) ; Pexeso_client.CurrentGame = null ; comm . setExit ( true ) ; LobbyStatus . setText ( "You left your current game" ) ; LobbyStatus . setVisible ( true ) ; panel2 . setVisible ( true ) ; panel3 . setVisible ( false ) ; } 
public int modifyField ( java.lang.String field , java.lang.String [] value , java.lang.Long id ) { if ( ( field != null ) && ( value != null ) ) { try { it.ispw.efco.nottitranquille.controller.ManageLocation . modifyField ( field , value , id ) ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return 1 ; } return 0 ; } 
protected java.lang.Object visitContainer ( net.objectof.actof.porter.visitor.IPorterContext context , net.objectof.model.Id < ? > parentId ) { net.objectof.model.Resource < net.objectof.aggr.Aggregate < java.lang.Object , java.lang.Object > > toParent = getToParent ( parentId ) ; net.objectof.actof.porter.visitor.IPorterContext ported = transform ( context ) ; if ( ported . isDropped () ) { return null ; } if ( toParent != null ) { toParent . value () . set ( net.objectof.actof.porter.IPorterUtil . unqualify ( ported . getKey () , toParent ) , ported . getValue () ) ; } return context . getValue () ; } 
private org.openbaton.nfvo.core.api.VNFCInstance getVNFCI ( org.openbaton.nfvo.core.api.VirtualDeploymentUnit virtualDeploymentUnit , java.lang.String idVNFCI ) throws org.openbaton.nfvo.core.api.NotFoundException { for ( org.openbaton.nfvo.core.api.VNFCInstance vnfcInstance : virtualDeploymentUnit . getVnfc_instance () ) if ( ( idVNFCI == null ) || ( idVNFCI . equals ( vnfcInstance . getId () ) ) ) return vnfcInstance ; throw new org.openbaton.nfvo.core.api.NotFoundException ( ( ( "VNFCInstance with id " + idVNFCI ) + " was not found" ) ) ; } 
private cluedo.Hud.STATUS rollAndMove ( cluedo.Player player , cluedo.Hud.STATUS status , java.util.Scanner sc ) { java.lang.System.out . println ( "/n" ) ; status = cluedo.Hud.STATUS.MOVE_PIECE ; displayBoard ( player , status ) ; movesRemaining = rollDice () ; java.lang.System.out . println ( ( "\nYou rolled a " + ( movesRemaining ) ) ) ; while ( ( movesRemaining ) != 0 ) { movePiece ( player , status , sc ) ; ( movesRemaining ) -- ; displayBoard ( player , status ) ; } return status ; } 
public static int getColumnsNumberFromDimension ( java.lang.String dimension ) { if ( org.apache.commons.lang.StringUtils . isEmpty ( dimension ) ) { return 0 ; } java.lang.String [] parts = org.apache.commons.lang.StringUtils . split ( dimension , ':' ) ; if ( ( parts.length ) < 2 ) { return 0 ; } java.lang.String secondPart = parts [ 1 ] ; return ( org.talend.dataprep.schema.xls.XlsUtils . getColumnsNumberLastCell ( secondPart ) ) + 1 ; } 
@ java.lang.Override public void onBindViewHolder ( final com.cv4j.app.adapter.GridViewFilterAdapter.ViewHolder holder , int position ) { java.lang.String filterName = mList . get ( position ) ; if ( position == 0 ) { holder.image . setImageBitmap ( mBitmap ) ; } else { if ( com.safframwork.tony.common.utils.Preconditions . isNotBlank ( filterName ) ) { com.cv4j.core.filters.CommonFilter filter = ( ( com.cv4j.core.filters.CommonFilter ) ( getFilter ( filterName ) ) ) ; com.cv4j.rxjava.RxImageData . bitmap ( mBitmap ) . addFilter ( filter ) . into ( holder.image ) ; } } holder.text . setText ( filterName ) ; } 
public void purchaseMultiple ( int index , int quantity , ver0.PlayerActor character ) { ver0.Item [] itemSet = ver0.Item . getAllItems () ; if ( character . canBuyItems ( index , quantity ) ) { if ( character . buyItems ( index , quantity ) ) { java.lang.System.out . println ( ( ( ( "Purchase successful! You have bought" + quantity ) + " " ) + ( itemSet [ index ] . getName () ) ) ) ; this . m_inventory [ index ] -= quantity ; } } else { java.lang.System.out . println ( "Sorry, you don't have enough money!" ) ; } } 
@ java.lang.Override public int evaluate () { if ( ( ( first ) != null ) && ( ( last ) != null ) ) { return ( first . evaluate () ) - ( last . evaluate () ) ; } else { throw new java.lang.IllegalStateException ( "NO!" ) ; } } 
@ javafx.fxml.FXML private void homeScreen ( javafx.event.ActionEvent event ) { javafx.scene.control.Alert confirm = new javafx.scene.control.Alert ( javafx.scene.control.Alert.AlertType.CONFIRMATION , "Are you sure you want to disconnect ? You won't be able to rejoin the game." , javafx.scene.control.ButtonType.YES , javafx.scene.control.ButtonType.NO ) ; confirm . setHeaderText ( "Disconnect" ) ; java.util.Optional < javafx.scene.control.ButtonType > result = confirm . showAndWait () ; if ( ( result . isPresent () ) && ( result . get () . equals ( javafx.scene.control.ButtonType.YES ) ) ) { if ( client . isHostClient () ) { client . disconnect () ; tdb.TheDrawingBoard . disconnectMultiplayerServer () ; } else { client . disconnect () ; } } } 
public static tw.kewang.cwb.pretty.FutureWeatherByTown getFutureWeatherByTown ( tw.kewang.cwb.Geocode geocode , float afterHours ) { java.util.Date date = new java.util.Date ( ( ( java.lang.System . currentTimeMillis () ) + ( ( long ) ( ( tw.kewang.cwb.utils.Constants.ONE_HOUR ) * afterHours ) ) ) ) ; tw.kewang.cwb.Cwb.LOG . debug ( "getFutureWeatherByTown: {}, {}" , geocode , date . toString () ) ; return tw.kewang.cwb.Cwb . getFutureWeatherByTown ( geocode , date ) ; } 
@ java.lang.Override public boolean add ( final T t ) { if ( ( size ) == 0 ) { first = new LinkedList.Item <> ( t , null , null ) ; } else if ( ( size ) == 1 ) { first.next = new LinkedList.Item <> ( t , first , null ) ; last = first.next ; } else { last.next = new LinkedList.Item <> ( t , last , null ) ; last = last.next ; } ( size ) ++ ; return true ; } 
protected final java.net.Socket getRootSocket ( java.lang.Object target ) { if ( target instanceof com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) { org.apache.thrift.transport.TNonblockingTransport inTrans = ( ( com.navercorp.pinpoint.plugin.thrift.field.getter.TNonblockingTransportFieldGetter ) ( target ) ) . _$PINPOINT$_getTNonblockingTransport () ; if ( inTrans != null ) { if ( inTrans instanceof com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) { return ( ( com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor ) ( inTrans ) ) . _$PINPOINT$_getSocket () ; } else { if ( isDebug ) { logger . debug ( "Invalid target object. Need field accessor({})." , com.navercorp.pinpoint.plugin.thrift.field.accessor.SocketFieldAccessor . class . getName () ) ; } } } } return null ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { java.util.ArrayList < java.lang.String > oldReviews = new java.util.ArrayList <> () ; for ( com.google.firebase.database.DataSnapshot child : dataSnapshot . getChildren () ) { java.lang.String oldSearchTerm = child . getValue () . toString () ; oldReviews . add ( oldSearchTerm ) ; } this . reviewID = ( profile ) + ( oldReviews . size () ) ; } 
private boolean maskHasPortGroup ( com.emc.storageos.db.client.model.ExportMask mask , java.net.URI portGroup ) { boolean result = false ; if ( ( portGroup == null ) || ( ( portGroup != null ) && ( portGroup . equals ( mask . getPortGroup () ) ) ) ) { result = true ; } return result ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object o ) { if ( o == ( this ) ) return true ; if ( ! ( super . equals ( o ) ) ) return false ; final com.helger.photon.core.ajax.response.AjaxHtmlResponse rhs = ( ( com.helger.photon.core.ajax.response.AjaxHtmlResponse ) ( o ) ) ; return ( com.helger.commons.equals.EqualsHelper . equals ( m_sErrorMessage , rhs.m_sErrorMessage ) ) && ( m_aSuccessValue . equals ( rhs.m_aSuccessValue ) ) ; } 
private void parseArrayMetadata ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { com.fasterxml.jackson.core.JsonToken value = jp . nextToken () ; while ( value != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { if ( value == ( com.fasterxml.jackson.core.JsonToken.START_OBJECT ) ) { parseObjectMetadata ( jp ) ; } else if ( value == ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) { parseArrayMetadata ( jp ) ; } value = jp . nextToken () ; } } 
@ java.lang.Override public void setEnabled ( boolean enabled ) { super . setEnabled ( enabled ) ; if ( ( isProgress ) || ( ( mSuccessAnimationState ) >= ( com.miruker.fabprogress.Fab.SUCCESS_ANIMATION.ON ) ) ) { setAlpha ( 1.0F ) ; } else { setAlpha ( ( enabled ? 1.0F : com.miruker.fabprogress.Fab.FAB_DISABLED_ALPHA ) ) ; } } 
@ java.lang.Override public int getPoints () { int points = 1 ; for ( java.util.Iterator < entities.Square > i = getSquaresInvolved () . iterator () ; i . hasNext () ; ) { entities.Block b = i . next () . getBlock () ; if ( b != null ) points *= b . getMultiplier () ; } return points ; } 
private java.lang.String buildContainerId () { java.lang.String id ; java.lang.String selectElementId = selectElement . getId () ; if ( ( selectElementId != null ) && ( ( selectElementId . length () ) > 0 ) ) { id = com.arcbees.chosen.client.ChosenImpl.containerIdRegExp . replace ( selectElementId , "_" ) ; } else { id = generateContainerId () ; selectElement . setId ( id ) ; } id += "_chzn" ; return id ; } 
@ java.lang.Override public void onDismiss ( com.example.reativos.oscar.AddParam myDialogFragment ) { java.lang.String command_type = dataStore . getString ( "type" ) ; int command_param = dataStore . getInt ( "param" ) ; if ( ( command_type != null ) && ( ! ( command_type . isEmpty () ) ) ) { com.example.reativos.oscar.Command newCommand = new com.example.reativos.oscar.Command ( command_type , command_param ) ; commandLists . get ( currentTabTag ) . add ( newCommand ) ; adapters . get ( currentTabTag ) . notifyDataSetChanged () ; } } 
public void startRecord ( android.view.View v ) { if ( ! ( mBound ) ) return; android.os.Bundle b = new android.os.Bundle () ; java.lang.String filePath = ( ( m_chosenDir ) + ( java.io.File.separator ) ) + ( hookString ) ; b . putString ( "str1" , filePath ) ; android.os.Message msg = android.os.Message . obtain ( null , 1 ) ; msg . setData ( b ) ; try { mService . send ( msg ) ; } catch ( android.os.RemoteException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public java.lang.Boolean getunicodePUA () { for ( int i = 0 ; i < ( toUnicode . length () ) ; ++ i ) { char unicode = this . toUnicode . charAt ( i ) ; if ( ( unicode >= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_BEGINNING ) ) && ( unicode <= ( org.verapdf.gf.model.impl.operator.textshow.GFGlyph.UNICODE_PRIVATE_USE_AREA_ENDING ) ) ) { return true ; } } return false ; } 
private void handlePortState () { switch ( portState ) { case CLOSED : if ( open () ) { portState = org.openhab.binding.dsmr.internal.DSMRPort.PortState.AUTO_DETECT ; autoDetectTS = java.lang.System . currentTimeMillis () ; } break; case AUTO_DETECT : if ( ( ( java.lang.System . currentTimeMillis () ) - ( autoDetectTS ) ) > ( autoDetectTimeoutMSec ) ) { switchPortSpeed () ; close () ; if ( open () ) { portState = org.openhab.binding.dsmr.internal.DSMRPort.PortState.AUTO_DETECT ; autoDetectTS = java.lang.System . currentTimeMillis () ; } } break; case OPENED : break; } } 
public void remove ( java.lang.String key ) { com.cdoframework.cdolib.data.cdo.Field objExt = hmItem . remove ( key ) ; if ( ( ( objExt != null ) && ( ( objExt . getType () . getDataType () ) == ( com.cdoframework.cdolib.base.DataType.FILE_TYPE ) ) ) && ( ! ( key . contains ( "." ) ) ) ) { ( fileCount ) -- ; } } 
@ java.lang.Override public void onCreate ( android.database.sqlite.SQLiteDatabase db ) { db . execSQL ( ( ( ( ( ( ( "CREATE TABLE " + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableName ) ) + " (" ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColValue ) ) + " VARCHAR(255), " ) + ( com.example.android.farliggodtapp.database.DatabaseHelper.tableColType ) ) + " VARCHAR(255) PRIMARY KEY UNIQUE)" ) ) ; db . execSQL ( ( "CREATE TABLE `blacklist` (" + ( ( ( ( ( ( ( ( "  `id` INTEGER PRIMARY KEY AUTOINCREMENT," + "  `scientificName` varchar(255) NOT NULL," ) + "  `navn` varchar(255) NOT NULL," ) + "  `risiko` varchar(255) NOT NULL," ) + "  `taxonID` int(11) NOT NULL," ) + "  `canEat` tinyint(1) NOT NULL DEFAULT '0'," ) + "  `family` varchar(255) NOT NULL," ) + "  `image` int(11) NOT NULL" ) + ")" ) ) ) ; } 
public static java.lang.reflect.Field getFiledNameByMethod ( java.lang.Class clazz , java.lang.reflect.Method method ) { java.lang.reflect.Field [] fields = indi.yume.tools.autosharedpref.util.ReflectUtil . getDeclaredFields ( clazz ) ; java.lang.reflect.Field field = null ; for ( java.lang.reflect.Field f : fields ) if ( ( f . getAnnotation ( indi.yume.tools.autosharedpref.Ignore . class ) ) == null ) if ( indi.yume.tools.autosharedpref.util.ReflectUtil . toSetter ( f . getName () ) . equals ( method . getName () ) ) field = f ; return field ; } 
public static void main ( java.lang.String [] arguments ) throws java.lang.Exception { Avans.Util.LinkedList < Avans.Tokenizer.Token > tokenList = new Avans.Util.LinkedList < Avans.Tokenizer.Token > () ; Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > runList = new Avans.Util.LinkedList < Avans.Compiler.Node.RunNode > () ; Avans.DesignPatterns2.Main . createTokenList ( tokenList , "..\\JarkHunt\\src\\script2.txt" ) ; if ( ( tokenList . getFirst () ) != null ) { Avans.DesignPatterns2.Main . testTokenList ( tokenList ) ; } } 
private void startMain () { if ( ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.JELLY_BEAN ) ) && ( ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.CAMERA ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) || ( ( android.support.v4.app.ActivityCompat . checkSelfPermission ( this , Manifest.permission.VIBRATE ) ) != ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) ) { requestPermission ( new java.lang.String [] { Manifest.permission.CAMERA , Manifest.permission.VIBRATE } , com.fosung.barcodescanner.InitActivity.REQUEST_STORAGE_READ_ACCESS_PERMISSION ) ; } else { android.content.Intent intent = new android.content.Intent ( this , com.fosung.barcodescanner.QrCodeScanActivity . class ) ; startActivity ( intent ) ; this . finish () ; } } 
public int myAtoi ( java.lang.String str ) { if ( null == str ) { str = "" ; } long ret = atoi ( str . trim () ) ; if ( ret > ( java.lang.Integer.MAX_VALUE ) ) { ret = java.lang.Integer.MAX_VALUE ; } else if ( ret < ( java.lang.Integer.MIN_VALUE ) ) { ret = java.lang.Integer.MIN_VALUE ; } else { ret = ( ( int ) ( ret ) ) ; } return ( ( int ) ( ret ) ) ; } 
private void closeOnError () { try { socket . close () ; } catch ( final java.io.IOException e ) { e . printStackTrace () ; mainController . showMessageOnMainView ( ( ( ( "Errore nella chiusura della socket" + ( socket ) ) + ( e . getMessage () ) ) + ( e . toString () ) ) ) ; } finally { sockets . remove ( socket ) ; } } 
void connect ( ) throws java.lang.InterruptedException { final io.netty.channel.ChannelFuture future ; synchronized ( lock ) { connectFuture = bootstrap . connect ( host , port ) ; future = connectFuture ; } future . sync () ; synchronized ( lock ) { while ( ( ( root ) == null ) && ( future . channel () . isOpen () ) ) { lock . wait () ; } } } 
public void enqueue ( Item item ) { if ( ( size ) == ( arr.length ) ) { resize ( ( 2 * ( arr.length ) ) ) ; } arr [ ( ( last ) ++ ) ] = item ; ( size ) ++ ; if ( ( last ) == ( arr.length ) ) last = 0 ; } 
public int makeTurn () { int winAns = 9 ; if ( ( ( BotParser.mRound ) == 1 ) || ( ( BotParser.mRound ) == 2 ) ) { return 3 ; } if ( ( BotParser.mRound ) >= 3 ) { winAns = BotParser.mField . checkWin ( BotParser.mBotId ) ; if ( winAns != 9 ) return winAns ; winAns = BotParser.mField . checkWin ( BotParser.mBotIdE ) ; if ( winAns != 9 ) return winAns ; } int move = new java.util.Random () . nextInt ( 7 ) ; return move ; } 
public void init5 () { for ( int x = ( ( Global.WIDTH ) / 2 ) - 1 ; x < ( ( ( Global.WIDTH ) / 2 ) + 2 ) ; x ++ ) { body . add ( new java.awt.Point ( x , ( - 3 ) ) ) ; } body . add ( new java.awt.Point ( ( ( ( Global.WIDTH ) / 2 ) - 1 ) , ( - 2 ) ) ) ; } 
@ java.lang.Override public akayerov.getsnils.IpraFile getNextDir () { while ( ( idx ) < ( fList.length ) ) { java.lang.String sogrn = null ; if ( ! ( fList [ idx ] . isFile () ) ) { sogrn = fList [ idx ] . getName () ; java.lang.String namefile = sogrn ; return new akayerov.getsnils.IpraFile ( fList [ ( ( idx ) ++ ) ] . getAbsolutePath () , sogrn , namefile ) ; } ( idx ) ++ ; } return null ; } 
@ java.lang.SuppressWarnings ( value = "restriction" ) public static boolean isEclipseDebug () { boolean debuggerEnabled = false ; org.osgi.framework.BundleContext bundleContext = org.osgi.framework.FrameworkUtil . getBundle ( org.talend.commons.runtime.debug.TalendDebugHandler . class ) . getBundleContext () ; if ( bundleContext == null ) { return false ; } org.osgi.framework.ServiceReference < org.eclipse.osgi.service.debug.DebugOptions > debugOptSR = bundleContext . getServiceReference ( org.eclipse.osgi.service.debug.DebugOptions . class ) ; if ( debugOptSR != null ) { org.eclipse.osgi.service.debug.DebugOptions debugOpt = bundleContext . getService ( debugOptSR ) ; debuggerEnabled = debugOpt . isDebugEnabled () ; } return debuggerEnabled ; } 
public java.lang.String getMdScript () { if ( "" . equals ( this . mdScript ) ) { return null ; } java.lang.String function = ( ( ( "function " + ( this . getName () ) ) + "(" ) + ( this . params ) ) + ") {\n" ; function = function + ( this . mdScript ) ; function = function + "\n}" ; return function ; } 
@ java.lang.Override public final org.jivesoftware.smack.util.XmlStringBuilder toXML () { org.jivesoftware.smack.util.XmlStringBuilder xml = new org.jivesoftware.smack.util.XmlStringBuilder ( this ) ; addExtraAttributes ( xml ) ; if ( ( candidates . isEmpty () ) && ( ( info ) == null ) ) { xml . closeEmptyElement () ; } else { xml . rightAngleBracket () ; xml . append ( candidates ) ; xml . optElement ( info ) ; xml . closeElement ( this ) ; } return xml ; } 
public org.exoplatform.task.dao.TaskQuery clone () { org.exoplatform.task.dao.condition.Condition condition = getCondition () ; return new org.exoplatform.task.dao.TaskQuery ( ( condition != null ? ( ( org.exoplatform.task.dao.condition.AggregateCondition ) ( condition . clone () ) ) : null ) , getOrderBy () , ( ( projectIds ) != null ? new java.util.ArrayList < java.lang.Long > ( projectIds ) : null ) , assignee ) ; } 
private void OnChatSendTextMessageResult ( int eGroupType , long nGroupID , long nFromUserID , long nToUserID , java.lang.String sSeqID , int nResult ) { synchronized ( callbacks ) { if ( ( callbacks . size () ) > 0 ) { for ( java.lang.ref.WeakReference < com.V2.jni.callback.ChatRequestCallback > wf : callbacks ) { if ( ( wf . get () ) == null ) { continue; } wf . get () . OnSendTextResultCallback ( eGroupType , nGroupID , nFromUserID , nToUserID , sSeqID , nResult ) ; } } } } 
private org.esbtools.message.admin.model.MetadataField searchField ( org.esbtools.message.admin.model.MetadataField tree , org.esbtools.message.admin.model.MetadataField field ) { org.esbtools.message.admin.model.MetadataField result = null ; if ( ( tree != null ) && ( field != null ) ) { if ( tree . getId () . equals ( field . getId () ) ) { return tree ; } else { for ( org.esbtools.message.admin.model.MetadataField child : tree . getChildren () ) { org.esbtools.message.admin.model.MetadataField dfsResult = searchField ( child , field ) ; if ( dfsResult != null ) { return dfsResult ; } } } } return result ; } 
public java.lang.String findParameterInExtension ( org.eclipse.core.runtime.IConfigurationElement configurationElement , java.lang.String parameter ) { if ( configurationElement != null ) { for ( org.eclipse.core.runtime.IConfigurationElement configurationElementChild : configurationElement . getChildren ( parameter ) ) { if ( ( configurationElementChild . getAttribute ( parameter ) ) != null ) { return configurationElementChild . getAttribute ( parameter ) ; } } } return null ; } 
@ java.lang.Override public boolean verify ( org.spongepowered.api.entity.living.Living living ) { if ( ! ( living instanceof org.spongepowered.api.entity.ArmorEquipable ) ) { return false ; } java.util.Optional < net.minecraft.item.ItemStack > optHeld = ( ( org.spongepowered.api.entity.ArmorEquipable ) ( living ) ) . getItemInHand () ; if ( ( optHeld . isPresent () ) && ( ( optHeld . get () . getItem () ) == ( com.skelril.skree.content.registry.item.CustomItemTypes.TWO_TAILED_SWORD ) ) ) { event . setBaseDamage ( 0 ) ; return true ; } return false ; } 
public java.lang.String toGhName () { java.lang.String groupDelimiter = ( isExclusive ) ? model.TurboLabel.EXCLUSIVE_DELIM : model.TurboLabel.NONEXCLUSIVE_DELIM ; java.lang.String groupPrefix = ( ( ( getGroup () ) == null ) || ( getGroup () . isEmpty () ) ) ? "" : ( getGroup () ) + groupDelimiter ; java.lang.String groupAppended = groupPrefix + ( getName () ) ; return groupAppended ; } 
@ java.lang.Deprecated private static int buildMaxIndexPages ( int allPageNo , java.lang.Integer maxIndexPages ) { if ( ( com.feilong.core.util.Validator . isNullOrEmpty ( maxIndexPages ) ) || ( maxIndexPages <= 0 ) ) { if ( allPageNo > 1000 ) { return 6 ; } else if ( allPageNo > 100 ) { return 8 ; } else { return 10 ; } } return maxIndexPages ; } 
private static java.lang.String createDNPath ( org.apache.directory.api.ldap.model.name.Dn dn ) { java.lang.StringBuilder path = new java.lang.StringBuilder () ; for ( org.apache.directory.api.ldap.model.name.Rdn rnd : dn . getRdns () ) { if ( ( path . length () ) > 0 ) { path . append ( '/' ) ; } path . append ( org.apache.jackrabbit.util.Text . escapeIllegalJcrChars ( rnd . toString () ) ) ; } return path . toString () ; } 
@ java.lang.Override public void messageArrived ( java.lang.String topic , org.eclipse.paho.client.mqttv3.MqttMessage message ) { if ( ( ( mTopicCallbacks ) == null ) || ( mTopicCallbacks . isEmpty () ) ) return; for ( io.relayr.websocket.WebSocketCallback socketCallback : mTopicCallbacks . get ( topic ) ) socketCallback . successCallback ( message ) ; } 
public static void fatal ( java.lang.String location , java.lang.String error , java.lang.Throwable cause ) { java.lang.System.err . println ( ( ( location + ": " ) + error ) ) ; if ( cause != null ) cause . printStackTrace () ; if ( ( sutilities.Debugger.logger_ ) != null ) sutilities.Debugger.logger_ . log ( "SEVERE" , location , error , cause , true ) ; } 
private void connectRight ( int i , int j ) { if ( j < ( n ) ) { int right = getPosition ( i , ( j + 1 ) ) ; if ( isOpen ( right ) ) { grid . union ( right , getPosition ( i , j ) ) ; } } } 
@ java.lang.Override public void run () { if ( bHandshakeResponse ) { if ( ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_RESPONSE ; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler . sendMessage ( msg1 ) ; } } else { if ( ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler ) != null ) { android.os.Message msg1 = new android.os.Message () ; msg1.what = com.freerdp.freerdpcore.utils.appdefine.MSG_CONNECT_NON_RESPONSE ; com.freerdp.freerdpcore.presentation.FiwoServerSetting.mHandler . sendMessage ( msg1 ) ; } } ( com.freerdp.freerdpcore.presentation.FiwoServerSetting.count ) ++ ; } 
public float get ( com.s13g.winston.lib.temperature.Temperature.Unit unit ) { if ( ( mUnit ) == unit ) { return mValue ; } if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) ) { return ( ( mValue ) - 32 ) / 1.8F ; } else if ( ( unit == ( com.s13g.winston.lib.temperature.Temperature.Unit.FAHRENHEIT ) ) && ( ( mUnit ) == ( com.s13g.winston.lib.temperature.Temperature.Unit.CELSIUS ) ) ) { return ( ( mValue ) * 1.8F ) + 32 ; } throw new java.lang.RuntimeException ( "Unsupported temperature conversion" ) ; } 
void enterInputValue ( final org.openqa.selenium.WebElement inputElement , final java.lang.String value ) throws java.lang.Exception { waitForElementVisible ( inputElement ) ; final java.lang.String inputID = inputElement . getAttribute ( "id" ) ; summonTooltip ( inputID ) ; showInputField ( inputID ) ; for ( int i = 0 ; i < ( value . length () ) ; i ++ ) { inputElement . sendKeys ( java.lang.Character . toString ( value . charAt ( i ) ) ) ; waitFor ( 150L ) ; } closeTooltip () ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( ! ( obj instanceof gov.gtas.model.Document ) ) return false ; final gov.gtas.model.Document other = ( ( gov.gtas.model.Document ) ( obj ) ) ; return java.util.Objects . equals ( this . documentNumber , other.documentNumber ) ; } 
@ java.lang.Override public int compare ( android.location.Location t1 , android.location.Location t2 ) { if ( ( t1 . getTime () ) > ( t2 . getTime () ) ) { return - 1 ; } if ( ( t2 . getTime () ) > ( t1 . getTime () ) ) { return 1 ; } return 0 ; } 
@ java.lang.Override public org.jowidgets.api.model.item.IMenuModel editMenu ( final org.jowidgets.cap.ui.api.widgets.IBeanTable < BEAN_TYPE > table , final int columnIndex , final org.jowidgets.api.model.item.IMenuModel menuModel ) { if ( ( model . getUpdaterService () ) == null ) { return null ; } else if ( hasDefaultEditAction ) { menuModel . addAction ( 0 , editAction ) ; return menuModel ; } else { return menuModel ; } } 
public int getPower ( double speed , int resistance ) { double power = 0.0 ; if ( speed > 0 ) { power = ( ( 3.05 + ( 4.577 * speed ) ) + ( ( 0.01798 * speed ) * speed ) ) + ( ( ( 2.038E-5 * speed ) * speed ) * speed ) ; } return ( ( int ) ( power ) ) ; } 
protected void setResultActivityError ( java.lang.String srvStr , java.lang.Exception e ) { resultActivityError = ( ( e . getClass () . getName () ) + " : Cannot connect to " ) + srvStr ; java.lang.String msg = e . getMessage () ; if ( msg != null ) resultActivityError = ( ( resultActivityError ) + " : " ) + ( e . getMessage () ) ; } 
@ java.lang.Override public char getGrid ( int x , int y ) throws java.io.IOException { outToServer . writeBytes ( ( ( ( ( "GRID " + x ) + " " ) + y ) + "\n" ) ) ; java.lang.String response = inFromServer . readLine () ; java.lang.System.out . print ( ( response + " " ) ) ; return response . charAt ( 0 ) ; } 
private java.util.List < com.example.johannes.colorpicker.Task > addTaskToList () { java.util.List < com.example.johannes.colorpicker.Task > tasks = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( colors . size () ) ; i ++ ) { com.example.johannes.colorpicker.Task task = new com.example.johannes.colorpicker.Task () ; task . setOtsikko ( colors . get ( i ) . getHex () ) ; tasks . add ( task ) ; } return tasks ; } 
public synchronized void advance ( long duration , java.util.concurrent.TimeUnit unit ) { if ( duration <= 0 ) throw new java.lang.IllegalArgumentException ( ( "Duration must be positive; was " + duration ) ) ; this . nanos += unit . toNanos ( duration ) ; for ( ; ; ) { co.paralleluniverse.vtime.ManualClock.Scheduled s = waiters . peek () ; if ( ( s == null ) || ( ( s.deadline ) > ( nanos ) ) ) break; waiters . poll () . wakeup () ; } } 
@ java.lang.Override protected com.example.petr.myapplication.FilterResults performFiltering ( java.lang.CharSequence charSequence ) { com.example.petr.myapplication.FilterResults filterResults = new com.example.petr.myapplication.FilterResults () ; if ( charSequence != null ) { java.util.List < java.lang.String > results = findSuggestions ( charSequence . toString () ) ; filterResults.values = results ; filterResults.count = results . size () ; } return filterResults ; } 
@ java.lang.Override public void deleteStudy ( java.lang.String username , java.lang.String studyUID ) throws java.lang.Exception { edu.stanford.epad.epadws.models.Study study = getStudy ( studyUID ) ; if ( study == null ) return; new edu.stanford.epad.epadws.models.ProjectToSubjectToStudy () . deleteObjects ( ( "study_id=" + ( study . getId () ) ) ) ; new edu.stanford.epad.epadws.models.EpadFile () . deleteObjects ( ( "study_id=" + ( study . getId () ) ) ) ; study . delete () ; } 
public static void main ( final java.lang.String [] args ) throws java.lang.InterruptedException { final long runtime = ( ( args.length ) > 0 ) ? java.lang.Long . parseLong ( args [ 0 ] ) : com.awesome.BaseExamplePeriod.DEFAULT_RUN_TIME_MSEC ; com.awesome.ex1_2.Ex1_2 ex = new com.awesome.ex1_2.Ex1_2 ( runtime ) ; ex . run () ; ex . printResults () ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( ( data != null ) && ( ! ( data . getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) . equals ( "-1" ) ) ) ) { ean . setText ( data . getStringExtra ( it.jaschke.alexandria.AddBook.ISBN_RESULT ) ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment f = new com.juntcompany.godandgod.Login.SignIn.SignInPolicyFragment () ; SignInActivity.fNum = getActivity () . getSupportFragmentManager () . getBackStackEntryCount () ; android.support.v4.app.FragmentTransaction ft = getActivity () . getSupportFragmentManager () . beginTransaction () ; ft . replace ( R.id.container , f ) ; ft . addToBackStack ( ( "" + ( SignInActivity.fNum ) ) ) ; ft . commit () ; } 
public void refresh ( org.openhab.binding.antiferencematrix.internal.model.OutputPortDetails outputPortDetails ) { updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () . getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.PORT_STATUS_MESSAGE_CHANNEL ) , new org.eclipse.smarthome.core.library.types.StringType ( outputPortDetails . getStatusMessage () ) ) ; org.eclipse.smarthome.core.library.types.OnOffType power ; if ( ( outputPortDetails . getSinkPowerStatus () ) > 0 ) { power = org.eclipse.smarthome.core.library.types.OnOffType.ON ; } else { power = org.eclipse.smarthome.core.library.types.OnOffType.OFF ; } updateState ( new org.eclipse.smarthome.core.thing.ChannelUID ( getThing () . getUID () , org.openhab.binding.antiferencematrix.AntiferenceMatrixBindingConstants.AntiferenceMatrixBindingConstants.POWER_CHANNEL ) , power ) ; updateStatusIfRequired ( ThingStatus.ONLINE ) ; } 
public void queryPOIListUpdate () { org.walkersguide.utils.POIPreset preset = settingsManager . getPOIPreset ( settingsManager . getPresetIdInRouterFragment () ) ; if ( ( ( ( currentLocation ) == null ) || ( ( currentCompassValue ) < 0 ) ) || ( preset == null ) ) { return; } boolean isInsidePublicTransport = false ; if ( ( numberOfHighSpeeds ) > 0 ) isInsidePublicTransport = true ; poiManager . updatePOIList ( preset . getId () , preset . getRange () , currentLocation , currentCompassValue , "" , isInsidePublicTransport ) ; } 
void killDepletedAgents () { if ( ( agents . size () ) > 0 ) { for ( Agents.Agent agent : agents ) { if ( ( agent.food ) <= 0 ) { GameLogic.Position deathPlace = agent.position ; agents . remove ( agent ) ; tiles [ deathPlace.x ] [ deathPlace.y ] . agents . remove ( agent ) ; } } } } 
public void checkJoin ( java.lang.String id , java.lang.String password , java.lang.String checkPassword ) { if ( password . equals ( checkPassword ) ) { com.project.snake.database.SnakeDTO data = new com.project.snake.database.SnakeDTO ( "join" , id , password , 0 , 0 , 0 , 0 ) ; data = network . sendData ( data ) ; java.lang.System.out . println ( data . getStatus () ) ; if ( data != null ) { view_ctr . joinView ( data . getStatus () ) ; return; } } view_ctr . joinView ( "joinno" ) ; } 
@ java.lang.Override public java.nio.file.FileVisitResult visitFile ( java.nio.file.Path file , java.nio.file.attribute.BasicFileAttributes attrs ) throws java.io.IOException { final java.lang.String path_temp = file . toString () ; final java.lang.String path_name = omnikryptec.util.AdvancedFile . getName ( path_temp ) ; if ( ( ( advancedFileFilter == null ) || ( advancedFileFilter . accept ( ME , path_name ) ) ) && ( recursiv || ( file . getParent () . equals ( myPathTest ) ) ) ) { files . add ( new omnikryptec.util.AdvancedFile ( true , ME , path_name ) ) ; } return java.nio.file.FileVisitResult.CONTINUE ; } 
@ java.lang.Override public void onDataFetchComplete ( java.lang.Throwable throwable , java.lang.String parser ) { if ( parser . equals ( AppState.MOD_NEWS ) ) { if ( ( ! ( this . isDetached () ) ) && ( this . isVisible () ) ) { this . loadPages () ; } com.untappedkegg.rally.data.DbUpdated . open () ; com.untappedkegg.rally.data.DbUpdated . updated_insert ( parser ) ; com.untappedkegg.rally.data.DbUpdated . close () ; } } 
public double getMinY () { double minY = points . get ( 0 ) . y ; for ( int i = 1 ; i < ( points . size () ) ; i ++ ) { double pY = points . get ( i ) . y ; if ( pY < minY ) { minY = pY ; } } return minY ; } 
public void setDimensions () { if ( ( java.lang.Double . toString ( value ) . length () ) < 15 ) { width = java.lang.Double . toString ( value ) . length () ; height = 1 ; } else { width = 15 ; height = ( ( java.lang.Double . toString ( value ) . length () ) / ( width ) ) + 1 ; } } 
@ java.lang.Override public com.jomm.terroir.business.model.AbstractUser update ( com.jomm.terroir.business.model.AbstractUser user ) throws com.jomm.terroir.util.InvalidEntityException , java.lang.NullPointerException { if ( user == null ) { throw new java.lang.NullPointerException () ; } else if ( ( user . getId () ) == null ) { throw new com.jomm.terroir.util.InvalidEntityException () ; } return userDao . update ( user ) ; } 
private java.lang.String getTransitTitle ( org.opentripplanner.api.model.Leg leg ) { java.lang.String [] possibleTitles = new java.lang.String [] { leg.routeShortName , leg.route , leg.routeId } ; for ( int i = 0 ; i < ( possibleTitles.length ) ; i ++ ) { if ( ! ( android.text.TextUtils . isEmpty ( possibleTitles [ i ] ) ) ) { return possibleTitles [ i ] ; } } return null ; } 
@ java.lang.Override public void applyTo ( double [] xs , int offset , int length , mikera.vectorz.AVector ys ) { for ( int i = 0 ; i < length ; i ++ ) { xs [ ( offset + i ) ] = ( ( java.lang.Number ) ( fn . invoke ( xs [ ( offset + i ) ] , ys . unsafeGet ( i ) ) ) ) . doubleValue () ; } } 
public static double norm2 ( float [] x , int dim ) { double dot = 0 ; for ( int i = 0 ; i < dim ; ++ i ) { dot += ( x [ i ] ) * ( x [ i ] ) ; } return dot ; } 
private static int checkSum ( java.lang.String zip ) { int checkDigit = 0 ; for ( int i = 0 ; i < ( zip . length () ) ; i ++ ) { checkDigit += java.lang.Integer . parseInt ( ( "" + ( zip . charAt ( i ) ) ) ) ; } checkDigit = checkDigit % 10 ; return checkDigit ; } 
@ org.junit.Test public void testInvalidNullURI () { try { java.net.URL url = mastsh . toURL ( null ) ; org.junit.Assert . fail ( ( "expected IllegalArgumentException, got " + url ) ) ; } catch ( java.lang.IllegalArgumentException expected ) { ca.nrc.cadc.caom2.artifact.resolvers.MastResolverTest.log . info ( ( "IllegalArgumentException thrown as expected. Test passed.: " + expected ) ) ; } catch ( java.lang.Exception unexpected ) { ca.nrc.cadc.caom2.artifact.resolvers.MastResolverTest.log . error ( "unexpected exception" , unexpected ) ; org.junit.Assert . fail ( ( "unexpected exception: " + unexpected ) ) ; } } 
@ java.lang.Override public boolean add ( E e ) { java.lang.Object [] arr2 = new java.lang.Object [ ( arr.length ) + 1 ] ; for ( int x = 0 ; x < ( arr.length ) ; x ++ ) { arr2 [ x ] = arr [ x ] ; } arr2 [ arr.length ] = e ; arr = arr2 ; return true ; } 
public java.util.ArrayList pendingBids () { java.util.ArrayList < com.ismailmare.warondemand.WarItem > itemsBeingBidOn = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( inventory . size () ) ; i ++ ) { if ( ( inventory . get ( i ) . getStatus () ) == 1 ) { itemsBeingBidOn . add ( inventory . get ( i ) ) ; } } return itemsBeingBidOn ; } 
@ java.lang.Override public void run () { synchronized ( this . plugin . playersToCheck ) { for ( org.bukkit.entity.Player player : this . plugin . playersToCheck ) { if ( ! ( this . plugin . checkWorld ( player . getWorld () . getName () ) ) ) { player . sendMessage ( ( "This world is currently restricted.\n" + ( DimRestrictor.plugin . info ( player . getWorld () . getName () ) ) ) ) ; net.kaikk.mc.DimRestrictor.DimRestrictor . teleportPlayer ( player , player . getLocation () ) ; } this . plugin . playersToCheck . remove ( player ) ; } } } 
public boolean ParseJSONObject () { int code = 0 ; try { code = jsonObj . getInteger ( "cod" ) ; } catch ( java.lang.Exception e ) {} if ( code == 200 ) { org.vertx.java.core.json.JsonObject newData = CreateCorrectJSONObject () ; CreateCorrectResponseString ( newData ) ; return true ; } else { responseString . append ( jsonObj ) ; return false ; } } 
@ java.lang.Override public void setForeground ( java.awt.Color color ) { if ( ( foreground ) == null ) { super . setForeground ( color ) ; if ( ( module ) != null ) for ( java.awt.Component c : getComponents () ) { c . setForeground ( color ) ; } } } 
private int getColumn () { int x ; java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; while ( true ) { java.lang.System.out . print ( "Please enter the column number (1-10):" ) ; x = scanner . nextInt () ; if ( ( x >= 1 ) & ( x <= 10 ) ) return x - 1 ; } } 
private java.lang.Long fetchSearchKeyId ( java.lang.String suggestedField ) { javax.persistence.Query query = mgr . createQuery ( "select f from MetadataEntity f where f.value = :value" ) ; query . setParameter ( "value" , suggestedField ) ; java.util.List < org.esbtools.message.admin.common.orm.MetadataEntity > queryResult = ( ( java.util.List < org.esbtools.message.admin.common.orm.MetadataEntity > ) ( query . getResultList () ) ) ; if ( ( queryResult != null ) && ( ! ( queryResult . isEmpty () ) ) ) { return queryResult . get ( 0 ) . getId () ; } return null ; } 
private static java.lang.String _getParentMessageIdFromSubject ( javax.mail.Message message ) throws java.lang.Exception { if ( ( message . getSubject () ) == null ) { return null ; } java.lang.String parentMessageId = null ; java.lang.String subject = message . getSubject () ; int pos = subject . lastIndexOf ( CharPool.LESS_THAN ) ; if ( pos != ( - 1 ) ) { parentMessageId = subject . substring ( pos ) ; } return parentMessageId ; } 
@ java.lang.Override public < T > T loadClass ( java.lang.Class < T > pluginClass ) { java.lang.String id = classToBeanMap . get ( pluginClass . getName () ) ; if ( id != null ) { return osgiPluginTracker . getBean ( pluginClass , this , id ) ; } else { try { return pluginClass . newInstance () ; } catch ( java.lang.Exception e ) { logger . error ( "Error instancing plugin class: " , e ) ; return null ; } } } 
@ java.lang.Override public java.util.LinkedList < com.compomics.util.experiment.identification.matches.SpectrumMatch > getAllSpectrumMatches ( com.compomics.util.waiting.WaitingHandler waitingHandler , com.compomics.util.experiment.identification.identification_parameters.SearchParameters searchParameters , com.compomics.util.preferences.SequenceMatchingPreferences sequenceMatchingPreferences , boolean expandAaCombinations ) throws java.io.IOException , java.lang.ClassNotFoundException , java.lang.IllegalArgumentException , java.lang.InterruptedException , java.sql.SQLException , javax.xml.bind.JAXBException , org.xmlpull.v1.XmlPullParserException { if ( ( spectrumMatches ) == null ) { parseFile ( waitingHandler , expandAaCombinations , true ) ; } return spectrumMatches ; } 
private void setPlaceGuess ( java.lang.String placeGuess ) { if ( placeGuess != null ) { placeGuess = placeGuess . trim () ; } if ( ( placeGuess != null ) && ( ( placeGuess . length () ) > 0 ) ) { mLocationGuess . setText ( placeGuess ) ; mObservation.place_guess = placeGuess ; } else { mLocationGuess . setText ( R.string.set_location ) ; mObservation.place_guess = null ; } } 
public boolean isHelpValid ( java.lang.String [] arguments ) { if ( ( arguments.length ) == 0 ) { return true ; } else if ( ( arguments.length ) == 1 ) { return commandList_ . getHelpArgumentList () . contains ( arguments [ 0 ] ) ; } else { return false ; } } 
@ java.lang.Override public java.lang.String setFakeHash () { if ( ( this . hash . length () ) == 0 ) { this . hash = this . pack . getId () ; if ( ( this . hash . length () ) == ( org.spongepowered.common.resourcepack.SpongeResourcePack.HASH_SIZE ) ) { this . hash += " " ; } } return this . hash . trim () ; } 
@ java.lang.Override public void run () { while ( ( hitQueue . size () ) > 0 ) { org.bukkit.event.entity.EntityDamageByEntityEvent e = hitQueue . remove () ; ( ( org.bukkit.entity.Damageable ) ( e . getEntity () ) ) . damage ( e . getDamage () , e . getDamager () ) ; } } 
public static JyNI.PyObject PyImport_AddModule ( java.lang.String name ) { java.lang.String nm = name . intern () ; JyNI.PySystemState pss = JyNI.Py . getSystemState () ; JyNI.PyObject er = pss.modules . __finditem__ ( nm ) ; if ( er != null ) return er ; else { er = new JyNI.PyModule ( nm , new JyNI.PyNativeRefHoldingStringMap () ) ; pss.modules . __setitem__ ( nm , er ) ; return er ; } } 
private void handleFoundAllFiles ( final java.util.Set < java.io.File > allFiles ) throws java.io.IOException { if ( ( wildcardExpanderHandler ) != null ) { try { wildcardExpanderHandler . transform ( allFiles ) ; } catch ( final java.lang.Exception e ) { if ( e instanceof java.io.IOException ) { throw ( ( java.io.IOException ) ( e ) ) ; } throw new java.io.IOException ( ( "Exception during expanding wildcard: " + ( e . getMessage () ) ) ) ; } } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { final android.view.View view = inflater . inflate ( R.layout.movie_detail_view , container , false ) ; mUnbinder = butterknife.ButterKnife . bind ( this , view ) ; if ( ( getArguments () ) != null ) { android.os.Bundle bundle = getArguments () ; mMovieId = bundle . getInt ( MovieViewHolderPortrait.MOVIEID_KEY , ( - 1 ) ) ; timber.log.Timber . d ( "movieId: %d" , mMovieId ) ; } return view ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { return ( ( o instanceof West.Math.ComplexNumber ) && ( ( ( West.Math.ComplexNumber ) ( o ) ) . real . equals ( real ) ) ) && ( ( ( West.Math.ComplexNumber ) ( o ) ) . imag . equals ( imag ) ) ; } 
public static int maxInBounds ( int [] A , int lowerBound , int upperBound ) { int max = 0 ; int [] bounds = new int [] { lowerBound , upperBound } ; for ( int i = MyMath . min ( bounds ) ; i < ( ( MyMath . max ( bounds ) ) + 1 ) ; i ++ ) { max = java.lang.Math . max ( A [ i ] , max ) ; } return max ; } 
private void labelCpuInventory () { if ( game . getCpu () ) if ( ( game . getCpuPlayer () ) == ( Player.BLUE ) ) { blueInvLabel . setVisible ( true ) ; redInvLabel . setVisible ( false ) ; } else { blueInvLabel . setVisible ( false ) ; redInvLabel . setVisible ( true ) ; } else { blueInvLabel . setVisible ( false ) ; redInvLabel . setVisible ( false ) ; } } 
private void catchTheGift () { if ( gift . getRect () . intersects ( paddle . getRect () ) ) { gift = null ; for ( brickbreaker.source.Ball ball : balls ) { if ( ( ball . getSpeed () ) >= 3 ) { ball . setSpeed ( brickbreaker.source.BALL_SPEED ) ; ball . setImage ( brickbreaker.source.BALL ) ; } else if ( ( paddle.width ) < 75 ) { Sound.SIZEUP . play () ; paddle . setWidth ( 75 ) ; } else { score += 10 ; } } } } 
@ net.smartcosmos.dao.things.impl.Test public void testFindAll ( ) throws java.lang.Exception { populateData () ; int expectedSize = 12 ; int actualSize = 0 ; java.util.List < net.smartcosmos.dto.things.ThingResponse > response = persistenceService . findAll ( tenantUrn ) ; assertFalse ( response . isEmpty () ) ; actualSize = response . size () ; assertTrue ( ( ( ( "Expected " + expectedSize ) + " but received " ) + actualSize ) , ( actualSize == expectedSize ) ) ; } 
private int getStartIndex () { int start = 0 ; double MAX = 0 ; for ( int i = 0 ; i < ( numOfCity ) ; i ++ ) { for ( int j = 0 ; j < ( numOfCity ) ; j ++ ) { if ( ( distance [ i ] [ j ] ) > MAX ) { MAX = distance [ i ] [ j ] ; start = i ; } } } return start ; } 
@ java.lang.Override protected void onPause () { super . onPause () ; if ( ( rc ) != null ) { rc . stop () ; pauseTime = java.lang.System . currentTimeMillis () ; totalForgroundTime = ( tinydb . getLong ( "TotalForegroundTime" , 0 ) ) + ( ( pauseTime ) - ( resumeTime ) ) ; tinydb . putLong ( "TotalForegroundTime" , totalForgroundTime ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( v . getId () ) == ( R.id.upload_files_btn_cancel ) ) { setResult ( com.owncloud.android.ui.activity.RESULT_CANCELED ) ; finish () ; } else if ( ( v . getId () ) == ( R.id.upload_files_btn_upload ) ) { new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask () . execute ( ( ( mBehaviourSpinner . getSelectedItemPosition () ) == 0 ) ) ; } } 
private java.lang.Long matchesContract ( net.nikr.eve.jeveasset.gui.tabs.contracts.MyContractItem contractItem , boolean add ) { if ( contractItem != null ) { return matches ( add , contractItem . getTypeID () , ( contractItem . getContract () . isForCorp () ? contractItem . getContract () . getIssuerCorpID () : contractItem . getContract () . getIssuerID () ) , null , null , contractItem . getContract () . getLocations () , null , null , null , null , contractItem ) ; } else { return null ; } } 
public void categorySelected ( org.unpidf.univmobile.data.entities.Category cat ) { super . onBackPressed () ; android.app.FragmentManager manager = getFragmentManager () ; org.unpidf.univmobile.ui.fragments.GeoCampusFragment f = ( ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment ) ( manager . findFragmentByTag ( org.unpidf.univmobile.ui.fragments.GeoCampusFragment . class . getName () ) ) ) ; if ( f != null ) { f . categorySelected ( cat ) ; } } 
public boolean remove ( int index ) { if ( ( index < 1 ) || ( index > ( size () ) ) ) return false ; com.seb.research.algorithms.LinkedList.Node current = head ; for ( int i = 1 ; i < index ; i ++ ) { if ( ( current . getNext () ) == null ) { return false ; } current = current . getNext () ; } current . setNext ( current . getNext () . getNext () ) ; ( count ) -- ; return true ; } 
@ java.lang.Override public void onRequestPermissionsResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) { if ( requestCode == 0 ) { if ( ( ( ( grantResults.length ) > 0 ) && ( ( grantResults [ 0 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) && ( ( grantResults [ 1 ] ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) ) { btn_takePictureButton . setEnabled ( true ) ; } } } 
public java.util.Calendar calcDataCobranca ( java.util.Calendar dataCompra ) { java.util.Calendar dataCobranca = java.util.Calendar . getInstance () ; dataCobranca . setTime ( dataCompra . getTime () ) ; if ( ( diaVirada ) > ( diaVencimento ) ) { dataCobranca . add ( java.util.Calendar.MONTH , 1 ) ; } if ( ( dataCobranca . get ( java.util.Calendar.DAY_OF_MONTH ) ) >= ( diaVirada ) ) { dataCobranca . add ( java.util.Calendar.MONTH , 1 ) ; } dataCobranca . set ( java.util.Calendar.DAY_OF_MONTH , diaVencimento ) ; return dataCobranca ; } 
public void notifyRegistrationError () { android.util.Log . v ( com.plugin.gcm.NotificationService.TAG , ( "GCM Registration Failed for webview " + ( getWebView () ) ) ) ; if ( ( getRegisterCallBack () ) != null ) { setNotifiedOfRegistered ( false ) ; getRegisterCallBack () . error ( mNotificationService.mRegistrationErrorId ) ; } else { android.util.Log . v ( com.plugin.gcm.NotificationService.TAG , ( "registration error -> No Register callback - webview: " + ( getWebView () ) ) ) ; } } 
private void recurseImpliedPermissions ( com.hypersocket.permissions.PermissionType t , java.util.Set < com.hypersocket.permissions.PermissionType > derivedPermissions ) { if ( ( t != null ) && ( ! ( derivedPermissions . contains ( t ) ) ) ) { derivedPermissions . add ( t ) ; if ( ( t . impliesPermissions () ) != null ) { for ( com.hypersocket.permissions.PermissionType t2 : t . impliesPermissions () ) { recurseImpliedPermissions ( t2 , derivedPermissions ) ; } } } } 
public void renameResidence ( java.lang.String oldResidence , java.lang.String newResidence ) { if ( oldResidence == null ) return; if ( newResidence == null ) return; oldResidence = oldResidence . toLowerCase () ; com.bekvon.bukkit.residence.protection.ClaimedResidence res = ResidenceList . get ( oldResidence ) ; if ( res != null ) { removeResidence ( oldResidence ) ; ResidenceList . put ( newResidence . toLowerCase () , res ) ; } } 
private void generateColors () { if ( ( builder.colorsTop ) != null ) { colorsTop = builder.colorsTop ; colorsSub = builder.colorsSub ; return; } if ( builder.accentMode ) { colorsTop = ColorPalette.ACCENT_COLORS ; colorsSub = ColorPalette.ACCENT_COLORS_SUB ; } else { colorsTop = ColorPalette.PRIMARY_COLORS ; colorsSub = ColorPalette.PRIMARY_COLORS_SUB ; } } 
@ org.junit.Test public void getFormattedDateString_30years () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( ( ( 30 * 365 ) * 24 ) * 60 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_years , 30 ) ) ) ; } 
@ java.lang.Override public int hashCode () { int result = ( ( t1 ) != null ) ? t1 . hashCode () : 0 ; result = ( 31 * result ) + ( ( t2 ) != null ? t2 . hashCode () : 0 ) ; return result ; } 
public void ExtractOnlineDocuments () { if ( ( profile . getUrls () . size () ) > 0 ) { for ( java.lang.String url : profile . getUrls () ) { ExtractWebArticles ( url ) ; } driver . quit () ; } else { driver . quit () ; } ExtractKeyterms () ; } 
@ java.lang.Override public int hashCode () { final int prime = 31 ; int hashCode = 1 ; hashCode = ( prime * hashCode ) + ( ( data ) == null ? 0 : data . hashCode () ) ; hashCode = ( prime * hashCode ) + ( ( children ) == null ? 0 : children . hashCode () ) ; return hashCode ; } 
public boolean isManaTurn ( int turnNum ) { int current = 1 ; int past = 0 ; while ( current < ( turnNum + 1 ) ) { int temp = current ; current += past ; past = temp ; if ( current == turnNum ) { return true ; } } return false ; } 
public static void main ( java.lang.String [] args ) { java.util.Scanner scan = new java.util.Scanner ( java.lang.System.in ) ; int N = scan . nextInt () ; long r = scan . nextInt () ; long c = scan . nextInt () ; long base = 0 ; long result = Main . getPoint ( ( r + 1 ) , ( c + 1 ) , N , base ) ; java.lang.System.out . println ( ( result - 1 ) ) ; } 
public static java.lang.String encrypt ( java.lang.String algorithm , java.lang.String clearText ) { try { java.security.MessageDigest pwd = java.security.MessageDigest . getInstance ( algorithm ) ; pwd . update ( clearText . getBytes () ) ; return com.sun.org.apache.xerces.internal.impl.dv.util.HexBin . encode ( pwd . digest () ) ; } catch ( java.security.NoSuchAlgorithmException e ) { throw new java.lang.RuntimeException ( ( "No Such Algorithm: " + algorithm ) ) ; } } 
public java.util.List < Actor > detection ( java.util.List < Actor > actors ) { for ( Actor a1 : actors ) { a1 . setInAir ( true ) ; for ( Actor a2 : actors ) { if ( a1 != a2 ) { if ( isCollision ( a1 , a2 ) ) resolveCollision ( a1 , a2 ) ; } } } return actors ; } 
private javax.jcr.Node newNode ( final javax.jcr.Node parent , final org.xml.sax.Attributes attributes ) throws javax.jcr.RepositoryException { javax.jcr.Node parentNode ; if ( parent == null ) { parentNode = this . session . getRootNode () ; } else { parentNode = parent ; } final java.lang.String name = attributes . getValue ( "name" ) ; final java.lang.String primaryType = attributes . getValue ( "primaryType" ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . info ( "Node {} adding child node {}(type={})" , parentNode . getPath () , name , primaryType ) ; return parentNode . addNode ( name , primaryType ) ; } 
@ javafx.fxml.FXML public void initialize () { desc . setText ( task . getDesc () . getValue () ) ; id . setText ( ( ( displayedIndex ) + ". " ) ) ; venue . setText ( task . getVenue () . getValue () ) ; priority . setText ( task . getPriority () . getValue () ) ; time . setText ( task . getTime () . getValue () ) ; tags . setText ( task . tagsString () ) ; } 
public void evolve ( double time , asteroids.part2.CollisionListener collistionListener ) { if ( time <= 0 ) { return; } double timeToFirstCollision = this . getTimeToFirstCollision () ; if ( time <= timeToFirstCollision ) { this . advance ( time ) ; return; } else { this . advance ( timeToFirstCollision ) ; this . resolveCollision ( collistionListener ) ; java.lang.System.out . println ( timeToFirstCollision ) ; this . evolve ( ( time - timeToFirstCollision ) , collistionListener ) ; } } 
boolean areNodesWorking () { if ( ( ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject . gettingPerceptionData () ) && ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject . gettingControlData () ) ) && ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.statusObject . gettingLaneData () ) ) { return true ; } else { setStatus ( com.telenav.sdk_sample.ui.Header.AutopilotStatusDecisions.NODES_NOT_WORKING ) ; return false ; } } 
public void removeAtIndex ( int index ) { if ( index <= 0 ) { removeFirstNode () ; } else if ( index >= ( ( size ) - 1 ) ) { removeLastNode () ; } else { a3.LinkedList.Node stepNode = head ; for ( int i = 1 ; i < index ; ++ i ) { stepNode = stepNode.next ; } stepNode.next = stepNode.next.next ; stepNode = stepNode.next ; stepNode = null ; -- ( size ) ; } } 
@ org.junit.Test public void testDescriptionOfServicePayment () { try { model.PaymentDescription description = new model.PaymentDescription ( 1 , 1 ) ; payment = new model.Payment ( service , 1 , 1 , 1 ) ; assertEquals ( description . getPaymentType () , payment . getDescription () . getPaymentType () ) ; assertEquals ( description . getPaymentForm () , payment . getDescription () . getPaymentForm () ) ; } catch ( exception.PaymentException e ) { fail ( ( "Should not throw this exception: " + ( e . getMessage () ) ) ) ; } } 
@ java.lang.Override public java.lang.Object call ( org.mozilla.javascript.Context cx , org.mozilla.javascript.Scriptable scope , org.mozilla.javascript.Scriptable thisObj , java.lang.Object [] args ) { assert ( connection . current () ) != null : "cannot call remote functions without a connected client in context" ; connection . current () . send ( jj.jjmessage.JJMessage . makeCall ( java.lang.String . valueOf ( args [ 0 ] ) , java.lang.String . valueOf ( args [ 1 ] ) ) ) ; return org.mozilla.javascript.Undefined.instance ; } 
@ java.lang.Override public < T > T getService ( org.terracotta.entity.ServiceConfiguration < T > configuration ) { T builtInService = getBuiltInService ( configuration ) ; T externalService = getExternalService ( configuration ) ; com.tc.util.Assert . assertFalse ( ( ( null != builtInService ) && ( null != externalService ) ) ) ; return null != builtInService ? builtInService : externalService ; } 
@ java.lang.Override public void onNext ( T i ) { if ( ( ! ( isUnsubscribed () ) ) && ( ( ( count ) ++ ) < ( limit ) ) ) { boolean stop = ( count ) == ( limit ) ; child . onNext ( i ) ; if ( stop && ( ! ( completed ) ) ) { completed = true ; try { child . onCompleted () ; } finally { unsubscribe () ; } } } } 
public static com.sailing.kafka.KafkaClient getKafkaProducer ( java.lang.String kafkaName , java.util.Properties kafkaProducerProps ) { com.sailing.kafka.KafkaClient client = com.sailing.kafka.KafkaSet.kafkaMap . get ( kafkaName ) ; if ( client == null ) { client = new com.sailing.kafka.KafkaClient ( kafkaProducerProps ) ; com.sailing.kafka.KafkaClient clientTrue = com.sailing.kafka.KafkaSet.kafkaMap . putIfAbsent ( kafkaName , client ) ; if ( clientTrue != null ) { client . close () ; return clientTrue ; } else { return client ; } } return client ; } 
public void ReInit ( java.io.Reader stream ) { jj_input_stream . ReInit ( stream , 1 , 1 ) ; token_source . ReInit ( jj_input_stream ) ; token = new org.sbml.jsbml.text.parser.Token () ; jj_ntk = - 1 ; jj_gen = 0 ; for ( int i = 0 ; i < 17 ; i ++ ) jj_la1 [ i ] = - 1 ; for ( int i = 0 ; i < ( jj_2_rtns.length ) ; i ++ ) jj_2_rtns [ i ] = new org.sbml.jsbml.text.parser.FormulaParserLL3.JJCalls () ; } 
public boolean isOppositeOf ( org.eclipse.emf.diffmerge.api.diff.IReferenceValuePresence peer_p ) { return ( ( ( ( getPresenceRole () ) == ( peer_p . getPresenceRole () ) ) && ( ( getFeature () . getEOpposite () ) == ( peer_p . getFeature () ) ) ) && ( ( getElementMatch () ) == ( peer_p . getValueMatch () ) ) ) && ( ( getValueMatch () ) == ( peer_p . getElementMatch () ) ) ; } 
public void update () { if ( ( type ) == ( Type.BASICENEMY ) ) { ( timer ) ++ ; this . move ( Direction.DOWN , speed ) ; int timeToShoot = rnd . nextInt ( 3 ) ; if ( ( timeToShoot == 0 ) && ( ( ( timer ) % 100 ) == 0 ) ) { Sound . play ( "src/sounds/enemyBlaster.wav" ) ; shoot ( Type.BULLET , Direction.DOWN ) ; timer = 0 ; } } } 
public static void printFloatingBackground ( int i , java.lang.String msg ) { i = i + 1 ; java.lang.System.out . println ( ( ( ( ( ( ( ( UI.ui.BACKGROUND_BLUE ) + ( UI.ui.HIGH_INTENSITY ) ) + ( UI.ui.YELLOW ) ) + i ) + ".\t" ) + msg ) + ( ansi () . reset () ) ) ) ; } 
public void setActionValue ( java.lang.Object actionValue ) { if ( actionValue == null ) return; currentValue = actionValue ; if ( ! ( action . getValue () . equals ( actionValue ) ) ) this . action . setValue ( actionValue ) ; initChildList () ; } 
private void range ( KdTree.Node node , edu.princeton.cs.algs4.RectHV rect ) { if ( ! ( node.rect . intersects ( rect ) ) ) return; if ( ( node.point ) == null ) return; if ( rect . contains ( node.point ) ) range . add ( node.point ) ; range ( node.left , rect ) ; range ( node.right , rect ) ; } 
private boolean isListOperation ( int command ) { return ( ( ( ( command == ( INDEX_ADD ) ) || ( command == ( INDEX_EDIT ) ) ) || ( command == ( INDEX_DELETE ) ) ) || ( command == ( INDEX_COMPLETE ) ) ) || ( command == ( INDEX_INCOMPLETE ) ) ; } 
@ java.lang.Override public net.minecraft.nbt.NBTTagCompound writeToNBT ( net.minecraft.nbt.NBTTagCompound tag ) { if ( ( location ) != null ) location . writeToNBT ( tag ) ; if ( ( type ) != null ) type . writeToNBT ( tag ) ; else { mcmultipart.multipart.MultipartHelper . getPartContainer ( getWorld () , getPos () ) . removePart ( this ) ; } return tag ; } 
private static java.lang.String getImports () { java.lang.StringBuilder sb = new java.lang.StringBuilder ( "import org.junit.Test;\n" ) ; sb . append ( "import org.junit.Before;\n" ) ; sb . append ( "import org.junit.Assert;\n" ) ; for ( java.lang.String imp : main.MakeTests.imports ) { if ( main.MakeTests . isValidClass ( imp ) ) { sb . append ( ( ( "import " + imp ) + ";\n" ) ) ; } } return sb . toString () ; } 
private static boolean isSubset ( final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique subset , final playground.thibautd.initialdemandgeneration.empiricalsocnet.snowball.SnowballCliques.Clique of ) { return ( of . getEgo () . getId () . equals ( subset . getEgo () . getId () ) ) && ( of.alters . containsAll ( subset.alters ) ) ; } 
@ java.lang.Override public void onResponse ( final retrofit2.Call < com.charlesmadere.hummingbird.models.Feed > call , final retrofit2.Response < com.charlesmadere.hummingbird.models.Feed > response ) { final com.charlesmadere.hummingbird.models.Feed body = ( response . isSuccessful () ) ? response . body () : null ; if ( body == null ) { listener . failure ( com.charlesmadere.hummingbird.networking.Api . retrieveErrorInfo ( response ) ) ; } else { com.charlesmadere.hummingbird.networking.Api . hydrateFeed ( body , null , listener ) ; } } 
@ java.lang.Override public boolean doPreAddUser ( java.lang.String userName , java.lang.Object credential , java.lang.String [] roleList , java.util.Map < java.lang.String , java.lang.String > claims , java.lang.String profile , org.wso2.carbon.user.core.UserStoreManager userStoreManager ) throws org.wso2.carbon.user.core.UserStoreException { try { if ( ( ! ( isEnable () ) ) || ( ! ( userStoreManager . isSCIMEnabled () ) ) ) { return true ; } } catch ( org.wso2.carbon.identity.scim.common.listener.org.wso2.carbon.user e ) { throw new org.wso2.carbon.user.core.UserStoreException ( "Error while reading isScimEnabled from userstore manager" , e ) ; } this . getSCIMAttributes ( userName , claims ) ; return true ; } 
@ java.lang.Override public void changeState ( com.example.alexander_topilskii.internetradio.models.database.Station station ) { currentState = State.IS_WAIT ; listener . setPlayerStates ( ( - 1 ) , State.IS_WAIT ) ; if ( station != null ) { if ( ( mediaPlayer ) == null ) initPlayer ( station . getSource () ) ; else { if ( mediaPlayer . isPlaying () ) { pause () ; } else { play () ; } } } } 
@ java.lang.Override public void onBackPressed () { if ( mDrawerLayout . isDrawerOpen ( mDrawerListView ) ) { mDrawerLayout . closeDrawer ( mDrawerListView ) ; return; } if ( ! ( fragmentMediator . backPressWebView () ) ) { edu.rutgers.css.Rutgers.utils.LogUtils . LOGV ( edu.rutgers.css.Rutgers.ui.MainActivity.TAG , ( "Back button pressed. Leaving top component: " + ( edu.rutgers.css.Rutgers.utils.AppUtils . topHandle ( this ) ) ) ) ; super . onBackPressed () ; } } 
@ java.lang.Override protected void onSuccess ( java.util.List < com.jiuzhang.guojing.dribbbo.model.Shot > shots ) { adapter . setShowLoading ( ( ( shots . size () ) >= ( com.jiuzhang.guojing.dribbbo.dribbble.Dribbble.COUNT_PER_LOAD ) ) ) ; if ( refresh ) { swipeRefreshLayout . setRefreshing ( false ) ; adapter . setData ( shots ) ; } else { swipeRefreshLayout . setEnabled ( true ) ; adapter . append ( shots ) ; } } 
public boolean setCurrentMap ( java.lang.String tag ) { net.samongi.SamongiLib.Maps.MapData map = this . maps . get ( tag ) ; if ( map == null ) return false ; net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent event = new net.samongi.PersistantPvP.GameManager.Events.MapChangeEvent ( this . current_map , map ) ; this . current_map = map ; org.bukkit.Bukkit . getServer () . getPluginManager () . callEvent ( event ) ; return true ; } 
public void initScene ( final int scale , final com.jme3.math.Vector3f translation ) { java.lang.System.out . println ( "SCENE_PATH file found!" ) ; java.lang.System.out . println ( ( ( "=> loading " + ( com.funkydonkies.gamestates.SceneState.SCENE_PATH . toString () ) ) + " Spatial ..." ) ) ; loadScene ( scale , translation ) ; java.lang.System.out . println ( "... DONE loading .scene Spatial <=" ) ; } 
static boolean isAxiom ( Expression d ) { for ( int i = 0 ; i < ( LogicHW1.axioms . size () ) ; i ++ ) { if ( LogicHW1.axioms . get ( i ) . equalStruct ( d , new java.util.HashMap <> () , true ) ) { LogicHW1.out . println ( ( "Сх. акс. " + ( i + 1 ) ) ) ; return true ; } } return false ; } 
private void deleteAppointmentByDateInt ( java.lang.Integer date ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; java.lang.String Query = ( ( ( ( ( ( ( ( "DELETE FROM " + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.TABLE_CALENDAR ) ) + " WHERE " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_START ) ) + " <= " ) + date ) + " AND " ) + ( com.z3r0byte.magistify.DatabaseHelpers.CalendarDB.KEY_FORMATTED_END ) ) + " >= " ) + date ; db . execSQL ( Query ) ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( getArguments () . containsKey ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) { mItem = Content.COMMUTE_MAP . get ( getArguments () . getString ( com.example.jeffrey.finalprototype.CommuteDetailFragment.ARG_ITEM_ID ) ) ; android.app.Activity activity = this . getActivity () ; android.support.design.widget.CollapsingToolbarLayout appBarLayout = ( ( android.support.design.widget.CollapsingToolbarLayout ) ( activity . findViewById ( R.id.toolbar_layout ) ) ) ; if ( ( appBarLayout != null ) && ( ( mItem ) != null ) ) { appBarLayout . setTitle ( mItem.id ) ; } } } 
public void actionPerformed ( final java.awt.event.ActionEvent event ) { if ( ( pvLoggerID ) != 0 ) { if ( USE_PVLOGGER . isSelected () ) USE_LOGGEDBEND . setEnabled ( true ) ; else USE_LOGGEDBEND . setEnabled ( false ) ; setHasChanges ( true ) ; } else { javax.swing.JOptionPane . showMessageDialog ( mainWindow , "You need to select pvLoggerData first" , "Warning!" , javax.swing.JOptionPane.PLAIN_MESSAGE ) ; USE_PVLOGGER . setSelected ( false ) ; } } 
public float activated ( float [] inputs ) { int temp = 0 ; for ( int i = 0 ; i < ( inputs.length ) ; i ++ ) { temp += ( inputs [ i ] ) * ( weights [ i ] ) ; } if ( temp >= ( weights [ ( ( weights.length ) - 1 ) ] ) ) return 1 ; return 0 ; } 
public void run () { java.lang.String playerName = player . getName () ; org.bukkit.scoreboard.Team playerTeam = org.bukkit.Bukkit . getScoreboardManager () . getMainScoreboard () . getEntryTeam ( playerName ) ; if ( playerTeam != null ) player . setDisplayName ( ( ( ( ( playerTeam . getPrefix () ) + playerName ) + ( playerTeam . getSuffix () ) ) + ( org.bukkit.ChatColor.RESET ) ) ) ; else player . setDisplayName ( playerName ) ; } 
@ java.lang.Override public boolean undoAction () { for ( int col = 0 ; col < 12 ; col ++ ) { for ( int row = 0 ; row < 12 ; row ++ ) { boardTiles . get ( row ) . get ( col ) . setExists ( start [ row ] [ col ] ) ; } } colsTextField . setText ( java.lang.Integer . toString ( startCols ) ) ; rowsTextField . setText ( java.lang.Integer . toString ( startRows ) ) ; redrawBoard () ; return true ; } 
public double slopeTo ( Point that ) { if ( ( this . compareTo ( that ) ) == 0 ) { return java.lang.Double.NEGATIVE_INFINITY ; } if ( ( this . x ) == ( that.x ) ) { return java.lang.Double.POSITIVE_INFINITY ; } if ( ( this . y ) == ( that.y ) ) { return 0 ; } return ( ( double ) ( ( that.y ) - ( this . y ) ) ) / ( ( that.x ) - ( this . x ) ) ; } 
@ org.junit.Test public void testDataFrame ( ) throws java.lang.Exception { http2Connect () ; sendSimplePostRequest ( 3 , null ) ; readSimplePostResponse ( false ) ; org.junit.Assert . assertEquals ( ( "0-WindowSize-[128]\n" + ( ( ( ( ( "3-WindowSize-[128]\n" + "3-HeadersStart\n" ) + "3-Header-[:status]-[200]\n" ) + "3-HeadersEnd\n" ) + "3-Body-128\n" ) + "3-EndOfStream\n" ) ) , output . getTrace () ) ; } 
@ java.lang.Override public V put ( K key , V value ) { com.google.common.base.Preconditions . checkNotNull ( key ) ; com.google.common.base.Preconditions . checkNotNull ( value ) ; com.google.common.cache.LocalCache.Timestamped < V > oldValue = cachingHashMap . put ( key , new com.google.common.cache.LocalCache.Timestamped < V > ( value , ticker ) ) ; if ( oldValue == null ) { return null ; } alertListenerIfPresent ( key , oldValue . getValue () , com.google.common.cache.RemovalCause.REPLACED ) ; return oldValue . getValue () ; } 
private void readTokens ( com.fsck.k9.mail.store.ImapResponseParser.ImapResponse response ) throws java.io.IOException { response . clear () ; java.lang.String firstToken = ( ( java.lang.String ) ( readToken ( response ) ) ) ; response . add ( firstToken ) ; if ( isStatusResponse ( firstToken ) ) { parseResponseText ( response ) ; } else { java.lang.Object token ; while ( ( token = readToken ( response ) ) != null ) { if ( ! ( token instanceof com.fsck.k9.mail.store.ImapResponseParser.ImapList ) ) { response . add ( token ) ; } } } } 
public org.apache.commons.lang3.tuple.Pair < java.lang.String , org.semanticweb.owlapi.model.OWLNamedIndividual > createIndividual ( java.lang.String modelId , java.lang.String cid , java.util.Set < org.semanticweb.owlapi.model.OWLAnnotation > annotations , METADATA metadata ) throws org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException { org.geneontology.minerva.ModelContainer model = checkModelId ( modelId ) ; org.semanticweb.owlapi.model.OWLClass cls = getClass ( cid , model ) ; if ( cls == null ) { throw new org.geneontology.minerva.MolecularModelManager.UnknownIdentifierException ( ( "Could not find a class for id: " + cid ) ) ; } org.semanticweb.owlapi.model.OWLNamedIndividual individual = createIndividual ( model , cls , annotations , true , metadata ) ; return org.apache.commons.lang3.tuple.Pair . of ( org.geneontology.minerva.util.IdStringManager . getId ( individual ) , individual ) ; } 
private void okButtonActionPerformed ( java.awt.event.ActionEvent evt ) { java.util.ArrayList < java.awt.Point > roiData = util.DataManager . readRoiFile ( chosenPath ) ; if ( roiData != null ) { if ( ( roiData . size () ) > 0 ) { setFields () ; notifyRoiListeners ( roiData ) ; if ( defaultCheckBox . isSelected () ) { notifyRoiListeners ( chosenPath ) ; } this . setVisible ( false ) ; } else { errorText . setText ( "Error loading: File not found!" ) ; } } } 
public void setArrayKey ( final org.verapdf.as.ASAtom key , final org.verapdf.cos.COSObject array ) { if ( ( ( this . base ) == null ) || ( ! ( this . base . setArrayKey ( key , array ) ) ) ) { org.verapdf.cos.COSObject obj = org.verapdf.cos.COSArray . construct () ; this . base = new org.verapdf.cos.COSDictionary ( key , obj ) ; } } 
static java.lang.Object [] boxAndPadWithZeros ( int length , long [] values ) { long [] padded ; if ( ( values.length ) == length ) { padded = values ; } else { padded = new long [ length ] ; java.lang.System . arraycopy ( values , 0 , padded , 0 , padded.length ) ; } return java.util.Arrays . stream ( padded ) . boxed () . toArray () ; } 
@ java.lang.Override public void start ( T project , boolean newInstance ) { org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener listener = org.jenkinsci.plugins.rabbitmqconsumer.extensions.MessageQueueListener . all () . get ( org.jenkinsci.plugins.rabbitmqbuildtrigger.RemoteBuildListener . class ) ; if ( listener != null ) { listener . addTrigger ( this ) ; removeDuplicatedTrigger ( listener . getTriggers () ) ; } super . start ( project , newInstance ) ; } 
@ java.lang.Override public void setTimescale ( int order ) { java.lang.System.out . println ( ( "setTimescale " + order ) ) ; VCDLoaderTest.ExpectTraceBuilder.Event event = fEventList . get ( ( ( fCurrentEvent ) ++ ) ) ; assertEquals ( event.fType , VCDLoaderTest.ExpectTraceBuilder.EXPECT_TIMESCALE ) ; assertEquals ( event.fTimestamp , ( ( long ) ( order ) ) ) ; } 
public static float [] getFloatArrayFromBuffer ( java.nio.FloatBuffer buffer ) { float [] array = new float [ 0 ] ; if ( buffer != null ) { if ( buffer . hasArray () ) { array = buffer . array () ; } else { buffer . rewind () ; array = new float [ buffer . capacity () ] ; buffer . get ( array ) ; } } return array ; } 
public void setProperties ( java.util.Map < java.lang.String , java.lang.Object > properties ) { for ( java.lang.Object o : properties . values () ) { if ( ( ( ! ( o instanceof java.lang.String ) ) && ( ! ( o instanceof java.lang.Integer ) ) ) && ( ! ( o instanceof java.lang.Double ) ) ) { throw new java.lang.IllegalArgumentException ( "Values must be Strings or Doubles." ) ; } } this . properties = properties ; } 
public boolean remove ( spoon.reflect.code.CtBlock parentBlock , spoon.reflect.code.CtStatement fixStatement , int pos ) { spoon.reflect.code.CtStatement s = parentBlock . getStatement ( pos ) ; if ( fixStatement . equals ( s ) ) { parentBlock . getStatements () . remove ( pos ) ; return true ; } else { java.lang.System.out . println ( ( ( ( "\n fx: " + fixStatement ) + "\n" ) + s ) ) ; throw new java.lang.IllegalStateException ( "Undo: Not valid fix position" ) ; } } 
public java.lang.String toByteCode ( java.lang.String i_assembly ) { java.util.List < backend.Compiler.asm_line > asm_array = new java.util.ArrayList < backend.Compiler.asm_line > () ; java.lang.String byteCodeReturn = "" ; java.lang.String [] raw_lines = i_assembly . split ( "\\r?\\n" ) ; for ( int line_i = 0 ; line_i < ( raw_lines.length ) ; line_i ++ ) { asm_array . add ( new backend.Compiler.asm_line ( raw_lines [ line_i ] ) ) ; byteCodeReturn += asm_array . get ( line_i ) . getByteCode () ; } return byteCodeReturn ; } 
private void setMedian () { if ( ! ( this . numbers . isEmpty () ) ) { int mid = ( this . numbers . size () ) / 2 ; if ( ( mid % 2 ) == 1 ) { this . medianOfAllNumbers = this . numbers . get ( mid ) ; } else { this . medianOfAllNumbers = ( ( this . numbers . get ( ( mid - 1 ) ) ) + ( this . numbers . get ( mid ) ) ) / 2.0 ; } } } 
@ java.lang.Override public boolean availableForBooking ( java.util.Set < com.real.apps.shuttle.domain.model.BookedRange > potentialBookedRanges , com.real.apps.shuttle.domain.model.BookedRange bookedRange ) { if ( ( potentialBookedRanges == null ) || ( potentialBookedRanges . isEmpty () ) ) { return true ; } java.util.Iterator < com.real.apps.shuttle.domain.model.BookedRange > iterator = potentialBookedRanges . iterator () ; while ( iterator . hasNext () ) { com.real.apps.shuttle.domain.model.BookedRange subject = iterator . next () ; if ( ( subject != null ) && ( subject . coincide ( bookedRange ) ) ) { return false ; } } return true ; } 
protected org.nd4j.linalg.api.ndarray.INDArray createScalarForIndex ( int i , boolean applyOffset ) { return create ( data () , new int [] { 1 , 1 } , new int [] { 1 , 1 } , ( applyOffset ? ( offset ) + i : i ) ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) private java.util.List < java.lang.Class > getClass ( java.lang.Class clazz , java.util.List < java.lang.Class > classList ) { if ( ( clazz . getSuperclass () ) != null ) { if ( com.ai.dubbo.ext.vo.BaseInfo . class . getName () . equals ( clazz . getSuperclass () . getName () ) ) { return classList ; } else { classList . add ( clazz . getSuperclass () ) ; return getClass ( clazz . getSuperclass () , classList ) ; } } return classList ; } 
private boolean isMyIDP ( @ javax.annotation.Nonnull org.apache.jackrabbit.oak.spi.security.authentication.external.SyncedIdentity id ) { java.lang.String idpName = ( ( id . getExternalIdRef () ) == null ) ? null : id . getExternalIdRef () . getProviderName () ; return ( ( idpName == null ) || ( idpName . isEmpty () ) ) || ( idpName . equals ( idp . getName () ) ) ; } 
public java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > getUpstreamNeighbors ( ca.ubc.ece.cpen221.mp3.staff.Vertex vertex ) { java.util.List < ca.ubc.ece.cpen221.mp3.staff.Vertex > upstreamNeighboursList = new java.util.LinkedList < ca.ubc.ece.cpen221.mp3.staff.Vertex > () ; for ( int i = 0 ; i < ( vertexList . size () ) ; i ++ ) { if ( adjacencyList . contains ( vertex ) ) { upstreamNeighboursList . add ( new ca.ubc.ece.cpen221.mp3.staff.Vertex ( vertexList . get ( i ) ) ) ; } } return upstreamNeighboursList ; } 
private static boolean isCyclic ( int numberOfCourse , java.util.Map < java.lang.Integer , java.util.Set < java.lang.Integer > > prerequisitePerCourse ) { for ( int course = 0 ; course < numberOfCourse ; course ++ ) { java.util.Set < java.lang.Integer > targetCourses = new java.util.HashSet <> () ; targetCourses . add ( course ) ; if ( com.sevendragons.practice.leetcode.medium.coursesschedule.Solution . isCourseContainedInPrerequisites ( prerequisitePerCourse , targetCourses , course ) ) { return true ; } } return false ; } 
public rifServices.businessConceptLayer.HealthCode transformTaxonomyTermIntoHealthCode ( rifServices.taxonomyServices.TaxonomyTerm term ) { if ( term == null ) { return null ; } rifServices.businessConceptLayer.HealthCode healthCode = rifServices.businessConceptLayer.HealthCode . newInstance () ; healthCode . setCode ( term . getLabel () ) ; healthCode . setTopLevelTerm ( ( ( term . getParentTerm () ) == null ) ) ; healthCode . setNameSpace ( term . getNameSpace () ) ; healthCode . setDescription ( term . getDescription () ) ; healthCode . setNumberOfSubTerms ( term . getSubTerms () . size () ) ; return healthCode ; } 
public void broadcast ( cn.nukkit.Player player ) { java.lang.String translation = cn.nukkit.Server . getInstance () . getLanguage () . translateString ( "chat.type.achievement" , player . getDisplayName () , ( ( cn.nukkit.utils.TextFormat.GREEN ) + ( this . getMessage () ) ) , null ) ; if ( cn.nukkit.Server . getInstance () . getPropertyBoolean ( "announce-player-achievements" , true ) ) { cn.nukkit.Server . getInstance () . broadcastMessage ( translation ) ; } else { player . sendMessage ( translation ) ; } } 
@ java.lang.Override protected void onHandleIntent ( android.content.Intent intent ) { if ( com.google.android.gms.location.ActivityRecognitionResult . hasResult ( intent ) ) { com.google.android.gms.location.ActivityRecognitionResult result = com.google.android.gms.location.ActivityRecognitionResult . extractResult ( intent ) ; com.google.android.gms.location.DetectedActivity CurrentActivity = result . getMostProbableActivity () ; if ( ( CurrentActivity . getConfidence () ) >= 75 ) { ActivityRecognitionPlugin.Activity.ActivityType = CurrentActivity . toString () ; ActivityRecognitionPlugin.Activity.Propability = CurrentActivity . getConfidence () ; } else ActivityRecognitionPlugin.Activity.ActivityType = "NotConfidentEnough" ; } } 
@ java.lang.Override public boolean removeBusiness ( java.lang.String id ) throws java.lang.Exception { com.foodie.app.Helper.DebugHelper . Log ( ( "removeBusiness: id = " + id ) ) ; BusinessRef . child ( id ) . removeValue () ; localDB . removeBusiness ( id ) ; java.util.List < com.foodie.app.entities.Activity > businessActivities = com.foodie.app.database.Converters . cursorToActivityList ( localDB . getActivity ( new java.lang.String [] { id } , new java.lang.String [] { com.foodie.app.entities.Activity.ACTIVITY_BUSINESS_ID } ) ) ; for ( com.foodie.app.entities.Activity ac : businessActivities ) { removeActivity ( ac . get_ID () ) ; } return true ; } 
private void highlightArrow ( uk.ac.cam.teamdelta.Direction d ) { javafx.scene.image.ImageView iv = navMap . get ( d ) ; if ( iv == null ) { uk.ac.cam.teamdelta.Logger . error ( ( ( "NULL IV - direction" + ( d . getDegrees () ) ) + " was not in direction set" ) ) ; } else { iv . setImage ( hArrow ) ; } } 
private void updateParityFlag () { boolean parity = false ; for ( byte b = this . state . sfrs . A . getValue () ; b != 0 ; b = ( ( byte ) ( b & ( b - 1 ) ) ) ) parity = ! parity ; this . state . sfrs . PSW . setBit ( parity , 0 ) ; } 
void setWhys ( java.util.List < java.lang.String > whys ) { getAdvStats () . clearWhyTypes () ; if ( whys != null ) { java.util.List < com.brookmanholmes.billiards.turn.AdvStats.WhyType > list = new java.util.ArrayList <> () ; for ( java.lang.String why : whys ) { list . add ( convertStringToWhyType ( context , why ) ) ; } getAdvStats () . whyTypes ( list ) ; } } 
@ java.lang.Override public void onComplete () { if ( done ) { return; } R col = collection ; if ( col != null ) { collection = null ; if ( emitRemainder ) { queue . offer ( col ) ; } } done = true ; drain () ; } 
private void computeTwoCMPProjectionConstraintMatrices () { for ( int i = 0 ; i < ( numberOfFootstepsToConsider ) ; i ++ ) { tmpTwoCMPProjection_Aeq . set ( ( 3 * i ) , i , 1.0 ) ; tmpTwoCMPProjection_beq . set ( i , 0 , 1.0 ) ; } } 
private void obtainObjectReferences () { if ( ( rawTextPanel ) == null ) { rawTextPanel = getMainFrame () . getRawTextPanel () ; imagePanel = getMainFrame () . getImagePanel () ; jnPanel = getMainFrame () . getJNPanel () ; statefulObjects . put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_JOVENOTESPANEL , jnPanel ) ; statefulObjects . put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_RAWTEXTPANEL , rawTextPanel ) ; statefulObjects . put ( com.sandy.jnmaker.ui.helper.ProjectManager.KEY_IMAGEPANEL , imagePanel ) ; } } 
public void getBytes ( java.io.OutputStream outputStream ) throws java.io.IOException { java.io.BufferedOutputStream bufferedOutputStream = new java.io.BufferedOutputStream ( outputStream ) ; java.nio.ByteBuffer byteBuffer = java.nio.ByteBuffer . allocate ( ( ( java.lang.Long.BYTES ) * 2 ) ) ; byteBuffer . putLong ( id . getMostSignificantBits () ) ; byteBuffer . putLong ( id . getLeastSignificantBits () ) ; bufferedOutputStream . write ( byteBuffer . array () ) ; getBytesFromPedestrianInfo ( personA , bufferedOutputStream ) ; getBytesFromPedestrianInfo ( personB , bufferedOutputStream ) ; bufferedOutputStream . flush () ; } 
public java.lang.Integer getLatOffset ( double lat , double lon , double offset , boolean checkOutside ) { java.awt.Point p = tileSource . latLonToXY ( lat , lon , zoom ) ; int y = ( ( p.y ) - ( center.y ) ) - ( ( getHeight () ) / 2 ) ; if ( checkOutside && ( ( y < 0 ) || ( y > ( getHeight () ) ) ) ) { return null ; } return y ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( ( ( ( ( "\n" + ( this . ueberschrift ) ) + ( this . unterueberschrift ) ) + "AKZ: " ) + ( this . aktenzeichen ) ) + "Datum: " ) + ( this . datum ) ) + "Rechtsbereich: " ) + ( this . rechtsbereich ) ) + "Vergehen: " ) + ( this . vergehen ) ) + "Strafmass: " ) + ( this . strafmass ) ) + "Gruende: " ) + ( this . gruende ) ; } 
void ojld ( int num1 , int num2 ) { this . maxcommom = 1 ; num1 = java.lang.Math . abs ( num1 ) ; num2 = java.lang.Math . abs ( num2 ) ; if ( num2 > num1 ) { int temp = num2 ; num2 = num1 ; num1 = temp ; } if ( num2 == 0 ) { return; } if ( ( num1 % num2 ) == 0 ) { this . maxcommom = num2 ; return; } int temp = num1 % num2 ; ojld ( num2 , temp ) ; } 
public boolean deleteExtrasFromReminder ( int reminderId ) throws ve.com.abicelis.remindy.exception.CouldNotDeleteDataException { android.database.sqlite.SQLiteDatabase db = mDatabaseHelper . getWritableDatabase () ; return ( db . delete ( RemindyContract.ExtraTable.TABLE_NAME , ( ( RemindyContract.ExtraTable.COLUMN_NAME_REMINDER_FK . getName () ) + " =?" ) , new java.lang.String [] { java.lang.String . valueOf ( reminderId ) } ) ) > 0 ; } 
public boolean checkIfDone ( double x , double y ) { if ( ( ( ( ( ( destX ) + ( error ) ) >= x ) && ( ( ( destX ) - ( error ) ) <= x ) ) && ( ( ( destY ) + ( error ) ) >= y ) ) && ( ( ( destY ) - ( error ) ) <= y ) ) { return true ; } else return false ; } 
public void connect ( java.lang.String host ) throws java.io.IOException , java.net.SocketTimeoutException , java.net.UnknownHostException { decc.Peer pair = new decc.Peer ( this , host , this . port ) ; pairs . put ( pair . getHostName () , pair ) ; if ( ( ( pairs . size () ) == 1 ) && ( ( ip ) != null ) ) pair . sendBrcast ( ip ) ; } 
public static org.vitrivr.cineast.core.config.Config loadConfig ( java.lang.String name ) { org.vitrivr.cineast.core.config.Config config = new org.vitrivr.cineast.core.util.json.JacksonJsonProvider () . toObject ( new java.io.File ( name ) , org.vitrivr.cineast.core.config.Config . class ) ; org.vitrivr.cineast.core.config.Config.LOGGER . info ( "Config file loaded!" ) ; if ( config == null ) { org.vitrivr.cineast.core.config.Config.LOGGER . warn ( "Could not read config file '{}'." , name ) ; return null ; } else { return config ; } } 
public static com.puppycrawl.tools.checkstyle.api.JavadocTagInfo fromText ( final java.lang.String text ) { if ( text == null ) { throw new java.lang.IllegalArgumentException ( "the text is null" ) ; } final com.puppycrawl.tools.checkstyle.api.JavadocTagInfo tag = com.puppycrawl.tools.checkstyle.api.JavadocTagInfo.TEXT_TO_TAG . get ( text ) ; if ( tag == null ) { throw new java.lang.IllegalArgumentException ( ( ( "the text [" + text ) + "] is not a valid Javadoc tag text" ) ) ; } return tag ; } 
private void init () { for ( lightpos.light [] parent : parents ) { for ( int i = 0 ; i < ( nNumber ) ; i ++ ) { parent [ i ] = new lightpos.light ( generatorRandom . nextInt ( ( ( roomWidth ) + 1 ) ) , generatorRandom . nextInt ( ( ( roomLength ) + 1 ) ) , generatorRandom . nextInt ( 5 ) , true ) ; } } } 
@ java.lang.Override public void remove ( java.lang.Object object ) { if ( ( internalList ) == null ) return; for ( int ic = 0 ; ic < ( internalList . size () ) ; ic ++ ) { if ( internalList . get ( ic ) . getReturnValue () . equals ( object ) ) { internalList . remove ( ic ) ; this . remove ( object ) ; break; } } } 
public java.util.List < org.fife.ui.rsyntaxtextarea.DocumentRange > getMarkedOccurrences () { java.util.List < org.fife.ui.rsyntaxtextarea.DocumentRange > list = new java.util.ArrayList < org.fife.ui.rsyntaxtextarea.DocumentRange > ( markedOccurrences . size () ) ; for ( org.fife.ui.rsyntaxtextarea.HighlightInfo info : markedOccurrences ) { int start = info . getStartOffset () ; int end = ( info . getEndOffset () ) + 1 ; if ( start <= end ) { org.fife.ui.rsyntaxtextarea.DocumentRange range = new org.fife.ui.rsyntaxtextarea.DocumentRange ( start , end ) ; list . add ( range ) ; } } return list ; } 
protected void doGet ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String dbname = "doglovers" ; try { org.ektorp.CouchDbConnector dbc = _db . createConnector ( dbname , true ) ; java.util.List < java.lang.String > list = dbc . getAllDocIds () ; for ( java.lang.String lists : list ) { response . getWriter () . print ( ( "Get all Ids!" + lists ) ) ; } } catch ( java.lang.Exception e ) { response . getWriter () . println ( e . getMessage () ) ; } } 
public int getMaxHitpointsStamina () { return ( ( int ) ( java.lang.Math . ceil ( ( ( ( ( double ) ( this . getWeight () ) ) * ( ( double ) ( this . getToughness () ) ) ) / 50 ) ) ) ) ; } 
@ java.lang.Override public void clearAuction () { for ( int i = 0 ; i < ( bids.length ) ; i ++ ) { if ( ( bids [ i ] ) > 0 ) { bountyState . getAgents () [ i ] . receiveResource ( res ) ; bids [ i ] = 0 ; } } } 
private com.louiscarrese.clopecounter.model.Jour createJour () { io.realm.Realm realm = io.realm.Realm . getDefaultInstance () ; long id ; if ( ( realm . where ( com.louiscarrese.clopecounter.model.Jour . class ) . count () ) > 0 ) { id = ( realm . where ( com.louiscarrese.clopecounter.model.Jour . class ) . maximumInt ( "id" ) ) + 1 ; } else { id = 1 ; } com.louiscarrese.clopecounter.model.Jour j = new com.louiscarrese.clopecounter.model.Jour () ; j . setId ( id ) ; return j ; } 
@ java.lang.Override public mil.nga.giat.mage.sdk.datastore.user.Team create ( mil.nga.giat.mage.sdk.datastore.user.Team pTeam ) throws mil.nga.giat.mage.sdk.exceptions.TeamException { mil.nga.giat.mage.sdk.datastore.user.Team createdTeam ; try { createdTeam = teamDao . createIfNotExists ( pTeam ) ; } catch ( java.sql.SQLException sqle ) { android.util.Log . e ( mil.nga.giat.mage.sdk.datastore.user.TeamHelper.LOG_NAME , ( "There was a problem creating team: " + pTeam ) , sqle ) ; throw new mil.nga.giat.mage.sdk.exceptions.TeamException ( ( "There was a problem creating team: " + pTeam ) , sqle ) ; } return createdTeam ; } 
public static void applyConfigChanges () { com.sonicether.soundphysics.SoundPhysics.globalReverbMultiplier = 0.7F * ( Config.globalReverbGain ) ; com.sonicether.soundphysics.SoundPhysics.soundDistanceAllowance = Config.soundDistanceAllowance ; if ( ( com.sonicether.soundphysics.SoundPhysics.auxFXSlot0 ) != 0 ) { com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb0 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot0 , com.sonicether.soundphysics.SoundPhysics.reverb0 ) ; com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb1 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot1 , com.sonicether.soundphysics.SoundPhysics.reverb1 ) ; com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb2 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot2 , com.sonicether.soundphysics.SoundPhysics.reverb2 ) ; com.sonicether.soundphysics.SoundPhysics . setReverbParams ( com.sonicether.soundphysics.ReverbParams . getReverb3 () , com.sonicether.soundphysics.SoundPhysics.auxFXSlot3 , com.sonicether.soundphysics.SoundPhysics.reverb3 ) ; } } 
@ java.lang.Override public void characters ( final char [] chr , final int start , final int length ) throws org.xml.sax.SAXException { final java.lang.String text = new java.lang.String ( chr ) . substring ( start , ( start + length ) ) ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . trace ( "characters; '{}'" , text ) ; final java.lang.String trimmedText = text . trim () ; io.inkstand.scribble.rules.jcr.util.XMLContentHandler.LOG . info ( "text: '{}'" , trimmedText ) ; this . textStack . push ( trimmedText ) ; } 
public void move ( int from , int to ) { int lastPos = getPosition () ; super . add ( to , super . remove ( from ) ) ; mObservable . notifyChanged () ; if ( from == lastPos ) moveToPosition ( to ) ; else if ( ( from < lastPos ) && ( to >= lastPos ) ) moveToPosition ( ( lastPos - 1 ) ) ; else if ( ( from > lastPos ) && ( to <= lastPos ) ) moveToPosition ( ( lastPos + 1 ) ) ; } 
@ java.lang.Override public java.util.List < cz.mzk.recordmanager.server.oai.model.OAIRecord > read () { if ( finished ) { return null ; } cz.mzk.recordmanager.server.oai.model.OAIListRecords listRecords = harvester . listRecords ( resumptionToken ) ; resumptionToken = listRecords . getNextResumptionToken () ; if ( ( ( resumptionToken ) == null ) || ( resumptionToken . isEmpty () ) ) { finished = true ; } if ( listRecords . getRecords () . isEmpty () ) { return null ; } else { return listRecords . getRecords () ; } } 
@ java.lang.Override public void run () { org.eclipse.emf.common.util.EList < java.lang.String > images = api . listAvailableImages () ; if ( ! ( images . contains ( baseICEImage ) ) ) { console . print ( ( baseICEImage + " image not found locally. Pulling from Dockerhub..." ) ) ; api . pull ( baseICEImage ) ; } } 
@ java.lang.Override public void update () { if ( ( ( state ) != ( AbilityState.INITIALIZING ) ) && ( initializeAnimation . isDone () ) ) { projectiles . add ( new animation.effects.FireballProjectile ( entity , entity . getMapCollisionDetection () ) ) ; } super . update () ; } 
private void removeTopCard () { android.view.View child = getChildAt ( ( ( getChildCount () ) - 1 ) ) ; if ( child != null ) { child . setOnTouchListener ( null ) ; child . setX ( 0 ) ; child . setY ( 0 ) ; child . setRotation ( 0 ) ; removeView ( child ) ; lastRemovedView = child ; } if ( ( ( getChildCount () ) <= 0 ) && ( ( eventCallback ) != null ) ) { eventCallback . cardsDepleted () ; } } 
@ java.lang.Override public void parseValue ( java.lang.String valueString ) { if ( valueString == null ) { setValue ( null ) ; } else { io.pelle.mango.client.FileVO file = ( ( io.pelle.mango.client.FileVO ) ( getValue () ) ) ; if ( file == null ) { file = new io.pelle.mango.client.FileVO () ; setValue ( file ) ; } file . setFileUUID ( valueString ) ; setValue ( file ) ; } } 
@ java.lang.Override public void writeToPacket ( io.netty.buffer.ByteBuf buf ) { net.minecraftforge.fluids.FluidStack fluidStack = ( ( this . tank [ 0 ] ) != null ) ? this . tank [ 0 ] . getFluid () : null ; int fluidAmount = - 1 ; int fluidID = - 1 ; if ( fluidStack != null ) { fluidAmount = fluidStack.amount ; fluidID = fluidStack . getFluidID () ; } buf . writeInt ( fluidAmount ) ; buf . writeInt ( fluidID ) ; buf . writeBoolean ( isActive ) ; } 
public java.lang.String generateScore () { return ( ( ( ( ( ( ( getName () ) + " " ) + ( getCurrentWins () ) ) + ":" ) + ( getCurrentLosses () ) ) + " " ) + ( java.lang.Math . round ( generateRatio () ) ) ) + '%' ; } 
@ java.lang.Override public boolean canAct ( org.roda.wui.client.common.actions.Actionable.Action < org.roda.core.data.v2.ip.IndexedAIP > action , org.roda.core.data.v2.ip.IndexedAIP aip ) { boolean canAct ; if ( aip . equals ( org.roda.wui.client.common.actions.AipActions.NO_AIP_OBJECT ) ) { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_NO_AIP . contains ( action ) ; } else if ( AIPState.UNDER_APPRAISAL . equals ( aip . getState () ) ) { canAct = ( org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ) || ( org.roda.wui.client.common.actions.AipActions.APPRAISAL_ACTIONS . contains ( action ) ) ; } else { canAct = org.roda.wui.client.common.actions.AipActions.POSSIBLE_ACTIONS_ON_SINGLE_AIP . contains ( action ) ; } return canAct ; } 
private void insTypeFocusLost ( java.awt.event.FocusEvent evt ) { if ( ( insType . getSelectedIndex () ) == 0 ) { return; } if ( ( insType . getSelectedItem () . toString () . length () ) <= 0 ) return; type = utils.E_Types . valueOf ( ( ( java.lang.String ) ( insType . getSelectedItem () ) ) ) ; } 
@ java.lang.Override public void start ( ) throws org.mindroid.impl.statemachine.NoStartStateException { if ( ( startState ) == null ) { throw new org.mindroid.impl.statemachine.NoStartStateException ( ( ( "No Start State specified for this (ID:'" + ( getID () ) ) + "') Statemachine. Use setStartState(..) to specify a State to begin with!" ) ) ; } else { currentState = startState ; this . isActive = true ; currentState . activate () ; } } 
private static org.elasticsearch.hadoop.serialization.dto.mapping.Field skipHeaders ( org.elasticsearch.hadoop.serialization.dto.mapping.Field field ) { org.elasticsearch.hadoop.serialization.dto.mapping.Field [] props = field . properties () ; if ( ( ( ( ( props.length ) > 0 ) && ( ( props [ 0 ] ) != null ) ) && ( "mappings" . equals ( props [ 0 ] . name () ) ) ) && ( FieldType.OBJECT . equals ( props [ 0 ] . type () ) ) ) { return props [ 0 ] . properties () [ 0 ] ; } return field ; } 
public void done ( byte [] data , com.parse.ParseException e ) { if ( e == null ) { android.util.Log . d ( "test" , "We've got data in data." ) ; M . setImage ( data ) ; messages . add ( M ) ; pb . setProgress ( 60 ) ; customAdapter = new com.ferran.yep.views.InboxAdapter ( getActivity () , R.layout.custom_inbox_row , messages ) ; setListAdapter ( customAdapter ) ; } } 
public MaRzAgent.SuffixNode findBestNodeToTry () { MaRzAgent.SuffixNode [] nodes = ( ( MaRzAgent.SuffixNode [] ) ( hashFringe . values () . toArray ( new MaRzAgent.SuffixNode [ hashFringe . size () ] ) ) ) ; assert ( nodes.length ) > 0 ; double theBEASTLIESTCombo = nodes [ 0 ] . heuristic ; MaRzAgent.SuffixNode bestNode = nodes [ 0 ] ; for ( MaRzAgent.SuffixNode node : nodes ) { if ( ( node.heuristic ) > theBEASTLIESTCombo ) { theBEASTLIESTCombo = node.heuristic ; bestNode = node ; } } return bestNode ; } 
@ java.lang.Override public com.udacity.gradle.joketeller.Joke loadInBackground () { int retryCount = 0 ; com.udacity.gradle.joketeller.Joke joke = loadJoke () ; if ( ( ( lastJoke ) != null ) && ( joke != null ) ) { while ( ( joke . equals ( lastJoke ) ) && ( retryCount < ( com.udacity.gradle.builditbigger.MainActivity.RETRY_LIMIT ) ) ) { timber.log.Timber . d ( "Got the same joke, looking for fresh material!" ) ; joke = loadJoke () ; retryCount ++ ; } } return joke ; } 
public boolean updateIndent ( com.hlz.webModel.IndentModel model ) { com.hlz.entity.Indent indent = dao . updateIndent ( model ) ; if ( indent != null ) { messaging . convertAndSend ( "/topic/update" , indent . getId () ) ; rabbitTemplate . convertAndSend ( "update-indent" , indent . getId () ) ; return true ; } else { return false ; } } 
public void turnon () { switch ( currentState ) { case SWITCHINGOFF : case OFF : setState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.SWITCHINGON ) ; if ( ( onOffEvent ) == null ) { new hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.PowerStateDelayer ( onTransition , hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } else { onOffEvent . addFurtherTasks ( onTransition ) ; onOffEvent . setNewState ( hu.mta.sztaki.lpds.cloud.simulator.iaas.PhysicalMachine.State.RUNNING ) ; } break; case RUNNING : case SWITCHINGON : java.lang.System.err . println ( "WARNING: an already running PM was tasked to switch on!" ) ; } } 
private java.util.Collection < com.google.protobuf.Descriptors.FieldDescriptor > findSourceFields ( com.google.protobuf.Descriptors.FieldDescriptor enrichmentField ) { final java.lang.String byOptionArgument = enrichmentField . getOptions () . getExtension ( EventAnnotationsProto.by ) ; com.google.common.base.Preconditions . checkNotNull ( byOptionArgument ) ; final int pipeSeparatorIndex = byOptionArgument . indexOf ( org.spine3.server.event.enrich.ReferenceValidator.PIPE_SEPARATOR ) ; if ( pipeSeparatorIndex < 0 ) { return java.util.Collections . singleton ( findSourceFieldByName ( byOptionArgument , enrichmentField , true ) ) ; } else { final java.lang.String [] targetFieldNames = org.spine3.server.event.enrich.ReferenceValidator.PATTERN_PIPE_SEPARATOR . split ( byOptionArgument ) ; return findSourceFieldsByNames ( targetFieldNames , enrichmentField ) ; } } 
private common.UndirectedGraphNode cloneGraph ( common.UndirectedGraphNode node , java.util.HashMap < common.UndirectedGraphNode , common.UndirectedGraphNode > nodes ) { common.UndirectedGraphNode newNode = new common.UndirectedGraphNode ( node.label ) ; nodes . put ( node , newNode ) ; for ( common.UndirectedGraphNode neighbor : node.neighbors ) { common.UndirectedGraphNode newNeighbor = nodes . get ( neighbor ) ; if ( newNeighbor == null ) { newNeighbor = cloneGraph ( neighbor , nodes ) ; } newNode.neighbors . add ( newNeighbor ) ; } return newNode ; } 
public int run ( java.io.File source , java.io.File destination ) { status = org.dataaccessioner.Migrator.STATUS_INITIALIZING ; try { status = org.dataaccessioner.Migrator.STATUS_RUNNING ; status = copyDirectory ( source , destination ) ; } catch ( java.io.FileNotFoundException ex ) { setStatusMessage ( ex . getLocalizedMessage () ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } catch ( java.lang.Exception ex ) { setStatusMessage ( ( "Unexpected Failure: " + ( ex . getLocalizedMessage () ) ) ) ; return org.dataaccessioner.Migrator.STATUS_FAILURE ; } return status ; } 
public java.lang.String getRunTitle ( android.content.Context context ) { if ( android.text.TextUtils . isEmpty ( mRun . getTitle () ) ) { if ( ( mRun . getRunIndex () ) != ( - 1 ) ) { return context . getString ( R.string.run_label , java.lang.Integer . toString ( ( ( mRun . getRunIndex () ) + 1 ) ) ) ; } else { return context . getString ( R.string.run_label , "" ) ; } } else { return mRun . getTitle () ; } } 
private double [] primConverter ( java.lang.Double [] valArr ) { double [] primArr = new double [ valArr.length ] ; for ( int i = 0 ; i < ( valArr.length ) ; i ++ ) { primArr [ i ] = valArr [ i ] ; } return primArr ; } 
@ java.lang.Override public int compare ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { int res = firstClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = secondClassOrdering ( lRef , rRef ) ; if ( res == 0 ) { res = thirdClassOrdering ( lRef , rRef ) ; } } return res ; } 
public void run ( @ org.jetbrains.annotations.NotNull com.intellij.openapi.progress.ProgressIndicator progressIndicator ) { if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( "parsing started" ) ; } long start = java.lang.System . currentTimeMillis () ; com.intellij.perlplugin.PerlInternalParser . parseAllSources ( progressIndicator ) ; long end = java.lang.System . currentTimeMillis () ; if ( Utils.debug ) { com.intellij.perlplugin.Utils . print ( ( ( "update completed in " + ( ( end - start ) / 1000 ) ) + "sec" ) ) ; } } 
void showResult ( java.lang.String result ) { if ( withResult ) { resultFragment = ( ( com.example.uvdoha.translate.ResultFragment ) ( getSupportFragmentManager () . findFragmentById ( R.id.outputFrame ) ) ) ; if ( ( resultFragment ) == null ) { resultFragment = new com.example.uvdoha.translate.ResultFragment () ; } resultFragment . setResult ( result ) ; getSupportFragmentManager () . beginTransaction () . replace ( R.id.outputFrame , resultFragment ) . commit () ; } else { startActivity ( new android.content.Intent ( this , com.example.uvdoha.translate.ResultActivity . class ) . putExtra ( "result" , result ) ) ; } } 
@ android.support.annotation.Nullable public com.taobao.weex.WXSDKInstance takeCachedInstance ( @ android.support.annotation.Nullable java.lang.String targetUrl ) { if ( ! ( mRemoteConfig . isSwitchOn () ) ) { com.taobao.weex.utils.WXLogUtils . d ( com.taobao.weex.appfram.prerender.PreRenderManager.TAG , "takeCachedInstance failed. switch is off" ) ; return null ; } if ( android.text.TextUtils . isEmpty ( targetUrl ) ) { return null ; } com.taobao.weex.appfram.prerender.IPreRenderCache.Entry entry = mInternalCache . get ( targetUrl ) ; if ( ( ( entry != null ) && ( ( entry.data ) != null ) ) && ( entry . isFresh () ) ) { return entry.data ; } else { return null ; } } 
private void findPercentiles () { int count = 0 ; lowerIndex = 0 ; for ( lowerIndex = 0 ; ( ( lowerIndex ) < ( histogram.length ) ) && ( count < ( lowerCount ) ) ; ( lowerIndex ) ++ ) { count += histogram [ lowerIndex ] ; } for ( upperIndex = lowerIndex ; ( ( upperIndex ) < ( histogram.length ) ) && ( count < ( upperCount ) ) ; ( upperIndex ) ++ ) { count += histogram [ upperIndex ] ; } } 
private void onRightDrawerOpened () { java.lang.String properties = getResources () . getString ( R.string.properties ) ; java.lang.String tool = getResources () . getString ( getTool () . getName () ) ; actionBar . setTitle ( ( ( properties + ": " ) + tool ) ) ; } 
private void CalculatejButtonActionPerformed ( java.awt.event.ActionEvent evt ) { if ( ( ! ( SidesjTextField . getText () . isEmpty () ) ) && ( ! ( LengthjTextField . getText () . isEmpty () ) ) ) { validateInput ( SidesjTextField , LengthjTextField ) ; } } 
public void createAccessToken ( java.lang.String result ) { com.alibaba.fastjson.JSONObject tmp = com.alibaba.fastjson.JSON . parseObject ( result ) ; if ( result . contains ( "access_token" ) ) { setAccessToken ( tmp . getString ( "access_token" ) ) ; } else { setAccessToken ( tmp . getString ( "component_access_token" ) ) ; } setExpiresIn ( ( ( ( tmp . getLong ( "expires_in" ) ) - 60 ) * 1000 ) ) ; } 
void drainUntil ( long upToNanos ) { long now = timeNanos ; java.util.concurrent.PriorityBlockingQueue < hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask > q = queue ; for ( ; ; ) { hu.akarnokd.reactive4javaflow.TestSchedulerService.TestTask tt = q . peek () ; if ( ( tt == null ) || ( ( tt.dueNanos ) > upToNanos ) ) { break; } q . remove ( tt ) ; timeNanos = tt.dueNanos ; tt . run () ; } timeNanos = upToNanos ; } 
public void close () { try { if ( ( ( serverSocket ) != null ) && ( ! ( serverSocket . isClosed () ) ) ) { listeningThread . suspend () ; listeningThread . stop () ; serverSocket . close () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
public void updateLockedLevels () { for ( int i = 0 ; i < ( buttons ) ; i ++ ) { if ( com.darkhouse.gdefence.GDefence . getInstance () . user . getLevelAvailable ( ( ( firstButtonInt ) + i ) ) ) { levels [ i ] . unLock () ; } else { levels [ i ] . lock () ; } } } 
@ java.lang.Override public java.util.List < org.jivesoftware.openfire.mix.mam.ArchivedMixChannelMessage > execute () { if ( ( end ) != null ) { if ( ( limit ) == 0 ) { return repository . findTimeBoundMessagesByChannel ( channelName , start , end ) ; } else { return repository . findLimitedTimeBoundMessagesByChannel ( channelName , start , end , limit ) ; } } else { if ( ( limit ) == 0 ) { return repository . findMessagesByChannelSince ( channelName , start ) ; } else { return repository . findLimitedMessagesByChannelSince ( channelName , start , limit ) ; } } } 
public void update ( codeu.chat.common.ConversationSummary owningConversation ) { final codeu.chat.common.User u = ( owningConversation == null ) ? null : clientContext.user . lookup ( owningConversation.owner ) ; messageOwnerLabel . setText ( ( "Owner: " + ( u == null ? owningConversation == null ? "" : owningConversation.owner : u.name ) ) ) ; messageConversationLabel . setText ( ( "Conversation: " + ( owningConversation == null ? "" : owningConversation.title ) ) ) ; getAllMessages ( owningConversation , true ) ; } 
@ java.lang.Override void restoreLastSession () { init () ; java.util.Set < modbus.SlaveNode > slavescopy = new java.util.HashSet < modbus.SlaveNode > ( slaves ) ; slaves . clear () ; for ( modbus.SlaveNode sn : slavescopy ) { if ( ( sn.node ) != ( node ) ) { addSlave ( sn.node ) ; } else { slaves . add ( sn ) ; } } } 
public void changeToBattle ( engine.Formation formation ) { if ( ( ( currentScene ) != null ) && ( ( currentMap ) == null ) ) currentScene . stop () ; try { java.lang.Thread . sleep ( 2000 ) ; } catch ( java.lang.InterruptedException e ) {} currentScene = battle ; battle . start ( formation ) ; } 
private boolean containsRPurchase ( uwi.dcit.agriexpensesvr.ResourcePurchase rpurchase ) { com.google.appengine.api.NamespaceManager . set ( rpurchase . getAccount () ) ; javax.persistence.EntityManager mgr = uwi.dcit.agriexpensesvr.ResourcePurchaseEndpoint . getEntityManager () ; boolean contains = true ; try { uwi.dcit.agriexpensesvr.ResourcePurchase item = mgr . find ( uwi.dcit.agriexpensesvr.ResourcePurchase . class , rpurchase . getKey () ) ; if ( item == null ) { contains = false ; } } finally {} return contains ; } 
void restore () { init ( mVertexShader , mFragmentShader ) ; init () ; mAmbientColor . refresh () ; if ( ( mLights ) != null ) { for ( com.gplibs.magicsurfaceview.Light l : mLights ) { l . restore () ; } } if ( ( mSurfaces ) != null ) { for ( com.gplibs.magicsurfaceview.MagicBaseSurface < ? > s : mSurfaces ) { s . restore () ; } } } 
protected boolean checkBabySteps () { if ( ( ( this . moveCounter ) >= 10 ) && ( this . notEarnBabyStep () ) ) { achievements . get ( "BabySteps" ) . setIsEarned ( true ) ; popingUp . push ( "BabySteps" ) ; return true ; } return false ; } 
public void stopTick () { if ( ( this . IntentReceiver ) != null ) { this . context . unregisterReceiver ( this . IntentReceiver ) ; } if ( ( this . Handler ) != null ) { this . Handler . removeCallbacks ( this . Ticker ) ; } } 
public void setServiceDown () { com.antest1.kcanotify.KcaService.isPortAccessed = false ; if ( ( missionTimeScheduler ) != null ) { missionTimeScheduler . shutdown () ; } handler = null ; nHandler = null ; mediaPlayer . release () ; mediaPlayer = null ; stopForeground ( true ) ; notifiManager . cancelAll () ; currentPortDeckData = null ; viewNotificationBuilder = null ; com.antest1.kcanotify.KcaService.isServiceOn = false ; } 
@ java.lang.Override public void joinServer ( java.net.InetSocketAddress server ) { java.lang.String host = server . getHostString () ; int port = server . getPort () ; net.minecraft.client.multiplayer.ServerData serverData = new net.minecraft.client.multiplayer.ServerData ( "Sponge API Call" , ( ( host + ":" ) + port ) , false ) ; net.minecraftforge.fml.client.FMLClientHandler . instance () . connectToServer ( this . currentScreen , serverData ) ; } 
@ java.lang.Override public org.apache.drill.common.expression.PathSegment.ArraySegment cloneWithNewChild ( org.apache.drill.common.expression.PathSegment newChild ) { org.apache.drill.common.expression.PathSegment.ArraySegment seg = ( ( index ) < 0 ) ? new org.apache.drill.common.expression.PathSegment.ArraySegment ( null ) : new org.apache.drill.common.expression.PathSegment.ArraySegment ( index ) ; if ( ( child ) != null ) { seg . setChild ( child . cloneWithNewChild ( newChild ) ) ; } else { seg . setChild ( newChild ) ; } return seg ; } 
public java.lang.String getTextContent () { boolean saveTextContentOld ; saveTextContentOld = saveTextContent ; saveTextContent = true ; if ( ! ( getNextNode () ) ) { return null ; } saveTextContent = saveTextContentOld ; if ( ( nodeType ) != ( org.quicktionary.backend.parsers.XMLParser.NodeType.TEXT ) ) { return null ; } return textContent . toString () ; } 
public void printAdjList () { if ( ( ( adjList ) == null ) || ( ( adjList . size () ) == 0 ) ) { java.lang.System.out . println ( "The adjacency list is not set yet." ) ; } else { java.lang.System.out . println ( "Start printing adjacency list:" ) ; for ( graph.undirectedGraph.UGNode n : adjList . values () ) n . print () ; } } 
@ java.lang.Override public void render ( com.badlogic.gdx.graphics.g2d.SpriteBatch batch ) { for ( int currentX = 0 ; currentX < ( innerTiles.length ) ; currentX ++ ) { for ( int currentY = 0 ; currentY < ( innerTiles [ 0 ] . length ) ; currentY ++ ) { innerTiles [ currentX ] [ currentY ] . render ( batch ) ; } } } 
public int hit ( int armor ) { int damage ; if ( ( armor > 0 ) && ( armor < 20 ) ) { damage = this . DAMAGE ; } else { damage = ( this . DAMAGE ) - armor ; } return damage < 0 ? 0 : damage ; } 
public static java.lang.String random ( int length ) { java.lang.StringBuilder builder = new java.lang.StringBuilder () ; while ( ( builder . length () ) < length ) { builder . append ( se.rupy.http.Event.BASE_58 [ java.lang.Math . abs ( ( ( se.rupy.http.Event.random . nextInt () ) % ( se.rupy.http.Event.BASE_58.length ) ) ) ] ) ; } return builder . toString () ; } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/getMoreInfo/{type}/{id}" ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) public javax.ws.rs.core.Response getMoreInfo ( @ javax.ws.rs.PathParam ( value = "type" ) java.lang.String type , @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Integer id ) throws io.hops.hopsworks.common.exception.AppException { io.hops.hopsworks.common.project.MoreInfoDTO info = null ; if ( id != null ) { switch ( type ) { case "proj" : io.hops.hopsworks.common.dao.project.Project proj = projectFacade . find ( id ) ; info = new io.hops.hopsworks.common.project.MoreInfoDTO ( proj ) ; break; case "ds" : info = datasetInfo ( id ) ; break; } } return noCacheResponse . getNoCacheResponseBuilder ( Response.Status.OK ) . entity ( info ) . build () ; } 
public double calculateIDF ( java.util.List < java.lang.String [] > documents , java.lang.String wordToCheck ) { double count = 0 ; for ( java.lang.String [] ss : documents ) { for ( java.lang.String s : ss ) { if ( s . equalsIgnoreCase ( wordToCheck ) ) { count ++ ; break; } } } return java.lang.Math . log ( ( ( ( documents . size () ) / 1 ) + count ) ) ; } 
@ java.lang.Override public void resolveAnaphora () { java.util.List < org.tariel.pla.logics.Proposition > props = org.tariel.pla.logics.VariableStorage . getPopostionList () ; int i = 0 ; for ( org.tariel.pla.logics.classic.CQuantifer quant : this . getQuantifers () ) { if ( i < ( props . size () ) ) props . get ( i ) . setLinkedId ( ( ( java.lang.String ) ( quant . getVar () . getSourceId () ) ) ) ; i ++ ; } } 
public E get ( int index ) { LinkedSet < E > . Item < E > item = main ; if ( ( index < 0 ) || ( index >= ( size ) ) ) { throw new java.lang.IndexOutOfBoundsException ( ( ( ( ( "Index " + index ) + " isn't in range (0 - " ) + ( ( size ) - 1 ) ) + ")" ) ) ; } for ( int i = 0 ; i <= index ; i ++ ) { item = item.next ; } return item.value ; } 
private void expandType ( java.lang.String type ) { if ( ( getRelatingObject () . getType () ) != null ) { type += "." + ( getRelatingObject () . getType () ) ; if ( ( getRelatingObject () . getSubtype () ) != null ) { type += "." + ( getRelatingObject () . getSubtype () ) ; } } setType ( type ) ; } 
private java.lang.String listToConfig ( java.util.ArrayList < mars.client.Module > list ) { java.lang.StringBuilder aStringBuilder = new java.lang.StringBuilder () ; aStringBuilder . append ( "[" ) ; for ( int i = 0 ; i < ( list . size () ) ; i ++ ) { aStringBuilder . append ( list . get ( i ) . toString () ) . append ( "," ) ; } aStringBuilder . deleteCharAt ( aStringBuilder . length () ) ; aStringBuilder . append ( "]" ) ; return aStringBuilder . toString () ; } 
public boolean onAreaTouched ( org.andengine.input.touch.TouchEvent pSceneTouchEvent , float pTouchAreaLocalX , float pTouchAreaLocalY ) { if ( pSceneTouchEvent . isActionDown () ) { setTouchAreaBindingOnActionDownEnabled ( false ) ; setTouchAreaBindingOnActionMoveEnabled ( false ) ; android.content.Intent shareIntent = new android.content.Intent () ; shareIntent . setAction ( Intent.ACTION_SEND ) ; shareIntent . setType ( "text/plain" ) ; shareIntent . setPackage ( "com.twitter.android" ) ; shareIntent . putExtra ( Intent.EXTRA_TEXT , ( ( "My score in #ProtectTheTown is " + ( score ) ) + " points. And yours?" ) ) ; activity . tweetScore ( shareIntent ) ; } return true ; } 
private void deletePage ( int pageIndex ) { for ( roottemplate.calculator.data.KeyboardKits.KitVersion kv : mCurrentKitV.mParent.mKitVersions ) { roottemplate.calculator.data.KeyboardKits [] pages = kv.mPages ; kv.mPages = roottemplate.calculator.util.Util . removeFromObjectArray ( pages , pageIndex , new roottemplate.calculator.data.KeyboardKits.Page [ ( pages.length ) - 1 ] ) ; if ( ( kv.mMainPageIndex ) > pageIndex ) ( kv.mMainPageIndex ) -- ; else if ( ( kv.mMainPageIndex ) >= ( kv.mPages.length ) ) kv.mMainPageIndex = ( kv.mPages.length ) - 1 ; } mKitPreviewAdapter . notifyDataSetChanged () ; } 
@ java.lang.Override protected void onMeasure ( int widthMeasureSpec , int heightMeasureSpec ) { if ( heightMeasureSpec != 0 ) { int sizeWidth = de.dmxcontrol.widget.MeasureSpec . getSize ( widthMeasureSpec ) ; int sizeHeight = de.dmxcontrol.widget.MeasureSpec . getSize ( heightMeasureSpec ) ; if ( ( sizeHeight < sizeWidth ) && false ) { heightMeasureSpec = de.dmxcontrol.widget.MeasureSpec . makeMeasureSpec ( sizeHeight , de.dmxcontrol.widget.MeasureSpec . getMode ( heightMeasureSpec ) ) ; } } super . onMeasure ( widthMeasureSpec , heightMeasureSpec ) ; } 
public static void showMessage ( android.content.Context context , java.lang.String title , java.lang.String message , android.content.DialogInterface.OnClickListener okListener ) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder ( context ) ; builder . setMessage ( message ) . setPositiveButton ( R.string.ok , ( okListener == null ? new android.content.DialogInterface.OnClickListener () { @ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { dialog . dismiss () ; } } : okListener ) ) ; builder . create () . show () ; } 
@ com.facebook.react.bridge.ReactMethod public void startRecordingFps () { if ( ( ( mCatalystSettings ) == null ) || ( ! ( mCatalystSettings . isAnimationFpsDebugEnabled () ) ) ) { return; } if ( ( mFrameCallback ) != null ) { throw new com.facebook.react.bridge.JSApplicationCausedNativeException ( "Already recording FPS!" ) ; } com.facebook.react.modules.debug.AnimationsDebugModule . checkAPILevel () ; mFrameCallback = new com.facebook.react.modules.debug.FpsDebugFrameCallback ( android.view.Choreographer . getInstance () , getReactApplicationContext () ) ; mFrameCallback . startAndRecordFpsAtEachFrame () ; } 
private void next () { update () ; int next = ( status . ordinal () ) + 1 ; if ( next >= ( PipelineConfig.Step . values () . length ) ) { ch.epfl.planair.Planair . become ( ch.epfl.planair.mods.MenuMode . class ) ; } else { toStep ( next ) ; } } 
@ java.lang.Override protected boolean matchesSafely ( T item ) { T startOfWindow = ( ( T ) ( other . minus ( window , units ) ) ) ; T endOfWindow = ( ( T ) ( other . plus ( window , units ) ) ) ; return ( ( startOfWindow . compareTo ( item ) ) <= 0 ) && ( ( endOfWindow . compareTo ( item ) ) >= 0 ) ; } 
@ javax.annotation.Nullable @ java.lang.Override public org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig get ( final org.metaborg.core.project.ILanguageSpec languageSpec ) throws java.io.IOException { @ javax.annotation.Nullable org.metaborg.spoofax.core.project.configuration.ISpoofaxLanguageSpecConfig config = this . configurationBasedLanguageSpecConfigService . get ( languageSpec ) ; if ( ( config == null ) && ( languageSpec instanceof org.metaborg.core.project.IProject ) ) { @ javax.annotation.Nullable final org.metaborg.spoofax.core.project.settings.LegacySpoofaxProjectSettings settings ; try { settings = this . settingsService . get ( ( ( org.metaborg.core.project.IProject ) ( languageSpec ) ) ) ; } catch ( org.metaborg.core.project.ProjectException e ) { throw new java.io.IOException ( e ) ; } if ( settings != null ) { config = new org.metaborg.spoofax.core.project.configuration.LegacySpoofaxLanguageSpecConfig ( settings ) ; } } return config ; } 
@ java.lang.Override public void onSensorChanged ( android.hardware.SensorEvent event ) { if ( ( spaceShip ) == null ) return; if ( ( event.sensor . getType () ) == ( android.hardware.Sensor.TYPE_ACCELEROMETER ) ) { float rawX = event.values [ 0 ] ; float normalizedX = rawX * ( - 2.0F ) ; spaceShip . setXVelocity ( ( ( int ) ( normalizedX ) ) ) ; } } 
private double calculate ( us.team.awesome.calculator.math.CalculationList list ) throws us.team.awesome.calculator.util.MathException { if ( list . isEmpty () ) { return 0 ; } int index = getNextOperatorToCalculate ( list ) ; if ( index > 0 ) { us.team.awesome.calculator.math.CalculationOperator operator = ( ( us.team.awesome.calculator.math.CalculationOperator ) ( list . get ( index ) ) ) ; list = operator . calculate ( index , list ) ; return calculate ( list ) ; } else { return ( ( us.team.awesome.calculator.math.CalculationNumber ) ( list . getFirst () ) ) . getValue () ; } } 
public static < T extends uk.ac.bbsrc.tgac.miso.core.data.DetailedSample > T getParent ( java.lang.Class < T > targetParentClass , uk.ac.bbsrc.tgac.miso.core.data.DetailedSample start ) { for ( uk.ac.bbsrc.tgac.miso.core.data.DetailedSample current = uk.ac.bbsrc.tgac.miso.core.util.LimsUtils . deproxify ( start . getParent () ) ; current != null ; current = uk.ac.bbsrc.tgac.miso.core.util.LimsUtils . deproxify ( current . getParent () ) ) { if ( targetParentClass . isInstance ( current ) ) { @ java.lang.SuppressWarnings ( value = "unchecked" ) T result = ( ( T ) ( current ) ) ; return result ; } } return null ; } 
private void saveEntry ( org.owasp.dependencycheck.dependency.Vulnerability vuln ) throws java.io.IOException , org.apache.lucene.index.CorruptIndexException , org.owasp.dependencycheck.data.nvdcve.DatabaseException { final java.lang.String cveName = vuln . getName () ; if ( ( ( prevVersionVulnMap ) != null ) && ( prevVersionVulnMap . containsKey ( cveName ) ) ) { final java.util.List < org.owasp.dependencycheck.dependency.VulnerableSoftware > vulnSoftware = prevVersionVulnMap . get ( cveName ) ; for ( org.owasp.dependencycheck.dependency.VulnerableSoftware vs : vulnSoftware ) { vuln . updateVulnerableSoftware ( vs ) ; } } if ( ( cveDB ) != null ) { cveDB . updateVulnerability ( vuln ) ; } } 
public void update () { if ( isActive ) { physicsPositionCalibration () ; paintballShadow . setTranslation ( new com.metaio.sdk.jni.Vector3d ( geometry . getTranslation () . getX () , geometry . getTranslation () . getY () , 0.0F ) ) ; if ( ( getPlayerId () ) == ( com.google.sprint1.GameState . getState () . myPlayerID ) ) checkCollisions () ; if ( ( geometry . getTranslation () . getZ () ) <= 0.0F ) { disable () ; } } } 
private void displayResult ( java.lang.String inputTemperature , float convertedTemperature , boolean isInput_Fahrenheit ) { mTextView_Result . setText ( ( ( ( inputTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + convertedTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; if ( isInput_Fahrenheit ) { mTextView_Result . setText ( ( ( ( convertedTemperature + ( course.labs.permissionsapp.ConverterActivity.CELSIUS_STATEMENT_CONST ) ) + inputTemperature ) + ( course.labs.permissionsapp.ConverterActivity.FAHRENHEIT_STATEMENT_CONST ) ) ) ; } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_main ) ; location = ( ( android.widget.TextView ) ( findViewById ( R.id.locationText ) ) ) ; auth.hci.adscanner.controller.GPSTracker gps = new auth.hci.adscanner.controller.GPSTracker ( this ) ; if ( gps . canGetLocation () ) { location . setText ( ( ( ( "Langtitude: " + ( gps . getLatitude () ) ) + "\nLongtitude: " ) + ( gps . getLongitude () ) ) ) ; } else { gps . showSettingsAlert () ; } } 
private void CreateSpecies ( java.lang.String type , int number ) { for ( int i = 0 ; i < number ; i ++ ) { GetPositionsAndTypes () ; ( ( java.util.List < Species.ISpecie > ) ( species ) ) . add ( Species.SpecieFactory . GetSpecies ( type , RandomPosition () ) ) ; } GetPositionsAndTypes () ; } 
public static void response ( java.lang.String name , java.lang.String s ) { if ( com.minecraftmarket.util.Log.debug ) { com.minecraftmarket.util.Log . log ( ( ( ( "   ------------- " + " MinecraftMarket Debug " ) + name ) + " -------------    " ) ) ; com.minecraftmarket.util.Log . log ( ( "   " + s ) ) ; com.minecraftmarket.util.Log . log ( "   --------------------------------------------------------------------   " ) ; com.minecraftmarket.util.Log . log ( " " ) ; } } 
@ java.lang.Override public void showEmpty () { mobymagic.com.javalagos.utils.LogUtils . d ( mobymagic.com.javalagos.ui.userslist.BaseUserListFragment.LOG_TAG , "Showing empty" ) ; if ( ( mPlaceHolderView . getViewCount () ) < 1 ) { mProgressView . setVisibility ( View.GONE ) ; mErrorContainerView . setVisibility ( View.GONE ) ; mEmptyContainerView . setVisibility ( View.VISIBLE ) ; } } 
public void launch () { try { socket = new java.net.ServerSocket ( port ) ; java.lang.System.out . println ( ( ( "TCP high level server is running on " + ( port ) ) + "..." ) ) ; while ( true ) { java.net.Socket tcpClient = socket . accept () ; client.Client client = new client.Client ( tcpClient , responseDelay , this ) ; executorService . submit ( client ) ; java.lang.System.out . println ( "Server is listening new client..." ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
private void setTeamColor ( net.minecraft.scoreboard.ScorePlayerTeam team , java.lang.String newTeamColor ) { java.lang.String prefix = team . getColorPrefix () ; java.lang.String prefixSplit ; try { prefixSplit = prefix . substring ( 4 ) ; } catch ( java.lang.NullPointerException e ) { prefix = "\u00a7r\u00a7r" ; prefixSplit = "" ; } catch ( java.lang.StringIndexOutOfBoundsException e ) { prefixSplit = "" ; } team . setNamePrefix ( ( newTeamColor + prefixSplit ) ) ; } 
@ java.lang.Override public boolean visit ( org.eclipse.php.internal.core.compiler.ast.visitor.PHPCallExpression node ) throws java.lang.Exception { if ( ( node . getReceiver () ) != null ) { node . getReceiver () . traverse ( this ) ; } if ( ( node . getArgs () ) != null ) { node . getArgs () . traverse ( this ) ; } visitGeneral ( node ) ; return false ; } 
public void mouseReleased ( java.awt.event.MouseEvent e ) { if ( ( e . getButton () ) == ( java.awt.event.MouseEvent.BUTTON1 ) ) { dragging = false ; java.lang.System.out . println ( "released" ) ; command = new controller.TravelCommand ( currentPersModel , initPosX , initPosy , e . getX () , e . getY () ) ; cmdMan . storeAndExecute ( command , currentPersModel . getID () ) ; } } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( o == null ) return false ; if ( o instanceof net.osmand.plus.quickaction.QuickAction ) { net.osmand.plus.quickaction.QuickAction action = ( ( net.osmand.plus.quickaction.QuickAction ) ( o ) ) ; if ( ( type ) != ( action.type ) ) return false ; if ( ( id ) != ( action.id ) ) return false ; return true ; } else return false ; } 
public me.noize.chemistry.io.TimeRange extendTo ( final long time ) { if ( time < ( this . getStart () ) ) { return new me.noize.chemistry.io.TimeRange ( time , this . getEnd () ) ; } else if ( ( this . getEnd () ) < time ) { return new me.noize.chemistry.io.TimeRange ( this . getStart () , time ) ; } else { return this ; } } 
@ java.lang.Override public void onClick ( android.content.DialogInterface dialog , int which ) { int prog = seekBar . getProgress () ; this . warmth = prog + 1 ; this . recapWarmth . setText ( android.text.Html . fromHtml ( ( ( ( "<b>" + ( res . getString ( R.string.recapHot ) ) ) + "</b>" ) + ( hotWordArray [ prog ] ) ) ) ) ; } 
@ java.lang.Override public com.windowsazure.messaging.NotificationPlatform convertTo ( com.bosch.cn.dad.notificationhub.model.DeviceType srcDeviceType , com.windowsazure.messaging.NotificationPlatform destPlatform ) { if ( srcDeviceType == null ) { return null ; } switch ( srcDeviceType ) { case WindowsNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Wns ; break; case WindowsPhoneNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Mpns ; break; case AppleNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Apns ; break; case BaiduNotification : destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm ; break; case GoogleCloudMessaging : destPlatform = com.windowsazure.messaging.NotificationPlatform.Gcm ; break; case AmazonDeviceMessaging : destPlatform = com.windowsazure.messaging.NotificationPlatform.Adm ; break; } return destPlatform ; } 
public java.lang.String inflectNoun ( java.lang.String nounLemma , java.lang.String inflection ) { java.lang.String toRet = null ; ballpark.WordElement word = lexicon . getWord ( nounLemma , LexicalCategory.NOUN ) ; if ( inflection . contains ( "def" ) ) { if ( inflection . contains ( "plu" ) ) { ballpark.InflectedWordElement pluralWord = new ballpark.InflectedWordElement ( word ) ; pluralWord . setPlural ( true ) ; toRet = realiser . realise ( pluralWord ) . toString () ; } if ( toRet != null ) return "the " + toRet ; else return "the " + nounLemma ; } return nounLemma ; } 
private void createIndexForPost () { try { if ( ! ( DS.mop . collectionExists ( "post" ) ) ) { DS.mop . createCollection ( "post" ) ; } com.mongodb.DBObject textIndex = new com.mongodb.BasicDBObject ( "message" , "text" ) ; textIndex . put ( "link" , "text" ) ; textIndex . put ( "name" , "text" ) ; DS.mop . getCollection ( "post" ) . createIndex ( textIndex ) ; } catch ( java.lang.Exception e ) { bootstrap.Logger . debug ( ( "error on index post" + ( e . getMessage () ) ) ) ; } } 
private int decideAction () { setHorizontalVelocity ( 0.0 ) ; java.util.Random rand = new java.util.Random () ; actionDuration = ( ( rand . nextDouble () ) * 3.0 ) + 1.0 ; actionTime = 0.0 ; int randomNum = rand . nextInt ( 4 ) ; return randomNum ; } 
private static double compare ( final java.lang.String v1 , final java.lang.String v2 , final double high , final double low , final java.util.Comparator comparator ) { if ( comparator == null ) { return org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ; } double sim = comparator . compare ( v1 , v2 ) ; if ( sim < low ) { return low ; } else { return ( ( high - ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ) * ( sim * sim ) ) + ( org.yaba.entity.script.EntityResolutionScript.AVERAGE_SCORE ) ; } } 
private Board swapRight ( int blankX , int blankY ) { Board swap = new Board ( this . board ) ; if ( blankY >= ( ( this . dimensions () ) - 1 ) ) { throw new java.lang.IndexOutOfBoundsException ( "Can not swap right most column right" ) ; } exchange ( swap.board , blankX , blankY , blankX , ( blankY + 1 ) ) ; return swap ; } 
public boolean bookSeats ( int no ) { if ( ( no > ( this . availability ) ) && ( no > 0 ) ) { return false ; } else { this . availability = - no ; this . booked = no ; this . setChanged () ; this . notifyObservers ( this . availability ) ; this . clearChanged () ; return true ; } } 
@ java.lang.Override public java.lang.String toString () { java.lang.String str = "Symbol Table list:" ; for ( int i = nestinglevel ; ( - 1 ) < ( nestinglevel ) ; i ++ ) { str += ( "Nesting level " + i ) + ":\n" ; str += tables [ i ] . toString () ; } return str ; } 
private void dataInit () { for ( int i = 0 ; i < 3 ; i ++ ) { dataMagnetic . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataOrientation . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataAccelerate . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataGyroscope . add ( new java.util.ArrayList < java.lang.Integer > () ) ; dataGravity . add ( new java.util.ArrayList < java.lang.Integer > () ) ; } } 
public boolean groupRetriever () { view . setText ( "Group Members\n" ) ; try ( java.io.FileInputStream file = openFileInput ( ( "CMG" + ( groupName ) ) ) ) { java.util.Scanner in = new java.util.Scanner ( file ) ; while ( in . hasNextLine () ) { userAdded . add ( in . nextLine () ) ; schedAdded . add ( in . nextLine () ) ; } } catch ( java.lang.Exception e ) { return false ; } return true ; } 
public void disconnect ( ) throws java.io.IOException { if ( ( listen ) == null ) { java.lang.System.out . println ( "Register first!" ) ; return; } java.net.Socket sock = createSocket () ; if ( ! ( sendAndReceive ( ( "disconnect " + ( id ) ) ) ) ) { java.lang.System.out . println ( "Disconnect failed, try again" ) ; } listen . interrupt () ; sock . close () ; } 
public void reset () { if ( isTerminated () ) { kernelsToRun . addAll ( finishedKernels ) ; finishedKernels . clear () ; ( iteration ) ++ ; end = - 1 ; terminated = ( kernelsToRun . isEmpty () ) && ( runningThreads . isEmpty () ) ; } } 
public void append ( java.lang.String key , java.lang.String content ) { java.lang.String value = get ( key ) ; if ( value != null ) { value += content ; } put ( key , value ) ; logger . info ( ( ( ( ( ( "Node[" + ( node . getHashcode () ) ) + "] APPEND Key:" ) + key ) + "Value:" ) + value ) ) ; } 
public static void drawSprite ( com.badlogic.gdx.graphics.g2d.Sprite sprite , com.badlogic.gdx.graphics.g2d.Batch batch , float x , float y , float w , float h ) { if ( sprite != null ) { batch . begin () ; batch . draw ( sprite , x , ( ( ( net.awhipple.zombiebird.ZBGame.SCREEN_H ) - y ) - h ) , w , h ) ; batch . end () ; } } 
@ java.lang.Override public java.lang.Object getSystemService ( java.lang.String name ) { if ( ( ( Context.LAYOUT_INFLATER_SERVICE . equals ( name ) ) == true ) && ( ( com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity . getWindow () ) != null ) ) { return droid4mizer . getSystemService ( name , com.smartnsoft.droid4me.support.v7.app.SmartAppCompatActivity . getWindow () . getLayoutInflater () ) ; } else { return droid4mizer . getSystemService ( name , super . getSystemService ( name ) ) ; } } 
public boolean addRoomToBooking ( long bookingId ) { if ( ( bookingId < 1 ) || ( bookingId > ( currentBookingId ) ) ) { return false ; } else if ( ( currentReservationNumber ) >= ( MAX_ROOMS ) ) { return false ; } else { ++ ( currentReservationNumber ) ; reservationToBookingId . put ( currentReservationId , bookingId ) ; ++ ( currentReservationId ) ; return true ; } } 
public void removeConnectedFlagCascade ( int trackIdx ) { mTracks . get ( trackIdx ) . setConnectedPrev ( false ) ; for ( int i = trackIdx + 1 ; i < ( mTracks . size () ) ; i ++ ) { if ( mTracks . get ( i ) . isConnectedPrev () ) mTracks . get ( i ) . setConnectedPrev ( false ) ; else break; } } 
public void setup ( chess.GameHistory history ) { this . setup () ; this . history = history ; for ( chess.Move m : this . history . logList ) { try { this . move ( m ) ; } catch ( chess.IllegalMoveException e ) { java.lang.System.out . println ( ( e + "History is corrupted." ) ) ; } } } 
public void checkFinished () { boolean status = true ; for ( int index : player . getHighlightedFiguresIndizes () ) { if ( stage . getActors () . get ( index ) . isVisible () ) { status = false ; } } if ( ( status && ( ( kickedIndex ) == ( - 1 ) ) ) && ( ( actorActive ) == ( - 1 ) ) ) { handler . sendMessage ( player . getNumber () ) ; } } 
@ java.lang.Override public java.lang.String stringValue ( final msi.gama.runtime.IScope scope ) throws msi.gama.runtime.exceptions.GamaRuntimeException { return ( ( ( ( ( ( ( ( "message[sender: " + ( getData () . getSender () ) ) + "; receivers: " ) + ( getData () . getReceivers () ) ) + "; performative: " ) + ( getData () . getPerformativeName () ) ) + "; content: " ) + ( getData () . getContent () ) ) + "; content" ) + "]" ; } 
public boolean InspectInventory ( java.lang.String object ) { for ( int col = 0 ; col < ( playerInventory.length ) ; col ++ ) { if ( playerInventory [ col ] [ 1 ] . toString () . equals ( object ) ) { return true ; } } return false ; } 
@ java.lang.Override public void grant ( co.cask.cdap.proto.id.EntityId entity , co.cask.cdap.proto.security.Principal principal , java.util.Set < co.cask.cdap.proto.security.Action > actions ) throws co.cask.cdap.common.FeatureDisabledException , co.cask.cdap.common.NotFoundException , co.cask.cdap.common.UnauthenticatedException , co.cask.cdap.security.spi.authorization.UnauthorizedException , java.io.IOException { co.cask.cdap.proto.security.GrantRequest grantRequest = new co.cask.cdap.proto.security.GrantRequest ( entity , principal , actions ) ; java.net.URL url = config . resolveURLV3 ( ( ( co.cask.cdap.client.AuthorizationClient.AUTHORIZATION_BASE ) + "/privileges/grant" ) ) ; co.cask.common.http.HttpRequest request = co.cask.common.http.HttpRequest . post ( url ) . withBody ( co.cask.cdap.client.AuthorizationClient.GSON . toJson ( grantRequest ) ) . build () ; executePrivilegeRequest ( entity , principal , request ) ; } 
public io.cattle.platform.core.model.Account createProjectForUser ( io.cattle.platform.api.auth.Identity identity ) { io.cattle.platform.core.model.Account project = authDao . createProject ( ( ( identity . getName () ) + ( io.cattle.platform.core.constants.ProjectConstants.PROJECT_DEFAULT_NAME ) ) , null ) ; authDao . createProjectMember ( project , new io.cattle.platform.iaas.api.auth.projects.Member ( identity , io.cattle.platform.core.constants.ProjectConstants.OWNER ) ) ; return project ; } 
public void setSelected ( ru.sukharev.pathtracker.utils.orm.MapPath path ) { if ( ( ( selectedPath ) != null ) && ( mObjects . contains ( selectedPath ) ) ) notifyItemChanged ( mObjects . indexOf ( selectedPath ) ) ; selectedPath = path ; if ( ( ( selectedPath ) != null ) && ( mObjects . contains ( selectedPath ) ) ) notifyItemChanged ( mObjects . indexOf ( selectedPath ) ) ; } 
private static int argument ( char [] array , int cursor , java.lang.StringBuilder argument ) { for ( int i = cursor ; i < ( array.length ) ; i ++ ) { char c = array [ i ] ; switch ( c ) { case ',' : case ')' : return i + 1 ; case ' ' : if ( ( argument . length () ) == 0 ) continue; default: argument . append ( c ) ; } } return array.length ; } 
@ java.lang.Override public double deposit ( double amount ) { if ( ( getBalance () ) == 0 ) return 0 ; double deposited = super . deposit ( amount ) ; double finalDeposit = against . deposit ( deposited ) ; double difference = deposited - finalDeposit ; if ( difference != 0 ) { super . withdraw ( difference ) ; } return finalDeposit ; } 
private void setMonthOnAction ( javafx.scene.layout.HBox box , java.time.LocalDateTime start , java.time.LocalDateTime end ) { box . setOnMouseClicked ( new javafx.event.EventHandler < javafx.scene.input.MouseEvent > () { @ java.lang.Override public void handle ( javafx.scene.input.MouseEvent event ) { if ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.PRIMARY ) ) { createDayView ( start , end ) ; } else if ( ( ( event . getButton () ) == ( javafx.scene.input.MouseButton.SECONDARY ) ) && ( yearView ) ) { createYear ( timeline . getStart () , timeline . getEnd () ) ; } } } ) ; } 
protected static java.lang.String [] createNames ( int nameCount , java.lang.String preamble ) { if ( preamble == null ) preamble = "V" ; int i = 0 ; java.lang.String [] n = new java.lang.String [ nameCount ] ; while ( i < nameCount ) { n [ i ] = preamble + ( ++ i ) ; } return n ; } 
public synchronized void start () { assert ( this . state ) == ( ShutdownState.INITIALIZED ) : "Invalid MessengerState " + ( this . state ) ; this . state = ShutdownState.STARTED ; if ( edu.brown.hstore.ReconfigCoordinator.debug.val ) edu.brown.hstore.ReconfigCoordinator.LOG . debug ( "Initializing connections" ) ; this . initConnections () ; if ( edu.brown.hstore.ReconfigCoordinator.debug.val ) edu.brown.hstore.ReconfigCoordinator.LOG . debug ( "Starting listener thread" ) ; this . listener_thread . start () ; this . ready_observable . notifyObservers ( this ) ; } 
public static int getFutureLinesVanished ( de.slothsoft.tetris.Board board , de.slothsoft.tetris.Stone stone , int blockY ) { int lines = 0 ; for ( int y = 0 ; y < ( stone . getHeightInBlocks () ) ; y ++ ) { int stoneBlocks = stone . calculateBlockCountOfLine ( y ) ; int boardBlocksCount = board . calculateBlockCountOfLine ( ( y + blockY ) ) ; if ( ( stoneBlocks + boardBlocksCount ) >= ( Board.WIDTH_IN_BLOCKS ) ) { lines ++ ; } } return lines ; } 
@ java.lang.Override public void onDataChange ( com.learn.shruti.ratemyday.DataSnapshot dataSnapshot ) { for ( com.learn.shruti.ratemyday.DataSnapshot postSnapshot : dataSnapshot . getChildren () ) { com.learn.shruti.ratemyday.Model.Review r = postSnapshot . getValue ( com.learn.shruti.ratemyday.Model.Review . class ) ; if ( r.employeeEmail . equals ( userEmail ) ) reviewList . add ( r ) ; android.widget.Toast . makeText ( this , ( ( ( "com: " + ( r.comments ) ) + ", rate " ) + ( r.rating ) ) , Toast.LENGTH_SHORT ) . show () ; } } 
private void readIfNeeded ( io.netty.channel.ChannelHandlerContext ctx ) { if ( ( ! ( ctx . channel () . config () . isAutoRead () ) ) && ( ( ! ( firedChannelRead ) ) || ( ! ( handshakePromise . isDone () ) ) ) ) { ctx . read () ; } } 
public void setLanecover ( float lanecover ) { lanecover = ( lanecover < 0 ) ? 0 : lanecover > 1 ? 1 : lanecover ; this . lanecover = lanecover ; if ( ( this . fixhispeed ) != ( bms.player.beatoraja.Config.FIX_HISPEED_OFF ) ) { hispeed = ( ( float ) ( ( ( ( 2400.0F / ( ( basebpm ) / 100 ) ) / ( gvalue ) ) * 0.6 ) * ( 1 - ( enableLanecover ? lanecover : 0 ) ) ) ) ; } } 
public int incrementNumberOfScheduledDeliveries ( long messageID ) { org.wso2.andes.kernel.OnflightMessageTracker.MsgData trackingData = getTrackingData ( messageID ) ; int numOfSchedules = 0 ; if ( trackingData != null ) { trackingData . addMessageStatus ( MessageStatus.SCHEDULED_TO_SEND ) ; numOfSchedules = trackingData.numberOfScheduledDeliveries . incrementAndGet () ; if ( org.wso2.andes.kernel.OnflightMessageTracker.log . isDebugEnabled () ) { org.wso2.andes.kernel.OnflightMessageTracker.log . debug ( ( ( ( "message id= " + messageID ) + " scheduled. Pending to execute= " ) + numOfSchedules ) ) ; } } return numOfSchedules ; } 
public T removeLast () { if ( ( size ) == 0 ) { throw new java.util.NoSuchElementException () ; } T ret = ( ( T ) ( queue [ ( ( -- ( tail ) ) % ( queue.length ) ) ] ) ) ; ( size ) -- ; return ret ; } 
public boolean applyTop ( int id ) { boolean bool = false ; int applyTotal = newsDao . applyTotalTop () ; if ( applyTotal < 5 ) { int count = newsDao . applyTop ( id ) ; if ( count > 0 ) { bool = true ; } } return bool ; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { if ( ! ( ( query . isEmpty () ) || ( query . equals ( lastQuery ) ) ) ) { lastQuery = query ; mArtistAdapter . clear () ; new com.bmriv.android.streamify.QueryArtistTask ( mArtistAdapter , this ) . execute ( query ) ; } return true ; } 
public ATMServer.Server handleData ( ) throws java.io.IOException { int i = 0 ; int maxConnections = 200 ; byte id = 1 ; while ( ( i ++ ) < maxConnections ) { java.net.Socket clientConnection = s . accept () ; id ++ ; ATMServer.Worker worker = new ATMServer.Worker ( clientConnection , functions , clientData , id ) ; java.lang.Thread t = new java.lang.Thread ( worker ) ; t . start () ; logger . info ( ( "New client connected, assigned thread ID #" + ( t . getId () ) ) ) ; } return this ; } 
public int getNewProductIdByCategory ( java.lang.String categoryId ) { java.util.ArrayList < sg.edu.nus.iss.universitysouvenirstore.Product > p = this . getProductListByCategory ( categoryId ) ; int largest = 0 ; for ( sg.edu.nus.iss.universitysouvenirstore.Product product : p ) { java.lang.String [] splitString = product . getProductId () . split ( "/" ) ; int splitProductId = java.lang.Integer . parseInt ( splitString [ 1 ] ) ; if ( largest <= splitProductId ) { largest = splitProductId ; } } return largest + 1 ; } 
@ android.support.annotation.MainThread protected void clearDataSource ( final boolean clearTargetState ) { synchronized ( mLock ) { logger . debug ( ( "clearDataSource(), clearTargetState=" + clearTargetState ) ) ; cancelResetCallback () ; mScriptExecutor . execute ( "clearDataSource()" ) ; mScriptExecutor . execute ( "clearImage()" ) ; mScriptExecutor . execute ( "clearPage()" ) ; mLastContentUriToOpen = null ; mLastAssetFileDescriptorToOpen = null ; mLastModeToOpen = PlayMode.NONE ; setCurrentState ( State.IDLE ) ; if ( clearTargetState ) { setTargetState ( State.IDLE ) ; } } } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; setContentView ( R.layout.activity_article_list ) ; mSwipeRefreshLayout = ( ( android.support.v4.widget.SwipeRefreshLayout ) ( findViewById ( R.id.swipe_refresh_layout ) ) ) ; mRecyclerView = ( ( android.support.v7.widget.RecyclerView ) ( findViewById ( R.id.recycler_view ) ) ) ; getLoaderManager () . initLoader ( 0 , null , this ) ; if ( savedInstanceState == null ) { refresh () ; } } 
@ java.lang.Override public java.util.List < java.lang.Long > getSolutionProjects ( long id ) { java.util.List < java.lang.Long > projects = new java.util.ArrayList <> () ; java.lang.String query = "select id from project where solutionid=" + id ; java.util.List < java.util.Map < java.lang.String , java.lang.Object > > projectsResult = jdbcTemplate . queryForList ( query ) ; for ( java.util.Map < java.lang.String , java.lang.Object > team : projectsResult ) { projects . add ( java.lang.Long . parseLong ( team . get ( "id" ) . toString () ) ) ; } return projects ; } 
@ java.lang.Override public void run () { if ( showErrorMessages ) { java.io.StringWriter errors = new java.io.StringWriter () ; e . printStackTrace ( new java.io.PrintWriter ( errors ) ) ; dialog . setErrorMessage ( ( ( errors . toString () ) + "</p></html>" ) ) ; dialog . setLocationRelativeTo ( null ) ; dialog . setModal ( true ) ; java.lang.Thread t = new java.lang.Thread () { @ java.lang.Override public void run () { dialog . setVisible ( true ) ; } } ; t . start () ; } } 
private static final java.lang.String NpcIntegration () { return ( ( ( ( ( ( ( ( ( "" + ( ( ( ( "# The NPCs to open the GUI for Race Selection. \n" + "# NPC names have to be the real names of the NPCs.\n" ) + "# The Gui will open even if the GUI is disabled in Race Secion.\n" ) + "# String List: a list of NPC names.\n" ) + "# default: [] \n" ) ) + ( npc_select_race ) ) + ": []\n\n" ) + "# The NPCs to open the GUI for Class Selection. \n" ) + "# NPC names have to be the real names of the NPCs.\n" ) + "# The Gui will open even if the GUI is disabled in Class Secion.\n" ) + "# String List: a list of NPC names.\n" ) + "# default: [] \n" ) + ( npc_select_class ) ) + ": []\n\n" ; } 
public void printTmpDictionary () { for ( java.util.Map.Entry < java.lang.String , java.lang.Integer > d : frequencyDictionary . entrySet () ) { java.lang.System.out . println ( ( ( ( "Word " + ( d . getKey () ) ) + " has frequency " ) + ( d . getValue () ) ) ) ; } } 
@ java.lang.Override protected void onStart () { super . onStart () ; if ( ( ! ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper . isUserLoggedIn ( this ) ) ) || ( nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper . isTokenExpired ( this ) ) ) { nmct.jaspernielsmichielhein.watchfriends.helper.AuthHelper . logUserOff ( this ) ; com.facebook.login.LoginManager . getInstance () . logOut () ; showLoginActivity () ; } } 
private Player.Solution buildRandomSolution ( Player.GameState gs , Player.AI opAI , Player.ScoreEvaluation eval ) { Player.Solution solution = new Player.Solution ( Player.MagicNumbers.SIMULATION_DEPTH ) ; Player.GameState newGs = gs . copy () ; for ( int i = 0 ; i < ( Player.MagicNumbers.SIMULATION_DEPTH ) ; i ++ ) { solution.actions [ i ] = getRandomAction ( gs ) ; Player.GameEngine . applyActionWithoutCopy ( newGs , solution.actions [ i ] , opAI . compute ( gs ) ) ; solution.score += eval . getGameStateScore ( newGs , i ) ; } return solution ; } 
@ org.springframework.transaction.annotation.Transactional public java.lang.Boolean updateBillingSystem ( final java.lang.String serviceCode , final java.util.Set < org.egov.collection.integration.models.BillReceiptInfo > billReceipts ) throws org.egov.infra.exception.ApplicationRuntimeException { final org.egov.collection.integration.services.BillingIntegrationService billingService = getBillingServiceBean ( serviceCode ) ; if ( billingService == null ) return false ; else try { billingService . updateReceiptDetails ( billReceipts ) ; return true ; } catch ( final java.lang.Exception e ) { final java.lang.String errMsg = ( "Exception while updating billing system [" + serviceCode ) + "] with receipt details!" ; org.egov.collection.service.ReceiptHeaderService.LOGGER . error ( errMsg , e ) ; throw new org.egov.infra.exception.ApplicationRuntimeException ( errMsg , e ) ; } } 
private source.Node < T > find ( T key , source.Node < T > node ) { if ( node == null ) { return null ; } int comparison = key . compareTo ( node.key ) ; if ( comparison == 0 ) { return node ; } else if ( comparison > 0 ) { return find ( key , node.rightChild ) ; } else { return find ( key , node.leftChild ) ; } } 
@ java.lang.Override public void onChanged () { super . onChanged () ; int childCount = getChildCount () ; if ( childCount < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ) { for ( int i = childCount ; i < ( com.daprlabs.cardstack.SwipeDeck.NUMBER_OF_CARDS ) ; ++ i ) { addNextCard () ; } for ( int i = 0 ; i < ( getChildCount () ) ; ++ i ) { positionItem ( i ) ; } } } 
public void addKeyListeners () { if ( ( dji.keysdk.KeyManager . getInstance () ) != null ) { removeKeyListeners () ; dji.keysdk.DJIKey keyC1 = dji.keysdk.RemoteControllerKey . create ( RemoteControllerKey.CUSTOM_BUTTON_1 ) ; dji.keysdk.KeyManager . getInstance () . addListener ( keyC1 , c1KeyListener ) ; dji.keysdk.KeyManager . getInstance () . addListener ( dji.keysdk.RemoteControllerKey . create ( RemoteControllerKey.CUSTOM_BUTTON_2 ) , c2KeyListener ) ; } } 
public boolean connectWith ( final com.kcht.parking.charge.timeline.Period another ) { return ( ( ( ( this . endHour ) == ( another.startHour ) ) && ( ( this . endMinute ) == ( another.startMinute ) ) ) && ( ( this . startHour ) == ( another.endHour ) ) ) && ( ( this . startMinute ) == ( another.endMinute ) ) ; } 
public void setCreepFactor ( boolean creepFactor ) { if ( ( ( minAge ) <= ( baeAge ) ) && ( ( maxAge ) >= ( baeAge ) ) ) { creepFactor = false ; } else { creepFactor = true ; } this . creepFactor = creepFactor ; } 
public java.lang.String [] removeEntry ( java.lang.String [] arrayToRemoveFrom , int entryNumber ) { java.lang.String [] result = new java.lang.String [ ( arrayToRemoveFrom.length ) - 1 ] ; int tmp = 0 ; for ( int i = 0 ; i < ( result.length ) ; i ++ ) { if ( i == entryNumber ) { tmp = 1 ; } result [ i ] = arrayToRemoveFrom [ ( i + tmp ) ] ; } return result ; } 
public void updateState ( java.lang.String key , java.lang.Object value ) { if ( ( ( key . equals ( "LoginError" ) ) == true ) && ( ! ( value . equals ( "" ) ) ) ) { displayErrorMessage ( ( ( java.lang.String ) ( value ) ) ) ; } } 
private void process ( backtype.storm.tuple.Tuple t ) { ( counter ) ++ ; java.util.List < backtype.storm.tuple.Values > result = f . process ( t ) ; if ( result != null ) for ( backtype.storm.tuple.Values out : result ) { emit ( t , out ) ; if ( keepStats ) { countStat . increase ( 1 ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { android.content.Intent intent = new android.content.Intent ( getApplication () , com.lgq.fruitgrower.view.act.PublicActivity . class ) ; android.os.Bundle bundle = new android.os.Bundle () ; bundle . putBoolean ( "farmer" , false ) ; intent . putExtras ( bundle ) ; startActivityForResult ( intent , 1 ) ; if ( ( rela_layout . getVisibility () ) == ( android.view.View.VISIBLE ) ) { rela_layout . setVisibility ( View.GONE ) ; } } 
public void setIsAI ( boolean isAI ) { if ( ( this . isAI ) && ( ! isAI ) ) { com.dyllongagnier.triad.gui.controller.Players . resetAI () ; } boolean isDiff = isAI ^ ( this . isAI ) ; this . isAI = isAI ; if ( isDiff && ( this . gameInProgress () ) ) { this . takeTurn ( this . currentGame ) ; } } 
public android.widget.Button getAttendeeNameButton () { android.widget.Button attendeeNameButton = null ; if ( ( getContext () ) != null ) { attendeeNameButton = ( ( android.widget.Button ) ( ( ( android.app.Activity ) ( getContext () ) ) . findViewById ( R.id.attendeeNameButton ) ) ) ; } return attendeeNameButton ; } 
@ java.lang.Override public void taskCompleted ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus status , java.lang.String message , org.json.JSONObject json ) { removeLoadingSpinner () ; if ( ( status == ( uk.ac.ncl.csc2022.t14.bankingapp.server.live.json.JSONTaskStatus.PASSED ) ) && ( responseParser . parseLogin ( json ) ) ) { delegate . loginPassed ( uk.ac.ncl.csc2022.t14.bankingapp.Utilities.DataStore . sharedInstance () . getCurrentUser () ) ; } else { message = responseParser . parseErrorOrDefault ( message ) ; delegate . loginFailed ( message ) ; } } 
public static org.eclipse.core.resources.IFile getFile ( org.eclipse.jdt.core.IJavaElement element ) { org.eclipse.core.resources.IResource res = null ; try { while ( ( res = element . getCorrespondingResource () ) == null ) element = element . getParent () ; if ( res instanceof org.eclipse.core.resources.IFile ) return ( ( org.eclipse.core.resources.IFile ) ( res ) ) ; } catch ( org.eclipse.jdt.core.JavaModelException e ) { org.eclipse.etools.Activator . logError ( "Failed finding corresponding resource" , e ) ; } return null ; } 
@ java.lang.Override public void delete ( com.flxn.dao.model.Atribute object , int userid ) { if ( ( exist ( object . getId () ) ) && ( existOwner ( object . getId () , userid ) ) ) { jdbcTemplate . update ( com.flxn.dao.impl.DELETE_ATRIBUTE_BY_ID , new java.lang.Object [] { object . getId () } ) ; } else { throw new java.lang.UnsupportedOperationException () ; } } 
@ java.lang.Override public void onClick ( com.google.gwt.event.dom.client.ClickEvent event ) { java.lang.String fileName = this . fileUpload . getFilename () ; if ( ( fileName == null ) || ( fileName . isEmpty () ) ) { setStatusIcon ( CommonImages.INSTANCE . error () , true , true ) ; errorPanel . setErrorMessage ( "No file Selected" , "Please select a file and then press GO" ) ; return; } if ( this . projection . getValue () ) { form . setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS_PROJECTION ) ; } else { form . setAction ( org.reactome.web.pwp.client.tools.analysis.submitters.FileSubmitter.FORM_ANALYSIS ) ; } this . form . submit () ; } 
protected java.util.List < java.lang.String > splitQueryString ( java.lang.String query ) { final int qLen = query . length () ; java.util.List < java.lang.String > blocks = new java.util.ArrayList < java.lang.String > () ; for ( int index = 0 ; ( index + ( seqSize ) ) < qLen ; index += window ) { blocks . add ( query . substring ( index , ( index + ( seqSize ) ) ) ) ; } return blocks ; } 
@ java.lang.Override public value.Value mul ( value.Value other ) { if ( ( ! ( isSet () ) ) || ( ! ( other . isSet () ) ) ) { return new value.IntegerValue () ; } return new value.IntegerValue ( ( ( value ) * ( ( ( value.IntegerValue ) ( other ) ) . getValue () ) ) ) ; } 
public static android.graphics.Bitmap resizeImage ( android.graphics.Bitmap unscaledBitmap , int desiredWidth , int desiredHeight ) throws java.io.IOException { try { if ( ! ( ( ( unscaledBitmap . getWidth () ) <= desiredWidth ) && ( ( unscaledBitmap . getHeight () ) <= desiredHeight ) ) ) { android.graphics.Bitmap scaledBitmap = com.scanlibrary.ScalingUtilities . createScaledBitmap ( unscaledBitmap , desiredWidth , desiredHeight , ScalingLogic.FIT ) ; return scaledBitmap ; } else { return unscaledBitmap ; } } catch ( java.lang.Throwable e ) { throw new java.io.IOException ( e ) ; } } 
public int find ( int x , int [] data , int start , int end ) { if ( end > start ) for ( int i = start ; i <= end ; i ++ ) if ( ( data [ i ] ) == x ) return i ; return - 1 ; } 
@ java.lang.Override public void onCreate () { super . onCreate () ; com.arsalan.garage.GarageApp.sGarageApp = this ; if ( ( ( com.arsalan.garage.utils.FlavorConstants.BUILD_TYPE ) == ( com.arsalan.garage.utils.AppConstants.BUILD_TYPE_DEVELOPMENT ) ) && ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.GINGERBREAD ) ) ) { android.os.StrictMode . setThreadPolicy ( new android.os.StrictMode.ThreadPolicy.Builder () . detectAll () . penaltyLog () . build () ) ; android.os.StrictMode . setVmPolicy ( new android.os.StrictMode.VmPolicy.Builder () . detectAll () . penaltyLog () . build () ) ; } initImageLoader ( this ) ; initLoaderHandler ( this ) ; } 
public void print ( int copies ) { java.lang.String onStatus = "" ; if ( isOn ) onStatus = " is on!" ; else onStatus = " is off!" ; java.lang.String textToPrint = ( modelNumber ) + onStatus ; while ( ( copies > 0 ) && ( ! ( paperTray . isEmpty () ) ) ) { java.lang.System.out . println ( textToPrint ) ; copies -- ; } if ( paperTray . isEmpty () ) java.lang.System.out . println ( "Load more paper" ) ; } 
@ java.lang.Override public team379.pathfinding.PathFindResult move ( battlecode.common.RobotController rc ) throws java.lang.Exception { if ( ( ( compassDirection ) == null ) || ( ( getTarget () ) == null ) ) { calculateNextTarget ( true ) ; } else { int distanceSquared = getTarget () . distanceSquaredTo ( rc . getLocation () ) ; double distance = java.lang.Math . sqrt ( distanceSquared ) ; if ( distance < ( team379.pathfinding.Orbiter.DISTANCE_THRESHOLD ) ) { calculateNextTarget ( true ) ; } } return super . move ( rc ) ; } 
@ java.lang.Override public void onConnected ( @ android.support.annotation.Nullable android.os.Bundle bundle ) { mLocationRequest = new com.google.android.gms.location.LocationRequest () ; mLocationRequest . setInterval ( 1000 ) ; mLocationRequest . setFastestInterval ( 1000 ) ; mLocationRequest . setPriority ( LocationRequest.PRIORITY_HIGH_ACCURACY ) ; if ( ( android.support.v4.content.ContextCompat . checkSelfPermission ( this , Manifest.permission.ACCESS_FINE_LOCATION ) ) == ( android.content.pm.PackageManager.PERMISSION_GRANTED ) ) { LocationServices.FusedLocationApi . requestLocationUpdates ( mGoogleApiClient , mLocationRequest , this ) ; } } 
@ org.bukkit.event.EventHandler public void onSign ( org.bukkit.event.block.SignChangeEvent e ) { if ( e . getLine ( 0 ) . equalsIgnoreCase ( "[atm]" ) ) { e . setLine ( 0 , ( ( org.bukkit.ChatColor.DARK_GRAY ) + "== ATM ==" ) ) ; e . setLine ( 1 , ( ( ( ( org.bukkit.ChatColor.GREEN ) + "> " ) + ( org.bukkit.ChatColor.DARK_GRAY ) ) + "Withdraw" ) ) ; e . setLine ( 2 , ( ( org.bukkit.ChatColor.BLACK ) + "Deposit" ) ) ; e . setLine ( 3 , ( ( org.bukkit.ChatColor.DARK_GRAY ) + "Click for Balance" ) ) ; } } 
private void changes ( java.util.List < org.jasr.currentcy.domain.Sample > changes , java.util.List < org.jasr.currentcy.domain.Sample > samples , org.jasr.currentcy.domain.Currencies currency ) { java.util.List < org.jasr.currentcy.domain.Sample > snapshots = samplerDAO . getSnapshot ( currency ) ; for ( org.jasr.currentcy.domain.Sample sample1 : samples ) { boolean result = false ; for ( org.jasr.currentcy.domain.Sample sample2 : snapshots ) { result = result || ( sample1 . equals ( sample2 ) ) ; } if ( ! result ) { changes . add ( sample1 ) ; } } } 
@ java.lang.Override public void modifyText ( org.eclipse.swt.events.ModifyEvent e ) { if ( ( descriptionText . getText () . length () ) == 0 ) { commentStatus = createStatus ( IStatus.WARNING , org.talend.metadata.managment.ui.i18n.Messages . getString ( "PropertiesWizardPage.EmptyDescWarning" ) ) ; } else { commentStatus = createOkStatus () ; } property . setDescription ( org.apache.commons.lang.StringUtils . trimToNull ( descriptionText . getText () ) ) ; property . setModificationDate ( new java.util.Date () ) ; updatePageStatus () ; } 
public void writeTo ( final java.io.OutputStream outStream ) throws java.io.IOException { if ( ( ( progressHandler ) != null ) || ( ( cancellationHandler ) != null ) ) { writeWithNotify ( outStream ) ; } else { outStream . write ( this . b , this . offset , this . len ) ; } outStream . flush () ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/datatype/{id}/html" , method = org.springframework.web.bind.annotation.RequestMethod.GET , produces = "text/html" ) public java.lang.String getDatatypeAsHtml ( @ org.springframework.web.bind.annotation.PathVariable ( value = "id" ) java.lang.String id ) throws gov.nist.healthcare.tools.hl7.v2.igamt.lite.web.exception.DataNotFoundException { gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.Datatype datatype = datatypeService . findById ( id ) ; if ( ( datatype != null ) && ( datatype . getScope () . equals ( SCOPE.HL7STANDARD ) ) ) { return exportService . exportDataModelAsHtml ( datatype ) ; } return null ; } 
private static int getNumberOfWeeksOfYear ( int year ) { java.util.Calendar c = java.util.Calendar . getInstance () ; c . set ( java.util.Calendar.YEAR , year ) ; c . set ( java.util.Calendar.MONTH , java.util.Calendar.DECEMBER ) ; c . set ( java.util.Calendar.DAY_OF_MONTH , 31 ) ; int ordinalDay = c . get ( java.util.Calendar.DAY_OF_YEAR ) ; int weekDay = ( c . get ( java.util.Calendar.DAY_OF_WEEK ) ) - 1 ; return ( ( ordinalDay - weekDay ) + 10 ) / 7 ; } 
public void actionPerformed ( java.awt.event.ActionEvent aEvt ) { java.lang.String tag = org.broad.igv.ui.util.MessageUtils . showInputDialog ( "Enter tag" , renderOptions . getGroupByTag () ) ; if ( ( tag != null ) && ( ( tag . trim () . length () ) > 0 ) ) { renderOptions . setGroupByTag ( tag ) ; org.broad.igv.ui.IGV . getInstance () . groupAlignmentTracks ( org.broad.igv.sam.AlignmentTrack.GroupOption.TAG , tag , null ) ; org.broad.igv.sam.AlignmentTrack . refresh () ; } } 
@ java.lang.Override public void onItemSelected ( android.widget.AdapterView < ? > parent , android.view.View view , int pos , long id ) { android.util.Log . d ( ru.chernysh.plasmatorchsetup.MainActivity.LOG_TAG , ( "Selection in model spinner with pos = " + pos ) ) ; ru.chernysh.plasmatorchsetup.CustomAdapter adapter = ( ( ru.chernysh.plasmatorchsetup.CustomAdapter ) ( parent . getAdapter () ) ) ; if ( adapter != null ) { adapter . setSelected ( true ) ; int selectedKey = adapter . getKey ( pos ) ; } } 
public void EntityDeathHelper ( org.bukkit.event.entity.EntityDeathEvent event , int damage , java.lang.Double droprate ) { java.lang.Double dropchance = prng . nextDouble () ; org.bukkit.entity.Player killer = event . getEntity () . getKiller () ; if ( dropchance >= droprate ) { return; } if ( ( plugin.configFile . getBoolean ( "mobpkonly" ) ) && ( ( killer == null ) || ( ! ( killer . hasPermission ( "playerheads.canbeheadmob" ) ) ) ) ) { return; } event . getDrops () . add ( org.shininet.bukkit.playerheads.Skull . getItemStack ( damage ) ) ; } 
private void parseCoordinateMetadata ( com.fasterxml.jackson.core.JsonParser jp ) throws java.io.IOException { jp . nextToken () ; jp . nextToken () ; jp . nextToken () ; if ( ( jp . getCurrentToken () ) != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { jp . nextToken () ; } jp . nextToken () ; } 
private int getInternalIndexOfObjectAt ( int index ) throws java.lang.IndexOutOfBoundsException { int nbObjectsSoFar = 0 ; int pos = 0 ; while ( nbObjectsSoFar < index ) { jumpingalien.model.Characters currentObject = objects . get ( pos ) ; if ( ( currentObject != null ) && ( ( objects . indexOf ( currentObject ) ) == pos ) ) nbObjectsSoFar ++ ; pos ++ ; } return pos - 1 ; } 
@ org.junit.Test public void testUnmarshal () { java.lang.String text = ( "<converterTest>\n  " + ( xmlLine ) ) + "\n</converterTest>" ; org.zetool.components.property.converter.AbstractConverterTest.DataHolder dh = ( ( org.zetool.components.property.converter.AbstractConverterTest.DataHolder ) ( xstream . fromXML ( text ) ) ) ; org.junit.Assert . assertThat ( dh.property , org.hamcrest.CoreMatchers . is ( org.zetool.components.property.converter.AbstractConverterTest . equalTo ( property ) ) ) ; org.junit.Assert . assertThat ( dh.property . getValue () , org.hamcrest.CoreMatchers . is ( org.hamcrest.CoreMatchers . equalTo ( property . getValue () ) ) ) ; } 
@ java.lang.Override public java.lang.Object getNewValue () { if ( null != ( dataSource ) ) { return dataSource ; } try { long id = ( ( java.lang.Long ) ( super . getNewValue () ) ) ; dataSource = org.sleuthkit.autopsy.casemodule.Case . getCurrentCase () . getSleuthkitCase () . getContentById ( id ) ; return dataSource ; } catch ( java.lang.IllegalStateException | org.sleuthkit.datamodel.TskCoreException ex ) { org.sleuthkit.autopsy.casemodule.events.DataSourceAddedEvent.logger . log ( java.util.logging.Level.SEVERE , "Error doing lazy load for remote event" , ex ) ; return null ; } } 
public void initialise () { android.content.SharedPreferences settings = getSharedPreferences ( "prefs_settings" , 0 ) ; gameplayclass.lives = settings . getInt ( "lives" , 7 ) ; android.widget.TextView lives_view = ( ( android.widget.TextView ) ( findViewById ( R.id.in_game_lives ) ) ) ; lives_view . setText ( ( "Lives: " + ( gameplayclass.lives ) ) ) ; gameplayclass . initiate_blank_spaces ( this ) ; } 
public void setEndTime ( java.time.LocalTime end_time2 ) { if ( end_time2 == null ) { java.time.LocalTime localtime = java.time.LocalTime.MAX ; end_time_string = "" ; } else { end_time_string = end_time2 . format ( seedu.ticktask.model.task.DueTime.TIME_FORMAT ) . toString () ; end_time = end_time2 ; if ( ( end_time ) != null ) { value = ( ( getStartTime () ) + " - " ) + ( getEndTime () ) ; } else { value = getStartTime () ; } } } 
public static boolean checkWinX ( char dot ) { for ( int i = 0 ; i <= 1 ; i ++ ) { for ( int j = 0 ; j <= 1 ; j ++ ) { if ( ( j == 0 ) && ( i == 0 ) ) continue; if ( TicTacToe . checkLine ( TicTacToe.lastX , TicTacToe.lastY , i , j , TicTacToe.ROW_FOR_WIN , dot ) ) return true ; } } return false ; } 
protected static void addMethodUse ( java.util.Set < com.github.juanmf.java2plant.structure.Relation > relations , java.lang.Class < ? > fromType , java.lang.reflect.Type fromParameterType , java.lang.reflect.Method m ) { java.lang.String name = ( com.github.juanmf.java2plant.util.TypesHelper . getSimpleName ( m . getName () ) ) + "()" ; com.github.juanmf.java2plant.Parser . addUse ( relations , fromType , fromParameterType , m , name ) ; } 
public static int code ( java.lang.String format ) { try { int index = ygoprocardmaker.enumerate.CardFormat.FORMATS . indexOf ( format ) ; if ( index == ( - 1 ) ) { throw new java.lang.IllegalArgumentException () ; } return index + 1 ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException () ; } } 
@ play.db.jpa.Transactional public static controllers.Result index () { models.Admin admin = controllers.SGDB . getAdmin ( session () . get ( "login" ) ) ; if ( admin != null ) { return ok ( index . render ( admin ) ) ; } return controllers.Application . home () ; } 
void changeMaxRange () { try { if ( ( java.lang.Double . valueOf ( wRangeMaxValue . getText () ) ) < ( minRange ) ) alertBackground ( wRangeMaxValue , true ) ; else { alertBackground ( wRangeMaxValue , false ) ; maxRange = java.lang.Double . valueOf ( wRangeMaxValue . getText () ) ; trainPerceptron () ; } } catch ( java.lang.NumberFormatException e ) { alertBackground ( wRangeMaxValue , true ) ; maxRange = 0.5F ; } } 
protected void setMetaData () { boolean showOSD = preferences . getBoolean ( "internal_player_osd" , true ) ; if ( showOSD ) { mediaController . show ( SerenitySurfaceViewVideoActivity.CONTROLLER_DELAY ) ; } if ( ( progressReportingHandler ) != null ) { progressReportingHandler . postDelayed ( progressRunnable , 5000 ) ; } } 
@ java.lang.Override public void onDelete () { if ( com.google.gwt.user.client.Window . confirm ( ( ( "Are you sure you want to delete " + ( candidate . getName () ) ) + " ?" ) ) ) { dispatch . execute ( adminService . removeCandidate ( candidate . getId () ) , new com.arcbees.bourseje.client.AdminRestCallback < java.lang.Void > () { @ java.lang.Override public void onSuccess ( java.lang.Void result ) { removeFromParentSlot () ; } } ) ; } } 
protected static java.lang.String getRoomName ( java.util.ArrayList < main.java.com.marist.mscs721.Room > rooms ) { boolean inputCheck = false ; java.lang.String test = "" ; while ( ! inputCheck ) { java.lang.System.out . println ( "Room Name?" ) ; test = main.java.com.marist.mscs721.RoomScheduler.keyboard . next () ; java.lang.System.out . println ( main.java.com.marist.mscs721.RoomScheduler . findRoomIndex ( rooms , test ) ) ; if ( ( main.java.com.marist.mscs721.RoomScheduler . findRoomIndex ( rooms , test ) ) == ( - 1 ) ) { java.lang.System.out . println ( "ERROR: Invalid room. Please input a room that is on the room list." ) ; } else { inputCheck = true ; } } return test ; } 
public java.util.List < taxiservice.payments.models.PaymentsHistory > getPaymentsForClients ( long clientId ) throws taxiservice.payments.exceptions.NonExistingClientException { openSession () ; taxiservice.payments.models.Wallet clientWallet = getClientWallet ( clientId ) ; java.lang.String hql = "FROM PaymentsHistory WHERE wallet =" + ( clientWallet . getId () ) ; org.hibernate.Query query = session . createQuery ( hql ) ; java.util.List < taxiservice.payments.models.PaymentsHistory > result = query . list () ; closeSession () ; return result ; } 
private void extract ( com.griaule.grfingerjava.FingerprintImage fingerprintImage ) { try { template = matchingContext . extract ( fingerprintImage ) ; if ( ( fingerprintingComponent ) != null ) { fingerprintingComponent . showImage ( fingerprintImage ) ; fingerprintingComponent . showQuality ( template . getQuality () ) ; } } catch ( com.griaule.grfingerjava.GrFingerJavaException e ) { showMessage ( e . getMessage () ) ; } } 
public void increaseImage ( double increasment ) { if ( ( ( this . getAirline () . getImage () ) + ( increasment * ( this . getEfficiency () ) ) ) <= 100 ) { this . getAirline () . setImage ( ( ( this . getAirline () . getImage () ) + ( increasment * ( this . getEfficiency () ) ) ) ) ; } else { this . getAirline () . setImage ( 100.0 ) ; } } 
@ java.lang.Override public java.lang.Object retrieve ( sif3.common.model.SIFZone zone , sif3.common.model.SIFContext context , sif3.common.model.PagingInfo pagingInfo , sif3.common.model.RequestMetadata metadata ) throws sif3.common.exception.PersistenceException , sif3.common.exception.UnsupportedQueryException { logger . debug ( ( ( ( "Retrieve Students for " + ( getZoneAndContext ( zone , context ) ) ) + " and RequestMetadata = " ) + metadata ) ) ; java.util.ArrayList < sif.dd.au30.model.StudentPersonalType > studentList = fetchStudents ( systemic.sif3.demo.rest.provider.StudentPersonalProvider.students , pagingInfo ) ; sif.dd.au30.model.StudentCollectionType studentCollection = dmObjectFactory . createStudentCollectionType () ; if ( studentList != null ) { studentCollection . getStudentPersonal () . addAll ( studentList ) ; return studentCollection ; } else { return null ; } } 
java.util.ArrayList < java.lang.Runnable > dependentStopped () { assert java.lang.Thread . holdsLock ( this ) ; final java.util.ArrayList < java.lang.Runnable > tasks ; synchronized ( this ) { final boolean leavingRestState = isStableRestState () ; if ( ( -- ( runningDependents ) ) != 0 ) { return new java.util.ArrayList < java.lang.Runnable > () ; } tasks = new java.util.ArrayList < java.lang.Runnable > () ; transition ( tasks ) ; asyncTasks += tasks . size () ; updateStabilityState ( leavingRestState ) ; } return tasks ; } 
public static me.enerccio.sp.types.PythonObject getGlobal ( java.lang.String variable ) { if ( ( ( PythonInterpreter.interpreter . get () ) == null ) || ( ( PythonInterpreter.interpreter . get () . currentFrame . size () ) == 0 ) ) return PythonRuntime.runtime . getGlobals () . doGet ( variable ) ; return PythonInterpreter.interpreter . get () . environment () . get ( variable , true , false ) ; } 
public void onClick ( android.view.View v ) { mDatabase . getReference ( ( ( "beacon/" + ( item.devAddress ) ) + "/" ) ) . child ( "isLost" ) . setValue ( false ) ; mDatabase . getReference ( "lost_items/" ) . child ( item.devAddress ) . removeValue () ; item.isLost = false ; } 
public static java.lang.String timestampToDate ( java.lang.String timestamp ) { java.lang.Long unixtimestamp = java.lang.Long . parseLong ( timestamp ) ; if ( "4294967295" . equals ( unixtimestamp ) ) { return "" ; } java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat ( "yyyy-MM-dd-HH:mm" ) ; java.util.Date date = new java.util.Date ( ( unixtimestamp * 1000 ) ) ; return new java.text.SimpleDateFormat ( "dd/MM/yyyy - HH:mm" ) . format ( date ) ; } 
public org.exist.xquery.functions.array.Sequence tail ( ) throws org.exist.xquery.functions.array.XPathException { if ( ( vector . length () ) == 2 ) { final org.exist.xquery.functions.array.Sequence tail = vector . nth ( 1 ) ; return new org.exist.xquery.functions.array.ArrayType ( context , tail ) ; } return new org.exist.xquery.functions.array.ArrayType ( context , org.exist.xquery.functions.array.RT . subvec ( vector , 1 , vector . length () ) ) ; } 
public view.ISprite [] [] digDown ( int colonne , int ligne , view.ISprite sprite ) { this . sprites [ ligne ] [ colonne ] = new view.Sprite ( image , ( colonne * ( SET_SIZE ) ) , ( ligne * ( SET_SIZE ) ) ) ; sprite . setY ( ( ( sprite . getY () ) + 16 ) ) ; this . sprites [ ( ligne + 1 ) ] [ colonne ] = sprite ; return this . sprites ; } 
private void assembleTaskAndSave () { task . setName ( nameEdit . getText () . toString () . trim () ) ; task . setDescription ( descriptionEdit . getText () . toString () . trim () ) ; if ( ( lastSelectedTag ) != null ) { task . setTagId ( lastSelectedTag . getId () ) ; } else { task . setTagId ( null ) ; } if ( canComplete () ) { saveTask () ; finishAndStartRightActivity () ; } } 
@ java.lang.Override public void onPointerCancel ( playn.core.Pointer.Event event ) { if ( ( ( start ) == 0 ) || ( ! ( untransing ) ) ) return; _udir . update ( _cur.screen , _prev.screen , 0 ) ; _prev.screen.layer . setVisible ( false ) ; _udir . finish ( _cur.screen , _prev.screen ) ; clear () ; } 
@ java.lang.Override public void onFinish ( java.lang.Boolean success ) { if ( ( parentFragment . isAdded () ) && ( ( getTitle () ) != null ) ) { parentFragment . setPageSaved ( success ) ; org.wikipedia.util.FeedbackUtil . showMessage ( getActivity () , getActivity () . getString ( ( success ? R.string.snackbar_saved_page_format : R.string.snackbar_saved_page_missing_images ) , getTitle () ) ) ; } } 
public void paintComponent ( java.awt.Graphics g ) { super . paintComponent ( g ) ; if ( ( dt ) != null ) { currentPos = new int [ ( kb . getAttributeList () . size () ) - 1 ] ; for ( int i = 0 ; i < ( currentPos.length ) ; i ++ ) currentPos [ i ] = 0 ; drawTree ( g , dt ) ; } } 
public java.lang.String getUserIdBySpecificIdAndDomainId ( org.silverpeas.core.admin.domain.DomainDriverManager ddManager , java.lang.String sSpecificId , java.lang.String sDomainId ) throws org.silverpeas.core.admin.service.AdminException { try { ddManager . getOrganizationSchema () ; org.silverpeas.core.admin.persistence.UserRow ur = ddManager . getOrganization () . user . getUserBySpecificId ( idAsInt ( sDomainId ) , sSpecificId ) ; return ur != null ? idAsString ( ur.id ) : null ; } catch ( java.lang.Exception e ) { throw new org.silverpeas.core.admin.service.AdminException ( failureOnGetting ( ( "user with specific id " + sSpecificId ) , ( "in domain " + sDomainId ) ) , e ) ; } finally { ddManager . releaseOrganizationSchema () ; } } 
private void adaptPortBindingToParallelRun ( org.arquillian.cube.docker.impl.client.config.CubeContainer cubeContainer ) { final java.util.Collection < org.arquillian.cube.docker.impl.client.config.PortBinding > portBindings = cubeContainer . getPortBindings () ; if ( portBindings == null ) { return; } for ( org.arquillian.cube.docker.impl.client.config.PortBinding portBinding : portBindings ) { final int randomPrivatePort = generateRandomPrivatePort () ; portBinding . setBound ( randomPrivatePort ) ; } } 
@ java.lang.Override public java.lang.String decode ( java.lang.String plain ) { java.lang.String decrypted = "" ; for ( char letter : plain . toUpperCase () . toCharArray () ) { int index = com.soesec.util.Alphabet . IndexOf ( letter ) ; if ( index < 0 ) { decrypted += letter ; continue; } int i = index - ( info . getRightShift () ) ; if ( i < 0 ) { i = 26 + i ; } i = i % 26 ; decrypted += com.soesec.util.Alphabet . At ( i ) ; } return decrypted ; } 
private final void drawGrid ( android.graphics.Canvas canvas , float offset , int min ) { for ( int i = 0 ; i < ( ( com.gmail.wazappdotgithub.ships.common.Constants.DEFAULT_BOARD_SIZE ) + 1 ) ; i ++ ) { float itimeso = i * offset ; canvas . drawLine ( 0 , itimeso , min , itimeso , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; canvas . drawLine ( itimeso , 0 , itimeso , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } canvas . drawLine ( ( min - 1 ) , 0 , ( min - 1 ) , min , com.gmail.wazappdotgithub.ships.model.views.BoardView.foregroundPaint ) ; } 
public void reset () { bufferPos = 0 ; f0 = 0L ; t0 = 0L ; t1 = 0L ; chainValue = null ; org.bouncycastle.util.Arrays . fill ( buffer , ( ( byte ) ( 0 ) ) ) ; if ( ( key ) != null ) { java.lang.System . arraycopy ( key , 0 , buffer , 0 , key.length ) ; bufferPos = org.bouncycastle.crypto.digests.Blake2bDigest.BLOCK_LENGTH_BYTES ; } init () ; } 
java.lang.String prepareLdapAuth () { java.lang.String ldapAuth = "true" ; java.lang.String confLdapAuth = env . getProperty ( "ldap.authentication" ) ; if ( ( confLdapAuth != null ) && ( ! ( confLdapAuth . isEmpty () ) ) ) { ldapAuth = confLdapAuth ; } if ( ( ! ( ldapAuth . equalsIgnoreCase ( "true" ) ) ) && ( ! ( ldapAuth . equalsIgnoreCase ( "false" ) ) ) ) { ldapAuth = "true" ; } return ldapAuth ; } 
public void setDevPanStatusPowerConnection ( boolean powerOn ) { if ( powerOn == ( devPanStatusPowerOn ) ) { return; } devPanStatusPowerOn = powerOn ; sensorConnectionStatus . setText ( ( devPanStatusPowerOn ? R.string.sensor_connection_on : R.string.sensor_connection_off ) ) ; if ( ( currentFragment ) == ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.MULTIPLE . ordinal () ) ) { setPage ( ru.neurotech.hrvstress.views.MainView.PAGE_INDEX.DEVICE_STATUS ) ; } } 
public int getYLocation ( int position , com.edulectronics.tinycircuit.Models.Components.Connectors.ConnectionPointOrientation orientation ) { switch ( orientation ) { case Left : case Right : return ( ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ) + ( ( int ) ( 0.5 * ( cellSize ) ) ) ; case Top : return ( ( getRow ( position ) ) - 1 ) * ( cellSize ) ; default: return ( getRow ( position ) ) * ( cellSize ) ; } } 
private void friendName () { waitSentence ( "\"Is this your friend\"?" ) ; while ( nameFriend ) { waitSentence ( "\"What is his name?\"" ) ; java.lang.String userInput = readKeyboardInput . nextLine () ; waitSentence ( ( ( "\"His name is " + userInput ) + "?\"" ) ) ; userInput = readKeyboardInput . nextLine () ; if ( userInput . equalsIgnoreCase ( "Yes" ) ) { waitSentence ( "\"Thats a nice name too\"" ) ; nameFriend = false ; } } } 
public domain.Coordenada getEsquerra ( int color ) throws java.lang.Exception { int x = ( this . x ) + 1 ; int y ; if ( color == 0 ) y = ( this . y ) + 1 ; else y = ( this . y ) - 1 ; return new domain.Coordenada ( x , y ) ; } 
public java.util.List < java.lang.Double > prodOfLists ( java.util.List < java.lang.Double > xList , java.util.List < java.lang.Double > yList ) { java.util.List < java.lang.Double > resList = new java.util.ArrayList < java.lang.Double > () ; int size = xList . size () ; for ( int i = 0 ; i < size ; i ++ ) { resList . add ( i , ( ( xList . get ( i ) ) * ( yList . get ( i ) ) ) ) ; } return resList ; } 
@ java.lang.Override public void onActionFailure ( int action , @ android.support.annotation.Nullable com.tomeokin.lspush.data.model.BaseResponse response , java.lang.String message ) { if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_CHECK_UID_EXISTED ) ) { if ( ( response != null ) && ( ( response . getResultCode () ) == 10 ) ) { mUIDAdapter . info () ; mNotificationBar . showTemporaryInverse ( getString ( R.string.uid_not_unique ) ) ; } else { mNotificationBar . showTemporaryInverse ( message ) ; } } else if ( action == ( com.tomeokin.lspush.biz.auth.RegisterFragment.ACTION_REGISTER ) ) { mNotificationBar . showTemporaryInverse ( message ) ; } } 
public static java.util.List < java.lang.Integer > shuffle ( java.util.List < ? > list , int count ) { java.util.List < java.lang.Integer > listClone = new java.util.ArrayList <> () ; for ( int i = 0 ; i < ( list . size () ) ; ++ i ) { listClone . add ( i ) ; } if ( ( list . size () ) == count ) { return listClone ; } java.util.Collections . shuffle ( listClone ) ; return listClone . subList ( 0 , count ) ; } 
@ java.lang.Override public java.io.InputStream newInputStream ( nl.esciencecenter.xenon.files.Path path ) throws nl.esciencecenter.xenon.XenonException { java.lang.String filePath = toFilePath ( path . toString () ) ; assertRegularFileExists ( path ) ; org.apache.commons.httpclient.HttpClient client = getFileSystemByPath ( path ) ; org.apache.commons.httpclient.methods.GetMethod method = new org.apache.commons.httpclient.methods.GetMethod ( filePath ) ; try { client . executeMethod ( method ) ; return method . getResponseBodyAsStream () ; } catch ( java.io.IOException e ) { throw new nl.esciencecenter.xenon.XenonException ( adaptor . getName () , ( "Could not open inputstream to " + filePath ) , e ) ; } } 
@ java.lang.Override public void onComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < com.google.firebase.auth.AuthResult > task ) { android.util.Log . d ( com.glocoders.hangout.database.FirebaseHelper.TAG , ( "signInWithEmail:onComplete:" + ( task . isSuccessful () ) ) ) ; if ( ( task . isSuccessful () ) == false ) { android.util.Log . w ( com.glocoders.hangout.database.FirebaseHelper.TAG , "signInWithEmail:failed" , task . getException () ) ; code = - 1 ; } else { code = 1 ; } } 
private datastructures.BugSummary handleBugSummary () { datastructures.BugSummary summary = new datastructures.BugSummary () ; try { while ( reader . hasNext () ) { if ( ( reader . next () ) == ( javax.xml.stream.events.XMLEvent.START_ELEMENT ) ) { if ( Constants.BUG_CATEGORY . equals ( reader . getLocalName () ) ) { summary . add ( handleBugCategory () ) ; } } else { if ( isEndElement ( Constants.BUG_SUMMARY ) ) { break; } } } } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return summary ; } 
static boofcv.alg.feature.detect.squares.SquareNode pickNot ( boofcv.alg.feature.detect.squares.SquareNode target , boofcv.alg.feature.detect.squares.SquareNode child0 , boofcv.alg.feature.detect.squares.SquareNode child1 ) { for ( int i = 0 ; i < 4 ; i ++ ) { boofcv.alg.feature.detect.squares.SquareEdge e = target.edges [ i ] ; if ( e == null ) continue; boofcv.alg.feature.detect.squares.SquareNode c = e . destination ( target ) ; if ( ( c != child0 ) && ( c != child1 ) ) return c ; } throw new java.lang.RuntimeException ( "There was no odd one out some how" ) ; } 
@ java.lang.Override public D getDef ( org.auraframework.def.DefDescriptor < D > descriptor ) throws org.auraframework.throwable.quickfix.QuickFixException { org.auraframework.system.Source < D > source = sourceFactory . getSource ( descriptor ) ; if ( ( source != null ) && ( source . exists () ) ) { org.auraframework.system.Parser < D > parser = org.auraframework.impl.parser.ParserFactory . getParser ( source . getFormat () , descriptor ) ; D def = parser . parse ( descriptor , source ) ; return def ; } return null ; } 
public void myTick ( long mils ) { if ( ( mils % 1000 ) == 0 ) { int minsRemaining = ( ( int ) ( mils ) ) / 60000 ; int secsRemaining = ( ( ( int ) ( mils ) ) / 1000 ) % 60 ; java.lang.String time = ( ( java.lang.Integer . toString ( minsRemaining ) ) + ":" ) + ( java.lang.String . format ( "%02d" , secsRemaining ) ) ; timeRemaining . setText ( time ) ; } timeInMilis = mils ; } 
@ java.lang.Override public boolean doesSideBlockRendering ( net.minecraft.block.state.IBlockState state , net.minecraft.world.IBlockAccess world , net.minecraft.util.math.BlockPos pos , net.minecraft.util.EnumFacing face ) { com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers tile = getTileEntity ( world , pos ) ; if ( ( tile != null ) && ( tile . getEffectiveMaterialSide () . isEmpty () ) ) return false ; return super . doesSideBlockRendering ( state , world , pos , face ) ; } 
@ java.lang.Override public void run () { if ( ( ( animator ) != null ) && ( animator . isStarted () ) ) { animator . stop () ; } if ( ( renderer ) != null ) { renderer . dispose ( window ) ; } window = null ; renderer = null ; view = null ; animator = null ; } 
private org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata getMeta ( uk.ac.diamond.scisoft.analysis.processing.operations.twod.DiffractionMetadataImportModel mod , org.eclipse.dawnsci.analysis.api.dataset.ILazyDataset parent , java.lang.String name ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata lmeta = metadata ; if ( lmeta == null ) { synchronized ( this ) { lmeta = metadata ; if ( lmeta == null ) { org.eclipse.dawnsci.analysis.api.metadata.IDiffractionMetadata md = uk.ac.diamond.scisoft.analysis.io.NexusDiffractionCalibrationReader . getDiffractionMetadataFromNexus ( mod . getFilePath () , parent , name ) ; if ( md == null ) throw new org.eclipse.dawnsci.analysis.api.processing.OperationException ( this , "File does not contain metadata" ) ; metadata = lmeta = md ; } } } return lmeta ; } 
public void onCraftMatrixChanged ( net.minecraft.inventory.IInventory inv ) { for ( int i = 0 ; i < ( inv . getSizeInventory () ) ; i ++ ) { this . te . setInventorySlotContents ( ( i + 1 ) , inv . getStackInSlot ( i ) ) ; } if ( ( this . craftMatrix ) != null ) this . craftResult . setInventorySlotContents ( 0 , net.minecraft.item.crafting.CraftingManager . getInstance () . findMatchingRecipe ( this . craftMatrix , this . te . getWorldObj () ) ) ; } 
@ java.lang.Override public edu.cmu.tetrad.graph.Graph createGraph ( edu.cmu.tetrad.util.Parameters parameters ) { return edu.cmu.tetrad.graph.GraphUtils . randomGraphRandomForwardEdges ( ( ( parameters . getInt ( "numMeasures" ) ) + ( parameters . getInt ( "numLatents" ) ) ) , parameters . getInt ( "numLatents" ) , ( ( ( parameters . getInt ( "avgDegree" ) ) * ( parameters . getInt ( "numMeasures" ) ) ) / 2 ) , parameters . getInt ( "maxDegree" ) , parameters . getInt ( "maxIndegree" ) , parameters . getInt ( "maxOutdegree" ) , parameters . getBoolean ( "connected" ) ) ; } 
public static int eval ( Board board ) { int sum = 50 ; int score = board . isConnectN () ; if ( score == 1 ) { sum = 1000 ; } else if ( score == 2 ) { sum = - 1000 ; } else if ( score == ( - 1 ) ) {} return sum ; } 
public void deleteFloor ( int x , int y ) { for ( int scan = 0 ; scan < ( floors . size () ) ; scan ++ ) { if ( ( ( floors . get ( scan ) . xPosition ) == x ) && ( ( floors . get ( scan ) . yPosition ) == y ) ) { floors . remove ( scan ) ; } } } 
private void scrolling () { detectTouchEventConsumed () ; if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_DOWN ) ) { if ( isFirstViewVisible () ) { isBeingDraggedFromTop () ; } } if ( ( currentMode ) == ( client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.SCROLL_UP ) ) { if ( ( headerLayoutParams.height ) > ( heightOfActionBar ) ) { isBeingDraggedFromTop () ; } } } 
public java.lang.String displayContents () { java.lang.String contents = "" ; int index = 0 ; while ( index < ( size () ) ) { T data = get ( index ) ; if ( data != null ) { contents = ( ( ( ( contents + "[ " ) + index ) + " ]\t= " ) + data ) + "\n" ; } index ++ ; } return contents ; } 
public void markCompleted () { this . completed = true ; int pointsToAdd = ( ( int ) ( ( ( 10 * ( Task.POINT_RANGE [ ( ( this . importance ) - 1 ) ] ) ) * ( Task.POINT_RANGE [ ( ( this . difficulty ) - 1 ) ] ) ) * ( calculateEstimatedTimeMultiplier ( this . estimated_time ) ) ) ) ; User currentUser = User . findUser ( this . user_id ) ; int oldExp = currentUser . getUserExperience () ; currentUser . updateUserExperience ( ( oldExp + pointsToAdd ) ) ; } 
private void addClassPathToModule ( java.lang.String moduleName , org.eclipse.jdt.internal.core.builder.ClasspathLocation cp ) { if ( ( this . moduleToClassPathLocations ) != null ) { java.util.List < org.eclipse.jdt.internal.core.builder.ClasspathLocation > l = this . moduleToClassPathLocations . get ( moduleName ) ; if ( l == null ) { l = new java.util.ArrayList <> () ; this . moduleToClassPathLocations . put ( moduleName , l ) ; } l . add ( cp ) ; } } 
@ java.lang.Override public void run () { boolean end = false ; while ( ! end ) { if ( ( elements . size () ) > 0 ) { de.uni_hildesheim.sse.monitoring.runtime.recordingServer.RecordingStrategiesElement element = elements . remove ( 0 ) ; element . process ( strategy ) ; int id = element . getIdentification () ; element . release () ; end = ( Constants.ENDSYSTEM ) == id ; } else { java.lang.Thread . yield () ; } } printElementStatistics () ; } 
public model.player.Player getPlayer ( model.adventurers.AdventurerType advT ) { java.util.Iterator < model.player.Player > it = getPlayers () . iterator () ; model.player.Player p = null ; while ( ( it . hasNext () ) && ( ! ( ( p = it . next () ) . getCurrentAdventurer () . getADVENTURER_TYPE () . equals ( advT ) ) ) ) {} return p ; } 
public java.lang.String toString () { java.lang.String str = "" ; for ( int i = 0 ; i < ( data.length ) ; i ++ ) { str = ( ( ( str + "\n" ) + i ) + ": " ) + ( data [ i ] ) ; } return str ; } 
@ java.lang.Override public void onInit ( int initStatus ) { if ( initStatus == ( android.speech.tts.TextToSpeech.SUCCESS ) ) { tts . setLanguage ( java.util.Locale.US ) ; } else if ( initStatus == ( android.speech.tts.TextToSpeech.ERROR ) ) { android.widget.Toast . makeText ( activity , "Sorry! Text to Speech failed..." , Toast.LENGTH_LONG ) . show () ; } } 
public boolean containsKey ( java.lang.Object key ) { int pos = getHash ( key ) ; if ( ( table [ pos ] ) == null ) { return false ; } else { hashtable.HashTable.Node curr = table [ pos ] ; while ( curr != null ) { if ( curr.key . equals ( key ) ) { return true ; } curr = curr.next ; } return false ; } } 
private java.util.ArrayList < java.net.URL > mapToAbsolute ( org.jsoup.select.Elements anchors ) { java.util.ArrayList < java.net.URL > res = new java.util.ArrayList <> () ; for ( org.jsoup.nodes.Element a : anchors ) { java.net.URL u = com.codeforsanjose.blic.Crawler . parseUrl ( a . attr ( "abs:href" ) ) ; if ( u != null ) { res . add ( u ) ; } } return res ; } 
@ java.lang.Override public java.net.URL getResource ( java.lang.String name ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Trying to find resource '{}' in plugin classpath" , name ) ; java.net.URL url = findResource ( name ) ; if ( url != null ) { ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Found resource '{}' in plugin classpath" , name ) ; return url ; } ro.fortsoft.pf4j.IzouPluginClassLoader.log . debug ( "Couldn't find resource '{}' in plugin classpath. Delegating to parent" ) ; return super . getResource ( name ) ; } 
@ java.lang.Override @ cpw.mods.fml.relauncher.SideOnly ( value = cpw.mods.fml.relauncher.Side.CLIENT ) protected net.minecraft.util.IIcon getUnderlayIcon ( net.minecraft.world.IBlockAccess world , int x , int y , int z , int side ) { int meta = world . getBlockMetadata ( x , y , z ) ; org.pfaa.chemica.model.IndustrialMaterial host = this . getGeoMaterial ( meta ) . getHost () ; if ( host != null ) { net.minecraft.util.IIcon icon = getHostIcon ( world , x , y , z ) ; if ( icon != null ) { return icon ; } } return this . getUnderlayIcon ( side , meta ) ; } 
@ java.lang.Override public int linearIndex ( int i ) { setLinearStride () ; int idx = i ; for ( int j = 0 ; j < ( ( org.nd4j.linalg.api.shape.Shape . rank ( shapeInformation ) ) - 1 ) ; j ++ ) { if ( ( size ( i ) ) == 1 ) continue; idx += i * ( stride ( j ) ) ; } return ( org.nd4j.linalg.api.shape.Shape . offset ( shapeInfo () ) ) + idx ; } 
private org.nesty.core.httpserver.rest.controller.URLController findController () { org.nesty.core.httpserver.rest.URLResource resource = org.nesty.core.httpserver.rest.URLResource . fromHttp ( httpContext . getUri () , httpContext . getRequestMethod () ) ; org.nesty.core.httpserver.rest.controller.URLController controller ; if ( ( controller = controllerRouter . findURLController ( resource ) ) == null ) { sendResponse ( org.nesty.core.httpserver.rest.response.HttpResponseBuilder . create ( httpContext , HttpResponseStatus.NOT_FOUND ) ) ; org.nesty.core.httpserver.HttpServerStats . incrRequestMiss () ; return null ; } if ( ! ( controller . isInternal () ) ) { org.nesty.core.httpserver.HttpServerStats . incrRequestHit () ; controller . hit () ; } return controller ; } 
public java.util.List < com.xz.data.prepare.RawData > fetchData ( com.xz.data.syntax.TqlEntity tqlEntity , com.xz.data.syntax.TqlInterval tqlInterval ) { java.util.List < com.xz.data.prepare.RawData > result = com.google.common.collect.Lists . newArrayList () ; for ( int i = 1 ; i < 4 ; ++ i ) { result . add ( new com.xz.data.prepare.RawData ( i , null ) ) ; } return result ; } 
private javax.swing.ImageIcon getPokemonIcon ( java.lang.String pokemonImageString ) { java.awt.Image myImage ; javax.swing.ImageIcon myImageIcon = null ; try { myImage = javax.imageio.ImageIO . read ( getClass () . getResource ( ( ( utilities.Settings . POKEMON_IMAGES_ICON_FOLDER () ) + pokemonImageString ) ) ) ; myImageIcon = new javax.swing.ImageIcon ( myImage . getScaledInstance ( view.BoxPanel.iconSide , view.BoxPanel.iconSide , java.awt.Image.SCALE_SMOOTH ) ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } return myImageIcon ; } 
public static int addAssetPath ( android.content.res.AssetManager assets , java.lang.String path ) { if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) { net.wequick.small.util.ReflectAccelerator.sAddAssetPath = net.wequick.small.util.ReflectAccelerator . getMethod ( android.content.res.AssetManager . class , "addAssetPath" , new java.lang.Class [] { java.lang.String . class } ) ; } if ( ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath ) == null ) return 0 ; java.lang.Integer ret = net.wequick.small.util.ReflectAccelerator . invoke ( net.wequick.small.util.ReflectAccelerator.sAddAssetPath , assets , path ) ; if ( ret == null ) return 0 ; return ret ; } 
protected boolean isNotBeforeModuleDeclaration ( com.intellij.psi.PsiElement topmostElement ) { com.intellij.psi.PsiElement [] moduleKeywords = org.intellij.xquery.psi.impl.XQueryPsiImplUtil . findChildrenOfType ( topmostElement , XQueryTypes.K_MODULE ) ; com.intellij.psi.PsiElement nextModuleDeclaration = com.intellij.psi.util.PsiTreeUtil . getNextSiblingOfType ( topmostElement , org.intellij.xquery.psi.XQueryModuleDecl . class ) ; return ( ( moduleKeywords.length ) == 0 ) && ( nextModuleDeclaration == null ) ; } 
public void enqueueNoDependencies ( java.util.Set < eu.sqooss.service.scheduler.Job > jobs ) throws eu.sqooss.service.scheduler.SchedulerException { synchronized ( this ) { for ( eu.sqooss.service.scheduler.Job job : jobs ) { if ( ( logger ) != null ) logger . debug ( ( "Scheduler ServiceImpl: queuing job " + ( job . toString () ) ) ) ; job . callAboutToBeEnqueued ( this ) ; java.util.concurrent.Future < java.lang.Void > future = executorService . submit ( job ) ; job.future = future ; stats . addWaitingJob ( job . getClass () . toString () ) ; stats . incTotalJobs () ; } } } 
public void setLine ( int line , java.lang.String text ) { if ( ( text == null ) || ( text . isEmpty () ) ) { removeLine ( line ) ; return; } text = org.bukkit.ChatColor . translateAlternateColorCodes ( '&' , text ) ; if ( line >= ( armorStands . size () ) ) { addLine ( line , text ) ; return; } armorStands . get ( line ) . setCustomName ( text ) ; } 
@ java.lang.Override public void onScrollStateChanged ( android.widget.AbsListView view , int scrollState ) { if ( ( totalItemCount ) <= 1 ) { return; } if ( ( ( lastVisibleItem ) == ( totalItemCount ) ) && ( scrollState == ( SCROLL_STATE_IDLE ) ) ) { if ( ! ( isLoading ) ) { isLoading = true ; footerView . setVisibility ( View.VISIBLE ) ; onLoadListener . onLoad () ; } } } 
public int getRoomCost () { int roomCost = 0 ; switch ( roomType ) { case 'I' : roomCost = ( HospitalMVC.Patient.icRoomRate ) * ( days ) ; break; case 'P' : roomCost = ( HospitalMVC.Patient.privateRoomRate ) * ( days ) ; break; default: roomCost = ( HospitalMVC.Patient.doubleRoomRate ) * ( days ) ; break; } return roomCost ; } 
public android.view.View getView ( int pos , android.view.View v , android.view.ViewGroup p ) { android.widget.TextView view = new android.widget.TextView ( this ) ; view . setTextSize ( 25 ) ; if ( ( items ) != null ) { view . setText ( items . get ( pos ) . getText () ) ; } else { view . setText ( pos ) ; } return view ; } 
public void setOutcomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( incomingPortletCandidate ) == pc ) { incomingPortletCandidate = null ; } else if ( getChildComponents () . contains ( pc ) ) { outcomingPortletCandidate = pc ; } } 
public void setTemperature ( java.lang.String h ) { strTemperature = h ; if ( h != null ) { int i = strTemperature . indexOf ( '.' ) ; i = java.lang.Integer . parseInt ( strTemperature . substring ( 0 , i ) ) ; if ( i > ( maxTemp ) ) maxTemp = ( ( byte ) ( i ) ) ; } } 
public void onDestroy () { super . onDestroy () ; if ( ( lyricViewer ) != null ) { lyricViewer . dismiss () ; } if ( ( mRemoteTrackTime ) != null ) { mRemoteTrackTime . unregister () ; } try { if ( ( mTrackIntent ) != null ) { unregisterReceiver ( mTrackReceiver ) ; } if ( ( mStatusIntent ) != null ) { unregisterReceiver ( mStatusReceiver ) ; } } catch ( java.lang.Exception e ) {} } 
public boolean findItem ( java.lang.String item ) { boolean q = false ; java.lang.String name = item ; for ( int num = 0 ; num < 101 ; num ++ ) { if ( items [ num ] [ 0 ] . toLowerCase () . equals ( name . toLowerCase () ) ) { q = true ; } } return q ; } 
public static void register ( net.minecraft.block.Block block ) { if ( Config.debug ) java.lang.System.out . println ( ( "Registered " + ( block . getRegistryName () ) ) ) ; net.minecraftforge.fml.common.registry.GameRegistry . register ( block ) ; if ( ( ! ( shadows.plants.util.Util . isException ( block ) ) ) && ( ! ( block instanceof shadows.plants.block.internal.cosmetic.BlockDoubleHarvestable ) ) ) net.minecraftforge.fml.common.registry.GameRegistry . register ( new net.minecraft.item.ItemBlock ( block ) , block . getRegistryName () ) ; } 
@ java.lang.Override public void onTransactionChainFailed ( final org.opendaylight.controller.md.sal.common.api.data.TransactionChain < ? , ? > chain , final org.opendaylight.controller.md.sal.common.api.data.AsyncTransaction < ? , ? > transaction , final java.lang.Throwable cause ) { synchronized ( txLock ) { if ( ( org.opendaylight.openflowplugin.impl.device.TransactionChainManager.TransactionChainManagerStatus.WORKING ) == ( transactionChainManagerStatus ) ) { org.opendaylight.openflowplugin.impl.device.TransactionChainManager.LOG . warn ( "Transaction chain failed, recreating chain due to " , cause ) ; createTxChain ( chain ) ; wTx = null ; } } } 
private void setupSandbox () { org.commcare.util.mocks.MockUserDataSandbox sandbox = new org.commcare.util.mocks.MockUserDataSandbox ( mPrototypeFactory ) ; sandbox . setAppFixtureStorageLocation ( ( ( org.javarosa.core.services.storage.IStorageUtilityIndexed < org.javarosa.core.model.instance.FormInstance > ) ( org.javarosa.core.services.storage.StorageManager . getStorage ( FormInstance.STORAGE_KEY ) ) ) ) ; mSandbox = sandbox ; if ( ( mLocalUserCredentials ) != null ) { restoreUserToSandbox ( mSandbox , mLocalUserCredentials [ 0 ] , mLocalUserCredentials [ 1 ] ) ; } else if ( ( mRestoreFile ) != null ) { restoreFileToSandbox ( mSandbox , mRestoreFile ) ; } else { restoreDemoUserToSandbox ( mSandbox ) ; } } 
public void surfaceChanged ( android.view.SurfaceHolder holder , int format , int w , int h ) { if ( ( this . holder . getSurface () ) == null ) { return; } try { camera . stopPreview () ; camera . setPreviewDisplay ( holder ) ; camera . startPreview () ; } catch ( java.lang.Exception e ) { android.util.Log . d ( "Surface Changed" , ( "Error starting camera preview: " + ( e . getMessage () ) ) ) ; } } 
public static java.lang.String urlEncode ( java.lang.Object value ) { if ( value == null ) return null ; try { java.lang.String result = java.net.URLEncoder . encode ( value . toString () , "UTF-8" ) ; return result ; } catch ( java.io.UnsupportedEncodingException e ) { return null ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/films/addOrUpdate" ) public java.lang.String admin_films_addOrUpdate ( @ org.springframework.web.bind.annotation.RequestParam ( value = "id" , required = false , defaultValue = "null" ) java.lang.String id , org.springframework.ui.Model model ) { dao.FilmDb filmDb = new dao.FilmDb () ; if ( ! ( id . equals ( "null" ) ) ) { org.hibernate.Session session = hibernate.HibernateUtil . getSessionFactory () . openSession () ; filmDb = ( ( dao.FilmDb ) ( session . createQuery ( ( "from FilmDb f where f.id=" + id ) ) . list () . get ( 0 ) ) ) ; } model . addAttribute ( "film" , filmDb ) ; return "admin/films/addOrUpdate" ; } 
public int getProgress () { if ( ( getSize () ) > 0 ) { return isComplete () ? 100 : ( ( int ) ( ( ( bytesReceived ) * 100 ) / ( getSize () ) ) ) ; } else { return 0 ; } } 
private static boolean isKeyPressed ( net.minecraft.client.settings.KeyBinding instance ) { try { java.lang.reflect.Field field = net.minecraft.client.settings.KeyBinding . class . getDeclaredField ( "pressTime" ) ; field . setAccessible ( true ) ; java.lang.Object obj = field . get ( instance ) ; int c = ( ( java.lang.Integer ) ( obj ) ) ; if ( c > 0 ) { return true ; } } catch ( java.lang.Exception e ) {} return false ; } 
protected void selectItem ( int position ) { if ( ( mDrawerLayout ) != null ) { mDrawerLayout . closeDrawer ( mFragmentContainerView ) ; } com.jvanier.android.sendtocar.controllers.commands.Command handler = itemsList . get ( position ) . handler ; if ( handler != null ) { handler . perfrom ( getActivity () ) ; } } 
public boolean isCompatible ( thobe.logfileviewer.plugin.api.IPluginApiVersion versionOfPlugin ) { if ( ( versionOfPlugin . getMajorVersion () ) != ( getMajorVersion () ) ) { return false ; } if ( ( versionOfPlugin . getMinorVersion () ) < ( this . getMinorVersion () ) ) { return false ; } return true ; } 
public com.studiohartman.jamepad.ControllerState getState ( int index ) throws java.lang.IllegalStateException { verifyInitialized () ; if ( ( index < ( controllers.length ) ) && ( index > 0 ) ) { update () ; return com.studiohartman.jamepad.ControllerState . getInstanceFromController ( controllers [ index ] ) ; } else { return com.studiohartman.jamepad.ControllerState . getDisconnectedControllerInstance () ; } } 
@ java.lang.Override protected void onResume () { super . onResume () ; if ( ( com.facebook.AccessToken . getCurrentAccessToken () ) != null ) { android.content.Intent intent = new android.content.Intent ( this , map.minimap.MainActivity . class ) ; startActivity ( intent ) ; } com.facebook.appevents.AppEventsLogger . activateApp ( this ) ; } 
private void Disconnect () { if ( ( connectDevice ) == null ) BroadcastError ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.MBOTSERVICE_ERROR_NO_DEVICE_CONNECT ) ; else { try { socket . close () ; } catch ( java.io.IOException e ) {} android.bluetooth.BluetoothDevice device = connectDevice ; BroadcastResult ( Constants.MBOTSERVICE_DISCONNECT_RESULT_ACTION , Constants.BLUETOOTH_DEVICE , device ) ; Cleanup () ; serialAdapter . Shutdown () ; } } 
@ java.lang.Override public void reduce ( org.apache.hadoop.io.Text word , java.lang.Iterable < org.apache.hadoop.io.IntWritable > counts , com.moz.commoncrawl.Context context ) throws java.io.IOException , java.lang.InterruptedException { int sum = 0 ; for ( org.apache.hadoop.io.IntWritable count : counts ) { sum += count . get () ; } if ( ( ( threshold ) == ( - 1 ) ) || ( sum > ( threshold ) ) ) context . write ( word , new org.apache.hadoop.io.IntWritable ( sum ) ) ; } 
public void makeSmall () { for ( int i = 0 ; i < ( first.adapter.vList . size () ) ; i ++ ) { ( ( android.widget.TextView ) ( first.adapter.vList . get ( i ) ) ) . setTextSize ( TypedValue.COMPLEX_UNIT_SP , 70 ) ; } } 
private java.lang.String getChromosomalChange ( org.apache.commons.csv.CSVRecord record ) { return ( ( ( ( ( record . get ( options . getChr () ) ) + ":" ) + ( record . get ( options . getPos () ) ) ) + ( record . get ( options . getRef () ) ) ) + ">" ) + ( record . get ( options . getAlt () ) ) ; } 
@ java.lang.Override public void onSpinnerItemSelected ( android.widget.Spinner spinner , int position ) { if ( ( spinner . getId () ) == ( org.droidplanner.android.R.id.cameraFileSpinner ) ) { if ( cameraAdapter . isEmpty () ) return; com.o3dr.services.android.lib.drone.mission.item.complex.CameraDetail cameraInfo = cameraAdapter . getItem ( position ) ; for ( T survey : getMissionItems () ) { survey . getSurveyDetail () . setCameraDetail ( cameraInfo ) ; } onScrollingEnded ( mAnglePicker , 0 , 0 ) ; } } 
public static java.lang.String readHeaderString ( byte [] buffer ) { int i = 0 ; while ( ( i < ( buffer.length ) ) && ( ! ( webserver.ParseTools . endOfHeader ( buffer , ( i - 1 ) ) ) ) ) { i ++ ; } return new java.lang.String ( buffer , 0 , i ) ; } 
public void zoomOut () { if ( ( zoom ) > 0.4 ) { zoom -= 0.3 ; xDif = 0 ; yDif = 0 ; } else { xDif = 0 ; yDif = 0 ; if ( isMoon ) { Main.state = Main.State.PLANETRY ; } else { Main.state = Main.State.SOLAR ; } } } 
public void addPizza ( com.preproduction.delivery.domain.Pizza pizza ) { if ( ( orderSize ) < ( com.preproduction.delivery.domain.Order.MAX_ORDER_SIZE ) ) { ( orderSize ) ++ ; for ( com.preproduction.delivery.domain.OrderDetails od : pizzas ) { if ( od . getPizza () . equals ( pizza ) ) { od . setQuantity ( ( ( od . getQuantity () ) + 1 ) ) ; return; } } pizzas . add ( new com.preproduction.delivery.domain.OrderDetails ( pizza , 1 , this ) ) ; } } 
@ java.lang.Override protected void applyUpgrade () { if ( ( main.Scoreboard . XP () ) >= ( upgradeCost () ) ) { main.Scoreboard . modXP ( ( - ( upgradeCost () ) ) ) ; items.Gun g = ( ( items.Gun ) ( gui.Controller . getPlayer () . getWeapons () . get ( 1 ) ) ) ; gui.Controller . getPlayer () . replaceWeapon ( 1 , new items.Gun ( g . fireRate () , g.MAX_AMMO , g . spareAmmo () , g.RELOAD_FACTOR , false ) ) ; } } 
private java.lang.String encode ( java.lang.String input ) { java.lang.String rtn = "" ; java.lang.String first5 = input . toLowerCase () . concat ( "      " ) . substring ( 0 , 5 ) ; for ( int i = 0 ; i < 5 ; ++ i ) { int ascii = ( ( int ) ( first5 . charAt ( i ) ) ) ; rtn = rtn . concat ( java.lang.String . valueOf ( ascii ) ) ; } return java.lang.String . valueOf ( java.lang.Long . parseLong ( rtn ) ) ; } 
public eta.runtime.thunk.UpdateInfo push ( eta.runtime.thunk.Thunk updatee , boolean marked ) { eta.runtime.thunk.UpdateInfo ui ; if ( ( free ) != null ) { ui = free ; free = free.prev ; ui.updatee = updatee ; } else { ui = new eta.runtime.thunk.UpdateInfo ( updatee , marked ) ; } if ( ( bottom ) == null ) { bottom = top = ui ; ui.prev = null ; ui.next = null ; } else { ui.prev = top ; ui.next = null ; top.next = ui ; top = ui ; } return ui ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Object result ) { bIsRunning = false ; if ( ( listener ) != null ) { listener . onDone ( name ) ; } if ( ( ( asyncCallback ) != null ) && ( hasSentResult ) ) { hasSentResult = false ; asyncCallback . onResult ( err , rs ) ; } } 
private boolean confirmDeleteProjects ( java.util.List < org.eclipse.core.resources.IResource > resources ) { org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog dialog = new org.eclipse.ui.actions.DeleteResourceAction.DeleteProjectDialog ( shellProvider . getShell () , resources ) ; dialog . setTestingMode ( fTestingMode ) ; int code = dialog . open () ; deleteContent = dialog . getDeleteContent () ; return code == 0 ; } 
public void accelerate ( double timedelta ) { traffic_sim.Vehicle in_front = current_lane . getVehicleInFront ( this ) ; if ( ( in_front == null ) || ( ( in_front != null ) && ( ( getFrontVehicleDistance ( in_front ) ) >= ( 2 * ( Lane.min_car_distance ) ) ) ) ) { current_velocity += timedelta * ( ACCEL ) ; current_velocity = ( ( current_velocity ) > ( MAX_VELOCITY ) ) ? MAX_VELOCITY : current_velocity ; } } 
public void update () { if ( ( hp ) < ( maxHP ) ) { hp += hpRegin ; } if ( ( hp ) > ( maxHP ) ) { hp = maxHP ; } if ( ( hp ) <= 0 ) { hp = 0 ; } if ( ( stamina ) < ( maxStam ) ) { stamina += stamRegin ; } if ( ( stamina ) > ( maxStam ) ) { stamina = maxStam ; } if ( ( stamina ) <= 0 ) { stamina = 0 ; } } 
public synchronized void newChar ( char c ) { ngram . putChar ( c ) ; java.lang.String s = ngram . getString () ; if ( s != null ) { java.lang.Long currentNumber = numberOfNgrams . get ( s ) ; if ( currentNumber == null ) { currentNumber = 1L ; } else { currentNumber ++ ; } numberOfNgrams . put ( s , currentNumber ) ; } } 
private void resize () { java.lang.Integer [] result = new java.lang.Integer [ ( stack.length ) * 2 ] ; int i ; for ( i = 0 ; i < ( stack.length ) ; i ++ ) { result [ i ] = stack [ i ] ; } while ( i < ( result.length ) ) { result [ i ] = null ; i ++ ; } stack = result ; } 
public static java.lang.String readUntilNonEmptyLine ( java.io.BufferedReader r ) { java.lang.String line = null ; try { while ( ( line = r . readLine () ) != null ) { if ( ( line . length () ) > 0 ) { return ( line + " " ) + ( edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet . readUntilEmptyLine ( r ) ) ; } } } catch ( java.io.IOException e ) { return null ; } return null ; } 
@ java.lang.Override public void pause () { mBitmap = mRenderView . getBitmap () ; com.hustunique.parsingplayer.util.LogUtil . v ( com.hustunique.parsingplayer.player.media.ParsingMediaManager.TAG , ( ( ( ( ( "paused, cache thumbnail " + ( mBitmap ) ) + " from " ) + ( mRenderView ) ) + " size " ) + ( mBitmap . getByteCount () ) ) ) ; mCurrentPlayerProxy . pause () ; } 
public boolean keyboardMashChecker ( java.lang.String currentInput ) { boolean hasMash = false ; if ( ( ( ( currentInput . toLowerCase () . contains ( "sdf" ) ) || ( currentInput . toLowerCase () . contains ( "dfg" ) ) ) || ( currentInput . toLowerCase () . contains ( "cvb" ) ) ) || ( currentInput . toLowerCase () . contains ( ",./" ) ) ) { hasMash = true ; } return hasMash ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; switch ( requestCode ) { case 1 : if ( resultCode == ( android.app.Activity.RESULT_OK ) ) { int switchNum = data . getIntExtra ( com.example.scanitgrocerystorehelper.MainActivity.DELETE_SWITCH , 0 ) ; if ( switchNum != 0 ) { long newNum = data . getLongExtra ( com.example.scanitgrocerystorehelper.MainActivity.KEY_LIST_ID , 0 ) ; if ( newNum != 0 ) deleteList ( mSqlAdapter . getList ( newNum ) ) ; } } } } 
public void viewBlocks ( GameInfo.Environment.Blocks.BlockBase [] [] blocks ) { for ( int x = 0 ; x < ( blocks.length ) ; x ++ ) { for ( int y = 0 ; y < ( blocks [ x ] . length ) ; y ++ ) { if ( ( blocks [ y ] [ x ] ) == null ) { java.lang.System.out . print ( "NULL|" ) ; } else { java.lang.System.out . print ( "GOOD|" ) ; } } java.lang.System.out . println () ; } } 
private int charCode ( char c ) { if ( java.lang.Character . isLetter ( c ) ) { return ( c - 'A' ) + 1 ; } if ( c == '[' ) return 27 ; if ( c == '\\' ) return 28 ; if ( c == ']' ) return 29 ; if ( c == '^' ) return 30 ; if ( c == '_' ) return 31 ; throw new java.lang.RuntimeException ( ( "error char: " + c ) ) ; } 
public void addNew ( uk.ac.ucl.excites.sapelli.collector.transmission.SendSchedule schedule ) { if ( schedule != null ) { schedule . setEnabled ( true ) ; save ( schedule , true ) ; listScheduleAdapter . add ( schedule ) ; } else toggleConfigGroup ( true , ( ! ( listScheduleAdapter . isEmpty () ) ) ) ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ javax.annotation.Nullable @ java.lang.Override public < T > T getCapability ( @ javax.annotation.Nullable net.minecraftforge.common.capabilities.Capability < T > capability , @ javax.annotation.Nullable net.minecraft.util.EnumFacing facing ) { return ( ( facing == ( net.minecraft.util.EnumFacing.DOWN ) ) || ( facing == null ) ) && ( capability == ( net.minecraftforge.energy.CapabilityEnergy.ENERGY ) ) ? ( ( T ) ( energyStorage ) ) : super . getCapability ( capability , facing ) ; } 
private android.content.Intent createShareTips () { java.lang.String send = java.lang.String . valueOf ( array [ counter ] ) ; android.content.Intent shareIntent = new android.content.Intent ( android.content.Intent.ACTION_SEND ) ; shareIntent . addFlags ( Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET ) ; shareIntent . setType ( "text/plain" ) ; shareIntent . putExtra ( Intent.EXTRA_TEXT , ( ( words . getText () ) + ( com.app.cryptotunnel.nutriplan.HealthTips.APP_SHARE_HASHTAG ) ) ) ; return shareIntent ; } 
void updateSymbols ( java.lang.String prefix ) { if ( ( mItems . size () ) > 0 ) mItems . get ( 0 ) . setEnabled ( true ) ; for ( com.topodroid.DistoX.EnableSymbol symbol : mItems ) { if ( symbol . MustSave () ) { symbol.mSymbol . setEnabled ( symbol.mEnabled ) ; TopoDroidApp.mData . setSymbolEnabled ( ( prefix + ( symbol.mSymbol . getThName () ) ) , symbol.mSymbol . isEnabled () ) ; } } } 
private static void initializeRoom ( double leftDoorWidth , boolean hasObstacle ) { if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.GATES8 ) ) { swarms.SwarmSim . buildGates8 ( hasObstacle ) ; } else if ( ( swarms.SwarmSim.roomType ) == ( swarms.SwarmSim.RoomType.BASIC ) ) { swarms.SwarmSim . buildBasic ( leftDoorWidth , hasObstacle ) ; } } 
private synchronized long registerOperationWithHeapSize ( long heapSize ) throws java.lang.InterruptedException { long operationId = ++ ( operationSequenceGenerator ) ; while ( ( ( currentWriteBufferSize ) >= ( maxHeapSize ) ) || ( ( pendingOperationsWithSize . size () ) >= ( maxInFlightRpcs ) ) ) { wait ( com.google.cloud.bigtable.hbase.BigtableBufferedMutator.WAIT_MILLIS ) ; } lastOperationChange = java.lang.System . currentTimeMillis () ; pendingOperationsWithSize . put ( operationId , heapSize ) ; currentWriteBufferSize += heapSize ; return operationId ; } 
boolean insertUserChild ( java.lang.String userId , long childId , int isOwner ) { android.database.sqlite.SQLiteDatabase db = this . getWritableDatabase () ; android.content.ContentValues childUserTableContent = new android.content.ContentValues () ; childUserTableContent . put ( baps.DatabaseHelper.UC_USER_ID , userId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_CHILD_ID , childId ) ; childUserTableContent . put ( baps.DatabaseHelper.UC_ISOWNER , isOwner ) ; long result2 = db . insert ( baps.DatabaseHelper.BAPS_USERCHILD_TABLE , null , childUserTableContent ) ; return result2 != ( - 1 ) ; } 
private int getRealParametersCount ( java.lang.reflect.Method m ) { int c = 0 ; for ( java.lang.Class < ? > t : m . getParameterTypes () ) { if ( ( ( ( t != ( fr.lteconsulting.pomexplorer.Client . class ) ) && ( t != ( fr.lteconsulting.pomexplorer.WorkingSession . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.commands.CommandOptions . class ) ) ) && ( t != ( fr.lteconsulting.pomexplorer.ILogger . class ) ) ) c ++ ; } return c ; } 
private android.view.View getViewReview ( int position , android.view.View convertView ) { review.ReviewCell view ; if ( ( convertView == null ) || ( ! ( convertView instanceof review.ReviewCell ) ) ) { view = new review.ReviewCell ( context , null ) ; } else view = ( ( review.ReviewCell ) ( convertView ) ) ; view . setModel ( memoryData . getText ( position ) , recallData . getText ( position ) ) ; return view ; } 
private Game.Piece getKing () { java.util.LinkedList < Game.Piece > pieces = Game.Player.state . getPieces ( isWhite ) ; for ( int i = 0 ; i < ( pieces . size () ) ; i ++ ) { if ( 5 == ( pieces . get ( i ) . getIdentifier () ) ) { return pieces . get ( i ) ; } } return null ; } 
@ java.lang.Override public void onDataChange ( com.google.firebase.database.DataSnapshot dataSnapshot ) { final java.util.List < com.example.finalproject.Model.Dessert > dessertList = new java.util.LinkedList < com.example.finalproject.Model.Dessert > () ; for ( com.google.firebase.database.DataSnapshot dstSnapshot : dataSnapshot . getChildren () ) { com.example.finalproject.Model.Dessert dessert = dstSnapshot . getValue ( com.example.finalproject.Model.Dessert . class ) ; if ( ( maxKey [ 0 ] ) < ( dessert . getId () ) ) { maxKey [ 0 ] = dessert . getId () ; } dessertList . add ( dessert ) ; } listener . onComplete ( dessertList , maxKey [ 0 ] ) ; } 
public void run () { com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest request = ( ( com.bmc.justdoit.smartkanban.api.objects.KanbanGeneratorRequest ) ( KanbanQueue.CREATOR_QUEUE . poll () ) ) ; if ( request != null ) { java.lang.System.out . println ( ( "Got a request to create >>>>>>>> " + request ) ) ; com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator kanbanCreator = new com.bmc.justdoit.smartkanban.kanban.creator.KanbanCreator ( request ) ; java.lang.Thread th = new java.lang.Thread ( kanbanCreator ) ; th . start () ; } } 
public void checkCollisions () { java.util.ArrayList < Game.Enemy > enemies = Game.StartMenu . getEnemyList () ; for ( int i = 0 ; i > ( enemies . size () ) ; i ++ ) { if ( getBounds () . intersects ( enemies . get ( i ) . getBounds () ) ) { ey = 0 ; enemiesKilled += 1 ; } } } 
private static int [] quickSortH ( int [] data , int start , int end ) { if ( start < end ) { int index = Quick . part ( data , start , end ) ; Quick . quickSortH ( data , start , index ) ; Quick . quickSortH ( data , ( index + 1 ) , end ) ; } return data ; } 
public java.util.Set < decc.dht.Key > get ( decc.dht.Key k ) { java.util.Map < decc.dht.Key , java.lang.Long > rts = routes . get ( k ) ; java.util.Set < decc.dht.Key > ks = null ; if ( rts != null ) ks = rts . keySet () ; return ks ; } 
@ java.lang.Override public void add ( T t ) { if ( ( root ) == null ) { root = new xlp.util.genric.list.Element () ; root . setValue ( t ) ; root . setPosition ( UtilConstant.START_INDEX ) ; } else { xlp.util.genric.list.Element < T > newElement = new xlp.util.genric.list.Element () ; newElement . setNode ( root ) ; newElement . setValue ( t ) ; newElement . setPosition ( root . getNextPosition () ) ; root = newElement ; } } 
synchronized void draw () { if ( ( ( mAllSongHistoryList ) == null ) || ( ( mAdapter ) == null ) ) { return; } mAllSongHistoryList = mSongHistoryController . getManagedTimeline ( mRealm ) ; mItemList = createItemList ( 0 , 30 ) ; if ( ( mLoading ) != null ) { mLoading . setVisibility ( View.INVISIBLE ) ; } mAdapter . updateDataSet ( mItemList ) ; } 
public void addLast ( Item item ) { if ( item == null ) throw new java.lang.NullPointerException () ; final Deque < Item > . Node oldlast = last ; last = new Node ( item ) ; if ( ( size ) == 0 ) { last.next = null ; last.prev = null ; first = last ; } else { oldlast.next = last ; last.prev = oldlast ; last.next = null ; } ( size ) ++ ; } 
public void showImage ( boolean idolized , android.widget.ImageView view ) { android.util.Log . d ( "im" , ( ( ( "ID: " + ( id ) ) + "\n URL showImage:" ) + ( card_image ) ) ) ; if ( idolized || ( is_promo ) ) new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view , false ) . execute ( card_idolized_image , card_image ) ; else new lu.schoolido.sukutomo.sukutomo.Card.LoadImage ( view , false ) . execute ( card_image , card_idolized_image ) ; } 
@ java.lang.Override public android.support.v4.content.Loader < android.database.Cursor > onCreateLoader ( int id , android.os.Bundle args ) { java.lang.String sortOrder = getSortOrder () ; if ( sortOrder == null ) { sortOrder = ( MoviesContract.MoviesEntry.COLUMN_POPULARITY ) + " DESC" ; } if ( sortOrder . equals ( getActivity () . getString ( R.string.pref_sort_favorites ) ) ) { sortOrder = ( MoviesContract.MoviesEntry.COLUMN_POPULARITY ) + " DESC" ; } return new android.support.v4.content.CursorLoader ( getActivity () , MoviesContract.MoviesEntry.CONTENT_URI , null , null , null , sortOrder ) ; } 
@ java.lang.Override public org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals ( org.apache.lucene.index.RandomAccessOrds globalOrdinals ) throws java.io.IOException { org.apache.lucene.util.LongBitSet acceptedGlobalOrdinals = new org.apache.lucene.util.LongBitSet ( globalOrdinals . getValueCount () ) ; org.apache.lucene.index.TermsEnum globalTermsEnum ; org.apache.lucene.index.Terms globalTerms = new org.elasticsearch.search.aggregations.bucket.terms.support.IncludeExclude.DocValuesTerms ( globalOrdinals ) ; globalTermsEnum = compiled . getTermsEnum ( globalTerms ) ; for ( org.apache.lucene.util.BytesRef term = globalTermsEnum . next () ; term != null ; term = globalTermsEnum . next () ) { acceptedGlobalOrdinals . set ( globalTermsEnum . ord () ) ; } return acceptedGlobalOrdinals ; } 
private void resetConfirmation () { if ( ( confirmation ) != null ) { getSupportFragmentManager () . beginTransaction () . remove ( confirmation ) . commit () ; confirmation = null ; new it.familiyparking.app.task.AsyncTaskGCM () . execute ( user , this ) ; } } 
private edu.uci.eecs.wukong.framework.model.InitValue extractInitValue ( int start ) { short componentId = edu.uci.eecs.wukong.framework.util.WKPFUtil . getLittleEndianShort ( buffer , start ) ; byte propertyNumber = buffer [ ( start + 2 ) ] ; byte size = buffer [ ( start + 3 ) ] ; byte [] val = new byte [ size ] ; java.lang.System . arraycopy ( buffer , ( start + 4 ) , val , 0 , size ) ; edu.uci.eecs.wukong.framework.model.InitValue value = new edu.uci.eecs.wukong.framework.model.InitValue ( componentId , ( propertyNumber ++ ) , val ) ; return value ; } 
@ java.lang.Override public void flatMap ( org.wikipedia.citolytics.clickstream.types.ClickStreamResult r , org.apache.flink.util.Collector < org.apache.flink.api.java.tuple.Tuple2 < java.lang.String , java.lang.Long > > out ) throws java.lang.Exception { if ( ( r . getRecommendationsCount () ) > 0 ) { out . collect ( new org.apache.flink.api.java.tuple.Tuple2 ( r . getRecommendations () . get ( 0 ) . getRecommendedArticle () , 1L ) ) ; } } 
public static java.lang.String emailsMinusYou ( java.util.List < com.zulip.android.models.Person > people , com.zulip.android.models.Person you ) { java.util.ArrayList < java.lang.String > names = new java.util.ArrayList <> () ; for ( com.zulip.android.models.Person person : people ) { if ( ( person.id ) != ( you.id ) ) { names . add ( person . getEmail () ) ; } } return android.text.TextUtils . join ( ", " , names ) ; } 
@ java.lang.Override public java.lang.String getPath ( org.eclipse.debug.core.model.IBreakpoint breakpoint ) throws org.eclipse.core.runtime.CoreException { org.eclipse.jdt.debug.core.IJavaBreakpoint bp = ( ( org.eclipse.jdt.debug.core.IJavaBreakpoint ) ( breakpoint ) ) ; java.lang.String type = bp . getTypeName () ; if ( type != null ) { int innerClassIndex = type . indexOf ( '$' ) ; if ( innerClassIndex > 0 ) { type = type . substring ( 0 , innerClassIndex ) ; } return ( type . replace ( '.' , '/' ) ) + ".java" ; } else { return null ; } } 
public static boolean isOpened ( java.lang.String p_SPS_BC_Request_UUID ) { if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request ) == null ) return false ; if ( p_SPS_BC_Request_UUID == null ) return false ; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () ) == null ) return false ; if ( ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () ) == null ) return false ; return ( org.spinsuite.bchat.view.FV_Thread.m_Request . getSPS_BC_Request_UUID () . equals ( p_SPS_BC_Request_UUID ) ) && ( org.spinsuite.bchat.view.FV_Thread.m_IsActive ) ; } 
public void precheck () { com.emc.sa.service.vipr.block.ExportBlockVolumeHelper . precheckExportPathParameters ( minPaths , maxPaths , pathsPerInitiator ) ; com.emc.sa.service.vipr.block.ExportBlockVolumeHelper . precheckPortGroupParameter ( virtualPool , portGroup ) ; if ( com.emc.sa.service.vipr.block.BlockStorageUtils . isHost ( hostId ) ) { host = com.emc.sa.service.vipr.block.BlockStorageUtils . getHost ( hostId ) ; } else { cluster = com.emc.sa.service.vipr.block.BlockStorageUtils . getCluster ( hostId ) ; } com.emc.sa.service.vipr.block.BlockStorageUtils . checkEvents ( ( ( host ) != null ? host : cluster ) ) ; } 
@ javafx.fxml.FXML private void buttonBackspace ( javafx.event.ActionEvent event ) { if ( ( inputText . length () ) > 0 ) { inputText = inputText . substring ( 0 , ( ( inputText . length () ) - 1 ) ) ; if ( inputText . isEmpty () ) { textFieldResults . setText ( "0" ) ; } else { textFieldResults . setText ( inputText ) ; } } } 
@ java.lang.Override public void onClick ( android.view.View v ) { com.example.android.groceries2.MainActivity.dbHelper . deleteListTable ( listVersion ) ; android.content.Intent intent = new android.content.Intent ( this , com.example.android.groceries2.MainActivity . class ) ; intent . putExtra ( "tab" , 2 ) ; startActivity ( intent ) ; android.widget.Toast . makeText ( this , ( listName + " deleted" ) , Toast.LENGTH_SHORT ) . show () ; } 
public java.lang.Object dispatchMethod ( java.lang.Object host , com.panda.kylin.Kylin kylin , java.lang.String methodName , java.lang.Object [] params ) throws java.lang.IllegalAccessException , java.lang.reflect.InvocationTargetException { for ( java.lang.reflect.Method method : getClass () . getDeclaredMethods () ) { com.panda.kylin.PatchMethodName patchMethodName = method . getAnnotation ( com.panda.kylin.PatchMethodName . class ) ; if ( ( methodName . hashCode () ) == ( patchMethodName . value () . hashCode () ) ) { return method . invoke ( kylin , host ) ; } } return null ; } 
public int takeNumberFromUser ( int width , int height ) { java.lang.String userInput = java.lang.Integer . toString ( takeNumberFromUser ( 3 ) ) ; try { if ( ( ( java.lang.Integer . parseInt ( userInput ) ) > width ) || ( ( java.lang.Integer . parseInt ( userInput ) ) > height ) ) throw new java.lang.IllegalArgumentException () ; return java.lang.Integer . parseInt ( userInput ) ; } catch ( java.lang.IllegalArgumentException iae ) { out . writeOut ( "printWrongSequenceHeightWidth" ) ; java.lang.System.out . println ( ( ( width + "x" ) + height ) ) ; return takeNumberFromUser ( width , height ) ; } } 
public javafx.scene.shape.Shape calcBoundingBox ( int size ) { javafx.scene.shape.Circle circleBBox = new javafx.scene.shape.Circle ( ( ( this . getTranslateX () ) + ( size / 2 ) ) , ( ( this . getTranslateY () ) + ( size / 2 ) ) , ( ( size / 2 ) + 4 ) ) ; circleBBox . setOpacity ( 0 ) ; return circleBBox ; } 
private double entropy ( double p ) { if ( ( p == 0 ) || ( p == 1 ) ) { return 1 ; } else { return ( ( - p ) * ( ( java.lang.Math . log ( p ) ) / ( java.lang.Math . log ( 2 ) ) ) ) - ( ( 1 - p ) * ( ( java.lang.Math . log ( ( 1 - p ) ) ) / ( java.lang.Math . log ( 2 ) ) ) ) ; } } 
public void move ( int x , int y , final java.lang.Integer activityClass ) { for ( com.zst.xposed.halo.floatingwindow3.tasks.WindowHolder mWindowHolder : activitiesStack . get ( activityClass ) ) { if ( mWindowHolder != null ) { mWindowHolder . position ( x , y ) ; mWindowHolder . pushToWindow () ; } } } 
private static synchronized void removePropertyFromSharedPrefs ( java.lang.String key ) { if ( ( com.indicative.client.java.android.Indicative . getInstance () . context ) == null ) { android.util.Log . v ( "Indicative" , "Indicative instance has not been initialized; not adding common prop" ) ; return; } android.content.SharedPreferences prefs = com.indicative.client.java.android.Indicative . getInstance () . context . getSharedPreferences ( com.indicative.client.java.android.Indicative.PROPS_PREFS , Context.MODE_PRIVATE ) ; prefs . edit () . remove ( key ) . commit () ; } 
@ java.lang.Override public java.lang.String toString () { return ( ( ( ( ( ( ( ( ( "JavascriptConsoleResultBase [renderedTemplate=" + ( this . renderedTemplate ) ) + ", spaceNodeRef=" ) + ( this . spaceNodeRef ) ) + ", spacePath=" ) + ( this . spacePath ) ) + ", scriptPerformance=" ) + ( this . scriptPerformance ) ) + ", freemarkerPerformance=" ) + ( this . freemarkerPerformance ) ) + "]" ; } 
public void playerPassword ( org.bukkit.entity.Player p , java.lang.String password ) { if ( ( ( password . length () ) < 5 ) || ( ( password . length () ) > 50 ) ) { p . sendMessage ( "Your password must be between 5 and 50 characters in length." ) ; return; } config ( "playerpasswords" ) . set ( p . getName () , password ) ; if ( saveConfig ( "playerpasswords" ) ) p . sendMessage ( "Your password has been set." ) ; else p . sendMessage ( "An error occurred while trying to save your password. Please try again later." ) ; } 
@ java.lang.Override public java.lang.String getSubAwardXmlFileData () { if ( ( subAwardXmlFileData ) != null ) { return subAwardXmlFileData . get () ; } byte [] newData = getKcAttachmentDao () . getData ( xmlDataId ) ; java.lang.String newString = ( newData != null ) ? new java.lang.String ( newData ) : null ; subAwardXmlFileData = new java.lang.ref.SoftReference < java.lang.String > ( newString ) ; return newString ; } 
private boolean match ( org.cloudish.borg.model.Task task ) { if ( jidAllocated . contains ( task . getJid () ) ) { return false ; } for ( org.cloudish.borg.model.TaskConstraint constraint : task . getConstraints () ) { org.cloudish.borg.model.HostAttribute hostAtt = attributes . get ( constraint . getAttName () ) ; if ( ( hostAtt == null ) || ( ! ( hostAtt . match ( constraint ) ) ) ) { return false ; } } return true ; } 
@ java.lang.Override public void showFinishOperation ( com.liferay.mobile.screens.assetlist.AssetEntry assetEntry ) { com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory factory = new com.liferay.mobile.screens.assetdisplay.AssetDisplayFactory () ; com.liferay.mobile.screens.base.BaseScreenlet screenlet = factory . getScreenlet ( getContext () , assetEntry ) ; if ( screenlet != null ) { addView ( screenlet , LayoutParams.MATCH_PARENT , LayoutParams.MATCH_PARENT ) ; } else { com.liferay.mobile.screens.util.LiferayLogger . e ( "Error loading screenlet" ) ; } } 
@ ita.o2o.controller.restful.ResponseBody @ ita.o2o.controller.restful.RequestMapping ( value = "/reject" ) public java.lang.String reject ( java.lang.Integer orderId ) { java.lang.System.out . println ( ( "/reject orderId:" + orderId ) ) ; ita.o2o.controller.restful.Order order = orderService . getOrderById ( orderId ) ; ita.o2o.entity.extra.Status status = statusService . getById ( O2OConstants.STATUS_REJECTED ) ; ita.o2o.util.bean.ResponseMessage responseMessage = new ita.o2o.util.bean.ResponseMessage () ; order . setStatus ( status ) ; if ( orderService . updateOrder ( order ) ) { responseMessage . setStatus ( O2OConstants.SUCCESS ) ; } else { responseMessage . setStatus ( O2OConstants.FAILURE ) ; } return jsonMapper . writeObjectAsString ( responseMessage ) ; } 
private com.intellij.xdebugger.impl.evaluate.EvaluationInputComponent createInputComponent ( com.intellij.xdebugger.evaluation.EvaluationMode mode , com.intellij.xdebugger.impl.evaluate.XExpression text ) { final com.intellij.openapi.project.Project project = mySession . getProject () ; text = com.intellij.xdebugger.impl.breakpoints.XExpressionImpl . changeMode ( text , mode ) ; if ( mode == ( com.intellij.xdebugger.evaluation.EvaluationMode.EXPRESSION ) ) { return new com.intellij.xdebugger.impl.evaluate.ExpressionInputComponent ( project , myEditorsProvider , mySourcePosition , text , myDisposable ) ; } else { return new com.intellij.xdebugger.impl.evaluate.CodeFragmentInputComponent ( project , myEditorsProvider , mySourcePosition , text , myDisposable ) ; } } 
@ java.lang.Override public void onItemClick ( int viewId , int position ) { switch ( viewId ) { case R.id.task_card_text_open : if ( position >= 0 ) { mTaskRecyclerAdapter . getItems () . remove ( position ) ; mTaskRecyclerAdapter . notifyItemRemoved ( position ) ; } break; case R.id.task_card_text : mTaskRecyclerAdapter . getItems () . set ( position , new com.org.runaway.sharetodo.data.TaskState.AssignedTaskState () ) ; mTaskRecyclerAdapter . notifyItemChanged ( position ) ; break; default: break; } } 
protected java.lang.String generateCode ( java.lang.String message ) { message = message . toUpperCase () ; java.lang.StringBuilder codedMessage = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( message . length () ) ; i ++ ) { java.lang.String val = morseCode . get ( message . charAt ( i ) ) ; if ( val != null ) { codedMessage . append ( val ) ; codedMessage . append ( " " ) ; } else return null ; } return codedMessage . toString () ; } 
public void sendMessage ( android.view.View v ) { android.content.Intent searchIntent = new android.content.Intent ( this , com.bminor.officebarkaroake.PerformSearchActivity . class ) ; android.widget.EditText parm = ( ( android.widget.EditText ) ( findViewById ( R.id.editText_searchText ) ) ) ; java.lang.String queryString = parm . getText () . toString () ; java.lang.String typeString = determineCheckedButton () ; queryString . trim () ; if ( ( determineCheckedButton () ) == "all" ) queryString = "true" ; searchIntent . putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_TYPE , typeString ) ; searchIntent . putExtra ( com.bminor.officebarkaroake.MainActivity.SEARCH_STRING , queryString ) ; startActivity ( searchIntent ) ; } 
boolean styleBarCanHide () { if ( ( app . has ( Feature.NEW_TOOLBAR ) ) || ( ! ( getAlgebraDockPanel () . isStyleBarPanelShown () ) ) ) { return false ; } int itemTop = ( this . isInputTreeItem () ) ? main . getElement () . getAbsoluteTop () : getElement () . getAbsoluteTop () ; return ( itemTop - ( getAlgebraDockPanel () . getAbsoluteTop () ) ) < 35 ; } 
@ java.lang.Override public void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( resultCode != ( android.app.Activity.RESULT_OK ) ) { return; } switch ( requestCode ) { case com.csci448.freshapps.keepitfresh.ItemListFragment.REQUEST_OPTION : com.csci448.freshapps.keepitfresh.SortOptions option = ( ( com.csci448.freshapps.keepitfresh.SortOptions ) ( data . getSerializableExtra ( SortOptionsDialogFragment.EXTRA_SORT_OPTION ) ) ) ; updateUI ( option ) ; break; default: updateUI () ; break; } } 
@ java.lang.Override public boolean extract ( java.lang.String args ) { int i = args . indexOf ( "\n" ) ; if ( ( i > 0 ) && ( ( i + 1 ) < ( args . length () ) ) ) { ip = args . substring ( 0 , i ) ; id = decc.dht.Key . load ( args . substring ( ( i + 1 ) ) ) ; } return ( i > 0 ) && ( ( ( args . length () ) - i ) > 0 ) ; } 
@ java.lang.Override public void onBindViewHolder ( org.creativecommons.thelist.adapters.FeedAdapter.FeedViewholder holder , int position ) { org.creativecommons.thelist.adapters.MainListItem l = listItems . get ( position ) ; holder.itemView . setVisibility ( View.VISIBLE ) ; holder.nameLabel . setText ( l . getItemName () ) ; holder.makerLabel . setText ( ( "requested by " + ( l . getMakerName () ) ) ) ; switch ( getItemViewType ( position ) ) { case org.creativecommons.thelist.adapters.FeedAdapter.ERROR_VIEW : holder.iconImageView . setImageResource ( R.drawable.ic_error_red_24dp ) ; break; case org.creativecommons.thelist.adapters.FeedAdapter.DEFAULT_VIEW : holder.iconImageView . setImageResource ( R.drawable.ic_camera_alt_grey600_24dp ) ; break; } holder.itemView . setTag ( l ) ; } 
public static void findEvenOrOdd () { java.util.Scanner scanner = new java.util.Scanner ( java.lang.System.in ) ; java.lang.System.out . println ( ( "This program will ask you for a number, and will then" + " tell you if it is even or odd" ) ) ; int evenCheck ; java.lang.System.out . println ( "Enter a number:" ) ; int evenNum = scanner . nextInt () ; evenCheck = evenNum % 2 ; if ( evenCheck == 0 ) { java.lang.System.out . println ( "Even" ) ; } else { java.lang.System.out . println ( "Odd" ) ; } java.lang.System.out . println ( "" ) ; } 
@ java.lang.SuppressWarnings ( value = "rawtypes" ) public void checkMapResolve ( java.util.Map object , java.lang.Object fieldName ) { if ( ( resolveStatus ) == ( com.alibaba.fastjson.parser.DefaultJSONParser.NeedToResolve ) ) { com.alibaba.fastjson.parser.ResolveFieldDeserializer fieldResolver = new com.alibaba.fastjson.parser.ResolveFieldDeserializer ( object , fieldName ) ; com.alibaba.fastjson.parser.DefaultJSONParser.ResolveTask task = getLastResolveTask () ; task.fieldDeserializer = fieldResolver ; task.ownerContext = context ; resolveStatus = com.alibaba.fastjson.parser.DefaultJSONParser.NONE ; } } 
public void removeOpenSession ( javax.websocket.Session session ) { synchronized ( this ) { openSessions . remove ( session ) ; if ( ( ( waiterCount ) > 0 ) && ( openSessions . isEmpty () ) ) { notifyAll () ; } if ( ( doneTask ) != null ) { doneTask . run () ; doneTask = null ; } } } 
public java.lang.String createEditedCommentDetails () { teammates.ui.template.FeedbackResponseCommentRow frcRow = getComment () ; return ( ( ( ( "From: " + ( frcRow . getCommentGiverName () ) ) + " [" ) + ( frcRow . getCreatedAt () ) ) + "] " ) + ( frcRow . getEditedAt () ) ; } 
private void updateLowestPriorityAssignment () { mLowestPriorityConnection = null ; for ( audio.AudioManager.AudioOutputConnection connection : mAudioOutputConnections ) { if ( ( connection . isConnected () ) && ( ( ( mLowestPriorityConnection ) == null ) || ( ( mLowestPriorityConnection . getPriority () ) < ( connection . getPriority () ) ) ) ) { mLowestPriorityConnection = connection ; } } } 
public java.lang.String getGenealogyString () { java.lang.String ret = "" ; for ( final int dt : genealogy ) { if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.UPPER ) ) { ret = ret + "T" ; } else if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.LOWER ) ) { ret = ret + "B" ; } else if ( dt == ( com.jug.export.CellStatsExporter.SegmentRecord.UNKNOWN ) ) { ret = ret + "U" ; } else { ret = ret + dt ; } } return ret ; } 
@ java.lang.Override public java.lang.Object action () { java.lang.Object object = r . action ( id , endpointClazz , customActionKey , requestJson , params ) ; if ( object == null ) { return new io.yawp.commons.http.JsonResponse () ; } applyGetFacade ( object ) ; if ( hasTransformer () ) { return transform ( object ) ; } return object ; } 
public org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor getDescriptor ( java.lang.String id ) { org.unidal.dal.jdbc.datasource.JdbcDataSourceDescriptor configuration = m_descriptors . get ( id ) ; if ( configuration == null ) { if ( id != null ) { org.unidal.dal.jdbc.datasource.model.entity.DataSourceDef ds = m_dataSources . findDataSource ( id ) ; if ( ds != null ) { configuration = getDescriptor ( ds ) ; m_descriptors . put ( id , configuration ) ; } } } return configuration ; } 
@ java.lang.SuppressWarnings ( value = { "unchecked" , "rawtypes" } ) private void insertIDandTypeforItemsBlock ( java.util.Map itemsObject , java.lang.String schemaArrayItemsID , java.lang.String schemaArrayItemsType ) { if ( schemaArrayItemsID != null ) { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , schemaArrayItemsID . replace ( "\\" , "" ) ) ; } else { itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_ID , "" ) ; } itemsObject . put ( org.wso2.developerstudio.datamapper.diagram.tree.generator.SchemaTransformer.JSON_SCHEMA_TYPE , schemaArrayItemsType ) ; } 
public static void main ( java.lang.String [] args ) { if ( ( args.length ) == 0 ) { java.lang.System.out . println ( "Usage: java -jar MSM.jar FILE_NAME" ) ; java.lang.System . exit ( 1 ) ; } java.lang.String csvPath = args [ 0 ] ; java.util.ArrayList < seng3011.msm.TradeRec > tradeRecs = seng3011.msm.CSVParser . CSVParse ( csvPath ) ; seng3011.msm.GenerateOrder strategy = new seng3011.msm.GenerateOrder () ; java.util.ArrayList < seng3011.msm.SellOrder > sellOrders = strategy . generate ( tradeRecs ) ; java.lang.System.out . println ( "Proceess finished. Please check output files." ) ; } 
@ java.lang.Override public void _save () { if ( ( ( fileId ) == null ) || ( ( ( picture ) != null ) && ( ! ( fileId . equals ( picture . getUUID () ) ) ) ) ) { deletePicture () ; fileId = picture . getUUID () ; } super . _save () ; } 
private android.graphics.Bitmap loadImageFromFile ( java.lang.String imageFileName ) { android.graphics.Bitmap bitmap = null ; try { java.io.File dir = android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_PICTURES ) ; java.io.File imageFile = new java.io.File ( dir , imageFileName ) ; java.io.InputStream inputStream = new java.io.FileInputStream ( imageFile ) ; bitmap = android.graphics.BitmapFactory . decodeStream ( inputStream ) ; android.util.Log . d ( "tag" , ( "got image from cache: " + imageFileName ) ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } return bitmap ; } 
private void updateVersion ( java.lang.Long slbId ) throws java.lang.Exception { try { int current = buildInfoService . getCurrentTicket ( slbId ) ; buildInfoService . updateTicket ( slbId , ( current + 1 ) ) ; } catch ( java.lang.Exception e ) { logger . error ( "Update Version Fail!" , e ) ; throw e ; } } 
static void authenticate () { com.fhf.prkr.microclient.MainActivity.authenticated = false ; com.fhf.prkr.microclient.MainActivity.network . sendpacket ( com.fhf.prkr.microclient.MainActivity.network.MANAGEMENT , com.fhf.prkr.microclient.MainActivity.network.AUTHENTICATE , "" , true ) ; boolean requestFailed = false ; while ( ( com.fhf.prkr.microclient.MainActivity.network . stillWaiting () ) == 1 ) { if ( ( com.fhf.prkr.microclient.MainActivity.network . stillWaiting () ) == 42 ) { requestFailed = true ; break; } } if ( ! requestFailed ) {} } 
@ java.lang.Override public void removeConfigurations ( java.lang.String context ) { java.util.Set < java.lang.String > itemNames = contextMap . get ( context ) ; if ( itemNames != null ) { for ( java.lang.String itemName : itemNames ) { java.util.Set < org.eclipse.smarthome.core.thing.link.ItemChannelLink > links = itemChannelLinkMap . remove ( itemName ) ; if ( links != null ) { for ( org.eclipse.smarthome.core.thing.link.ItemChannelLink removedItemChannelLink : links ) { notifyListenersAboutRemovedElement ( removedItemChannelLink ) ; } } } contextMap . remove ( context ) ; } } 
public void shutDown () { try { lookupService . shutDown () ; } catch ( java.lang.Throwable t ) { org.apache.flink.runtime.query.QueryableStateClient.LOG . error ( "Failed to shut down KvStateLookupService" , t ) ; } try { kvStateClient . shutDown () ; } catch ( java.lang.Throwable t ) { org.apache.flink.runtime.query.QueryableStateClient.LOG . error ( "Failed to shut down KvStateClient" , t ) ; } if ( ( actorSystem ) != null ) { try { actorSystem . shutdown () ; } catch ( java.lang.Throwable t ) { org.apache.flink.runtime.query.QueryableStateClient.LOG . error ( "Failed to shut down ActorSystem" , t ) ; } } } 
public void write ( java.nio.ByteBuffer ip ) { try { mVpnOut . write ( ip ) ; if ( ip . hasRemaining () ) { trikita.capture.IPUtils . panic ( "incomplete write to VPN fd" ) ; } } catch ( java.io.IOException e ) { trikita.capture.IPUtils . panic ( ( "exception in write to VPN fd" + ( e . getMessage () ) ) ) ; } } 
@ java.lang.Override public void onResponse ( retrofit2.Call < com.divyanshu.pixabayserverapi.callback.PixabayDataObject > call , retrofit2.Response < com.divyanshu.pixabayserverapi.callback.PixabayDataObject > response ) { if ( ( ( response . body () ) == null ) || ( ( response . body () . hits . size () ) < 1 ) ) { mainActivityView . showErrorMessage ( R.string.no_image_error ) ; return; } mainActivityView . onImageListResponse ( response . body () . hits ) ; } 
private java.lang.String resolveGroupKeyFromRuleMethod ( java.lang.Object executable ) throws java.lang.Exception { java.lang.reflect.Method methodWithGroupAnnotation = com.opnitech.rules.core.utils.AnnotationUtil . resolveMethodWithAnnotation ( executable , com.opnitech.rules.core.annotations.group.GroupKey . class ) ; if ( methodWithGroupAnnotation == null ) { return null ; } java.lang.String groupKey = ( ( java.lang.String ) ( methodWithGroupAnnotation . invoke ( executable ) ) ) ; if ( ( groupKey != null ) && ( org.apache.commons.lang3.StringUtils . isBlank ( groupKey ) ) ) { com.opnitech.rules.core.utils.ExceptionUtil . throwIllegalArgumentException ( "Invalid Group Key method in the rule. A group method cannot return a blank String. Rule: ''{0}'', Group Key Method: ''{1}''" , executable , methodWithGroupAnnotation . getName () ) ; } return groupKey ; } 
private void addAppointmentBinding ( org.rapla.entities.domain.Appointment appRef , org.rapla.entities.storage.ReferenceInfo < org.rapla.entities.domain.Allocatable > allocationId ) { java.util.SortedSet < org.rapla.entities.domain.Appointment > set = appointmentMap . get ( allocationId ) ; if ( set == null ) { set = new java.util.TreeSet < org.rapla.entities.domain.Appointment > ( new org.rapla.entities.domain.AppointmentStartComparator () ) ; appointmentMap . put ( allocationId , set ) ; } set . add ( appRef ) ; } 
model.Position winningMove ( common.boardclass.BoardClass < common.pattern.Threat > boardClass , common.StoneType attacker , int depth ) { for ( int i = 0 ; i <= depth ; i ++ ) { model.Position position = offend ( boardClass , attacker , new java.util.HashMap <> () , i ) ; if ( position != null ) { return position ; } } return null ; } 
public void union ( int v , int w ) { int rv = root ( v ) ; int rw = root ( w ) ; if ( rv == rw ) { return; } int sv = size [ rv ] ; int sw = size [ rw ] ; if ( sv > sw ) { id [ rw ] = rv ; size [ rv ] = sv + sw ; } else { id [ rv ] = rw ; size [ rw ] = sv + sw ; } } 
@ java.lang.Override public void enforce ( final org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution , final int numMaxSuppressedOutliers ) { if ( this . isFulfilled ( distribution ) ) { return; } distribution . suppressWhileNotFulfilledBinary ( new org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution.PrivacyCondition () { public org.deidentifier.arx.criteria.State isFulfilled ( org.deidentifier.arx.framework.check.groupify.HashGroupifyDistribution distribution ) { boolean fulfilled = org.deidentifier.arx.criteria.RiskBasedPrivacyCriterion . this . isFulfilled ( distribution ) ; if ( ( ! fulfilled ) && ( ( distribution . getNumOfSuppressedTuples () ) > numMaxSuppressedOutliers ) ) { return State.ABORT ; } else { return fulfilled ? State.FULFILLED : State.NOT_FULFILLED ; } } } ) ; } 
public static boolean validatePriority ( java.lang.String priority ) { if ( priority == null ) { return false ; } for ( model.map.Priority p : model.map.Priority . values () ) { if ( p . toString () . equals ( priority ) ) return true ; } return false ; } 
private int getByIndex ( build.games.wraithaven.gui.MenuComponentHeirarchy root , int index , int pos , build.games.wraithaven.gui.MenuComponentHeirarchy [] out ) { if ( index == pos ) { out [ 0 ] = root ; return - 1 ; } pos ++ ; if ( ! ( root . isCollapsed () ) ) { for ( build.games.wraithaven.gui.MenuComponentHeirarchy c : root . getChildren () ) { pos = getByIndex ( c , index , pos , out ) ; if ( pos == ( - 1 ) ) { return - 1 ; } } } return pos ; } 
protected void onPostExecute ( android.graphics.Bitmap result ) { if ( ( activity ) != null ) { activity . upDateList () ; } else if ( ( viewHolder ) != null ) { viewHolder.imageView . setImageBitmap ( result ) ; } if ( ( imgData ) != null ) { imgData . setBitmap ( result ) ; activity . upDateList () ; } } 
public static assignment3_DS.graph.Graph loadGraph ( java.io.File nodeFile , java.io.File arcFile ) { java.lang.System.out . println ( ( ( ( "loading nodes/ars from " + nodeFile ) + " / " ) + arcFile ) ) ; java.util.Map < java.lang.Integer , assignment3_DS.graph.Node > nodes = assignment3_DS.graph.CSVLoader . getNodes ( nodeFile ) ; java.util.List < assignment3_DS.graph.Arc > arcs = assignment3_DS.graph.CSVLoader . getArcs ( arcFile , nodes ) ; if ( arcs == null ) return null ; else return new assignment3_DS.graph.Graph ( nodes , arcs ) ; } 
public static void setStatus ( com.onaio.steps.model.Household household , com.onaio.steps.model.Member member , java.util.ArrayList < java.lang.String > row ) { if ( ( ( ( household . getSelectedMemberId () ) == null ) || ( household . getSelectedMemberId () . equals ( "" ) ) ) || ( household . getSelectedMemberId () . equals ( java.lang.String . valueOf ( member . getId () ) ) ) ) row . add ( household . getStatus () . toString () ) ; else { row . add ( com.onaio.steps.helper.Constants.SURVEY_NOT_SELECTED ) ; } } 
public int [] getPlayerLocation ( int id ) { int [] pos = new int [ 2 ] ; int counter = 0 ; while ( ! ( gl . processCommand ( "MOVE W" , id ) . equals ( "FAIL" ) ) ) { counter ++ ; } pos [ 0 ] = 1 + counter ; counter = 0 ; while ( ! ( gl . processCommand ( "MOVE N" , id ) . equals ( "FAIL" ) ) ) { counter ++ ; } pos [ 1 ] = 1 + counter ; return pos ; } 
@ java.lang.Override public boolean accept ( java.io.File dir , java.lang.String name ) { return ( ( ! ( name . endsWith ( ".json" ) ) ) && ( ! ( name . endsWith ( endsWith ) ) ) ) && ( ! ( name . equals ( "instant-run" ) ) ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent imageReturnedIntent ) { super . onActivityResult ( requestCode , resultCode , imageReturnedIntent ) ; switch ( requestCode ) { case SELECT_PHOTO : if ( resultCode == ( RESULT_OK ) ) { final android.net.Uri imageUri = imageReturnedIntent . getData () ; mImageFilePath = com.amansoni.tripbook.util.ImageWrapper . getRealPathFromURI ( this , imageUri ) ; com.amansoni.tripbook.util.ImageWrapper . loadImageFromFile ( this , mMainImage , mImageFilePath , 400 ) ; if ( ( mTripbookItem ) != null ) { mTripbookItem . setThumbnail ( mImageFilePath ) ; } } } } 
public void makeHeader () { file . writeIndent ( "local lpeg = require \"lpeg\"" ) ; nez.util.UList < nez.expr.Rule > list = peg . getDefinedRuleList () ; for ( nez.expr.Rule r : list ) { if ( ! ( r . getLocalName () . startsWith ( "\"" ) ) ) { java.lang.String localName = r . getLocalName () ; file . writeIndent ( ( ( ( ( "local " + localName ) + " = lpeg.V\"" ) + localName ) + "\"" ) ) ; } } } 
public static org.joda.time.LocalDate alignProposedBillCycleDate ( final org.joda.time.LocalDate proposedDate , final int billingCycleDay ) { final int lastDayOfMonth = proposedDate . dayOfMonth () . getMaximumValue () ; int proposedBillCycleDate = proposedDate . getDayOfMonth () ; if ( proposedBillCycleDate < billingCycleDay ) { if ( billingCycleDay <= lastDayOfMonth ) { proposedBillCycleDate = billingCycleDay ; } else { proposedBillCycleDate = lastDayOfMonth ; } } return new org.joda.time.LocalDate ( proposedDate . getYear () , proposedDate . getMonthOfYear () , proposedBillCycleDate , proposedDate . getChronology () ) ; } 
public void checkForGoAnywhere () { for ( UltimateTicTacToe.BigTile big : bigTiles ) { if ( ( ( ( big.numMarked ) == 9 ) && ( ( big.winner ) != 0 ) ) && ( ( idToPlayOn ) == ( big.id ) ) ) { goAnywhere = true ; } } } 
public boolean putChild ( int groupPosition , int childPosition , long childId , boolean isChecked ) { long packedPosition = android.widget.ExpandableListView . getPackedPositionForChild ( groupPosition , childPosition ) ; if ( hasStableIds () ) { java.lang.Long result = ( isChecked ) ? childIds . put ( childId , packedPosition ) : childIds . remove ( childId ) ; return result != null ; } else { return isChecked ? ! ( childPositions . add ( packedPosition ) ) : childPositions . remove ( packedPosition ) ; } } 
public void clear () { mProcedureDefinitions . clear () ; mProcedureReferences . clear () ; mProcedureNameManager . clear () ; mCountOfReferencesWithReturn = 0 ; int obsCount = mObservers . size () ; for ( int i = 0 ; i < obsCount ; ++ i ) { mObservers . get ( i ) . onClear () ; } } 
private java.lang.Runnable getTaskFromSharedQueue () { synchronized ( tasks ) { while ( ( tasks . isEmpty () ) && ( alive . get () ) ) { try { tasks . wait () ; } catch ( java.lang.InterruptedException e ) {} } if ( ! ( alive . get () ) ) { return null ; } return tasks . removeFirst () ; } } 
public static int [] parseIntArray ( org.json.JSONArray arr ) { if ( arr == null ) return null ; int [] res = new int [ arr . length () ] ; for ( int i = 0 ; i < ( arr . length () ) ; i ++ ) { res [ i ] = arr . optInt ( i ) ; } return res ; } 
@ java.lang.Override public java.lang.String getIsoDate ( org.hisp.dhis.calendar.DateTimeUnit dateTimeUnit , org.hisp.dhis.calendar.Calendar calendar ) { int month = dateTimeUnit . getMonth () ; switch ( month ) { case 11 : return ( dateTimeUnit . getYear () ) + "NovS1" ; case 5 : return ( dateTimeUnit . getYear () ) + "NovS2" ; default: throw new java.lang.IllegalArgumentException ( ( "Month not valid [11,5] " + month ) ) ; } } 
private java.lang.String getElementID ( final java.lang.String relativePath ) { final java.lang.String fragment = getFragment ( relativePath ) ; if ( fragment != null ) { if ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) != ( - 1 ) ) { return fragment . substring ( ( ( fragment . lastIndexOf ( org.dita.dost.writer.SLASH ) ) + 1 ) ) ; } else { return fragment ; } } return null ; } 
private java.lang.String arrayToString ( char [] [] array ) { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( int i = 0 ; i < ( array.length ) ; i ++ ) { for ( int j = 0 ; j < ( array [ 0 ] . length ) ; j ++ ) { sb . append ( array [ i ] [ j ] ) ; } sb . append ( "\n" ) ; } return sb . toString () ; } 
@ java.lang.Override public void onResult ( int requestCode , int resultCode , @ android.support.annotation.Nullable android.content.Intent data ) { if ( ( ( requestCode == ( id ) ) && ( resultCode != ( android.app.Activity.RESULT_OK ) ) ) || ( data == null ) ) { return; } result = ru.spbau.mit.placenotifier.PlacePicker . getSelectedPoint ( data ) ; updateCamera () ; } 
@ org.junit.Test public void CompareTest () { java.util.Random rand = new java.util.Random () ; tests.AbstractDaoFactory daoFact = new tests.DaoFactory () ; tests.CompareDao dao = daoFact . getCompareDao () ; for ( int i = 0 ; i < 50 ; i ++ ) { assertTrue ( ( ( dao . playerComparison ( ( ( ( rand . nextFloat () ) * ( ( max ) - ( min ) ) ) + ( min ) ) , "RB" , "New York Jets" ) ) > 0 ) ) ; } } 
@ java.lang.Override public int getZoneIdx ( playground.michalm.zone.util.Node node ) { org.matsim.api.core.v01.Coord coord = node . getCoord () ; int r = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getY () ) - ( y0 ) ) / ( cellSize ) ) ) ) ) ; int c = ( ( int ) ( java.lang.Math . round ( ( ( ( coord . getX () ) - ( x0 ) ) / ( cellSize ) ) ) ) ) ; return ( r * ( cols ) ) + c ; } 
@ java.lang.Override public java.lang.String parse ( java.lang.String [] parts ) { java.lang.String opcode = instructionCodes . get ( parts [ 0 ] ) ; java.lang.String fd = getFloatRegister ( parts [ 1 ] ) ; java.lang.String fs = getFloatRegister ( parts [ 2 ] ) ; java.lang.String ft = getFloatRegister ( parts [ 3 ] ) ; java.lang.String format = "10000" ; java.lang.String funct = "000000" ; return ( ( ( ( opcode + format ) + ft ) + fs ) + fd ) + funct ; } 
@ java.lang.Override public com.valkryst.VTerminal.component.RadioButton build () { checkState () ; super . width = ( text . length () ) + 2 ; super . height = 1 ; final com.valkryst.VTerminal.component.RadioButton radioButton = new com.valkryst.VTerminal.component.RadioButton ( this ) ; group . addRadioButton ( radioButton ) ; return radioButton ; } 
private boolean asyncSendAcknowledge ( com.sun.messaging.jmq.jmsclient.ReadWritePacket pkt ) { boolean synchronousReply = protocolHandler . isDirectModeTwoThreadWithSyncReplies () ; if ( synchronousReply ) { return true ; } long ackId = pkt . getConsumerID () ; com.sun.messaging.jmq.jmsclient.AsyncSendCallback cb = ( ( com.sun.messaging.jmq.jmsclient.AsyncSendCallback ) ( requestMetaData . get ( java.lang.Long . valueOf ( ackId ) ) ) ) ; requestMetaData . remove ( ackId ) ; if ( cb == null ) { return false ; } cb . processCompletion ( pkt , true ) ; return true ; } 
private void broadcastUpdate ( final java.lang.String action , final android.bluetooth.BluetoothGattCharacteristic characteristic ) { final android.content.Intent intent = new android.content.Intent ( action ) ; if ( characteristic == null ) { this . sendBroadcast ( intent ) ; return; } android.util.Log . d ( DEBUG_TAG , characteristic . getStringValue ( 0 ) ) ; if ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.HEART_BEAT_UUID . equals ( characteristic . getUuid () ) ) { java.lang.String value = characteristic . getStringValue ( 0 ) ; intent . putExtra ( com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.EXTRA_DATA , value ) ; this . sendBroadcast ( intent ) ; } } 
private void CheckConcate ( java.lang.String value1 , java.lang.String value2 ) { if ( ( ! ( value2 . equals ( "null" ) ) ) && ( ! ( value2 . equals ( "" ) ) ) ) { java.lang.String value = ( ( "      " + value1 ) + ":  " ) + value2 ; result_concate = ( ( result_concate ) + value ) + "\n" ; } } 
public org.springframework.messaging.Message < java.lang.String > roundRobbin ( org.springframework.messaging.Message < java.lang.String > message ) { br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr = ( ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) + 1 ) % ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.ROUND_ROBBIN_FACTOR ) ; return org.springframework.messaging.support.MessageBuilder . withPayload ( message . getPayload () . concat ( ( " - P" + ( br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) ) ) ) . setHeader ( "partitionId" , br.com.cinq.kafka.sample.kafka.KafkaPartitionerTransformer.rr ) . build () ; } 
public void DrawBoard ( java.awt.Graphics g ) { for ( int r = 0 ; r < ( board.length ) ; r ++ ) { for ( int c = 0 ; c < ( board [ r ] . length ) ; c ++ ) { if ( ( board [ r ] [ c ] ) != null ) board [ r ] [ c ] . draw ( g ) ; } } } 
public int extractY ( int y ) { int py = ( y + ( UserInterface.Accordpanel.YP ) ) + 60 ; if ( curAcc . isSixakk () ) { py -= 110 ; py /= 50 ; } else { py -= 15 + 50 ; py /= 50 ; } return py ; } 
public static int findBytes ( java.util.LinkedList < java.lang.Byte > arr , byte value ) { int i = 0 ; while ( ( i < ( arr . size () ) ) && ( ( arr . get ( i ) ) != value ) ) i ++ ; if ( i < ( arr . size () ) ) return i ; return - 1 ; } 
public boolean initCamera ( java.lang.String cam ) { if ( ( camera ) != null ) return true ; try { camera = new java.net.URL ( cam ) ; new java.lang.Thread ( this ) . start () ; } catch ( java.net.MalformedURLException e ) { e . printStackTrace () ; } return ( camera ) != null ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj instanceof data.Emotion ) { data.Emotion em = ( ( data.Emotion ) ( obj ) ) ; return ( ( ( ( em.name ) == null ) && ( ( this . name ) == null ) ) || ( em.name . equals ( this . name ) ) ) && ( ( java.lang.Double . compare ( em.intensity , this . intensity ) ) == 0 ) ; } return false ; } 
public boolean isValidMove ( java.lang.String direction ) { switch ( direction . toLowerCase () ) { case "n" : return ( this . emptySpaceLocation . getX () ) > 0 ; case "e" : return ( this . emptySpaceLocation . getY () ) < 2 ; case "s" : return ( this . emptySpaceLocation . getX () ) < 2 ; case "w" : return ( this . emptySpaceLocation . getY () ) > 0 ; default: return false ; } } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/autenticar-usuario" , method = org.springframework.web.bind.annotation.RequestMethod.POST ) public java.lang.String autenticarUsuario ( avaliador.model.Usuario usuarioRecebido , javax.servlet.http.HttpSession session ) { avaliador.model.Usuario usuarioRetornado = usuarioDao . validarUsuario ( usuarioRecebido . getLogin () , usuarioRecebido . getSenha () ) ; if ( usuarioRetornado != null ) { session . setAttribute ( "usuarioLogado" , usuarioRetornado ) ; if ( ( usuarioRetornado . getTipoUsuario () ) == ( avaliador.model.NivelUsuario.ADMINISTRADOR ) ) { session . setAttribute ( "ehAdministrador" , usuarioRetornado ) ; } return "redirect:/index" ; } return "login" ; } 
private boolean hayCamposVacios ( entities.Contrato t ) { return ( ( ( ( ( t . getIdentificador () ) == null ) || ( ( t . getPropiedad () . getCalle () ) == null ) ) || ( ( t . getCliente () . getPersona () ) == null ) ) || ( ( t . getCreador () . getPersona () ) == null ) ) || ( t . getGarantia () . equals ( "" ) ) ; } 
public bibliothek.gui.dock.common.intern.CommonSingleDockableLayout read ( bibliothek.util.xml.XElement element , bibliothek.gui.dock.station.support.PlaceholderStrategy placeholders ) { bibliothek.gui.dock.common.intern.CommonSingleDockableLayout layout = new bibliothek.gui.dock.common.intern.CommonSingleDockableLayout () ; layout . setId ( element . getElement ( "id" ) . getString () ) ; bibliothek.util.xml.XElement xarea = element . getElement ( "area" ) ; if ( xarea != null ) { java.lang.String area = xarea . getString () ; if ( "" . equals ( area ) ) { layout . setArea ( null ) ; } else { layout . setArea ( area ) ; } } return layout ; } 
public void removeItems () { for ( int position = 0 ; position < ( mItems . size () ) ; position ++ ) { if ( getItem ( position ) . getCanRemove () ) { mItems . remove ( position ) ; todo.javier.mera.todolist.adapters.RecyclerAdapter . notifyItemRemoved ( position ) ; position -- ; } } } 
@ java.lang.Override public boolean onQueryTextChange ( java.lang.String newText ) { if ( ( newText . length () ) > 0 ) { mUsersList . setVisibility ( View.VISIBLE ) ; mUsersAdapter . getFilter () . filter ( newText ) ; } else { mUsersList . setVisibility ( View.GONE ) ; } return false ; } 
public void wallsAndGatesV0 ( int [] [] rooms ) { if ( checkCornerCase ( rooms ) ) { return; } for ( int i = 0 ; i < ( rooms.length ) ; i ++ ) { for ( int j = 0 ; j < ( rooms [ 0 ] . length ) ; j ++ ) { if ( ( rooms [ i ] [ j ] ) >= 0 ) { bfsHelper ( rooms , i , j ) ; } } } } 
private java.util.List < de.htw_berlin.HoboOthello.KI.Field > listPossibleSideFields () { java.util.List < de.htw_berlin.HoboOthello.KI.Field > listOfPossibleMoves = listPossibleMoves () ; java.util.List < de.htw_berlin.HoboOthello.KI.Field > listOfPossibleSideFields = null ; int sideFieldIndex = 0 ; while ( sideFieldIndex < ( ( listOfPossibleMoves . size () ) - 1 ) ) { de.htw_berlin.HoboOthello.KI.Field field = listOfPossibleMoves . get ( sideFieldIndex ) ; if ( board . isSideField ( field ) ) { listOfPossibleSideFields . add ( field ) ; } sideFieldIndex ++ ; } return listOfPossibleSideFields ; } 
@ java.lang.Override public void forEachEntry ( java.util.function.ObjIntConsumer < ? super E > action ) { com.google.common.base.Preconditions . checkNotNull ( action ) ; for ( int i = 0 ; i < ( length ) ; i ++ ) { action . accept ( elementSet . asList () . get ( i ) , getCount ( i ) ) ; } } 
final void setFrontOfTask () { boolean foundFront = false ; final int numActivities = mActivities . size () ; for ( int activityNdx = 0 ; activityNdx < numActivities ; ++ activityNdx ) { final com.android.server.am.ActivityRecord r = mActivities . get ( activityNdx ) ; if ( foundFront || ( r.finishing ) ) { r.frontOfTask = false ; } else { r.frontOfTask = true ; foundFront = true ; } } } 
public org.netpreserve.commons.uri.UriBuilder query ( final java.lang.String value ) { if ( value == null ) { query = null ; } else { query = config . getParser () . validateQuery ( this , value , 0 , ( - 1 ) ) ; } parsedQuery = null ; return this ; } 
@ java.lang.Override public java.lang.String getAcceptedPath () { if ( ! ( this . useEncoding ) ) return ( "/" + ( this . root ) ) + "/*" ; else return ( "/" + ( encodeIfNecessary ( this . root . getName () ) ) ) + "*" ; } 
@ java.lang.Override public org.apache.jena.graph.Node get1 ( org.apache.jena.sparql.core.Var var ) { try { org.rdfhdt.hdtjena.bindings.HDTId id = idBinding . get ( var ) ; if ( id == null ) return null ; return id . getNode () ; } catch ( java.lang.Exception ex ) { org.apache.jena.atlas.logging.Log . fatal ( this , java.lang.String . format ( "get1(%s)" , var ) , ex ) ; return null ; } } 
private org.miradi.objecthelpers.ORef getSelectedRef () { if ( ( getPicker () . getSelectedHierarchies () . length ) == 0 ) return org.miradi.objecthelpers.ORef.INVALID ; org.miradi.objecthelpers.ORefList selectedObjectRefs = getPicker () . getSelectedHierarchies () [ 0 ] ; if ( ( selectedObjectRefs . size () ) == 0 ) return org.miradi.objecthelpers.ORef.INVALID ; org.miradi.objecthelpers.ORef selectedObjectRef = selectedObjectRefs . get ( 0 ) ; if ( selectedObjectRef . isInvalid () ) return org.miradi.objecthelpers.ORef.INVALID ; return selectedObjectRef ; } 
@ java.lang.Override public boolean hasNext () { if ( isEmpty () ) { return false ; } if ( ( lastPolled ) != null ) { if ( ( ( ( lastPolled ) == ( second ) ) && ( ( second.plug ) == null ) ) && ( ( third.plug ) == null ) ) { return false ; } return ! ( ( ( lastPolled ) == ( third ) ) && ( ( third.plug ) == null ) ) ; } else { return false ; } } 
public void write_page ( global.PageId pageno , global.Page mempage ) { if ( ( ( pageno.pid ) < 0 ) || ( ( pageno.pid ) >= ( num_db_pages ) ) ) { throw new java.lang.IllegalArgumentException ( ( "Invalid page number; write aborted" + ( pageno.pid ) ) ) ; } try { fp . seek ( ( ( long ) ( ( pageno.pid ) * ( PAGE_SIZE ) ) ) ) ; fp . write ( mempage . getData () ) ; ( write_cnt ) ++ ; } catch ( java.io.IOException exc ) { global.Minibase . haltSystem ( exc ) ; } } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( getMediaController () ) != null ) { org.tomahawk.libtomahawk.collection.StationPlaylist stationPlaylist = org.tomahawk.libtomahawk.collection.StationPlaylist . get ( ( ( org.tomahawk.libtomahawk.collection.Playlist ) ( item ) ) ) ; if ( stationPlaylist != ( getPlaybackManager () . getPlaylist () ) ) { getPlaybackManager () . setPlaylist ( stationPlaylist ) ; getMediaController () . getTransportControls () . play () ; } } } 
@ java.lang.Override public void startElement ( java.lang.String uri , java.lang.String localName , java.lang.String qName , org.xml.sax.Attributes attributes ) throws org.xml.sax.SAXException { if ( ( "message" . equals ( qName ) ) || ( "geomessage" . equals ( qName ) ) ) { message = new com.esri.core.symbol.advanced.Message () ; messages . add ( message ) ; version = attributes . getValue ( "v" ) ; } else if ( MessageHelper.MESSAGE_ID_PROPERTY_NAME . equals ( qName ) ) { readingId = true ; } elementName = qName ; } 
public void reset () { stopwatch . stopTimer () ; spelInformatie . setTotaalAantalBolletjes ( 0 ) ; spelInformatie . reset () ; this . vakjesInhoud . clear () ; for ( int i = 0 ; i < ( vakje.length ) ; i ++ ) vakje [ i ] = null ; vakje = null ; repaint () ; } 
@ java.lang.Override protected void startRefresh () { if ( ( ( ( mRefreshStatus ) != ( RefreshStatus.REFRESHING ) ) && ( ( mRefreshDelegate ) != null ) ) && ( ( mHTViewHolder ) != null ) ) { mRefreshStatus = RefreshStatus.REFRESHING ; processRefreshStatusChanged () ; mRefreshDelegate . onRefresh () ; if ( ( mRefreshStatus ) == ( RefreshStatus.REFRESHING ) ) changeRefreshViewPositionWithAnimation ( 0 , null ) ; } } 
private com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand joinOr ( java.util.List < java.lang.String > basePackageNames ) { if ( basePackageNames . isEmpty () ) { throw new java.lang.IllegalArgumentException ( "basePackageNames must not be empty " ) ; } com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand operandGroup = null ; for ( java.lang.String basePackageName : basePackageNames ) { if ( operandGroup == null ) { operandGroup = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand ( basePackageName ) ; } else { final com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.MatcherOperand packageMatcherOperand = new com.navercorp.pinpoint.bootstrap.instrument.matcher.operand.PackageInternalNameMatcherOperand ( basePackageName ) ; operandGroup = operandGroup . or ( packageMatcherOperand ) ; } } return operandGroup ; } 
@ java.lang.Override public void onSelect ( com.sencha.gxt.widget.core.client.event.SelectEvent event ) { log . setText ( ( ( "running cmd: " + cmdString ) + "  ..." ) ) ; processingAnim ( cmdString ) ; gpfsService . runCmd ( nodeop , nodes , new com.google.gwt.user.client.rpc.AsyncCallback < java.lang.String > () { @ java.lang.Override public void onFailure ( java.lang.Throwable caught ) { log . setText ( caught . getMessage () ) ; processingWait = false ; } @ java.lang.Override public void onSuccess ( java.lang.String result ) { log . setText ( result ) ; processingWait = false ; reloadState () ; } } ) ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { for ( com.example.liwaihing.multiuseronlinemaps.UserPosition u : userPositionList ) { if ( ( u . getUserPosition ( name ) ) != null ) { marker . remove () ; break; } } dbHelper . removeSharingUser ( dbHelper . getGoogleID () , name ) ; dbHelper . removeSharingUser ( name , dbHelper . getGoogleID () ) ; layout_pos . setVisibility ( View.GONE ) ; if ( ( polyline ) != null ) { polyline . remove () ; } } 
public static synchronized void saveGlobalSettings ( ) throws java.io.IOException { java.io.File confFile = ovt.Utils . findFile ( ( ( ovt.OVTCore . getConfDir () ) + ( ovt.OVTCore.globalSettingsFileName ) ) ) ; if ( confFile != null ) { try ( java.io.FileOutputStream out = new java.io.FileOutputStream ( confFile ) ) { ovt.OVTCore.globalProperties . save ( out , "OVT properties file." ) ; } } } 
public java.lang.String AImove () { coup_standalone.AI.Moves nextMove = new coup_standalone.AI.Moves () ; nextMove . updateUtilityWithFacts () ; nextMove . updateUtilityWithHistory () ; nextMove . updateUtilityWithCoins () ; java.lang.String move ; if ( ( turn ) == 1 ) move = nextMove . firstMove () ; else move = nextMove . getMove () ; ( turn ) ++ ; ( turnsSinceAmbassador ) ++ ; return move ; } 
@ java.lang.Override public boolean onScroll ( android.view.MotionEvent event1 , android.view.MotionEvent event2 , float distanceX , float distanceY ) { if ( ( ( mPreviousView ) == null ) && ( ( mNextView ) == null ) ) { isScrolling = false ; return true ; } isScrolling = true ; onScrollX ( event1 , event2 , distanceX ) ; return true ; } 
@ java.lang.Override public double curve ( double t ) { if ( t <= 0.5 ) { return ( 1 - ( super . curve ( ( 1 - ( t * 2 ) ) ) ) ) * 0.5 ; } return ( ( super . curve ( ( ( t * 2 ) - 1 ) ) ) * 0.5 ) + 0.5 ; } 
@ java.lang.Override public void onSaveInstanceState ( android.os.Bundle saveState ) { super . onSaveInstanceState ( saveState ) ; if ( ( movieArrayList ) != null ) saveState . putParcelableArrayList ( SAVED_MOVIE_LIST , movieArrayList ) ; saveState . putString ( SAVED_SORT_PREF , sortBy ) ; saveState . putInt ( SAVED_PAGE_NO , page ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/storeProducts" ) public org.springframework.web.servlet.ModelAndView listtabUsers ( com.fh.entity.Page page , @ org.springframework.web.bind.annotation.RequestParam ( value = "out" , required = false ) java.lang.String out ) throws java.lang.Exception { org.springframework.web.servlet.ModelAndView mv = this . getModelAndView () ; com.fh.util.PageData pd = this . getPageData () ; pd . put ( "Dept_ID" , getDepId () ) ; java.util.List < com.fh.util.PageData > productsList = clientsService . listStock ( pd ) ; mv . setViewName ( "warehouse/stock/stockpileList" ) ; mv . addObject ( "productsList" , productsList ) ; java.lang.System.out . println ( ( "testlist:================" + ( productsList . size () ) ) ) ; mv . addObject ( "pd" , pd ) ; return mv ; } 
public static void updateForNotes ( @ android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel [] marbles , @ android.support.annotation.NonNull com.wildsmith.jarble.provider.jar.JarTableMarbleModel updatedMarble ) { for ( com.wildsmith.jarble.provider.jar.JarTableMarbleModel marble : marbles ) { if ( ( marble == null ) || ( ( marble . getId () ) != ( updatedMarble . getId () ) ) ) { continue; } marble.purposeNotes = updatedMarble.purposeNotes ; marble.performanceNotes = updatedMarble.performanceNotes ; break; } } 
public boolean isValid () { verifyNIL () ; int lastDegree = - ( BinomialHeap.INFINITY ) ; BinomialHeap.BinomialNode x = this . head ; while ( x != ( BinomialHeap.NIL ) ) { if ( ( recVal ( x , new int [ 2 ] ) [ 0 ] ) == 0 ) { return false ; } if ( ( x.degree ) <= lastDegree ) { return false ; } lastDegree = x.degree ; x = x.sibling ; } return true ; } 
public void verifyDriveArcingRight ( double minimumDifference ) { org.junit.Assert . assertTrue ( ( ( ( getLeftSetpoint () ) - ( getRightSetpoint () ) ) > minimumDifference ) ) ; org.junit.Assert . assertTrue ( ( ( ( ( xbot.common.controls.actuators.MockCANTalon ) ( drive.rightDrive ) ) . getSetpoint () ) >= 0 ) ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ( getClass () ) != ( o . getClass () ) ) ) return false ; com.mounacheikhna.practice.algorithms.SmartWordToy.Node node = ( ( com.mounacheikhna.practice.algorithms.SmartWordToy.Node ) ( o ) ) ; return ( ( steps ) == ( node.steps ) ) && ( java.util.Arrays . equals ( word , node.word ) ) ; } 
@ java.lang.Override public void changed ( javafx.beans.value.ObservableValue < ? extends java.lang.String > ov , java.lang.String t , java.lang.String t1 ) { java.lang.System.out . println ( "Plate No. Changed" ) ; if ( ( t1 != null ) && ( ! ( "" . equals ( t1 . trim () ) ) ) ) { rentButton . setDisable ( false ) ; } else { rentButton . setDisable ( true ) ; } } 
private void generateAllMultiplikation () { java.lang.StringBuffer bufa = new java.lang.StringBuffer () ; for ( int a = 0 ; a < 10 ; a ++ ) for ( int b = 0 ; b < 10 ; b ++ ) { append ( bufa , a ) ; append ( bufa , b ) ; } aufgaben = bufa . toString () ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.Boolean b ) { super . onPostExecute ( b ) ; if ( b ) { if ( ( mListener ) != null ) { mListener . onEditionSuccess () ; } } else { android.widget.Toast . makeText ( context , R.string.tags_edition_failed , Toast.LENGTH_SHORT ) . show () ; } } 
public void writeByteBufferImpl ( java.nio.ByteBuffer buf ) throws java.io.IOException { int currLen = buf . remaining () ; assert null != ( sChannel ) : "tcp socket not set yet, null value found." ; sChannel . write ( buf ) ; bufferPool . returnBuffer ( buf ) ; block . setNumBytes ( ( ( block . getNumBytes () ) + currLen ) ) ; bufferPool . returnBuffer ( buf ) ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( o == null ) return false ; if ( ! ( o instanceof java.lang.Number ) ) return false ; java.lang.Number that = ( ( java.lang.Number ) ( o ) ) ; return ( ( compareTo ( that ) ) == 0 ) || ( value . equals ( that . doubleValue () ) ) ; } 
public synchronized void setHMILevel ( com.smartdevicelink.proxy.rpc.enums.HMILevel hmiVal ) { hmiLevel = hmiVal ; if ( hmiVal != null ) { if ( ( hmiVal . equals ( HMILevel.HMI_FULL ) ) || ( hmiVal . equals ( HMILevel.HMI_LIMITED ) ) ) setUserSelectedStatus ( true ) ; else if ( hmiVal . equals ( HMILevel.HMI_NONE ) ) setUserSelectedStatus ( false ) ; } else { setUserSelectedStatus ( false ) ; } } 
static java.util.List < com.myjeeva.digitalocean.pojo.Key > getAvailableKeys ( java.lang.String authToken ) throws com.myjeeva.digitalocean.exception.DigitalOceanException , com.myjeeva.digitalocean.exception.RequestUnsuccessfulException { com.myjeeva.digitalocean.impl.DigitalOceanClient client = new com.myjeeva.digitalocean.impl.DigitalOceanClient ( authToken ) ; java.util.List < com.myjeeva.digitalocean.pojo.Key > availableKeys = new java.util.ArrayList < com.myjeeva.digitalocean.pojo.Key > () ; com.myjeeva.digitalocean.pojo.Keys keys ; int page = 0 ; do { page += 1 ; keys = client . getAvailableKeys ( page ) ; availableKeys . addAll ( keys . getKeys () ) ; } while ( ( keys . getMeta () . getTotal () ) > ( availableKeys . size () ) ) ; return availableKeys ; } 
public model.Book get ( long key ) { int firstHash = hashFunctionOne ( key ) ; int secondHash = hashFunctionTwo ( key ) ; if ( ( ( table [ firstHash ] ) != null ) && ( ( table [ firstHash ] . getKey () ) == key ) ) { return table [ firstHash ] . getValue () ; } else { return table [ secondHash ] . getValue () ; } } 
public java.lang.String loadSettingsFile ( nfl.season.input.NFLTeamSettingsFileReaderFactory fileReaderFactory ) throws java.io.IOException { java.io.BufferedReader fileReader = fileReaderFactory . createNFLTeamSettingsReader () ; java.lang.StringBuilder nflTeamSettingsBuilder = new java.lang.StringBuilder () ; java.lang.String line ; try { line = fileReader . readLine () ; while ( line != null ) { nflTeamSettingsBuilder . append ( line ) ; nflTeamSettingsBuilder . append ( "\n" ) ; line = fileReader . readLine () ; } } finally { fileReader . close () ; } return nflTeamSettingsBuilder . toString () ; } 
@ org.junit.Test public void getFormattedDateString_1day () { org.hamcrest.MatcherAssert . assertThat ( com.ddiehl.timesincetextview.TimeSince . getFormattedDateString ( ( ( mTime ) - ( ( 24 * 60 ) * 60 ) ) , mTime , false , getContext () ) , com.ddiehl.timesincetextview.TimeSinceTextViewAndroidTest . is ( getQuantityString ( R.plurals.tstv_timespan_days , 1 ) ) ) ; } 
public com.mycompany.model.UserOTP saveUserQRCode ( java.lang.String username , java.lang.String qrcode ) { java.lang.System.out . println ( "=========+API============" ) ; com.mycompany.model.UserOTP userOTP = userOTPDao . getUserOTP ( username ) ; java.util.Date date = new java.util.Date () ; if ( userOTP != null ) { userOTP . setValidUser ( true ) ; userOTP . setQrcode ( qrcode ) ; userOTP . setModifiedTime ( date ) ; return userOTPDao . saveUserOTP ( userOTP ) ; } return userOTP ; } 
@ java.lang.Override public void run () { while ( ( mRecorder . getRecordingState () ) == ( android.media.AudioRecord.RECORDSTATE_RECORDING ) ) { short [] data = new short [ ( mBufferSize ) / 2 ] ; mRecorder . read ( data , 0 , ( ( mBufferSize ) / 2 ) ) ; mDecoder . appendSignal ( data ) ; } } 
private void updateLocation ( android.location.Location location ) { if ( location != null ) { currentLocation . setText ( com.example.xialong.funplacesforkids.util.Util . getCity ( this , location . getLatitude () , location . getLongitude () ) ) ; weather . execute ( location . getLatitude () , location . getLongitude () ) ; } else { currentLocation . setText ( WeatherUtil.DEFAULT_LOCATION ) ; } } 
private void checkSimultaneousRelease () { updateMovement () ; final int timeSensitiveness = 50 ; if ( ( ( keyThread ) != null ) && ( ( keyThread . getState () ) == ( java.lang.Thread.State.TIMED_WAITING ) ) ) {} else { keyThread = new java.lang.Thread () { public void run () { try { keyThread . sleep ( timeSensitiveness ) ; } catch ( java.lang.InterruptedException e ) { java.lang.System.out . println ( ( "------ Key thread interrupted -------\n" + e ) ) ; } } } ; keyThread . start () ; } } 
private void orderedInsert ( gradesystem.Grades insertedGrade ) { int index = 0 ; gradesystem.Grades element ; while ( index < ( aList . size () ) ) { element = aList . get ( index ) ; if ( ( insertedGrade . getTotalGrade () ) > ( element . getTotalGrade () ) ) { aList . add ( index , insertedGrade ) ; break; } index ++ ; } if ( index == ( aList . size () ) ) aList . add ( index , insertedGrade ) ; } 
public static void setResultFilterMethod ( com.ghostflying.portalwaitinglist.util.SettingUtil.ResultFilterMethod resultFilterMethod ) { if ( resultFilterMethod != ( com.ghostflying.portalwaitinglist.util.SettingUtil . getResultFilterMethod () ) ) { com.ghostflying.portalwaitinglist.util.SettingUtil.options . edit () . putInt ( com.ghostflying.portalwaitinglist.util.SettingUtil.RESULT_FILTER_METHOD_NAME , resultFilterMethod . ordinal () ) . apply () ; com.ghostflying.portalwaitinglist.util.SettingUtil . notifyChange ( resultFilterMethod ) ; } } 
public void housesNotIncluded ( java.util.ArrayList < org.w3c.dom.Element > houseElements ) { if ( ! ( houseElements . isEmpty () ) ) { for ( int i = 0 ; i < ( houseElements . size () ) ; i ++ ) { houseElements . get ( i ) . setAttribute ( model.ViewHandler.inView , "false" ) ; } } else {} } 
private int findId ( java.lang.String findTitle ) { for ( int i = 0 ; i < ( ( myArrayList . size () ) - 1 ) ; i ++ ) { java.lang.System.out . println ( myArrayList . size () ) ; if ( myArrayList . get ( i ) . getTitle () . contains ( findTitle ) ) { return i ; } } return - 1 ; } 
public void run () { while ( ( ( ( t ) <= ( tf ) ) || ( ( nProf ) > 0 ) ) || ( ( nAlu ) > 0 ) ) { int j = indexOfMin ( tps ) ; if ( ( tpll ) <= ( tps . get ( j ) ) ) { llegada () ; } else { salida ( j ) ; } if ( ( t ) >= ( tf ) ) { tpll = hv ; } } calcularResultados () ; } 
protected void removeType ( java.lang.String name ) { org.yakindu.base.types.Type type = typeRegistry . get ( name ) ; if ( type != null ) { extendsRegistry . removeAll ( type ) ; resource . getContents () . remove ( type ) ; typeRegistry . remove ( name ) ; } } 
public static com.alexwyler.wwc.dawg.DawgNode getInstance () { if ( ( com.alexwyler.wwc.dawg.DawgNode.instance ) == null ) { try { com.alexwyler.wwc.dawg.DawgNode.instance = com.alexwyler.wwc.dawg.DawgNode . makeDawg ( new java.io.File ( "WebContent/words.txt" ) ) ; } catch ( java.io.FileNotFoundException e ) { e . printStackTrace () ; } } return com.alexwyler.wwc.dawg.DawgNode.instance ; } 
private com.android.server.usage.UserUsageStatsService getUserDataAndInitializeIfNeededLocked ( int userId , long currentTimeMillis ) { com.android.server.usage.UserUsageStatsService service = mUserState . get ( userId ) ; if ( service == null ) { service = new com.android.server.usage.UserUsageStatsService ( getContext () , userId , new java.io.File ( mUsageStatsDir , java.lang.Integer . toString ( userId ) ) , this ) ; service . init ( currentTimeMillis , getScreenOnTimeLocked ( currentTimeMillis ) ) ; mUserState . put ( userId , service ) ; } return service ; } 
public void continuouslyDiscoverServices () { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Continuously Discover services called" ) ; if ( ( serviceDiscoveryRegistered ) == false ) { android.util.Log . i ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Setting up service discovery" ) ; registerServiceDiscoveryListeners () ; serviceDiscoveryRegistered = true ; } if ( continuouslyDiscovering ) { android.util.Log . w ( edu.rit.se.wifibuddy.WifiDirectHandler.TAG , "Services are still discovering, do not need to make this call" ) ; } else { addServiceDiscoveryRequest () ; continuouslyDiscovering = true ; serviceDiscoveryTasks = new java.util.ArrayList <> () ; discoverServices () ; submitServiceDiscoveryTask () ; } } 
public static void shuffle ( java.lang.Object [] a ) { for ( int i = 1 ; i < ( a.length ) ; i ++ ) { int r = edu.princeton.cs.algs4.StdRandom . uniform ( 0 , ( i + 1 ) ) ; java.lang.Object x = a [ i ] ; a [ i ] = a [ r ] ; a [ r ] = x ; } } 
public int HitOrStand ( int i ) { int x = i ; java.lang.System.out . println ( "Hit or stand?" ) ; java.lang.System.out . println ( "1: Hit" ) ; java.lang.System.out . println ( "2: Stand" ) ; if ( ( cs1.Keyboard . readInt () ) == 1 ) { x += drawCard () ; java.lang.System.out . println ( x ) ; if ( x > 21 ) { return x ; } else { HitOrStand ( x ) ; } } else { return x ; } return x ; } 
public java.util.List < utils.Song > getRandomSongList () { java.util.Random rand = new java.util.Random () ; int randNum ; java.util.List < utils.Song > randomSongs = new java.util.ArrayList < utils.Song > () ; for ( int i = 0 ; i < 3 ; i ++ ) { randNum = ( rand . nextInt ( albumSongs . size () ) ) + 1 ; java.lang.System.out . println ( ( "random number: " + randNum ) ) ; randomSongs . add ( albumSongs . get ( ( randNum - 1 ) ) ) ; } return randomSongs ; } 
public int selectRow ( java.awt.event.MouseEvent e ) { int selected_row = - 1 ; java.awt.Point p = e . getPoint () ; java.awt.FontMetrics fm = right_page . getFontMetrics ( right_page . getFont () ) ; selected_row = ( ( p.y ) / ( fm . getHeight () ) ) + 1 ; return selected_row ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ( obj == null ) || ( ! ( obj instanceof com.iota.iri.Neighbor ) ) ) { return false ; } return address . equals ( ( ( com.iota.iri.Neighbor ) ( obj ) ) . address ) ; } 
public java.lang.String fetchOrgFileString ( java.lang.String orgPath ) throws com.matburt.mobileorg.Error.ReportableError { java.io.BufferedReader reader = this . fetchOrgFile ( orgPath ) ; if ( reader == null ) { return "" ; } java.lang.String fileContents = "" ; java.lang.String thisLine = "" ; try { while ( ( thisLine = reader . readLine () ) != null ) { fileContents += thisLine + "\n" ; } } catch ( java.io.IOException e ) { throw new com.matburt.mobileorg.Error.ReportableError ( r . getString ( R.string.error_file_read , orgPath ) , e ) ; } return fileContents ; } 
@ java.lang.Override public E remove ( int location ) { location = location - 1 ; if ( ( ( location < ( currentSize ) ) && ( location >= 0 ) ) && ( ! ( isEmpty () ) ) ) { E obj = array [ location ] ; ( currentSize ) -- ; dynamicResize ( false ) ; shiftElements ( location , false ) ; return obj ; } else { throw new java.lang.RuntimeException ( "Index is not within contiguous list" ) ; } } 
public void onClick ( android.view.View view ) { java.lang.String newYaxis = ( ( java.lang.String ) ( yAxisSpinner . getSelectedItem () ) ) ; histogram . removeAllSeries () ; if ( newYaxis . equals ( "Virus" ) ) {} else {} java.lang.String titleToShow = ( ( reportYear + " " ) + newYaxis ) + " Histogram" ; histogramTitle . setText ( titleToShow ) ; } 
@ java.lang.Override public void createTable ( org.apache.hadoop.hive.metastore.api.Table tbl ) throws org.apache.hadoop.hive.metastore.api.InvalidObjectException , org.apache.hadoop.hive.metastore.api.MetaException { java.lang.String tbls = com.alibaba.fastjson.JSON . toJSONString ( tbl ) ; jedis . hset ( "table" , ( ( ( "" + ( tbl . getDbName () ) ) + "." ) + ( tbl . getTableName () ) ) , tbls ) ; org.apache.hadoop.hive.metastore.NewObjectStore.LOG . info ( ( ( "-----tianlong-----create table " + ( tbl . getTableName () ) ) + " success!" ) ) ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out . println ( ( "Paikka 1 1 " + ( whichmark () ) ) ) ; ChangeButton ( buttonbb ) ; buttonbb . setEnabled ( false ) ; viimeisinSiirto [ 1 ] [ 1 ] = whichmark () ; ( buttoncount ) ++ ; } 
@ java.lang.Override public void run ( io.github.carlorodriguez.alarmon.NotificationServiceInterface service ) { int count ; try { count = service . firingAlarmCount () ; } catch ( android.os.RemoteException e ) { return; } if ( count > 0 ) { android.content.Intent notifyActivity = new android.content.Intent ( getApplicationContext () , io.github.carlorodriguez.alarmon.ActivityAlarmNotification . class ) ; notifyActivity . setFlags ( Intent.FLAG_ACTIVITY_NEW_TASK ) ; startActivity ( notifyActivity ) ; } } 
javax.swing.JLabel getViewTitleLabel () { if ( ( viewTitleLabel ) == null ) { viewTitleLabel = new javax.swing.JLabel () ; viewTitleLabel . setFont ( viewTitleLabel . getFont () . deriveFont ( org.cytoscape.util.swing.LookAndFeelUtil . getSmallFontSize () ) ) ; viewTitleLabel . setMinimumSize ( new java.awt.Dimension ( viewTitleLabel . getPreferredSize () . width , getViewTitleTextField () . getPreferredSize () . height ) ) ; } return viewTitleLabel ; } 
private static int getSequenceNumber ( byte [] datagramContents ) { int start = ( Packet.SENDER_LENGTH ) + ( Packet.RECEIVER_LENGTH ) ; int end = start + ( Packet.SEQUENCE_NUM_LENGTH ) ; byte [] seqNumArray = new byte [ Packet.SEQUENCE_NUM_LENGTH ] ; seqNumArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer seqNumByteBuffer = java.nio.ByteBuffer . wrap ( seqNumArray ) ; int seqNum = seqNumByteBuffer . getShort () ; return seqNum ; } 
private static int addArguments ( java.lang.String [] args ) { int sum = 0 ; if ( ( args.length ) < 1 ) return 0 ; else if ( args [ 0 ] . equals ( "-" ) ) for ( int i = 1 ; i < ( args.length ) ; i ++ ) sum -= java.lang.Integer . valueOf ( args [ i ] ) ; else for ( java.lang.String arg : args ) sum += java.lang.Integer . valueOf ( arg ) ; return sum ; } 
private void generateFieldIdMethod ( final java.lang.StringBuilder sb , final uk.co.real_logic.sbe.ir.Token token , final java.lang.String indent ) { sb . append ( java.lang.String . format ( ( ( "\n" + indent ) + "    public const int %sId = %d;\n" ) , uk.co.real_logic.sbe.generation.csharp.CSharpUtil.CSharpUtil . formatPropertyName ( token . name () ) , token . id () ) ) ; } 
public boolean lowerRoom ( int roomID ) { int prev_level = rooms_list . get ( roomID ) . getLevel () ; rooms_list . get ( roomID ) . lower () ; return prev_level > ( rooms_list . get ( roomID ) . getLevel () ) ; } 
public void restoreMarkers () { java.util.Iterator < application.GeographicPoint > it = markerMap . keySet () . iterator () ; while ( it . hasNext () ) { gmapsfx.javascript.object.Marker marker = markerMap . get ( it . next () ) ; if ( marker != ( startMarker ) ) { marker . setVisible ( false ) ; marker . setVisible ( true ) ; } } selectManager . resetSelect () ; } 
@ java.lang.Override public byte [] getBinaryContentById ( int id , int publication ) throws org.dd4t.core.exceptions.ItemNotFoundException { final com.tridion.data.BinaryData binaryData = org.dd4t.providers.impl.BrokerBinaryProvider.BINARY_CONTENT_RETRIEVER . getBinary ( publication , id ) ; if ( ( binaryData == null ) || ( ( binaryData . getDataSize () ) == 0 ) ) { throw new org.dd4t.core.exceptions.ItemNotFoundException ( ( ( ( "Unable to find binary content by id: tcm:" + publication ) + "-" ) + id ) ) ; } try { return binaryData . getBytes () . clone () ; } catch ( java.io.IOException e ) { throw new org.dd4t.core.exceptions.ItemNotFoundException ( e ) ; } } 
@ java.lang.Override public boolean isApplicable ( model.AtomData data ) { if ( ( ( toDeltaColumn ) == null ) && ( ( toDeltaID ) != null ) ) { for ( model.DataColumnInfo d : data . getDataColumnInfos () ) { if ( d . getId () . equals ( toDeltaID ) ) { this . toDeltaColumn = d ; } } } return ( ( data . getNext () ) != null ) || ( ( data . getPrevious () ) != null ) ; } 
private void presentNotificationsList ( final org.apache.cordova.CallbackContext callbackContext ) { if ( 0 == ( com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . getPendingNotifications () . size () ) ) { callbackContext . error ( "empty" ) ; } else { callbackContext . success () ; com.vidinoti.android.vdarsdk.VDARSDKController . getInstance () . presentNotificationsList () ; } } 
@ java.lang.SuppressWarnings ( value = "null" ) public void insertAt ( int item , int pos ) { int i = 1 ; Node newNode = new Node () ; newNode.data = item ; newNode.next = null ; Node temp ; temp = head ; while ( i < ( pos - 1 ) ) { i ++ ; temp = temp.next ; } newNode.next = temp.next ; temp.next = newNode ; } 
@ java.lang.Override public int compare ( com.vejkamera.RoadCamera lhsRoadCamera , com.vejkamera.RoadCamera rhsRoadCamera ) { if ( lhsRoadCamera == null ) { return - 1 ; } if ( rhsRoadCamera == null ) { return 1 ; } for ( java.lang.String currentSyncId : originalSorting ) { if ( lhsRoadCamera . getSyncId () . equals ( currentSyncId ) ) { return - 1 ; } if ( rhsRoadCamera . getSyncId () . equals ( currentSyncId ) ) { return 1 ; } } return 0 ; } 
@ org.hamcrest.Factory public static org.hamcrest.Matcher < facebook4j.internal.http.HttpParameter [] > hasPostJsonParameter ( final java.lang.String name , final java.lang.String expectedJsonObjectSource ) { facebook4j.internal.org.json.JSONObject expectedJsonObject ; try { expectedJsonObject = new facebook4j.internal.org.json.JSONObject ( expectedJsonObjectSource ) ; } catch ( facebook4j.internal.org.json.JSONException ex ) { throw new java.lang.AssertionError ( ( "failed to parse object source: " + expectedJsonObjectSource ) ) ; } return facebook4j.junit.F4JHttpParameterMatchers . hasPostJsonParameter ( name , expectedJsonObject ) ; } 
@ java.lang.Override public int compare ( java.lang.String object1 , java.lang.String object2 ) { java.lang.Long l1 = mp . get ( object1 ) ; java.lang.Long l2 = mp . get ( object2 ) ; if ( l2 == null ) { l2 = 0L ; } if ( l1 == null ) { l1 = 0L ; } return l2 . compareTo ( l1 ) ; } 
public void init () { try { java.util.ArrayList < java.util.ArrayList < java.lang.String > > last_id = new java.util.ArrayList ( place_bet . ExecuteQuery ( "SELECT max(BetID) FROM bets;" ) ) ; if ( ( last_id . get ( 0 ) . get ( 0 ) ) != null ) this . CurrentBetID = java.lang.Long . parseLong ( last_id . get ( 0 ) . get ( 0 ) ) ; } catch ( java.sql.SQLException e ) { e . printStackTrace () ; } } 
@ javax.ws.rs.POST @ javax.ws.rs.Consumes ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Produces ( value = javax.ws.rs.core.MediaType.APPLICATION_JSON ) @ javax.ws.rs.Path ( value = "/{id}/reminder" ) @ io.swagger.annotations.ApiOperation ( value = "sends an email reminder for a specified assessment" ) @ io.swagger.annotations.ApiResponses ( value = { @ io.swagger.annotations.ApiResponse ( code = 200 , message = "Reminder sent" ) } ) public javax.ws.rs.core.Response remindRespondant ( @ io.swagger.annotations.ApiParam ( value = "Respondant Id" ) @ javax.ws.rs.PathParam ( value = "id" ) java.lang.Long respondantId ) { com.employmeo.data.model.Respondant respondant = respondantService . getRespondantById ( respondantId ) ; if ( ( respondant . getRespondantStatus () ) <= ( com.employmeo.data.model.Respondant.STATUS_STARTED ) ) { respondant . setRespondantStatus ( Respondant.STATUS_REMINDED ) ; respondantService . save ( respondant ) ; } emailService . sendEmailReminder ( respondant ) ; return javax.ws.rs.core.Response . status ( Status.OK ) . build () ; } 
public void hmovement () { if ( ( ( movementSpeed ) > 0 ) && ( ( xpos ) >= 630 ) ) { updateLogic ( true ) ; } if ( ( ( movementSpeed ) < 0 ) && ( ( xpos ) <= 2 ) ) { updateLogic ( true ) ; } xpos += movementSpeed ; } 
private void clearUserEdits ( int [] backup ) { int userEdited = 0 ; for ( int i = 0 ; i < ( backup.length ) ; i ++ ) { if ( ( ( backup [ i ] ) != ( Cell.NONE ) ) && ( ! ( mCells [ i ] . isLocked () ) ) ) { backup [ i ] = Cell.NONE ; userEdited ++ ; } } } 
private boolean isNorthEastMovementBlocked ( game.Piece piece , int newX , int newY ) { int moveCounter = 1 ; for ( int i = ( piece . getY () ) + 1 ; i < newY ; i ++ ) { if ( tileHasPiece ( ( ( piece . getX () ) + moveCounter ) , i ) ) return true ; moveCounter ++ ; } return false ; } 
public void hurt ( final int aValue , final boolean aHeavy ) { mValue += aValue ; if ( ( mValue ) >= ( mSteps.length ) ) { mValue = ( mSteps.length ) - 1 ; } if ( aHeavy ) { mHeavyWounds += aValue ; if ( ( mHeavyWounds ) > ( mValue ) ) { mHeavyWounds = mValue ; } mChangeListener . sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( true , mHeavyWounds ) ) ; } mChangeListener . sendChange ( new com.deepercreeper.vampireapp.host.change.HealthChange ( false , mValue ) ) ; updateValue () ; } 
private java.lang.String worstTime () { java.util.ArrayList < java.lang.Long > arrayListTemp = new java.util.ArrayList <> () ; for ( long i : arrayListTimes ) { if ( i > 0 ) { arrayListTemp . add ( i ) ; } } if ( ( arrayListTemp . size () ) == 0 ) { return "Worst: " + "0" ; } return "Worst: " + ( com.example.tom.timer.TimerTime . convertMillisToTime ( java.util.Collections . max ( arrayListTemp ) ) ) ; } 
public void bindRestaurant ( com.example.bubbles.myrestaurants.models.Restaurant restaurant ) { com.squareup.picasso.Picasso . with ( mContext ) . load ( restaurant . getImageUrl () ) . into ( mRestaurantImageView ) ; mNameTextView . setText ( restaurant . getName () ) ; mCategoryTextView . setText ( restaurant . getCategories () . get ( 0 ) ) ; mRatingTextView . setText ( ( ( "Rating: " + ( restaurant . getRating () ) ) + "/5" ) ) ; } 
public void test_when_VideoH264PacketProducer_has_started_then_isWorking_returns_true_otherwise_false () { com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer producer = new com.example.zebul.cameraservice.packet_producers.video.camera.CameraVideoH264PacketProducer ( new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.H264PacketListenerFake () , new com.example.zebul.cameraservice.packet_producers.CameraVideoH264PacketProducerTest.PacketProductionExceptionListenerFake () ) ; assertFalse ( producer . isWorking () ) ; for ( int i = 0 ; i < 3 ; i ++ ) { producer . start ( defaultCameraSettings ) ; assertTrue ( producer . isWorking () ) ; producer . stop () ; assertFalse ( producer . isWorking () ) ; } } 
public void stopStreaming () { mStreamManager . stopStreaming () . addOnCompleteListener ( new com.google.android.gms.tasks.OnCompleteListener < java.lang.Void > () { @ java.lang.Override public void onComplete ( @ android.support.annotation.NonNull com.google.android.gms.tasks.Task < java.lang.Void > task ) { if ( task . isSuccessful () ) { android.util.Log . d ( io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG , "Stop succeeds" ) ; mControlOverlayLayout . updateStreamingStatusOnUiThread ( false ) ; endLiveEvent () ; } else { android.util.Log . e ( io.straas.android.sdk.streaming.demo.MyScreencastSession.TAG , ( "Stop fails: " + ( task . getException () ) ) ) ; } } } ) ; } 
@ java.lang.Override public void run () { try { java.lang.Thread . sleep ( ( 1 * 1000L ) ) ; slaveJedis80 . shutdown () ; logger . info ( "shutdown the slave 80" ) ; java.lang.Thread . sleep ( ( 1 * 1000L ) ) ; slaveJedis81 . shutdown () ; logger . info ( "shutdown the slave 81" ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } } 
private java.lang.String [] getParsedData () { java.lang.String [] parsedComponentData = new java.lang.String [ this . componentList . size () ] ; for ( int i = 0 ; i < ( this . componentList . size () ) ; i ++ ) { Strand temp = this . componentList . get ( i ) ; java.lang.String sequence = temp.sequence ; parsedComponentData [ i ] = ( ( temp.name ) + ":" ) + sequence ; } return parsedComponentData ; } 
private java.lang.String readFile ( ) throws java.io.FileNotFoundException , java.io.IOException { java.util.List < java.lang.String > lines = com.google.common.io.CharStreams . readLines ( new java.io.FileReader ( file ) ) ; java.lang.String allLines = "" ; for ( java.lang.String line : lines ) { allLines += line + "\n" ; } return allLines . substring ( 0 , ( ( allLines . length () ) - 1 ) ) ; } 
private void processNormalTasksAndEvents ( java.util.ArrayList < katnote.task.Task > normalTasks , java.util.ArrayList < katnote.task.Task > events ) { if ( ( normalTasks . isEmpty () ) && ( events . isEmpty () ) ) { return; } java.util.Queue < katnote.task.Task > normalTasksQueue = copyTasksIntoLinkedList ( normalTasks ) ; java.util.ArrayList < katnote.task.Task > eventCopy = new java.util.ArrayList < katnote.task.Task > ( events ) ; if ( _isGUIFormat ) { processForToday ( normalTasksQueue , eventCopy ) ; processForTomorrow ( normalTasksQueue , eventCopy ) ; processForTheWeek ( normalTasksQueue , eventCopy ) ; processRemainingTasks ( normalTasksQueue , eventCopy ) ; } } 
private int writeSprite ( byte [] spriteData ) { int size = spriteData.length ; int bankBytesLeft = ( SpritesToROM.BANK_SIZE ) - ( ( dataAddr ) % ( SpritesToROM.BANK_SIZE ) ) ; if ( bankBytesLeft < size ) { dataAddr += bankBytesLeft + ( SpritesToROM.HEADER_SIZE ) ; } int tmp = dataAddr ; writeIndex ( dataAddr ) ; dataAddr += writeBytes ( rom , dataAddr , spriteData ) ; return tmp ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { if ( ( level ) < ( lvlMax ) ) { ( level ) ++ ; } else { level = lvlMin ; } android.util.Log . d ( "lv" , java.lang.String . valueOf ( level ) ) ; page = firstPage ; new com.example.shintaku.test.Setting2Activity.Loader () . execute () ; } 
public java.lang.String getSlice ( int startLine , int endLine ) { java.util.List < java.lang.String > lines = cl . getCodeSlice ( startLine , endLine ) ; java.lang.StringBuilder sb = new java.lang.StringBuilder () ; for ( java.lang.String line : lines ) { if ( ( sb . length () ) != 0 ) { sb . append ( PMD.EOL ) ; } sb . append ( line ) ; } return sb . toString () ; } 
private static in.jaaga.learning.api.ChatReply [] convertToChatReplyOptions ( java.lang.String [] options ) { java.util.ArrayList < in.jaaga.learning.api.ChatReply > replies = new java.util.ArrayList <> ( options.length ) ; in.jaaga.learning.api.ChatReply reply ; for ( int i = 0 ; i < ( options.length ) ; i ++ ) { reply = new in.jaaga.learning.api.ChatReply () ; reply.type = ChatReplyType.Regular ; reply.displayText = options [ i ] ; replies . add ( reply ) ; } return replies . toArray ( new in.jaaga.learning.api.ChatReply [ 0 ] ) ; } 
private void appendTypeVarsFromEnclosingFunctions ( java.util.List < gw.lang.ir.IRSymbol > parameters , gw.internal.gosu.parser.IGosuClassInternal gsClass ) { while ( gsClass . isAnonymous () ) { gw.lang.parser.IDynamicFunctionSymbol dfs = getEnclosingDFS ( gsClass ) ; if ( dfs == null ) { break; } if ( dfs . isReified () ) { addTypeParamDescriptor ( parameters , getTypeVarsForDFS ( dfs ) ) ; } gsClass = ( ( gw.internal.gosu.parser.IGosuClassInternal ) ( dfs . getGosuClass () ) ) ; } } 
private void resize ( int capacity ) { assert capacity >= ( N ) ; Item [] temp = ( ( Item [] ) ( new java.lang.Object [ capacity ] ) ) ; for ( int i = 0 ; i < ( N ) ; i ++ ) { copyIfNotNull ( a , temp , i , i ) ; } a = temp ; } 
@ java.lang.Override public void run () { while ( ( progressBarStatus ) < 100 ) { progressBarStatus = counter ; counter += 1 ; try { java.lang.Thread . sleep ( 30 ) ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } progressBarHandler . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { mProgressDialog . setProgress ( progressBarStatus ) ; } } ) ; } } 
private static int getReceiverID ( byte [] datagramContents ) { int start = Packet.RECEIVER_LENGTH ; int end = start + ( Packet.RECEIVER_LENGTH ) ; byte [] receiverIdArray = new byte [ Packet.RECEIVER_LENGTH ] ; receiverIdArray = java.util.Arrays . copyOfRange ( datagramContents , start , end ) ; java.nio.ByteBuffer receiverIdByteBuffer = java.nio.ByteBuffer . wrap ( receiverIdArray ) ; int receiverID = receiverIdByteBuffer . getInt () ; return receiverID ; } 
private java.util.ArrayList < com.application.dsmsocial.ImageItem > getData () { final java.util.ArrayList < com.application.dsmsocial.ImageItem > imageItems = new java.util.ArrayList <> () ; android.content.res.TypedArray imgs = getResources () . obtainTypedArray ( R.array.shopImage ) ; for ( int i = 0 ; i < ( imgs . length () ) ; i ++ ) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory . decodeResource ( getResources () , imgs . getResourceId ( i , ( - 1 ) ) ) ; imageItems . add ( new com.application.dsmsocial.ImageItem ( bitmap , null ) ) ; } return imageItems ; } 
public void setIncomingPortletCandidate ( final org.vaadin.addons.portallayout.gwt.client.portlet.PortletChrome portletWidget ) { assert portletWidget != null ; final com.vaadin.client.ComponentConnector pc = com.vaadin.client.Util . findConnectorFor ( portletWidget . getContentWidget () ) ; if ( ( outcomingPortletCandidate ) == pc ) { outcomingPortletCandidate = null ; } else if ( ! ( getChildComponents () . contains ( pc ) ) ) { incomingPortletCandidate = pc ; } } 
@ java.lang.Override public RecyclerView.ViewHolder onCreateViewHolder ( android.view.ViewGroup parent , int viewType ) { if ( viewType == ( Category.TYPE_SUB_TITLE ) ) { return new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryTitleViewHolder ( mLayoutInflater . inflate ( R.layout.item_category_list_subtitle , null , false ) ) ; } else if ( viewType == ( Category.TYPE_SUB_ITEM ) ) { return new com.fmtech.categoryrecyclerview.CategoryAdapter.CategoryItemViewHolder ( mLayoutInflater . inflate ( R.layout.item_category_list_subitem , null , false ) ) ; } else { throw new java.lang.RuntimeException ( ( "Invalid viewType: " + viewType ) ) ; } } 
private java.lang.String convertToTableName ( android.net.Uri uri ) { int i = com.ywca.pentref.common.PentrefProvider.mUriMatcher . match ( uri ) ; switch ( com.ywca.pentref.common.PentrefProvider.mUriMatcher . match ( uri ) ) { case com.ywca.pentref.common.PentrefProvider.POI_TABLE : case com.ywca.pentref.common.PentrefProvider.POI_ROW : case com.ywca.pentref.common.PentrefProvider.SEARCH_SUGGESTIONS : return com.ywca.pentref.models.Poi.TABLE_NAME ; case com.ywca.pentref.common.PentrefProvider.CATEGORY_TABLE : case com.ywca.pentref.common.PentrefProvider.CATEGORY_ROW : return Contract.Category.TABLE_NAME ; case com.ywca.pentref.common.PentrefProvider.BOOKMARK_TABLE : case com.ywca.pentref.common.PentrefProvider.BOOKMARK_ROW : return Contract.Bookmark.TABLE_NAME ; default: throw new java.lang.IllegalArgumentException ( ( "Illegal uri: " + uri ) ) ; } } 
public static double getFireIndex ( java.lang.String sent1 ) { RapAnalyzer fire = new RapAnalyzer () ; double t = ( RapAnalyzer . sentenceanalyzer ( sent1 ) ) * 10 ; double w = ( RapAnalyzer . wordlength ( sent1 ) ) * 0.5 ; double y = ( RapAnalyzer . wordvariety ( sent1 ) ) * 0.5 ; RapAnalyzer.fireindex = ( ( t + w ) + y ) / 3 ; return RapAnalyzer.fireindex ; } 
private static void setToPositionInRow ( de.hotware.blockbreaker.model.Block [] [] pMatrix , int pRow , int pPosition , de.hotware.blockbreaker.model.Block.BlockColor pColor , int pSize ) { pSize += pPosition ; for ( int i = pPosition ; i < pSize ; ++ i ) { pMatrix [ pRow ] [ i ] = new de.hotware.blockbreaker.model.Block ( pColor , pRow , i ) ; } } 
public void tick () { for ( int i = 0 ; i < ( enemies . size () ) ; i ++ ) { enemies . get ( i ) . tick () ; if ( ( enemies . get ( i ) . getHealth () ) <= 0 ) enemies . remove ( i ) ; } } 
private boolean contains ( java.lang.Object field , java.lang.Object value ) { if ( field == null ) { return ( value == null ) || ( value . equals ( "" ) ) ; } return field . toString () . contains ( value . toString () ) ; } 
public void onUserRemoved ( int userId ) { if ( userId < 1 ) return; synchronized ( mAppWidgetServices ) { com.android.server.AppWidgetServiceImpl impl = mAppWidgetServices . get ( userId ) ; mAppWidgetServices . remove ( userId ) ; if ( impl == null ) { com.android.server.AppWidgetServiceImpl . getSettingsFile ( userId ) . delete () ; } else { impl . onUserRemoved () ; } } } 
private org.eclipse.sirius.diagram.description.Layer getOrCreateAnimationLayer ( org.eclipse.sirius.diagram.description.DiagramDescription description , java.lang.String layerName , org.eclipse.core.runtime.IProgressMonitor monitor ) { final org.eclipse.sirius.diagram.description.Layer res ; org.eclipse.sirius.diagram.description.Layer existingLayer = null ; for ( org.eclipse.sirius.diagram.description.Layer layer : description . getAdditionalLayers () ) { if ( layerName . equals ( layer . getName () ) ) { existingLayer = layer ; break; } } if ( existingLayer != null ) { res = existingLayer ; } else { res = createLayer ( description , layerName , monitor ) ; } return res ; } 
public void remove ( small.data.structures.Vec2 gridPos ) { int idx = ( ( gridPos.y ) * ( gridRows ) ) + ( gridPos.x ) ; if ( ! ( map . containsKey ( idx ) ) ) { log . info ( "Could not remove. Key is not in buffer." ) ; return; } map . remove ( idx ) ; if ( gridPos . equals ( relativeOrigin ) ) { log . info ( "Removing current relative origin requires the relative origin to be updated." ) ; log . info ( "Updating relative origin..." ) ; this . updateRelativeOrigin () ; } } 
public void updateTask ( int index , seedu.taskboss.model.task.ReadOnlyTask editedTask ) throws seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException { assert editedTask != null ; seedu.taskboss.model.task.Task taskToUpdate = internalList . get ( index ) ; if ( ( ( ! ( taskToUpdate . equals ( editedTask ) ) ) && ( internalList . contains ( editedTask ) ) ) && ( ! ( editedTask . getCategories () . contains ( Category.done ) ) ) ) { throw new seedu.taskboss.model.task.UniqueTaskList.DuplicateTaskException () ; } taskToUpdate . resetData ( editedTask ) ; internalList . set ( index , taskToUpdate ) ; } 
public void stop () { try { this . socket . close () ; } catch ( final java.io.IOException e1 ) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG . debug ( ( "Close forced: " + ( e1 . getMessage () ) ) ) ; } try { this . listeners . clear () ; if ( ( this . listenThread ) != null ) { this . listenThread . halt () ; } } catch ( final java.lang.Exception e ) { de.taimos.gpsd4java.backend.GPSdEndpoint.LOG . debug ( "Interrupted while waiting for listenThread to stop" , e ) ; } this . listenThread = null ; } 
@ java.lang.Override public void onBackPressed () { super . onBackPressed () ; if ( exit ) { finish () ; } else { android.widget.Toast . makeText ( this , getString ( R.string.press_back_again ) , Toast.LENGTH_SHORT ) . show () ; exit = true ; new android.os.Handler () . postDelayed ( new java.lang.Runnable () { @ java.lang.Override public void run () { exit = false ; } } , ( 3 * ( com.newrunner.googlemap.MainActivity.ONE_SECOND ) ) ) ; } } 
public void onUriChange ( android.net.Uri locationWithDateUri ) { android.util.Log . v ( LOG_TAG , "onUriChange" ) ; if ( locationWithDateUri != null ) { _locationWithDateUri = locationWithDateUri ; if ( ( getLoaderManager () ) == null ) { android.util.Log . v ( LOG_TAG , "onUriChange: null" ) ; } else { android.util.Log . v ( LOG_TAG , "onUriChange: !null" ) ; getLoaderManager () . restartLoader ( LOADER_ID , null , this ) ; } } } 
@ java.lang.Override public void run () { try { executable . execute ( context ) ; } catch ( com.kylinolap.job2.exception.ExecuteException e ) { logger . error ( ( "ExecuteException job:" + ( executable . getId () ) ) , e ) ; } catch ( java.lang.Exception e ) { logger . error ( ( "unknown error execute job:" + ( executable . getId () ) ) , e ) ; } finally { context . removeRunningJob ( executable ) ; } } 
@ java.lang.Override protected void onPostExecute ( ca.rmen.android.scrumchatter.meeting.detail.MeetingPagerAdapter result ) { mMeetingPagerAdapter = result ; mBinding.activityLoading . setVisibility ( View.GONE ) ; mBinding.pager . setAdapter ( mMeetingPagerAdapter ) ; if ( ( mMeetingId ) >= 0 ) { int position = mMeetingPagerAdapter . getPositionForMeetingId ( mMeetingId ) ; ca.rmen.android.scrumchatter.util.Log . v ( TAG , ( ( ( "meeting " + ( mMeetingId ) ) + " is on page " ) + position ) ) ; mBinding.pager . setCurrentItem ( position ) ; } } 
private void restoreStandaloneLinksFromBackup () { if ( ( backupStandaloneLinks ) != null ) { aQute.bnd.build.model.conversions.Converter < java.lang.Object , java.lang.String > converter = model . lookupConverter ( bndtools.editor.project.RepositorySelectionPart.PROP_STANDALONE ) ; @ java.lang.SuppressWarnings ( value = "unchecked" ) java.util.List < aQute.bnd.build.model.clauses.HeaderClause > restored = ( ( java.util.List < aQute.bnd.build.model.clauses.HeaderClause > ) ( converter . convert ( backupStandaloneLinks ) ) ) ; standaloneLinks = restored ; backupStandaloneLinks = null ; } else { standaloneLinks = new java.util.LinkedList <> () ; } } 
@ java.lang.Override public org.silverpeas.components.projectmanager.model.TaskDetail getMostDistantTask ( java.lang.String instanceId , int taskId ) { java.sql.Connection con = getConnection () ; try { return org.silverpeas.components.projectmanager.model.ProjectManagerDAO . getMostDistantTask ( con , taskId ) ; } catch ( java.lang.Exception re ) { throw new org.silverpeas.components.projectmanager.model.ProjectManagerRuntimeException ( "DefaultProjectManagerService.getMostDistantTask()" , org.silverpeas.core.exception.SilverpeasRuntimeException.ERROR , "projectManager.GETTING_TASK_FAILED" , ( "taskId = " + taskId ) , re ) ; } finally { org.silverpeas.core.persistence.jdbc.DBUtil . close ( con ) ; } } 
private java.lang.String getSequence ( com.axelor.apps.base.db.Company company ) throws com.axelor.exception.AxelorException { java.lang.String seq = sequenceService . getSequenceNumber ( IAdministration.SALES_ORDER , company ) ; if ( seq == null ) { throw new com.axelor.exception.AxelorException ( java.lang.String . format ( com.axelor.i18n.I18n . get ( IExceptionMessage.SALES_ORDER_1 ) , company . getName () ) , com.axelor.exception.db.IException.CONFIGURATION_ERROR ) ; } return seq ; } 
private static double translatePreference ( int p ) { int maxValue = 9 ; int minValue = - 9 ; if ( p > maxValue ) p = maxValue ; if ( p < minValue ) p = minValue ; if ( p == 0 ) { return 1 ; } else if ( p > 0 ) { return p ; } else { return 1.0 / ( java.lang.Math . abs ( p ) ) ; } } 
public java.lang.String getShortLogMessage () { int args = this . method . getParameterTypes () . length ; return ( ( ( ( ( getBeanType () . getName () ) + "#" ) + ( this . method . getName () ) ) + "[" ) + args ) + " args]" ; } 
public void closeBrowser () { mBrowserFrame . setBackgroundColor ( mBackgroundColor ) ; performExitCleanUp () ; mBrowserFrame . removeAllViews () ; int size = mTabsManager . size () ; mTabsManager . shutdown () ; mCurrentView = null ; for ( int n = 0 ; n < size ; n ++ ) { mTabsView . tabRemoved ( 0 ) ; } finish () ; } 
@ org.junit.Test public void getPluginDirProperty_explicitly_set ( ) throws org.pentaho.di.core.exception.KettleException { final java.lang.String PLUGIN_DIR = "/opt/pentaho" ; c . set ( MRUtil.PROPERTY_PENTAHO_KETTLE_PLUGINS_DIR , PLUGIN_DIR ) ; java.lang.String pluginDirProperty = org.pentaho.hadoop.mapreduce.MRUtil . getPluginDirProperty ( c ) ; org.junit.Assert . assertTrue ( ( "Plugin Directory Property not configured as expected: " + pluginDirProperty ) , pluginDirProperty . endsWith ( PLUGIN_DIR ) ) ; } 
public void run () { network.ServerSocketCreator create = new network.ServerSocketCreator () ; java.lang.Thread serverSock = new java.lang.Thread ( create ) ; serverSock . start () ; java.util.Scanner read = new java.util.Scanner ( java.lang.System.in ) ; char input = 'N' ; java.lang.System.out . println ( "Would you like to stop the server? Y/N" ) ; input = read . nextLine () . charAt ( 0 ) ; while ( input != 'Y' ) { input = read . nextLine () . charAt ( 0 ) ; } read . close () ; create . terminate () ; } 
private boolean setPlayerToHaveLargestArmy ( int playerIndex ) { if ( ( playerIndex < 0 ) || ( playerIndex > 3 ) ) return false ; if ( ( currentLargestArmyPlayer ) != ( - 1 ) ) { adjustPlayersPoints ( currentLargestArmyPlayer , ( ( - 1 ) * ( LargestArmyValue ) ) ) ; } currentLargestArmyPlayer = playerIndex ; adjustPlayersPoints ( currentLargestArmyPlayer , LargestArmyValue ) ; return true ; } 
@ java.lang.Override public boolean apply ( @ javax.annotation.Nullable com.gmi.nordborglab.browser.shared.proxy.TraitProxy input ) { if ( input == null ) return true ; boolean isNotFound = true ; for ( com.gmi.nordborglab.browser.shared.proxy.AlleleAssayProxy alleleAssay : input . getObsUnit () . getStock () . getPassport () . getAlleleAssays () ) { if ( alleleAssay . getId () . equals ( selectedAlleleAssay . getId () ) ) { isNotFound = false ; break; } } return isNotFound ; } 
private void release () { com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , "RELEASE: release(): Releasing all HXSoundEngine instances..." ) ; int i = 0 ; for ( int x : new int [ numberOfEngines ] ) { hxSoundEngines . get ( i ) . release () ; com.huhx0015.hxaudio.utils.HXLog . d ( com.huhx0015.hxaudio.audio.HXSound.LOG_TAG , ( ( "RELEASE: release(): HXSoundEngine (" + i ) + ") is released." ) ) ; i ++ ; } hxSoundEngines = null ; } 
static src.CircularList < src.Candidate > initList ( int nbCandidates ) { src.CircularList < src.Candidate > list = new src.CircularList () ; for ( int i = 1 ; i <= nbCandidates ; i ++ ) { list . add ( new src.Candidate ( ( "" + i ) , "" ) ) ; } return list ; } 
@ java.lang.Override public void onResponse ( retrofit2.Call < io.caly.calyandroid.model.response.BasicResponse > call , retrofit2.Response < io.caly.calyandroid.model.response.BasicResponse > response ) { io.caly.calyandroid.util.Logger . d ( io.caly.calyandroid.activity.TAG , ( "onResponse code : " + ( response . code () ) ) ) ; io.caly.calyandroid.util.Logger . d ( io.caly.calyandroid.activity.TAG , ( "param" + ( io.caly.calyandroid.util.Util . requestBodyToString ( call . request () . body () ) ) ) ) ; switch ( response . code () ) { case 200 : break; default: com.crashlytics.android.Crashlytics . logException ( new io.caly.calyandroid.exception.UnExpectedHttpStatusException ( call , response ) ) ; break; } } 
private static int getIntAttr ( org.w3c.dom.Element element , java.lang.String attrName ) { if ( element == null ) return 0 ; try { return java.lang.Integer . parseInt ( element . getAttribute ( attrName ) ) ; } catch ( java.lang.NumberFormatException e ) { craftedcart.smbworkshopexporter.util.LogHelper . error ( craftedcart.smbworkshopexporter.XMLConfigParser . class , java.lang.String . format ( "Invalid integer at %s" , element . toString () ) ) ; } return 0 ; } 
public static void main ( java.lang.String [] args ) { Interpolation interpolation = new Interpolation () ; double second = interpolation . secondOrder () ; double third = interpolation . thirdOrder () ; java.lang.System.out . println ( ( "Second order value : " + second ) ) ; java.lang.System.out . println ( ( "Third order value : " + third ) ) ; double error = ( ( double ) ( third ) ) - second ; java.lang.System.out . println ( ( "Error : " + error ) ) ; } 
private void startMonitor () { if ( mMonitoring . compareAndSet ( false , true ) ) { if ( ( ( mRunningMonitor ) == null ) && ( ( mStateMonitor ) != null ) ) { mRunningMonitor = mThreadPoolManager . scheduleFixedRate ( ThreadType.DECODER , mStateMonitor , 20 , java.util.concurrent.TimeUnit.MILLISECONDS ) ; } else { throw new java.lang.RuntimeException ( ( "Channel state monitor's scheduled " + "future pointer was not null" ) ) ; } } } 
public void enqueue ( Item item ) { if ( item == null ) { throw new java.lang.NullPointerException () ; } queue [ tail ] = item ; ++ ( size ) ; swap ( tail , randomIndex () ) ; tail = ( ++ ( tail ) ) % ( queue.length ) ; if ( ( size ) > ( ( queue.length ) / 2 ) ) { changeQueueSize ( ( ( queue.length ) * 2 ) ) ; } } 
public java.util.List < com.ryan.pojo.ChunkInfo > fsp () { java.util.List < com.ryan.pojo.ChunkInfo > chunkList = new java.util.ArrayList <> () ; markChunkPostition ( buffer , chunkSize ) ; while ( true ) { int currentPos = this . chunkId ; ( this . chunkId ) ++ ; if ( currentPos >= ( list . size () ) ) { return chunkList ; } else { key . set ( currentPos ) ; chunkList . add ( nextKeyValue ( currentPos ) ) ; } } } 
java.lang.String executeChange ( org.bukkit.entity.Player player , java.lang.String oldGroup , java.lang.String newGroup , java.lang.String world ) { java.lang.String msg ; if ( changeGroup ( player , oldGroup , newGroup , world ) ) { msg = ( ( ( ( "Successfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } else { msg = ( ( ( ( "Unsuccessfully changed " + ( player . getName () ) ) + " to group " ) + newGroup ) + " in world " ) + world ; } return msg ; } 
private finalproject.queryprocessor.clustering.Cluster findClosestCluster ( finalproject.WeightedDocument d ) { finalproject.queryprocessor.clustering.Cluster closest = null ; java.lang.Double closestDistance = java.lang.Double.MAX_VALUE ; for ( finalproject.queryprocessor.clustering.Cluster cluster : clusterList ) { java.lang.Double distance = cluster . getCentroid ( false ) . getDistanceFromVector ( d . getVector () ) ; if ( distance < closestDistance ) { closestDistance = distance ; closest = cluster ; } } return closest ; } 
private boolean isReachable ( int eventFrom , int eventTo ) { java.util.Set < java.lang.Integer > outgoingEvents = messages . get ( eventFrom ) ; if ( outgoingEvents == null ) { return false ; } for ( java.lang.Integer intermediateEvent : outgoingEvents ) { if ( intermediateEvent . equals ( eventTo ) ) { return true ; } if ( isReachable ( intermediateEvent , eventTo ) ) { return true ; } } return false ; } 
@ java.lang.Override public void onShow () { android.util.Log . d ( TAG , "onShow IN!" ) ; if ( ( ( mtvFlow ) != null ) && ( isLogin ) ) { currentAccount = com.etoc.weflow.WeFlowApplication . getAppInstance () . getAccountInfo () ; mtvFlow . showNumberWithAnimation ( currentAccount . getFlowcoins () , 1000 ) ; } loginView ( false ) ; } 
public synchronized void unlock ( ) throws java.lang.IllegalMonitorStateException { java.lang.Thread callingThread = java.lang.Thread . currentThread () ; if ( ! ( isLocked ) ) throw new java.lang.IllegalMonitorStateException () ; if ( ( isLocked ) && ( callingThread != ( lockedBy ) ) ) throw new java.lang.IllegalMonitorStateException () ; lockCount -= 1 ; if ( ( lockCount ) == 0 ) { isLocked = false ; lockedBy = null ; notify () ; } } 
@ com.oracle.truffle.api.dsl.Specialization public java.lang.Object getIndex ( org.jruby.truffle.runtime.core.RubyMatchData matchData , int index ) { notDesignedForCompilation () ; if ( ( index >= ( matchData . getValues () . length ) ) || ( index < 0 ) ) { return getContext () . getCoreLibrary () . getNilObject () ; } else { return matchData . getValues () [ index ] ; } } 
public void deleteBrackets ( long event_id , boolean deleteUserAdded ) { android.util.Log . v ( "DeleteBracket" , ( "Deleting Bracket: " + event_id ) ) ; if ( deleteUserAdded ) { deleteBrackets ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ?" ) , new java.lang.String [] { "" + event_id } ) ; } else { deleteBrackets ( ( ( ( ( BracketTable.Cols.FK_EVENT_ID ) + " = ? AND " ) + ( BracketTable.Cols.USER_ADDED ) ) + " = ?" ) , new java.lang.String [] { "" + event_id , "0" } ) ; } } 
static org.eclipse.january.dataset.Dataset santiseDataset ( org.eclipse.january.dataset.IDataset data ) { org.eclipse.january.dataset.Dataset tmp = org.eclipse.january.dataset.DatasetUtils . convertToDataset ( data ) ; if ( ( tmp . getStrides () ) != null ) { tmp = tmp . getSlice () ; tmp . setName ( data . getName () ) ; } return tmp ; } 
public int getInventorySize () { int highestSlot = getHighestSlot () ; if ( highestSlot < 9 ) { return 9 ; } else if ( highestSlot < 18 ) { return 18 ; } else if ( highestSlot < 27 ) { return 27 ; } else if ( highestSlot < 36 ) { return 36 ; } else if ( highestSlot < 45 ) { return 45 ; } else { return 45 ; } } 
@ java.lang.Override public void invoke ( java.util.List < java.lang.String > args ) { final java.lang.String name = args . get ( 0 ) ; args . remove ( 0 ) ; if ( ( name . length () ) > 0 ) { if ( ( context . create ( name ) ) == null ) { java.lang.System.out . println ( "ERROR: Failed to create new user" ) ; } } else { java.lang.System.out . println ( "ERROR: Missing <username>" ) ; } } 
private entity.Usuario getUsrByName ( java.lang.String usr ) { entity.Usuario objetoUsuario ; sesionBD . beginTransaction () ; org.hibernate.Query query = sesionBD . createQuery ( ( "from Usuario where codigo = " + usr ) ) ; objetoUsuario = ( ( entity.Usuario ) ( query . uniqueResult () ) ) ; sesionBD . getTransaction () . commit () ; return objetoUsuario ; } 
private void displayConfirmDialog () { if ( ( weatherAlertBuffer ) != null ) { nz.ac.elec.agbase.android_agbase_api.agbase_models.Sensor sensor = nz.ac.elec.agbase.android_agbase_db.AgBaseDatabaseManager . getInstance () . readSensorWithGuid ( weatherAlertBuffer . getDeviceGuid () ) ; nz.ac.elec.agbase.weather_app.AlertSummaryGenerator summaryGenerator = new nz.ac.elec.agbase.weather_app.AlertSummaryGenerator () ; java.lang.String weatherAlertSummary = ( ( sensor.name ) + "\n" ) + ( summaryGenerator . writeAlertSummary ( weatherAlertBuffer ) ) ; nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog dialog = new nz.ac.elec.agbase.weather_app.dialogs.ConfirmAlertDialog ( this , weatherAlertBuffer . getName () , weatherAlertSummary ) ; dialog . getDialog () . show () ; } } 
public org.avuna.httpd.util.unixsocket.UnixSocket accept ( ) throws java.io.IOException { if ( ! ( bound ) ) bind () ; java.lang.String nsfd = org.avuna.httpd.util.CLib . accept ( sockfd ) ; int i = java.lang.Integer . parseInt ( nsfd . substring ( 0 , nsfd . indexOf ( "/" ) ) ) ; nsfd = nsfd . substring ( ( ( nsfd . indexOf ( "/" ) ) + 1 ) ) ; org.avuna.httpd.util.unixsocket.UnixSocket us = new org.avuna.httpd.util.unixsocket.UnixSocket ( file , i ) ; return us ; } 
protected void execute () { int index ; index = ( org.usfirst.frc.team68.robot.MathUtil . findClosestIndex ( RobotMap.intakePositions , org.usfirst.frc.team68.robot.subsystems.Intake . getIntake () . getIntakeArm () ) ) + 1 ; if ( index > ( ( RobotMap.intakePositions.length ) - 1 ) ) index = ( RobotMap.intakePositions.length ) - 1 ; org.usfirst.frc.team68.robot.subsystems.Intake . getIntake () . setIntakeArm ( org.usfirst.frc.team68.robot.RobotMap.intakePositions [ ( index ++ ) ] ) ; isDone = true ; } 
@ org.junit.Test public void TestGetProblemTests () { javax.ws.rs.core.Response response = test.java.TestDirlididi.server . newRequest ( ( ( "/problem/" + ( test.java.TestDirlididi.PROBLEM_ID ) ) + "/test" ) ) . request () . buildGet () . invoke () ; org.junit.Assert . assertEquals ( Response.Status.OK . getStatusCode () , response . getStatus () ) ; } 
@ java.lang.Override public void run () { target . receiveHealing ( output ) ; increaseCurrentTimer () ; java.lang.System.out . println ( ( "Renew is ticking! " + ( currentTime ) ) ) ; if ( ( currentTime ) >= ( duration ) ) { target . removeEffect ( EffectType.HEALOVERTIME ) ; java.lang.System.out . println ( "Renew expired" ) ; } } 
public java.util.List < msa.application.service.domain.CausaRotturaCristalliDTO > getCauseRotturaCristalli ( ) throws msa.application.exceptions.InternalMsaException { try { return converter . convertList ( domainRepository . getElencoCauseRotturaCristalli () , msa.application.service.domain.CausaRotturaCristalliDTO . class ) ; } catch ( java.lang.Exception e ) { throw new msa.application.exceptions.InternalMsaException ( e , buildErrorMessageByText ( MessageType.ERROR , ( ( msa.application.commons.Constants.DEFAULT_DOMAIN_ERROR_MESSAGE ) + "causa rottura cristalli" ) ) ) ; } } 
public void KSA () { int j = 0 ; int temp = 0 ; for ( int i = 0 ; i < 256 ; i ++ ) { j = ( ( j + ( S [ i ] ) ) + ( key [ ( i % ( key.length ) ) ] ) ) % 256 ; temp = S [ i ] ; S [ i ] = S [ j ] ; S [ j ] = temp ; temp = 0 ; } } 
@ java.lang.Override public android.view.View onCreateView ( android.view.LayoutInflater inflater , android.view.ViewGroup container , android.os.Bundle savedInstanceState ) { if ( ( view ) == null ) { view = inflater . inflate ( R.layout.fragment_password_recover_step1 , null ) ; frag_Email = ( ( com.example.fragments.inputcells.SimpleTextInputCellFragment ) ( getFragmentManager () . findFragmentById ( R.id.input_email ) ) ) ; view . findViewById ( R.id.btn_goNext ) . setOnClickListener ( new android.view.View.OnClickListener () { @ java.lang.Override public void onClick ( android.view.View v ) { goNext () ; } } ) ; } return view ; } 
@ java.lang.Override public void updateAI ( float tpf ) { this . timePerFrame = tpf ; calculateNewVelocity ( tpf ) ; velocity . multLocal ( this . brakingFactor ) ; switch ( agent . getApplyType () ) { case Spatial : agent . setWorldTranslation ( agent . getPredictedPosition ( tpf ) ) ; rotateAgent ( tpf ) ; break; case BetterCharacterControl : case RigidBody : throw new java.lang.RuntimeException ( ( ( "The ApplyType " + ( agent . getApplyType () ) ) + " isn't supported yet, sorry." ) ) ; case DontApply : break; } } 
public boolean hasNext () { while ( ( ( current ) == null ) || ( ! ( current . hasNext () ) ) ) { if ( rels . hasNext () ) { current = rels . next () . other () . iterator () ; } else { break; } } return ( ( current ) != null ) && ( current . hasNext () ) ; } 
@ org.junit.Test public void checkAvg ( ) throws java.lang.Exception { com.wolkabout.hexiwear.StepCountActivity step = new com.wolkabout.hexiwear.StepCountActivity () ; double [] array = new double [ 7 ] ; int count = 0 ; while ( count != 7 ) { array [ count ] = 10 * count ; count ++ ; } double weekly = step . stepAvgWeek ( array ) ; java.lang.System.out . println ( weekly ) ; assertTrue ( ( ( weekly == 30.0 ) || ( weekly == 30 ) ) ) ; } 
private void createTimerLabel () { this . timer = new com.badlogic.gdx.scenes.scene2d.ui.Label ( "Time till game start: " , this . skin ) ; this . timer . setPosition ( ( ( Gdx.graphics . getWidth () ) * ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_WIDTH_MULTIPLIER ) ) , ( ( Gdx.graphics . getHeight () ) * ( nl.tudelft.ti2806.riverrush.screen.WaitingScreen.TIMER_LABEL_HEIGHT_MULTIPLIER ) ) ) ; this . stage . addActor ( this . timer ) ; } 
private java.lang.String createReadPageTitle ( com.pratilipi.data.client.PratilipiData pratilipiData , int pageNo , int pageCount ) { java.lang.String title = createPratilipiPageTitle ( pratilipiData ) ; if ( title == null ) title = "" ; java.lang.String pratilipiText = ( ( com.pratilipi.i18n.I18n . getString ( "pratilipi" , com.pratilipi.filter.UxModeFilter . getDisplayLanguage () ) ) + " / " ) + "Pratilipi" ; return ( title + " « " ) + pratilipiText ; } 
@ javax.ws.rs.POST @ javax.ws.rs.Path ( value = "/submit/{actionType}" ) public javax.ws.rs.core.Response submitCmdlet ( @ javax.ws.rs.PathParam ( value = "actionType" ) java.lang.String actionType , @ javax.ws.rs.FormParam ( value = "args" ) java.lang.String args ) { try { return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.CREATED , smartEngine . getCmdletManager () . submitCmdlet ( ( ( actionType + " " ) + args ) ) ) . build () ; } catch ( java.lang.Exception e ) { org.smartdata.server.rest.CmdletRestApi.logger . error ( "Exception in ActionRestApi while adding cmdlet" , e ) ; return new org.smartdata.server.rest.message.JsonResponse ( Response.Status.INTERNAL_SERVER_ERROR , e . getMessage () , org.apache.commons.lang.exception.ExceptionUtils . getStackTrace ( e ) ) . build () ; } } 
public int lineClearCalc ( int linesCleared ) { int score = 0 ; if ( linesCleared > 0 ) { score = ( ( int ) ( ( ( ( ( java.lang.Math . pow ( linesCleared , 3 ) ) / 6.0 ) - ( java.lang.Math . pow ( linesCleared , 2 ) ) ) + ( ( 23 * linesCleared ) / 6.0 ) ) - 2 ) ) ; } return score * ( pointsPerLine ) ; } 
@ java.lang.Override public void onActivityStarted ( android.app.Activity activity ) { ( appCount ) ++ ; if ( ( appCount ) == 1 ) { com.ufo.socketioandroiddemo.login.UserInfoRepository userInfoRepository = com.ufo.socketioandroiddemo.login.UserInfoRepository . getInstance () ; com.ufo.socketioandroiddemo.login.UserInfoBean bean = userInfoRepository . currentUser ( getApplicationContext () ) ; if ( bean != null ) { getRecent () ; startSocketIOService () ; } } } 
public boolean checkStep ( int x , int y ) { if ( ( x < ( this . width ) ) || ( x >= ( this . height ) ) ) { return false ; } else if ( ( y < ( this . height ) ) || ( y >= ( this . height ) ) ) { return false ; } else if ( ( matrix.data [ x ] [ y ] ) > 0 ) { return false ; } else return true ; } 
private void addShowLink ( java.lang.String url , java.util.List < net.myonlinestuff.torrentdl.domain.ShowLink > showLinks , org.jsoup.select.Elements el ) { if ( ( el != null ) && ( ! ( el . isEmpty () ) ) ) { net.myonlinestuff.torrentdl.service.Parser.LOGGER . info ( "element found: {}" , el . size () ) ; for ( final org.jsoup.nodes.Element element : el ) { showLinks . add ( new net.myonlinestuff.torrentdl.domain.ShowLink ( element . text () , element . attr ( "href" ) , url ) ) ; } } } 
public void deleteOldMarker ( com.google.android.gms.maps.model.Marker marker ) { if ( ( markers . get ( viewHolder ) ) == null ) markers . put ( viewHolder , marker ) ; else { markers . get ( viewHolder ) . remove () ; markers . put ( viewHolder , marker ) ; } } 
private static java.lang.String join ( java.lang.String [] set , java.lang.String medium , int offset ) { java.lang.String s = set [ offset ] ; int i = 0 ; for ( java.lang.String part : set ) { if ( i > offset ) s = ( ( ( s + " " ) + medium ) + " " ) + part ; i ++ ; } return s ; } 
@ java.lang.Override public void onNavigationDrawerItemSelected ( int position ) { if ( ! ( auth ) ) return; android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager () ; if ( position == 0 ) { fragmentManager . beginTransaction () . replace ( R.id.container , tw.edu.ncu.cc.course.ScheduleFragment . newInstance ( this ) ) . commit () ; } else { fragmentManager . beginTransaction () . replace ( R.id.container , tw.edu.ncu.cc.course.MainActivity.PlaceholderFragment . newInstance ( ( position + 1 ) ) ) . commit () ; } } 
private void handlePreviousBtnClick () { -- ( currentPosition ) ; if ( ( currentPosition ) < 0 ) { currentPosition = 0 ; } else { if ( raiseToastIfNetworkNotAvailable () ) { return; } if ( ( playService ) != null ) { playService . setSeekPosition ( 0 ) ; playService . playSong ( currentPosition ) ; } } } 
private java.lang.String getPortMapping ( int port ) { return ( portOffset ) == null ? ( ( ipAddress ) + "::" ) + port : ( ( ( ( ipAddress ) + ":" ) + ( ( portOffset ) + port ) ) + ":" ) + port ; } 
private java.lang.String setupDstByDirectory ( java.lang.String directory ) { int fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "/" ) ; if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = VCF_FILE_PATH . lastIndexOf ( "\\" ) ; } if ( fileNameIndex == ( - 1 ) ) { fileNameIndex = 0 ; } java.lang.String output = directory + ( VCF_FILE_PATH . substring ( fileNameIndex ) ) ; return ( output . substring ( 0 , ( ( output . length () ) - 3 ) ) ) + "csv" ; } 
@ java.lang.Override public void run () { try { oneDayTimerLatch . await () ; } catch ( java.lang.InterruptedException e ) { e . printStackTrace () ; } java.lang.Object [] trends = oneDayStatistics . findAndGetTrends () ; oneDayStatistics . clearStatistics () ; updateOutputFile ( oneDayResults , trends , ( ( time ) / ( 6 * 24 ) ) , "Day" ) ; oneHourTimerLatch = new java.util.concurrent.CountDownLatch ( 24 ) ; } 
public boolean apply ( java.lang.String [] t ) { if ( ( this . nextCommand ) == null ) return this . hasBeenAnswered = false ; if ( this . hasBeenAnswered = this . nextCommand . apply ( t ) ) this . setChanged () ; this . notifyObservers ( new java.lang.Object [] { this . nextCommand . getClass () , t } ) ; return hasBeenAnswered ; } 
public java.lang.String [] getNames () { java.lang.String [] names = new java.lang.String [ 3 ] ; for ( int i = 0 ; i < 3 ; i ++ ) { names [ i ] = this . playerFields [ i ] . getText () ; } return names ; } 
@ java.lang.Override public void dispose () { for ( com.badlogic.ashley.core.Entity entity : renderQueue ) { com.spaceproject.components.TextureComponent tex = Mappers.texture . get ( entity ) ; if ( ( tex.texture ) != null ) tex.texture . dispose () ; } for ( com.spaceproject.SpaceBackgroundTile tile : com.spaceproject.systems.LoadingSystem . getTiles () ) { tile.tex . dispose () ; } } 
public static void writeDatasetToFile ( java.lang.String fileName , int n ) throws java.io.IOException { java.io.File file = new java.io.File ( fileName ) ; java.io.FileOutputStream fos = new java.io.FileOutputStream ( file ) ; java.io.BufferedWriter bw = new java.io.BufferedWriter ( new java.io.OutputStreamWriter ( fos ) ) ; for ( int i = 1 ; i <= n ; i ++ ) { bw . write ( generator.PuzzleGenerator . encode ( generator.PuzzleGenerator . generate () ) ) ; bw . newLine () ; } bw . close () ; } 
@ org.junit.Test public void testMoveCutOff () { java.lang.String boardStr = "x  x  x  0  1\n" + ( ( ( "x  x  x  0 1h\n" + "x  x  x  0h x\n" ) + "x  x  x  x  x\n" ) + "x  x  x  x  x" ) ; Board b = Board . fromString ( boardStr ) ; Driver d = new VoronoiMinMax () ; Direction move = d . move ( b ) ; assertEquals ( Direction.RIGHT , move ) ; b . move ( b.US , b . tileFrom ( b . ourTile () , move ) ) ; } 
private void addFragment ( android.support.v4.app.Fragment fragment ) { android.transition.Transition changeTransform = android.transition.TransitionInflater . from ( this ) . inflateTransition ( R.transition.change_image_transform ) ; android.support.v4.app.FragmentTransaction ft = getSupportFragmentManager () . beginTransaction () ; ft . replace ( R.id.activity_container , fragment , fragment . getClass () . getSimpleName () ) ; ft . addToBackStack ( fragment . getTag () ) ; ft . commit () ; android.util.Log . d ( com.vladscaesteanu.licenta.MainActivity.TAG , ( "Fragment no is" + ( fragmentManager . getBackStackEntryCount () ) ) ) ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( ( requestCode == ( rray.me.androidresume.BasicInfoEditActivity.REQ_CODE_PICK_IMAGE ) ) && ( resultCode == ( android.app.Activity.RESULT_OK ) ) ) { android.net.Uri imageUri = data . getData () ; if ( imageUri != null ) { showImage ( imageUri ) ; } } } 
@ java.lang.Override protected int intSpeed ( float fSpeed ) { int speed = super . intSpeed ( fSpeed ) ; if ( speed <= 1 ) { return speed ; } switch ( this . getSpeedStepMode () ) { case jmri.DccThrottle.SpeedStepMode28 : case jmri.DccThrottle.SpeedStepMode28Mot : return ( ( int ) ( ( fSpeed * 28 ) * 4 ) ) + 12 ; case jmri.DccThrottle.SpeedStepMode14 : return ( ( int ) ( ( fSpeed * 14 ) * 8 ) ) + 8 ; } return speed ; } 
protected android.graphics.Rect growRight ( final int w , final int h ) { final com.funzio.pure2D.utils.RectBinPacker.Node down = mRoot ; final com.funzio.pure2D.utils.RectBinPacker.Node right = new com.funzio.pure2D.utils.RectBinPacker.Node ( ( ( mRoot.x ) + ( mRoot.width ) ) , mRoot.y , w , mRoot.height ) ; mRoot = new com.funzio.pure2D.utils.RectBinPacker.Node ( mRoot.x , mRoot.y , ( ( mRoot.width ) + w ) , mRoot.height ) ; mRoot . split ( down , right ) ; return right . occupy ( w , h ) ; } 
@ java.lang.Override public int getElementCount ( final java.lang.String elementType ) { if ( elementType == null ) { throw new java.lang.NullPointerException ( "elementType must not be null." ) ; } if ( ! ( wrappedMap . containsKey ( elementType ) ) ) { return reader . getElementCount ( elementType ) ; } org.smurn.jply.ElementType unwrapped = wrappedMap . get ( elementType ) . getUnwrappedType () ; return reader . getElementCount ( unwrapped . getName () ) ; } 
@ java.lang.Override public boolean setGoalTarget ( net.minecraft.server.v1_9_R1.EntityLiving entityliving , org.bukkit.event.entity.EntityTargetEvent.TargetReason reason , boolean fireEvent ) { if ( ( ( this . target ) instanceof net.minecraft.server.v1_9_R1.EntityLiving ) && ( this . target . isAlive () ) ) { super . setGoalTarget ( this . target , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } else { super . setGoalTarget ( null , EntityTargetEvent.TargetReason.CUSTOM , false ) ; } return true ; } 
public static final sune.util.ssdf2.SSDCollection read ( java.lang.String content ) { if ( content == null ) { throw new java.lang.IllegalArgumentException ( "Content cannot be null!" ) ; } char [] chars = sune.util.ssdf2.SSDF . format ( content . toCharArray () ) ; return sune.util.ssdf2.SSDF . readObjects ( chars , 0 , chars.length ) ; } 
private void checkUsername ( com.musicforall.model.User user ) { java.lang.String searchUsername ; final java.lang.String username = user . getUsername () ; searchUsername = username ; int i = 0 ; while ( ( userService . getIdByUsername ( searchUsername ) ) != null ) { i ++ ; searchUsername = username + i ; } if ( i > 0 ) { user . setUsername ( searchUsername ) ; } } 
@ org.junit.Test public void testGetTrasactionId ( ) throws java.lang.Exception { org.p2p.lending.club.api.transaction.impl.Transaction transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert . assertTrue ( ( ( transaction . getTrasactionId () ) >= 1 ) ) ; transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert . assertTrue ( ( ( transaction . getTrasactionId () ) >= 2 ) ) ; transaction = new org.p2p.lending.club.api.transaction.impl.Transaction ( "12345" ) ; org.junit.Assert . assertTrue ( ( ( transaction . getTrasactionId () ) >= 3 ) ) ; } 
public boolean isEveryCharacterUniqueUsingHistogram () { int [] asciiCount = new int [ 128 ] ; for ( int i = 0 ; i < ( string . length () ) ; i ++ ) { ( asciiCount [ string . charAt ( i ) ] ) ++ ; } for ( int i = 0 ; i < ( asciiCount.length ) ; i ++ ) { if ( ( asciiCount [ i ] ) > 1 ) { return false ; } } return true ; } 
@ java.lang.Override public void update ( com.flurnamenpuzzle.generator.Observable observable ) { com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel model = ( ( com.flurnamenpuzzle.generator.domain.PuzzleGeneratorModel ) ( observable ) ) ; int percentage = model . getPercentageGenerated () ; java.lang.String statusMessage = model . getStatusMessage () ; if ( statusMessage != null ) { this . progressLabel . setText ( statusMessage ) ; } java.lang.System.out . println ( statusMessage ) ; this . progressBar . setValue ( percentage ) ; this . progressBar . setString ( ( ( progressBar . getValue () ) + "%" ) ) ; } 
@ java.lang.Override public bee.creative.function.Array section ( final int offset , final int length ) throws java.lang.IllegalArgumentException { final int offset2 = offset - ( this . length () ) ; final int length2 = offset2 + length ; if ( offset2 >= 0 ) return array . section ( offset2 , length ) ; if ( length2 <= 0 ) return super . section ( offset , length ) ; return super . section ( offset , ( - offset2 ) ) . concat ( array . section ( 0 , length2 ) ) ; } 
@ com.squareup.otto.Subscribe public void onInternalLinkClicked ( com.ayuget.redface.ui.event.InternalLinkClickedEvent event ) { com.ayuget.redface.ui.fragment.TopicFragment topicFragment = ( ( com.ayuget.redface.ui.fragment.TopicFragment ) ( getSupportFragmentManager () . findFragmentByTag ( com.ayuget.redface.ui.activity.TopicsActivity.TOPIC_FRAGMENT_TAG ) ) ) ; if ( ( ( topicFragment != null ) && ( ( event . getTopic () . id () ) == ( topicFragment . getTopic () . id () ) ) ) && ( ( event . getPage () ) == ( topicFragment . getCurrentPage () ) ) ) { topicFragment . setCurrentPagePosition ( event . getPagePosition () ) ; } } 
public void play () { setup () ; while ( ( playerList . size () ) > 1 ) { for ( int i = 0 ; i < ( playerList . size () ) ; i ++ ) { playerList . get ( i ) . turn ( board , this ) ; printBoard () ; } } } 
public static void reg ( net.minecraft.block.Block block , int meta , java.lang.String file ) { net.minecraft.item.Item item = net.minecraft.item.Item . getItemFromBlock ( block ) ; net.minecraftforge.client.model.ModelLoader . setCustomModelResourceLocation ( item , meta , new net.minecraft.client.resources.model.ModelResourceLocation ( ( ( ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) + ":" ) + file ) , "inventory" ) ) ; java.lang.System.out . println ( ( ( ( ( "Ran " + ( io.github.zaphodious.essentialsorcery.core.Reference.MODID ) ) + ":" ) + ( net.minecraft.item.Item . getItemFromBlock ( block ) . getUnlocalizedName () ) ) + " through the render reg." ) ) ; } 
private void handleCancelRequest ( android.javax.sip.message.Request request , android.javax.sip.ServerTransaction serverTransaction ) { android.javax.sip.header.CallIdHeader callIdHeader = ( ( android.javax.sip.header.CallIdHeader ) ( request . getHeader ( CallIdHeader.NAME ) ) ) ; java.lang.String callId = callIdHeader . getCallId () ; if ( ( doSendResponse ( Response.OK , RequestMethod.CANCEL , request , serverTransaction ) ) != null ) { bus . post ( new org.github.sipuada.events.CallInvitationCanceled ( ( "Call invitation canceled by the caller " + "or callee took longer than roughly 30 seconds to answer." ) , callId , true ) ) ; return; } throw new org.github.sipuada.exceptions.RequestCouldNotBeAddressed () ; } 
public java.lang.String toString () { java.lang.String returnString = ( ( "Lijn: startpunt: " + ( this . getStartPunt () ) ) + " - eindpunt: " ) + ( this . getEindPunt () ) ; returnString = ( returnString + "\n" ) + ( omhullende . toString () ) ; return returnString ; } 
@ java.lang.Override public boolean addUniversalDistillationRecipe ( net.minecraftforge.fluids.FluidStack aInput , net.minecraftforge.fluids.FluidStack [] aOutputs , net.minecraft.item.ItemStack aOutput2 , int aDuration , int aEUt ) { for ( int i = 0 ; i < ( java.lang.Math . min ( aOutputs.length , 11 ) ) ; i ++ ) { addDistilleryRecipe ( ( i + 1 ) , aInput , aOutputs [ i ] , ( aDuration * 2 ) , ( aEUt / 4 ) , false ) ; } return addDistillationTowerRecipe ( aInput , aOutputs , aOutput2 , aDuration , aEUt ) ; } 
public org.opendaylight.sxp.util.time.ManagedTimer setTimer ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType timerType , int period ) throws org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextDiscrepancyException , org.opendaylight.sxp.util.exception.connection.ChannelHandlerContextNotFoundException , org.opendaylight.sxp.util.exception.unknown.UnknownTimerTypeException { io.netty.channel.ChannelHandlerContext ctx = null ; if ( isModeBoth () ) { if ( timerType == ( org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType.KeepAliveTimer ) ) { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.SpeakerContext ) ; } else { ctx = getChannelHandlerContext ( org.opendaylight.sxp.core.SxpConnection.ChannelHandlerContextType.ListenerContext ) ; } } else { ctx = getChannelHandlerContext () ; } org.opendaylight.sxp.util.time.ManagedTimer timer = org.opendaylight.sxp.util.time.connection.TimerFactory . createTimer ( timerType , period , owner , this , ctx ) ; return this . setTimer ( timerType , timer ) ; } 
int appExists ( java.lang.String name ) { for ( int i = 0 ; ( statArray [ i ] ) != null ; ++ i ) { if ( statArray [ i ] . packageName . equals ( name ) ) { android.util.Log . d ( "Crash site" , java.lang.String . valueOf ( i ) ) ; return i ; } } return - 1 ; } 
@ java.lang.Override public void stop () { org.webrtc.Logging . d ( org.webrtc.Camera1Session.TAG , ( "Stop camera1 session on camera " + ( cameraId ) ) ) ; checkIsOnCameraThread () ; if ( ( state ) != ( org.webrtc.Camera1Session.SessionState.STOPPED ) ) { final long stopStartTime = java.lang.System . nanoTime () ; stopInternal () ; final int stopTimeMs = ( ( int ) ( java.util.concurrent.TimeUnit.NANOSECONDS . toMillis ( ( ( java.lang.System . nanoTime () ) - stopStartTime ) ) ) ) ; org.webrtc.Camera1Session.camera1StopTimeMsHistogram . addSample ( stopTimeMs ) ; } } 
@ java.lang.Override public void connected () { appContext . setSIOService ( sioService ) ; loadPersistenceLayer ( true ) ; appContext . getMainBus () . post ( new ch.fork.AdHocRailway.ui.UpdateMainTitleEvent ( ( ( ( ( AdHocRailway.TITLE ) + " [" ) + url ) + "]" ) ) ) ; appContext . getMainBus () . post ( new ch.fork.AdHocRailway.ui.CommandLogEvent ( ( "Successfully connected to AdHoc-Server: " + url ) ) ) ; } 
@ java.lang.Override @ net.openhft.chronicle.core.annotation.ForceInline public void write ( long offsetInRDO , @ org.jetbrains.annotations.NotNull java.nio.ByteBuffer bytes , int offset , int length ) { if ( bytes . isDirect () ) { memory . copyMemory ( ( ( ( ( sun.nio.ch.DirectBuffer ) ( bytes ) ) . address () ) + offset ) , ( ( address ) + ( translate ( offsetInRDO ) ) ) , length ) ; } else { memory . copyMemory ( bytes . array () , offset , ( ( address ) + ( translate ( offsetInRDO ) ) ) , length ) ; } } 
public static java.lang.String getAdminRestAPIResource ( ) throws org.wso2.carbon.apimgt.core.exception.APIManagementException { if ( ( org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition ) == null ) { try { org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition = org.apache.commons.io.IOUtils . toString ( org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil . class . getResourceAsStream ( "/admin-api.yaml" ) , "UTF-8" ) ; } catch ( java.io.IOException e ) { java.lang.String message = "Error while reading the swagger definition of Admin Rest API" ; org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.log . error ( message , e ) ; throw new org.wso2.carbon.apimgt.rest.api.common.exception.APIMgtSecurityException ( message , org.wso2.carbon.apimgt.core.exception.ExceptionCodes.API_NOT_FOUND ) ; } } return org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.adminRestAPIDefinition ; } 
private boolean executeTIMEZONE_LIST () { int listIndex = getListArg ( com.rfo.basic.Run.list_is_string ) ; if ( listIndex < 0 ) return false ; if ( ! ( checkEOL () ) ) return false ; java.util.ArrayList < java.lang.String > theList = new java.util.ArrayList < java.lang.String > () ; com.rfo.basic.Run.theLists . set ( listIndex , theList ) ; for ( java.lang.String zone : java.util.TimeZone . getAvailableIDs () ) { theList . add ( zone ) ; } return true ; } 
private boolean isAccessorGroup ( java.lang.String accessorName ) throws java.sql.SQLException { try ( java.sql.Statement stmt = jdbcFixture . getConnection () . createStatement () ; java.sql.ResultSet rs = stmt . executeQuery ( ( ( ( "select r_is_group from dm_user" + " where user_name = '" ) + accessorName ) + "'" ) ) ) { if ( rs . next () ) { return rs . getBoolean ( 1 ) ; } } return false ; } 
public void actionPerformed ( java.awt.event.ActionEvent e ) { if ( debug ) java.lang.System.out . println ( ( "Paikka 1 0 " + ( whichmark () ) ) ) ; ChangeButton ( buttonba ) ; buttonba . setEnabled ( false ) ; viimeisinSiirto [ 1 ] [ 0 ] = whichmark () ; ( buttoncount ) ++ ; } 
private boolean checkMove ( float x , float y , float oldX , float oldy ) { return ( ( java.lang.Math . pow ( java.lang.Math . abs ( ( x - oldX ) ) , 2 ) ) + ( java.lang.Math . pow ( java.lang.Math . abs ( ( y - oldy ) ) , 2 ) ) ) > ( java.lang.Math . pow ( mSlopeDistance , 2 ) ) ; } 
public static void putObjectWrapper$$PHOSPHORTAGGED ( sun.misc.Unsafe unsafe , java.lang.Object o , int key_tag , long key , java.lang.Object val , java.lang.Class c ) { if ( ( ( c != null ) && ( val != null ) ) && ( ! ( c . isAssignableFrom ( val . getClass () ) ) ) ) { val = ( ( edu.columbia.cs.psl.phosphor.instrumenter.LazyArrayIntTags ) ( val ) ) . getVal () ; } unsafe . putObject ( o , key , val ) ; } 
private static long getSerialVersionUID ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaClass metaClass , java.lang.String nestedSimpleClassName ) throws java.io.IOException { long serialVersionUID = ( nestedSimpleClassName != null ) ? nestedSimpleClassName . hashCode () : 0 ; for ( org.babyfish.persistence.tool.path.TypedQueryPathProcessor.MetaProperty property : metaClass . getProperties () . values () ) { serialVersionUID += ( serialVersionUID * 31 ) + ( property . getName () . hashCode () ) ; } return serialVersionUID ; } 
@ java.lang.Override public void onScrolled ( android.support.v7.widget.RecyclerView recyclerView , int dx , int dy ) { visibleItemCount = manager . getChildCount () ; totalItemCount = manager . getItemCount () ; pastVisiblesItems = manager . findFirstVisibleItemPosition () ; if ( ! ( loading ) ) { if ( ( ( visibleItemCount ) + ( pastVisiblesItems ) ) >= ( totalItemCount ) ) { ( pageIndex ) ++ ; if ( ( type ) == 0 ) { getBooks ( pageIndex ) ; } } } } 
public static int getUnScheuledHours ( Office offices ) { int hoursNotScheduled = 0 ; for ( int i = 1 ; i < 37 ; i ++ ) { for ( int j = 0 ; j < 7 ; j ++ ) { if ( ( offices.officeReq . get ( i ) . get ( j ) ) >= 0 ) { hoursNotScheduled += offices.officeReq . get ( i ) . get ( j ) ; } } } return hoursNotScheduled / 2 ; } 
@ java.lang.Override public void onCreate ( @ android.support.annotation.Nullable android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( ( savedInstanceState != null ) && ( ! ( defaults ) ) ) && ( ( bottomBar ) != null ) ) { if ( savedInstanceState . getBoolean ( rs.ftn.pma.tourismobile.fragments.BOTTOM_BAR_SHOWING ) ) { bottomBar . show () ; } else { bottomBar . hide () ; } firstTimeLoading = savedInstanceState . getBoolean ( rs.ftn.pma.tourismobile.fragments.FIRST_TIME_LOADING ) ; } } 
private void handleDeletePlaylistEvent ( android.net.Uri pUri ) { com.dreamdigitizers.megamelodies.views.interfaces.IViewPlaylists view = this . getView () ; if ( view != null ) { java.lang.String id = pUri . getQueryParameter ( "playlistId" ) ; java.util.HashMap transactions = this . mTransactionActions . get ( ServicePlayback.CUSTOM_ACTION__DELETE_PLAYLIST ) ; android.support.v4.media.MediaBrowserCompat.MediaItem mediaItem = ( ( android.support.v4.media.MediaBrowserCompat.MediaItem ) ( transactions . get ( id ) ) ) ; transactions . remove ( id ) ; view . removeMediaItem ( mediaItem ) ; } } 
@ java.lang.Override public void onBackPressed () { int count = ( getFragmentManager () . getBackStackEntryCount () ) - 1 ; int currentView = viewStack . pop () ; if ( count == 0 ) { super . onBackPressed () ; } else { getFragmentManager () . popBackStack () ; } java.lang.String title = fragmentMap . get ( currentView ) . getTitleString () ; setTitle ( title ) ; } 
public java.lang.String removeInitialFinalWhites ( java.lang.String text ) { java.lang.String textWOWhites = text ; while ( ( textWOWhites . startsWith ( " " ) ) || ( textWOWhites . startsWith ( "\t" ) ) ) textWOWhites = textWOWhites . substring ( 1 ) ; while ( ( textWOWhites . endsWith ( " " ) ) || ( textWOWhites . endsWith ( "\t" ) ) ) textWOWhites = textWOWhites . substring ( 0 , ( ( textWOWhites . length () ) - 1 ) ) ; return textWOWhites ; } 
@ java.lang.Override protected java.util.List < com.dotmarketing.business.Permission > getInheritablePermissions ( com.dotmarketing.business.Permissionable permissionable , boolean bitPermissions ) throws com.dotmarketing.exception.DotDataException { java.util.List < com.dotmarketing.business.Permission > bitPermissionsList = permissionCache . getPermissionsFromCache ( permissionable . getPermissionId () ) ; if ( bitPermissionsList == null ) { bitPermissionsList = loadPermissions ( permissionable ) ; } if ( ! bitPermissions ) return convertToNonBitPermissions ( filterOnlyInheritablePermissions ( bitPermissionsList , permissionable . getPermissionId () ) ) ; else return filterOnlyInheritablePermissions ( bitPermissionsList , permissionable . getPermissionId () ) ; } 
public void run ( ) throws java.lang.Exception { com.google.common.base.Preconditions . checkState ( ( ( this . state . get () ) == ( State.INITED ) ) , ( "Can only run while in INITED state. Current: " + ( this . state ) ) ) ; this . state . set ( State.RUNNING ) ; processor . run ( runInputMap , runOutputMap ) ; } 
public static void onEntityUpdate ( com.mumfrey.liteloader.transformers.event.EventInfo < net.minecraft.entity.player.EntityPlayer > e ) { net.minecraft.entity.player.EntityPlayer ep = e . getSource () ; if ( ( ( ep instanceof net.minecraft.entity.player.EntityPlayerMP ) && ( me.dags.daflight.DaFlight . get () . DFController . noClipOn ) ) && ( me.dags.daflight.DaFlight . get () . DFController . flyModOn ) ) { ep.noClip = true ; } } 
@ java.lang.Override public void onUpgrade ( android.database.sqlite.SQLiteDatabase db , int oldVersion , int newVersion ) { db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.MoviesEntry.TABLE_NAME ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.VideoEntry.TABLE_NAME ) ) ) ; db . execSQL ( ( "DROP TABLE IF EXISTS " + ( MoviesContract.ReviewEntry.TABLE_NAME ) ) ) ; } 
public int getCaptionHeight () { int textWidth = mTextView . getWidth () ; int widthMeasureSpec = View.MeasureSpec . makeMeasureSpec ( textWidth , View.MeasureSpec.EXACTLY ) ; int heightMeasureSpec = View.MeasureSpec . makeMeasureSpec ( 0 , View.MeasureSpec.UNSPECIFIED ) ; if ( textWidth < 1 ) { return 0 ; } mTextView . measure ( widthMeasureSpec , heightMeasureSpec ) ; return mTextView . getMeasuredHeight () ; } 
public static boolean loginUser ( java.lang.String userName , java.lang.String password , javafx.scene.text.Text attemptsLeft ) { sample.Models.LoginUser . checkTries ( attemptsLeft , userName ) ; try { return ( ( ( sample.Models.LoginUser . checkFile () ) && ( sample.Models.LoginUser . checkUserName ( userName ) ) ) && ( sample.Models.LoginUser . checkPassWord ( password , userName ) ) ) && ( sample.Models.LoginUser.check ) ; } catch ( java.io.IOException e ) { java.lang.System.out . println ( "Error while logging in user" ) ; return false ; } } 
public Util.complex pow ( int n ) { double rn = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . cos ( ( n * ( getAngle () ) ) ) ) ; double in = ( java.lang.Math . pow ( getAbs () , n ) ) * ( java.lang.Math . sin ( ( n * ( getAngle () ) ) ) ) ; setR ( rn ) ; setI ( in ) ; return this ; } 
public boolean storeCredentials ( java.lang.String appName , java.lang.String hashedUser , java.lang.String hashedPassword ) { com.jeszka.domain.AppCredentials appCredentials = new com.jeszka.domain.AppCredentials.Builder () . appName ( appName ) . username ( hashedUser ) . password ( hashedPassword ) . enabled ( true ) . build () ; final int result = posterDao . saveAppCredentials ( appCredentials ) ; java.lang.System.out . println ( ( "Storing credentials result: " + result ) ) ; return result == 1 ; } 
@ java.lang.Override public boolean equals ( java.lang.Object o ) { if ( ( this ) == o ) return true ; if ( ( o == null ) || ( ! ( o instanceof me.newyith.fortress.util.BaseUUID ) ) ) return false ; me.newyith.fortress.util.BaseUUID that = ( ( me.newyith.fortress.util.BaseUUID ) ( o ) ) ; return ! ( ( model.uuid ) != null ? ! ( model.uuid . equals ( that . getUuid () ) ) : ( that . getUuid () ) != null ) ; } 
private int calcHeigth () { int aY = a . getBlockY () ; int bY = b . getBlockY () ; int y = 0 ; if ( aY < bY ) { y = bY - aY ; } else { y = aY - bY ; } return y ; } 
public void hideFragment ( android.support.v4.app.Fragment fragment , android.support.v4.app.Fragment fragment1 ) { if ( ( null != fragment ) && ( null != fragment1 ) ) { fragmentTransaction = getSupportFragmentManager () . beginTransaction () ; fragmentTransaction . hide ( fragment ) . hide ( fragment1 ) ; fragmentTransaction . commit () ; } } 
private void printCosts ( int level ) { org.sat4j.core.Vec < java.math.BigInteger > costsToPrint = new org.sat4j.core.Vec < java.math.BigInteger > () ; costs . copyTo ( costsToPrint ) ; for ( int i = level - 1 ; i >= 0 ; i -- ) { costsToPrint . set ( i , computeCostOfLevel ( i ) ) ; } solver . printCosts ( costsToPrint ) ; } 
public static void cancelNotification ( android.content.Context context , int notificationId ) { if ( ( android.content.Context.NOTIFICATION_SERVICE ) != null ) { java.lang.String ns = android.content.Context.NOTIFICATION_SERVICE ; android.app.NotificationManager nMgr = ( ( android.app.NotificationManager ) ( context . getApplicationContext () . getSystemService ( ns ) ) ) ; nMgr . cancel ( notificationId ) ; } } 
private void deleteGoogleEvent ( java.lang.String googleId ) throws java.io.IOException { w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Deleting Google Event: " + googleId ) ) ; w094j.ctrl8.database.GoogleStorage.dataStoreEvent . delete ( googleId ) ; try { this . clientCalendar . events () . delete ( this . googleCalendar . getId () , googleId ) . execute () ; } catch ( java.io.IOException e ) { w094j.ctrl8.database.GoogleStorage.logger . info ( ( "Fail to delete Google Event: " + googleId ) ) ; } } 
public boolean inLabels ( java.util.HashSet < java.lang.String > hashSet ) { if ( hashSet != null ) { if ( hashSet . isEmpty () ) return true ; for ( java.lang.String str : hashSet ) { if ( ( ( this . label ) != null ) && ( this . label . equalsIgnoreCase ( str ) ) ) return true ; } return false ; } else { return true ; } } 
public io.lambdacloud.util.ObjectArray set ( int ms , int me , int [] aryn , io.lambdacloud.util.ObjectArray ary ) { int row = ( me - ms ) + 1 ; int col = aryn.length ; for ( int i = 0 ; i < row ; i ++ ) for ( int j = 0 ; j < col ; j ++ ) { data [ ( ms + i ) ] [ aryn [ j ] ] = ary.data [ i ] [ j ] ; } return this ; } 
@ java.lang.Override protected void onPostExecute ( java.lang.String status ) { java.lang.String imagePath = ( ( localstoragehandler.fileCacheFolder ) + "/" ) + ( filename ) ; if ( status . equals ( "OK" ) ) { if ( type . equals ( MessageInfo.MessageType.IMAGE ) ) { at.vcity.androidim.tools.BitmapLoaderTask task = new at.vcity.androidim.tools.BitmapLoaderTask ( imageView ) ; task . execute ( imagePath ) ; imageView . setLayoutParams ( params ) ; } } else {} } 
private mil.nga.giat.mage.sdk.datastore.user.Permissions parsePermissions ( com.fasterxml.jackson.core.JsonParser parser ) throws java.io.IOException { if ( ( parser . getCurrentToken () ) != ( com.fasterxml.jackson.core.JsonToken.START_ARRAY ) ) return null ; java.util.Collection < mil.nga.giat.mage.sdk.datastore.user.Permission > permissions = new java.util.ArrayList <> () ; while ( ( parser . nextToken () ) != ( com.fasterxml.jackson.core.JsonToken.END_ARRAY ) ) { java.lang.String permission = parser . getText () . toUpperCase ( java.util.Locale.US ) ; permissions . add ( mil.nga.giat.mage.sdk.datastore.user.Permission . valueOf ( permission ) ) ; } return new mil.nga.giat.mage.sdk.datastore.user.Permissions ( permissions ) ; } 
private static void fillMissingValues () { for ( int i = 0 ; i < ( DatasetCleanup.groupSize ) ; i ++ ) { for ( int j = 0 ; j < ( DatasetCleanup.labels.length ) ; j ++ ) { if ( ( DatasetCleanup.featureSpace [ i ] [ j ] . equals ( null ) ) || ( DatasetCleanup.featureSpace [ i ] [ j ] . equals ( "" ) ) ) DatasetCleanup.featureSpace [ i ] [ j ] = java.lang.String . valueOf ( ( - 1 ) ) ; } } } 
public void createBye () { try { if ( ( this . getDialog () ) != null ) { javax.sip.message.Request byeRequest = this . getDialog () . createRequest ( Request.BYE ) ; java.lang.System.out . println ( ( "CREATE BYE REQUEST ->" + byeRequest ) ) ; sipConnector . sendRequest ( byeRequest , this ) ; } } catch ( javax.sip.SipException ex ) { com.dialogic.msmltool.Call.logger . log ( java.util.logging.Level.SEVERE , ex . getMessage () , ex ) ; } } 
private static void testServerChannelFactory ( org.osgi.framework.BundleContext bundleContext ) { org.osgi.framework.ServiceReference < com.wincom.dcim.agentd.NetworkService > serviceRef = bundleContext . getServiceReference ( com.wincom.dcim.agentd.NetworkService . class ) ; com.wincom.dcim.agentd.NetworkService service = bundleContext . getService ( serviceRef ) ; java.lang.System.out . println ( serviceRef ) ; java.lang.System.out . println ( service ) ; com.wincom.dcim.agentd.internal.AgentdServiceActivator . createAcceptor ( service ) ; for ( int i = 0 ; i < 1 ; ++ i ) { com.wincom.dcim.agentd.internal.AgentdServiceActivator . createConnection ( service ) ; } } 
@ java.lang.Override public void channelInactive ( org.eclipse.moquette.server.netty.ChannelHandlerContext ctx ) throws java.lang.Exception { super . channelInactive ( ctx ) ; org.eclipse.moquette.server.netty.NettyChannel channel = m_channelMapper . get ( getKey ( ctx . channel () ) ) ; if ( null == channel ) { ctx . close () ; return; } remove ( ctx . channel () ) ; release ( channel ) ; ctx . close () ; } 
@ java.lang.Override public void onUpdate ( com.wylder.shuttlewidget.ScheduleConstraint [] newConstraints ) { constraints = newConstraints ; if ( ( newConstraints.length ) == 0 ) { flagEmptyList = true ; constraints = new com.wylder.shuttlewidget.ScheduleConstraint [] { null } ; } else { flagEmptyList = false ; } com.wylder.shuttlewidget.ConstraintListAdapter adapter = new com.wylder.shuttlewidget.ConstraintListAdapter ( getActivity () , constraints ) ; setListAdapter ( adapter ) ; } 
@ java.lang.Override public void onCompletion ( android.media.MediaPlayer mp ) { int temp = ( ( sharedPreferences . getInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , ( - 1 ) ) ) + 1 ) % ( videoList . size () ) ; vvVideo . setVideoURI ( videoList . get ( temp ) ) ; com.example.saksham.overlayscreenshort.PlaylistAdapter . changeActiveItemBackground ( temp ) ; editor . putInt ( Constants.CURRENT_PLAYING_VIDEO_NUMBER , temp ) ; editor . commit () ; vvVideo . start () ; } 
private int maxIndex ( int [] arr ) { int maxIndex = 0 ; for ( int i = 0 ; i < ( arr.length ) ; i ++ ) { if ( ( arr [ i ] ) >= ( arr [ maxIndex ] ) ) { maxIndex = i ; } } return maxIndex ; } 
public static float getScaleFactor () { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics () ; io.gloop.drawed.utils.ScreenUtil.activity . getWindowManager () . getDefaultDisplay () . getMetrics ( metrics ) ; float factor1 = ( metrics.heightPixels ) / 1920.0F ; float factor2 = ( metrics.widthPixels ) / 1080.0F ; if ( factor1 >= factor2 ) return factor1 ; else return factor2 ; } 
@ java.lang.Override public com.navercorp.pinpoint.web.vo.AgentInfo getAgentInfo ( final java.lang.String agentId , final long timestamp ) { if ( agentId == null ) { throw new java.lang.NullPointerException ( "agentId must not be null" ) ; } com.navercorp.pinpoint.web.dao.hbase.Scan scan = createScan ( agentId , timestamp ) ; return this . hbaseOperations2 . find ( HBaseTables.AGENTINFO , scan , new com.navercorp.pinpoint.web.dao.hbase.HbaseAgentInfoDao.AgentInfoResultsExtractor () ) ; } 
@ java.lang.Override protected void onDestroy () { if ( ( mCore ) != null ) { mCore . pauseSensors () ; mCore . shutdown ( this ) ; } if ( ( com.ilm.sandwich.OsmMap.listHandler ) != null ) { com.ilm.sandwich.OsmMap.listHandler . removeCallbacksAndMessages ( null ) ; } com.ilm.sandwich.tools.Statistics mStatistics = new com.ilm.sandwich.tools.Statistics () ; mStatistics . check ( this ) ; super . onDestroy () ; } 
public org.projectbuendia.client.ui.SnackBar.Message getMessage ( @ android.support.annotation.StringRes int message ) { org.projectbuendia.client.ui.SnackBar.Message theMessage = null ; for ( java.util.Map.Entry < org.projectbuendia.client.ui.SnackBar.MessageKey , org.projectbuendia.client.ui.SnackBar.Message > entry : org.projectbuendia.client.ui.SnackBar.mMessagesList . entrySet () ) { org.projectbuendia.client.ui.SnackBar.Message value = entry . getValue () ; if ( ( value.message ) == message ) { theMessage = value ; } } return theMessage ; } 
@ org.junit.Test public void testTrajectoryBoundsZVelocity () { java.util.List < java.lang.Double > l = com.google.common.collect.Lists . newArrayList () ; for ( int i = 0 ; i < ( ( trajectory . getTrajectoryDuration () ) * 10 ) ; i ++ ) { l . add ( getVelocityZ ( trajectory , ( i / 10.0 ) ) ) ; } assertBounds ( l , speed , speed ) ; } 
@ java.lang.Override public void onLocalVideoTrackReceive ( com.quickblox.videochat.webrtc.QBRTCSession session , com.quickblox.videochat.webrtc.view.QBRTCVideoTrack videoTrack ) { localVideoVidew = ( ( com.quickblox.videochat.webrtc.view.QBGLVideoView ) ( findViewById ( R.id.localVideoVidew ) ) ) ; android.util.Log . d ( "Track" , ( "localVideoVidew is " + ( localVideoVidew ) ) ) ; if ( ( localVideoVidew ) != null ) { videoTrack . addRenderer ( new org.webrtc.VideoRenderer ( new com.quickblox.videochat.webrtc.view.VideoCallBacks ( localVideoVidew , QBGLVideoView.Endpoint.LOCAL ) ) ) ; localVideoVidew . setVideoTrack ( videoTrack , QBGLVideoView.Endpoint.LOCAL ) ; android.util.Log . d ( "Track" , "onLocalVideoTrackReceive() is raned" ) ; } } 
public void die () { data . incrementObservableValue ( observableDataKey , 1 ) ; this . getPosition () . x = respawnPosition.x ; this . getPosition () . y = respawnPosition.y ; if ( ( sword ) == null ) { nidhogglike.entities.Sword sword = ( ( nidhogglike.game.NidhoggUniverse ) ( data . getUniverse () ) ) . getFreeSword () ; if ( sword != null ) { setSword ( sword ) ; } } } 
boolean compareArray ( int [] A , int [] B ) { if ( ( ( A.length ) - 1 ) != ( ( B.length ) - 1 ) ) { return false ; } for ( int i = 0 ; i < ( ( A.length ) - 1 ) ; i ++ ) { if ( ( A [ i ] ) != ( B [ i ] ) ) { return false ; } } return true ; } 
void addAmountTodo ( int amt , todolist.TodoList list ) { todolist.Todo head = new todolist.Todo ( "Task 1" ) ; list . addTodo ( head ) ; int numAdded = 1 ; while ( numAdded != amt ) { numAdded ++ ; todolist.Todo newTodo = new todolist.Todo ( ( "Task " + ( java.lang.Integer . toString ( numAdded ) ) ) ) ; list . addTodo ( newTodo ) ; } } 
private static int getResIdByStatus ( com.ogp.hotspotincar.WatchdogService.ActuatorState actuatorState ) { if ( ( com.ogp.hotspotincar.WatchdogService.ActuatorState.UNCHANGED ) == actuatorState ) { actuatorState = com.ogp.hotspotincar.HotspotWidget.storedState ; } else { com.ogp.hotspotincar.HotspotWidget.storedState = actuatorState ; } switch ( actuatorState ) { case ACTUATED : return R.drawable.connected ; case NOT_ACTUATED : return R.drawable.disconnected ; default: return R.drawable.disabled ; } } 
public void start ( java.lang.String myBaseId , java.lang.String enemyBaseId , java.util.Set < java.lang.String > enemyIds ) { this . myBaseId = myBaseId ; this . enemyBaseId = enemyBaseId ; this . enemyIds = enemyIds ; android.util.Log . i ( "Start game" , ( ( ( ( myBaseId + ":" ) + enemyBaseId ) + ":" ) + enemyIds ) ) ; } 
public int paga_reale_mazziere () { fiches = ( fiches ) - ( 2 * ( puntata ) ) ; if ( ( fiches ) < 0 ) { perso = true ; int buf = fiches ; fiches = 0 ; return ( puntata ) + ( buf + ( puntata ) ) ; } return ( puntata ) * 2 ; } 
@ java.lang.Override public ua.com.jobsukraine.entity.Candidate findByLogin ( java.lang.String login ) { ua.com.jobsukraine.entity.Candidate c = null ; try { c = candidateRepository . findByInfo ( loginInfoRepository . findByLogin ( login ) ) ; if ( ( candidateRepository . getFeedbacks ( c . getId () ) . size () ) > 0 ) c . setRating ( candidateRepository . getGlobalRating ( c . getId () ) ) ; } catch ( org.springframework.dao.EmptyResultDataAccessException e ) {} return c ; } 
private void onEmojiconsPressed () { if ( ( emojiconsViewGroup . getVisibility () ) == ( android.view.View.VISIBLE ) ) { emojiconsViewGroup . setVisibility ( View.GONE ) ; } else { android.view.View view = this . getCurrentFocus () ; if ( view != null ) { android.view.inputmethod.InputMethodManager imm = ( ( android.view.inputmethod.InputMethodManager ) ( getSystemService ( Context.INPUT_METHOD_SERVICE ) ) ) ; imm . hideSoftInputFromWindow ( view . getWindowToken () , 0 ) ; } emojiconsViewGroup . setVisibility ( View.VISIBLE ) ; } } 
public void enable ( java.lang.String name , java.lang.String artifact ) throws java.io.IOException { org.apache.zeppelin.helium.HeliumPackageSearchResult pkgInfo = getPackageInfo ( name , artifact ) ; if ( pkgInfo == null ) { return; } if ( org.apache.zeppelin.helium.HeliumPackage . isBundleType ( pkgInfo . getPkg () . getType () ) ) { bundleFactory . buildPackage ( pkgInfo . getPkg () , true , true ) ; } heliumConf . enablePackage ( name , artifact ) ; save () ; } 
public void runAlgorithm ( double minSup , double minConf , org.knime.sequence.ruleGrowth.spmf.SequenceDatabase database ) throws java.io.IOException { this . database = database ; this . minConfidence = minConf ; this . minsuppRelative = ( ( int ) ( java.lang.Math . ceil ( ( minSup * ( database . size () ) ) ) ) ) ; runAlgorithm ( "NO NEED" , null , minsuppRelative , minConfidence ) ; } 
@ java.lang.Override public void onDateSet ( android.widget.DatePicker datePicker , int year , int month , int day ) { dateList . add ( ( ( ( ( ( ( ( "" + ( day < 10 ? '0' : "" ) ) + day ) + "/" ) + ( month < 10 ? '0' : "" ) ) + month ) + "/" ) + year ) ) ; showDialog ( 888 ) ; } 
public java.lang.Boolean draw ( dk.eax.Field field ) { if ( ( field . getToken () ) == null ) { java.lang.System.out . println ( field . getToken () ) ; int y = field . getCoordinate_y () ; int x = field . getCoordinate_x () ; dk.eax.graphics.Ellipse ellipsis = new dk.eax.graphics.Ellipse ( x , y , 200 , 200 ) ; ellipsis . draw () ; field . setToken ( this ) ; return true ; } return false ; } 
public void paint ( java.awt.Graphics g ) { g . setColor ( java.awt.Color.BLACK ) ; g . fillOval ( x , y , radius , radius ) ; g . drawOval ( ( ( ( x ) + ( ( radius ) / 2 ) ) - ( ( range ) / 2 ) ) , ( ( ( y ) + ( ( radius ) / 2 ) ) - ( ( range ) / 2 ) ) , range , range ) ; } 
public void gpsDisconnected () { android.util.Log . d ( "MainActivity" , ( ( this . toString () ) + " gps disconnect signal" ) ) ; if ( ! ( com.example.jonathan.myapplication.Configuration . getTerminate () ) ) { android.widget.Toast . makeText ( this , "GPS Location Service has Disconnected.  Please re-login." , Toast.LENGTH_LONG ) . show () ; android.content.Intent intent = new android.content.Intent ( this , com.example.jonathan.myapplication.MainActivity . class ) ; startActivity ( intent ) ; } } 
@ java.lang.Override public void writePortable ( com.hazelcast.nio.serialization.PortableWriter writer ) throws java.io.IOException { java.util.List < java.lang.String > nullChecker = com.google.common.collect.Lists . newArrayList () ; if ( ( topicFilter ) != null ) { writer . writeUTF ( "topicFilter" , topicFilter ) ; nullChecker . add ( "topicFilter" ) ; } if ( ( qos ) != null ) { writer . writeInt ( "qos" , qos . value () ) ; nullChecker . add ( "qos" ) ; } writer . writeUTFArray ( "nullChecker" , nullChecker . toArray ( new java.lang.String [ 0 ] ) ) ; } 
@ java.lang.Override public boolean onTouchEvent ( com.androlua.MotionEvent event ) { if ( ( mOnTouchEvent ) != null ) { try { java.lang.Object ret = mOnTouchEvent . call ( event ) ; if ( ( ret != null ) && ( ( ret . getClass () ) == ( boolean . class ) ) ) return true ; } catch ( com.androlua.LuaException e ) { sendMsg ( ( "onTouchEvent " + ( e . getMessage () ) ) ) ; } } return super . onTouchEvent ( event ) ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = { "" , "/" , "/index" } ) public java.lang.String getIndexPage ( org.springframework.ui.Model model ) { java.util.Optional < guru.springframework.domain.Category > categoryOptional = categoryRepository . findByDescription ( "American" ) ; java.util.Optional < guru.springframework.domain.UnitOfMeasure > unitOfMeasureOptional = unitOfMeasureRepository . findByDescription ( "Teaspoon" ) ; java.lang.System.out . println ( ( "Cat Id is: " + ( categoryOptional . get () . getId () ) ) ) ; java.lang.System.out . println ( ( "UOM ID is: " + ( unitOfMeasureOptional . get () . getId () ) ) ) ; java.util.Set recipeList = recipeService . getRecipes () ; model . addAttribute ( "recipes" , recipeList ) ; return "index" ; } 
@ java.lang.Override public void buttonPressed ( java.lang.String buttonName , double result ) { java.lang.System.out . println ( ( "qst 2 fini, name = " + buttonName ) ) ; if ( buttonName . equals ( "continue" ) ) { game . setScreen ( new com.odysseedesmaths.dialogs.SimpleDialog ( game , com.odysseedesmaths.Assets.DLG_ARRIVEE_2b , new com.odysseedesmaths.dialogs.EndButtonsListener () { @ java.lang.Override public void buttonPressed ( java.lang.String buttonName ) { game . setScreen ( new com.odysseedesmaths.minigames.accrobranche.Accrobranche ( game ) ) ; } } ) ) ; } else if ( buttonName . equals ( "restart" ) ) { game . setScreen ( game . getModeScene () ) ; } } 
private void addEntry ( int answer ) { entries . add ( new Entry ( allTrials . get ( ( ( counter ) - 1 ) ) , answer , ( ( ( inCircleSteps ) * 1.0 ) / ( totalTimeSteps ) ) , startTime , counter , currentGazeDataSet , new Tuple ( this . getGCanvas () . getLocationOnScreen () ) , ( ( inPracticeMode ) && ( ( counter ) < 5 ) ) ) ) ; } 
private boolean canAttack ( final me.NoChance.PvPManager.PvPlayer attacker , final me.NoChance.PvPManager.PvPlayer defender ) { if ( ( attacker . isInCombat () ) && ( defender . isInCombat () ) ) return dependencyManager . canAttack ( attacker . getPlayer () , defender . getPlayer () ) ; return false ; } 
public void map ( org.apache.hadoop.io.Text key , org.apache.hadoop.io.Text value , cloudCompu.PageRankMr.Context context ) throws java.io.IOException , java.lang.InterruptedException { java.lang.String [] detial = value . toString () . split ( "&gt;" ) ; java.lang.String [] par = detial [ 0 ] . split ( " " ) ; if ( ( java.lang.Integer . parseInt ( par [ 2 ] ) ) == 0 ) { title . set ( "Sum" ) ; pr . set ( java.lang.Double . parseDouble ( par [ 0 ] ) ) ; context . write ( key , pr ) ; } } 
public static int hash ( final java.lang.String str ) { int hash = - 2128831035 ; final byte [] bytes = str . getBytes ( java.nio.charset.StandardCharsets.ISO_8859_1 ) ; for ( final byte b : bytes ) { { hash = hash ^ b ; hash = hash * 16777619 ; } } return hash ; } 
@ java.lang.Override public void connectionLost ( java.lang.Throwable thrwbl ) { java.lang.System.out . println ( "Connection Lost..." ) ; java.lang.System.out . println ( thrwbl . getCause () ) ; java.lang.System.out . println ( thrwbl . getMessage () ) ; java.lang.String m = ( ( bfh.ch.labdem.main.Subscriber . class . getName () ) + "\n" ) + ( thrwbl . getMessage () ) ; LabDemLogger.LOGGER . log ( java.util.logging.Level.SEVERE , m ) ; } 
@ java.lang.Override public void onCheckedChanged ( android.widget.CompoundButton buttonView , boolean isChecked ) { if ( ( com.cyapass.cyapass.MainActivity.currentSiteKey ) == null ) { return; } if ( isChecked ) { com.cyapass.cyapass.MainActivity.currentSiteKey . setMaxLength ( java.lang.Integer . parseInt ( com.cyapass.cyapass.MainActivity.PlaceholderFragment.maxLengthTabEditText . getText () . toString () ) ) ; } else { com.cyapass.cyapass.MainActivity.currentSiteKey . setMaxLength ( 0 ) ; } if ( gv . isLineSegmentComplete () ) { android.util.Log . d ( "MainActivity" , "addChars -- Re-generating password..." ) ; gv . GeneratePassword () ; } } 
@ java.lang.Override public boolean canHandle ( org.opentosca.planbuilder.model.tosca.AbstractImplementationArtifact ia , org.opentosca.planbuilder.model.tosca.AbstractNodeType infrastructureNodeType ) { javax.xml.namespace.QName type = ia . getArtifactType () ; org.opentosca.planbuilder.prephase.plugin.scriptiaonlinux.PrePhasePlugin.LOG . debug ( ( ( ( ( "Checking if type: " + ( type . toString () ) ) + " and infrastructure nodeType: " ) + ( infrastructureNodeType . getId () . toString () ) ) + " can be handled" ) ) ; return this . isSupportedDeploymentPair ( type , infrastructureNodeType . getId () , false ) ; } 
public nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock lock ( java.util.UUID userAnonymizedID ) { try { synchronized ( lockedUsers ) { nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus lockStatus ; while ( ( lockStatus = getLockStatus ( userAnonymizedID ) ) == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.LOCKED ) ) { lockedUsers . wait () ; } if ( lockStatus == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.FREE ) ) { storeLock ( userAnonymizedID ) ; } return new nu.yona.server.analysis.service.UserAnonymizedSynchronizer.Lock ( userAnonymizedID , ( lockStatus == ( nu.yona.server.analysis.service.UserAnonymizedSynchronizer.LockStatus.FREE ) ) ) ; } } catch ( java.lang.InterruptedException e ) { throw nu.yona.server.exceptions.YonaException . unexpected ( e ) ; } } 
void free ( final long id ) throws java.io.IOException { final net.kotek.jdbm.BlockIo curBlock = file . get ( net.kotek.jdbm.Location . getBlock ( id ) ) ; final short offset = net.kotek.jdbm.Location . getOffset ( id ) ; final int size = net.kotek.jdbm.RecordHeader . getAvailableSize ( curBlock , offset ) ; if ( size > ( net.kotek.jdbm.PhysicalRowIdManager.DATA_PER_PAGE ) ) {} net.kotek.jdbm.RecordHeader . setCurrentSize ( curBlock , offset , 0 ) ; file . release ( curBlock ) ; freeman . put ( id , size ) ; } 
@ net.minecraftforge.fml.common.Mod.EventHandler public void preInit ( net.minecraftforge.fml.common.event.FMLPreInitializationEvent event ) { net.minecraftforge.fml.common.registry.GameRegistry . register ( ( blockTorch = new com.builtbroken.bonetorch.torch.BlockBoneTorch () ) ) ; net.minecraftforge.fml.common.registry.GameRegistry . register ( new com.builtbroken.bonetorch.torch.ItemBlockBoneTorch ( blockTorch ) , blockTorch . getRegistryName () ) ; if ( ( event . getSide () ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { blockTorch . registerModel () ; } } 
public boolean clear () { if ( ( ArraySize ) == 0 ) { return false ; } else { for ( int i = ArraySize ; i > 0 ; i -- ) { this . remove ( i ) ; } ArraySize = 0 ; return true ; } } 
public void chooseRightFragment () { avia.androi.innopolis.com.aviasales.models.User user = avia.androi.innopolis.com.aviasales.utils.ShPrefUtils . getUser () ; user = null ; if ( user == null ) { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.login.LoginFragment . newInstance () ; iView . showFragment ( fragment ) ; } else { android.app.Fragment fragment = avia.androi.innopolis.com.aviasales.search.TicketFragment . newInstance () ; iView . showFragment ( fragment ) ; iView . initializeNavDrawer () ; } } 
public static void main ( java.lang.String [] args ) { main.java.PlagiarismDetector plagiarismDetector = new main.java.PlagiarismDetector () ; main.java.PlagiarismService plagiarismService = new main.java.PlagiarismService () ; main.java.InputWrapper inputWrapper = plagiarismDetector . validateInput ( args ) ; double plagiarismRatio = plagiarismService . checkPlagiarism ( inputWrapper ) ; java.lang.System.out . println () ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; java.lang.System.out . println ( ( ( "Plagiarism Percentage is " + ( plagiarismRatio * 100 ) ) + " %" ) ) ; java.lang.System.out . println ( "---------------------------------------------------------------------------------------------" ) ; java.lang.System.out . println () ; } 
private void initCamera () { try { cameraType = ( ( captureType ) == ( com.onfido.android.sdk.capture.ui.CaptureType.FACE ) ) ? Camera.CameraInfo.CAMERA_FACING_FRONT : Camera.CameraInfo.CAMERA_FACING_BACK ; camera = android.hardware.Camera . open ( cameraType ) ; } catch ( java.lang.Exception e ) { view . errorLoadingCamera () ; } if ( ( camera ) != null ) { view . init ( camera ) ; } } 
private void comboBoxFieldActionPerformed ( java.awt.event.ActionEvent evt ) { java.lang.System.out . println ( ( "here" + ( comboBoxStartToSearch ) ) ) ; searchColName = comboBoxField . getSelectedItem () . toString () ; searchValue = comboBoxValue . getSelectedItem () . toString () ; java.lang.String tabName = getSelectedTabName () ; updateComboList ( searchColName , tabName ) ; comboBoxValue . setSelectedItem ( searchValue ) ; comboBoxStartToSearch = true ; } 
public void syncToDoList () { android.content.SharedPreferences toDoSharedPref = getActivity () . getSharedPreferences ( "toDo" , Context.MODE_PRIVATE ) ; java.lang.String [] splittedList ; java.lang.String savedList = toDoSharedPref . getString ( "toDoList" , null ) ; if ( savedList != null ) { splittedList = savedList . split ( "\\n" ) ; for ( java.lang.String x : splittedList ) { if ( ( x . trim () . length () ) > 0 ) { toDoList . add ( x . trim () ) ; } } } mAdapter . notifyDataSetChanged () ; } 
public static void createHTunnel ( byte [] [] map , int x1 , int x2 , int y ) { for ( int x = java.lang.Math . min ( x1 , x2 ) ; x < ( ( java.lang.Math . max ( x1 , x2 ) ) + 1 ) ; x ++ ) { map [ y ] [ x ] = ( ( byte ) ( dungeon.MapGenDungeon.SPACE ) ) ; } } 
@ java.lang.Override public void onOpen ( java.lang.Object arg0 ) { super . onOpen ( arg0 ) ; android.view.View.OnTouchListener listener = new android.view.View.OnTouchListener () { public boolean onTouch ( android.view.View v , android.view.MotionEvent e ) { if ( ( e . getAction () ) == 1 ) { marker . setHasToClose ( false ) ; marker . maximize () ; } return true ; } } ; this . mView . findViewById ( R.id.maximize ) . setOnTouchListener ( listener ) ; } 
protected boolean isClientVersionCompatible ( java.lang.String clientVersion ) { return ( ( ( java.lang.Boolean . parseBoolean ( java.lang.System . getProperty ( "skipJspressoVersionCheck" ) ) ) || ( ( org.jspresso.framework.util.Build . getJspressoVersion () ) == null ) ) || ( Build.UNKNOWN . equals ( org.jspresso.framework.util.Build . getJspressoVersion () ) ) ) || ( org.jspresso.framework.util.Build . getJspressoVersion () . equals ( clientVersion ) ) ; } 
@ java.lang.Override public void onResponse ( @ android.support.annotation.NonNull android.content.Context ctx , com.cardinfolink.madgazescan.model.StateModel < java.util.ArrayList < com.cardinfolink.madgazescan.model.UserModel > > data ) { java.lang.String userId = null ; if ( ( ( data != null ) & ( ( data . getStatus () ) == ( com.cardinfolink.madgazescan.api.ResponseCode.SUCCESS ) ) ) & ( com.cardinfolink.madgazescan.utils.CollectionUtils . isValid ( data . getData () ) ) ) { userId = data . getData () . get ( 0 ) . getUserId () ; } java.lang.String url = generateGlassUrl ( merchantCode , userId ) ; startWebActivity ( url ) ; } 
public static synchronized void putString ( android.content.Context context , java.lang.String key , java.lang.String value , boolean commit ) { ds.framework.v4.Settings . ensurePreferencesEditor ( context ) ; ds.framework.v4.Settings.sPreferencesEditor . putString ( key , value ) ; if ( commit ) { ds.framework.v4.Settings.sPreferencesEditor . commit () ; } if ( ( ds.framework.v4.Settings.sInstance ) != null ) { ds.framework.v4.Settings.sInstance.mSettings . put ( key , value ) ; } } 
protected java.lang.String getName ( com.google.gwt.core.ext.typeinfo.JClassType source ) { if ( ( source . getEnclosingType () ) != null ) { return ( ( getName ( source . getEnclosingType () ) ) + "_" ) + ( source . getSimpleSourceName () ) ; } return source . getSimpleSourceName () ; } 
@ java.lang.Override final boolean updateBool ( ) throws java.lang.Exception { boolean b = false ; for ( nl.ramondevaan.visualization.core.Source < S > s : inputs ) { if ( s != null ) { b = ( s . update () ) || b ; } } if ( b || ( changed ) ) { try { output = nl.ramondevaan.visualization.core.Filter . updateImpl () ; return true ; } catch ( java.lang.Exception e ) { output = null ; throw e ; } } return false ; } 
public void stopScheduler () { if ( ( scheduler ) != null ) { scheduler . cancel () ; scheduler = null ; } try { transmitter . close () ; } catch ( java.lang.Exception e ) { de.rwth_aachen.afu.raspager.RasPagerService.log . log ( java.util.logging.Level.SEVERE , "Failed to close transmitter." , e ) ; } } 
@ com.fasterxml.jackson.annotation.JsonIgnore public void checkStatus () { if ( ( holes ) == null ) { this . status = PatternStatus.READY ; return; } for ( businessentities.PatternHole aHole : holes ) { if ( ( ( aHole . getPatternAssigned () ) == null ) || ( aHole . getPatternAssigned () . isEmpty () ) ) { this . status = PatternStatus.WIP ; return; } } this . status = PatternStatus.READY ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { cleanSlate () ; if ( i == 0 ) a1.cak.moore.cak_finale.Create . super . onBackPressed () ; if ( i == 2 ) { cleanSlate () ; android.widget.Toast . makeText ( context , R.string.newFile , Toast.LENGTH_SHORT ) . show () ; } dialog . dismiss () ; } 
@ java.lang.Override public void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; mActivityContext = getActivity () ; mApplicationContext = getActivity () . getApplicationContext () ; if ( ( getArguments () ) != null ) { mCategoryName = getArguments () . getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_NAME ) ; mCategoryFilters = getArguments () . getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.CATEGORY_FILTER ) ; mSearchQuery = getArguments () . getString ( com.pratilipi.mobile.android.PratilipiList.PratilipiListFragment.SEARCH_QUERY ) ; } mUserActionListner = new com.pratilipi.mobile.android.PratilipiList.PratilipiListPresenter ( mActivityContext , this ) ; mPratilipiListAdapter = new com.pratilipi.mobile.android.PratilipiList.PratilipiListAdapter ( mActivityContext , this , mSearchQuery ) ; } 
public void onClick ( android.view.View v ) { android.util.SparseBooleanArray checked = daysList . getCheckedItemPositions () ; daysSelected = new java.util.ArrayList < java.lang.Integer > () ; for ( int i = 0 ; i < ( checked . size () ) ; i ++ ) { daysSelected . add ( i ) ; } this . headBackToMainScreen () ; } 
public java.lang.String toString () { java.lang.String result = "" ; if ( this . organic ) { result += "*" ; } result += ( this . name ) + " " ; if ( this . fruit ) { result += "(F) " ; } result += ( "- " + ( this . weight ) ) + " lbs" ; return result ; } 
@ java.lang.Override public void handle ( javafx.event.ActionEvent e ) { root . getChildren () . remove ( makeMove ) ; spacesToMove = ( ( int ) ( ( java.lang.Math . random () ) * 3 ) ) + 1 ; targetX = control.tileList . get ( ( ( curSpace ) + 1 ) ) . x ; targetY = control.tileList . get ( ( ( curSpace ) + 1 ) ) . y ; startNanoTime = java.lang.System . nanoTime () ; isRolling = true ; } 
public org.json.JSONArray getStoryData () { org.json.JSONArray storyArray = new org.json.JSONArray () ; try { org.json.JSONArray mJSONArray = loadDataFromAsset () ; for ( int i = 2 ; i < ( mJSONArray . length () ) ; i ++ ) { storyArray . put ( mJSONArray . getJSONObject ( i ) ) ; } } catch ( org.json.JSONException ex ) { ex . printStackTrace () ; return null ; } return storyArray ; } 
private boolean deliverLevelParts ( com.lappard.android.level.LevelCreator.PartAvailableListener listener ) { if ( ( levelParts . size () ) > ( deliveredParts ) ) { java.util.List < com.badlogic.gdx.scenes.scene2d.Actor > result = createActors ( levelParts . get ( deliveredParts ) ) ; ( deliveredParts ) ++ ; listener . onPartAvailable ( result ) ; return true ; } return false ; } 
private int compareNumOfAllocations ( com.example.nickozoulis.teamproj.domain.Referee lRef , com.example.nickozoulis.teamproj.domain.Referee rRef ) { if ( ( lRef . getNumOfMatchAllocated () ) > ( rRef . getNumOfMatchAllocated () ) ) return 1 ; if ( ( lRef . getNumOfMatchAllocated () ) < ( rRef . getNumOfMatchAllocated () ) ) return - 1 ; if ( ( lRef . getNumOfMatchAllocated () ) == ( rRef . getNumOfMatchAllocated () ) ) return 0 ; return 0 ; } 
public int doEndTag ( ) throws javax.servlet.jsp.JspException { try { java.lang.String bodyContentString = ( null != ( getBodyContent () ) ) ? getBodyContent () . getString () : "" ; bodyContent = null ; pageContext . getOut () . write ( bodyContentString ) ; } catch ( java.io.IOException | java.lang.RuntimeException e ) { throw new javax.servlet.jsp.JspException ( e ) ; } return EVAL_PAGE ; } 
protected boolean updateVideoSize ( int width , int height ) { matrixManager . setIntrinsicVideoSize ( width , height ) ; updateMatrixOnLayout () ; videoSize.x = width ; videoSize.y = height ; return ! ( ( width == 0 ) || ( height == 0 ) ) ; } 
public int findIndexFromKey ( K key ) { for ( int i = 0 ; i < ( internalMap . size () ) ; i ++ ) { if ( internalMap . get ( i ) . getKey () . equals ( key ) ) return i ; } return - 1 ; } 
public void setMaxCount ( java.lang.Integer max ) { for ( int i = 0 ; i <= ( max + 1 ) ; i ++ ) { itemList . add ( i ) ; } maxItems = max ; dataAdapter . setPagesNumber ( itemList ) ; currentPageListView . setAdapter ( dataAdapter ) ; maxPages . setText ( max . toString () ) ; } 
public long insert ( io.keepcoding.rgs.everpobre.model.Notebook notebook ) { if ( notebook == null ) { throw new java.lang.IllegalArgumentException ( "Passing NULL NOTEBOOK, imbecile" ) ; } long id = db . getWritableDatabase () . insert ( DBConstants.TABLE_NOTEBOOK , null , this . getContentValues ( notebook ) ) ; notebook . setId ( id ) ; db . close () ; return id ; } 
public boolean canPlaceRoadAtLocation ( int playerIndex , client.models.mapdata.EdgeLocation edge ) { if ( ( this . getEdgeOwner ( edge ) ) != ( - 1 ) ) return false ; java.lang.Integer [] surrOwners = this . getAdjacentEdgeOwners ( edge ) ; if ( surrOwners == null ) return false ; if ( java.util.Arrays . asList ( surrOwners ) . contains ( playerIndex ) ) return true ; else return false ; } 
public void backupAllMenuItemAction () { int response = mainView . showConfirmationDialog ( "Back up vocab files" , "This will overwrite all previous backup files. Are you sure?" ) ; if ( response == ( javax.swing.JOptionPane.YES_OPTION ) ) { for ( com.tkomiya.models.VocabList vlist : vocabLists ) { java.io.File file = new java.io.File ( ( ( ( ( com.tkomiya.main.MainController.DEFAULT_SAVE_DIRECTORY ) + ( vlist . getName () ) ) + "." ) + ( com.tkomiya.main.MainController.BACKUP_FILE_EXTENSION ) ) ) ; saveVocabListAsTextFile ( vlist , file ) ; } } } 
static byte [] readFile ( java.io.File file ) throws java.io.IOException { byte [] buffer = new byte [ 1024 ] ; java.io.ByteArrayOutputStream bytes = new java.io.ByteArrayOutputStream () ; java.io.FileInputStream fileInputStream = new java.io.FileInputStream ( file ) ; try { while ( true ) { int read = fileInputStream . read ( buffer ) ; if ( read == ( - 1 ) ) break; bytes . write ( buffer , 0 , read ) ; } } finally { fileInputStream . close () ; } return bytes . toByteArray () ; } 
@ java.lang.Override public void readFields ( java.io.DataInput in ) throws java.io.IOException { int size = in . readInt () ; if ( size == 0 ) { shortestpath = null ; return; } shortestpath = new int [ size ] ; for ( int i = 0 ; i < size ; i ++ ) { shortestpath [ i ] = in . readInt () ; } } 
@ org.junit.Test public void shouldReturnNullDigestOnPartlyOverlappingWrites ( ) throws java.io.IOException { chksumChannel . write ( buffers [ 1 ] , blocksize ) ; chksumChannel . write ( buffers [ 0 ] , ( ( blocksize ) - 1 ) ) ; if ( ( blocksize ) == 1 ) { fail ( "Pick a blocksize > 1 for testing correct handling of partly overlapping writes!" ) ; } assertThat ( chksumChannel . getChecksum () , equalTo ( null ) ) ; } 
public java.lang.String format ( org.joda.time.DateTime dateTime ) { if ( dateTime == null ) { return "" ; } org.joda.time.DateTimeZone timeZone = dateTime . getZone () ; long utcTime = timeZone . convertLocalToUTC ( dateTime . getMillis () , false ) ; dateTime = new org.joda.time.DateTime ( ( utcTime + ( offset ) ) ) ; return formatter . withLocale ( locale ) . print ( dateTime ) ; } 
@ java.lang.Override public void setCoordinates ( dev.eyesless.simple_weather_for_fishermans.geocoding_responce_classes.Location location ) { if ( ( location . getLastlocation () ) != null ) { setAutocompleted ( location . getLastlocation () ) ; cfinterface . setDefoultLoc () ; cfinterface . setLocUnavaliable () ; } else { cfinterface . setCoords ( ( ( ( java.lang.String . valueOf ( location . getLat () ) ) + " and " ) + ( java.lang.String . valueOf ( location . getLng () ) ) ) ) ; } } 
private java.lang.String getField ( java.util.Map < java.lang.String , java.lang.Object > profile ) { java.util.List < java.lang.String > map = ( ( java.util.List < java.lang.String > ) ( profile . get ( "summary" ) ) ) ; if ( ( map != null ) && ( ( map . size () ) >= 2 ) ) { return map . get ( 1 ) . toString () ; } else { return "" ; } } 
@ java.lang.Override protected void onStop () { org.acra.ACRA . getErrorReporter () . putCustomData ( "MainActivity.onStop()" , "callback method was invoked" ) ; android.util.Log . i ( ro.pub.acs.mobiway.gui.main.MainActivity.TAG , "onStop() callback method was invoked" ) ; if ( ( ( googleApiClient ) != null ) && ( googleApiClient . isConnected () ) ) { stopLocationUpdates () ; googleApiClient . disconnect () ; } super . onStop () ; } 
private static void compareHands ( java.util.List < java.lang.Integer > x , java.util.List < java.lang.Integer > y , boolean [] a , boolean [] b ) { int buildValue1 = week1Problems.P6 . findValue ( a ) ; int buildValue2 = week1Problems.P6 . findValue ( b ) ; if ( buildValue1 > buildValue2 ) { java.lang.System.out . println ( "Player 1 wins" ) ; } else if ( buildValue1 == buildValue2 ) { week1Problems.P6 . compareHigh ( x , y ) ; } else { java.lang.System.out . println ( "Player 2 wins" ) ; } } 
private void resetViewport () { final lecho.lib.hellocharts.model.Viewport v = new lecho.lib.hellocharts.model.Viewport ( chart . getMaximumViewport () ) ; v.bottom = ( edu.zucc.xk31401419.mycurrencies.utils.MathUtil . getMaxAndMin ( rateValuesTab ) [ 1 ] ) * ( ( float ) ( 0.9 ) ) ; v.top = ( edu.zucc.xk31401419.mycurrencies.utils.MathUtil . getMaxAndMin ( rateValuesTab ) [ 0 ] ) * ( ( float ) ( 1.1 ) ) ; v.left = 0 ; v.right = ( numberOfPoints ) - 1 ; chart . setMaximumViewport ( v ) ; chart . setCurrentViewport ( v ) ; } 
private void addMember ( final com.enonic.xp.security.PrincipalKey container , final com.enonic.xp.security.PrincipalKey member ) { try { securityService . addRelationship ( com.enonic.xp.security.PrincipalRelationship . from ( container ) . to ( member ) ) ; com.enonic.xp.core.impl.security.SecurityInitializer.LOG . info ( ( ( ( "Added " + member ) + " as member of " ) + container ) ) ; } catch ( final java.lang.Exception t ) { com.enonic.xp.core.impl.security.SecurityInitializer.LOG . error ( ( ( ( "Unable to add member: " + container ) + " -> " ) + member ) , t ) ; } } 
@ java.lang.Override public boolean createStudent ( java.lang.String userID , java.lang.String pass , java.lang.String name ) { if ( user . isSet () ) { if ( ( user . get () . access () ) == ( AccessLevel.teacher ) ) { flash.card.java.model.Student s = new flash.card.java.model.Student ( userID , pass , name ) ; return this . db . putStudent ( s ) ; } } return false ; } 
public static java.lang.String omitEveryOther ( java.lang.String word ) { boolean keepCurrent = true ; int i = 0 ; java.lang.String newSpeak = "" ; while ( i < ( word . length () ) ) { if ( keepCurrent ) { newSpeak += java.lang.String . valueOf ( word . charAt ( i ) ) ; keepCurrent = false ; } else { keepCurrent = true ; } i ++ ; } return newSpeak ; } 
@ java.lang.Override public void onBarDelete ( int total ) { score += total ; callback . onScoreChange ( score ) ; if ( ( score ) >= ( ( level ) * ( home.tetris.Scene.SCORE_PER_LEVEL ) ) ) { ( level ) ++ ; sound . play ( Sound.LEVEL_UP ) ; callback . onLevelUp ( level ) ; } deletingAnimation . falling ( total ) ; } 
public java.util.List < ralgorithm.State > pmove () { java.util.List < ralgorithm.State > states = new java.util.ArrayList < ralgorithm.State > () ; ralgorithm.State state ; while ( true ) { state = step () ; if ( state == null ) { break; } states . add ( state ) ; } for ( ralgorithm.Movement m : moves ) { m . finalizeMove () ; } return states ; } 
private boolean isMonth ( java.lang.String nextWord ) { boolean ans = false ; for ( int i = 1 ; i < ( monthsInYear.length ) ; i ++ ) { if ( nextWord . contains ( monthsInYear [ i ] ) ) { ans = true ; break; } } return ans ; } 
@ java.lang.Override public void put ( KEY key , VALUE data ) { java.lang.String s = datacache.Util . getMD5 ( key . toString () ) ; try { datacache.disklrucache.DiskLruCache.Editor editor = mDiskIruCache . edit ( s ) ; if ( editor != null ) { java.io.OutputStream outputStream = editor . newOutputStream ( 0 ) ; mValueDataSaver . writeTo ( outputStream , data ) ; editor . commit () ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override public void act ( float delta ) { taken += delta ; if ( ( taken ) > ( duration ) ) { callActionCompletedListener () ; if ( ( action ) != null ) { action . act ( delta ) ; if ( action . isDone () ) action . callActionCompletedListener () ; } } } 
@ java.lang.Override public void setBooleanMetadata ( java.lang.String key , boolean value ) { if ( ( ( ( sender ) == null ) || ( ( sender . getBlock () ) == null ) ) || ( ( sender . getBlock () . getType () ) == ( org.bukkit.Material.COMMAND ) ) ) { return; } sender . getBlock () . setMetadata ( key , new org.bukkit.metadata.FixedMetadataValue ( org.bitbucket.ucchy.undine.UndineMailer . getInstance () , value ) ) ; } 
public void injectCacheName ( java.lang.Object obj , java.lang.String cacheName ) throws org.apache.ignite.IgniteCheckedException { assert obj != null ; if ( log . isDebugEnabled () ) log . debug ( ( "Injecting cache name: " + obj ) ) ; obj = unwrapTarget ( obj ) ; inject ( obj , GridResourceIoc.ResourceAnnotation.CACHE_NAME , null , null , cacheName ) ; } 
private void executeOnStartActions () { int actionIndexOnStart = java.lang.Integer . parseInt ( sharedPrefs . getString ( getString ( R.string.key_prefActionOnStart ) , java.lang.Integer . toString ( ActionOnStartRandomAyah ) ) ) ; if ( actionIndexOnStart == ( ActionOnStartNone ) ) { return; } else if ( actionIndexOnStart == ( ActionOnStartSurahList ) ) { android.content.Intent intent = new android.content.Intent ( this , com.frrahat.quransimple.SuraListActivity . class ) ; startActivityForResult ( intent , REQUEST_SURAH_LIST ) ; } else if ( actionIndexOnStart == ( ActionOnStartRandomAyah ) ) { showARandomAyah = true ; } } 
private boolean testActiveClick ( com.google.gwt.user.client.Event e ) { com.google.gwt.dom.client.Element target = e . getEventTarget () . cast () ; com.google.gwt.query.client.GQuery $e = com.google.gwt.query.client.GQuery . $ ( target ) ; if ( ( $e . parents ( ( "#" + ( containerId ) ) ) . length () ) > 0 ) { activeField = true ; } else { closeField () ; } return true ; } 
public static com.mongodb.MongoClient createClientFromFlumeContext ( org.apache.flume.Context context , java.lang.String prefix ) { java.util.List < com.mongodb.ServerAddress > seeds = org.mapad.google.common.utils.MongoUtils . getSeeds ( context . getString ( ( prefix + ( org.mapad.google.common.utils.MongoUtils.HOSTNAMES ) ) ) ) ; com.mongodb.MongoCredential credential = org.mapad.google.common.utils.MongoUtils . getCredential ( context , prefix ) ; com.mongodb.MongoClient client ; if ( credential != null ) { client = new com.mongodb.MongoClient ( seeds , java.util.Arrays . asList ( credential ) ) ; } else { client = new com.mongodb.MongoClient ( seeds ) ; } return client ; } 
private void updateRippleSize ( int width , int height ) { final int cx = width / 2 ; final int cy = ( mDual ) ? ( mIcon . getTop () ) + ( mIcon . getHeight () ) : height / 2 ; final int rad = ( ( int ) ( ( mIcon . getHeight () ) * 1.25F ) ) ; mRipple . setHotspotBounds ( ( cx - rad ) , ( cy - rad ) , ( cx + rad ) , ( cy + rad ) ) ; } 
public java.lang.String cardToString () { java.lang.String ret = "" ; if ( ( ( value ) == 1 ) || ( ( value ) == 11 ) ) { ret = "A" ; } if ( ( value ) == 21 ) { ret = "J" ; } if ( ( value ) == 22 ) { ret = "Q" ; } if ( ( value ) == 23 ) { ret = "K" ; } else { ret = "" + ( value ) ; } return ret ; } 
public void fireBomb ( samueltaylor.classicwarlordprototype.Model.Region r , java.util.List < samueltaylor.classicwarlordprototype.Model.Empire > affectedEmpires , java.util.List < samueltaylor.classicwarlordprototype.Model.Region > affectedRegions ) { location . setBomb ( null ) ; location = r ; if ( ( ( r . getBomb () ) != null ) && ( ( r . getBomb () . getBombtype () ) > ( this . bombtype ) ) ) { this . bombtype = location . getBomb () . getBombtype () ; } location . setBomb ( this ) ; location . detonateBomb ( affectedEmpires , affectedRegions ) ; } 
@ cz.cuni.amis.pogamut.base.communication.worldview.listener.annotation.EventListener ( eventClass = cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled . class ) public void playerKilled ( cz.cuni.amis.pogamut.ut2004.communication.messages.gbinfomessages.PlayerKilled event ) { if ( event . getKiller () . equals ( info . getId () ) ) { updateRisque () ; shoot . stopShooting () ; if ( ( currentWeapon ) != null ) { currentWeapon . upNbKills () ; currentWeapon . updateProbability () ; } target = null ; bot . getBotName () . setInfo ( "COLLECT" ) ; now = collect ; canPursue = false ; } } 
private void showWindow ( net.mready.hover.HoverWindow window ) { if ( window.attached ) { return; } windowManager . addView ( window.windowView , window.windowLayoutParams ) ; window.attached = true ; if ( ( powerManager . isScreenOn () ) && ( ! ( keyguardManager . inKeyguardRestrictedInputMode () ) ) ) { window . performStart () ; } } 
public final BinaryNum shiftLeft () { final boolean [] newBits = new boolean [ bits.length ] ; for ( int i = 1 ; i < ( bits.length ) ; i ++ ) { newBits [ ( i - 1 ) ] = bits [ i ] ; } newBits [ ( ( bits.length ) - 1 ) ] = false ; return new BinaryNum ( newBits ) ; } 
private java.lang.String buildSortOrder ( com.chd.MediaMgr.utils.MediaFileUtil.SortMethod sort ) { if ( sort == null ) return null ; java.lang.String sortOrder = null ; switch ( sort ) { case name : sortOrder = ( MediaStore.Files.FileColumns.TITLE ) + " asc" ; break; case size : sortOrder = ( MediaStore.Files.FileColumns.SIZE ) + " asc" ; break; case date : sortOrder = ( MediaStore.Files.FileColumns.DATE_MODIFIED ) + " desc" ; break; case type : sortOrder = ( ( ( MediaStore.Files.FileColumns.MIME_TYPE ) + " asc, " ) + ( MediaStore.Files.FileColumns.TITLE ) ) + " asc" ; break; } return sortOrder ; } 
@ java.lang.Override protected void onCreate ( android.os.Bundle savedInstanceState ) { super . onCreate ( savedInstanceState ) ; if ( ( getLayoutRes () ) > 0 ) { setContentView ( R.layout.activity_base ) ; android.view.View content = android.view.LayoutInflater . from ( this ) . inflate ( getLayoutRes () , root , false ) ; if ( hasTitle () ) { android.support.v7.widget.Toolbar toolbar = inflateToolbar () ; root . addView ( toolbar ) ; } root . addView ( content ) ; butterknife.ButterKnife . bind ( this ) ; } } 
public double slopeTo ( Point that ) { if ( ( this . compareTo ( that ) ) == 0 ) return java.lang.Double.NEGATIVE_INFINITY ; if ( ( this . x ) == ( that.x ) ) return java.lang.Double.POSITIVE_INFINITY ; if ( ( this . y ) == ( that.y ) ) return + 0.0 ; return ( ( double ) ( ( that.y ) - ( this . y ) ) ) / ( ( double ) ( ( that.x ) - ( this . x ) ) ) ; } 
@ java.lang.Override public void printData () { java.lang.System.out . println ( ( "=> Directory= " + ( this . path ) ) ) ; if ( ( this . files . size () ) > 0 ) java.lang.System.out . println ( "     Files: " ) ; else java.lang.System.out . println ( "     <no files>" ) ; for ( int i = 0 ; i < ( this . files . size () ) ; ++ i ) java.lang.System.out . println ( ( "     - " + ( this . files . get ( i ) ) ) ) ; } 
public static boolean isInvEmpty ( net.minecraft.inventory.IInventory stack ) { boolean empty = true ; if ( stack == null ) return true ; for ( int i = 0 ; i < ( stack . getSizeInventory () ) ; i ++ ) { if ( ! ( stack . getStackInSlot ( i ) . isEmpty () ) ) return false ; } return true ; } 
private java.lang.Class < ? > getSuperClassOnSet ( java.util.Set < java.lang.Class < ? > > set , java.lang.Class < ? > clazz ) { java.lang.Class < ? > found = null ; for ( java.lang.Class < ? > aux : set ) { if ( ( aux . isAssignableFrom ( clazz ) ) && ( ( found == null ) || ( aux . isAssignableFrom ( found ) ) ) ) { found = aux ; } } return found == null ? clazz : found ; } 
@ java.lang.Override public void touchUp ( com.badlogic.gdx.scenes.scene2d.InputEvent event , float x , float y , int pointer , int button ) { back . setBounds ( ( ( back . getX () ) - 5 ) , back . getY () , ( ( back . getWidth () ) + 5 ) , ( ( back . getHeight () ) + 5 ) ) ; game.mainMenuScreen = new by.randomen.screens.MainMenuScreen ( game ) ; game . setScreen ( game.mainMenuScreen ) ; game.settingsMScreen . dispose () ; } 
@ java.lang.Override public org.exist.xquery.value.Sequence postEval ( org.exist.xquery.value.Sequence seq ) throws org.exist.xquery.XPathException { if ( ( orderedResult ) == null ) { return seq ; } orderedResult . sort () ; org.exist.xquery.value.Sequence result = orderedResult ; orderedResult = null ; if ( ( getReturnExpression () ) instanceof org.exist.xquery.FLWORClause ) { result = ( ( org.exist.xquery.FLWORClause ) ( getReturnExpression () ) ) . postEval ( seq ) ; } return super . postEval ( result ) ; } 
public void updateReel ( double x , double y , double orientationReelle , boolean enMarcheAvant , double courbureReelle ) { if ( enMarcheAvant ) { orientationGeometrique = orientationReelle ; courbureGeometrique = courbureReelle ; } else { orientationGeometrique = orientationReelle + ( java.lang.Math.PI ) ; courbureGeometrique = - courbureReelle ; } position . setX ( x ) ; position . setY ( y ) ; this . orientationReelle = orientationReelle ; this . enMarcheAvant = enMarcheAvant ; this . courbureReelle = courbureReelle ; } 
protected net.instant.util.fileprod.ProducerJob produceInner ( java.lang.String name ) { net.instant.util.fileprod.ProducerJob ret = null ; if ( ( fs ) != null ) ret = fs . produce ( name ) ; if ( ( ( rs ) != null ) && ( ret == null ) ) ret = rs . produce ( name ) ; return ret ; } 
@ org.testng.annotations.Test public void testSubtractBusinessKey ( ) throws java.lang.Exception { boolean assert_ = false ; try { spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( "test.int1" ) ; } catch ( java.lang.IllegalArgumentException e ) { spreadsheet.mapper.utils.FieldUtilsTest.LOGGER . debug ( "\'test.int1\' not business key" ) ; if ( e . getMessage () . contains ( "business key" ) ) { assert_ = true ; } } assertTrue ( assert_ ) ; java.lang.String s = spreadsheet.mapper.utils.FieldUtils . subtractBusinessKey ( ( ( FieldUtils.BUSINESS_KEY_PREFIX ) + "test.int1" ) ) ; assertEquals ( s , "test.int1" ) ; } 
private int getBillWorth ( int itemDamage , int stackSize ) { int cash = 0 ; switch ( itemDamage ) { case 0 : cash = 1 ; break; case 1 : cash = 5 ; break; case 2 : cash = 10 ; break; case 3 : cash = 20 ; break; case 4 : cash = 50 ; break; case 5 : cash = 100 ; break; } return cash * stackSize ; } 
public java.util.List < java.lang.String > asListString ( javax.naming.directory.Attribute att ) throws javax.naming.NamingException { java.util.List < java.lang.String > res = new java.util.LinkedList < java.lang.String > () ; if ( att == null ) return res ; for ( int i = 0 ; i < ( att . size () ) ; i ++ ) res . add ( ( ( java.lang.String ) ( att . get ( i ) ) ) ) ; return res ; } 
public void playSong () { if ( ( mState ) == ( org.williamwong.spotifystreamer.services.MusicService.State.PAUSED ) ) { mMediaPlayer . start () ; mState = org.williamwong.spotifystreamer.services.MusicService.State.PLAYING ; return; } if ( ( mState ) == ( org.williamwong.spotifystreamer.services.MusicService.State.PLAYING ) ) { stopSong () ; } try { mMediaPlayer . setDataSource ( mTrackModels . get ( mCurrentTrack ) . getPreviewUrl () ) ; } catch ( java.io.IOException e ) { e . printStackTrace () ; } mMediaPlayer . prepareAsync () ; mState = org.williamwong.spotifystreamer.services.MusicService.State.PREPARING ; } 
private void calculateLength () { if ( ( orientation ) == ( Sens.VERTICAL ) ) { length = ( ( end . getRow () ) - ( start . getRow () ) ) + 1 ; } else if ( ( orientation ) == ( Sens.HORIZONTAL ) ) { length = ( ( end . getCol () ) - ( start . getCol () ) ) + 1 ; } } 
@ java.lang.Override public void landOnField ( Players.PlayerController playerController , Fields.FieldController fieldController ) { Players.Player jailedPlayer = playerController . getCurrentPlayer () ; jailedPlayer . setJail ( true ) ; Game.GameController . movement ( ( ( jailedPlayer . getPlace () ) + 1 ) , 11 , jailedPlayer , fieldController , playerController ) ; jailedPlayer . setPlace ( 10 ) ; } 
private void stealSourceAsFields ( java.util.Map < java.lang.String , java.lang.Object > sourceAsMap , final java.util.Map < java.lang.String , org.elasticsearch.search.SearchHitField > fields , final java.util.Set < java.lang.String > included ) { if ( ( ( ( ( sourceAsMap == null ) || ( fields == null ) ) || ( sourceAsMap . isEmpty () ) ) || ( included == null ) ) || ( included . isEmpty () ) ) { return; } org.elasticsearch.search.fetch.source.FetchSourceSubPhase . stealSourceAsFields ( null , sourceAsMap , fields , included ) ; } 
private void findSubIndexForColor ( int topIndex , int color ) { if ( ( ( getBuilder () . mColorsSub ) == null ) || ( ( ( getBuilder () . mColorsSub . length ) - 1 ) < topIndex ) ) return; int [] subColors = getBuilder () . mColorsSub [ topIndex ] ; for ( int subIndex = 0 ; subIndex < ( subColors.length ) ; subIndex ++ ) { if ( ( subColors [ subIndex ] ) == color ) { subIndex ( subIndex ) ; break; } } } 
public static int findPositionById ( android.database.Cursor list , long id ) { if ( list == null ) return - 1 ; while ( list . moveToNext () ) { if ( ( list . getLong ( 0 ) ) == id ) { return list . getPosition () ; } } return - 1 ; } 
@ java.lang.Override public void checkIfUpdateIsAlreadyDownloaded ( com.arjanvlek.cyngnotainfo.Model.CyanogenOTAUpdate cyanogenOTAUpdate ) { if ( cyanogenOTAUpdate != null ) { java.io.File file = new java.io.File ( ( ( ( android.os.Environment . getExternalStoragePublicDirectory ( Environment.DIRECTORY_DOWNLOADS ) . getPath () ) + ( java.io.File.separator ) ) + ( cyanogenOTAUpdate . getFileName () ) ) ) ; onUpdateDownloaded ( ( ( file . exists () ) && ( ! ( settingsManager . containsPreference ( com.arjanvlek.cyngnotainfo.views.PROPERTY_DOWNLOAD_ID ) ) ) ) , false ) ; } } 
public boolean createUser ( boolean checkExists ) { if ( ( ! ( userDefined () ) ) || ( checkExists && ( userExists () ) ) ) { return false ; } org.avaje.docker.commands.PostgresContainer.log . debug ( "create postgres user {}" , dbConfig . getDbUser () ) ; java.lang.ProcessBuilder pb = createRole ( dbConfig . getDbUser () , dbConfig . getDbPassword () ) ; java.util.List < java.lang.String > stdOutLines = org.avaje.docker.commands.process.ProcessHandler . process ( pb ) . getStdOutLines () ; return ( stdOutLines . size () ) == 2 ; } 
@ java.lang.Override public java.lang.Boolean apply ( java.lang.Long bookmarkId ) { boolean result ; if ( bookmarkId > 0 ) { bookmarksDBAdapter . removeBookmark ( bookmarkId ) ; result = false ; } else { bookmarksDBAdapter . addBookmark ( sura , ayah , page ) ; result = true ; } bookmarksPublishSubject . onNext ( true ) ; return result ; } 
public void update ( ru.job4j.model.Item updated ) { for ( int i = 0 ; i < ( this . position ) ; i ++ ) { if ( this . items [ i ] . getId () . equals ( updated . getId () ) ) { this . items [ i ] = updated ; } } } 
public void promote ( com.github.arsenalfcgunners.gappleperms.Rank r ) { rank = r ; if ( ( rank . isDonor () ) && ( ! ( donorranks . contains ( rank ) ) ) ) { donorranks . add ( rank ) ; } gp . getRankManager () . setDonorRanks ( uuid , donorranks ) ; gp . getRankManager () . setRank ( uuid , rank ) ; clearPerms () ; givePerms () ; } 
public byte [] downloadTMDToByteArray ( long titleID , int version ) throws java.io.IOException { java.lang.String version_suf = "" ; if ( version > 0 ) version_suf = "." + version ; java.lang.String URL = ( ( ( ( de.mas.jnustool.util.Downloader.URL_BASE ) + "/" ) + ( java.lang.String . format ( "%016X" , titleID ) ) ) + "/tmd" ) + version_suf ; return downloadFileToByteArray ( URL ) ; } 
private java.lang.String getIGNameForInitiator ( com.emc.storageos.db.client.model.Initiator initiator , com.emc.storageos.xtremio.restapi.XtremIOClient client , java.lang.String xioClusterName ) throws java.lang.Exception { java.lang.String igName = null ; try { if ( null != ( initiator . getLabel () ) ) { com.emc.storageos.xtremio.restapi.model.response.XtremIOInitiator initiatorObj = client . getInitiator ( initiator . getLabel () , xioClusterName ) ; if ( null != initiatorObj ) { igName = initiatorObj . getInitiatorGroup () . get ( 1 ) ; } } } catch ( java.lang.Exception e ) { com.emc.storageos.volumecontroller.impl.xtremio.XtremIOExportOperations._log . warn ( "Initiator {} already deleted" , initiator . getLabel () ) ; } return igName ; } 
private java.util.ArrayList < java.lang.String > runSocket ( int packetsMax ) throws java.io.IOException { java.util.ArrayList < java.lang.String > toReturn = new java.util.ArrayList < java.lang.String > () ; while ( packetsMax != 0 ) { byte [] rcvdInfo = new byte [ 10 ] ; java.net.DatagramPacket packet = new java.net.DatagramPacket ( rcvdInfo , rcvdInfo.length ) ; socket . receive ( packet ) ; toReturn . add ( new java.lang.String ( packet . getData () ) ) ; packetsMax -- ; } return toReturn ; } 
public void inactiveTimerStart () { java.lang.String sDelay = settings . getString ( "inactiveTimerMins" , com.givenhansco.keystonenavigation.Activities.MainMenuActivity.DEFAULT_TIMER_DELAY ) ; long delay ; try { delay = java.lang.Long . parseLong ( sDelay ) ; } catch ( java.lang.Exception e ) { delay = 240 ; } if ( delay != 0 ) { delay = ( 1000 * 60 ) * delay ; startInactiveTimer ( delay ) ; } else {} } 
public void setSongIndex ( int index ) { java.lang.System.out . println ( ( "setSongIndex " + index ) ) ; if ( index != ( this . songIndex ) ) { this . songIndex = index ; setBeatmapIndex ( 0 ) ; } nextSongButton . setEnable ( ( index < ( ( Resources.songs . size () ) - 1 ) ) ) ; imageReload () ; textReload () ; } 
@ ninja.FilterWith ( value = www.purple.mixxy.filters.JsonEndpoint . class ) public ninja.Result comic ( @ ninja.params.PathParam ( value = "user" ) java.lang.String username , @ ninja.params.PathParam ( value = "work" ) java.lang.String work ) { www.purple.mixxy.models.User user = userDao . getUser ( username ) ; www.purple.mixxy.models.Comic comic = comicDao . getComic ( username , work ) ; java.lang.System.out . println ( user ) ; if ( ( user == null ) || ( comic == null ) ) { return ninja.Results . notFound () . template ( ( "www/purple/mixxy/" + ( ninja.utils.NinjaConstant.LOCATION_VIEW_FTL_HTML_NOT_FOUND ) ) ) ; } return ninja.Results . ok () . render ( "comic" , comic ) . render ( "user" , user ) . html () ; } 
@ java.lang.Override protected void onDestroy () { super . onDestroy () ; if ( isFinishing () ) { mGoogleApiClient = null ; if ( ( customThreadCheckLocation ) != null ) customThreadCheckLocation . stopRunning ( false ) ; if ( ( customThreadCheckGPSState ) != null ) customThreadCheckGPSState . stopRunning ( false ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . unregisterReceiver ( receiverMaps ) ; } } 
public java.util.ArrayList < java.lang.String > getModulePoolPaths () { java.util.ArrayList < java.lang.String > output = new java.util.ArrayList < java.lang.String > () ; if ( ( listofPredecessors . size () ) == 0 ) { return this . getCurrentFilePath () ; } else { for ( Runner.ModulePool mp : listofPredecessors ) { if ( ( mp . getCurrentFilePath () ) != null ) { output . addAll ( mp . getCurrentFilePath () ) ; } } } return output ; } 
public boolean writeData ( byte [] data , int length ) { int written = 0 ; length = java.lang.Math . min ( length , data.length ) ; for ( int i = 0 ; i < length ; i ++ ) { if ( ( writeBitsRaw ( org.q3df.demo.Q3HuffmanCoder.huff_paths [ ( 255 & ( data [ i ] ) ) ] , org.q3df.demo.Q3HuffmanCoder.sym_size [ ( 255 & ( data [ i ] ) ) ] ) ) > 0 ) { written ++ ; } else break; } return written == length ; } 
@ org.junit.Test public void testRemove () { Person test10 = new Person ( "Dave" , "Son" ) ; Course course2 = new Course ( "3010" , "SYSC" ) ; test10 . remove ( course2 ) ; Course [] array2 = test10 . getCourses () ; if ( ( array2.length ) != 0 ) { fail ( "Remove for the course didn't work" ) ; } } 
@ org.junit.Test public void resolveClassWithDefaultScope () { java.lang.String match = "import foo;\n" + ( ( ( "\n" + "public class Foo {/*comment*/}\n" ) + "\n" ) + "\n" ) ; de.flapdoodle.codedoc.resolver.java.Reference ref = de.flapdoodle.codedoc.resolver.java.Reference . parse ( "foo.Foo" ) . get () ; de.flapdoodle.codedoc.common.Either < de.flapdoodle.codedoc.CodeSample , java.lang.Error > result = new de.flapdoodle.codedoc.resolver.java.JavaSourceReferenceResolverImpl () . resolve ( ref , code ) ; assertTrue ( result . isLeft () ) ; assertEquals ( match , result . left () . code () ) ; assertEquals ( "java" , result . left () . type () ) ; } 
private int getPlayerForLine ( final int row , final java.lang.String playerFigure ) { int playerRowCount = 0 ; for ( int i = 0 ; i < ( board . getRowLength ( row ) ) ; i ++ ) { if ( ( ( board . getFigure ( row , i ) ) != null ) && ( ( board . getFigure ( row , i ) . toString () ) == playerFigure ) ) { playerRowCount ++ ; } } return playerRowCount ; } 
@ java.lang.Override public boolean equals ( java.lang.Object other ) { if ( other == null ) return false ; if ( ! ( other instanceof model.Team ) ) return false ; model.Team team = ( ( model.Team ) ( other ) ) ; if ( team.name . equals ( this . name ) ) return true ; return false ; } 
public org.eclipse.titan.runtime.core.TitanBoolean operatorEquals ( final org.eclipse.titan.runtime.core.TitanUniversalCharString other_value ) { mustBound ( "Unbound left operand of charstring element comparison." ) ; other_value . mustBound ( "Unbound right operand of charstring element comparison." ) ; if ( ( other_value . getValue () . size () ) != 1 ) { return new org.eclipse.titan.runtime.core.TitanBoolean ( false ) ; } return new org.eclipse.titan.runtime.core.TitanBoolean ( get_char () . operatorEquals ( other_value . charAt ( 0 ) ) ) ; } 
protected void appendCgroupsCmds ( java.lang.StringBuilder cmdLine ) { if ( cfg . getFrameworkSuperUser () . isPresent () ) { cmdLine . append ( " export TASK_DIR=`basename $PWD`&&" ) ; appendSudo ( cmdLine ) ; cmdLine . append ( ( ( "chown " + ( cfg . getFrameworkUser () . get () ) ) + " " ) ) ; cmdLine . append ( cfg . getCGroupPath () ) ; cmdLine . append ( "/cpu/mesos/$TASK_DIR &&" ) ; } else { org.apache.myriad.scheduler.NMExecutorCLGenImpl.LOGGER . info ( "frameworkSuperUser not enabled ignoring cgroup configuration" ) ; } } 
@ java.lang.Override public void onClick ( android.view.View view ) { insertDBData ( com.sweproject.calorietracker.DataObjects.Food_Day . class , this , new com.sweproject.calorietracker.DataObjects.Food_Day ( FragmentCalendar.currentDay . getId () , ( ( mServingSpin . getSelectedItemPosition () ) + 1 ) , mServingSizes . get ( mSelectedIndex ) . getId () ) , false ) ; } 
@ java.lang.Override public void setDefinition ( java.lang.String filename , java.lang.Long start , java.lang.Long end ) { org.eclipse.core.resources.IFile file = getFile ( filename ) ; if ( ( file != null ) && ( file . exists () ) ) { tern.eclipse.ide.ui.utils.EditorUtils . openInEditor ( file , ( start != null ? start . intValue () : - 1 ) , ( ( start != null ) && ( end != null ) ? ( end . intValue () ) - ( start . intValue () ) : - 1 ) , true ) ; } } 
public io.kks.states.State removeState ( int index ) { if ( ( ( stateStack . size () ) < 1 ) || ( outOfBounds ( index ) ) ) { return null ; } io.kks.states.State removeState = stateStack . remove ( index ) ; removeState . onDestroy () ; return removeState ; } 
public java.awt.Component prepareRenderer ( javax.swing.table.TableCellRenderer renderer , int row , int column ) { java.awt.Component c = super . prepareRenderer ( renderer , row , column ) ; if ( ! ( isRowSelected ( row ) ) ) c . setBackground ( ( ( row % 2 ) != 0 ? getBackground () : java.awt.Color.LIGHT_GRAY ) ) ; return c ; } 
private void stop () { if ( mGame . hasStarted () ) { ca.hoogit.powerhour.Game.Engine.started = false ; if ( mGame . is ( State.ACTIVE ) ) { mTimer . cancel () ; } android.util.Log . i ( ca.hoogit.powerhour.Game.Engine.TAG , ( "Stopping game on round " + ( mGame . currentRound () ) ) ) ; } mVibrator . cancel () ; finish () ; } 
private com.github.javalbert.sqlbuilder.Predicate buildExistsPredicate ( com.github.javalbert.sqlbuilder.dsl.ExistsPredicate dslPredicate ) { com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate predicate = new com.github.javalbert.sqlbuilder.dsl.com.github.javalbert.sqlbuilder.Predicate () ; if ( ( dslPredicate . getOperator () ) == ( PredicateOperator.EXISTS ) ) { predicate . exists () ; } else if ( ( dslPredicate . getOperator () ) == ( PredicateOperator.NOT_EXISTS ) ) { predicate . notExists () ; } return predicate . subquery ( buildSelect ( dslPredicate . getSubquery () ) ) ; } 
public int reflectDirection ( int laser_direction ) { laser_direction = jkhet.Piece . mod ( ( laser_direction + 2 ) , 4 ) ; int relative_side = jkhet.Piece . mod ( ( laser_direction - ( rot ) ) , 4 ) ; if ( relative_side == 0 ) { return jkhet.Piece . mod ( ( 1 + ( rot ) ) , 4 ) ; } else if ( relative_side == 1 ) { return jkhet.Piece . mod ( rot , 4 ) ; } else { return - 1 ; } } 
com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView addInterval ( com.example.mapinguari.workoutclass.exerciseObjects.Interval interval ) { com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView intervalView = new com.example.mapinguari.workoutclass.exerciseObjectsViews.IntervalView ( context , interval ) ; int pos = ( intervalsView . getChildCount () ) - 2 ; if ( ( pos % 2 ) == 0 ) { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.even_list_item ) ) ; } else { intervalView . setBackgroundColor ( getResources () . getColor ( R.color.odd_list_item ) ) ; } intervalsView . addView ( intervalView , pos ) ; return intervalView ; } 
protected void handleStringAnswer ( ) throws java.io.IOException { java.lang.String requestId = readValue () ; java.lang.String value = readValue () ; com.ideal.evecore.util.PendingAtomicReference < java.lang.String > reference = stringResults . remove ( requestId ) ; if ( reference != null ) { reference . set ( value ) ; } } 
public void nextRound () { Round . setText ( ( "Round " + ( ( start ) - 1 ) ) ) ; pt . makeEmpty () ; ( start ) ++ ; pickNumber ( start ) ; control = 0 ; turn = 0 ; CorrectNum . setText ( "0" ) ; } 
private boolean getNextQuestion () { currentQuestion = quiz . nextQuestion () ; broadcastToClients ( NetworkMessages.nextQ ) ; if ( ( currentQuestion ) == null ) { currentState = backend.GameState.GAME_OVER ; return false ; } lblCurrentQ . setText ( currentQuestion . getQ () ) ; int index = 0 ; for ( java.lang.String ans : currentQuestion . getAnswers () ) { answers [ index ] . setText ( ans ) ; index ++ ; } lblTime . setText ( java.lang.Integer . toString ( currentQuestion . getTimeLimit () ) ) ; currentState = backend.GameState.WAITING_FOR_ANSWERS ; return true ; } 
public static void listing () { try { java.nio.file.Path taskFile = java.nio.file.Paths . get ( "/home/salankiv/greenfox/salankiv-todo-app/assets/tasks.txt" ) ; java.util.List < java.lang.String > lines = java.nio.file.Files . readAllLines ( taskFile ) ; for ( int i = 0 ; i < ( lines . size () ) ; i ++ ) { java.lang.System.out . println ( ( ( ( i + 1 ) + ". " ) + ( lines . get ( i ) ) ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; } } 
@ java.lang.Override protected void onResume () { super . onResume () ; android.support.v4.app.Fragment fragment = getSupportFragmentManager () . findFragmentById ( R.id.list_container ) ; if ( ( ( ! ( mTwoPane ) ) && ( fragment != null ) ) && ( fragment instanceof com.qualicom.availabilitydashboard.NodeListActivityFragment ) ) { android.util.Log . i ( "BACK" , "Back to node fragment" ) ; selectedNode = null ; } } 
public void write ( int data ) { int index = 0 ; while ( index < ( clientCount ) ) { if ( clients [ index ] . active () ) { clients [ index ] . write ( data ) ; index ++ ; } else { removeIndex ( index ) ; } } } 
public de.marsetex.lab2.task3.RationalNumber add ( de.marsetex.lab2.task3.RationalNumber other ) { int zaehlerTemp = ( ( zaehler ) * ( other.nenner ) ) + ( ( other.zaehler ) * ( nenner ) ) ; int nennerTemp = ( nenner ) * ( other.nenner ) ; return new de.marsetex.lab2.task3.RationalNumber ( zaehlerTemp , nennerTemp ) ; } 
public static java.util.List < java.lang.String > decolorize ( java.util.List < java.lang.String > colored ) { if ( colored == null ) return null ; java.util.List < java.lang.String > decolored = new java.util.ArrayList < java.lang.String > ( colored . size () ) ; for ( java.lang.String string : colored ) { decolored . add ( com.nisovin.shopkeepers.Utils . translateColorCodesToAlternative ( '&' , string ) ) ; } return decolored ; } 
@ java.lang.Override protected org.eclipse.emf.ecore.EObject getEObjectByID ( java.lang.String id ) { org.eclipse.emf.ecore.EObject idObject = super . getEObjectByID ( id ) ; if ( idObject == null ) { for ( org.eclipse.emf.ecore.EObject eObject : getContents () ) { if ( eObject instanceof no.hal.pgo.osm.OSM ) { no.hal.pgo.osm.Tagged tagged = no.hal.pgo.osm.util.OsmResourceImpl . getTagged ( id , eObject , OsmPackage.eINSTANCE . getOSM_Nodes () , OsmPackage.eINSTANCE . getOSM_Relations () ) ; if ( tagged != null ) { return tagged ; } } } } return idObject ; } 
public static java.lang.String getTodaysTshirt () { if ( ( com.coollooks.Util.tShirtPathList ) == null ) com.coollooks.Util . setTshirtList () ; int i = ( ( int ) ( ( ( java.lang.Math . random () ) * 33 ) % ( com.coollooks.Util.tShirtPathList . size () ) ) ) ; if ( ( com.coollooks.Util.tShirtPathList . size () ) > 0 ) return com.coollooks.Util.tShirtPathList . get ( i ) ; else return null ; } 
private void populateGrid () { for ( int h = 0 ; h < ( grid . size () ) ; h ++ ) { for ( int w = 0 ; w < ( fieldWidth ) ; w ++ ) { grid . get ( h ) . add ( w , new Cell () ) ; } } } 
@ java.lang.Override public void onEntityAdded ( net.minecraft.entity.Entity entity ) { if ( ( ! ( entity instanceof net.minecraft.entity.player.EntityPlayer ) ) && ( this . dimension . hasSetting ( SettingType.ENTITYSPAWN ) ) ) { de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting setting = ( ( de.alaoli.games.minecraft.mods.yadm.data.settings.EntitySpawnSetting ) ( this . dimension . get ( SettingType.ENTITYSPAWN ) ) ) ; setting . increase ( entity ) ; } super . onEntityAdded ( entity ) ; } 
public void addBatch ( java.lang.String batchId ) { net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity [] batchObjects = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity [ 1 ] ; batchObjects [ 0 ] = new net.smartcosmos.android.ProfilesTransactionRequest.ObjectEntity () ; batchObjects [ 0 ] . objectUrn = ( net.smartcosmos.android.ProfilesTransactionRequest.PREFIX_BATCH ) + batchId ; batchObjects [ 0 ] . type = net.smartcosmos.android.ProfilesTransactionRequest.TYPE_BATCH ; batchObjects [ 0 ] . name = batchId ; addObjects ( batchObjects ) ; } 
private void cleanup () { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Cursor . disposeSystemCursors () ; if ( ( audio ) instanceof com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) { ( ( com.badlogic.gdx.backends.lwjgl3.audio.OpenALAudio ) ( audio ) ) . dispose () ; } com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.errorCallback . free () ; com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.errorCallback = null ; if ( ( com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback ) != null ) { com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback . free () ; com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.glDebugCallback = null ; } org.lwjgl.glfw.GLFW . glfwTerminate () ; } 
public void stopped () { if ( ( option ) == '1' ) { distance += 0.2F * ( ( acc ) / 100 ) ; acc -= 0.1F ; if ( ( acc ) < 0 ) { option = '3' ; Gdis = distance ; distance = 0.0F ; acc = Cacc ; } } } 
@ java.lang.Override public void mouseClicked ( java.awt.event.MouseEvent e ) { if ( ( ( enhancedStr ) < 2 ) && ( addPoints ) ) { ( availablePoints ) -- ; ( enhancedStr ) ++ ; } else if ( ( ( enhancedStr ) > 0 ) && ( ! ( addPoints ) ) ) { ( availablePoints ) ++ ; ( enhancedStr ) -- ; } } 
@ java.lang.Override public void onHeaderClick ( final com.nervousfish.nervousfish.activities.Header header , final int position ) { super . onHeaderClick ( header , position ) ; if ( ( header.id ) == ( R.id.key_management_header ) ) { final android.content.Intent intent = new android.content.Intent ( this , com.nervousfish.nervousfish.activities.KeyManagementActivity . class ) ; this . startActivity ( intent ) ; } } 
public java.util.PriorityQueue < java.lang.Integer > getStartingNodes () { sorted = poag . getNodeIDs () ; java.util.PriorityQueue < java.lang.Integer > startingNodeIds = new java.util.PriorityQueue <> () ; for ( int i = 0 ; i < ( size ) ; i ++ ) { java.lang.Integer [] prevs = poag . getPreviousNodeIDs ( sorted [ i ] ) ; if ( prevs == null ) { startingNodeIds . add ( sorted [ i ] ) ; } } return startingNodeIds ; } 
private < T > T getValue ( java.lang.String model , java.lang.String propertyName , java.lang.String subPropertyName , T defaultValue ) { com.dd.plist.NSDictionary dictionary = getValue ( model , propertyName , null ) ; if ( ( dictionary != null ) && ( dictionary . containsKey ( subPropertyName ) ) ) { return ( ( T ) ( getValue ( dictionary . get ( subPropertyName ) ) ) ) ; } return defaultValue ; } 
private void info ( java.lang.String [] message ) { try { java.lang.StringBuilder info = util.FileHandler . readStringBuilder ( "information" ) ; notifier . send ( ( ( answerCommand ) + ( info . toString () ) ) ) ; } catch ( java.lang.Exception ex ) { java.lang.String error = "Error when reading info file." ; logging.Logger . logMessage ( 'E' , this , error ) ; notifier . send ( ( ( answerCommand ) + error ) ) ; } } 
java.util.ArrayList < personal.vinay.bigdata.PrepData.Record > setMinSpread ( java.util.ArrayList < personal.vinay.bigdata.PrepData.Record > records ) { double minSpread = 9999 ; for ( personal.vinay.bigdata.PrepData.Record record : records ) { if ( ( ( record . getBidPrice () ) - ( record . getAskPrice () ) ) < minSpread ) { minSpread = ( record . getBidPrice () ) - ( record . getAskPrice () ) ; } } for ( personal.vinay.bigdata.PrepData.Record record : records ) { record . setMinSpread ( minSpread ) ; } return records ; } 
@ java.lang.Override public < T > T query ( java.lang.Class < T > clazz ) { java.lang.Object inst = org.wikiup.core.util.Interfaces . unwrap ( clazz , wrapped ) ; if ( inst == null ) { if ( byClasses . containsKey ( clazz ) ) return org.wikiup.core.util.Interfaces . cast ( clazz , byClasses . get ( clazz ) ) ; inst = translator . cast ( clazz , wrapped ) ; byClasses . put ( clazz , inst ) ; } return org.wikiup.core.util.Interfaces . cast ( clazz , inst ) ; } 
@ java.lang.Override public void onActivityCreated ( android.os.Bundle savedInstanceState ) { super . onActivityCreated ( savedInstanceState ) ; createHandler () ; android.support.v4.app.FragmentManager fm = getFragmentManager () ; mWorkFragment = ( ( com.betterchat.www.utility.RetainedFragment ) ( fm . findFragmentByTag ( "work" ) ) ) ; if ( ( mWorkFragment ) == null ) { mWorkFragment = new com.betterchat.www.utility.RetainedFragment () ; mWorkFragment . setTargetFragment ( this , 0 ) ; fm . beginTransaction () . add ( mWorkFragment , "work" ) . commit () ; } } 
@ java.lang.Override public net.minecraftforge.fml.common.network.simpleimpl.IMessage onMessage ( com.lothrazar.cyclicmagic.net.PacketSyncPlayerData message , net.minecraftforge.fml.common.network.simpleimpl.MessageContext ctx ) { if ( ( ctx.side ) == ( net.minecraftforge.fml.relauncher.Side.CLIENT ) ) { if ( ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer ) == null ) { return null ; } com.lothrazar.cyclicmagic.ModMain.IPlayerExtendedProperties props = com.lothrazar.cyclicmagic.ModMain . getPlayerProperties ( net.minecraft.client.Minecraft . getMinecraft () . thePlayer ) ; if ( props == null ) { return null ; } else { props . setDataFromNBT ( message.tags ) ; } } return null ; } 
public static Bag getTestBag ( int i ) { Bag bag = new Bag ( i ) ; for ( int j = 0 ; j < 10 ; j ++ ) { Token t = CloneTestHelper . getTestToken () ; TokenFrequency tFrequency = new TokenFrequency () ; tFrequency . setToken ( t ) ; tFrequency . setFrequency ( utility.Util . getRandomNumber ( 1 , 1 ) ) ; bag . add ( tFrequency ) ; } return bag ; } 
public static void startGame ( int playercount , int boardsize ) { game.GameMaster . reset () ; for ( int i = 1 ; i <= playercount ; i ++ ) { game.GameMaster.playerAL . add ( new game.Player ( 0.0 , i , 0.0 , 0 , game.GameMaster.names [ ( i - 1 ) ] , 0 ) ) ; } game.GameMaster.EndCheck = boardsize ; game.GameMaster.PlayerInTurn = game.GameMaster.playerAL . get ( 0 ) ; } 
public java.lang.String convertFromArabicToRomanNumeral ( java.lang.Integer inputNumber ) { java.lang.StringBuilder romanNumeral = new java.lang.StringBuilder () ; while ( inputNumber != 0 ) { for ( java.util.Map.Entry < java.lang.Integer , java.lang.String > numeralMapEntry : RomanNumeralConverter.numeralMap . entrySet () ) { java.lang.Integer numeralSegmentArabicValue = numeralMapEntry . getKey () ; java.lang.String numeralSegment = numeralMapEntry . getValue () ; if ( inputNumber >= numeralSegmentArabicValue ) { inputNumber -= numeralSegmentArabicValue ; romanNumeral . append ( numeralSegment ) ; break; } } } return romanNumeral . toString () ; } 
private void loadTile ( com.badlogic.gdx.utils.XmlReader.Element tile , int firstGid ) { int id = tile . getIntAttribute ( "id" ) ; com.mygdx.game.shared.model.CollideablePolygon tilePolygon = com.mygdx.game.shared.model.TilePolygonLoader . loadTilePolygon ( tile ) ; int tileGid = firstGid + id ; tiles . put ( tileGid , new com.mygdx.game.server.model.MapLoader.Tile ( tilePolygon ) ) ; } 
@ java.lang.Override public java.lang.String toString () { java.lang.String msg = ( ( ( ( ( ( "IPTABLE " + ( this . messageID ) ) + " " ) + ( this . ipAddress ) ) + " " ) + ( this . port ) ) + " " ) + ( this . ipTable ) ; java.lang.String length = java.lang.String . format ( "%04d" , ( ( msg . length () ) + 5 ) ) ; return ( length + " " ) + msg ; } 
public static int count ( java.lang.String content , char charForSearch ) { int count = 0 ; if ( null == content ) { return 0 ; } int contentLength = content . length () ; for ( int i = 0 ; i < contentLength ; i ++ ) { if ( charForSearch == ( content . charAt ( i ) ) ) { count ++ ; } } return count ; } 
@ java.lang.Override public org.openqa.selenium.WebDriver getWebDriverInstance () { org.openqa.selenium.WebDriver retVal = getWebDriver () ; if ( null == retVal ) { org.bigtester.ate.model.page.atewebdriver.MyChromeDriver . setChromeDriverSystemEnv () ; if ( getBrowserProfile () . isPreserveCookiesOnExecutions () ) { org.openqa.selenium.chrome.ChromeOptions ops = new org.openqa.selenium.chrome.ChromeOptions () ; ops . addArguments ( ( "--user-data-dir=" + ( getBrowserProfile () . getTestCaseChromeUserDataDir () ) ) ) ; retVal = new org.openqa.selenium.chrome.ChromeDriver ( ops ) ; } else { retVal = new org.openqa.selenium.chrome.ChromeDriver () ; } setWebDriver ( retVal ) ; } return retVal ; } 
public boolean isMatched () { switch ( matchingType ) { case OR : return matches . values () . contains ( true ) ; case AND : default: return ( ( matches . size () ) > 0 ) && ( ! ( matches . values () . contains ( false ) ) ) ; } } 
public double distanceTo ( pathfinding.MapNode n ) { double xDelta = ( this . location . getX () ) - ( n.location . getX () ) ; double yDelta = ( this . location . getY () ) - ( n.location . getY () ) ; return java.lang.Math . sqrt ( ( ( java.lang.Math . pow ( xDelta , 2 ) ) + ( java.lang.Math . pow ( yDelta , 2 ) ) ) ) ; } 
@ java.lang.Override public void opened () { try { while ( ( product . getProductState ( vm ) ) == ( ch.admin.vbs.cube.core.vm.IVmProduct.VmProductState.STARTING ) ) { java.lang.Thread . sleep ( 500 ) ; } product . connectNic ( vm , true ) ; vm . setVpnState ( VmVpnState.CONNECTED ) ; } catch ( java.lang.Exception e ) { ch.admin.vbs.cube.core.vm.ctrtasks.Start.LOG . error ( "VM's VPN was opened but we failed to connect VM's NIC" , e ) ; vm . setVpnState ( VmVpnState.NOT_CONNECTED ) ; } vmModel . fireVmStateUpdatedEvent ( vm ) ; } 
public void enterBuilding ( java.lang.String bldName ) { chronos.pdc.buildings.Building bldg = _bReg . getBuilding ( bldName ) ; if ( bldg != null ) { _currentBldg = bldg ; java.lang.String description = bldg . getInteriorDescription () ; java.lang.String imagePath = bldg . getIntImagePath () ; displayBuilding ( description , imagePath ) ; _frame . setOnTown ( false ) ; } else { _frame . displayText ( civ.BuildingDisplayCiv.NO_BLDG_FOUND ) ; } } 
public boolean makeTurn ( int posOnBoard , int turn ) throws something.Reversi.IllegalMoveException { if ( ( this . board [ posOnBoard ] ) == ( Tile.EMPTY ) ) { something.Reversi.Tile tile ; if ( ( turn % 2 ) == 0 ) { tile = Tile.BLACK ; } else { tile = Tile.WHITE ; } if ( checkValidityMove ( posOnBoard , tile ) ) { board [ posOnBoard ] = tile ; turnTiles ( posOnBoard , tile ) ; return true ; } } return false ; } 
public double phase_Time () { double k = ( java.lang.Math . signum ( stellarium.util.math.Spmath . getD ( sciapi.api.value.util.VOp . dot ( sciapi.api.value.euclidian.CrossUtil . cross ( ( ( sciapi.api.value.IValRef ) ( EcRPosG ) ) , ( ( sciapi.api.value.IValRef ) ( stellarium.stellars.EcRPos ) ) ) , ( ( sciapi.api.value.IValRef ) ( Pole ) ) ) ) ) ) * ( 1.0 - ( getPhase () ) ) ; if ( k < 0 ) k = k + 2 ; return k / 2 ; } 
@ java.lang.Override protected void update ( float elapsedTimeMS ) { graphicslib3D.Point3D cameraLocation = camera1 . getLocation () ; graphicslib3D.Matrix3D cameraTranslation = new graphicslib3D.Matrix3D () ; cameraTranslation . translate ( cameraLocation . getX () , cameraLocation . getY () , cameraLocation . getZ () ) ; skyBox . setLocalTranslation ( cameraTranslation ) ; camera1Controller . update ( elapsedTimeMS ) ; super . update ( elapsedTimeMS ) ; if ( ( thisClient ) != null ) { thisClient . processPackets () ; } } 
private java.util.ArrayList < java.awt.geom.Point2D.Double > generateTestPath () { java.util.ArrayList < java.awt.geom.Point2D.Double > testPath = new java.util.ArrayList < java.awt.geom.Point2D.Double > () ; for ( int i = 0 ; i < 1000 ; i ++ ) { testPath . add ( new java.awt.geom.Point2D.Double ( ( i / 500.0 ) , 0.0 ) ) ; } return testPath ; } 
public static void main ( java.lang.String [] args ) { long time_start = java.lang.System . currentTimeMillis () ; greedy.Greedy10 . cargarDatos () ; greedy.Greedy10 . resolverProblema () ; greedy.Greedy10 . mostrarMochila () ; long time_end = java.lang.System . currentTimeMillis () ; java.lang.System.out . println () ; java.lang.System.out . println ( "-------------------------------------------------------" ) ; java.lang.System.out . println () ; java.lang.System.out . println () ; java.lang.System.out . println ( ( ( ">> Tiempo de duracion del proceso: " + ( time_end - time_start ) ) + " milisegundos." ) ) ; } 
protected void applyCenterInside ( @ android.support.annotation.NonNull android.view.TextureView view , @ android.support.annotation.NonNull android.graphics.Matrix transformMatrix ) { if ( ( ( intrinsicVideoSize.x ) <= ( view . getWidth () ) ) && ( ( intrinsicVideoSize.y ) <= ( view . getHeight () ) ) ) { applyCenter ( view , transformMatrix ) ; } else { applyFitCenter ( view , transformMatrix ) ; } } 
private static void loadFile ( java.lang.String packageName , sbahjsic.runtime.ExecutionEnvironment env ) throws java.lang.Exception { sbahjsic.io.StandardLibrary.LOADED . add ( packageName ) ; try ( sbahjsic.io.FileSource fs = new sbahjsic.io.FileSource ( new java.io.File ( ( ( ( ( sbahjsic.io.StandardLibrary.STD ) + "/" ) + packageName ) + ".sb" ) ) ) ) { env . execute ( fs ) ; } } 
@ java.lang.Override public void onTurnSuccess ( int computerMove ) { if ( ( isGameOver ) || ( computerMove == ( - 1 ) ) ) { return; } setXBackground ( levelPlayer1 , computerMove ) ; fillGameGrid ( computerMove , Constants.PLAYER2 ) ; areButtonsClicked [ computerMove ] = true ; asyncService . checkForWinner ( gameGrid , Constants.PLAYER2 , this ) ; } 
protected void installPropertyChangeListener ( java.lang.Object element ) { org.eclipse.tcf.te.ui.interfaces.IViewerInput viewerInput = org.eclipse.tcf.te.ui.trees.ViewerStateManager . getViewerInput ( element ) ; if ( ( viewerInput != null ) && ( ! ( viewerInputs . contains ( viewerInput ) ) ) ) { viewerInput . addPropertyChangeListener ( commonViewerListener ) ; viewerInputs . add ( viewerInput ) ; } } 
@ java.lang.Override public void onLoadFinished ( android.content.Loader < android.database.Cursor > loader , android.database.Cursor data ) { switch ( loader . getId () ) { case com.android.contacts.list.JoinContactListFragment.DISPLAY_NAME_LOADER : { if ( ( data != null ) && ( data . moveToFirst () ) ) { showTargetContactName ( data . getString ( 0 ) ) ; } break; } case JoinContactListAdapter.PARTITION_ALL_CONTACTS : { if ( data != null ) { final android.database.Cursor suggestionsCursor = ( ( com.android.contacts.list.JoinContactLoader.JoinContactLoaderResult ) ( data ) ) . suggestionCursor ; onContactListLoaded ( suggestionsCursor , data ) ; } break; } } } 
@ java.lang.Override public synchronized void stop () { if ( ( serverSocket ) == null ) { java.lang.System.err . println ( "Server already stopped" ) ; return; } try { executorService . shutdown () ; serverSocket . close () ; } catch ( java.io.IOException e ) {} serverSocket = null ; } 
@ java.lang.Override public boolean equals ( java.lang.Object obj ) { if ( obj == null ) { return false ; } if ( ( getClass () ) != ( obj . getClass () ) ) { return false ; } final poker.Card other = ( ( poker.Card ) ( obj ) ) ; if ( ( this . rank ) != ( other.rank ) ) { return false ; } if ( ! ( this . suit . equals ( other.suit ) ) ) { return false ; } return true ; } 
private void checkInspectionTime () { nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper dbHelper = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.ContactDatabaseHelper . getInstance ( getApplicationContext () ) ; db = dbHelper . getWritableDatabase () ; java.util.List < nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact > contacts = nyc.c4q.jonathancolon.inContaq.utlities.sqlite.SqlHelper . selectAllContacts ( db ) ; for ( int i = 0 ; i < 1 ; i ++ ) { nyc.c4q.jonathancolon.inContaq.contactlist.model.Contact contact = contacts . get ( i ) ; startNotification ( contact , context ) ; } } 
private boolean validateQuantity () { int quantity = java.lang.Integer . valueOf ( subgroupsQuantity . getText () . toString () ) ; if ( quantity > ( getMaximumQuantity () ) ) { subgroupsQuantityLayout . setError ( getString ( R.string.nwinners_msg_validate_quantity , group . getItemCount () ) ) ; requestFocus ( subgroupsQuantity ) ; return false ; } return true ; } 
public controllers.Result postCadastro () { com.fasterxml.jackson.databind.JsonNode json = request () . body () . asJson () ; controllers.Usuario usuario = play.libs.Json . fromJson ( json , controllers.Usuario . class ) ; java.lang.System.out . println ( play.libs.Json . toJson ( usuario ) ) ; try { controllers.AutenticacaoController.sistemaUsuarios . adicionarUsuario ( usuario ) ; } catch ( controllers.DadosInvalidosException exception ) { return badRequest ( exception . getMessage () ) ; } sistemasInfo.SistemaLog . novaMensagemLog ( ( ( usuario . getEmail () ) + " acabou de se cadastrar no sistema" ) ) ; return ok ( play.libs.Json . toJson ( usuario ) ) ; } 
@ java.lang.Override public void onLocationChanged ( android.location.Location location ) { mCurrentLocation = new com.google.android.gms.maps.model.LatLng ( location . getLatitude () , location . getLongitude () ) ; mLastUpdateTime = java.text.DateFormat . getTimeInstance () . format ( new java.util.Date () ) ; com.frodo.travigator.utils.CommonUtils . logStatus ( TAG , ( ( ( "Location updated ->" + ( location . getLatitude () ) ) + ":" ) + ( location . getLongitude () ) ) ) ; org.greenrobot.eventbus.EventBus . getDefault () . post ( new com.frodo.travigator.events.LocationChangedEvent ( mCurrentLocation ) ) ; } 
public static boolean differByOne ( java.lang.String word , java.lang.String ladderLast ) { if ( ( word . length () ) != ( ladderLast . length () ) ) { return false ; } int count = 0 ; for ( int i = 0 ; i < ( word . length () ) ; i ++ ) { if ( ( word . charAt ( i ) ) != ( ladderLast . charAt ( i ) ) ) { count ++ ; } } return count == 1 ; } 
@ java.lang.Override public model.project.Project calculateProject ( model.project.Project project ) { this . project = project ; if ( ( project . getPhases () . size () ) != 0 ) { calculateLenght ( project ) ; calculateProjectDays ( project ) ; calculateResultSkill ( project ) ; calculateQuarterResults ( project ) ; } else {} return project ; } 
@ java.lang.Override public boolean equals ( java.lang.Object object ) { if ( object instanceof qora.assets.Trade ) { qora.assets.Trade trade = ( ( qora.assets.Trade ) ( object ) ) ; return ( trade . getInitiator () . equals ( this . getInitiator () ) ) && ( trade . getTarget () . equals ( this . getTarget () ) ) ; } return false ; } 
@ java.lang.Override public org.apache.tajo.datum.Datum terminate ( org.apache.tajo.plan.function.FunctionContext ctx ) { org.apache.tajo.engine.function.builtin.StdDevContext StdDevCtx = ( ( org.apache.tajo.engine.function.builtin.StdDevContext ) ( ctx ) ) ; if ( ( StdDevCtx.count ) <= 1 ) { return org.apache.tajo.datum.NullDatum . get () ; } return org.apache.tajo.datum.DatumFactory . createFloat8 ( java.lang.Math . sqrt ( ( ( StdDevCtx.squareSumOfDiff ) / ( ( StdDevCtx.count ) - 1 ) ) ) ) ; } 
public java.io.BufferedWriter getWriter ( ) throws java.io.IOException { if ( ( this . lines ) >= ( org.crossref.eventdata.twitter.RotatingFileWriter.MAX_LINES ) ) { this . close () ; this . lines = 0 ; this . file = this . newFile () ; this . writer = new java.io.BufferedWriter ( new java.io.FileWriter ( this . file ) ) ; } ( this . lines ) ++ ; return this . writer ; } 
public void writePlans ( final java.lang.String outputDir ) { new org.matsim.core.population.PopulationWriter ( scenario . getPopulation () ) . write ( ( ( ( outputDir + "/initial_urban_plans_" ) + ( cloningFactor ) ) + "pct.xml.gz" ) ) ; new org.matsim.utils.objectattributes.ObjectAttributesXmlWriter ( scenario . getPopulation () . getPersonAttributes () ) . writeFile ( ( ( ( outputDir + "/initial_urban_persionAttributes_" ) + ( cloningFactor ) ) + "pct.xml.gz" ) ) ; playground.agarwalamit.mixedTraffic.patnaIndia.input.urban.PatnaUrbanDemandGenerator.LOG . info ( "Writing Plan and person attributes files are finished." ) ; } 
@ java.lang.Override public void onError ( com.iflytek.cloud.SpeechError error ) { if ( error != null ) { showTip ( ( ( ( "error:" + ( error . getErrorCode () ) ) + "," ) + ( error . getErrorDescription () ) ) ) ; } else { android.util.Log . d ( com.lixl.waveform.WaveformViewModule.TAG , "evaluator over" ) ; } } 
public org.smartdata.model.SystemInfo getByProperty ( java.lang.String property ) { org.springframework.jdbc.core.JdbcTemplate jdbcTemplate = new org.springframework.jdbc.core.JdbcTemplate ( dataSource ) ; return jdbcTemplate . query ( ( ( "select * from " + ( TABLE_NAME ) ) + " where property = ?" ) , new java.lang.Object [] { property } , new org.smartdata.metastore.dao.SystemInfoDao.SystemInfoRowMapper () ) . get ( 0 ) ; } 
@ java.lang.Override public void onFinishedWithResult ( java.lang.String monthName , int day , int year , long time ) { if ( setDateFromTime ) { if ( time < ( dateToTime ) ) dateFromTime = time ; } else { if ( time > ( dateFromTime ) ) dateToTime = time ; } updateDateRangeLabels ( true ) ; } 
@ java.lang.Override public void onRegisterStatus ( final android.content.Context context , final com.meizu.cloud.pushsdk.platform.message.RegisterStatus registerStatus ) { if ( ( com.jiang.android.push.flyme.FlymeReceiver.mPushInterface ) != null ) { com.jiang.android.push.utils.JHandler . handler () . post ( new java.lang.Runnable () { @ java.lang.Override public void run () { com.jiang.android.push.flyme.FlymeReceiver.mPushInterface . onRegister ( context , registerStatus . getPushId () ) ; } } ) ; } } 
@ java.lang.Override protected void onResume () { super . onResume () ; if ( ( ! ( iconsPicker ) ) && ( ! ( wallsPicker ) ) ) { setupToolbarHeader () ; } jahirfiquitiva.iconshowcase.utilities.color.ToolbarColorizer . setupToolbarIconsAndTextsColors ( this , cAppBarLayout , cToolbar ) ; runLicenseChecker ( jahirfiquitiva.iconshowcase.activities.WITH_LICENSE_CHECKER , jahirfiquitiva.iconshowcase.activities.GOOGLE_PUBKEY , jahirfiquitiva.iconshowcase.activities.WITH_INSTALLED_FROM_AMAZON , jahirfiquitiva.iconshowcase.activities.ALLOW_APT_USE ) ; } 
@ java.lang.Override public double distance ( final geogebra.common.kernel.geos.GeoPoint2 p ) { double distance = java.lang.Double.POSITIVE_INFINITY ; for ( int i = 0 ; i < ( geoList . size () ) ; i ++ ) { final geogebra.common.kernel.geos.GeoElement geo = geoList . get ( i ) ; final double d = geo . distance ( p ) ; if ( d < distance ) { distance = d ; } } return distance ; } 
public void add ( int index , long element ) { if ( index == ( size () ) ) { add ( element ) ; } else { boundsCheck ( index ) ; enlargeIfNeeded ( 1 ) ; java.lang.System . arraycopy ( array , index , array , ( index + 1 ) , ( ( end ) - index ) ) ; array [ index ] = element ; ( end ) ++ ; } } 
private java.lang.String readStream ( java.io.InputStream in ) throws java.io.IOException { java.lang.StringBuilder sb = new java.lang.StringBuilder () ; try ( java.io.BufferedReader reader = new java.io.BufferedReader ( new java.io.InputStreamReader ( in , "utf-8" ) ) ) { java.lang.String line = reader . readLine () ; while ( line != null ) { sb . append ( line . trim () ) ; line = reader . readLine () ; } } return sb . toString () ; } 
@ java.lang.Override public java.lang.String getNString ( int ref ) { android.util.Log . v ( tk.thebrightstuff.blindtale.view.SceneActivity.TAG , ( ( ( ( "Removing accents from " + ( getIString ( ref ) ) ) + " (" ) + ref ) + ")" ) ) ; return tk.thebrightstuff.blindtale.utils.StringUtils . removeAccents ( getIString ( ref ) ) . toLowerCase () ; } 
public java.lang.String parseTicketID ( java.lang.String subject ) { java.lang.String [] full_subject = subject . split ( "#" ) ; if ( ( full_subject [ 1 ] ) != "" ) { java.lang.String second_part_subject = full_subject [ 1 ] ; java.lang.String trimmed_subject = second_part_subject . trim () ; java.lang.String [] id = trimmed_subject . split ( " " ) ; return id [ 0 ] ; } else { return subject . trim () ; } } 
@ java.lang.Override protected void updateItem ( program.Employee t , boolean bln ) { super . updateItem ( t , bln ) ; if ( t != null ) { setText ( t . getName () ) ; } else { listviewEmployees . setPlaceholder ( new javafx.scene.control.Label ( "No Employees" ) ) ; } } 
@ butterknife.OnClick ( value = R.id.music_search_btn ) public void onSearch () { xyf.com.appframe.recycleviewtools.SoftInputUtils . hideSoftInput ( this ) ; adapter . clear () ; xyf.com.appframe.MusicSearchActivity.pageno = 1 ; xyf.com.appframe.recycleviewtools.ProgressDialogUtils . showProgress ( this ) ; xyf.com.appframe.MusicSearchActivity.searchkey = input . getText () . toString () . trim () ; setTitle ( xyf.com.appframe.MusicSearchActivity.searchkey ) ; load ( xyf.com.appframe.MusicSearchActivity.searchkey , ( "" + ( xyf.com.appframe.MusicSearchActivity.pageno ) ) ) ; } 
public java.lang.String getUnlocalizedName ( net.minecraft.item.ItemStack stack ) { net.minecraft.nbt.NBTTagCompound tag = stack . getTagCompound () ; if ( tag != null ) { return ( ( super . getUnlocalizedName ( stack ) ) + "." ) + ( tag . getString ( "name" ) ) ; } else { return super . getUnlocalizedName ( stack ) ; } } 
@ java.lang.Override public java.lang.CharSequence getPageTitle ( int position ) { if ( position < ( data . getCount () ) ) { java.lang.Object item = data . getItem ( position ) ; if ( item instanceof itkach.aard2.BlobDescriptor ) { return ( ( itkach.aard2.BlobDescriptor ) ( item ) ) . key ; } if ( item instanceof itkach.slob.Slob.Blob ) { return ( ( itkach.slob.Slob.Blob ) ( item ) ) . key ; } } return "???" ; } 
@ java.lang.Override public void setStyleType ( final org.openflexo.fge.shapes.ShapeSpecification.ShapeType shapeType ) { final org.openflexo.fge.shapes.ShapeSpecification.ShapeType oldShapeType = this . getStyleType () ; if ( oldShapeType == shapeType ) { return; } final org.openflexo.fge.shapes.ShapeSpecification oldSS = this . getShapeSpecification () ; this . shapeType = shapeType ; this . pcSupport . firePropertyChange ( org.openflexo.fge.control.tools.STYLE_CLASS_CHANGED , oldShapeType , this . getStyleType () ) ; this . pcSupport . firePropertyChange ( "styleType" , oldShapeType , this . getStyleType () ) ; this . pcSupport . firePropertyChange ( "shapeSpecification" , oldSS , this . getShapeSpecification () ) ; } 
public java.util.List < bb.tokenizer.Token > tokenize ( java.lang.String str ) { java.util.ArrayList < bb.tokenizer.Token > tokens = new java.util.ArrayList < bb.tokenizer.Token > () ; while ( ( str . length () ) > 0 ) { str = addNextToken ( str , tokens ) ; } line = 1 ; column = 1 ; return tokens ; } 
@ java.lang.Override public void postHandle ( javax.servlet.http.HttpServletRequest arg0 , javax.servlet.http.HttpServletResponse arg1 , java.lang.Object arg2 , org.springframework.web.servlet.ModelAndView arg3 ) throws java.lang.Exception { if ( arg3 == null ) return; arg3 . addObject ( "baseurl" , com.cportal.config.ConfigDB . retrnConf () . getBASEURL () ) ; java.lang.System.out . println ( ( "---Request Completed---" + ( com.cportal.config.ConfigDB . getBASEURL () ) ) ) ; } 
public void run () { while ( true ) { try { java.lang.String message ; int length = input . readInt () ; if ( length > 0 ) { byte [] b = new byte [ length ] ; input . readFully ( b ) ; message = new java.lang.String ( b , "UTF-8" ) ; this . sendMessage ( network.AppWorker . handleMessage ( message ) ) ; } } catch ( java.io.IOException e ) { e . printStackTrace () ; break; } } } 
public void GameOver ( MyPanel myPanelB , int ClickedInX , int ClickedInY ) { if ( HasBomb ( myPanelB , ClickedInX , ClickedInY ) ) { for ( int posArray = 0 ; posArray < ( posXBomb.length ) ; posArray ++ ) { myPanelB.colorArray [ ClickedInX ] [ ClickedInY ] = bombs ; myPanelB.colorArray [ posXBomb [ posArray ] ] [ posYBomb [ posArray ] ] = bombs ; myPanelB . repaint () ; } } } 
public final void cvttpd2dq ( jdk.vm.ci.code.Register dst , jdk.vm.ci.code.Register src ) { assert ( dst . getRegisterCategory () . equals ( AMD64.XMM ) ) && ( src . getRegisterCategory () . equals ( AMD64.XMM ) ) ; com.oracle.graal.asm.amd64.AMD64InstructionAttr attributes = new com.oracle.graal.asm.amd64.AMD64InstructionAttr ( com.oracle.graal.asm.amd64.AMD64Assembler.AvxVectorLen.AVX_128bit , false , false , false , false , target ) ; int encode = simdPrefixAndEncode ( dst , Register.None , src , com.oracle.graal.asm.amd64.AMD64Assembler.VexSimdPrefix.VEX_SIMD_66 , com.oracle.graal.asm.amd64.AMD64Assembler.VexOpcode.VEX_OPCODE_0F , attributes ) ; emitByte ( 230 ) ; emitByte ( ( 192 | encode ) ) ; } 
@ java.lang.Override public boolean onFetchFirstPage ( org.wordpress.android.models.PeopleListFilter filter ) { org.wordpress.android.models.Blog blog = org.wordpress.android.WordPress . getCurrentBlog () ; if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.TEAM ) ) && ( mCanRefreshUsers ) ) { return fetchUsersList ( blog . getDotComBlogId () , blog . getLocalTableBlogId () , 0 ) ; } else if ( ( filter == ( org.wordpress.android.models.PeopleListFilter.FOLLOWERS ) ) && ( mCanRefreshFollowers ) ) { return fetchFollowersList ( blog . getDotComBlogId () , blog . getLocalTableBlogId () , 1 ) ; } return false ; } 
private void createHandleForActiveNode () { nodebox.client.Node activeNode = getActiveNode () ; if ( activeNode != null ) { nodebox.client.Handle handle = null ; nodebox.client.HandleRepository repository = nodebox.client.HandleRepository . of () ; if ( repository . hasHandleClass ( activeNode . getHandle () ) ) { handle = repository . constructHandle ( activeNode . getHandle () ) ; } if ( handle != null ) { handle . setHandleDelegate ( this ) ; viewerPane . setHandle ( handle ) ; } else { viewerPane . setHandle ( null ) ; } } } 
public java.lang.Integer getNextDate () { len = datesStream . readRecord ( buffer2 , 0 , 4 ) ; if ( ( len ) != 1 ) { throw new java.lang.IllegalArgumentException ( "Error: Could not read in another byte." ) ; } else { numDecrypted += 1 ; return ( firstDate ) + ( java.nio.ByteBuffer . wrap ( buffer2 ) . getInt () ) ; } } 
private void getFieldsInformation () { java.lang.Long tsLong = ( java.lang.System . currentTimeMillis () ) / 1000 ; timestamp = tsLong . toString () ; testingDate = ( ( ( ( java.lang.String . valueOf ( datepicker . getYear () ) ) + "," ) + ( java.lang.String . valueOf ( ( ( datepicker . getMonth () ) + 1 ) ) ) ) + "," ) + ( java.lang.String . valueOf ( datepicker . getDayOfMonth () ) ) ; } 
public static java.lang.String convertToGroupString ( java.lang.String [] group ) { java.lang.String str = "" ; for ( int i = 0 ; i < ( ( group.length ) - 1 ) ; i ++ ) { str += ( group [ i ] ) + ":" ; } str += group [ ( ( group.length ) - 1 ) ] ; return str ; } 
private long checkQueryTimeout () { long timeLeft = timeoutAt - ( java.lang.System . currentTimeMillis () ) ; if ( timeLeft <= 0 ) { java.lang.String msg = io.druid.common.utils.StringUtils . safeFormat ( "Query[%s] url[%s] timed out." , query . getId () , url ) ; setupResponseReadFailure ( msg , null ) ; throw new io.druid.java.util.common.RE ( msg ) ; } else { return timeLeft ; } } 
@ java.lang.SuppressWarnings ( value = "PMD" ) public void extractWarFile ( java.lang.String jarFile ) { refreshDirectory ( jarFile ) ; try ( java.util.jar.JarFile jar = new java.util.jar.JarFile ( ( ( ( warDirectory ) + ( java.io.File.separator ) ) + jarFile ) ) ) { java.util.Enumeration entries = jar . entries () ; while ( entries . hasMoreElements () ) { extractFile ( jar , entries ) ; } } catch ( java.io.IOException e ) { org.apache.commons.io.FileUtils . deleteQuietly ( deployDirectory ) ; nc.sumy.edu.webcontainer.deployment.ArchiveExtractor.LOG . warn ( "Cannot read/write/found file: " , e ) ; } } 
public static boolean isRosterPath ( java.lang.String path ) { path = path . trim () . toLowerCase () ; return ( ( path . endsWith ( DataConstants.ROSTER_FILE_EXTENSION ) ) || ( path . endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION ) ) ) || ( path . endsWith ( DataConstants.ROSTER_COMPRESSED_FILE_EXTENSION_OLD ) ) ; } 
public void putLongArray ( final long [] data , boolean length ) { int l = data.length ; if ( length ) putInt ( l ) ; l *= com.heerbann.unsafe.UnsafeBuffer.sizeOfLong ; ensure ( ( ( position ) + l ) ) ; com.heerbann.unsafe.UnsafeBuffer.unsafe . copyMemory ( data , com.heerbann.unsafe.UnsafeBuffer.longArrayOffset , null , ( ( pointer ) + ( position ) ) , l ) ; position += l ; end = ( ( position ) > ( end ) ) ? position : end ; } 
static java.io.File constructFile ( java.lang.String basePath , java.lang.String fileName ) { java.io.File file ; java.io.File absolute = new java.io.File ( fileName ) ; if ( ( org.apache.commons.lang3.StringUtils . isEmpty ( basePath ) ) || ( absolute . isAbsolute () ) ) { file = absolute ; } else { file = new java.io.File ( org.apache.commons.configuration2.io.FileLocatorUtils . appendPath ( basePath , fileName ) ) ; } return file ; } 
public void doIt ( javax.servlet.http.HttpServletRequest request , javax.servlet.http.HttpServletResponse response ) throws java.io.IOException , javax.servlet.ServletException { java.lang.String error = null ; if ( error != null ) { response . sendRedirect ( ( "home.do?error=" + error ) ) ; } else { response . sendRedirect ( "home.do" ) ; } } 
private java.lang.String getLine ( int number ) throws java.lang.Exception { java.lang.String value = null ; java.lang.String pageContent = FitnesseFixtureContext.page . getHtml () ; java.lang.String lineizedContent = fitnesse.fixtures.ResponseExaminer . convertBreaksToLineSeparators ( pageContent ) ; java.util.StringTokenizer tokenizedLines = tokenizeLines ( lineizedContent ) ; for ( int i = number ; i != 0 ; i -- ) value = tokenizedLines . nextToken () ; return value != null ? value . trim () : null ; } 
private java.lang.String getRiskBucket ( java.lang.String productName , com.github.vincent_fuchs.comprehensive_testing.model.CountryRating countryRating ) { java.lang.String productVolatilityIndex = volatilityIndexService . getProductVolatilityIndex ( productName ) ; com.github.vincent_fuchs.comprehensive_testing.model.Risk volatilityIndexRisk = computeVolatilityIndexRisk ( productVolatilityIndex ) ; com.github.vincent_fuchs.comprehensive_testing.model.Risk countryRisk = computeCountryRisk ( countryRating ) ; return ( ( HIGH ) == volatilityIndexRisk ) || ( ( HIGH ) == countryRisk ) ? com.github.vincent_fuchs.comprehensive_testing.service.HIGH . toString () : ( ( MEDIUM ) == volatilityIndexRisk ) || ( ( MEDIUM ) == countryRisk ) ? com.github.vincent_fuchs.comprehensive_testing.service.MEDIUM . toString () : com.github.vincent_fuchs.comprehensive_testing.service.LOW . toString () ; } 
public void assertEquals ( java.lang.Object expected , java.lang.Object actual ) { if ( ( expected == null ) && ( actual == null ) ) return; if ( ( expected != null ) && ( expected . equals ( actual ) ) ) return; fail ( format ( expected , actual ) ) ; } 
private void updateLine () { int charToRemove = line . length () ; java.lang.System.out . print ( "\r" ) ; line = java.lang.String . format ( "Frames rendered: %d remaining: %d credits earned: %s | %s" , rendered , remaining , ( ( creditsEarned ) != null ? creditsEarned : "unknown" ) , ( ( status ) + ( exiting ? " (Exiting after this frame)" : "" ) ) ) ; java.lang.System.out . print ( line ) ; for ( int i = line . length () ; i <= charToRemove ; i ++ ) { java.lang.System.out . print ( " " ) ; } } 
private void setPositionsOfPlayers ( java.util.List < game.db.GameResultEntity > gameResults , java.util.List < java.lang.Integer > points ) { java.util.Collections . sort ( points ) ; for ( int i = 0 ; i < ( points . size () ) ; i ++ ) { for ( game.db.GameResultEntity gameResult : gameResults ) { if ( gameResult . getPoints () . equals ( points . get ( i ) ) ) { gameResult . setPosition ( ( i + 1 ) ) ; } } } } 
long exceptsPerCycle ( int cycle ) { net.openhft.chronicle.queue.impl.single.SingleChronicleQueueExcerpts.StoreTailer tailer = acquireTailer () ; try { long index = rollCycle . toIndex ( cycle , 0 ) ; if ( tailer . moveToIndex ( index ) ) { assert ( tailer.store . refCount () ) > 0 ; return ( tailer.store . lastSequenceNumber ( tailer ) ) + 1 ; } else { return - 1 ; } } catch ( java.io.StreamCorruptedException e ) { throw new java.lang.IllegalStateException ( e ) ; } finally { tailer . release () ; } } 
public void onCreateOptionsMenu ( android.view.Menu menu , android.view.MenuInflater inflater ) { if ( ( movies ) != null ) { inflater . inflate ( R.menu.menu_detail , menu ) ; final android.view.MenuItem favorite = menu . findItem ( R.id.action_favorite ) ; new com.ashwinpilgaonkar.popularmovies.Backend.Favorite ( getActivity () , movies , favorite , 0 ) ; } } 
public void remGroup ( java.lang.String uname , java.lang.String gID ) { for ( de.jattyv.jcapi.server.virtual.dataController.data.User user : users ) { if ( user . getUserName () . equals ( uname ) ) { for ( de.jattyv.jcapi.client.gui.cell.FG fg : user . getFgs () ) { if ( fg . getId () . equals ( gID ) ) { if ( ( fg . getType () ) == ( de.jattyv.jcapi.client.gui.cell.FG.FG_TYPE_GROUP ) ) { user . getFgs () . remove ( fg ) ; return; } } } } } } 
@ java.lang.Override public void updatePlayerMoveState () { net.minecraft.client.entity.EntityPlayerSP player = net.minecraft.client.Minecraft . getMinecraft () . thePlayer ; if ( ( ClientHookHandler.hook ) == null ) { original . updatePlayerMoveState () ; player.movementInput = original ; } else if ( player.onGround ) { super . updatePlayerMoveState () ; } else { this . jump = net.minecraft.client.Minecraft . getMinecraft () . gameSettings . keyBindJump . getIsKeyPressed () ; this . sneak = net.minecraft.client.Minecraft . getMinecraft () . gameSettings . keyBindSneak . getIsKeyPressed () ; } } 
@ java.lang.Override public interfaces.Problem hcSteepestAscent ( interfaces.Problem prob ) { puzzle.PuzzleProblem current = ( ( puzzle.PuzzleProblem ) ( prob ) ) ; puzzle.PuzzleState neighbor ; while ( true ) { neighbor = ( ( puzzle.PuzzleState ) ( current . getBestNeighbor () ) ) ; if ( ( neighbor . getValue () ) >= ( current . getState () . getValue () ) ) return current ; current . addAction ( neighbor.actstr ) ; current . setState ( neighbor ) ; } } 
public void ExpectedPresident ( courtree.Node focusNode ) { if ( focusNode != null ) { ExpectedPresident ( focusNode.leftChild ) ; if ( ( president . getbDate () ) <= ( focusNode . getbDate () ) ) { java.lang.System.out . println ( focusNode ) ; setPresident ( focusNode ) ; } ExpectedPresident ( focusNode.rightChild ) ; } } 
public int getScrollHeight () { return ( ( int ) ( ( ( float ) ( ( dragged ) / ( ( float ) ( ( viewportHeight ) - ( BAR_HEIGHT ) ) ) ) ) * ( ( height ) - ( viewportHeight ) ) ) ) ; } 
private void shopDetection ( com.mygdx.runrunrun.sprites.MoveableObject firstObj ) { shop = ( ( com.mygdx.runrunrun.sprites.Shop ) ( firstObj ) ) ; if ( ( firstObj . contains ( hero . getPosition () ) ) && ( ( firstObj . getHide () ) == false ) ) { stopForShop = true ; if ( ( flyCount ) <= 0 ) exitShopTimer = 100 ; } else { stopForShop = false ; enteredShop = false ; if ( hero . getStop () ) { hero . toggleStop () ; } } } 
@ org.junit.Test public void successfulGet ( ) throws java.lang.Exception { com.springernature.watermark.api.WatermarkApiIntegrationTest.LOG . info ( "Testing successfulGet" ) ; com.springernature.watermark.model.Book book = com.springernature.watermark.model.ModelTestUtil . createDummyBook () ; java.lang.Long id = postRequest ( book ) ; com.springernature.watermark.api.RequestEntity entity = com.springernature.watermark.api.RequestEntity . get ( new java.net.URI ( ( ( ( baseUrl ) + "/" ) + id ) ) ) . build () ; com.springernature.watermark.api.ResponseEntity < java.util.Map > response = this . testRestTemplate . exchange ( entity , java.util.Map . class ) ; assertEquals ( HttpStatus.OK , response . getStatusCode () ) ; } 
private void addWorkers ( int count ) { workerCount = count ; workers = new java.util.ArrayList <> () ; for ( int i = 0 ; i < count ; i ++ ) { com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker worker = new com.astedt.robin.concurrentobjecthandler.ConcurrentObjectWorker ( this , i ) ; workers . add ( worker ) ; } } 
@ java.lang.Override protected void onPostExecute ( java.lang.Object resultObject ) { if ( resultObject == null ) {} else if ( resultObject instanceof byte [] ) { mImageBytesConsumer . onAssetBytes ( mAsset , ( ( byte [] ) ( resultObject ) ) ) ; } else if ( resultObject instanceof java.lang.Exception ) { mImageBytesConsumer . onAssetError ( mAsset , ( ( java.lang.Exception ) ( resultObject ) ) ) ; } } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) @ java.lang.Override public void onViewCreated ( android.view.View view , android.os.Bundle savedInstanceState ) { super . onViewCreated ( view , savedInstanceState ) ; final P presenter = getPresenter () ; if ( presenter != null ) { butterknife.ButterKnife . bind ( presenter , view ) ; } if ( presenter != null ) { presenter . setView ( this ) ; } ready () ; } 
@ java.lang.Override public void onEndpointPoolConfigurationSet ( org.openhab.io.transport.modbus.endpoint.ModbusSlaveEndpoint endpoint , org.openhab.io.transport.modbus.endpoint.EndpointPoolConfiguration otherConfig ) { synchronized ( this ) { if ( ( ( ( this . configuration ) != null ) && ( endpoint . equals ( this . endpoint ) ) ) && ( ! ( this . configuration . equals ( otherConfig ) ) ) ) { updateStatus ( ThingStatus.OFFLINE , ThingStatusDetail.CONFIGURATION_ERROR , java.lang.String . format ( "Endpoint '%s' has conflicting parameters: parameters of this thing (%s) {} are different from {}" , endpoint , this . thing , this . configuration , otherConfig ) ) ; } } } 
public java.lang.String [] getPacket ( ) throws java.io.IOException { while ( input . ready () ) { char c = ( ( char ) ( input . read () ) ) ; if ( c == '\n' ) { java.lang.String output = buffer . toString () ; buffer = new java.lang.StringBuilder () ; return output . split ( "\t" ) ; } else buffer . append ( c ) ; } return null ; } 
@ java.lang.Override public void start () { android.util.Log . d ( org.example.xwalkembedded.XWalkExoMediaPlayer.TAG , "==== in start " ) ; if ( ( mSystemMediaPlayer ) && ( ( mMediaPlayer ) != null ) ) { mMediaPlayer . start () ; } else if ( ( player ) != null ) { player . setPlayWhenReady ( true ) ; } } 
public java.lang.String getFormattedDuration () { int seconds = ( ( int ) ( ( ( mDuration ) / 1000 ) % 60 ) ) ; int minutes = ( ( int ) ( ( ( mDuration ) / ( 1000 * 60 ) ) % 60 ) ) ; int hours = ( ( int ) ( ( ( mDuration ) / ( ( 1000 * 60 ) * 60 ) ) % 24 ) ) ; return java.lang.String . format ( "%02d:%02d:%02d" , hours , minutes , seconds ) ; } 
@ java.lang.Override public boolean onBackPressed () { int currentPos = mViewPager . getCurrentItem () ; java.lang.String tag = mSectionsPagerAdapter . getFragmentTag ( currentPos ) ; if ( tag != null ) { android.support.v4.app.Fragment currentFragment = getChildFragmentManager () . findFragmentByTag ( tag ) ; if ( currentFragment instanceof tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) { return ( ( tw.edu.ntust.et.mit.jonkermalacca.MainActivity.OnBackPressedListener ) ( currentFragment ) ) . onBackPressed () ; } } return false ; } 
private boolean hasUnknownTokenAt ( org.languagetool.AnalyzedTokenReadings [] tokens , int startPos , int endPos ) { for ( int i = startPos ; i < endPos ; i ++ ) { org.languagetool.AnalyzedTokenReadings token = tokens [ i ] ; for ( org.languagetool.AnalyzedToken analyzedToken : token . getReadings () ) { if ( analyzedToken . hasNoTag () ) { return true ; } } } return false ; } 
public void fadeIn ( com.badlogic.gdx.math.Matrix4 cameraCombined , float delta ) { fadeOutLight . setActive ( false ) ; fadeInLight . setActive ( true ) ; if ( ( timePassedDuringFadeIn ) < ( timeToFadeIn ) ) { fadeInAlpha = 1 - ( ( timePassedDuringFadeIn ) / ( timeToFadeIn ) ) ; fadeInLight . setColor ( new com.badlogic.gdx.graphics.Color ( 0 , 0 , 0 , ( 1 - ( fadeInAlpha ) ) ) ) ; rayHandler . setCombinedMatrix ( cameraCombined ) ; timePassedDuringFadeIn += delta ; } else { isNewLevel = false ; } rayHandler . updateAndRender () ; } 
public boolean intiateDBConnection () { try { java.lang.Class . forName ( "org.sqlite.JDBC" ) ; con = java.sql.DriverManager . getConnection ( ( ( "jdbc:sqlite:" + ( property ) ) + "/ProjectTest.db" ) , "" , "" ) ; return true ; } catch ( java.lang.Exception ex ) { ex . printStackTrace () ; java.lang.System.out . println ( "exception caught" ) ; return false ; } } 
@ java.lang.Override public void onAttach ( android.content.Context context ) { super . onAttach ( context ) ; try { mCallBack = ( ( com.example.user.onceuponatime.fragment.SignInFragment.SignInFragmentCallBack ) ( context ) ) ; } catch ( java.lang.ClassCastException e ) { throw new java.lang.ClassCastException ( ( ( context . toString () ) + " must implements SignInCallaback" ) ) ; } } 
private boolean isFloat ( java.lang.String str ) { if ( str . contains ( "$" ) ) { return isRegisterFloat . get ( str ) ; } else { return ( ( str . contains ( "." ) ) || ( str . startsWith ( "_f" ) ) ) || ( str . endsWith ( "_float" ) ) ; } } 
public boolean clustersMatch ( double [] cluster1 , double [] cluster2 , Emat emat ) { if ( ( cluster1 == null ) || ( cluster2 == null ) ) return true ; for ( int i = 0 ; i < ( cluster1.length ) ; i ++ ) { if ( ( java.lang.Math . abs ( ( ( cluster1 [ i ] ) - ( cluster2 [ i ] ) ) ) ) > 2 ) return false ; } return true ; } 
public void handlePremiumAPI ( final jd.plugins.DownloadLink downloadLink , final jd.plugins.Account account ) throws java.lang.Exception , jd.plugins.PluginException { loginAPI ( account ) ; if ( ( account . getType () ) == ( jd.plugins.Account.AccountType.FREE ) ) { handleDownloadAPI ( downloadLink , true , 1 , false , "directlink_freeaccount" ) ; } else { handleDownloadAPI ( downloadLink , true , ( - 4 ) , true , "directlink_premiumaccount" ) ; } } 
@ org.junit.Test public void fourOfAKindTest2 () { int [] cards = new int [] { 12 , 25 , 38 , 51 , 1 , 7 , 29 } ; for ( int i = 0 ; i < ( cards.length ) ; i ++ ) deck . getCard ( cards [ i ] ) . displayCard () ; int ans = Table . handValue ( cards ) ; org.junit.Assert . assertEquals ( 8 , ans ) ; } 
public void clear () { de.baleipzig.iris.common.Dimension dim = this . dim () ; layer . clear () ; for ( int i = 0 ; i < ( dim . getY () ) ; i ++ ) { java.util.Vector < de.baleipzig.iris.model.neuralnet.node.INode > row = new java.util.Vector <> () ; for ( int j = 0 ; j < ( dim . getX () ) ; j ++ ) row . add ( null ) ; layer . add ( row ) ; } } 
@ java.lang.Override public void getTooltip ( binnie.core.craftgui.Tooltip tooltip ) { if ( ( species ) == null ) { return; } switch ( discovered ) { case SHOW : case DISCOVERED : tooltip . add ( species . getName () ) ; break; case UNDISCOVERED : tooltip . add ( binnie.core.util.I18N . localise ( "binniecore.gui.database.discovered.undiscovered" ) ) ; break; } } 
@ java.lang.Override public void onDestroyView () { try { releasePlayer () ; cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.mMediaSession . setActive ( false ) ; } catch ( java.lang.NullPointerException exception ) { exception . printStackTrace () ; } catch ( java.lang.Exception ex ) { android.util.Log . e ( "BALog" , ( "exolayer unlnown bug --- " + ( ex . getMessage () ) ) ) ; } super . onDestroyView () ; } 
public it.musichub.server.library.model.Folder getFolder ( it.musichub.server.library.model.Folder folder ) { if ( ( folders ) != null ) { for ( it.musichub.server.library.model.Folder f : folders ) { try { if ( java.nio.file.Files . isSameFile ( f . getFile () . toPath () , folder . getFile () . toPath () ) ) return f ; } catch ( java.io.IOException e ) {} } } return null ; } 
@ java.lang.Override public void done ( com.parse.ParseUser user , com.parse.ParseException e ) { if ( e != null ) { android.util.Log . e ( com.codepath.timeline.network.TimelineClient.TAG , ( ( ( "Exception from getUser(" + userObjectId ) + "): " ) + ( e . getMessage () ) ) ) ; return; } if ( user != null ) { android.util.Log . d ( com.codepath.timeline.network.TimelineClient.TAG , "Success getUser" ) ; if ( listener != null ) { listener . onGetUser ( user ) ; } } } 
public boolean isStarBaseDeployed () { if ( ( ( ships . size () ) <= 7 ) && ( ( ships . size () ) > 0 ) ) { org.openRealmOfStars.player.ship.Ship ship = ships . get ( 0 ) ; if ( ( ship . isStarBase () ) && ( ship . getFlag ( Ship.FLAG_STARBASE_DEPLOYED ) ) ) { return true ; } } return false ; } 
private void determineUploadTime ( java.util.List < com.example.plpa.utils.ExpApplyJson.Policy > policies ) { android.content.IntentFilter filter = new android.content.IntentFilter () ; filter . addAction ( Intent.ACTION_POWER_CONNECTED ) ; for ( com.example.plpa.utils.ExpApplyJson.Policy policy : policies ) { if ( ( policy.Id ) == ( com.example.plpa.utils.UploadPolicy.CONNECTWIFI ) ) filter . addAction ( WifiManager.WIFI_STATE_CHANGED_ACTION ) ; } registerBroadcastReciever ( filter ) ; } 
@ java.lang.Override public int generatePageTotal ( int total , int pageSize ) { if ( total <= pageSize ) return 1 ; return ( ( int ) ( java.lang.Math . ceil ( ( ( ( double ) ( total ) ) / ( pageSize - 9 ) ) ) ) ) ; } 
private java.util.Set < java.security.Principal > collectPrincipals ( final javax.jcr.Credentials credentials ) { final java.util.Set < java.security.Principal > principals = new java.util.HashSet <> () ; for ( final org.fcrepo.auth.common.PrincipalProvider p : this . getPrincipalProviders () ) { final java.util.Set < java.security.Principal > ps = p . getPrincipals ( credentials ) ; if ( ps != null ) { principals . addAll ( p . getPrincipals ( credentials ) ) ; } } return principals ; } 
public void add ( com.google.gson.JsonArray cardsJson ) { for ( int i = 0 ; i < ( cardsJson . size () ) ; i ++ ) { cards . add ( new org.leanpoker.player.Card ( cardsJson . get ( i ) . getAsJsonObject () . get ( "suit" ) . getAsString () , cardsJson . get ( 1 ) . getAsJsonObject () . get ( "rank" ) . getAsString () ) ) ; } } 
public boolean removeDataSet ( T d ) { if ( d == null ) return false ; boolean removed = mDataSets . remove ( d ) ; if ( removed ) { mYValCount -= d . getEntryCount () ; mYValueSum -= d . getYValueSum () ; calcMinMax () ; } return removed ; } 
public void shuffle () { for ( int i = 51 ; i > 0 ; i -- ) { int shuf = ( ( int ) ( ( java.lang.Math . random () ) * ( i + 1 ) ) ) ; Card temp = deck [ i ] ; deck [ i ] = deck [ shuf ] ; deck [ shuf ] = temp ; } cardsUsed = 0 ; } 
private static void startWorker ( ru.bigspawn.parser.bot.Bot bot , java.lang.String url ) throws java.io.UnsupportedEncodingException { ru.bigspawn.parser.parser.AlterPortalParser parser = new ru.bigspawn.parser.parser.AlterPortalParser ( url ) ; java.lang.String loggerName = ru.bigspawn.parser.Utils . getLoggerNameFromUrl ( url ) ; ru.bigspawn.parser.Worker worker = new ru.bigspawn.parser.Worker ( parser , bot , loggerName ) ; ru.bigspawn.parser.Main.logger . debug ( ( "Create " + worker ) ) ; java.lang.Thread thread = new java.lang.Thread ( worker , ( "Thread: " + loggerName ) ) ; thread . start () ; ru.bigspawn.parser.Main.logger . debug ( ( "Start " + thread ) ) ; } 
@ java.lang.Override public void lock () { if ( ( ( reentrant ) != null ) && ( reentrant . isSame () ) ) { reentrant . acquire () ; } else { while ( ! ( cas . compareAndSet ( false , true ) ) ) { waitForSignal () ; } reentrant = new org.arivu.utils.lock.Reentrant () ; } } 
public byte [] readPacket () { byte [] buff = new byte [] {} ; byte [] buffer = this . socket . readPacket () ; byte [] bytes = new byte [] { ( ( byte ) ( buffer [ ( ( buffer.length ) - 1 ) ] ) ) } ; if ( bytes == ( org.itxtech.synapseapi.network.synlib.ServerConnection.MAGIC_BYTES ) ) { if ( ( buffer.length ) > 4 ) {} } return buff ; } 
@ java.lang.Override public boolean decode ( @ org.jetbrains.annotations.NotNull final com.intellij.openapi.util.TextRange rangeInsideHost , @ org.jetbrains.annotations.NotNull final java.lang.StringBuilder outChars ) { com.intellij.openapi.util.TextRange . assertProperRange ( rangeInsideHost ) ; java.lang.String subText = rangeInsideHost . substring ( myHost . getText () ) ; if ( ( myHost . getRawString () ) != null ) { outChars . append ( subText ) ; return true ; } return parseStringCharacters ( subText , outChars ) ; } 
@ java.lang.Override public void onClick ( android.view.View view ) { if ( ( ( txt_speech ) != null ) && ( ! ( txt_speech . isSpeaking () ) ) ) { if ( ( Build.VERSION.SDK_INT ) >= ( Build.VERSION_CODES.LOLLIPOP ) ) txt_speech . speak ( wordsEN [ wordsIndex ] , TextToSpeech.QUEUE_FLUSH , null , null ) ; } } 
private org.quicktionary.backend.TextNode generateNotFound ( java.lang.String string ) { org.quicktionary.backend.TextNode root ; org.quicktionary.backend.TextNode paragraph ; org.quicktionary.backend.TextNode header ; org.quicktionary.backend.TextNode text ; root = new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.ROOT_TYPE ) ; header = root . appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.HEADER_TYPE ) ) ; paragraph = root . appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PARAGRAPH_TYPE ) ) ; header . setContent ( "Sorry!" ) ; text = paragraph . appendChild ( new org.quicktionary.backend.TextNode ( org.quicktionary.backend.TextNode.PLAIN_TYPE ) ) ; text . setContent ( ( ( "We couldn't find the page for the word " + string ) + "." ) ) ; return root ; } 
private synchronized be.olsson.slackappender.SlackAppender.MessageStat getMessageStat ( org.apache.log4j.spi.LoggingEvent event ) { if ( meltdownProtection ) { java.lang.String key = event . getMessage () . toString () ; be.olsson.slackappender.SlackAppender.MessageStat stat = similar . get ( key ) ; if ( stat == null ) { stat = new be.olsson.slackappender.SlackAppender.MessageStat () ; stat.lastLogged = java.lang.System . currentTimeMillis () ; } similar . put ( key , stat ) ; ( stat.countSinceLastLog ) ++ ; stat.lastSeen = java.lang.System . currentTimeMillis () ; return stat ; } return null ; } 
@ java.lang.Override public void onClick ( android.view.View v ) { int position = ( ( java.lang.Integer ) ( v . getTag () ) ) ; me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType eventType ; if ( ( v . getId () ) == ( R.id.ib_hp_minus_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.DECREASE_HEALTH ; } else if ( ( v . getId () ) == ( R.id.ib_hp_add_select ) ) { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.INCREASE_HEALTH ; } else { eventType = me.colinhowes.rollinitiative.CombatAdapter.CombatClickListener.EventType.ITEM_CLICK ; } clickListener . onCombatClick ( position , eventType ) ; } 
public double getprice ( java.lang.String symbol ) throws java.io.IOException { yahoofinance.Stock stock = yahoofinance.YahooFinance . get ( symbol ) ; if ( stock == null ) return - 1 ; java.lang.String name = stock . getName () ; if ( ( name . compareTo ( "N/A" ) ) == 0 ) return - 1 ; java.math.BigDecimal price_dec = stock . getQuote () . getPrice () ; java.lang.Double price_dub = price_dec . doubleValue () ; return price_dub ; } 
@ java.lang.Override public void readFromNBT ( @ org.jetbrains.annotations.NotNull final net.minecraft.nbt.NBTTagCompound compound ) { super . readFromNBT ( compound ) ; final net.minecraft.nbt.NBTTagList furnaceTagList = compound . getTagList ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_FURNACES , Constants.NBT.TAG_COMPOUND ) ; for ( int i = 0 ; i < ( furnaceTagList . tagCount () ) ; ++ i ) { furnaces . add ( net.minecraft.nbt.NBTUtil . getPosFromTag ( furnaceTagList . getCompoundTagAt ( i ) . getCompoundTag ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_POS ) ) ) ; } isSomethingInOven = compound . getBoolean ( com.minecolonies.coremod.colony.buildings.BuildingCook.TAG_COOKING ) ; } 
public org.bitcoinj.core.Transaction loadTransactionFromDisk ( java.lang.String txHash ) throws com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException { try { com.bitdubai.fermat_api.layer.osa_android.file_system.PluginTextFile pluginTextFile = pluginFileSystem . getTextFile ( this . pluginId , TRANSACTION_DIRECTORY , txHash , FilePrivacy.PRIVATE , FileLifeSpan.PERMANENT ) ; java.lang.String transactionContent = pluginTextFile . getContent () ; org.bitcoinj.core.Transaction transaction = ( ( org.bitcoinj.core.Transaction ) ( com.bitdubai.fermat_api.layer.all_definition.util.XMLParser . parseXML ( transactionContent , new org.bitcoinj.core.Transaction ( NETWORK_PARAMETERS ) ) ) ) ; return transaction ; } catch ( java.lang.Exception e ) { throw new com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException ( com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantLoadTransactionFromFileException.CONTEXT_CONTENT_SEPARATOR , e , ( ( "Error loading transaction " + txHash ) + " from disk." ) , "IO Error" ) ; } } 
public static boolean hasSpace ( proto.game.scene.Scene scene , proto.game.scene.PropType type , int x , int y , int facing ) { for ( proto.game.scene.Tile under : proto.game.scene.Prop . tilesUnder ( type , scene , x , y , facing , 0 ) ) { if ( under == null ) return false ; for ( proto.game.scene.Element e : under . inside () ) if ( e . wouldBlock ( type ) ) return false ; } return true ; } 
@ java.lang.Override protected void onPostExecute ( kz.mukhamedissa.exchangerates.data.response.ExchangeRateResponse response ) { super . onPostExecute ( response ) ; if ( ( response . isSuccess () ) && ( ( response.result ) != null ) ) { kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory . getArticleORM () . delete ( getBaseContext () ) ; kz.mukhamedissa.exchangerates.util.db.orm.ORMFactory . getArticleORM () . insert ( getBaseContext () , response.result ) ; } } 
public void actionPerformed ( java.awt.event.ActionEvent event ) { if ( ( movieIdChosen ) != null ) { int id = java.lang.Integer . parseInt ( movieIdChosen ) ; rentalInfoController . returnMovie ( id , clientSelected . getId () ) ; movieController . returnMovie ( id , panel , scroll ) ; } } 
int getParallelism () { com.google.common.base.Preconditions . checkArgument ( ( ( null == ( parallelism ) ) || ( ( parallelism ) > 0 ) ) , "invalid parallelism %s; must be greater than zero" , parallelism ) ; java.lang.Integer value = parallelism ; if ( null == value ) { value = java.lang.Runtime . getRuntime () . availableProcessors () ; } return value ; } 
public void draw () { if ( ( taskPosition ) >= ( game.tasks . size () ) ) { ( taskPosition ) -- ; } applet . translate ( 20 , ( ( CONTROL_HEIGHT ) - 100 ) ) ; if ( ( game.tasks . size () ) > 0 ) { applet . text ( game.tasks . get ( taskPosition ) . getName () , 0 , 0 ) ; } else { applet . text ( "No tasks available" , 0 , 0 ) ; } } 
public synchronized void calculateReceiptsVisibility ( org.iabako.client.ui.form.business.sale.SalePaymentsForm salePaymentsForm ) { if ( ( invoiceTable ) == null ) { return; } org.iabako.client.ui.layout.widget.payment.PaymentTable installmentsTable = salePaymentsForm . getInstallmentTable () ; int installmentsNumber = ( installmentsTable != null ) ? installmentsTable.queryDefinitionDTO . getCountTotal () : 0 ; int invoicesNumber = ( ( invoiceTable ) != null ) ? invoiceTable.queryDefinitionDTO . getCountTotal () : 0 ; if ( ( invoicesNumber == 1 ) && ( installmentsNumber == 0 ) ) { receiptsPanel . setVisible ( false ) ; } else { receiptsPanel . setVisible ( true ) ; } } 
private boolean isPrime ( int p ) { if ( p == 2 ) return true ; if ( p < 3 ) return false ; if ( ( p % 2 ) == 0 ) return false ; for ( int i = 3 ; ( i * i ) <= p ; i += 2 ) if ( ( p % i ) == 0 ) return false ; return true ; } 
@ org.springframework.web.bind.annotation.RequestMapping ( value = "/list" , method = org.springframework.web.bind.annotation.RequestMethod.GET ) public java.util.ArrayList < be.ehb.restservermetdatabase.model.Avatar > list ( @ org.springframework.web.bind.annotation.RequestParam ( value = "user_id" , defaultValue = "0" ) int user_id , @ org.springframework.web.bind.annotation.RequestParam ( value = "user_mail" , defaultValue = "" ) java.lang.String user_mail ) { if ( ( user_id == 0 ) && ( user_mail . equals ( "" ) ) ) { return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatars () ; } else { if ( ! ( user_mail . equals ( "" ) ) ) { user_id = be.ehb.restservermetdatabase.dao.UserDao . getUserByEmail ( user_mail ) . getUser_id () ; } return be.ehb.restservermetdatabase.dao.AvatarDao . getAvatarsByUser ( user_id ) ; } } 
@ javax.ws.rs.GET @ javax.ws.rs.Path ( value = "/createFolder" ) @ javax.ws.rs.Produces ( value = pt.webdetails.cpf.utils.MimeTypes.JSON ) public java.lang.String createFolder ( @ javax.ws.rs.QueryParam ( value = pt.webdetails.cfr.CfrApi.MethodParams.PATH ) java.lang.String path ) throws java.lang.Exception { path = pt.webdetails.cfr.CfrApi . checkRelativePathSanity ( path ) ; if ( ( path == null ) || ( org.apache.commons.lang.StringUtils . isBlank ( path ) ) ) { throw new java.lang.Exception ( "path is null or empty" ) ; } boolean createResult = getRepository () . createFolder ( path ) ; return new org.json.JSONObject () . put ( "result" , createResult ) . toString () ; } 
private void readVersion ( ) throws java.lang.Exception { try ( java.io.InputStream verStream = getClass () . getClassLoader () . getResourceAsStream ( com.mobilehelix.appserver.system.VersionManager.versionProperties ) ) { java.util.Properties verProps = new java.util.Properties () ; verProps . load ( verStream ) ; majorVer = verProps . getProperty ( "Major" ) ; minorVer = verProps . getProperty ( "Minor" ) ; revisionVer = verProps . getProperty ( "Revision" ) ; versionString = ( ( ( ( majorVer ) + "." ) + ( minorVer ) ) + "." ) + ( revisionVer ) ; } } 
@ java.lang.Override public N next () { if ( ( ( ( data . size () ) - 1 ) <= ( i ) ) || ( ( data . get ( i ) ) == null ) ) data . add ( getRandomValue () ) ; return data . get ( ( ( i ) ++ ) ) ; } 
protected void setBannerVisible () { com.kiroule.jpetstore.vaadinspring.domain.Account account = com.kiroule.jpetstore.vaadinspring.ui.util.CurrentAccount . get () ; if ( ( account == null ) || ( ! ( account . isBannerOption () ) ) ) { bannerLayout . setVisible ( false ) ; } else if ( ! ( com.google.common.base.Strings . isNullOrEmpty ( account . getBannerName () ) ) ) { bannerImage . setValue ( account . getBannerName () ) ; bannerLayout . setVisible ( true ) ; bannerLayout . setStyleName ( getBannerStyleName ( account . getBannerName () ) ) ; } } 
public static org.kentuni.WeatherStation.Drivers.MCP3427 getDriver ( ) throws java.lang.Exception { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { synchronized ( org.kentuni.WeatherStation.Drivers.ADC . class ) { if ( ( org.kentuni.WeatherStation.Drivers.ADC.instance ) == null ) { org.kentuni.WeatherStation.Drivers.ADC.instance = new org.kentuni.WeatherStation.Drivers.MCP3427 ( com.pi4j.io.i2c.I2CFactory . getInstance ( I2CBus.BUS_1 ) , 105 ) ; } } } return org.kentuni.WeatherStation.Drivers.ADC.instance ; } 
public void backupPortfolio ( android.content.Context context , java.lang.String fileName ) { persist () ; this . mAppStorage . putString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON , getStocksJson () . toString () ) . apply () ; java.lang.String rawJson = this . mAppStorage . getString ( nitezh.ministock.domain.PortfolioStockRepository.PORTFOLIO_JSON , "" ) ; if ( nitezh.ministock.UserData . writeExternalStorage ( context , rawJson , ( fileName + ".txt" ) , "portfoliobackups/" ) ) nitezh.ministock.DialogTools . showSimpleDialog ( context , "PortfolioActivity backed up" , ( "Your portfolio settings have been backed up to ministocks/portfoliobackups/" + fileName ) ) ; } 
private static int findValue ( int needle , java.lang.Integer [] haystack ) { int start = 0 ; int end = haystack.length ; while ( start < end ) { int midpoint = ( start + end ) / 2 ; int test = haystack [ midpoint ] ; if ( test == needle ) { return midpoint ; } else if ( test < needle ) { start = midpoint + 1 ; } else { end = midpoint ; } } return - 1 ; } 
private void launchBattleFrags () { if ( ( battleUIFragment ) == null ) { battleUIFragment = new com.pokemonbattlearena.android.BattleUIFragment () ; } if ( ! ( battleBegun ) ) { battleBegun = true ; getFragmentManager () . beginTransaction () . add ( R.id.battle_ui_container , battleUIFragment ) . commitAllowingStateLoss () ; } } 
protected void initializeOrdinal ( final int defaultOrdinal ) { this . ordinal = defaultOrdinal ; java.lang.String ordinal = get ( PropertySource.TAMAYA_ORDINAL ) ; if ( ordinal != null ) { try { this . ordinal = java.lang.Integer . parseInt ( ordinal ) ; } catch ( java.lang.NumberFormatException e ) { org.apache.tamaya.core.propertysource.BasePropertySource.LOG . log ( java.util.logging.Level.WARNING , "Specified {0} is not a valid Integer value: {1} - using defaultOrdinal {2}" , new java.lang.Object [] { org.apache.tamaya.spi.PropertySource.TAMAYA_ORDINAL , ordinal , defaultOrdinal } ) ; } } } 
@ java.lang.Override public final void unregisterRpcNotificationListener ( com.smartdevicelink.protocol.enums.FunctionID functionID , com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener rpcNotificationListener ) { int id = functionID . getId () ; java.util.HashSet < com.smartdevicelink.proxy.rpc.listeners.OnRPCNotificationListener > listenerSet = mNotificationListeners . get ( id ) ; if ( listenerSet != null ) { listenerSet . remove ( rpcNotificationListener ) ; if ( ( listenerSet . isEmpty () ) && ( ( mSdlProxyALM ) != null ) ) { mSdlProxyALM . removeOnRPCNotificationListener ( functionID ) ; mNotificationListeners . put ( id , null ) ; } } } 
protected java.lang.Long doInBackground ( com.androidexpansion.filedownloader.DownloadExtraAssets [] remoteLocalResources ) { int count = remoteLocalResources.length ; long totalSize = 0 ; for ( int i = 0 ; i < count ; i ++ ) { totalSize += downloadExtraAssets . downloadFile ( remoteLocalResources [ i ] ) ; java.lang.Integer progress = ( ( int ) ( ( ( i + 1 ) / ( ( float ) ( count ) ) ) * 100 ) ) ; publishProgress ( progress ) ; if ( isCancelled () ) break; } return totalSize ; } 
@ java.lang.Override protected void onResume () { if ( ( hasCameraPermissions () ) && ( ( mCamera ) != null ) ) { mCamera . start () ; mProgressBar . setVisibility ( View.GONE ) ; } final net.gini.switchsdk.Image selectedImage = getIntent () . getParcelableExtra ( net.gini.switchsdk.TakePictureActivity.STATE_KEY_SELECTED_IMAGE ) ; if ( selectedImage != null ) { mPresenter . onImageSelected ( selectedImage ) ; } else { mPresenter . onTakePictureSelected () ; } super . onResume () ; } 
private java.io.File absentDirectory () { try { java.lang.String result = ( existingDirectory () ) + ( xyz.enhorse.commons.HandyPathTest.name ) ; java.nio.file.Files . deleteIfExists ( java.nio.file.Paths . get ( result ) ) ; return new java.io.File ( result ) ; } catch ( java.io.IOException ex ) { throw new java.lang.IllegalStateException () ; } } 
private guiPacket.Card removeCardFromHand ( guiPacket.Card cardToRemove ) { for ( int i = 0 ; i < ( hand . size () ) ; i ++ ) { if ( ( cardToRemove . compareTo ( hand . get ( i ) ) ) == 0 ) { hand . remove ( i ) ; return cardToRemove ; } } java.lang.System.out . println ( "RemoveCardFromHand: Something went wrong" ) ; return null ; } 
public synchronized void generateBottomEdge () { if ( ! ( this . done ) ) { this . hue = 1.0F / 3.0F ; this . cancelled = false ; drawKochEdge ( ( ( 1 - ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , ( ( 1 + ( ( java.lang.Math . sqrt ( 3.0 ) ) / 2.0 ) ) / 2 ) , 0.75 , this . level ) ; } } 
private boolean hasKeepAliveForConnection () { java.lang.String keepAlive = assertion . getKeepAlive () ; if ( gov.hhs.fha.nhinc.nhinclib.NullChecker . isNullish ( keepAlive ) ) { keepAlive = getKeepAliveProperty () ; } return ( gov.hhs.fha.nhinc.nhinclib.NullChecker . isNotNullish ( keepAlive ) ) && ( ( "TRUE" . equalsIgnoreCase ( keepAlive ) ) || ( "T" . equalsIgnoreCase ( keepAlive ) ) ) ; } 
private < T extends com.librato.metrics.reporter.Metric > T register ( java.lang.Class < T > klass , com.librato.metrics.reporter.Supplier < T > metric ) { com.librato.metrics.reporter.Signal signal = createSignal () ; if ( signal == null ) { return register ( registry , name , metric , klass ) ; } java.lang.String encodedName = encodeName ( signal ) ; return register ( registry , encodedName , metric , klass ) ; } 
public boolean updateProduction ( double diff ) { _simStat.currentElectricity += diff ; if ( ( _connect._simStat ) != null ) { _connect._simStat.currentElectricity += diff ; } if ( ( ( _simStat.currentElectricity ) > ( _maxProduction ) ) || ( ( _simStat.currentElectricity ) < ( _minProduction ) ) ) { _simStat.isOk = false ; } else { _simStat.isOk = true ; } return _simStat.isOk ; } 
private void addPorts ( java.lang.StringBuilder b ) { if ( ( ports . size () ) > 0 ) { java.lang.String [] portsS = new java.lang.String [ ports . size () ] ; int i = 0 ; for ( java.lang.String port : ports ) { portsS [ ( i ++ ) ] = validatePortExposure ( port ) ; } DockerFileKeyword.EXPOSE . addTo ( b , portsS ) ; } } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent ev ) { super . onTouchEvent ( ev ) ; dragHelper . processTouchEvent ( ev ) ; final android.view.ViewGroup parent = ( ( android.view.ViewGroup ) ( findBottomView ( this , x , y ) . getParent () ) ) ; return parent == ( this ) ; } 
public boolean hasGameEnded () { int countOfAliveWolves = 0 ; int countOfAliveCitizens = 0 ; for ( com.raibaz.lupus.game.Player p : g . getPlayers () ) { if ( p . isAlive () ) { if ( ( p . getRole () ) == ( PlayerRole.WOLF ) ) { countOfAliveWolves ++ ; } else { countOfAliveCitizens ++ ; } } } return ( countOfAliveWolves == 0 ) || ( countOfAliveWolves >= countOfAliveCitizens ) ; } 
public boolean checkData ( int HDice , int HRoll , int DDice , int DRoll , int DDealt ) { if ( ( HRoll < HDice ) || ( HRoll > ( HDice * ( MAX_DIE_ROLL ) ) ) ) return false ; if ( ( DRoll < DDice ) || ( DRoll > ( DDice * ( MAX_DIE_ROLL ) ) ) ) return false ; return true ; } 
@ java.lang.Override public void run () { if ( ( countDownCountainer ) != null ) { if ( ( counter ) >= 0 ) { countDownCountainer . setVisibility ( View.VISIBLE ) ; countDownTextView . setText ( java.lang.String . format ( getResources () . getString ( R.string.count_down_text ) , counter ) ) ; countDownProgressBar . setProgress ( counter ) ; } else { countDownTextView . setText ( "" ) ; countDownCountainer . setVisibility ( View.GONE ) ; } } } 
public int unpin ( tachyon.TachyonURI path ) throws java.io.IOException { try { mTfs . unpin ( mTfs . open ( path ) ) ; java.lang.System.out . println ( ( ( "File '" + path ) + "' was successfully unpinned." ) ) ; return 0 ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; java.lang.System.out . println ( ( ( "File '" + path ) + "' could not be unpinned." ) ) ; return - 1 ; } } 
@ java.lang.Override protected org.eclipse.draw2d.geometry.Rectangle getFrameArea ( org.eclipse.draw2d.geometry.Rectangle origin ) { if ( ! ( model . isMinimizedView () ) ) { return new org.eclipse.draw2d.geometry.Rectangle ( ( ( origin.x ) + ( GRID_SIZE ) ) , origin.y , ( ( origin.width ) - ( 2 * ( GRID_SIZE ) ) ) , ( ( origin.height ) - ( GRID_SIZE ) ) ) ; } return super . getFrameArea ( origin ) ; } 
int convertSImeiToID ( java.lang.String text ) { if ( text == null ) text = java.util.Calendar . getInstance () . getTime () . toString () ; int sum = 0 ; char [] imei = text . toCharArray () ; for ( int i = 0 ; i < ( text . length () ) ; i ++ ) sum = sum + ( imei [ i ] ) ; return 16384 + sum ; } 
private void initHeaderViewToRefresh ( int deltaY ) { int topDistance = UpdateHeadViewMarginTop ( deltaY ) ; if ( ( topDistance < 0 ) && ( topDistance > ( - ( headViewHeight ) ) ) ) { mBaseHeaderAdapter . pullViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.PULL_TO_REFRESH ; } else if ( ( topDistance > 0 ) && ( ( mHeaderState ) != ( com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ) ) ) { mBaseHeaderAdapter . releaseViewToRefresh ( deltaY ) ; mHeaderState = com.sak.ultilviewlib.UltimateRefreshView.RELEASE_TO_REFRESH ; } } 
void merge ( hivemall.fm.FMPredictUDAF.PartialResult other ) { this . ret += other.ret ; if ( ( this . sumVjXj ) == null ) { this . sumVjXj = other.sumVjXj ; this . sumV2X2 = other.sumV2X2 ; } else { hivemall.fm.FMPredictUDAF.PartialResult . add ( other.sumVjXj , sumVjXj ) ; assert ( sumV2X2 ) != null ; hivemall.fm.FMPredictUDAF.PartialResult . add ( other.sumV2X2 , sumV2X2 ) ; } } 
@ java.lang.Override public void done ( com.parse.ParseException e ) { if ( e == null ) { mOriginal . remove ( getItems () . get ( position ) ) ; getItems () . remove ( position ) ; getBaseAdapter () . notifyItemRemoved ( position ) ; android.widget.Toast . makeText ( getContext () , "Sent request!" , Toast.LENGTH_LONG ) . show () ; } else { android.widget.Toast . makeText ( getContext () , e . getMessage () , Toast.LENGTH_LONG ) . show () ; } } 
private void fail ( final java.lang.Throwable t ) { synchronized ( this ) { if ( ! ( done ) ) { done = true ; if ( ( timeoutFuture ) != null ) { timeoutFuture . cancel ( true ) ; } setFailure ( t ) ; } } } 
private void freezeValues ( net.ssehub.easy.varModel.model.AbstractVariable var , net.ssehub.easy.varModel.confModel.IFreezeSelector selector ) { if ( ( var . isTopLevel () ) || ( ( var . getParent () ) instanceof net.ssehub.easy.varModel.model.AttributeAssignment ) ) { net.ssehub.easy.varModel.confModel.IDecisionVariable frozenVariable = getDecision ( var ) ; if ( null != frozenVariable ) { frozenVariable . freeze ( selector ) ; } } else { net.ssehub.easy.varModel.model.IModelElement parent = var . getParent () ; java.lang.System.out . println ( ( "Config freeze for nested variable not implemented: " + parent ) ) ; } } 
private void processMethod ( final java.lang.reflect.Method method ) { method . setAccessible ( true ) ; if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil . getValueHandlerAnnotation ( method ) ) != null ) { processMethodWithValueHandler ( method ) ; } else if ( ( com.matthewtamlin.spyglass.library.util.AnnotationUtil . getCallHandlerAnnotation ( method ) ) != null ) { processMethodWithCallHandler ( method ) ; } } 
public static void main ( java.lang.String [] args ) { RunningMedian x = new RunningMedian () ; for ( int i = 0 ; i < ( args.length ) ; i ++ ) { x . add ( java.lang.Integer . parseInt ( args [ i ] ) ) ; } java.lang.System.out . println ( x . getMedian () ) ; } 
@ java.lang.Override public java.util.List < uk.co.olimor.BMBTApi_boot.model.TestResult > getResultHistory ( final java.lang.String userId ) throws uk.co.olimor.BMBTApi_boot.exception.ApiException { log . entry ( userId ) ; final java.util.List < uk.co.olimor.BMBTApi_boot.model.TestResult > results = query ( java.lang.String . format ( uk.co.olimor.BMBTApi_boot.dao.impl.ResultsHistoryQueryImpl.QUERY , userId ) ) ; if ( ( results . size () ) == 0 ) throw new uk.co.olimor.BMBTApi_boot.exception.ApiException ( "No results found for user id" , org.springframework.http.HttpStatus.NOT_FOUND ) ; return log . traceExit ( results ) ; } 
@ java.lang.Override public void propertyChange ( java.beans.PropertyChangeEvent event ) { if ( ( document ) != null ) { if ( ( document . getLineManager () ) != null ) { document . getLineManager () . removeLineListener ( this ) ; } } document = ( ( kkckkc.syntaxpane.model.SourceDocument ) ( event . getNewValue () ) ) ; document . getLineManager () . addLineListener ( this ) ; document . addFoldListener ( new kkckkc.syntaxpane.model.MutableFoldManager.FoldListener () { public void foldUpdated () { repaint () ; } } ) ; } 
@ java.lang.Override public void getAllOperationIssuesByMedicoId ( java.util.List < com.artursworld.reactiontest.model.entity.OperationIssue > operationIssuesList ) { addItemsOnOperationIssueSpinner ( operationIssuesList , spinner ) ; com.artursworld.reactiontest.controller.util.UtilsRG . info ( ( ( ( "Operation issues loaded for user(" + ( getSelectedMedicalUser () ) ) + ")=" ) + ( operationIssuesList . toString () ) ) ) ; if ( spinner != null ) { com.artursworld.reactiontest.controller.util.UtilsRG . putString ( UtilsRG.OPERATION_ISSUE , spinner . getSelectedItem () . toString () , getActivity () ) ; } } 
private pl.sdacaemy.data.structures.impl.ForwardList.Node getItemNode ( int index ) throws java.lang.IndexOutOfBoundsException { if ( index == 0 ) { if ( ( head ) == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return head ; } int currentIndex = 0 ; pl.sdacaemy.data.structures.impl.ForwardList.Node currentNode = head ; while ( ( ( currentNode.next ) != null ) && ( currentIndex < index ) ) { ++ currentIndex ; currentNode = currentNode.next ; } if ( currentNode == null ) { throw new java.lang.IndexOutOfBoundsException ( ( "Sorry no such element: " + index ) ) ; } return currentNode ; } 
@ java.lang.Override public void doIfFailed () { if ( ( ( socket ) == null ) || ( ! ( connectedToSocket ) ) ) { if ( ( act ) != null ) { if ( ( ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) . splScreen ) != null ) ( ( ru.racoondeveloper.contactchat.MainActivity ) ( act ) ) . splScreen . setButtonActive () ; } else reconnect () ; } } 
public void run () { if ( mGoogleApiClient . isConnected () ) { if ( ( mRequestingUpdates ) == ( mSharedPreferences . getBoolean ( edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY , false ) ) ) {} else { mRequestingUpdates = mSharedPreferences . getBoolean ( edu.cornell.jjl.info4120final.MainActivity.REQUESTING_LOCATION_UPDATES_KEY , false ) ; if ( mRequestingUpdates ) { startLocationUpdates () ; mAccelLogger = new edu.cornell.jjl.info4120final.DataLogger ( "accel" ) ; mLocationLogger = new edu.cornell.jjl.info4120final.DataLogger ( "location" ) ; mActivityLogger = new edu.cornell.jjl.info4120final.DataLogger ( "activity_recognition" ) ; } else {} } } handler . postDelayed ( this , 1000 ) ; } 
private void addFixedAttributes ( com.orhanobut.tracklytics.FixedAttributes fixedAttributes , java.util.Map < java.lang.String , java.lang.Object > values ) { if ( fixedAttributes == null ) return; com.orhanobut.tracklytics.FixedAttribute [] attributes = fixedAttributes . value () ; for ( com.orhanobut.tracklytics.FixedAttribute attribute : attributes ) { values . put ( attribute . key () , attribute . value () ) ; if ( attribute . isSuper () ) { superAttributes . put ( attribute . key () , attribute . value () ) ; } } } 
public void clear () { LinkedList < E > . LinkedListNode < E > current ; LinkedList < E > . LinkedListNode < E > next ; next = head ; while ( next != null ) { current = next ; next = current.next ; current . destroy () ; } head = tail = null ; size = 0 ; } 
private void nextTurn () { if ( ( turn ) == ( players_turn ) ) { java.lang.System.out . println ( "NonPlayer ist am Zug" ) ; turn = nonplayers_turn ; nonplayersTurn () ; actionKI () ; } else if ( ( turn ) == ( nonplayers_turn ) ) { java.lang.System.out . println ( "Player ist am Zug" ) ; turn = players_turn ; playersTurn () ; } } 
private java.lang.String getValue ( int i , int j ) { if ( i == j ) { return "x" ; } else { return getValue ( countMap . get ( new context.healthinformatics.graphs.ConnectionSet ( codes . get ( i ) , codes . get ( j ) ) ) ) ; } } 
@ java.lang.Override protected int getZWithOffset ( int x , int z ) { net.minecraft.util.EnumFacing enumfacing = this . getCoordBaseMode () ; if ( enumfacing == null ) { return z ; } else { switch ( enumfacing ) { case SOUTH : return ( this . boundingBox . minZ ) + z ; case WEST : return ( this . boundingBox . minZ ) + x ; case NORTH : return ( this . boundingBox . maxZ ) - z ; case EAST : return ( this . boundingBox . maxZ ) - x ; default: return z ; } } } 
@ java.lang.Override public boolean removeEdge ( csula.cs4660.graphs.Edge x ) { if ( ( ! ( nodes . contains ( x . getFrom () ) ) ) || ( ! ( nodes . contains ( x . getTo () ) ) ) ) { java.lang.System.out . println ( "Error: fromNode or toNode not exists" ) ; } else { if ( edges . remove ( x ) ) { return true ; } } return false ; } 
private static void aggregate ( java.util.Map < cc.blynk.server.storage.reporting.average.AggregationKey , cc.blynk.server.storage.reporting.average.AggregationValue > map , cc.blynk.server.storage.reporting.average.AggregationKey key , double value ) { cc.blynk.server.storage.reporting.average.AggregationValue aggregationValue = map . get ( key ) ; if ( aggregationValue == null ) { final cc.blynk.server.storage.reporting.average.AggregationValue aggregationValueTmp = new cc.blynk.server.storage.reporting.average.AggregationValue () ; aggregationValue = map . putIfAbsent ( key , aggregationValueTmp ) ; if ( aggregationValue == null ) { aggregationValue = aggregationValueTmp ; } } aggregationValue . update ( value ) ; } 
public java.lang.String convertCalendarToString ( java.util.GregorianCalendar toBeConverted ) { java.lang.String result = new java.lang.String () ; java.text.SimpleDateFormat df = new java.text.SimpleDateFormat ( "MM dd yyyy HHmm" ) ; result = df . format ( toBeConverted . getTime () ) ; java.lang.System.out . println ( ( ( toBeConverted + " was converted to " ) + result ) ) ; return result ; } 
@ java.lang.Override public void onApiConnected () { final com.o3dr.services.android.lib.drone.property.Parameters droneParams = getDrone () . getAttribute ( AttributeType.PARAMETERS ) ; if ( ( adapter . isEmpty () ) && ( droneParams != null ) ) { java.util.List < com.o3dr.services.android.lib.drone.property.Parameter > parametersList = droneParams . getParameters () ; if ( ! ( parametersList . isEmpty () ) ) loadAdapter ( parametersList , false ) ; } toggleParameterFilter ( isParameterFilterVisible () ) ; getBroadcastManager () . registerReceiver ( broadcastReceiver , org.droidplanner.android.fragments.ParamsFragment.intentFilter ) ; } 
protected static boolean isAllASCII ( java.lang.String input ) { boolean isASCII = true ; for ( int i = 0 ; i < ( input . length () ) ; i ++ ) { int c = input . charAt ( i ) ; if ( c > 127 ) { isASCII = false ; break; } } return isASCII ; } 
public OL getItem ( int position ) { if ( ( mList ) != null ) { if ( ( position >= 0 ) && ( position < ( mList . size () ) ) ) { return mList . get ( position ) ; } com.openarena.util.L . e ( com.openarena.model.AbstractRecyclerAdapter . class , ( ( "no item[" + position ) + "]" ) ) ; } com.openarena.util.L . e ( com.openarena.model.AbstractRecyclerAdapter . class , "error to get item" ) ; return null ; } 
private org.springframework.data.geo.Point fillCoordinates ( com.geolocation.search.model.Place place ) { org.springframework.data.geo.Point coordinates ; try { java.lang.Double [] latLong = geoApiHelper . getLatLong ( place . getAddress () . getAddress () ) ; coordinates = new org.springframework.data.geo.Point ( latLong [ 1 ] , latLong [ 0 ] ) ; } catch ( java.lang.Exception e ) { throw new java.lang.IllegalArgumentException ( ( "Could not find the coordinates to the address provided: " + ( place . getAddress () . getAddress () ) ) ) ; } return coordinates ; } 
public void onRequestPermissionResult ( int requestCode , java.lang.String [] permissions , int [] grantResults ) throws org.json.JSONException { for ( int r : grantResults ) { if ( r == ( android.content.pm.PackageManager.PERMISSION_DENIED ) ) { this . callback . sendPluginResult ( new org.apache.cordova.PluginResult ( PluginResult.Status.ERROR , de.martinreinhardt.cordova.plugins.hotspot.HotSpotPlugin.PERMISSION_DENIED_ERROR ) ) ; return; } } executeInternal ( this . action , this . rawArgs , this . callback ) ; } 
@ java.lang.Override public void processCommand ( net.minecraft.command.ICommandSender p_71515_1_ , java.lang.String [] p_71515_2_ ) { if ( ( p_71515_2_.length ) >= 1 ) { if ( p_71515_2_ [ 0 ] . equalsIgnoreCase ( "help" ) ) { mainserverjt.piratemod.command.commands.HelpCommand . processCommand ( p_71515_1_ , removeIndexUntil ( 1 , p_71515_2_ ) ) ; } } else { mainserverjt.piratemod.command.ChatColor . sendPrivateMessage ( p_71515_1_ , ( ( ( ChatColor.prefix ) + ( ChatColor.rood ) ) + "Use /pm help" ) ) ; } } 
private void extractAgentGroupAvailability ( com.genesys.workspace.models.targets.Target target ) { com.google.gson.internal.LinkedTreeMap availabilityData = ( ( com.google.gson.internal.LinkedTreeMap ) ( target . getAvailability () ) ) ; if ( availabilityData == null ) { return; } java.lang.Integer readyAgents = ( ( java.lang.Double ) ( availabilityData . get ( "readyAgents" ) ) ) . intValue () ; this . availability = new com.genesys.workspace.models.targets.AgentGroupAvailability ( readyAgents ) ; } 
private java.lang.String buildSongIdFromGenreSelect ( java.lang.String genreId ) { return ( ( ( ( ( ( ( ( "SELECT " + ( MediaLibrary.GenreSongColumns.SONG_ID ) ) + " FROM " ) + ( MediaLibrary.TABLE_GENRES_SONGS ) ) + " WHERE " ) + ( MediaLibrary.GenreSongColumns._GENRE_ID ) ) + "=" ) + genreId ) + " GROUP BY " ) + ( MediaLibrary.GenreSongColumns.SONG_ID ) ; } 
public synchronized boolean canMove ( level.action.MoveAction action ) { level.Direction dir = action . getDirection () ; level.Location agLoc = action . getAgentLocation () ; if ( agLoc == null ) { return false ; } level.Location nAgLoc = level.Location . newLocation ( dir , agLoc ) ; if ( nAgLoc == null ) { return false ; } if ( ! ( isFree ( nAgLoc ) ) ) { return false ; } return true ; } 
private void AddFruit () { boolean bFlag = true ; while ( bFlag ) { int x = ( ( int ) ( ( java.lang.Math . random () ) * ( com.snake.Game.sizeByX ) ) ) ; int y = ( ( int ) ( ( java.lang.Math . random () ) * ( com.snake.Game.sizeByY ) ) ) ; if ( ( field [ x ] [ y ] ) == 0 ) { bFlag = false ; field [ x ] [ y ] = 2 ; } } } 
protected static boolean evaluateFuelConsumption () { if ( ( ( group8.com.application.Application.AlertSystem.shouldAlert ) && ( group8.com.application.Application.AlertSystem.fuelAlert ) ) && ( ( group8.com.application.Application.Controller . getCurrentFuelConsumption () ) >= ( group8.com.application.Model.ConstantData.extremeFuelConsumption ) ) ) { group8.com.application.Application.AlertSystem.shouldAlert = false ; group8.com.application.Application.AlertSystem.fuelAlert = false ; group8.com.application.Application.AlertSystem.coolDown . start () ; return true ; } else if ( ( group8.com.application.Application.Controller . getCurrentFuelConsumption () ) < ( group8.com.application.Model.ConstantData.extremeFuelConsumption ) ) { group8.com.application.Application.AlertSystem.fuelAlert = true ; } return false ; } 
public boolean isState ( java.lang.String input ) { boolean matchFound = false ; int i = 0 ; while ( ( matchFound == false ) && ( i < ( states.length ) ) ) { if ( states [ i ] . equalsIgnoreCase ( input ) ) { matchFound = true ; } i ++ ; } return matchFound ; } 
protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent intent ) { if ( requestCode == ( com.jeffreychan.yutnori.TitleScreenActivity.RC_SIGN_IN ) ) { mSignInClicked = false ; mResolvingConnectionFailure = false ; if ( resultCode == ( RESULT_OK ) ) { client . connect () ; } else { android.widget.Toast savedToast = android.widget.Toast . makeText ( context , "Unable to sign in to Google" , Toast.LENGTH_SHORT ) ; savedToast . show () ; } } } 
public logic.Piece turnCPU () { depth = DEPTH ; logic.Heur bestMove = miniMax () ; bestMoveMessages . addFirst ( ( ( ( ( ( ( ( ( "Melhor jogada para o jogador " + ( util.Utility . itop ( activeplayer ) ) ) + " no turno " ) + ( turnId ) ) + ": (" ) + ( ( bestMove.row ) + 1 ) ) + "," ) + ( util.Utility . itoc ( bestMove.col ) ) ) + "). " ) ) ; return new logic.Piece ( bestMove , activeplayer ) ; } 
private static synchronized void startVibrate () { if ( ( org.catrobat.catroid.utils.VibratorUtil.vibrator ) != null ) { android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , "startVibrate()" ) ; org.catrobat.catroid.utils.VibratorUtil.startTime = android.os.SystemClock . uptimeMillis () ; org.catrobat.catroid.utils.VibratorUtil.vibrator . vibrate ( org.catrobat.catroid.utils.VibratorUtil.MAX_TIME_TO_VIBRATE ) ; android.util.Log . d ( org.catrobat.catroid.utils.VibratorUtil.TAG , ( "start time was: " + ( java.lang.Long . toString ( org.catrobat.catroid.utils.VibratorUtil.startTime ) ) ) ) ; } } 
@ org.junit.Test public void cityAdm ( ) throws java.io.IOException , java.lang.InterruptedException { if ( ( countryTest . contains ( "FR" ) ) || ( countryTest . contains ( "ALL" ) ) ) { java.lang.String rawAddress = "saint omer normandie" ; com.gisgraphy.addressparser.AddressResultsDto addressResultsDto = doGeocodingOnCountry ( rawAddress , "FR" ) ; net.sf.jstester.util.Assert . assertNotNull ( addressResultsDto ) ; isCorrectByAtLeastOneIds ( new long [] { 4039279022L , 94401L } , addressResultsDto . getResult () , rawAddress ) ; } } 
@ org.junit.Test public void testBasicApply () { ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > concat = new ru.spbau.mit.Function2 < java.lang.Integer , java.lang.Double , java.lang.String > () { @ java.lang.Override public java.lang.String apply ( java.lang.Integer arg1 , java.lang.Double arg2 ) { return ( arg1 . toString () ) + ( arg2 . toString () ) ; } } ; org.junit.Assert . assertEquals ( "1233.14" , concat . apply ( 123 , 3.14 ) ) ; } 
public void cancel () { status = com.github.mob41.osumer.updater.Downloader.CANCELLED ; reportState () ; java.io.File file = new java.io.File ( ( ( ( ( folder ) + "\\" ) + ( fileName ) ) + ".osz" ) ) ; file . delete () ; downloaded = 0 ; } 
private int getProgressForAngle ( double angle ) { int touchProgress = ( ( int ) ( java.lang.Math . round ( ( ( valuePerDegree () ) * angle ) ) ) ) ; if ( mDragging ) { touchProgress = ( touchProgress < 0 ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; touchProgress = ( touchProgress > ( mMax ) ) ? com.triggertrap.seekarc.SeekArc.INVALID_PROGRESS_VALUE : touchProgress ; return touchProgress ; } else return - 1 ; } 
private void updatePacketInWindow ( int sequence , WebApplication.HTTPConnection.AcknowledgementCode code ) { for ( int i = Window_Position ; ( i < ( ( Window_Size ) + ( Window_Position ) ) ) && ( i < ( ( Packet_Buffer . size () ) - 1 ) ) ; ++ i ) { if ( sequence == ( ( Packet_Buffer . get ( i ) . getSequenceNumber () ) % ( Sequence_Modulus ) ) ) { Packet_Buffer . get ( i ) . updateAcknowledgementCode ( code ) ; break; } } } 
private int menorDentreAs ( double [] razoes ) { double menor = razoes [ 0 ] ; int indice = 0 ; for ( int i = 1 ; i < ( razoes.length ) ; i ++ ) { if ( ( razoes [ i ] ) > 0 ) { if ( ( java.lang.Double . compare ( razoes [ i ] , menor ) ) < 0 ) { menor = razoes [ i ] ; indice = i ; } } } return indice ; } 
public void secondOrderPositionUpdate ( double dt , Vector3D force ) { position = new Vector3D ( Vector3D . vectorAddition ( position , velocity . scalarMultiply ( dt ) ) ) ; position = new Vector3D ( Vector3D . vectorAddition ( position , force . scalarMultiply ( ( ( java.lang.Math . pow ( dt , 2 ) ) / ( 2 * ( mass ) ) ) ) ) ) ; } 
public static java.io.File findExe ( java.io.File root , java.lang.String exe , boolean fail ) { for ( java.io.File file : org.apache.commons.io.FileUtils . listFiles ( root , null , true ) ) if ( ( file . getName () . equalsIgnoreCase ( exe ) ) && ( ( file . length () ) >= 1 ) ) return file ; if ( ! fail ) return null ; throw new java.lang.UnsupportedOperationException ( ( ( "Couldn't find '" + exe ) + "'!" ) ) ; } 
public void nextPage () { if ( ( entryPage ) >= ( entryWrapperMap . asMap () . size () ) ) entryPage = ( entryWrapperMap . asMap () . size () ) - 1 ; if ( ( ( entryPage ) != ( ( entryWrapperMap . asMap () . size () ) - 1 ) ) && ( ! ( entryWrapperMap . asMap () . isEmpty () ) ) ) ( entryPage ) ++ ; } 
public boolean isSafe ( int row , int col ) { if ( ( ( ( row <= ( ( rows ) - 3 ) ) && ( col <= ( ( cols ) - 3 ) ) ) && ( row >= 0 ) ) && ( col >= 0 ) ) { return true ; } return false ; } 
private java.lang.String loadShader ( java.lang.String name ) { cub3d.file.main.FileAPI api = new cub3d.file.main.FileAPI ( name ) ; java.lang.String s = "" ; try { cub3d.file.reader.BasicReader br = new cub3d.file.reader.BasicReader ( api . getReader () ) ; java.lang.String line ; while ( ( line = br . readLine () ) != null ) s += line + "\n" ; } catch ( java.lang.Exception e ) { e . printStackTrace () ; } return s ; } 
private int getManhattan ( int row , int col , int point ) { if ( point == 0 ) return 0 ; int rowP = point / ( dim ) ; int colP = ( point - ( rowP * ( dim ) ) ) - 1 ; return ( java.lang.Math . abs ( ( row - rowP ) ) ) + ( java.lang.Math . abs ( ( col - colP ) ) ) ; } 
@ org.junit.Test ( expected = org.corpus_tools.salt.exceptions.SaltResourceException . class ) public void testAbsentSaltResource ( ) throws java.io.IOException { java.lang.String inputFilePath = ( ( ( ( ( ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.INPUT_FOLDER ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "pcc2_absent_resource" ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "pcc2" ) + ( org.corpus_tools.salt.util.tests.VisJsVisualizerTest.FSEP ) ) + "11299.salt" ; org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI . createFileURI ( inputFilePath ) ; new org.corpus_tools.salt.util.VisJsVisualizer ( uri ) ; } 
public static double [] rexp ( int count , double lambda ) { double [] result = new double [ count ] ; double current = 0 ; for ( int i = 0 ; i < count ; i ++ ) { current = ( ( - 1 ) / lambda ) * ( java.lang.Math . log ( ( 1 - ( java.lang.Math . random () ) ) ) ) ; result [ i ] = current ; } return result ; } 
private void displayNumberOfProcessedLearningContents ( java.util.Map < de.saschafeldmann.adesso.master.thesis.elearningimport.model.LearningContent , java.util.List < de.saschafeldmann.adesso.master.thesis.detection.model.api.Concept > > learningContents ) { setFinishedLabel () ; finishedLabel . setCaption ( ( ( ( ( finishedLabel . getCaption () ) + " (" ) + ( learningContents . size () ) ) + ")" ) ) ; } 
private boolean isValidDigitFields () { boolean isValid = true ; if ( com.zhour.utils.Utility . isValueNullOrEmpty ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () ) ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number , "Please write code" ) ; isValid = false ; } else if ( ( com.zhour.fragments.AlienCarFragment.et_vehicle_number . getText () . toString () . length () ) < 4 ) { com.zhour.utils.Utility . setSnackBar ( mParent , com.zhour.fragments.AlienCarFragment.et_vehicle_number , "Code must be 4 digit" ) ; isValid = false ; } return isValid ; } 
@ java.lang.Override protected void done () { try { get () ; } catch ( java.lang.InterruptedException ignore ) {} catch ( java.util.concurrent.ExecutionException e ) { e . printStackTrace () ; } _modelSelection . put ( selected , 0 ) ; if ( ( _titleList . getSelectedValue () ) == selected ) { _recordingTable . getSelectionModel () . setSelectionInterval ( 0 , _modelSelection . get ( selected ) ) ; _recordingTable . setColumnSelectionInterval ( 0 , 0 ) ; } } 
@ java.lang.Override public co.cask.cdap.data2.queue.DequeueResult < byte [] > dequeue ( int maxBatchSize ) throws java.io.IOException { co.cask.cdap.data2.queue.DequeueResult < byte [] > result = performDequeue ( maxBatchSize ) ; byte [] floorKey = consumingEntries . floorKey ( scanStartRow ) ; updateStartRow ( ( floorKey == null ? scanStartRow : floorKey ) ) ; return result ; } 
public void computeSegments () { int maxX = ( graph . dimX () ) - 1 ; int maxY = ( graph . dimY () ) - 1 ; for ( int currentY = maxY ; currentY >= 0 ; currentY -- ) { currentWindow = sbr.Range . TwoDimensionalRange ( 0 , maxX , currentY , maxY ) ; computeSegmentsInRange () ; for ( sbr.Segment seg : segments ) assert ! ( seg . getLinks () . isEmpty () ) ; } } 
@ java.lang.Override public void onBackPressed () { if ( ( ( databaseLayout ) != null ) && ( databaseLayout . onBackPressed () ) ) { return; } if ( ( ( options ) != null ) && ( options . isClosable () ) ) { android.content.Intent intent = new android.content.Intent ( Lock.CANCELED_ACTION ) ; android.support.v4.content.LocalBroadcastManager . getInstance ( this ) . sendBroadcast ( intent ) ; return; } super . onBackPressed () ; } 
@ java.lang.Override public boolean onQueryTextSubmit ( java.lang.String query ) { android.util.Log . d ( "NotesFragment" , ( "Submitted query" + query ) ) ; java.lang.String searchQuery = ( ( ( ( ( "SELECT *  FROM " + ( HandbookContract.NotificationEntry.TABLE_NAME ) ) + " where " ) + ( HandbookContract.NotificationEntry.COLUMN_DETAIL ) ) + " like \'%" ) + query ) + "%\'" ; cursor = db . rawQuery ( searchQuery , null ) ; mRecyclerView . setAdapter ( mAdapter ) ; searchView . clearFocus () ; return true ; } 
public void onClick ( android.view.View view ) { if ( ( AnswerABoolean ) == true ) { AnswerAButton . setBackgroundColor ( getResources () . getColor ( R.color.goodAnswer ) ) ; incrementResultForGoodAnswer () ; } else { AnswerAButton . setBackgroundColor ( getResources () . getColor ( R.color.badAnswer ) ) ; findTHeRightAnswer () ; } } 
private java.lang.String correctDate ( java.lang.String uncDate ) { java.lang.String [] splitDate = uncDate . split ( "/" ) ; java.lang.String day = splitDate [ 0 ] ; java.lang.String month = splitDate [ 1 ] ; java.lang.String year = splitDate [ 2 ] ; return ( ( ( year + "-" ) + month ) + "-" ) + day ; } 
private boolean contains ( KdTree.Node node , edu.princeton.cs.algs4.Point2D p ) { if ( node == null ) return false ; int cmp = KdTree . compare ( p , node ) ; if ( cmp < 0 ) return contains ( node.lb , p ) ; else if ( cmp > 0 ) return contains ( node.rt , p ) ; else return node.p . equals ( p ) ; } 
void reload () { if ( mActivity . TWO_PLAYER_GAME () ) { if ( ( ( mPlayerButtonList ) == null ) || ( ( mPlayerButtonList . size () ) == 0 ) ) { createButtonsPlayerList () ; } else { for ( int i = 0 ; i < ( mActivity.game . size () ) ; i ++ ) { mPlayerButtonList . get ( i ) . reload ( mActivity.game . getPlayer ( i ) ) ; } } } } 
public boolean isEndNode ( RaceAI.AI.Node node ) { if ( ( ( this . endNode . x ) == ( node.x ) ) && ( ( this . endNode . y ) == ( node.y ) ) ) return true ; else return false ; } 
public void printAllCustomerInformation () { java.lang.System.out . println ( ( ( ( ( ( ( ( ( ( ( ( ( "\n" + ( this . CUSTOMER_ID ) ) + " " ) + ( this . PASSWORD ) ) + " " ) + ( this . NAME ) ) + " " ) + ( this . getAge () ) ) + " " ) + ( this . getCreditScore () ) ) + " " ) + ( this . getChexSystemsScore () ) ) + " " ) ) ; this . printAccountInformation () ; } 
@ java.lang.SuppressWarnings ( value = "unchecked" ) public com.datastax.driver.core.TypeCodec getSerializer ( java.lang.Class < ? extends com.datastax.driver.core.TypeCodec > serializerClass , java.lang.Class valueClass ) { if ( ( valueClass != null ) && ( valueClass . isEnum () ) ) { return new com.appmetr.hercules.serializers.EnumSerializer ( valueClass ) ; } if ( serializerClass != null ) { return tryToCreateObject ( serializerClass , valueClass ) ; } else { return getSerializer ( valueClass ) ; } } 
@ java.lang.Override public void mouseReleased ( java.awt.event.MouseEvent e ) { r . setDrawBoundingBox ( false ) ; if ( ( r . getConfig () . getShape () ) == ( cs132.instructions.Shape.PENCIL ) ) { prevMouseLocation = mouseLocation ; r . setDrawShape ( false ) ; } else { r . setDrawShape ( true ) ; } dragStart = true ; r . repaint () ; } 
@ java.lang.Override protected void onStop () { mGoogleApiClient . disconnect () ; if ( ( ( lineShape ) != null ) && ( ( lineShape . size () ) > 1 ) ) { lineShape . add ( mPolyline ) ; java.lang.String geoJsonString = edu.uw.longt8.geopaint.GeoJsonConverter . convertToGeoJson ( lineShape ) ; new edu.uw.longt8.geopaint.MapsActivity.SaveState () . execute ( geoJsonString ) ; } super . onStop () ; } 
@ java.lang.Override public void actOnBuildingChange ( buildings.Building building , boolean remove , boolean clickedOn ) { if ( ( ! remove ) && ( ! clickedOn ) ) { addToView ( building ) ; removePlaceTexture () ; } else if ( ! clickedOn ) removeFromView ( building . getSpriteAdapter () ) ; else if ( remove && clickedOn ) { removePlaceTexture () ; } } 
public org.apollo.game.model.Position add ( int deltaX , int deltaY , int deltaZ ) { return new org.apollo.game.model.Position ( ( ( getX () ) + deltaX ) , ( ( getY () ) + deltaY ) , ( ( getHeight () ) + deltaZ ) ) ; } 
private void setupEnvironment () { org.arquillian.cube.kubernetes.api.Logger log = session . getLogger () ; log . info ( ( "Executing environment setup script from:" + ( configuration . getEnvironmentSetupScriptUrl () ) ) ) ; try { org.arquillian.cube.kubernetes.impl.utils.ProcessUtil . runCommand ( log , configuration . getEnvironmentSetupScriptUrl () ) ; } catch ( java.io.IOException ex ) { throw new java.lang.RuntimeException ( ex ) ; } } 
@ java.lang.Override public boolean onTouchEvent ( android.view.MotionEvent ev ) { if ( isExpanded () ) { return false ; } android.util.Log . e ( com.example.tt.fragments.widget.CurveLayout.TAG , ( "BottomSheet onTouchEvent: " + ( currentX ) ) ) ; currentX = ev . getRawX () ; sheetDragHelper . processTouchEvent ( ev ) ; return ( ( sheetDragHelper . getCapturedView () ) != null ) || ( super . onTouchEvent ( ev ) ) ; } 
@ java.lang.Override public boolean equals ( final java.lang.Object object ) { if ( ( this ) == object ) { return true ; } if ( ( object != null ) && ( ( getClass () ) == ( object . getClass () ) ) ) { @ java.lang.SuppressWarnings ( value = "rawtypes" ) final com.javacreed.api.domain.objects.DomainObject other = ( ( com.javacreed.api.domain.objects.DomainObject ) ( object ) ) ; return value . equals ( other.value ) ; } return false ; } 
private int getAnimatedAmount () { if ( ( this . tickRemaining ) <= ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK ) ) return this . tickRemaining ; else if ( ( this . tickRemaining ) >= ( ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.OPEN_DURATION ) - ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK ) ) ) return ( com.mcgame.scdiary.gui.ScreenshotOverlayHandler.OPEN_DURATION ) - ( this . tickRemaining ) ; else return com.mcgame.scdiary.gui.ScreenshotOverlayHandler.ANIMATION_TICK ; } 
public void xor ( int mask ) { int res = ( value ) ^ ( mask & 8388607 ) ; if ( ( ( ( mask & 8388608 ) != 0 ) && ( ( ( value ) & 8388608 ) == 0 ) ) || ( ( ( mask & 8388608 ) == 0 ) && ( ( ( value ) & 8388608 ) != 0 ) ) ) { res = - res ; } value = res ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { if ( ( requestCode == ( MyGlobalVars.REQUEST_IMAGE_CAPTURE ) ) && ( resultCode == ( RESULT_OK ) ) ) { android.os.Bundle extras = data . getExtras () ; android.graphics.Bitmap imageBitmap = ( ( android.graphics.Bitmap ) ( extras . get ( "data" ) ) ) ; addImageToView ( imageBitmap ) ; } } 
public int colContains ( int x , int num ) { int count = 0 ; for ( int o = 0 ; o < 9 ; o ++ ) { if ( ( this . grid [ o ] [ x ] . value ) == num ) count ++ ; } return count ; } 
@ java.lang.Override public void keyPressed ( java.awt.event.KeyEvent e ) { if ( ( e . getKeyCode () ) == ( java.awt.event.KeyEvent.VK_ESCAPE ) ) { if ( ( promptMsg ) != null ) { promptMsg = null ; repaint () ; return; } hasFinished = canceled = true ; org.sikuli.basics.Debug . log ( 3 , "CapturePrompt: aborted using key ESC" ) ; setVisible ( false ) ; } } 
public void unlockScreen () { android.util.Log . v ( "LOCK_TEST" , "unlockScreen()" ) ; android.util.Log . v ( "LOCK_TEST" , ( "unlockScreen() " + ( this . masterActivity . getLocalClassName () ) ) ) ; this . mZipperLock . DestroyBitmaps () ; this . masterActivity . finish () ; } 
public static < T extends net.minecraft.item.Item > T getItemAs ( net.minecraft.item.ItemStack itemStack , java.lang.Class < T > itemClass ) { return ( ( itemStack != null ) && ( ( itemStack . getItem () ) != null ) ) && ( itemClass . isInstance ( itemStack . getItem () ) ) ? itemClass . cast ( itemStack . getItem () ) : null ; } 
public boolean isUpToDate ( fr.mvanbesien.yws.core.WeatherData weatherData ) { if ( weatherData == null ) { return false ; } if ( ( ( weatherData . getPubDate () . getTime () ) + ( weatherData . getTtl () ) ) > ( java.lang.System . currentTimeMillis () ) ) { if ( ( ( weatherData . getLastBuildDate () . getTime () ) + ( ( 15 * 60 ) * 1000 ) ) > ( java.lang.System . currentTimeMillis () ) ) { return true ; } } return false ; } 
private double calculateHeight ( double alpha , double betta , double a ) { double h = roundNumber ( ( a * ( java.lang.Math . tan ( java.lang.Math . toRadians ( alpha ) ) ) ) , 2 ) ; double h1 = roundNumber ( ( a * ( java.lang.Math . tan ( java.lang.Math . toRadians ( betta ) ) ) ) , 2 ) ; return h + h1 ; } 
private static void noEL ( java.lang.String nm , java.lang.String val , org.zkoss.idom.Item item ) throws org.zkoss.zk.ui.UiException { if ( ( val != null ) && ( val . contains ( "${" ) ) ) throw new org.zkoss.zk.ui.UiException ( org.zkoss.zk.ui.metainfo.Parser . message ( ( nm + " does not support EL expressions" ) , item ) ) ; } 
public void selectCategory ( com.sammyer.yahtzee.RollCategory category , com.sammyer.yahtzee.DiceRoll dice ) { totalScore += getPointsScored ( category , dice ) ; if ( ( category == ( RollTypes.yahtzee ) ) && ( category . matches ( dice ) ) ) hasYahtzee = true ; if ( isNumberRoll ( category ) ) numberRollScore += category . getPointsScored ( dice ) ; categoriesLeft . remove ( category ) ; curStrategy = new com.sammyer.yahtzee.RollStrategy ( database , categoriesLeft ) ; } 
private java.lang.Boolean validatePartB ( java.lang.Boolean error , java.lang.Double partB , java.lang.Integer totalPartCount , java.lang.Integer partBMax , org.ums.services.academic.CourseRegType regType ) { if ( ( totalPartCount == 2 ) && ( partB > partBMax ) ) { error = java.lang.Boolean.TRUE ; } if ( ( totalPartCount == 1 ) && ( ( partB != null ) && ( partB > 0 ) ) ) { error = java.lang.Boolean.TRUE ; } return error ; } 
private void gotLSAUpdateMsg ( socs.network.message.Packet packet ) { java.lang.System.out . println ( ( "received LSUPDATE from " + ( packet.simulatedSrcIP ) ) ) ; socs.network.node.LinkStateDatabase db = this . linkStateDatabase ; for ( socs.network.message.LSA lsa : packet.lsaArray ) { try { boolean newLSA = db . updateLSA ( lsa ) ; if ( ! newLSA ) { continue; } else { socs.network.node.Link linkOverWhichWeReceivedLSA = mapIpLink . get ( packet.simulatedSrcIP ) ; forwardToNeighbors ( linkOverWhichWeReceivedLSA , lsa ) ; } } catch ( java.lang.Exception e ) { java.lang.System.err . println ( "could not update LinkStateDatabase" ) ; } } } 
private static int upSituation () { if ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty . equals ( Preference.ADVANCE ) ) || ( ( com.hedspi.hoangviet.eslrecom.helpers.TestHelper.upperAchivedDifficulty ) != null ) ) { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentUserProficiency = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty ; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_END ; } else { com.hedspi.hoangviet.eslrecom.helpers.TestHelper.lowerAchivedDifficulty = com.hedspi.hoangviet.eslrecom.helpers.TestHelper.currentTestDifficulty ; com.hedspi.hoangviet.eslrecom.helpers.TestHelper . upgradeLevel () ; com.hedspi.hoangviet.eslrecom.helpers.TestHelper . resetProperties () ; return com.hedspi.hoangviet.eslrecom.helpers.TestHelper.STATUS_CONTINUE ; } } 
@ java.lang.Override public boolean exists () { boolean exists = super . exists () ; if ( ! exists ) { org.eclipse.emf.ecore.EObject input = getInput ( false ) ; if ( input != null ) { org.eclipse.emf.ecore.resource.Resource resource = input . eResource () ; if ( ( resource != null ) && ( ( resource . getResourceSet () ) != null ) ) { exists = resource . getResourceSet () . getURIConverter () . exists ( resource . getURI () , null ) ; } } } return exists ; } 
public void printTree ( DataStructure.RBTNode < T > node ) { if ( node != null ) { printTree ( node.left ) ; java.lang.System.out . print ( ( ( ( ( ( ( ( node.color ) == ( RBTNode.RED ) ? "Color: Red " : "Color: Black " ) + "Key: " ) + ( node.key ) ) + " Parent: " ) + ( node.parent.key ) ) + "\n" ) ) ; printTree ( node.right ) ; } } 
@ java.lang.Override public void run () { while ( true ) { if ( ( ( activePlaneList . size () ) > 0 ) && ( ( freeLaneList = domain.dao.HibernateGeneric . getFreeLanes () ) != null ) ) { simulator.PlaneThread plane = activePlaneList . get ( 0 ) ; plane . setLane ( freeLaneList . get ( 0 ) ) ; activePlaneList . remove ( plane ) ; plane . givePermission () ; } } } 
public void confirmSeat ( int confirmationTime , int departureTime ) throws asgn2Passengers.PassengerException { if ( ( ( ( ( this . isConfirmed () ) || ( this . isRefused () ) ) || ( this . isFlown () ) ) || ( confirmationTime < 0 ) ) || ( departureTime < confirmationTime ) ) { throw new asgn2Passengers.PassengerException ( "Can't confirm seat for passenger." ) ; } else { this . newState = false ; this . inQueue = false ; this . confirmed = true ; this . confirmationTime = confirmationTime ; this . departureTime = departureTime ; } } 
@ java.lang.Override public eu.einfracentral.domain.aai.User activate ( java.lang.String id ) { eu.einfracentral.domain.aai.User ret = reveal ( get ( id ) ) ; if ( ( ret . getJoinDate () ) == null ) { ret . setJoinDate ( new java.util.Date () . toString () ) ; update ( ret ) ; } return ret ; } 
@ java.lang.Override protected void onActivityResult ( int requestCode , int resultCode , android.content.Intent data ) { super . onActivityResult ( requestCode , resultCode , data ) ; if ( requestCode != ( EditFragment.REQUEST_TAKE_PHOTO ) ) return; com.example.jbt.omdb.EditFragment editFrag = mFragmentHelper . getEditFragmentIfExists () ; if ( editFrag != null ) editFrag . onCameraActivityResult ( resultCode ) ; } 
